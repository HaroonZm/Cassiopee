================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète pour le problème "Discounts of Buckwheat"

# L'idée est de déterminer la combinaison optimale d'achats entre les trois boutiques A, B et C
# pour obtenir la quantité exacte de farine demandée au moindre coût, en prenant en compte
# les remises par lots.

# Chaque boutique vend une farine avec :
# - une quantité fixe par sac
# - un prix unitaire par sac
# - une réduction aplicable par lots de sacs achetés

# Méthode proposée :
# Puisqu'on doit trouver la combinaison minimale de sacs dont la somme des quantités fait exactement
# a, avec des remises appliquées sur certains multiples d’unités,
# on peut faire un parcours sur toutes les combinaisons possibles de sacs (naïvement),
# mais la quantité maximale est 5000, on peut limiter la recherche avec une programmation dynamique
# sur la quantité de farine.

# Étapes :
# 1. Définir pour chaque boutique une fonction qui calcule le coût total pour un nombre donné de sacs.
# 2. Utiliser la programmation dynamique pour calculer le coût minimum pour chaque quantité de farine
#    de 0 à a.
# 3. Pour chaque quantité intermédiaire, on essaie d'ajouter un sac d’une des boutiques pour mettre à jour
#    le coût minimum.

# Résultat final : dp[a] contient le coût minimum pour obtenir exactement a grammes.

import sys

# Définition des données des boutiques
shops = {
    'A': {
        'amount': 200,      # en grammes
        'price': 380,       # prix unitaire (yen) par sac
        'discount_units': 5,
        'discount_rate': 0.20
    },
    'B': {
        'amount': 300,
        'price': 550,
        'discount_units': 4,
        'discount_rate': 0.15
    },
    'C': {
        'amount': 500,
        'price': 850,
        'discount_units': 3,
        'discount_rate': 0.12
    }
}

def cost_for_bags(shop_key, bags):
    """
    Calcule le prix total pour un nombre donné de sacs achetés dans une boutique donnée en tenant compte
    des remises par lots.
    
    Paramètres :
    shop_key : clé de la boutique ('A', 'B' ou 'C')
    bags : nombre de sacs
    
    Retourne :
    Le coût total en yen (int)
    """
    shop = shops[shop_key]
    full_discount_batches = bags // shop['discount_units']    # nombre de lots complets permettant la remise
    remaining_bags = bags % shop['discount_units']            # sacs non réduits
    
    # Coût pour les lots complets avec réduction
    cost_discounted = full_discount_batches * shop['discount_units'] * shop['price'] * (1 - shop['discount_rate'])
    # Coût pour les sacs restants sans réduction
    cost_remaining = remaining_bags * shop['price']
    
    total_cost = cost_discounted + cost_remaining
    
    # conversion en int car yen (sans centimes)
    return int(total_cost + 0.5)  # arrondi à l'entier le plus proche

def solve_for_amount(amount):
    """
    Utilise la programmation dynamique pour trouver le coût minimum pour obtenir exactement 'amount' grammes.
    
    Paramètre :
    amount (int): quantité demandée en grammes
    
    Retourne :
    Le coût minimal (int)
    """
    # dp[i] = coût minimal pour i grammes
    # On initialise avec une valeur très grande sauf dp[0]
    INF = 10**9
    dp = [INF] * (amount + 1)
    dp[0] = 0
    
    # Pour chaque quantité de farine de 0 à amount,
    # on essaie d'ajouter un sac de chaque boutique si ça ne dépasse pas amount
    for i in range(amount + 1):
        if dp[i] == INF:
            continue  # impossible d'atteindre cette quantité, ignorer
        for shop_key in shops:
            s = shops[shop_key]
            next_amount = i + s['amount']
            if next_amount <= amount:
                # On doit connaitre combien de sacs déjà achetés dans cette boutique pour calculer la remise
                # Mais ici dp est global, on ne connait pas la composition.
                # Donc on doit changer d'approche :
                # Il faut mémoriser pour chaque quantité le nombre de sacs par boutique.
                # Comme la quantité max est 5000, on peut mettre une structure supplémentaire dans dp.
                pass

    # L'approche précédente ne permet pas de calculer correctement les remises car on ne connaît pas le 
    # nombre de sacs achetés dans chaque boutique pour cette quantité intermédiaire.

    # Nouvelle approche :
    # On peut représenter chaque état dp[i][a][b][c] représentant le coût pour i grammes en ayant acheté
    # a sacs chez A, b chez B et c chez C.
    # Mais cela serait trop grand (la complexité explose).

    # Autre idée :
    # Chaque sac a un poids fixe donc on peut calculer le nombre maximum de sacs nécessaires pour chaque boutique.
    # Les nombres max de sacs pour atteindre au max 5000 grammes:
    max_a = amount // shops['A']['amount'] + 1
    max_b = amount // shops['B']['amount'] + 1
    max_c = amount // shops['C']['amount'] + 1

    min_cost = 10**9
    
    # On va essayer toutes les combinaisons possibles de sacs des boutiques A, B, et C
    # qui totalisent exactement 'amount' grammes.
    # L'optimisation possible est de réduire le domaine des boucles en fonction de amount.
    for a in range(max_a):
        for b in range(max_b):
            weight_ab = a * shops['A']['amount'] + b * shops['B']['amount']
            if weight_ab > amount:
                # trop de poids, skip
                continue
            c_needed = (amount - weight_ab)
            # pour que c_needed soit divisible par 500 (poids des sacs C)
            if c_needed % shops['C']['amount'] != 0:
                continue
            c = c_needed // shops['C']['amount']
            if c >= max_c:
                continue
            
            # Calculer le coût total
            cost_a = cost_for_bags('A', a)
            cost_b = cost_for_bags('B', b)
            cost_c = cost_for_bags('C', c)
            total_cost = cost_a + cost_b + cost_c
            
            if total_cost < min_cost:
                min_cost = total_cost
    
    return min_cost

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    for line in input_lines:
        a = int(line)
        if a == 0:
            break
        # Résoudre pour la quantité a
        answer = solve_for_amount(a)
        print(answer)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' pour' (ID: 1930)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.35752567648887634
    2. ':' → logprob: -1.3575257062911987
    3. 'def' → logprob: -4.232525825500488
    4. ' :' → logprob: -4.357525825500488
    5. '#' → logprob: -4.857525825500488
    6. ' ```' → logprob: -6.357525825500488
    7. '``' → logprob: -6.482525825500488
    8. '\n' → logprob: -6.607525825500488
    9. '\' → logprob: -7.232525825500488
    10. ''''' → logprob: -7.982525825500488

Token 4: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.48787516355514526
    2. ' résoudre' → logprob: -2.61287522315979
    3. ' Python' → logprob: -2.86287522315979
    4. ' la' → logprob: -2.98787522315979
    5. 'python' → logprob: -3.11287522315979
    6. '```' → logprob: -3.23787522315979
    7. 'Python' → logprob: -3.36287522315979
    8. '#' → logprob: -3.73787522315979
    9. 'le' → logprob: -3.73787522315979
    10. ' python' → logprob: -4.612874984741211

Token 5: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.19922828674316406
    2. ' problème' → logprob: -2.074228286743164
    3. '#' → logprob: -3.949228286743164
    4. ' probl' → logprob: -4.699228286743164
    5. 'proble' → logprob: -5.324228286743164
    6. ' code' → logprob: -5.574228286743164
    7. ' #' → logprob: -5.699228286743164
    8. 'code' → logprob: -6.199228286743164
    9. 'problem' → logprob: -6.199228286743164
    10. 's' → logprob: -6.824228286743164

Token 6: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24122029542922974
    2. '```' → logprob: -1.991220235824585
    3. ' :' → logprob: -2.991220235824585
    4. '\' → logprob: -4.991220474243164
    5. '\n' → logprob: -5.241220474243164
    6. 's' → logprob: -5.366220474243164
    7. '#' → logprob: -5.991220474243164
    8. '.' → logprob: -6.491220474243164
    9. '``' → logprob: -6.866220474243164
    10. '`' → logprob: -6.991220474243164

Token 7: 'Discount' (ID: 38537)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -1.7925130128860474
    2. ' des' → logprob: -2.167512893676758
    3. 'du' → logprob: -2.542512893676758
    4. 'Two' → logprob: -2.667512893676758
    5. 'de' → logprob: -2.917512893676758
    6. '2' → logprob: -3.042512893676758
    7. '"' → logprob: -3.167512893676758
    8. ' Two' → logprob: -3.292512893676758
    9. 'N' → logprob: -3.417512893676758
    10. ' de' → logprob: -3.417512893676758

Token 8: 's' (ID: 82)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3961378037929535
    2. 's' → logprob: -1.8961378335952759
    3. ':' → logprob: -2.3961377143859863
    4. '":' → logprob: -4.021137714385986
    5. 'Code' → logprob: -4.646137714385986
    6. '_code' → logprob: -4.771137714385986
    7. ' code' → logprob: -4.771137714385986
    8. 'ed' → logprob: -4.771137714385986
    9. 'Calculator' → logprob: -5.021137714385986
    10. ' "' → logprob: -5.271137714385986

Token 9: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.632073163986206
    2. ':' → logprob: -1.132073163986206
    3. '"' → logprob: -2.757073163986206
    4. ' :' → logprob: -3.632073163986206
    5. '.py' → logprob: -3.757073163986206
    6. '":' → logprob: -4.632073402404785
    7. '```' → logprob: -5.007073402404785
    8. ' s' → logprob: -5.007073402404785
    9. ' code' → logprob: -6.632073402404785
    10. '_code' → logprob: -6.757073402404785

Token 10: ' Buck' (ID: 42055)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4245615005493164
    2. 'the' → logprob: -2.1745615005493164
    3. ' Code' → logprob: -2.9245615005493164
    4. ' products' → logprob: -2.9870615005493164
    5. ' purchase' → logprob: -3.2370615005493164
    6. ' a' → logprob: -3.2370615005493164
    7. 'products' → logprob: -3.5495615005493164
    8. ' purchases' → logprob: -3.7995615005493164
    9. ' code' → logprob: -3.8620615005493164
    10. 'a' → logprob: -3.9870615005493164

Token 11: 'w' (ID: 86)
  Prédit: 'ets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.024916747584939003
    2. 'et' → logprob: -4.024916648864746
    3. 's' → logprob: -5.274916648864746
    4. 'e' → logprob: -7.774916648864746
    5. '```' → logprob: -8.399916648864746
    6. 'y' → logprob: -8.899916648864746
    7. '#' → logprob: -9.024916648864746
    8. 'etsy' → logprob: -9.149916648864746
    9. ' et' → logprob: -9.649916648864746
    10. '`' → logprob: -10.087416648864746

Token 12: 'heat' (ID: 38002)
  Prédit: 'ets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.7046849131584167
    2. 'et' → logprob: -0.8296849131584167
    3. 't' → logprob: -3.5796849727630615
    4. 'e' → logprob: -4.079684734344482
    5. '```' → logprob: -4.704684734344482
    6. 'ts' → logprob: -5.079684734344482
    7. 's' → logprob: -5.829684734344482
    8. '`' → logprob: -7.079684734344482
    9. ']' → logprob: -7.079684734344482
    10. 'age' → logprob: -7.704684734344482

Token 13: '"

' (ID: 2678)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0878820419311523
    2. ':' → logprob: -1.2128820419311523
    3. '"' → logprob: -1.4628820419311523
    4. '#' → logprob: -2.8378820419311523
    5. '```' → logprob: -3.7128820419311523
    6. '"""' → logprob: -4.212882041931152
    7. '`' → logprob: -4.837882041931152
    8. 'def' → logprob: -4.962882041931152
    9. '.py' → logprob: -5.087882041931152
    10. '.' → logprob: -6.212882041931152

Token 14: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22939381003379822
    2. ':' → logprob: -1.8543938398361206
    3. '```' → logprob: -4.10439395904541
    4. '#' → logprob: -4.60439395904541
    5. 'd' → logprob: -4.60439395904541
    6. 's' → logprob: -5.72939395904541
    7. 'n' → logprob: -6.47939395904541
    8. 'import' → logprob: -6.85439395904541
    9. '_' → logprob: -6.97939395904541
    10. '\' → logprob: -7.10439395904541

Token 15: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10367684811353683
    2. ' def' → logprob: -2.4786767959594727
    3. ' ' → logprob: -5.353676795959473
    4. 'from' → logprob: -5.728676795959473
    5. ' from' → logprob: -6.228676795959473
    6. 'import' → logprob: -7.228676795959473
    7. ' de' → logprob: -7.353676795959473
    8. ' ```' → logprob: -7.353676795959473
    9. '```' → logprob: -7.478676795959473
    10. 'd' → logprob: -7.728676795959473

Token 16: ''idée' (ID: 131945)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6393428444862366
    2. 'i' → logprob: -1.5143427848815918
    3. 'a' → logprob: -2.014342784881592
    4. '#' → logprob: -3.139342784881592
    5. 'ine' → logprob: -4.139342784881592
    6. 'es' → logprob: -4.264342784881592
    7. 'ignes' → logprob: -4.764342784881592
    8. ''' → logprob: -5.014342784881592
    9. 'iste' → logprob: -5.889342784881592
    10. ''i' → logprob: -5.889342784881592

Token 17: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.394459992647171
    2. ':' → logprob: -2.1444599628448486
    3. ' est' → logprob: -2.3944599628448486
    4. ' :' → logprob: -3.0194599628448486
    5. 'est' → logprob: -3.1444599628448486
    6. ' de' → logprob: -4.519460201263428
    7. ' ' → logprob: -4.644460201263428
    8. 'de' → logprob: -6.644460201263428
    9. ' #' → logprob: -7.144460201263428
    10. '#' → logprob: -7.269460201263428

Token 18: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3691064715385437
    2. ' d' → logprob: -1.2441065311431885
    3. ' ' → logprob: -4.744106292724609
    4. 'de' → logprob: -4.994106292724609
    5. 'd' → logprob: -5.494106292724609
    6. ' que' → logprob: -8.11910629272461
    7. ' ' → logprob: -8.11910629272461
    8. '    ' → logprob: -10.24410629272461
    9. ':' → logprob: -10.61910629272461
    10. '  ' → logprob: -10.74410629272461

Token 19: ' déterminer' (ID: 122024)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.8369604349136353
    2. ' utiliser' → logprob: -1.5869604349136353
    3. ' proposer' → logprob: -2.0869603157043457
    4. ' créer' → logprob: -2.9619603157043457
    5. ' continuer' → logprob: -3.8369603157043457
    6. ' appliquer' → logprob: -3.9619603157043457
    7. 'calcul' → logprob: -4.586960315704346
    8. ' définir' → logprob: -4.836960315704346
    9. ' lire' → logprob: -4.836960315704346
    10. ' partir' → logprob: -4.836960315704346

Token 20: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04786057770252228
    2. ' le' → logprob: -4.047860622406006
    3. ' la' → logprob: -4.172860622406006
    4. ' l' → logprob: -5.172860622406006
    5. ' les' → logprob: -5.672860622406006
    6. 's' → logprob: -6.672860622406006
    7. ' ' → logprob: -6.672860622406006
    8. ' combien' → logprob: -8.422860145568848
    9. '  ' → logprob: -8.547860145568848
    10. ' quelles' → logprob: -8.672860145568848

Token 21: ' combinaison' (ID: 165933)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -1.0833464860916138
    2. ' meilleure' → logprob: -1.3333464860916138
    3. ' ' → logprob: -2.333346366882324
    4. ' meilleur' → logprob: -2.708346366882324
    5. ' liste' → logprob: -3.208346366882324
    6. ' prochaine' → logprob: -3.833346366882324
    7. ' nature' → logprob: -3.833346366882324
    8. ' réduction' → logprob: -3.833346366882324
    9. ' valeur' → logprob: -4.083346366882324
    10. ' manière' → logprob: -4.208346366882324

Token 22: ' optimale' (ID: 72604)
  Prédit: ' optimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -0.36093106865882874
    2. ' suivante' → logprob: -1.8609310388565063
    3. ' de' → logprob: -3.485931158065796
    4. '<|end|>' → logprob: -3.610931158065796
    5. ' qui' → logprob: -3.860931158065796
    6. ' gagn' → logprob: -4.110930919647217
    7. ' ' → logprob: -4.860930919647217
    8. ' d' → logprob: -4.985930919647217
    9. ' la' → logprob: -4.985930919647217
    10. ' ' → logprob: -5.110930919647217

Token 23: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6708239912986755
    2. ' de' → logprob: -0.7958239912986755
    3. ' des' → logprob: -4.04582405090332
    4. ' d' → logprob: -5.54582405090332
    5. ' optimale' → logprob: -5.54582405090332
    6. '<|end|>' → logprob: -5.67082405090332
    7. ' qui' → logprob: -6.17082405090332
    8. ' entre' → logprob: -6.54582405090332
    9. ' suivante' → logprob: -6.79582405090332
    10. ' that' → logprob: -7.42082405090332

Token 24: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18096116185188293
    2. ''esp' → logprob: -3.0559611320495605
    3. ''achat' → logprob: -3.3059611320495605
    4. 'e' → logprob: -3.4309611320495605
    5. 'es' → logprob: -4.1809611320495605
    6. 'u' → logprob: -4.9309611320495605
    7. ''espace' → logprob: -5.1809611320495605
    8. ''u' → logprob: -5.5559611320495605
    9. 'a' → logprob: -5.6809611320495605
    10. ''un' → logprob: -5.8059611320495605

Token 25: 'ach' (ID: 678)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3129795491695404
    2. 'ach' → logprob: -2.3129794597625732
    3. 'a' → logprob: -3.1879794597625732
    4. ''achat' → logprob: -4.062979698181152
    5. 'es' → logprob: -4.687979698181152
    6. 'achat' → logprob: -4.750479698181152
    7. ''off' → logprob: -4.750479698181152
    8. 'articles' → logprob: -4.812979698181152
    9. ' achats' → logprob: -5.062979698181152
    10. ''ing' → logprob: -5.187979698181152

Token 26: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.04952331259846687
    2. 'at' → logprob: -3.04952335357666
    3. 'et' → logprob: -8.42452335357666
    4. '#' → logprob: -8.67452335357666
    5. 'ets' → logprob: -8.92452335357666
    6. 'a' → logprob: -8.92452335357666
    7. '`' → logprob: -9.79952335357666
    8. 'ètes' → logprob: -10.17452335357666
    9. 'âts' → logprob: -10.29952335357666
    10. 'è' → logprob: -10.92452335357666

Token 27: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.248512864112854
    2. 's' → logprob: -2.7485127449035645
    3. ' qui' → logprob: -2.8735127449035645
    4. ' suivante' → logprob: -3.9985127449035645
    5. ' afin' → logprob: -4.3735127449035645
    6. ' optimale' → logprob: -4.4985127449035645
    7. ' en' → logprob: -4.8735127449035645
    8. ' pour' → logprob: -5.2485127449035645
    9. ' ,' → logprob: -5.2485127449035645
    10. ' de' → logprob: -5.3735127449035645

Token 28: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7962098121643066
    2. ' le' → logprob: -1.6712098121643066
    3. ' différents' → logprob: -2.6712098121643066
    4. ' l' → logprob: -3.0462098121643066
    5. ' des' → logprob: -3.1712098121643066
    6. ' produits' → logprob: -3.5462098121643066
    7. 'l' → logprob: -3.8587098121643066
    8. ' deux' → logprob: -3.9212098121643066
    9. ' la' → logprob: -4.046209812164307
    10. 'les' → logprob: -4.108709812164307

Token 29: ' trois' (ID: 25564)
  Prédit: ' différents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' différents' → logprob: -0.5045686960220337
    2. ' différentes' → logprob: -1.5045686960220337
    3. ' produits' → logprob: -3.004568576812744
    4. ' diff' → logprob: -3.504568576812744
    5. ' s' → logprob: -3.754568576812744
    6. ' different' → logprob: -4.254568576812744
    7. 'diff' → logprob: -4.504568576812744
    8. ' livres' → logprob: -5.004568576812744
    9. ' ' → logprob: -5.692068576812744
    10. 's' → logprob: -5.817068576812744

Token 30: ' boutiques' (ID: 108274)
  Prédit: ' vari'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vari' → logprob: -0.776222288608551
    2. ' types' → logprob: -1.1512222290039062
    3. 'vari' → logprob: -2.5262222290039062
    4. ' produits' → logprob: -2.9012222290039062
    5. 'types' → logprob: -3.6512222290039062
    6. ' marques' → logprob: -4.776222229003906
    7. ' catégories' → logprob: -5.276222229003906
    8. ' magasins' → logprob: -5.526222229003906
    9. ' sortes' → logprob: -5.526222229003906
    10. ' fournisseurs' → logprob: -5.651222229003906

Token 31: ' A' (ID: 355)
  Prédit: ' afin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afin' → logprob: -0.5386761426925659
    2. ',' → logprob: -2.1636762619018555
    3. ':' → logprob: -2.6636762619018555
    4. '.' → logprob: -2.7886762619018555
    5. ' :' → logprob: -2.7886762619018555
    6. ' pour' → logprob: -3.0386762619018555
    7. 'pour' → logprob: -4.4136762619018555
    8. ' ' → logprob: -4.5386762619018555
    9. ' ,' → logprob: -4.6636762619018555
    10. ' en' → logprob: -5.2886762619018555

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02981274574995041
    2. ' ,' → logprob: -3.529812812805176
    3. ' ' → logprob: -11.654812812805176
    4. ' (' → logprob: -11.779812812805176
    5. '(' → logprob: -12.404812812805176
    6. ' et' → logprob: -12.404812812805176
    7. ',B' → logprob: -12.404812812805176
    8. ''' → logprob: -12.654812812805176
    9. '',' → logprob: -12.654812812805176
    10. ',b' → logprob: -12.654812812805176

Token 33: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.04997507855296135
    2. 'B' → logprob: -3.0499751567840576
    3. ',' → logprob: -7.4249749183654785
    4. ' ' → logprob: -7.5499749183654785
    5. ' ' → logprob: -9.424975395202637
    6. ' ,' → logprob: -10.299975395202637
    7. ' et' → logprob: -10.424975395202637
    8. '#' → logprob: -10.424975395202637
    9. 'et' → logprob: -10.674975395202637
    10. ' #' → logprob: -11.612475395202637

Token 34: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28760701417922974
    2. ' et' → logprob: -1.912606954574585
    3. 'et' → logprob: -2.287606954574585
    4. ' ,' → logprob: -7.537607192993164
    5. ' ' → logprob: -9.662607192993164
    6. ' and' → logprob: -10.287607192993164
    7. ' и' → logprob: -10.787607192993164
    8. 'e' → logprob: -11.037607192993164
    9. ' ' → logprob: -11.287607192993164
    10. '#' → logprob: -11.912607192993164

Token 35: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.013685399666428566
    2. 'C' → logprob: -4.76368522644043
    3. ' ' → logprob: -5.38868522644043
    4. ' ' → logprob: -7.88868522644043
    5. '  ' → logprob: -10.01368522644043
    6. '	C' → logprob: -11.26368522644043
    7. ' et' → logprob: -12.07618522644043
    8. 'et' → logprob: -12.13868522644043
    9. ',' → logprob: -12.38868522644043
    10. 's' → logprob: -12.57618522644043

Token 36: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6868216395378113
    2. ' :' → logprob: -1.061821699142456
    3. '.' → logprob: -2.311821699142456
    4. ',' → logprob: -3.811821699142456
    5. '#' → logprob: -4.936821460723877
    6. '```' → logprob: -5.061821460723877
    7. 'def' → logprob: -5.686821460723877
    8. ' ,' → logprob: -5.811821460723877
    9. '\' → logprob: -6.061821460723877
    10. ' ' → logprob: -7.311821460723877

Token 37: '#' (ID: 2)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.1038827896118164
    2. '.' → logprob: -1.2288827896118164
    3. ':' → logprob: -1.4788827896118164
    4. ',' → logprob: -2.8538827896118164
    5. ' ,' → logprob: -3.1038827896118164
    6. '```' → logprob: -4.353882789611816
    7. ' .' → logprob: -4.728882789611816
    8. ' afin' → logprob: -5.353882789611816
    9. 'def' → logprob: -5.728882789611816
    10. 'import' → logprob: -5.978882789611816

Token 38: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1666219234466553
    2. 'def' → logprob: -1.2916219234466553
    3. ' ' → logprob: -2.4166219234466553
    4. 'import' → logprob: -2.6666219234466553
    5. ':' → logprob: -2.9166219234466553
    6. '\' → logprob: -3.4166219234466553
    7. '.' → logprob: -3.6666219234466553
    8. 'from' → logprob: -3.9166219234466553
    9. ',' → logprob: -4.041622161865234
    10. '```' → logprob: -4.291622161865234

Token 39: ' obtenir' (ID: 54423)
  Prédit: ' maxim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.5236283540725708
    2. ' minim' → logprob: -1.1486283540725708
    3. ' obtenir' → logprob: -3.1486282348632812
    4. ' profiter' → logprob: -4.398628234863281
    5. ' bénéficier' → logprob: -4.398628234863281
    6. 'min' → logprob: -5.148628234863281
    7. ' max' → logprob: -5.898628234863281
    8. ' min' → logprob: -6.148628234863281
    9. ' ob' → logprob: -6.273628234863281
    10. 'max' → logprob: -6.773628234863281

Token 40: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.0465517044067383
    2. ' des' → logprob: -1.5465517044067383
    3. ' les' → logprob: -1.9215517044067383
    4. ' la' → logprob: -2.1715517044067383
    5. ' un' → logprob: -2.2965517044067383
    6. ' une' → logprob: -3.2965517044067383
    7. ' ' → logprob: -3.5465517044067383
    8. ' l' → logprob: -6.171551704406738
    9. ' au' → logprob: -6.546551704406738
    10. ' de' → logprob: -6.921551704406738

Token 41: ' quantité' (ID: 89219)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.6110678911209106
    2. ' meilleur' → logprob: -0.9860678911209106
    3. ' prix' → logprob: -3.736067771911621
    4. 'maximum' → logprob: -4.236067771911621
    5. 's' → logprob: -4.486067771911621
    6. ' maximale' → logprob: -5.111067771911621
    7. ' meilleurs' → logprob: -5.611067771911621
    8. ' maximal' → logprob: -5.736067771911621
    9. ' code' → logprob: -5.861067771911621
    10. ' meilleure' → logprob: -6.236067771911621

Token 42: ' exacte' (ID: 188756)
  Prédit: ' optimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -0.8324602246284485
    2. ' maximale' → logprob: -1.3324601650238037
    3. ' d' → logprob: -2.8324601650238037
    4. ' de' → logprob: -2.9574601650238037
    5. ' souhait' → logprob: -3.0824601650238037
    6. ' totale' → logprob: -3.2074601650238037
    7. ' désir' → logprob: -3.4574601650238037
    8. ' complète' → logprob: -3.8324601650238037
    9. ' demand' → logprob: -4.457460403442383
    10. ' ' → logprob: -4.582460403442383

Token 43: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9382947087287903
    2. ' souhait' → logprob: -1.4382946491241455
    3. ' désir' → logprob: -1.9382946491241455
    4. ' voul' → logprob: -3.0632946491241455
    5. ' d' → logprob: -3.1882946491241455
    6. 'de' → logprob: -3.5632946491241455
    7. ' demand' → logprob: -3.5632946491241455
    8. ' requ' → logprob: -3.8132946491241455
    9. ' ' → logprob: -4.188294887542725
    10. 'd' → logprob: -4.188294887542725

Token 44: ' farine' (ID: 144514)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.034646160900592804
    2. 's' → logprob: -3.4096462726593018
    3. 'sar' → logprob: -7.409646034240723
    4. ' sar' → logprob: -8.534646034240723
    5. '_s' → logprob: -10.159646034240723
    6. ' S' → logprob: -10.659646034240723
    7. ' ' → logprob: -10.659646034240723
    8. '	s' → logprob: -10.784646034240723
    9. ' ' → logprob: -10.909646034240723
    10. '```' → logprob: -11.534646034240723

Token 45: ' demand' (ID: 8492)
  Prédit: ' nécessaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.8349766731262207
    2. ' ' → logprob: -1.0849766731262207
    3. '.' → logprob: -2.7099766731262207
    4. ' nécessaires' → logprob: -3.2099766731262207
    5. ' de' → logprob: -3.5849766731262207
    6. ',' → logprob: -3.9599766731262207
    7. ' necess' → logprob: -4.209976673126221
    8. ' needed' → logprob: -4.834976673126221
    9. 's' → logprob: -4.959976673126221
    10. ' ,' → logprob: -5.334976673126221

Token 46: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.006815657950937748
    2. 'é' → logprob: -5.131815433502197
    3. 'ee' → logprob: -7.631815433502197
    4. 'e' → logprob: -8.631815910339355
    5. 'ie' → logprob: -9.006815910339355
    6. 'ue' → logprob: -9.381815910339355
    7. 'u' → logprob: -12.256815910339355
    8. '#' → logprob: -13.006815910339355
    9. 'i' → logprob: -13.256815910339355
    10. 'è' → logprob: -13.381815910339355

Token 47: ' au' (ID: 2791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7527545690536499
    2. ':' → logprob: -1.37775456905365
    3. ',' → logprob: -1.87775456905365
    4. '#' → logprob: -2.8777546882629395
    5. 'def' → logprob: -4.0027546882629395
    6. ' :' → logprob: -4.2527546882629395
    7. '```' → logprob: -5.1277546882629395
    8. 's' → logprob: -5.3777546882629395
    9. ' ' → logprob: -5.7527546882629395
    10. 'import' → logprob: -5.7527546882629395

Token 48: ' moindre' (ID: 106797)
  Prédit: 'prix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prix' → logprob: -0.4058009386062622
    2. ' moindre' → logprob: -2.2808008193969727
    3. 'me' → logprob: -2.5308008193969727
    4. ' prix' → logprob: -3.1558008193969727
    5. ' meilleur' → logprob: -3.2808008193969727
    6. 'moins' → logprob: -3.4058008193969727
    7. 'minimum' → logprob: -4.280800819396973
    8. 'mo' → logprob: -4.655800819396973
    9. ' coût' → logprob: -5.280800819396973
    10. '   ' → logprob: -6.155800819396973

Token 49: ' coût' (ID: 73109)
  Prédit: 'prix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prix' → logprob: -1.0508960485458374
    2. ' prix' → logprob: -1.3008960485458374
    3. ' coût' → logprob: -1.5508960485458374
    4. 'co' → logprob: -1.8008960485458374
    5. 'cout' → logprob: -8.300895690917969
    6. ' co' → logprob: -8.300895690917969
    7. ' cout' → logprob: -8.675895690917969
    8. 'cost' → logprob: -9.550895690917969
    9. ' coûts' → logprob: -11.050895690917969
    10. ' coû' → logprob: -11.050895690917969

Token 50: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1625690460205078
    2. '#' → logprob: -1.6625690460205078
    3. 'd' → logprob: -1.6625690460205078
    4. 'def' → logprob: -1.7875690460205078
    5. 'import' → logprob: -3.037569046020508
    6. '.' → logprob: -3.662569046020508
    7. 'from' → logprob: -4.412569046020508
    8. ',' → logprob: -4.537569046020508
    9. '\' → logprob: -4.662569046020508
    10. 'i' → logprob: -5.037569046020508

Token 51: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.025899505242705345
    2. ' ' → logprob: -4.275899410247803
    3. '#' → logprob: -5.650899410247803
    4. '.' → logprob: -6.900899410247803
    5. ' tout' → logprob: -6.900899410247803
    6. ',' → logprob: -7.400899410247803
    7. ' #' → logprob: -7.400899410247803
    8. ' ' → logprob: -7.525899410247803
    9. ' avec' → logprob: -7.650899410247803
    10. 'import' → logprob: -7.650899410247803

Token 52: ' prenant' (ID: 140375)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.48159483075141907
    2. 'util' → logprob: -1.3565948009490967
    3. ' tenant' → logprob: -3.3565948009490967
    4. ' respect' → logprob: -4.106595039367676
    5. ' optim' → logprob: -4.856595039367676
    6. ' prenant' → logprob: -4.981595039367676
    7. 'fonction' → logprob: -5.106595039367676
    8. 'profit' → logprob: -5.231595039367676
    9. ' profit' → logprob: -5.231595039367676
    10. ' exploit' → logprob: -5.356595039367676

Token 53: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.052870847284793854
    2. 'en' → logprob: -3.927870750427246
    3. ' compte' → logprob: -4.302870750427246
    4. '```' → logprob: -4.427870750427246
    5. ' avantage' → logprob: -5.677870750427246
    6. ' into' → logprob: -6.677870750427246
    7. ' soin' → logprob: -7.677870750427246
    8. ' account' → logprob: -8.302870750427246
    9. '#' → logprob: -8.552870750427246
    10. ' advantage' → logprob: -8.802870750427246

Token 54: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.1003526821732521
    2. 'comp' → logprob: -2.3503527641296387
    3. 'account' → logprob: -10.35035228729248
    4. '#' → logprob: -10.72535228729248
    5. ' ' → logprob: -10.97535228729248
    6. 'com' → logprob: -11.10035228729248
    7. 'Compte' → logprob: -11.35035228729248
    8. '```' → logprob: -11.47535228729248
    9. ' account' → logprob: -12.10035228729248
    10. ' consid' → logprob: -12.10035228729248

Token 55: '
' (ID: 198)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0911976546049118
    2. ' ' → logprob: -3.5911977291107178
    3. ' l' → logprob: -3.9661977291107178
    4. ' la' → logprob: -4.341197490692139
    5. ' des' → logprob: -4.591197490692139
    6. '<|end|>' → logprob: -5.216197490692139
    7. ' leurs' → logprob: -5.341197490692139
    8. 'les' → logprob: -6.716197490692139
    9. ' toutes' → logprob: -6.841197490692139
    10. ' le' → logprob: -6.841197490692139

Token 56: '#' (ID: 2)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2333611696958542
    2. ' la' → logprob: -2.35836124420166
    3. ' l' → logprob: -2.60836124420166
    4. ' des' → logprob: -4.73336124420166
    5. ' ' → logprob: -4.85836124420166
    6. '<|end|>' → logprob: -5.10836124420166
    7. '#' → logprob: -5.73336124420166
    8. ' le' → logprob: -6.10836124420166
    9. 's' → logprob: -6.10836124420166
    10. 'l' → logprob: -6.23336124420166

Token 57: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09687318652868271
    2. 'les' → logprob: -2.8468732833862305
    3. ' la' → logprob: -4.2218732833862305
    4. ' l' → logprob: -4.9718732833862305
    5. 'l' → logprob: -5.7218732833862305
    6. 'le' → logprob: -6.2218732833862305
    7. '#' → logprob: -6.7218732833862305
    8. ' leurs' → logprob: -6.7218732833862305
    9. ' le' → logprob: -7.0968732833862305
    10. ' toutes' → logprob: -7.0968732833862305

Token 58: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -1.0281951427459717
    2. ' différentes' → logprob: -1.4031951427459717
    3. ' rab' → logprob: -2.5281951427459717
    4. ' rédu' → logprob: -2.6531951427459717
    5. ' différents' → logprob: -2.6531951427459717
    6. ' tarifs' → logprob: -3.6531951427459717
    7. ' contraintes' → logprob: -3.9031951427459717
    8. ' prix' → logprob: -4.153195381164551
    9. ' frais' → logprob: -4.153195381164551
    10. ' différent' → logprob: -4.528195381164551

Token 59: 'ises' (ID: 5555)
  Prédit: 'ises'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ises' → logprob: -0.02009262517094612
    2. 'ais' → logprob: -4.770092487335205
    3. 'ise' → logprob: -5.770092487335205
    4. 'is' → logprob: -6.145092487335205
    5. '#' → logprob: -6.520092487335205
    6. 'b' → logprob: -6.520092487335205
    7. '```' → logprob: -7.020092487335205
    8. 'a' → logprob: -7.770092487335205
    9. 'aises' → logprob: -8.020092964172363
    10. 'pl' → logprob: -8.770092964172363

Token 60: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9583168625831604
    2. ':' → logprob: -1.8333168029785156
    3. 'import' → logprob: -2.0833168029785156
    4. 'def' → logprob: -2.4583168029785156
    5. '#' → logprob: -2.5833168029785156
    6. '
' → logprob: -2.9583168029785156
    7. ' 

' → logprob: -3.0833168029785156
    8. ' :' → logprob: -4.708316802978516
    9. '

' → logprob: -4.833316802978516
    10. 'd' → logprob: -4.958316802978516

Token 61: ' lots' (ID: 10836)
  Prédit: 'lot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lot' → logprob: -1.5065836906433105
    2. ' lot' → logprob: -1.8815836906433105
    3. ' magasin' → logprob: -2.2565836906433105
    4. ' quantité' → logprob: -3.2565836906433105
    5. 'article' → logprob: -3.3815836906433105
    6. ' boutique' → logprob: -3.3815836906433105
    7. 'bout' → logprob: -3.3815836906433105
    8. ' unité' → logprob: -3.5065836906433105
    9. ' volume' → logprob: -3.7565836906433105
    10. ' pack' → logprob: -3.7565836906433105

Token 62: '.

' (ID: 364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5310566425323486
    2. 'import' → logprob: -2.1560566425323486
    3. 'def' → logprob: -2.1560566425323486
    4. '
' → logprob: -2.2810566425323486
    5. ' 

' → logprob: -3.7810566425323486
    6. '#' → logprob: -4.1560564041137695
    7. '```' → logprob: -4.9060564041137695
    8. 'd' → logprob: -5.1560564041137695
    9. ':' → logprob: -5.2810564041137695
    10. 'from' → logprob: -5.5310564041137695

Token 63: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.762974739074707
    2. 'def' → logprob: -1.012974739074707
    3. 'import' → logprob: -2.262974739074707
    4. '#' → logprob: -3.762974739074707
    5. ' ' → logprob: -4.387974739074707
    6. 'from' → logprob: -4.387974739074707
    7. '```' → logprob: -5.262974739074707
    8. 'i' → logprob: -5.887974739074707
    9. '\' → logprob: -5.887974739074707
    10. ' 

' → logprob: -6.512974739074707

Token 64: ' Chaque' (ID: 94758)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8896741271018982
    2. 'def' → logprob: -1.389674186706543
    3. 'import' → logprob: -1.389674186706543
    4. 'from' → logprob: -3.014674186706543
    5. 'i' → logprob: -4.639674186706543
    6. ' ' → logprob: -4.639674186706543
    7. ' import' → logprob: -5.014674186706543
    8. '#' → logprob: -5.639674186706543
    9. ' from' → logprob: -5.889674186706543
    10. ' def' → logprob: -6.264674186706543

Token 65: ' boutique' (ID: 46148)
  Prédit: ' magasin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' magasin' → logprob: -0.9299179315567017
    2. ' lot' → logprob: -1.3049179315567017
    3. ' boutique' → logprob: -1.8049179315567017
    4. 'bout' → logprob: -2.304917812347412
    5. 'lot' → logprob: -4.179917812347412
    6. 'mag' → logprob: -4.429917812347412
    7. ' paquet' → logprob: -5.804917812347412
    8. ' pack' → logprob: -5.804917812347412
    9. ' ligne' → logprob: -5.929917812347412
    10. ' produit' → logprob: -5.929917812347412

Token 66: ' vend' (ID: 10593)
  Prédit: ' propose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' propose' → logprob: -0.017135659232735634
    2. ' ' → logprob: -4.8921356201171875
    3. ' vend' → logprob: -5.1421356201171875
    4. ' offre' → logprob: -6.8921356201171875
    5. ':' → logprob: -7.6421356201171875
    6. ' proposes' → logprob: -7.8921356201171875
    7. ' a' → logprob: -8.142135620117188
    8. ' possède' → logprob: -8.267135620117188
    9. ' proposent' → logprob: -8.267135620117188
    10. ' propos' → logprob: -8.892135620117188

Token 67: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8797796368598938
    2. ' de' → logprob: -1.254779577255249
    3. ' trois' → logprob: -2.379779577255249
    4. ' la' → logprob: -2.629779577255249
    5. ' ' → logprob: -3.629779577255249
    6. ' ses' → logprob: -3.879779577255249
    7. 'de' → logprob: -4.379779815673828
    8. ' une' → logprob: -4.504779815673828
    9. ' uniquement' → logprob: -4.754779815673828
    10. ' du' → logprob: -4.879779815673828

Token 68: ' farine' (ID: 144514)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.49197202920913696
    2. ' farine' → logprob: -1.3669719696044922
    3. 's' → logprob: -3.491971969604492
    4. ' certaine' → logprob: -4.366971969604492
    5. 'quant' → logprob: -4.741971969604492
    6. ' variété' → logprob: -4.866971969604492
    7. ' poudre' → logprob: -5.116971969604492
    8. ' portion' → logprob: -5.116971969604492
    9. 'far' → logprob: -5.491971969604492
    10. ' des' → logprob: -5.491971969604492

Token 69: ' avec' (ID: 3937)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2086920738220215
    2. ' ' → logprob: -1.9586920738220215
    3. ',' → logprob: -2.2086920738220215
    4. '.' → logprob: -2.4586920738220215
    5. ' différente' → logprob: -3.0836920738220215
    6. ':' → logprob: -3.5836920738220215
    7. ' spéciale' → logprob: -3.5836920738220215
    8. '"' → logprob: -3.8336920738220215
    9. 'de' → logprob: -3.8336920738220215
    10. ' "' → logprob: -4.2086920738220215

Token 70: ' :
' (ID: 10039)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8874600529670715
    2. ' un' → logprob: -1.3874599933624268
    3. 'des' → logprob: -2.3874599933624268
    4. 'un' → logprob: -2.7624599933624268
    5. 'une' → logprob: -2.8874599933624268
    6. ' une' → logprob: -3.5124599933624268
    7. ' différentes' → logprob: -3.8874599933624268
    8. ' ses' → logprob: -4.012460231781006
    9. ' différents' → logprob: -4.262460231781006
    10. 'diff' → logprob: -4.887460231781006

Token 71: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1575278639793396
    2. '<|end|>' → logprob: -3.0325279235839844
    3. ' un' → logprob: -3.5325279235839844
    4. ' une' → logprob: -4.407527923583984
    5. '  ' → logprob: -4.907527923583984
    6. 's' → logprob: -5.157527923583984
    7. ' a' → logprob: -5.157527923583984
    8. 'un' → logprob: -5.282527923583984
    9. 'une' → logprob: -5.532527923583984
    10. ''' → logprob: -5.532527923583984

Token 72: ' -' (ID: 533)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3000536561012268
    2. 'un' → logprob: -2.300053596496582
    3. ' une' → logprob: -2.550053596496582
    4. ' ' → logprob: -3.925053596496582
    5. ' des' → logprob: -4.675053596496582
    6. ''' → logprob: -5.050053596496582
    7. 'une' → logprob: -5.050053596496582
    8. 'a' → logprob: -5.175053596496582
    9. 's' → logprob: -5.175053596496582
    10. ''un' → logprob: -5.300053596496582

Token 73: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.18780525028705597
    2. ' une' → logprob: -2.18780517578125
    3. ' quantité' → logprob: -4.06280517578125
    4. ' des' → logprob: -4.18780517578125
    5. 'un' → logprob: -4.56280517578125
    6. 'une' → logprob: -5.18780517578125
    7. ' ' → logprob: -5.43780517578125
    8. ' le' → logprob: -6.43780517578125
    9. ' prix' → logprob: -6.93780517578125
    10. ' la' → logprob: -7.18780517578125

Token 74: ' quantité' (ID: 89219)
  Prédit: ' quantité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.3565661609172821
    2. 'quant' → logprob: -2.3565661907196045
    3. ' tar' → logprob: -3.2315661907196045
    4. 'qual' → logprob: -3.4815661907196045
    5. ' quant' → logprob: -3.9815661907196045
    6. ' qualité' → logprob: -3.9815661907196045
    7. 'tar' → logprob: -4.606565952301025
    8. ' composition' → logprob: -4.856565952301025
    9. 'prix' → logprob: -5.106565952301025
    10. ' certaine' → logprob: -5.231565952301025

Token 75: ' fixe' (ID: 111690)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9422256350517273
    2. ' par' → logprob: -1.192225694656372
    3. ' minimale' → logprob: -2.817225694656372
    4. ' d' → logprob: -2.942225694656372
    5. ' initial' → logprob: -3.192225694656372
    6. ' vend' → logprob: -3.317225694656372
    7. 'de' → logprob: -3.442225694656372
    8. 'vend' → logprob: -4.567225456237793
    9. ' fixe' → logprob: -4.567225456237793
    10. ' unit' → logprob: -4.567225456237793

Token 76: ' par' (ID: 686)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6502141356468201
    2. '_' → logprob: -2.025214195251465
    3. ' d' → logprob: -2.025214195251465
    4. ' ' → logprob: -2.650214195251465
    5. 'de' → logprob: -2.650214195251465
    6. ',' → logprob: -3.150214195251465
    7. ' par' → logprob: -4.650214195251465
    8. 'd' → logprob: -6.150214195251465
    9. ' vend' → logprob: -6.275214195251465
    10. ' =' → logprob: -6.525214195251465

Token 77: ' sac' (ID: 10672)
  Prédit: ' lot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lot' → logprob: -0.8878217339515686
    2. 'lot' → logprob: -0.8878217339515686
    3. ' paquet' → logprob: -2.012821674346924
    4. 's' → logprob: -3.887821674346924
    5. 'pack' → logprob: -4.762821674346924
    6. ' pack' → logprob: -5.637821674346924
    7. ' sac' → logprob: -5.887821674346924
    8. 'pa' → logprob: -5.887821674346924
    9. ' ' → logprob: -6.387821674346924
    10. 'package' → logprob: -7.762821674346924

Token 78: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2330011129379272
    2. ',' → logprob: -1.6080011129379272
    3. 's' → logprob: -1.8580011129379272
    4. ' de' → logprob: -1.9830011129379272
    5. ' :' → logprob: -2.983001232147217
    6. '<|end|>' → logprob: -2.983001232147217
    7. ':' → logprob: -3.608001232147217
    8. '.' → logprob: -3.858001232147217
    9. ' ,' → logprob: -3.983001232147217
    10. '(s' → logprob: -4.608001232147217

Token 79: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5179834365844727
    2. ' ,' → logprob: -2.0179834365844727
    3. 's' → logprob: -2.5179834365844727
    4. ' ' → logprob: -3.0179834365844727
    5. ' (' → logprob: -3.0179834365844727
    6. ' de' → logprob: -3.2679834365844727
    7. ' :' → logprob: -3.7679834365844727
    8. '.' → logprob: -4.892983436584473
    9. ':' → logprob: -5.267983436584473
    10. '#' → logprob: -5.642983436584473

Token 80: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38662227988243103
    2. ',' → logprob: -2.261622190475464
    3. ' (' → logprob: -2.886622190475464
    4. ' ,' → logprob: -3.261622190475464
    5. 's' → logprob: -3.511622190475464
    6. ' =' → logprob: -4.011622428894043
    7. ' #' → logprob: -4.261622428894043
    8. ' de' → logprob: -4.386622428894043
    9. ' d' → logprob: -4.511622428894043
    10. '#' → logprob: -4.886622428894043

Token 81: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.007952849380671978
    2. 'un' → logprob: -4.882952690124512
    3. ' une' → logprob: -8.757952690124512
    4. ' ' → logprob: -9.632952690124512
    5. ''un' → logprob: -10.257952690124512
    6. 'une' → logprob: -11.132952690124512
    7. ' a' → logprob: -11.257952690124512
    8. ' prix' → logprob: -11.257952690124512
    9. '	un' → logprob: -11.632952690124512
    10. ' des' → logprob: -11.757952690124512

Token 82: ' prix' (ID: 18771)
  Prédit: ' prix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prix' → logprob: -0.035920873284339905
    2. 'prix' → logprob: -4.285921096801758
    3. ' coût' → logprob: -4.285921096801758
    4. ' tarif' → logprob: -5.035921096801758
    5. ' price' → logprob: -8.160921096801758
    6. ' ' → logprob: -8.660921096801758
    7. 'co' → logprob: -9.410921096801758
    8. ' co' → logprob: -9.660921096801758
    9. ' code' → logprob: -9.785921096801758
    10. ' tarifs' → logprob: -9.910921096801758

Token 83: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02705058827996254
    2. 's' → logprob: -4.777050495147705
    3. '<|end|>' → logprob: -5.402050495147705
    4. ' =' → logprob: -5.902050495147705
    5. ' ' → logprob: -5.902050495147705
    6. ',' → logprob: -6.277050495147705
    7. '=' → logprob: -6.777050495147705
    8. '_space' → logprob: -7.277050495147705
    9. '_s' → logprob: -7.402050495147705
    10. ' _' → logprob: -7.777050495147705

Token 84: 'itaire' (ID: 28335)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.1832367330789566
    2. ' ' → logprob: -3.308236837387085
    3. 'itaire' → logprob: -3.683236837387085
    4. ' 
' → logprob: -3.808236837387085
    5. '  
' → logprob: -3.808236837387085
    6. ' ' → logprob: -4.558236598968506
    7. 'ière' → logprob: -4.683236598968506
    8. 'ier' → logprob: -5.183236598968506
    9. 'i' → logprob: -5.433236598968506
    10. 'u' → logprob: -5.808236598968506

Token 85: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3445403575897217
    2. '<|end|>' → logprob: -1.5945403575897217
    3. ' par' → logprob: -1.7195403575897217
    4. ' ' → logprob: -2.4695403575897217
    5. ',' → logprob: -2.7195403575897217
    6. '_' → logprob: -3.0945403575897217
    7. ' ,' → logprob: -3.3445403575897217
    8. '.' → logprob: -4.094540596008301
    9. '_s' → logprob: -4.094540596008301
    10. ' (' → logprob: -4.094540596008301

Token 86: ' sac' (ID: 10672)
  Prédit: ' sac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sac' → logprob: -0.5144291520118713
    2. 's' → logprob: -1.1394290924072266
    3. ' ' → logprob: -2.8894290924072266
    4. ' lot' → logprob: -4.639429092407227
    5. ' ' → logprob: -4.764429092407227
    6. 'lot' → logprob: -6.764429092407227
    7. ' kg' → logprob: -7.576929092407227
    8. ' s' → logprob: -7.639429092407227
    9. ' sacs' → logprob: -7.701929092407227
    10. '	s' → logprob: -8.076929092407227

Token 87: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15667402744293213
    2. 's' → logprob: -2.4066739082336426
    3. '
' → logprob: -4.156673908233643
    4. 'import' → logprob: -4.656673908233643
    5. ',' → logprob: -5.281673908233643
    6. '

' → logprob: -5.781673908233643
    7. ' ' → logprob: -5.781673908233643
    8. '\' → logprob: -6.031673908233643
    9. 'def' → logprob: -6.031673908233643
    10. ':' → logprob: -6.531673908233643

Token 88: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.047024428844451904
    2. 's' → logprob: -4.047024250030518
    3. '
' → logprob: -4.422024250030518
    4. ',' → logprob: -5.797024250030518
    5. 'import' → logprob: -5.922024250030518
    6. '\' → logprob: -6.297024250030518
    7. ' ' → logprob: -6.297024250030518
    8. '```' → logprob: -6.422024250030518
    9. 'A' → logprob: -7.297024250030518
    10. '_' → logprob: -7.547024250030518

Token 89: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04292622208595276
    2. ' #' → logprob: -4.29292631149292
    3. 's' → logprob: -4.54292631149292
    4. ' ' → logprob: -4.54292631149292
    5. 'from' → logprob: -6.29292631149292
    6. 'import' → logprob: -6.66792631149292
    7. 'def' → logprob: -7.16792631149292
    8. '```' → logprob: -7.79292631149292
    9. '\' → logprob: -8.042925834655762
    10. ',' → logprob: -8.042925834655762

Token 90: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6906315088272095
    2. ' un' → logprob: -1.4406315088272095
    3. 'une' → logprob: -1.6906315088272095
    4. 'un' → logprob: -2.69063138961792
    5. ' des' → logprob: -4.81563138961792
    6. ' la' → logprob: -8.315631866455078
    7. 'le' → logprob: -8.440631866455078
    8. 'des' → logprob: -8.565631866455078
    9. '#' → logprob: -8.815631866455078
    10. ' le' → logprob: -8.815631866455078

Token 91: ' réduction' (ID: 89072)
  Prédit: ' remise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remise' → logprob: -0.8511012196540833
    2. 'rem' → logprob: -1.2261011600494385
    3. ' quantité' → logprob: -1.6011011600494385
    4. 'quant' → logprob: -3.7261011600494385
    5. ' réduction' → logprob: -4.101101398468018
    6. ' rem' → logprob: -4.726101398468018
    7. ' liste' → logprob: -5.101101398468018
    8. 'ré' → logprob: -5.726101398468018
    9. ' quant' → logprob: -5.851101398468018
    10. 're' → logprob: -6.476101398468018

Token 92: ' aplic' (ID: 12112)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16627688705921173
    2. 's' → logprob: -2.4162769317626953
    3. ' ,' → logprob: -3.9162769317626953
    4. ' :' → logprob: -4.666276931762695
    5. '_' → logprob: -4.791276931762695
    6. '.' → logprob: -5.041276931762695
    7. ',' → logprob: -5.666276931762695
    8. ' s' → logprob: -5.666276931762695
    9. ' =' → logprob: -5.916276931762695
    10. ':' → logprob: -6.791276931762695

Token 93: 'able' (ID: 562)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0753670185804367
    2. 't' → logprob: -4.200366973876953
    3. 'quée' → logprob: -4.450366973876953
    4. 'é' → logprob: -4.575366973876953
    5. 's' → logprob: -4.825366973876953
    6. 'a' → logprob: -4.825366973876953
    7. 'qu' → logprob: -4.950366973876953
    8. 'ée' → logprob: -5.325366973876953
    9. 'qué' → logprob: -6.575366973876953
    10. '#' → logprob: -7.075366973876953

Token 94: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15551327168941498
    2. ' ' → logprob: -2.405513286590576
    3. '.' → logprob: -3.530513286590576
    4. ' s' → logprob: -4.780513286590576
    5. ',' → logprob: -5.530513286590576
    6. ':' → logprob: -5.905513286590576
    7. 'es' → logprob: -6.655513286590576
    8. '#' → logprob: -6.905513286590576
    9. ' ,' → logprob: -7.030513286590576
    10. ' :' → logprob: -7.155513286590576

Token 95: ' lots' (ID: 10836)
  Prédit: ' lot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lot' → logprob: -0.19786636531352997
    2. ' lots' → logprob: -2.322866439819336
    3. 'lot' → logprob: -2.697866439819336
    4. 'lots' → logprob: -4.947866439819336
    5. ' ' → logprob: -6.322866439819336
    6. 's' → logprob: -6.822866439819336
    7. ' pack' → logprob: -7.072866439819336
    8. ' ' → logprob: -8.010366439819336
    9. ' sac' → logprob: -8.072866439819336
    10. ' n' → logprob: -8.385366439819336

Token 96: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6945205926895142
    2. '
' → logprob: -1.6945205926895142
    3. '#' → logprob: -2.5695204734802246
    4. ' ' → logprob: -2.6945204734802246
    5. ':' → logprob: -3.3195204734802246
    6. 'import' → logprob: -3.9445204734802246
    7. '

' → logprob: -3.9445204734802246
    8. 'def' → logprob: -4.069520473480225
    9. ',' → logprob: -4.194520473480225
    10. '_' → logprob: -4.444520473480225

Token 97: ' sacs' (ID: 150414)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31233495473861694
    2. '3' → logprob: -1.5623350143432617
    3. '4' → logprob: -3.8123350143432617
    4. '10' → logprob: -4.062335014343262
    5. '5' → logprob: -4.437335014343262
    6. '2' → logprob: -6.187335014343262
    7. '6' → logprob: -6.687335014343262
    8. 's' → logprob: -6.937335014343262
    9. ' trois' → logprob: -6.937335014343262
    10. ' n' → logprob: -7.687335014343262

Token 98: ' ache' (ID: 27427)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7464543581008911
    2. 's' → logprob: -1.1214543581008911
    3. ':' → logprob: -3.1214542388916016
    4. '

' → logprob: -3.7464542388916016
    5. ' ' → logprob: -3.7464542388916016
    6. '#' → logprob: -3.9964542388916016
    7. '```' → logprob: -3.9964542388916016
    8. 'def' → logprob: -4.371454238891602
    9. 'n' → logprob: -4.746454238891602
    10. ' 

' → logprob: -4.746454238891602

Token 99: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0008366696420125663
    2. 'ter' → logprob: -7.6258368492126465
    3. 'té' → logprob: -8.625836372375488
    4. 'tant' → logprob: -10.250836372375488
    5. 'tet' → logprob: -10.375836372375488
    6. 'te' → logprob: -10.500836372375488
    7. '``' → logprob: -11.125836372375488
    8. 'tables' → logprob: -12.125836372375488
    9. 'tes' → logprob: -12.250836372375488
    10. '#' → logprob: -12.375836372375488

Token 100: 'és' (ID: 1756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7648529410362244
    2. 'és' → logprob: -1.0148530006408691
    3. 'é' → logprob: -1.8898530006408691
    4. 'e' → logprob: -4.764853000640869
    5. 'ée' → logprob: -5.264853000640869
    6. 't' → logprob: -5.514853000640869
    7. '#' → logprob: -7.014853000640869
    8. 'r' → logprob: -7.889853000640869
    9. 'es' → logprob: -7.889853000640869
    10. '```' → logprob: -8.139852523803711

Token 101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5363417267799377
    2. '

' → logprob: -1.786341667175293
    3. 's' → logprob: -2.286341667175293
    4. 'import' → logprob: -3.036341667175293
    5. '#' → logprob: -3.536341667175293
    6. '
' → logprob: -3.661341667175293
    7. 'def' → logprob: -4.536341667175293
    8. '```' → logprob: -4.911341667175293
    9. ' 

' → logprob: -5.411341667175293
    10. ':' → logprob: -5.661341667175293

Token 102: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3361445367336273
    2. '#' → logprob: -2.46114444732666
    3. ':' → logprob: -2.46114444732666
    4. '

' → logprob: -3.08614444732666
    5. 's' → logprob: -4.33614444732666
    6. '
' → logprob: -4.58614444732666
    7. '' → logprob: -4.71114444732666
    8. '\' → logprob: -4.83614444732666
    9. 'def' → logprob: -5.58614444732666
    10. ' 

' → logprob: -5.71114444732666

Token 103: ' Mé' (ID: 23435)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5160802602767944
    2. 'd' → logprob: -1.7660802602767944
    3. 'def' → logprob: -2.391080379486084
    4. ' 
' → logprob: -2.641080379486084
    5. ' ' → logprob: -3.641080379486084
    6. '
' → logprob: -4.516080379486084
    7. 'import' → logprob: -4.641080379486084
    8. ' 

' → logprob: -4.766080379486084
    9. 'n' → logprob: -5.891080379486084
    10. ' #' → logprob: -6.516080379486084

Token 104: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.0740126222372055
    2. 't' → logprob: -3.449012517929077
    3. 'm' → logprob: -3.949012517929077
    4. 'tho' → logprob: -4.824012756347656
    5. 'mo' → logprob: -4.824012756347656
    6. 'moire' → logprob: -6.199012756347656
    7. '#' → logprob: -7.699012756347656
    8. '```' → logprob: -7.824012756347656
    9. 'thor' → logprob: -8.324012756347656
    10. 'ti' → logprob: -8.949012756347656

Token 105: 'ode' (ID: 676)
  Prédit: 'ode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.017394371330738068
    2. 'o' → logprob: -4.642394542694092
    3. 'od' → logprob: -4.892394542694092
    4. '#' → logprob: -9.767394065856934
    5. 'odes' → logprob: -11.392394065856934
    6. 'odule' → logprob: -11.767394065856934
    7. '```' → logprob: -11.767394065856934
    8. 'odel' → logprob: -12.142394065856934
    9. 'odo' → logprob: -12.142394065856934
    10. 'a' → logprob: -12.267394065856934

Token 106: ' proposée' (ID: 185169)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7387385368347168
    2. 'def' → logprob: -0.7387385368347168
    3. ' de' → logprob: -4.488738536834717
    4. ':' → logprob: -4.738738536834717
    5. ' =' → logprob: -4.863738536834717
    6. ' d' → logprob: -5.363738536834717
    7. 'import' → logprob: -6.113738536834717
    8. ' :' → logprob: -6.238738536834717
    9. 's' → logprob: -6.363738536834717
    10. ' dfs' → logprob: -6.863738536834717

Token 107: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6052262187004089
    2. ' :' → logprob: -1.2302262783050537
    3. ' def' → logprob: -2.6052262783050537
    4. ':' → logprob: -2.7302262783050537
    5. ' ' → logprob: -4.230226039886475
    6. 'd' → logprob: -5.980226039886475
    7. ' 
' → logprob: -6.480226039886475
    8. ' :
' → logprob: -7.230226039886475
    9. '```' → logprob: -7.480226039886475
    10. '#' → logprob: -7.730226039886475

Token 108: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24207383394241333
    2. ' def' → logprob: -2.2420737743377686
    3. 'from' → logprob: -2.9920737743377686
    4. 'import' → logprob: -3.7420737743377686
    5. ' from' → logprob: -4.367074012756348
    6. ' import' → logprob: -4.367074012756348
    7. '#' → logprob: -4.742074012756348
    8. ' #' → logprob: -7.992074012756348
    9. ' dynamic' → logprob: -9.367074012756348
    10. 'd' → logprob: -9.617074012756348

Token 109: ' Puis' (ID: 87717)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5834020376205444
    2. 'def' → logprob: -1.4584020376205444
    3. ' from' → logprob: -2.708402156829834
    4. ' import' → logprob: -2.708402156829834
    5. 'from' → logprob: -2.958402156829834
    6. 'import' → logprob: -4.333402156829834
    7. '#' → logprob: -5.708402156829834
    8. ' Util' → logprob: -5.708402156829834
    9. 'Util' → logprob: -6.958402156829834
    10. ' #' → logprob: -7.208402156829834

Token 110: 'qu' (ID: 351)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.6153071522712708
    2. '#' → logprob: -1.115307092666626
    3. 's' → logprob: -2.240307092666626
    4. 'qu' → logprob: -5.115307331085205
    5. '-' → logprob: -5.365307331085205
    6. 'su' → logprob: -5.365307331085205
    7. '```' → logprob: -6.240307331085205
    8. 'e' → logprob: -6.740307331085205
    9. 'u' → logprob: -6.990307331085205
    10. 'se' → logprob: -7.365307331085205

Token 111: ''on' (ID: 25812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6922836899757385
    2. 'u' → logprob: -1.3172836303710938
    3. 'que' → logprob: -1.8172836303710938
    4. ''' → logprob: -3.8172836303710938
    5. 'qu' → logprob: -3.8172836303710938
    6. ''u' → logprob: -5.067283630371094
    7. 'ue' → logprob: -5.442283630371094
    8. '```' → logprob: -6.192283630371094
    9. ' ' → logprob: -6.442283630371094
    10. '
' → logprob: -6.567283630371094

Token 112: ' doit' (ID: 21822)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8076758980751038
    2. 'a' → logprob: -1.182675838470459
    3. ' veut' → logprob: -2.682675838470459
    4. ' n' → logprob: -3.057675838470459
    5. ' doit' → logprob: -3.807675838470459
    6. ' travaille' → logprob: -3.932675838470459
    7. ' va' → logprob: -4.557675838470459
    8. ' ne' → logprob: -4.807675838470459
    9. ' dispose' → logprob: -4.932675838470459
    10. 'n' → logprob: -5.057675838470459

Token 113: ' trouver' (ID: 23195)
  Prédit: ' tester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tester' → logprob: -0.30333611369132996
    2. ' trouver' → logprob: -3.1783361434936523
    3. ' déterminer' → logprob: -3.3033361434936523
    4. ' calcul' → logprob: -3.3033361434936523
    5. ' essayer' → logprob: -3.5533361434936523
    6. ' parcour' → logprob: -3.6783361434936523
    7. ' explorer' → logprob: -3.9283361434936523
    8. ' acheter' → logprob: -4.053336143493652
    9. ' vérifier' → logprob: -5.053336143493652
    10. ' chercher' → logprob: -5.053336143493652

Token 114: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.137634739279747
    2. ' le' → logprob: -2.387634754180908
    3. ' l' → logprob: -3.887634754180908
    4. ' une' → logprob: -4.887634754180908
    5. ' toutes' → logprob: -6.137634754180908
    6. ' ' → logprob: -6.262634754180908
    7. ' un' → logprob: -6.387634754180908
    8. ' ' → logprob: -6.512634754180908
    9. ' exactement' → logprob: -8.38763427734375
    10. 'la' → logprob: -8.38763427734375

Token 115: ' combinaison' (ID: 165933)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -1.076120376586914
    2. 'comb' → logprob: -1.451120376586914
    3. ' combinaison' → logprob: -1.701120376586914
    4. ' solution' → logprob: -1.701120376586914
    5. 'quant' → logprob: -3.951120376586914
    6. 'solution' → logprob: -4.076120376586914
    7. ' comb' → logprob: -4.576120376586914
    8. 'com' → logprob: -5.701120376586914
    9. ' meilleure' → logprob: -5.701120376586914
    10. 'me' → logprob: -6.451120376586914

Token 116: ' minimale' (ID: 143217)
  Prédit: ' optimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -0.027932247146964073
    2. ' de' → logprob: -3.7779321670532227
    3. ' ' → logprob: -6.527932167053223
    4. ' exacte' → logprob: -6.902932167053223
    5. ' optimal' → logprob: -7.527932167053223
    6. ' complète' → logprob: -8.277932167053223
    7. ' gagn' → logprob: -8.277932167053223
    8. ' optim' → logprob: -8.402932167053223
    9. ' parfaite' → logprob: -8.652932167053223
    10. ' d' → logprob: -8.777932167053223

Token 117: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.013805683702230453
    2. 'de' → logprob: -5.513805866241455
    3. ' d' → logprob: -5.888805866241455
    4. ' ' → logprob: -6.388805866241455
    5. ' qui' → logprob: -6.513805866241455
    6. ' pour' → logprob: -6.763805866241455
    7. ' possible' → logprob: -6.888805866241455
    8. ' optimale' → logprob: -7.263805866241455
    9. ' des' → logprob: -7.888805866241455
    10. ' en' → logprob: -9.763805389404297

Token 118: ' sacs' (ID: 150414)
  Prédit: ' sacs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sacs' → logprob: -0.18161430954933167
    2. 's' → logprob: -1.9316142797470093
    3. ' achats' → logprob: -4.431614398956299
    4. 'ach' → logprob: -5.556614398956299
    5. ' sac' → logprob: -6.306614398956299
    6. ' quant' → logprob: -7.556614398956299
    7. ' lots' → logprob: -7.681614398956299
    8. 'quant' → logprob: -7.806614398956299
    9. 'p' → logprob: -7.806614398956299
    10. ' achat' → logprob: -8.43161392211914

Token 119: ' dont' (ID: 11562)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.3585376739501953
    2. ' pour' → logprob: -1.3585376739501953
    3. ' entre' → logprob: -1.7335376739501953
    4. ' de' → logprob: -2.3585376739501953
    5. ' ' → logprob: -2.7335376739501953
    6. ' ache' → logprob: -2.8585376739501953
    7. ' possible' → logprob: -3.2335376739501953
    8. 'pour' → logprob: -4.983537673950195
    9. 'de' → logprob: -5.358537673950195
    10. ' possibles' → logprob: -5.608537673950195

Token 120: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4756070375442505
    2. ' la' → logprob: -1.1006070375442505
    3. 'le' → logprob: -4.225606918334961
    4. 'l' → logprob: -4.600606918334961
    5. ' le' → logprob: -5.225606918334961
    6. 's' → logprob: -5.350606918334961
    7. 'les' → logprob: -5.725606918334961
    8. ' les' → logprob: -6.100606918334961
    9. ' ' → logprob: -6.475606918334961
    10. ' l' → logprob: -6.600606918334961

Token 121: ' somme' (ID: 64484)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.8466353416442871
    2. ' somme' → logprob: -1.096635341644287
    3. 'quant' → logprob: -1.846635341644287
    4. 's' → logprob: -3.346635341644287
    5. ' quant' → logprob: -3.346635341644287
    6. 'tail' → logprob: -5.971635341644287
    7. 'som' → logprob: -6.596635341644287
    8. ' taille' → logprob: -6.721635341644287
    9. ' som' → logprob: -7.221635341644287
    10. '#' → logprob: -7.971635341644287

Token 122: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3538776636123657
    2. ' ' → logprob: -1.8538776636123657
    3. ' de' → logprob: -2.978877544403076
    4. ' =' → logprob: -3.478877544403076
    5. ' est' → logprob: -3.978877544403076
    6. ' vaut' → logprob: -4.353877544403076
    7. ' d' → logprob: -4.978877544403076
    8. '=' → logprob: -5.853877544403076
    9. 'des' → logprob: -6.103877544403076
    10. ' ég' → logprob: -6.353877544403076

Token 123: ' quant' (ID: 8237)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.055963870137929916
    2. ' quant' → logprob: -2.9309637546539307
    3. ' volumes' → logprob: -7.30596399307251
    4. '_quant' → logprob: -8.930963516235352
    5. ' quantities' → logprob: -9.305963516235352
    6. ' quantité' → logprob: -9.805963516235352
    7. ' prix' → logprob: -10.555963516235352
    8. 'prix' → logprob: -10.555963516235352
    9. ' tailles' → logprob: -10.930963516235352
    10. ' achats' → logprob: -11.805963516235352

Token 124: 'ités' (ID: 12479)
  Prédit: 'ités'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ités' → logprob: -0.006429840810596943
    2. 'ité' → logprob: -5.131429672241211
    3. 'it' → logprob: -8.506429672241211
    4. 'iti' → logprob: -8.756429672241211
    5. '#' → logprob: -10.006429672241211
    6. 'ities' → logprob: -10.631429672241211
    7. 'ites' → logprob: -11.381429672241211
    8. 'i' → logprob: -11.506429672241211
    9. '```' → logprob: -11.506429672241211
    10. 'és' → logprob: -12.256429672241211

Token 125: ' fait' (ID: 7473)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7369638085365295
    2. ' ache' → logprob: -1.3619637489318848
    3. ' de' → logprob: -2.9869637489318848
    4. 'de' → logprob: -3.4869637489318848
    5. ' des' → logprob: -3.4869637489318848
    6. 'd' → logprob: -3.8619637489318848
    7. ' d' → logprob: -3.9869637489318848
    8. 'ach' → logprob: -4.111963748931885
    9. ' vaut' → logprob: -4.111963748931885
    10. ' ' → logprob: -4.361963748931885

Token 126: ' exactement' (ID: 108701)
  Prédit: ' exactement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactement' → logprob: -0.45369642972946167
    2. ' ' → logprob: -2.0786964893341064
    3. ' au' → logprob: -2.0786964893341064
    4. 'exact' → logprob: -2.8286964893341064
    5. ' exact' → logprob: -3.9536964893341064
    6. ' exactly' → logprob: -4.328696250915527
    7. 'au' → logprob: -4.953696250915527
    8. ' égal' → logprob: -5.703696250915527
    9. ' =' → logprob: -5.953696250915527
    10. ' le' → logprob: -6.328696250915527

Token 127: '
' (ID: 198)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3630422353744507
    2. ' l' → logprob: -2.3630423545837402
    3. ' le' → logprob: -2.3630423545837402
    4. ' ég' → logprob: -3.3630423545837402
    5. ' q' → logprob: -3.9880423545837402
    6. ' ' → logprob: -4.36304235458374
    7. ' égal' → logprob: -4.73804235458374
    8. 'l' → logprob: -4.86304235458374
    9. 'le' → logprob: -4.86304235458374
    10. 'la' → logprob: -4.98804235458374

Token 128: '#' (ID: 2)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9669875502586365
    2. ' le' → logprob: -1.7169876098632812
    3. ' ' → logprob: -1.9669876098632812
    4. ' ég' → logprob: -2.0919876098632812
    5. ' l' → logprob: -2.2169876098632812
    6. ' au' → logprob: -3.9669876098632812
    7. 'le' → logprob: -4.341987609863281
    8. ' exactement' → logprob: -4.841987609863281
    9. 'au' → logprob: -5.216987609863281
    10. ' égal' → logprob: -5.216987609863281

Token 129: ' a' (ID: 261)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.24863772094249725
    2. ' le' → logprob: -2.8736376762390137
    3. 'la' → logprob: -3.1236376762390137
    4. ' q' → logprob: -3.2486376762390137
    5. 'le' → logprob: -4.373637676239014
    6. 'q' → logprob: -4.498637676239014
    7. ' celle' → logprob: -4.873637676239014
    8. ' l' → logprob: -4.998637676239014
    9. ' n' → logprob: -5.123637676239014
    10. 'l' → logprob: -5.123637676239014

Token 130: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7033799290657043
    2. 't' → logprob: -0.9533799290657043
    3. 'tt' → logprob: -3.3283798694610596
    4. 'ug' → logprob: -4.078380107879639
    5. 'tte' → logprob: -4.828380107879639
    6. 's' → logprob: -4.953380107879639
    7. 'c' → logprob: -5.078380107879639
    8. 'ux' → logprob: -5.203380107879639
    9. 'vec' → logprob: -5.203380107879639
    10. ' ég' → logprob: -5.328380107879639

Token 131: ' avec' (ID: 3937)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.05640563741326332
    2. ' ' → logprob: -3.681405544281006
    3. ' ' → logprob: -4.931405544281006
    4. ' il' → logprob: -5.056405544281006
    5. '#' → logprob: -5.431405544281006
    6. ' a' → logprob: -5.806405544281006
    7. ' #' → logprob: -5.931405544281006
    8. ' je' → logprob: -7.056405544281006
    9. ',' → logprob: -7.306405544281006
    10. ' n' → logprob: -7.556405544281006

Token 132: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.13155093789100647
    2. ' les' → logprob: -3.1315510272979736
    3. 'des' → logprob: -3.2565510272979736
    4. 'a' → logprob: -4.3815507888793945
    5. ' un' → logprob: -4.8815507888793945
    6. ' a' → logprob: -5.7565507888793945
    7. ' une' → logprob: -6.1315507888793945
    8. ' trois' → logprob: -6.2565507888793945
    9. 'les' → logprob: -6.2565507888793945
    10. 'diff' → logprob: -6.6315507888793945

Token 133: ' rem' (ID: 1662)
  Prédit: ' sacs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sacs' → logprob: -0.4626016318798065
    2. ' coûts' → logprob: -2.462601661682129
    3. 's' → logprob: -2.712601661682129
    4. ' prix' → logprob: -2.962601661682129
    5. 'quant' → logprob: -3.462601661682129
    6. ' achats' → logprob: -3.962601661682129
    7. ' sac' → logprob: -4.337601661682129
    8. ' lots' → logprob: -4.712601661682129
    9. 'prix' → logprob: -4.837601661682129
    10. ' quant' → logprob: -4.962601661682129

Token 134: 'ises' (ID: 5555)
  Prédit: 'ises'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ises' → logprob: -0.31154704093933105
    2. 'is' → logprob: -1.811547040939331
    3. 'pl' → logprob: -4.18654727935791
    4. 'ets' → logprob: -4.68654727935791
    5. 'du' → logprob: -5.06154727935791
    6. 'e' → logprob: -5.18654727935791
    7. 'i' → logprob: -5.18654727935791
    8. 'p' → logprob: -5.43654727935791
    9. 'ise' → logprob: -5.56154727935791
    10. '#' → logprob: -5.68654727935791

Token 135: ' appli' (ID: 25550)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20382079482078552
    2. ' sur' → logprob: -2.8288207054138184
    3. ' par' → logprob: -2.9538207054138184
    4. ' possibles' → logprob: -4.453820705413818
    5. ' ,' → logprob: -4.703820705413818
    6. ' appli' → logprob: -4.828820705413818
    7. 'ap' → logprob: -5.078820705413818
    8. 'sur' → logprob: -5.078820705413818
    9. 'import' → logprob: -5.828820705413818
    10. ' de' → logprob: -5.953820705413818

Token 136: 'quées' (ID: 111264)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0209139585494995
    2. 'u' → logprob: -1.7709139585494995
    3. 'quées' → logprob: -1.8959139585494995
    4. 'qu' → logprob: -2.020914077758789
    5. 'es' → logprob: -3.020914077758789
    6. 's' → logprob: -3.645914077758789
    7. ' qu' → logprob: -4.395914077758789
    8. 'quée' → logprob: -4.395914077758789
    9. 'ques' → logprob: -4.520914077758789
    10. ' à' → logprob: -4.645914077758789

Token 137: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10118894279003143
    2. ' sur' → logprob: -2.976188898086548
    3. ' ,' → logprob: -3.601188898086548
    4. ' à' → logprob: -5.726189136505127
    5. ' au' → logprob: -5.851189136505127
    6. ' pour' → logprob: -5.976189136505127
    7. 'sur' → logprob: -5.976189136505127
    8. ' en' → logprob: -6.351189136505127
    9. 's' → logprob: -6.851189136505127
    10. '.' → logprob: -6.976189136505127

Token 138: ' certains' (ID: 30681)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5749149918556213
    2. 'les' → logprob: -1.6999149322509766
    3. ' des' → logprob: -1.9499149322509766
    4. 'l' → logprob: -3.0749149322509766
    5. ' l' → logprob: -4.074914932250977
    6. ' certains' → logprob: -4.074914932250977
    7. ' chaque' → logprob: -4.949914932250977
    8. ' le' → logprob: -5.449914932250977
    9. 'lots' → logprob: -5.574914932250977
    10. 'des' → logprob: -5.824914932250977

Token 139: ' multiples' (ID: 70720)
  Prédit: ' lots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lots' → logprob: -0.4441809058189392
    2. 'lots' → logprob: -1.194180965423584
    3. 'ach' → logprob: -4.319180965423584
    4. ' achats' → logprob: -4.569180965423584
    5. 's' → logprob: -4.819180965423584
    6. ' sacs' → logprob: -5.069180965423584
    7. ' nombres' → logprob: -5.944180965423584
    8. 'lot' → logprob: -6.194180965423584
    9. ' lot' → logprob: -6.444180965423584
    10. 'types' → logprob: -6.944180965423584

Token 140: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24278563261032104
    2. 'de' → logprob: -2.617785692214966
    3. ' d' → logprob: -2.617785692214966
    4. ',' → logprob: -3.992785692214966
    5. ' ,' → logprob: -4.117785453796387
    6. 's' → logprob: -4.242785453796387
    7. 'd' → logprob: -4.992785453796387
    8. ' des' → logprob: -6.117785453796387
    9. '_de' → logprob: -6.742785453796387
    10. 'n' → logprob: -6.742785453796387

Token 141: '’' (ID: 438)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.17366383969783783
    2. ''achat' → logprob: -2.798663854598999
    3. ''' → logprob: -3.423663854598999
    4. 's' → logprob: -3.923663854598999
    5. 'u' → logprob: -4.29866361618042
    6. 'es' → logprob: -4.54866361618042
    7. 'a' → logprob: -5.04866361618042
    8. ' sacs' → logprob: -5.67366361618042
    9. '’achat' → logprob: -5.92366361618042
    10. 'ach' → logprob: -6.54866361618042

Token 142: 'unit' (ID: 5400)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.086284875869751
    2. 's' → logprob: -1.336284875869751
    3. 'ach' → logprob: -2.211284875869751
    4. 'e' → logprob: -2.711284875869751
    5. ''achat' → logprob: -2.836284875869751
    6. ' sacs' → logprob: -3.086284875869751
    7. 'achat' → logprob: -3.461284875869751
    8. 'u' → logprob: -3.586284875869751
    9. ''' → logprob: -3.836284875869751
    10. '’achat' → logprob: -4.586284637451172

Token 143: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0030239408370107412
    2. 'é' → logprob: -6.003024101257324
    3. 'es' → logprob: -8.628024101257324
    4. 'a' → logprob: -8.878024101257324
    5. 'aires' → logprob: -9.003024101257324
    6. 'á' → logprob: -11.003024101257324
    7. 'ées' → logprob: -11.503024101257324
    8. '```' → logprob: -11.503024101257324
    9. 'à' → logprob: -11.753024101257324
    10. '#' → logprob: -11.753024101257324

Token 144: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019639072939753532
    2. ' ,' → logprob: -4.144639015197754
    3. ',
' → logprob: -7.019639015197754
    4. '.' → logprob: -7.269639015197754
    5. 's' → logprob: -7.394639015197754
    6. '#' → logprob: -7.644639015197754
    7. 'def' → logprob: -8.269639015197754
    8. ' de' → logprob: -8.644639015197754
    9. ' (' → logprob: -9.519639015197754
    10. 'de' → logprob: -9.644639015197754

Token 145: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09117435663938522
    2. 'def' → logprob: -3.216174364089966
    3. ' on' → logprob: -3.341174364089966
    4. ' #' → logprob: -6.216174125671387
    5. 'n' → logprob: -6.341174125671387
    6. ' je' → logprob: -6.466174125671387
    7. ' il' → logprob: -6.466174125671387
    8. 'on' → logprob: -6.966174125671387
    9. 'import' → logprob: -6.966174125671387
    10. 'a' → logprob: -7.716174125671387

Token 146: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35901209712028503
    2. ' on' → logprob: -1.6090121269226074
    3. 'def' → logprob: -3.1090121269226074
    4. 'import' → logprob: -3.6090121269226074
    5. 'from' → logprob: -4.359012126922607
    6. 'on' → logprob: -5.359012126922607
    7. ' il' → logprob: -5.359012126922607
    8. ' #' → logprob: -5.609012126922607
    9. ' from' → logprob: -6.609012126922607
    10. ' import' → logprob: -7.359012126922607

Token 147: ' peut' (ID: 9216)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.769899308681488
    2. ' peut' → logprob: -0.769899308681488
    3. '_' → logprob: -3.394899368286133
    4. ' pourra' → logprob: -4.269899368286133
    5. ' utilis' → logprob: -5.519899368286133
    6. ' utilise' → logprob: -5.769899368286133
    7. ' ' → logprob: -6.019899368286133
    8. ' peux' → logprob: -6.144899368286133
    9. ' doit' → logprob: -6.394899368286133
    10. ' pourrait' → logprob: -6.394899368286133

Token 148: ' faire' (ID: 8119)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.017735334113240242
    2. 'util' → logprob: -4.267735481262207
    3. ' ab' → logprob: -6.767735481262207
    4. ' appliquer' → logprob: -7.892735481262207
    5. ' mod' → logprob: -8.017735481262207
    6. ' résoudre' → logprob: -8.392735481262207
    7. 'impl' → logprob: -8.517735481262207
    8. ' continuer' → logprob: -8.642735481262207
    9. ''utiliser' → logprob: -8.892735481262207
    10. ' envis' → logprob: -9.142735481262207

Token 149: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.15964537858963013
    2. ' un' → logprob: -2.5346453189849854
    3. 'une' → logprob: -3.4096453189849854
    4. 'un' → logprob: -3.7846453189849854
    5. ' appel' → logprob: -5.0346455574035645
    6. 'appel' → logprob: -6.4096455574035645
    7. ' de' → logprob: -6.7846455574035645
    8. ' du' → logprob: -6.7846455574035645
    9. '```' → logprob: -6.7846455574035645
    10. 'a' → logprob: -8.534645080566406

Token 150: ' parcours' (ID: 62625)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5431017875671387
    2. 'program' → logprob: -1.5431017875671387
    3. ' program' → logprob: -1.9181017875671387
    4. ' dynamic' → logprob: -2.0431017875671387
    5. 'import' → logprob: -2.2931017875671387
    6. 'dp' → logprob: -3.4181017875671387
    7. ' programme' → logprob: -3.9181017875671387
    8. 'dynamic' → logprob: -3.9181017875671387
    9. '```' → logprob: -4.168101787567139
    10. 'programme' → logprob: -4.418101787567139

Token 151: ' sur' (ID: 1512)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.2508882284164429
    2. ' dynamique' → logprob: -1.6258882284164429
    3. '_' → logprob: -1.8758882284164429
    4. 'd' → logprob: -2.1258883476257324
    5. ' dynamic' → logprob: -2.2508883476257324
    6. ' ' → logprob: -2.8758883476257324
    7. ' complet' → logprob: -3.3758883476257324
    8. ' d' → logprob: -3.7508883476257324
    9. ' à' → logprob: -5.125888347625732
    10. ' de' → logprob: -5.375888347625732

Token 152: ' toutes' (ID: 17502)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.694347620010376
    2. ' la' → logprob: -1.694347620010376
    3. ' ' → logprob: -2.194347620010376
    4. ' a' → logprob: -2.694347620010376
    5. 'a' → logprob: -3.444347620010376
    6. ' les' → logprob: -3.569347620010376
    7. 'l' → logprob: -4.069347381591797
    8. ' toutes' → logprob: -4.194347381591797
    9. ' range' → logprob: -4.319347381591797
    10. ' tous' → logprob: -4.819347381591797

Token 153: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.02981378696858883
    2. ' ' → logprob: -4.279813766479492
    3. 'les' → logprob: -4.779813766479492
    4. ' possible' → logprob: -6.029813766479492
    5. ' ' → logprob: -6.529813766479492
    6. ' comb' → logprob: -6.779813766479492
    7. ' combinations' → logprob: -7.904813766479492
    8. ' l' → logprob: -8.029813766479492
    9. ' possibles' → logprob: -8.279813766479492
    10. '_' → logprob: -8.779813766479492

Token 154: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.8066139817237854
    2. 'comb' → logprob: -0.8066139817237854
    3. 'quant' → logprob: -2.6816139221191406
    4. 'poss' → logprob: -4.306613922119141
    5. 'com' → logprob: -4.431613922119141
    6. ' quant' → logprob: -5.181613922119141
    7. ' possibilités' → logprob: -6.181613922119141
    8. ' ' → logprob: -6.806613922119141
    9. ' combinations' → logprob: -6.931613922119141
    10. 'possible' → logprob: -7.556613922119141

Token 155: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.0073918793350458145
    2. 'ina' → logprob: -5.757391929626465
    3. 'in' → logprob: -6.632391929626465
    4. 'i' → logprob: -7.132391929626465
    5. 'inas' → logprob: -7.382391929626465
    6. '#' → logprob: -7.757391929626465
    7. '```' → logprob: -7.757391929626465
    8. 'inations' → logprob: -8.257391929626465
    9. 'is' → logprob: -9.007391929626465
    10. '``' → logprob: -10.632391929626465

Token 156: 'ons' (ID: 1808)
  Prédit: 'ais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ais' → logprob: -0.8142032623291016
    2. 'ations' → logprob: -1.0642032623291016
    3. 'a' → logprob: -1.8142032623291016
    4. 't' → logprob: -3.8142032623291016
    5. 's' → logprob: -4.939203262329102
    6. 'ons' → logprob: -5.189203262329102
    7. '#' → logprob: -5.814203262329102
    8. 'at' → logprob: -6.064203262329102
    9. 'ai' → logprob: -6.314203262329102
    10. 'ats' → logprob: -6.439203262329102

Token 157: ' possibles' (ID: 97753)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5659614205360413
    2. ' possibles' → logprob: -1.6909613609313965
    3. ' ' → logprob: -2.6909613609313965
    4. ' ,' → logprob: -2.9409613609313965
    5. 'possible' → logprob: -3.5659613609313965
    6. ',' → logprob: -3.8159613609313965
    7. '.' → logprob: -4.0659613609313965
    8. ' :' → logprob: -4.4409613609313965
    9. '_possible' → logprob: -4.6909613609313965
    10. ' de' → logprob: -5.1909613609313965

Token 158: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0385125875473022
    2. ':' → logprob: -1.6635125875473022
    3. '.' → logprob: -1.9135125875473022
    4. ' :' → logprob: -2.413512706756592
    5. 'import' → logprob: -3.038512706756592
    6. ' ' → logprob: -3.288512706756592
    7. ' ,' → logprob: -3.413512706756592
    8. 'a' → logprob: -3.913512706756592
    9. '#' → logprob: -4.163512706756592
    10. ' (' → logprob: -4.663512706756592

Token 159: ' sacs' (ID: 150414)
  Prédit: ' sacs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sacs' → logprob: -0.11492478102445602
    2. 's' → logprob: -2.989924669265747
    3. 'quant' → logprob: -4.239924907684326
    4. ' achats' → logprob: -4.864924907684326
    5. ' nombres' → logprob: -4.989924907684326
    6. ' ' → logprob: -5.364924907684326
    7. ' quant' → logprob: -5.614924907684326
    8. ' sac' → logprob: -5.614924907684326
    9. ' (' → logprob: -6.239924907684326
    10. 'nombre' → logprob: -6.364924907684326

Token 160: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.4373232126235962
    2. ',' → logprob: -1.8123232126235962
    3. 'A' → logprob: -1.9373232126235962
    4. ' A' → logprob: -1.9373232126235962
    5. ' ' → logprob: -2.6873230934143066
    6. ' ,' → logprob: -2.6873230934143066
    7. ' a' → logprob: -3.1873230934143066
    8. 'a' → logprob: -3.6873230934143066
    9. ' de' → logprob: -3.6873230934143066
    10. ' possible' → logprob: -4.062323093414307

Token 161: 'na' (ID: 1503)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9094722867012024
    2. ' A' → logprob: -1.1594722270965576
    3. ')' → logprob: -2.1594722270965576
    4. ' de' → logprob: -2.4094722270965576
    5. ' )' → logprob: -3.4094722270965576
    6. ' ' → logprob: -4.284472465515137
    7. ' (' → logprob: -5.659472465515137
    8. ' pour' → logprob: -5.659472465515137
    9. ' ,' → logprob: -6.034472465515137
    10. ',' → logprob: -6.034472465515137

Token 162: 'ï' (ID: 9954)
  Prédit: 'ï'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ï' → logprob: -0.04919084161520004
    2. 't' → logprob: -3.5491907596588135
    3. 'ive' → logprob: -4.174190998077393
    4. 'if' → logprob: -6.674190998077393
    5. 'ı' → logprob: -7.424190998077393
    6. '#' → logprob: -8.049190521240234
    7. 'x' → logprob: -8.424190521240234
    8. 'î' → logprob: -8.424190521240234
    9. 'ivement' → logprob: -8.674190521240234
    10. 'Ï' → logprob: -8.799190521240234

Token 163: 'vement' (ID: 9725)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.021042782813310623
    2. 'vement' → logprob: -4.021042823791504
    3. '#' → logprob: -6.021042823791504
    4. '
' → logprob: -9.646042823791504
    5. 'vel' → logprob: -10.021042823791504
    6. '_' → logprob: -10.271042823791504
    7. '\' → logprob: -10.271042823791504
    8. 'v' → logprob: -10.396042823791504
    9. 'ves' → logprob: -10.521042823791504
    10. 'ive' → logprob: -10.646042823791504

Token 164: '),
' (ID: 2313)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.466827929019928
    2. ')' → logprob: -1.0918278694152832
    3. ' ' → logprob: -4.841827869415283
    4. ' ),' → logprob: -5.091827869415283
    5. ' pour' → logprob: -5.466827869415283
    6. ',' → logprob: -5.591827869415283
    7. ' jusqu' → logprob: -5.841827869415283
    8. ' ,' → logprob: -5.966827869415283
    9. '),' → logprob: -6.091827869415283
    10. ' en' → logprob: -6.966827869415283

Token 165: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1501702070236206
    2. '#' → logprob: -3.77517032623291
    3. ',' → logprob: -3.77517032623291
    4. 'for' → logprob: -4.27517032623291
    5. ' en' → logprob: -4.40017032623291
    6. ' ,' → logprob: -4.77517032623291
    7. ':' → logprob: -4.90017032623291
    8. 'a' → logprob: -5.02517032623291
    9. ' for' → logprob: -5.40017032623291
    10. ' ' → logprob: -5.77517032623291

Token 166: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4939197301864624
    2. ' en' → logprob: -1.7439197301864624
    3. 'for' → logprob: -2.993919849395752
    4. ' mais' → logprob: -3.743919849395752
    5. ' et' → logprob: -3.868919849395752
    6. ' #' → logprob: -3.868919849395752
    7. ' for' → logprob: -3.868919849395752
    8. ' ' → logprob: -4.243919849395752
    9. ' puis' → logprob: -4.493919849395752
    10. ' pour' → logprob: -4.868919849395752

Token 167: ' la' (ID: 557)
  Prédit: ' vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vu' → logprob: -0.6795150637626648
    2. ' ' → logprob: -2.3045151233673096
    3. ' cela' → logprob: -2.6795151233673096
    4. ' la' → logprob: -3.1795151233673096
    5. ' étant' → logprob: -3.1795151233673096
    6. ' le' → logprob: -3.3045151233673096
    7. ' pour' → logprob: -3.6795151233673096
    8. ' compte' → logprob: -3.6795151233673096
    9. ' l' → logprob: -4.1795148849487305
    10. ' ça' → logprob: -4.1795148849487305

Token 168: ' quantité' (ID: 89219)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1545372009277344
    2. ' solution' → logprob: -1.4045372009277344
    3. ' complex' → logprob: -2.0295372009277344
    4. ' quantité' → logprob: -3.1545372009277344
    5. ' meilleure' → logprob: -3.4045372009277344
    6. 'complex' → logprob: -3.5295372009277344
    7. ' #' → logprob: -3.5295372009277344
    8. ' combin' → logprob: -4.029537200927734
    9. ' limite' → logprob: -4.529537200927734
    10. ' complexity' → logprob: -4.779537200927734

Token 169: ' maximale' (ID: 76380)
  Prédit: ' totale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.7804784178733826
    2. ' a' → logprob: -1.7804784774780273
    3. ' maximale' → logprob: -2.4054784774780273
    4. ' de' → logprob: -2.4054784774780273
    5. ' demand' → logprob: -2.7804784774780273
    6. 'a' → logprob: -3.2804784774780273
    7. ' à' → logprob: -3.5304784774780273
    8. ' max' → logprob: -4.655478477478027
    9. ' est' → logprob: -4.780478477478027
    10. ' des' → logprob: -4.905478477478027

Token 170: ' est' (ID: 893)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9168562889099121
    2. ' a' → logprob: -1.416856288909912
    3. ' ' → logprob: -2.291856288909912
    4. ' à' → logprob: -2.791856288909912
    5. ' d' → logprob: -3.166856288909912
    6. 'a' → logprob: -3.416856288909912
    7. ' des' → logprob: -3.416856288909912
    8. ' est' → logprob: -3.541856288909912
    9. 'de' → logprob: -4.416856288909912
    10. ' possible' → logprob: -4.916856288909912

Token 171: ' ' (ID: 220)
  Prédit: ' relativement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' relativement' → logprob: -0.6279085874557495
    2. ' assez' → logprob: -2.127908706665039
    3. ' mod' → logprob: -2.377908706665039
    4. ' limitée' → logprob: -2.502908706665039
    5. ' ' → logprob: -3.502908706665039
    6. 'a' → logprob: -3.752908706665039
    7. ' raisonn' → logprob: -3.752908706665039
    8. ' faible' → logprob: -4.252908706665039
    9. ' a' → logprob: -4.377908706665039
    10. '100' → logprob: -4.627908706665039

Token 172: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5503528714179993
    2. '10' → logprob: -1.9253528118133545
    3. 'a' → logprob: -2.1753528118133545
    4. ' ' → logprob: -2.3003528118133545
    5. ' a' → logprob: -4.050353050231934
    6. '1' → logprob: -4.675353050231934
    7. '300' → logprob: -4.800353050231934
    8. '250' → logprob: -4.925353050231934
    9. '200' → logprob: -5.175353050231934
    10. '0' → logprob: -5.800353050231934

Token 173: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8309661149978638
    2. '.' → logprob: -1.0809661149978638
    3. '
' → logprob: -2.705965995788574
    4. '#' → logprob: -3.205965995788574
    5. 'a' → logprob: -3.955965995788574
    6. 's' → logprob: -4.080965995788574
    7. '0' → logprob: -4.205965995788574
    8. ' ,' → logprob: -4.205965995788574
    9. ',
' → logprob: -4.705965995788574
    10. '\' → logprob: -4.705965995788574

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.51861971616745
    2. ' ,' → logprob: -2.3936197757720947
    3. ' ' → logprob: -2.6436197757720947
    4. 'import' → logprob: -2.7686197757720947
    5. '
' → logprob: -2.8936197757720947
    6. '#' → logprob: -3.3936197757720947
    7. '.' → logprob: -3.8936197757720947
    8. '0' → logprob: -4.143619537353516
    9. 's' → logprob: -4.643619537353516
    10. ',
' → logprob: -4.893619537353516

Token 175: ' on' (ID: 402)
  Prédit: ' donc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.5771340131759644
    2. ' ce' → logprob: -1.0771340131759644
    3. ' on' → logprob: -2.952134132385254
    4. ' il' → logprob: -4.202134132385254
    5. ' et' → logprob: -4.202134132385254
    6. ' ' → logprob: -6.202134132385254
    7. ' ' → logprob: -6.452134132385254
    8. ' qui' → logprob: -6.452134132385254
    9. ' car' → logprob: -6.452134132385254
    10. ' je' → logprob: -6.577134132385254

Token 176: ' peut' (ID: 9216)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8079089522361755
    2. ' '' → logprob: -1.6829090118408203
    3. ' ne' → logprob: -2.3079090118408203
    4. ' n' → logprob: -2.4329090118408203
    5. ' est' → logprob: -3.5579090118408203
    6. ' faudra' → logprob: -3.5579090118408203
    7. ' peut' → logprob: -3.8079090118408203
    8. ' va' → logprob: -3.8079090118408203
    9. ' vaut' → logprob: -4.43290901184082
    10. ' faut' → logprob: -4.55790901184082

Token 177: ' limiter' (ID: 110159)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.45534151792526245
    2. ' optimiser' → logprob: -1.8303415775299072
    3. ' essayer' → logprob: -3.2053415775299072
    4. 'util' → logprob: -3.3303415775299072
    5. 'optim' → logprob: -3.4553415775299072
    6. ' aussi' → logprob: -3.5803415775299072
    7. ' envis' → logprob: -3.9553415775299072
    8. 'a' → logprob: -4.580341339111328
    9. ' continuer' → logprob: -5.080341339111328
    10. ' explo' → logprob: -5.830341339111328

Token 178: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.40254566073417664
    2. ' le' → logprob: -1.902545690536499
    3. ' la' → logprob: -2.527545690536499
    4. ' l' → logprob: -2.652545690536499
    5. 'les' → logprob: -4.52754545211792
    6. 'le' → logprob: -4.65254545211792
    7. ' par' → logprob: -5.90254545211792
    8. ' ' → logprob: -6.15254545211792
    9. ' ' → logprob: -6.15254545211792
    10. 'l' → logprob: -6.65254545211792

Token 179: ' recherche' (ID: 24975)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -1.7248482704162598
    2. ' range' → logprob: -1.9748482704162598
    3. 's' → logprob: -2.4748482704162598
    4. ' gamme' → logprob: -2.7248482704162598
    5. ' q' → logprob: -3.3498482704162598
    6. 'quant' → logprob: -3.4748482704162598
    7. ' ' → logprob: -3.4748482704162598
    8. '#' → logprob: -3.5998482704162598
    9. ' espace' → logprob: -3.5998482704162598
    10. 'r' → logprob: -3.5998482704162598

Token 180: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7110607624053955
    2. '.' → logprob: -2.3360607624053955
    3. ',' → logprob: -2.5860607624053955
    4. ' à' → logprob: -2.5860607624053955
    5. ' de' → logprob: -2.7110607624053955
    6. ' en' → logprob: -3.0860607624053955
    7. ' sur' → logprob: -3.3360607624053955
    8. ' d' → logprob: -3.7110607624053955
    9. ' ,' → logprob: -3.9610607624053955
    10. ' ' → logprob: -4.836060523986816

Token 181: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.29192766547203064
    2. ' des' → logprob: -1.666927695274353
    3. ' un' → logprob: -3.2919275760650635
    4. ' la' → logprob: -5.041927814483643
    5. 'une' → logprob: -5.291927814483643
    6. ' l' → logprob: -5.916927814483643
    7. ' de' → logprob: -6.166927814483643
    8. ' trois' → logprob: -6.291927814483643
    9. ' les' → logprob: -6.416927814483643
    10. 'des' → logprob: -6.791927814483643

Token 182: ' programmation' (ID: 166376)
  Prédit: 'programm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programm' → logprob: -1.229148030281067
    2. ' programmation' → logprob: -1.729148030281067
    3. 'import' → logprob: -2.1041479110717773
    4. ' approche' → logprob: -2.7291479110717773
    5. 'optim' → logprob: -2.8541479110717773
    6. 'heur' → logprob: -3.2291479110717773
    7. 'mé' → logprob: -4.104147911071777
    8. 'appro' → logprob: -4.104147911071777
    9. ' heur' → logprob: -4.229147911071777
    10. ' boucle' → logprob: -4.354147911071777

Token 183: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.06917939335107803
    2. ' dynamic' → logprob: -2.9441792964935303
    3. 'd' → logprob: -4.944179534912109
    4. ' dynam' → logprob: -5.569179534912109
    5. '_dynamic' → logprob: -7.069179534912109
    6. '_' → logprob: -7.319179534912109
    7. ' dinámica' → logprob: -7.944179534912109
    8. 'dynamic' → logprob: -8.06917953491211
    9. ' ' → logprob: -8.44417953491211
    10. ' d' → logprob: -8.81917953491211

Token 184: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10627349466085434
    2. 'import' → logprob: -2.9812734127044678
    3. 'def' → logprob: -3.9812734127044678
    4. '

' → logprob: -4.731273651123047
    5. '#' → logprob: -5.481273651123047
    6. '\' → logprob: -5.731273651123047
    7. ' ' → logprob: -5.731273651123047
    8. 'n' → logprob: -5.981273651123047
    9. ' 
' → logprob: -5.981273651123047
    10. ',' → logprob: -6.606273651123047

Token 185: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2910444736480713
    2. 'def' → logprob: -1.2910444736480713
    3. 'import' → logprob: -1.2910444736480713
    4. '
' → logprob: -2.7910444736480713
    5. ',' → logprob: -3.4160444736480713
    6. '.' → logprob: -3.5410444736480713
    7. ' ' → logprob: -4.541044235229492
    8. 'a' → logprob: -5.041044235229492
    9. 'from' → logprob: -5.041044235229492
    10. 'n' → logprob: -5.166044235229492

Token 186: ' sur' (ID: 1512)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9221258163452148
    2. '
' → logprob: -1.0471258163452148
    3. 'def' → logprob: -1.6721258163452148
    4. '#' → logprob: -3.922125816345215
    5. 'from' → logprob: -4.297125816345215
    6. '

' → logprob: -4.547125816345215
    7. '```' → logprob: -5.297125816345215
    8. 'a' → logprob: -5.797125816345215
    9. 'class' → logprob: -6.422125816345215
    10. '
' → logprob: -6.547125816345215

Token 187: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.38495415449142456
    2. ' les' → logprob: -1.7599542140960693
    3. 'la' → logprob: -3.1349542140960693
    4. 'a' → logprob: -3.2599542140960693
    5. ' le' → logprob: -3.7599542140960693
    6. 'les' → logprob: -4.00995397567749
    7. ' a' → logprob: -4.63495397567749
    8. ' l' → logprob: -5.38495397567749
    9. 'l' → logprob: -5.63495397567749
    10. 'le' → logprob: -5.88495397567749

Token 188: ' quantité' (ID: 89219)
  Prédit: ' quantité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.16129571199417114
    2. 'quant' → logprob: -2.4112956523895264
    3. ' somme' → logprob: -3.4112956523895264
    4. ' quant' → logprob: -4.6612958908081055
    5. ' nombre' → logprob: -5.6612958908081055
    6. 'a' → logprob: -6.4112958908081055
    7. 's' → logprob: -6.6612958908081055
    8. ' coût' → logprob: -6.6612958908081055
    9. 'nombre' → logprob: -6.9112958908081055
    10. ' q' → logprob: -7.0362958908081055

Token 189: ' de' (ID: 334)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0225119590759277
    2. 'def' → logprob: -1.6475119590759277
    3. '#' → logprob: -2.3975119590759277
    4. '
' → logprob: -2.6475119590759277
    5. ' ' → logprob: -2.6475119590759277
    6. '

' → logprob: -3.0225119590759277
    7. 'a' → logprob: -3.0225119590759277
    8. 'n' → logprob: -3.7725119590759277
    9. ',' → logprob: -3.7725119590759277
    10. 's' → logprob: -4.147511959075928

Token 190: ' farine' (ID: 144514)
  Prédit: ' farine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' farine' → logprob: -0.1904299557209015
    2. ' sacs' → logprob: -2.315429925918579
    3. 's' → logprob: -3.315429925918579
    4. 'far' → logprob: -3.440429925918579
    5. ' sac' → logprob: -5.815430164337158
    6. ' far' → logprob: -6.190430164337158
    7. ' la' → logprob: -7.940430164337158
    8. 'la' → logprob: -9.0654296875
    9. '```' → logprob: -9.5654296875
    10. 'quant' → logprob: -9.8154296875

Token 191: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7681130170822144
    2. 'import' → logprob: -1.6431130170822144
    3. 'a' → logprob: -2.018113136291504
    4. '#' → logprob: -2.393113136291504
    5. 's' → logprob: -3.393113136291504
    6. 'from' → logprob: -3.518113136291504
    7. '
' → logprob: -4.018113136291504
    8. '\' → logprob: -4.893113136291504
    9. 'n' → logprob: -4.893113136291504
    10. '```' → logprob: -4.893113136291504

Token 192: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.026483416557312
    2. 'def' → logprob: -1.151483416557312
    3. 'a' → logprob: -1.651483416557312
    4. '#' → logprob: -3.0264835357666016
    5. 'd' → logprob: -3.5264835357666016
    6. 'import' → logprob: -4.401483535766602
    7. 's' → logprob: -4.526483535766602
    8. 'n' → logprob: -5.151483535766602
    9. '```' → logprob: -5.401483535766602
    10. ' a' → logprob: -5.776483535766602

Token 193: ' Ét' (ID: 54156)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12483873963356018
    2. 'import' → logprob: -2.7498388290405273
    3. 'from' → logprob: -3.1248388290405273
    4. 'class' → logprob: -4.874838829040527
    5. '#' → logprob: -6.874838829040527
    6. 'a' → logprob: -8.124838829040527
    7. ' from' → logprob: -9.124838829040527
    8. '```' → logprob: -9.124838829040527
    9. 'n' → logprob: -9.499838829040527
    10. ' def' → logprob: -9.624838829040527

Token 194: 'apes' (ID: 11864)
  Prédit: 'ape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.0018276228802278638
    2. 'apes' → logprob: -6.751827716827393
    3. 'ant' → logprob: -8.626827239990234
    4. '#' → logprob: -8.751827239990234
    5. 'a' → logprob: -9.001827239990234
    6. 'ap' → logprob: -9.626827239990234
    7. 'endre' → logprob: -9.876827239990234
    8. 'endue' → logprob: -10.751827239990234
    9. 'at' → logprob: -12.126827239990234
    10. 'def' → logprob: -12.501827239990234

Token 195: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.268749862909317
    2. ' :' → logprob: -1.7687498331069946
    3. '#' → logprob: -3.393749952316284
    4. ' =' → logprob: -4.018749713897705
    5. ':
' → logprob: -5.643749713897705
    6. ' ' → logprob: -6.018749713897705
    7. ' :
' → logprob: -6.143749713897705
    8. '=' → logprob: -6.393749713897705
    9. ' suivantes' → logprob: -7.018749713897705
    10. 'import' → logprob: -7.393749713897705

Token 196: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03855651244521141
    2. 'def' → logprob: -3.5385565757751465
    3. 'for' → logprob: -5.9135565757751465
    4. ' #' → logprob: -6.1635565757751465
    5. '1' → logprob: -6.2885565757751465
    6. 'dp' → logprob: -6.7885565757751465
    7. '-' → logprob: -8.038556098937988
    8. ' for' → logprob: -8.538556098937988
    9. 'import' → logprob: -9.288556098937988
    10. 'n' → logprob: -9.663556098937988

Token 197: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3189292550086975
    2. 'def' → logprob: -1.5689291954040527
    3. ' #' → logprob: -3.3189291954040527
    4. 'from' → logprob: -4.443929195404053
    5. '1' → logprob: -4.568929195404053
    6. ' def' → logprob: -6.443929195404053
    7. '-' → logprob: -6.943929195404053
    8. ' from' → logprob: -7.193929195404053
    9. 'import' → logprob: -7.193929195404053
    10. ' ' → logprob: -8.068929672241211

Token 198: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5296514630317688
    2. '#' → logprob: -1.029651403427124
    3. 'from' → logprob: -3.529651403427124
    4. 'dp' → logprob: -5.154651641845703
    5. '1' → logprob: -5.404651641845703
    6. 'Dé' → logprob: -5.404651641845703
    7. 'for' → logprob: -5.654651641845703
    8. 'dé' → logprob: -6.029651641845703
    9. 'import' → logprob: -7.029651641845703
    10. 'Calcul' → logprob: -7.154651641845703

Token 199: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3020724654197693
    2. '#' → logprob: -2.052072525024414
    3. ' #' → logprob: -3.177072525024414
    4. 'def' → logprob: -3.302072525024414
    5. ' ' → logprob: -4.427072525024414
    6. ' def' → logprob: -4.552072525024414
    7. ' =' → logprob: -5.427072525024414
    8. ':' → logprob: -5.427072525024414
    9. ' ' → logprob: -5.427072525024414
    10. ')' → logprob: -6.302072525024414

Token 200: ' Dé' (ID: 27247)
  Prédit: 'Dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dé' → logprob: -1.2507519721984863
    2. ' Dé' → logprob: -1.6257519721984863
    3. 'import' → logprob: -2.1257519721984863
    4. 'from' → logprob: -2.7507519721984863
    5. ' import' → logprob: -3.1257519721984863
    6. 'Lire' → logprob: -3.1257519721984863
    7. ' Initial' → logprob: -3.3757519721984863
    8. 'Initial' → logprob: -3.5007519721984863
    9. ' R' → logprob: -3.6257519721984863
    10. ' Lire' → logprob: -3.8757519721984863

Token 201: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.026269640773534775
    2. 'f' → logprob: -3.7762696743011475
    3. 'fi' → logprob: -6.526269435882568
    4. 'clar' → logprob: -6.526269435882568
    5. 'termin' → logprob: -10.526269912719727
    6. 'clare' → logprob: -11.276269912719727
    7. ' finir' → logprob: -11.651269912719727
    8. 'claration' → logprob: -12.026269912719727
    9. ' clar' → logprob: -12.401269912719727
    10. ' fin' → logprob: -12.651269912719727

Token 202: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.048740651458501816
    2. 'ition' → logprob: -3.0487406253814697
    3. 'inir' → logprob: -9.79874038696289
    4. 'inition' → logprob: -9.92374038696289
    5. '#' → logprob: -10.79874038696289
    6. 'er' → logprob: -11.04874038696289
    7. 'i' → logprob: -12.67374038696289
    8. 'ire' → logprob: -13.42374038696289
    9. 'tir' → logprob: -13.54874038696289
    10. 'r' → logprob: -13.92374038696289

Token 203: ' pour' (ID: 1930)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.11906582117080688
    2. ' la' → logprob: -2.744065761566162
    3. ' une' → logprob: -4.494065761566162
    4. ' ' → logprob: -4.494065761566162
    5. ' ' → logprob: -4.494065761566162
    6. 'les' → logprob: -5.119065761566162
    7. ' un' → logprob: -5.744065761566162
    8. ' des' → logprob: -6.369065761566162
    9. 'une' → logprob: -7.369065761566162
    10. ' def' → logprob: -7.494065761566162

Token 204: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.005889803171157837
    2. ' chacune' → logprob: -5.880889892578125
    3. ' each' → logprob: -6.255889892578125
    4. 'cha' → logprob: -8.130889892578125
    5. 'each' → logprob: -8.255889892578125
    6. ' chacun' → logprob: -8.505889892578125
    7. 'ch' → logprob: -8.880889892578125
    8. 'Chaque' → logprob: -9.630889892578125
    9. ' ' → logprob: -10.130889892578125
    10. '#' → logprob: -10.505889892578125

Token 205: ' boutique' (ID: 46148)
  Prédit: ' boutique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boutique' → logprob: -0.1499277651309967
    2. 'bout' → logprob: -2.274927854537964
    3. ' magasin' → logprob: -3.524927854537964
    4. ' ' → logprob: -5.899927616119385
    5. ' ' → logprob: -6.774927616119385
    6. ' type' → logprob: -7.399927616119385
    7. 'b' → logprob: -8.024928092956543
    8. ' shop' → logprob: -8.524928092956543
    9. ' bout' → logprob: -9.024928092956543
    10. 'type' → logprob: -9.024928092956543

Token 206: ' une' (ID: 2463)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9411524534225464
    2. ':' → logprob: -1.8161524534225464
    3. ' ' → logprob: -2.066152572631836
    4. ' :' → logprob: -2.441152572631836
    5. 's' → logprob: -2.691152572631836
    6. ' un' → logprob: -2.816152572631836
    7. ' a' → logprob: -3.691152572631836
    8. ' une' → logprob: -4.066152572631836
    9. ' ,' → logprob: -4.191152572631836
    10. ' A' → logprob: -4.691152572631836

Token 207: ' fonction' (ID: 17610)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8241106867790222
    2. ' structure' → logprob: -1.449110746383667
    3. 'classe' → logprob: -2.199110746383667
    4. 'liste' → logprob: -2.449110746383667
    5. 'structure' → logprob: -3.324110746383667
    6. 'fonction' → logprob: -3.449110746383667
    7. 'class' → logprob: -3.949110746383667
    8. ' classe' → logprob: -3.949110746383667
    9. ' fonction' → logprob: -4.449110507965088
    10. ' class' → logprob: -5.324110507965088

Token 208: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25092291831970215
    2. ' de' → logprob: -2.125922918319702
    3. ' def' → logprob: -3.000922918319702
    4. ' coût' → logprob: -4.500923156738281
    5. ' qui' → logprob: -4.625923156738281
    6. 'de' → logprob: -4.875923156738281
    7. 'co' → logprob: -5.125923156738281
    8. 'f' → logprob: -6.250923156738281
    9. ' calcul' → logprob: -6.250923156738281
    10. ' calculate' → logprob: -6.375923156738281

Token 209: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.03972717374563217
    2. 'cal' → logprob: -3.664727210998535
    3. 'calc' → logprob: -4.414727210998535
    4. 'calcul' → logprob: -7.414727210998535
    5. ' calcul' → logprob: -7.914727210998535
    6. ' retourne' → logprob: -9.039727210998535
    7. ' cal' → logprob: -10.539727210998535
    8. ',' → logprob: -10.789727210998535
    9. ' donne' → logprob: -11.164727210998535
    10. 'calculate' → logprob: -11.539727210998535

Token 210: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.03559190779924393
    2. 'uler' → logprob: -3.5355918407440186
    3. 'ul' → logprob: -5.285592079162598
    4. 'cule' → logprob: -8.410592079162598
    5. 'ulate' → logprob: -8.535592079162598
    6. 'ulé' → logprob: -8.785592079162598
    7. 'u' → logprob: -9.910592079162598
    8. 'ulte' → logprob: -10.035592079162598
    9. '*' → logprob: -11.410592079162598
    10. 'le' → logprob: -11.410592079162598

Token 211: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.06200330704450607
    2. 'le' → logprob: -3.1870033740997314
    3. '_le' → logprob: -4.062003135681152
    4. ' la' → logprob: -7.687003135681152
    5. ' l' → logprob: -8.937003135681152
    6. ' ' → logprob: -9.062003135681152
    7. '_' → logprob: -9.312003135681152
    8. ',' → logprob: -9.687003135681152
    9. ' un' → logprob: -9.812003135681152
    10. '_price' → logprob: -9.812003135681152

Token 212: ' coût' (ID: 73109)
  Prédit: ' prix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prix' → logprob: -0.8284721374511719
    2. ' coût' → logprob: -0.9534721374511719
    3. 'co' → logprob: -2.453472137451172
    4. 'prix' → logprob: -2.453472137451172
    5. ' minimum' → logprob: -6.203472137451172
    6. ' co' → logprob: -6.828472137451172
    7. ' cout' → logprob: -7.203472137451172
    8. 'cout' → logprob: -7.703472137451172
    9. 'minimum' → logprob: -7.828472137451172
    10. ' meilleur' → logprob: -8.578472137451172

Token 213: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9167040586471558
    2. ' minimale' → logprob: -1.5417040586471558
    3. ' optimale' → logprob: -3.0417041778564453
    4. '_min' → logprob: -3.0417041778564453
    5. ' de' → logprob: -3.1667041778564453
    6. '_total' → logprob: -3.1667041778564453
    7. ' d' → logprob: -3.4167041778564453
    8. ' )' → logprob: -4.166704177856445
    9. ' (' → logprob: -4.166704177856445
    10. ' _' → logprob: -4.416704177856445

Token 214: ' pour' (ID: 1930)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.7356165647506714
    2. 'def' → logprob: -1.8606165647506714
    3. ' des' → logprob: -1.8606165647506714
    4. ' de' → logprob: -2.485616683959961
    5. ' def' → logprob: -2.735616683959961
    6. ' (' → logprob: -2.860616683959961
    7. ' du' → logprob: -3.110616683959961
    8. ' par' → logprob: -3.235616683959961
    9. ' ' → logprob: -3.610616683959961
    10. ',' → logprob: -3.735616683959961

Token 215: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4617707133293152
    2. ' n' → logprob: -1.58677077293396
    3. ' x' → logprob: -2.71177077293396
    4. ' une' → logprob: -3.58677077293396
    5. 'n' → logprob: -3.71177077293396
    6. 'acheter' → logprob: -4.086770534515381
    7. ' acheter' → logprob: -4.461770534515381
    8. 'un' → logprob: -4.836770534515381
    9. 'x' → logprob: -4.836770534515381
    10. ' l' → logprob: -7.336770534515381

Token 216: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5342901945114136
    2. 'nombre' → logprob: -1.0342901945114136
    3. 'certain' → logprob: -3.284290313720703
    4. ' certain' → logprob: -4.409290313720703
    5. ' given' → logprob: -5.784290313720703
    6. 'achat' → logprob: -6.784290313720703
    7. ' achat' → logprob: -6.909290313720703
    8. 'ach' → logprob: -7.034290313720703
    9. 's' → logprob: -7.784290313720703
    10. ' n' → logprob: -8.159290313720703

Token 217: ' donné' (ID: 52079)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2905941903591156
    2. ' d' → logprob: -1.790594220161438
    3. '_' → logprob: -3.2905941009521484
    4. ' donné' → logprob: -3.4155941009521484
    5. ' ' → logprob: -5.290594100952148
    6. 'de' → logprob: -6.040594100952148
    7. '_s' → logprob: -6.165594100952148
    8. ' n' → logprob: -6.665594100952148
    9. '_d' → logprob: -6.790594100952148
    10. '_de' → logprob: -7.040594100952148

Token 218: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4349805414676666
    2. ' de' → logprob: -1.5599805116653442
    3. 'd' → logprob: -2.684980630874634
    4. ' ' → logprob: -3.059980630874634
    5. 'de' → logprob: -4.559980392456055
    6. '<|end|>' → logprob: -5.309980392456055
    7. '_' → logprob: -5.684980392456055
    8. '_d' → logprob: -5.684980392456055
    9. '_de' → logprob: -6.309980392456055
    10. 's' → logprob: -6.809980392456055

Token 219: ' sacs' (ID: 150414)
  Prédit: ' sacs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sacs' → logprob: -0.34885039925575256
    2. 's' → logprob: -1.2238503694534302
    3. ' ' → logprob: -8.47385025024414
    4. ' sac' → logprob: -9.34885025024414
    5. ' s' → logprob: -10.47385025024414
    6. '	s' → logprob: -10.72385025024414
    7. ' sacks' → logprob: -11.34885025024414
    8. '_s' → logprob: -11.97385025024414
    9. '```' → logprob: -11.97385025024414
    10. ' ' → logprob: -12.22385025024414

Token 220: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16141469776630402
    2. ' def' → logprob: -2.661414623260498
    3. ',' → logprob: -3.411414623260498
    4. '.' → logprob: -3.661414623260498
    5. ':' → logprob: -5.036414623260498
    6. '#' → logprob: -5.536414623260498
    7. 's' → logprob: -6.036414623260498
    8. ' ' → logprob: -6.161414623260498
    9. ' :' → logprob: -6.286414623260498
    10. ' (' → logprob: -6.661414623260498

Token 221: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06976613402366638
    2. 'class' → logprob: -3.194766044616699
    3. '
' → logprob: -4.319766044616699
    4. ' def' → logprob: -4.694766044616699
    5. '```' → logprob: -6.569766044616699
    6. '#' → logprob: -6.944766044616699
    7. '
' → logprob: -7.819766044616699
    8. 'import' → logprob: -8.0697660446167
    9. '2' → logprob: -8.8197660446167
    10. 'A' → logprob: -8.9447660446167

Token 222: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.044407982379198074
    2. ' def' → logprob: -3.794408082962036
    3. 'class' → logprob: -4.169407844543457
    4. '#' → logprob: -6.169407844543457
    5. '
' → logprob: -6.169407844543457
    6. '```' → logprob: -7.294407844543457
    7. ' 
' → logprob: -8.919407844543457
    8. ' ' → logprob: -9.419407844543457
    9. 'import' → logprob: -9.669407844543457
    10. ' class' → logprob: -9.919407844543457

Token 223: '2' (ID: 17)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.034512121230363846
    2. 'class' → logprob: -3.6595120429992676
    3. '#' → logprob: -5.284512042999268
    4. '2' → logprob: -6.159512042999268
    5. 'from' → logprob: -7.409512042999268
    6. 'import' → logprob: -9.034512519836426
    7. 'A' → logprob: -9.409512519836426
    8. ' def' → logprob: -9.534512519836426
    9. 'Dé' → logprob: -10.284512519836426
    10. '```' → logprob: -10.409512519836426

Token 224: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.514650183613412e-05
    2. '#' → logprob: -10.375055313110352
    3. ' #' → logprob: -12.000055313110352
    4. 'def' → logprob: -12.000055313110352
    5. ')' → logprob: -12.875055313110352
    6. ' def' → logprob: -13.000055313110352
    7. ' ' → logprob: -13.000055313110352
    8. '.
' → logprob: -13.750055313110352
    9. ':' → logprob: -14.125055313110352
    10. ' .' → logprob: -14.250055313110352

Token 225: ' Util' (ID: 13564)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.4240983724594116
    2. 'Calcul' → logprob: -1.7990983724594116
    3. 'Impl' → logprob: -2.549098491668701
    4. 'Importer' → logprob: -2.549098491668701
    5. 'Dé' → logprob: -2.674098491668701
    6. 'Initial' → logprob: -3.049098491668701
    7. 'def' → logprob: -3.049098491668701
    8. ' Calcul' → logprob: -3.424098491668701
    9. 'for' → logprob: -3.549098491668701
    10. '#' → logprob: -3.674098491668701

Token 226: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.1863628476858139
    2. 'ser' → logprob: -1.811362862586975
    3. 'er' → logprob: -5.4363627433776855
    4. '#' → logprob: -6.5613627433776855
    5. '```' → logprob: -8.311363220214844
    6. 'se' → logprob: -8.936363220214844
    7. 'ise' → logprob: -9.061363220214844
    8. 's' → logprob: -10.061363220214844
    9. 'is' → logprob: -10.186363220214844
    10. 'isateur' → logprob: -10.436363220214844

Token 227: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.13673439621925354
    2. ' trois' → logprob: -2.2617344856262207
    3. 'une' → logprob: -4.261734485626221
    4. ' la' → logprob: -5.386734485626221
    5. ' des' → logprob: -6.136734485626221
    6. ' un' → logprob: -7.261734485626221
    7. ' deux' → logprob: -7.511734485626221
    8. ' three' → logprob: -7.761734485626221
    9. 'tro' → logprob: -8.261734008789062
    10. ' ' → logprob: -8.511734008789062

Token 228: ' programmation' (ID: 166376)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -1.0539672374725342
    2. ' programmation' → logprob: -2.178967237472534
    3. 'dp' → logprob: -2.553967237472534
    4. 'import' → logprob: -2.678967237472534
    5. ' triple' → logprob: -3.053967237472534
    6. ' for' → logprob: -3.178967237472534
    7. 'for' → logprob: -3.303967237472534
    8. ' dp' → logprob: -3.303967237472534
    9. 'dynamic' → logprob: -3.428967237472534
    10. 'from' → logprob: -3.678967237472534

Token 229: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.3347569704055786
    2. ' dynamic' → logprob: -1.5847569704055786
    3. '_' → logprob: -2.959756851196289
    4. 'd' → logprob: -4.459756851196289
    5. ' dynam' → logprob: -5.459756851196289
    6. ' d' → logprob: -5.584756851196289
    7. '_dynamic' → logprob: -5.959756851196289
    8. ' _' → logprob: -6.459756851196289
    9. 'dynamic' → logprob: -6.709756851196289
    10. ' ' → logprob: -6.709756851196289

Token 230: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.08381795883178711
    2. 'pour' → logprob: -3.708817958831787
    3. ',' → logprob: -3.958817958831787
    4. '#' → logprob: -4.208817958831787
    5. 'import' → logprob: -5.458817958831787
    6. ' afin' → logprob: -5.583817958831787
    7. 'dp' → logprob: -5.833817958831787
    8. '.' → logprob: -5.833817958831787
    9. 'def' → logprob: -6.458817958831787
    10. ' ' → logprob: -6.583817958831787

Token 231: ' calcul' (ID: 7559)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.5306187272071838
    2. ' calcul' → logprob: -1.530618667602539
    3. ' comb' → logprob: -2.405618667602539
    4. ' déterminer' → logprob: -2.905618667602539
    5. ' résoudre' → logprob: -3.905618667602539
    6. ' explorer' → logprob: -5.280618667602539
    7. ' optimiser' → logprob: -5.530618667602539
    8. ' minim' → logprob: -5.780618667602539
    9. ' compléter' → logprob: -5.905618667602539
    10. ' construire' → logprob: -6.155618667602539

Token 232: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -6.301394023466855e-05
    2. ' er' → logprob: -11.000062942504883
    3. 'uler' → logprob: -11.750062942504883
    4. '#' → logprob: -11.875062942504883
    5. 'ate' → logprob: -11.875062942504883
    6. 'e' → logprob: -12.250062942504883
    7. '```' → logprob: -13.125062942504883
    8. '_' → logprob: -13.250062942504883
    9. '_er' → logprob: -13.250062942504883
    10. '­er' → logprob: -13.375062942504883

Token 233: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04348369315266609
    2. 'le' → logprob: -3.1684837341308594
    3. ' la' → logprob: -8.04348373413086
    4. ' les' → logprob: -10.04348373413086
    5. ' pour' → logprob: -10.16848373413086
    6. '_le' → logprob: -11.04348373413086
    7. 'la' → logprob: -11.29348373413086
    8. 'co' → logprob: -11.41848373413086
    9. ' un' → logprob: -11.91848373413086
    10. ',' → logprob: -12.04348373413086

Token 234: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.06270041316747665
    2. 'co' → logprob: -3.5627005100250244
    3. ' minimum' → logprob: -3.8127005100250244
    4. ' prix' → logprob: -5.562700271606445
    5. ' cout' → logprob: -6.812700271606445
    6. ' minimal' → logprob: -6.937700271606445
    7. 'minimum' → logprob: -6.937700271606445
    8. ' nombre' → logprob: -7.437700271606445
    9. ' co' → logprob: -7.812700271606445
    10. 'cout' → logprob: -7.812700271606445

Token 235: ' minimum' (ID: 11085)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.22526417672634125
    2. ' minimum' → logprob: -2.100264072418213
    3. '_min' → logprob: -3.350264072418213
    4. '_' → logprob: -4.225264072418213
    5. ' optimal' → logprob: -4.225264072418213
    6. ' minimale' → logprob: -4.975264072418213
    7. ' total' → logprob: -5.975264072418213
    8. '_total' → logprob: -6.600264072418213
    9. ' minim' → logprob: -7.100264072418213
    10. 'minimal' → logprob: -7.225264072418213

Token 236: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.9054999351501465
    2. ' total' → logprob: -0.9054999351501465
    3. 'total' → logprob: -2.7804999351501465
    4. ' d' → logprob: -3.9054999351501465
    5. '_total' → logprob: -4.0304999351501465
    6. 'pour' → logprob: -4.4054999351501465
    7. ' final' → logprob: -4.6554999351501465
    8. 'final' → logprob: -4.7804999351501465
    9. ' de' → logprob: -4.9054999351501465
    10. '<|end|>' → logprob: -4.9054999351501465

Token 237: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07039473950862885
    2. 'atte' → logprob: -3.69539475440979
    3. ' atteindre' → logprob: -4.570394515991211
    4. 'cha' → logprob: -4.695394515991211
    5. 't' → logprob: -5.195394515991211
    6. ' obtenir' → logprob: -5.570394515991211
    7. ' toutes' → logprob: -5.695394515991211
    8. ' ' → logprob: -6.070394515991211
    9. 'ob' → logprob: -6.320394515991211
    10. 'ach' → logprob: -7.070394515991211

Token 238: ' quantité' (ID: 89219)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.6719213128089905
    2. ' quantité' → logprob: -0.7969213128089905
    3. ' a' → logprob: -4.921921253204346
    4. ' nombre' → logprob: -5.546921253204346
    5. ' q' → logprob: -5.546921253204346
    6. ' ' → logprob: -5.671921253204346
    7. 'a' → logprob: -5.796921253204346
    8. ' quant' → logprob: -6.046921253204346
    9. ' entier' → logprob: -6.296921253204346
    10. ' i' → logprob: -6.671921253204346

Token 239: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9041555523872375
    2. ' de' → logprob: -1.4041554927825928
    3. '.' → logprob: -2.5291554927825928
    4. ',' → logprob: -2.6541554927825928
    5. '#' → logprob: -3.0291554927825928
    6. 'import' → logprob: -3.6541554927825928
    7. ' ' → logprob: -3.9041554927825928
    8. ' d' → logprob: -4.029155731201172
    9. ' possible' → logprob: -4.404155731201172
    10. 'possible' → logprob: -4.654155731201172

Token 240: ' farine' (ID: 144514)
  Prédit: ' farine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' farine' → logprob: -0.31769615411758423
    2. 'far' → logprob: -1.3176960945129395
    3. 's' → logprob: -6.0676960945129395
    4. ' ' → logprob: -6.8176960945129395
    5. ' far' → logprob: -8.442696571350098
    6. 'quant' → logprob: -8.942696571350098
    7. 'fa' → logprob: -8.942696571350098
    8. '```' → logprob: -9.192696571350098
    9. ' sacs' → logprob: -9.317696571350098
    10. '0' → logprob: -9.692696571350098

Token 241: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6950042843818665
    2. ',' → logprob: -1.3200042247772217
    3. '#' → logprob: -1.9450042247772217
    4. 'from' → logprob: -4.195004463195801
    5. 'import' → logprob: -4.570004463195801
    6. ' ,' → logprob: -4.820004463195801
    7. 'def' → logprob: -4.945004463195801
    8. ' (' → logprob: -5.070004463195801
    9. 'possible' → logprob: -5.320004463195801
    10. ' ' → logprob: -5.445004463195801

Token 242: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5416318774223328
    2. ',' → logprob: -1.1666319370269775
    3. ' possible' → logprob: -3.5416319370269775
    4. '#' → logprob: -4.166631698608398
    5. ' ' → logprob: -4.166631698608398
    6. 'possible' → logprob: -4.916631698608398
    7. ' ,' → logprob: -5.291631698608398
    8. 's' → logprob: -5.541631698608398
    9. 'import' → logprob: -5.666631698608398
    10. 'def' → logprob: -5.666631698608398

Token 243: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8739113211631775
    2. '#' → logprob: -1.4989113807678223
    3. ',' → logprob: -1.4989113807678223
    4. 'from' → logprob: -3.2489113807678223
    5. ' ' → logprob: -4.123911380767822
    6. ' possible' → logprob: -4.373911380767822
    7. ' ,' → logprob: -4.623911380767822
    8. 'possible' → logprob: -4.623911380767822
    9. 'import' → logprob: -5.123911380767822
    10. 's' → logprob: -5.248911380767822

Token 244: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' (adapté à ' de') → logprob: -1.0437688827514648
    2. 'from' → logprob: -1.6687688827514648
    3. '#' → logprob: -2.043768882751465
    4. 'a' → logprob: -2.918768882751465
    5. ' de' → logprob: -3.043768882751465
    6. '.' → logprob: -3.293768882751465
    7. ',' → logprob: -3.293768882751465
    8. 'jus' → logprob: -3.418768882751465
    9. ' jusqu' → logprob: -4.043768882751465
    10. 'd' → logprob: -4.293768882751465

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39045828580856323
    2. ' ' → logprob: -1.140458345413208
    3. '1' → logprob: -5.640458106994629
    4. 'a' → logprob: -10.765458106994629
    5. 's' → logprob: -13.015458106994629
    6. ' ' → logprob: -13.390458106994629
    7. ' a' → logprob: -13.515458106994629
    8. 'quant' → logprob: -14.640458106994629
    9. '   ' → logprob: -14.640458106994629
    10. '_' → logprob: -15.390458106994629

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009534720331430435
    2. ' ' → logprob: -4.88453483581543
    3. '1' → logprob: -6.25953483581543
    4. 'a' → logprob: -11.75953483581543
    5. 'quant' → logprob: -13.13453483581543
    6. '500' → logprob: -14.13453483581543
    7. 's' → logprob: -14.38453483581543
    8. '   ' → logprob: -14.50953483581543
    9. ' a' → logprob: -14.50953483581543
    10. 'à' → logprob: -15.13453483581543

Token 247: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2779447138309479
    2. 'à' → logprob: -1.6529446840286255
    3. ' ' → logprob: -3.027944803237915
    4. ' jusqu' → logprob: -6.402944564819336
    5. ' ' → logprob: -8.152944564819336
    6. 'a' → logprob: -8.527944564819336
    7. ' a' → logprob: -8.902944564819336
    8. 'jus' → logprob: -9.027944564819336
    9. ''à' → logprob: -9.777944564819336
    10. 'au' → logprob: -9.777944564819336

Token 248: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4270157516002655
    2. 'a' → logprob: -1.177015781402588
    3. ' ' → logprob: -3.552015781402588
    4. '500' → logprob: -4.552015781402588
    5. '   ' → logprob: -10.05201530456543
    6. ' ' → logprob: -10.80201530456543
    7. '  ' → logprob: -11.17701530456543
    8. '    ' → logprob: -11.55201530456543
    9. ' max' → logprob: -12.05201530456543
    10. ' n' → logprob: -12.42701530456543

Token 249: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6796550154685974
    2. '
' → logprob: -1.5546550750732422
    3. '#' → logprob: -1.6796550750732422
    4. ',' → logprob: -2.804655075073242
    5. 'def' → logprob: -4.554655075073242
    6. 'import' → logprob: -5.304655075073242
    7. 's' → logprob: -5.554655075073242
    8. ',
' → logprob: -5.804655075073242
    9. ':' → logprob: -6.304655075073242
    10. ' ' → logprob: -6.429655075073242

Token 250: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3512881100177765
    2. '
' → logprob: -2.226288080215454
    3. '#' → logprob: -2.351288080215454
    4. '<|end|>' → logprob: -4.101288318634033
    5. 'import' → logprob: -4.351288318634033
    6. 's' → logprob: -4.726288318634033
    7. ' def' → logprob: -4.726288318634033
    8. ' ' → logprob: -4.976288318634033
    9. ',' → logprob: -5.226288318634033
    10. '

' → logprob: -5.476288318634033

Token 251: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8601689338684082
    2. 'def' → logprob: -0.8601689338684082
    3. 'import' → logprob: -2.985168933868408
    4. '#' → logprob: -3.860168933868408
    5. ' 
' → logprob: -4.110168933868408
    6. ' ' → logprob: -4.360168933868408
    7. '

' → logprob: -4.485168933868408
    8. ' def' → logprob: -4.860168933868408
    9. '```' → logprob: -5.485168933868408
    10. '<|end|>' → logprob: -5.485168933868408

Token 252: '3' (ID: 18)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04783864691853523
    2. 'from' → logprob: -3.5478386878967285
    3. 'import' → logprob: -4.1728386878967285
    4. '#' → logprob: -6.9228386878967285
    5. 'class' → logprob: -7.4228386878967285
    6. '
' → logprob: -7.7978386878967285
    7. '```' → logprob: -8.79783821105957
    8. 'a' → logprob: -9.04783821105957
    9. ' def' → logprob: -9.67283821105957
    10. ' 
' → logprob: -9.92283821105957

Token 253: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017147827020380646
    2. '#' → logprob: -8.875171661376953
    3. '.
' → logprob: -11.125171661376953
    4. 'def' → logprob: -11.625171661376953
    5. ' #' → logprob: -13.000171661376953
    6. ' .' → logprob: -13.625171661376953
    7. ' ' → logprob: -14.125171661376953
    8. '.

' → logprob: -14.125171661376953
    9. ' def' → logprob: -14.375171661376953
    10. ')' → logprob: -14.625171661376953

Token 254: ' Pour' (ID: 13931)
  Prédit: ' Initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Initial' → logprob: -1.518178105354309
    2. 'Initial' → logprob: -1.768178105354309
    3. '#' → logprob: -2.5181779861450195
    4. ' Re' → logprob: -2.5181779861450195
    5. 'Re' → logprob: -3.1431779861450195
    6. 'Comb' → logprob: -3.1431779861450195
    7. ' Trou' → logprob: -3.2681779861450195
    8. ' Constru' → logprob: -3.5181779861450195
    9. ' #' → logprob: -3.6431779861450195
    10. ' R' → logprob: -3.7681779861450195

Token 255: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07803067564964294
    2. ' ' → logprob: -2.953030586242676
    3. ' trouver' → logprob: -5.703030586242676
    4. 'a' → logprob: -6.078030586242676
    5. 'r' → logprob: -6.078030586242676
    6. ' a' → logprob: -6.203030586242676
    7. ' each' → logprob: -6.203030586242676
    8. '   ' → logprob: -6.578030586242676
    9. '  ' → logprob: -6.953030586242676
    10. ' récupérer' → logprob: -6.953030586242676

Token 256: ' quantité' (ID: 89219)
  Prédit: ' boutique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boutique' → logprob: -0.16807971894741058
    2. ' quantité' → logprob: -2.2930796146392822
    3. ' ' → logprob: -4.168079853057861
    4. 'bout' → logprob: -4.918079853057861
    5. ' combinaison' → logprob: -5.043079853057861
    6. 'quant' → logprob: -5.293079853057861
    7. ' quant' → logprob: -5.793079853057861
    8. ' quantity' → logprob: -6.418079853057861
    9. ' magasin' → logprob: -6.543079853057861
    10. ' sac' → logprob: -6.668079853057861

Token 257: ' interm' (ID: 120489)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7368107438087463
    2. ' ,' → logprob: -1.7368106842041016
    3. ',' → logprob: -1.8618106842041016
    4. ' q' → logprob: -2.8618106842041016
    5. ' ' → logprob: -3.1118106842041016
    6. '_' → logprob: -3.4868106842041016
    7. 'de' → logprob: -4.486810684204102
    8. ' i' → logprob: -4.486810684204102
    9. ' a' → logprob: -4.736810684204102
    10. ' possible' → logprob: -5.111810684204102

Token 258: 'édiaire' (ID: 161555)
  Prédit: 'édiaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'édiaire' → logprob: -0.08243276178836823
    2. 'édi' → logprob: -3.957432746887207
    3. '#' → logprob: -4.332432746887207
    4. 'di' → logprob: -4.707432746887207
    5. '```' → logprob: -4.832432746887207
    6. 'édia' → logprob: -5.457432746887207
    7. 'ate' → logprob: -5.707432746887207
    8. 'éd' → logprob: -5.832432746887207
    9. 'a' → logprob: -5.832432746887207
    10. 'm' → logprob: -5.957432746887207

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21177898347377777
    2. ' ,' → logprob: -1.836778998374939
    3. ' i' → logprob: -3.7117788791656494
    4. ' de' → logprob: -5.8367791175842285
    5. ' a' → logprob: -6.4617791175842285
    6. ' q' → logprob: -6.7117791175842285
    7. 'a' → logprob: -8.33677864074707
    8. 'i' → logprob: -8.71177864074707
    9. ' d' → logprob: -8.83677864074707
    10. ' ' → logprob: -9.21177864074707

Token 260: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.706211507320404
    2. ' pour' → logprob: -1.3312115669250488
    3. ' for' → logprob: -2.956211566925049
    4. ' calcul' → logprob: -3.206211566925049
    5. 'pour' → logprob: -3.706211566925049
    6. '   ' → logprob: -3.706211566925049
    7. 'on' → logprob: -4.081211566925049
    8. 'for' → logprob: -4.206211566925049
    9. ' essayer' → logprob: -4.206211566925049
    10. ' comb' → logprob: -4.831211566925049

Token 261: ' essa' (ID: 19417)
  Prédit: ' essa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' essa' → logprob: -1.3599495887756348
    2. ' teste' → logprob: -1.4849495887756348
    3. ' calc' → logprob: -2.1099495887756348
    4. ' peut' → logprob: -2.3599495887756348
    5. ' considère' → logprob: -3.2349495887756348
    6. ' tente' → logprob: -3.4849495887756348
    7. ' ' → logprob: -3.6099495887756348
    8. '   ' → logprob: -3.7349495887756348
    9. ' explore' → logprob: -3.8599495887756348
    10. ' met' → logprob: -3.8599495887756348

Token 262: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.04507242515683174
    2. 'y' → logprob: -3.795072317123413
    3. 'ye' → logprob: -3.920072317123413
    4. 'aye' → logprob: -7.420072555541992
    5. 'yer' → logprob: -8.545072555541992
    6. 'ile' → logprob: -9.170072555541992
    7. '\' → logprob: -9.420072555541992
    8. 'yle' → logprob: -9.420072555541992
    9. 'i' → logprob: -9.795072555541992
    10. 'ime' → logprob: -10.170072555541992

Token 263: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.036969274282455444
    2. 'd' → logprob: -3.7869691848754883
    3. ' toutes' → logprob: -5.536969184875488
    4. ' de' → logprob: -5.911969184875488
    5. ' ' → logprob: -6.286969184875488
    6. '    ' → logprob: -6.411969184875488
    7. ' tous' → logprob: -6.911969184875488
    8. '   ' → logprob: -7.036969184875488
    9. 't' → logprob: -7.411969184875488
    10. ' l' → logprob: -7.911969184875488

Token 264: ''aj' (ID: 116735)
  Prédit: ''aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aj' → logprob: -0.7491327524185181
    2. 'e' → logprob: -0.9991327524185181
    3. ''' → logprob: -2.2491326332092285
    4. ''utiliser' → logprob: -4.4991326332092285
    5. ''ac' → logprob: -5.2491326332092285
    6. 'acheter' → logprob: -5.3741326332092285
    7. 'aj' → logprob: -5.3741326332092285
    8. ' ajouter' → logprob: -5.6241326332092285
    9. '’aj' → logprob: -5.6241326332092285
    10. 'a' → logprob: -5.9991326332092285

Token 265: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.03394777327775955
    2. 'oute' → logprob: -4.033947944641113
    3. 'o' → logprob: -5.158947944641113
    4. 'ou' → logprob: -5.533947944641113
    5. 'out' → logprob: -6.158947944641113
    6. '#' → logprob: -7.283947944641113
    7. '>' → logprob: -7.908947944641113
    8. 'outez' → logprob: -7.908947944641113
    9. 'ouer' → logprob: -8.658947944641113
    10. '\' → logprob: -9.221447944641113

Token 266: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04617904871702194
    2. ' ' → logprob: -4.171178817749023
    3. ' des' → logprob: -4.546178817749023
    4. ' chaque' → logprob: -4.796178817749023
    5. ' une' → logprob: -5.671178817749023
    6. 'un' → logprob: -6.046178817749023
    7. ' les' → logprob: -6.171178817749023
    8. ' de' → logprob: -7.421178817749023
    9. ' le' → logprob: -7.546178817749023
    10. ' sacs' → logprob: -8.171178817749023

Token 267: ' sac' (ID: 10672)
  Prédit: ' sac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sac' → logprob: -0.08023885637521744
    2. 's' → logprob: -2.5802388191223145
    3. ' ' → logprob: -7.0802388191223145
    4. ' type' → logprob: -9.455239295959473
    5. ' nouveau' → logprob: -9.580239295959473
    6. ' ' → logprob: -9.955239295959473
    7. ' s' → logprob: -10.205239295959473
    8. ' lot' → logprob: -10.330239295959473
    9. ' panier' → logprob: -10.455239295959473
    10. ' espace' → logprob: -10.830239295959473

Token 268: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.012636786326766014
    2. 'de' → logprob: -5.387636661529541
    3. ' des' → logprob: -5.512636661529541
    4. ' d' → logprob: -6.137636661529541
    5. ' from' → logprob: -7.512636661529541
    6. ' supplémentaire' → logprob: -8.0126371383667
    7. ' ' → logprob: -8.1376371383667
    8. ' provenant' → logprob: -8.5126371383667
    9. 'from' → logprob: -9.0126371383667
    10. ' venant' → logprob: -9.7626371383667

Token 269: '’une' (ID: 11808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3563510775566101
    2. 'une' → logprob: -1.7313511371612549
    3. ''une' → logprob: -2.481351137161255
    4. 'cha' → logprob: -3.731351137161255
    5. 'es' → logprob: -5.731350898742676
    6. ''achat' → logprob: -5.856350898742676
    7. ''' → logprob: -6.481350898742676
    8. ' chaque' → logprob: -6.981350898742676
    9. 'each' → logprob: -6.981350898742676
    10. 'u' → logprob: -7.231350898742676

Token 270: ' des' (ID: 731)
  Prédit: 'bout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bout' → logprob: -0.1164289116859436
    2. 'des' → logprob: -2.866428852081299
    3. ' des' → logprob: -3.491428852081299
    4. ' boutique' → logprob: -3.866428852081299
    5. 'une' → logprob: -7.366428852081299
    6. '```' → logprob: -8.616429328918457
    7. 'cha' → logprob: -8.741429328918457
    8. 'bou' → logprob: -9.491429328918457
    9. '   ' → logprob: -9.616429328918457
    10. ' ' → logprob: -9.616429328918457

Token 271: ' boutiques' (ID: 108274)
  Prédit: ' boutiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boutiques' → logprob: -0.4254351556301117
    2. 'bout' → logprob: -1.175435185432434
    3. ' trois' → logprob: -3.5504350662231445
    4. 'tro' → logprob: -5.6754350662231445
    5. ' ' → logprob: -5.9254350662231445
    6. ' boutique' → logprob: -6.8004350662231445
    7. ' three' → logprob: -7.0504350662231445
    8. '3' → logprob: -7.5504350662231445
    9. ' ' → logprob: -9.300435066223145
    10. '```' → logprob: -9.800435066223145

Token 272: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43776267766952515
    2. '.' → logprob: -1.93776273727417
    3. ' pour' → logprob: -3.18776273727417
    4. ' afin' → logprob: -3.31276273727417
    5. '#' → logprob: -3.81276273727417
    6. ' et' → logprob: -3.81276273727417
    7. ' disponible' → logprob: -3.93776273727417
    8. ' ,' → logprob: -4.18776273727417
    9. 'pour' → logprob: -5.06276273727417
    10. ' (' → logprob: -5.31276273727417

Token 273: ' mettre' (ID: 25339)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -1.5742061138153076
    2. ' atteindre' → logprob: -2.1992061138153076
    3. ' chaque' → logprob: -2.3242061138153076
    4. ' obtenir' → logprob: -2.3242061138153076
    5. ' mettre' → logprob: -2.3242061138153076
    6. 'ob' → logprob: -2.4492061138153076
    7. 'calcul' → logprob: -2.6992061138153076
    8. ' trouver' → logprob: -3.1992061138153076
    9. ' calcul' → logprob: -3.1992061138153076
    10. ' avancer' → logprob: -3.9492061138153076

Token 274: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03149557486176491
    2. 'à' → logprob: -3.5314955711364746
    3. ' ' → logprob: -6.906495571136475
    4. ' ' → logprob: -7.281495571136475
    5. ' a' → logprob: -11.031496047973633
    6. '-à' → logprob: -11.531496047973633
    7. ''à' → logprob: -12.406496047973633
    8. 'a' → logprob: -12.531496047973633
    9. '```' → logprob: -12.531496047973633
    10. 'À' → logprob: -12.656496047973633

Token 275: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0007547161658294499
    2. 'jou' → logprob: -8.250754356384277
    3. ' jour' → logprob: -8.500754356384277
    4. '```' → logprob: -9.250754356384277
    5. ' ' → logprob: -9.500754356384277
    6. 'jours' → logprob: -10.375754356384277
    7. 'con' → logprob: -10.500754356384277
    8. 'day' → logprob: -12.250754356384277
    9. 'profit' → logprob: -12.250754356384277
    10. 'j' → logprob: -12.375754356384277

Token 276: '
' (ID: 198)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.06619732826948166
    2. 'le' → logprob: -2.816197395324707
    3. ' la' → logprob: -5.566197395324707
    4. 'la' → logprob: -9.066197395324707
    5. ' les' → logprob: -9.691197395324707
    6. ' dp' → logprob: -10.066197395324707
    7. ' l' → logprob: -10.191197395324707
    8. ' ' → logprob: -10.941197395324707
    9. '   ' → logprob: -10.941197395324707
    10. ' the' → logprob: -10.941197395324707

Token 277: '#' (ID: 2)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.03510976582765579
    2. ' la' → logprob: -3.660109758377075
    3. 'le' → logprob: -5.285109996795654
    4. ' l' → logprob: -6.035109996795654
    5. ' ' → logprob: -7.410109996795654
    6. ' les' → logprob: -7.785109996795654
    7. ' the' → logprob: -9.660109519958496
    8. ' ' → logprob: -9.910109519958496
    9. '_le' → logprob: -10.035109519958496
    10. ' du' → logprob: -10.285109519958496

Token 278: '   ' (ID: 271)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.383375346660614
    2. 'le' → logprob: -1.3833754062652588
    3. ' la' → logprob: -2.883375406265259
    4. 'la' → logprob: -4.75837516784668
    5. '   ' → logprob: -6.88337516784668
    6. ' les' → logprob: -7.13337516784668
    7. ' ' → logprob: -7.88337516784668
    8. ' l' → logprob: -8.50837516784668
    9. 'les' → logprob: -8.50837516784668
    10. 'l' → logprob: -9.00837516784668

Token 279: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.10010755807161331
    2. ' la' → logprob: -2.9751076698303223
    3. 'le' (adapté à ' le') → logprob: -3.2251076698303223
    4. 'l' → logprob: -6.600107669830322
    5. 'a' → logprob: -7.350107669830322
    6. 'min' → logprob: -7.600107669830322
    7. 'co' → logprob: -7.850107669830322
    8. ' ' → logprob: -7.850107669830322
    9. ' le' → logprob: -8.725107192993164
    10. 'c' → logprob: -8.850107192993164

Token 280: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.278084933757782
    2. 'co' → logprob: -2.0280849933624268
    3. ' minimum' → logprob: -3.0280849933624268
    4. 'minimum' → logprob: -4.028084754943848
    5. ' tableau' → logprob: -4.153084754943848
    6. ' prix' → logprob: -4.653084754943848
    7. 'prix' → logprob: -4.903084754943848
    8. 'dp' → logprob: -5.403084754943848
    9. 'cout' → logprob: -6.653084754943848
    10. ' meilleur' → logprob: -6.778084754943848

Token 281: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.3029879033565521
    2. ' minimal' → logprob: -1.5529879331588745
    3. 'minimum' → logprob: -3.177987813949585
    4. '_min' → logprob: -5.677988052368164
    5. 'min' → logprob: -6.302988052368164
    6. ' optimal' → logprob: -7.052988052368164
    7. ' min' → logprob: -7.052988052368164
    8. 'minimal' → logprob: -7.427988052368164
    9. ' minimale' → logprob: -8.427988052368164
    10. 'optimal' → logprob: -9.552988052368164

Token 282: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9849219918251038
    2. '.' → logprob: -1.984921932220459
    3. 's' → logprob: -1.984921932220459
    4. ',' → logprob: -2.234921932220459
    5. '#' → logprob: -2.859921932220459
    6. '<|end|>' → logprob: -2.984921932220459
    7. '
' → logprob: -3.234921932220459
    8. 'import' → logprob: -4.359921932220459
    9. ':' → logprob: -4.609921932220459
    10. ' de' → logprob: -4.859921932220459

Token 283: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3865789473056793
    2. 'a' → logprob: -2.8865790367126465
    3. ' ' → logprob: -2.8865790367126465
    4. ' def' → logprob: -3.6365790367126465
    5. '\' → logprob: -3.6365790367126465
    6. '
' → logprob: -3.7615790367126465
    7. 's' → logprob: -4.0115790367126465
    8. '```' → logprob: -4.2615790367126465
    9. '#' → logprob: -4.3865790367126465
    10. ' 
' → logprob: -4.5115790367126465

Token 284: ' Rés' (ID: 104378)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6345584392547607
    2. 'def' → logprob: -0.8845584392547607
    3. 'from' → logprob: -3.3845584392547607
    4. 'import' → logprob: -3.8845584392547607
    5. ' class' → logprob: -6.50955867767334
    6. '#' → logprob: -8.13455867767334
    7. ' def' → logprob: -8.13455867767334
    8. '```' → logprob: -8.88455867767334
    9. ' from' → logprob: -9.38455867767334
    10. 's' → logprob: -9.75955867767334

Token 285: 'ultat' (ID: 133070)
  Prédit: 'ultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.06292912364006042
    2. 'umé' → logprob: -3.312929153442383
    3. 'olution' → logprob: -3.937929153442383
    4. 'ult' → logprob: -5.312929153442383
    5. 'olu' → logprob: -9.687929153442383
    6. 'oudre' → logprob: -9.812929153442383
    7. 'um' → logprob: -10.812929153442383
    8. 'ulat' → logprob: -11.937929153442383
    9. 'ol' → logprob: -12.312929153442383
    10. '#' → logprob: -12.687929153442383

Token 286: ' final' (ID: 1721)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41598033905029297
    2. ' :' → logprob: -1.290980339050293
    3. ' =' → logprob: -2.790980339050293
    4. 's' → logprob: -6.790980339050293
    5. ' ' → logprob: -6.915980339050293
    6. '=' → logprob: -7.290980339050293
    7. '.' → logprob: -7.790980339050293
    8. ',' → logprob: -8.665980339050293
    9. 'import' → logprob: -9.040980339050293
    10. ' final' → logprob: -9.415980339050293

Token 287: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16147059202194214
    2. ' :' → logprob: -1.911470651626587
    3. 'def' → logprob: -8.036470413208008
    4. ':
' → logprob: -8.661470413208008
    5. '#' → logprob: -9.036470413208008
    6. ' ' → logprob: -9.161470413208008
    7. ' =' → logprob: -9.161470413208008
    8. ' :
' → logprob: -9.411470413208008
    9. '.' → logprob: -9.661470413208008
    10. '```' → logprob: -10.161470413208008

Token 288: ' dp' (ID: 21546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13011851906776428
    2. ' def' → logprob: -2.5051186084747314
    3. 'min' → logprob: -4.755118370056152
    4. ' cost' → logprob: -5.005118370056152
    5. ' min' → logprob: -5.380118370056152
    6. 'cost' → logprob: -5.380118370056152
    7. 'from' → logprob: -5.880118370056152
    8. ' minimal' → logprob: -6.005118370056152
    9. 'import' → logprob: -6.130118370056152
    10. '```' → logprob: -6.505118370056152

Token 289: '[a' (ID: 32035)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008570718578994274
    2. '=' → logprob: -5.258570671081543
    3. '[' → logprob: -5.758570671081543
    4. ']' → logprob: -10.008570671081543
    5. '_' → logprob: -10.133570671081543
    6. '[a' → logprob: -10.883570671081543
    7. 's' → logprob: -11.133570671081543
    8. '[i' → logprob: -11.133570671081543
    9. '=[' → logprob: -11.383570671081543
    10. '[]' → logprob: -12.258570671081543

Token 290: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04376327991485596
    2. '[a' → logprob: -3.1687631607055664
    3. '])' → logprob: -8.043763160705566
    4. ' ]' → logprob: -8.293763160705566
    5. ']=' → logprob: -9.668763160705566
    6. '[' → logprob: -9.918763160705566
    7. '[i' → logprob: -11.293763160705566
    8. ')' → logprob: -11.543763160705566
    9. '+' → logprob: -11.668763160705566
    10. 'a' → logprob: -12.168763160705566

Token 291: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8118597865104675
    2. '
' → logprob: -1.0618598461151123
    3. ':' → logprob: -2.4368598461151123
    4. '[' → logprob: -3.3118598461151123
    5. '=' → logprob: -3.9368598461151123
    6. '_' → logprob: -4.686859607696533
    7. '

' → logprob: -4.686859607696533
    8. 'import' → logprob: -4.811859607696533
    9. '#' → logprob: -5.061859607696533
    10. '```' → logprob: -5.311859607696533

Token 292: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.03903734311461449
    2. 'le' → logprob: -3.2890372276306152
    3. ' la' → logprob: -7.039037227630615
    4. ' ' → logprob: -10.039037704467773
    5. 'la' → logprob: -10.539037704467773
    6. ' the' → logprob: -10.914037704467773
    7. ' ' → logprob: -11.289037704467773
    8. '_le' → logprob: -12.164037704467773
    9. '   ' → logprob: -12.664037704467773
    10. '  ' → logprob: -12.789037704467773

Token 293: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.28797203302383423
    2. 'co' → logprob: -1.4129719734191895
    3. ' minimum' → logprob: -6.1629719734191895
    4. 'minimum' → logprob: -6.5379719734191895
    5. 'prix' → logprob: -6.6629719734191895
    6. ' prix' → logprob: -6.7879719734191895
    7. 'cout' → logprob: -8.787972450256348
    8. ' co' → logprob: -9.037972450256348
    9. ' minimal' → logprob: -9.162972450256348
    10. 'cost' → logprob: -9.287972450256348

Token 294: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.4776681959629059
    2. ' minimal' → logprob: -0.9776681661605835
    3. 'minimum' → logprob: -5.977668285369873
    4. ' total' → logprob: -7.977668285369873
    5. 'minimal' → logprob: -8.727667808532715
    6. '_min' → logprob: -8.977667808532715
    7. ' min' → logprob: -9.102667808532715
    8. ' minimale' → logprob: -9.602667808532715
    9. 'min' → logprob: -9.852667808532715
    10. ' optimal' → logprob: -9.977667808532715

Token 295: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1519012302160263
    2. '_' → logprob: -3.0269012451171875
    3. '=' → logprob: -3.2769012451171875
    4. '[' → logprob: -3.6519012451171875
    5. ',' → logprob: -4.2769012451171875
    6. '.' → logprob: -5.5269012451171875
    7. ' ' → logprob: -6.1519012451171875
    8. 's' → logprob: -6.5269012451171875
    9. ':' → logprob: -6.7769012451171875
    10. ']' → logprob: -7.0269012451171875

Token 296: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.3622717559337616
    2. ' la' → logprob: -2.362271785736084
    3. 'ob' → logprob: -2.487271785736084
    4. ' acheter' → logprob: -3.237271785736084
    5. 'acheter' → logprob: -3.487271785736084
    6. 'a' → logprob: -4.862271785736084
    7. 'la' → logprob: -5.112271785736084
    8. ' produire' → logprob: -5.112271785736084
    9. ' l' → logprob: -5.487271785736084
    10. ' a' → logprob: -5.737271785736084

Token 297: ' exactement' (ID: 108701)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.18711145222187042
    2. ' a' → logprob: -2.0621113777160645
    3. 'a' → logprob: -3.8121113777160645
    4. ' exactement' → logprob: -4.4371113777160645
    5. 'la' → logprob: -5.6871113777160645
    6. ' ' → logprob: -6.0621113777160645
    7. ' une' → logprob: -6.3121113777160645
    8. ' l' → logprob: -7.3121113777160645
    9. 'exact' → logprob: -8.062111854553223
    10. ' ' → logprob: -8.312111854553223

Token 298: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3572860062122345
    2. 'a' → logprob: -1.732285976409912
    3. ' la' → logprob: -2.107285976409912
    4. 'la' → logprob: -6.857285976409912
    5. ' ' → logprob: -7.357285976409912
    6. ' une' → logprob: -8.98228645324707
    7. ' ' → logprob: -9.85728645324707
    8. ' l' → logprob: -9.98228645324707
    9. 'l' → logprob: -11.23228645324707
    10. '    ' → logprob: -11.60728645324707

Token 299: ' gram' (ID: 40134)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7541953921318054
    2. ' =' → logprob: -1.8791954517364502
    3. '<|end|>' → logprob: -2.12919545173645
    4. ',' → logprob: -2.62919545173645
    5. '
' → logprob: -3.37919545173645
    6. '#' → logprob: -3.75419545173645
    7. 'dp' → logprob: -3.87919545173645
    8. 'import' → logprob: -3.87919545173645
    9. '```' → logprob: -3.87919545173645
    10. 's' → logprob: -4.129195213317871

Token 300: 'mes' (ID: 4613)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.3343392610549927
    2. 'mes' → logprob: -1.3343392610549927
    3. '#' → logprob: -4.584339141845703
    4. 'm' → logprob: -4.709339141845703
    5. ' #' → logprob: -7.834339141845703
    6. 'mage' → logprob: -8.459339141845703
    7. 's' → logprob: -8.584339141845703
    8. 'mme' → logprob: -8.834339141845703
    9. '   ' → logprob: -9.209339141845703
    10. 'e' → logprob: -9.209339141845703

Token 301: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8369694352149963
    2. 'dp' → logprob: -1.0869693756103516
    3. 'import' → logprob: -2.5869693756103516
    4. '#' → logprob: -2.9619693756103516
    5. 'def' → logprob: -3.3369693756103516
    6. ':' → logprob: -4.211969375610352
    7. 's' → logprob: -4.586969375610352
    8. ',' → logprob: -4.836969375610352
    9. '.' → logprob: -5.211969375610352
    10. 'a' → logprob: -5.461969375610352

Token 302: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054398972541093826
    2. 'dp' → logprob: -4.304399013519287
    3. 'a' → logprob: -4.429399013519287
    4. ' 
' → logprob: -5.054399013519287
    5. '#' → logprob: -5.304399013519287
    6. 'def' → logprob: -5.429399013519287
    7. '[' → logprob: -5.929399013519287
    8. '\' → logprob: -6.304399013519287
    9. '[
' → logprob: -6.679399013519287
    10. 'import' → logprob: -6.929399013519287

Token 303: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3423179090023041
    2. ' sys' → logprob: -1.3423179388046265
    3. 'math' → logprob: -3.592317819595337
    4. ' math' → logprob: -6.842318058013916
    5. 'heap' → logprob: -10.342317581176758
    6. 'collections' → logprob: -13.467317581176758
    7. ' itertools' → logprob: -13.967317581176758
    8. ' heap' → logprob: -14.217317581176758
    9. '=sys' → logprob: -14.467317581176758
    10. '	sys' → logprob: -16.342317581176758

Token 304: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04500507190823555
    2. '

' → logprob: -3.9200050830841064
    3. 'input' → logprob: -4.295004844665527
    4. 'import' → logprob: -5.295004844665527
    5. 'def' → logprob: -6.045004844665527
    6. 'a' → logprob: -7.170004844665527
    7. 'sys' → logprob: -7.295004844665527
    8. '
' → logprob: -8.170004844665527
    9. ',' → logprob: -8.420004844665527
    10. '<|end|>' → logprob: -8.420004844665527

Token 305: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6950693130493164
    2. 'input' → logprob: -0.6950693130493164
    3. 'a' → logprob: -7.195069313049316
    4. 'import' → logprob: -7.945069313049316
    5. 'INF' → logprob: -8.445069313049316
    6. 'from' → logprob: -8.695069313049316
    7. '#' → logprob: -8.820069313049316
    8. 'sys' → logprob: -9.320069313049316
    9. ' input' → logprob: -10.070069313049316
    10. 'n' → logprob: -10.070069313049316

Token 306: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.807851254940033
    2. 'input' → logprob: -1.0578513145446777
    3. 'class' → logprob: -1.8078513145446777
    4. 'from' → logprob: -3.6828513145446777
    5. '#' → logprob: -5.057851314544678
    6. 'a' → logprob: -5.557851314544678
    7. 'INF' → logprob: -5.807851314544678
    8. 'sys' → logprob: -6.307851314544678
    9. 'import' → logprob: -6.807851314544678
    10. 'MAX' → logprob: -7.432851314544678

Token 307: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.012603480368852615
    2. 'fin' → logprob: -4.387603282928467
    3. 'fine' → logprob: -10.262603759765625
    4. '
' → logprob: -11.262603759765625
    5. 'fault' → logprob: -11.262603759765625
    6. 'finite' → logprob: -11.512603759765625
    7. 'fi' → logprob: -11.637603759765625
    8. '#' → logprob: -12.137603759765625
    9. 'fn' → logprob: -13.387603759765625
    10. 'ff' → logprob: -13.637603759765625

Token 308: 'ition' (ID: 868)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.03653135523200035
    2. 'inir' → logprob: -4.161531448364258
    3. 'import' → logprob: -4.536531448364258
    4. 'def' → logprob: -5.661531448364258
    5. ' def' → logprob: -6.661531448364258
    6. 'ine' → logprob: -6.786531448364258
    7. ' import' → logprob: -6.911531448364258
    8. ' user' → logprob: -8.661531448364258
    9. ' class' → logprob: -8.786531448364258
    10. 'ition' → logprob: -8.911531448364258

Token 309: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6957201957702637
    2. ' de' → logprob: -1.0707201957702637
    3. 'class' → logprob: -2.1957201957702637
    4. ' class' → logprob: -3.9457201957702637
    5. ' A' → logprob: -4.945720195770264
    6. 'des' → logprob: -5.570720195770264
    7. 's' → logprob: -5.695720195770264
    8. 'def' → logprob: -6.070720195770264
    9. ' d' → logprob: -6.195720195770264
    10. ' ' → logprob: -6.445720195770264

Token 310: ' données' (ID: 30580)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12315655499696732
    2. 'bout' → logprob: -3.8731565475463867
    3. 's' → logprob: -4.123156547546387
    4. 'classes' → logprob: -4.248156547546387
    5. 'data' → logprob: -4.623156547546387
    6. 'parameters' → logprob: -4.748156547546387
    7. 'dat' → logprob: -5.248156547546387
    8. 'Bout' → logprob: -5.373156547546387
    9. 'def' → logprob: -5.498156547546387
    10. ' boutiques' → logprob: -5.498156547546387

Token 311: ' des' (ID: 731)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4745331108570099
    2. 'class' → logprob: -1.2245330810546875
    3. ' A' → logprob: -3.4745330810546875
    4. 's' → logprob: -3.9745330810546875
    5. 'a' → logprob: -4.9745330810546875
    6. '#' → logprob: -5.2245330810546875
    7. ' class' → logprob: -5.4745330810546875
    8. 'import' → logprob: -5.8495330810546875
    9. 'bout' → logprob: -5.8495330810546875
    10. 'shops' → logprob: -6.0995330810546875

Token 312: ' boutiques' (ID: 108274)
  Prédit: ' boutiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boutiques' → logprob: -0.21333438158035278
    2. 'bout' → logprob: -1.838334321975708
    3. ' trois' → logprob: -3.838334321975708
    4. ' magasins' → logprob: -5.463334560394287
    5. ' three' → logprob: -5.838334560394287
    6. 'shops' → logprob: -6.838334560394287
    7. 'tro' → logprob: -7.588334560394287
    8. '#' → logprob: -7.588334560394287
    9. 's' → logprob: -7.713334560394287
    10. ' sacs' → logprob: -7.838334560394287

Token 313: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.2996991276741028
    2. 'A' → logprob: -1.549699068069458
    3. 'bout' → logprob: -4.174699306488037
    4. 'shops' → logprob: -4.674699306488037
    5. 'b' → logprob: -4.799699306488037
    6. ' boutiques' → logprob: -5.549699306488037
    7. ' A' → logprob: -5.799699306488037
    8. ' class' → logprob: -6.549699306488037
    9. '#' → logprob: -6.799699306488037
    10. 'stores' → logprob: -7.299699306488037

Token 314: 'shops' (ID: 25850)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8333542346954346
    2. 'shops' → logprob: -1.0833542346954346
    3. 'A' → logprob: -1.8333542346954346
    4. 'bout' → logprob: -3.2083542346954346
    5. 'stores' → logprob: -4.5833539962768555
    6. 'b' → logprob: -4.8333539962768555
    7. '#' → logprob: -5.9583539962768555
    8. 'shop' → logprob: -6.5833539962768555
    9. ' A' → logprob: -6.9583539962768555
    10. ' boutiques' → logprob: -6.9583539962768555

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0002108118060277775
    2. '=' → logprob: -8.500210762023926
    3. 'A' → logprob: -12.375210762023926
    4. ' =[' → logprob: -13.500210762023926
    5. 's' → logprob: -14.250210762023926
    6. ' ' → logprob: -14.625210762023926
    7. '=[' → logprob: -15.500210762023926
    8. ' =
' → logprob: -16.000211715698242
    9. '=[
' → logprob: -16.250211715698242
    10. ' ' → logprob: -16.625211715698242

Token 316: ' {
' (ID: 405)
  Prédit: ' [
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [
' → logprob: -0.41729897260665894
    2. '[
' → logprob: -1.4172990322113037
    3. ' [' → logprob: -2.6672990322113037
    4. '[' → logprob: -3.5422990322113037
    5. ' {
' → logprob: -9.417299270629883
    6. ' [
' → logprob: -9.417299270629883
    7. '[{' → logprob: -9.417299270629883
    8. ' {' → logprob: -9.917299270629883
    9. ' [{'' → logprob: -10.167299270629883
    10. '{
' → logprob: -10.542299270629883

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05024039372801781
    2. ''A' → logprob: -3.4252402782440186
    3. ' '' → logprob: -4.175240516662598
    4. '"A' → logprob: -7.300240516662598
    5. ' ' → logprob: -8.675240516662598
    6. ''' → logprob: -8.800240516662598
    7. ' "' → logprob: -10.050240516662598
    8. 'A' → logprob: -10.800240516662598
    9. '  ' → logprob: -11.800240516662598
    10. '   ' → logprob: -12.050240516662598

Token 318: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.015172583051025867
    2. '"A' → logprob: -4.265172481536865
    3. ' '' → logprob: -7.265172481536865
    4. '   ' → logprob: -8.265172958374023
    5. 'A' → logprob: -10.140172958374023
    6. ' ' → logprob: -12.390172958374023
    7. '’A' → logprob: -12.890172958374023
    8. ' "' → logprob: -13.265172958374023
    9. '  ' → logprob: -13.640172958374023
    10. ''' (adapté à ' '') → logprob: -13.640172958374023

Token 319: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010255685076117516
    2. ''A' → logprob: -4.635255813598633
    3. ' A' → logprob: -8.010255813598633
    4. '"A' → logprob: -9.010255813598633
    5. ''' → logprob: -11.010255813598633
    6. ' '' → logprob: -11.260255813598633
    7. 'a' → logprob: -12.010255813598633
    8. ''a' → logprob: -12.635255813598633
    9. '   ' → logprob: -13.510255813598633
    10. '"' → logprob: -13.760255813598633

Token 320: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0003449984942562878
    2. ''' → logprob: -8.000345230102539
    3. ':' → logprob: -11.625345230102539
    4. ' ':' → logprob: -15.375345230102539
    5. '":' → logprob: -15.375345230102539
    6. '}:' → logprob: -16.50034523010254
    7. '}' → logprob: -17.37534523010254
    8. ')':' → logprob: -18.12534523010254
    9. '’:' → logprob: -18.50034523010254
    10. 'A' → logprob: -18.50034523010254

Token 321: ' {
' (ID: 405)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.3627261519432068
    2. ' {'' → logprob: -1.3627262115478516
    3. '{' → logprob: -3.7377262115478516
    4. '{
' → logprob: -4.737726211547852
    5. '(' → logprob: -5.237726211547852
    6. '{"' → logprob: -5.487726211547852
    7. ' (' → logprob: -6.237726211547852
    8. ' {' → logprob: -6.487726211547852
    9. '   ' → logprob: -6.612726211547852
    10. ' {
' → logprob: -6.862726211547852

Token 322: '       ' (ID: 309)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.1288716346025467
    2. ''' → logprob: -2.7538716793060303
    3. '       ' → logprob: -3.3788716793060303
    4. ''s' → logprob: -4.128871440887451
    5. '   ' → logprob: -5.753871440887451
    6. '    ' → logprob: -6.128871440887451
    7. ':' → logprob: -7.753871440887451
    8. ' {'' → logprob: -8.37887191772461
    9. '"' → logprob: -8.75387191772461
    10. ' ' → logprob: -9.00387191772461

Token 323: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.01589335687458515
    2. ''s' → logprob: -4.390893459320068
    3. ''q' → logprob: -6.765893459320068
    4. ' '' → logprob: -7.140893459320068
    5. '   ' → logprob: -7.140893459320068
    6. '"' → logprob: -7.515893459320068
    7. '       ' → logprob: -10.39089298248291
    8. ' ' → logprob: -10.76589298248291
    9. ''un' → logprob: -11.64089298248291
    10. '"s' → logprob: -12.14089298248291

Token 324: 'amount' (ID: 10703)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.21053659915924072
    2. 'qty' → logprob: -1.9605365991592407
    3. 's' → logprob: -3.710536479949951
    4. 'weight' → logprob: -4.585536479949951
    5. 'quant' → logprob: -5.085536479949951
    6. 'q' → logprob: -5.710536479949951
    7. 'size' → logprob: -6.710536479949951
    8. 'price' → logprob: -7.210536479949951
    9. 'unit' → logprob: -7.210536479949951
    10. 'amount' → logprob: -7.460536479949951

Token 325: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00836941972374916
    2. ''' → logprob: -5.758369445800781
    3. '_per' → logprob: -5.758369445800781
    4. '_par' → logprob: -6.508369445800781
    5. ':' → logprob: -8.758369445800781
    6. 's' → logprob: -8.758369445800781
    7. '_s' → logprob: -9.008369445800781
    8. 'par' → logprob: -10.258369445800781
    9. '   ' → logprob: -10.758369445800781
    10. 'per' → logprob: -10.883369445800781

Token 326: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.7679314017295837
    2. '100' → logprob: -1.3929314613342285
    3. ' ' → logprob: -1.8929314613342285
    4. '250' → logprob: -3.1429314613342285
    5. '200' → logprob: -4.1429314613342285
    6. '400' → logprob: -4.2679314613342285
    7. '750' → logprob: -4.2679314613342285
    8. '50' → logprob: -4.3929314613342285
    9. '300' → logprob: -4.8929314613342285
    10. '10' → logprob: -4.8929314613342285

Token 327: '200' (ID: 1179)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.6238969564437866
    2. '100' → logprob: -1.1238969564437866
    3. '250' → logprob: -3.123897075653076
    4. '200' → logprob: -4.123897075653076
    5. '400' → logprob: -4.123897075653076
    6. '300' → logprob: -4.248897075653076
    7. '10' → logprob: -4.498897075653076
    8. '50' → logprob: -4.748897075653076
    9. '750' → logprob: -4.998897075653076
    10. '5' → logprob: -5.748897075653076

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014253417029976845
    2. ',
' → logprob: -4.264253616333008
    3. ' ,' → logprob: -9.514253616333008
    4. ' ,
' → logprob: -12.139253616333008
    5. ',
' → logprob: -12.389253616333008
    6. ',

' → logprob: -12.764253616333008
    7. '0' → logprob: -12.889253616333008
    8. '   ' → logprob: -14.639253616333008
    9. '       ' → logprob: -15.014253616333008
    10. ','' → logprob: -15.889253616333008

Token 329: '     ' (ID: 530)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7060323357582092
    2. '       ' → logprob: -1.2060322761535645
    3. ' '' → logprob: -1.5810322761535645
    4. ''s' → logprob: -7.3310322761535645
    5. '   ' → logprob: -8.081032752990723
    6. ''t' → logprob: -9.081032752990723
    7. ' ' → logprob: -10.081032752990723
    8. '        ' → logprob: -10.956032752990723
    9. '           ' → logprob: -11.206032752990723
    10. '      ' → logprob: -11.206032752990723

Token 330: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12827171385288239
    2. '       ' → logprob: -2.7532718181610107
    3. ' '' → logprob: -2.8782718181610107
    4. ''s' → logprob: -8.62827205657959
    5. '   ' → logprob: -9.62827205657959
    6. ''t' → logprob: -9.75327205657959
    7. '#' (adapté à ' #') → logprob: -10.75327205657959
    8. ' ' → logprob: -11.37827205657959
    9. ''un' → logprob: -11.37827205657959
    10. '"' → logprob: -11.37827205657959

Token 331: ' en' (ID: 469)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.6277644038200378
    2. ''' → logprob: -0.8777644038200378
    3. ' price' → logprob: -3.8777644634246826
    4. ' '' → logprob: -4.0027642250061035
    5. 'prix' → logprob: -5.3777642250061035
    6. ''s' → logprob: -5.6277642250061035
    7. ' prix' → logprob: -6.7527642250061035
    8. 'unit' → logprob: -7.2527642250061035
    9. ''un' → logprob: -7.8777642250061035
    10. '   ' → logprob: -8.252764701843262

Token 332: ' gram' (ID: 40134)
  Prédit: 'gram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gram' → logprob: -0.5241448283195496
    2. ' gram' → logprob: -0.8991448283195496
    3. 'g' → logprob: -7.524144649505615
    4. 'grams' → logprob: -8.024145126342773
    5. ' ' → logprob: -10.024145126342773
    6. ' grams' → logprob: -10.149145126342773
    7. 'gr' → logprob: -11.274145126342773
    8. ' g' → logprob: -11.274145126342773
    9. ' Gram' → logprob: -12.024145126342773
    10. '   ' → logprob: -12.024145126342773

Token 333: 'mes' (ID: 4613)
  Prédit: 'mes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mes' → logprob: -0.03224726393818855
    2. 's' → logprob: -3.657247304916382
    3. 'me' → logprob: -6.157247066497803
    4. ''' → logprob: -6.407247066497803
    5. 'es' → logprob: -7.282247066497803
    6. '   ' → logprob: -8.032247543334961
    7. '#' → logprob: -8.157247543334961
    8. ' '' → logprob: -8.282247543334961
    9. ',' → logprob: -9.032247543334961
    10. '}' → logprob: -9.157247543334961

Token 334: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025782748125493526
    2. ',
' → logprob: -6.002578258514404
    3. '       ' → logprob: -9.377578735351562
    4. ' ,' → logprob: -11.502578735351562
    5. '<|end|>' → logprob: -12.502578735351562
    6. '   ' → logprob: -13.377578735351562
    7. ',

' → logprob: -14.252578735351562
    8. '}' → logprob: -14.752578735351562
    9. ',
' → logprob: -15.002578735351562
    10. '#' → logprob: -15.627578735351562

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07663425803184509
    2. ' '' → logprob: -3.201634168624878
    3. ''' → logprob: -3.451634168624878
    4. '   ' → logprob: -7.201634407043457
    5. ''s' → logprob: -8.451634407043457
    6. 'price' → logprob: -9.701634407043457
    7. ''t' → logprob: -9.701634407043457
    8. ' price' → logprob: -9.826634407043457
    9. ' ' → logprob: -10.201634407043457
    10. ' prix' → logprob: -10.701634407043457

Token 336: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.006347507704049349
    2. ' '' → logprob: -5.38134765625
    3. '       ' → logprob: -6.50634765625
    4. '   ' → logprob: -9.00634765625
    5. ''s' → logprob: -10.25634765625
    6. 'price' → logprob: -10.25634765625
    7. ' price' → logprob: -11.63134765625
    8. ''t' → logprob: -12.00634765625
    9. ' ' → logprob: -12.25634765625
    10. ''un' → logprob: -12.75634765625

Token 337: 'price' (ID: 7629)
  Prédit: 'price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.003209680551663041
    2. 'unit' → logprob: -5.878209590911865
    3. 'cost' → logprob: -8.253210067749023
    4. ' price' → logprob: -9.128210067749023
    5. 'base' → logprob: -11.003210067749023
    6. 'prix' → logprob: -11.503210067749023
    7. 'prices' → logprob: -13.628210067749023
    8. '```' → logprob: -13.878210067749023
    9. '   ' → logprob: -14.128210067749023
    10. '#' → logprob: -14.253210067749023

Token 338: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.001328572048805654
    2. ''' → logprob: -6.626328468322754
    3. '":' → logprob: -13.376328468322754
    4. ':' → logprob: -14.001328468322754
    5. 's' → logprob: -16.25132942199707
    6. ' ':' → logprob: -16.25132942199707
    7. '_per' → logprob: -16.87632942199707
    8. '```' → logprob: -17.00132942199707
    9. ''}' → logprob: -17.62632942199707
    10. ''''' → logprob: -18.37632942199707

Token 339: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9168883562088013
    2. '100' → logprob: -1.9168883562088013
    3. '50' → logprob: -2.1668882369995117
    4. '120' → logprob: -2.1668882369995117
    5. '10' → logprob: -2.9168882369995117
    6. '150' → logprob: -3.0418882369995117
    7. '500' → logprob: -3.2918882369995117
    8. '300' → logprob: -3.2918882369995117
    9. '15' → logprob: -3.2918882369995117
    10. '3' → logprob: -3.2918882369995117

Token 340: '380' (ID: 22413)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '50' → logprob: -1.7523704767227173
    2. '100' → logprob: -1.8773704767227173
    3. '5' → logprob: -2.1273703575134277
    4. '150' → logprob: -2.7523703575134277
    5. '10' → logprob: -2.8773703575134277
    6. '120' → logprob: -2.8773703575134277
    7. '20' → logprob: -3.0023703575134277
    8. '500' → logprob: -3.0023703575134277
    9. '15' → logprob: -3.1273703575134277
    10. '3' → logprob: -3.5023703575134277

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006276552099734545
    2. ',
' → logprob: -5.131276607513428
    3. '},' → logprob: -8.50627613067627
    4. ' ,' → logprob: -9.50627613067627
    5. '}' → logprob: -10.75627613067627
    6. '0' → logprob: -10.88127613067627
    7. '.' → logprob: -11.63127613067627
    8. '   ' → logprob: -11.88127613067627
    9. ',
' → logprob: -12.25627613067627
    10. ' ' → logprob: -12.63127613067627

Token 342: '      ' (ID: 1699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09512286633253098
    2. ''' → logprob: -3.345122814178467
    3. ' '' → logprob: -3.470122814178467
    4. ''s' → logprob: -4.220122814178467
    5. ''t' → logprob: -5.845122814178467
    6. '   ' → logprob: -5.970122814178467
    7. 'discount' → logprob: -7.095122814178467
    8. ''d' → logprob: -7.095122814178467
    9. ''re' → logprob: -7.845122814178467
    10. ' ' → logprob: -8.345123291015625

Token 343: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08399718254804611
    2. ''' → logprob: -3.2089972496032715
    3. ''s' → logprob: -3.4589972496032715
    4. '   ' → logprob: -5.7089972496032715
    5. ' '' → logprob: -6.0839972496032715
    6. 'discount' → logprob: -7.4589972496032715
    7. ''re' → logprob: -7.8339972496032715
    8. '}' → logprob: -7.9589972496032715
    9. ''t' → logprob: -8.333996772766113
    10. ' ' → logprob: -8.458996772766113

Token 344: ' prix' (ID: 18771)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1925897598266602
    2. ''' → logprob: -1.1925897598266602
    3. ''s' → logprob: -2.81758975982666
    4. ' '' → logprob: -2.94258975982666
    5. ''t' → logprob: -3.19258975982666
    6. ''en' → logprob: -3.19258975982666
    7. '   ' → logprob: -3.44258975982666
    8. '       ' → logprob: -3.44258975982666
    9. '},' → logprob: -3.56758975982666
    10. '}' → logprob: -3.56758975982666

Token 345: ' un' (ID: 537)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08583083748817444
    2. ',
' → logprob: -2.5858309268951416
    3. ' ,' → logprob: -5.7108306884765625
    4. '   ' → logprob: -6.0858306884765625
    5. '.' → logprob: -7.9608306884765625
    6. '0' → logprob: -8.335830688476562
    7. ' ,
' → logprob: -8.585830688476562
    8. '       ' → logprob: -8.835830688476562
    9. ' par' → logprob: -10.085830688476562
    10. '  ' → logprob: -10.585830688476562

Token 346: 'itaire' (ID: 28335)
  Prédit: 'itaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaire' → logprob: -0.10270898789167404
    2. 'ité' → logprob: -2.3527090549468994
    3. 'it' → logprob: -6.72770881652832
    4. 'ités' → logprob: -7.60270881652832
    5. 's' → logprob: -8.47770881652832
    6. ' sac' → logprob: -8.47770881652832
    7. 'ite' → logprob: -9.72770881652832
    8. 'itaires' → logprob: -9.72770881652832
    9. '   ' → logprob: -10.35270881652832
    10. 'ità' → logprob: -10.97770881652832

Token 347: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043222296983003616
    2. ',
' → logprob: -3.168222188949585
    3. '   ' → logprob: -9.668222427368164
    4. ' ,' → logprob: -9.668222427368164
    5. '}' → logprob: -10.793222427368164
    6. ',
' → logprob: -10.793222427368164
    7. '},' → logprob: -11.043222427368164
    8. '       ' → logprob: -11.293222427368164
    9. '.' → logprob: -11.668222427368164
    10. ' ,
' → logprob: -12.043222427368164

Token 348: 'yen' (ID: 31069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17514817416667938
    2. 'en' → logprob: -2.6751482486724854
    3. '),' → logprob: -3.5501482486724854
    4. ' )' → logprob: -4.050148010253906
    5. ' par' → logprob: -4.425148010253906
    6. 'par' → logprob: -4.425148010253906
    7. '),
' → logprob: -5.800148010253906
    8. ' en' → logprob: -6.050148010253906
    9. ')#' → logprob: -6.050148010253906
    10. '#' → logprob: -6.550148010253906

Token 349: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06187322735786438
    2. ')
' → logprob: -2.936873197555542
    3. '),
' → logprob: -5.436873435974121
    4. '),' → logprob: -6.186873435974121
    5. ' )' → logprob: -8.186873435974121
    6. 's' → logprob: -9.311873435974121
    7. ' )
' → logprob: -9.936873435974121
    8. '   ' → logprob: -10.811873435974121
    9. ')

' → logprob: -10.936873435974121
    10. 'es' → logprob: -11.311873435974121

Token 350: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06253447383642197
    2. ',
' → logprob: -2.8125345706939697
    3. '       ' → logprob: -7.687534332275391
    4. '   ' → logprob: -9.56253433227539
    5. ',
' → logprob: -10.81253433227539
    6. ' ,' → logprob: -12.06253433227539
    7. ',

' → logprob: -12.56253433227539
    8. '',' → logprob: -13.18753433227539
    9. '}' → logprob: -13.56253433227539
    10. '},' → logprob: -14.31253433227539

Token 351: ' sac' (ID: 10672)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10223255306482315
    2. ' sac' → logprob: -2.3522324562072754
    3. ' ' → logprob: -6.727232456207275
    4. ' ' → logprob: -8.352232933044434
    5. '```' → logprob: -8.602232933044434
    6. '   ' → logprob: -9.352232933044434
    7. '	s' → logprob: -9.602232933044434
    8. '  ' → logprob: -10.414732933044434
    9. ' s' → logprob: -10.414732933044434
    10. '    ' → logprob: -11.352232933044434

Token 352: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0738447904586792
    2. ',
' → logprob: -2.6988449096679688
    3. '       ' → logprob: -5.698844909667969
    4. '   ' → logprob: -7.698844909667969
    5. ',
' → logprob: -9.698844909667969
    6. ' ,' → logprob: -11.198844909667969
    7. ',

' → logprob: -12.448844909667969
    8. '}' → logprob: -12.698844909667969
    9. '',' → logprob: -12.823844909667969
    10. '},' → logprob: -12.948844909667969

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.586537778377533
    2. ''' → logprob: -0.836537778377533
    3. ' '' → logprob: -4.961537837982178
    4. ''s' → logprob: -6.836537837982178
    5. '   ' → logprob: -7.086537837982178
    6. ''d' → logprob: -7.461537837982178
    7. ''t' → logprob: -7.711537837982178
    8. ''b' → logprob: -8.58653736114502
    9. ' ' → logprob: -9.33653736114502
    10. ''description' → logprob: -9.71153736114502

Token 354: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.024385325610637665
    2. 'discount' → logprob: -4.649385452270508
    3. ''b' → logprob: -4.899385452270508
    4. '   ' → logprob: -6.399385452270508
    5. ' '' → logprob: -6.524385452270508
    6. ''d' → logprob: -6.774385452270508
    7. ''s' → logprob: -6.899385452270508
    8. '       ' → logprob: -7.899385452270508
    9. ''t' → logprob: -8.274385452270508
    10. '"' → logprob: -8.399385452270508

Token 355: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.047438450157642365
    2. 'bundle' → logprob: -3.797438383102417
    3. 'lot' → logprob: -4.297438621520996
    4. 'bulk' → logprob: -5.547438621520996
    5. 'batch' → logprob: -6.297438621520996
    6. 'pack' → logprob: -6.672438621520996
    7. 'offer' → logprob: -6.922438621520996
    8. 'deal' → logprob: -7.047438621520996
    9. 'quantity' → logprob: -8.297438621520996
    10. 'package' → logprob: -8.797438621520996

Token 356: '_units' (ID: 67867)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0646500438451767
    2. 's' → logprob: -3.564650058746338
    3. '_qty' → logprob: -4.814650058746338
    4. ''' → logprob: -4.939650058746338
    5. '_per' → logprob: -5.064650058746338
    6. '_rate' → logprob: -5.939650058746338
    7. '_quantity' → logprob: -5.939650058746338
    8. '_threshold' → logprob: -6.189650058746338
    9. '_amount' → logprob: -6.564650058746338
    10. '_ratio' → logprob: -6.814650058746338

Token 357: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.000988030806183815
    2. ''' → logprob: -7.000988006591797
    3. ':' → logprob: -9.500988006591797
    4. '":' → logprob: -13.625988006591797
    5. ' ':' → logprob: -16.125988006591797
    6. '=' → logprob: -16.375988006591797
    7. 's' → logprob: -16.375988006591797
    8. '   ' → logprob: -16.375988006591797
    9. ''=' → logprob: -16.875988006591797
    10. '```' → logprob: -16.875988006591797

Token 358: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5005576610565186
    2. '3' → logprob: -1.3755576610565186
    3. ' ' → logprob: -2.8755576610565186
    4. '10' → logprob: -2.8755576610565186
    5. '4' → logprob: -3.7505576610565186
    6. '2' → logprob: -6.250557899475098
    7. '6' → logprob: -7.000557899475098
    8. '12' → logprob: -7.250557899475098
    9. '20' → logprob: -7.375557899475098
    10. '1' → logprob: -8.500557899475098

Token 359: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5194677114486694
    2. '5' → logprob: -1.0194677114486694
    3. '10' → logprob: -3.769467830657959
    4. '4' → logprob: -4.394467830657959
    5. '2' → logprob: -5.769467830657959
    6. '12' → logprob: -6.519467830657959
    7. '6' → logprob: -6.769467830657959
    8. '8' → logprob: -7.269467830657959
    9. '20' → logprob: -7.394467830657959
    10. '15' → logprob: -7.769467830657959

Token 360: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07976588606834412
    2. ',
' → logprob: -2.579765796661377
    3. '}' → logprob: -7.454765796661377
    4. '   ' → logprob: -9.079766273498535
    5. '},' → logprob: -9.454766273498535
    6. ',
' → logprob: -9.579766273498535
    7. ' ,' → logprob: -11.204766273498535
    8. ',

' → logprob: -11.704766273498535
    9. '       ' → logprob: -12.204766273498535
    10. ','' → logprob: -12.954766273498535

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21522784233093262
    2. ''' → logprob: -1.8402278423309326
    3. ' '' → logprob: -3.4652278423309326
    4. '   ' → logprob: -6.840228080749512
    5. ''s' → logprob: -7.215228080749512
    6. ''d' → logprob: -7.590228080749512
    7. ''description' → logprob: -7.590228080749512
    8. ''t' → logprob: -8.465228080749512
    9. '           ' → logprob: -9.215228080749512
    10. ' ' → logprob: -9.590228080749512

Token 362: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.025694800540804863
    2. '       ' → logprob: -3.9006948471069336
    3. ' '' → logprob: -5.525694847106934
    4. '   ' → logprob: -7.150694847106934
    5. ' ' → logprob: -9.400694847106934
    6. ''d' → logprob: -9.400694847106934
    7. '      ' → logprob: -10.150694847106934
    8. 'discount' → logprob: -10.525694847106934
    9. ''description' → logprob: -10.775694847106934
    10. '  ' → logprob: -11.275694847106934

Token 363: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.00020914296328555793
    2. ' discount' → logprob: -8.750208854675293
    3. ''' → logprob: -11.000208854675293
    4. 're' → logprob: -11.375208854675293
    5. 'price' → logprob: -11.500208854675293
    6. 'rate' → logprob: -12.500208854675293
    7. 'disc' → logprob: -13.875208854675293
    8. ''''' → logprob: -14.000208854675293
    9. '   ' → logprob: -14.000208854675293
    10. '_discount' → logprob: -14.125208854675293

Token 364: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -0.7103495001792908
    2. '':' → logprob: -1.0853495597839355
    3. '_percent' → logprob: -2.0853495597839355
    4. '_pct' → logprob: -3.3353495597839355
    5. '_percentage' → logprob: -5.0853495597839355
    6. '_amount' → logprob: -6.7103495597839355
    7. '_value' → logprob: -6.9603495597839355
    8. ''' → logprob: -7.2103495597839355
    9. '_ratio' → logprob: -7.7103495597839355
    10. '_price' → logprob: -7.9603495597839355

Token 365: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00016921341011766344
    2. ''' → logprob: -8.750168800354004
    3. ':' → logprob: -11.625168800354004
    4. '":' → logprob: -13.875168800354004
    5. 'e' → logprob: -15.125168800354004
    6. ' ':' → logprob: -15.750168800354004
    7. 'd' → logprob: -16.00016975402832
    8. 's' → logprob: -16.00016975402832
    9. '```' → logprob: -16.37516975402832
    10. ''}' → logprob: -17.37516975402832

Token 366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18017229437828064
    2. ' ' → logprob: -1.805172324180603
    3. '10' → logprob: -8.305171966552734
    4. '20' → logprob: -10.305171966552734
    5. '90' → logprob: -10.680171966552734
    6. '5' → logprob: -11.055171966552734
    7. '15' → logprob: -11.055171966552734
    8. '1' → logprob: -11.305171966552734
    9. '80' → logprob: -11.555171966552734
    10. '8' → logprob: -11.805171966552734

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005894903093576431
    2. '90' → logprob: -6.505895137786865
    3. '10' → logprob: -6.755895137786865
    4. '80' → logprob: -6.880895137786865
    5. ' ' → logprob: -7.130895137786865
    6. '20' → logprob: -8.130894660949707
    7. '95' → logprob: -8.505894660949707
    8. '85' → logprob: -8.505894660949707
    9. '15' → logprob: -9.005894660949707
    10. '50' → logprob: -9.005894660949707

Token 368: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.630610641877865e-06
    2. ',' → logprob: -12.125006675720215
    3. '.
' → logprob: -14.875006675720215
    4. '0' → logprob: -15.375006675720215
    5. ',
' → logprob: -16.3750057220459
    6. '1' → logprob: -16.8750057220459
    7. ' .' → logprob: -17.0000057220459
    8. '6' → logprob: -17.3750057220459
    9. '4' → logprob: -17.5000057220459
    10. '2' → logprob: -17.7500057220459

Token 369: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.8191123604774475
    2. '95' → logprob: -1.4441123008728027
    3. '8' → logprob: -1.9441123008728027
    4. '85' → logprob: -3.0691123008728027
    5. '05' → logprob: -3.4441123008728027
    6. '75' → logprob: -3.6941123008728027
    7. '7' → logprob: -4.069112300872803
    8. '1' → logprob: -4.069112300872803
    9. '5' → logprob: -4.319112300872803
    10. '2' → logprob: -4.819112300872803

Token 370: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12664760649204254
    2. '},' → logprob: -2.626647710800171
    3. '}' → logprob: -3.376647710800171
    4. ',' → logprob: -4.501647472381592
    5. '},
' → logprob: -7.126647472381592
    6. ',
' → logprob: -7.751647472381592
    7. ' },' → logprob: -9.50164794921875
    8. ' }' → logprob: -10.75164794921875
    9. ' ' → logprob: -11.12664794921875
    10. '   ' → logprob: -11.75164794921875

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7183353304862976
    2. '}' → logprob: -0.9683353304862976
    3. ',' → logprob: -2.3433353900909424
    4. '},' → logprob: -3.3433353900909424
    5. ',
' → logprob: -6.718335151672363
    6. '},
' → logprob: -9.343335151672363
    7. ' }' → logprob: -10.093335151672363
    8. ' ' → logprob: -10.968335151672363
    9. ' },' → logprob: -10.968335151672363
    10. '	' → logprob: -12.343335151672363

Token 372: ' },
' (ID: 1862)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.24595022201538086
    2. '   ' → logprob: -2.120950222015381
    3. '}' → logprob: -2.495950222015381
    4. ',' → logprob: -4.370950222015381
    5. '},
' (adapté à ' },
') → logprob: -5.870950222015381
    6. ' },' → logprob: -8.745950698852539
    7. '},

' → logprob: -10.120950698852539
    8. ',
' → logprob: -11.245950698852539
    9. '	' → logprob: -11.995950698852539
    10. ' }' → logprob: -12.245950698852539

Token 373: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2097351849079132
    2. '   ' → logprob: -1.7097351551055908
    3. ' ' → logprob: -4.95973539352417
    4. ' '' → logprob: -6.70973539352417
    5. 'B' → logprob: -10.834734916687012
    6. '
' → logprob: -11.834734916687012
    7. '  ' → logprob: -12.459734916687012
    8. ' B' → logprob: -12.584734916687012
    9. ''b' → logprob: -12.709734916687012
    10. '"B' → logprob: -12.959734916687012

Token 374: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0014394002500921488
    2. '   ' → logprob: -6.751439571380615
    3. ' ' → logprob: -8.876439094543457
    4. ' '' → logprob: -9.001439094543457
    5. 'B' → logprob: -12.626439094543457
    6. '"B' → logprob: -14.376439094543457
    7. ' B' → logprob: -14.501439094543457
    8. '
' → logprob: -15.001439094543457
    9. ''S' → logprob: -15.126439094543457
    10. '  ' → logprob: -15.251439094543457

Token 375: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007289938512258232
    2. ''' → logprob: -7.250729084014893
    3. ' B' → logprob: -10.875728607177734
    4. ' '' → logprob: -16.000728607177734
    5. '   ' → logprob: -17.125728607177734
    6. ' ' → logprob: -17.250728607177734
    7. '"B' → logprob: -17.375728607177734
    8. 'b' → logprob: -18.375728607177734
    9. '#' → logprob: -18.625728607177734
    10. '"' → logprob: -19.125728607177734

Token 376: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.018183186650276184
    2. ':' → logprob: -4.01818323135376
    3. ''' → logprob: -10.518182754516602
    4. '":' → logprob: -12.893182754516602
    5. ' :' → logprob: -13.518182754516602
    6. ' ':' → logprob: -14.393182754516602
    7. '}:' → logprob: -14.893182754516602
    8. '’:' → logprob: -14.893182754516602
    9. '»:' → logprob: -15.518182754516602
    10. '']:' → logprob: -15.643182754516602

Token 377: ' {
' (ID: 405)
  Prédit: ' {
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {
' → logprob: -0.2719481289386749
    2. '{
' → logprob: -1.5219480991363525
    3. ' {' → logprob: -4.396948337554932
    4. '{' → logprob: -4.896948337554932
    5. '   ' → logprob: -10.396947860717773
    6. ' ' → logprob: -13.146947860717773
    7. ' {
' → logprob: -13.271947860717773
    8. ' {
' → logprob: -14.521947860717773
    9. '{
' → logprob: -15.146947860717773
    10. ' {

' → logprob: -15.771947860717773

Token 378: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12230268865823746
    2. '       ' → logprob: -2.497302770614624
    3. ''' → logprob: -3.622302770614624
    4. ' '' → logprob: -5.622302532196045
    5. ''A' → logprob: -6.747302532196045
    6. '    ' → logprob: -7.622302532196045
    7. ':' → logprob: -7.622302532196045
    8. '     ' → logprob: -9.372303009033203
    9. '  ' → logprob: -10.247303009033203
    10. '=' → logprob: -10.247303009033203

Token 379: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.010739934630692005
    2. '   ' → logprob: -4.635739803314209
    3. ' '' → logprob: -7.385739803314209
    4. '       ' → logprob: -8.385740280151367
    5. 'amount' → logprob: -10.260740280151367
    6. '  ' → logprob: -10.760740280151367
    7. ' ' → logprob: -11.010740280151367
    8. '    ' → logprob: -11.010740280151367
    9. '      ' → logprob: -11.385740280151367
    10. ''am' → logprob: -11.510740280151367

Token 380: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.00651961425319314
    2. ''' → logprob: -5.506519794464111
    3. 'quantity' → logprob: -6.381519794464111
    4. '250' → logprob: -8.756519317626953
    5. ' amount' → logprob: -9.006519317626953
    6. '150' → logprob: -9.131519317626953
    7. ''s' → logprob: -9.381519317626953
    8. '100' → logprob: -10.006519317626953
    9. '   ' → logprob: -10.006519317626953
    10. '300' → logprob: -10.131519317626953

Token 381: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07004757970571518
    2. ':' → logprob: -2.695047616958618
    3. ''' → logprob: -9.695047378540039
    4. '":' → logprob: -11.070047378540039
    5. '   ' → logprob: -11.320047378540039
    6. '200' → logprob: -11.445047378540039
    7. ' :' → logprob: -12.070047378540039
    8. '```' → logprob: -13.195047378540039
    9. '’:' → logprob: -13.945047378540039
    10. ' ':' → logprob: -14.445047378540039

Token 382: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9107645750045776
    2. '150' → logprob: -1.5357645750045776
    3. '500' → logprob: -1.6607645750045776
    4. '300' → logprob: -2.285764694213867
    5. '250' → logprob: -3.035764694213867
    6. '400' → logprob: -4.535764694213867
    7. '180' → logprob: -4.535764694213867
    8. '350' → logprob: -5.660764694213867
    9. ' ' → logprob: -5.785764694213867
    10. '140' → logprob: -5.910764694213867

Token 383: '300' (ID: 4095)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.1861001253128052
    2. '150' → logprob: -1.1861001253128052
    3. '500' → logprob: -2.1861000061035156
    4. '250' → logprob: -2.1861000061035156
    5. '300' → logprob: -2.3111000061035156
    6. '400' → logprob: -4.061100006103516
    7. '180' → logprob: -4.311100006103516
    8. '350' → logprob: -4.936100006103516
    9. '140' → logprob: -4.936100006103516
    10. '120' → logprob: -5.686100006103516

Token 384: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002493968466296792
    2. ',
' → logprob: -6.002493858337402
    3. '   ' → logprob: -11.252493858337402
    4. ' ,' → logprob: -13.127493858337402
    5. '       ' → logprob: -13.627493858337402
    6. ',

' → logprob: -14.252493858337402
    7. '},' → logprob: -14.377493858337402
    8. ',
' → logprob: -14.627493858337402
    9. ','' → logprob: -15.752493858337402
    10. '}' → logprob: -16.00249481201172

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008853520266711712
    2. ''' → logprob: -5.258853435516357
    3. '   ' → logprob: -5.758853435516357
    4. ' '' → logprob: -7.758853435516357
    5. ''s' → logprob: -11.383853912353516
    6. ' ' → logprob: -11.758853912353516
    7. '      ' → logprob: -12.508853912353516
    8. '  ' → logprob: -13.758853912353516
    9. '     ' → logprob: -13.758853912353516
    10. '	' → logprob: -14.008853912353516

Token 386: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0034944696817547083
    2. '   ' → logprob: -6.0034942626953125
    3. ' '' → logprob: -7.7534942626953125
    4. 'price' → logprob: -7.8784942626953125
    5. '       ' → logprob: -8.878494262695312
    6. ' ' → logprob: -10.503494262695312
    7. ' price' → logprob: -11.378494262695312
    8. ''s' → logprob: -11.503494262695312
    9. '  ' → logprob: -12.378494262695312
    10. '"' → logprob: -12.753494262695312

Token 387: 'price' (ID: 7629)
  Prédit: 'price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.0006330899195745587
    2. ''' → logprob: -7.375633239746094
    3. ' price' → logprob: -12.625633239746094
    4. '   ' → logprob: -13.250633239746094
    5. 'prix' → logprob: -14.375633239746094
    6. ' ' → logprob: -15.625633239746094
    7. '	price' → logprob: -15.625633239746094
    8. ''s' → logprob: -16.375633239746094
    9. ' '' → logprob: -16.625633239746094
    10. 'discount' → logprob: -16.875633239746094

Token 388: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5242738127708435
    2. '':' → logprob: -0.8992738127708435
    3. ''' → logprob: -7.774273872375488
    4. ' :' → logprob: -8.024273872375488
    5. '":' → logprob: -8.774273872375488
    6. '```' → logprob: -9.024273872375488
    7. '=' → logprob: -10.524273872375488
    8. '   ' → logprob: -10.774273872375488
    9. 's' → logprob: -11.649273872375488
    10. '<|end|>' → logprob: -11.774273872375488

Token 389: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.533606767654419
    2. '500' → logprob: -2.283606767654419
    3. '350' → logprob: -2.283606767654419
    4. '460' → logprob: -2.408606767654419
    5. '450' → logprob: -2.658606767654419
    6. '520' → logprob: -3.158606767654419
    7. '430' → logprob: -3.158606767654419
    8. '280' → logprob: -3.283606767654419
    9. '420' → logprob: -3.533606767654419
    10. '270' → logprob: -3.783606767654419

Token 390: '550' (ID: 20167)
  Prédit: '430'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '430' → logprob: -1.8793480396270752
    2. '350' → logprob: -2.129348039627075
    3. '450' → logprob: -2.504348039627075
    4. '500' → logprob: -2.629348039627075
    5. '460' → logprob: -2.629348039627075
    6. '550' → logprob: -2.754348039627075
    7. '520' → logprob: -2.879348039627075
    8. '420' → logprob: -3.129348039627075
    9. '400' → logprob: -3.379348039627075
    10. '200' → logprob: -3.504348039627075

Token 391: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005941121373325586
    2. ',
' → logprob: -5.130940914154053
    3. '   ' → logprob: -11.505941390991211
    4. ' ,' → logprob: -14.130941390991211
    5. ',
' → logprob: -14.130941390991211
    6. ',

' → logprob: -15.130941390991211
    7. '       ' → logprob: -15.130941390991211
    8. '},' → logprob: -15.630941390991211
    9. '}' → logprob: -16.50594139099121
    10. ' ' → logprob: -17.00594139099121

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024839844554662704
    2. '   ' → logprob: -6.62748384475708
    3. ''' → logprob: -6.87748384475708
    4. ' '' → logprob: -9.502484321594238
    5. ''description' → logprob: -11.627484321594238
    6. ''s' → logprob: -11.752484321594238
    7. '"' → logprob: -12.252484321594238
    8. '	' → logprob: -12.377484321594238
    9. '      ' → logprob: -12.377484321594238
    10. ' ' → logprob: -12.377484321594238

Token 393: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.008388208225369453
    2. '       ' → logprob: -5.008388042449951
    3. '   ' → logprob: -6.883388042449951
    4. ' '' → logprob: -7.508388042449951
    5. ' ' → logprob: -10.50838851928711
    6. 'discount' → logprob: -11.00838851928711
    7. '"' → logprob: -11.38338851928711
    8. ''d' → logprob: -11.63338851928711
    9. '      ' → logprob: -12.00838851928711
    10. '	' → logprob: -12.25838851928711

Token 394: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.0013704766752198339
    2. ''' → logprob: -6.626370429992676
    3. ''d' → logprob: -10.876370429992676
    4. ' discount' → logprob: -11.251370429992676
    5. '   ' → logprob: -12.376370429992676
    6. ''s' → logprob: -12.626370429992676
    7. ''description' → logprob: -14.126370429992676
    8. ' ' → logprob: -14.376370429992676
    9. '"' → logprob: -14.376370429992676
    10. ''ex' → logprob: -15.001370429992676

Token 395: '_units' (ID: 67867)
  Prédit: '_units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_units' → logprob: -0.002811290556564927
    2. '_rate' → logprob: -6.002811431884766
    3. '```' → logprob: -9.627811431884766
    4. '_per' → logprob: -10.252811431884766
    5. '_unit' → logprob: -10.502811431884766
    6. ''_' → logprob: -10.627811431884766
    7. '_amount' → logprob: -10.752811431884766
    8. '_rates' → logprob: -11.002811431884766
    9. '_multiplier' → logprob: -11.002811431884766
    10. '_discount' → logprob: -11.377811431884766

Token 396: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.08914556354284286
    2. ':' → logprob: -2.4641456604003906
    3. ''' → logprob: -9.21414566040039
    4. '=' → logprob: -9.71414566040039
    5. '":' → logprob: -10.46414566040039
    6. ' :' → logprob: -12.58914566040039
    7. '```' → logprob: -12.71414566040039
    8. '   ' → logprob: -12.96414566040039
    9. '}:' → logprob: -13.33914566040039
    10. ''}' → logprob: -14.08914566040039

Token 397: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.609552800655365
    2. '4' → logprob: -1.2345528602600098
    3. '10' → logprob: -2.6095528602600098
    4. '7' → logprob: -3.1095528602600098
    5. ' ' → logprob: -3.3595528602600098
    6. '8' → logprob: -4.73455286026001
    7. '2' → logprob: -6.48455286026001
    8. '6' → logprob: -6.60955286026001
    9. '   ' → logprob: -7.98455286026001
    10. '5' → logprob: -8.859552383422852

Token 398: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4284540116786957
    2. '10' → logprob: -2.1784539222717285
    3. '8' → logprob: -2.3034539222717285
    4. '4' → logprob: -2.6784539222717285
    5. '7' → logprob: -2.9284539222717285
    6. '6' → logprob: -4.6784539222717285
    7. '2' → logprob: -6.5534539222717285
    8. '5' → logprob: -7.3034539222717285
    9. '12' → logprob: -7.4284539222717285
    10. '9' → logprob: -7.8034539222717285

Token 399: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25206223130226135
    2. ',
' → logprob: -1.502062201499939
    3. '   ' → logprob: -9.00206184387207
    4. ',
' → logprob: -12.00206184387207
    5. ','' → logprob: -13.50206184387207
    6. '       ' → logprob: -14.37706184387207
    7. ',

' → logprob: -14.50206184387207
    8. ' ,' → logprob: -14.87706184387207
    9. ' ,
' → logprob: -15.12706184387207
    10. '}' → logprob: -15.12706184387207

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05162707343697548
    2. ''' → logprob: -3.0516271591186523
    3. '   ' → logprob: -6.426627159118652
    4. ''d' → logprob: -7.551627159118652
    5. ' '' → logprob: -7.551627159118652
    6. ''description' → logprob: -8.301627159118652
    7. ''s' → logprob: -10.176627159118652
    8. ''t' → logprob: -11.176627159118652
    9. ''user' → logprob: -11.426627159118652
    10. '           ' → logprob: -11.926627159118652

Token 401: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00043686782009899616
    2. '       ' → logprob: -7.875436782836914
    3. '   ' → logprob: -10.250436782836914
    4. ' '' → logprob: -11.250436782836914
    5. ''d' → logprob: -12.375436782836914
    6. 'discount' → logprob: -13.750436782836914
    7. ''description' → logprob: -14.250436782836914
    8. '      ' → logprob: -14.375436782836914
    9. '0' → logprob: -15.125436782836914
    10. '"' → logprob: -15.125436782836914

Token 402: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.00020616286201402545
    2. ''' → logprob: -8.750205993652344
    3. ' discount' → logprob: -10.375205993652344
    4. ''d' → logprob: -11.250205993652344
    5. '   ' → logprob: -13.375205993652344
    6. ' ' → logprob: -14.750205993652344
    7. '"' → logprob: -14.875205993652344
    8. '_discount' → logprob: -15.125205993652344
    9. '.discount' → logprob: -15.125205993652344
    10. ' '' → logprob: -16.125205993652344

Token 403: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -6.110668618930504e-05
    2. '_' → logprob: -11.00006103515625
    3. '_discount' → logprob: -11.12506103515625
    4. '_price' → logprob: -11.37506103515625
    5. 'rate' → logprob: -12.50006103515625
    6. '   ' → logprob: -12.50006103515625
    7. '_amount' → logprob: -13.00006103515625
    8. '_rates' → logprob: -13.87506103515625
    9. '```' → logprob: -14.12506103515625
    10. ' _' → logprob: -14.12506103515625

Token 404: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.252648264169693
    2. '':' → logprob: -1.5026482343673706
    3. '=' → logprob: -7.87764835357666
    4. '":' → logprob: -8.12764835357666
    5. ' :' → logprob: -11.62764835357666
    6. ''' → logprob: -11.75264835357666
    7. '```' → logprob: -11.75264835357666
    8. '}:' → logprob: -12.25264835357666
    9. '0' → logprob: -12.62764835357666
    10. '}' → logprob: -13.00264835357666

Token 405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510710395872593
    2. ' ' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.387510299682617
    4. '       ' → logprob: -16.012510299682617
    5. '.' → logprob: -16.387510299682617
    6. '  ' → logprob: -16.637510299682617
    7. '	' → logprob: -17.075010299682617
    8. '1' → logprob: -17.325010299682617
    9. ' ' → logprob: -17.450010299682617
    10. '     ' → logprob: -17.575010299682617

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003372502396814525
    2. ' ' → logprob: -8.000337600708008
    3. '   ' → logprob: -14.687837600708008
    4. '1' → logprob: -15.125337600708008
    5. '=' → logprob: -15.375337600708008
    6. '-' → logprob: -15.875337600708008
    7. '.' → logprob: -16.000337600708008
    8. '{' → logprob: -16.312837600708008
    9. '[' → logprob: -16.500337600708008
    10. '  ' → logprob: -16.750337600708008

Token 407: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.128163257315464e-07
    2. '.
' → logprob: -15.625
    3. ',' → logprob: -15.75
    4. ')' → logprob: -18.375
    5. ':' → logprob: -18.375
    6. '0' → logprob: -18.625
    7. '=' → logprob: -18.75
    8. '1' → logprob: -18.75
    9. '4' → logprob: -19.0
    10. '3' → logprob: -19.0

Token 408: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.5145313143730164
    2. '25' → logprob: -1.1395313739776611
    3. '10' → logprob: -3.014531373977661
    4. '30' → logprob: -4.639531135559082
    5. '20' → logprob: -5.014531135559082
    6. '1' → logprob: -5.139531135559082
    7. '2' → logprob: -6.014531135559082
    8. '35' → logprob: -6.139531135559082
    9. '3' → logprob: -6.389531135559082
    10. '05' → logprob: -6.514531135559082

Token 409: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026088329032063484
    2. '}' → logprob: -6.252608776092529
    3. '},' → logprob: -7.502608776092529
    4. '},
' → logprob: -9.377609252929688
    5. ',' → logprob: -10.377609252929688
    6. ',
' → logprob: -12.127609252929688
    7. '}
' → logprob: -12.752609252929688
    8. '
' → logprob: -13.002609252929688
    9. '   ' → logprob: -14.002609252929688
    10. '}}' → logprob: -15.627609252929688

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1307632327079773
    2. '}' → logprob: -2.130763292312622
    3. ',' → logprob: -6.255763053894043
    4. '},' → logprob: -6.505763053894043
    5. ',
' → logprob: -8.505763053894043
    6. '},
' → logprob: -8.755763053894043
    7. '}
' → logprob: -10.630763053894043
    8. '
' → logprob: -10.880763053894043
    9. '   ' → logprob: -12.880763053894043
    10. ' }' → logprob: -13.880763053894043

Token 411: ' },
' (ID: 1862)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2895534634590149
    2. ',' → logprob: -2.66455340385437
    3. ',
' → logprob: -2.66455340385437
    4. '},' → logprob: -2.78955340385437
    5. '},
' (adapté à ' },
') → logprob: -3.16455340385437
    6. '}' → logprob: -4.789553642272949
    7. ''' → logprob: -10.28955364227295
    8. ' ' → logprob: -10.41455364227295
    9. ','' → logprob: -10.78955364227295
    10. '}
' → logprob: -11.03955364227295

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5629802346229553
    2. ''C' → logprob: -0.9379802346229553
    3. ''' → logprob: -3.5629801750183105
    4. ' ' → logprob: -4.9379801750183105
    5. ' '' → logprob: -5.9379801750183105
    6. 'C' → logprob: -7.5629801750183105
    7. '}' → logprob: -8.562980651855469
    8. ' C' → logprob: -8.937980651855469
    9. '  ' → logprob: -10.812980651855469
    10. '"C' → logprob: -11.062980651855469

Token 413: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.001047339290380478
    2. '   ' → logprob: -7.126047134399414
    3. 'C' → logprob: -8.501047134399414
    4. ' '' → logprob: -11.126047134399414
    5. ' ' → logprob: -11.376047134399414
    6. '#' → logprob: -12.251047134399414
    7. ''' (adapté à ' '') → logprob: -12.876047134399414
    8. '"C' → logprob: -13.001047134399414
    9. '    
' → logprob: -14.126047134399414
    10. '  ' → logprob: -14.376047134399414

Token 414: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.043022483587265015
    2. ''C' → logprob: -3.168022394180298
    3. ''' → logprob: -11.168022155761719
    4. ' C' → logprob: -11.918022155761719
    5. 'c' → logprob: -14.168022155761719
    6. '"C' → logprob: -14.668022155761719
    7. ' '' → logprob: -14.793022155761719
    8. '#' → logprob: -14.793022155761719
    9. ''S' → logprob: -15.793022155761719
    10. '{
' → logprob: -16.29302215576172

Token 415: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0023805228993296623
    2. ':' → logprob: -6.12738037109375
    3. ''' → logprob: -8.62738037109375
    4. '":' → logprob: -11.87738037109375
    5. '}:' → logprob: -12.00238037109375
    6. ' ':' → logprob: -14.25238037109375
    7. '']:' → logprob: -14.75238037109375
    8. ''}' → logprob: -15.25238037109375
    9. ' =' → logprob: -15.37738037109375
    10. '»:' → logprob: -15.50238037109375

Token 416: ' {
' (ID: 405)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.41069790720939636
    2. ' {
' → logprob: -1.1606979370117188
    3. '{' → logprob: -3.9106979370117188
    4. ' {' → logprob: -5.660697937011719
    5. '   ' → logprob: -10.285697937011719
    6. '{'' → logprob: -13.410697937011719
    7. ' ' → logprob: -13.660697937011719
    8. ' {
' → logprob: -14.535697937011719
    9. '{
' → logprob: -14.910697937011719
    10. ' {'' → logprob: -14.910697937011719

Token 417: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20054788887500763
    2. ''' → logprob: -2.075547933578491
    3. '       ' → logprob: -2.950547933578491
    4. ' '' → logprob: -5.700547695159912
    5. ''s' → logprob: -9.07554817199707
    6. '    ' → logprob: -9.45054817199707
    7. '  ' → logprob: -9.82554817199707
    8. ''description' → logprob: -10.07554817199707
    9. '"' → logprob: -10.32554817199707
    10. '     ' → logprob: -10.45054817199707

Token 418: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.009263923391699791
    2. '   ' → logprob: -4.88426399230957
    3. '{
' → logprob: -7.50926399230957
    4. ' '' → logprob: -7.88426399230957
    5. '       ' → logprob: -8.13426399230957
    6. ''s' → logprob: -9.38426399230957
    7. '  ' → logprob: -9.88426399230957
    8. ' ' → logprob: -10.25926399230957
    9. ''am' → logprob: -10.38426399230957
    10. '     ' → logprob: -10.50926399230957

Token 419: 'amount' (ID: 10703)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6990162134170532
    2. 'amount' → logprob: -1.0740162134170532
    3. '400' → logprob: -2.4490160942077637
    4. ''m' → logprob: -3.9490160942077637
    5. ''s' → logprob: -4.199016094207764
    6. '250' → logprob: -4.824016094207764
    7. '150' → logprob: -5.324016094207764
    8. ''import' → logprob: -5.324016094207764
    9. '500' → logprob: -5.574016094207764
    10. '100' → logprob: -5.824016094207764

Token 420: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009983435273170471
    2. '':' → logprob: -4.634983539581299
    3. '=' → logprob: -8.88498306274414
    4. ' :' → logprob: -10.63498306274414
    5. '   ' → logprob: -11.00998306274414
    6. ' =' → logprob: -11.50998306274414
    7. '200' → logprob: -11.63498306274414
    8. '```' → logprob: -11.75998306274414
    9. '":' → logprob: -12.13498306274414
    10. ''' → logprob: -12.38498306274414

Token 421: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.9852407574653625
    2. '500' → logprob: -1.2352406978607178
    3. '150' → logprob: -1.4852406978607178
    4. '100' → logprob: -2.8602406978607178
    5. '250' → logprob: -3.7352406978607178
    6. '350' → logprob: -4.860240936279297
    7. ' ' → logprob: -5.110240936279297
    8. '450' → logprob: -5.360240936279297
    9. '180' → logprob: -5.860240936279297
    10. '600' → logprob: -6.860240936279297

Token 422: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.8853214383125305
    2. '400' → logprob: -1.0103213787078857
    3. '150' → logprob: -2.7603213787078857
    4. '100' → logprob: -3.1353213787078857
    5. '450' → logprob: -3.2603213787078857
    6. '350' → logprob: -3.3853213787078857
    7. '180' → logprob: -4.385321617126465
    8. '250' → logprob: -5.135321617126465
    9. '700' → logprob: -5.635321617126465
    10. '380' → logprob: -5.760321617126465

Token 423: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11290600150823593
    2. ',
' → logprob: -2.237905979156494
    3. '   ' → logprob: -9.987906455993652
    4. '       ' → logprob: -11.237906455993652
    5. ',
' → logprob: -11.487906455993652
    6. ' ,' → logprob: -12.112906455993652
    7. ':' → logprob: -12.487906455993652
    8. ',

' → logprob: -12.612906455993652
    9. ' ,
' → logprob: -14.362906455993652
    10. ' ' → logprob: -15.362906455993652

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031741805374622345
    2. '   ' → logprob: -3.9067418575286865
    3. ''' → logprob: -4.531741619110107
    4. ' '' → logprob: -8.531742095947266
    5. ''s' → logprob: -9.156742095947266
    6. '      ' → logprob: -10.781742095947266
    7. '           ' → logprob: -11.656742095947266
    8. '     ' → logprob: -11.781742095947266
    9. ''description' → logprob: -12.031742095947266
    10. '  ' → logprob: -12.156742095947266

Token 425: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0015590202528983355
    2. ' '' → logprob: -7.251559257507324
    3. '       ' → logprob: -7.751559257507324
    4. '   ' → logprob: -7.876559257507324
    5. '  ' → logprob: -12.126559257507324
    6. '#' → logprob: -12.126559257507324
    7. ' ' → logprob: -12.501559257507324
    8. ''s' → logprob: -12.501559257507324
    9. '"' → logprob: -12.626559257507324
    10. 'price' → logprob: -12.751559257507324

Token 426: 'price' (ID: 7629)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10023827850818634
    2. 'price' → logprob: -2.35023832321167
    3. '   ' → logprob: -11.975237846374512
    4. ' '' → logprob: -11.975237846374512
    5. ''s' → logprob: -12.225237846374512
    6. '"' → logprob: -12.225237846374512
    7. ' price' → logprob: -12.600237846374512
    8. '#' → logprob: -13.850237846374512
    9. '
' → logprob: -13.975237846374512
    10. ' ' → logprob: -14.100237846374512

Token 427: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004263589158654213
    2. '':' → logprob: -5.504263401031494
    3. ',' → logprob: -9.504263877868652
    4. ' :' → logprob: -9.629263877868652
    5. '=' → logprob: -11.004263877868652
    6. ''' → logprob: -12.629263877868652
    7. '   ' → logprob: -12.754263877868652
    8. '":' → logprob: -12.879263877868652
    9. '',' → logprob: -13.254263877868652
    10. '```' → logprob: -13.254263877868652

Token 428: ' ' (ID: 220)
  Prédit: '800'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '800' → logprob: -1.4540029764175415
    2. '750' → logprob: -1.4540029764175415
    3. '700' → logprob: -2.204002857208252
    4. '720' → logprob: -2.329002857208252
    5. '900' → logprob: -2.704002857208252
    6. '850' → logprob: -2.704002857208252
    7. '820' → logprob: -2.954002857208252
    8. '730' → logprob: -3.704002857208252
    9. '780' → logprob: -4.329002857208252
    10. '770' → logprob: -4.329002857208252

Token 429: '850' (ID: 24987)
  Prédit: '800'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '800' → logprob: -0.9963935613632202
    2. '750' → logprob: -1.8713935613632202
    3. '700' → logprob: -2.2463936805725098
    4. '900' → logprob: -2.3713936805725098
    5. '850' → logprob: -2.4963936805725098
    6. '720' → logprob: -3.1213936805725098
    7. '820' → logprob: -3.2463936805725098
    8. '730' → logprob: -3.8713936805725098
    9. '760' → logprob: -4.24639368057251
    10. '770' → logprob: -4.62139368057251

Token 430: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10033822059631348
    2. ',
' → logprob: -2.3503382205963135
    3. '   ' → logprob: -9.100337982177734
    4. '       ' → logprob: -12.225337982177734
    5. ' ,' → logprob: -12.225337982177734
    6. ',
' → logprob: -12.600337982177734
    7. '}' → logprob: -13.100337982177734
    8. ','' → logprob: -13.600337982177734
    9. ',

' → logprob: -13.850337982177734
    10. '},' → logprob: -14.225337982177734

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3369888961315155
    2. ''' → logprob: -1.836988925933838
    3. '   ' → logprob: -2.086988925933838
    4. ' '' → logprob: -6.211988925933838
    5. ''d' → logprob: -8.71198844909668
    6. '	' → logprob: -8.83698844909668
    7. ' ' → logprob: -9.21198844909668
    8. '      ' → logprob: -9.83698844909668
    9. '           ' → logprob: -9.96198844909668
    10. '"' → logprob: -9.96198844909668

Token 432: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.0652167797088623
    2. '       ' → logprob: -2.8152167797088623
    3. '   ' → logprob: -5.940217018127441
    4. ' '' → logprob: -7.815217018127441
    5. ''d' → logprob: -8.815217018127441
    6. '      ' → logprob: -11.440217018127441
    7. ''description' → logprob: -11.565217018127441
    8. ''t' → logprob: -12.315217018127441
    9. ''default' → logprob: -12.440217018127441
    10. '	' → logprob: -12.565217018127441

Token 433: 'discount' (ID: 50794)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006296818144619465
    2. 'discount' → logprob: -5.131296634674072
    3. '   ' → logprob: -8.50629711151123
    4. '"' → logprob: -10.38129711151123
    5. ' '' → logprob: -10.38129711151123
    6. ' ' → logprob: -10.50629711151123
    7. '  ' → logprob: -10.63129711151123
    8. '       ' → logprob: -10.88129711151123
    9. ' discount' → logprob: -11.50629711151123
    10. ''d' → logprob: -12.00629711151123

Token 434: '_units' (ID: 67867)
  Prédit: '_units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_units' → logprob: -0.25350818037986755
    2. '_rate' → logprob: -1.50350821018219
    3. 'rate' → logprob: -7.0035080909729
    4. '   ' → logprob: -8.628508567810059
    5. 'units' → logprob: -8.753508567810059
    6. '```' → logprob: -9.378508567810059
    7. ''' → logprob: -10.128508567810059
    8. '_discount' → logprob: -10.503508567810059
    9. '       ' → logprob: -10.753508567810059
    10. '           ' → logprob: -11.503508567810059

Token 435: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28291475772857666
    2. '':' → logprob: -1.4079147577285767
    3. ' :' → logprob: -7.282914638519287
    4. '<|end|>' → logprob: -7.782914638519287
    5. '=' → logprob: -8.657915115356445
    6. ''' → logprob: -8.657915115356445
    7. '```' → logprob: -9.282915115356445
    8. '":' → logprob: -9.782915115356445
    9. '   ' → logprob: -9.907915115356445
    10. '<|end|>' → logprob: -10.657915115356445

Token 436: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2358722984790802
    2. '10' → logprob: -1.9858722686767578
    3. '6' → logprob: -3.360872268676758
    4. '2' → logprob: -4.235872268676758
    5. ' ' → logprob: -4.235872268676758
    6. '7' → logprob: -5.235872268676758
    7. '8' → logprob: -6.110872268676758
    8. '1' → logprob: -6.860872268676758
    9. '5' → logprob: -7.610872268676758
    10. '4' → logprob: -10.110872268676758

Token 437: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16350047290325165
    2. '10' → logprob: -2.4135005474090576
    3. '6' → logprob: -3.1635005474090576
    4. '2' → logprob: -4.2885003089904785
    5. '8' → logprob: -5.9135003089904785
    6. '7' → logprob: -6.4135003089904785
    7. '5' → logprob: -7.9135003089904785
    8. ' ' → logprob: -7.9135003089904785
    9. '1' → logprob: -8.663500785827637
    10. '4' → logprob: -10.663500785827637

Token 438: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38694414496421814
    2. ',
' → logprob: -1.1369441747665405
    3. '   ' → logprob: -9.761943817138672
    4. ',
' → logprob: -11.761943817138672
    5. '       ' → logprob: -12.886943817138672
    6. ',

' → logprob: -13.261943817138672
    7. ','' → logprob: -13.636943817138672
    8. ',\
' → logprob: -14.511943817138672
    9. ':
' → logprob: -14.761943817138672
    10. ' ,
' → logprob: -14.886943817138672

Token 439: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5787914991378784
    2. '       ' → logprob: -0.8287914991378784
    3. '   ' → logprob: -6.078791618347168
    4. ' '' → logprob: -8.203791618347168
    5. ''d' → logprob: -8.453791618347168
    6. '      ' → logprob: -10.953791618347168
    7. ''description' → logprob: -10.953791618347168
    8. 'discount' → logprob: -12.203791618347168
    9. ' ' → logprob: -12.328791618347168
    10. ''t' → logprob: -12.328791618347168

Token 440: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.00233223638497293
    2. '       ' → logprob: -6.2523322105407715
    3. ' '' → logprob: -8.75233268737793
    4. '   ' → logprob: -9.00233268737793
    5. ''d' → logprob: -9.62733268737793
    6. ''description' → logprob: -10.37733268737793
    7. '0' → logprob: -11.87733268737793
    8. ''s' → logprob: -12.87733268737793
    9. ''user' → logprob: -13.37733268737793
    10. ''r' → logprob: -13.50233268737793

Token 441: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.0018240504432469606
    2. ''' → logprob: -6.376823902130127
    3. ' discount' → logprob: -9.126824378967285
    4. ''d' → logprob: -12.126824378967285
    5. '_discount' → logprob: -12.876824378967285
    6. '.discount' → logprob: -13.626824378967285
    7. '   ' → logprob: -14.126824378967285
    8. ' '' → logprob: -14.251824378967285
    9. 'dis' → logprob: -14.751824378967285
    10. ''description' → logprob: -14.751824378967285

Token 442: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -2.3319124011322856e-05
    2. 'rate' → logprob: -11.500022888183594
    3. '_units' → logprob: -11.625022888183594
    4. '_rates' → logprob: -14.000022888183594
    5. ' _' → logprob: -14.125022888183594
    6. '   ' → logprob: -14.375022888183594
    7. '_' → logprob: -14.375022888183594
    8. '_price' → logprob: -15.375022888183594
    9. '```' → logprob: -15.500022888183594
    10. ' rate' → logprob: -16.375022888183594

Token 443: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002080432139337063
    2. '':' → logprob: -6.37708044052124
    3. '=' → logprob: -8.002079963684082
    4. ' :' → logprob: -11.002079963684082
    5. ' =' → logprob: -11.252079963684082
    6. '0' → logprob: -12.252079963684082
    7. '":' → logprob: -12.877079963684082
    8. '1' → logprob: -13.877079963684082
    9. '}:' → logprob: -14.377079963684082
    10. '   ' → logprob: -14.502079963684082

Token 444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692978978157043
    2. ' ' → logprob: -2.126929759979248
    3. '   ' → logprob: -14.126930236816406
    4. ' ' → logprob: -15.314430236816406
    5. '  ' → logprob: -15.814430236816406
    6. '	' → logprob: -16.001930236816406
    7. '1' → logprob: -16.376930236816406
    8. '       ' → logprob: -16.814430236816406
    9. '=' → logprob: -16.939430236816406
    10. '.' → logprob: -17.001930236816406

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015979631280060858
    2. ' ' → logprob: -8.750160217285156
    3. '1' → logprob: -14.812660217285156
    4. '```' → logprob: -15.625160217285156
    5. '{' → logprob: -15.937660217285156
    6. '[' → logprob: -16.187660217285156
    7. '   ' → logprob: -16.187660217285156
    8. '	' → logprob: -17.125160217285156
    9. '(' → logprob: -17.125160217285156
    10. '  ' → logprob: -17.312660217285156

Token 446: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.988221684878226e-06
    2. '.
' → logprob: -12.750006675720215
    3. ',' → logprob: -13.250006675720215
    4. ')' → logprob: -14.375006675720215
    5. '#' → logprob: -14.625006675720215
    6. '0' → logprob: -15.125006675720215
    7. '1' → logprob: -15.125006675720215
    8. '}' → logprob: -15.250006675720215
    9. ',
' → logprob: -15.750006675720215
    10. '.

' → logprob: -16.62500762939453

Token 447: '12' (ID: 899)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.599700391292572
    2. '25' → logprob: -1.5997004508972168
    3. '1' → logprob: -2.099700450897217
    4. '15' → logprob: -2.724700450897217
    5. '30' → logprob: -3.974700450897217
    6. '05' → logprob: -4.099700450897217
    7. '3' → logprob: -5.099700450897217
    8. '2' → logprob: -5.099700450897217
    9. '20' → logprob: -5.224700450897217
    10. '33' → logprob: -5.974700450897217

Token 448: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07914303243160248
    2. '}' → logprob: -2.5791430473327637
    3. '}
' → logprob: -8.579142570495605
    4. '},' → logprob: -10.829142570495605
    5. ' }' → logprob: -11.454142570495605
    6. ',' → logprob: -11.579142570495605
    7. '
' → logprob: -11.829142570495605
    8. ',
' → logprob: -12.579142570495605
    9. '}}' → logprob: -12.579142570495605
    10. '       ' → logprob: -12.704142570495605

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06235954537987709
    2. '}' → logprob: -2.812359571456909
    3. '}
' → logprob: -8.437359809875488
    4. ',' → logprob: -9.437359809875488
    5. '},' → logprob: -9.562359809875488
    6. ' }' → logprob: -11.812359809875488
    7. '},
' → logprob: -12.062359809875488
    8. ',
' → logprob: -12.687359809875488
    9. '}}' → logprob: -13.187359809875488
    10. '
' → logprob: -13.437359809875488

Token 450: ' }
' (ID: 606)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.018100423738360405
    2. '   ' → logprob: -4.268100261688232
    3. '}
' (adapté à ' }
') → logprob: -5.768100261688232
    4. '},' → logprob: -7.393100261688232
    5. '}

' → logprob: -8.76810073852539
    6. ' }' → logprob: -11.01810073852539
    7. '},
' → logprob: -11.64310073852539
    8. '}}' → logprob: -12.89310073852539
    9. ' ' → logprob: -13.01810073852539
    10. '},

' → logprob: -13.89310073852539

Token 451: '}

' (ID: 943)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022745460271835327
    2. '#' → logprob: -4.147745609283447
    3. '}' → logprob: -5.147745609283447
    4. '

' → logprob: -8.522745132446289
    5. '}

' → logprob: -8.772745132446289
    6. '
' → logprob: -8.897745132446289
    7. 'class' → logprob: -8.897745132446289
    8. '```' → logprob: -8.897745132446289
    9. 'import' → logprob: -10.772745132446289
    10. ' def' → logprob: -10.897745132446289

Token 452: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005410673096776009
    2. 'a' → logprob: -5.755410671234131
    3. '#' → logprob: -6.380410671234131
    4. 'dp' → logprob: -7.880410671234131
    5. 'class' → logprob: -9.755411148071289
    6. 'max' → logprob: -9.880411148071289
    7. 'import' → logprob: -10.880411148071289
    8. '
' → logprob: -11.505411148071289
    9. 'amount' → logprob: -12.255411148071289
    10. 'n' → logprob: -12.505411148071289

Token 453: ' cost' (ID: 3097)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.8716989159584045
    2. ' min' → logprob: -1.4966988563537598
    3. ' calc' → logprob: -1.9966988563537598
    4. 'min' → logprob: -3.1216988563537598
    5. ' compute' → logprob: -3.1216988563537598
    6. 'calculate' → logprob: -3.2466988563537598
    7. ' cost' → logprob: -3.3716988563537598
    8. 'cost' → logprob: -3.8716988563537598
    9. 'calc' → logprob: -4.49669885635376
    10. 'compute' → logprob: -4.49669885635376

Token 454: '_for' (ID: 11903)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6025988459587097
    2. '(' → logprob: -1.3525989055633545
    3. '(num' → logprob: -2.3525989055633545
    4. '(n' → logprob: -2.8525989055633545
    5. '(number' → logprob: -4.102598667144775
    6. '_for' → logprob: -4.727598667144775
    7. '(shop' → logprob: -5.227598667144775
    8. '(sh' → logprob: -5.727598667144775
    9. ' (' → logprob: -6.727598667144775
    10. '_of' → logprob: -7.227598667144775

Token 455: '_b' (ID: 1535)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24132969975471497
    2. 'shop' → logprob: -2.3663296699523926
    3. ' shop' → logprob: -3.1163296699523926
    4. '(shop' → logprob: -3.8663296699523926
    5. '(s' → logprob: -3.9913296699523926
    6. '_s' → logprob: -4.741329669952393
    7. '_shop' → logprob: -4.741329669952393
    8. 'num' → logprob: -5.366329669952393
    9. ' sacs' → logprob: -5.366329669952393
    10. 'n' → logprob: -5.616329669952393

Token 456: 'ags' (ID: 2916)
  Prédit: 'uy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -0.48382487893104553
    2. 'ags' → logprob: -0.9838248491287231
    3. 'u' → logprob: -4.983824729919434
    4. 'atch' → logprob: -6.983824729919434
    5. 'ag' → logprob: -7.233824729919434
    6. 'uyer' → logprob: -7.608824729919434
    7. 'ought' → logprob: -8.483824729919434
    8. 'ucket' → logprob: -9.483824729919434
    9. 'atches' → logprob: -9.733824729919434
    10. 's' → logprob: -9.858824729919434

Token 457: '(shop' (ID: 170425)
  Prédit: '(shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shop' → logprob: -0.09988643229007721
    2. '(' → logprob: -2.474886417388916
    3. '(b' → logprob: -5.599886417388916
    4. '(s' → logprob: -5.974886417388916
    5. '(num' → logprob: -6.099886417388916
    6. '(count' → logprob: -6.599886417388916
    7. '(n' → logprob: -7.599886417388916
    8. '(number' → logprob: -8.599886894226074
    9. ' (' → logprob: -8.724886894226074
    10. '(store' → logprob: -9.974886894226074

Token 458: '_key' (ID: 6724)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009045533952303231
    2. ' ,' → logprob: -7.625904560089111
    3. '(shop' → logprob: -8.500904083251953
    4. 's' → logprob: -9.875904083251953
    5. ',b' → logprob: -9.875904083251953
    6. ',s' → logprob: -10.750904083251953
    7. 'shop' → logprob: -11.125904083251953
    8. '   ' → logprob: -11.500904083251953
    9. '_name' → logprob: -11.750904083251953
    10. ')(' → logprob: -11.875904083251953

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009427884360775352
    2. ',n' → logprob: -7.500942707061768
    3. ',num' → logprob: -8.625943183898926
    4. ' ,' → logprob: -8.875943183898926
    5. ',b' → logprob: -9.625943183898926
    6. ',count' → logprob: -13.375943183898926
    7. ',
' → logprob: -14.875943183898926
    8. ',s' → logprob: -15.000943183898926
    9. '   ' → logprob: -15.125943183898926
    10. 'n' → logprob: -15.125943183898926

Token 460: ' bags' (ID: 23359)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.25433605909347534
    2. 'bags' → logprob: -2.12933611869812
    3. 'n' → logprob: -2.87933611869812
    4. ' num' → logprob: -3.50433611869812
    5. ' bags' → logprob: -4.629335880279541
    6. ' n' → logprob: -5.379335880279541
    7. 'count' → logprob: -6.129335880279541
    8. 'nb' → logprob: -6.504335880279541
    9. 'bag' → logprob: -8.0043363571167
    10. 'number' → logprob: -8.1293363571167

Token 461: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01020129956305027
    2. '):
' → logprob: -4.760201454162598
    3. ')' → logprob: -6.510201454162598
    4. '_count' → logprob: -10.010201454162598
    5. ' ):' → logprob: -10.510201454162598
    6. '):
' → logprob: -11.760201454162598
    7. ':' → logprob: -12.135201454162598
    8. '):

' → logprob: -12.510201454162598
    9. 's' → logprob: -13.510201454162598
    10. '=' → logprob: -13.635201454162598

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2027086764574051
    2. ':' → logprob: -1.7027087211608887
    3. ' if' → logprob: -7.327708721160889
    4. '):' → logprob: -8.20270824432373
    5. ':
' → logprob: -8.95270824432373
    6. ' :' → logprob: -9.82770824432373
    7. '    
' → logprob: -10.32770824432373
    8. 'if' → logprob: -10.57770824432373
    9. '```' → logprob: -10.57770824432373
    10. '   ' → logprob: -10.82770824432373

Token 463: ' """
' (ID: 7037)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.5785173773765564
    2. ' shop' → logprob: -1.2035174369812012
    3. ' if' → logprob: -2.453517436981201
    4. 'if' → logprob: -3.328517436981201
    5. '   ' → logprob: -4.203517436981201
    6. 'cost' → logprob: -7.203517436981201
    7. 'price' → logprob: -7.328517436981201
    8. ' cost' → logprob: -8.578516960144043
    9. ' price' → logprob: -8.703516960144043
    10. 'base' → logprob: -8.828516960144043

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006850473582744598
    2. '#' → logprob: -5.756850242614746
    3. '"""
' → logprob: -6.006850242614746
    4. '"""' → logprob: -7.756850242614746
    5. 'if' → logprob: -8.256850242614746
    6. 'Calcul' → logprob: -8.506850242614746
    7. 'shop' → logprob: -9.631850242614746
    8. '"' → logprob: -10.381850242614746
    9. '       ' → logprob: -10.506850242614746
    10. '    ' → logprob: -10.631850242614746

Token 465: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4442763030529022
    2. ' if' → logprob: -1.1942763328552246
    3. 'if' → logprob: -3.9442763328552246
    4. 'Calcul' → logprob: -4.319276332855225
    5. ' """' → logprob: -5.069276332855225
    6. '"""' → logprob: -5.569276332855225
    7. '#' → logprob: -5.569276332855225
    8. ' """
' → logprob: -5.694276332855225
    9. '"""
' → logprob: -6.069276332855225
    10. ' #' → logprob: -6.944276332855225

Token 466: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.015264500863850117
    2. 'cul' → logprob: -4.265264511108398
    3. 'c' → logprob: -6.890264511108398
    4. 'culate' → logprob: -9.640264511108398
    5. 'cules' → logprob: -11.765264511108398
    6. 'cula' → logprob: -12.390264511108398
    7. '
' → logprob: -13.265264511108398
    8. '\' → logprob: -14.015264511108398
    9. '

' → logprob: -14.765264511108398
    10. ' c' → logprob: -15.015264511108398

Token 467: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.039447810500860214
    2. 'le' → logprob: -3.914447784423828
    3. '   ' → logprob: -4.039447784423828
    4. ' la' → logprob: -8.164447784423828
    5. 't' → logprob: -9.164447784423828
    6. 'if' → logprob: -9.164447784423828
    7. ' cost' → logprob: -9.164447784423828
    8. 'cost' → logprob: -9.164447784423828
    9. ' if' → logprob: -9.789447784423828
    10. ':' → logprob: -10.164447784423828

Token 468: ' prix' (ID: 18771)
  Prédit: 'prix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prix' → logprob: -0.36970511078834534
    2. 'co' → logprob: -1.244705080986023
    3. 'cost' → logprob: -4.9947052001953125
    4. 'cout' → logprob: -4.9947052001953125
    5. '   ' → logprob: -5.8697052001953125
    6. ' coût' → logprob: -6.4947052001953125
    7. 'if' → logprob: -6.8697052001953125
    8. ' prix' → logprob: -7.1197052001953125
    9. 'price' → logprob: -7.2447052001953125
    10. 'total' → logprob: -8.494705200195312

Token 469: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.029131582006812096
    2. 'total' → logprob: -4.0291314125061035
    3. ' un' → logprob: -5.2791314125061035
    4. ' totale' → logprob: -6.4041314125061035
    5. ' =' → logprob: -6.9041314125061035
    6. ' final' → logprob: -7.1541314125061035
    7. '_total' → logprob: -7.4041314125061035
    8. '   ' → logprob: -7.9041314125061035
    9. ' pour' → logprob: -8.654131889343262
    10. ' unit' → logprob: -8.779131889343262

Token 470: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8457165956497192
    2. ' =' → logprob: -1.2207165956497192
    3. '=' → logprob: -2.7207164764404297
    4. '(shop' → logprob: -2.8457164764404297
    5. '(' → logprob: -2.9707164764404297
    6. 'total' → logprob: -3.4707164764404297
    7. ' total' → logprob: -4.09571647644043
    8. '(
' → logprob: -4.34571647644043
    9. '(total' → logprob: -4.84571647644043
    10. ' (' → logprob: -4.84571647644043

Token 471: ' un' (ID: 537)
  Prédit: ' bags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bags' → logprob: -0.2822949290275574
    2. 'bags' → logprob: -1.7822949886322021
    3. ' shop' → logprob: -2.907294988632202
    4. 'shop' → logprob: -4.157294750213623
    5. ' sacs' → logprob: -6.032294750213623
    6. ' un' → logprob: -6.407294750213623
    7. ' acheter' → logprob: -7.407294750213623
    8. 'b' → logprob: -8.032295227050781
    9. '(shop' → logprob: -8.157295227050781
    10. ' n' → logprob: -8.157295227050781

Token 472: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6276457905769348
    2. 'achat' → logprob: -1.62764573097229
    3. ' nombre' → logprob: -1.75264573097229
    4. ' achat' → logprob: -3.25264573097229
    5. 'shop' → logprob: -4.502645969390869
    6. 'certain' → logprob: -4.752645969390869
    7. 'n' → logprob: -4.877645969390869
    8. 'ach' → logprob: -4.877645969390869
    9. ' given' → logprob: -5.127645969390869
    10. ' n' → logprob: -5.377645969390869

Token 473: ' donné' (ID: 52079)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6620277762413025
    2. ' de' → logprob: -1.0370278358459473
    3. '<|end|>' → logprob: -2.6620278358459473
    4. ' d' → logprob: -3.7870278358459473
    5. '  ' → logprob: -4.287027835845947
    6. 'de' → logprob: -4.412027835845947
    7. '<|end|>' → logprob: -5.662027835845947
    8. '   ' → logprob: -6.662027835845947
    9. ' of' → logprob: -6.787027835845947
    10. '    ' → logprob: -6.912027835845947

Token 474: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2023056000471115
    2. 'de' → logprob: -1.702305555343628
    3. '_de' → logprob: -8.077305793762207
    4. ' d' → logprob: -8.202305793762207
    5. 'd' → logprob: -8.702305793762207
    6. 'def' → logprob: -10.327305793762207
    7. ' of' → logprob: -11.077305793762207
    8. '=' → logprob: -11.202305793762207
    9. '_' → logprob: -11.202305793762207
    10. '   ' → logprob: -11.452305793762207

Token 475: ' sacs' (ID: 150414)
  Prédit: ' sacs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sacs' → logprob: -0.08957596123218536
    2. 's' → logprob: -2.589576005935669
    3. 'bags' → logprob: -4.58957576751709
    4. ' bags' → logprob: -8.08957576751709
    5. ' sac' → logprob: -9.58957576751709
    6. '```' → logprob: -10.58957576751709
    7. ' sacks' → logprob: -10.71457576751709
    8. ' ' → logprob: -10.83957576751709
    9. '	s' → logprob: -11.96457576751709
    10. ' ' → logprob: -12.33957576751709

Token 476: ' ache' (ID: 27427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4392784833908081
    2. ',' → logprob: -1.814278483390808
    3. ' de' → logprob: -2.1892786026000977
    4. ' acheté' → logprob: -3.0642786026000977
    5. ' d' → logprob: -4.939278602600098
    6. ' ,' → logprob: -5.564278602600098
    7. ' en' → logprob: -5.814278602600098
    8. ' =' → logprob: -5.814278602600098
    9. 'de' → logprob: -6.064278602600098
    10. ' (' → logprob: -6.064278602600098

Token 477: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0001577698567416519
    2. 'té' → logprob: -9.500157356262207
    3. 'tant' → logprob: -10.625157356262207
    4. '``' → logprob: -11.250157356262207
    5. 'tes' → logprob: -11.375157356262207
    6. '	t' → logprob: -12.500157356262207
    7. 'tent' → logprob: -12.625157356262207
    8. 'te' → logprob: -13.000157356262207
    9. 'tet' → logprob: -13.000157356262207
    10. 'ts' → logprob: -13.000157356262207

Token 478: 'és' (ID: 1756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7934266924858093
    2. 'és' → logprob: -1.418426752090454
    3. 'us' → logprob: -2.168426752090454
    4. 'u' → logprob: -2.918426752090454
    5. 'es' → logprob: -3.043426752090454
    6. 't' → logprob: -3.168426752090454
    7. 'aux' → logprob: -3.668426752090454
    8. 'ts' → logprob: -5.418426513671875
    9. 'is' → logprob: -5.668426513671875
    10. 'tes' → logprob: -5.918426513671875

Token 479: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6421554088592529
    2. '   ' → logprob: -0.8921554088592529
    3. '.' → logprob: -3.767155408859253
    4. ':' → logprob: -4.017155647277832
    5. ' (' → logprob: -5.142155647277832
    6. ' chez' → logprob: -5.642155647277832
    7. '):' → logprob: -5.892155647277832
    8. '(shop' → logprob: -6.392155647277832
    9. ')' → logprob: -6.767155647277832
    10. ' en' → logprob: -7.017155647277832

Token 480: ' une' (ID: 2463)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.3379606008529663
    2. ' shop' → logprob: -1.3379606008529663
    3. ' le' → logprob: -4.837960720062256
    4. ' la' → logprob: -5.337960720062256
    5. 'le' → logprob: -5.712960720062256
    6. 'shops' → logprob: -5.712960720062256
    7. '{' → logprob: -5.962960720062256
    8. '(shop' → logprob: -7.337960720062256
    9. ' shops' → logprob: -7.962960720062256
    10. ' {' → logprob: -8.087960243225098

Token 481: ' boutique' (ID: 46148)
  Prédit: ' shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shop' → logprob: -0.6518929600715637
    2. 'shop' → logprob: -0.9018929600715637
    3. ' boutique' → logprob: -3.276892900466919
    4. 'bout' → logprob: -3.526892900466919
    5. '(shop' → logprob: -6.151893138885498
    6. ' magasin' → logprob: -6.401893138885498
    7. ')' → logprob: -7.151893138885498
    8. 'b' → logprob: -8.40189266204834
    9. '_shop' → logprob: -8.90189266204834
    10. 's' → logprob: -9.02689266204834

Token 482: ' donnée' (ID: 130126)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1449163407087326
    2. ' ,' → logprob: -2.144916296005249
    3. ' (' → logprob: -4.769916534423828
    4. '(shop' → logprob: -6.019916534423828
    5. '   ' → logprob: -6.144916534423828
    6. '.' → logprob: -6.269916534423828
    7. ',
' → logprob: -6.519916534423828
    8. ' donné' → logprob: -8.269916534423828
    9. ':' → logprob: -9.144916534423828
    10. ' ' → logprob: -9.144916534423828

Token 483: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7478764653205872
    2. '   ' → logprob: -0.7478764653205872
    3. ':' → logprob: -3.6228764057159424
    4. '.' → logprob: -4.1228766441345215
    5. '):' → logprob: -5.2478766441345215
    6. ' :' → logprob: -6.2478766441345215
    7. ' ,' → logprob: -6.2478766441345215
    8. '):
' → logprob: -7.9978766441345215
    9. ',
' → logprob: -8.622876167297363
    10. ')' → logprob: -8.622876167297363

Token 484: ' tenant' (ID: 38634)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.219397783279419
    2. ' fonction' → logprob: -1.844397783279419
    3. 'multip' → logprob: -2.469397783279419
    4. '```' → logprob: -2.594397783279419
    5. ' multip' → logprob: -3.219397783279419
    6. ' respect' → logprob: -3.344397783279419
    7. ' utilisant' → logprob: -3.344397783279419
    8. ')' → logprob: -3.469397783279419
    9. 'tenant' → logprob: -3.594397783279419
    10. ' tenant' → logprob: -3.719397783279419

Token 485: ' compte' (ID: 19657)
  Prédit: ' compte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compte' → logprob: -0.5767633318901062
    2. 'comp' → logprob: -0.8267633318901062
    3. ' ' → logprob: -7.326763153076172
    4. 'com' → logprob: -9.826763153076172
    5. '  ' → logprob: -10.576763153076172
    6. 'account' → logprob: -10.576763153076172
    7. '```' → logprob: -10.826763153076172
    8. ' account' → logprob: -11.826763153076172
    9. '   ' → logprob: -11.951763153076172
    10. ' comp' → logprob: -12.201763153076172

Token 486: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7087112069129944
    2. ' de' → logprob: -0.8337112069129944
    3. ' du' → logprob: -3.0837111473083496
    4. ' d' → logprob: -4.45871114730835
    5. 'de' → logprob: -5.45871114730835
    6. 'd' → logprob: -6.20871114730835
    7. 'des' → logprob: -6.20871114730835
    8. ' ' → logprob: -6.45871114730835
    9. ' of' → logprob: -6.70871114730835
    10. '<|end|>' → logprob: -6.95871114730835

Token 487: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.17756234109401703
    2. ' du' → logprob: -2.5525622367858887
    3. ' de' → logprob: -2.5525622367858887
    4. 'des' → logprob: -6.177562236785889
    5. ' d' → logprob: -6.427562236785889
    6. 'de' → logprob: -6.927562236785889
    7. 'du' → logprob: -7.177562236785889
    8. '   ' → logprob: -7.177562236785889
    9. ' ' → logprob: -8.302562713623047
    10. 'd' → logprob: -8.677562713623047

Token 488: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1283048391342163
    2. ' de' → logprob: -2.628304958343506
    3. ' du' → logprob: -3.128304958343506
    4. ' d' → logprob: -5.628304958343506
    5. 'des' (adapté à ' des') → logprob: -7.628304958343506
    6. 'de' → logprob: -9.253304481506348
    7. 'du' → logprob: -9.253304481506348
    8. '   ' → logprob: -10.253304481506348
    9. ' ' → logprob: -10.378304481506348
    10. 'd' → logprob: -11.003304481506348

Token 489: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.2596391439437866
    2. 'rem' → logprob: -1.7596391439437866
    3. ' discounts' → logprob: -3.759639263153076
    4. 'discount' → logprob: -4.009639263153076
    5. ' discount' → logprob: -5.384639263153076
    6. ' rab' → logprob: -6.009639263153076
    7. ' rédu' → logprob: -6.009639263153076
    8. ' remise' → logprob: -6.509639263153076
    9. ' group' → logprob: -8.009638786315918
    10. ' rabatt' → logprob: -8.259638786315918

Token 490: 'ises' (ID: 5555)
  Prédit: 'ises'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ises' → logprob: -0.007569480687379837
    2. 'ais' → logprob: -5.757569313049316
    3. 'ise' → logprob: -6.132569313049316
    4. '```' → logprob: -7.382569313049316
    5. 'is' → logprob: -8.007569313049316
    6. '#' → logprob: -8.632569313049316
    7. '``' → logprob: -8.757569313049316
    8. 'b' → logprob: -9.007569313049316
    9. 'es' → logprob: -9.257569313049316
    10. '-' → logprob: -9.382569313049316

Token 491: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1419185847043991
    2. ' par' → logprob: -2.641918659210205
    3. ' ' → logprob: -4.141918659210205
    4. ' .' → logprob: -4.141918659210205
    5. ' sur' → logprob: -4.891918659210205
    6. '   ' → logprob: -6.016918659210205
    7. ',' → logprob: -6.266918659210205
    8. 's' → logprob: -6.391918659210205
    9. ' appli' → logprob: -6.391918659210205
    10. ' ,' → logprob: -6.516918659210205

Token 492: ' lots' (ID: 10836)
  Prédit: 'lot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lot' → logprob: -0.8169551491737366
    2. ' lot' → logprob: -1.1919550895690918
    3. 'lots' → logprob: -1.5669550895690918
    4. ' lots' → logprob: -3.316955089569092
    5. 'multip' → logprob: -6.566955089569092
    6. ' group' → logprob: -7.316955089569092
    7. ' ' → logprob: -7.691955089569092
    8. 'bags' → logprob: -7.691955089569092
    9. 'unit' → logprob: -7.816955089569092
    10. ' sacs' → logprob: -7.816955089569092

Token 493: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10794587433338165
    2. '):' → logprob: -3.6079459190368652
    3. '   ' → logprob: -3.7329459190368652
    4. ')' → logprob: -4.107945919036865
    5. ':' → logprob: -4.732945919036865
    6. ' :' → logprob: -4.732945919036865
    7. ').' → logprob: -5.107945919036865
    8. ',' → logprob: -5.607945919036865
    9. ' ):' → logprob: -6.357945919036865
    10. ' .' → logprob: -6.482945919036865

Token 494: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00024512779782526195
    2. ':' → logprob: -9.000245094299316
    3. '    
' → logprob: -10.000245094299316
    4. '
' → logprob: -10.250245094299316
    5. '```' → logprob: -11.625245094299316
    6. ')' → logprob: -12.250245094299316
    7. '    ' → logprob: -12.500245094299316
    8. '  
' → logprob: -12.875245094299316
    9. ' if' → logprob: -13.000245094299316
    10. '  ' → logprob: -13.000245094299316

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001696902181720361
    2. ' if' → logprob: -10.00016975402832
    3. 'price' → logprob: -10.12516975402832
    4. ' price' → logprob: -11.12516975402832
    5. ' shop' → logprob: -11.37516975402832
    6. 'shop' → logprob: -11.50016975402832
    7. 'total' → logprob: -11.50016975402832
    8. ' total' → logprob: -11.62516975402832
    9. 'if' → logprob: -12.37516975402832
    10. 'cost' → logprob: -12.75016975402832

Token 496: ' Param' (ID: 14796)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.38508376479148865
    2. '   ' → logprob: -1.385083794593811
    3. ' shop' → logprob: -3.3850836753845215
    4. 'if' → logprob: -3.7600836753845215
    5. ' if' → logprob: -4.5100836753845215
    6. 'price' → logprob: -8.01008415222168
    7. 'total' → logprob: -8.51008415222168
    8. 'shops' → logprob: -9.13508415222168
    9. 'cost' → logprob: -9.51008415222168
    10. 'Si' → logprob: -10.13508415222168

Token 497: 'ètres' (ID: 40427)
  Prédit: 'ètre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.5794059634208679
    2. 'ètres' → logprob: -0.8294059634208679
    3. '   ' → logprob: -6.704405784606934
    4. 'eters' → logprob: -7.204405784606934
    5. 'etre' → logprob: -7.204405784606934
    6. 'et' → logprob: -8.329405784606934
    7. '  ' → logprob: -8.704405784606934
    8. '    ' → logprob: -9.704405784606934
    9. ' ' → logprob: -10.079405784606934
    10. ' bags' → logprob: -10.579405784606934

Token 498: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1787785440683365
    2. ' :' → logprob: -2.303778648376465
    3. ':
' → logprob: -3.678778648376465
    4. '(shop' → logprob: -4.303778648376465
    5. '   ' → logprob: -4.678778648376465
    6. ' :
' → logprob: -5.678778648376465
    7. '):
' → logprob: -5.803778648376465
    8. '):' → logprob: -5.928778648376465
    9. ' (' → logprob: -6.178778648376465
    10. ')' → logprob: -6.428778648376465

Token 499: '   ' (ID: 271)
  Prédit: ' shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shop' → logprob: -0.1841019093990326
    2. '   ' → logprob: -2.4341018199920654
    3. 'shop' → logprob: -2.5591018199920654
    4. '(shop' → logprob: -6.4341020584106445
    5. '    ' → logprob: -8.059102058410645
    6. '    
' → logprob: -8.184102058410645
    7. ',' → logprob: -8.934102058410645
    8. ')' → logprob: -8.934102058410645
    9. ' def' → logprob: -9.434102058410645
    10. '
' → logprob: -9.434102058410645

Token 500: ' shop' (ID: 9100)
  Prédit: ' shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shop' → logprob: -0.34932640194892883
    2. 'shop' (adapté à ' shop') → logprob: -1.4743263721466064
    3. '   ' → logprob: -2.7243263721466064
    4. '(shop' → logprob: -8.724326133728027
    5. '    ' → logprob: -10.849326133728027
    6. '
' → logprob: -11.099326133728027
    7. '```' → logprob: -11.099326133728027
    8. '    
' → logprob: -11.474326133728027
    9. ' ' → logprob: -11.599326133728027
    10. '_shop' → logprob: -11.849326133728027

Token 501: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.0043886941857635975
    2. '_' → logprob: -6.379388809204102
    3. '   ' → logprob: -6.504388809204102
    4. ',' → logprob: -7.004388809204102
    5. ')' → logprob: -10.254388809204102
    6. '):' → logprob: -10.629388809204102
    7. '_keys' → logprob: -10.629388809204102
    8. '_,' → logprob: -10.629388809204102
    9. ':' → logprob: -10.754388809204102
    10. '_name' → logprob: -11.004388809204102

Token 502: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0310223288834095
    2. '):' → logprob: -3.906022310256958
    3. ':' → logprob: -4.656022548675537
    4. ')' → logprob: -7.406022548675537
    5. '=' → logprob: -9.281022071838379
    6. ' ,' → logprob: -9.531022071838379
    7. '   ' → logprob: -10.156022071838379
    8. ' =' → logprob: -10.656022071838379
    9. '),' → logprob: -11.031022071838379
    10. ' :' → logprob: -11.156022071838379

Token 503: ' clé' (ID: 83188)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2815333604812622
    2. 'str' → logprob: -1.4065333604812622
    3. 'shop' → logprob: -8.406533241271973
    4. ' shop' → logprob: -8.906533241271973
    5. ' '' → logprob: -12.531533241271973
    6. '   ' → logprob: -12.656533241271973
    7. 's' → logprob: -12.906533241271973
    8. ' shops' → logprob: -13.031533241271973
    9. ' ' → logprob: -13.156533241271973
    10. ''' → logprob: -13.531533241271973

Token 504: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7515051364898682
    2. ' =' → logprob: -1.7515051364898682
    3. '=' → logprob: -2.501505136489868
    4. ',' → logprob: -2.626505136489868
    5. ':' → logprob: -2.876505136489868
    6. '<|end|>' → logprob: -3.626505136489868
    7. ' (' → logprob: -3.876505136489868
    8. '   ' → logprob: -4.001504898071289
    9. '):
' → logprob: -4.376504898071289
    10. ' ' → logprob: -4.751504898071289

Token 505: ' la' (ID: 557)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0629534721374512
    2. 'shop' → logprob: -1.6879534721374512
    3. 'shops' → logprob: -1.8129534721374512
    4. ' la' → logprob: -1.8129534721374512
    5. ' str' → logprob: -3.062953472137451
    6. 'la' → logprob: -3.187953472137451
    7. ' shops' → logprob: -3.312953472137451
    8. ' shop' → logprob: -4.562953472137451
    9. 'le' → logprob: -6.312953472137451
    10. 'sh' → logprob: -7.187953472137451

Token 506: ' boutique' (ID: 46148)
  Prédit: 'bout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bout' → logprob: -0.8051829934120178
    2. 'shop' → logprob: -1.055182933807373
    3. 'shops' → logprob: -2.430182933807373
    4. 'str' → logprob: -3.180182933807373
    5. ' boutique' → logprob: -3.305182933807373
    6. 'dict' → logprob: -4.055182933807373
    7. ' boutiques' → logprob: -5.305182933807373
    8. ' shop' → logprob: -5.555182933807373
    9. ' dict' → logprob: -5.805182933807373
    10. ' shops' → logprob: -5.805182933807373

Token 507: ' ('' (ID: 9906)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18221773207187653
    2. '   ' → logprob: -2.307217836380005
    3. ' (' → logprob: -3.057217836380005
    4. ' ,' → logprob: -4.682217597961426
    5. '
' → logprob: -4.932217597961426
    6. ',
' → logprob: -5.932217597961426
    7. ':' → logprob: -8.557217597961426
    8. '    
' → logprob: -8.682217597961426
    9. 'def' → logprob: -9.057217597961426
    10. ' ' → logprob: -9.557217597961426

Token 508: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0026474790647625923
    2. ')' → logprob: -7.002647399902344
    3. ''A' → logprob: -7.252647399902344
    4. ''' → logprob: -8.252647399902344
    5. '')' → logprob: -8.252647399902344
    6. ' A' → logprob: -9.252647399902344
    7. 's' → logprob: -9.877647399902344
    8. 'str' → logprob: -9.877647399902344
    9. 'shops' → logprob: -10.002647399902344
    10. ''s' → logprob: -10.127647399902344

Token 509: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16460123658180237
    2. ''' → logprob: -2.0396013259887695
    3. '')
' → logprob: -3.9146013259887695
    4. ')' → logprob: -7.0396013259887695
    5. '',' → logprob: -7.5396013259887695
    6. ''),' → logprob: -9.28960132598877
    7. '')

' → logprob: -9.53960132598877
    8. '')
' → logprob: -10.03960132598877
    9. ',' → logprob: -10.16460132598877
    10. '   ' → logprob: -11.41460132598877

Token 510: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.48586851358413696
    2. ''' → logprob: -1.2358684539794922
    3. '   ' → logprob: -3.610868453979492
    4. ' B' → logprob: -3.610868453979492
    5. ''s' → logprob: -4.360868453979492
    6. 'B' → logprob: -4.735868453979492
    7. ')' → logprob: -5.485868453979492
    8. ' shop' → logprob: -6.110868453979492
    9. 'shop' → logprob: -6.110868453979492
    10. ''b' → logprob: -6.235868453979492

Token 511: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.000920869642868638
    2. ' B' → logprob: -7.00092077255249
    3. ''' → logprob: -11.625921249389648
    4. ' '' → logprob: -16.00092124938965
    5. 'b' → logprob: -16.50092124938965
    6. '`' → logprob: -16.87592124938965
    7. '   ' → logprob: -17.00092124938965
    8. 'A' → logprob: -17.75092124938965
    9. 'shop' → logprob: -17.75092124938965
    10. '"B' → logprob: -17.87592124938965

Token 512: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5288589596748352
    2. '',' → logprob: -0.9038589596748352
    3. '')' → logprob: -5.4038591384887695
    4. ',' → logprob: -7.4038591384887695
    5. ''),' → logprob: -9.02885913848877
    6. ''or' → logprob: -9.27885913848877
    7. '')
' → logprob: -9.52885913848877
    8. '   ' → logprob: -9.65385913848877
    9. '','' → logprob: -9.77885913848877
    10. ','' → logprob: -10.02885913848877

Token 513: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9017528295516968
    2. ''' → logprob: -1.2767528295516968
    3. '')' → logprob: -1.4017528295516968
    4. ',' → logprob: -3.4017529487609863
    5. ''):' → logprob: -3.9017529487609863
    6. '',' → logprob: -4.901752948760986
    7. '   ' → logprob: -6.276752948760986
    8. '')
' → logprob: -6.526752948760986
    9. '):' → logprob: -6.526752948760986
    10. ''):
' → logprob: -7.026752948760986

Token 514: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.7154192328453064
    2. ''' → logprob: -0.8404192328453064
    3. 'C' → logprob: -3.340419292449951
    4. ' '' → logprob: -3.840419292449951
    5. ' C' → logprob: -4.590419292449951
    6. ''s' → logprob: -5.340419292449951
    7. '')' → logprob: -5.465419292449951
    8. ')' → logprob: -7.090419292449951
    9. ''S' → logprob: -7.340419292449951
    10. 'shop' → logprob: -7.715419292449951

Token 515: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00010437761375214905
    2. ''C' → logprob: -9.500103950500488
    3. ' C' → logprob: -10.875103950500488
    4. ''' → logprob: -11.500103950500488
    5. ' ' → logprob: -15.500103950500488
    6. '   ' → logprob: -16.875104904174805
    7. '')' → logprob: -17.000104904174805
    8. ' '' → logprob: -17.625104904174805
    9. 'c' → logprob: -18.125104904174805
    10. '  ' → logprob: -18.500104904174805

Token 516: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2689023017883301
    2. '')
' → logprob: -1.76890230178833
    3. ')' → logprob: -2.76890230178833
    4. ')
' → logprob: -6.39390230178833
    5. '')
' → logprob: -7.64390230178833
    6. ''' → logprob: -8.393901824951172
    7. '')

' → logprob: -9.768901824951172
    8. '   ' → logprob: -10.393901824951172
    9. ')
' → logprob: -11.143901824951172
    10. ')')
' → logprob: -11.393901824951172

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06989418715238571
    2. ' bags' → logprob: -2.8198940753936768
    3. 'bags' → logprob: -5.194894313812256
    4. ')' → logprob: -6.694894313812256
    5. '    
' → logprob: -8.569893836975098
    6. '    ' → logprob: -8.694893836975098
    7. ' ' → logprob: -9.069893836975098
    8. '
' → logprob: -9.194893836975098
    9. ' )' → logprob: -9.319893836975098
    10. ',' → logprob: -9.819893836975098

Token 518: ' bags' (ID: 23359)
  Prédit: ' bags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bags' → logprob: -0.7902215123176575
    2. 'bags' (adapté à ' bags') → logprob: -0.9152215123176575
    3. '   ' → logprob: -2.0402214527130127
    4. ')' → logprob: -5.665221691131592
    5. 'n' → logprob: -5.665221691131592
    6. ' n' → logprob: -6.165221691131592
    7. '):
' → logprob: -6.665221691131592
    8. 'num' → logprob: -7.040221691131592
    9. ')
' → logprob: -7.540221691131592
    10. ' num' → logprob: -7.790221691131592

Token 519: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02398073486983776
    2. ':' → logprob: -3.7739806175231934
    3. '):
' → logprob: -8.273981094360352
    4. ' ):' → logprob: -8.273981094360352
    5. ')' → logprob: -8.773981094360352
    6. ':int' → logprob: -10.273981094360352
    7. ' :' → logprob: -10.523981094360352
    8. '   ' → logprob: -12.898981094360352
    9. ',' → logprob: -13.398981094360352
    10. ' ' → logprob: -14.273981094360352

Token 520: ' nombre' (ID: 9733)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12708359956741333
    2. 'int' → logprob: -2.1270835399627686
    3. ' nombre' → logprob: -9.002083778381348
    4. ' ' → logprob: -11.127083778381348
    5. ' entier' → logprob: -12.127083778381348
    6. 'nombre' → logprob: -12.627083778381348
    7. ' ' → logprob: -13.252083778381348
    8. '   ' → logprob: -13.627083778381348
    9. '(int' → logprob: -13.627083778381348
    10. ' n' → logprob: -13.877083778381348

Token 521: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2747715711593628
    2. '_de' → logprob: -1.3997715711593628
    3. '_' → logprob: -1.5247715711593628
    4. '_des' → logprob: -2.5247716903686523
    5. 'de' → logprob: -3.0247716903686523
    6. '_b' → logprob: -3.1497716903686523
    7. '_d' → logprob: -3.3997716903686523
    8. ' d' → logprob: -4.524771690368652
    9. 'd' → logprob: -4.899771690368652
    10. ' des' → logprob: -5.274771690368652

Token 522: ' sacs' (ID: 150414)
  Prédit: ' sacs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sacs' → logprob: -0.012689286842942238
    2. 's' → logprob: -4.387689113616943
    3. ' ' → logprob: -10.012689590454102
    4. 'bags' → logprob: -10.137689590454102
    5. ' ' → logprob: -10.512689590454102
    6. ' sac' → logprob: -10.512689590454102
    7. '_s' → logprob: -10.762689590454102
    8. ' sacks' → logprob: -12.387689590454102
    9. '```' → logprob: -12.387689590454102
    10. ' bags' → logprob: -13.137689590454102

Token 523: '
    
' (ID: 15698)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1537451595067978
    2. ')' → logprob: -3.028745174407959
    3. ' ):' → logprob: -3.028745174407959
    4. '):
' → logprob: -4.278745174407959
    5. '   ' → logprob: -4.528745174407959
    6. ' )' → logprob: -4.903745174407959
    7. '<|end|>' → logprob: -5.403745174407959
    8. ':' → logprob: -6.028745174407959
    9. '<|end|>' → logprob: -6.403745174407959
    10. ' :' → logprob: -6.528745174407959

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026735760271549225
    2. ')' → logprob: -3.776735782623291
    3. '):' → logprob: -6.276735782623291
    4. '):
' → logprob: -6.526735782623291
    5. 'if' → logprob: -10.276735305786133
    6. '"""' → logprob: -10.401735305786133
    7. '```' → logprob: -10.651735305786133
    8. '   ' → logprob: -10.776735305786133
    9. ' if' → logprob: -11.651735305786133
    10. ' )' → logprob: -12.401735305786133

Token 525: ' Retour' (ID: 146830)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008055970072746277
    2. '"""' → logprob: -5.758056163787842
    3. ' if' → logprob: -6.008056163787842
    4. '   ' → logprob: -7.133056163787842
    5. '"""
' → logprob: -7.133056163787842
    6. 'Si' → logprob: -7.508056163787842
    7. 'si' → logprob: -9.758055686950684
    8. '#' → logprob: -9.758055686950684
    9. '```' → logprob: -10.258055686950684
    10. 'Returns' → logprob: -10.383055686950684

Token 526: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.006927193142473698
    2. 'n' → logprob: -5.756927013397217
    3. '   ' → logprob: -6.131927013397217
    4. 'nne' → logprob: -7.006927013397217
    5. ' :' → logprob: -8.756927490234375
    6. 'né' → logprob: -9.506927490234375
    7. 'nee' → logprob: -9.506927490234375
    8. ':' → logprob: -10.006927490234375
    9. 'nera' → logprob: -10.131927490234375
    10. '    ' → logprob: -10.131927490234375

Token 527: ' :
' (ID: 10039)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.506428062915802
    2. ' int' → logprob: -1.3814280033111572
    3. '   ' → logprob: -2.8814280033111572
    4. 'int' → logprob: -3.5064280033111572
    5. ' float' → logprob: -3.6314280033111572
    6. ' un' → logprob: -4.631428241729736
    7. ' la' → logprob: -5.381428241729736
    8. ' (' → logprob: -5.881428241729736
    9. 'le' → logprob: -6.006428241729736
    10. ' prix' → logprob: -6.131428241729736

Token 528: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.475998193025589
    2. ' float' → logprob: -1.2259981632232666
    3. ' int' → logprob: -2.9759981632232666
    4. 'float' → logprob: -3.9759981632232666
    5. 'int' → logprob: -4.725998401641846
    6. ' prix' → logprob: -6.225998401641846
    7. ' price' → logprob: -6.975998401641846
    8. 'prix' → logprob: -7.100998401641846
    9. ' return' → logprob: -7.725998401641846
    10. ' cost' → logprob: -7.850998401641846

Token 529: ' Le' (ID: 2018)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.7580905556678772
    2. 'float' → logprob: -1.6330904960632324
    3. ' int' → logprob: -2.2580904960632324
    4. ' le' → logprob: -2.2580904960632324
    5. 'int' → logprob: -2.7580904960632324
    6. '   ' → logprob: -3.1330904960632324
    7. ' prix' → logprob: -5.633090496063232
    8. 'le' → logprob: -5.758090496063232
    9. ' un' → logprob: -5.883090496063232
    10. 'prix' → logprob: -6.008090496063232

Token 530: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.472675621509552
    2. ' prix' → logprob: -1.0976755619049072
    3. ' int' → logprob: -4.222675800323486
    4. ' float' → logprob: -4.472675800323486
    5. ' cout' → logprob: -5.222675800323486
    6. '   ' → logprob: -5.597675800323486
    7. 'prix' → logprob: -5.847675800323486
    8. ' cost' → logprob: -6.222675800323486
    9. 'co' → logprob: -6.972675800323486
    10. ' ' → logprob: -7.472675800323486

Token 531: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9192472696304321
    2. ' =' → logprob: -1.0442472696304321
    3. '   ' → logprob: -1.9192472696304321
    4. ' total' → logprob: -2.4192471504211426
    5. '=' → logprob: -5.294247150421143
    6. '_total' → logprob: -6.044247150421143
    7. 'int' → logprob: -6.544247150421143
    8. ' en' → logprob: -6.669247150421143
    9. '```' → logprob: -7.294247150421143
    10. 'final' → logprob: -7.669247150421143

Token 532: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.822489857673645
    2. '   ' → logprob: -1.572489857673645
    3. ' en' → logprob: -1.572489857673645
    4. '```' → logprob: -3.3224897384643555
    5. 'total' → logprob: -3.6974897384643555
    6. ' (' → logprob: -3.9474897384643555
    7. 'en' → logprob: -4.1974897384643555
    8. '=' → logprob: -4.6974897384643555
    9. ' total' → logprob: -4.9474897384643555
    10. 'float' → logprob: -5.3224897384643555

Token 533: ' yen' (ID: 34890)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8701754212379456
    2. 'yen' → logprob: -1.4951753616333008
    3. 'int' → logprob: -1.7451753616333008
    4. 'ent' → logprob: -2.620175361633301
    5. ' yen' → logprob: -2.870175361633301
    6. ' float' → logprob: -3.620175361633301
    7. ' entier' → logprob: -4.495175361633301
    8. ' int' → logprob: -4.870175361633301
    9. 'y' → logprob: -6.620175361633301
    10. 'enti' → logprob: -7.245175361633301

Token 534: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18803671002388
    2. ':' → logprob: -2.9380366802215576
    3. ',' → logprob: -3.0630366802215576
    4. '.' → logprob: -4.188036918640137
    5. ')' → logprob: -4.563036918640137
    6. ' :' → logprob: -4.688036918640137
    7. ' =' → logprob: -4.938036918640137
    8. ' en' → logprob: -5.063036918640137
    9. '```' → logprob: -5.063036918640137
    10. ' ' → logprob: -5.813036918640137

Token 535: 'int' (ID: 491)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4625099301338196
    2. 'int' → logprob: -1.7125098705291748
    3. ')' → logprob: -1.8375098705291748
    4. ' float' → logprob: -3.712509870529175
    5. ' int' → logprob: -5.212510108947754
    6. ' )' → logprob: -7.462510108947754
    7. '   ' → logprob: -8.712510108947754
    8. ')
' → logprob: -11.212510108947754
    9. ' ' → logprob: -11.462510108947754
    10. ' ' → logprob: -11.462510108947754

Token 536: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027223716024309397
    2. ' )' → logprob: -6.627722263336182
    3. ')
' → logprob: -6.627722263336182
    4. '   ' → logprob: -10.12772274017334
    5. ' )
' → logprob: -11.00272274017334
    6. ')
' → logprob: -11.75272274017334
    7. 'e' → logprob: -12.87772274017334
    8. ' ' → logprob: -14.12772274017334
    9. 'int' → logprob: -14.37772274017334
    10. ')`' → logprob: -14.75272274017334

Token 537: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3684241473674774
    2. '   ' → logprob: -1.2434241771697998
    3. '):' → logprob: -4.493423938751221
    4. ':
' → logprob: -5.243423938751221
    5. ' :' → logprob: -5.993423938751221
    6. '):
' → logprob: -7.868423938751221
    7. ')' → logprob: -8.493424415588379
    8. '{' → logprob: -9.368424415588379
    9. ' :
' → logprob: -9.993424415588379
    10. '```' → logprob: -10.618424415588379

Token 538: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010118331760168076
    2. ' if' → logprob: -4.76011848449707
    3. ' shop' → logprob: -6.88511848449707
    4. 'if' → logprob: -8.88511848449707
    5. 'shop' → logprob: -8.88511848449707
    6. ')' → logprob: -9.76011848449707
    7. '    ' → logprob: -10.13511848449707
    8. '```' → logprob: -10.88511848449707
    9. '    
' → logprob: -11.01011848449707
    10. '   ' → logprob: -11.01011848449707

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04813623055815697
    2. 'shop' → logprob: -3.1731362342834473
    3. ' shop' → logprob: -5.923136234283447
    4. 'if' → logprob: -6.298136234283447
    5. ' if' → logprob: -7.548136234283447
    6. '   ' → logprob: -10.048135757446289
    7. 'price' → logprob: -12.173135757446289
    8. '    
' → logprob: -12.173135757446289
    9. 'total' → logprob: -12.548135757446289
    10. 'def' → logprob: -12.673135757446289

Token 540: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' (adapté à ' shop') → logprob: -0.013823896646499634
    2. 'if' → logprob: -4.763823986053467
    3. ' shop' → logprob: -6.013823986053467
    4. '   ' → logprob: -6.263823986053467
    5. ' if' → logprob: -7.638823986053467
    6. 'price' → logprob: -8.388823509216309
    7. 'data' → logprob: -10.388823509216309
    8. 'info' → logprob: -10.638823509216309
    9. 'cost' → logprob: -11.388823509216309
    10. 'total' → logprob: -11.638823509216309

Token 541: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1627560555934906
    2. '=' → logprob: -1.912756085395813
    3. '_' → logprob: -6.537755966186523
    4. '   ' → logprob: -6.912755966186523
    5. '    ' → logprob: -10.662755966186523
    6. '_info' → logprob: -10.787755966186523
    7. '_data' → logprob: -11.537755966186523
    8. '_=' → logprob: -11.537755966186523
    9. '	' → logprob: -12.037755966186523
    10. ' ' → logprob: -12.412755966186523

Token 542: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.018151583150029182
    2. ' shops' → logprob: -4.018151760101318
    3. 'shop' → logprob: -13.39315128326416
    4. 'ships' → logprob: -16.268152236938477
    5. 'sh' → logprob: -17.768152236938477
    6. 's' → logprob: -18.643152236938477
    7. 'stores' → logprob: -18.643152236938477
    8. '   ' → logprob: -19.018152236938477
    9. ' ' → logprob: -19.143152236938477
    10. '	' → logprob: -19.518152236938477

Token 543: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. 'shop' → logprob: -14.750001907348633
    3. '=' → logprob: -15.000001907348633
    4. ' [' → logprob: -15.375001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '_key' → logprob: -16.125001907348633
    7. 'def' → logprob: -16.625001907348633
    8. ' =' → logprob: -16.875001907348633
    9. '_shop' → logprob: -16.875001907348633
    10. '(shop' → logprob: -16.875001907348633

Token 544: 'shop' (ID: 10595)
  Prédit: 'shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -4.320199877838604e-07
    2. ' shop' → logprob: -14.75
    3. '(shop' → logprob: -19.25
    4. 'ship' → logprob: -21.875
    5. 'Shop' → logprob: -22.5
    6. '_shop' → logprob: -22.625
    7. '[' → logprob: -23.0
    8. 'shops' → logprob: -23.125
    9. 'sh' → logprob: -23.25
    10. '/shop' → logprob: -23.5

Token 545: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -6.511406809295295e-06
    2. 'key' → logprob: -12.000006675720215
    3. 'ey' → logprob: -16.1250057220459
    4. 'Key' → logprob: -16.1250057220459
    5. '[' → logprob: -16.7500057220459
    6. '_KEY' → logprob: -17.6250057220459
    7. ']' → logprob: -18.2500057220459
    8. 'shop' → logprob: -18.2500057220459
    9. '][' → logprob: -19.0000057220459
    10. 'e' → logprob: -19.2500057220459

Token 546: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.474871963262558
    2. ']' → logprob: -0.9748719930648804
    3. ']
' → logprob: -7.34987211227417
    4. ']

' → logprob: -8.849871635437012
    5. '   ' → logprob: -12.724871635437012
    6. ' ]
' → logprob: -12.849871635437012
    7. ' ]' → logprob: -13.599871635437012
    8. ']

' → logprob: -14.099871635437012
    9. '']' → logprob: -15.224871635437012
    10. '']
' → logprob: -15.599871635437012

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006277859210968018
    2. 'total' → logprob: -5.881278038024902
    3. ' total' → logprob: -6.881278038024902
    4. 'units' → logprob: -7.381278038024902
    5. 'price' → logprob: -7.631278038024902
    6. '    
' → logprob: -8.131278038024902
    7. 'n' → logprob: -8.631278038024902
    8. ' units' → logprob: -8.631278038024902
    9. 'num' → logprob: -8.756278038024902
    10. ' price' → logprob: -9.256278038024902

Token 548: ' full' (ID: 3149)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -1.0233758687973022
    2. 'units' → logprob: -1.1483758687973022
    3. 'full' (adapté à ' full') → logprob: -2.148375988006592
    4. 'discount' → logprob: -2.648375988006592
    5. 'price' → logprob: -2.773375988006592
    6. 'num' → logprob: -3.523375988006592
    7. 'total' → logprob: -3.773375988006592
    8. 'sets' → logprob: -5.273375988006592
    9. 'n' → logprob: -5.523375988006592
    10. 'bundle' → logprob: -5.523375988006592

Token 549: '_discount' (ID: 104401)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.41278284788131714
    2. '_batches' → logprob: -1.537782907485962
    3. '_sets' → logprob: -2.787782907485962
    4. '_units' → logprob: -3.412782907485962
    5. '_l' → logprob: -4.537782669067383
    6. '_price' → logprob: -4.787782669067383
    7. '_discount' → logprob: -5.787782669067383
    8. '_packages' → logprob: -6.162782669067383
    9. '_groups' → logprob: -6.287782669067383
    10. '_p' → logprob: -7.162782669067383

Token 550: '_batches' (ID: 143836)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30315423011779785
    2. '_sets' → logprob: -2.053154230117798
    3. '_groups' → logprob: -2.553154230117798
    4. '_batches' → logprob: -3.303154230117798
    5. '_b' → logprob: -4.428153991699219
    6. 'sets' → logprob: -6.303153991699219
    7. '_units' → logprob: -6.428153991699219
    8. 'ed' → logprob: -6.678153991699219
    9. '_count' → logprob: -7.428153991699219
    10. '_blocks' → logprob: -7.803153991699219

Token 551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023235023021698
    2. ' =' → logprob: -1.9102323055267334
    3. '   ' → logprob: -12.035232543945312
    4. '=b' → logprob: -13.535232543945312
    5. '=int' → logprob: -15.410232543945312
    6. ' ' → logprob: -16.285232543945312
    7. 's' → logprob: -16.410232543945312
    8. ',' → logprob: -16.410232543945312
    9. '=batch' → logprob: -16.410232543945312
    10. ' ' → logprob: -16.535232543945312

Token 552: ' bags' (ID: 23359)
  Prédit: 'bags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bags' → logprob: -0.22543802857398987
    2. ' bags' → logprob: -1.6004379987716675
    3. '   ' → logprob: -11.225438117980957
    4. ' ' → logprob: -12.350438117980957
    5. 'bag' → logprob: -12.600438117980957
    6. 'b' → logprob: -13.100438117980957
    7. '	b' → logprob: -14.475438117980957
    8. '(b' → logprob: -14.850438117980957
    9. '  ' → logprob: -15.600438117980957
    10. ' bag' → logprob: -15.725438117980957

Token 553: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.18081839382648468
    2. '//' → logprob: -1.8058184385299683
    3. '=' → logprob: -7.430818557739258
    4. '   ' → logprob: -7.805818557739258
    5. ' =' → logprob: -10.930818557739258
    6. '#' → logprob: -11.305818557739258
    7. ' ' → logprob: -11.305818557739258
    8. '//=' → logprob: -11.430818557739258
    9. ' ' → logprob: -11.680818557739258
    10. ' //
' → logprob: -12.805818557739258

Token 554: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -5.085517113911919e-05
    2. ' shop' → logprob: -10.00005054473877
    3. 'shops' → logprob: -12.25005054473877
    4. '(shop' → logprob: -14.62505054473877
    5. 'sh' → logprob: -17.125051498413086
    6. '   ' → logprob: -17.500051498413086
    7. 'ship' → logprob: -18.250051498413086
    8. '.shop' → logprob: -19.125051498413086
    9. ' ' → logprob: -19.500051498413086
    10. ' shops' → logprob: -19.750051498413086

Token 555: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0006258221692405641
    2. ''s' → logprob: -7.7506256103515625
    3. ''' → logprob: -9.375625610351562
    4. '[' → logprob: -10.000625610351562
    5. '_key' → logprob: -10.625625610351562
    6. '   ' → logprob: -11.000625610351562
    7. '["' → logprob: -11.500625610351562
    8. ''d' → logprob: -12.250625610351562
    9. '_' → logprob: -12.875625610351562
    10. '[
' → logprob: -13.250625610351562

Token 556: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -1.652451464906335e-05
    2. ''' → logprob: -11.375016212463379
    3. ''d' → logprob: -13.125016212463379
    4. '['' → logprob: -13.375016212463379
    5. ' discount' → logprob: -14.125016212463379
    6. 'dis' → logprob: -15.000016212463379
    7. '"' → logprob: -16.250017166137695
    8. '   ' → logprob: -16.625017166137695
    9. ''s' → logprob: -16.875017166137695
    10. 'disc' → logprob: -16.875017166137695

Token 557: '_units' (ID: 67867)
  Prédit: '_units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_units' → logprob: -2.8325677703833207e-05
    2. 'units' → logprob: -10.500028610229492
    3. '_' → logprob: -15.375028610229492
    4. 'Units' → logprob: -15.875028610229492
    5. '   ' → logprob: -16.250028610229492
    6. '```' → logprob: -17.000028610229492
    7. 's' → logprob: -17.125028610229492
    8. '_unit' → logprob: -17.500028610229492
    9. '
' → logprob: -17.625028610229492
    10. ''_' → logprob: -17.625028610229492

Token 558: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.019749529659748077
    2. ']' → logprob: -4.019749641418457
    3. '']
' → logprob: -6.519749641418457
    4. '"]' → logprob: -10.519749641418457
    5. ')' → logprob: -10.644749641418457
    6. ']
' → logprob: -10.769749641418457
    7. '']
' → logprob: -10.769749641418457
    8. ''' → logprob: -12.019749641418457
    9. '   ' → logprob: -12.019749641418457
    10. ' ]' → logprob: -12.019749641418457

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027092962991446257
    2. '    
' → logprob: -6.37770938873291
    3. '
' → logprob: -8.25270938873291
    4. '    ' → logprob: -9.12770938873291
    5. 'discount' → logprob: -9.50270938873291
    6. 'tokens' → logprob: -9.75270938873291
    7. ',' → logprob: -9.87770938873291
    8. '  ' → logprob: -9.87770938873291
    9. 'total' → logprob: -10.00270938873291
    10. ' tokens' → logprob: -10.25270938873291

Token 560: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.151167631149292
    2. '   ' → logprob: -1.276167631149292
    3. 'discount' → logprob: -1.276167631149292
    4. '
' → logprob: -2.526167631149292
    5. 'price' → logprob: -4.401167869567871
    6. '    
' → logprob: -5.026167869567871
    7. ' *' → logprob: -5.151167869567871
    8. 'cost' → logprob: -5.151167869567871
    9. 'tokens' → logprob: -5.776167869567871
    10. 'amount' → logprob: -6.276167869567871

Token 561: ' nombre' (ID: 9733)
  Prédit: 'bags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bags' → logprob: -0.533021092414856
    2. 'full' → logprob: -1.908021092414856
    3. 'shop' → logprob: -2.1580209732055664
    4. ' full' → logprob: -2.9080209732055664
    5. '(shop' → logprob: -3.4080209732055664
    6. 'shops' → logprob: -4.033020973205566
    7. ' bags' → logprob: -4.533020973205566
    8. '(' → logprob: -4.783020973205566
    9. ' shop' → logprob: -5.283020973205566
    10. 'b' → logprob: -5.533020973205566

Token 562: ' de' (ID: 334)
  Prédit: ' complet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.6640793085098267
    2. ' de' → logprob: -1.4140793085098267
    3. 'de' → logprob: -2.289079189300537
    4. '_full' → logprob: -3.539079189300537
    5. '   ' → logprob: -3.664079189300537
    6. '_complete' → logprob: -4.539079189300537
    7. ' complète' → logprob: -4.539079189300537
    8. 'com' → logprob: -4.789079189300537
    9. ' completo' → logprob: -4.789079189300537
    10. '_batches' → logprob: -4.789079189300537

Token 563: ' lots' (ID: 10836)
  Prédit: 'lots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lots' → logprob: -0.10197509825229645
    2. ' lots' → logprob: -3.226975202560425
    3. 'b' → logprob: -3.851975202560425
    4. 'lot' → logprob: -5.226974964141846
    5. 'pa' → logprob: -5.351974964141846
    6. 'full' → logprob: -5.601974964141846
    7. 'bags' → logprob: -5.726974964141846
    8. 'ple' → logprob: -5.976974964141846
    9. 'group' → logprob: -6.101974964141846
    10. 's' → logprob: -6.476974964141846

Token 564: ' comple' (ID: 2149)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1886795312166214
    2. 'ent' → logprob: -2.6886794567108154
    3. '   ' → logprob: -3.1886794567108154
    4. 'compl' → logprob: -3.9386794567108154
    5. ' comple' → logprob: -4.4386796951293945
    6. 'discount' → logprob: -5.1886796951293945
    7. 'complete' → logprob: -5.5636796951293945
    8. 'de' → logprob: -5.5636796951293945
    9. 'avec' → logprob: -6.0636796951293945
    10. 'with' → logprob: -6.4386796951293945

Token 565: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.47630298137664795
    2. 't' → logprob: -0.976302981376648
    3. 'tes' → logprob: -6.4763031005859375
    4. 'te' → logprob: -7.3513031005859375
    5. '```' → logprob: -10.726303100585938
    6. 'ted' → logprob: -12.726303100585938
    7. 'ets' → logprob: -13.476303100585938
    8. '\t' → logprob: -13.601303100585938
    9. 'ttes' → logprob: -13.726303100585938
    10. '=' → logprob: -13.726303100585938

Token 566: ' permettant' (ID: 61092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037120454013347626
    2. 'discount' → logprob: -3.4121203422546387
    3. '*' → logprob: -7.037120342254639
    4. '    
' → logprob: -7.162120342254639
    5. '<|end|>' → logprob: -8.412120819091797
    6. '
' → logprob: -8.662120819091797
    7. '```' → logprob: -8.662120819091797
    8. 'full' → logprob: -8.787120819091797
    9. 'tokens' → logprob: -8.787120819091797
    10. ' discounts' → logprob: -9.037120819091797

Token 567: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10258849710226059
    2. 'de' → logprob: -2.352588415145874
    3. 'la' → logprob: -6.602588653564453
    4. 'l' → logprob: -7.727588653564453
    5. 'une' → logprob: -8.227588653564453
    6. ' d' → logprob: -8.727588653564453
    7. 'ap' → logprob: -9.727588653564453
    8. '   ' → logprob: -11.227588653564453
    9. ' de' → logprob: -11.352588653564453
    10. 'ob' → logprob: -11.352588653564453

Token 568: ' remise' (ID: 96948)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.301601767539978
    2. 'discount' → logprob: -2.1766018867492676
    3. 'ré' → logprob: -2.3016018867492676
    4. 'application' → logprob: -3.1766018867492676
    5. 're' → logprob: -6.051601886749268
    6. ' remise' → logprob: -7.176601886749268
    7. ' réduction' → logprob: -7.301601886749268
    8. ' application' → logprob: -8.42660140991211
    9. 'rab' → logprob: -8.67660140991211
    10. 'ap' → logprob: -8.92660140991211

Token 569: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019080507336184382
    2. '    
' → logprob: -6.501907825469971
    3. '
' → logprob: -8.001908302307129
    4. ',' → logprob: -10.626908302307129
    5. '<|end|>' → logprob: -11.626908302307129
    6. 's' → logprob: -12.001908302307129
    7. '    ' → logprob: -12.251908302307129
    8. '  
' → logprob: -12.501908302307129
    9. '   
' → logprob: -12.751908302307129
    10. '     
' → logprob: -13.126908302307129

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03579665720462799
    2. 'discount' → logprob: -4.035796642303467
    3. 'remaining' → logprob: -5.160796642303467
    4. ' full' → logprob: -6.160796642303467
    5. 'total' → logprob: -6.535796642303467
    6. ' remainder' → logprob: -6.535796642303467
    7. ' remaining' → logprob: -6.535796642303467
    8. ' discount' → logprob: -6.785796642303467
    9. ' discounted' → logprob: -6.785796642303467
    10. 'full' → logprob: -7.410796642303467

Token 571: ' remaining' (ID: 15448)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.30816784501075745
    2. 'remaining' (adapté à ' remaining') → logprob: -1.433167815208435
    3. 'full' → logprob: -3.9331679344177246
    4. 're' → logprob: -6.308167934417725
    5. 'price' → logprob: -6.933167934417725
    6. ' remainder' → logprob: -7.058167934417725
    7. 'total' → logprob: -7.433167934417725
    8. ' discounted' → logprob: -7.558167934417725
    9. 'partial' → logprob: -7.683167934417725
    10. ' remaining' → logprob: -7.808167934417725

Token 572: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.009198254905641079
    2. '_s' → logprob: -5.384198188781738
    3. 's' → logprob: -6.634198188781738
    4. ' =' → logprob: -6.634198188781738
    5. '=' → logprob: -6.759198188781738
    6. 'bags' → logprob: -8.009198188781738
    7. '_batches' → logprob: -8.134198188781738
    8. '_' → logprob: -10.509198188781738
    9. ' ' → logprob: -10.884198188781738
    10. '_tokens' → logprob: -10.884198188781738

Token 573: 'ags' (ID: 2916)
  Prédit: 'ags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ags' → logprob: -1.6240566083070007e-06
    2. 'atches' → logprob: -14.250001907348633
    3. 'ag' → logprob: -15.125001907348633
    4. 'bags' → logprob: -15.375001907348633
    5. '
' → logprob: -16.625001907348633
    6. 'a' → logprob: -17.125001907348633
    7. 's' → logprob: -17.375001907348633
    8. '

' → logprob: -17.375001907348633
    9. 'gs' → logprob: -17.375001907348633
    10. ' bags' → logprob: -17.625001907348633

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740777015686035
    2. ' =' → logprob: -0.9740777015686035
    3. '   ' → logprob: -15.599077224731445
    4. '	' → logprob: -15.724077224731445
    5. ' ' → logprob: -16.224077224731445
    6. '＝' → logprob: -16.349077224731445
    7. '    ' → logprob: -17.099077224731445
    8. '  ' → logprob: -17.849077224731445
    9. ' =
' → logprob: -17.974077224731445
    10. '```' → logprob: -18.099077224731445

Token 575: ' bags' (ID: 23359)
  Prédit: 'bags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bags' → logprob: -0.6326121091842651
    2. ' bags' → logprob: -0.7576121091842651
    3. 'b' → logprob: -11.882612228393555
    4. ' ' → logprob: -13.382612228393555
    5. '   ' → logprob: -13.382612228393555
    6. 'bag' → logprob: -13.382612228393555
    7. '	b' → logprob: -14.882612228393555
    8. ' sacs' → logprob: -15.257612228393555
    9. ' baskets' → logprob: -15.945112228393555
    10. '  ' → logprob: -16.570112228393555

Token 576: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3868997097015381
    2. ' %' → logprob: -1.136899709701538
    3. '   ' → logprob: -11.136899948120117
    4. '=' → logprob: -11.636899948120117
    5. ' ' → logprob: -12.636899948120117
    6. '#' → logprob: -14.261899948120117
    7. ' =' → logprob: -14.386899948120117
    8. ' ' → logprob: -15.011899948120117
    9. '  ' → logprob: -16.261899948120117
    10. '%=' → logprob: -16.261899948120117

Token 577: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.0005563704180531204
    2. ' shop' → logprob: -7.500556468963623
    3. '(shop' → logprob: -13.250555992126465
    4. 'shops' → logprob: -14.125555992126465
    5. '   ' → logprob: -14.750555992126465
    6. ' ' → logprob: -15.625555992126465
    7. 'sh' → logprob: -16.25055694580078
    8. '  ' → logprob: -16.62555694580078
    9. 'ship' → logprob: -17.00055694580078
    10. '    ' → logprob: -17.00055694580078

Token 578: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.000897289311978966
    2. ''s' → logprob: -7.625897407531738
    3. '[' → logprob: -8.000897407531738
    4. '   ' → logprob: -9.875897407531738
    5. ''' → logprob: -11.750897407531738
    6. '["' → logprob: -12.500897407531738
    7. 'shop' → logprob: -12.625897407531738
    8. '	' → logprob: -14.000897407531738
    9. ' ['' → logprob: -14.000897407531738
    10. '{'' → logprob: -14.500897407531738

Token 579: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.3870944678783417
    2. 'shop' → logprob: -1.137094497680664
    3. '['' → logprob: -9.262094497680664
    4. ' shop' → logprob: -10.637094497680664
    5. 'shops' → logprob: -10.762094497680664
    6. ' discount' → logprob: -11.137094497680664
    7. '   ' → logprob: -11.262094497680664
    8. ''s' → logprob: -11.637094497680664
    9. 'dis' → logprob: -11.637094497680664
    10. ''' → logprob: -12.262094497680664

Token 580: '_units' (ID: 67867)
  Prédit: '_units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_units' → logprob: -6.392202976712724e-06
    2. 'units' → logprob: -12.250006675720215
    3. 'Units' → logprob: -14.250006675720215
    4. '_' → logprob: -15.625006675720215
    5. '   ' → logprob: -15.750006675720215
    6. '```' → logprob: -16.2500057220459
    7. 's' → logprob: -16.2500057220459
    8. '
' → logprob: -17.0000057220459
    9. 'd' → logprob: -17.2500057220459
    10. '_unit' → logprob: -17.3750057220459

Token 581: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.1395287960767746
    2. ']' → logprob: -2.514528751373291
    3. '']
' → logprob: -3.139528751373291
    4. '   ' → logprob: -5.514528751373291
    5. ']
' → logprob: -6.389528751373291
    6. ')' → logprob: -9.63952922821045
    7. '']

' → logprob: -9.88952922821045
    8. ' ]' → logprob: -9.88952922821045
    9. '']
' → logprob: -9.88952922821045
    10. '"]' → logprob: -10.13952922821045

Token 582: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016324201598763466
    2. '    
' → logprob: -5.516324043273926
    3. '
' → logprob: -5.891324043273926
    4. 'cost' → logprob: -6.016324043273926
    5. ' cost' → logprob: -6.141324043273926
    6. 'total' → logprob: -6.266324043273926
    7. ' total' → logprob: -6.516324043273926
    8. 'price' → logprob: -7.266324043273926
    9. ' price' → logprob: -8.266324043273926
    10. '```' → logprob: -9.266324043273926

Token 583: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.899905800819397
    2. 'total' → logprob: -1.149905800819397
    3. 'cost' → logprob: -2.1499056816101074
    4. 'price' → logprob: -2.2749056816101074
    5. 'full' → logprob: -3.5249056816101074
    6. 'discount' → logprob: -4.274905681610107
    7. 'prix' → logprob: -6.024905681610107
    8. '    
' → logprob: -6.149905681610107
    9. '
' → logprob: -6.274905681610107
    10. ' total' → logprob: -6.274905681610107

Token 584: ' sacs' (ID: 150414)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.13064482808113098
    2. 'bags' → logprob: -2.7556447982788086
    3. ' remaining' → logprob: -3.1306447982788086
    4. ' bags' → logprob: -5.130644798278809
    5. 'rest' → logprob: -5.880644798278809
    6. 'reste' → logprob: -6.880644798278809
    7. ' remainder' → logprob: -7.130644798278809
    8. ' sacs' → logprob: -7.130644798278809
    9. 'nombre' → logprob: -7.255644798278809
    10. '   ' → logprob: -7.505644798278809

Token 585: ' non' (ID: 2893)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.6695889234542847
    2. 'rest' → logprob: -0.7945889234542847
    3. '   ' → logprob: -4.419589042663574
    4. ' non' → logprob: -4.794589042663574
    5. 'non' → logprob: -5.169589042663574
    6. '_rest' → logprob: -5.169589042663574
    7. ' restant' → logprob: -7.044589042663574
    8. 'sans' → logprob: -7.169589042663574
    9. '```' → logprob: -7.294589042663574
    10. ' hors' → logprob: -7.669589042663574

Token 586: ' rédu' (ID: 42105)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.4256404638290405
    2. 'discount' → logprob: -1.3006404638290405
    3. 'ap' → logprob: -4.42564058303833
    4. 'rest' → logprob: -4.42564058303833
    5. 'achet' → logprob: -4.42564058303833
    6. 'util' → logprob: -4.67564058303833
    7. 'ré' → logprob: -5.05064058303833
    8. ' rem' → logprob: -5.17564058303833
    9. 'dis' → logprob: -5.80064058303833
    10. ' discount' → logprob: -6.55064058303833

Token 587: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.0038729929365217686
    2. 'uits' → logprob: -5.753872871398926
    3. 'ites' → logprob: -8.628872871398926
    4. 'ents' → logprob: -9.003872871398926
    5. 't' → logprob: -9.503872871398926
    6. 'aits' → logprob: -9.503872871398926
    7. '```' → logprob: -10.503872871398926
    8. 'z' → logprob: -10.503872871398926
    9. 'uit' → logprob: -10.628872871398926
    10. 'it' → logprob: -10.753872871398926

Token 588: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013532763347029686
    2. '    
' → logprob: -5.388532638549805
    3. 'total' → logprob: -6.138532638549805
    4. 'cost' → logprob: -6.138532638549805
    5. '
' → logprob: -6.263532638549805
    6. ' cost' → logprob: -6.888532638549805
    7. ' total' → logprob: -7.138532638549805
    8. 'price' → logprob: -8.138532638549805
    9. '```' → logprob: -8.638532638549805
    10. ' price' → logprob: -9.638532638549805

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19051578640937805
    2. 'total' → logprob: -2.6905157566070557
    3. 'price' → logprob: -3.1905157566070557
    4. 'full' → logprob: -3.5655157566070557
    5. ' full' → logprob: -4.440515995025635
    6. 'cost' → logprob: -4.690515995025635
    7. ' total' → logprob: -4.690515995025635
    8. ' price' → logprob: -5.565515995025635
    9. ' cost' → logprob: -6.815515995025635
    10. 'discount' → logprob: -7.440515995025635

Token 590: ' #' (ID: 1069)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -1.171855092048645
    2. 'cost' → logprob: -1.421855092048645
    3. 'discount' → logprob: -1.671855092048645
    4. 'total' → logprob: -1.921855092048645
    5. 'price' → logprob: -2.1718549728393555
    6. '#' (adapté à ' #') → logprob: -7.9218549728393555
    7. 'normal' → logprob: -8.421854972839355
    8. ' full' → logprob: -9.546854972839355
    9. 'base' → logprob: -10.296854972839355
    10. 'prix' → logprob: -11.421854972839355

Token 591: ' Co' (ID: 4642)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.9203526973724365
    2. 'price' → logprob: -1.4203526973724365
    3. 'total' → logprob: -1.4203526973724365
    4. 'cost' → logprob: -2.7953526973724365
    5. 'discount' → logprob: -3.2953526973724365
    6. 'base' → logprob: -4.795352935791016
    7. 'normal' → logprob: -5.545352935791016
    8. 'prix' → logprob: -5.670352935791016
    9. '#' → logprob: -6.670352935791016
    10. ' full' → logprob: -7.170352935791016

Token 592: 'ût' (ID: 24581)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.002220914699137211
    2. 'sts' → logprob: -7.00222110748291
    3. 'ut' → logprob: -7.37722110748291
    4. 'ût' → logprob: -8.25222110748291
    5. 't' → logprob: -8.37722110748291
    6. 's' → logprob: -9.75222110748291
    7. '   ' → logprob: -9.87722110748291
    8. 'ts' → logprob: -10.87722110748291
    9. 'mp' → logprob: -11.12722110748291
    10. 'nt' → logprob: -11.37722110748291

Token 593: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6592590808868408
    2. '=' → logprob: -1.1592590808868408
    3. 'full' → logprob: -2.284259080886841
    4. '_full' → logprob: -3.159259080886841
    5. 'total' → logprob: -5.034258842468262
    6. ' full' → logprob: -5.534258842468262
    7. '_without' → logprob: -5.784258842468262
    8. '   ' → logprob: -5.909258842468262
    9. 'without' → logprob: -6.284258842468262
    10. 'sans' → logprob: -6.409258842468262

Token 594: ' les' (ID: 1341)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.20460852980613708
    2. ' full' → logprob: -2.07960844039917
    3. 'les' → logprob: -3.07960844039917
    4. ' les' → logprob: -4.45460844039917
    5. '(full' → logprob: -6.95460844039917
    6. '   ' → logprob: -7.70460844039917
    7. 'le' → logprob: -8.204608917236328
    8. 'la' → logprob: -9.079608917236328
    9. ' la' → logprob: -9.454608917236328
    10. '(' → logprob: -9.704608917236328

Token 595: ' lots' (ID: 10836)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.008874193765223026
    2. ' full' → logprob: -4.883874416351318
    3. 'lots' → logprob: -7.258874416351318
    4. 'b' → logprob: -8.13387393951416
    5. 'bags' → logprob: -9.63387393951416
    6. 'discount' → logprob: -9.88387393951416
    7. 's' → logprob: -10.63387393951416
    8. 'packs' → logprob: -11.38387393951416
    9. ' lots' → logprob: -11.50887393951416
    10. '(full' → logprob: -11.50887393951416

Token 596: ' comple' (ID: 2149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24227847158908844
    2. '_full' → logprob: -3.117278575897217
    3. 'com' → logprob: -3.617278575897217
    4. ' comple' → logprob: -3.617278575897217
    5. 'full' → logprob: -3.617278575897217
    6. '_discount' → logprob: -3.867278575897217
    7. 'discount' → logprob: -4.117278575897217
    8. '_com' → logprob: -4.742278575897217
    9. 'avec' → logprob: -4.867278575897217
    10. ' full' → logprob: -5.117278575897217

Token 597: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.005495445802807808
    2. 't' → logprob: -5.255495548248291
    3. '```' → logprob: -9.630495071411133
    4. 'tes' → logprob: -9.880495071411133
    5. 'nts' → logprob: -10.380495071411133
    6. 'ets' → logprob: -10.880495071411133
    7. 's' → logprob: -11.380495071411133
    8. 'x' → logprob: -11.880495071411133
    9. 'ents' → logprob: -12.130495071411133
    10. 'te' → logprob: -12.255495071411133

Token 598: ' avec' (ID: 3937)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.3344598114490509
    2. 'full' → logprob: -1.8344597816467285
    3. '   ' → logprob: -2.5844597816467285
    4. ' =' → logprob: -4.0844597816467285
    5. ' full' → logprob: -4.4594597816467285
    6. '=' → logprob: -4.8344597816467285
    7. ' discounted' → logprob: -4.9594597816467285
    8. 'total' → logprob: -6.4594597816467285
    9. 'with' → logprob: -7.0844597816467285
    10. 'cost' → logprob: -7.2094597816467285

Token 599: ' réduction' (ID: 89072)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.5647457838058472
    2. 'int' → logprob: -1.0647457838058472
    3. ' full' → logprob: -3.5647459030151367
    4. 'full' → logprob: -3.8147459030151367
    5. 'rem' → logprob: -4.064745903015137
    6. ' int' → logprob: -4.439745903015137
    7. ' discount' → logprob: -5.314745903015137
    8. ' remise' → logprob: -7.439745903015137
    9. '```' → logprob: -7.939745903015137
    10. 'la' → logprob: -8.064745903015137

Token 600: '
' (ID: 198)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.7383620142936707
    2. '=' → logprob: -2.1133620738983154
    3. ' full' → logprob: -2.3633620738983154
    4. 'discount' → logprob: -2.3633620738983154
    5. ' =' → logprob: -2.4883620738983154
    6. '   ' → logprob: -2.7383620738983154
    7. 'cost' → logprob: -3.9883620738983154
    8. 'total' → logprob: -3.9883620738983154
    9. '    
' → logprob: -4.988361835479736
    10. 'price' → logprob: -4.988361835479736

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5337705612182617
    2. 'full' → logprob: -2.4087705612182617
    3. '=' → logprob: -2.5337705612182617
    4. 'discount' → logprob: -2.6587705612182617
    5. ' =' → logprob: -3.0337705612182617
    6. 'cost' → logprob: -3.1587705612182617
    7. ' full' → logprob: -3.6587705612182617
    8. 'total' → logprob: -3.9087705612182617
    9. ' cost' → logprob: -4.658770561218262
    10. 'price' → logprob: -4.658770561218262

Token 602: ' cost' (ID: 3097)
  Prédit: 'discount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -0.33395013213157654
    2. 'full' → logprob: -1.458950161933899
    3. 'cost' (adapté à ' cost') → logprob: -3.0839500427246094
    4. 'price' → logprob: -5.833950042724609
    5. 'batch' → logprob: -6.708950042724609
    6. 'total' → logprob: -7.333950042724609
    7. ' full' → logprob: -7.583950042724609
    8. ' discounted' → logprob: -8.83395004272461
    9. 'base' → logprob: -10.33395004272461
    10. ' cost' → logprob: -10.33395004272461

Token 603: '_discount' (ID: 104401)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25260815024375916
    2. ' =' → logprob: -1.5026081800460815
    3. '   ' → logprob: -7.752608299255371
    4. '_full' → logprob: -9.002608299255371
    5. '_batches' → logprob: -10.002608299255371
    6. 's' → logprob: -10.877608299255371
    7. '_discount' → logprob: -11.377608299255371
    8. '_' → logprob: -11.377608299255371
    9. '_for' → logprob: -11.627608299255371
    10. ' ' → logprob: -12.252608299255371

Token 604: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.584133505821228
    2. '_batches' → logprob: -1.459133505821228
    3. ' =' → logprob: -1.584133505821228
    4. '=' → logprob: -5.959133625030518
    5. 's' → logprob: -6.834133625030518
    6. '_units' → logprob: -7.709133625030518
    7. '_b' → logprob: -7.959133625030518
    8. '   ' → logprob: -8.83413314819336
    9. '_groups' → logprob: -10.08413314819336
    10. '_amount' → logprob: -10.33413314819336

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4762134253978729
    2. ' =' → logprob: -0.9762134552001953
    3. '_batches' → logprob: -6.351213455200195
    4. 's' → logprob: -8.101213455200195
    5. '_' → logprob: -10.976213455200195
    6. '_units' → logprob: -10.976213455200195
    7. 'ed' → logprob: -11.226213455200195
    8. '_batch' → logprob: -12.101213455200195
    9. '=batch' → logprob: -12.101213455200195
    10. '_b' → logprob: -12.476213455200195

Token 606: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.4191626012325287
    2. ' full' → logprob: -1.419162631034851
    3. 'int' → logprob: -2.4191625118255615
    4. ' int' → logprob: -5.419162750244141
    5. '(full' → logprob: -5.544162750244141
    6. 'shop' → logprob: -6.544162750244141
    7. '(int' → logprob: -6.794162750244141
    8. '(shop' → logprob: -8.16916275024414
    9. '(' → logprob: -9.41916275024414
    10. 'round' → logprob: -9.54416275024414

Token 607: '_discount' (ID: 104401)
  Prédit: '_discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_discount' → logprob: -0.18021173775196075
    2. '_batches' → logprob: -1.8052117824554443
    3. 'discount' → logprob: -8.055212020874023
    4. '_units' → logprob: -9.305212020874023
    5. 'b' → logprob: -10.430212020874023
    6. 'Discount' → logprob: -12.305212020874023
    7. '_batch' → logprob: -12.680212020874023
    8. '   ' → logprob: -12.680212020874023
    9. 's' → logprob: -13.055212020874023
    10. '\' → logprob: -13.055212020874023

Token 608: '_batches' (ID: 143836)
  Prédit: '_batches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_batches' → logprob: -5.796184723294573e-06
    2. 'b' → logprob: -12.125005722045898
    3. '_b' → logprob: -15.375005722045898
    4. '_' → logprob: -16.6250057220459
    5. 'B' → logprob: -17.2500057220459
    6. '_units' → logprob: -17.7500057220459
    7. 's' → logprob: -18.5000057220459
    8. '   ' → logprob: -19.0000057220459
    9. '*_' → logprob: -19.0000057220459
    10. '_batch' → logprob: -19.5000057220459

Token 609: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20144617557525635
    2. '*' → logprob: -1.7014461755752563
    3. '   ' → logprob: -11.576446533203125
    4. '_' → logprob: -11.951446533203125
    5. ' ' → logprob: -11.951446533203125
    6. ' ' → logprob: -12.826446533203125
    7. '```' → logprob: -13.326446533203125
    8. '*(' → logprob: -13.451446533203125
    9. '\' → logprob: -13.701446533203125
    10. '#' → logprob: -14.201446533203125

Token 610: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.1532430201768875
    2. '(shop' → logprob: -2.278243064880371
    3. 'int' → logprob: -3.653243064880371
    4. '(int' → logprob: -4.903243064880371
    5. ' shop' → logprob: -5.403243064880371
    6. '(' → logprob: -7.028243064880371
    7. ' int' → logprob: -8.028243064880371
    8. ' (' → logprob: -8.903243064880371
    9. '(sh' → logprob: -9.528243064880371
    10. 'round' → logprob: -9.528243064880371

Token 611: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00021784115233458579
    2. ']['' → logprob: -8.87521743774414
    3. ''' → logprob: -10.75021743774414
    4. ''s' → logprob: -10.87521743774414
    5. '[' → logprob: -11.25021743774414
    6. '   ' → logprob: -11.37521743774414
    7. ' ['' → logprob: -12.62521743774414
    8. '["' → logprob: -13.25021743774414
    9. '	' → logprob: -13.50021743774414
    10. '```' → logprob: -13.62521743774414

Token 612: 'discount' (ID: 50794)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.3700743019580841
    2. 'discount' → logprob: -1.2450742721557617
    3. ''' → logprob: -3.8700742721557617
    4. '['' → logprob: -8.370074272155762
    5. ''s' → logprob: -8.745074272155762
    6. ''d' → logprob: -9.745074272155762
    7. 'amount' → logprob: -11.245074272155762
    8. ' price' → logprob: -11.370074272155762
    9. ' discount' → logprob: -11.620074272155762
    10. '   ' → logprob: -11.870074272155762

Token 613: '_units' (ID: 67867)
  Prédit: '_units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_units' → logprob: -0.0652567520737648
    2. '['' → logprob: -2.8152568340301514
    3. 'price' → logprob: -7.690256595611572
    4. ''' → logprob: -7.690256595611572
    5. 'units' → logprob: -8.19025707244873
    6. '_price' → logprob: -8.19025707244873
    7. '```' → logprob: -8.44025707244873
    8. '']['' → logprob: -8.56525707244873
    9. '_rate' → logprob: -8.69025707244873
    10. 'Units' → logprob: -8.87775707244873

Token 614: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.33105725049972534
    2. ']' → logprob: -1.3310573101043701
    3. ' *' → logprob: -4.331057071685791
    4. '*' → logprob: -5.706057071685791
    5. ' ]' → logprob: -7.081057071685791
    6. ']*' → logprob: -8.58105754852295
    7. '"]' → logprob: -9.70605754852295
    8. ' ']' → logprob: -11.20605754852295
    9. '`]' → logprob: -11.45605754852295
    10. ''' → logprob: -11.70605754852295

Token 615: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20142288506031036
    2. ' *' → logprob: -1.701422929763794
    3. '   ' → logprob: -12.076422691345215
    4. '*
' → logprob: -13.576422691345215
    5. ' ' → logprob: -14.201422691345215
    6. ')' → logprob: -15.326422691345215
    7. '```' → logprob: -15.326422691345215
    8. ' ' → logprob: -15.451422691345215
    9. '  ' → logprob: -15.701422691345215
    10. '#' → logprob: -15.826422691345215

Token 616: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.010787582956254482
    2. ' shop' → logprob: -4.635787487030029
    3. 'int' → logprob: -7.260787487030029
    4. '(shop' → logprob: -8.135787963867188
    5. ' int' → logprob: -11.010787963867188
    6. 'shops' → logprob: -12.135787963867188
    7. '(' → logprob: -12.385787963867188
    8. '(int' → logprob: -12.510787963867188
    9. ' (' → logprob: -13.010787963867188
    10. '   ' → logprob: -14.260787963867188

Token 617: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00012035090912831947
    2. ']['' → logprob: -9.750120162963867
    3. ''' → logprob: -10.125120162963867
    4. ' ['' → logprob: -11.375120162963867
    5. '[' → logprob: -12.125120162963867
    6. ''s' → logprob: -13.500120162963867
    7. '   ' → logprob: -13.625120162963867
    8. '[
' → logprob: -14.625120162963867
    9. '```' → logprob: -14.625120162963867
    10. '	' → logprob: -14.875120162963867

Token 618: 'price' (ID: 7629)
  Prédit: 'price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.00023894020705483854
    2. ''' → logprob: -8.375239372253418
    3. ' price' → logprob: -12.250239372253418
    4. '['' → logprob: -13.750239372253418
    5. ''s' → logprob: -13.750239372253418
    6. '   ' → logprob: -14.875239372253418
    7. '	price' → logprob: -15.375239372253418
    8. ' ' → logprob: -15.875239372253418
    9. 'prix' → logprob: -16.2502384185791
    10. 'pr' → logprob: -16.5002384185791

Token 619: '']' (ID: 1089)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2927555441856384
    2. '*' → logprob: -1.4177556037902832
    3. '*(' → logprob: -4.542755603790283
    4. ')' → logprob: -7.792755603790283
    5. '   ' → logprob: -8.542755126953125
    6. ' *(' → logprob: -9.292755126953125
    7. ' ' → logprob: -10.042755126953125
    8. ']' → logprob: -10.167755126953125
    9. '(' → logprob: -10.292755126953125
    10. '']' → logprob: -11.292755126953125

Token 620: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07522162795066833
    2. '*' → logprob: -2.700221538543701
    3. '   ' → logprob: -5.325221538543701
    4. '*(' → logprob: -8.20022201538086
    5. ')' → logprob: -9.82522201538086
    6. '<|end|>' → logprob: -10.57522201538086
    7. ' ' → logprob: -11.20022201538086
    8. ' ' → logprob: -12.07522201538086
    9. '  ' → logprob: -12.07522201538086
    10. ' *
' → logprob: -12.32522201538086

Token 621: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00317783304490149
    2. ' (' → logprob: -5.753177642822266
    3. '(int' → logprob: -15.753177642822266
    4. '   ' → logprob: -17.378177642822266
    5. 'int' → logprob: -18.378177642822266
    6. ' ' → logprob: -18.378177642822266
    7. '
' → logprob: -18.503177642822266
    8. '(
' → logprob: -18.753177642822266
    9. '（' → logprob: -19.253177642822266
    10. '((' → logprob: -20.503177642822266

Token 622: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002619318547658622
    2. '(' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.500262260437012
    4. '   ' → logprob: -15.875262260437012
    5. ' (' → logprob: -17.625261306762695
    6. ')' → logprob: -20.375261306762695
    7. '```' → logprob: -20.375261306762695
    8. '{' → logprob: -21.125261306762695
    9. '100' → logprob: -21.500261306762695
    10. '0' → logprob: -21.500261306762695

Token 623: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5761193037033081
    2. '-' → logprob: -0.8261193037033081
    3. ')' → logprob: -9.326119422912598
    4. '-)' → logprob: -9.701119422912598
    5. '<|end|>' → logprob: -11.201119422912598
    6. '.' → logprob: -11.326119422912598
    7. ',' → logprob: -14.326119422912598
    8. '   ' → logprob: -14.826119422912598
    9. ' ' → logprob: -14.951119422912598
    10. '−' → logprob: -15.076119422912598

Token 624: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.00043138445471413434
    2. ' shop' → logprob: -7.750431537628174
    3. 'shops' → logprob: -14.625431060791016
    4. '(shop' → logprob: -16.375431060791016
    5. ')' → logprob: -16.625431060791016
    6. 'ship' → logprob: -17.375431060791016
    7. 'sh' → logprob: -18.500431060791016
    8. '_shop' → logprob: -18.750431060791016
    9. '.shop' → logprob: -19.250431060791016
    10. '/shop' → logprob: -19.875431060791016

Token 625: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -3.857719275401905e-05
    2. '[' → logprob: -10.250038146972656
    3. '[
' → logprob: -13.875038146972656
    4. ' ['' → logprob: -13.875038146972656
    5. ']['' → logprob: -14.500038146972656
    6. ''' → logprob: -15.500038146972656
    7. ')' → logprob: -15.750038146972656
    8. ')['' → logprob: -15.875038146972656
    9. '['_' → logprob: -16.000038146972656
    10. '["' → logprob: -16.250038146972656

Token 626: 'discount' (ID: 50794)
  Prédit: 'discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'discount' → logprob: -2.165027217415627e-05
    2. ' discount' → logprob: -10.875021934509277
    3. '_discount' → logprob: -13.000021934509277
    4. '.discount' → logprob: -15.000021934509277
    5. 'dis' → logprob: -17.75002098083496
    6. 'Discount' → logprob: -19.25002098083496
    7. ')' → logprob: -19.62502098083496
    8. '['' → logprob: -19.62502098083496
    9. ''' → logprob: -19.87502098083496
    10. 'disc' → logprob: -19.87502098083496

Token 627: '_rate' (ID: 20477)
  Prédit: '_rate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rate' → logprob: -6.630610641877865e-06
    2. 'rate' → logprob: -13.000006675720215
    3. '_rates' → logprob: -13.250006675720215
    4. '_discount' → logprob: -13.625006675720215
    5. '_RATE' → logprob: -15.000006675720215
    6. '   ' → logprob: -15.500006675720215
    7. ' _' → logprob: -16.0000057220459
    8. '_' → logprob: -16.1250057220459
    9. 'Rate' → logprob: -16.2500057220459
    10. ']_' → logprob: -16.5000057220459

Token 628: ''])
' (ID: 16733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014823723176959902
    2. ' )' → logprob: -9.375147819519043
    3. '')' → logprob: -10.125147819519043
    4. ')
' → logprob: -11.750147819519043
    5. '))' → logprob: -12.500147819519043
    6. ')`' → logprob: -13.125147819519043
    7. ')**' → logprob: -13.625147819519043
    8. ')*' → logprob: -14.000147819519043
    9. '`)' → logprob: -14.000147819519043
    10. '）' → logprob: -14.000147819519043

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06524983793497086
    2. '    
' → logprob: -2.9402499198913574
    3. '
' → logprob: -4.940249919891357
    4. '+' → logprob: -6.815249919891357
    5. ' +' → logprob: -7.315249919891357
    6. ')' → logprob: -7.940249919891357
    7. ' 
' → logprob: -8.0652494430542
    8. '   
' → logprob: -8.4402494430542
    9. '     
' → logprob: -9.0652494430542
    10. '  
' → logprob: -10.1902494430542

Token 630: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0930472612380981
    2. '   ' → logprob: -1.3430472612380981
    3. ' cost' → logprob: -1.7180472612380981
    4. '+' → logprob: -2.4680471420288086
    5. ' +' → logprob: -2.5930471420288086
    6. '
' → logprob: -3.4680471420288086
    7. '#' (adapté à ' #') → logprob: -3.7180471420288086
    8. ' #' → logprob: -5.343047142028809
    9. '    
' → logprob: -5.843047142028809
    10. ' 
' → logprob: -7.718047142028809

Token 631: ' Co' (ID: 4642)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6337727904319763
    2. ' cost' → logprob: -0.7587727904319763
    3. '   ' → logprob: -7.508772850036621
    4. '#' → logprob: -8.633772850036621
    5. 'co' → logprob: -8.633772850036621
    6. ' coût' → logprob: -9.383772850036621
    7. ' #' → logprob: -9.883772850036621
    8. 'Cost' → logprob: -10.633772850036621
    9. '
' → logprob: -11.383772850036621
    10. '_cost' → logprob: -11.696272850036621

Token 632: 'ût' (ID: 24581)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -9.13388703338569e-06
    2. 't' → logprob: -12.125009536743164
    3. 'ût' → logprob: -13.500009536743164
    4. '#' → logprob: -14.000009536743164
    5. '=' → logprob: -15.000009536743164
    6. 'ut' → logprob: -15.125009536743164
    7. '_st' → logprob: -15.500009536743164
    8. '   ' → logprob: -15.875009536743164
    9. 'nt' → logprob: -16.625009536743164
    10. 's' → logprob: -16.625009536743164

Token 633: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6087278127670288
    2. '+' → logprob: -2.2337279319763184
    3. '_non' → logprob: -2.2337279319763184
    4. '_remaining' → logprob: -2.2337279319763184
    5. '_rest' → logprob: -3.6087279319763184
    6. '_for' → logprob: -3.8587279319763184
    7. 'for' → logprob: -4.108727931976318
    8. '   ' → logprob: -4.233727931976318
    9. ' +=' → logprob: -4.608727931976318
    10. ' pour' → logprob: -4.983727931976318

Token 634: ' les' (ID: 1341)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.633309543132782
    2. 'remaining' → logprob: -0.758309543132782
    3. ' les' → logprob: -7.633309364318848
    4. 'les' → logprob: -9.758309364318848
    5. 'rest' → logprob: -10.633309364318848
    6. ' le' → logprob: -10.758309364318848
    7. '   ' → logprob: -10.883309364318848
    8. ' the' → logprob: -11.258309364318848
    9. ' rest' → logprob: -11.258309364318848
    10. 'le' → logprob: -11.383309364318848

Token 635: ' sacs' (ID: 150414)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.1428508460521698
    2. ' remaining' → logprob: -2.017850875854492
    3. 'rest' → logprob: -9.142850875854492
    4. ' remainder' → logprob: -11.142850875854492
    5. ' rest' → logprob: -12.080350875854492
    6. 'rem' → logprob: -12.080350875854492
    7. ' restante' → logprob: -12.580350875854492
    8. 'remain' → logprob: -12.580350875854492
    9. ' restantes' → logprob: -12.580350875854492
    10. '.remaining' → logprob: -12.705350875854492

Token 636: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.02454516850411892
    2. ' rest' → logprob: -3.774545192718506
    3. 'non' → logprob: -6.899545192718506
    4. 'remaining' → logprob: -8.774544715881348
    5. '   ' → logprob: -9.274544715881348
    6. ' non' → logprob: -10.899544715881348
    7. 'norm' → logprob: -11.524544715881348
    8. ' restant' → logprob: -12.649544715881348
    9. 'sans' → logprob: -13.274544715881348
    10. '_rest' → logprob: -13.774544715881348

Token 637: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.005315819755196571
    2. 'ant' → logprob: -5.505315780639648
    3. 'remaining' → logprob: -7.005315780639648
    4. '   ' → logprob: -8.505315780639648
    5. 'nants' → logprob: -9.505315780639648
    6. 'antes' → logprob: -11.130315780639648
    7. '_remaining' → logprob: -11.630315780639648
    8. 're' → logprob: -12.255315780639648
    9. '+' → logprob: -12.505315780639648
    10. 'nant' → logprob: -12.755315780639648

Token 638: ' sans' (ID: 9828)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3502395749092102
    2. ' =' → logprob: -1.6002395153045654
    3. '*' → logprob: -2.8502395153045654
    4. '=' → logprob: -3.7252395153045654
    5. '   ' → logprob: -4.6002397537231445
    6. 'remaining' → logprob: -7.2252397537231445
    7. ' ' → logprob: -8.600239753723145
    8. ' +' → logprob: -8.850239753723145
    9. ' remaining' → logprob: -8.850239753723145
    10. '+' → logprob: -8.975239753723145

Token 639: ' réduction' (ID: 89072)
  Prédit: ' shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shop' → logprob: -0.6239638924598694
    2. 'shop' → logprob: -1.2489638328552246
    3. 'discount' → logprob: -2.7489638328552246
    4. ' discount' → logprob: -3.1239638328552246
    5. ' remaining' → logprob: -3.4989638328552246
    6. 'remaining' → logprob: -3.7489638328552246
    7. ' remise' → logprob: -5.748963832855225
    8. ' reduction' → logprob: -5.998963832855225
    9. ' réduction' → logprob: -6.248963832855225
    10. '_discount' → logprob: -6.873963832855225

Token 640: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.27069756388664246
    2. '+' → logprob: -1.5206975936889648
    3. '   ' → logprob: -4.020697593688965
    4. ' +
' → logprob: -8.395697593688965
    5. '+
' → logprob: -8.895697593688965
    6. 'cost' → logprob: -9.145697593688965
    7. '=' → logprob: -9.895697593688965
    8. '    ' → logprob: -10.520697593688965
    9. ' =' → logprob: -10.645697593688965
    10. ' +=' → logprob: -10.895697593688965

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28509554266929626
    2. 'cost' → logprob: -2.285095453262329
    3. ' +' → logprob: -3.160095453262329
    4. '+' → logprob: -3.285095453262329
    5. ' cost' → logprob: -3.410095453262329
    6. ' =' → logprob: -3.785095453262329
    7. '=' → logprob: -4.660095691680908
    8. '    ' → logprob: -8.41009521484375
    9. ' +=' → logprob: -8.41009521484375
    10. 'remaining' → logprob: -8.78509521484375

Token 642: ' cost' (ID: 3097)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.28686287999153137
    2. ' remaining' → logprob: -1.536862850189209
    3. 'cost' (adapté à ' cost') → logprob: -3.661862850189209
    4. ' cost' → logprob: -4.786862850189209
    5. '   ' → logprob: -8.411863327026367
    6. 'shop' → logprob: -10.411863327026367
    7. 'rest' → logprob: -11.536863327026367
    8. ' shop' → logprob: -11.661863327026367
    9. '(' → logprob: -12.286863327026367
    10. ' ' → logprob: -12.411863327026367

Token 643: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -0.09539350122213364
    2. '_' → logprob: -3.095393419265747
    3. '_rest' → logprob: -3.220393419265747
    4. '_non' → logprob: -5.470393657684326
    5. '=' → logprob: -7.095393657684326
    6. '_re' → logprob: -8.220393180847168
    7. ' =' → logprob: -8.845393180847168
    8. '_=' → logprob: -8.970393180847168
    9. '_rem' → logprob: -9.970393180847168
    10. '=_' → logprob: -10.595393180847168

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022513806819916
    2. '=' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.410224914550781
    4. '   ' → logprob: -16.78522491455078
    5. '```' → logprob: -16.91022491455078
    6. '=int' → logprob: -17.16022491455078
    7. 's' → logprob: -17.53522491455078
    8. ' ' → logprob: -17.66022491455078
    9. '	' → logprob: -17.78522491455078
    10. ' +=' → logprob: -17.91022491455078

Token 645: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.011113963089883327
    2. ' remaining' → logprob: -4.511114120483398
    3. '   ' → logprob: -9.636114120483398
    4. ' ' → logprob: -14.761114120483398
    5. '  ' → logprob: -15.636114120483398
    6. '    ' → logprob: -16.3861141204834
    7. '	' → logprob: -16.7611141204834
    8. '       ' → logprob: -17.3861141204834
    9. 'Remaining' → logprob: -17.5111141204834
    10. ' ' → logprob: -17.6361141204834

Token 646: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.5048530030981055e-06
    2. 'bags' → logprob: -14.750001907348633
    3. '_s' → logprob: -15.125001907348633
    4. '_' → logprob: -15.250001907348633
    5. '=' → logprob: -16.125001907348633
    6. 'b' → logprob: -16.375001907348633
    7. 's' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.750001907348633
    9. '\' → logprob: -17.000001907348633
    10. '	b' → logprob: -17.375001907348633

Token 647: 'ags' (ID: 2916)
  Prédit: 'ags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ags' → logprob: -5.200166469876422e-06
    2. 'bags' → logprob: -12.250004768371582
    3. 'ag' → logprob: -15.625004768371582
    4. 'ages' → logprob: -16.8750057220459
    5. '_' → logprob: -17.2500057220459
    6. 'ugs' → logprob: -17.7500057220459
    7. 's' → logprob: -17.8750057220459
    8. 'ads' → logprob: -18.3750057220459
    9. 'atches' → logprob: -18.5000057220459
    10. 'gs' → logprob: -18.7500057220459

Token 648: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31326770782470703
    2. '*' → logprob: -1.313267707824707
    3. ' ' → logprob: -12.563267707824707
    4. ' ' → logprob: -13.563267707824707
    5. '   ' → logprob: -14.313267707824707
    6. '```' → logprob: -15.813267707824707
    7. '_' → logprob: -16.06326675415039
    8. '  ' → logprob: -16.68826675415039
    9. ')' → logprob: -17.06326675415039
    10. '#' → logprob: -17.56326675415039

Token 649: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.008615399710834026
    2. ' shop' → logprob: -4.758615493774414
    3. 'shops' → logprob: -15.008615493774414
    4. '(shop' → logprob: -15.133615493774414
    5. 'ship' → logprob: -16.133615493774414
    6. ' ' → logprob: -16.633615493774414
    7. '   ' → logprob: -17.383615493774414
    8. 'int' → logprob: -17.758615493774414
    9. '.shop' → logprob: -18.008615493774414
    10. ' shops' → logprob: -18.758615493774414

Token 650: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -4.60414821645827e-06
    2. ' ['' → logprob: -13.375004768371582
    3. ']['' → logprob: -14.000004768371582
    4. '[' → logprob: -14.125004768371582
    5. ''s' → logprob: -14.625004768371582
    6. '   ' → logprob: -14.750004768371582
    7. ''' → logprob: -15.750004768371582
    8. '	' → logprob: -16.375003814697266
    9. '["' → logprob: -16.375003814697266
    10. '[
' → logprob: -16.625003814697266

Token 651: 'price' (ID: 7629)
  Prédit: 'price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -8.482821431243792e-05
    2. ''' → logprob: -9.50008487701416
    3. ' price' → logprob: -11.87508487701416
    4. '['' → logprob: -13.12508487701416
    5. ''s' → logprob: -14.37508487701416
    6. '	price' → logprob: -15.37508487701416
    7. '   ' → logprob: -17.125083923339844
    8. 'prix' → logprob: -17.625083923339844
    9. ' ' → logprob: -17.750083923339844
    10. '_price' → logprob: -18.375083923339844

Token 652: '']
' (ID: 9756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4986867606639862
    2. '   ' → logprob: -1.4986867904663086
    3. '<|end|>' → logprob: -1.8736867904663086
    4. ']' → logprob: -4.373686790466309
    5. '<|end|>' → logprob: -6.748686790466309
    6. '
' → logprob: -7.748686790466309
    7. ' )' → logprob: -8.123686790466309
    8. '}' → logprob: -8.373686790466309
    9. ')return' → logprob: -8.623686790466309
    10. '  ' → logprob: -8.748686790466309

Token 653: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00377964717335999
    2. '    
' → logprob: -6.128779411315918
    3. 'return' → logprob: -7.003779411315918
    4. '
' → logprob: -7.753779411315918
    5. ' return' → logprob: -8.503779411315918
    6. 'cost' → logprob: -11.378779411315918
    7. 'total' → logprob: -11.753779411315918
    8. '	return' → logprob: -12.253779411315918
    9. '  
' → logprob: -12.378779411315918
    10. '   
' → logprob: -12.378779411315918

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15483467280864716
    2. 'return' → logprob: -2.154834747314453
    3. ' return' → logprob: -4.029834747314453
    4. 'cost' → logprob: -5.029834747314453
    5. ' cost' → logprob: -6.154834747314453
    6. '
' → logprob: -7.779834747314453
    7. '    
' → logprob: -8.279834747314453
    8. 'total' → logprob: -8.279834747314453
    9. ' total' → logprob: -9.904834747314453
    10. '```' → logprob: -10.654834747314453

Token 655: ' total' (ID: 3609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09505458176136017
    2. 'total' (adapté à ' total') → logprob: -2.5950546264648438
    3. 'cost' → logprob: -4.345054626464844
    4. ' return' → logprob: -6.345054626464844
    5. '   ' → logprob: -6.845054626464844
    6. ' total' → logprob: -8.595054626464844
    7. 'co' → logprob: -10.595054626464844
    8. ' cost' → logprob: -10.720054626464844
    9. '#' → logprob: -11.970054626464844
    10. 'price' → logprob: -13.345054626464844

Token 656: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.22939713299274445
    2. '_' → logprob: -1.604397177696228
    3. '=' → logprob: -5.979397296905518
    4. ' =' → logprob: -6.979397296905518
    5. '_co' → logprob: -8.10439682006836
    6. '_total' → logprob: -9.60439682006836
    7. '_price' → logprob: -9.97939682006836
    8. ' _' → logprob: -10.72939682006836
    9. 'cost' → logprob: -10.97939682006836
    10. '_c' → logprob: -11.22939682006836

Token 657: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192946195602417
    2. '=' → logprob: -1.501929521560669
    3. '=int' → logprob: -15.62692928314209
    4. '＝' → logprob: -16.876930236816406
    5. '   ' → logprob: -17.626930236816406
    6. ' =
' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.001930236816406
    8. ' =)' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.126930236816406
    10. '	' → logprob: -18.376930236816406

Token 658: ' cost' (ID: 3097)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0020435559563338757
    2. 'cost' → logprob: -6.502043724060059
    3. ' int' → logprob: -7.752043724060059
    4. 'round' → logprob: -9.127043724060059
    5. ' cost' → logprob: -13.252043724060059
    6. '(int' → logprob: -14.627043724060059
    7. ' round' → logprob: -15.752043724060059
    8. '   ' → logprob: -16.127042770385742
    9. '(cost' → logprob: -16.877042770385742
    10. '	int' → logprob: -17.127042770385742

Token 659: '_discount' (ID: 104401)
  Prédit: '_discount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_discount' → logprob: -5.6934557505883276e-05
    2. '_for' → logprob: -10.625057220458984
    3. '_remaining' → logprob: -10.750057220458984
    4. 'discount' → logprob: -11.500057220458984
    5. 'for' → logprob: -14.375057220458984
    6. '_disc' → logprob: -16.250057220458984
    7. 'Discount' → logprob: -16.375057220458984
    8. '_dis' → logprob: -16.500057220458984
    9. '_cost' → logprob: -16.750057220458984
    10. '_' → logprob: -16.875057220458984

Token 660: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.200166469876422e-06
    2. 'ted' → logprob: -12.250004768371582
    3. 'eded' → logprob: -16.3750057220459
    4. 'eed' → logprob: -17.0000057220459
    5. 'eted' → logprob: -17.2500057220459
    6. 'ged' → logprob: -17.5000057220459
    7. 'ED' → logprob: -17.7500057220459
    8. 'ded' → logprob: -17.7500057220459
    9. 'ated' → logprob: -17.7500057220459
    10. 'éd' → logprob: -18.1250057220459

Token 661: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931638717651367
    2. ' +' → logprob: -0.6931638717651367
    3. '<|end|>' → logprob: -12.068163871765137
    4. '   ' → logprob: -12.443163871765137
    5. ' +
' → logprob: -13.818163871765137
    6. '*' → logprob: -13.943163871765137
    7. ')' → logprob: -13.943163871765137
    8. ' ' → logprob: -14.068163871765137
    9. '+
' → logprob: -14.193163871765137
    10. ' *' → logprob: -14.693163871765137

Token 662: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00861456897109747
    2. ' cost' → logprob: -4.758614540100098
    3. 'int' → logprob: -17.008615493774414
    4. 'co' → logprob: -19.758615493774414
    5. '(cost' → logprob: -20.383615493774414
    6. '_cost' → logprob: -20.508615493774414
    7. ' int' → logprob: -20.508615493774414
    8. 'Cost' → logprob: -20.633615493774414
    9. '   ' → logprob: -21.008615493774414
    10. ' ' → logprob: -22.508615493774414

Token 663: '_remaining' (ID: 102167)
  Prédit: '_remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remaining' → logprob: -4.320199877838604e-07
    2. 'remaining' → logprob: -16.0
    3. '_rem' → logprob: -16.375
    4. '_' → logprob: -16.75
    5. 'aining' → logprob: -17.125
    6. '_rest' → logprob: -17.375
    7. '_missing' → logprob: -17.375
    8. 'Remaining' → logprob: -17.5
    9. 'ing' → logprob: -18.875
    10. '_re' → logprob: -19.0

Token 664: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19891880452632904
    2. '
' → logprob: -2.6989188194274902
    3. '<|end|>' → logprob: -2.8239188194274902
    4. '    
' → logprob: -3.6989188194274902
    5. 'return' → logprob: -4.82391881942749
    6. '	return' → logprob: -5.07391881942749
    7. ' return' → logprob: -5.07391881942749
    8. '<|end|>' → logprob: -5.82391881942749
    9. ' 
' → logprob: -6.69891881942749
    10. '  
' → logprob: -7.19891881942749

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003013953333720565
    2. ' return' → logprob: -5.878014087677002
    3. 'return' → logprob: -8.503013610839844
    4. '	return' → logprob: -12.878013610839844
    5. '   ' → logprob: -13.128013610839844
    6. '    
' → logprob: -13.628013610839844
    7. '
' → logprob: -15.503013610839844
    8. '    ' → logprob: -16.628013610839844
    9. '       ' → logprob: -17.378013610839844
    10. 'eturn' → logprob: -17.628013610839844

Token 666: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.2961512513575144e-05
    2. ' return' → logprob: -11.000022888183594
    3. '   ' → logprob: -12.000022888183594
    4. '#' (adapté à ' #') → logprob: -20.125022888183594
    5. '	return' → logprob: -20.375022888183594
    6. '```' → logprob: -20.875022888183594
    7. '
' → logprob: -21.250022888183594
    8. 'import' → logprob: -21.250022888183594
    9. 'total' → logprob: -21.250022888183594
    10. ':return' → logprob: -21.625022888183594

Token 667: ' conversion' (ID: 22165)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00015860427811276168
    2. ' return' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.875158309936523
    4. '#' → logprob: -18.750158309936523
    5. 'ret' → logprob: -19.125158309936523
    6. 'Return' → logprob: -19.500158309936523
    7. '	return' → logprob: -19.750158309936523
    8. 'total' → logprob: -20.125158309936523
    9. ':return' → logprob: -20.125158309936523
    10. '```' → logprob: -20.625158309936523

Token 668: ' en' (ID: 469)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08312367647886276
    2. '=int' → logprob: -3.3331236839294434
    3. '(int' → logprob: -3.5831236839294434
    4. ' int' → logprob: -4.833123683929443
    5. 'return' → logprob: -5.708123683929443
    6. '   ' → logprob: -6.583123683929443
    7. ' return' → logprob: -6.833123683929443
    8. '<int' → logprob: -7.333123683929443
    9. ':int' → logprob: -7.583123683929443
    10. ' =' → logprob: -7.958123683929443

Token 669: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00023917861108202487
    2. ' int' → logprob: -8.500239372253418
    3. 'ent' → logprob: -10.250239372253418
    4. ' entier' → logprob: -15.250239372253418
    5. 'integer' → logprob: -18.5002384185791
    6. '```' → logprob: -18.8752384185791
    7. ' ent' → logprob: -20.2502384185791
    8. '<int' → logprob: -20.3752384185791
    9. '=int' → logprob: -20.3752384185791
    10. '	int' → logprob: -20.8752384185791

Token 670: ' car' (ID: 1669)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.28229185938835144
    2. '(' → logprob: -2.282291889190674
    3. 'int' → logprob: -2.282291889190674
    4. ' (' → logprob: -3.782291889190674
    5. 'return' → logprob: -5.157291889190674
    6. ' int' → logprob: -5.282291889190674
    7. '(round' → logprob: -6.032291889190674
    8. '(total' → logprob: -6.532291889190674
    9. '(
' → logprob: -6.657291889190674
    10. '=int' → logprob: -6.907291889190674

Token 671: ' yen' (ID: 34890)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5729742050170898
    2. ' int' → logprob: -1.3229742050170898
    3. 'round' → logprob: -2.57297420501709
    4. ' total' → logprob: -3.32297420501709
    5. ' le' → logprob: -3.94797420501709
    6. ' round' → logprob: -4.19797420501709
    7. 'total' → logprob: -4.44797420501709
    8. ' on' → logprob: -5.57297420501709
    9. ' prix' → logprob: -6.57297420501709
    10. 'le' → logprob: -7.07297420501709

Token 672: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39347216486930847
    2. '   ' → logprob: -2.143472194671631
    3. '=' → logprob: -2.518472194671631
    4. 'return' → logprob: -2.518472194671631
    5. ' return' → logprob: -3.393472194671631
    6. 'int' → logprob: -5.268472194671631
    7. '=int' → logprob: -5.393472194671631
    8. 'total' → logprob: -6.643472194671631
    9. ',' → logprob: -7.518472194671631
    10. ' total' → logprob: -7.768472194671631

Token 673: 'sans' (ID: 106726)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011742244474589825
    2. ' )' → logprob: -4.761742115020752
    3. 'int' → logprob: -5.886742115020752
    4. 'return' → logprob: -9.63674259185791
    5. ')return' → logprob: -9.76174259185791
    6. '<|end|>' → logprob: -9.76174259185791
    7. ' int' → logprob: -10.63674259185791
    8. '   ' → logprob: -10.76174259185791
    9. '=int' → logprob: -10.88674259185791
    10. ' =' → logprob: -11.38674259185791

Token 674: ' cent' (ID: 2427)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.17155280709266663
    2. ' arr' → logprob: -2.046552896499634
    3. 'round' → logprob: -4.671552658081055
    4. 'decimal' → logprob: -5.546552658081055
    5. ' déc' → logprob: -5.546552658081055
    6. 'float' → logprob: -6.171552658081055
    7. 'vir' → logprob: -6.296552658081055
    8. 'int' → logprob: -6.671552658081055
    9. 'cent' → logprob: -7.046552658081055
    10. 'dec' → logprob: -7.046552658081055

Token 675: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.17979362607002258
    2. 'ime' → logprob: -1.8047935962677002
    3. ')' → logprob: -11.304793357849121
    4. 'es' → logprob: -12.304793357849121
    5. 'ième' → logprob: -12.304793357849121
    6. '```' → logprob: -12.304793357849121
    7. 'im' → logprob: -12.804793357849121
    8. 'aine' → logprob: -13.054793357849121
    9. 's' → logprob: -13.304793357849121
    10. 'e' → logprob: -13.679793357849121

Token 676: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.537180211627856e-05
    2. ' )' → logprob: -10.750045776367188
    3. ')
' → logprob: -11.875045776367188
    4. 'total' → logprob: -12.125045776367188
    5. 'int' → logprob: -13.125045776367188
    6. '())' → logprob: -13.250045776367188
    7. '<|end|>' → logprob: -13.250045776367188
    8. '(total' → logprob: -13.500045776367188
    9. '   ' → logprob: -14.125045776367188
    10. '.' → logprob: -15.000045776367188

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004136222414672375
    2. ' return' → logprob: -5.879136085510254
    3. 'return' → logprob: -6.629136085510254
    4. '	return' → logprob: -12.129136085510254
    5. '    
' → logprob: -13.379136085510254
    6. '
' → logprob: -14.379136085510254
    7. '   ' → logprob: -14.504136085510254
    8. ',' → logprob: -14.879136085510254
    9. ')' → logprob: -15.254136085510254
    10. '    ' → logprob: -16.12913703918457

Token 678: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003415935905650258
    2. ' return' → logprob: -5.753416061401367
    3. '   ' → logprob: -8.503416061401367
    4. 'total' → logprob: -10.253416061401367
    5. ' total' → logprob: -16.253416061401367
    6. 'int' → logprob: -17.128416061401367
    7. '	return' → logprob: -17.253416061401367
    8. '```' → logprob: -18.878416061401367
    9. 'eturn' → logprob: -20.753416061401367
    10. ':return' → logprob: -21.253416061401367

Token 679: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005234002135694027
    2. ' int' → logprob: -5.2552337646484375
    3. '	int' → logprob: -16.130233764648438
    4. '(int' → logprob: -16.255233764648438
    5. '   ' → logprob: -17.380233764648438
    6. '[int' → logprob: -19.130233764648438
    7. '<int' → logprob: -20.255233764648438
    8. 'round' → logprob: -20.380233764648438
    9. ' ' → logprob: -20.380233764648438
    10. '  ' → logprob: -20.755233764648438

Token 680: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.002486715093255043
    2. '(round' → logprob: -6.002486705780029
    3. '(' → logprob: -11.877487182617188
    4. 'total' → logprob: -12.627487182617188
    5. ' (' → logprob: -14.252487182617188
    6. 'round' → logprob: -16.752487182617188
    7. ' total' → logprob: -17.377487182617188
    8. '(t' → logprob: -18.627487182617188
    9. '	total' → logprob: -19.627487182617188
    10. '(np' → logprob: -20.127487182617188

Token 681: '_cost' (ID: 36820)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.444237619638443
    2. '_cost' → logprob: -1.3192375898361206
    3. '(total' → logprob: -2.44423770904541
    4. 'cost' → logprob: -5.81923770904541
    5. '_total' → logprob: -7.31923770904541
    6. 'round' → logprob: -7.81923770904541
    7. ')' → logprob: -8.31923770904541
    8. '_' → logprob: -9.94423770904541
    9. ' total' → logprob: -9.94423770904541
    10. '_round' → logprob: -10.19423770904541

Token 682: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ' )' → logprob: -10.250035285949707
    3. ')
' → logprob: -15.625035285949707
    4. ')return' → logprob: -17.375036239624023
    5. '   ' → logprob: -18.000036239624023
    6. ' ' → logprob: -18.000036239624023
    7. '}' → logprob: -18.000036239624023
    8. ')}' → logprob: -18.250036239624023
    9. ' ' → logprob: -18.375036239624023
    10. '))' → logprob: -18.750036239624023

Token 683: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000776038970798254
    2. ' ' → logprob: -7.2507758140563965
    3. '1' → logprob: -9.625776290893555
    4. ' ' → logprob: -21.000776290893555
    5. '   ' → logprob: -21.125776290893555
    6. '.' → logprob: -21.125776290893555
    7. '(' → logprob: -21.750776290893555
    8. '  ' → logprob: -21.750776290893555
    9. '```' → logprob: -22.125776290893555
    10. '-' → logprob: -22.500776290893555

Token 684: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. '1' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.375007629394531
    4. '-' → logprob: -21.75000762939453
    5. 'round' → logprob: -21.75000762939453
    6. '   ' → logprob: -22.00000762939453
    7. '.' → logprob: -22.75000762939453
    8. '(' → logprob: -23.25000762939453
    9. '3' → logprob: -23.50000762939453
    10. '```' → logprob: -23.62500762939453

Token 685: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007782964967191219
    2. '0' → logprob: -7.2507781982421875
    3. ')' → logprob: -9.750778198242188
    4. '5' → logprob: -11.750778198242188
    5. '```' → logprob: -14.250778198242188
    6. '1' → logprob: -15.125778198242188
    7. '000' → logprob: -15.250778198242188
    8. ' .' → logprob: -15.750778198242188
    9. ' ' → logprob: -15.875778198242188
    10. '+' → logprob: -15.875778198242188

Token 686: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0007928356644697487
    2. '000' → logprob: -7.250792980194092
    3. '1' → logprob: -10.375792503356934
    4. '9' → logprob: -10.875792503356934
    5. '001' → logprob: -11.500792503356934
    6. '999' → logprob: -11.625792503356934
    7. '99' → logprob: -12.125792503356934
    8. '49' → logprob: -12.750792503356934
    9. '4' → logprob: -13.375792503356934
    10. '499' → logprob: -13.500792503356934

Token 687: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -17.0
    4. ')return' → logprob: -18.125
    5. '}' → logprob: -18.75
    6. '<|end|>' → logprob: -19.0
    7. '))' → logprob: -19.125
    8. ')}' → logprob: -19.25
    9. '   ' → logprob: -19.375
    10. '),' → logprob: -19.875

Token 688: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47980743646621704
    2. '<|end|>' → logprob: -0.979807436466217
    3. '<|end|>' → logprob: -6.354807376861572
    4. '

' → logprob: -6.479807376861572
    5. ')' → logprob: -7.479807376861572
    6. 'def' → logprob: -7.604807376861572
    7. ' 
' → logprob: -8.47980785369873
    8. '\n' → logprob: -8.97980785369873
    9. '\' → logprob: -8.97980785369873
    10. '```' → logprob: -8.97980785369873

Token 689: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07370992004871368
    2. '<|end|>' → logprob: -2.6987099647521973
    3. '

' → logprob: -5.948709964752197
    4. 'def' → logprob: -7.948709964752197
    5. '<|end|>' → logprob: -8.448709487915039
    6. '#' → logprob: -8.448709487915039
    7. '
' → logprob: -9.073709487915039
    8. '\n' → logprob: -9.698709487915039
    9. '```' → logprob: -10.073709487915039
    10. '  
' → logprob: -10.448709487915039

Token 690: ' arr' (ID: 1724)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 691: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.029753033071756363
    2. 'ond' → logprob: -3.5297529697418213
    3. 'ondissement' → logprob: -13.154752731323242
    4. 'ound' → logprob: -14.279752731323242
    5. 'онд' → logprob: -17.154752731323242
    6. 'onde' → logprob: -17.779752731323242
    7. 'on' → logprob: -18.029752731323242
    8. 'ont' → logprob: -18.154752731323242
    9. 'onds' → logprob: -20.779752731323242
    10. 'ondes' → logprob: -20.904752731323242

Token 692: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 693: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000477620807942003
    2. 'int' → logprob: -9.00047779083252
    3. '0' → logprob: -9.37547779083252
    4. 'près' → logprob: -9.62547779083252
    5. '```' → logprob: -10.00047779083252
    6. 'plus' → logprob: -10.12547779083252
    7. '+' → logprob: -10.25047779083252
    8. 'la' → logprob: -10.37547779083252
    9. 'nearest' → logprob: -11.37547779083252
    10. ' l' → logprob: -11.50047779083252

Token 694: ''ent' (ID: 53422)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.34571999311447144
    2. 'près' → logprob: -2.095720052719116
    3. 'l' → logprob: -3.095720052719116
    4. '+' → logprob: -3.220720052719116
    5. '```' → logprob: -3.345720052719116
    6. 'int' → logprob: -3.845720052719116
    7. 'sup' → logprob: -4.720719814300537
    8. '+
' → logprob: -4.845719814300537
    9. 'pro' → logprob: -6.345719814300537
    10. 'ent' → logprob: -6.470719814300537

Token 695: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.004267269745469093
    2. 'ière' → logprob: -5.50426721572876
    3. 'iere' → logprob: -8.754267692565918
    4. 'i' → logprob: -10.879267692565918
    5. 'iert' → logprob: -12.004267692565918
    6. 'er' → logprob: -12.754267692565918
    7. 'ié' → logprob: -14.504267692565918
    8. 'ir' → logprob: -14.629267692565918
    9. 'ières' → logprob: -14.754267692565918
    10. 'e' → logprob: -15.379267692565918

Token 696: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 697: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.002359475241973996
    2. 'près' → logprob: -7.127359390258789
    3. '+' → logprob: -7.627359390258789
    4. '_plus' → logprob: -7.752359390258789
    5. 'pro' → logprob: -7.877359390258789
    6. '```' → logprob: -8.502359390258789
    7. 'sup' → logprob: -10.377359390258789
    8. '-plus' → logprob: -12.502359390258789
    9. 'Plus' → logprob: -12.502359390258789
    10. '   ' → logprob: -13.002359390258789

Token 698: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0005227696383371949
    2. 'près' → logprob: -7.625522613525391
    3. 'prox' → logprob: -11.50052261352539
    4. '```' → logprob: -11.75052261352539
    5. 'plus' → logprob: -11.87552261352539
    6. 'pr' → logprob: -12.37552261352539
    7. ' proche' → logprob: -12.50052261352539
    8. 'proc' → logprob: -14.50052261352539
    9. 'prés' → logprob: -14.87552261352539
    10. '0' → logprob: -15.75052261352539

Token 699: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1942618191242218
    2. 'def' → logprob: -1.8192617893218994
    3. '<|end|>' → logprob: -4.8192620277404785
    4. ':' → logprob: -6.1942620277404785
    5. '

' → logprob: -7.3192620277404785
    6. ' 
' → logprob: -7.3192620277404785
    7. '  
' → logprob: -7.4442620277404785
    8. '<|end|>' → logprob: -7.5692620277404785
    9. '
' → logprob: -8.06926155090332
    10. '```' → logprob: -8.06926155090332

Token 700: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11360450088977814
    2. '
' → logprob: -2.2386045455932617
    3. '

' → logprob: -7.738604545593262
    4. '
' → logprob: -8.488604545593262
    5. '\' → logprob: -10.238604545593262
    6. 'dp' → logprob: -10.488604545593262
    7. '#' → logprob: -10.738604545593262
    8. '```' → logprob: -11.363604545593262
    9. ' def' → logprob: -11.613604545593262
    10. '' → logprob: -11.613604545593262

Token 701: ' solve' (ID: 17722)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1053720712661743
    2. ' min' → logprob: -1.2303720712661743
    3. ' minimal' → logprob: -2.3553719520568848
    4. ' find' → logprob: -2.4803719520568848
    5. ' main' → logprob: -2.8553719520568848
    6. ' solve' → logprob: -3.1053719520568848
    7. ' minimum' → logprob: -3.4803719520568848
    8. 'minimum' → logprob: -4.105371952056885
    9. 'solve' → logprob: -4.355371952056885
    10. 'minimal' → logprob: -4.980371952056885

Token 702: '_for' (ID: 11903)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04098145663738251
    2. '():' → logprob: -3.5409815311431885
    3. '(' → logprob: -4.540981292724609
    4. '(amount' → logprob: -7.915981292724609
    5. ' (' → logprob: -9.91598129272461
    6. '(input' → logprob: -11.29098129272461
    7. '(quantity' → logprob: -11.54098129272461
    8. '_' → logprob: -11.66598129272461
    9. '(number' → logprob: -12.16598129272461
    10. '(n' → logprob: -12.16598129272461

Token 703: '_amount' (ID: 29145)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.047973521053791046
    2. ' a' → logprob: -3.6729736328125
    3. '(a' → logprob: -4.1729736328125
    4. '_a' → logprob: -6.1729736328125
    5. 'amount' → logprob: -6.1729736328125
    6. '(amount' → logprob: -7.6729736328125
    7. 'def' → logprob: -7.9229736328125
    8. '_amount' → logprob: -8.4229736328125
    9. 'quantity' → logprob: -8.7979736328125
    10. ' amount' → logprob: -9.1729736328125

Token 704: '(amount' (ID: 60193)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04458595812320709
    2. '(amount' → logprob: -3.294585943222046
    3. '(' → logprob: -5.044586181640625
    4. ' (' → logprob: -9.919586181640625
    5. '(quantity' → logprob: -11.669586181640625
    6. '(total' → logprob: -12.044586181640625
    7. '(target' → logprob: -12.169586181640625
    8. '(
' → logprob: -13.544586181640625
    9. '():' → logprob: -13.794586181640625
    10. '(s' → logprob: -13.919586181640625

Token 705: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00025776340044103563
    2. '):
' → logprob: -8.87525749206543
    3. ':' → logprob: -10.00025749206543
    4. ')' → logprob: -10.12525749206543
    5. ' ):' → logprob: -10.62525749206543
    6. '):
' → logprob: -12.62525749206543
    7. '(amount' → logprob: -13.50025749206543
    8. ',' → logprob: -13.50025749206543
    9. '):

' → logprob: -14.37525749206543
    10. '(' → logprob: -14.62525749206543

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020461321400944144
    2. ' dp' → logprob: -9.000205039978027
    3. '	dp' → logprob: -9.750205039978027
    4. 'dp' → logprob: -11.375205039978027
    5. '   ' → logprob: -11.750205039978027
    6. '
' → logprob: -13.375205039978027
    7. '   ' → logprob: -14.000205039978027
    8. '(dp' → logprob: -15.375205039978027
    9. ' def' → logprob: -15.375205039978027
    10. 'def' → logprob: -15.375205039978027

Token 707: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020146444439888
    2. 'dp' → logprob: -6.502014636993408
    3. ' dp' → logprob: -8.127015113830566
    4. '	dp' → logprob: -8.877015113830566
    5. '
' → logprob: -10.002015113830566
    6. 'import' → logprob: -11.252015113830566
    7. '   ' → logprob: -11.377015113830566
    8. '   ' → logprob: -13.002015113830566
    9. 'def' → logprob: -13.252015113830566
    10. '    
' → logprob: -13.502015113830566

Token 708: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.453737710718997e-05
    2. 'dp' → logprob: -10.750044822692871
    3. '
' → logprob: -11.750044822692871
    4. '#' → logprob: -12.000044822692871
    5. 'def' → logprob: -12.250044822692871
    6. '    ' → logprob: -13.125044822692871
    7. '    
' → logprob: -13.250044822692871
    8. 'INF' → logprob: -16.125043869018555
    9. '"""
' → logprob: -16.625043869018555
    10. ' dp' → logprob: -16.875043869018555

Token 709: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034530315548181534
    2. 'def' → logprob: -4.159530162811279
    3. '
' → logprob: -4.534530162811279
    4. 'dp' → logprob: -5.284530162811279
    5. '    ' → logprob: -7.159530162811279
    6. ' dp' → logprob: -7.409530162811279
    7. '    
' → logprob: -7.909530162811279
    8. ' def' → logprob: -8.034530639648438
    9. ' 
' → logprob: -8.659530639648438
    10. '  ' → logprob: -9.159530639648438

Token 710: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.20205940306186676
    2. 'ise' → logprob: -1.7020593881607056
    3. '```' → logprob: -8.827059745788574
    4. 'ser' → logprob: -9.202059745788574
    5. 's' → logprob: -9.202059745788574
    6. 't' → logprob: -9.827059745788574
    7. 'ilise' → logprob: -10.452059745788574
    8. 'lse' → logprob: -10.577059745788574
    9. 'yse' → logprob: -10.702059745788574
    10. 'is' → logprob: -10.827059745788574

Token 711: ' la' (ID: 557)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.9789215326309204
    2. 'dp' → logprob: -1.2289215326309204
    3. '   ' → logprob: -2.103921413421631
    4. ' amount' → logprob: -2.353921413421631
    5. 'a' → logprob: -3.228921413421631
    6. '[' → logprob: -3.478921413421631
    7. ' dp' → logprob: -4.728921413421631
    8. ' [' → logprob: -4.978921413421631
    9. ' une' → logprob: -5.353921413421631
    10. ' a' → logprob: -5.478921413421631

Token 712: ' programmation' (ID: 166376)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.059492286294698715
    2. 'import' → logprob: -3.184492349624634
    3. '[' → logprob: -4.309492111206055
    4. 'def' → logprob: -6.559492111206055
    5. 'from' → logprob: -7.559492111206055
    6. '#' → logprob: -7.559492111206055
    7. 'list' → logprob: -9.309492111206055
    8. 'sys' → logprob: -9.309492111206055
    9. 'DP' → logprob: -9.559492111206055
    10. ' [' → logprob: -9.559492111206055

Token 713: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.03753399848937988
    2. 'd' → logprob: -3.91253399848938
    3. 'dynamic' → logprob: -4.412533760070801
    4. ' dynamic' → logprob: -5.412533760070801
    5. ' dynam' → logprob: -9.1625337600708
    6. '_dynamic' → logprob: -10.2875337600708
    7. 'dyn' → logprob: -10.4125337600708
    8. '_' → logprob: -10.4125337600708
    9. '   ' → logprob: -11.2875337600708
    10. ' dinámica' → logprob: -11.6625337600708

Token 714: ' pour' (ID: 1930)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.065635323524475
    2. '   ' → logprob: -1.315635323524475
    3. 'dp' → logprob: -1.565635323524475
    4. ' pour' → logprob: -2.4406352043151855
    5. 'def' → logprob: -3.3156352043151855
    6. '(amount' → logprob: -3.8156352043151855
    7. ' dp' → logprob: -4.5656352043151855
    8. ' (' → logprob: -4.9406352043151855
    9. '(' → logprob: -5.3156352043151855
    10. '(max' → logprob: -6.1906352043151855

Token 715: ' trouver' (ID: 23195)
  Prédit: ' trouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.935880184173584
    2. ' calcul' → logprob: -1.185880184173584
    3. 'calcul' → logprob: -1.310880184173584
    4. ' déterminer' → logprob: -4.185880184173584
    5. 'tr' → logprob: -5.060880184173584
    6. ' résoudre' → logprob: -6.060880184173584
    7. 'cal' → logprob: -6.560880184173584
    8. 'min' → logprob: -6.560880184173584
    9. '   ' → logprob: -6.560880184173584
    10. ' calc' → logprob: -6.685880184173584

Token 716: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.13944759964942932
    2. '   ' → logprob: -2.6394476890563965
    3. ' la' → logprob: -3.1394476890563965
    4. 'le' → logprob: -4.3894476890563965
    5. ' un' → logprob: -7.0144476890563965
    6. 'la' → logprob: -7.1394476890563965
    7. '_le' → logprob: -8.014447212219238
    8. ' les' → logprob: -8.264447212219238
    9. ' minimum' → logprob: -9.139447212219238
    10. ' the' → logprob: -9.264447212219238

Token 717: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.21230819821357727
    2. ' coût' → logprob: -2.337308168411255
    3. 'minimum' → logprob: -2.587308168411255
    4. 'cost' → logprob: -4.962308406829834
    5. 'cout' → logprob: -5.212308406829834
    6. ' minimum' → logprob: -5.837308406829834
    7. 'prix' → logprob: -6.712308406829834
    8. 'min' → logprob: -7.087308406829834
    9. 'minimal' → logprob: -7.462308406829834
    10. '   ' → logprob: -7.962308406829834

Token 718: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.37495705485343933
    2. ' minimal' → logprob: -1.3749570846557617
    3. 'minimum' → logprob: -2.8749570846557617
    4. 'minimal' → logprob: -5.749957084655762
    5. 'min' → logprob: -9.374957084655762
    6. ' minimale' → logprob: -9.749957084655762
    7. '_min' → logprob: -10.749957084655762
    8. ' min' → logprob: -10.749957084655762
    9. ' minim' → logprob: -11.499957084655762
    10. ' optimal' → logprob: -11.624957084655762

Token 719: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.2996029257774353
    2. 'pour' → logprob: -1.79960298538208
    3. '   ' → logprob: -3.04960298538208
    4. ' total' → logprob: -4.54960298538208
    5. 'for' → logprob: -4.67460298538208
    6. ' for' → logprob: -5.17460298538208
    7. 'total' → logprob: -5.42460298538208
    8. ' de' → logprob: -5.54960298538208
    9. 'minimum' → logprob: -5.79960298538208
    10. ' minimum' → logprob: -6.04960298538208

Token 720: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.0212444756180048
    2. ' exact' → logprob: -4.646244525909424
    3. 'ob' → logprob: -5.396244525909424
    4. ' exactement' → logprob: -6.396244525909424
    5. 'exact' → logprob: -6.521244525909424
    6. ' amount' → logprob: -6.521244525909424
    7. ' atteindre' → logprob: -7.396244525909424
    8. ' acheter' → logprob: -8.021244049072266
    9. ' exactly' → logprob: -8.521244049072266
    10. '   ' → logprob: -8.521244049072266

Token 721: ' exactement' (ID: 108701)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.4582211673259735
    2. 'exact' → logprob: -1.708221197128296
    3. 'amount' → logprob: -2.458221197128296
    4. ' exactement' → logprob: -2.708221197128296
    5. ' exact' → logprob: -3.583221197128296
    6. ' exactly' → logprob: -5.833220958709717
    7. ' la' → logprob: -6.083220958709717
    8. ' une' → logprob: -7.333220958709717
    9. '```' → logprob: -9.083221435546875
    10. ' l' → logprob: -9.583221435546875

Token 722: ' '' (ID: 461)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.16154219210147858
    2. 'amount' → logprob: -1.9115421772003174
    3. ' la' → logprob: -7.7865424156188965
    4. ' exact' → logprob: -8.036541938781738
    5. 'exact' → logprob: -8.036541938781738
    6. ' une' → logprob: -9.911541938781738
    7. ' a' → logprob: -10.286541938781738
    8. 'a' → logprob: -10.411541938781738
    9. ' exactement' → logprob: -10.536541938781738
    10. '   ' → logprob: -10.786541938781738

Token 723: 'amount' (ID: 10703)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.38687583804130554
    2. 'amount' → logprob: -1.136875867843628
    3. 'a' → logprob: -13.761876106262207
    4. 'quantity' → logprob: -13.761876106262207
    5. ' quantity' → logprob: -13.886876106262207
    6. ''' → logprob: -14.761876106262207
    7. ' a' → logprob: -14.761876106262207
    8. ' amounts' → logprob: -15.136876106262207
    9. ' quantité' → logprob: -15.636876106262207
    10. '_amount' → logprob: -16.01187515258789

Token 724: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07170181721448898
    2. ' de' → logprob: -2.946701765060425
    3. 'de' → logprob: -5.196702003479004
    4. ' '' → logprob: -5.321702003479004
    5. ' gram' → logprob: -5.446702003479004
    6. '_de' → logprob: -7.696702003479004
    7. ')' → logprob: -8.071702003479004
    8. '```' → logprob: -8.071702003479004
    9. 'gram' → logprob: -8.571702003479004
    10. '_' → logprob: -9.071702003479004

Token 725: ' gram' (ID: 40134)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5940113663673401
    2. '   ' → logprob: -1.0940113067626953
    3. ' gram' → logprob: -2.4690113067626953
    4. 'de' → logprob: -3.8440113067626953
    5. ' en' → logprob: -5.469011306762695
    6. ' grams' → logprob: -6.594011306762695
    7. 'gram' → logprob: -8.094011306762695
    8. 'en' → logprob: -8.719011306762695
    9. '```' → logprob: -8.844011306762695
    10. 'def' → logprob: -9.219011306762695

Token 726: 'mes' (ID: 4613)
  Prédit: 'ètres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -1.5020831823349
    2. '   ' → logprob: -1.8770831823349
    3. 'mes' → logprob: -2.0020833015441895
    4. 'es' → logprob: -2.0020833015441895
    5. ')' → logprob: -3.1270833015441895
    6. ' grams' → logprob: -3.1270833015441895
    7. 'ètre' → logprob: -3.2520833015441895
    8. ' ' → logprob: -3.7520833015441895
    9. '<|end|>' → logprob: -3.7520833015441895
    10. 'grams' → logprob: -4.0020833015441895

Token 727: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012838063994422555
    2. '.' → logprob: -6.876283645629883
    3. ',' → logprob: -8.751283645629883
    4. ':' → logprob: -9.876283645629883
    5. 'de' → logprob: -11.126283645629883
    6. '
' → logprob: -12.251283645629883
    7. '    
' → logprob: -12.251283645629883
    8. ' de' → logprob: -12.751283645629883
    9. '.
' → logprob: -13.001283645629883
    10. ')' → logprob: -13.126283645629883

Token 728: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.15310683415737e-05
    2. 'dp' → logprob: -11.375021934509277
    3. '
' → logprob: -12.625021934509277
    4. ' dp' → logprob: -12.750021934509277
    5. '    
' → logprob: -13.500021934509277
    6. 'def' → logprob: -14.000021934509277
    7. '   ' → logprob: -14.000021934509277
    8. '	dp' → logprob: -14.375021934509277
    9. '   ' → logprob: -16.75002098083496
    10. '```' → logprob: -17.12502098083496

Token 729: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021807955636177212
    2. 'dp' → logprob: -8.500218391418457
    3. ' dp' → logprob: -11.875218391418457
    4. 'def' → logprob: -12.375218391418457
    5. '	dp' → logprob: -13.375218391418457
    6. '
' → logprob: -14.000218391418457
    7. '   ' → logprob: -14.375218391418457
    8. '    
' → logprob: -15.375218391418457
    9. '   ' → logprob: -17.00021743774414
    10. '#' → logprob: -17.12521743774414

Token 730: ' Param' (ID: 14796)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0514797680079937
    2. '   ' → logprob: -3.0514798164367676
    3. 'max' → logprob: -6.426479816436768
    4. '#' → logprob: -7.051479816436768
    5. 'MAX' → logprob: -8.67647933959961
    6. 'def' → logprob: -8.92647933959961
    7. 'INF' → logprob: -9.67647933959961
    8. '
' → logprob: -10.92647933959961
    9. 'import' → logprob: -11.92647933959961
    10. '    
' → logprob: -12.80147933959961

Token 731: 'ètre' (ID: 60948)
  Prédit: 'ètres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -0.06473139673471451
    2. 'ètre' → logprob: -2.8147313594818115
    3. 'eters' → logprob: -6.314731597900391
    4. '   ' → logprob: -7.314731597900391
    5. '_amount' → logprob: -8.81473159790039
    6. 'def' → logprob: -9.68973159790039
    7. 'etre' → logprob: -11.18973159790039
    8. '  ' → logprob: -11.43973159790039
    9. 'et' → logprob: -11.81473159790039
    10. 'amount' → logprob: -11.93973159790039

Token 732: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6550462245941162
    2. ':' → logprob: -0.7800462245941162
    3. '(amount' → logprob: -4.905046463012695
    4. 'amount' → logprob: -5.155046463012695
    5. '   ' → logprob: -5.655046463012695
    6. ' amount' → logprob: -6.280046463012695
    7. '=' → logprob: -6.655046463012695
    8. '):' → logprob: -7.530046463012695
    9. ' :
' → logprob: -7.780046463012695
    10. '_amount' → logprob: -8.155046463012695

Token 733: '   ' (ID: 271)
  Prédit: ' amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -0.22901445627212524
    2. 'amount' → logprob: -1.7290143966674805
    3. '   ' → logprob: -3.6040143966674805
    4. '(amount' → logprob: -13.10401439666748
    5. ' ' → logprob: -13.47901439666748
    6. '
' → logprob: -13.60401439666748
    7. '_amount' → logprob: -13.85401439666748
    8. '    
' → logprob: -14.22901439666748
    9. ' montant' → logprob: -14.47901439666748
    10. '```' → logprob: -14.85401439666748

Token 734: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' (adapté à ' amount') → logprob: -0.3132956027984619
    2. ' amount' → logprob: -1.313295602798462
    3. '   ' → logprob: -10.313295364379883
    4. 'quantity' → logprob: -15.938295364379883
    5. '_amount' → logprob: -16.063295364379883
    6. 'a' → logprob: -16.313295364379883
    7. '(amount' → logprob: -16.313295364379883
    8. '`' → logprob: -17.188295364379883
    9. '```' → logprob: -17.188295364379883
    10. ' quantity' → logprob: -17.313295364379883

Token 735: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6410065293312073
    2. ':' → logprob: -0.8910065293312073
    3. ' :' → logprob: -2.8910064697265625
    4. ' ):' → logprob: -5.3910064697265625
    5. ':int' → logprob: -6.7660064697265625
    6. ')' → logprob: -7.0160064697265625
    7. '   ' → logprob: -7.7660064697265625
    8. '):
' → logprob: -8.141006469726562
    9. '=' → logprob: -9.891006469726562
    10. ' =' → logprob: -10.141006469726562

Token 736: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030372023582458496
    2. ')' → logprob: -3.780372142791748
    3. ' int' → logprob: -5.030372142791748
    4. ':int' → logprob: -7.905372142791748
    5. '=int' → logprob: -9.53037166595459
    6. '):' → logprob: -9.78037166595459
    7. ' )' → logprob: -10.40537166595459
    8. ':' → logprob: -10.65537166595459
    9. '   ' → logprob: -12.53037166595459
    10. '[int' → logprob: -12.65537166595459

Token 737: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3181726336479187
    2. '):' → logprob: -1.4431726932525635
    3. '):
' → logprob: -3.3181726932525635
    4. ' ):' → logprob: -10.193172454833984
    5. '):
' → logprob: -10.443172454833984
    6. '   ' → logprob: -10.568172454833984
    7. ' )' → logprob: -10.693172454833984
    8. '):

' → logprob: -12.568172454833984
    9. ' ):
' → logprob: -13.068172454833984
    10. ':' → logprob: -13.318172454833984

Token 738: ' quantité' (ID: 89219)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4756457209587097
    2. '   ' → logprob: -1.3506457805633545
    3. ' le' → logprob: -2.8506457805633545
    4. ' Le' → logprob: -3.9756457805633545
    5. ' La' → logprob: -4.100645542144775
    6. 'La' → logprob: -4.850645542144775
    7. 'Le' → logprob: -5.350645542144775
    8. ' quantité' → logprob: -6.350645542144775
    9. ' #' → logprob: -6.475645542144775
    10. '    ' → logprob: -6.600645542144775

Token 739: ' demand' (ID: 8492)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.15085382759571075
    2. ' de' → logprob: -2.7758538722991943
    3. ' ' → logprob: -4.025853633880615
    4. ' totale' → logprob: -4.400853633880615
    5. ' a' → logprob: -4.650853633880615
    6. '   ' → logprob: -5.275853633880615
    7. ' maximale' → logprob: -5.275853633880615
    8. ' d' → logprob: -5.525853633880615
    9. ' demand' → logprob: -5.525853633880615
    10. ' ' → logprob: -5.775853633880615

Token 740: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5608019232749939
    2. 'ée' → logprob: -0.9358019232749939
    3. ' ' → logprob: -4.310801982879639
    4. 'e' → logprob: -4.435801982879639
    5. 'é' → logprob: -5.185801982879639
    6. '  ' → logprob: -5.810801982879639
    7. 'ed' → logprob: -6.310801982879639
    8. '=' → logprob: -8.06080150604248
    9. '    ' → logprob: -8.43580150604248
    10. 'ee' → logprob: -8.93580150604248

Token 741: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1876935064792633
    2. '):
' → logprob: -2.6876935958862305
    3. '
' → logprob: -2.8126935958862305
    4. ')' → logprob: -4.1876935958862305
    5. '    
' → logprob: -4.9376935958862305
    6. 'en' → logprob: -5.4376935958862305
    7. ' en' → logprob: -5.5626935958862305
    8. '):' → logprob: -5.5626935958862305
    9. '_en' → logprob: -6.5626935958862305
    10. ':' → logprob: -6.5626935958862305

Token 742: ' gram' (ID: 40134)
  Prédit: 'gram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gram' → logprob: -0.2828424572944641
    2. ' gram' → logprob: -1.4078423976898193
    3. 'grams' → logprob: -6.907842636108398
    4. ' grams' → logprob: -7.782842636108398
    5. ' farine' → logprob: -8.907842636108398
    6. 'grain' → logprob: -10.532842636108398
    7. 'g' → logprob: -10.657842636108398
    8. '   ' → logprob: -10.782842636108398
    9. ' ' → logprob: -11.032842636108398
    10. '```' → logprob: -11.782842636108398

Token 743: 'mes' (ID: 4613)
  Prédit: 'mes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mes' → logprob: -0.0008209457155317068
    2. 'es' → logprob: -7.125821113586426
    3. 'ms' → logprob: -11.625821113586426
    4. 'me' → logprob: -12.750821113586426
    5. 'emes' → logprob: -13.750821113586426
    6. 'm' → logprob: -13.750821113586426
    7. 'ames' → logprob: -14.125821113586426
    8. '   ' → logprob: -14.875821113586426
    9. '#' → logprob: -15.000821113586426
    10. '_mes' → logprob: -15.375821113586426

Token 744: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.180034801363945
    2. '):
' → logprob: -2.305034875869751
    3. '):' → logprob: -3.180034875869751
    4. ')' → logprob: -4.430034637451172
    5. ':' → logprob: -4.805034637451172
    6. ':
' → logprob: -6.055034637451172
    7. '
' → logprob: -7.555034637451172
    8. '    
' → logprob: -8.555034637451172
    9. 'def' → logprob: -8.680034637451172
    10. '```' → logprob: -10.805034637451172

Token 745: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0493643544614315
    2. '
' → logprob: -3.4243643283843994
    3. ')' → logprob: -4.9243645668029785
    4. 'def' → logprob: -5.2993645668029785
    5. '):
' → logprob: -6.4243645668029785
    6. '    
' → logprob: -6.6743645668029785
    7. ')
' → logprob: -8.17436408996582
    8. '):' → logprob: -10.29936408996582
    9. '"""
' → logprob: -10.42436408996582
    10. '  ' → logprob: -10.67436408996582

Token 746: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.714069664478302
    2. '
' → logprob: -1.8390696048736572
    3. 'Returns' → logprob: -2.3390696048736572
    4. '"""
' → logprob: -2.5890696048736572
    5. '"""' → logprob: -2.7140696048736572
    6. 'def' → logprob: -3.3390696048736572
    7. 'returns' → logprob: -3.5890696048736572
    8. 'Retour' (adapté à ' Retour') → logprob: -3.7140696048736572
    9. 'dp' → logprob: -4.839069843292236
    10. 'return' → logprob: -5.089069843292236

Token 747: 'ne' (ID: 611)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9938731789588928
    2. '   ' → logprob: -1.993873119354248
    3. ':
' → logprob: -2.243873119354248
    4. ' dp' → logprob: -2.493873119354248
    5. ' None' → logprob: -2.868873119354248
    6. '    ' → logprob: -2.868873119354248
    7. ' ' → logprob: -3.243873119354248
    8. '  ' → logprob: -4.243873119354248
    9. 'dp' → logprob: -4.243873119354248
    10. 's' → logprob: -4.493873119354248

Token 748: ' :
' (ID: 10039)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2722976505756378
    2. 'int' → logprob: -2.2722976207733154
    3. ':' → logprob: -3.0222976207733154
    4. '   ' → logprob: -4.1472978591918945
    5. ' un' → logprob: -4.1472978591918945
    6. ' None' → logprob: -4.6472978591918945
    7. '[int' → logprob: -4.6472978591918945
    8. ':int' → logprob: -4.7722978591918945
    9. ' :' → logprob: -5.0222978591918945
    10. ' ' → logprob: -5.3972978591918945

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2819435596466064
    2. ' dp' → logprob: -1.5319435596466064
    3. ' float' → logprob: -2.1569435596466064
    4. 'dp' → logprob: -2.1569435596466064
    5. ' int' → logprob: -2.7819435596466064
    6. ' sys' → logprob: -2.9069435596466064
    7. 'float' → logprob: -2.9069435596466064
    8. 'int' → logprob: -3.1569435596466064
    9. ' [' → logprob: -3.6569435596466064
    10. '[' → logprob: -4.656943321228027

Token 750: ' Le' (ID: 2018)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4747566282749176
    2. ' int' → logprob: -0.9747565984725952
    3. '   ' → logprob: -7.724756717681885
    4. 'float' → logprob: -9.349756240844727
    5. ' float' → logprob: -9.849756240844727
    6. '(int' → logprob: -10.474756240844727
    7. '
' → logprob: -10.849756240844727
    8. 'return' → logprob: -11.349756240844727
    9. ' return' → logprob: -11.349756240844727
    10. '[int' → logprob: -11.599756240844727

Token 751: ' coût' (ID: 73109)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.049308184534311295
    2. ' int' → logprob: -3.1743083000183105
    3. 'co' → logprob: -6.2993083000183105
    4. 'cost' → logprob: -6.5493083000183105
    5. ' coût' → logprob: -6.6743083000183105
    6. '   ' → logprob: -7.2993083000183105
    7. 'cout' → logprob: -7.9243083000183105
    8. 'min' → logprob: -8.549307823181152
    9. 'prix' → logprob: -8.549307823181152
    10. ' cost' → logprob: -9.424307823181152

Token 752: ' minimal' (ID: 19957)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5759120583534241
    2. 'minimum' → logprob: -1.4509119987487793
    3. '_min' → logprob: -2.7009119987487793
    4. ' minimal' → logprob: -2.8259119987487793
    5. 'min' → logprob: -3.0759119987487793
    6. '_' → logprob: -4.200911998748779
    7. ' min' → logprob: -5.075911998748779
    8. 'minimal' → logprob: -5.575911998748779
    9. ' total' → logprob: -6.450911998748779
    10. '_total' → logprob: -6.825911998748779

Token 753: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3065205812454224
    2. 'minimum' → logprob: -1.8065205812454224
    3. '(int' → logprob: -1.9315205812454224
    4. '(min' → logprob: -2.306520462036133
    5. 'en' → logprob: -2.306520462036133
    6. ' (' → logprob: -3.306520462036133
    7. ' en' → logprob: -3.431520462036133
    8. 'min' → logprob: -3.931520462036133
    9. '(' → logprob: -3.931520462036133
    10. 'int' → logprob: -3.931520462036133

Token 754: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001180704333819449
    2. ' int' → logprob: -6.751180648803711
    3. ')' → logprob: -11.876180648803711
    4. '   ' → logprob: -13.376180648803711
    5. 'float' → logprob: -14.126180648803711
    6. '```' → logprob: -14.626180648803711
    7. '(int' → logprob: -15.001180648803711
    8. '[int' → logprob: -15.376180648803711
    9. ':int' → logprob: -16.25118064880371
    10. ']int' → logprob: -16.75118064880371

Token 755: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.696077227592468e-05
    2. ')
' → logprob: -9.750077247619629
    3. '   ' → logprob: -11.500077247619629
    4. ' )' → logprob: -12.875077247619629
    5. 'def' → logprob: -12.875077247619629
    6. ',' → logprob: -13.625077247619629
    7. '),' → logprob: -15.125077247619629
    8. ')`' → logprob: -15.125077247619629
    9. '```' → logprob: -15.375077247619629
    10. ');' → logprob: -15.500077247619629

Token 756: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13761238753795624
    2. ':' → logprob: -2.1376123428344727
    3. ':
' → logprob: -4.762612342834473
    4. '    
' → logprob: -7.512612342834473
    5. '
' → logprob: -7.637612342834473
    6. '):
' → logprob: -8.137612342834473
    7. '{' → logprob: -8.637612342834473
    8. ')' → logprob: -9.012612342834473
    9. 'def' → logprob: -9.012612342834473
    10. '```' → logprob: -9.137612342834473

Token 757: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06560592353343964
    2. ':' → logprob: -3.690605878829956
    3. 'def' → logprob: -4.190606117248535
    4. ':
' → logprob: -4.315606117248535
    5. 'dp' → logprob: -4.815606117248535
    6. '):
' → logprob: -7.315606117248535
    7. '):' → logprob: -8.315606117248535
    8. ')' → logprob: -8.315606117248535
    9. '    
' → logprob: -8.315606117248535
    10. '
' → logprob: -8.440606117248535

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04859986528754234
    2. 'dp' → logprob: -3.0485999584198
    3. '	dp' → logprob: -12.048600196838379
    4. 'import' → logprob: -12.923600196838379
    5. ' dp' → logprob: -13.173600196838379
    6. '#' → logprob: -14.173600196838379
    7. 'max' → logprob: -14.298600196838379
    8. '
' → logprob: -14.673600196838379
    9. 'MAX' → logprob: -15.298600196838379
    10. 'INF' → logprob: -15.673600196838379

Token 759: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05455012619495392
    2. 'INF' → logprob: -3.3045501708984375
    3. 'import' → logprob: -5.0545501708984375
    4. 'max' → logprob: -5.3045501708984375
    5. 'MAX' → logprob: -5.3045501708984375
    6. '#' (adapté à ' #') → logprob: -10.429550170898438
    7. '   ' → logprob: -11.179550170898438
    8. 'inf' → logprob: -11.554550170898438
    9. ' dp' → logprob: -14.429550170898438
    10. ' INF' → logprob: -14.429550170898438

Token 760: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18156103789806366
    2. 'INF' → logprob: -2.43156099319458
    3. 'max' → logprob: -2.93156099319458
    4. 'MAX' → logprob: -4.18156099319458
    5. 'import' → logprob: -4.68156099319458
    6. '   ' → logprob: -9.056561470031738
    7. '#' → logprob: -9.056561470031738
    8. 'inf' → logprob: -10.181561470031738
    9. 'IN' → logprob: -12.181561470031738
    10. 'from' → logprob: -13.306561470031738

Token 761: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052406336180865765
    2. '=' → logprob: -5.255240440368652
    3. '=[' → logprob: -12.130240440368652
    4. '_size' → logprob: -15.005240440368652
    5. '   ' → logprob: -15.130240440368652
    6. '	' → logprob: -15.630240440368652
    7. ' ' → logprob: -15.755240440368652
    8. 'max' → logprob: -15.755240440368652
    9. '[' → logprob: -16.38024139404297
    10. '_max' → logprob: -16.50524139404297

Token 762: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4031183421611786
    2. ' =' → logprob: -1.153118371963501
    3. ']' → logprob: -4.153118133544922
    4. ']=' → logprob: -7.903118133544922
    5. ')' → logprob: -11.403118133544922
    6. '=[' → logprob: -11.653118133544922
    7. ' ]' → logprob: -13.528118133544922
    8. '[' → logprob: -13.653118133544922
    9. '=
' → logprob: -13.903118133544922
    10. ')=' → logprob: -14.153118133544922

Token 763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. '=[' → logprob: -15.12692928314209
    4. '=sys' → logprob: -16.251930236816406
    5. '＝' → logprob: -16.626930236816406
    6. '=float' → logprob: -17.001930236816406
    7. ')' → logprob: -18.001930236816406
    8. '=

' → logprob: -18.126930236816406
    9. '=
' → logprob: -19.126930236816406
    10. 's' → logprob: -19.126930236816406

Token 764: ' coût' (ID: 73109)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.514650183613412e-05
    2. 'sys' → logprob: -10.500055313110352
    3. ' float' → logprob: -11.250055313110352
    4. 'inf' → logprob: -11.250055313110352
    5. '0' → logprob: -14.000055313110352
    6. '(float' → logprob: -15.750055313110352
    7. 'int' → logprob: -16.00005531311035
    8. 'None' → logprob: -16.12505531311035
    9. '	float' → logprob: -16.62505531311035
    10. 'math' → logprob: -16.87505531311035

Token 765: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.177468404173851
    2. '   ' → logprob: -2.6774682998657227
    3. '_min' → logprob: -3.1774682998657227
    4. ' minimum' → logprob: -3.5524682998657227
    5. ' minimal' → logprob: -5.177468299865723
    6. 'minimum' → logprob: -5.427468299865723
    7. '=' → logprob: -6.052468299865723
    8. ' pour' → logprob: -6.177468299865723
    9. '[' → logprob: -6.552468299865723
    10. 's' → logprob: -7.052468299865723

Token 766: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.7944341897964478
    2. ' =' → logprob: -0.9194341897964478
    3. '   ' → logprob: -2.169434070587158
    4. 'pour' → logprob: -3.669434070587158
    5. '=' → logprob: -5.294434070587158
    6. ' for' → logprob: -5.919434070587158
    7. 'for' → logprob: -6.919434070587158
    8. ' de' → logprob: -8.794434547424316
    9. '#' → logprob: -8.919434547424316
    10. ' ' → logprob: -9.419434547424316

Token 767: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6750029921531677
    2. ' obtenir' → logprob: -1.4250030517578125
    3. ' i' → logprob: -1.6750030517578125
    4. 'ob' → logprob: -2.8000030517578125
    5. ' ob' → logprob: -7.1750030517578125
    6. ' ' → logprob: -8.050003051757812
    7. 'obt' → logprob: -8.425003051757812
    8. '   ' → logprob: -8.925003051757812
    9. ''obtenir' → logprob: -8.925003051757812
    10. 'avoir' → logprob: -9.050003051757812

Token 768: ' gram' (ID: 40134)
  Prédit: ' gram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gram' → logprob: -0.3123966455459595
    2. '   ' → logprob: -2.43739652633667
    3. 'gram' → logprob: -2.56239652633667
    4. ' de' → logprob: -2.81239652633667
    5. ' =' → logprob: -4.56239652633667
    6. ' i' → logprob: -4.56239652633667
    7. ' grams' → logprob: -5.18739652633667
    8. 'de' → logprob: -6.31239652633667
    9. 'grams' → logprob: -6.31239652633667
    10. '=' → logprob: -6.31239652633667

Token 769: 'mes' (ID: 4613)
  Prédit: 'mes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mes' → logprob: -0.009246911853551865
    2. 'me' → logprob: -4.759246826171875
    3. '   ' → logprob: -7.384246826171875
    4. 'm' → logprob: -12.884246826171875
    5. '#' → logprob: -13.009246826171875
    6. '       ' → logprob: -13.384246826171875
    7. 'ames' → logprob: -14.134246826171875
    8. '```' → logprob: -14.259246826171875
    9. 'mages' → logprob: -14.384246826171875
    10. '    
' → logprob: -14.634246826171875

Token 770: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011339112184941769
    2. '   ' → logprob: -5.01133918762207
    3. '=' → logprob: -5.63633918762207
    4. 'dp' → logprob: -7.51133918762207
    5. ' dp' → logprob: -7.76133918762207
    6. 'inf' → logprob: -10.63633918762207
    7. 'INF' → logprob: -11.01133918762207
    8. ' INF' → logprob: -12.38633918762207
    9. ' inf' → logprob: -12.63633918762207
    10. ',' → logprob: -12.63633918762207

Token 771: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4825155436992645
    2. '   ' → logprob: -0.9825155735015869
    3. 'dp' → logprob: -5.107515335083008
    4. '=' → logprob: -6.482515335083008
    5. ' dp' → logprob: -7.232515335083008
    6. '	dp' → logprob: -9.482515335083008
    7. '_dp' → logprob: -11.232515335083008
    8. 'inf' → logprob: -13.107515335083008
    9. 'INF' → logprob: -13.107515335083008
    10. '(dp' → logprob: -14.107515335083008

Token 772: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00011725161311915144
    2. 'import' → logprob: -9.250117301940918
    3. 'INF' → logprob: -11.000117301940918
    4. ' dp' → logprob: -12.625117301940918
    5. 'float' → logprob: -14.625117301940918
    6. 'MAX' → logprob: -15.000117301940918
    7. '[' → logprob: -15.625117301940918
    8. '   ' → logprob: -15.875117301940918
    9. 'inf' → logprob: -16.7501163482666
    10. 'max' → logprob: -17.1251163482666

Token 773: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002922564512118697
    2. 'INF' → logprob: -6.002922534942627
    3. 'import' → logprob: -7.752922534942627
    4. 'MAX' → logprob: -11.127923011779785
    5. 'inf' → logprob: -14.377923011779785
    6. ' dp' → logprob: -14.502923011779785
    7. 'max' → logprob: -14.502923011779785
    8. '   ' → logprob: -14.627923011779785
    9. 'IN' → logprob: -14.752923011779785
    10. 'from' → logprob: -16.00292205810547

Token 774: ' initialise' (ID: 145250)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.340384304523468
    2. 'dp' → logprob: -2.0903842449188232
    3. '=' → logprob: -2.2153842449188232
    4. 'n' → logprob: -2.9653842449188232
    5. 'f' → logprob: -6.590384483337402
    6. 'init' → logprob: -7.340384483337402
    7. 'inf' → logprob: -7.465384483337402
    8. 'INF' → logprob: -7.840384483337402
    9. ' dp' → logprob: -8.340384483337402
    10. 'p' → logprob: -8.340384483337402

Token 775: ' avec' (ID: 3937)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.021458135917782784
    2. '[' → logprob: -4.021458148956299
    3. ' dp' → logprob: -6.021458148956299
    4. '   ' → logprob: -7.271458148956299
    5. ' [' → logprob: -8.64645767211914
    6. 'import' → logprob: -13.89645767211914
    7. '	dp' → logprob: -13.89645767211914
    8. 'INF' → logprob: -14.14645767211914
    9. ' ' → logprob: -14.27145767211914
    10. '  ' → logprob: -14.52145767211914

Token 776: ' une' (ID: 2463)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5769161581993103
    2. '[' → logprob: -0.8269161581993103
    3. 'sys' → logprob: -6.951916217803955
    4. ' [' → logprob: -12.451915740966797
    5. '[int' → logprob: -12.576915740966797
    6. ' float' → logprob: -12.701915740966797
    7. '10' → logprob: -13.201915740966797
    8. '[max' → logprob: -13.326915740966797
    9. '[s' → logprob: -13.451915740966797
    10. '(float' → logprob: -14.701915740966797

Token 777: ' valeur' (ID: 41664)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10743625462055206
    2. 'float' → logprob: -2.482436180114746
    3. ' [' → logprob: -5.107436180114746
    4. 'tr' → logprob: -5.482436180114746
    5. 'inf' → logprob: -5.607436180114746
    6. 'val' → logprob: -6.482436180114746
    7. 'import' → logprob: -7.357436180114746
    8. 'sys' → logprob: -7.482436180114746
    9. ' float' → logprob: -7.732436180114746
    10. 'large' → logprob: -7.982436180114746

Token 778: ' très' (ID: 9412)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4143524765968323
    2. 'import' → logprob: -1.7893524169921875
    3. 'sys' → logprob: -2.9143524169921875
    4. ' float' → logprob: -3.5393524169921875
    5. ' très' → logprob: -3.6643524169921875
    6. 'inf' → logprob: -3.7893524169921875
    7. 'tr' → logprob: -4.0393524169921875
    8. 'max' → logprob: -4.5393524169921875
    9. ' sys' → logprob: -4.7893524169921875
    10. '[' → logprob: -7.4143524169921875

Token 779: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.1965242624282837
    2. 'import' → logprob: -2.196524143218994
    3. 'é' → logprob: -3.196524143218994
    4. ' grande' → logprob: -4.321524143218994
    5. 'grand' → logprob: -5.321524143218994
    6. ' élevée' → logprob: -5.571524143218994
    7. 'large' → logprob: -5.696524143218994
    8. 'ha' → logprob: -8.321524620056152
    9. 'élé' → logprob: -8.696524620056152
    10. '```' → logprob: -9.321524620056152

Token 780: ' sauf' (ID: 87919)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39980560541152954
    2. ' dp' → logprob: -1.5248055458068848
    3. '   ' → logprob: -2.7748055458068848
    4. ' =' → logprob: -3.6498055458068848
    5. 'INF' → logprob: -4.524805545806885
    6. 'inf' → logprob: -5.649805545806885
    7. 'import' → logprob: -6.399805545806885
    8. '[' → logprob: -6.524805545806885
    9. ' INF' → logprob: -6.899805545806885
    10. ' [' → logprob: -7.024805545806885

Token 781: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08063948154449463
    2. 'pour' → logprob: -3.080639362335205
    3. ' dp' → logprob: -4.080639362335205
    4. ' pour' → logprob: -4.580639362335205
    5. '0' → logprob: -5.705639362335205
    6. ' ' → logprob: -7.580639362335205
    7. 'for' → logprob: -8.705639839172363
    8. 'i' → logprob: -9.205639839172363
    9. 'à' → logprob: -9.330639839172363
    10. ' for' → logprob: -9.830639839172363

Token 782: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014609156642109156
    2. ' =' → logprob: -9.62514591217041
    3. '=' → logprob: -9.87514591217041
    4. '=[' → logprob: -11.25014591217041
    5. '\[' → logprob: -12.25014591217041
    6. '0' → logprob: -12.87514591217041
    7. 's' → logprob: -12.87514591217041
    8. '```' → logprob: -12.87514591217041
    9. ' [' → logprob: -13.75014591217041
    10. '   ' → logprob: -14.12514591217041

Token 783: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '[' → logprob: -14.250012397766113
    4. '   ' → logprob: -15.125012397766113
    5. ']' → logprob: -16.62501335144043
    6. '```' → logprob: -17.50001335144043
    7. '  ' → logprob: -17.62501335144043
    8. '000' → logprob: -18.25001335144043
    9. '(' → logprob: -18.50001335144043
    10. '=' → logprob: -18.62501335144043

Token 784: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016793444519862533
    2. ']=' → logprob: -6.501679420471191
    3. ' ]' → logprob: -8.751679420471191
    4. '   ' → logprob: -11.876679420471191
    5. '=' → logprob: -12.626679420471191
    6. '[' → logprob: -13.251679420471191
    7. '0' → logprob: -13.376679420471191
    8. ' =' → logprob: -13.501679420471191
    9. '']' → logprob: -13.751679420471191
    10. ']
' → logprob: -14.626679420471191

Token 785: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04997745901346207
    2. 'dp' → logprob: -3.2999775409698486
    3. '   ' → logprob: -4.7999773025512695
    4. ' dp' → logprob: -5.7999773025512695
    5. '=' → logprob: -7.5499773025512695
    6. '[' → logprob: -10.29997730255127
    7. '	dp' → logprob: -11.04997730255127
    8. ' =
' → logprob: -11.92497730255127
    9. '_dp' → logprob: -12.17497730255127
    10. '=[' → logprob: -12.42497730255127

Token 786: ' INF' (ID: 69196)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005288311280310154
    2. ' dp' → logprob: -5.255288124084473
    3. 'import' → logprob: -10.630288124084473
    4. 'INF' (adapté à ' INF') → logprob: -11.005288124084473
    5. '   ' → logprob: -11.630288124084473
    6. '[' → logprob: -13.130288124084473
    7. 'MAX' → logprob: -13.880288124084473
    8. ' ' → logprob: -14.630288124084473
    9. 'float' → logprob: -14.755288124084473
    10. '	dp' → logprob: -15.130288124084473

Token 787: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324605919420719
    2. '=' → logprob: -3.7732460498809814
    3. '   ' → logprob: -14.648245811462402
    4. '=int' → logprob: -16.39824676513672
    5. '    ' → logprob: -17.64824676513672
    6. ' ' → logprob: -18.27324676513672
    7. '＝' → logprob: -18.39824676513672
    8. ' ' → logprob: -18.39824676513672
    9. '```' → logprob: -18.52324676513672
    10. '  ' → logprob: -18.77324676513672

Token 788: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002824254333972931
    2. 'float' → logprob: -5.877824306488037
    3. 'int' → logprob: -11.377823829650879
    4. '1' → logprob: -12.127823829650879
    5. 'sys' → logprob: -13.127823829650879
    6. ' ' → logprob: -15.127823829650879
    7. '100' → logprob: -15.627823829650879
    8. ' float' → logprob: -16.502824783325195
    9. '999' → logprob: -17.877824783325195
    10. 'max' → logprob: -18.627824783325195

Token 789: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012119027087464929
    2. 'float' → logprob: -6.751212120056152
    3. 'int' → logprob: -10.876212120056152
    4. '1' → logprob: -10.876212120056152
    5. 'sys' → logprob: -12.751212120056152
    6. '100' → logprob: -14.376212120056152
    7. ' ' → logprob: -15.751212120056152
    8. '999' → logprob: -16.001211166381836
    9. ' float' → logprob: -17.126211166381836
    10. 'max' → logprob: -17.626211166381836

Token 790: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.9264919757843018
    2. '7' → logprob: -1.1764919757843018
    3. '6' → logprob: -1.4264919757843018
    4. '**' → logprob: -2.9264919757843018
    5. '8' → logprob: -6.301491737365723
    6. '000' → logprob: -9.051491737365723
    7. '10' → logprob: -11.426491737365723
    8. '```' → logprob: -13.176491737365723
    9. '12' → logprob: -14.051491737365723
    10. '5' → logprob: -14.301491737365723

Token 791: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0020208319183439016
    2. '15' → logprob: -6.252020835876465
    3. '12' → logprob: -10.127020835876465
    4. '10' → logprob: -10.502020835876465
    5. '7' → logprob: -10.877020835876465
    6. '18' → logprob: -12.502020835876465
    7. '8' → logprob: -14.002020835876465
    8. '14' → logprob: -14.377020835876465
    9. '13' → logprob: -14.877020835876465
    10. '16' → logprob: -15.502020835876465

Token 792: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045891597867012024
    2. 'dp' → logprob: -3.170891523361206
    3. '   ' → logprob: -6.170891761779785
    4. '    
' → logprob: -7.420891761779785
    5. ' dp' → logprob: -9.920891761779785
    6. '
' → logprob: -10.170891761779785
    7. '+' → logprob: -10.670891761779785
    8. '  
' → logprob: -10.795891761779785
    9. ',
' → logprob: -10.920891761779785
    10. '	dp' → logprob: -10.920891761779785

Token 793: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2757340669631958
    2. ' dp' → logprob: -1.6507340669631958
    3. '   ' → logprob: -3.0257339477539062
    4. '	dp' → logprob: -7.900733947753906
    5. '
' → logprob: -8.900733947753906
    6. '    
' → logprob: -10.775733947753906
    7. '_dp' → logprob: -11.400733947753906
    8. '.dp' → logprob: -12.650733947753906
    9. '(dp' → logprob: -12.650733947753906
    10. '```' → logprob: -13.525733947753906

Token 794: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -6.2729995988775045e-06
    2. '   ' → logprob: -12.250006675720215
    3. ' dp' → logprob: -13.500006675720215
    4. '	dp' → logprob: -19.3750057220459
    5. 'import' → logprob: -21.6250057220459
    6. 'dt' → logprob: -22.2500057220459
    7. '```' → logprob: -22.6250057220459
    8. 'dc' → logprob: -23.0000057220459
    9. ' ' → logprob: -23.0000057220459
    10. '
' → logprob: -23.1250057220459

Token 795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023540496826172
    2. '=' → logprob: -1.9102354049682617
    3. '=[' → logprob: -11.910235404968262
    4. '[' → logprob: -13.035235404968262
    5. ' =[' → logprob: -13.785235404968262
    6. '```' → logprob: -14.035235404968262
    7. '   ' → logprob: -15.160235404968262
    8. ')' → logprob: -16.910236358642578
    9. '＝' → logprob: -17.285236358642578
    10. '=[]' → logprob: -17.535236358642578

Token 796: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.259079363080673e-05
    2. ' [' → logprob: -11.625012397766113
    3. '[int' → logprob: -13.375012397766113
    4. '[in' → logprob: -13.875012397766113
    5. '   ' → logprob: -15.125012397766113
    6. '[a' → logprob: -15.375012397766113
    7. '[I' → logprob: -15.750012397766113
    8. '[array' → logprob: -15.750012397766113
    9. '[ind' → logprob: -16.12501335144043
    10. '[arr' → logprob: -16.75001335144043

Token 797: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -13.750000953674316
    3. ' INF' → logprob: -18.375001907348633
    4. '_INF' → logprob: -19.000001907348633
    5. 'IN' → logprob: -20.000001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '-INF' → logprob: -20.750001907348633
    8. 'float' → logprob: -21.000001907348633
    9. 'inf' → logprob: -21.375001907348633
    10. '[' → logprob: -21.500001907348633

Token 798: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006130746915005147
    2. ']*' → logprob: -7.625613212585449
    3. ' for' → logprob: -9.75061321258545
    4. ']+' → logprob: -10.62561321258545
    5. ' ]' → logprob: -10.62561321258545
    6. ']*(' → logprob: -11.00061321258545
    7. 'for' → logprob: -13.62561321258545
    8. ',' → logprob: -15.37561321258545
    9. ']+=' → logprob: -17.375612258911133
    10. ')' → logprob: -17.500612258911133

Token 799: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6664664149284363
    2. ' +' → logprob: -0.7914664149284363
    3. '*' → logprob: -4.416466236114502
    4. '+[' → logprob: -4.791466236114502
    5. ' *' → logprob: -5.166466236114502
    6. ']' → logprob: -6.291466236114502
    7. '*(' → logprob: -6.416466236114502
    8. '
' → logprob: -6.666466236114502
    9. 'for' → logprob: -7.416466236114502
    10. ']+' → logprob: -7.791466236114502

Token 800: ' (' (ID: 350)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -6.392202976712724e-06
    2. ' (' → logprob: -12.625006675720215
    3. '(' → logprob: -13.750006675720215
    4. 'amount' → logprob: -14.125006675720215
    5. '(am' → logprob: -14.500006675720215
    6. '(answer' → logprob: -15.375006675720215
    7. '((' → logprob: -15.750006675720215
    8. '(max' → logprob: -16.1250057220459
    9. '(quantity' → logprob: -16.5000057220459
    10. '(account' → logprob: -17.0000057220459

Token 801: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -1.9361264946837764e-07
    2. ' amount' → logprob: -16.5
    3. '(amount' → logprob: -17.5
    4. 'a' → logprob: -24.625
    5. 'am' → logprob: -25.25
    6. 'answer' → logprob: -25.625
    7. '_amount' → logprob: -25.625
    8. '   ' → logprob: -25.625
    9. '.amount' → logprob: -26.0
    10. 'address' → logprob: -26.875

Token 802: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00861468818038702
    2. ' +' → logprob: -4.758614540100098
    3. '+
' → logprob: -16.883615493774414
    4. '```' → logprob: -17.383615493774414
    5. '1' → logprob: -18.008615493774414
    6. '＋' → logprob: -18.508615493774414
    7. '[' → logprob: -18.758615493774414
    8. ' plus' → logprob: -19.133615493774414
    9. ' +
' → logprob: -19.633615493774414
    10. '   ' → logprob: -19.633615493774414

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -21.75
    4. '１' → logprob: -21.875
    5. '```' → logprob: -22.75
    6. '۱' → logprob: -23.625
    7. '
' → logprob: -24.0
    8. '{' → logprob: -24.625
    9. '2' → logprob: -24.75
    10. '१' → logprob: -25.125

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '
' → logprob: -19.875001907348633
    5. '```' → logprob: -19.875001907348633
    6. '+' → logprob: -20.000001907348633
    7. '１' → logprob: -20.375001907348633
    8. '{' → logprob: -20.625001907348633
    9. '۱' → logprob: -21.937501907348633
    10. 'a' → logprob: -22.187501907348633

Token 805: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133320212364197
    2. ')
' → logprob: -1.3133320808410645
    3. ')
' → logprob: -9.688331604003906
    4. ' )' → logprob: -13.313331604003906
    5. ' )
' → logprob: -13.313331604003906
    6. ')

' → logprob: -13.438331604003906
    7. '
' → logprob: -13.938331604003906
    8. '   ' → logprob: -14.063331604003906
    9. ']' → logprob: -15.063331604003906
    10. '),' → logprob: -15.188331604003906

Token 806: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006919730454683304
    2. ' dp' → logprob: -5.006919860839844
    3. '   ' → logprob: -8.506919860839844
    4. '	dp' → logprob: -13.006919860839844
    5. '_dp' → logprob: -17.506919860839844
    6. '(dp' → logprob: -18.131919860839844
    7. '```' → logprob: -18.631919860839844
    8. '.dp' → logprob: -19.756919860839844
    9. ' ' → logprob: -20.256919860839844
    10. ' ' → logprob: -21.756919860839844

Token 807: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -6.0629870858974755e-05
    2. ' dp' → logprob: -9.75006103515625
    3. '0' → logprob: -13.12506103515625
    4. '   ' → logprob: -15.50006103515625
    5. '	dp' → logprob: -16.50006103515625
    6. '```' → logprob: -17.25006103515625
    7. ' ' → logprob: -18.50006103515625
    8. '(dp' → logprob: -19.37506103515625
    9. '_dp' → logprob: -19.50006103515625
    10. 'dc' → logprob: -20.75006103515625

Token 808: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -16.875
    3. ' [' → logprob: -17.625
    4. '[
' → logprob: -17.75
    5. '=' → logprob: -18.125
    6. '```' → logprob: -18.875
    7. 'def' → logprob: -19.375
    8. 's' → logprob: -20.375
    9. ' =' → logprob: -20.75
    10. '\[' → logprob: -20.875

Token 809: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -17.875
    4. '   ' → logprob: -19.125
    5. '1' → logprob: -19.875
    6. '۰' → logprob: -19.875
    7. '000' → logprob: -20.0
    8. '`' → logprob: -20.5625
    9. ')' → logprob: -21.0
    10. '[' → logprob: -21.0

Token 810: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010902655776590109
    2. ')' → logprob: -9.62510871887207
    3. ']=' → logprob: -10.50010871887207
    4. ' ]' → logprob: -11.12510871887207
    5. '=' → logprob: -15.00010871887207
    6. ')]' → logprob: -16.50010871887207
    7. '])' → logprob: -16.75010871887207
    8. '[' → logprob: -17.00010871887207
    9. ')=' → logprob: -17.25010871887207
    10. ' =' → logprob: -17.37510871887207

Token 811: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007099286303855479
    2. ' =' → logprob: -7.2507100105285645
    3. '=
' → logprob: -19.500709533691406
    4. '＝' → logprob: -19.625709533691406
    5. '=}' → logprob: -20.375709533691406
    6. '.=' → logprob: -21.250709533691406
    7. '=

' → logprob: -21.500709533691406
    8. '=int' → logprob: -21.625709533691406
    9. ')=' → logprob: -21.625709533691406
    10. ']=' → logprob: -22.000709533691406

Token 812: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -20.0
    4. '000' → logprob: -22.625
    5. '[' → logprob: -23.0
    6. '০' → logprob: -23.125
    7. '00' → logprob: -23.375
    8. '   ' → logprob: -23.625
    9. '０' → logprob: -23.75
    10. '```' → logprob: -24.125

Token 813: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '۰' → logprob: -22.25
    4. '000' → logprob: -23.25
    5. '   ' → logprob: -23.625
    6. '```' → logprob: -24.0
    7. '00' → logprob: -24.375
    8. '０' → logprob: -24.625
    9. '[' → logprob: -25.375
    10. '০' → logprob: -25.5

Token 814: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09063468873500824
    2. ' for' → logprob: -3.34063458442688
    3. '<|end|>' → logprob: -4.090634822845459
    4. 'for' → logprob: -4.340634822845459
    5. '
' → logprob: -4.465634822845459
    6. '    
' → logprob: -4.965634822845459
    7. '  
' → logprob: -6.965634822845459
    8. '	for' → logprob: -7.465634822845459
    9. '<|end|>' → logprob: -7.840634822845459
    10. ' 
' → logprob: -7.965634822845459

Token 815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5830392837524414
    2. 'for' → logprob: -0.8330392837524414
    3. ' for' → logprob: -4.958039283752441
    4. '	for' → logprob: -10.208039283752441
    5. '   ' → logprob: -11.958039283752441
    6. '```' → logprob: -13.458039283752441
    7. '    
' → logprob: -13.708039283752441
    8. '
' → logprob: -13.833039283752441
    9. 'from' → logprob: -15.708039283752441
    10. 'shop' → logprob: -15.958039283752441

Token 816: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.861651490908116e-05
    2. ' for' → logprob: -10.125068664550781
    3. '   ' → logprob: -10.500068664550781
    4. 'from' → logprob: -14.625068664550781
    5. 'import' → logprob: -15.750068664550781
    6. 'max' → logprob: -15.750068664550781
    7. '	for' → logprob: -16.37506866455078
    8. '    
' → logprob: -17.12506866455078
    9. '
' → logprob: -17.75006866455078
    10. 'bags' → logprob: -18.25006866455078

Token 817: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015955790877342224
    2. '   ' → logprob: -9.25015926361084
    3. ' for' → logprob: -9.75015926361084
    4. 'import' → logprob: -13.62515926361084
    5. 'from' → logprob: -13.75015926361084
    6. 'max' → logprob: -13.75015926361084
    7. 'amount' → logprob: -15.00015926361084
    8. '#' → logprob: -15.12515926361084
    9. 'bags' → logprob: -15.12515926361084
    10. '	for' → logprob: -15.37515926361084

Token 818: ' chaque' (ID: 21194)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.2572551369667053
    2. 'q' → logprob: -2.8822550773620605
    3. 'bag' → logprob: -2.8822550773620605
    4. 'quant' → logprob: -3.5072550773620605
    5. 'qty' → logprob: -4.0072550773620605
    6. 's' → logprob: -4.2572550773620605
    7. 'i' → logprob: -4.2572550773620605
    8. 'a' → logprob: -4.6322550773620605
    9. 'gram' → logprob: -4.7572550773620605
    10. 'amt' → logprob: -5.3822550773620605

Token 819: ' quantité' (ID: 89219)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3755343556404114
    2. 'q' → logprob: -2.0005342960357666
    3. 'qty' → logprob: -2.3755342960357666
    4. 'gram' → logprob: -3.2505342960357666
    5. 'quant' → logprob: -3.8755342960357666
    6. 'shop' → logprob: -5.000534534454346
    7. 'amt' → logprob: -5.000534534454346
    8. 'quantity' → logprob: -6.000534534454346
    9. 'a' → logprob: -6.125534534454346
    10. 'weight' → logprob: -6.250534534454346

Token 820: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3455269932746887
    2. ' i' → logprob: -2.595526933670044
    3. ' in' → logprob: -3.095526933670044
    4. ' de' → logprob: -3.095526933670044
    5. 'de' → logprob: -3.220526933670044
    6. 'en' → logprob: -3.595526933670044
    7. 'in' → logprob: -3.720526933670044
    8. 'from' → logprob: -3.845526933670044
    9. ' en' → logprob: -5.095527172088623
    10. ' from' → logprob: -5.345527172088623

Token 821: ' farine' (ID: 144514)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45413458347320557
    2. '0' → logprob: -1.5791345834732056
    3. 'gram' → logprob: -2.579134464263916
    4. 'far' → logprob: -2.954134464263916
    5. 'range' → logprob: -4.079134464263916
    6. 'i' → logprob: -4.829134464263916
    7. 'grain' → logprob: -5.829134464263916
    8. ' farine' → logprob: -6.204134464263916
    9. 'grams' → logprob: -8.329134941101074
    10. 'gr' → logprob: -9.079134941101074

Token 822: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2739652991294861
    2. 'from' → logprob: -2.523965358734131
    3. 'de' → logprob: -2.648965358734131
    4. ' de' → logprob: -3.523965358734131
    5. 'en' → logprob: -3.773965358734131
    6. ' i' → logprob: -4.023965358734131
    7. ' from' → logprob: -5.148965358734131
    8. ' en' → logprob: -5.898965358734131
    9. '   ' → logprob: -6.273965358734131
    10. 'a' → logprob: -6.523965358734131

Token 823: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38691702485084534
    2. '0' → logprob: -1.136916995048523
    3. ' ' → logprob: -10.011917114257812
    4. 'range' → logprob: -13.761917114257812
    5. 'i' → logprob: -17.261917114257812
    6. '   ' → logprob: -17.261917114257812
    7. 'gram' → logprob: -17.761917114257812
    8. 'amount' → logprob: -17.761917114257812
    9. '```' → logprob: -17.886917114257812
    10. 'a' → logprob: -18.511917114257812

Token 824: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01112339273095131
    2. '0' → logprob: -4.511123180389404
    3. 'range' → logprob: -9.511123657226562
    4. ' ' → logprob: -14.011123657226562
    5. 'amount' → logprob: -14.511123657226562
    6. 'i' → logprob: -15.886123657226562
    7. ' range' → logprob: -16.636123657226562
    8. 'a' → logprob: -18.011123657226562
    9. '   ' → logprob: -18.386123657226562
    10. '(' → logprob: -18.886123657226562

Token 825: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.35110610723495483
    2. 'à' → logprob: -1.2261061668395996
    3. ' jusqu' → logprob: -6.8511061668396
    4. ' ' → logprob: -7.2261061668396
    5. '   ' → logprob: -7.8511061668396
    6. '+' → logprob: -8.851105690002441
    7. ',' → logprob: -9.226105690002441
    8. ' a' → logprob: -9.476105690002441
    9. 'a' → logprob: -9.976105690002441
    10. ''à' → logprob: -11.226105690002441

Token 826: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0007101670489646494
    2. ' amount' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.500710487365723
    4. '(amount' → logprob: -17.125709533691406
    5. 'a' → logprob: -17.625709533691406
    6. 'am' → logprob: -18.875709533691406
    7. ' ' → logprob: -19.000709533691406
    8. 'quantity' → logprob: -19.250709533691406
    9. '_amount' → logprob: -19.625709533691406
    10. '    ' → logprob: -19.625709533691406

Token 827: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2790679335594177
    2. '   ' → logprob: -1.6540679931640625
    3. '+' → logprob: -4.1540679931640625
    4. ':
' → logprob: -4.2790679931640625
    5. 'for' → logprob: -5.2790679931640625
    6. ' for' → logprob: -5.2790679931640625
    7. ' :' → logprob: -6.0290679931640625
    8. ' +' → logprob: -6.0290679931640625
    9. ' i' → logprob: -6.1540679931640625
    10. ',' → logprob: -6.2790679931640625

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017603866290301085
    2. ' for' → logprob: -6.501760482788086
    3. 'for' → logprob: -8.501760482788086
    4. '       ' → logprob: -11.126760482788086
    5. '   ' → logprob: -11.501760482788086
    6. '    ' → logprob: -11.751760482788086
    7. ' pour' → logprob: -11.876760482788086
    8. ' ' → logprob: -12.501760482788086
    9. ' ' → logprob: -12.751760482788086
    10. '  ' → logprob: -13.001760482788086

Token 829: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4481685161590576
    2. '   ' → logprob: -1.5731685161590576
    3. 'for' → logprob: -1.9481685161590576
    4. ' i' → logprob: -5.073168754577637
    5. ' pour' → logprob: -6.198168754577637
    6. ' amount' → logprob: -6.323168754577637
    7. 'amount' → logprob: -7.448168754577637
    8. 'i' → logprob: -8.073168754577637
    9. 'pour' → logprob: -9.448168754577637
    10. '    ' → logprob: -9.573168754577637

Token 830: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6234936118125916
    2. 'for' → logprob: -0.8734936118125916
    3. ' i' → logprob: -3.3734936714172363
    4. 'i' → logprob: -5.373493671417236
    5. '   ' → logprob: -5.373493671417236
    6. ' pour' → logprob: -6.123493671417236
    7. ' amount' → logprob: -8.123493194580078
    8. 'pour' → logprob: -8.373493194580078
    9. 'amount' → logprob: -8.873493194580078
    10. '	for' → logprob: -11.498493194580078

Token 831: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34884804487228394
    2. ' for' → logprob: -1.2238481044769287
    3. '   ' → logprob: -8.223848342895508
    4. '	for' → logprob: -9.473848342895508
    5. 'or' → logprob: -10.848848342895508
    6. '    ' → logprob: -12.098848342895508
    7. ' ' → logprob: -12.348848342895508
    8. 'n' → logprob: -12.473848342895508
    9. ' pour' → logprob: -12.473848342895508
    10. ' ' → logprob: -12.848848342895508

Token 832: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.012057824991643429
    2. 'y' → logprob: -5.012057781219482
    3. 'ye' → logprob: -5.762057781219482
    4. 'aye' → logprob: -6.512057781219482
    5. 'yer' → logprob: -7.512057781219482
    6. 'uie' → logprob: -9.51205825805664
    7. 'eye' → logprob: -11.13705825805664
    8. 'ime' → logprob: -11.38705825805664
    9. 'iye' → logprob: -11.76205825805664
    10. 'i' → logprob: -12.38705825805664

Token 833: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04701885208487511
    2. '    ' → logprob: -3.7970187664031982
    3. '   ' → logprob: -4.422019004821777
    4. ' de' → logprob: -4.672019004821777
    5. 'd' → logprob: -6.547019004821777
    6. '       ' → logprob: -8.172019004821777
    7. ' ' → logprob: -9.172019004821777
    8. '  ' → logprob: -9.547019004821777
    9. ' ' → logprob: -9.672019004821777
    10. '        ' → logprob: -10.547019004821777

Token 834: ''aj' (ID: 116735)
  Prédit: ''aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aj' → logprob: -0.36683180928230286
    2. 'range' → logprob: -1.8668317794799805
    3. 'n' → logprob: -3.8668317794799805
    4. ' ajouter' → logprob: -4.1168317794799805
    5. ' range' → logprob: -4.1168317794799805
    6. '   ' → logprob: -4.3668317794799805
    7. 'iter' → logprob: -4.8668317794799805
    8. ''utiliser' → logprob: -5.1168317794799805
    9. 'mettre' → logprob: -5.2418317794799805
    10. 'for' → logprob: -5.3668317794799805

Token 835: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.00016063073417171836
    2. '```' → logprob: -10.625160217285156
    3. '#' → logprob: -10.750160217285156
    4. 'uter' → logprob: -10.750160217285156
    5. 'oute' → logprob: -11.000160217285156
    6. 'outez' → logprob: -11.625160217285156
    7. ']' → logprob: -12.125160217285156
    8. '_outer' → logprob: -12.125160217285156
    9. 'j' → logprob: -12.250160217285156
    10. '``' → logprob: -12.375160217285156

Token 836: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.07901746034622192
    2. '1' → logprob: -3.829017400741577
    3. ' une' → logprob: -3.829017400741577
    4. '   ' → logprob: -4.704017639160156
    5. ' ' → logprob: -5.579017639160156
    6. ' a' → logprob: -5.579017639160156
    7. 'un' → logprob: -6.079017639160156
    8. 's' → logprob: -6.329017639160156
    9. ' des' → logprob: -6.454017639160156
    10. '    ' → logprob: -6.579017639160156

Token 837: ' sac' (ID: 10672)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2999846041202545
    2. ' sac' → logprob: -1.4249845743179321
    3. 'bag' → logprob: -4.174984455108643
    4. 'for' → logprob: -6.799984455108643
    5. 'shop' → logprob: -7.674984455108643
    6. ' bag' → logprob: -7.799984455108643
    7. ''s' → logprob: -8.1749849319458
    8. '```' → logprob: -8.6749849319458
    9. 'pan' → logprob: -8.7999849319458
    10. ' for' → logprob: -9.2999849319458

Token 838: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22925402224063873
    2. ' de' → logprob: -1.9792540073394775
    3. 'from' → logprob: -3.7292540073394775
    4. ' d' → logprob: -3.8542540073394775
    5. ' from' → logprob: -4.604254245758057
    6. ' des' → logprob: -5.354254245758057
    7. 'd' → logprob: -6.354254245758057
    8. 'de' → logprob: -6.354254245758057
    9. ' dans' → logprob: -7.479254245758057
    10. ' for' → logprob: -7.479254245758057

Token 839: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.6225075721740723
    2. 'ch' → logprob: -1.7475075721740723
    3. 'shop' → logprob: -1.9975075721740723
    4. 'each' → logprob: -2.7475075721740723
    5. 'A' → logprob: -3.3725075721740723
    6. ' chaque' → logprob: -3.7475075721740723
    7. ' chacune' → logprob: -4.372507572174072
    8. ' each' → logprob: -4.997507572174072
    9. ' shop' → logprob: -5.997507572174072
    10. 'la' → logprob: -6.372507572174072

Token 840: ' boutique' (ID: 46148)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.11472350358963013
    2. 'bout' → logprob: -2.8647234439849854
    3. ' shop' → logprob: -2.9897234439849854
    4. ' boutique' → logprob: -6.9897236824035645
    5. 'shops' → logprob: -10.614723205566406
    6. '   ' → logprob: -10.614723205566406
    7. 'type' → logprob: -11.239723205566406
    8. '(shop' → logprob: -11.614723205566406
    9. 'store' → logprob: -11.864723205566406
    10. '```' → logprob: -11.864723205566406

Token 841: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002464717486873269
    2. ' for' → logprob: -6.127464771270752
    3. 'for' → logprob: -8.627464294433594
    4. ',' → logprob: -10.002464294433594
    5. '    
' → logprob: -10.377464294433594
    6. '   ' → logprob: -11.752464294433594
    7. '	for' → logprob: -12.377464294433594
    8. '
' → logprob: -12.877464294433594
    9. '.' → logprob: -12.877464294433594
    10. ' pour' → logprob: -13.502464294433594

Token 842: ' ça' (ID: 13590)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21805398166179657
    2. ' i' → logprob: -1.718053936958313
    3. 'dp' → logprob: -5.593053817749023
    4. ' amount' → logprob: -5.843053817749023
    5. 'amount' → logprob: -5.843053817749023
    6. 'quant' → logprob: -6.093053817749023
    7. ' quantité' → logprob: -6.218053817749023
    8. ' dp' → logprob: -7.343053817749023
    9. '量' → logprob: -7.718053817749023
    10. '(i' → logprob: -8.218053817749023

Token 843: ' ne' (ID: 453)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7485917210578918
    2. '<=' → logprob: -0.8735917210578918
    3. 'n' → logprob: -3.123591661453247
    4. ' ne' → logprob: -3.248591661453247
    5. '```' → logprob: -4.873591899871826
    6. '+' → logprob: -5.373591899871826
    7. 'le' → logprob: -5.373591899871826
    8. ' n' → logprob: -5.373591899871826
    9. 'ne' → logprob: -6.873591899871826
    10. ' +' → logprob: -7.248591899871826

Token 844: ' dépasse' (ID: 165701)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3873656392097473
    2. ' <=' → logprob: -1.1373655796051025
    3. '+' → logprob: -8.137365341186523
    4. '≤' → logprob: -10.012365341186523
    5. ' dépasse' → logprob: -10.012365341186523
    6. 'n' → logprob: -10.637365341186523
    7. '```' → logprob: -11.137365341186523
    8. '<' → logprob: -11.137365341186523
    9. ' ≤' → logprob: -11.637365341186523
    10. ' +' → logprob: -12.012365341186523

Token 845: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.1433880627155304
    2. ' pas' → logprob: -2.018388032913208
    3. '   ' → logprob: -8.268387794494629
    4. 'amount' → logprob: -9.143387794494629
    5. '_pas' → logprob: -9.268387794494629
    6. ' jamais' → logprob: -9.643387794494629
    7. '```' → logprob: -9.893387794494629
    8. 'le' → logprob: -10.643387794494629
    9. 'point' → logprob: -11.143387794494629
    10. 'j' → logprob: -11.393387794494629

Token 846: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.06277743726968765
    2. ' amount' → logprob: -3.437777519226074
    3. '   ' → logprob: -4.437777519226074
    4. 'l' → logprob: -4.812777519226074
    5. 'la' → logprob: -5.437777519226074
    6. ' la' → logprob: -6.187777519226074
    7. '(amount' → logprob: -6.812777519226074
    8. 'i' → logprob: -8.562777519226074
    9. ' l' → logprob: -8.687777519226074
    10. '```' → logprob: -8.812777519226074

Token 847: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002849220996722579
    2. '    
' → logprob: -6.002849102020264
    3. '
' → logprob: -8.627849578857422
    4. ',' → logprob: -9.877849578857422
    5. '  
' → logprob: -10.377849578857422
    6. ' for' → logprob: -10.502849578857422
    7. ':' → logprob: -11.127849578857422
    8. '   
' → logprob: -11.377849578857422
    9. 'for' → logprob: -11.502849578857422
    10. '   ' → logprob: -11.752849578857422

Token 848: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.0590548703912646e-05
    2. ' for' → logprob: -11.125030517578125
    3. '    
' → logprob: -12.000030517578125
    4. 'for' → logprob: -12.125030517578125
    5. '
' → logprob: -13.500030517578125
    6. '   ' → logprob: -13.875030517578125
    7. '	for' → logprob: -14.000030517578125
    8. '       ' → logprob: -14.625030517578125
    9. ',' → logprob: -14.750030517578125
    10. ':' → logprob: -16.750030517578125

Token 849: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7701422572135925
    2. ' for' → logprob: -1.1451423168182373
    3. 'for' (adapté à ' for') → logprob: -1.5201423168182373
    4. '	for' → logprob: -8.770142555236816
    5. '
' → logprob: -11.020142555236816
    6. '    
' → logprob: -12.145142555236816
    7. '   ' → logprob: -12.145142555236816
    8. ' ' → logprob: -12.895142555236816
    9. ' ' → logprob: -13.270142555236816
    10. ' 
' → logprob: -13.520142555236816

Token 850: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5820764303207397
    2. 'qty' → logprob: -1.9570764303207397
    3. 'current' → logprob: -2.0820765495300293
    4. 'q' → logprob: -2.2070765495300293
    5. 'curr' → logprob: -3.4570765495300293
    6. 'cur' → logprob: -4.582076549530029
    7. 'quant' → logprob: -4.957076549530029
    8. 'amt' → logprob: -5.207076549530029
    9. 'quantity' → logprob: -5.832076549530029
    10. 'a' → logprob: -6.082076549530029

Token 851: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0699467658996582
    2. 'in' → logprob: -2.694946765899658
    3. '+' → logprob: -12.6949462890625
    4. '	in' → logprob: -13.3199462890625
    5. ' ' → logprob: -13.4449462890625
    6. 'n' → logprob: -14.3199462890625
    7. '   ' → logprob: -14.4449462890625
    8. ',' → logprob: -14.9449462890625
    9. 'import' → logprob: -14.9449462890625
    10. ' i' → logprob: -14.9449462890625

Token 852: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975395694375038
    2. ' range' → logprob: -3.5297539234161377
    3. ' ' → logprob: -13.404753684997559
    4. '   ' → logprob: -13.779753684997559
    5. '0' → logprob: -15.404753684997559
    6. '	range' → logprob: -15.404753684997559
    7. '(range' → logprob: -16.154754638671875
    8. '  ' → logprob: -16.279754638671875
    9. 'rang' → logprob: -16.779754638671875
    10. '    ' → logprob: -16.904754638671875

Token 853: '(amount' (ID: 60193)
  Prédit: '(amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.010076797567307949
    2. 'amount' → logprob: -4.635076999664307
    3. '(' → logprob: -8.635076522827148
    4. ' amount' → logprob: -10.010076522827148
    5. '1' → logprob: -10.010076522827148
    6. '   ' → logprob: -10.260076522827148
    7. ' (' → logprob: -11.260076522827148
    8. '0' → logprob: -12.385076522827148
    9. ' ' → logprob: -15.635076522827148
    10. ',' → logprob: -15.885076522827148

Token 854: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014193832874298
    2. ' +' → logprob: -1.7014193534851074
    3. '   ' → logprob: -12.701419830322266
    4. '+
' → logprob: -14.326419830322266
    5. '1' → logprob: -14.451419830322266
    6. ')+' → logprob: -14.451419830322266
    7. '):
' → logprob: -15.076419830322266
    8. ')' → logprob: -15.451419830322266
    9. ' +
' → logprob: -15.576419830322266
    10. ',' → logprob: -15.701419830322266

Token 855: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.375059127807617
    4. '  ' → logprob: -19.375059127807617
    5. '
' → logprob: -19.750059127807617
    6. ')' → logprob: -19.750059127807617
    7. '１' → logprob: -19.875059127807617
    8. ' ' → logprob: -20.250059127807617
    9. '```' → logprob: -20.250059127807617
    10. '    ' → logprob: -20.500059127807617

Token 856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.875003814697266
    4. '
' → logprob: -19.375003814697266
    5. '```' → logprob: -20.250003814697266
    6. '  ' → logprob: -20.375003814697266
    7. '0' → logprob: -20.500003814697266
    8. '１' → logprob: -20.937503814697266
    9. '    ' → logprob: -21.437503814697266
    10. '2' → logprob: -21.875003814697266

Token 857: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2523406147956848
    2. '):' → logprob: -1.50234055519104
    3. '):
' → logprob: -8.377340316772461
    4. '   ' → logprob: -9.127340316772461
    5. ':' → logprob: -9.877340316772461
    6. ')' → logprob: -11.252340316772461
    7. ':
' → logprob: -12.627340316772461
    8. '       ' → logprob: -13.127340316772461
    9. '):

' → logprob: -13.752340316772461
    10. ' ):
' → logprob: -14.127340316772461

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03923210874199867
    2. '   ' → logprob: -3.289232015609741
    3. '	   ' → logprob: -7.78923225402832
    4. '	' → logprob: -8.28923225402832
    5. '    ' → logprob: -8.78923225402832
    6. ' ' → logprob: -9.41423225402832
    7. '    ' → logprob: -9.41423225402832
    8. '   ' → logprob: -9.91423225402832
    9. ' for' → logprob: -10.03923225402832
    10. ' ' → logprob: -10.53923225402832

Token 859: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19705034792423248
    2. '   ' → logprob: -1.9470503330230713
    3. ' for' → logprob: -3.4470503330230713
    4. 'if' (adapté à ' if') → logprob: -5.69705057144165
    5. '       ' → logprob: -7.82205057144165
    6. '	for' → logprob: -7.94705057144165
    7. ' if' → logprob: -8.572050094604492
    8. '   ' → logprob: -11.822050094604492
    9. ' ' → logprob: -12.322050094604492
    10. '	if' → logprob: -12.572050094604492

Token 860: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.704273118884885e-07
    2. ' dp' → logprob: -14.500000953674316
    3. '	dp' → logprob: -16.625
    4. 'd' → logprob: -17.75
    5. '   ' → logprob: -18.875
    6. '(dp' → logprob: -19.375
    7. '_dp' → logprob: -20.875
    8. '0' → logprob: -21.125
    9. '
' → logprob: -21.25
    10. 'i' → logprob: -21.875

Token 861: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. '[
' → logprob: -15.500000953674316
    4. ' [' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.125001907348633
    6. '```' → logprob: -16.750001907348633
    7. '
' → logprob: -17.500001907348633
    8. '[I' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '[j' → logprob: -19.750001907348633

Token 862: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2008451670408249
    2. ' !=' → logprob: -2.325845241546631
    3. '==' → logprob: -2.700845241546631
    4. '<' → logprob: -5.200845241546631
    5. ' ==' → logprob: -5.325845241546631
    6. ']' → logprob: -5.450845241546631
    7. ']!=' → logprob: -6.950845241546631
    8. ')' → logprob: -7.325845241546631
    9. ' <' → logprob: -7.950845241546631
    10. ']==' → logprob: -8.825844764709473

Token 863: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.30957940220832825
    2. '==' → logprob: -1.9345793724060059
    3. '<' → logprob: -2.309579372406006
    4. ' !=' → logprob: -4.184579372406006
    5. ' ==' → logprob: -5.059579372406006
    6. ' <' → logprob: -7.059579372406006
    7. '>=' → logprob: -11.434579849243164
    8. 'import' → logprob: -12.809579849243164
    9. '[' → logprob: -13.809579849243164
    10. ' ' → logprob: -14.059579849243164

Token 864: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.05832492932677269
    2. '10' → logprob: -3.4333248138427734
    3. 'sys' → logprob: -3.9333248138427734
    4. 'IN' → logprob: -6.308324813842773
    5. 'float' → logprob: -6.433324813842773
    6. 'inf' → logprob: -7.808324813842773
    7. '1' → logprob: -8.558324813842773
    8. '100' → logprob: -8.933324813842773
    9. ' ' → logprob: -9.433324813842773
    10. '0' → logprob: -9.683324813842773

Token 865: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04078292101621628
    2. '           ' → logprob: -3.665782928466797
    3. ':
' → logprob: -4.540782928466797
    4. '       ' → logprob: -6.040782928466797
    5. 'continue' → logprob: -7.540782928466797
    6. ' continue' → logprob: -8.415782928466797
    7. '               ' → logprob: -8.665782928466797
    8. ' or' → logprob: -9.040782928466797
    9. '   ' → logprob: -9.290782928466797
    10. '	continue' → logprob: -9.290782928466797

Token 866: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12875688076019287
    2. ':' → logprob: -2.1287569999694824
    3. ' continue' → logprob: -7.378756999969482
    4. ':
' → logprob: -7.628756999969482
    5. '		' → logprob: -8.253756523132324
    6. '       ' → logprob: -8.628756523132324
    7. 'continue' → logprob: -9.003756523132324
    8. '               ' → logprob: -10.128756523132324
    9. '	       ' → logprob: -10.503756523132324
    10. '	continue' → logprob: -10.753756523132324

Token 867: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2558450698852539
    2. ' continue' → logprob: -1.505845069885254
    3. '           ' → logprob: -5.630845069885254
    4. '	continue' → logprob: -8.505845069885254
    5. '               ' → logprob: -9.880845069885254
    6. 'contin' → logprob: -10.380845069885254
    7. '       ' → logprob: -11.130845069885254
    8. '_continue' → logprob: -11.630845069885254
    9. '		' → logprob: -11.755845069885254
    10. '   ' → logprob: -13.005845069885254

Token 868: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017803447553887963
    2. ' for' → logprob: -9.125178337097168
    3. '	' → logprob: -10.875178337097168
    4. 'for' → logprob: -11.125178337097168
    5. '        
' → logprob: -11.250178337097168
    6. '
' → logprob: -11.375178337097168
    7. '   ' → logprob: -12.250178337097168
    8. '           ' → logprob: -13.000178337097168
    9. '	for' → logprob: -13.625178337097168
    10. '	   ' → logprob: -14.125178337097168

Token 869: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5080621242523193
    2. '   ' → logprob: -1.6330621242523193
    3. '
' → logprob: -2.0080621242523193
    4. '    
' → logprob: -3.7580621242523193
    5. '        
' → logprob: -4.383062362670898
    6. ' for' → logprob: -4.508062362670898
    7. 'for' → logprob: -4.633062362670898
    8. '	' → logprob: -6.133062362670898
    9. ' 
' → logprob: -6.258062362670898
    10. '	for' → logprob: -6.258062362670898

Token 870: ' impossible' (ID: 19786)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39352864027023315
    2. 'continue' → logprob: -1.518528699874878
    3. 'for' → logprob: -3.143528699874878
    4. ' continue' → logprob: -3.268528699874878
    5. '   ' → logprob: -3.893528699874878
    6. ' for' → logprob: -5.518528461456299
    7. '           ' → logprob: -8.643528938293457
    8. '   ' → logprob: -8.768528938293457
    9. ' ' → logprob: -9.143528938293457
    10. '    ' → logprob: -9.268528938293457

Token 871: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025037277373485267
    2. ' for' → logprob: -9.125250816345215
    3. 'for' → logprob: -9.750250816345215
    4. '        
' → logprob: -10.000250816345215
    5. '	' → logprob: -11.125250816345215
    6. '           ' → logprob: -12.000250816345215
    7. '	   ' → logprob: -12.750250816345215
    8. '
' → logprob: -13.000250816345215
    9. '   ' → logprob: -13.000250816345215
    10. '    ' → logprob: -13.375250816345215

Token 872: ''' (ID: 6)
  Prédit: ''obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.1628093272447586
    2. ''avoir' → logprob: -2.287809371948242
    3. ''aller' → logprob: -4.662809371948242
    4. 'e' → logprob: -4.787809371948242
    5. ''être' → logprob: -5.162809371948242
    6. '’obtenir' → logprob: -5.287809371948242
    7. ' atteindre' → logprob: -5.537809371948242
    8. ' obtenir' → logprob: -6.037809371948242
    9. ''' → logprob: -6.412809371948242
    10. ''utiliser' → logprob: -6.787809371948242

Token 873: 'atte' (ID: 23975)
  Prédit: 'atte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.02241806872189045
    2. 'ob' → logprob: -4.022418022155762
    3. 'acheter' → logprob: -5.897418022155762
    4. 'i' → logprob: -8.272418022155762
    5. 'avoir' → logprob: -8.522418022155762
    6. 'at' → logprob: -8.647418022155762
    7. 'ach' → logprob: -8.897418022155762
    8. ' atteindre' → logprob: -9.022418022155762
    9. '#' → logprob: -9.647418022155762
    10. 're' → logprob: -9.772418022155762

Token 874: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.06390464305877686
    2. 'i' → logprob: -3.3139047622680664
    3. 'e' → logprob: -4.438904762268066
    4. 'endre' → logprob: -4.438904762268066
    5. 'inder' → logprob: -7.063904762268066
    6. 'a' → logprob: -7.688904762268066
    7. '   ' → logprob: -9.188904762268066
    8. '       ' → logprob: -9.438904762268066
    9. 'ind' → logprob: -9.438904762268066
    10. 'er' → logprob: -10.438904762268066

Token 875: ' cette' (ID: 7696)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27389413118362427
    2. ' i' → logprob: -1.6488940715789795
    3. '       ' → logprob: -3.1488940715789795
    4. '```' → logprob: -6.648894309997559
    5. '[i' → logprob: -7.273894309997559
    6. '   ' → logprob: -7.648894309997559
    7. '           ' → logprob: -7.648894309997559
    8. '(i' → logprob: -8.023894309997559
    9. '        
' → logprob: -8.523894309997559
    10. ' 
' → logprob: -8.648894309997559

Token 876: ' quantité' (ID: 89219)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.012982916086912155
    2. ' quantité' → logprob: -4.3879828453063965
    3. 'i' → logprob: -8.512983322143555
    4. 'quantity' → logprob: -8.887983322143555
    5. 'position' → logprob: -9.512983322143555
    6. '   ' → logprob: -10.762983322143555
    7. ' quant' → logprob: -11.262983322143555
    8. 'val' → logprob: -11.887983322143555
    9. 'ét' → logprob: -12.512983322143555
    10. ' i' → logprob: -13.012983322143555

Token 877: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03211405500769615
    2. '   ' → logprob: -3.782114028930664
    3. ' for' → logprob: -5.782114028930664
    4. '	' → logprob: -6.282114028930664
    5. '        
' → logprob: -6.782114028930664
    6. '    
' → logprob: -7.407114028930664
    7. '
' → logprob: -7.782114028930664
    8. '	for' → logprob: -8.157114028930664
    9. 'for' → logprob: -8.157114028930664
    10. ' ' → logprob: -9.032114028930664

Token 878: ' ign' (ID: 8769)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007889019907452166
    2. '
' → logprob: -8.625788688659668
    3. '        
' → logprob: -8.625788688659668
    4. '           ' → logprob: -8.875788688659668
    5. '	' → logprob: -9.375788688659668
    6. ' ' → logprob: -9.625788688659668
    7. '   ' → logprob: -10.250788688659668
    8. '    ' → logprob: -10.875788688659668
    9. ' 
' → logprob: -11.375788688659668
    10. ' continue' → logprob: -11.500788688659668

Token 879: 'orer' (ID: 13634)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -0.1602879911661148
    2. 'orer' → logprob: -1.9102879762649536
    3. 'or' → logprob: -10.660287857055664
    4. 'оре' → logprob: -11.285287857055664
    5. 'o' → logprob: -12.035287857055664
    6. 'n' → logprob: -12.410287857055664
    7. 'orera' → logprob: -12.660287857055664
    8. 'ORE' → logprob: -12.660287857055664
    9. 'oree' → logprob: -13.160287857055664
    10. '```' → logprob: -13.285287857055664

Token 880: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007842566701583564
    2. '        
' → logprob: -7.875784397125244
    3. '
' → logprob: -8.250783920288086
    4. ' for' → logprob: -9.375783920288086
    5. '   ' → logprob: -10.875783920288086
    6. '	' → logprob: -11.125783920288086
    7. 'for' → logprob: -11.625783920288086
    8. '           ' → logprob: -12.875783920288086
    9. '    
' → logprob: -12.875783920288086
    10. '       
' → logprob: -13.500783920288086

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017013642936944962
    2. '	' → logprob: -6.876701354980469
    3. ' for' → logprob: -8.126701354980469
    4. '   ' → logprob: -8.126701354980469
    5. '	   ' → logprob: -10.876701354980469
    6. '           ' → logprob: -11.501701354980469
    7. '	for' → logprob: -11.501701354980469
    8. '        
' → logprob: -12.126701354980469
    9. '    ' → logprob: -12.251701354980469
    10. 'for' → logprob: -12.626701354980469

Token 882: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01696315035223961
    2. '   ' → logprob: -4.516963005065918
    3. ' for' → logprob: -5.266963005065918
    4. '       ' → logprob: -7.266963005065918
    5. '	for' → logprob: -10.141963005065918
    6. ' ' → logprob: -14.391963005065918
    7. '  ' → logprob: -16.016963958740234
    8. '   ' → logprob: -16.016963958740234
    9. '	' → logprob: -16.141963958740234
    10. '    ' → logprob: -16.766963958740234

Token 883: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.004088966641575098
    2. ' shop' → logprob: -5.504088878631592
    3. 'key' → logprob: -12.12908935546875
    4. 'store' → logprob: -12.50408935546875
    5. 's' → logprob: -14.37908935546875
    6. '(shop' → logprob: -15.12908935546875
    7. '_shop' → logprob: -16.37908935546875
    8. 'Shop' → logprob: -16.37908935546875
    9. 'shops' → logprob: -16.75408935546875
    10. 'sh' → logprob: -16.87908935546875

Token 884: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.00046272401232272387
    2. '_' → logprob: -8.250462532043457
    3. ' in' → logprob: -8.750462532043457
    4. 'Key' → logprob: -10.375462532043457
    5. 'key' → logprob: -11.875462532043457
    6. 'in' → logprob: -13.875462532043457
    7. ' _' → logprob: -14.250462532043457
    8. 's' → logprob: -14.500462532043457
    9. '_keys' → logprob: -14.500462532043457
    10. '_in' → logprob: -14.625462532043457

Token 885: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10028915852308273
    2. 'in' → logprob: -2.3502891063690186
    3. ',' → logprob: -9.600289344787598
    4. '	in' → logprob: -12.100289344787598
    5. ' ,' → logprob: -12.350289344787598
    6. ' ' → logprob: -12.600289344787598
    7. ',in' → logprob: -15.225289344787598
    8. 's' → logprob: -15.475289344787598
    9. '    ' → logprob: -15.725289344787598
    10. '  ' → logprob: -15.850289344787598

Token 886: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.016247263178229332
    2. '['' → logprob: -4.141247272491455
    3. ' shops' → logprob: -8.641246795654297
    4. ' ['' → logprob: -10.641246795654297
    5. 'shop' → logprob: -12.391246795654297
    6. ''s' → logprob: -13.141246795654297
    7. '["' → logprob: -13.266246795654297
    8. ''' → logprob: -13.516246795654297
    9. '('' → logprob: -13.516246795654297
    10. 'ships' → logprob: -14.141246795654297

Token 887: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07826253026723862
    2. ':
' → logprob: -3.3282625675201416
    3. '.keys' → logprob: -4.3282623291015625
    4. ' :' → logprob: -5.3282623291015625
    5. '   ' → logprob: -5.3282623291015625
    6. ' in' → logprob: -5.3282623291015625
    7. ',' → logprob: -6.2032623291015625
    8. '<|end|>' → logprob: -6.5782623291015625
    9. '):' → logprob: -6.7032623291015625
    10. '.' → logprob: -6.8282623291015625

Token 888: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014529433101415634
    2. ' bags' → logprob: -5.764529228210449
    3. ' sacs' → logprob: -6.389529228210449
    4. '       ' → logprob: -6.389529228210449
    5. 'bags' → logprob: -6.389529228210449
    6. ' amount' → logprob: -6.514529228210449
    7. ' s' → logprob: -6.764529228210449
    8. 'amount' → logprob: -7.014529228210449
    9. ' shop' → logprob: -7.014529228210449
    10. ' for' → logprob: -7.889529228210449

Token 889: ' s' (ID: 265)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.5534591674804688
    2. ' shop' → logprob: -0.9284591674804688
    3. '           ' → logprob: -4.678459167480469
    4. 'amount' → logprob: -4.803459167480469
    5. 's' (adapté à ' s') → logprob: -6.053459167480469
    6. ' amount' → logprob: -6.428459167480469
    7. ' sac' → logprob: -6.678459167480469
    8. 'price' → logprob: -6.928459167480469
    9. '   ' → logprob: -7.178459167480469
    10. '       ' → logprob: -7.303459167480469

Token 890: ' =' (ID: 314)
  Prédit: 'hop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hop' → logprob: -0.03623662143945694
    2. ' =' → logprob: -3.536236524581909
    3. '=' → logprob: -5.911236763000488
    4. '_amount' → logprob: -6.786236763000488
    5. 'shop' → logprob: -7.411236763000488
    6. '_shop' → logprob: -7.411236763000488
    7. '   ' → logprob: -7.786236763000488
    8. 'amount' → logprob: -8.286236763000488
    9. 'h' → logprob: -8.536236763000488
    10. 'ize' → logprob: -8.536236763000488

Token 891: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.0009525521309114993
    2. ' shops' → logprob: -7.00095272064209
    3. '   ' → logprob: -11.25095272064209
    4. 'sh' → logprob: -11.75095272064209
    5. 'ships' → logprob: -12.25095272064209
    6. 's' → logprob: -12.25095272064209
    7. 'shop' → logprob: -12.25095272064209
    8. 'h' → logprob: -13.37595272064209
    9. 'stores' → logprob: -14.25095272064209
    10. ' ' → logprob: -14.75095272064209

Token 892: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. 'shop' → logprob: -13.375001907348633
    3. '[s' → logprob: -15.250001907348633
    4. ' [' → logprob: -16.125001907348633
    5. '][' → logprob: -17.000001907348633
    6. '(shop' → logprob: -17.250001907348633
    7. '```' → logprob: -17.625001907348633
    8. '#' → logprob: -17.625001907348633
    9. '[
' → logprob: -17.750001907348633
    10. 's' → logprob: -17.875001907348633

Token 893: 'shop' (ID: 10595)
  Prédit: 'shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -2.2200749754119897e-06
    2. ' shop' → logprob: -13.375001907348633
    3. '(shop' → logprob: -15.125001907348633
    4. '[' → logprob: -15.750001907348633
    5. 'hop' → logprob: -16.375001907348633
    6. '_shop' → logprob: -17.625001907348633
    7. 'ship' → logprob: -18.125001907348633
    8. 's' → logprob: -18.750001907348633
    9. 'shops' → logprob: -18.875001907348633
    10. '.shop' → logprob: -19.000001907348633

Token 894: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.029854966327548027
    2. 'shop' → logprob: -3.5298550128936768
    3. '[' → logprob: -9.904854774475098
    4. 'key' → logprob: -10.029854774475098
    5. '_shop' → logprob: -12.279854774475098
    6. 'Key' → logprob: -12.654854774475098
    7. ' shop' → logprob: -13.404854774475098
    8. '(shop' → logprob: -14.529854774475098
    9. 's' → logprob: -15.654854774475098
    10. '][' → logprob: -15.779854774475098

Token 895: ']
' (ID: 1592)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.000343210413120687
    2. '']['' → logprob: -8.500343322753906
    3. ''' → logprob: -10.125343322753906
    4. ']' → logprob: -10.125343322753906
    5. '['' → logprob: -10.875343322753906
    6. ']'' → logprob: -11.375343322753906
    7. '']' → logprob: -11.750343322753906
    8. ']["' → logprob: -12.250343322753906
    9. ''s' → logprob: -12.375343322753906
    10. ' ]' → logprob: -12.750343322753906

Token 896: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08101143687963486
    2. '               ' → logprob: -3.0810115337371826
    3. ' quantity' → logprob: -4.4560112953186035
    4. ' if' → logprob: -5.4560112953186035
    5. '            
' → logprob: -5.4560112953186035
    6. ' amount' → logprob: -5.8310112953186035
    7. ' for' → logprob: -6.0810112953186035
    8. 'amount' → logprob: -6.4560112953186035
    9. ',' → logprob: -6.7060112953186035
    10. 'quantity' → logprob: -6.7060112953186035

Token 897: ' next' (ID: 2613)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7378767132759094
    2. 'next' (adapté à ' next') → logprob: -0.9878767132759094
    3. 'qty' → logprob: -2.2378766536712646
    4. 'q' → logprob: -3.6128766536712646
    5. 'quantity' → logprob: -5.737876892089844
    6. 'quant' → logprob: -5.737876892089844
    7. 'weight' → logprob: -5.987876892089844
    8. 'bags' → logprob: -6.112876892089844
    9. 'bag' → logprob: -6.487876892089844
    10. 'n' → logprob: -7.362876892089844

Token 898: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.057272933423519135
    2. '_amt' → logprob: -3.8072729110717773
    3. '_qty' → logprob: -4.057272911071777
    4. '_quantity' → logprob: -4.182272911071777
    5. '_i' → logprob: -7.432272911071777
    6. '量' → logprob: -9.057272911071777
    7. '_quant' → logprob: -9.557272911071777
    8. '_' → logprob: -10.182272911071777
    9. '_q' → logprob: -10.807272911071777
    10. '_weight' → logprob: -11.057272911071777

Token 899: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196925416588783
    2. ' =' → logprob: -2.81196928024292
    3. '=i' → logprob: -13.561968803405762
    4. '=
' → logprob: -15.811968803405762
    5. '＝' → logprob: -16.811969757080078
    6. '```' → logprob: -17.686969757080078
    7. '   ' → logprob: -18.061969757080078
    8. ' ' → logprob: -18.186969757080078
    9. 's' → logprob: -18.311969757080078
    10. '    ' → logprob: -18.686969757080078

Token 900: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006715967319905758
    2. ' i' → logprob: -5.006715774536133
    3. '           ' → logprob: -14.631715774536133
    4. '	i' → logprob: -16.006715774536133
    5. '   ' → logprob: -16.756715774536133
    6. '```' → logprob: -19.256715774536133
    7. '{i' → logprob: -19.381715774536133
    8. '               ' → logprob: -19.381715774536133
    9. '=i' → logprob: -19.506715774536133
    10. ')i' → logprob: -19.881715774536133

Token 901: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6945662498474121
    2. ' +' → logprob: -0.6945662498474121
    3. '+s' → logprob: -6.569566249847412
    4. '+
' → logprob: -12.19456672668457
    5. 's' → logprob: -12.44456672668457
    6. '+i' → logprob: -12.69456672668457
    7. ' +
' → logprob: -13.56956672668457
    8. ' s' → logprob: -14.31956672668457
    9. '+=' → logprob: -15.06956672668457
    10. '<|end|>' → logprob: -15.19456672668457

Token 902: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001584850688232109
    2. ' s' → logprob: -8.750158309936523
    3. 'shop' → logprob: -18.000158309936523
    4. 'shops' → logprob: -19.125158309936523
    5. '   ' → logprob: -19.750158309936523
    6. '	s' → logprob: -20.750158309936523
    7. '`s' → logprob: -20.750158309936523
    8. '           ' → logprob: -21.375158309936523
    9. '_s' → logprob: -21.625158309936523
    10. '{s' → logprob: -21.625158309936523

Token 903: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00014847563579678535
    2. ''s' → logprob: -8.87514877319336
    3. ''' → logprob: -12.50014877319336
    4. '[' → logprob: -12.62514877319336
    5. 'amount' → logprob: -15.00014877319336
    6. '["' → logprob: -15.50014877319336
    7. '[
' → logprob: -15.50014877319336
    8. ']['' → logprob: -15.75014877319336
    9. ' ['' → logprob: -16.37514877319336
    10. '{'' → logprob: -16.50014877319336

Token 904: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -8.888114098226652e-05
    2. ''' → logprob: -9.375088691711426
    3. '['' → logprob: -12.875088691711426
    4. ' amount' → logprob: -14.250088691711426
    5. ''s' → logprob: -14.625088691711426
    6. ''am' → logprob: -15.250088691711426
    7. '   ' → logprob: -17.375089645385742
    8. ''m' → logprob: -17.625089645385742
    9. '.amount' → logprob: -18.250089645385742
    10. '_amount' → logprob: -18.375089645385742

Token 905: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.053073786199092865
    2. ']' → logprob: -3.6780738830566406
    3. '']
' → logprob: -3.6780738830566406
    4. ']
' → logprob: -7.428073883056641
    5. '<|end|>' → logprob: -8.30307388305664
    6. '           ' → logprob: -8.67807388305664
    7. '"]' → logprob: -9.80307388305664
    8. '']
' → logprob: -10.92807388305664
    9. '       ' → logprob: -11.17807388305664
    10. '<|end|>' → logprob: -11.92807388305664

Token 906: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001389400800690055
    2. '            
' → logprob: -7.376389503479004
    3. ' if' → logprob: -8.126389503479004
    4. '<|end|>' → logprob: -8.626389503479004
    5. '		' → logprob: -9.501389503479004
    6. 'if' → logprob: -9.626389503479004
    7. '<|end|>' → logprob: -9.876389503479004
    8. '	       ' → logprob: -11.001389503479004
    9. '          ' → logprob: -11.626389503479004
    10. '               ' → logprob: -11.626389503479004

Token 907: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9583485722541809
    2. ' if' → logprob: -0.9583485722541809
    3. '           ' → logprob: -1.4583485126495361
    4. '		' → logprob: -8.958348274230957
    5. '	if' → logprob: -9.458348274230957
    6. '            
' → logprob: -9.583348274230957
    7. '               ' → logprob: -10.708348274230957
    8. ' ' → logprob: -11.958348274230957
    9. '	       ' → logprob: -12.208348274230957
    10. '            ' → logprob: -12.708348274230957

Token 908: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.25193047523498535
    2. ' next' → logprob: -1.5019304752349854
    3. '	next' → logprob: -14.251930236816406
    4. '(next' → logprob: -14.876930236816406
    5. '   ' → logprob: -16.626930236816406
    6. '0' → logprob: -16.751930236816406
    7. '[next' → logprob: -16.876930236816406
    8. 'n' → logprob: -17.251930236816406
    9. ' ' → logprob: -17.501930236816406
    10. ' nex' → logprob: -17.626930236816406

Token 909: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -1.2664456789934775e-06
    2. 'amount' → logprob: -14.500000953674316
    3. '_AMOUNT' → logprob: -15.500000953674316
    4. '_amt' → logprob: -15.625000953674316
    5. '_' → logprob: -15.750000953674316
    6. '_am' → logprob: -16.750001907348633
    7. '<=' → logprob: -17.625001907348633
    8. '```' → logprob: -17.750001907348633
    9. '_a' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.125001907348633

Token 910: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.06197093799710274
    2. ' <=' → logprob: -2.8119709491729736
    3. ')<=' → logprob: -13.311970710754395
    4. ']<=' → logprob: -14.061970710754395
    5. '>' → logprob: -15.061970710754395
    6. '<' → logprob: -15.811970710754395
    7. '```' → logprob: -16.06197166442871
    8. '<|end|>' → logprob: -16.56197166442871
    9. ')' → logprob: -16.68697166442871
    10. 'le' → logprob: -17.31197166442871

Token 911: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.048587486147880554
    2. ' amount' → logprob: -3.0485875606536865
    3. '(amount' → logprob: -17.298587799072266
    4. '   ' → logprob: -17.423587799072266
    5. '_amount' → logprob: -19.048587799072266
    6. ' ' → logprob: -19.048587799072266
    7. 'Amount' → logprob: -19.298587799072266
    8. 'am' → logprob: -19.423587799072266
    9. '.amount' → logprob: -19.673587799072266
    10. ' amounts' → logprob: -19.673587799072266

Token 912: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46917322278022766
    2. ':' → logprob: -1.3441731929779053
    3. ' and' → logprob: -2.2191731929779053
    4. '               ' → logprob: -5.844173431396484
    5. 'and' → logprob: -6.969173431396484
    6. '           ' → logprob: -6.969173431396484
    7. ':
' → logprob: -9.844173431396484
    8. '                   ' → logprob: -10.344173431396484
    9. '):
' → logprob: -10.469173431396484
    10. ',' → logprob: -10.719173431396484

Token 913: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10802088677883148
    2. ':' → logprob: -2.483020782470703
    3. ' and' → logprob: -4.858020782470703
    4. ':
' → logprob: -4.858020782470703
    5. '           ' → logprob: -7.233020782470703
    6. '<|end|>' → logprob: -7.358020782470703
    7. ',' → logprob: -7.858020782470703
    8. ' :' → logprob: -7.858020782470703
    9. '```' → logprob: -8.733020782470703
    10. '                       ' → logprob: -8.983020782470703

Token 914: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7338266968727112
    2. 'new' → logprob: -0.9838266968727112
    3. 'dp' → logprob: -3.2338266372680664
    4. ' new' → logprob: -3.6088266372680664
    5. 'current' → logprob: -3.6088266372680664
    6. ' cost' → logprob: -4.108826637268066
    7. '               ' → logprob: -4.483826637268066
    8. '                   ' → logprob: -4.483826637268066
    9. 'price' → logprob: -4.983826637268066
    10. ' dp' → logprob: -6.233826637268066

Token 915: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5260949730873108
    2. 'new' → logprob: -1.526094913482666
    3. 'cost' → logprob: -1.776094913482666
    4. '                   ' → logprob: -5.026094913482666
    5. 'current' → logprob: -5.276094913482666
    6. ' dp' → logprob: -6.026094913482666
    7. '               ' → logprob: -6.026094913482666
    8. ' new' → logprob: -6.526094913482666
    9. ' cost' → logprob: -7.151094913482666
    10. 'price' → logprob: -7.151094913482666

Token 916: ' doit' (ID: 21822)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.30373308062553406
    2. '               ' → logprob: -2.8037331104278564
    3. ' cost' → logprob: -3.0537331104278564
    4. '_cost' → logprob: -3.1787331104278564
    5. '                   ' → logprob: -3.4287331104278564
    6. 'co' → logprob: -4.178732872009277
    7. ' coûte' → logprob: -4.553732872009277
    8. 'new' → logprob: -4.803732872009277
    9. 'next' → logprob: -5.178732872009277
    10. 'if' → logprob: -5.553732872009277

Token 917: ' connaitre' (ID: 179435)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3777502179145813
    2. 'min' → logprob: -1.6277501583099365
    3. 'mettre' → logprob: -3.5027501583099365
    4. 'update' → logprob: -3.6277501583099365
    5. ' dp' → logprob: -4.752750396728516
    6. 'cost' → logprob: -4.752750396728516
    7. 'v' → logprob: -4.877750396728516
    8. '           ' → logprob: -5.627750396728516
    9. '               ' → logprob: -5.627750396728516
    10. 'voir' → logprob: -5.877750396728516

Token 918: ' combien' (ID: 106648)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5719849467277527
    2. ' le' → logprob: -1.5719850063323975
    3. 'dp' → logprob: -1.8219850063323975
    4. ' if' → logprob: -3.8219850063323975
    5. 'la' → logprob: -4.321984767913818
    6. ' dp' → logprob: -4.696984767913818
    7. '               ' → logprob: -5.321984767913818
    8. ' la' → logprob: -5.321984767913818
    9. 'if' → logprob: -5.321984767913818
    10. '                   ' → logprob: -6.446984767913818

Token 919: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6422477960586548
    2. ' de' → logprob: -1.0172477960586548
    3. '                   ' → logprob: -3.0172476768493652
    4. '_de' → logprob: -3.2672476768493652
    5. '               ' → logprob: -4.392247676849365
    6. '                ' → logprob: -6.142247676849365
    7. 's' → logprob: -6.642247676849365
    8. '_s' → logprob: -6.767247676849365
    9. '   ' → logprob: -7.267247676849365
    10. '                  ' → logprob: -7.267247676849365

Token 920: ' sacs' (ID: 150414)
  Prédit: 'bags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bags' → logprob: -0.06966138631105423
    2. 's' → logprob: -3.0696613788604736
    3. 'dp' → logprob: -4.444661617279053
    4. 'b' → logprob: -5.944661617279053
    5. ' bags' → logprob: -6.694661617279053
    6. 'next' → logprob: -6.819661617279053
    7. ' sacs' → logprob: -6.944661617279053
    8. 'bag' → logprob: -7.319661617279053
    9. '#' → logprob: -7.944661617279053
    10. 'for' → logprob: -8.069661140441895

Token 921: ' déjà' (ID: 21229)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.6189115047454834
    2. ' on' → logprob: -2.1189115047454834
    3. 'de' → logprob: -2.3689115047454834
    4. 'on' → logprob: -2.3689115047454834
    5. ' ont' → logprob: -2.4939115047454834
    6. 'dp' → logprob: -2.4939115047454834
    7. ' de' → logprob: -3.3689115047454834
    8. 's' → logprob: -3.4939115047454834
    9. 'already' → logprob: -3.4939115047454834
    10. ' we' → logprob: -3.7439115047454834

Token 922: ' ache' (ID: 27427)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.530344843864441
    2. 'ont' → logprob: -1.780344843864441
    3. 's' → logprob: -2.0303449630737305
    4. 'util' → logprob: -2.1553449630737305
    5. 'dp' → logprob: -2.1553449630737305
    6. 'aj' → logprob: -3.5303449630737305
    7. 'acheter' → logprob: -3.6553449630737305
    8. 'ache' → logprob: -3.9053449630737305
    9. ' utilisés' → logprob: -4.0303449630737305
    10. ' acheté' → logprob: -4.1553449630737305

Token 923: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00014072739577386528
    2. 'té' → logprob: -9.000141143798828
    3. 'tent' → logprob: -12.000141143798828
    4. 'tet' → logprob: -13.000141143798828
    5. 'tant' → logprob: -13.625141143798828
    6. 'tes' → logprob: -13.625141143798828
    7. '```' → logprob: -13.750141143798828
    8. '``' → logprob: -13.875141143798828
    9. 'tables' → logprob: -14.250141143798828
    10. 'te' → logprob: -14.375141143798828

Token 924: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0001577698567416519
    2. 'é' → logprob: -8.875157356262207
    3. 'es' → logprob: -11.125157356262207
    4. 'ées' → logprob: -14.000157356262207
    5. '```' → logprob: -14.625157356262207
    6. 's' → logprob: -15.000157356262207
    7. 'nés' → logprob: -15.125157356262207
    8. '   ' → logprob: -15.250157356262207
    9. 'ÉS' → logprob: -15.375157356262207
    10. '       ' → logprob: -15.375157356262207

Token 925: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3058618307113647
    2. 'dp' → logprob: -1.6808618307113647
    3. 'for' → logprob: -1.9308618307113647
    4. 'next' → logprob: -2.4308619499206543
    5. 's' → logprob: -3.1808619499206543
    6. ' afin' → logprob: -3.5558619499206543
    7. '               ' → logprob: -3.6808619499206543
    8. ' for' → logprob: -3.8058619499206543
    9. '.' → logprob: -4.180861949920654
    10. '                   ' → logprob: -4.305861949920654

Token 926: ' cette' (ID: 7696)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6333293914794922
    2. 'next' → logprob: -1.3833293914794922
    3. 'la' → logprob: -2.758329391479492
    4. '#' → logprob: -3.258329391479492
    5. 'total' → logprob: -3.883329391479492
    6. 'c' → logprob: -4.133329391479492
    7. 'shop' → logprob: -4.258329391479492
    8. 'le' → logprob: -4.383329391479492
    9. 'current' → logprob: -4.383329391479492
    10. 'l' → logprob: -4.633329391479492

Token 927: ' boutique' (ID: 46148)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.8412668108940125
    2. 'bout' → logprob: -0.9662668108940125
    3. 'shop' → logprob: -3.4662668704986572
    4. 'ligne' → logprob: -3.4662668704986572
    5. 'case' → logprob: -3.9662668704986572
    6. 'solution' → logprob: -4.216266632080078
    7. 'bou' → logprob: -4.341266632080078
    8. 'next' → logprob: -4.591266632080078
    9. 's' → logprob: -5.091266632080078
    10. ' combinaison' → logprob: -5.216266632080078

Token 928: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 929: ' calcul' (ID: 7559)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.5956131815910339
    2. 'next' → logprob: -1.7206132411956787
    3. 'calcul' → logprob: -2.4706132411956787
    4. 'update' → logprob: -2.8456132411956787
    5. '#' → logprob: -2.9706132411956787
    6. 'cost' → logprob: -4.3456130027771
    7. 'calculate' → logprob: -4.3456130027771
    8. 'mise' → logprob: -4.8456130027771
    9. 'le' → logprob: -5.0956130027771
    10. 'compute' → logprob: -5.2206130027771

Token 930: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.3902033970225602e-05
    2. 'uer' → logprob: -12.625014305114746
    3. 'rer' → logprob: -13.125014305114746
    4. '#' → logprob: -13.250014305114746
    5. 'r' → logprob: -13.375014305114746
    6. 'uler' → logprob: -13.875014305114746
    7. '```' → logprob: -14.125014305114746
    8. 'érer' → logprob: -14.500014305114746
    9. 'ate' → logprob: -14.750014305114746
    10. 'dp' → logprob: -15.000014305114746

Token 931: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8598198890686035
    2. ' next' → logprob: -1.7348198890686035
    3. 'next' → logprob: -2.3598198890686035
    4. 'cost' → logprob: -2.7348198890686035
    5. ' le' → logprob: -2.9848198890686035
    6. 'dp' → logprob: -3.1098198890686035
    7. ' dp' → logprob: -3.3598198890686035
    8. '0' → logprob: -4.3598198890686035
    9. ' cost' → logprob: -4.4848198890686035
    10. 'co' → logprob: -4.6098198890686035

Token 932: ' remise' (ID: 96948)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3915303647518158
    2. 'dp' → logprob: -2.2665302753448486
    3. 'new' → logprob: -3.0165302753448486
    4. 'next' → logprob: -3.0165302753448486
    5. ' cost' → logprob: -3.2665302753448486
    6. '#' → logprob: -3.7665302753448486
    7. 'co' → logprob: -4.391530513763428
    8. ' new' → logprob: -4.766530513763428
    9. 'discount' → logprob: -4.891530513763428
    10. ' next' → logprob: -5.016530513763428

Token 933: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02391776628792286
    2. '<|end|>' → logprob: -4.2739176750183105
    3. ',' → logprob: -5.6489176750183105
    4. '                
' → logprob: -6.5239176750183105
    5. '#' → logprob: -6.5239176750183105
    6. '                ' → logprob: -6.7739176750183105
    7. '<|end|>' → logprob: -7.6489176750183105
    8. '...' → logprob: -7.7739176750183105
    9. '                   ' → logprob: -8.648918151855469
    10. ' #' → logprob: -9.023918151855469

Token 934: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3218541145324707
    2. '                   ' → logprob: -2.1968541145324707
    3. ':' → logprob: -2.5718541145324707
    4. '#' → logprob: -4.071854114532471
    5. ' and' → logprob: -4.321854114532471
    6. 'token' → logprob: -4.946854114532471
    7. '```' → logprob: -5.071854114532471
    8. ',' → logprob: -5.321854114532471
    9. '<|end|>' → logprob: -5.571854114532471
    10. ' =' → logprob: -5.696854114532471

Token 935: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2450324445962906
    2. 'pass' → logprob: -1.6200324296951294
    3. ' pass' → logprob: -4.87003231048584
    4. '                   ' → logprob: -5.62003231048584
    5. '               ' → logprob: -5.87003231048584
    6. 'for' → logprob: -6.37003231048584
    7. ' #' → logprob: -7.62003231048584
    8. 'new' → logprob: -7.74503231048584
    9. 'bags' → logprob: -7.74503231048584
    10. 'next' → logprob: -8.12003231048584

Token 936: ' Mais' (ID: 13880)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23903575539588928
    2. '               ' → logprob: -1.614035725593567
    3. 'pass' → logprob: -4.614035606384277
    4. ' #' → logprob: -7.239035606384277
    5. 'token' → logprob: -7.614035606384277
    6. 'for' → logprob: -7.864035606384277
    7. ' pass' → logprob: -7.989035606384277
    8. 'tokens' → logprob: -8.364035606384277
    9. '                   ' → logprob: -8.614035606384277
    10. 'new' → logprob: -9.489035606384277

Token 937: ' ici' (ID: 27994)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03787059709429741
    2. 'pass' → logprob: -3.7878706455230713
    3. ' #' → logprob: -5.662870407104492
    4. 'continue' → logprob: -5.787870407104492
    5. '               ' → logprob: -6.412870407104492
    6. 'for' → logprob: -6.662870407104492
    7. '...' → logprob: -6.912870407104492
    8. '                   ' → logprob: -7.162870407104492
    9. 'dp' → logprob: -8.037870407104492
    10. ' continue' → logprob: -8.037870407104492

Token 938: ' dp' (ID: 21546)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12745873630046844
    2. '#' → logprob: -3.0024588108062744
    3. '               ' → logprob: -3.3774588108062744
    4. ' on' → logprob: -4.752458572387695
    5. ':' → logprob: -4.877458572387695
    6. '...' → logprob: -6.002458572387695
    7. '                   ' → logprob: -6.252458572387695
    8. '<|end|>' → logprob: -6.377458572387695
    9. '           ' → logprob: -6.752458572387695
    10. ' ,' → logprob: -7.002458572387695

Token 939: ' est' (ID: 893)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.004373155999928713
    2. 'next' → logprob: -7.379373073577881
    3. '_next' → logprob: -7.504373073577881
    4. '[' → logprob: -7.504373073577881
    5. ' is' → logprob: -8.129373550415039
    6. '_cost' → logprob: -8.254373550415039
    7. ' next' → logprob: -8.754373550415039
    8. 'cost' → logprob: -8.754373550415039
    9. '```' → logprob: -8.754373550415039
    10. ' does' → logprob: -8.879373550415039

Token 940: ' global' (ID: 5466)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1857365369796753
    2. 'un' → logprob: -1.8107365369796753
    3. '[' → logprob: -2.185736656188965
    4. ' une' → logprob: -2.560736656188965
    5. ' juste' → logprob: -2.810736656188965
    6. ' seulement' → logprob: -2.810736656188965
    7. 'just' → logprob: -2.935736656188965
    8. ' uniquement' → logprob: -3.060736656188965
    9. 'uni' → logprob: -3.435736656188965
    10. ' un' → logprob: -3.935736656188965

Token 941: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6406766772270203
    2. '<|end|>' → logprob: -1.765676736831665
    3. ',' → logprob: -2.515676736831665
    4. ' :' → logprob: -2.640676736831665
    5. '<|end|>' → logprob: -3.015676736831665
    6. '[' → logprob: -3.640676736831665
    7. '
' → logprob: -4.265676498413086
    8. ' ,' → logprob: -4.640676498413086
    9. ' =' → logprob: -4.640676498413086
    10. ' and' → logprob: -4.890676498413086

Token 942: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13913480937480927
    2. '               ' → logprob: -2.3891348838806152
    3. ' donc' → logprob: -4.139134883880615
    4. 'continue' → logprob: -5.514134883880615
    5. '                   ' → logprob: -5.639134883880615
    6. ' #' → logprob: -5.764134883880615
    7. 'pass' → logprob: -6.139134883880615
    8. ' continue' → logprob: -6.639134883880615
    9. ' ce' → logprob: -6.889134883880615
    10. 'don' → logprob: -7.514134883880615

Token 943: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.7118737101554871
    2. ' n' → logprob: -0.9618737101554871
    3. 'n' → logprob: -2.461873769760132
    4. 'ne' → logprob: -3.836873769760132
    5. ' ignore' → logprob: -5.086873531341553
    6. ' cannot' → logprob: -5.586873531341553
    7. ' a' → logprob: -6.461873531341553
    8. 'n't' → logprob: -6.586873531341553
    9. 'cannot' → logprob: -6.586873531341553
    10. ' continue' → logprob: -6.836873531341553

Token 944: ' connait' (ID: 178481)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.03726528584957123
    2. ' peut' → logprob: -3.5372653007507324
    3. ' peux' → logprob: -6.162265300750732
    4. 'a' → logprob: -6.662265300750732
    5. 'g' → logprob: -7.162265300750732
    6. 'pas' → logprob: -7.162265300750732
    7. '#' → logprob: -7.162265300750732
    8. 's' → logprob: -7.787265300750732
    9. 'dispose' → logprob: -8.287264823913574
    10. 'poss' → logprob: -9.037264823913574

Token 945: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.08973756432533264
    2. ' pas' → logprob: -2.4647376537323
    3. '               ' → logprob: -8.839737892150879
    4. ' que' → logprob: -9.089737892150879
    5. '                   ' → logprob: -9.339737892150879
    6. '           ' → logprob: -9.464737892150879
    7. '		' → logprob: -9.839737892150879
    8. '                       ' → logprob: -10.214737892150879
    9. '```' → logprob: -10.339737892150879
    10. 's' → logprob: -10.964737892150879

Token 946: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5752112865447998
    2. ' la' → logprob: -1.8252112865447998
    3. ' le' → logprob: -2.4502112865448
    4. 'les' → logprob: -3.2002112865448
    5. ' encore' → logprob: -3.5752112865448
    6. 'la' → logprob: -3.8252112865448
    7. 'exact' → logprob: -4.200211524963379
    8. '```' → logprob: -4.575211524963379
    9. ' combien' → logprob: -4.575211524963379
    10. 's' → logprob: -4.825211524963379

Token 947: ' composition' (ID: 27524)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.1320682317018509
    2. 'composition' → logprob: -2.757068157196045
    3. 'comb' → logprob: -3.757068157196045
    4. 'quant' → logprob: -4.507068157196045
    5. ' nombre' → logprob: -4.757068157196045
    6. 's' → logprob: -5.132068157196045
    7. 'number' → logprob: -5.882068157196045
    8. 'state' → logprob: -6.632068157196045
    9. 'nb' → logprob: -7.257068157196045
    10. ' composition' → logprob: -7.632068157196045

Token 948: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2586524486541748
    2. ' des' → logprob: -1.3836524486541748
    3. '.' → logprob: -1.5086524486541748
    4. ' de' → logprob: -2.383652448654175
    5. '_' → logprob: -4.008652687072754
    6. '
' → logprob: -4.008652687072754
    7. ' du' → logprob: -4.008652687072754
    8. ' ,' → logprob: -4.633652687072754
    9. ' _' → logprob: -4.758652687072754
    10. ' complète' → logprob: -5.133652687072754

Token 949: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03561859205365181
    2. '<|end|>' → logprob: -3.785618543624878
    3. '                ' → logprob: -4.785618782043457
    4. '<|end|>' → logprob: -6.535618782043457
    5. '                
' → logprob: -6.785618782043457
    6. '                   ' → logprob: -7.410618782043457
    7. '           ' → logprob: -9.160618782043457
    8. '#' → logprob: -9.785618782043457
    9. '            ' → logprob: -9.785618782043457
    10. ' ' → logprob: -9.910618782043457

Token 950: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6241521835327148
    2. '                ' → logprob: -1.8741521835327148
    3. ' pass' → logprob: -2.374152183532715
    4. '                   ' → logprob: -2.749152183532715
    5. '#' (adapté à ' #') → logprob: -3.124152183532715
    6. ' dp' → logprob: -3.874152183532715
    7. 'dp' → logprob: -3.999152183532715
    8. 'pass' → logprob: -3.999152183532715
    9. ' #' → logprob: -4.249152183532715
    10. ' continue' → logprob: -5.124152183532715

Token 951: ' Donc' (ID: 88837)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3347141444683075
    2. '               ' → logprob: -1.3347141742706299
    3. ' #' → logprob: -5.459713935852051
    4. '                   ' → logprob: -5.459713935852051
    5. 'pass' → logprob: -5.959713935852051
    6. 'for' → logprob: -6.209713935852051
    7. 'dp' → logprob: -6.584713935852051
    8. ' pass' → logprob: -7.209713935852051
    9. 'On' → logprob: -7.584713935852051
    10. ' for' → logprob: -7.709713935852051

Token 952: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2768314778804779
    2. ' on' → logprob: -2.9018313884735107
    3. 'continue' → logprob: -2.9018313884735107
    4. '               ' → logprob: -3.4018313884735107
    5. '                   ' → logprob: -3.7768313884735107
    6. ' continue' → logprob: -4.27683162689209
    7. 'pass' → logprob: -4.40183162689209
    8. ' #' → logprob: -4.65183162689209
    9. 'on' → logprob: -4.90183162689209
    10. ' il' → logprob: -5.02683162689209

Token 953: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6092097163200378
    2. 'ne' → logprob: -2.1092097759246826
    3. ' continue' → logprob: -2.3592097759246826
    4. 'pe' → logprob: -2.3592097759246826
    5. 'do' → logprob: -3.2342097759246826
    6. 'contin' → logprob: -4.2342095375061035
    7. 'dev' → logprob: -4.3592095375061035
    8. ' peut' → logprob: -4.4842095375061035
    9. ' ne' → logprob: -4.6092095375061035
    10. ' suppose' → logprob: -5.2342095375061035

Token 954: ' changer' (ID: 47099)
  Prédit: 'modifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'modifier' → logprob: -0.8906393051147461
    2. 'changer' → logprob: -1.765639305114746
    3. 'penser' → logprob: -2.640639305114746
    4. 're' → logprob: -2.765639305114746
    5. 'aj' → logprob: -3.015639305114746
    6. 'contin' → logprob: -3.140639305114746
    7. 'ré' → logprob: -3.390639305114746
    8. 'impl' → logprob: -4.015639305114746
    9. 'augment' → logprob: -4.265639305114746
    10. 'import' → logprob: -4.515639305114746

Token 955: ' d' (ID: 272)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.22170670330524445
    2. 'la' → logprob: -2.7217066287994385
    3. ' de' → logprob: -2.9717066287994385
    4. 'le' → logprob: -3.4717066287994385
    5. 'de' → logprob: -3.9717066287994385
    6. ' le' → logprob: -4.596706867218018
    7. 'appro' → logprob: -5.346706867218018
    8. 'l' → logprob: -5.471706867218018
    9. 'd' → logprob: -5.596706867218018
    10. ' approach' → logprob: -6.221706867218018

Token 956: ''appro' (ID: 134343)
  Prédit: ''appro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''appro' → logprob: -0.22701917588710785
    2. 'appro' → logprob: -2.4770190715789795
    3. ' approche' → logprob: -2.4770190715789795
    4. 'e' → logprob: -4.852019309997559
    5. ' approach' → logprob: -4.852019309997559
    6. '’appro' → logprob: -5.602019309997559
    7. 'p' → logprob: -5.727019309997559
    8. 'é' → logprob: -6.102019309997559
    9. 'éf' → logprob: -6.227019309997559
    10. 'dp' → logprob: -6.352019309997559

Token 957: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -2.4034345187828876e-05
    2. 'ch' → logprob: -10.75002384185791
    3. 'ach' → logprob: -13.87502384185791
    4. '#' → logprob: -14.37502384185791
    5. 'ache' → logprob: -14.75002384185791
    6. 'ches' → logprob: -15.50002384185791
    7. 'c' → logprob: -15.87502384185791
    8. '_che' → logprob: -16.375024795532227
    9. '```' → logprob: -16.625024795532227
    10. 'ce' → logprob: -16.750024795532227

Token 958: ' :
' (ID: 10039)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: '               ' (ID: 506)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36921584606170654
    2. '               ' → logprob: -1.2442158460617065
    3. ' #' → logprob: -4.869215965270996
    4. '                ' → logprob: -5.619215965270996
    5. 'from' → logprob: -6.119215965270996
    6. '   ' → logprob: -6.869215965270996
    7. '           ' → logprob: -7.119215965270996
    8. ' pass' → logprob: -7.244215965270996
    9. '```' → logprob: -7.244215965270996
    10. 'import' → logprob: -7.369215965270996

Token 960: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.17979320883750916
    2. '               ' → logprob: -1.9297932386398315
    3. ' #' → logprob: -4.679793357849121
    4. '   ' → logprob: -5.929793357849121
    5. '                ' → logprob: -6.554793357849121
    6. 'pass' → logprob: -6.804793357849121
    7. '       ' → logprob: -7.179793357849121
    8. '           ' → logprob: -7.304793357849121
    9. ' pass' → logprob: -7.554793357849121
    10. '                   ' → logprob: -7.554793357849121

Token 961: ' Il' (ID: 5329)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09680675715208054
    2. '               ' → logprob: -2.721806764602661
    3. 'pass' → logprob: -4.721806526184082
    4. 'break' → logprob: -5.346806526184082
    5. 'dp' → logprob: -6.096806526184082
    6. '   ' → logprob: -6.221806526184082
    7. 'from' → logprob: -6.221806526184082
    8. 'import' → logprob: -6.596806526184082
    9. '           ' → logprob: -6.596806526184082
    10. ' #' → logprob: -7.096806526184082

Token 962: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.41048553586006165
    2. '#' → logprob: -2.1604855060577393
    3. ' faudrait' → logprob: -2.1604855060577393
    4. 'f' → logprob: -2.6604855060577393
    5. ' faudra' → logprob: -3.5354855060577393
    6. ' va' → logprob: -6.035485744476318
    7. 'fa' → logprob: -6.035485744476318
    8. '   ' → logprob: -7.285485744476318
    9. ' #' → logprob: -7.910485744476318
    10. ' faud' → logprob: -8.03548526763916

Token 963: ' mém' (ID: 136981)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -1.0468745231628418
    2. 'g' → logprob: -1.5468745231628418
    3. 'prendre' → logprob: -3.046874523162842
    4. 'modifier' → logprob: -3.046874523162842
    5. 'su' → logprob: -3.296874523162842
    6. 'stock' → logprob: -3.421874523162842
    7. 'tr' → logprob: -3.671874523162842
    8. 'changer' → logprob: -3.796874523162842
    9. 'augment' → logprob: -3.796874523162842
    10. 'tracker' → logprob: -3.921874523162842

Token 964: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -8.73314929776825e-05
    2. '[' → logprob: -10.37508773803711
    3. 'orer' → logprob: -10.87508773803711
    4. '
' → logprob: -11.50008773803711
    5. 'oir' → logprob: -11.50008773803711
    6. '#' → logprob: -13.12508773803711
    7. '   ' → logprob: -13.75008773803711
    8. 'ory' → logprob: -13.87508773803711
    9. 'oire' → logprob: -14.00008773803711
    10. 'mor' → logprob: -14.00008773803711

Token 965: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0020033421460539103
    2. 'izer' → logprob: -7.377003192901611
    3. 'er' → logprob: -8.12700366973877
    4. '```' → logprob: -8.12700366973877
    5. 'ize' → logprob: -8.62700366973877
    6. '#' → logprob: -9.12700366973877
    7. 'ise' → logprob: -9.25200366973877
    8. 'ï' → logprob: -9.37700366973877
    9. 'is' → logprob: -10.12700366973877
    10. 'î' → logprob: -10.25200366973877

Token 966: ' pour' (ID: 1930)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -1.0915451049804688
    2. ' non' → logprob: -1.2165451049804688
    3. 'not' → logprob: -1.9665451049804688
    4. ' not' → logprob: -2.3415451049804688
    5. 'la' → logprob: -3.4665451049804688
    6. 'le' → logprob: -3.7165451049804688
    7. ',' → logprob: -4.216545104980469
    8. 'for' → logprob: -4.341545104980469
    9. ' la' → logprob: -4.591545104980469
    10. '#' → logprob: -4.841545104980469

Token 967: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.24477733671665192
    2. ' chaque' → logprob: -1.7447773218154907
    3. 'each' → logprob: -3.3697774410247803
    4. 'ch' → logprob: -5.119777202606201
    5. ' each' → logprob: -7.369777202606201
    6. 'Chaque' → logprob: -7.369777202606201
    7. '#' → logprob: -7.869777202606201
    8. 't' → logprob: -8.99477767944336
    9. 'cada' → logprob: -10.36977767944336
    10. 'every' → logprob: -10.61977767944336

Token 968: ' quantité' (ID: 89219)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.7684882283210754
    2. 'shop' → logprob: -2.3934881687164307
    3. 'ét' → logprob: -2.5184881687164307
    4. '(' → logprob: -2.6434881687164307
    5. 'comb' → logprob: -2.7684881687164307
    6. 'state' → logprob: -3.1434881687164307
    7. 'i' → logprob: -3.1434881687164307
    8. ' état' → logprob: -3.5184881687164307
    9. ' quantité' → logprob: -4.14348840713501
    10. 'dp' → logprob: -4.26848840713501

Token 969: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0655415058135986
    2. ' de' → logprob: -2.3155415058135986
    3. ' et' → logprob: -2.3155415058135986
    4. ' combien' → logprob: -2.9405415058135986
    5. 'de' → logprob: -3.1905415058135986
    6. ' i' → logprob: -3.4405415058135986
    7. 'dp' → logprob: -3.4405415058135986
    8. ',' → logprob: -3.4405415058135986
    9. 'la' → logprob: -3.5655415058135986
    10. 'et' → logprob: -3.8155415058135986

Token 970: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0024728013668209314
    2. ' nombre' → logprob: -6.752472877502441
    3. 'comb' → logprob: -7.002472877502441
    4. 'd' → logprob: -9.002472877502441
    5. '#' → logprob: -9.752472877502441
    6. 'tuple' → logprob: -10.002472877502441
    7. 'co' → logprob: -10.127472877502441
    8. 'minimum' → logprob: -10.377472877502441
    9. 'nom' → logprob: -11.002472877502441
    10. 'composition' → logprob: -11.252472877502441

Token 971: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5009757876396179
    2. ' des' → logprob: -1.3759758472442627
    3. 'de' → logprob: -3.5009758472442627
    4. '   ' → logprob: -3.8759758472442627
    5. 'des' → logprob: -3.8759758472442627
    6. '_des' → logprob: -4.125975608825684
    7. '_de' → logprob: -4.375975608825684
    8. ' of' → logprob: -4.500975608825684
    9. '    ' → logprob: -5.250975608825684
    10. '_of' → logprob: -5.500975608825684

Token 972: ' sacs' (ID: 150414)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1606704741716385
    2. ' sacs' → logprob: -2.035670518875122
    3. 'bags' → logprob: -4.160670280456543
    4. '```' → logprob: -7.160670280456543
    5. 'b' → logprob: -8.410670280456543
    6. ' ' → logprob: -8.785670280456543
    7. 'A' → logprob: -8.910670280456543
    8. 'bag' → logprob: -9.348170280456543
    9. '(' → logprob: -9.473170280456543
    10. '#' → logprob: -9.598170280456543

Token 973: ' par' (ID: 686)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8137025833129883
    2. ' acheté' → logprob: -1.4387025833129883
    3. ' ' → logprob: -2.9387025833129883
    4. ' ache' → logprob: -3.3137025833129883
    5. ',' → logprob: -3.5637025833129883
    6. 's' → logprob: -4.063702583312988
    7. ' des' → logprob: -4.063702583312988
    8. ' par' → logprob: -4.313702583312988
    9. '<|end|>' → logprob: -4.313702583312988
    10. 'de' → logprob: -4.438702583312988

Token 974: ' boutique' (ID: 46148)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.3497660160064697
    2. 'bout' → logprob: -1.2247660160064697
    3. ' shop' → logprob: -8.34976577758789
    4. 'shops' → logprob: -8.34976577758789
    5. ' boutique' → logprob: -8.34976577758789
    6. '
' → logprob: -9.59976577758789
    7. '{
' → logprob: -9.84976577758789
    8. '(shop' → logprob: -9.97476577758789
    9. '```' → logprob: -10.22476577758789
    10. 'Bout' → logprob: -10.34976577758789

Token 975: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8671931028366089
    2. '   ' → logprob: -1.8671931028366089
    3. '               ' → logprob: -2.1171932220458984
    4. 'from' → logprob: -2.1171932220458984
    5. '
' → logprob: -2.7421932220458984
    6. 'import' → logprob: -3.1171932220458984
    7. ' from' → logprob: -4.242193222045898
    8. '           ' → logprob: -4.492193222045898
    9. '<|end|>' → logprob: -4.617193222045898
    10. '...' → logprob: -5.242193222045898

Token 976: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18373841047286987
    2. '<|end|>' → logprob: -1.9337384700775146
    3. '                
' → logprob: -4.8087382316589355
    4. '                ' → logprob: -5.4337382316589355
    5. '[' → logprob: -6.1837382316589355
    6. '
' → logprob: -6.5587382316589355
    7. '<|end|>' → logprob: -6.8087382316589355
    8. '           ' → logprob: -7.1837382316589355
    9. '       ' → logprob: -7.4337382316589355
    10. '```' → logprob: -7.5587382316589355

Token 977: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.23802855610847473
    2. '   ' → logprob: -1.9880285263061523
    3. '               ' → logprob: -2.9880285263061523
    4. 'from' → logprob: -4.238028526306152
    5. 'import' → logprob: -5.113028526306152
    6. 'dp' → logprob: -6.863028526306152
    7. 'pass' → logprob: -7.738028526306152
    8. '           ' → logprob: -7.738028526306152
    9. ' #' → logprob: -7.988028526306152
    10. 'def' → logprob: -8.113028526306152

Token 978: ' Comme' (ID: 53252)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2651917040348053
    2. '   ' → logprob: -2.0151917934417725
    3. '               ' → logprob: -2.7651917934417725
    4. 'from' → logprob: -4.015191555023193
    5. 'import' → logprob: -4.390191555023193
    6. ' #' → logprob: -6.765191555023193
    7. '           ' → logprob: -6.890191555023193
    8. 'def' → logprob: -7.015191555023193
    9. '
' → logprob: -7.515191555023193
    10. '       ' → logprob: -7.515191555023193

Token 979: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7046630382537842
    2. 'le' → logprob: -2.079663038253784
    3. 'cela' → logprob: -2.579663038253784
    4. 'len' → logprob: -3.079663038253784
    5. 'l' → logprob: -3.079663038253784
    6. 'il' → logprob: -3.579663038253784
    7. 'on' → logprob: -3.829663038253784
    8. '#' → logprob: -3.829663038253784
    9. 'une' → logprob: -3.954663038253784
    10. 'c' → logprob: -4.079663276672363

Token 980: ' quantité' (ID: 89219)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.09986744821071625
    2. ' quantité' → logprob: -3.849867343902588
    3. 'amount' → logprob: -4.224867343902588
    4. 'tail' → logprob: -4.599867343902588
    5. 'quantity' → logprob: -4.599867343902588
    6. 'solution' → logprob: -5.224867343902588
    7. 'problem' → logprob: -5.349867343902588
    8. 'lim' → logprob: -5.349867343902588
    9. '#' → logprob: -5.599867343902588
    10. 'cap' → logprob: -5.724867343902588

Token 981: ' max' (ID: 2999)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.6811726093292236
    2. ' n' → logprob: -1.8061726093292236
    3. ' maximale' → logprob: -2.6811726093292236
    4. 'max' → logprob: -2.8061726093292236
    5. 'n' → logprob: -3.0561726093292236
    6. '>' → logprob: -3.1811726093292236
    7. ',' → logprob: -3.3061726093292236
    8. ' dépasse' → logprob: -3.3061726093292236
    9. '<|end|>' → logprob: -3.3061726093292236
    10. ' >' → logprob: -3.5561726093292236

Token 982: ' est' (ID: 893)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8395167589187622
    2. '=' → logprob: -1.8395167589187622
    3. ' is' → logprob: -1.8395167589187622
    4. ' est' → logprob: -2.2145166397094727
    5. 's' → logprob: -2.3395166397094727
    6. 'est' → logprob: -2.9645166397094727
    7. 'n' → logprob: -3.5895166397094727
    8. ' n' → logprob: -3.7145166397094727
    9. ' =' → logprob: -3.8395166397094727
    10. ' s' → logprob: -3.9645166397094727

Token 983: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00017684244085103273
    2. ' ' → logprob: -8.750176429748535
    3. '5' → logprob: -12.500176429748535
    4. 'limit' → logprob: -12.625176429748535
    5. 'import' → logprob: -13.000176429748535
    6. '   ' → logprob: -13.250176429748535
    7. 'small' → logprob: -13.500176429748535
    8. '  ' → logprob: -13.500176429748535
    9. '
' → logprob: -14.000176429748535
    10. 'lim' → logprob: -14.750176429748535

Token 984: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.0001605115394340828
    2. ' ' → logprob: -9.375160217285156
    3. 'rel' → logprob: -10.625160217285156
    4. 'limit' → logprob: -10.875160217285156
    5. 'pl' → logprob: -11.750160217285156
    6. '5' → logprob: -12.125160217285156
    7. 'lim' → logprob: -12.250160217285156
    8. 'asse' → logprob: -12.875160217285156
    9. 'mod' → logprob: -13.000160217285156
    10. 'import' → logprob: -13.875160217285156

Token 985: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.35837464465294e-05
    2. '```' → logprob: -11.375043869018555
    3. '   ' → logprob: -12.000043869018555
    4. '00' → logprob: -12.125043869018555
    5. 'def' → logprob: -12.375043869018555
    6. '1' → logprob: -12.625043869018555
    7. '       ' → logprob: -13.000043869018555
    8. ',' → logprob: -13.250043869018555
    9. '000' → logprob: -13.500043869018555
    10. '[' → logprob: -13.750043869018555

Token 986: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048873256891965866
    2. '               ' → logprob: -3.92387318611145
    3. ',
' → logprob: -4.548873424530029
    4. '#' → logprob: -5.173873424530029
    5. '...' → logprob: -6.048873424530029
    6. ' ,' → logprob: -6.298873424530029
    7. '
' → logprob: -6.298873424530029
    8. 'import' → logprob: -6.548873424530029
    9. 'def' → logprob: -6.923873424530029
    10. '   ' → logprob: -7.298873424530029

Token 987: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.5069814920425415
    2. '#' → logprob: -1.6319814920425415
    3. ' on' → logprob: -1.6319814920425415
    4. ' continue' → logprob: -2.506981372833252
    5. '               ' → logprob: -3.131981372833252
    6. '                   ' → logprob: -3.256981372833252
    7. ' continuer' → logprob: -3.256981372833252
    8. ' nous' → logprob: -4.006981372833252
    9. ' import' → logprob: -4.131981372833252
    10. ' pass' → logprob: -4.131981372833252

Token 988: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5661308765411377
    2. 'ne' → logprob: -1.6911308765411377
    3. 'continue' → logprob: -3.0661308765411377
    4. 'import' → logprob: -3.0661308765411377
    5. '...' → logprob: -3.3161308765411377
    6. 'pe' → logprob: -4.066130638122559
    7. ' continue' → logprob: -4.191130638122559
    8. 'n' → logprob: -4.191130638122559
    9. 'cannot' → logprob: -4.191130638122559
    10. ' ne' → logprob: -4.441130638122559

Token 989: ' mettre' (ID: 25339)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.1252681016921997
    2. 'util' → logprob: -1.5002681016921997
    3. 'import' → logprob: -2.00026798248291
    4. 'aj' → logprob: -2.37526798248291
    5. 'impl' → logprob: -2.62526798248291
    6. 'faire' → logprob: -3.37526798248291
    7. 'augment' → logprob: -4.37526798248291
    8. 'lim' → logprob: -4.37526798248291
    9. 'pass' → logprob: -4.62526798248291
    10. 'stock' → logprob: -4.87526798248291

Token 990: ' une' (ID: 2463)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01108201127499342
    2. 'à' → logprob: -4.761082172393799
    3. 'un' → logprob: -6.636082172393799
    4. 'dp' → logprob: -7.886082172393799
    5. 'au' → logprob: -8.38608169555664
    6. 'une' → logprob: -9.38608169555664
    7. 'la' → logprob: -9.63608169555664
    8. ' en' → logprob: -9.76108169555664
    9. 'le' → logprob: -9.76108169555664
    10. 'a' → logprob: -9.76108169555664

Token 991: ' structure' (ID: 8866)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.175837755203247
    2. 'appro' → logprob: -2.300837755203247
    3. 'table' → logprob: -2.300837755203247
    4. '#' → logprob: -2.425837755203247
    5. 'structure' → logprob: -2.425837755203247
    6. 'memo' → logprob: -2.550837755203247
    7. 'dimension' → logprob: -3.050837755203247
    8. 'programm' → logprob: -3.300837755203247
    9. 'lim' → logprob: -4.175837516784668
    10. 'solution' → logprob: -4.300837516784668

Token 992: ' supplémentaire' (ID: 111252)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0167851448059082
    2. ' de' → logprob: -1.5167851448059082
    3. '[]' → logprob: -2.016785144805908
    4. 'de' → logprob: -3.016785144805908
    5. ' dp' → logprob: -3.016785144805908
    6. 'd' → logprob: -3.391785144805908
    7. ' d' → logprob: -3.641785144805908
    8. 'import' → logprob: -3.641785144805908
    9. '[' → logprob: -4.266785144805908
    10. '_dp' → logprob: -4.391785144805908

Token 993: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9154306650161743
    2. '               ' → logprob: -1.2904306650161743
    3. 'import' → logprob: -2.0404305458068848
    4. '   ' → logprob: -3.1654305458068848
    5. '...' → logprob: -3.6654305458068848
    6. '#' → logprob: -4.165430545806885
    7. 'from' → logprob: -4.540430545806885
    8. ',' → logprob: -4.665430545806885
    9. '                   ' → logprob: -4.665430545806885
    10. ':' → logprob: -4.790430545806885

Token 994: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03615672141313553
    2. 'la' → logprob: -4.03615665435791
    3. 'le' → logprob: -5.28615665435791
    4. '#' → logprob: -5.41115665435791
    5. '```' → logprob: -5.78615665435791
    6. 'l' → logprob: -6.41115665435791
    7. 'import' → logprob: -6.78615665435791
    8. ' dp' → logprob: -6.91115665435791
    9. ' la' → logprob: -7.66115665435791
    10. '...' → logprob: -8.53615665435791

Token 995: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 996: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10173135250806808
    2. '#' → logprob: -3.601731300354004
    3. '<|end|>' → logprob: -4.101731300354004
    4. '
' → logprob: -4.851731300354004
    5. '```' → logprob: -4.851731300354004
    6. '                ' → logprob: -5.101731300354004
    7. '   ' → logprob: -5.601731300354004
    8. 'from' → logprob: -5.601731300354004
    9. '[' → logprob: -5.601731300354004
    10. '       ' → logprob: -5.601731300354004

Token 997: ' pass' (ID: 1853)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8653379082679749
    2. '#' → logprob: -1.24033784866333
    3. '
' → logprob: -2.36533784866333
    4. 'from' → logprob: -3.49033784866333
    5. 'import' → logprob: -3.49033784866333
    6. '   ' → logprob: -3.74033784866333
    7. '           ' → logprob: -3.86533784866333
    8. '                ' → logprob: -4.36533784866333
    9. '                   ' → logprob: -4.49033784866333
    10. '                
' → logprob: -4.61533784866333

Token 998: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36828121542930603
    2. '#' → logprob: -1.8682812452316284
    3. '
' → logprob: -3.493281126022339
    4. 'dp' → logprob: -4.368281364440918
    5. '                ' → logprob: -4.493281364440918
    6. ' continue' → logprob: -4.618281364440918
    7. '                
' → logprob: -4.743281364440918
    8. ' #' → logprob: -4.868281364440918
    9. '                   ' → logprob: -4.993281364440918
    10. 'continue' → logprob: -4.993281364440918

Token 999: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6894306540489197
    2. '[' → logprob: -1.3144307136535645
    3. '[
' → logprob: -2.8144307136535645
    4. '#' → logprob: -3.4394307136535645
    5. '
' → logprob: -3.9394307136535645
    6. ']' → logprob: -4.3144307136535645
    7. '   ' → logprob: -4.3144307136535645
    8. '```' → logprob: -4.6894307136535645
    9. '                ' → logprob: -4.8144307136535645
    10. ' continue' → logprob: -4.9394307136535645

Token 1000: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4416411519050598
    2. '               ' → logprob: -1.066641092300415
    3. '   ' → logprob: -5.691641330718994
    4. '       ' → logprob: -5.691641330718994
    5. '           ' → logprob: -6.191641330718994
    6. ' #' → logprob: -6.316641330718994
    7. '                   ' → logprob: -7.316641330718994
    8. '```' → logprob: -7.566641330718994
    9. 'dp' → logprob: -8.316640853881836
    10. '                ' → logprob: -8.441640853881836

Token 1001: ' L' (ID: 451)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3032296895980835
    2. '   ' → logprob: -1.4282296895980835
    3. '               ' → logprob: -4.178229808807373
    4. 'import' → logprob: -6.178229808807373
    5. 'from' → logprob: -6.303229808807373
    6. 'dp' → logprob: -6.678229808807373
    7. ' #' → logprob: -7.928229808807373
    8. '```' → logprob: -8.428229331970215
    9. '       ' → logprob: -8.678229331970215
    10. '           ' → logprob: -8.928229331970215

Token 1002: ''appro' (ID: 134343)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08734459429979324
    2. '   ' → logprob: -3.0873446464538574
    3. 'e' → logprob: -3.9623446464538574
    4. 'ayer' → logprob: -5.962344646453857
    5. '```' → logprob: -6.337344646453857
    6. ' #' → logprob: -6.837344646453857
    7. 'im' → logprob: -6.837344646453857
    8. 'for' → logprob: -6.837344646453857
    9. 'dp' → logprob: -6.962344646453857
    10. ' =' → logprob: -7.337344646453857

Token 1003: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.00483486894518137
    2. '#' → logprob: -5.8798346519470215
    3. 'ach' → logprob: -6.3798346519470215
    4. 'ache' → logprob: -8.25483512878418
    5. 'ch' → logprob: -10.50483512878418
    6. 'visionnement' → logprob: -11.75483512878418
    7. 'x' → logprob: -11.87983512878418
    8. 'ché' → logprob: -12.25483512878418
    9. 'd' → logprob: -12.87983512878418
    10. 'fond' → logprob: -13.25483512878418

Token 1004: ' précédente' (ID: 177319)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1043425798416138
    2. '=' → logprob: -1.2293425798416138
    3. ':' → logprob: -1.9793425798416138
    4. '#' → logprob: -1.9793425798416138
    5. '   ' → logprob: -3.354342460632324
    6. 'dp' → logprob: -4.104342460632324
    7. 'n' → logprob: -4.604342460632324
    8. ':
' → logprob: -5.104342460632324
    9. '[]' → logprob: -5.604342460632324
    10. '[' → logprob: -5.729342460632324

Token 1005: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12978647649288177
    2. '   ' → logprob: -2.754786491394043
    3. 'import' → logprob: -4.379786491394043
    4. ':' → logprob: -4.754786491394043
    5. ' =' → logprob: -4.754786491394043
    6. '=' → logprob: -5.004786491394043
    7. 'n' → logprob: -5.379786491394043
    8. 'dp' → logprob: -5.629786491394043
    9. ' n' → logprob: -6.004786491394043
    10. '
' → logprob: -6.254786491394043

Token 1006: ' permet' (ID: 11798)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2779000401496887
    2. 'pas' → logprob: -2.402899980545044
    3. '       ' → logprob: -3.402899980545044
    4. 's' → logprob: -3.527899980545044
    5. 'n' → logprob: -3.777899980545044
    6. ' =' → logprob: -4.402900218963623
    7. 'a' → logprob: -4.402900218963623
    8. 'est' → logprob: -5.027900218963623
    9. '   ' → logprob: -5.402900218963623
    10. '           ' → logprob: -5.527900218963623

Token 1007: ' pas' (ID: 2173)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.777267336845398
    2. 'pas' → logprob: -1.652267336845398
    3. '           ' → logprob: -2.0272674560546875
    4. '   ' → logprob: -2.0272674560546875
    5. '       ' → logprob: -3.4022674560546875
    6. 'd' → logprob: -4.5272674560546875
    7. '              ' → logprob: -5.1522674560546875
    8. 'de' → logprob: -5.5272674560546875
    9. '            ' → logprob: -5.6522674560546875
    10. '         ' → logprob: -5.7772674560546875

Token 1008: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.983260452747345
    2. '               ' → logprob: -1.7332603931427002
    3. 'import' → logprob: -1.8582603931427002
    4. '   ' → logprob: -2.1082603931427
    5. 'continue' → logprob: -3.4832603931427
    6. '
' → logprob: -3.8582603931427
    7. 'à' → logprob: -4.108260631561279
    8. 'for' → logprob: -4.233260631561279
    9. 'dp' → logprob: -4.358260631561279
    10. 'from' → logprob: -4.733260631561279

Token 1009: ' calcul' (ID: 7559)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.3468150496482849
    2. 'faire' → logprob: -2.7218151092529297
    3. 'stock' → logprob: -2.9718151092529297
    4. '#' → logprob: -3.0968151092529297
    5. 'g' → logprob: -3.0968151092529297
    6. 'continue' → logprob: -3.5968151092529297
    7. 'pro' → logprob: -4.84681510925293
    8. 'su' → logprob: -5.09681510925293
    9. 'calcul' → logprob: -5.59681510925293
    10. 's' → logprob: -5.59681510925293

Token 1010: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6202969551086426
    2. 're' → logprob: -1.7452969551086426
    3. '               ' → logprob: -1.8702969551086426
    4. '#' → logprob: -3.4952969551086426
    5. '       ' → logprob: -3.8702969551086426
    6. '           ' → logprob: -3.9952969551086426
    7. '   ' → logprob: -4.370296955108643
    8. 'tre' → logprob: -4.870296955108643
    9. 'continue' → logprob: -5.245296955108643
    10. 's' → logprob: -5.495296955108643

Token 1011: ' correctement' (ID: 123961)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9632031917572021
    2. 'd' → logprob: -1.8382031917572021
    3. '       ' → logprob: -1.9632031917572021
    4. '   ' → logprob: -2.338203191757202
    5. 'la' → logprob: -3.213203191757202
    6. 'pas' → logprob: -3.588203191757202
    7. '               ' → logprob: -3.713203191757202
    8. '           ' → logprob: -3.963203191757202
    9. '#' → logprob: -3.963203191757202
    10. 'dp' → logprob: -4.463203430175781

Token 1012: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2843749225139618
    2. '   ' → logprob: -2.159374952316284
    3. 'return' → logprob: -2.659374952316284
    4. 'import' → logprob: -4.534374713897705
    5. 'continue' → logprob: -4.659374713897705
    6. 'for' → logprob: -5.159374713897705
    7. 'dp' → logprob: -5.409374713897705
    8. '       ' → logprob: -5.534374713897705
    9. '               ' → logprob: -5.909374713897705
    10. '           ' → logprob: -5.909374713897705

Token 1013: ' rem' (ID: 1662)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9236865043640137
    2. 'dp' → logprob: -2.2986865043640137
    3. 'nombre' → logprob: -2.4236865043640137
    4. 's' → logprob: -2.5486865043640137
    5. '   ' → logprob: -3.1736865043640137
    6. 'quant' → logprob: -3.2986865043640137
    7. 'for' → logprob: -3.4236865043640137
    8. 'co' → logprob: -3.6736865043640137
    9. ' sacs' → logprob: -3.6736865043640137
    10. 'bags' → logprob: -3.7986865043640137

Token 1014: 'ises' (ID: 5555)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.22247213125228882
    2. '#' → logprob: -2.2224721908569336
    3. 'éter' → logprob: -3.4724721908569336
    4. 'def' → logprob: -5.097472190856934
    5. 'éder' → logprob: -5.347472190856934
    6. 'érer' → logprob: -5.472472190856934
    7. 'urer' → logprob: -5.472472190856934
    8. 'user' → logprob: -5.597472190856934
    9. 'ise' → logprob: -5.722472190856934
    10. '   ' → logprob: -5.972472190856934

Token 1015: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6973557472229004
    2. '#' → logprob: -1.3223557472229004
    3. '               ' → logprob: -1.6973557472229004
    4. '
' → logprob: -3.8223557472229004
    5. '           ' → logprob: -4.5723557472229
    6. '```' → logprob: -5.0723557472229
    7. '       ' → logprob: -5.5723557472229
    8. 'import' → logprob: -5.6973557472229
    9. 'from' → logprob: -6.3223557472229
    10. '    
' → logprob: -7.5723557472229

Token 1016: ' on' (ID: 402)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.8143668174743652
    2. 'il' → logprob: -1.9393668174743652
    3. '           ' → logprob: -2.6893668174743652
    4. '#' → logprob: -2.9393668174743652
    5. 'dp' → logprob: -2.9393668174743652
    6. ' on' → logprob: -3.0643668174743652
    7. '               ' → logprob: -3.1893668174743652
    8. ' elle' → logprob: -3.9393668174743652
    9. ' la' → logprob: -4.064366817474365
    10. 'elle' → logprob: -4.189366817474365

Token 1017: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.720664918422699
    2. 'n' → logprob: -1.5956649780273438
    3. '#' → logprob: -1.8456649780273438
    4. '   ' → logprob: -3.0956649780273438
    5. ' ne' → logprob: -3.2206649780273438
    6. ' #' → logprob: -3.5956649780273438
    7. '    ' → logprob: -4.470664978027344
    8. ' cannot' → logprob: -4.595664978027344
    9. ' doit' → logprob: -5.720664978027344
    10. ' devra' → logprob: -6.345664978027344

Token 1018: ' connaît' (ID: 124118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1233367919921875
    2. '#' → logprob: -1.6233367919921875
    3. 'pe' → logprob: -1.9983367919921875
    4. '       ' → logprob: -2.1233367919921875
    5. 'a' → logprob: -2.6233367919921875
    6. '           ' → logprob: -3.3733367919921875
    7. ' #' → logprob: -3.6233367919921875
    8. 'n' → logprob: -3.9983367919921875
    9. 'pas' → logprob: -4.2483367919921875
    10. '
' → logprob: -4.9983367919921875

Token 1019: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.03669305145740509
    2. '               ' → logprob: -4.036693096160889
    3. ' pas' → logprob: -5.036693096160889
    4. '           ' → logprob: -5.161693096160889
    5. 'plus' → logprob: -6.411693096160889
    6. '                   ' → logprob: -6.411693096160889
    7. 'le' → logprob: -7.536693096160889
    8. '                ' → logprob: -7.661693096160889
    9. '                       ' → logprob: -7.911693096160889
    10. '   ' → logprob: -8.91169261932373

Token 1020: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5784807205200195
    2. 'les' → logprob: -1.7034807205200195
    3. 'pas' → logprob: -2.7034807205200195
    4. '               ' → logprob: -3.4534807205200195
    5. 'la' → logprob: -3.5784807205200195
    6. '                   ' → logprob: -3.5784807205200195
    7. 'l' → logprob: -3.5784807205200195
    8. '           ' → logprob: -3.9534807205200195
    9. 'for' → logprob: -4.8284807205200195
    10. ' le' → logprob: -4.9534807205200195

Token 1021: ' 
' (ID: 793)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.07773381471633911
    2. ' nombre' → logprob: -3.7027337551116943
    3. 'nb' → logprob: -4.827733993530273
    4. '\n' → logprob: -5.202733993530273
    5. '```' → logprob: -5.202733993530273
    6. '#' → logprob: -5.452733993530273
    7. '\t' → logprob: -5.702733993530273
    8. 's' → logprob: -5.702733993530273
    9. 'composition' → logprob: -5.952733993530273
    10. '
' → logprob: -6.077733993530273

Token 1022: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7579076290130615
    2. ' #' → logprob: -2.0079076290130615
    3. ' nombre' → logprob: -2.1329076290130615
    4. '               ' → logprob: -2.1329076290130615
    5. '           ' → logprob: -3.6329076290130615
    6. '```' → logprob: -3.7579076290130615
    7. 'nombre' → logprob: -4.257907867431641
    8. '                   ' → logprob: -4.507907867431641
    9. '   ' → logprob: -4.507907867431641
    10. '"""
' → logprob: -4.757907867431641

Token 1023: ' #' (ID: 1069)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7314769625663757
    2. '#' (adapté à ' #') → logprob: -1.3564770221710205
    3. ' nombre' → logprob: -2.4814770221710205
    4. 'dp' → logprob: -2.7314770221710205
    5. 'state' → logprob: -3.7314770221710205
    6. '```' → logprob: -3.8564770221710205
    7. 'for' → logprob: -4.231476783752441
    8. ' #' → logprob: -4.856476783752441
    9. '
' → logprob: -5.231476783752441
    10. '   ' → logprob: -5.231476783752441

Token 1024: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.24585643410682678
    2. '#' → logprob: -1.7458564043045044
    3. ' nombre' → logprob: -3.995856523513794
    4. '```' → logprob: -5.245856285095215
    5. ' #' → logprob: -5.870856285095215
    6. 'state' → logprob: -5.995856285095215
    7. 'composition' → logprob: -6.370856285095215
    8. 'for' → logprob: -6.495856285095215
    9. 'type' → logprob: -6.495856285095215
    10. '   ' → logprob: -6.620856285095215

Token 1025: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3819736242294312
    2. ' des' → logprob: -1.7569736242294312
    3. ' de' → logprob: -2.8819737434387207
    4. '```' → logprob: -3.0069737434387207
    5. 'of' → logprob: -3.1319737434387207
    6. 'd' → logprob: -3.2569737434387207
    7. '#' → logprob: -3.3819737434387207
    8. '   ' → logprob: -3.3819737434387207
    9. 'de' → logprob: -3.5069737434387207
    10. '                ' → logprob: -3.5069737434387207

Token 1026: ' sacs' (ID: 150414)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9544373750686646
    2. 'bags' → logprob: -1.4544373750686646
    3. ' sacs' → logprob: -1.5794373750686646
    4. '\t' → logprob: -2.579437255859375
    5. 'tabs' → logprob: -2.954437255859375
    6. 'shops' → logprob: -4.704437255859375
    7. '   ' → logprob: -5.079437255859375
    8. 'b' → logprob: -5.204437255859375
    9. 'tab' → logprob: -5.454437255859375
    10. '\' → logprob: -5.954437255859375

Token 1027: ' ache' (ID: 27427)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9599534869194031
    2. '#' → logprob: -1.5849535465240479
    3. 'par' → logprob: -2.334953546524048
    4. '   ' → logprob: -2.834953546524048
    5. '           ' → logprob: -2.959953546524048
    6. 'for' → logprob: -3.459953546524048
    7. ' acheté' → logprob: -3.459953546524048
    8. ' par' → logprob: -3.834953546524048
    9. '       ' → logprob: -4.334953308105469
    10. '```' → logprob: -4.459953308105469

Token 1028: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1499640941619873
    2. 'ts' → logprob: -2.0249640941619873
    3. '```' → logprob: -6.399964332580566
    4. 'ets' → logprob: -6.524964332580566
    5. 'té' → logprob: -6.899964332580566
    6. 'u' → logprob: -7.524964332580566
    7. 'uts' → logprob: -7.524964332580566
    8. '#' → logprob: -8.024964332580566
    9. '   ' → logprob: -8.149964332580566
    10. 'teurs' → logprob: -8.149964332580566

Token 1029: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.1621692180633545
    2. 's' → logprob: -2.6621692180633545
    3. 'nés' → logprob: -3.9121692180633545
    4. '   ' → logprob: -3.9121692180633545
    5. '       ' → logprob: -4.537169456481934
    6. 'u' → logprob: -4.662169456481934
    7. 'é' → logprob: -5.162169456481934
    8. '#' → logprob: -6.037169456481934
    9. 'es' → logprob: -6.162169456481934
    10. 'd' → logprob: -6.912169456481934

Token 1030: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5748919248580933
    2. '#' → logprob: -1.8248919248580933
    3. 'for' → logprob: -2.574892044067383
    4. '   ' → logprob: -3.074892044067383
    5. '           ' → logprob: -3.199892044067383
    6. 'else' → logprob: -3.449892044067383
    7. '
' → logprob: -4.574892044067383
    8. ',' → logprob: -4.824892044067383
    9. '       ' → logprob: -4.824892044067383
    10. '```' → logprob: -5.199892044067383

Token 1031: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.08718530088663101
    2. 'ch' → logprob: -3.0871853828430176
    3. 'la' → logprob: -3.5871853828430176
    4. 'l' → logprob: -5.962185382843018
    5. 'une' → logprob: -6.462185382843018
    6. 'each' → logprob: -7.212185382843018
    7. '#' → logprob: -7.337185382843018
    8. ' chaque' → logprob: -7.337185382843018
    9. 'chaine' → logprob: -7.462185382843018
    10. 'c' → logprob: -7.462185382843018

Token 1032: ' boutique' (ID: 46148)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.27773281931877136
    2. ' shop' → logprob: -1.5277328491210938
    3. ')' → logprob: -5.777732849121094
    4. 'for' → logprob: -5.777732849121094
    5. 'shops' → logprob: -5.902732849121094
    6. ']' → logprob: -6.027732849121094
    7. '(shop' → logprob: -6.027732849121094
    8. '`' → logprob: -6.277732849121094
    9. '_shop' → logprob: -6.777732849121094
    10. '[
' → logprob: -6.902732849121094

Token 1033: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7024006843566895
    2. '   ' → logprob: -1.0774006843566895
    3. '#' → logprob: -2.2024006843566895
    4. '
' → logprob: -4.2024006843566895
    5. 'import' → logprob: -4.5774006843566895
    6. 'from' → logprob: -4.5774006843566895
    7. '       ' → logprob: -5.0774006843566895
    8. '           ' → logprob: -5.2024006843566895
    9. '                
' → logprob: -6.9524006843566895
    10. '    
' → logprob: -7.2024006843566895

Token 1034: ' cette' (ID: 7696)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.6446310877799988
    2. 'cha' → logprob: -1.1446311473846436
    3. 'contin' → logprob: -3.3946311473846436
    4. 'dp' → logprob: -4.2696309089660645
    5. ' chaque' → logprob: -4.2696309089660645
    6. 'l' → logprob: -4.7696309089660645
    7. 'la' → logprob: -4.8946309089660645
    8. 'le' → logprob: -4.8946309089660645
    9. 'faire' → logprob: -5.0196309089660645
    10. 'calcul' → logprob: -5.1446309089660645

Token 1035: ' quantité' (ID: 89219)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -1.1873629093170166
    2. '#' → logprob: -1.3123629093170166
    3. 'comb' → logprob: -2.9373629093170166
    4. '   ' → logprob: -3.0623629093170166
    5. 'for' → logprob: -3.1873629093170166
    6. 'dp' → logprob: -3.5623629093170166
    7. '```' → logprob: -3.9373629093170166
    8. '
' → logprob: -4.0623626708984375
    9. ' quantité' → logprob: -4.0623626708984375
    10. 'pass' → logprob: -4.0623626708984375

Token 1036: ' interm' (ID: 120489)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21473929286003113
    2. '   ' → logprob: -1.9647393226623535
    3. '#' → logprob: -3.4647393226623535
    4. 'from' → logprob: -4.2147393226623535
    5. 'import' → logprob: -6.0897393226623535
    6. '
' → logprob: -6.2147393226623535
    7. '       ' → logprob: -7.0897393226623535
    8. '           ' → logprob: -7.4647393226623535
    9. '                
' → logprob: -7.9647393226623535
    10. 'def' → logprob: -8.339738845825195

Token 1037: 'édiaire' (ID: 161555)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7836626768112183
    2. '           ' → logprob: -1.4086626768112183
    3. '   ' → logprob: -3.158662796020508
    4. '[]' → logprob: -3.283662796020508
    5. '```' → logprob: -3.533662796020508
    6. ']' → logprob: -3.658662796020508
    7. '       ' → logprob: -3.908662796020508
    8. '                   ' → logprob: -3.908662796020508
    9. 'ité' → logprob: -3.908662796020508
    10. '][' → logprob: -4.158662796020508

Token 1038: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3034486770629883
    2. '#' → logprob: -1.6784486770629883
    3. '
' → logprob: -3.4284486770629883
    4. '               ' → logprob: -3.9284486770629883
    5. 'import' → logprob: -4.553448677062988
    6. 'from' → logprob: -4.803448677062988
    7. '    
' → logprob: -7.178448677062988
    8. 'def' → logprob: -7.178448677062988
    9. '```' → logprob: -7.678448677062988
    10. '           ' → logprob: -7.803448677062988

Token 1039: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23647388815879822
    2. '#' → logprob: -2.111473798751831
    3. 'from' → logprob: -2.611473798751831
    4. '               ' → logprob: -5.23647403717041
    5. 'import' → logprob: -5.61147403717041
    6. '
' → logprob: -5.86147403717041
    7. ' from' → logprob: -6.86147403717041
    8. 'def' → logprob: -7.48647403717041
    9. ' #' → logprob: -7.73647403717041
    10. '[' → logprob: -7.86147403717041

Token 1040: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5518079996109009
    2. '#' (adapté à ' #') → logprob: -0.9268079996109009
    3. 'from' → logprob: -3.8018078804016113
    4. 'def' → logprob: -5.926807880401611
    5. 'import' → logprob: -6.051807880401611
    6. '
' → logprob: -8.05180835723877
    7. 'dp' → logprob: -8.55180835723877
    8. 'class' → logprob: -8.80180835723877
    9. '    
' → logprob: -9.42680835723877
    10. '```' → logprob: -9.80180835723877

Token 1041: ' Nouvelle' (ID: 113786)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45084407925605774
    2. 'from' → logprob: -1.8258440494537354
    3. '#' → logprob: -1.9508440494537354
    4. 'import' → logprob: -4.0758442878723145
    5. ' #' → logprob: -4.5758442878723145
    6. ' from' → logprob: -4.7008442878723145
    7. 'dp' → logprob: -5.0758442878723145
    8. '
' → logprob: -5.7008442878723145
    9. '       ' → logprob: -5.7008442878723145
    10. 'return' → logprob: -6.4508442878723145

Token 1042: ' approche' (ID: 102373)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1632959842681885
    2. 'appro' → logprob: -1.2882959842681885
    3. '   ' → logprob: -2.4132959842681885
    4. 'from' → logprob: -2.6632959842681885
    5. ' approche' → logprob: -2.7882959842681885
    6. 'import' → logprob: -2.9132959842681885
    7. '
' → logprob: -3.1632959842681885
    8. 'def' → logprob: -3.1632959842681885
    9. ' #' → logprob: -4.538295745849609
    10. ' approach' → logprob: -5.163295745849609

Token 1043: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6703463196754456
    2. '#' → logprob: -1.6703462600708008
    3. ':' → logprob: -1.6703462600708008
    4. 'from' → logprob: -3.420346260070801
    5. ' :' → logprob: -3.795346260070801
    6. ':
' → logprob: -4.045346260070801
    7. 'def' → logprob: -4.920346260070801
    8. ' from' → logprob: -5.170346260070801
    9. 'dp' → logprob: -5.170346260070801
    10. '
' → logprob: -5.420346260070801

Token 1044: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1647246927022934
    2. '#' → logprob: -2.414724588394165
    3. 'from' → logprob: -2.914724588394165
    4. ' from' → logprob: -6.164724826812744
    5. 'dp' → logprob: -6.164724826812744
    6. 'def' → logprob: -6.789724826812744
    7. 'class' → logprob: -7.039724826812744
    8. ' #' → logprob: -7.414724826812744
    9. '
' → logprob: -7.664724826812744
    10. '    
' → logprob: -8.289724349975586

Token 1045: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.31377044320106506
    2. 'from' → logprob: -1.8137704133987427
    3. '   ' → logprob: -2.9387705326080322
    4. 'max' → logprob: -3.6887705326080322
    5. 'dp' → logprob: -4.063770294189453
    6. 'class' → logprob: -4.938770294189453
    7. 'def' → logprob: -6.688770294189453
    8. 'import' → logprob: -7.313770294189453
    9. 'MAX' → logprob: -7.688770294189453
    10. '
' → logprob: -7.938770294189453

Token 1046: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46650415658950806
    2. 'from' → logprob: -1.4665040969848633
    3. '   ' → logprob: -2.4665040969848633
    4. 'dp' → logprob: -3.4665040969848633
    5. 'max' → logprob: -4.091504096984863
    6. 'class' → logprob: -5.591504096984863
    7. 'def' → logprob: -6.716504096984863
    8. 'import' → logprob: -6.716504096984863
    9. 'MAX' → logprob: -7.091504096984863
    10. 'return' → logprob: -7.216504096984863

Token 1047: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.937045693397522
    2. 'vais' → logprob: -1.062045693397522
    3. 'import' → logprob: -2.0620455741882324
    4. 'va' → logprob: -2.9370455741882324
    5. ' vais' → logprob: -4.312045574188232
    6. 'pe' → logprob: -4.437045574188232
    7. 'do' → logprob: -4.562045574188232
    8. 'from' → logprob: -5.062045574188232
    9. 'pour' → logprob: -5.437045574188232
    10. 'ré' → logprob: -5.687045574188232

Token 1048: ' représ' (ID: 31534)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.2865662574768066
    2. 're' → logprob: -1.6615662574768066
    3. 'contin' → logprob: -2.0365662574768066
    4. 'impl' → logprob: -2.7865662574768066
    5. 'repr' → logprob: -2.7865662574768066
    6. 'ré' → logprob: -3.0365662574768066
    7. 'penser' → logprob: -3.5365662574768066
    8. 'modifier' → logprob: -3.9115662574768066
    9. 'pass' → logprob: -4.036566257476807
    10. 'faire' → logprob: -4.036566257476807

Token 1049: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.0026204893365502357
    2. 'e' → logprob: -6.752620697021484
    3. 'ente' → logprob: -6.752620697021484
    4. 'er' → logprob: -9.002620697021484
    5. '   ' → logprob: -9.877620697021484
    6. 'ent' → logprob: -10.502620697021484
    7. 'ater' → logprob: -11.002620697021484
    8. 'a' → logprob: -11.127620697021484
    9. '#' → logprob: -11.377620697021484
    10. 'entation' → logprob: -11.627620697021484

Token 1050: ' chaque' (ID: 21194)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2581510841846466
    2. 'l' → logprob: -1.7581510543823242
    3. ' dp' → logprob: -3.758151054382324
    4. ' l' → logprob: -4.133151054382324
    5. 'le' → logprob: -4.383151054382324
    6. 'la' → logprob: -6.633151054382324
    7. 'les' → logprob: -8.008151054382324
    8. 'state' → logprob: -8.258151054382324
    9. ' le' → logprob: -8.383151054382324
    10. 'un' → logprob: -8.633151054382324

Token 1051: ' état' (ID: 59181)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7033812403678894
    2. 'ét' → logprob: -1.0783812999725342
    3. 'shop' → logprob: -3.328381299972534
    4. 'state' → logprob: -3.578381299972534
    5. 'quant' → logprob: -3.703381299972534
    6. 'É' → logprob: -4.078381061553955
    7. '#' → logprob: -4.453381061553955
    8. ' état' → logprob: -4.828381061553955
    9. 'comb' → logprob: -5.078381061553955
    10. 'etat' → logprob: -5.203381061553955

Token 1052: ' dp' (ID: 21546)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.22386810183525085
    2. ' comme' → logprob: -2.0988681316375732
    3. ' =' → logprob: -3.7238681316375732
    4. 'par' → logprob: -3.9738681316375732
    5. ' as' → logprob: -4.848867893218994
    6. 'comme' → logprob: -4.973867893218994
    7. ' ' → logprob: -5.223867893218994
    8. ',' → logprob: -6.098867893218994
    9. ' sous' → logprob: -6.098867893218994
    10. '_' → logprob: -6.223867893218994

Token 1053: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9776932001113892
    2. ' =' → logprob: -1.3526932001113892
    3. '[(' → logprob: -2.1026930809020996
    4. '[' → logprob: -2.2276930809020996
    5. ' as' → logprob: -2.8526930809020996
    6. ' [' → logprob: -4.3526930809021
    7. ' comme' → logprob: -4.3526930809021
    8. '=' → logprob: -4.4776930809021
    9. 'as' → logprob: -4.4776930809021
    10. '[state' → logprob: -5.8526930809021

Token 1054: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013118698261678219
    2. '][' → logprob: -4.513118743896484
    3. ',' → logprob: -6.388118743896484
    4. ']=' → logprob: -8.888118743896484
    5. '],' → logprob: -10.138118743896484
    6. '][]' → logprob: -10.513118743896484
    7. '
' → logprob: -10.888118743896484
    8. ']=(' → logprob: -10.888118743896484
    9. '   ' → logprob: -11.013118743896484
    10. ' ]' → logprob: -11.013118743896484

Token 1055: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10307271033525467
    2. 'A' → logprob: -2.6030726432800293
    3. '0' → logprob: -5.103072643280029
    4. 'bags' → logprob: -5.228072643280029
    5. '3' → logprob: -6.478072643280029
    6. 'shop' → logprob: -6.478072643280029
    7. 'shops' → logprob: -6.853072643280029
    8. '
' → logprob: -6.978072643280029
    9. '][' → logprob: -6.978072643280029
    10. 'b' → logprob: -7.228072643280029

Token 1056: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.21540535986423492
    2. 'A' → logprob: -1.8404053449630737
    3. 'a' → logprob: -4.090405464172363
    4. '_A' → logprob: -5.465405464172363
    5. ']' → logprob: -5.715405464172363
    6. 'b' → logprob: -6.340405464172363
    7. ',' → logprob: -6.715405464172363
    8. 'v' → logprob: -6.715405464172363
    9. '_' → logprob: -6.965405464172363
    10. '0' → logprob: -7.215405464172363

Token 1057: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031652413308620453
    2. 'A' → logprob: -6.628165245056152
    3. '][' → logprob: -7.753165245056152
    4. '0' → logprob: -7.878165245056152
    5. 'B' → logprob: -7.878165245056152
    6. ' b' → logprob: -8.628165245056152
    7. ''b' → logprob: -9.753165245056152
    8. 's' → logprob: -9.878165245056152
    9. 'a' → logprob: -10.003165245056152
    10. 'j' → logprob: -10.003165245056152

Token 1058: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020984072238206863
    2. 'c' → logprob: -4.770984172821045
    3. ']' → logprob: -4.895984172821045
    4. '[c' → logprob: -5.645984172821045
    5. '[' → logprob: -7.895984172821045
    6. '_c' → logprob: -8.645983695983887
    7. 's' → logprob: -9.270983695983887
    8. ']
' → logprob: -9.395983695983887
    9. ''][' → logprob: -9.645983695983887
    10. '```' → logprob: -10.020983695983887

Token 1059: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6405310816480778e-05
    2. ' c' → logprob: -12.375016212463379
    3. '0' → logprob: -12.500016212463379
    4. '][' → logprob: -13.125016212463379
    5. '
' → logprob: -13.375016212463379
    6. ']' → logprob: -13.750016212463379
    7. '...' → logprob: -14.250016212463379
    8. ''' → logprob: -14.750016212463379
    9. ' ' → logprob: -14.750016212463379
    10. '```' → logprob: -14.875016212463379

Token 1060: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1061457172036171
    2. '[' → logprob: -2.7311456203460693
    3. '][' → logprob: -3.7311456203460693
    4. '[
' → logprob: -5.856145858764648
    5. ']=' → logprob: -6.481145858764648
    6. '   ' → logprob: -6.731145858764648
    7. '],' → logprob: -7.231145858764648
    8. '```' → logprob: -7.231145858764648
    9. '_' → logprob: -7.606145858764648
    10. '[i' → logprob: -7.856145858764648

Token 1061: ' représentant' (ID: 136122)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04398141801357269
    2. '[
' → logprob: -4.043981552124023
    3. '_' → logprob: -5.043981552124023
    4. '   ' → logprob: -5.418981552124023
    5. '\[' → logprob: -5.918981552124023
    6. '```' → logprob: -5.918981552124023
    7. ' =' → logprob: -6.418981552124023
    8. ']' → logprob: -6.668981552124023
    9. '=' → logprob: -6.918981552124023
    10. ',' → logprob: -7.043981552124023

Token 1062: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.5981714725494385
    2. ' le' → logprob: -1.9731714725494385
    3. '0' → logprob: -2.2231714725494385
    4. '[' → logprob: -2.3481714725494385
    5. ' (' → logprob: -2.8481714725494385
    6. ' the' → logprob: -3.0981714725494385
    7. ']' → logprob: -3.2231714725494385
    8. ' ' → logprob: -3.3481714725494385
    9. ' la' → logprob: -3.3481714725494385
    10. 'the' → logprob: -3.3481714725494385

Token 1063: ' coût' (ID: 73109)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.4779455065727234
    2. ' nombre' → logprob: -1.1029455661773682
    3. '[' → logprob: -4.477945327758789
    4. ']' → logprob: -4.977945327758789
    5. 'a' → logprob: -5.602945327758789
    6. 'number' → logprob: -5.727945327758789
    7. 'i' → logprob: -5.852945327758789
    8. 'amount' → logprob: -6.102945327758789
    9. ' number' → logprob: -6.352945327758789
    10. ' i' → logprob: -6.602945327758789

Token 1064: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7854142785072327
    2. '[' → logprob: -1.660414218902588
    3. '
' → logprob: -1.785414218902588
    4. '_min' → logprob: -3.535414218902588
    5. '[
' → logprob: -3.785414218902588
    6. '```' → logprob: -3.910414218902588
    7. '   ' → logprob: -4.410414218902588
    8. ' _' → logprob: -4.660414218902588
    9. '[i' → logprob: -4.785414218902588
    10. '=' → logprob: -5.035414218902588

Token 1065: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7418763041496277
    2. 'a' → logprob: -1.3668763637542725
    3. 'acheter' → logprob: -2.1168763637542725
    4. ' i' → logprob: -3.4918763637542725
    5. 'le' → logprob: -3.6168763637542725
    6. ' acheter' → logprob: -4.366876125335693
    7. 'avoir' → logprob: -4.616876125335693
    8. 'l' → logprob: -4.616876125335693
    9. ' a' → logprob: -4.866876125335693
    10. '   ' → logprob: -4.866876125335693

Token 1066: ' gram' (ID: 40134)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.4068199396133423
    2. '[' → logprob: -1.5318199396133423
    3. '][' → logprob: -2.0318198204040527
    4. '_' → logprob: -2.4068198204040527
    5. ' [' → logprob: -2.6568198204040527
    6. ']' → logprob: -3.4068198204040527
    7. 'gram' → logprob: -3.5318198204040527
    8. ' ' → logprob: -3.7818198204040527
    9. '   ' → logprob: -3.7818198204040527
    10. ',' → logprob: -4.531819820404053

Token 1067: 'mes' (ID: 4613)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36272770166397095
    2. '[
' → logprob: -1.7377276420593262
    3. ']
' → logprob: -3.487727642059326
    4. '][' → logprob: -3.612727642059326
    5. '   ' → logprob: -4.237727642059326
    6. '[' → logprob: -4.237727642059326
    7. 'mes' → logprob: -4.737727642059326
    8. ')' → logprob: -5.487727642059326
    9. '
' → logprob: -5.612727642059326
    10. '       ' → logprob: -5.987727642059326

Token 1068: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04884203523397446
    2. '_' → logprob: -3.798841953277588
    3. '[
' → logprob: -4.173841953277588
    4. '   ' → logprob: -5.798841953277588
    5. ',' → logprob: -6.423841953277588
    6. '```' → logprob: -7.298841953277588
    7. '\[' → logprob: -7.423841953277588
    8. ' [' → logprob: -7.423841953277588
    9. '
' → logprob: -7.548841953277588
    10. '[a' → logprob: -7.798841953277588

Token 1069: ' ayant' (ID: 45436)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7848739624023438
    2. ' range' → logprob: -1.1598739624023438
    3. 'aj' → logprob: -2.4098739624023438
    4. 'ach' → logprob: -2.9098739624023438
    5. 'nombre' → logprob: -3.4098739624023438
    6. '0' → logprob: -4.784873962402344
    7. ' nombre' → logprob: -4.784873962402344
    8. ' ajout' → logprob: -4.909873962402344
    9. '[' → logprob: -5.784873962402344
    10. 'acheter' → logprob: -5.909873962402344

Token 1070: ' acheté' (ID: 120710)
  Prédit: 'ache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ache' → logprob: -0.03424455597996712
    2. 'achet' → logprob: -3.9092445373535156
    3. 'ach' → logprob: -5.034244537353516
    4. 'a' → logprob: -6.034244537353516
    5. 'util' → logprob: -6.534244537353516
    6. 'acheter' → logprob: -7.034244537353516
    7. ' acheté' → logprob: -7.034244537353516
    8. 'achat' → logprob: -7.534244537353516
    9. 'aj' → logprob: -8.284244537353516
    10. '
' → logprob: -8.909244537353516

Token 1071: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.72209632396698
    2. '1' → logprob: -2.2220964431762695
    3. '0' → logprob: -2.3470964431762695
    4. ' [' → logprob: -2.3470964431762695
    5. ' a' → logprob: -2.4720964431762695
    6. 'a' → logprob: -2.7220964431762695
    7. '[a' → logprob: -2.7220964431762695
    8. 'b' → logprob: -2.8470964431762695
    9. '```' → logprob: -2.9720964431762695
    10. ' ' → logprob: -2.9720964431762695

Token 1072: '   ' (ID: 271)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.2361154854297638
    2. '[b' → logprob: -2.9861154556274414
    3. 'a' → logprob: -3.1111154556274414
    4. '   ' → logprob: -3.2361154556274414
    5. '[' → logprob: -3.2361154556274414
    6. ' [' → logprob: -3.7361154556274414
    7. '[i' → logprob: -5.861115455627441
    8. 'b' → logprob: -6.236115455627441
    9. '```' → logprob: -6.236115455627441
    10. ' a' → logprob: -6.611115455627441

Token 1073: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9934088587760925
    2. '0' → logprob: -1.7434089183807373
    3. '[a' → logprob: -1.7434089183807373
    4. '[' → logprob: -2.6184089183807373
    5. 'b' → logprob: -2.8684089183807373
    6. '[b' → logprob: -3.2434089183807373
    7. ' a' → logprob: -3.4934089183807373
    8. '   ' → logprob: -3.4934089183807373
    9. ' [' → logprob: -3.9934089183807373
    10. ' ' → logprob: -4.743408679962158

Token 1074: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2883460819721222
    2. '[a' → logprob: -2.0383460521698
    3. ' a' → logprob: -3.5383460521698
    4. 'b' → logprob: -3.7883460521698
    5. '   ' → logprob: -4.288346290588379
    6. '[b' → logprob: -4.663346290588379
    7. ' ' → logprob: -4.788346290588379
    8. '[' → logprob: -4.788346290588379
    9. ' [' → logprob: -5.288346290588379
    10. '0' → logprob: -5.913346290588379

Token 1075: ' sacs' (ID: 150414)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.3659456968307495
    2. '_s' → logprob: -2.615945816040039
    3. '[' → logprob: -2.740945816040039
    4. '_' → logprob: -3.240945816040039
    5. 'b' → logprob: -3.365945816040039
    6. '][' → logprob: -3.740945816040039
    7. 's' → logprob: -4.115945816040039
    8. '[b' → logprob: -4.990945816040039
    9. '
' → logprob: -5.365945816040039
    10. ' _' → logprob: -5.490945816040039

Token 1076: ' chez' (ID: 19750)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.044729232788086
    2. '_' → logprob: -1.544729232788086
    3. '[' → logprob: -2.169729232788086
    4. '_A' → logprob: -2.169729232788086
    5. '[A' → logprob: -2.419729232788086
    6. '```' → logprob: -3.419729232788086
    7. 'de' → logprob: -4.044729232788086
    8. ' de' → logprob: -4.294729232788086
    9. '[
' → logprob: -4.669729232788086
    10. '_a' → logprob: -5.044729232788086

Token 1077: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.33099061250686646
    2. ''A' → logprob: -1.3309905529022217
    3. 'shop' → logprob: -4.830990791320801
    4. ''' → logprob: -5.080990791320801
    5. ''s' → logprob: -7.330990791320801
    6. '   ' → logprob: -7.455990791320801
    7. ' '' → logprob: -7.455990791320801
    8. '#' → logprob: -7.705990791320801
    9. '['' → logprob: -8.3309907913208
    10. ' A' → logprob: -8.8309907913208

Token 1078: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8189163208007812
    2. '[' → logprob: -1.9439163208007812
    3. '```' → logprob: -2.1939163208007812
    4. '][' → logprob: -2.6939163208007812
    5. '[b' → logprob: -2.9439163208007812
    6. '   ' → logprob: -3.0689163208007812
    7. '[a' → logprob: -3.9439163208007812
    8. '
' → logprob: -4.068916320800781
    9. '       ' → logprob: -4.693916320800781
    10. '_' → logprob: -5.068916320800781

Token 1079: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6962776780128479
    2. ' b' → logprob: -0.6962776780128479
    3. '   ' → logprob: -5.821277618408203
    4. '	b' → logprob: -9.696277618408203
    5. ' ' → logprob: -10.071277618408203
    6. '  ' → logprob: -11.446277618408203
    7. '
' → logprob: -11.571277618408203
    8. ',' → logprob: -11.821277618408203
    9. '       ' → logprob: -12.196277618408203
    10. '    ' → logprob: -12.446277618408203

Token 1080: ' chez' (ID: 19750)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6549514532089233
    2. '][' → logprob: -0.9049514532089233
    3. ' sacs' → logprob: -3.654951572418213
    4. ',' → logprob: -4.029951572418213
    5. 'c' → logprob: -4.779951572418213
    6. '[' → logprob: -5.029951572418213
    7. '[s' → logprob: -5.529951572418213
    8. ')[' → logprob: -5.654951572418213
    9. ']' → logprob: -6.154951572418213
    10. '[c' → logprob: -6.279951572418213

Token 1081: ' B' (ID: 418)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2193135768175125
    2. 'c' → logprob: -1.719313621520996
    3. ' C' → logprob: -4.469313621520996
    4. ' c' → logprob: -5.094313621520996
    5. ' ' → logprob: -9.594313621520996
    6. 'B' → logprob: -9.844313621520996
    7. 's' → logprob: -11.094313621520996
    8. '
' → logprob: -12.844313621520996
    9. 'shop' → logprob: -12.844313621520996
    10. '#' → logprob: -12.969313621520996

Token 1082: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23497407138347626
    2. '][' → logprob: -2.3599741458892822
    3. '[
' → logprob: -3.6099741458892822
    4. ',' → logprob: -3.7349741458892822
    5. '```' → logprob: -3.7349741458892822
    6. '_' → logprob: -3.9849741458892822
    7. '
' → logprob: -5.109973907470703
    8. ']' → logprob: -5.484973907470703
    9. '   ' → logprob: -6.109973907470703
    10. ')' → logprob: -6.984973907470703

Token 1083: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06196925416588783
    2. ' c' → logprob: -2.81196928024292
    3. ' ' → logprob: -14.311968803405762
    4. '   ' → logprob: -14.811968803405762
    5. '  ' → logprob: -15.561968803405762
    6. ' ' → logprob: -16.311969757080078
    7. '
' → logprob: -16.436969757080078
    8. '	c' → logprob: -16.436969757080078
    9. '       ' → logprob: -16.561969757080078
    10. '```' → logprob: -17.311969757080078

Token 1084: ' chez' (ID: 19750)
  Prédit: ' chez'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chez' → logprob: -0.26081985235214233
    2. 'chez' → logprob: -1.760819911956787
    3. 's' → logprob: -3.260819911956787
    4. '```' → logprob: -5.260819911956787
    5. ' sacs' → logprob: -5.260819911956787
    6. ' ' → logprob: -6.885819911956787
    7. ']' → logprob: -7.010819911956787
    8. 'pour' → logprob: -7.260819911956787
    9. ' ' → logprob: -7.260819911956787
    10. '   ' → logprob: -7.260819911956787

Token 1085: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002224364085122943
    2. ' C' → logprob: -6.127224445343018
    3. ' ' → logprob: -10.25222396850586
    4. '#' → logprob: -13.00222396850586
    5. '   ' → logprob: -14.50222396850586
    6. '  ' → logprob: -15.12722396850586
    7. 'shop' → logprob: -15.50222396850586
    8. '```' → logprob: -15.50222396850586
    9. '`' → logprob: -16.37722396850586
    10. ' chez' → logprob: -16.87722396850586

Token 1086: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0864514112472534
    2. ' =' → logprob: -1.3364514112472534
    3. '[
' → logprob: -2.711451530456543
    4. '[' → logprob: -2.836451530456543
    5. 'from' → logprob: -2.836451530456543
    6. '=' → logprob: -3.211451530456543
    7. 'import' → logprob: -3.211451530456543
    8. '=
' → logprob: -3.461451530456543
    9. '
' → logprob: -3.711451530456543
    10. '#' → logprob: -3.961451530456543

Token 1087: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03994321450591087
    2. '#' → logprob: -4.664943218231201
    3. 'from' → logprob: -4.789943218231201
    4. '[' → logprob: -5.414943218231201
    5. 'import' → logprob: -5.539943218231201
    6. 'def' → logprob: -5.914943218231201
    7. 'dp' → logprob: -6.289943218231201
    8. '[
' → logprob: -6.539943218231201
    9. '```' → logprob: -6.789943218231201
    10. '
' → logprob: -6.914943218231201

Token 1088: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5270239114761353
    2. '#' (adapté à ' #') → logprob: -1.5270239114761353
    3. 'from' → logprob: -2.9020237922668457
    4. 'import' → logprob: -3.2770237922668457
    5. 'dp' → logprob: -3.4020237922668457
    6. '
' → logprob: -3.6520237922668457
    7. ' from' → logprob: -4.527023792266846
    8. '[' → logprob: -4.527023792266846
    9. '[
' → logprob: -5.027023792266846
    10. 'max' → logprob: -6.402023792266846

Token 1089: ' Mais' (ID: 13880)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3484872579574585
    2. 'from' → logprob: -2.223487377166748
    3. 'dp' → logprob: -2.348487377166748
    4. '   ' → logprob: -2.848487377166748
    5. 'import' → logprob: -4.348487377166748
    6. '
' → logprob: -4.598487377166748
    7. 'max' → logprob: -5.473487377166748
    8. ' from' → logprob: -6.348487377166748
    9. 'MAX' → logprob: -7.098487377166748
    10. ' dp' → logprob: -7.848487377166748

Token 1090: ' cela' (ID: 17542)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17418597638607025
    2. ' la' → logprob: -2.2991859912872314
    3. 'la' → logprob: -4.299185752868652
    4. '   ' → logprob: -4.549185752868652
    5. 'le' → logprob: -4.799185752868652
    6. ' #' → logprob: -4.924185752868652
    7. '```' → logprob: -5.674185752868652
    8. ' le' → logprob: -5.924185752868652
    9. '...' → logprob: -6.299185752868652
    10. 'l' → logprob: -6.799185752868652

Token 1091: ' serait' (ID: 35762)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.8630263209342957
    2. '#' → logprob: -1.3630263805389404
    3. 'est' → logprob: -1.6130263805389404
    4. 'sera' → logprob: -2.4880263805389404
    5. ' est' → logprob: -4.863026142120361
    6. ' serait' → logprob: -5.113026142120361
    7. 'n' → logprob: -5.488026142120361
    8. 'sembler' → logprob: -5.613026142120361
    9. 's' → logprob: -5.988026142120361
    10. '
' → logprob: -6.238026142120361

Token 1092: ' trop' (ID: 14765)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1150389909744263
    2. 'im' → logprob: -1.1150389909744263
    3. 'ex' → logprob: -1.4900389909744263
    4. 't' → logprob: -2.3650388717651367
    5. 'inut' → logprob: -5.365038871765137
    6. 'com' → logprob: -5.740038871765137
    7. 'én' → logprob: -6.115038871765137
    8. '#' → logprob: -6.365038871765137
    9. '```' → logprob: -6.365038871765137
    10. '
' → logprob: -6.490038871765137

Token 1093: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.8032979369163513
    2. 'import' → logprob: -1.678297996520996
    3. 'com' → logprob: -2.678297996520996
    4. 'g' → logprob: -2.928297996520996
    5. 'large' → logprob: -3.178297996520996
    6. 'memory' → logprob: -3.553297996520996
    7. 'co' → logprob: -3.553297996520996
    8. 'vol' → logprob: -3.553297996520996
    9. 'complex' → logprob: -4.053297996520996
    10. ' volum' → logprob: -4.303297996520996

Token 1094: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24759849905967712
    2. '   ' → logprob: -3.12259840965271
    3. '           ' → logprob: -3.37259840965271
    4. '#' → logprob: -3.37259840965271
    5. '...' → logprob: -4.122598648071289
    6. '
' → logprob: -4.372598648071289
    7. '                   ' → logprob: -4.622598648071289
    8. '       ' → logprob: -4.747598648071289
    9. '<|end|>' → logprob: -4.747598648071289
    10. '[' → logprob: -4.872598648071289

Token 1095: 'la' (ID: 1675)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9819046258926392
    2. ')' → logprob: -2.4819045066833496
    3. ' ' → logprob: -2.7319045066833496
    4. '...' → logprob: -2.9819045066833496
    5. ' (' → logprob: -3.3569045066833496
    6. '```' → logprob: -3.3569045066833496
    7. '[' → logprob: -3.7319045066833496
    8. ']' → logprob: -3.9819045066833496
    9. ')
' → logprob: -4.10690450668335
    10. '500' → logprob: -4.10690450668335

Token 1096: ' complex' (ID: 8012)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -1.7346385717391968
    2. ' taille' → logprob: -1.9846385717391968
    3. '[' → logprob: -2.2346386909484863
    4. ' ]' → logprob: -2.3596386909484863
    5. 'size' → logprob: -2.8596386909484863
    6. 'space' → logprob: -2.9846386909484863
    7. ' ' → logprob: -3.4846386909484863
    8. 's' → logprob: -3.4846386909484863
    9. ' space' → logprob: -3.6096386909484863
    10. '[
' → logprob: -3.7346386909484863

Token 1097: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.6335226893424988
    2. 'ity' → logprob: -1.8835227489471436
    3. '[' → logprob: -2.2585227489471436
    4. 'é' → logprob: -2.2585227489471436
    5. 'e' → logprob: -3.1335227489471436
    6. '[
' → logprob: -3.2585227489471436
    7. '#' → logprob: -4.6335225105285645
    8. '```' → logprob: -5.6335225105285645
    9. 'ion' → logprob: -5.7585225105285645
    10. 'ation' → logprob: -6.5085225105285645

Token 1098: ' expl' (ID: 3421)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.9307190775871277
    2. '=' → logprob: -2.0557191371917725
    3. 'est' → logprob: -2.1807191371917725
    4. ' =' → logprob: -2.9307191371917725
    5. ' est' → logprob: -3.0557191371917725
    6. 'd' → logprob: -3.0557191371917725
    7. 'expl' → logprob: -3.4307191371917725
    8. ')' → logprob: -3.8057191371917725
    9. 'too' → logprob: -4.180718898773193
    10. 'pro' → logprob: -4.180718898773193

Token 1099: 'ose' (ID: 918)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ore' → logprob: -1.2372418642044067
    2. '#' → logprob: -1.8622418642044067
    3. 'e' → logprob: -2.362241744995117
    4. 'ose' → logprob: -2.487241744995117
    5. 'it' → logprob: -3.112241744995117
    6. 'continue' → logprob: -3.237241744995117
    7. 'ored' → logprob: -3.487241744995117
    8. '```' → logprob: -3.612241744995117
    9. 'orable' → logprob: -3.612241744995117
    10. 'or' → logprob: -3.737241744995117

Token 1100: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5227488875389099
    2. '[' → logprob: -1.7727489471435547
    3. '[
' → logprob: -1.8977489471435547
    4. '_' → logprob: -4.022748947143555
    5. ')
' → logprob: -4.522748947143555
    6. ']' → logprob: -4.647748947143555
    7. '.' → logprob: -5.022748947143555
    8. ',' → logprob: -5.147748947143555
    9. '
' → logprob: -5.272748947143555
    10. '   ' → logprob: -5.522748947143555

Token 1101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21498335897922516
    2. '#' → logprob: -1.964983344078064
    3. '               ' → logprob: -2.9649834632873535
    4. '           ' → logprob: -8.089982986450195
    5. 'from' → logprob: -8.089982986450195
    6. '
' → logprob: -8.214982986450195
    7. '```' → logprob: -8.714982986450195
    8. 'import' → logprob: -8.839982986450195
    9. ' #' → logprob: -9.339982986450195
    10. '       ' → logprob: -9.464982986450195

Token 1102: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1062166765332222
    2. '#' (adapté à ' #') → logprob: -2.3562166690826416
    3. '               ' → logprob: -5.731216907501221
    4. 'from' → logprob: -6.856216907501221
    5. '
' → logprob: -7.356216907501221
    6. 'import' → logprob: -8.106216430664062
    7. 'def' → logprob: -8.606216430664062
    8. '    
' → logprob: -8.856216430664062
    9. '```' → logprob: -9.231216430664062
    10. ' #' → logprob: -9.981216430664062

Token 1103: ' Aut' (ID: 8517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31798675656318665
    2. '#' → logprob: -1.8179867267608643
    3. '               ' → logprob: -2.9429867267608643
    4. 'from' → logprob: -3.6929867267608643
    5. 'max' → logprob: -4.192986965179443
    6. 'dp' → logprob: -4.567986965179443
    7. 'import' → logprob: -6.067986965179443
    8. 'return' → logprob: -7.442986965179443
    9. 'def' → logprob: -7.442986965179443
    10. '           ' → logprob: -7.567986965179443

Token 1104: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.4328782856464386
    2. 'rement' → logprob: -1.3078782558441162
    3. 'res' → logprob: -2.682878255844116
    4. 'ant' → logprob: -5.057878494262695
    5. '#' → logprob: -5.682878494262695
    6. 'ore' → logprob: -7.182878494262695
    7. 'our' → logprob: -7.432878494262695
    8. '
' → logprob: -8.057878494262695
    9. 'or' → logprob: -8.182878494262695
    10. 'rès' → logprob: -8.307878494262695

Token 1105: ' idée' (ID: 64187)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3877733647823334
    2. 'import' → logprob: -1.7627733945846558
    3. '#' → logprob: -2.637773275375366
    4. 'appro' → logprob: -4.012773513793945
    5. '   ' → logprob: -4.137773513793945
    6. 'from' → logprob: -4.762773513793945
    7. 'def' → logprob: -5.012773513793945
    8. '...' → logprob: -5.887773513793945
    9. ' approach' → logprob: -6.262773513793945
    10. '       ' → logprob: -6.387773513793945

Token 1106: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39934754371643066
    2. '#' → logprob: -1.2743475437164307
    3. 'import' → logprob: -3.8993475437164307
    4. ':' → logprob: -4.274347305297852
    5. '
' → logprob: -5.149347305297852
    6. 'from' → logprob: -5.149347305297852
    7. 'def' → logprob: -6.524347305297852
    8. ':
' → logprob: -7.274347305297852
    9. '    
' → logprob: -7.774347305297852
    10. '```' → logprob: -8.399347305297852

Token 1107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21798256039619446
    2. '#' → logprob: -1.717982530593872
    3. 'from' → logprob: -4.717982769012451
    4. '
' → logprob: -5.342982769012451
    5. 'import' → logprob: -7.092982769012451
    6. '    
' → logprob: -7.092982769012451
    7. 'def' → logprob: -7.967982769012451
    8. ' #' → logprob: -8.717982292175293
    9. '```' → logprob: -9.092982292175293
    10. '#
' → logprob: -9.467982292175293

Token 1108: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10884127765893936
    2. '   ' → logprob: -2.3588411808013916
    3. 'from' → logprob: -5.108841419219971
    4. '
' → logprob: -6.983841419219971
    5. 'def' → logprob: -7.233841419219971
    6. 'import' → logprob: -8.358840942382812
    7. ' #' → logprob: -8.483840942382812
    8. '    
' → logprob: -9.358840942382812
    9. 'max' → logprob: -9.358840942382812
    10. 'for' → logprob: -9.608840942382812

Token 1109: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17581094801425934
    2. 'from' → logprob: -2.3008110523223877
    3. '   ' → logprob: -3.3008110523223877
    4. 'max' → logprob: -4.550810813903809
    5. 'for' → logprob: -6.050810813903809
    6. 'return' → logprob: -6.300810813903809
    7. 'import' → logprob: -6.675810813903809
    8. 'def' → logprob: -6.675810813903809
    9. 'On' → logprob: -6.675810813903809
    10. '
' → logprob: -7.050810813903809

Token 1110: ' sac' (ID: 10672)
  Prédit: ' shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shop' → logprob: -0.5541528463363647
    2. 'shop' → logprob: -0.9291528463363647
    3. 'bout' → logprob: -4.429152965545654
    4. ' boutique' → logprob: -4.804152965545654
    5. '
' → logprob: -6.554152965545654
    6. 'for' → logprob: -6.679152965545654
    7. '#' → logprob: -6.929152965545654
    8. ' for' → logprob: -7.054152965545654
    9. ' #' → logprob: -7.304152965545654
    10. ' shops' → logprob: -7.429152965545654

Token 1111: ' a' (ID: 261)
  Prédit: ' acheté'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acheté' → logprob: -1.3711663484573364
    2. ' de' → logprob: -1.8711663484573364
    3. ' peut' → logprob: -1.9961663484573364
    4. ' est' → logprob: -2.246166229248047
    5. ' ajouté' → logprob: -2.621166229248047
    6. ' représente' → logprob: -3.371166229248047
    7. ' vendu' → logprob: -3.496166229248047
    8. ' des' → logprob: -3.746166229248047
    9. ' a' → logprob: -4.246166229248047
    10. 'aj' → logprob: -4.371166229248047

Token 1112: ' un' (ID: 537)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.40737783908844
    2. ' un' → logprob: -1.53237783908844
    3. ' shop' → logprob: -2.1573777198791504
    4. ' une' → logprob: -2.2823777198791504
    5. ' s' → logprob: -2.4073777198791504
    6. ''' → logprob: -3.4073777198791504
    7. 'shop' → logprob: -3.7823777198791504
    8. 's' → logprob: -3.7823777198791504
    9. ' {'' → logprob: -4.03237771987915
    10. 'une' → logprob: -4.53237771987915

Token 1113: ' poids' (ID: 56058)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.5128858089447021
    2. 'nombre' → logprob: -1.8878858089447021
    3. 'prix' → logprob: -2.262885808944702
    4. ' nombre' → logprob: -3.137885808944702
    5. ' coût' → logprob: -3.137885808944702
    6. ' prix' → logprob: -4.137886047363281
    7. 'cout' → logprob: -5.262886047363281
    8. 'multip' → logprob: -5.887886047363281
    9. ' multiple' → logprob: -6.262886047363281
    10. 'pack' → logprob: -6.262886047363281

Token 1114: ' fixe' (ID: 111690)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8845915198326111
    2. ',' → logprob: -1.6345915794372559
    3. '       ' → logprob: -2.884591579437256
    4. ' =' → logprob: -2.884591579437256
    5. ' et' → logprob: -3.134591579437256
    6. ' ,' → logprob: -3.259591579437256
    7. ' possible' → logprob: -3.759591579437256
    8. '\t' → logprob: -4.009591579437256
    9. ')' → logprob: -4.134591579437256
    10. '_possible' → logprob: -4.259591579437256

Token 1115: ' donc' (ID: 14206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7929710149765015
    2. '   ' → logprob: -2.167971134185791
    3. ' et' → logprob: -2.167971134185791
    4. '#' → logprob: -2.417971134185791
    5. '.' → logprob: -2.917971134185791
    6. 'et' → logprob: -3.292971134185791
    7. '
' → logprob: -3.792971134185791
    8. ',
' → logprob: -4.042971134185791
    9. '=' → logprob: -4.167971134185791
    10. ':' → logprob: -4.792971134185791

Token 1116: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6763430237770081
    2. 'on' → logprob: -1.1763429641723633
    3. ' chaque' → logprob: -2.3013429641723633
    4. 'le' → logprob: -3.8013429641723633
    5. ' le' → logprob: -4.676342964172363
    6. ' il' → logprob: -4.801342964172363
    7. 'cha' → logprob: -5.051342964172363
    8. 'nombre' → logprob: -5.301342964172363
    9. '#' → logprob: -5.551342964172363
    10. 'il' → logprob: -5.676342964172363

Token 1117: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.729670524597168
    2. ' peut' → logprob: -0.729670524597168
    3. 'pour' → logprob: -4.479670524597168
    4. ' peux' → logprob: -4.854670524597168
    5. ' pe' → logprob: -4.979670524597168
    6. ' pourra' → logprob: -6.104670524597168
    7. ' pour' → logprob: -6.229670524597168
    8. ' pourrait' → logprob: -6.479670524597168
    9. '#' → logprob: -6.979670524597168
    10. 'possible' → logprob: -7.604670524597168

Token 1118: ' calcul' (ID: 7559)
  Prédit: 'penser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'penser' → logprob: -0.9340612292289734
    2. 'contin' → logprob: -1.8090612888336182
    3. 'lim' → logprob: -2.184061288833618
    4. 'ess' → logprob: -2.809061288833618
    5. 'faire' → logprob: -3.434061288833618
    6. 'aj' → logprob: -3.809061288833618
    7. 'acheter' → logprob: -3.809061288833618
    8. 'util' → logprob: -4.309061050415039
    9. ' limiter' → logprob: -4.309061050415039
    10. 'pré' → logprob: -4.309061050415039

Token 1119: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0018208393594250083
    2. 'ate' → logprob: -6.501821041107178
    3. 'e' → logprob: -8.87682056427002
    4. '
' → logprob: -9.87682056427002
    5. '#' → logprob: -10.00182056427002
    6. '```' → logprob: -10.37682056427002
    7. '   ' → logprob: -11.37682056427002
    8. 'ater' → logprob: -11.75182056427002
    9. 'ateur' → logprob: -12.00182056427002
    10. 'ter' → logprob: -12.62682056427002

Token 1120: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.10840346664190292
    2. ' le' → logprob: -3.233403444290161
    3. 'comb' → logprob: -3.233403444290161
    4. 'pour' → logprob: -5.23340368270874
    5. ',' → logprob: -5.60840368270874
    6. 'max' → logprob: -5.60840368270874
    7. 'for' → logprob: -5.73340368270874
    8. ' combien' → logprob: -5.73340368270874
    9. 'la' → logprob: -6.73340368270874
    10. ' for' → logprob: -7.35840368270874

Token 1121: ' nombre' (ID: 9733)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9870884418487549
    2. 'nombre' → logprob: -1.6120884418487549
    3. 'maximum' → logprob: -1.9870884418487549
    4. ' max' → logprob: -2.237088441848755
    5. ' nombre' → logprob: -2.362088441848755
    6. ' maximum' → logprob: -2.612088441848755
    7. 'prix' → logprob: -5.237088203430176
    8. 'co' → logprob: -5.612088203430176
    9. ' coût' → logprob: -6.237088203430176
    10. ' prix' → logprob: -7.237088203430176

Token 1122: ' maximum' (ID: 10562)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8196616768836975
    2. '_de' → logprob: -1.0696616172790527
    3. '_' → logprob: -2.8196616172790527
    4. '   ' → logprob: -3.1946616172790527
    5. '_s' → logprob: -3.5696616172790527
    6. 'de' → logprob: -4.194661617279053
    7. '_of' → logprob: -4.194661617279053
    8. '    ' → logprob: -4.694661617279053
    9. '_possible' → logprob: -4.694661617279053
    10. '_des' → logprob: -5.069661617279053

Token 1123: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.05619389936327934
    2. ' de' → logprob: -3.5561938285827637
    3. '   ' → logprob: -4.431193828582764
    4. '_de' → logprob: -5.556193828582764
    5. 'possible' → logprob: -5.806193828582764
    6. 'max' → logprob: -6.431193828582764
    7. '_s' → logprob: -6.556193828582764
    8. 'par' → logprob: -6.931193828582764
    9. 's' → logprob: -7.181193828582764
    10. '```' → logprob: -7.431193828582764

Token 1124: ' sacs' (ID: 150414)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16086363792419434
    2. ' sacs' → logprob: -1.9108636379241943
    3. '```' → logprob: -7.785863876342773
    4. 'bags' → logprob: -9.410863876342773
    5. ' ' → logprob: -11.160863876342773
    6. '
' → logprob: -11.160863876342773
    7. '	s' → logprob: -11.285863876342773
    8. ' sac' → logprob: -11.660863876342773
    9. ' chaque' → logprob: -11.660863876342773
    10. ' each' → logprob: -11.785863876342773

Token 1125: ' nécessaires' (ID: 74402)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.0330801010131836
    2. 'max' → logprob: -1.4080801010131836
    3. 'par' → logprob: -2.1580801010131836
    4. ' possible' → logprob: -2.4080801010131836
    5. '_' → logprob: -2.9080801010131836
    6. 'A' → logprob: -3.5330801010131836
    7. ' max' → logprob: -3.9080801010131836
    8. ' par' → logprob: -4.408080101013184
    9. 'pour' → logprob: -4.658080101013184
    10. '_A' → logprob: -4.783080101013184

Token 1126: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.254249930381775
    2. '   ' → logprob: -1.504249930381775
    3. '           ' → logprob: -1.629249930381775
    4. '#' → logprob: -2.7542500495910645
    5. 'max' → logprob: -2.7542500495910645
    6. '       ' → logprob: -3.5042500495910645
    7. 'for' → logprob: -3.6292500495910645
    8. '                   ' → logprob: -3.7542500495910645
    9. '
' → logprob: -4.2542500495910645
    10. '_max' → logprob: -4.8792500495910645

Token 1127: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.3830534815788269
    2. 'each' → logprob: -1.8830535411834717
    3. 'atte' → logprob: -2.8830535411834717
    4. 'ch' → logprob: -3.1330535411834717
    5. ' chaque' → logprob: -3.5080535411834717
    6. 'acheter' → logprob: -4.883053302764893
    7. 'bout' → logprob: -4.883053302764893
    8. 'A' → logprob: -5.133053302764893
    9. 'Chaque' → logprob: -6.008053302764893
    10. ' each' → logprob: -6.258053302764893

Token 1128: ' boutique' (ID: 46148)
  Prédit: 'bout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bout' → logprob: -0.8181115984916687
    2. 'shop' → logprob: -0.9431115984916687
    3. ' shop' → logprob: -2.4431116580963135
    4. ' boutique' → logprob: -2.5681116580963135
    5. '```' → logprob: -5.818111419677734
    6. '
' → logprob: -7.943111419677734
    7. ' boutiques' → logprob: -7.943111419677734
    8. 'type' → logprob: -8.068111419677734
    9. '#' → logprob: -8.318111419677734
    10. 's' → logprob: -8.568111419677734

Token 1129: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6538378000259399
    2. 'max' → logprob: -0.9038378000259399
    3. '#' → logprob: -3.9038376808166504
    4. '               ' → logprob: -4.02883768081665
    5. '
' → logprob: -4.15383768081665
    6. ' max' → logprob: -4.52883768081665
    7. '           ' → logprob: -5.40383768081665
    8. '```' → logprob: -6.65383768081665
    9. '(max' → logprob: -6.90383768081665
    10. '_max' → logprob: -7.15383768081665

Token 1130: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8132521510124207
    2. '   ' → logprob: -1.5632522106170654
    3. '               ' → logprob: -1.5632522106170654
    4. 'max' → logprob: -2.3132522106170654
    5. '           ' → logprob: -4.063251972198486
    6. '```' → logprob: -5.313251972198486
    7. '                   ' → logprob: -5.438251972198486
    8. 'continue' → logprob: -5.938251972198486
    9. '       ' → logprob: -6.063251972198486
    10. 'for' → logprob: -6.313251972198486

Token 1131: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3330945074558258
    2. '   ' → logprob: -1.3330944776535034
    3. 'max' → logprob: -4.333094596862793
    4. '```' → logprob: -6.208094596862793
    5. '           ' → logprob: -6.458094596862793
    6. '               ' → logprob: -6.583094596862793
    7. '
' → logprob: -7.958094596862793
    8. ' max' → logprob: -8.083094596862793
    9. '                   ' → logprob: -8.833094596862793
    10. ' #' → logprob: -8.833094596862793

Token 1132: ' Les' (ID: 7029)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8703733682632446
    2. '               ' → logprob: -1.1203733682632446
    3. 'max' → logprob: -1.6203733682632446
    4. '   ' → logprob: -3.495373249053955
    5. '                   ' → logprob: -4.245373249053955
    6. '```' → logprob: -5.120373249053955
    7. '           ' → logprob: -5.995373249053955
    8. '
' → logprob: -7.745373249053955
    9. 'for' → logprob: -7.995373249053955
    10. '                       ' → logprob: -7.995373249053955

Token 1133: ' nombres' (ID: 76205)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5820210576057434
    2. 'max' → logprob: -0.8320210576057434
    3. '#' → logprob: -6.207021236419678
    4. ' for' → logprob: -7.332021236419678
    5. 'amount' → logprob: -7.457021236419678
    6. ' #' → logprob: -7.582021236419678
    7. 'for' → logprob: -7.832021236419678
    8. ' amount' → logprob: -7.957021236419678
    9. 'A' → logprob: -8.20702075958252
    10. ' maximum' → logprob: -8.70702075958252

Token 1134: ' max' (ID: 2999)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.29434388875961304
    2. '_' → logprob: -1.7943439483642578
    3. 'max' → logprob: -3.169343948364258
    4. '_de' → logprob: -4.044343948364258
    5. ' de' → logprob: -5.044343948364258
    6. ' max' → logprob: -5.294343948364258
    7. '_min' → logprob: -5.794343948364258
    8. ' _' → logprob: -6.169343948364258
    9. ' maximum' → logprob: -6.169343948364258
    10. 'de' → logprob: -6.669343948364258

Token 1135: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7201766967773438
    2. '_s' → logprob: -1.3451766967773438
    3. '_max' → logprob: -2.0951766967773438
    4. '_a' → logprob: -2.8451766967773438
    5. '_de' → logprob: -3.5951766967773438
    6. 'A' → logprob: -4.095176696777344
    7. '_b' → logprob: -5.345176696777344
    8. '_A' → logprob: -5.595176696777344
    9. 'max' → logprob: -5.595176696777344
    10. '_par' → logprob: -5.595176696777344

Token 1136: ' sacs' (ID: 150414)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16245675086975098
    2. ' sacs' → logprob: -1.912456750869751
    3. 'bags' → logprob: -6.662456512451172
    4. '```' → logprob: -7.787456512451172
    5. 'A' → logprob: -8.287456512451172
    6. ' ' → logprob: -10.412456512451172
    7. ' A' → logprob: -10.662456512451172
    8. '   ' → logprob: -10.724956512451172
    9. '
' → logprob: -10.724956512451172
    10. ' sac' → logprob: -10.787456512451172

Token 1137: ' pour' (ID: 1930)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7139790058135986
    2. '_' → logprob: -1.7139790058135986
    3. ' =' → logprob: -2.2139790058135986
    4. 'par' → logprob: -2.9639790058135986
    5. 'max' → logprob: -3.3389790058135986
    6. '_A' → logprob: -3.3389790058135986
    7. ' nécessaires' → logprob: -3.8389790058135986
    8. '=' → logprob: -4.2139787673950195
    9. '_max' → logprob: -4.4639787673950195
    10. 'pour' → logprob: -4.8389787673950195

Token 1138: ' atteindre' (ID: 95734)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0701103210449219
    2. 'shop' → logprob: -1.4451103210449219
    3. ' chaque' → logprob: -1.9451103210449219
    4. 'cha' → logprob: -2.195110321044922
    5. ' shop' → logprob: -3.070110321044922
    6. ' A' → logprob: -4.070110321044922
    7. ''A' → logprob: -4.070110321044922
    8. 'ch' → logprob: -4.445110321044922
    9. 'la' → logprob: -4.570110321044922
    10. 'each' → logprob: -4.570110321044922

Token 1139: ' au' (ID: 2791)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.2856682240962982
    2. ' amount' → logprob: -1.7856682538986206
    3. ' chaque' → logprob: -3.410668134689331
    4. 'l' → logprob: -4.78566837310791
    5. 'each' → logprob: -5.03566837310791
    6. ' la' → logprob: -5.28566837310791
    7. 'exact' → logprob: -5.53566837310791
    8. ' l' → logprob: -5.53566837310791
    9. 'ch' → logprob: -5.78566837310791
    10. ' ' → logprob: -5.78566837310791

Token 1140: ' max' (ID: 2999)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.01797737553715706
    2. 'minimum' → logprob: -4.267977237701416
    3. 'maximum' → logprob: -6.267977237701416
    4. 'mo' → logprob: -7.392977237701416
    5. 'max' → logprob: -7.642977237701416
    6. '   ' → logprob: -8.767977714538574
    7. ' moins' → logprob: -9.017977714538574
    8. '#' → logprob: -9.142977714538574
    9. 'menos' → logprob: -9.267977714538574
    10. 'min' → logprob: -9.392977714538574

Token 1141: ' ' (ID: 220)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -1.6017749309539795
    2. '={'' → logprob: -1.7267749309539795
    3. '[' → logprob: -2.1017749309539795
    4. '{
' → logprob: -2.6017749309539795
    5. '{' → logprob: -2.7267749309539795
    6. '{'' → logprob: -3.1017749309539795
    7. '   ' → logprob: -3.8517749309539795
    8. 'each' → logprob: -3.8517749309539795
    9. '=' → logprob: -3.8517749309539795
    10. ' amount' → logprob: -3.9767749309539795

Token 1142: '500' (ID: 3234)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.001355594489723444
    2. ' amount' → logprob: -6.8763556480407715
    3. '500' → logprob: -8.751355171203613
    4. '   ' → logprob: -9.751355171203613
    5. '```' → logprob: -10.501355171203613
    6. '(amount' → logprob: -11.251355171203613
    7. ' ' → logprob: -11.251355171203613
    8. '`' → logprob: -11.501355171203613
    9. '[' → logprob: -11.626355171203613
    10. '
' → logprob: -11.626355171203613

Token 1143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008852534228935838
    2. '   ' → logprob: -7.625885486602783
    3. ' ' → logprob: -8.750885009765625
    4. '00' → logprob: -9.625885009765625
    5. '  ' → logprob: -10.250885009765625
    6. '
' → logprob: -10.250885009765625
    7. 'amount' → logprob: -11.250885009765625
    8. '000' → logprob: -11.500885009765625
    9. '    ' → logprob: -11.500885009765625
    10. '       ' → logprob: -11.625885009765625

Token 1144: ' gram' (ID: 40134)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.530798316001892
    2. 'par' → logprob: -1.530798316001892
    3. ' par' → logprob: -2.2807984352111816
    4. 'pour' → logprob: -2.5307984352111816
    5. ' pour' → logprob: -2.7807984352111816
    6. 'de' → logprob: -2.9057984352111816
    7. ' =' → logprob: -3.1557984352111816
    8. '
' → logprob: -3.5307984352111816
    9. 's' → logprob: -3.6557984352111816
    10. ' de' → logprob: -3.7807984352111816

Token 1145: 'mes' (ID: 4613)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37622570991516113
    2. 'mes' → logprob: -2.626225709915161
    3. '#' → logprob: -2.876225709915161
    4. ')' → logprob: -3.001225709915161
    5. '}' → logprob: -3.251225709915161
    6. ']' → logprob: -3.251225709915161
    7. 'ètres' → logprob: -4.001225471496582
    8. 'ms' → logprob: -4.501225471496582
    9. '   ' → logprob: -4.626225471496582
    10. '(s' → logprob: -6.376225471496582

Token 1146: ':
' (ID: 734)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3181877136230469
    2. '   ' → logprob: -1.8181877136230469
    3. '#' → logprob: -3.318187713623047
    4. ' =' → logprob: -3.693187713623047
    5. '_max' → logprob: -3.818187713623047
    6. 'A' → logprob: -4.818187713623047
    7. '=' → logprob: -5.318187713623047
    8. '       ' → logprob: -5.443187713623047
    9. 'for' → logprob: -5.443187713623047
    10. '
' → logprob: -6.818187713623047

Token 1147: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7163152098655701
    2. '   ' → logprob: -1.0913152694702148
    3. '#' → logprob: -2.966315269470215
    4. ' max' → logprob: -3.716315269470215
    5. '
' → logprob: -3.841315269470215
    6. '{
' → logprob: -3.966315269470215
    7. 'A' → logprob: -3.966315269470215
    8. ''' → logprob: -4.716315269470215
    9. '```' → logprob: -4.716315269470215
    10. ''s' → logprob: -5.341315269470215

Token 1148: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.3230665624141693
    2. '   ' → logprob: -2.073066473007202
    3. ' max' → logprob: -2.073066473007202
    4. '#' → logprob: -3.948066473007202
    5. '
' → logprob: -6.448066711425781
    6. '```' → logprob: -7.323066711425781
    7. 'A' → logprob: -7.573066711425781
    8. ' ' → logprob: -7.948066711425781
    9. ''' → logprob: -8.323066711425781
    10. 'n' → logprob: -8.323066711425781

Token 1149: '_a' (ID: 10852)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.011924254707992077
    2. '_b' → logprob: -5.2619242668151855
    3. '_a' → logprob: -5.7619242668151855
    4. 'A' → logprob: -6.5119242668151855
    5. '_A' → logprob: -6.6369242668151855
    6. 's' → logprob: -7.8869242668151855
    7. '_counts' → logprob: -8.511923789978027
    8. '_' → logprob: -9.761923789978027
    9. '_amount' → logprob: -10.386923789978027
    10. '   ' → logprob: -11.636923789978027

Token 1150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06136851757764816
    2. '=' → logprob: -2.936368465423584
    3. '_s' → logprob: -5.561368465423584
    4. '_' → logprob: -6.311368465423584
    5. 's' → logprob: -7.561368465423584
    6. '_a' → logprob: -9.436368942260742
    7. '_count' → logprob: -10.186368942260742
    8. '_counts' → logprob: -10.436368942260742
    9. '   ' → logprob: -10.811368942260742
    10. '=_' → logprob: -11.061368942260742

Token 1151: ' amount' (ID: 4527)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.6697021722793579
    2. 'amount' → logprob: -0.9197021722793579
    3. '(' → logprob: -2.6697020530700684
    4. '25' → logprob: -4.919702053070068
    5. '500' → logprob: -5.169702053070068
    6. ' (' → logprob: -5.544702053070068
    7. ' amount' → logprob: -6.419702053070068
    8. ' ' → logprob: -6.919702053070068
    9. '   ' → logprob: -8.044702529907227
    10. '250' → logprob: -9.044702529907227

Token 1152: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.07085482776165009
    2. '//' → logprob: -2.820854902267456
    3. '#' → logprob: -4.820854663848877
    4. '   ' → logprob: -7.445854663848877
    5. '
' → logprob: -9.445855140686035
    6. ' #' → logprob: -9.445855140686035
    7. '=' → logprob: -12.195855140686035
    8. ')' → logprob: -12.195855140686035
    9. ' ' → logprob: -12.195855140686035
    10. '```' → logprob: -12.570855140686035

Token 1153: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.009010656736791134
    2. '200' → logprob: -4.7590107917785645
    3. ' shops' → logprob: -8.009010314941406
    4. ' ' → logprob: -10.509010314941406
    5. 'shop' → logprob: -11.134010314941406
    6. '   ' → logprob: -11.384010314941406
    7. 'stores' → logprob: -12.884010314941406
    8. 'ships' → logprob: -13.259010314941406
    9. '100' → logprob: -14.384010314941406
    10. '  ' → logprob: -14.634010314941406

Token 1154: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.01426622737199068
    2. ''A' → logprob: -4.264266014099121
    3. ''' → logprob: -9.639266014099121
    4. ' '' → logprob: -10.764266014099121
    5. ''S' → logprob: -12.139266014099121
    6. 'A' → logprob: -12.639266014099121
    7. '[
' → logprob: -13.389266014099121
    8. '[A' → logprob: -13.514266014099121
    9. '"A' → logprob: -13.764266014099121
    10. ''C' → logprob: -14.014266014099121

Token 1155: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07890421897172928
    2. ''A' → logprob: -2.578904151916504
    3. ''' → logprob: -12.203904151916504
    4. '"A' → logprob: -12.328904151916504
    5. ' A' → logprob: -13.578904151916504
    6. '['' → logprob: -13.828904151916504
    7. '’A' → logprob: -13.953904151916504
    8. '('' → logprob: -14.328904151916504
    9. ''a' → logprob: -15.203904151916504
    10. ' '' → logprob: -15.453904151916504

Token 1156: '']['' (ID: 9620)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.12945516407489777
    2. ''' → logprob: -2.254455089569092
    3. '['' → logprob: -4.254455089569092
    4. 'A' → logprob: -7.254455089569092
    5. 'amount' → logprob: -7.504455089569092
    6. ''a' → logprob: -7.879455089569092
    7. ' '' → logprob: -8.37945556640625
    8. ']['' → logprob: -9.12945556640625
    9. ''s' → logprob: -9.75445556640625
    10. '"A' → logprob: -10.12945556640625

Token 1157: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0007479215855710208
    2. ''' → logprob: -7.250748157501221
    3. ''A' → logprob: -10.625747680664062
    4. 'A' → logprob: -11.750747680664062
    5. ''s' → logprob: -13.250747680664062
    6. ''am' → logprob: -14.125747680664062
    7. ' amount' → logprob: -14.250747680664062
    8. ''a' → logprob: -14.375747680664062
    9. '['' → logprob: -14.375747680664062
    10. ''m' → logprob: -14.750747680664062

Token 1158: '']' (ID: 1089)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2522985339164734
    2. '+' → logprob: -1.5022985935211182
    3. ']' → logprob: -8.127298355102539
    4. ']+' → logprob: -9.752298355102539
    5. '   ' → logprob: -12.002298355102539
    6. ')' → logprob: -13.127298355102539
    7. '']' → logprob: -13.127298355102539
    8. ')+' → logprob: -13.877298355102539
    9. ' plus' → logprob: -14.252298355102539
    10. '+
' → logprob: -14.377298355102539

Token 1159: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759763121604919
    2. '+' → logprob: -0.8259763121604919
    3. '
' → logprob: -10.825976371765137
    4. '   ' → logprob: -12.075976371765137
    5. '+
' → logprob: -12.325976371765137
    6. 'max' → logprob: -13.075976371765137
    7. ' plus' → logprob: -13.325976371765137
    8. 'import' → logprob: -14.075976371765137
    9. ' +
' → logprob: -14.575976371765137
    10. '#' → logprob: -14.950976371765137

Token 1160: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4758284091949463
    2. '1' → logprob: -0.9758284091949463
    3. '3' → logprob: -7.100828170776367
    4. ' ' → logprob: -7.725828170776367
    5. '5' → logprob: -8.225828170776367
    6. '10' → logprob: -8.725828170776367
    7. '6' → logprob: -10.350828170776367
    8. '   ' → logprob: -11.225828170776367
    9. '7' → logprob: -12.475828170776367
    10. '  ' → logprob: -13.913328170776367

Token 1161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5233262181282043
    2. '2' → logprob: -0.8983262181282043
    3. '3' → logprob: -9.27332592010498
    4. ' ' → logprob: -9.77332592010498
    5. '10' → logprob: -10.27332592010498
    6. '5' → logprob: -11.64832592010498
    7. '   ' → logprob: -12.02332592010498
    8. '(' → logprob: -13.89832592010498
    9. '6' → logprob: -14.64832592010498
    10. '7' → logprob: -15.02332592010498

Token 1162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.033400848507881165
    2. '+' → logprob: -3.908400774002075
    3. 'max' → logprob: -5.283401012420654
    4. '   ' → logprob: -5.408401012420654
    5. ' +' → logprob: -5.908401012420654
    6. '
' → logprob: -9.033400535583496
    7. '```' → logprob: -9.158400535583496
    8. '+
' → logprob: -9.533400535583496
    9. '    
' → logprob: -9.783400535583496
    10. '#' → logprob: -10.158400535583496

Token 1163: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.063199982047081
    2. '   ' → logprob: -2.813199996948242
    3. ' max' → logprob: -6.938199996948242
    4. '
' → logprob: -8.438199996948242
    5. '```' → logprob: -10.438199996948242
    6. '    
' → logprob: -12.438199996948242
    7. '	max' → logprob: -12.438199996948242
    8. '       ' → logprob: -13.438199996948242
    9. ' ' → logprob: -13.438199996948242
    10. '`' → logprob: -13.438199996948242

Token 1164: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -13.37500286102295
    3. ' max' → logprob: -13.37500286102295
    4. '
' → logprob: -17.625003814697266
    5. '```' → logprob: -17.625003814697266
    6. '	max' → logprob: -19.375003814697266
    7. '(max' → logprob: -20.875003814697266
    8. '       ' → logprob: -21.000003814697266
    9. ' ' → logprob: -21.250003814697266
    10. '`' → logprob: -21.625003814697266

Token 1165: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.06707146763801575
    2. 'B' → logprob: -2.9420714378356934
    3. '_B' → logprob: -4.692071437835693
    4. '_a' → logprob: -6.317071437835693
    5. 'b' → logprob: -7.942071437835693
    6. '['' → logprob: -8.817071914672852
    7. ''b' → logprob: -8.817071914672852
    8. 'A' → logprob: -8.942071914672852
    9. ''' → logprob: -9.817071914672852
    10. '```' → logprob: -10.067071914672852

Token 1166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141635835170746
    2. '=' → logprob: -1.7014163732528687
    3. '=max' → logprob: -13.576416015625
    4. '=
' → logprob: -15.076416015625
    5. ' =
' → logprob: -15.076416015625
    6. '```' → logprob: -15.201416015625
    7. ',' → logprob: -15.451416015625
    8. ' ' → logprob: -15.701416015625
    9. '<|end|>' → logprob: -15.701416015625
    10. 'max' → logprob: -15.701416015625

Token 1167: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.47702720761299133
    2. ' amount' → logprob: -0.977027177810669
    3. '(amount' → logprob: -5.852027416229248
    4. ' (' → logprob: -9.72702693939209
    5. '   ' → logprob: -11.85202693939209
    6. '(' → logprob: -12.72702693939209
    7. ' ' → logprob: -13.97702693939209
    8. ' amounts' → logprob: -14.47702693939209
    9. '_amount' → logprob: -15.85202693939209
    10. '.amount' → logprob: -16.102027893066406

Token 1168: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.21973451972007751
    2. ' //' → logprob: -1.7197345495224
    3. '#' → logprob: -4.0947346687316895
    4. '```' → logprob: -6.9697346687316895
    5. '//=' → logprob: -9.219734191894531
    6. ' #' → logprob: -9.219734191894531
    7. ' ' → logprob: -9.344734191894531
    8. '[' → logprob: -9.469734191894531
    9. '=' → logprob: -10.094734191894531
    10. '+' → logprob: -10.219734191894531

Token 1169: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.07889319956302643
    2. ' shops' → logprob: -2.5788931846618652
    3. 'shop' → logprob: -13.078893661499023
    4. '   ' → logprob: -14.578893661499023
    5. 'ships' → logprob: -14.828893661499023
    6. ' ' → logprob: -16.328893661499023
    7. 'stores' → logprob: -16.328893661499023
    8. '
' → logprob: -16.453893661499023
    9. '       ' → logprob: -16.828893661499023
    10. 'shirts' → logprob: -17.078893661499023

Token 1170: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -2.641841820150148e-05
    2. ''' → logprob: -11.12502670288086
    3. '   ' → logprob: -11.75002670288086
    4. ']['' → logprob: -13.87502670288086
    5. '[B' → logprob: -14.37502670288086
    6. 'B' → logprob: -14.87502670288086
    7. '
' → logprob: -15.25002670288086
    8. '["' → logprob: -15.37502670288086
    9. '#' → logprob: -15.62502670288086
    10. '       ' → logprob: -15.75002670288086

Token 1171: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.22992774844169617
    2. 'shops' → logprob: -2.1049277782440186
    3. ''' → logprob: -2.6049277782440186
    4. ''s' → logprob: -5.3549275398254395
    5. '['' → logprob: -5.4799275398254395
    6. ''b' → logprob: -8.979928016662598
    7. '"B' → logprob: -9.104928016662598
    8. ''C' → logprob: -9.604928016662598
    9. ''S' → logprob: -9.854928016662598
    10. 'C' → logprob: -9.979928016662598

Token 1172: '']['' (ID: 9620)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.5463601350784302
    2. '['' → logprob: -1.2963601350784302
    3. '']['' → logprob: -1.9213601350784302
    4. ''' → logprob: -7.671360015869141
    5. '   ' → logprob: -8.29636001586914
    6. '']' → logprob: -9.29636001586914
    7. '
' → logprob: -10.42136001586914
    8. ''s' → logprob: -10.54636001586914
    9. 'A' → logprob: -10.79636001586914
    10. '#' → logprob: -10.92136001586914

Token 1173: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0030799098312854767
    2. ''' → logprob: -5.878079891204834
    3. '['' → logprob: -8.253080368041992
    4. ''s' → logprob: -12.628080368041992
    5. ''am' → logprob: -12.878080368041992
    6. '{'' → logprob: -13.003080368041992
    7. ' amount' → logprob: -13.128080368041992
    8. '   ' → logprob: -13.878080368041992
    9. ''m' → logprob: -14.378080368041992
    10. '
' → logprob: -14.503080368041992

Token 1174: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.19876687228679657
    2. ']' → logprob: -2.0737669467926025
    3. '+' → logprob: -3.1987669467926025
    4. ' +' → logprob: -4.823766708374023
    5. ']+' → logprob: -5.198766708374023
    6. ' ]' → logprob: -9.823766708374023
    7. '   ' → logprob: -10.323766708374023
    8. '"]' → logprob: -10.448766708374023
    9. ''+' → logprob: -11.448766708374023
    10. ''' → logprob: -11.448766708374023

Token 1175: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693147599697113
    2. ' +' → logprob: -0.693147599697113
    3. '   ' → logprob: -15.818147659301758
    4. '＋' → logprob: -16.693147659301758
    5. '()+' → logprob: -17.068147659301758
    6. ' plus' → logprob: -17.693147659301758
    7. ' ' → logprob: -17.693147659301758
    8. '```' → logprob: -17.818147659301758
    9. '+
' → logprob: -18.068147659301758
    10. ')+' → logprob: -18.568147659301758

Token 1176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0590548703912646e-05
    2. ' ' → logprob: -10.750030517578125
    3. '2' → logprob: -12.125030517578125
    4. '   ' → logprob: -13.500030517578125
    5. '
' → logprob: -13.875030517578125
    6. '+' → logprob: -14.250030517578125
    7. '(' → logprob: -16.500030517578125
    8. '    ' → logprob: -16.750030517578125
    9. '3' → logprob: -17.125030517578125
    10. '10' → logprob: -17.312530517578125

Token 1177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.786196975852363e-05
    2. '2' → logprob: -10.250038146972656
    3. ' ' → logprob: -14.000038146972656
    4. '   ' → logprob: -14.500038146972656
    5. '10' → logprob: -14.875038146972656
    6. 'max' → logprob: -15.625038146972656
    7. '5' → logprob: -16.125038146972656
    8. '3' → logprob: -16.250038146972656
    9. '6' → logprob: -16.750038146972656
    10. '20' → logprob: -17.000038146972656

Token 1178: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002312622731551528
    2. '   ' → logprob: -6.377312660217285
    3. ' max' → logprob: -7.752312660217285
    4. '
' → logprob: -9.002312660217285
    5. '```' → logprob: -10.252312660217285
    6. ',' → logprob: -11.752312660217285
    7. '(max' → logprob: -12.502312660217285
    8. ',max' → logprob: -12.627312660217285
    9. '	max' → logprob: -13.627312660217285
    10. '[max' → logprob: -13.627312660217285

Token 1179: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004747672006487846
    2. ' max' → logprob: -6.0047478675842285
    3. '   ' → logprob: -6.1297478675842285
    4. '```' → logprob: -9.62974739074707
    5. '
' → logprob: -11.62974739074707
    6. '	max' → logprob: -12.00474739074707
    7. '(max' → logprob: -12.25474739074707
    8. '``' → logprob: -13.12974739074707
    9. '`' → logprob: -13.50474739074707
    10. '_max' → logprob: -14.37974739074707

Token 1180: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -2.7252845029579476e-05
    2. '   ' → logprob: -10.750027656555176
    3. ' max' → logprob: -12.125027656555176
    4. '```' → logprob: -15.000027656555176
    5. '
' → logprob: -17.62502670288086
    6. '       ' → logprob: -19.25002670288086
    7. '``' → logprob: -19.50002670288086
    8. '	max' → logprob: -19.62502670288086
    9. '(max' → logprob: -19.75002670288086
    10. '`' → logprob: -20.50002670288086

Token 1181: '_c' (ID: 1303)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.056251488626003265
    2. '_c' → logprob: -3.4312515258789062
    3. ''C' → logprob: -3.9312515258789062
    4. '_C' → logprob: -6.306251525878906
    5. '['' → logprob: -7.681251525878906
    6. 'c' → logprob: -8.056251525878906
    7. '   ' → logprob: -10.431251525878906
    8. '"C' → logprob: -11.306251525878906
    9. '#' → logprob: -11.556251525878906
    10. '.C' → logprob: -11.681251525878906

Token 1182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.576414108276367
    4. '   ' → logprob: -15.826414108276367
    5. '```' → logprob: -16.701414108276367
    6. ' ' → logprob: -17.076414108276367
    7. '=int' → logprob: -17.451414108276367
    8. '=max' → logprob: -17.826414108276367
    9. '<|end|>' → logprob: -17.951414108276367
    10. ' =
' → logprob: -18.076414108276367

Token 1183: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.10021023452281952
    2. ' amount' → logprob: -2.350210189819336
    3. '(amount' → logprob: -12.725210189819336
    4. '   ' → logprob: -14.850210189819336
    5. ' ' → logprob: -15.975210189819336
    6. ' amounts' → logprob: -17.725210189819336
    7. '    ' → logprob: -17.975210189819336
    8. '500' → logprob: -18.225210189819336
    9. '  ' → logprob: -18.725210189819336
    10. '0' → logprob: -19.100210189819336

Token 1184: ' //' (ID: 602)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1107901334762573
    2. ' //' → logprob: -1.2357901334762573
    3. '//' → logprob: -1.8607901334762573
    4. '#' → logprob: -2.610790252685547
    5. ' =' → logprob: -2.860790252685547
    6. ' #' → logprob: -3.110790252685547
    7. 'amount' → logprob: -3.235790252685547
    8. ' amount' → logprob: -5.485790252685547
    9. '...' → logprob: -6.860790252685547
    10. '(amount' → logprob: -6.985790252685547

Token 1185: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.013816154561936855
    2. ' shops' → logprob: -4.7638163566589355
    3. 'amount' → logprob: -5.2638163566589355
    4. ' amount' → logprob: -12.388815879821777
    5. '(' → logprob: -12.513815879821777
    6. '   ' → logprob: -13.388815879821777
    7. '(amount' → logprob: -13.888815879821777
    8. 'ships' → logprob: -14.513815879821777
    9. ' ' → logprob: -14.888815879821777
    10. '    ' → logprob: -15.513815879821777

Token 1186: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00032378386822529137
    2. '//' → logprob: -9.000324249267578
    3. 'C' → logprob: -9.500324249267578
    4. ']['' → logprob: -9.625324249267578
    5. '#' → logprob: -11.000324249267578
    6. '']['' → logprob: -11.625324249267578
    7. '   ' → logprob: -11.750324249267578
    8. '```' → logprob: -12.375324249267578
    9. ''C' → logprob: -12.625324249267578
    10. '+' → logprob: -12.875324249267578

Token 1187: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11905502527952194
    2. ''C' → logprob: -2.2440550327301025
    3. ''' → logprob: -5.869054794311523
    4. 'amount' → logprob: -6.619054794311523
    5. '['' → logprob: -6.744054794311523
    6. ''s' → logprob: -7.244054794311523
    7. '   ' → logprob: -10.744054794311523
    8. ' '' → logprob: -10.869054794311523
    9. '```' → logprob: -11.119054794311523
    10. ' C' → logprob: -11.119054794311523

Token 1188: '']['' (ID: 9620)
  Prédit: '][''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']['' → logprob: -0.8593332767486572
    2. '']['' → logprob: -0.9843332767486572
    3. '['' → logprob: -1.6093332767486572
    4. '']' → logprob: -6.109333038330078
    5. '   ' → logprob: -8.359333038330078
    6. '+' → logprob: -8.609333038330078
    7. '```' → logprob: -9.859333038330078
    8. ''' → logprob: -10.734333038330078
    9. ']' → logprob: -10.984333038330078
    10. '#' → logprob: -10.984333038330078

Token 1189: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0017716889269649982
    2. ''' → logprob: -7.126771926879883
    3. '['' → logprob: -7.126771926879883
    4. '{'' → logprob: -9.876771926879883
    5. '500' → logprob: -10.626771926879883
    6. ' amount' → logprob: -11.001771926879883
    7. '`' → logprob: -11.001771926879883
    8. '   ' → logprob: -11.126771926879883
    9. '```' → logprob: -11.126771926879883
    10. ' ' → logprob: -12.376771926879883

Token 1190: '']' (ID: 1089)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8363205194473267
    2. '']' → logprob: -0.8363205194473267
    3. ' +' → logprob: -2.586320400238037
    4. ']' → logprob: -2.961320400238037
    5. ']+' → logprob: -5.211320400238037
    6. '}' → logprob: -7.836320400238037
    7. ''' → logprob: -9.211320877075195
    8. '}+' → logprob: -9.336320877075195
    9. '   ' → logprob: -9.586320877075195
    10. '"]' → logprob: -9.586320877075195

Token 1191: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3333642780780792
    2. 'dp' → logprob: -1.7083642482757568
    3. '
' → logprob: -2.708364248275757
    4. 'max' → logprob: -4.208364486694336
    5. ' dp' → logprob: -5.333364486694336
    6. 'from' → logprob: -5.833364486694336
    7. 'import' → logprob: -5.958364486694336
    8. '```' → logprob: -6.208364486694336
    9. '+' → logprob: -6.833364486694336
    10. 'for' → logprob: -6.833364486694336

Token 1192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004837007261812687
    2. '2' → logprob: -5.3798370361328125
    3. '6' → logprob: -8.629837036132812
    4. ' ' → logprob: -10.379837036132812
    5. '```' → logprob: -13.379837036132812
    6. '5' → logprob: -13.942337036132812
    7. '(' → logprob: -14.067337036132812
    8. '   ' → logprob: -14.504837036132812
    9. '7' → logprob: -14.504837036132812
    10. '3' → logprob: -15.254837036132812

Token 1193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03360305726528168
    2. '(' → logprob: -4.283603191375732
    3. '2' → logprob: -4.283603191375732
    4. '11' → logprob: -6.658603191375732
    5. '(max' → logprob: -6.908603191375732
    6. '(amount' → logprob: -7.158603191375732
    7. ' ' → logprob: -7.908603191375732
    8. '10' → logprob: -8.033602714538574
    9. ' (' → logprob: -8.283602714538574
    10. '((' → logprob: -8.533602714538574

Token 1194: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05467970296740532
    2. '   ' → logprob: -3.8046796321868896
    3. 'from' → logprob: -3.9296796321868896
    4. 'for' → logprob: -5.679679870605469
    5. 'import' → logprob: -5.804679870605469
    6. '
' → logprob: -5.929679870605469
    7. '#' → logprob: -6.929679870605469
    8. '```' → logprob: -8.054679870605469
    9. 'cost' → logprob: -8.179679870605469
    10. ' dp' → logprob: -8.554679870605469

Token 1195: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31274688243865967
    2. 'from' → logprob: -1.8127468824386597
    3. '   ' → logprob: -2.937747001647949
    4. '
' → logprob: -3.312747001647949
    5. 'import' → logprob: -4.687747001647949
    6. ' from' → logprob: -5.937747001647949
    7. ' dp' → logprob: -6.562747001647949
    8. '#' → logprob: -6.687747001647949
    9. 'min' → logprob: -7.812747001647949
    10. '    
' → logprob: -8.18774700164795

Token 1196: ' min' (ID: 1349)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028013506904244423
    2. 'from' → logprob: -4.528013706207275
    3. '   ' → logprob: -5.028013706207275
    4. 'import' → logprob: -5.028013706207275
    5. 'min' (adapté à ' min') → logprob: -5.903013706207275
    6. '#' → logprob: -7.278013706207275
    7. 'cost' → logprob: -9.153013229370117
    8. 'best' → logprob: -9.528013229370117
    9. '
' → logprob: -9.778013229370117
    10. 'for' → logprob: -10.778013229370117

Token 1197: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00044103997061029077
    2. 'cost' → logprob: -8.12544059753418
    3. '_price' → logprob: -9.25044059753418
    4. '_total' → logprob: -10.12544059753418
    5. '_co' → logprob: -12.00044059753418
    6. '_' → logprob: -13.62544059753418
    7. 'Cost' → logprob: -15.00044059753418
    8. ' cost' → logprob: -15.00044059753418
    9. '_COST' → logprob: -15.25044059753418
    10. 'total' → logprob: -15.25044059753418

Token 1198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760403275489807
    2. ' =' → logprob: -0.8260403275489807
    3. '   ' → logprob: -9.576040267944336
    4. ',' → logprob: -10.951040267944336
    5. '=
' → logprob: -12.576040267944336
    6. '```' → logprob: -12.826040267944336
    7. '    ' → logprob: -13.326040267944336
    8. '=float' → logprob: -13.951040267944336
    9. '=None' → logprob: -14.076040267944336
    10. '={}' → logprob: -14.326040267944336

Token 1199: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3408571183681488
    2. 'INF' → logprob: -1.3408571481704712
    3. 'sys' → logprob: -3.7158570289611816
    4. ' ' → logprob: -7.090857028961182
    5. ' INF' → logprob: -7.340857028961182
    6. 'float' → logprob: -8.09085750579834
    7. ' sys' → logprob: -8.46585750579834
    8. 'IN' → logprob: -8.59085750579834
    9. 'inf' → logprob: -8.84085750579834
    10. 'None' → logprob: -8.96585750579834

Token 1200: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09819348156452179
    2. 'sys' → logprob: -2.598193407058716
    3. 'INF' → logprob: -4.098193645477295
    4. 'float' → logprob: -6.348193645477295
    5. 'int' → logprob: -8.098193168640137
    6. 'None' → logprob: -8.598193168640137
    7. 'IN' → logprob: -10.098193168640137
    8. 'math' → logprob: -10.223193168640137
    9. 'INT' → logprob: -10.348193168640137
    10. '100' → logprob: -10.473193168640137

Token 1201: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3496648371219635
    2. '9' → logprob: -1.2246648073196411
    3. '7' → logprob: -7.224664688110352
    4. '6' → logprob: -8.099664688110352
    5. '\xe2\x81' → logprob: -9.599664688110352
    6. '```' → logprob: -10.099664688110352
    7. '^' → logprob: -10.474664688110352
    8. '#' → logprob: -11.349664688110352
    9. '000' → logprob: -11.724664688110352
    10. ' **' → logprob: -11.849664688110352

Token 1202: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -8.280175097752362e-05
    2. '7' → logprob: -10.000082969665527
    3. '15' → logprob: -10.500082969665527
    4. '12' → logprob: -11.875082969665527
    5. '10' → logprob: -13.250082969665527
    6. '8' → logprob: -14.625082969665527
    7. '18' → logprob: -15.250082969665527
    8. '6' → logprob: -15.500082969665527
    9. '
' → logprob: -17.00008201599121
    10. '13' → logprob: -17.25008201599121

Token 1203: '
    
' (ID: 15698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49320876598358154
    2. '   ' → logprob: -1.1182087659835815
    3. ' for' → logprob: -3.243208885192871
    4. '
' → logprob: -4.118208885192871
    5. '```' → logprob: -5.368208885192871
    6. '    
' → logprob: -7.368208885192871
    7. ',' → logprob: -7.493208885192871
    8. ' =' → logprob: -8.368208885192871
    9. '=' → logprob: -8.493208885192871
    10. '	for' → logprob: -8.993208885192871

Token 1204: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31543657183647156
    2. '   ' → logprob: -1.315436601638794
    3. ' for' → logprob: -6.190436363220215
    4. '```' → logprob: -9.065436363220215
    5. '
' → logprob: -12.315436363220215
    6. '	for' → logprob: -13.440436363220215
    7. '    
' → logprob: -14.065436363220215
    8. '   ' → logprob: -14.940436363220215
    9. '``' → logprob: -15.315436363220215
    10. '`' → logprob: -15.815436363220215

Token 1205: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002191779436543584
    2. '   ' → logprob: -6.252191543579102
    3. ' for' → logprob: -8.252191543579102
    4. '```' → logprob: -13.127191543579102
    5. '	for' → logprob: -15.877191543579102
    6. '
' → logprob: -16.0021915435791
    7. 'A' → logprob: -16.2521915435791
    8. '``' → logprob: -17.0021915435791
    9. ' ' → logprob: -17.2521915435791
    10. '#' (adapté à ' #') → logprob: -17.8771915435791

Token 1206: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014385734684765339
    2. ' for' → logprob: -4.88938570022583
    3. '   ' → logprob: -5.01438570022583
    4. '```' → logprob: -9.389386177062988
    5. 'A' → logprob: -10.764386177062988
    6. '
' → logprob: -13.014386177062988
    7. 'from' → logprob: -13.014386177062988
    8. '	for' → logprob: -13.514386177062988
    9. ' ' → logprob: -13.514386177062988
    10. 'range' → logprob: -14.139386177062988

Token 1207: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11295817047357559
    2. ' for' → logprob: -2.2379581928253174
    3. '   ' → logprob: -9.987957954406738
    4. 'range' → logprob: -10.737957954406738
    5. 'pour' → logprob: -11.237957954406738
    6. '```' → logprob: -11.362957954406738
    7. ' continue' → logprob: -11.612957954406738
    8. ' pour' → logprob: -11.862957954406738
    9. 'continue' → logprob: -11.987957954406738
    10. ' range' → logprob: -12.112957954406738

Token 1208: ' essayer' (ID: 92713)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14707797765731812
    2. ' for' → logprob: -2.147078037261963
    3. ' parcour' → logprob: -5.147078037261963
    4. ' iter' → logprob: -5.772078037261963
    5. 'range' → logprob: -6.022078037261963
    6. ' bou' → logprob: -6.272078037261963
    7. '```' → logprob: -6.647078037261963
    8. 'iter' → logprob: -6.897078037261963
    9. 'import' → logprob: -7.147078037261963
    10. ' range' → logprob: -7.647078037261963

Token 1209: ' toutes' (ID: 17502)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2207973748445511
    2. '   ' → logprob: -2.595797300338745
    3. ' for' → logprob: -2.720797300338745
    4. 'range' → logprob: -3.095797300338745
    5. ' de' → logprob: -5.720797538757324
    6. ' range' → logprob: -5.845797538757324
    7. 'de' → logprob: -5.970797538757324
    8. ' ' → logprob: -7.345797538757324
    9. 'max' → logprob: -7.345797538757324
    10. 'a' → logprob: -7.720797538757324

Token 1210: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4445265531539917
    2. ' a' → logprob: -1.8195265531539917
    3. '   ' → logprob: -2.4445266723632812
    4. 'ranges' → logprob: -4.069526672363281
    5. ' ' → logprob: -4.194526672363281
    6. ' possible' → logprob: -4.444526672363281
    7. 'range' → logprob: -4.569526672363281
    8. ' combinations' → logprob: -4.694526672363281
    9. 'possible' → logprob: -4.694526672363281
    10. ' (' → logprob: -4.819526672363281

Token 1211: ' comb' (ID: 4134)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07080541551113129
    2. ' a' → logprob: -2.695805311203003
    3. 'for' → logprob: -8.195805549621582
    4. 'A' → logprob: -9.195805549621582
    5. '   ' → logprob: -9.320805549621582
    6. ' for' → logprob: -9.570805549621582
    7. ' ' → logprob: -9.695805549621582
    8. 'ranges' → logprob: -9.820805549621582
    9. ' combinations' → logprob: -10.320805549621582
    10. 'comb' → logprob: -10.445805549621582

Token 1212: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.8120919466018677
    2. 'inais' → logprob: -0.8120919466018677
    3. 'ina' → logprob: -2.562091827392578
    4. 'binations' → logprob: -4.687091827392578
    5. 'n' → logprob: -4.937091827392578
    6. 'i' → logprob: -5.437091827392578
    7. '   ' → logprob: -5.562091827392578
    8. 'ination' → logprob: -6.312091827392578
    9. 'in' → logprob: -6.562091827392578
    10. '```' → logprob: -7.062091827392578

Token 1213: 'ons' (ID: 1808)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07523313909769058
    2. 'sons' → logprob: -3.075233221054077
    3. 'ais' → logprob: -3.950233221054077
    4. 'ations' → logprob: -6.325232982635498
    5. 's' → logprob: -6.700232982635498
    6. '```' → logprob: -7.200232982635498
    7. 'ons' → logprob: -7.325232982635498
    8. '
' → logprob: -7.450232982635498
    9. 'n' → logprob: -7.575232982635498
    10. '   ' → logprob: -8.200233459472656

Token 1214: ' possibles' (ID: 97753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8915353417396545
    2. 'for' → logprob: -0.8915353417396545
    3. '   ' → logprob: -1.7665352821350098
    4. 'a' → logprob: -5.26653528213501
    5. ' a' → logprob: -6.76653528213501
    6. 'range' → logprob: -7.26653528213501
    7. ' range' → logprob: -7.89153528213501
    8. ' de' → logprob: -8.016535758972168
    9. ' (' → logprob: -8.516535758972168
    10. ' pour' → logprob: -8.891535758972168

Token 1215: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39265570044517517
    2. '   ' → logprob: -1.2676557302474976
    3. ' for' → logprob: -3.142655611038208
    4. '```' → logprob: -10.767655372619629
    5. 'pour' → logprob: -11.142655372619629
    6. '
' → logprob: -11.267655372619629
    7. 'a' → logprob: -11.892655372619629
    8. ' pour' → logprob: -12.642655372619629
    9. '	for' → logprob: -12.642655372619629
    10. 'range' → logprob: -12.642655372619629

Token 1216: ' sacs' (ID: 150414)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004701987840235233
    2. ' a' → logprob: -5.379702091217041
    3. 'i' → logprob: -10.754701614379883
    4. 'max' → logprob: -10.754701614379883
    5. 'range' → logprob: -10.879701614379883
    6. 'A' → logprob: -12.504701614379883
    7. 'c' → logprob: -13.004701614379883
    8. '_a' → logprob: -13.129701614379883
    9. '0' → logprob: -13.254701614379883
    10. '	a' → logprob: -13.629701614379883

Token 1217: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5052149295806885
    2. ' for' → logprob: -1.1302149295806885
    3. '   ' → logprob: -2.6302149295806885
    4. 'A' → logprob: -7.505214691162109
    5. 'a' → logprob: -8.88021469116211
    6. '```' → logprob: -8.88021469116211
    7. ',' → logprob: -9.00521469116211
    8. '
' → logprob: -9.00521469116211
    9. 'range' → logprob: -9.00521469116211
    10. ' range' → logprob: -9.38021469116211

Token 1218: ' boutiques' (ID: 108274)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.123720683157444
    2. 'range' → logprob: -3.623720645904541
    3. 'shops' → logprob: -3.623720645904541
    4. ' A' → logprob: -4.373720645904541
    5. 'max' → logprob: -4.498720645904541
    6. '#' → logprob: -4.623720645904541
    7. '0' → logprob: -5.123720645904541
    8. 'a' → logprob: -5.373720645904541
    9. ''A' → logprob: -5.373720645904541
    10. 'ranges' → logprob: -6.248720645904541

Token 1219: ' A' (ID: 355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6609124541282654
    2. 'for' → logprob: -0.7859124541282654
    3. '   ' → logprob: -3.66091251373291
    4. 'A' → logprob: -6.66091251373291
    5. '
' → logprob: -8.66091251373291
    6. ' range' → logprob: -8.66091251373291
    7. 'range' → logprob: -8.78591251373291
    8. ',' → logprob: -9.03591251373291
    9. ' pour' → logprob: -9.78591251373291
    10. ' A' → logprob: -9.91091251373291

Token 1220: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7482578754425049
    2. 'for' → logprob: -1.3732578754425049
    3. ':' → logprob: -1.8732578754425049
    4. 'A' → logprob: -3.498257875442505
    5. ',' → logprob: -3.498257875442505
    6. '   ' → logprob: -3.623257875442505
    7. '+' → logprob: -4.623257637023926
    8. ' jusqu' → logprob: -5.373257637023926
    9. ' :' → logprob: -5.623257637023926
    10. ':
' → logprob: -6.248257637023926

Token 1221: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.16229026019573212
    2. ' B' → logprob: -1.9122902154922485
    3. 'range' → logprob: -7.162290096282959
    4. '   ' → logprob: -7.287290096282959
    5. ' range' → logprob: -8.662290573120117
    6. 'for' → logprob: -8.787290573120117
    7. ',' → logprob: -9.162290573120117
    8. 'b' → logprob: -9.662290573120117
    9. ' for' → logprob: -10.162290573120117
    10. '    ' → logprob: -10.537290573120117

Token 1222: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2535925805568695
    2. ',' → logprob: -1.753592610359192
    3. 'for' → logprob: -4.503592491149902
    4. ' à' → logprob: -4.878592491149902
    5. ' jusqu' → logprob: -4.878592491149902
    6. 'et' → logprob: -5.253592491149902
    7. ':' → logprob: -5.253592491149902
    8. ' et' → logprob: -5.503592491149902
    9. 'à' → logprob: -6.378592491149902
    10. ' for' → logprob: -6.503592491149902

Token 1223: ' et' (ID: 859)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4548017680644989
    2. 'et' → logprob: -1.9548017978668213
    3. ' et' → logprob: -2.7048017978668213
    4. '   ' → logprob: -2.9548017978668213
    5. ' C' → logprob: -3.7048017978668213
    6. 'for' → logprob: -4.079801559448242
    7. 'and' → logprob: -4.079801559448242
    8. 'c' → logprob: -4.204801559448242
    9. ' and' → logprob: -4.329801559448242
    10. ' ' → logprob: -5.079801559448242

Token 1224: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005806732806377113
    2. ' C' → logprob: -7.500580787658691
    3. ' ' → logprob: -11.250580787658691
    4. 'c' → logprob: -12.375580787658691
    5. 'range' → logprob: -12.875580787658691
    6. '```' → logprob: -13.375580787658691
    7. '   ' → logprob: -13.500580787658691
    8. 'max' → logprob: -14.250580787658691
    9. '0' → logprob: -14.250580787658691
    10. '...' → logprob: -14.250580787658691

Token 1225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6139795184135437
    2. 'for' → logprob: -0.8639795184135437
    3. ' for' → logprob: -3.3639795780181885
    4. ':' → logprob: -7.113979339599609
    5. '
' → logprob: -7.613979339599609
    6. ',' → logprob: -7.613979339599609
    7. '```' → logprob: -7.863979339599609
    8. 'A' → logprob: -8.73897933959961
    9. ':
' → logprob: -9.86397933959961
    10. '  ' → logprob: -9.98897933959961

Token 1226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008364923298358917
    2. 'for' → logprob: -5.508365154266357
    3. ' for' → logprob: -5.883365154266357
    4. ':' → logprob: -7.508365154266357
    5. ',' → logprob: -7.758365154266357
    6. '```' → logprob: -8.1333646774292
    7. 'A' → logprob: -9.8833646774292
    8. '
' → logprob: -10.3833646774292
    9. ':
' → logprob: -10.6333646774292
    10. ' (' → logprob: -10.7583646774292

Token 1227: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7589766979217529
    2. 'for' → logprob: -0.7589766979217529
    3. ' for' → logprob: -2.758976697921753
    4. '
' → logprob: -8.258976936340332
    5. '```' → logprob: -9.508976936340332
    6. ':' → logprob: -12.258976936340332
    7. '	for' → logprob: -12.508976936340332
    8. '    
' → logprob: -12.758976936340332
    9. ',' → logprob: -13.008976936340332
    10. ' ' → logprob: -13.133976936340332

Token 1228: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.041032250970602036
    2. ' for' → logprob: -3.791032314300537
    3. '   ' → logprob: -4.041032314300537
    4. '```' → logprob: -10.666031837463379
    5. '
' → logprob: -10.791031837463379
    6. '	for' → logprob: -13.291031837463379
    7. '#' → logprob: -14.041031837463379
    8. ' ' → logprob: -14.166031837463379
    9. 'A' → logprob: -14.291031837463379
    10. '    
' → logprob: -14.666031837463379

Token 1229: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7232915163040161
    2. ' for' → logprob: -1.8482915163040161
    3. 's' → logprob: -2.0982913970947266
    4. ' vont' → logprob: -3.3482913970947266
    5. 'pour' → logprob: -3.3482913970947266
    6. 'ont' → logprob: -3.4732913970947266
    7. ' couvr' → logprob: -3.8482913970947266
    8. 'range' → logprob: -4.223291397094727
    9. 'respect' → logprob: -4.348291397094727
    10. ' pour' → logprob: -4.473291397094727

Token 1230: 'isent' (ID: 68781)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3715078830718994
    2. '=' → logprob: -1.3715078830718994
    3. ' <=' → logprob: -3.6215078830718994
    4. '==' → logprob: -4.99650764465332
    5. ' =' → logprob: -4.99650764465332
    6. 'iser' → logprob: -5.24650764465332
    7. '   ' → logprob: -6.37150764465332
    8. 'isent' → logprob: -6.37150764465332
    9. '```' → logprob: -6.99650764465332
    10. '_' → logprob: -7.12150764465332

Token 1231: ' exactement' (ID: 108701)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.6199204325675964
    2. 'exact' → logprob: -1.7449204921722412
    3. 'a' → logprob: -2.244920492172241
    4. ' amount' → logprob: -2.744920492172241
    5. ' exactement' → logprob: -3.494920492172241
    6. '<=' → logprob: -3.994920492172241
    7. ' a' → logprob: -4.119920253753662
    8. ' à' → logprob: -4.494920253753662
    9. 'à' → logprob: -4.619920253753662
    10. ' <=' → logprob: -5.119920253753662

Token 1232: ' '' (ID: 461)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.035182613879442215
    2. ' amount' → logprob: -3.7851827144622803
    3. 'a' → logprob: -5.285182476043701
    4. 'i' → logprob: -6.535182476043701
    5. '=' → logprob: -6.660182476043701
    6. '(amount' → logprob: -7.035182476043701
    7. '```' → logprob: -7.285182476043701
    8. '500' → logprob: -7.535182476043701
    9. 'exact' → logprob: -8.16018295288086
    10. '   ' → logprob: -8.28518295288086

Token 1233: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.004345140885561705
    2. ' amount' → logprob: -5.504344940185547
    3. 'a' → logprob: -9.504344940185547
    4. '   ' → logprob: -9.629344940185547
    5. 'i' → logprob: -9.629344940185547
    6. '
' → logprob: -11.254344940185547
    7. '(amount' → logprob: -11.879344940185547
    8. '    ' → logprob: -12.004344940185547
    9. '       ' → logprob: -12.254344940185547
    10. '```' → logprob: -12.254344940185547

Token 1234: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24281741678714752
    2. '':
' → logprob: -2.3678174018859863
    3. ''
' → logprob: -3.2428174018859863
    4. '   ' → logprob: -3.7428174018859863
    5. ' en' → logprob: -4.492817401885986
    6. '',' → logprob: -4.617817401885986
    7. '':' → logprob: -4.742817401885986
    8. ' '' → logprob: -4.867817401885986
    9. 'en' → logprob: -5.742817401885986
    10. ''.' → logprob: -5.867817401885986

Token 1235: ' gram' (ID: 40134)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6799489855766296
    2. '   ' → logprob: -1.3049490451812744
    3. ' for' → logprob: -1.5549490451812744
    4. '
' → logprob: -5.804948806762695
    5. ':' → logprob: -5.929948806762695
    6. ':
' → logprob: -6.554948806762695
    7. 'A' → logprob: -6.679948806762695
    8. '```' → logprob: -7.304948806762695
    9. ',' → logprob: -7.429948806762695
    10. ' (' → logprob: -8.179948806762695

Token 1236: 'mes' (ID: 4613)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9498592615127563
    2. '=' → logprob: -1.1998592615127563
    3. 'mes' → logprob: -1.8248592615127563
    4. '       ' → logprob: -3.199859142303467
    5. '+' → logprob: -3.324859142303467
    6. 'grams' → logprob: -4.449859142303467
    7. '```' → logprob: -5.074859142303467
    8. '    ' → logprob: -5.199859142303467
    9. '+=' → logprob: -5.574859142303467
    10. '      ' → logprob: -5.574859142303467

Token 1237: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5751920938491821
    2. ' for' → logprob: -1.2001920938491821
    3. 'for' → logprob: -2.0751919746398926
    4. '
' → logprob: -4.700191974639893
    5. ':' → logprob: -6.950191974639893
    6. ':
' → logprob: -8.32519245147705
    7. '```' → logprob: -9.20019245147705
    8. '	for' → logprob: -9.32519245147705
    9. '    
' → logprob: -9.70019245147705
    10. ' ' → logprob: -10.57519245147705

Token 1238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16968272626399994
    2. 'for' → logprob: -1.9196827411651611
    3. ' for' → logprob: -4.669682502746582
    4. '
' → logprob: -10.919682502746582
    5. '```' → logprob: -11.044682502746582
    6. '    
' → logprob: -12.919682502746582
    7. '	for' → logprob: -13.669682502746582
    8. '       ' → logprob: -15.044682502746582
    9. 'For' → logprob: -15.544682502746582
    10. 'A' → logprob: -15.919682502746582

Token 1239: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04881717637181282
    2. '   ' → logprob: -3.0488171577453613
    3. ' for' → logprob: -8.42381763458252
    4. '
' → logprob: -12.29881763458252
    5. '```' → logprob: -12.67381763458252
    6. '    
' → logprob: -13.67381763458252
    7. 'A' → logprob: -14.54881763458252
    8. '	for' → logprob: -14.54881763458252
    9. 'from' → logprob: -15.79881763458252
    10. 'def' → logprob: -15.92381763458252

Token 1240: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00263249222189188
    2. '   ' → logprob: -6.3776326179504395
    3. ' for' → logprob: -7.0026326179504395
    4. '```' → logprob: -11.002632141113281
    5. '
' → logprob: -13.127632141113281
    6. '	for' → logprob: -14.752632141113281
    7. 'A' → logprob: -14.877632141113281
    8. 'from' → logprob: -15.377632141113281
    9. '    
' → logprob: -15.502632141113281
    10. ' ' → logprob: -15.502632141113281

Token 1241: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003698058659210801
    2. ' for' → logprob: -5.878697872161865
    3. 'range' → logprob: -7.753697872161865
    4. 'from' → logprob: -8.503698348999023
    5. '
' → logprob: -9.753698348999023
    6. 'or' → logprob: -9.753698348999023
    7. '#' → logprob: -9.878698348999023
    8. 'A' → logprob: -9.878698348999023
    9. '```' → logprob: -12.003698348999023
    10. '   ' → logprob: -12.253698348999023

Token 1242: 'optim' (ID: 29513)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009680375806055963
    2. 'from' → logprob: -7.625967979431152
    3. ' for' → logprob: -8.000967979431152
    4. 'import' → logprob: -9.375967979431152
    5. '```' → logprob: -10.875967979431152
    6. '#' → logprob: -11.250967979431152
    7. 'A' → logprob: -11.375967979431152
    8. '
' → logprob: -12.000967979431152
    9. '   ' → logprob: -12.375967979431152
    10. 'range' → logprob: -12.500967979431152

Token 1243: 'isation' (ID: 6993)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -1.060338020324707
    2. 'isation' → logprob: -1.060338020324707
    3. 'ization' → logprob: -1.935338020324707
    4. 'isé' → logprob: -2.310338020324707
    5. '   ' → logprob: -4.185338020324707
    6. '#' → logprob: -4.810338020324707
    7. 'izer' → logprob: -4.810338020324707
    8. 'ise' → logprob: -5.435338020324707
    9. 'ale' → logprob: -5.435338020324707
    10. 'isée' → logprob: -5.435338020324707

Token 1244: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.693023681640625
    2. ' =' → logprob: -1.568023681640625
    3. ' for' → logprob: -2.443023681640625
    4. '=' → logprob: -2.568023681640625
    5. ':' → logprob: -3.818023681640625
    6. 'est' → logprob: -4.193023681640625
    7. '
' → logprob: -4.318023681640625
    8. '#' → logprob: -4.318023681640625
    9. '```' → logprob: -4.443023681640625
    10. 'import' → logprob: -4.943023681640625

Token 1245: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7627179026603699
    2. '#' → logprob: -1.7627179622650146
    3. ':
' → logprob: -2.3877179622650146
    4. 'est' → logprob: -2.6377179622650146
    5. ' est' → logprob: -3.1377179622650146
    6. 'for' → logprob: -3.2627179622650146
    7. ' is' → logprob: -3.8877179622650146
    8. '
' → logprob: -4.0127177238464355
    9. '   ' → logprob: -4.1377177238464355
    10. ' =' → logprob: -4.1377177238464355

Token 1246: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.645015299320221
    2. ' d' → logprob: -2.020015239715576
    3. '    ' → logprob: -2.145015239715576
    4. '   ' → logprob: -2.145015239715576
    5. ' for' → logprob: -2.520015239715576
    6. 'for' → logprob: -4.895015239715576
    7. '```' → logprob: -5.145015239715576
    8. 'd' → logprob: -5.645015239715576
    9. 'de' → logprob: -6.145015239715576
    10. '       ' → logprob: -6.645015239715576

Token 1247: ' réduire' (ID: 78295)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04880526289343834
    2. ' for' → logprob: -3.6738052368164062
    3. 'contin' → logprob: -5.673805236816406
    4. '```' → logprob: -5.673805236816406
    5. 'range' → logprob: -5.923805236816406
    6. 'lim' → logprob: -6.048805236816406
    7. 'import' → logprob: -6.548805236816406
    8. 'arr' → logprob: -6.673805236816406
    9. 'forcer' → logprob: -6.923805236816406
    10. 'continue' → logprob: -6.923805236816406

Token 1248: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4579000174999237
    2. ' for' → logprob: -1.957900047302246
    3. 'range' → logprob: -2.457900047302246
    4. 'le' → logprob: -3.332900047302246
    5. 'la' → logprob: -3.457900047302246
    6. ' la' → logprob: -4.332900047302246
    7. 'a' → logprob: -4.457900047302246
    8. 'max' → logprob: -4.707900047302246
    9. '```' → logprob: -4.707900047302246
    10. 'l' → logprob: -4.832900047302246

Token 1249: ' domaine' (ID: 46481)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.598741352558136
    2. 'for' → logprob: -1.3487412929534912
    3. ' for' → logprob: -2.473741292953491
    4. ' range' → logprob: -3.348741292953491
    5. 'nombre' → logprob: -3.723741292953491
    6. '```' → logprob: -4.34874153137207
    7. ' nombre' → logprob: -4.47374153137207
    8. 'max' → logprob: -5.09874153137207
    9. 'b' → logprob: -5.84874153137207
    10. 'ranges' → logprob: -6.72374153137207

Token 1250: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18878348171710968
    2. ' for' → logprob: -2.1887834072113037
    3. '   ' → logprob: -3.5637834072113037
    4. 'range' → logprob: -4.438783645629883
    5. 'a' → logprob: -5.188783645629883
    6. '_a' → logprob: -6.188783645629883
    7. 'de' → logprob: -6.313783645629883
    8. 'A' → logprob: -6.563783645629883
    9. ' pour' → logprob: -6.563783645629883
    10. ' range' → logprob: -6.688783645629883

Token 1251: ' bou' (ID: 17573)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0018479824066162
    2. 'for' → logprob: -1.0018479824066162
    3. 'b' → logprob: -2.126847982406616
    4. 'c' → logprob: -2.751847982406616
    5. ' for' → logprob: -3.501847982406616
    6. 'bou' → logprob: -4.001848220825195
    7. 'range' → logprob: -4.376848220825195
    8. 'ranges' → logprob: -5.001848220825195
    9. 'loops' → logprob: -5.751848220825195
    10. ' a' → logprob: -6.251848220825195

Token 1252: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.017876092344522476
    2. 'cle' → logprob: -4.392876148223877
    3. 'nds' → logprob: -5.267876148223877
    4. 'nd' → logprob: -9.142875671386719
    5. 'n' → logprob: -10.517875671386719
    6. 'cl' → logprob: -11.142875671386719
    7. '#' → logprob: -11.392875671386719
    8. 'for' → logprob: -12.392875671386719
    9. 'x' → logprob: -12.392875671386719
    10. 'ckles' → logprob: -12.517875671386719

Token 1253: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46535179018974304
    2. 'for' → logprob: -1.3403518199920654
    3. ' for' → logprob: -2.2153518199920654
    4. '
' → logprob: -7.340351581573486
    5. '```' → logprob: -8.090352058410645
    6. 'A' → logprob: -9.215352058410645
    7. '       ' → logprob: -10.215352058410645
    8. ' pour' → logprob: -10.840352058410645
    9. ' ' → logprob: -11.090352058410645
    10. '    
' → logprob: -11.340352058410645

Token 1254: ' fonction' (ID: 17610)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.42955198884010315
    2. 'for' → logprob: -1.9295519590377808
    3. ' range' → logprob: -2.5545520782470703
    4. '```' → logprob: -3.5545520782470703
    5. ' for' → logprob: -4.30455207824707
    6. 'pr' → logprob: -4.67955207824707
    7. 'continu' → logprob: -5.05455207824707
    8. 'continue' → logprob: -5.05455207824707
    9. 'contin' → logprob: -5.17955207824707
    10. ' ' → logprob: -5.30455207824707

Token 1255: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6161339282989502
    2. '   ' → logprob: -1.6161339282989502
    3. ' des' → logprob: -1.7411339282989502
    4. ' of' → logprob: -3.24113392829895
    5. 'de' → logprob: -3.86613392829895
    6. '```' → logprob: -4.991133689880371
    7. 'des' → logprob: -5.491133689880371
    8. ' du' → logprob: -5.866133689880371
    9. 'A' → logprob: -6.491133689880371
    10. 'of' → logprob: -6.741133689880371

Token 1256: ' amount' (ID: 4527)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.17827406525611877
    2. ' max' → logprob: -1.9282740354537964
    3. 'la' → logprob: -5.303274154663086
    4. ' la' → logprob: -5.553274154663086
    5. 'a' → logprob: -6.178274154663086
    6. 'l' → logprob: -6.428274154663086
    7. 'c' → logprob: -6.553274154663086
    8. 'range' → logprob: -7.303274154663086
    9. '```' → logprob: -7.428274154663086
    10. ' l' → logprob: -8.178274154663086

Token 1257: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5550739169120789
    2. '   ' → logprob: -1.1800739765167236
    3. ' for' → logprob: -2.1800739765167236
    4. '
' → logprob: -5.6800737380981445
    5. '```' → logprob: -6.5550737380981445
    6. 'A' → logprob: -7.4300737380981445
    7. '    
' → logprob: -10.180073738098145
    8. ',' → logprob: -10.305073738098145
    9. '	for' → logprob: -10.805073738098145
    10. ' ' → logprob: -10.805073738098145

Token 1258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13842901587486267
    2. 'for' → logprob: -2.3884289264678955
    3. ' for' → logprob: -3.6384289264678955
    4. '
' → logprob: -4.638429164886475
    5. '```' → logprob: -6.763429164886475
    6. '    
' → logprob: -8.388428688049316
    7. 'A' → logprob: -9.513428688049316
    8. '	for' → logprob: -10.388428688049316
    9. '\n' → logprob: -11.513428688049316
    10. '\' → logprob: -11.638428688049316

Token 1259: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6916369795799255
    2. '   ' → logprob: -1.4416370391845703
    3. 'for' (adapté à ' for') → logprob: -1.6916370391845703
    4. ' for' → logprob: -2.5666370391845703
    5. '\n' → logprob: -7.31663703918457
    6. '    
' → logprob: -7.44163703918457
    7. '```' → logprob: -8.69163703918457
    8. '  
' → logprob: -9.31663703918457
    9. '	for' → logprob: -9.94163703918457
    10. ' 
' → logprob: -9.94163703918457

Token 1260: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0041114045307040215
    2. ' a' → logprob: -5.504111289978027
    3. 'i' → logprob: -11.129111289978027
    4. 'A' → logprob: -11.504111289978027
    5. '	a' → logprob: -12.254111289978027
    6. '   ' → logprob: -14.129111289978027
    7. ' ' → logprob: -14.379111289978027
    8. ' i' → logprob: -14.754111289978027
    9. '_a' → logprob: -14.754111289978027
    10. 'num' → logprob: -15.879111289978027

Token 1261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02977120317518711
    2. 'in' → logprob: -3.529771089553833
    3. 'range' → logprob: -12.029770851135254
    4. 'a' → logprob: -12.904770851135254
    5. 'i' → logprob: -13.029770851135254
    6. ' ' → logprob: -13.154770851135254
    7. '   ' → logprob: -13.529770851135254
    8. 'n' → logprob: -13.904770851135254
    9. '```' → logprob: -14.154770851135254
    10. '  ' → logprob: -14.154770851135254

Token 1262: ' range' (ID: 3352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7445825338363647
    2. 'range' → logprob: -0.7445825338363647
    3. ' range' → logprob: -2.9945826530456543
    4. ' ' → logprob: -9.494582176208496
    5. 'max' → logprob: -14.119582176208496
    6. '(range' → logprob: -14.494582176208496
    7. '   ' → logprob: -14.744582176208496
    8. '```' → logprob: -15.744582176208496
    9. '	range' → logprob: -16.369583129882812
    10. 'r' → logprob: -16.744583129882812

Token 1263: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05380155146121979
    2. '0' → logprob: -3.0538015365600586
    3. ' max' → logprob: -5.553801536560059
    4. '(max' → logprob: -6.678801536560059
    5. 'min' → logprob: -10.553801536560059
    6. '(' → logprob: -10.803801536560059
    7. ' ' → logprob: -11.178801536560059
    8. '   ' → logprob: -12.303801536560059
    9. ' (' → logprob: -13.428801536560059
    10. '	max' → logprob: -13.678801536560059

Token 1264: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.004989674314856529
    2. 'a' → logprob: -5.3799896240234375
    3. 'max' → logprob: -8.379989624023438
    4. '   ' → logprob: -9.379989624023438
    5. ' ' → logprob: -11.379989624023438
    6. 'A' → logprob: -11.754989624023438
    7. '(' → logprob: -12.129989624023438
    8. '[' → logprob: -12.504989624023438
    9. '(max' → logprob: -12.879989624023438
    10. '+' → logprob: -12.879989624023438

Token 1265: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5414930582046509
    2. '):
' → logprob: -1.0414930582046509
    3. '):' → logprob: -3.1664929389953613
    4. ' +' → logprob: -3.9164929389953613
    5. '   ' → logprob: -5.916492938995361
    6. '       ' → logprob: -9.29149341583252
    7. ',' → logprob: -9.66649341583252
    8. '  ' → logprob: -9.91649341583252
    9. '```' → logprob: -10.41649341583252
    10. ' ' → logprob: -10.54149341583252

Token 1266: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23751458525657654
    2. '       ' → logprob: -1.612514615058899
    3. ' for' → logprob: -4.612514495849609
    4. 'for' → logprob: -7.362514495849609
    5. '	for' → logprob: -7.737514495849609
    6. ':' → logprob: -8.11251449584961
    7. '    ' → logprob: -9.11251449584961
    8. '```' → logprob: -9.11251449584961
    9. '   ' → logprob: -9.11251449584961
    10. ' ' → logprob: -9.36251449584961

Token 1267: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33285489678382874
    2. ' for' → logprob: -1.3328548669815063
    3. '   ' → logprob: -3.957854986190796
    4. '       ' → logprob: -8.207855224609375
    5. ' ' → logprob: -11.582855224609375
    6. '	for' → logprob: -11.832855224609375
    7. '           ' → logprob: -12.957855224609375
    8. '```' → logprob: -12.957855224609375
    9. 'range' → logprob: -13.082855224609375
    10. ' ' → logprob: -14.332855224609375

Token 1268: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.055055826902389526
    2. ' b' → logprob: -2.930055856704712
    3. '0' → logprob: -8.805055618286133
    4. ' ' → logprob: -11.680055618286133
    5. '   ' → logprob: -12.180055618286133
    6. '       ' → logprob: -12.680055618286133
    7. 'c' → logprob: -12.930055618286133
    8. 'B' → logprob: -13.430055618286133
    9. ' c' → logprob: -14.055055618286133
    10. '           ' → logprob: -14.305055618286133

Token 1269: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007294706883840263
    2. 'in' → logprob: -7.250729560852051
    3. 'range' → logprob: -11.75072956085205
    4. ' range' → logprob: -13.25072956085205
    5. ' en' → logprob: -13.50072956085205
    6. '[' → logprob: -13.50072956085205
    7. 'a' → logprob: -13.62572956085205
    8. ' ' → logprob: -13.75072956085205
    9. ' a' → logprob: -14.12572956085205
    10. '       ' → logprob: -14.12572956085205

Token 1270: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39208585023880005
    2. 'max' → logprob: -1.1420857906341553
    3. '(max' → logprob: -5.892086029052734
    4. ' range' → logprob: -6.392086029052734
    5. ' max' → logprob: -7.392086029052734
    6. '0' → logprob: -9.017086029052734
    7. '(range' → logprob: -10.642086029052734
    8. ' (' → logprob: -13.517086029052734
    9. ' ' → logprob: -14.392086029052734
    10. '[max' → logprob: -14.392086029052734

Token 1271: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0036890320479869843
    2. '(max' → logprob: -5.753688812255859
    3. '0' → logprob: -8.00368881225586
    4. ' max' → logprob: -8.75368881225586
    5. 'range' → logprob: -11.50368881225586
    6. '(' → logprob: -11.87868881225586
    7. '   ' → logprob: -14.00368881225586
    8. ' (' → logprob: -14.87868881225586
    9. ' ' → logprob: -15.00368881225586
    10. '       ' → logprob: -15.75368881225586

Token 1272: '_b' (ID: 1535)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06523397564888
    2. '_b' → logprob: -3.3152339458465576
    3. 'c' → logprob: -4.690234184265137
    4. '(max' → logprob: -4.690234184265137
    5. 'b' → logprob: -5.690234184265137
    6. '_c' → logprob: -5.815234184265137
    7. '   ' → logprob: -7.065234184265137
    8. '       ' → logprob: -7.440234184265137
    9. '           ' → logprob: -8.815234184265137
    10. ' max' → logprob: -8.940234184265137

Token 1273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01965087652206421
    2. '):' → logprob: -4.144650936126709
    3. '       ' → logprob: -6.519650936126709
    4. ')' → logprob: -7.769650936126709
    5. ':' → logprob: -8.01965045928955
    6. '<|end|>' → logprob: -8.26965045928955
    7. '           ' → logprob: -8.39465045928955
    8. ':
' → logprob: -8.39465045928955
    9. ''):
' → logprob: -8.51965045928955
    10. ',' → logprob: -9.26965045928955

Token 1274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020234835392329842
    2. 'for' → logprob: -9.875202178955078
    3. '		' → logprob: -10.125202178955078
    4. '               ' → logprob: -10.125202178955078
    5. ' for' → logprob: -10.375202178955078
    6. '```' → logprob: -11.000202178955078
    7. '       ' → logprob: -11.625202178955078
    8. '	       ' → logprob: -12.500202178955078
    9. '​' → logprob: -13.250202178955078
    10. ' ' → logprob: -13.375202178955078

Token 1275: ' weight' (ID: 6049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1740497499704361
    2. ' for' → logprob: -2.1740498542785645
    3. '           ' → logprob: -3.1740498542785645
    4. '               ' → logprob: -5.5490498542785645
    5. 'c' → logprob: -8.924049377441406
    6. '```' → logprob: -9.549049377441406
    7. '   ' → logprob: -9.799049377441406
    8. '                   ' → logprob: -11.674049377441406
    9. ' ' → logprob: -11.924049377441406
    10. '	for' → logprob: -12.174049377441406

Token 1276: '_ab' (ID: 53632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23196828365325928
    2. ' =' → logprob: -1.6069682836532593
    3. '_total' → logprob: -5.231968402862549
    4. '_c' → logprob: -7.981968402862549
    5. 'total' → logprob: -8.10696792602539
    6. '           ' → logprob: -8.73196792602539
    7. '_a' → logprob: -9.23196792602539
    8. 'c' → logprob: -10.48196792602539
    9. '=a' → logprob: -10.48196792602539
    10. '_sum' → logprob: -10.48196792602539

Token 1277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43005967140197754
    2. '=' → logprob: -1.1800596714019775
    3. ' +' → logprob: -4.180059432983398
    4. '+' → logprob: -4.555059432983398
    5. ' <=' → logprob: -5.305059432983398
    6. ' +=' → logprob: -5.555059432983398
    7. '+=' → logprob: -5.930059432983398
    8. '<=' → logprob: -6.430059432983398
    9. ' ==' → logprob: -6.680059432983398
    10. '==' → logprob: -6.805059432983398

Token 1278: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08947154879570007
    2. 'shops' → logprob: -2.7144715785980225
    3. ' a' → logprob: -4.464471340179443
    4. ' shops' → logprob: -4.964471340179443
    5. '   ' → logprob: -7.589471340179443
    6. '           ' → logprob: -8.964471817016602
    7. '       ' → logprob: -9.714471817016602
    8. ' ' → logprob: -10.401971817016602
    9. '(a' → logprob: -10.776971817016602
    10. '    ' → logprob: -11.339471817016602

Token 1279: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2306821346282959
    2. '*' → logprob: -1.605682134628296
    3. '['' → logprob: -5.480682373046875
    4. '+' → logprob: -7.730682373046875
    5. ' +' → logprob: -8.105682373046875
    6. ' ' → logprob: -9.605682373046875
    7. '   ' → logprob: -9.605682373046875
    8. '       ' → logprob: -9.730682373046875
    9. '           ' → logprob: -10.480682373046875
    10. '[' → logprob: -10.730682373046875

Token 1280: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.004955035634338856
    2. '200' → logprob: -5.379954814910889
    3. ' shops' → logprob: -8.129955291748047
    4. ' ' → logprob: -11.504955291748047
    5. '   ' → logprob: -11.504955291748047
    6. 'shop' → logprob: -12.379955291748047
    7. 'ships' → logprob: -12.379955291748047
    8. '300' → logprob: -13.129955291748047
    9. 'shirts' → logprob: -13.504955291748047
    10. '400' → logprob: -14.379955291748047

Token 1281: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0002798087371047586
    2. ''A' → logprob: -8.250279426574707
    3. ''' → logprob: -11.375279426574707
    4. '   ' → logprob: -12.625279426574707
    5. '[A' → logprob: -14.250279426574707
    6. '[
' → logprob: -14.375279426574707
    7. 'A' → logprob: -14.500279426574707
    8. ''S' → logprob: -14.500279426574707
    9. ']['' → logprob: -15.000279426574707
    10. '('' → logprob: -15.500279426574707

Token 1282: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.009894204325973988
    2. 'A' → logprob: -4.634894371032715
    3. ''' → logprob: -9.259894371032715
    4. '['' → logprob: -10.759894371032715
    5. '"A' → logprob: -11.884894371032715
    6. ' '' → logprob: -12.009894371032715
    7. '   ' → logprob: -12.509894371032715
    8. ''a' → logprob: -13.009894371032715
    9. '’A' → logprob: -13.759894371032715
    10. ' A' → logprob: -15.134894371032715

Token 1283: '']['' (ID: 9620)
  Prédit: ''][''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']['' → logprob: -0.269124835729599
    2. ']['' → logprob: -2.269124746322632
    3. ''' → logprob: -2.394124746322632
    4. '['' → logprob: -3.894124746322632
    5. ''A' → logprob: -4.394124984741211
    6. '']' → logprob: -5.019124984741211
    7. 'A' → logprob: -7.019124984741211
    8. '   ' → logprob: -7.394124984741211
    9. ''s' → logprob: -8.519124984741211
    10. ' '' → logprob: -9.269124984741211

Token 1284: 'amount' (ID: 10703)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10037974268198013
    2. 'amount' → logprob: -2.350379705429077
    3. '['' → logprob: -9.225379943847656
    4. ''A' → logprob: -10.350379943847656
    5. ''am' → logprob: -11.475379943847656
    6. 'A' → logprob: -11.600379943847656
    7. ''s' → logprob: -12.350379943847656
    8. ' amount' → logprob: -12.600379943847656
    9. ' '' → logprob: -12.725379943847656
    10. '"' → logprob: -13.100379943847656

Token 1285: '']' (ID: 1089)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24898146092891693
    2. '+' → logprob: -1.6239814758300781
    3. '']' → logprob: -4.248981475830078
    4. ']' → logprob: -4.873981475830078
    5. ']+' → logprob: -7.748981475830078
    6. '           ' → logprob: -8.748981475830078
    7. '        ' → logprob: -9.248981475830078
    8. ')' → logprob: -9.248981475830078
    9. '       ' → logprob: -9.498981475830078
    10. ' ]' → logprob: -9.998981475830078

Token 1286: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31372418999671936
    2. '+' → logprob: -1.313724160194397
    3. '           ' → logprob: -8.063724517822266
    4. '       ' → logprob: -10.188724517822266
    5. '+
' → logprob: -10.188724517822266
    6. ' +
' → logprob: -10.813724517822266
    7. '        ' → logprob: -11.063724517822266
    8. '               ' → logprob: -11.563724517822266
    9. '          ' → logprob: -11.938724517822266
    10. '            ' → logprob: -12.188724517822266

Token 1287: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009287334396503866
    2. ' b' → logprob: -7.00092887878418
    3. '           ' → logprob: -11.00092887878418
    4. '       ' → logprob: -14.62592887878418
    5. '   ' → logprob: -16.75092887878418
    6. '               ' → logprob: -17.12592887878418
    7. '          ' → logprob: -18.87592887878418
    8. '         ' → logprob: -19.00092887878418
    9. '	b' → logprob: -19.75092887878418
    10. '                   ' → logprob: -19.87592887878418

Token 1288: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.40041857957839966
    2. '*' → logprob: -1.4004185199737549
    3. '['' → logprob: -2.525418519973755
    4. 'C' → logprob: -6.775418758392334
    5. '```' → logprob: -7.150418758392334
    6. '[' → logprob: -7.650418758392334
    7. '*C' → logprob: -9.150418281555176
    8. ' ' → logprob: -9.150418281555176
    9. '   ' → logprob: -9.275418281555176
    10. '`' → logprob: -9.275418281555176

Token 1289: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.020553220063447952
    2. ' shops' → logprob: -3.8955531120300293
    3. 'ships' → logprob: -12.520553588867188
    4. 'shop' → logprob: -12.770553588867188
    5. '   ' → logprob: -12.895553588867188
    6. '       ' → logprob: -14.520553588867188
    7. 'shirts' → logprob: -14.895553588867188
    8. ' ' → logprob: -15.020553588867188
    9. '           ' → logprob: -15.020553588867188
    10. 'stores' → logprob: -16.395553588867188

Token 1290: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.735893965815194e-05
    2. ''' → logprob: -12.000017166137695
    3. ']['' → logprob: -12.750017166137695
    4. ''C' → logprob: -13.000017166137695
    5. 'C' → logprob: -13.375017166137695
    6. '   ' → logprob: -14.125017166137695
    7. ''s' → logprob: -14.625017166137695
    8. '#' → logprob: -14.875017166137695
    9. 'B' → logprob: -14.875017166137695
    10. '
' → logprob: -15.000017166137695

Token 1291: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006080126389861107
    2. ''' → logprob: -5.256080150604248
    3. '['' → logprob: -7.256080150604248
    4. ''s' → logprob: -9.25607967376709
    5. ''b' → logprob: -11.13107967376709
    6. ''C' → logprob: -11.38107967376709
    7. 'shops' → logprob: -12.00607967376709
    8. '"B' → logprob: -12.25607967376709
    9. 'C' → logprob: -13.25607967376709
    10. ' '' → logprob: -13.25607967376709

Token 1292: '']['' (ID: 9620)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.16746434569358826
    2. '']['' → logprob: -2.417464256286621
    3. ']['' → logprob: -3.292464256286621
    4. ''' → logprob: -4.167464256286621
    5. ''C' → logprob: -4.792464256286621
    6. '']' → logprob: -6.542464256286621
    7. '   ' → logprob: -7.417464256286621
    8. ''A' → logprob: -7.542464256286621
    9. '           ' → logprob: -8.292464256286621
    10. 'C' → logprob: -8.292464256286621

Token 1293: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.5390423536300659
    2. ''' → logprob: -0.9140423536300659
    3. ''s' → logprob: -4.6640424728393555
    4. '['' → logprob: -5.4140424728393555
    5. ''C' → logprob: -7.2890424728393555
    6. 'price' → logprob: -8.789042472839355
    7. ''am' → logprob: -9.289042472839355
    8. ''b' → logprob: -9.414042472839355
    9. ''m' → logprob: -9.414042472839355
    10. '{'' → logprob: -9.539042472839355

Token 1294: '']
' (ID: 9756)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0494335889816284
    2. ' +' → logprob: -1.2994335889816284
    3. '           ' → logprob: -1.7994335889816284
    4. ']' → logprob: -2.424433708190918
    5. '']' → logprob: -2.549433708190918
    6. '']
' → logprob: -4.424433708190918
    7. ']
' → logprob: -4.674433708190918
    8. '               ' → logprob: -5.049433708190918
    9. ']+' → logprob: -5.549433708190918
    10. '```' → logprob: -5.674433708190918

Token 1295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.221884101862088e-05
    2. 'for' → logprob: -10.000092506408691
    3. '               ' → logprob: -11.125092506408691
    4. ' for' → logprob: -11.250092506408691
    5. '       ' → logprob: -11.750092506408691
    6. '```' → logprob: -11.750092506408691
    7. ',' → logprob: -14.000092506408691
    8. '		' → logprob: -14.375092506408691
    9. '                   ' → logprob: -14.500092506408691
    10. '
' → logprob: -14.750092506408691

Token 1296: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42679306864738464
    2. '           ' → logprob: -1.176793098449707
    3. 'if' (adapté à ' if') → logprob: -3.426793098449707
    4. 'c' → logprob: -5.176793098449707
    5. 'max' → logprob: -7.301793098449707
    6. ' for' → logprob: -9.176793098449707
    7. '               ' → logprob: -9.176793098449707
    8. 'remaining' → logprob: -9.801793098449707
    9. '```' → logprob: -10.676793098449707
    10. '#' → logprob: -11.301793098449707

Token 1297: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.22547094523906708
    2. ' weight' → logprob: -1.6004709005355835
    3. '   ' → logprob: -10.100470542907715
    4. '           ' → logprob: -12.100470542907715
    5. '       ' → logprob: -12.850470542907715
    6. '    ' → logprob: -12.975470542907715
    7. '(weight' → logprob: -13.225470542907715
    8. ' ' → logprob: -13.850470542907715
    9. '  ' → logprob: -14.100470542907715
    10. ' ' → logprob: -14.225470542907715

Token 1298: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.62500286102295
    3. 'ab' → logprob: -14.12500286102295
    4. '_a' → logprob: -15.00000286102295
    5. '   ' → logprob: -15.12500286102295
    6. '           ' → logprob: -16.125003814697266
    7. '       ' → logprob: -16.375003814697266
    8. '_AB' → logprob: -16.500003814697266
    9. '     ' → logprob: -17.750003814697266
    10. '    ' → logprob: -17.875003814697266

Token 1299: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.02830522321164608
    2. ' >' → logprob: -3.6533052921295166
    3. '<=' → logprob: -6.2783050537109375
    4. ' <=' → logprob: -9.153305053710938
    5. '==' → logprob: -11.403305053710938
    6. '   ' → logprob: -13.153305053710938
    7. '```' → logprob: -13.278305053710938
    8. '>=' → logprob: -13.403305053710938
    9. '+' → logprob: -14.153305053710938
    10. '>
' → logprob: -14.403305053710938

Token 1300: ' amount' (ID: 4527)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -8.423219696851447e-05
    2. ' amount' → logprob: -9.500083923339844
    3. '   ' → logprob: -12.125083923339844
    4. '           ' → logprob: -12.625083923339844
    5. '500' → logprob: -15.000083923339844
    6. '               ' → logprob: -15.500083923339844
    7. '       ' → logprob: -16.375083923339844
    8. ' ' → logprob: -17.500083923339844
    9. 'answer' → logprob: -18.375083923339844
    10. '                   ' → logprob: -18.375083923339844

Token 1301: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8594576716423035
    2. '               ' → logprob: -1.2344577312469482
    3. ':
' → logprob: -1.4844577312469482
    4. '           ' → logprob: -2.8594577312469482
    5. 'continue' → logprob: -6.859457492828369
    6. ' continue' → logprob: -8.859457969665527
    7. '                   ' → logprob: -8.984457969665527
    8. '                       ' → logprob: -8.984457969665527
    9. ' or' → logprob: -9.359457969665527
    10. ':return' → logprob: -10.359457969665527

Token 1302: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007666255696676672
    2. '           ' → logprob: -7.250766754150391
    3. 'continue' → logprob: -10.50076675415039
    4. '                   ' → logprob: -11.12576675415039
    5. '                       ' → logprob: -12.87576675415039
    6. ' continue' → logprob: -12.87576675415039
    7. ':' → logprob: -12.87576675415039
    8. ':
' → logprob: -13.62576675415039
    9. '```' → logprob: -13.62576675415039
    10. '			' → logprob: -13.87576675415039

Token 1303: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05363931879401207
    2. 'continue' → logprob: -3.0536394119262695
    3. 'break' → logprob: -5.6786394119262695
    4. '                   ' → logprob: -6.6786394119262695
    5. ' continue' → logprob: -8.17863941192627
    6. '```' → logprob: -10.67863941192627
    7. '	continue' → logprob: -11.17863941192627
    8. '			' → logprob: -11.42863941192627
    9. ' ' → logprob: -11.92863941192627
    10. '           ' → logprob: -12.05363941192627

Token 1304: ' trop' (ID: 14765)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.010622471570968628
    2. '               ' → logprob: -4.760622501373291
    3. '                   ' → logprob: -6.760622501373291
    4. ' continue' → logprob: -7.260622501373291
    5. 'break' → logprob: -9.135622024536133
    6. '```' → logprob: -11.010622024536133
    7. '	continue' → logprob: -11.510622024536133
    8. 'contin' → logprob: -13.260622024536133
    9. '           ' → logprob: -13.260622024536133
    10. '   ' → logprob: -13.510622024536133

Token 1305: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7890239357948303
    2. '                   ' → logprob: -1.4140238761901855
    3. '                ' → logprob: -2.6640238761901855
    4. 'continue' → logprob: -3.1640238761901855
    5. '                       ' → logprob: -3.2890238761901855
    6. ' continue' → logprob: -3.7890238761901855
    7. '           ' → logprob: -4.0390238761901855
    8. 'grand' → logprob: -4.4140238761901855
    9. '                        ' → logprob: -4.6640238761901855
    10. 'break' → logprob: -4.7890238761901855

Token 1306: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.8430656790733337
    2. 'break' → logprob: -0.8430656790733337
    3. 'continue' → logprob: -2.2180657386779785
    4. ' break' → logprob: -4.3430657386779785
    5. 'gram' → logprob: -5.0930657386779785
    6. ' continue' → logprob: -5.9680657386779785
    7. 'weight' → logprob: -5.9680657386779785
    8. ' poids' → logprob: -6.2180657386779785
    9. 'contin' → logprob: -6.9680657386779785
    10. 'grams' → logprob: -7.5930657386779785

Token 1307: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012463049497455359
    2. '                   ' → logprob: -6.751246452331543
    3. ',' → logprob: -10.751246452331543
    4. ' continue' → logprob: -11.001246452331543
    5. 'continue' → logprob: -11.376246452331543
    6. '           ' → logprob: -11.626246452331543
    7. '			' → logprob: -11.751246452331543
    8. '                       ' → logprob: -12.376246452331543
    9. '                ' → logprob: -14.001246452331543
    10. '              ' → logprob: -14.376246452331543

Token 1308: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.22341018915176392
    2. 'break' → logprob: -2.348410129547119
    3. '                   ' → logprob: -2.973410129547119
    4. '               ' → logprob: -3.098410129547119
    5. ' continue' → logprob: -4.848410129547119
    6. ' break' → logprob: -7.848410129547119
    7. '                       ' → logprob: -9.598410606384277
    8. 'contin' → logprob: -10.098410606384277
    9. '	continue' → logprob: -10.223410606384277
    10. '```' → logprob: -11.098410606384277

Token 1309: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.945094355614856e-05
    2. '                   ' → logprob: -10.125069618225098
    3. ' continue' → logprob: -11.500069618225098
    4. 'continue' → logprob: -11.625069618225098
    5. '           ' → logprob: -12.000069618225098
    6. '			' → logprob: -12.750069618225098
    7. '                       ' → logprob: -14.625069618225098
    8. ',' → logprob: -15.875069618225098
    9. '		       ' → logprob: -16.12506866455078
    10. '	           ' → logprob: -16.25006866455078

Token 1310: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000986008089967072
    2. '           ' → logprob: -7.000986099243164
    3. '                   ' → logprob: -10.250986099243164
    4. 'continue' → logprob: -10.250986099243164
    5. '			' → logprob: -13.500986099243164
    6. ' continue' → logprob: -13.625986099243164
    7. '```' → logprob: -14.500986099243164
    8. '                       ' → logprob: -15.125986099243164
    9. '		' → logprob: -16.250986099243164
    10. '       ' → logprob: -16.500986099243164

Token 1311: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.01557851955294609
    2. '               ' → logprob: -4.265578746795654
    3. 'break' → logprob: -6.765578746795654
    4. ' continue' → logprob: -8.515578269958496
    5. '                   ' → logprob: -9.765578269958496
    6. '	continue' → logprob: -13.015578269958496
    7. '```' → logprob: -14.390578269958496
    8. '           ' → logprob: -15.515578269958496
    9. 'continu' → logprob: -16.140579223632812
    10. '   ' → logprob: -16.390579223632812

Token 1312: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.961759259458631e-06
    2. '		' → logprob: -13.500004768371582
    3. '               ' → logprob: -13.750004768371582
    4. '       ' → logprob: -13.750004768371582
    5. '```' → logprob: -14.250004768371582
    6. '
' → logprob: -14.875004768371582
    7. '            
' → logprob: -15.875004768371582
    8. 'for' → logprob: -16.0000057220459
    9. ' for' → logprob: -16.8750057220459
    10. '​' → logprob: -17.5000057220459

Token 1313: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022082125360611826
    2. '       ' → logprob: -8.875221252441406
    3. 'for' → logprob: -9.500221252441406
    4. ' for' → logprob: -12.375221252441406
    5. '		' → logprob: -14.125221252441406
    6. '```' → logprob: -14.500221252441406
    7. '               ' → logprob: -15.000221252441406
    8. '   ' → logprob: -16.000221252441406
    9. 'c' → logprob: -16.250221252441406
    10. '
' → logprob: -16.750221252441406

Token 1314: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3921702206134796
    2. '           ' → logprob: -1.1421701908111572
    3. 'c' (adapté à ' c') → logprob: -5.892170429229736
    4. ' for' → logprob: -6.392170429229736
    5. '       ' → logprob: -7.267170429229736
    6. 'max' → logprob: -9.642169952392578
    7. '   ' → logprob: -10.517169952392578
    8. '```' → logprob: -10.767169952392578
    9. '               ' → logprob: -11.142169952392578
    10. 'remaining' → logprob: -11.767169952392578

Token 1315: '_needed' (ID: 148421)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6794061064720154
    2. 'max' → logprob: -1.1794061660766602
    3. 'range' → logprob: -2.55440616607666
    4. ' in' → logprob: -2.67940616607666
    5. '_range' → logprob: -3.55440616607666
    6. 'in' → logprob: -4.67940616607666
    7. ' max' → logprob: -7.67940616607666
    8. ' range' → logprob: -8.17940616607666
    9. 'for' → logprob: -8.55440616607666
    10. '_min' → logprob: -9.42940616607666

Token 1316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08896803855895996
    2. ' =' → logprob: -2.46396803855896
    3. '   ' → logprob: -11.338968276977539
    4. '=max' → logprob: -11.963968276977539
    5. '=int' → logprob: -13.213968276977539
    6. '=(' → logprob: -13.338968276977539
    7. 'max' → logprob: -13.588968276977539
    8. '           ' → logprob: -13.963968276977539
    9. '       ' → logprob: -14.338968276977539
    10. 'range' → logprob: -14.588968276977539

Token 1317: ' (' (ID: 350)
  Prédit: '(amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(amount' → logprob: -0.009957478381693363
    2. ' (' → logprob: -4.634957313537598
    3. '(' → logprob: -8.634957313537598
    4. 'amount' → logprob: -11.634957313537598
    5. '   ' → logprob: -12.009957313537598
    6. ' ' → logprob: -13.134957313537598
    7. '((' → logprob: -13.384957313537598
    8. '(max' → logprob: -13.509957313537598
    9. '(am' → logprob: -13.759957313537598
    10. '  ' → logprob: -14.509957313537598

Token 1318: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0001717166742309928
    2. '(amount' → logprob: -8.750171661376953
    3. ' amount' → logprob: -11.250171661376953
    4. '(' → logprob: -15.750171661376953
    5. '   ' → logprob: -16.625171661376953
    6. ' (' → logprob: -18.750171661376953
    7. '.amount' → logprob: -19.875171661376953
    8. ')' → logprob: -19.875171661376953
    9. '`' → logprob: -20.375171661376953
    10. ' ' → logprob: -20.625171661376953

Token 1319: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029789254069328308
    2. '-' → logprob: -3.5297892093658447
    3. ' ' → logprob: -10.529788970947266
    4. '   ' → logprob: -13.029788970947266
    5. '          ' → logprob: -13.029788970947266
    6. '  ' → logprob: -13.279788970947266
    7. '           ' → logprob: -13.779788970947266
    8. '       ' → logprob: -14.029788970947266
    9. '        ' → logprob: -14.404788970947266
    10. '         ' → logprob: -14.404788970947266

Token 1320: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.0010189944878220558
    2. ' weight' → logprob: -7.25101900100708
    3. '(weight' → logprob: -8.126018524169922
    4. 'a' → logprob: -12.626018524169922
    5. '(a' → logprob: -12.626018524169922
    6. ' (' → logprob: -13.251018524169922
    7. '   ' → logprob: -13.376018524169922
    8. '(' → logprob: -13.626018524169922
    9. 'b' → logprob: -14.501018524169922
    10. '    ' → logprob: -14.876018524169922

Token 1321: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.00012916464766021818
    2. 'ab' → logprob: -9.000128746032715
    3. '           ' → logprob: -13.500128746032715
    4. '   ' → logprob: -14.250128746032715
    5. '          ' → logprob: -14.875128746032715
    6. '       ' → logprob: -14.875128746032715
    7. ')' → logprob: -15.000128746032715
    8. ''ab' → logprob: -15.125128746032715
    9. '_AB' → logprob: -15.250128746032715
    10. '    ' → logprob: -15.375128746032715

Token 1322: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001200827769935131
    2. ')//' → logprob: -6.8762006759643555
    3. '           ' → logprob: -9.751200675964355
    4. ')
' → logprob: -10.001200675964355
    5. '+' → logprob: -10.626200675964355
    6. ' )' → logprob: -11.501200675964355
    7. '//' → logprob: -11.501200675964355
    8. ' +' → logprob: -12.251200675964355
    9. '       ' → logprob: -12.501200675964355
    10. ')/' → logprob: -12.751200675964355

Token 1323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7594571709632874
    2. '//' → logprob: -0.7594571709632874
    3. ' //' → logprob: -3.0094571113586426
    4. ' /' → logprob: -5.509457111358643
    5. '%' → logprob: -5.634457111358643
    6. '/' → logprob: -6.009457111358643
    7. '
' → logprob: -7.009457111358643
    8. '```' → logprob: -7.259457111358643
    9. ' %' → logprob: -7.384457111358643
    10. '==' → logprob: -7.634457111358643

Token 1324: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015453149564564228
    2. '           ' → logprob: -4.265453338623047
    3. 'for' → logprob: -7.515453338623047
    4. ' if' → logprob: -7.515453338623047
    5. '#' (adapté à ' #') → logprob: -9.140453338623047
    6. '%' → logprob: -9.640453338623047
    7. '```' → logprob: -11.140453338623047
    8. '               ' → logprob: -12.890453338623047
    9. '            
' → logprob: -13.640453338623047
    10. 'If' → logprob: -14.015453338623047

Token 1325: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02735036052763462
    2. '           ' → logprob: -3.652350425720215
    3. ' if' → logprob: -7.027350425720215
    4. 'for' → logprob: -9.277350425720215
    5. '#' → logprob: -9.902350425720215
    6. 'c' → logprob: -11.777350425720215
    7. '```' → logprob: -12.527350425720215
    8. 'If' → logprob: -13.152350425720215
    9. '            
' → logprob: -13.652350425720215
    10. '               ' → logprob: -14.152350425720215

Token 1326: ' que' (ID: 661)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2733311355113983
    2. ' c' → logprob: -1.8983311653137207
    3. 'shops' → logprob: -2.7733311653137207
    4. ' shops' → logprob: -4.023331165313721
    5. 'max' → logprob: -5.773331165313721
    6. ' max' → logprob: -6.273331165313721
    7. 'if' → logprob: -6.648331165313721
    8. ' if' → logprob: -6.773331165313721
    9. 'shop' → logprob: -8.460830688476562
    10. '   ' → logprob: -9.148330688476562

Token 1327: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05553611367940903
    2. ' c' → logprob: -3.5555360317230225
    3. 'shops' → logprob: -3.8055360317230225
    4. ' shops' → logprob: -6.555536270141602
    5. '(c' → logprob: -7.055536270141602
    6. '(' → logprob: -7.305536270141602
    7. ' (' → logprob: -9.305536270141602
    8. '   ' → logprob: -10.493036270141602
    9. '(sh' → logprob: -10.680536270141602
    10. ' ' → logprob: -11.305536270141602

Token 1328: '_needed' (ID: 148421)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.012507416307926178
    2. '_needed' → logprob: -5.637507438659668
    3. ' %' → logprob: -5.762507438659668
    4. '
' → logprob: -6.762507438659668
    5. '%=' → logprob: -6.887507438659668
    6. '_keys' → logprob: -7.262507438659668
    7. '%C' → logprob: -7.762507438659668
    8. 'c' → logprob: -7.762507438659668
    9. '%c' → logprob: -8.012507438659668
    10. '_c' → logprob: -8.137507438659668

Token 1329: ' soit' (ID: 17293)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -4.286852345103398e-05
    2. ' %' → logprob: -10.500042915344238
    3. '%c' → logprob: -12.375042915344238
    4. '%=' → logprob: -12.750042915344238
    5. '%e' → logprob: -13.500042915344238
    6. '%s' → logprob: -13.625042915344238
    7. '%A' → logprob: -13.875042915344238
    8. '%
' → logprob: -14.000042915344238
    9. '%C' → logprob: -14.125042915344238
    10. '%d' → logprob: -14.125042915344238

Token 1330: ' divisible' (ID: 167813)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.24323531985282898
    2. '%c' → logprob: -1.6182353496551514
    3. 'div' → logprob: -5.118235111236572
    4. 'c' → logprob: -5.493235111236572
    5. '%d' → logprob: -5.618235111236572
    6. '%C' → logprob: -5.993235111236572
    7. '%s' → logprob: -7.743235111236572
    8. '0' → logprob: -7.993235111236572
    9. ' divisible' → logprob: -8.74323558807373
    10. ' %' → logprob: -8.99323558807373

Token 1331: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3057119846343994
    2. ' par' → logprob: -2.1807119846343994
    3. '%' → logprob: -2.4307119846343994
    4. 'by' → logprob: -3.4307119846343994
    5. '           ' → logprob: -5.43071174621582
    6. '==' → logprob: -5.55571174621582
    7. 'shops' → logprob: -5.68071174621582
    8. '       ' → logprob: -5.80571174621582
    9. '   ' → logprob: -6.05571174621582
    10. '=' → logprob: -6.43071174621582

Token 1332: ' ' (ID: 220)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.002491706982254982
    2. ' shops' → logprob: -6.002491474151611
    3. '   ' → logprob: -11.87749195098877
    4. 'ships' → logprob: -12.50249195098877
    5. '       ' → logprob: -13.62749195098877
    6. 'shop' → logprob: -14.00249195098877
    7. '           ' → logprob: -14.37749195098877
    8. 'stores' → logprob: -14.50249195098877
    9. 'shirts' → logprob: -14.62749195098877
    10. ' ' → logprob: -15.25249195098877

Token 1333: '500' (ID: 3234)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.00043400691356509924
    2. ' shops' → logprob: -7.750433921813965
    3. 'ships' → logprob: -13.750433921813965
    4. '500' → logprob: -14.125433921813965
    5. '   ' → logprob: -14.500433921813965
    6. 'shop' → logprob: -15.250433921813965
    7. 'stores' → logprob: -15.375433921813965
    8. 'shirts' → logprob: -16.12543487548828
    9. '100' → logprob: -16.37543487548828
    10. ' ' → logprob: -16.75043487548828

Token 1334: ' (' (ID: 350)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2513864040374756
    2. ' ==' → logprob: -2.3763864040374756
    3. 'if' → logprob: -3.1263864040374756
    4. 'and' → logprob: -3.3763864040374756
    5. ',' → logprob: -4.251386642456055
    6. ' and' → logprob: -4.376386642456055
    7. '%' → logprob: -4.751386642456055
    8. '           ' → logprob: -5.126386642456055
    9. ' if' → logprob: -5.626386642456055
    10. '=' → logprob: -6.626386642456055

Token 1335: 'po' (ID: 2519)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.07944090664386749
    2. 'if' → logprob: -3.4544408321380615
    3. ' shops' → logprob: -4.079441070556641
    4. '==' → logprob: -4.579441070556641
    5. '           ' → logprob: -4.829441070556641
    6. 'c' → logprob: -5.954441070556641
    7. ' if' → logprob: -6.704441070556641
    8. ')' → logprob: -6.829441070556641
    9. '               ' → logprob: -6.829441070556641
    10. '=' → logprob: -7.329441070556641

Token 1336: 'ids' (ID: 3375)
  Prédit: 'ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ids' → logprob: -0.2841642200946808
    2. 'r' → logprob: -2.2841641902923584
    3. 'ints' → logprob: -2.7841641902923584
    4. 'ur' → logprob: -2.7841641902923584
    5. 'int' → logprob: -4.7841644287109375
    6. 'is' → logprob: -5.4091644287109375
    7. 'ds' → logprob: -5.7841644287109375
    8. 'nds' → logprob: -6.2841644287109375
    9. 'u' → logprob: -6.9091644287109375
    10. 's' → logprob: -7.2841644287109375

Token 1337: ' des' (ID: 731)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4931262731552124
    2. '           ' → logprob: -2.493126392364502
    3. '=' → logprob: -2.618126392364502
    4. ' de' → logprob: -2.993126392364502
    5. 'des' → logprob: -3.368126392364502
    6. 'C' → logprob: -3.743126392364502
    7. '==' → logprob: -3.868126392364502
    8. ' des' → logprob: -3.868126392364502
    9. 'shops' → logprob: -4.618126392364502
    10. ')' → logprob: -4.743126392364502

Token 1338: ' sacs' (ID: 150414)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.0021946365013718605
    2. ' shops' → logprob: -6.252194404602051
    3. 'C' → logprob: -8.50219440460205
    4. '   ' → logprob: -11.12719440460205
    5. 'ships' → logprob: -11.37719440460205
    6. 'shop' → logprob: -12.00219440460205
    7. '       ' → logprob: -12.25219440460205
    8. ''' → logprob: -12.87719440460205
    9. '500' → logprob: -13.00219440460205
    10. '           ' → logprob: -13.00219440460205

Token 1339: ' C' (ID: 363)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5193114280700684
    2. ' de' → logprob: -1.3943114280700684
    3. 'C' → logprob: -3.0193114280700684
    4. ')' → logprob: -4.144311428070068
    5. '),' → logprob: -4.144311428070068
    6. '           ' → logprob: -4.269311428070068
    7. 'shops' → logprob: -4.269311428070068
    8. '['' → logprob: -4.519311428070068
    9. 'des' → logprob: -4.894311428070068
    10. ' des' → logprob: -5.519311428070068

Token 1340: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5495003461837769
    2. ')' → logprob: -2.2995004653930664
    3. 'and' → logprob: -2.6745004653930664
    4. '),' → logprob: -2.9245004653930664
    5. 'if' → logprob: -3.1745004653930664
    6. ' and' → logprob: -3.1745004653930664
    7. '):
' → logprob: -3.2995004653930664
    8. '           ' → logprob: -4.049500465393066
    9. ':
' → logprob: -4.299500465393066
    10. ',
' → logprob: -4.424500465393066

Token 1341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03699156641960144
    2. '==' → logprob: -4.161991596221924
    3. ' ==' → logprob: -4.286991596221924
    4. '%' → logprob: -5.536991596221924
    5. 'if' → logprob: -6.911991596221924
    6. ' if' → logprob: -7.411991596221924
    7. 'and' → logprob: -7.661991596221924
    8. ' %' → logprob: -7.786991596221924
    9. ' and' → logprob: -8.661991119384766
    10. ',' → logprob: -8.786991119384766

Token 1342: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0028410146478563547
    2. ' if' → logprob: -6.127840995788574
    3. '           ' → logprob: -7.377840995788574
    4. '%' → logprob: -10.877840995788574
    5. '==' → logprob: -11.752840995788574
    6. '```' → logprob: -13.002840995788574
    7. '               ' → logprob: -14.127840995788574
    8. '%c' → logprob: -15.752840995788574
    9. '                       ' → logprob: -15.877840995788574
    10. '#' → logprob: -16.37784194946289

Token 1343: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00022415895364247262
    2. ' c' → logprob: -8.500224113464355
    3. '           ' → logprob: -11.250224113464355
    4. '(c' → logprob: -12.875224113464355
    5. '   ' → logprob: -14.000224113464355
    6. '                   ' → logprob: -14.250224113464355
    7. '               ' → logprob: -14.500224113464355
    8. 'shops' → logprob: -14.875224113464355
    9. '            ' → logprob: -15.125224113464355
    10. '                                   ' → logprob: -15.250224113464355

Token 1344: '_needed' (ID: 148421)
  Prédit: '_needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.0013765414478257298
    2. '%' → logprob: -6.751376628875732
    3. ' %' → logprob: -9.126376152038574
    4. 'needed' → logprob: -10.126376152038574
    5. '```' → logprob: -11.251376152038574
    6. '
' → logprob: -11.876376152038574
    7. '_required' → logprob: -11.876376152038574
    8. '   ' → logprob: -12.376376152038574
    9. '#' → logprob: -12.501376152038574
    10. 'Needed' → logprob: -12.751376152038574

Token 1345: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01252060104161501
    2. ' %' → logprob: -4.387520790100098
    3. '%c' → logprob: -12.262520790100098
    4. '==' → logprob: -13.012520790100098
    5. '%s' → logprob: -13.387520790100098
    6. '```' → logprob: -14.387520790100098
    7. '%C' → logprob: -14.887520790100098
    8. '%
' → logprob: -15.137520790100098
    9. '%A' → logprob: -15.262520790100098
    10. '%B' → logprob: -15.512520790100098

Token 1346: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.0014117816463112831
    2. '500' → logprob: -7.0014119148254395
    3. ' shops' → logprob: -7.6264119148254395
    4. 'ships' → logprob: -12.001411437988281
    5. 'shop' → logprob: -12.626411437988281
    6. 'shirts' → logprob: -14.251411437988281
    7. ' ' → logprob: -14.751411437988281
    8. 'sh' → logprob: -15.001411437988281
    9. '   ' → logprob: -15.626411437988281
    10. 'stores' → logprob: -15.876411437988281

Token 1347: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -4.417976379045285e-05
    2. ''C' → logprob: -10.125043869018555
    3. 'C' → logprob: -14.000043869018555
    4. ']['' → logprob: -14.125043869018555
    5. '[C' → logprob: -14.125043869018555
    6. ''' → logprob: -14.125043869018555
    7. '[' → logprob: -14.500043869018555
    8. '["' → logprob: -15.875043869018555
    9. '   ' → logprob: -16.625043869018555
    10. ' ['' → logprob: -16.875043869018555

Token 1348: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0015030752401798964
    2. ''C' → logprob: -6.501502990722656
    3. ''' → logprob: -14.751502990722656
    4. ' C' → logprob: -15.251502990722656
    5. '['' → logprob: -15.876502990722656
    6. '   ' → logprob: -18.501502990722656
    7. '"C' → logprob: -18.751502990722656
    8. 'С' → logprob: -19.001502990722656
    9. '`' → logprob: -19.001502990722656
    10. '('' → logprob: -19.376502990722656

Token 1349: '']['' (ID: 9620)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.33246222138404846
    2. '']['' → logprob: -1.332462191581726
    3. '']' → logprob: -4.207462310791016
    4. ']['' → logprob: -5.707462310791016
    5. ''' → logprob: -7.457462310791016
    6. '']==' → logprob: -9.957462310791016
    7. '']=='' → logprob: -10.457462310791016
    8. '
' → logprob: -10.707462310791016
    9. '```' → logprob: -10.832462310791016
    10. '   ' → logprob: -11.082462310791016

Token 1350: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.06411352008581161
    2. ''' → logprob: -2.8141136169433594
    3. '500' → logprob: -6.689113616943359
    4. ''C' → logprob: -7.689113616943359
    5. ''s' → logprob: -8.31411361694336
    6. '['' → logprob: -8.81411361694336
    7. 'C' → logprob: -10.43911361694336
    8. '`' → logprob: -12.93911361694336
    9. ''m' → logprob: -12.93911361694336
    10. ''re' → logprob: -13.31411361694336

Token 1351: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.6202467679977417
    2. '==' → logprob: -1.2452467679977417
    3. '']==' → logprob: -2.6202468872070312
    4. ']' → logprob: -3.7452468872070312
    5. '!=' → logprob: -3.8702468872070312
    6. ' !=' → logprob: -3.9952468872070312
    7. ' ==' → logprob: -3.9952468872070312
    8. ']==' → logprob: -4.120246887207031
    9. ']!=' → logprob: -5.870246887207031
    10. '```' → logprob: -8.120246887207031

Token 1352: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6510903239250183
    2. '!=' → logprob: -0.7760903239250183
    3. ' !=' → logprob: -4.151090145111084
    4. ' ==' → logprob: -6.026090145111084
    5. '```' → logprob: -9.776090621948242
    6. '=' → logprob: -10.276090621948242
    7. '!==' → logprob: -10.776090621948242
    8. ')!=' → logprob: -11.276090621948242
    9. '==
' → logprob: -11.776090621948242
    10. '()!=' → logprob: -11.901090621948242

Token 1353: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '```' → logprob: -17.000431060791016
    4. '   ' → logprob: -19.375431060791016
    5. ' ' → logprob: -20.250431060791016
    6. '=' → logprob: -21.000431060791016
    7. '==' → logprob: -21.625431060791016
    8. '1' → logprob: -21.750431060791016
    9. '``' → logprob: -22.000431060791016
    10. '  ' → logprob: -22.250431060791016

Token 1354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -20.375001907348633
    4. '   ' → logprob: -22.000001907348633
    5. '
' → logprob: -23.125001907348633
    6. ' ' → logprob: -23.250001907348633
    7. '۰' → logprob: -23.250001907348633
    8. '00' → logprob: -23.250001907348633
    9. '=' → logprob: -23.375001907348633
    10. '000' → logprob: -23.625001907348633

Token 1355: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3283216953277588
    2. ' continue' → logprob: -2.203321695327759
    3. ':' → logprob: -2.328321695327759
    4. '==' → logprob: -4.07832145690918
    5. 'continue' → logprob: -4.82832145690918
    6. ':
' → logprob: -4.95332145690918
    7. '                       ' → logprob: -5.07832145690918
    8. ' ==' → logprob: -5.32832145690918
    9. '	continue' → logprob: -5.32832145690918
    10. '           ' → logprob: -5.45332145690918

Token 1356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020456979982554913
    2. ' continue' → logprob: -6.877045631408691
    3. '                               ' → logprob: -7.752045631408691
    4. 'continue' → logprob: -8.377045631408691
    5. '                       ' → logprob: -8.627045631408691
    6. '                   ' → logprob: -9.377045631408691
    7. '                           ' → logprob: -10.502045631408691
    8. '                ' → logprob: -11.502045631408691
    9. '```' → logprob: -11.752045631408691
    10. ' continues' → logprob: -11.877045631408691

Token 1357: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.30678391456604004
    2. ' continue' → logprob: -1.80678391456604
    3. '               ' → logprob: -2.30678391456604
    4. '                   ' → logprob: -8.306783676147461
    5. '	continue' → logprob: -9.306783676147461
    6. '           ' → logprob: -9.556783676147461
    7. '   ' → logprob: -11.181783676147461
    8. '_continue' → logprob: -13.431783676147461
    9. 'contin' → logprob: -14.056783676147461
    10. '			' → logprob: -14.181783676147461

Token 1358: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009329711087048054
    2. '               ' → logprob: -4.759329795837402
    3. '		' → logprob: -8.009329795837402
    4. '<|end|>' → logprob: -9.259329795837402
    5. '```' → logprob: -9.634329795837402
    6. '<|end|>' → logprob: -10.384329795837402
    7. '	       ' → logprob: -10.384329795837402
    8. ' c' → logprob: -10.759329795837402
    9. '                   ' → logprob: -10.759329795837402
    10. '            
' → logprob: -11.009329795837402

Token 1359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013229402713477612
    2. '               ' → logprob: -4.3882293701171875
    3. 'continue' → logprob: -8.388229370117188
    4. '```' → logprob: -8.388229370117188
    5. '		' → logprob: -9.138229370117188
    6. 'c' → logprob: -10.138229370117188
    7. ' continue' → logprob: -10.763229370117188
    8. '                   ' → logprob: -10.888229370117188
    9. '{
' → logprob: -11.013229370117188
    10. ' c' → logprob: -11.263229370117188

Token 1360: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.08307299762964249
    2. '           ' → logprob: -2.8330729007720947
    3. '               ' → logprob: -4.083073139190674
    4. ' c' → logprob: -5.583073139190674
    5. '                   ' → logprob: -9.333072662353516
    6. '```' → logprob: -10.208072662353516
    7. '             ' → logprob: -10.458072662353516
    8. 'continue' → logprob: -10.833072662353516
    9. '                       ' → logprob: -11.208072662353516
    10. 'for' → logprob: -11.458072662353516

Token 1361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34850651025772095
    2. ' =' → logprob: -1.2235064506530762
    3. '_needed' → logprob: -10.098506927490234
    4. '_range' → logprob: -12.598506927490234
    5. '```' → logprob: -12.723506927490234
    6. 'range' → logprob: -12.973506927490234
    7. '=c' → logprob: -13.473506927490234
    8. '   ' → logprob: -13.473506927490234
    9. ' in' → logprob: -13.598506927490234
    10. 'for' → logprob: -14.098506927490234

Token 1362: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020544573664665222
    2. ' c' → logprob: -3.8955445289611816
    3. '   ' → logprob: -13.39554500579834
    4. '(c' → logprob: -14.39554500579834
    5. ' (' → logprob: -15.39554500579834
    6. '	c' → logprob: -15.52054500579834
    7. ' ' → logprob: -16.270544052124023
    8. 'cation' → logprob: -17.145544052124023
    9. ' ' → logprob: -17.145544052124023
    10. '(' → logprob: -18.270544052124023

Token 1363: '_needed' (ID: 148421)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5384342074394226
    2. '_needed' → logprob: -1.4134342670440674
    3. 'c' → logprob: -1.9134342670440674
    4. '(c' → logprob: -4.038434028625488
    5. ' c' → logprob: -5.538434028625488
    6. ' =' → logprob: -6.788434028625488
    7. '[c' → logprob: -6.913434028625488
    8. '=' → logprob: -7.788434028625488
    9. '=c' → logprob: -8.288434028625488
    10. '   ' → logprob: -8.538434028625488

Token 1364: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6330986618995667
    2. '//' → logprob: -0.7580986618995667
    3. '<|end|>' → logprob: -8.758098602294922
    4. '//=' → logprob: -9.008098602294922
    5. '#' → logprob: -9.133098602294922
    6. ' ' → logprob: -10.508098602294922
    7. '<|end|>' → logprob: -10.758098602294922
    8. '```' → logprob: -11.508098602294922
    9. '           ' → logprob: -11.758098602294922
    10. ')' → logprob: -11.758098602294922

Token 1365: ' shops' (ID: 22509)
  Prédit: 'shops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shops' → logprob: -0.0019305398454889655
    2. ' shops' → logprob: -6.2519307136535645
    3. 'ships' → logprob: -13.876930236816406
    4. '   ' → logprob: -14.751930236816406
    5. 'shop' → logprob: -15.376930236816406
    6. ' ' → logprob: -16.751930236816406
    7. 'stores' → logprob: -16.876930236816406
    8. '       ' → logprob: -17.001930236816406
    9. 'shirts' → logprob: -17.001930236816406
    10. '  ' → logprob: -17.501930236816406

Token 1366: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.759734732331708e-05
    2. ''C' → logprob: -11.250017166137695
    3. 'C' → logprob: -12.625017166137695
    4. ''' → logprob: -13.875017166137695
    5. ']['' → logprob: -16.250017166137695
    6. '["' → logprob: -16.875017166137695
    7. '[C' → logprob: -17.000017166137695
    8. '   ' → logprob: -17.250017166137695
    9. '_C' → logprob: -17.625017166137695
    10. 'c' → logprob: -17.750017166137695

Token 1367: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007154120248742402
    2. ''C' → logprob: -7.250715255737305
    3. ''' → logprob: -12.875715255737305
    4. '['' → logprob: -13.125715255737305
    5. ' C' → logprob: -15.125715255737305
    6. '   ' → logprob: -15.625715255737305
    7. 'С' → logprob: -16.125715255737305
    8. ''s' → logprob: -16.750715255737305
    9. '{'' → logprob: -16.875715255737305
    10. '
' → logprob: -17.125715255737305

Token 1368: '']['' (ID: 9620)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.2853965759277344
    2. ']['' → logprob: -1.4103965759277344
    3. '']['' → logprob: -5.535396575927734
    4. ''' → logprob: -8.785396575927734
    5. 'C' → logprob: -10.160396575927734
    6. '   ' → logprob: -10.660396575927734
    7. ']' → logprob: -10.660396575927734
    8. '']' → logprob: -10.910396575927734
    9. ''s' → logprob: -11.785396575927734
    10. 'c' → logprob: -12.285396575927734

Token 1369: 'amount' (ID: 10703)
  Prédit: 'amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.0003721622342709452
    2. ''' → logprob: -8.750371932983398
    3. 'C' → logprob: -9.250371932983398
    4. ''C' → logprob: -9.750371932983398
    5. '['' → logprob: -10.500371932983398
    6. ''s' → logprob: -10.750371932983398
    7. '500' → logprob: -12.500371932983398
    8. '{'' → logprob: -13.500371932983398
    9. '`' → logprob: -13.625371932983398
    10. ' amount' → logprob: -13.875371932983398

Token 1370: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.12590257823467255
    2. ']' → logprob: -2.2509026527404785
    3. '']
' → logprob: -4.5009026527404785
    4. '           ' → logprob: -7.2509026527404785
    5. ']
' → logprob: -7.3759026527404785
    6. '"]' → logprob: -9.37590217590332
    7. '```' → logprob: -9.62590217590332
    8. '               ' → logprob: -9.75090217590332
    9. '       ' → logprob: -9.87590217590332
    10. '}' → logprob: -10.00090217590332

Token 1371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.5027299822540954e-05
    2. '            
' → logprob: -11.250055313110352
    3. '               ' → logprob: -11.375055313110352
    4. ' if' → logprob: -11.750055313110352
    5. 'if' → logprob: -12.000055313110352
    6. '<|end|>' → logprob: -12.125055313110352
    7. '```' → logprob: -12.500055313110352
    8. '		' → logprob: -13.250055313110352
    9. '
' → logprob: -13.625055313110352
    10. '                       ' → logprob: -13.750055313110352

Token 1372: ' if' (ID: 538)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.17654888331890106
    2. 'if' (adapté à ' if') → logprob: -2.176548957824707
    3. 'total' → logprob: -3.676548957824707
    4. '           ' → logprob: -4.426548957824707
    5. '               ' → logprob: -5.051548957824707
    6. 'co' → logprob: -6.301548957824707
    7. '#' → logprob: -6.676548957824707
    8. ' if' → logprob: -7.801548957824707
    9. 'current' → logprob: -7.801548957824707
    10. 'price' → logprob: -8.051548957824707

Token 1373: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28266391158103943
    2. ' c' → logprob: -1.4076639413833618
    3. '0' → logprob: -7.157663822174072
    4. 'a' → logprob: -7.532663822174072
    5. ' a' → logprob: -9.03266429901123
    6. ' ' → logprob: -10.28266429901123
    7. '   ' → logprob: -11.15766429901123
    8. '           ' → logprob: -11.28266429901123
    9. '	c' → logprob: -12.65766429901123
    10. '       ' → logprob: -12.90766429901123

Token 1374: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6652583479881287
    2. '<=' → logprob: -1.0402584075927734
    3. ' >' → logprob: -2.5402584075927734
    4. '>' → logprob: -3.1652584075927734
    5. '>=' → logprob: -5.665258407592773
    6. ' >=' → logprob: -5.665258407592773
    7. '<' → logprob: -6.040258407592773
    8. ' <' → logprob: -6.165258407592773
    9. '```' → logprob: -10.915258407592773
    10. ' ' → logprob: -13.040258407592773

Token 1375: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020735491125378758
    2. ' ' → logprob: -8.50020694732666
    3. 'max' → logprob: -12.87520694732666
    4. '   ' → logprob: -14.50020694732666
    5. '           ' → logprob: -15.12520694732666
    6. '       ' → logprob: -15.75020694732666
    7. '```' → logprob: -16.000207901000977
    8. ' max' → logprob: -16.750207901000977
    9. '               ' → logprob: -17.750207901000977
    10. '=' → logprob: -18.125207901000977

Token 1376: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3153698742389679
    2. '_c' → logprob: -1.3153698444366455
    3. '0' → logprob: -6.315370082855225
    4. '```' → logprob: -8.940369606018066
    5. '_a' → logprob: -10.190369606018066
    6. '   ' → logprob: -10.315369606018066
    7. 'a' → logprob: -10.440369606018066
    8. 'max' → logprob: -10.565369606018066
    9. 'C' → logprob: -11.815369606018066
    10. ' ' → logprob: -12.065369606018066

Token 1377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020828677341341972
    2. ':
' → logprob: -4.145828723907471
    3. '           ' → logprob: -6.520828723907471
    4. '               ' → logprob: -7.020828723907471
    5. ' and' → logprob: -7.145828723907471
    6. '<|end|>' → logprob: -7.520828723907471
    7. '                       ' → logprob: -8.145828247070312
    8. ' :' → logprob: -9.145828247070312
    9. 'and' → logprob: -9.395828247070312
    10. '                           ' → logprob: -9.645828247070312

Token 1378: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018979329615831375
    2. ' continue' → logprob: -6.876897811889648
    3. '```' → logprob: -8.251897811889648
    4. 'continue' → logprob: -8.376897811889648
    5. '                       ' → logprob: -8.626897811889648
    6. '                               ' → logprob: -9.626897811889648
    7. '                   ' → logprob: -10.376897811889648
    8. '           ' → logprob: -10.501897811889648
    9. '                           ' → logprob: -10.626897811889648
    10. ' continues' → logprob: -10.751897811889648

Token 1379: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.33084550499916077
    2. '               ' → logprob: -1.5808454751968384
    3. ' continue' → logprob: -2.580845594406128
    4. '	continue' → logprob: -9.705845832824707
    5. '```' → logprob: -9.705845832824707
    6. '                   ' → logprob: -10.705845832824707
    7. '           ' → logprob: -10.830845832824707
    8. '   ' → logprob: -12.955845832824707
    9. 'break' → logprob: -13.080845832824707
    10. '			' → logprob: -13.330845832824707

Token 1380: '
            
' (ID: 45334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037443831097334623
    2. '           ' → logprob: -5.878744602203369
    3. '                   ' → logprob: -8.753744125366211
    4. '<|end|>' → logprob: -9.128744125366211
    5. '                       ' → logprob: -9.253744125366211
    6. '```' → logprob: -9.628744125366211
    7. ' continue' → logprob: -9.753744125366211
    8. ':' → logprob: -9.753744125366211
    9. ':
' → logprob: -9.878744125366211
    10. '                               ' → logprob: -9.878744125366211

Token 1381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01580348052084446
    2. 'cost' → logprob: -4.265803337097168
    3. '               ' → logprob: -7.140803337097168
    4. ' cost' → logprob: -7.890803337097168
    5. 'total' → logprob: -8.515803337097168
    6. '            
' → logprob: -8.640803337097168
    7. '
' → logprob: -10.390803337097168
    8. 'price' → logprob: -10.390803337097168
    9. '                   ' → logprob: -12.015803337097168
    10. '		' → logprob: -12.265803337097168

Token 1382: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.009810160845518112
    2. 'total' → logprob: -5.134809970855713
    3. '           ' → logprob: -5.759809970855713
    4. '               ' → logprob: -7.759809970855713
    5. '#' (adapté à ' #') → logprob: -8.384810447692871
    6. 'price' → logprob: -10.509810447692871
    7. 'co' → logprob: -11.384810447692871
    8. 'current' → logprob: -11.384810447692871
    9. ' cost' → logprob: -11.759810447692871
    10. 'a' → logprob: -12.509810447692871

Token 1383: ' Calcul' (ID: 57243)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0802982747554779
    2. 'total' → logprob: -2.5802981853485107
    3. '           ' → logprob: -6.83029842376709
    4. 'current' → logprob: -8.45529842376709
    5. '#' → logprob: -9.70529842376709
    6. 'co' → logprob: -10.95529842376709
    7. 'price' → logprob: -11.45529842376709
    8. ' cost' → logprob: -11.70529842376709
    9. '               ' → logprob: -11.70529842376709
    10. 'a' → logprob: -12.83029842376709

Token 1384: 'er' (ID: 259)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023161860182881355
    2. ' du' → logprob: -4.773161888122559
    3. ' cost' → logprob: -5.898161888122559
    4. 'cost' → logprob: -6.023161888122559
    5. ' de' → logprob: -6.398161888122559
    6. 'a' → logprob: -6.523161888122559
    7. '_cost' → logprob: -6.773161888122559
    8. '_a' → logprob: -6.898161888122559
    9. '               ' → logprob: -7.398161888122559
    10. 'er' → logprob: -7.523161888122559

Token 1385: ' le' (ID: 505)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.20403750240802765
    2. 'total' → logprob: -1.8290375471115112
    3. 'le' → logprob: -4.829037666320801
    4. ' cost' → logprob: -5.329037666320801
    5. '           ' → logprob: -5.329037666320801
    6. ' total' → logprob: -5.829037666320801
    7. 'co' → logprob: -6.204037666320801
    8. 'price' → logprob: -7.579037666320801
    9. ' le' → logprob: -8.2040376663208
    10. 'current' → logprob: -8.3290376663208

Token 1386: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0638926774263382
    2. 'co' → logprob: -3.3138926029205322
    3. 'total' → logprob: -3.6888926029205322
    4. 'cout' → logprob: -8.938892364501953
    5. '#' → logprob: -9.063892364501953
    6. ' cost' → logprob: -9.688892364501953
    7. 'current' → logprob: -9.688892364501953
    8. ' coût' → logprob: -10.438892364501953
    9. 'prix' → logprob: -10.563892364501953
    10. 'c' → logprob: -10.688892364501953

Token 1387: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5163823962211609
    2. 'total' → logprob: -1.2663824558258057
    3. 'cost' → logprob: -2.1413824558258057
    4. 'a' → logprob: -6.391382217407227
    5. 'for' → logprob: -7.766382217407227
    6. '               ' → logprob: -7.891382217407227
    7. ' total' → logprob: -8.016382217407227
    8. 'A' → logprob: -8.391382217407227
    9. ' =' → logprob: -8.391382217407227
    10. '=' → logprob: -8.391382217407227

Token 1388: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6400161981582642
    2. 'total' → logprob: -0.7650161981582642
    3. 'cost' → logprob: -5.265016078948975
    4. ' total' → logprob: -6.265016078948975
    5. '            
' → logprob: -9.265016555786133
    6. '=' → logprob: -9.515016555786133
    7. ' cost' → logprob: -10.390016555786133
    8. ' =' → logprob: -10.390016555786133
    9. 'a' → logprob: -11.015016555786133
    10. '               ' → logprob: -11.140016555786133

Token 1389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3890454173088074
    2. 'total' → logprob: -1.1390454769134521
    3. 'cost' → logprob: -6.764045238494873
    4. ' total' → logprob: -7.014045238494873
    5. 'for' → logprob: -10.389045715332031
    6. '=' → logprob: -10.639045715332031
    7. '            
' → logprob: -10.764045715332031
    8. '               ' → logprob: -11.764045715332031
    9. ' =' → logprob: -11.889045715332031
    10. '```' → logprob: -12.389045715332031

Token 1390: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.47452449798583984
    2. 'total' → logprob: -0.9745244979858398
    3. '           ' → logprob: -8.09952449798584
    4. ' cost' → logprob: -9.22452449798584
    5. ' total' → logprob: -10.09952449798584
    6. '               ' → logprob: -13.34952449798584
    7. 'price' → logprob: -13.97452449798584
    8. 'current' → logprob: -14.09952449798584
    9. '   ' → logprob: -14.72452449798584
    10. '```' → logprob: -16.099525451660156

Token 1391: '_a' (ID: 10852)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7934382557868958
    2. ' =' → logprob: -1.168438196182251
    3. '_a' → logprob: -1.918438196182251
    4. '_for' → logprob: -3.168438196182251
    5. '_A' → logprob: -3.418438196182251
    6. 'A' → logprob: -4.29343843460083
    7. '=A' → logprob: -7.16843843460083
    8. '_' → logprob: -8.793437957763672
    9. 'a' → logprob: -8.918437957763672
    10. '   ' → logprob: -8.918437957763672

Token 1392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3875955045223236
    2. ' =' → logprob: -1.137595534324646
    3. '_for' → logprob: -8.137595176696777
    4. ' +' → logprob: -9.262595176696777
    5. ' +=' → logprob: -9.262595176696777
    6. '+' → logprob: -9.387595176696777
    7. '_a' → logprob: -9.887595176696777
    8. '+=' → logprob: -10.137595176696777
    9. '=A' → logprob: -11.012595176696777
    10. 'for' → logprob: -11.137595176696777

Token 1393: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0005535095697268844
    2. ' cost' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.625553131103516
    4. '(cost' → logprob: -18.000553131103516
    5. '  ' → logprob: -18.750553131103516
    6. '    ' → logprob: -19.375553131103516
    7. '       ' → logprob: -19.875553131103516
    8. ' ' → logprob: -20.000553131103516
    9. '     ' → logprob: -20.375553131103516
    10. 'code' → logprob: -21.000553131103516

Token 1394: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -2.45848218582978e-06
    2. 'for' → logprob: -13.00000286102295
    3. 'For' → logprob: -15.75000286102295
    4. '_' → logprob: -18.250001907348633
    5. '_a' → logprob: -18.625001907348633
    6. '_FOR' → logprob: -19.375001907348633
    7. 'a' → logprob: -20.125001907348633
    8. 'A' → logprob: -20.125001907348633
    9. ' for' → logprob: -20.250001907348633
    10. '```' → logprob: -20.750001907348633

Token 1395: '_b' (ID: 1535)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20236548781394958
    2. '_b' → logprob: -2.3273653984069824
    3. ''b' → logprob: -3.2023653984069824
    4. ''' → logprob: -4.077365398406982
    5. 'bags' → logprob: -4.577365398406982
    6. ''A' → logprob: -4.952365398406982
    7. ''s' → logprob: -5.077365398406982
    8. 'shops' → logprob: -6.202365398406982
    9. 'A' → logprob: -7.077365398406982
    10. 'B' → logprob: -7.702365398406982

Token 1396: 'ags' (ID: 2916)
  Prédit: 'ags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ags' → logprob: -0.004752407781779766
    2. 'bags' → logprob: -5.5047526359558105
    3. 'ag' → logprob: -8.004752159118652
    4. 'A' → logprob: -8.504752159118652
    5. 'a' → logprob: -9.879752159118652
    6. ''' → logprob: -11.004752159118652
    7. '['' → logprob: -11.254752159118652
    8. 'AGS' → logprob: -11.504752159118652
    9. 'ages' → logprob: -11.879752159118652
    10. '`' → logprob: -12.254752159118652

Token 1397: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.162282367469743e-05
    2. '(' → logprob: -9.375091552734375
    3. '(
' → logprob: -12.375091552734375
    4. ''A' → logprob: -13.750091552734375
    5. ''' → logprob: -14.125091552734375
    6. '("' → logprob: -14.250091552734375
    7. ' ('' → logprob: -16.000091552734375
    8. ''S' → logprob: -17.500091552734375
    9. ' ' → logprob: -18.625091552734375
    10. '(A' → logprob: -18.625091552734375

Token 1398: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.836499985889532e-05
    2. ''A' → logprob: -9.7500581741333
    3. ' A' → logprob: -18.500059127807617
    4. '"A' → logprob: -19.625059127807617
    5. ''' → logprob: -20.625059127807617
    6. 'a' → logprob: -21.500059127807617
    7. '	A' → logprob: -21.875059127807617
    8. '’A' → logprob: -21.875059127807617
    9. '_A' → logprob: -23.500059127807617
    10. '```' → logprob: -23.625059127807617

Token 1399: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00022403974435292184
    2. ',' → logprob: -8.500224113464355
    3. 'a' → logprob: -11.750224113464355
    4. ''' → logprob: -11.750224113464355
    5. '',
' → logprob: -13.875224113464355
    6. ',a' → logprob: -14.125224113464355
    7. '(a' → logprob: -14.375224113464355
    8. '(',' → logprob: -14.500224113464355
    9. ''a' → logprob: -14.500224113464355
    10. '",' → logprob: -14.750224113464355

Token 1400: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.875000953674316
    3. '           ' → logprob: -16.0
    4. '   ' → logprob: -17.25
    5. '```' → logprob: -17.75
    6. ')a' → logprob: -18.125
    7. '       ' → logprob: -18.375
    8. ')' → logprob: -19.25
    9. '	a' → logprob: -20.25
    10. '#a' → logprob: -20.5

Token 1401: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31358784437179565
    2. ')
' → logprob: -1.3135879039764404
    3. ')
' → logprob: -8.06358814239502
    4. ')+' → logprob: -12.06358814239502
    5. ' )' → logprob: -13.18858814239502
    6. ' )
' → logprob: -13.68858814239502
    7. '   ' → logprob: -13.68858814239502
    8. '           ' → logprob: -14.56358814239502
    9. ')

' → logprob: -14.93858814239502
    10. '       ' → logprob: -15.56358814239502

Token 1402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5674485564231873
    2. ' +' → logprob: -1.317448616027832
    3. '+' → logprob: -1.817448616027832
    4. 'cost' → logprob: -6.567448616027832
    5. '+
' → logprob: -7.317448616027832
    6. '            
' → logprob: -8.942448616027832
    7. '               ' → logprob: -9.067448616027832
    8. ' +
' → logprob: -9.317448616027832
    9. '
' → logprob: -9.317448616027832
    10. ' cost' → logprob: -9.567448616027832

Token 1403: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.07910513877868652
    2. ' cost' → logprob: -2.5791051387786865
    3. '           ' → logprob: -8.454105377197266
    4. '```' → logprob: -14.329105377197266
    5. '_cost' → logprob: -14.579105377197266
    6. '   ' → logprob: -15.079105377197266
    7. '       ' → logprob: -15.329105377197266
    8. '            ' → logprob: -15.704105377197266
    9. '(cost' → logprob: -15.704105377197266
    10. 'Cost' → logprob: -15.954105377197266

Token 1404: '_b' (ID: 1535)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.01628878153860569
    2. '_' → logprob: -5.016288757324219
    3. '_a' → logprob: -5.266288757324219
    4. '_b' → logprob: -5.766288757324219
    5. '_c' → logprob: -6.891288757324219
    6. 'for' → logprob: -9.016288757324219
    7. '_f' → logprob: -10.891288757324219
    8. 'For' → logprob: -11.016288757324219
    9. '+' → logprob: -11.391288757324219
    10. ' +=' → logprob: -11.766288757324219

Token 1405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3845977485179901
    2. '_for' → logprob: -1.8845977783203125
    3. ' =' → logprob: -2.2595977783203125
    4. '('' → logprob: -3.2595977783203125
    5. 'For' → logprob: -4.7595977783203125
    6. '['' → logprob: -5.1345977783203125
    7. ',' → logprob: -5.3845977783203125
    8. ')' → logprob: -6.5095977783203125
    9. 'for' → logprob: -7.1345977783203125
    10. '*' → logprob: -7.5095977783203125

Token 1406: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001170225441455841
    2. ' cost' → logprob: -6.7511701583862305
    3. '(cost' → logprob: -17.001171112060547
    4. '   ' → logprob: -19.376171112060547
    5. '_cost' → logprob: -19.376171112060547
    6. '.cost' → logprob: -19.626171112060547
    7. '```' → logprob: -20.001171112060547
    8. '`' → logprob: -20.126171112060547
    9. 'c' → logprob: -20.501171112060547
    10. ' kost' → logprob: -21.001171112060547

Token 1407: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -6.749814019713085e-06
    2. 'for' → logprob: -12.125006675720215
    3. '('' → logprob: -14.125006675720215
    4. '_b' → logprob: -15.750006675720215
    5. 'For' → logprob: -16.37500762939453
    6. '['' → logprob: -16.37500762939453
    7. '   ' → logprob: -17.50000762939453
    8. '_' → logprob: -17.87500762939453
    9. 'b' → logprob: -17.87500762939453
    10. '_FOR' → logprob: -18.00000762939453

Token 1408: '_b' (ID: 1535)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.6924915909767151
    2. 'bags' → logprob: -1.4424915313720703
    3. '_b' → logprob: -1.5674915313720703
    4. 'b' → logprob: -3.1924915313720703
    5. 'for' → logprob: -4.44249153137207
    6. ''s' → logprob: -6.94249153137207
    7. ''' → logprob: -7.69249153137207
    8. 'ags' → logprob: -9.06749153137207
    9. '_for' → logprob: -9.44249153137207
    10. 'B' → logprob: -9.69249153137207

Token 1409: 'ags' (ID: 2916)
  Prédit: 'ags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ags' → logprob: -0.013072463683784008
    2. 'bags' → logprob: -4.388072490692139
    3. 'for' → logprob: -8.01307201385498
    4. 'gs' → logprob: -10.01307201385498
    5. 'cost' → logprob: -10.01307201385498
    6. 's' → logprob: -10.51307201385498
    7. ''' → logprob: -10.63807201385498
    8. 'ads' → logprob: -11.01307201385498
    9. 'b' → logprob: -11.26307201385498
    10. ''s' → logprob: -11.63807201385498

Token 1410: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002887490263674408
    2. ''' → logprob: -8.375288963317871
    3. '(' → logprob: -9.875288963317871
    4. ' ('' → logprob: -12.625288963317871
    5. ' '' → logprob: -13.000288963317871
    6. '(
' → logprob: -14.125288963317871
    7. ' ' → logprob: -15.625288963317871
    8. ''b' → logprob: -16.000288009643555
    9. ' (' → logprob: -16.875288009643555
    10. 'B' → logprob: -17.625288009643555

Token 1411: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.176947600673884e-05
    2. 'B' → logprob: -10.750021934509277
    3. ' '' → logprob: -15.625021934509277
    4. '"B' → logprob: -17.75002098083496
    5. '('' → logprob: -18.00002098083496
    6. ''C' → logprob: -18.50002098083496
    7. ''S' → logprob: -18.62502098083496
    8. '’' → logprob: -18.87502098083496
    9. '
' → logprob: -19.12502098083496
    10. ''b' → logprob: -19.37502098083496

Token 1412: '',' (ID: 787)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.35850396752357483
    2. ',' → logprob: -1.2335039377212524
    3. '',' → logprob: -5.108503818511963
    4. ''' → logprob: -6.358503818511963
    5. ')' → logprob: -6.858503818511963
    6. '           ' → logprob: -7.733503818511963
    7. ' ('' → logprob: -8.233504295349121
    8. ' '' → logprob: -9.358504295349121
    9. '),' → logprob: -9.358504295349121
    10. ' ,' → logprob: -9.483504295349121

Token 1413: ' b' (ID: 287)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -7.52919222577475e-05
    2. ' '' → logprob: -9.500075340270996
    3. ''S' → logprob: -16.62507438659668
    4. 'B' → logprob: -16.62507438659668
    5. '`' → logprob: -17.12507438659668
    6. '('' → logprob: -17.25007438659668
    7. ''C' → logprob: -17.37507438659668
    8. ' ' → logprob: -17.50007438659668
    9. '"B' → logprob: -17.50007438659668
    10. '’' → logprob: -18.25007438659668

Token 1414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18375378847122192
    2. ')
' → logprob: -1.8087537288665771
    3. '           ' → logprob: -5.683753967285156
    4. '+' → logprob: -8.308753967285156
    5. ')+' → logprob: -8.433753967285156
    6. ' +' → logprob: -10.558753967285156
    7. ')
' → logprob: -10.558753967285156
    8. '         ' → logprob: -11.433753967285156
    9. '          ' → logprob: -11.433753967285156
    10. ' )' → logprob: -11.558753967285156

Token 1415: '           ' (ID: 352)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.45739758014678955
    2. 'cost' → logprob: -1.2073975801467896
    3. '           ' → logprob: -2.7073974609375
    4. '```' → logprob: -6.8323974609375
    5. '       ' → logprob: -9.2073974609375
    6. ' coût' → logprob: -9.8323974609375
    7. '            ' → logprob: -11.0823974609375
    8. ' costo' → logprob: -11.2073974609375
    9. '               ' → logprob: -11.2073974609375
    10. '_cost' → logprob: -11.2073974609375

Token 1416: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.25332462787628174
    2. ' cost' → logprob: -1.5033246278762817
    3. '           ' → logprob: -6.628324508666992
    4. '```' → logprob: -9.628324508666992
    5. '_cost' → logprob: -13.378324508666992
    6. '(cost' → logprob: -14.128324508666992
    7. '   ' → logprob: -14.503324508666992
    8. '       ' → logprob: -14.503324508666992
    9. ' coût' → logprob: -14.753324508666992
    10. '``' → logprob: -14.878324508666992

Token 1417: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.20231105387210846
    2. '_for' → logprob: -1.7023110389709473
    3. '_' → logprob: -7.827311038970947
    4. 'for' → logprob: -7.952311038970947
    5. 'For' → logprob: -9.577311515808105
    6. '+' → logprob: -10.327311515808105
    7. '=' → logprob: -10.577311515808105
    8. ' =' → logprob: -12.077311515808105
    9. 'c' → logprob: -12.077311515808105
    10. '_f' → logprob: -13.452311515808105

Token 1418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07896282523870468
    2. ' =' → logprob: -2.578962802886963
    3. '('' → logprob: -10.078963279724121
    4. '_for' → logprob: -11.703963279724121
    5. 'For' → logprob: -11.828963279724121
    6. 'for' → logprob: -12.703963279724121
    7. '='' → logprob: -12.953963279724121
    8. ')' → logprob: -12.953963279724121
    9. '=('' → logprob: -13.078963279724121
    10. ' for' → logprob: -13.828963279724121

Token 1419: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.008614808320999146
    2. ' cost' → logprob: -4.758615016937256
    3. '(cost' → logprob: -15.758614540100098
    4. '   ' → logprob: -17.008615493774414
    5. '_cost' → logprob: -17.758615493774414
    6. 'Cost' → logprob: -18.008615493774414
    7. 'c' → logprob: -18.758615493774414
    8. '.cost' → logprob: -18.758615493774414
    9. '```' → logprob: -18.758615493774414
    10. ' ' → logprob: -18.758615493774414

Token 1420: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -2.15310683415737e-05
    2. 'for' → logprob: -10.750021934509277
    3. 'For' → logprob: -18.00002098083496
    4. '('' → logprob: -18.37502098083496
    5. '_FOR' → logprob: -19.00002098083496
    6. '```' → logprob: -19.12502098083496
    7. '_' → logprob: -19.37502098083496
    8. '
' → logprob: -20.50002098083496
    9. ' for' → logprob: -20.87502098083496
    10. '   ' → logprob: -21.00002098083496

Token 1421: '_b' (ID: 1535)
  Prédit: 'bags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bags' → logprob: -0.002729386556893587
    2. ''' → logprob: -7.127729415893555
    3. ''b' → logprob: -7.252729415893555
    4. '_b' → logprob: -7.377729415893555
    5. 'for' → logprob: -7.877729415893555
    6. ''s' → logprob: -9.252729415893555
    7. 'b' → logprob: -10.627729415893555
    8. ''C' → logprob: -10.752729415893555
    9. ' bags' → logprob: -11.002729415893555
    10. '_for' → logprob: -11.127729415893555

Token 1422: 'ags' (ID: 2916)
  Prédit: 'ags'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ags' → logprob: -0.000552555953618139
    2. 'for' → logprob: -7.875552654266357
    3. 'bags' → logprob: -9.3755521774292
    4. ''' → logprob: -9.8755521774292
    5. '_for' → logprob: -11.0005521774292
    6. 'gs' → logprob: -12.6255521774292
    7. '_c' → logprob: -13.0005521774292
    8. 'c' → logprob: -13.1255521774292
    9. 's' → logprob: -13.2505521774292
    10. '`' → logprob: -13.5005521774292

Token 1423: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005653033731505275
    2. '(' → logprob: -7.625565528869629
    3. ''C' → logprob: -9.625565528869629
    4. ''' → logprob: -11.875565528869629
    5. '(
' → logprob: -12.625565528869629
    6. 'C' → logprob: -14.875565528869629
    7. ' ('' → logprob: -16.000564575195312
    8. '("' → logprob: -16.250564575195312
    9. ''S' → logprob: -16.375564575195312
    10. ' '' → logprob: -16.625564575195312

Token 1424: 'C' (ID: 34)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.00033677343162707984
    2. 'C' → logprob: -8.000336647033691
    3. '"C' → logprob: -14.500336647033691
    4. ' '' → logprob: -14.875336647033691
    5. '('' → logprob: -15.875336647033691
    6. ''S' → logprob: -15.875336647033691
    7. ''' → logprob: -15.875336647033691
    8. ' C' → logprob: -17.250337600708008
    9. '   ' → logprob: -18.750337600708008
    10. '```' → logprob: -19.000337600708008

Token 1425: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09984683990478516
    2. '('' → logprob: -2.724846839904785
    3. '',' → logprob: -3.599846839904785
    4. ' ,' → logprob: -6.974846839904785
    5. ''' → logprob: -7.849846839904785
    6. ''C' → logprob: -8.224846839904785
    7. ' ('' → logprob: -9.099846839904785
    8. ' '' → logprob: -9.099846839904785
    9. '(' → logprob: -9.474846839904785
    10. '(',' → logprob: -9.974846839904785

Token 1426: ' c' (ID: 274)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.002340089064091444
    2. ' '' → logprob: -6.377340316772461
    3. ''' → logprob: -7.377340316772461
    4. 'C' → logprob: -12.627340316772461
    5. ' ' → logprob: -13.127340316772461
    6. ''S' → logprob: -13.752340316772461
    7. '')' → logprob: -14.002340316772461
    8. 'c' → logprob: -14.127340316772461
    9. '"C' → logprob: -14.377340316772461
    10. '   ' → logprob: -14.627340316772461

Token 1427: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24221296608448029
    2. ')' → logprob: -1.7422130107879639
    3. ')
' → logprob: -3.242213010787964
    4. '       ' → logprob: -8.617213249206543
    5. '<|end|>' → logprob: -8.742213249206543
    6. '
' → logprob: -8.992213249206543
    7. '               ' → logprob: -9.242213249206543
    8. '          ' → logprob: -9.492213249206543
    9. ')
' → logprob: -9.867213249206543
    10. '            
' → logprob: -10.117213249206543

Token 1428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061704229563474655
    2. 'total' → logprob: -2.936704158782959
    3. 'cost' → logprob: -5.311704158782959
    4. '            
' → logprob: -7.186704158782959
    5. ' total' → logprob: -7.311704158782959
    6. '```' → logprob: -8.436704635620117
    7. ' cost' → logprob: -9.061704635620117
    8. '
' → logprob: -10.561704635620117
    9. '       ' → logprob: -10.936704635620117
    10. '               ' → logprob: -11.436704635620117

Token 1429: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.053173262625932693
    2. '           ' → logprob: -3.553173303604126
    3. ' total' → logprob: -4.303173065185547
    4. 'cost' → logprob: -4.678173065185547
    5. ' cost' → logprob: -8.803173065185547
    6. 'current' → logprob: -8.928173065185547
    7. 'if' → logprob: -10.428173065185547
    8. '       ' → logprob: -12.428173065185547
    9. '            
' → logprob: -12.928173065185547
    10. ' if' → logprob: -12.928173065185547

Token 1430: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00021712594025302678
    2. '_' → logprob: -8.62521743774414
    3. ' _' → logprob: -10.87521743774414
    4. '_total' → logprob: -12.00021743774414
    5. '_co' → logprob: -13.12521743774414
    6. '_COST' → logprob: -13.12521743774414
    7. '```' → logprob: -13.75021743774414
    8. '=_' → logprob: -13.87521743774414
    9. '_c' → logprob: -14.00021743774414
    10. '_score' → logprob: -14.12521743774414

Token 1431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410136461257935
    2. ' =' → logprob: -0.9741013646125793
    3. '   ' → logprob: -11.599101066589355
    4. ' +=' → logprob: -12.349101066589355
    5. '```' → logprob: -12.474101066589355
    6. '+=' → logprob: -13.724101066589355
    7. '<|end|>' → logprob: -13.724101066589355
    8. '           ' → logprob: -14.099101066589355
    9. '    ' → logprob: -14.349101066589355
    10. ')' → logprob: -14.349101066589355

Token 1432: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.25193002820014954
    2. 'cost' → logprob: -1.5019299983978271
    3. '           ' → logprob: -14.126930236816406
    4. '(cost' → logprob: -16.001930236816406
    5. 'Cost' → logprob: -18.376930236816406
    6. '_cost' → logprob: -18.376930236816406
    7. '               ' → logprob: -18.626930236816406
    8. '            ' → logprob: -18.751930236816406
    9. '   ' → logprob: -18.876930236816406
    10. ' kost' → logprob: -19.751930236816406

Token 1433: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.018248748034238815
    2. '_for' → logprob: -4.018248558044434
    3. 'for' → logprob: -10.018248558044434
    4. '_' → logprob: -10.143248558044434
    5. 'a' → logprob: -11.893248558044434
    6. '   ' → logprob: -13.268248558044434
    7. 'For' → logprob: -14.143248558044434
    8. '```' → logprob: -14.143248558044434
    9. '_c' → logprob: -14.518248558044434
    10. '           ' → logprob: -15.018248558044434

Token 1434: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740861654281616
    2. '+' → logprob: -0.9740861654281616
    3. '+
' → logprob: -12.224085807800293
    4. ' +
' → logprob: -12.849085807800293
    5. '
' → logprob: -14.224085807800293
    6. ' ' → logprob: -14.849085807800293
    7. ' ' → logprob: -16.09908676147461
    8. '＋' → logprob: -16.22408676147461
    9. '   ' → logprob: -16.59908676147461
    10. '﻿' → logprob: -16.84908676147461

Token 1435: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10023697465658188
    2. ' cost' → logprob: -2.3502368927001953
    3. 'total' → logprob: -10.600236892700195
    4. ' total' → logprob: -12.600236892700195
    5. '           ' → logprob: -13.975236892700195
    6. '_cost' → logprob: -15.600236892700195
    7. '               ' → logprob: -15.725236892700195
    8. '```' → logprob: -15.850236892700195
    9. '   ' → logprob: -16.100236892700195
    10. 'Cost' → logprob: -16.225236892700195

Token 1436: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.652451464906335e-05
    2. '_c' → logprob: -11.625016212463379
    3. '_' → logprob: -12.000016212463379
    4. '_for' → logprob: -14.250016212463379
    5. '_cost' → logprob: -15.125016212463379
    6. 'b' → logprob: -15.625016212463379
    7. '```' → logprob: -16.625017166137695
    8. '_
' → logprob: -17.500017166137695
    9. 'for' → logprob: -17.750017166137695
    10. '_f' → logprob: -17.875017166137695

Token 1437: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1438: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0007099286303855479
    2. ' cost' → logprob: -7.2507100105285645
    3. 'co' → logprob: -19.125709533691406
    4. '           ' → logprob: -20.000709533691406
    5. '   ' → logprob: -20.125709533691406
    6. '(cost' → logprob: -20.250709533691406
    7. '_cost' → logprob: -20.375709533691406
    8. '```' → logprob: -20.375709533691406
    9. 'Cost' → logprob: -20.500709533691406
    10. '
' → logprob: -20.875709533691406

Token 1439: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.7432603272027336e-06
    2. 'for' → logprob: -14.125001907348633
    3. '_for' → logprob: -14.250001907348633
    4. 'c' → logprob: -15.875001907348633
    5. '_cost' → logprob: -16.625001907348633
    6. '```' → logprob: -18.375001907348633
    7. 'For' → logprob: -18.750001907348633
    8. '_' → logprob: -18.875001907348633
    9. 'cost' → logprob: -20.000001907348633
    10. '`' → logprob: -20.875001907348633

Token 1440: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011015401221811771
    2. '
' → logprob: -5.26101541519165
    3. ' if' → logprob: -5.63601541519165
    4. '<|end|>' → logprob: -6.88601541519165
    5. '            
' → logprob: -7.51101541519165
    6. '               ' → logprob: -8.761014938354492
    7. 'if' → logprob: -9.136014938354492
    8. '```' → logprob: -9.886014938354492
    9. '<|end|>' → logprob: -9.886014938354492
    10. '  
' → logprob: -10.261014938354492

Token 1441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.4418171455617994e-05
    2. 'if' → logprob: -10.250044822692871
    3. ' if' → logprob: -12.375044822692871
    4. '               ' → logprob: -12.750044822692871
    5. '       ' → logprob: -14.000044822692871
    6. '```' → logprob: -14.000044822692871
    7. '		' → logprob: -15.875044822692871
    8. '                   ' → logprob: -16.250043869018555
    9. '   ' → logprob: -17.000043869018555
    10. '          ' → logprob: -17.125043869018555

Token 1442: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009577934979461133
    2. '           ' → logprob: -7.00095796585083
    3. ' if' → logprob: -10.000957489013672
    4. 'min' → logprob: -14.125957489013672
    5. '   ' → logprob: -16.250957489013672
    6. '       ' → logprob: -17.625957489013672
    7. '               ' → logprob: -17.875957489013672
    8. '	if' → logprob: -19.000957489013672
    9. 'If' → logprob: -19.125957489013672
    10. '
' → logprob: -20.250957489013672

Token 1443: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20141607522964478
    2. ' total' → logprob: -1.701416015625
    3. '           ' → logprob: -13.201416015625
    4. '   ' → logprob: -14.576416015625
    5. '	total' → logprob: -15.576416015625
    6. '(total' → logprob: -16.201416015625
    7. '               ' → logprob: -16.326416015625
    8. ' ' → logprob: -17.451416015625
    9. '                   ' → logprob: -17.951416015625
    10. '$total' → logprob: -17.951416015625

Token 1444: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00043221889063715935
    2. 'cost' → logprob: -7.750432014465332
    3. ' cost' → logprob: -13.750432014465332
    4. '_COST' → logprob: -15.250432014465332
    5. 'Cost' → logprob: -16.00043296813965
    6. '_co' → logprob: -17.50043296813965
    7. '成本' → logprob: -17.50043296813965
    8. '           ' → logprob: -18.37543296813965
    9. 'total' → logprob: -18.37543296813965
    10. '_c' → logprob: -18.62543296813965

Token 1445: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.179823100566864
    2. ' <' → logprob: -1.8048231601715088
    3. '<|end|>' → logprob: -10.92982292175293
    4. 'min' → logprob: -11.55482292175293
    5. '<int' → logprob: -11.80482292175293
    6. ' <=' → logprob: -11.80482292175293
    7. '```' → logprob: -11.92982292175293
    8. '<=' → logprob: -12.17982292175293
    9. '<size' → logprob: -12.30482292175293
    10. '   ' → logprob: -12.80482292175293

Token 1446: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.56102097814437e-05
    2. ' min' → logprob: -10.000045776367188
    3. '           ' → logprob: -15.625045776367188
    4. '               ' → logprob: -19.250045776367188
    5. '	min' → logprob: -19.250045776367188
    6. '   ' → logprob: -20.375045776367188
    7. '_min' → logprob: -20.375045776367188
    8. '
' → logprob: -21.000045776367188
    9. 'minimum' → logprob: -21.250045776367188
    10. '(min' → logprob: -21.250045776367188

Token 1447: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.664371848164592e-05
    2. 'cost' → logprob: -11.125016212463379
    3. '_co' → logprob: -14.250016212463379
    4. '_' → logprob: -14.750016212463379
    5. 'Cost' → logprob: -15.250016212463379
    6. '_c' → logprob: -15.750016212463379
    7. '_COST' → logprob: -15.875016212463379
    8. '```' → logprob: -16.500017166137695
    9. '`' → logprob: -16.750017166137695
    10. '   ' → logprob: -17.625017166137695

Token 1448: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9477672576904297
    2. ':
' → logprob: -1.0727672576904297
    3. '               ' → logprob: -1.3227672576904297
    4. '           ' → logprob: -6.32276725769043
    5. '                       ' → logprob: -7.44776725769043
    6. '=' → logprob: -7.82276725769043
    7. '                   ' → logprob: -8.19776725769043
    8. '                           ' → logprob: -8.32276725769043
    9. '                               ' → logprob: -8.94776725769043
    10. '```' → logprob: -8.94776725769043

Token 1449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027211863547563553
    2. '=' → logprob: -4.652211666107178
    3. 'min' → logprob: -4.902211666107178
    4. ':
' → logprob: -5.652211666107178
    5. '=min' → logprob: -5.652211666107178
    6. ':' → logprob: -7.027211666107178
    7. ' min' → logprob: -7.277211666107178
    8. '           ' → logprob: -8.277212142944336
    9. ' =' → logprob: -8.652212142944336
    10. '                   ' → logprob: -8.902212142944336

Token 1450: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -6.146429223008454e-05
    2. '               ' → logprob: -10.50006103515625
    3. ' min' → logprob: -11.00006103515625
    4. '                   ' → logprob: -11.00006103515625
    5. '```' → logprob: -14.87506103515625
    6. '_min' → logprob: -16.75006103515625
    7. '                       ' → logprob: -17.25006103515625
    8. '           ' → logprob: -17.50006103515625
    9. '	min' → logprob: -17.75006103515625
    10. '(min' → logprob: -18.12506103515625

Token 1451: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.380904672667384e-05
    2. '_' → logprob: -10.875033378601074
    3. 'cost' → logprob: -12.125033378601074
    4. '_COST' → logprob: -12.750033378601074
    5. 'Cost' → logprob: -12.875033378601074
    6. '_c' → logprob: -13.250033378601074
    7. '_co' → logprob: -14.125033378601074
    8. '_price' → logprob: -14.875033378601074
    9. '_code' → logprob: -15.500033378601074
    10. '_val' → logprob: -15.750033378601074

Token 1452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615872822701931
    2. ' =' → logprob: -4.758615970611572
    3. '=
' → logprob: -14.633615493774414
    4. '   ' → logprob: -14.758615493774414
    5. '＝' → logprob: -15.258615493774414
    6. '                   ' → logprob: -15.883615493774414
    7. '               ' → logprob: -16.258615493774414
    8. '```' → logprob: -17.133615493774414
    9. '           ' → logprob: -17.758615493774414
    10. '	' → logprob: -18.133615493774414

Token 1453: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.014168561436235905
    2. ' total' → logprob: -4.264168739318848
    3. '               ' → logprob: -12.639168739318848
    4. '                   ' → logprob: -13.889168739318848
    5. '           ' → logprob: -14.264168739318848
    6. '   ' → logprob: -16.13916778564453
    7. '	total' → logprob: -16.63916778564453
    8. ' ' → logprob: -17.63916778564453
    9. '$total' → logprob: -18.01416778564453
    10. '(total' → logprob: -18.26416778564453

Token 1454: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0003577495808713138
    2. 'cost' → logprob: -8.125357627868652
    3. 'total' → logprob: -10.250357627868652
    4. '_total' → logprob: -11.375357627868652
    5. 'Cost' → logprob: -11.750357627868652
    6. '_c' → logprob: -13.500357627868652
    7. '   ' → logprob: -13.750357627868652
    8. '_COST' → logprob: -14.250357627868652
    9. '```' → logprob: -14.375357627868652
    10. '_' → logprob: -14.625357627868652

Token 1455: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13100168108940125
    2. 'return' → logprob: -2.1310017108917236
    3. '
' → logprob: -6.1310014724731445
    4. '    
' → logprob: -6.3810014724731445
    5. ' return' → logprob: -8.756001472473145
    6. '```' → logprob: -10.631001472473145
    7. '       ' → logprob: -12.506001472473145
    8. '        
' → logprob: -13.131001472473145
    9. '                
' → logprob: -13.381001472473145
    10. '	return' → logprob: -13.381001472473145

Token 1457: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.061980459839105606
    2. '   ' → logprob: -2.8119804859161377
    3. ' return' → logprob: -11.311980247497559
    4. '```' → logprob: -14.436980247497559
    5. '	return' → logprob: -16.436981201171875
    6. '    
' → logprob: -18.561981201171875
    7. '
' → logprob: -18.561981201171875
    8. '#' → logprob: -19.311981201171875
    9. '       ' → logprob: -19.436981201171875
    10. '   ' → logprob: -19.936981201171875

Token 1458: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00033546582562848926
    2. ' min' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.250335693359375
    4. '	min' → logprob: -19.625335693359375
    5. 'int' → logprob: -20.500335693359375
    6. '_min' → logprob: -21.375335693359375
    7. '(min' → logprob: -21.750335693359375
    8. 'max' → logprob: -22.375335693359375
    9. '[min' → logprob: -22.500335693359375
    10. '```' → logprob: -23.625335693359375

Token 1459: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0280383548888494e-06
    2. 'cost' → logprob: -14.000000953674316
    3. '_COST' → logprob: -16.750001907348633
    4. 'Cost' → logprob: -17.750001907348633
    5. '_code' → logprob: -18.625001907348633
    6. '_cut' → logprob: -19.000001907348633
    7. 't' → logprob: -19.125001907348633
    8. '_' → logprob: -19.125001907348633
    9. ' cost' → logprob: -20.000001907348633
    10. '_c' → logprob: -20.500001907348633

Token 1460: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9352754354476929
    2. 'if' → logprob: -1.3102754354476929
    3. '<|end|>' → logprob: -1.4352754354476929
    4. 'amount' → logprob: -2.8102755546569824
    5. '```' → logprob: -3.6852755546569824
    6. '
' → logprob: -4.935275554656982
    7. 'print' → logprob: -6.060275554656982
    8. 'a' → logprob: -6.060275554656982
    9. ' if' → logprob: -7.060275554656982
    10. '<|end|>' → logprob: -7.435275554656982

Token 1461: 'def' (ID: 1314)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.26566171646118164
    2. '<|end|>' → logprob: -1.5156617164611816
    3. '#' → logprob: -5.140661716461182
    4. '```' → logprob: -5.515661716461182
    5. ' amount' → logprob: -6.515661716461182
    6. 'if' → logprob: -7.015661716461182
    7. 'def' → logprob: -7.265661716461182
    8. '(amount' → logprob: -8.015661239624023
    9. '
' → logprob: -9.265661239624023
    10. 'a' → logprob: -9.265661239624023

Token 1462: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.018151700496673584
    2. ' main' → logprob: -4.018151760101318
    3. '__' → logprob: -13.89315128326416
    4. 'run' → logprob: -15.26815128326416
    5. 'input' → logprob: -15.51815128326416
    6. 'test' → logprob: -15.76815128326416
    7. '_main' → logprob: -15.76815128326416
    8. 'solution' → logprob: -17.018152236938477
    9. '	main' → logprob: -17.018152236938477
    10. 'read' → logprob: -17.143152236938477

Token 1463: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007615968119353056
    2. '():
' → logprob: -4.88261604309082
    3. '():
' → logprob: -12.25761604309082
    4. ' ():' → logprob: -13.25761604309082
    5. '()' → logprob: -13.50761604309082
    6. '()>' → logprob: -14.00761604309082
    7. '():

' → logprob: -14.38261604309082
    8. 'def' → logprob: -15.38261604309082
    9. '()">' → logprob: -16.75761604309082
    10. '(argv' → logprob: -17.13261604309082

Token 1464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09734409302473068
    2. '```' → logprob: -3.472344160079956
    3. '
' → logprob: -3.847344160079956
    4. 'if' → logprob: -3.972344160079956
    5. 'import' → logprob: -4.472343921661377
    6. 'def' → logprob: -5.347343921661377
    7. '():
' → logprob: -6.222343921661377
    8. '():' → logprob: -6.847343921661377
    9. '    
' → logprob: -7.347343921661377
    10. '()' → logprob: -7.722343921661377

Token 1465: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7555572390556335
    2. 'amount' → logprob: -1.0055572986602783
    3. 'n' → logprob: -2.2555572986602783
    4. 'import' → logprob: -3.6305572986602783
    5. 'for' → logprob: -3.7555572986602783
    6. 'a' → logprob: -5.130557060241699
    7. 'if' → logprob: -6.880557060241699
    8. 't' → logprob: -7.130557060241699
    9. ' amount' → logprob: -7.255557060241699
    10. 'input' (adapté à ' input') → logprob: -8.0055570602417

Token 1466: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.532475471496582
    2. '_line' → logprob: -1.032475471496582
    3. '_' → logprob: -3.407475471496582
    4. '_data' → logprob: -4.657475471496582
    5. '_l' → logprob: -5.907475471496582
    6. '_lines' → logprob: -5.907475471496582
    7. 's' → logprob: -6.157475471496582
    8. '=' → logprob: -6.532475471496582
    9. '_amount' → logprob: -6.782475471496582
    10. '_text' → logprob: -6.907475471496582

Token 1467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005555436015129089
    2. '()' → logprob: -5.505555629730225
    3. ' =' → logprob: -6.880555629730225
    4. '   ' → logprob: -8.255555152893066
    5. '()
' → logprob: -9.630555152893066
    6. '=
' → logprob: -10.005555152893066
    7. '=[]' → logprob: -10.255555152893066
    8. '=[]
' → logprob: -11.880555152893066
    9. '().' → logprob: -12.505555152893066
    10. '=sys' → logprob: -12.505555152893066

Token 1468: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011047935113310814
    2. ' sys' → logprob: -4.511047840118408
    3. '[' → logprob: -16.13604736328125
    4. '(sys' → logprob: -17.38604736328125
    5. '=sys' → logprob: -17.88604736328125
    6. '	sys' → logprob: -18.01104736328125
    7. ' [' → logprob: -18.76104736328125
    8. '[]' → logprob: -20.38604736328125
    9. '   ' → logprob: -21.13604736328125
    10. '[]
' → logprob: -21.38604736328125

Token 1469: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.014247656799852848
    2. 'stdin' → logprob: -4.264247894287109
    3. '.readline' → logprob: -9.88924789428711
    4. '(stdin' → logprob: -10.51424789428711
    5. '.stdout' → logprob: -13.01424789428711
    6. '.' → logprob: -13.63924789428711
    7. ' stdin' → logprob: -14.13924789428711
    8. 'input' → logprob: -14.76424789428711
    9. '```' → logprob: -14.88924789428711
    10. 'import' → logprob: -14.88924789428711

Token 1470: '.read' (ID: 7211)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.01043703407049179
    2. '.readline' → logprob: -4.76043701171875
    3. 'lines' → logprob: -7.38543701171875
    4. '.readlines' → logprob: -8.01043701171875
    5. 'stdin' → logprob: -8.13543701171875
    6. '_read' → logprob: -8.38543701171875
    7. 'input' → logprob: -9.38543701171875
    8. '.read' → logprob: -10.01043701171875
    9. 'for' → logprob: -10.01043701171875
    10. '_lines' → logprob: -10.38543701171875

Token 1471: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020425561524461955
    2. '()' → logprob: -8.500204086303711
    3. '()
' → logprob: -14.250204086303711
    4. '.split' → logprob: -16.87520408630371
    5. '.strip' → logprob: -17.75020408630371
    6. 'lines' → logprob: -17.75020408630371
    7. '(' → logprob: -17.87520408630371
    8. 'split' → logprob: -18.37520408630371
    9. '_lines' → logprob: -18.75020408630371
    10. '()

' → logprob: -19.25020408630371

Token 1472: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16036030650138855
    2. 'split' → logprob: -1.910360336303711
    3. 'decode' → logprob: -9.160360336303711
    4. 'read' → logprob: -10.410360336303711
    5. 'rstrip' → logprob: -14.160360336303711
    6. 'lines' → logprob: -15.410360336303711
    7. ' split' → logprob: -19.16036033630371
    8. ' strip' → logprob: -19.78536033630371
    9. '.strip' → logprob: -20.53536033630371
    10. 'replace' → logprob: -20.53536033630371

Token 1473: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00032759839086793363
    2. '()' → logprob: -8.125328063964844
    3. '()
' → logprob: -10.500328063964844
    4. 'split' → logprob: -13.375328063964844
    5. '.split' → logprob: -14.000328063964844
    6. '('\' → logprob: -14.250328063964844
    7. '()\' → logprob: -14.500328063964844
    8. '_lines' → logprob: -16.125328063964844
    9. 'lines' → logprob: -16.375328063964844
    10. '   ' → logprob: -16.500328063964844

Token 1474: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.5
    3. 'spl' → logprob: -20.625
    4. '(split' → logprob: -21.125
    5. 'lines' → logprob: -22.75
    6. '_split' → logprob: -23.125
    7. 'decode' → logprob: -23.625
    8. 'strip' → logprob: -23.75
    9. 'rstrip' → logprob: -24.375
    10. '.split' → logprob: -24.375

Token 1475: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3404313027858734
    2. '('\' → logprob: -1.3404313325881958
    3. '()
' → logprob: -3.8404312133789062
    4. 'lines' → logprob: -5.340431213378906
    5. '()\' → logprob: -8.465431213378906
    6. '('' → logprob: -8.840431213378906
    7. '("\' → logprob: -9.590431213378906
    8. '()[' → logprob: -9.840431213378906
    9. '(' → logprob: -10.715431213378906
    10. '()`' → logprob: -12.465431213378906

Token 1476: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.424530435353518e-05
    2. '\n' → logprob: -9.500094413757324
    3. 'lines' → logprob: -11.000094413757324
    4. 'newline' → logprob: -13.250094413757324
    5. ''\' → logprob: -14.875094413757324
    6. '
' → logprob: -14.875094413757324
    7. '('\' → logprob: -16.625093460083008
    8. 'input' → logprob: -17.625093460083008
    9. ' n' → logprob: -17.875093460083008
    10. '\' → logprob: -18.375093460083008

Token 1477: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.16318941116333
    2. ')
' → logprob: -1.16318941116333
    3. '   ' → logprob: -1.28818941116333
    4. '')
' → logprob: -2.78818941116333
    5. '')' → logprob: -3.41318941116333
    6. '()' → logprob: -5.53818941116333
    7. '())
' → logprob: -7.91318941116333
    8. '()
' → logprob: -8.288188934326172
    9. ')')
' → logprob: -10.288188934326172
    10. '())' → logprob: -10.538188934326172

Token 1478: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3251948654651642
    2. '   ' → logprob: -1.3251948356628418
    3. ' for' → logprob: -5.200194835662842
    4. 'amount' → logprob: -5.450194835662842
    5. 't' → logprob: -7.325194835662842
    6. 'a' → logprob: -7.325194835662842
    7. 'n' → logprob: -7.825194835662842
    8. 'quantity' → logprob: -8.2001953125
    9. ' amount' → logprob: -10.7001953125
    10. '```' → logprob: -11.0751953125

Token 1479: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.42229628562927246
    2. 'amount' → logprob: -1.1722962856292725
    3. 'a' → logprob: -3.7972962856292725
    4. 't' → logprob: -4.672296524047852
    5. 'n' → logprob: -6.672296524047852
    6. '   ' → logprob: -6.922296524047852
    7. 'quantity' → logprob: -7.797296524047852
    8. 'T' → logprob: -8.422296524047852
    9. 'q' → logprob: -9.797296524047852
    10. ' for' → logprob: -10.672296524047852

Token 1480: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019512299913913012
    2. ' line' → logprob: -6.251951217651367
    3. 'amount' → logprob: -10.751951217651367
    4. 'quantity' → logprob: -14.876951217651367
    5. 'ligne' → logprob: -14.876951217651367
    6. '	line' → logprob: -15.251951217651367
    7. ' amount' → logprob: -16.251951217651367
    8. 'i' → logprob: -17.251951217651367
    9. '   ' → logprob: -17.251951217651367
    10. 'qty' → logprob: -17.251951217651367

Token 1481: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008996127173304558
    2. 'in' → logprob: -4.75899600982666
    3. '   ' → logprob: -8.00899600982666
    4. '       ' → logprob: -10.50899600982666
    5. ':
' → logprob: -12.38399600982666
    6. '_in' → logprob: -12.38399600982666
    7. '	in' → logprob: -12.50899600982666
    8. ':' → logprob: -13.88399600982666
    9. '    ' → logprob: -14.00899600982666
    10. '<|end|>' → logprob: -14.69649600982666

Token 1482: ' input' (ID: 3422)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.033661723136901855
    2. 'input' → logprob: -3.9086618423461914
    3. ' line' → logprob: -4.408661842346191
    4. ' input' → logprob: -7.283661842346191
    5. 'lines' → logprob: -9.033661842346191
    6. 'sys' → logprob: -10.283661842346191
    7. 'l' → logprob: -12.283661842346191
    8. ' sys' → logprob: -12.283661842346191
    9. 'in' → logprob: -12.783661842346191
    10. 'ligne' → logprob: -12.783661842346191

Token 1483: '_lines' (ID: 42980)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.21883536875247955
    2. '():' → logprob: -2.4688353538513184
    3. ' in' → logprob: -2.7188353538513184
    4. ':' → logprob: -4.093835353851318
    5. ':
' → logprob: -4.968835353851318
    6. '_lines' → logprob: -5.343835353851318
    7. '().' → logprob: -5.718835353851318
    8. 'in' → logprob: -6.343835353851318
    9. '.' → logprob: -6.468835353851318
    10. '()' → logprob: -6.593835353851318

Token 1484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5490047931671143
    2. ':
' → logprob: -0.9240047931671143
    3. '   ' → logprob: -4.299004554748535
    4. '       ' → logprob: -4.549004554748535
    5. '):
' → logprob: -8.174004554748535
    6. ',' → logprob: -8.299004554748535
    7. '():
' → logprob: -8.674004554748535
    8. ' =' → logprob: -8.799004554748535
    9. '.strip' → logprob: -9.549004554748535
    10. '=' → logprob: -9.549004554748535

Token 1485: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.861651490908116e-05
    2. ' if' → logprob: -10.250068664550781
    3. 'if' → logprob: -11.000068664550781
    4. '   ' → logprob: -11.625068664550781
    5. '       ' → logprob: -12.250068664550781
    6. '```' → logprob: -13.875068664550781
    7. '	if' → logprob: -14.750068664550781
    8. '    
' → logprob: -15.250068664550781
    9. ',' → logprob: -15.250068664550781
    10. 'a' → logprob: -15.500068664550781

Token 1486: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5400645732879639
    2. 'amount' → logprob: -1.2900645732879639
    3. 'a' (adapté à ' a') → logprob: -2.040064573287964
    4. '   ' → logprob: -4.540064811706543
    5. '       ' → logprob: -7.415064811706543
    6. ' if' → logprob: -7.540064811706543
    7. 'quantity' → logprob: -9.040064811706543
    8. ' amount' → logprob: -9.415064811706543
    9. ' a' → logprob: -12.540064811706543
    10. 'try' → logprob: -13.165064811706543

Token 1487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6345449686050415
    2. ' =' → logprob: -0.7595449686050415
    3. 'mount' → logprob: -7.134544849395752
    4. 'm' → logprob: -7.509544849395752
    5. 'mt' → logprob: -8.63454532623291
    6. '=int' → logprob: -8.75954532623291
    7. ' ' → logprob: -9.00954532623291
    8. 'mnt' → logprob: -9.63454532623291
    9. ',' → logprob: -10.88454532623291
    10. 'if' → logprob: -11.88454532623291

Token 1488: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. ' int' → logprob: -14.500000953674316
    3. '(int' → logprob: -23.125
    4. '[int' → logprob: -23.125
    5. '=int' → logprob: -23.875
    6. '   ' → logprob: -24.0
    7. '	int' → logprob: -24.375
    8. '<int' → logprob: -25.875
    9. '```' → logprob: -26.125
    10. '  ' → logprob: -26.875

Token 1489: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0001584850688232109
    2. 'line' → logprob: -8.750158309936523
    3. ' line' → logprob: -17.875158309936523
    4. '[line' → logprob: -18.125158309936523
    5. '#line' → logprob: -18.750158309936523
    6. '=line' → logprob: -18.875158309936523
    7. '(' → logprob: -19.625158309936523
    8. '	line' → logprob: -20.000158309936523
    9. '_line' → logprob: -22.000158309936523
    10. ',line' → logprob: -22.250158309936523

Token 1490: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16332106292247772
    2. ')' → logprob: -1.9133210182189941
    3. '.strip' → logprob: -5.788321018218994
    4. ')
' → logprob: -11.538321495056152
    5. '   ' → logprob: -12.038321495056152
    6. ' )
' → logprob: -12.538321495056152
    7. '.rstrip' → logprob: -12.788321495056152
    8. '       ' → logprob: -13.663321495056152
    9. ')`
' → logprob: -13.788321495056152
    10. '),' → logprob: -14.288321495056152

Token 1491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023889681324362755
    2. 'if' → logprob: -6.377388954162598
    3. '   ' → logprob: -7.377388954162598
    4. ' if' → logprob: -10.377388954162598
    5. '<|end|>' → logprob: -11.252388954162598
    6. '```' → logprob: -11.627388954162598
    7. '        
' → logprob: -12.502388954162598
    8. '           ' → logprob: -14.127388954162598
    9. '<|end|>' → logprob: -14.502388954162598
    10. 'for' → logprob: -14.877388954162598

Token 1492: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4831503629684448
    2. 'print' → logprob: -0.9831503629684448
    3. 'result' → logprob: -4.983150482177734
    4. '   ' → logprob: -7.108150482177734
    5. 'res' → logprob: -7.358150482177734
    6. '       ' → logprob: -8.358150482177734
    7. 'cost' → logprob: -8.358150482177734
    8. ' if' → logprob: -8.483150482177734
    9. '```' → logprob: -11.608150482177734
    10. '
' → logprob: -11.733150482177734

Token 1493: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16028526425361633
    2. ' a' → logprob: -1.910285234451294
    3. ' not' → logprob: -9.785284996032715
    4. '0' → logprob: -12.535284996032715
    5. '   ' → logprob: -14.160284996032715
    6. 'not' → logprob: -15.035284996032715
    7. '       ' → logprob: -15.285284996032715
    8. ' ' → logprob: -17.41028594970703
    9. '```' → logprob: -17.78528594970703
    10. '_a' → logprob: -18.03528594970703

Token 1494: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2527428865432739
    2. ' ==' → logprob: -1.502742886543274
    3. '<=' → logprob: -7.377742767333984
    4. '=' → logprob: -9.502742767333984
    5. ' <=' → logprob: -10.127742767333984
    6. '===' → logprob: -10.752742767333984
    7. '==
' → logprob: -11.377742767333984
    8. '<|end|>' → logprob: -11.627742767333984
    9. '()==' → logprob: -11.877742767333984
    10. ')==' → logprob: -12.002742767333984

Token 1495: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '-' → logprob: -15.000001907348633
    4. ' -' → logprob: -20.625001907348633
    5. '   ' → logprob: -20.875001907348633
    6. '```' → logprob: -22.125001907348633
    7. '۰' → logprob: -22.375001907348633
    8. '#' → logprob: -23.125001907348633
    9. '  ' → logprob: -23.250001907348633
    10. '00' → logprob: -23.500001907348633

Token 1496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '-' → logprob: -19.5
    4. '   ' → logprob: -21.875
    5. '#' → logprob: -22.125
    6. '۰' → logprob: -23.5
    7. '０' → logprob: -23.625
    8. '  ' → logprob: -24.25
    9. '000' → logprob: -24.25
    10. '00' → logprob: -24.25

Token 1497: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20263291895389557
    2. ':' → logprob: -1.7026329040527344
    3. '       ' → logprob: -7.202632904052734
    4. '           ' → logprob: -8.202632904052734
    5. '   ' → logprob: -8.702632904052734
    6. ':
' → logprob: -10.702632904052734
    7. ':return' → logprob: -11.952632904052734
    8. '	   ' → logprob: -13.952632904052734
    9. ' :
' → logprob: -14.202632904052734
    10. '	' → logprob: -14.452632904052734

Token 1498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018347532022744417
    2. '		' → logprob: -6.626834869384766
    3. '	       ' → logprob: -8.251834869384766
    4. '       ' → logprob: -8.501834869384766
    5. '               ' → logprob: -11.751834869384766
    6. 'break' → logprob: -12.001834869384766
    7. '	break' → logprob: -12.376834869384766
    8. '<|end|>' → logprob: -12.876834869384766
    9. '		   ' → logprob: -13.001834869384766
    10. '   ' → logprob: -13.001834869384766

Token 1499: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0003751423500943929
    2. '           ' → logprob: -8.500374794006348
    3. ' break' → logprob: -9.250374794006348
    4. '       ' → logprob: -10.000374794006348
    5. '	break' → logprob: -11.000374794006348
    6. 'return' → logprob: -11.250374794006348
    7. '               ' → logprob: -14.875374794006348
    8. '		' → logprob: -16.625375747680664
    9. '   ' → logprob: -17.500375747680664
    10. '_break' → logprob: -18.375375747680664

Token 1500: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047821682528592646
    2. '<|end|>' → logprob: -8.50047779083252
    3. '        
' → logprob: -8.87547779083252
    4. '   ' → logprob: -9.37547779083252
    5. '
' → logprob: -10.62547779083252
    6. '```' → logprob: -10.87547779083252
    7. '    
' → logprob: -13.00047779083252
    8. '<|end|>' → logprob: -13.37547779083252
    9. '           ' → logprob: -14.12547779083252
    10. '  
' → logprob: -14.12547779083252

Token 1501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033147193025797606
    2. '   ' → logprob: -5.75331449508667
    3. 'print' → logprob: -9.253314971923828
    4. '
' → logprob: -11.128314971923828
    5. '```' → logprob: -11.378314971923828
    6. '        
' → logprob: -12.003314971923828
    7. '    
' → logprob: -12.503314971923828
    8. ' print' → logprob: -13.003314971923828
    9. '<|end|>' → logprob: -13.253314971923828
    10. '           ' → logprob: -14.628314971923828

Token 1502: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2542015314102173
    2. '       ' → logprob: -1.5042015314102173
    3. 'result' → logprob: -6.754201412200928
    4. ' print' → logprob: -7.129201412200928
    5. '   ' → logprob: -8.254201889038086
    6. '```' → logprob: -11.129201889038086
    7. '
' → logprob: -11.879201889038086
    8. '        
' → logprob: -11.879201889038086
    9. 'cost' → logprob: -12.129201889038086
    10. ' result' → logprob: -13.004201889038086

Token 1503: ' Rés' (ID: 104378)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028812315315008163
    2. 'result' → logprob: -4.278812408447266
    3. '       ' → logprob: -4.403812408447266
    4. ' print' → logprob: -6.153812408447266
    5. 'cost' → logprob: -10.028812408447266
    6. ' result' → logprob: -10.028812408447266
    7. 'res' → logprob: -10.528812408447266
    8. '   ' → logprob: -10.903812408447266
    9. 'solution' → logprob: -11.653812408447266
    10. 'answer' → logprob: -11.903812408447266

Token 1504: 'oudre' (ID: 53878)
  Prédit: 'ultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.0203657578676939
    2. 'ult' → logprob: -4.0203657150268555
    3. '       ' → logprob: -6.1453657150268555
    4. 'print' → logprob: -10.020365715026855
    5. 'ulat' → logprob: -12.020365715026855
    6. 'utat' → logprob: -12.020365715026855
    7. 'olution' → logprob: -12.520365715026855
    8. 'ul' → logprob: -13.145365715026855
    9. '   ' → logprob: -13.145365715026855
    10. '           ' → logprob: -13.520365715026855

Token 1505: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11643856018781662
    2. 'print' → logprob: -2.366438627243042
    3. 'result' → logprob: -4.491438388824463
    4. 'for' → logprob: -5.616438388824463
    5. 'pour' → logprob: -8.491438865661621
    6. '        
' → logprob: -8.491438865661621
    7. ' for' → logprob: -8.616438865661621
    8. '   ' → logprob: -9.116438865661621
    9. '```' → logprob: -9.491438865661621
    10. '<|end|>' → logprob: -9.741438865661621

Token 1506: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.183501293184236e-05
    2. 'l' → logprob: -10.37507152557373
    3. '       ' → logprob: -10.87507152557373
    4. 'la' → logprob: -11.75007152557373
    5. 'print' → logprob: -11.87507152557373
    6. 'le' → logprob: -13.00007152557373
    7. ' a' → logprob: -13.62507152557373
    8. 'the' → logprob: -14.00007152557373
    9. '   ' → logprob: -14.25007152557373
    10. '        
' → logprob: -14.62507152557373

Token 1507: ' quantité' (ID: 89219)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007411278318613768
    2. 'amount' → logprob: -6.007411479949951
    3. 'quant' → logprob: -6.257411479949951
    4. 'print' → logprob: -7.007411479949951
    5. 'prix' → logprob: -7.382411479949951
    6. 'nombre' → logprob: -7.757411479949951
    7. '       ' → logprob: -8.757411003112793
    8. 'mont' → logprob: -9.257411003112793
    9. ' a' → logprob: -9.257411003112793
    10. 'quantity' → logprob: -9.382411003112793

Token 1508: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021719351410865784
    2. 'a' → logprob: -4.021719455718994
    3. '(a' → logprob: -6.146719455718994
    4. ' a' → logprob: -8.021718978881836
    5. '	' → logprob: -8.396718978881836
    6. 'result' → logprob: -9.146718978881836
    7. '        
' → logprob: -9.521718978881836
    8. '(' → logprob: -9.521718978881836
    9. ' (' → logprob: -9.521718978881836
    10. 'for' → logprob: -9.646718978881836

Token 1509: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004245435353368521
    2. 'print' → logprob: -5.504245281219482
    3. 'result' → logprob: -9.62924575805664
    4. ' print' → logprob: -10.25424575805664
    5. '   ' → logprob: -10.62924575805664
    6. ',' → logprob: -11.37924575805664
    7. '        
' → logprob: -11.62924575805664
    8. '<|end|>' → logprob: -12.12924575805664
    9. '```' → logprob: -12.25424575805664
    10. 'solution' → logprob: -13.00424575805664

Token 1510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.742448022123426e-05
    2. '   ' → logprob: -9.750067710876465
    3. 'print' → logprob: -12.875067710876465
    4. '```' → logprob: -13.000067710876465
    5. '        
' → logprob: -13.375067710876465
    6. '           ' → logprob: -14.000067710876465
    7. '
' → logprob: -14.750067710876465
    8. 'result' → logprob: -15.000067710876465
    9. '	' → logprob: -15.500067710876465
    10. '`' → logprob: -15.625067710876465

Token 1511: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10769650340080261
    2. 'result' → logprob: -2.357696533203125
    3. 'cost' → logprob: -5.607696533203125
    4. '       ' → logprob: -6.232696533203125
    5. ' print' → logprob: -6.482696533203125
    6. ' result' → logprob: -8.982696533203125
    7. 'res' → logprob: -9.232696533203125
    8. ' cost' → logprob: -10.857696533203125
    9. 'cout' → logprob: -11.232696533203125
    10. 'solution' → logprob: -11.232696533203125

Token 1512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759457349777222
    2. ' =' → logprob: -0.8259457349777222
    3. '   ' → logprob: -14.075945854187012
    4. '＝' → logprob: -14.200945854187012
    5. ' ' → logprob: -14.200945854187012
    6. '=int' → logprob: -14.450945854187012
    7. '_' → logprob: -14.575945854187012
    8. '_=' → logprob: -14.575945854187012
    9. ',' → logprob: -14.950945854187012
    10. ')' → logprob: -15.325945854187012

Token 1513: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -2.7610454708337784e-05
    2. ' solve' → logprob: -10.500027656555176
    3. 'print' → logprob: -18.25002670288086
    4. '   ' → logprob: -20.62502670288086
    5. 'resolve' → logprob: -21.62502670288086
    6. '.solve' → logprob: -21.87502670288086
    7. 'save' → logprob: -22.25002670288086
    8. '```' → logprob: -23.75002670288086
    9. '
' → logprob: -24.37502670288086
    10. 'sol' → logprob: -24.50002670288086

Token 1514: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -16.5
    3. '_FOR' → logprob: -18.375
    4. 'For' → logprob: -19.5
    5. '_' → logprob: -19.625
    6. '```' → logprob: -20.375
    7. '\' → logprob: -20.75
    8. ' _' → logprob: -21.0
    9. '_For' → logprob: -21.25
    10. '
' → logprob: -21.875

Token 1515: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.2014521211385727
    2. 'amount' → logprob: -1.7014521360397339
    3. 'a' → logprob: -10.951452255249023
    4. 'for' → logprob: -12.201452255249023
    5. '_for' → logprob: -12.326452255249023
    6. '```' → logprob: -12.326452255249023
    7. ' amount' → logprob: -13.201452255249023
    8. 's' → logprob: -14.076452255249023
    9. 'am' → logprob: -14.201452255249023
    10. 'Amount' → logprob: -14.326452255249023

Token 1516: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9027791495318525e-05
    2. 'a' → logprob: -11.000019073486328
    3. '(answer' → logprob: -13.125019073486328
    4. 'answer' → logprob: -16.125019073486328
    5. '(' → logprob: -16.625019073486328
    6. '(ans' → logprob: -18.250019073486328
    7. '```' → logprob: -18.375019073486328
    8. '(
' → logprob: -18.375019073486328
    9. '(amount' → logprob: -18.750019073486328
    10. ' (' → logprob: -18.875019073486328

Token 1517: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5304930210113525
    2. '       ' → logprob: -1.0304930210113525
    3. ')' → logprob: -2.9054930210113525
    4. ')
' → logprob: -9.030492782592773
    5. '()
' → logprob: -12.655492782592773
    6. '   ' → logprob: -12.780492782592773
    7. '()' → logprob: -13.780492782592773
    8. ')`
' → logprob: -13.905492782592773
    9. '```' → logprob: -14.030492782592773
    10. '())
' → logprob: -14.405492782592773

Token 1518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016301940195262432
    2. 'print' → logprob: -6.5016303062438965
    3. '   ' → logprob: -9.001629829406738
    4. '```' → logprob: -12.376629829406738
    5. ' print' → logprob: -15.001629829406738
    6. '        
' → logprob: -16.251630783081055
    7. '	' → logprob: -16.876630783081055
    8. '	print' → logprob: -17.126630783081055
    9. '           ' → logprob: -18.001630783081055
    10. '
' → logprob: -18.001630783081055

Token 1519: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.662937372922897e-05
    2. '       ' → logprob: -9.250096321105957
    3. ' print' → logprob: -15.000096321105957
    4. '```' → logprob: -16.250097274780273
    5. '   ' → logprob: -17.500097274780273
    6. '
' → logprob: -17.875097274780273
    7. '	print' → logprob: -19.625097274780273
    8. '``' → logprob: -21.000097274780273
    9. '        
' → logprob: -22.125097274780273
    10. 'printf' → logprob: -22.125097274780273

Token 1520: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0031781906727701426
    2. 'answer' → logprob: -5.753178119659424
    3. '(f' → logprob: -14.753178596496582
    4. '(ans' → logprob: -16.753177642822266
    5. '(' → logprob: -17.878177642822266
    6. ' answer' → logprob: -18.003177642822266
    7. '	answer' → logprob: -18.128177642822266
    8. '{' → logprob: -18.878177642822266
    9. 'f' → logprob: -19.878177642822266
    10. '(int' → logprob: -20.628177642822266

Token 1521: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. '())' → logprob: -12.000009536743164
    3. '()' → logprob: -13.500009536743164
    4. ' )' → logprob: -13.750009536743164
    5. ')
' → logprob: -14.375009536743164
    6. '))' → logprob: -16.375009536743164
    7. '')' → logprob: -16.500009536743164
    8. '   ' → logprob: -17.000009536743164
    9. '")' → logprob: -17.875009536743164
    10. ')`' → logprob: -18.000009536743164

Token 1522: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.9795445849886164e-05
    2. 'main' → logprob: -9.875060081481934
    3. '#' → logprob: -12.375060081481934
    4. ' if' → logprob: -12.625060081481934
    5. '```' → logprob: -14.250060081481934
    6. '<|end|>' → logprob: -16.500059127807617
    7. '#if' → logprob: -18.000059127807617
    8. 'If' → logprob: -18.500059127807617
    9. '
' → logprob: -18.500059127807617
    10. '	if' → logprob: -19.375059127807617

Token 1523: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07889694720506668
    2. ' __' → logprob: -2.578896999359131
    3. 'name' → logprob: -12.078896522521973
    4. '___' → logprob: -14.578896522521973
    5. '_name' → logprob: -14.828896522521973
    6. 'Name' → logprob: -15.453896522521973
    7. ' ' → logprob: -15.953896522521973
    8. '____' → logprob: -16.70389747619629
    9. 'True' → logprob: -16.82889747619629
    10. '_' → logprob: -17.07889747619629

Token 1524: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16370250284671783
    2. '==' → logprob: -2.2887024879455566
    3. ' ==' → logprob: -3.0387024879455566
    4. '=="' → logprob: -7.038702487945557
    5. '=='' → logprob: -7.788702487945557
    6. '```' → logprob: -8.788702964782715
    7. 'name' → logprob: -9.288702964782715
    8. ' __' → logprob: -9.413702964782715
    9. '__":
' → logprob: -11.163702964782715
    10. '==
' → logprob: -11.413702964782715

Token 1525: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005132370279170573
    2. '==' → logprob: -7.750513076782227
    3. '=="' → logprob: -9.875513076782227
    4. ' ==' → logprob: -10.750513076782227
    5. '=='' → logprob: -12.250513076782227
    6. '__.__' → logprob: -12.625513076782227
    7. '```' → logprob: -15.125513076782227
    8. '__('' → logprob: -15.250513076782227
    9. '_' → logprob: -15.500513076782227
    10. '___' → logprob: -15.875513076782227

Token 1526: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05275065451860428
    2. '__' → logprob: -3.927750587463379
    3. ' ==' → logprob: -3.927750587463379
    4. '=="' → logprob: -4.552750587463379
    5. '=='' → logprob: -6.552750587463379
    6. '==
' → logprob: -10.927750587463379
    7. '===' → logprob: -11.677750587463379
    8. '=' → logprob: -11.802750587463379
    9. '```' → logprob: -13.177750587463379
    10. '"' → logprob: -13.427750587463379

Token 1527: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03804745525121689
    2. ''' → logprob: -3.2880475521087646
    3. '__' → logprob: -12.163047790527344
    4. ' "__' → logprob: -14.288047790527344
    5. ' '__' → logprob: -18.038047790527344
    6. '"name' → logprob: -19.163047790527344
    7. 'main' → logprob: -19.538047790527344
    8. '"user' → logprob: -20.038047790527344
    9. ''"' → logprob: -20.163047790527344
    10. '   ' → logprob: -20.288047790527344

Token 1528: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0012334455968812108
    2. '__' → logprob: -6.7512335777282715
    3. '"' → logprob: -9.876233100891113
    4. ''' → logprob: -11.376233100891113
    5. 'name' → logprob: -14.751233100891113
    6. ' main' → logprob: -18.00123405456543
    7. '_main' → logprob: -18.50123405456543
    8. 'built' → logprob: -18.75123405456543
    9. ' "__' → logprob: -19.62623405456543
    10. 'builtin' → logprob: -19.62623405456543

Token 1529: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07166331261396408
    2. '__' → logprob: -2.6966633796691895
    3. '__':
' → logprob: -6.4466633796691895
    4. '__["' → logprob: -9.571662902832031
    5. '==' → logprob: -11.071662902832031
    6. '__
' → logprob: -11.696662902832031
    7. '__.__' → logprob: -11.821662902832031
    8. '__
' → logprob: -12.321662902832031
    9. '__:' → logprob: -12.446662902832031
    10. '__);
' → logprob: -12.446662902832031

Token 1530: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.45848218582978e-06
    2. ' main' → logprob: -13.37500286102295
    3. '	main' → logprob: -14.62500286102295
    4. '   ' → logprob: -15.50000286102295
    5. '_main' → logprob: -16.000001907348633
    6. '__' → logprob: -16.125001907348633
    7. '(main' → logprob: -19.625001907348633
    8. '.main' → logprob: -19.750001907348633
    9. '```' → logprob: -21.375001907348633
    10. 'Main' → logprob: -21.375001907348633

Token 1531: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '   ' → logprob: -18.75
    4. '	main' → logprob: -18.75
    5. '.main' → logprob: -25.875
    6. 'import' → logprob: -26.375
    7. '_main' → logprob: -26.375
    8. '(main' → logprob: -26.875
    9. '  ' → logprob: -27.25
    10. ' ' → logprob: -27.25

Token 1532: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1530
Tokens correctement prédits (1ère position, stricte): 489
Tokens correctement prédits (1ère position, avec adaptation): 539
Tokens correctement prédits (top 10): 1118
Précision stricte (1ère position): 31.96%
Précision adaptée (1ère position): 35.23%
Précision (top 10): 73.07%
================================================================================
