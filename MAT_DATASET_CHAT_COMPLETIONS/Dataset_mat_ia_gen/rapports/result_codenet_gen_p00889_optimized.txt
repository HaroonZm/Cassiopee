================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

def generate_sequence(N, S, W):
    a = [0]*N
    g = S
    for i in range(N):
        a[i] = (g // 7) % 10
        if g % 2 == 0:
            g = g // 2
        else:
            g = (g // 2) ^ W
    return a

def modexp(base, exp, mod):
    result = 1
    cur = base % mod
    while exp > 0:
        if exp & 1:
            result = (result * cur) % mod
        cur = (cur * cur) % mod
        exp >>= 1
    return result

while True:
    N,S,W,Q = map(int, input().split())
    if N==0 and S==0 and W==0 and Q==0:
        break
    a = generate_sequence(N,S,W)

    # On cherche à compter les sous-séquences valides dont la valeur est divisible par Q.
    # On considère les seuls i avec a[i]!=0 (pas de zéro initial).
    # On étudie le nombre de subarrays (i,j) tels que concat(a[i..j]) % Q == 0

    # Soit prefix_mod[k] = valeur a[0..k-1] mod Q
    prefix_mod = [0]*(N+1)
    for i in range(N):
        prefix_mod[i+1] = (prefix_mod[i]*10 + a[i]) % Q

    # On va utiliser un comptage par hashing des prefix_mod pour substring divisibles
    # Mais il faut prendre en compte les débuts valides (a[i] != 0)
    # Pour cela, on explore les indices j et utilise un dict qui stocke les prefix_mod aux indices où a[i]!=0
    # En fait, on traite les substrings qui commencent en i avec a[i]!=0
    # Les formule: substring a[i..j] mod Q = (prefix_mod[j+1]- prefix_mod[i]*pow(10,j-i+1)) mod Q = 0
    # donc prefix_mod[j+1] == prefix_mod[i]*10^{j-i+1} mod Q
    # On va inverser la relation pour compter efficacement avec préfixes et puissances.

    # Calcul des puissances de 10 modulo Q
    pow10 = [1]*(N+1)
    for i in range(1,N+1):
        pow10[i] = (pow10[i-1]*10) % Q

    # Approche: Pour chaque j, on va chercher i tel que a[i] != 0 et prefix_mod[j+1] == prefix_mod[i]*pow10[j-i+1]
    # On peut réarranger: prefix_mod[j+1] * pow10^{-(j-i+1)} == prefix_mod[i]
    # Le calcul de puissance inverse modulo Q est possible car Q premier

    # Pré-calcul de l'inverse de 10 modulo Q
    inv10 = pow(10, Q-2, Q)

    # On parcourt j de 0 à N-1, et on calcule key = prefix_mod[j+1]*inv10^{j+1} mod Q
    # On enregistre pour les indices i avec a[i]!=0, la valeur prefix_mod[i]*inv10^{i} dans un dict freq
    # Pour chaque j, on récupère freq[key] pour compter les sous-séquences terminant à j

    freq = dict()
    answer = 0
    for i in range(N+1):
        if i > 0 and a[i-1] == 0:
            # On ne stocke pas les positions i où a[i]!=0 car ici on indexe prefix_mod[i], avec i=indice fin de prefix
            # i correspond à la position après a[i-1]
            pass
        else:
            key = (prefix_mod[i] * pow(inv10, i, Q)) % Q
            freq[key] = freq.get(key,0) + 1

    # Maintenant on va parcourir j de 0 à N-1 et compter les sous séquences finissant en j
    # Pour cela, on utilise freq aux indices précédents : freq_stocke prefix_mod[i]*inv10^i avec a[i]!=0
    # Cette méthode nécessite une 2e boucle avec actualisation progressive
    freq.clear()
    answer = 0
    # On incrémente le compteur freq à chaque i où a[i]!=0 (i dans 0..N)
    # On parcourt j dans 0..N-1
    # Avant de traiter j, on ajoute prefix_mod[j]*inv10^j si a[j]!=0
    # Ensuite on calcule key = prefix_mod[j+1]*inv10^{j+1} et ajoute freq[key] au compteur
    for i in range(N+1):
        if i > 0 and a[i-1] == 0:
            key = (prefix_mod[i]*pow(inv10,i,Q))%Q
            answer += freq.get(key,0)
        else:
            key = (prefix_mod[i]*pow(inv10,i,Q))%Q
            freq[key] = freq.get(key,0)+1
            if i < N:
                key_next = (prefix_mod[i+1]*pow(inv10,i+1,Q))%Q
                answer += freq.get(key_next,0)
    print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000634639582131058
    2. '.' → logprob: -8.12563419342041
    3. '(
' → logprob: -8.87563419342041
    4. '()' → logprob: -9.62563419342041
    5. ')' → logprob: -10.37563419342041
    6. ' (' → logprob: -10.50063419342041
    7. '('' → logprob: -11.25063419342041
    8. ''' → logprob: -11.25063419342041
    9. '(

' → logprob: -11.50063419342041
    10. '```' → logprob: -12.00063419342041

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12724284827709198
    2. 'sys' → logprob: -2.1272428035736084
    3. ' input' → logprob: -8.752243041992188
    4. 'input' → logprob: -8.877243041992188
    5. '	sys' → logprob: -11.877243041992188
    6. '=sys' → logprob: -12.127243041992188
    7. '(sys' → logprob: -12.877243041992188
    8. ' ' → logprob: -13.502243041992188
    9. ' system' → logprob: -15.002243041992188
    10. '_sys' → logprob: -15.627243041992188

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013715129171032459
    2. '[' → logprob: -10.000137329101562
    3. '.readline' → logprob: -10.750137329101562
    4. ' .' → logprob: -10.875137329101562
    5. '.
' → logprob: -11.750137329101562
    6. '.import' → logprob: -12.625137329101562
    7. '.[' → logprob: -12.750137329101562
    8. '.`' → logprob: -12.750137329101562
    9. '.stdin' → logprob: -12.875137329101562
    10. '.)' → logprob: -13.000137329101562

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.23680619895458221
    2. '.' → logprob: -1.6118061542510986
    3. '.read' → logprob: -4.486806392669678
    4. '.readlines' → logprob: -10.36180591583252
    5. '.Read' → logprob: -11.48680591583252
    6. '```' → logprob: -11.98680591583252
    7. '.buffer' → logprob: -12.11180591583252
    8. ' .' → logprob: -12.98680591583252
    9. '.write' → logprob: -13.23680591583252
    10. '.`' → logprob: -13.73680591583252

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0590490847826004
    2. '(' → logprob: -3.059049129486084
    3. '()
' → logprob: -5.184049129486084
    4. '(
' → logprob: -5.684049129486084
    5. '()

' → logprob: -8.059048652648926
    6. '()\' → logprob: -8.309048652648926
    7. '
' → logprob: -8.434048652648926
    8. '().' → logprob: -8.809048652648926
    9. '\n' → logprob: -9.059048652648926
    10. '(

' → logprob: -9.309048652648926

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22641481459140778
    2. '(' → logprob: -1.6014147996902466
    3. '().' → logprob: -7.476414680480957
    4. '()
' → logprob: -8.851414680480957
    5. '(
' → logprob: -9.601414680480957
    6. ')' → logprob: -10.351414680480957
    7. '()

' → logprob: -10.476414680480957
    8. '#' → logprob: -10.601414680480957
    9. 'def' → logprob: -10.601414680480957
    10. 'a' → logprob: -10.976414680480957

Token 10: ' generate' (ID: 10419)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0023950329050421715
    2. ' space' → logprob: -7.377395153045654
    3. ' process' → logprob: -7.752395153045654
    4. '_' → logprob: -8.502394676208496
    5. ' add' → logprob: -8.752394676208496
    6. ' calculate' → logprob: -8.752394676208496
    7. ' ' → logprob: -9.127394676208496
    8. ' read' → logprob: -9.127394676208496
    9. ' my' → logprob: -9.377394676208496
    10. ' main' → logprob: -9.502394676208496

Token 11: '_sequence' (ID: 55606)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05752843990921974
    2. '(' → logprob: -3.432528495788574
    3. '_token' → logprob: -5.682528495788574
    4. '_text' → logprob: -6.057528495788574
    5. '_tokens' → logprob: -6.182528495788574
    6. '(_' → logprob: -6.682528495788574
    7. '_code' → logprob: -6.932528495788574
    8. '_random' → logprob: -7.057528495788574
    9. '_numbers' → logprob: -7.182528495788574
    10. '_array' → logprob: -7.307528495788574

Token 12: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018149138486478478
    2. '_' → logprob: -9.125181198120117
    3. '("("' → logprob: -11.000181198120117
    4. '```' → logprob: -11.000181198120117
    5. '('' → logprob: -11.875181198120117
    6. ' (' → logprob: -12.625181198120117
    7. '(`' → logprob: -12.875181198120117
    8. '():' → logprob: -13.000181198120117
    9. '(
' → logprob: -13.125181198120117
    10. '(**' → logprob: -13.125181198120117

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013203764334321022
    2. ')' → logprob: -4.3882036209106445
    3. ',' → logprob: -7.3882036209106445
    4. ':' → logprob: -9.763203620910645
    5. '):
' → logprob: -11.888203620910645
    6. ' ):' → logprob: -12.013203620910645
    7. '),' → logprob: -14.388203620910645
    8. '*' → logprob: -14.388203620910645
    9. ')：' → logprob: -15.013203620910645
    10. '+' → logprob: -15.263203620910645

Token 14: ' S' (ID: 336)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.48203471302986145
    2. ' K' → logprob: -1.982034683227539
    3. 'M' → logprob: -2.857034683227539
    4. ' start' → logprob: -2.857034683227539
    5. ' k' → logprob: -3.732034683227539
    6. 'start' → logprob: -3.982034683227539
    7. 'K' → logprob: -4.232034683227539
    8. 'k' → logprob: -4.607034683227539
    9. ' A' → logprob: -4.732034683227539
    10. ' a' → logprob: -4.857034683227539

Token 15: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007071728352457285
    2. ',' → logprob: -5.007071495056152
    3. ')' → logprob: -8.507071495056152
    4. '):
' → logprob: -10.007071495056152
    5. ' ):' → logprob: -10.132071495056152
    6. ':' → logprob: -10.507071495056152
    7. '[' → logprob: -11.632071495056152
    8. '):
' → logprob: -12.007071495056152
    9. '=' → logprob: -12.757071495056152
    10. '**' → logprob: -13.007071495056152

Token 16: ' W' (ID: 486)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.2882260084152222
    2. ' K' → logprob: -1.5382260084152222
    3. 'M' → logprob: -2.5382261276245117
    4. 'K' → logprob: -2.5382261276245117
    5. ' D' → logprob: -3.1632261276245117
    6. ' X' → logprob: -3.2882261276245117
    7. ' T' → logprob: -3.4132261276245117
    8. ' A' → logprob: -3.4132261276245117
    9. 'D' → logprob: -3.6632261276245117
    10. 'X' → logprob: -3.9132261276245117

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02543369121849537
    2. ',' → logprob: -3.7754337787628174
    3. ')' → logprob: -7.275433540344238
    4. ' ):' → logprob: -7.775433540344238
    5. '[' → logprob: -8.275433540344238
    6. '):
' → logprob: -8.525433540344238
    7. 's' → logprob: -9.025433540344238
    8. '_list' → logprob: -9.275433540344238
    9. '_' → logprob: -9.900433540344238
    10. ':' → logprob: -10.025433540344238

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5942823886871338
    2. '   ' → logprob: -0.8442823886871338
    3. ':
' → logprob: -5.219282150268555
    4. ' ' → logprob: -6.094282150268555
    5. '```' → logprob: -6.469282150268555
    6. '\' → logprob: -6.594282150268555
    7. '(' → logprob: -6.594282150268555
    8. '    
' → logprob: -6.719282150268555
    9. '):' → logprob: -6.969282150268555
    10. '    ' → logprob: -7.094282150268555

Token 19: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5444772839546204
    2. 'result' → logprob: -2.5444772243499756
    3. '\n' → logprob: -3.1694772243499756
    4. '    ' → logprob: -3.1694772243499756
    5. ' result' → logprob: -3.5444772243499756
    6. 'for' → logprob: -3.5444772243499756
    7. ' for' → logprob: -3.5444772243499756
    8. '\' → logprob: -3.6694772243499756
    9. '    
' → logprob: -3.6694772243499756
    10. '```' → logprob: -3.9194772243499756

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2110423743724823
    2. 'r' → logprob: -3.0860424041748047
    3. '.append' → logprob: -3.3360424041748047
    4. '=' → logprob: -3.5860424041748047
    5. ',' → logprob: -4.336042404174805
    6. 'rray' → logprob: -4.586042404174805
    7. '[' → logprob: -4.586042404174805
    8. 'rr' → logprob: -4.836042404174805
    9. ' ' → logprob: -4.836042404174805
    10. 'pp' → logprob: -5.211042404174805

Token 21: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1417941451072693
    2. ' []' → logprob: -2.266794204711914
    3. '[' → logprob: -4.391794204711914
    4. '[]' → logprob: -4.391794204711914
    5. '[S' → logprob: -6.641794204711914
    6. ' S' → logprob: -6.891794204711914
    7. ' ' → logprob: -7.016794204711914
    8. 'S' → logprob: -9.016794204711914
    9. '[int' → logprob: -9.266794204711914
    10. '0' → logprob: -9.516794204711914

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05990958958864212
    2. 'S' → logprob: -3.0599095821380615
    3. 'int' → logprob: -5.059909820556641
    4. ']' → logprob: -5.809909820556641
    5. '1' → logprob: -8.18490982055664
    6. ' ' → logprob: -8.30990982055664
    7. ' S' → logprob: -8.30990982055664
    8. 'i' → logprob: -8.30990982055664
    9. 'None' → logprob: -8.43490982055664
    10. '*' → logprob: -8.68490982055664

Token 23: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005680261179804802
    2. ']*' → logprob: -5.255680084228516
    3. ']*(' → logprob: -8.505680084228516
    4. ',' → logprob: -8.505680084228516
    5. ' ]' → logprob: -10.755680084228516
    6. ' for' → logprob: -11.005680084228516
    7. 'for' → logprob: -13.255680084228516
    8. ']+' → logprob: -14.505680084228516
    9. ')' → logprob: -14.630680084228516
    10. '   ' → logprob: -15.130680084228516

Token 24: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03505796939134598
    2. '(N' → logprob: -3.41005802154541
    3. '(' → logprob: -6.78505802154541
    4. ' N' → logprob: -9.53505802154541
    5. ' (' → logprob: -10.53505802154541
    6. '10' → logprob: -10.66005802154541
    7. '100' → logprob: -10.91005802154541
    8. '3' → logprob: -11.28505802154541
    9. 'S' → logprob: -11.41005802154541
    10. '6' → logprob: -11.53505802154541

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6410627961158752
    2. '   ' → logprob: -1.7660627365112305
    3. ' for' → logprob: -1.8910627365112305
    4. 'for' → logprob: -2.5160627365112305
    5. '    
' → logprob: -3.3910627365112305
    6. ' 
' → logprob: -4.6410627365112305
    7. '	for' → logprob: -4.8910627365112305
    8. '\n' → logprob: -5.5160627365112305
    9. '   
' → logprob: -5.6410627365112305
    10. '  
' → logprob: -5.7660627365112305

Token 26: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1246416568756104
    2. '
' → logprob: -1.1246416568756104
    3. '   ' → logprob: -1.4996416568756104
    4. 'for' → logprob: -3.2496416568756104
    5. ' for' → logprob: -3.2496416568756104
    6. '    
' → logprob: -4.499641418457031
    7. ' a' → logprob: -4.624641418457031
    8. ' 
' → logprob: -4.624641418457031
    9. ' ' → logprob: -5.249641418457031
    10. '	for' → logprob: -6.249641418457031

Token 27: ' g' (ID: 329)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9536224603652954
    2. ' for' → logprob: -0.9536224603652954
    3. ' a' → logprob: -2.203622341156006
    4. 'for' → logprob: -2.453622341156006
    5. '   ' → logprob: -3.578622341156006
    6. ' 
' → logprob: -6.953622341156006
    7. ' ' → logprob: -7.203622341156006
    8. '
' → logprob: -7.328622341156006
    9. ' if' → logprob: -7.703622341156006
    10. '	for' → logprob: -7.828622341156006

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8773990273475647
    2. 'a' → logprob: -0.8773990273475647
    3. 'enerate' → logprob: -2.37739896774292
    4. '[' → logprob: -3.87739896774292
    5. ' =' → logprob: -4.00239896774292
    6. 'enerated' → logprob: -4.62739896774292
    7. 'g' → logprob: -5.00239896774292
    8. 'e' → logprob: -5.25239896774292
    9. '=a' → logprob: -5.50239896774292
    10. 'enerator' → logprob: -5.87739896774292

Token 29: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2234481573104858
    2. 'S' → logprob: -1.7234481573104858
    3. ' S' → logprob: -1.7234481573104858
    4. '0' → logprob: -1.9734481573104858
    5. ' [' → logprob: -2.4734482765197754
    6. '[' → logprob: -3.3484482765197754
    7. '1' → logprob: -3.5984482765197754
    8. 'a' → logprob: -3.8484482765197754
    9. '[S' → logprob: -4.348448276519775
    10. '[a' → logprob: -5.098448276519775

Token 30: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5456047654151917
    2. '%' → logprob: -1.1706047058105469
    3. '[' → logprob: -2.920604705810547
    4. ' ' → logprob: -3.670604705810547
    5. '+' → logprob: -4.170604705810547
    6. ')' → logprob: -5.795604705810547
    7. ' +' → logprob: -6.545604705810547
    8. '0' → logprob: -6.670604705810547
    9. '<|end|>' → logprob: -6.670604705810547
    10. ',' → logprob: -6.795604705810547

Token 31: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5106971263885498
    2. 'for' → logprob: -1.6356971263885498
    3. '[' → logprob: -1.8856971263885498
    4. '+' → logprob: -2.51069712638855
    5. ' ' → logprob: -2.63569712638855
    6. '   ' → logprob: -2.76069712638855
    7. '
' → logprob: -3.63569712638855
    8. '%' → logprob: -3.76069712638855
    9. '.' → logprob: -4.010697364807129
    10. ')' → logprob: -4.135697364807129

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.115354061126709
    2. ' for' → logprob: -1.240354061126709
    3. '   ' → logprob: -1.615354061126709
    4. '
' → logprob: -2.740354061126709
    5. '+' → logprob: -3.740354061126709
    6. '\n' → logprob: -4.115354061126709
    7. ' ' → logprob: -4.365354061126709
    8. '	for' → logprob: -4.865354061126709
    9. '=' → logprob: -4.990354061126709
    10. '    
' → logprob: -5.115354061126709

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030862955376505852
    2. ' ' → logprob: -3.655863046646118
    3. ' _' → logprob: -5.780862808227539
    4. 'i' → logprob: -7.155862808227539
    5. '_' → logprob: -7.405862808227539
    6. ' I' → logprob: -10.655862808227539
    7. '  ' → logprob: -11.280862808227539
    8. '	i' → logprob: -11.905862808227539
    9. ' range' → logprob: -12.155862808227539
    10. 'range' → logprob: -12.155862808227539

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008829060941934586
    2. 'in' → logprob: -4.758829116821289
    3. ' ' → logprob: -8.758829116821289
    4. '+' → logprob: -10.633829116821289
    5. '	in' → logprob: -11.008829116821289
    6. '  ' → logprob: -12.258829116821289
    7. ',' → logprob: -12.758829116821289
    8. ' i' → logprob: -13.383829116821289
    9. '<|end|>' → logprob: -14.008829116821289
    10. ' ,' → logprob: -14.446329116821289

Token 35: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04301505908370018
    2. 'range' → logprob: -3.1680150032043457
    3. ' ' → logprob: -11.543015480041504
    4. '	range' → logprob: -12.668015480041504
    5. ' xrange' → logprob: -14.168015480041504
    6. '   ' → logprob: -14.418015480041504
    7. '  ' → logprob: -14.793015480041504
    8. '(range' → logprob: -14.793015480041504
    9. ' ran' → logprob: -15.918015480041504
    10. '```' → logprob: -15.918015480041504

Token 36: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10070057213306427
    2. '(N' → logprob: -2.350700616836548
    3. ' (' → logprob: -8.100700378417969
    4. '(i' → logprob: -8.850700378417969
    5. '(n' → logprob: -10.725700378417969
    6. '(len' → logprob: -11.600700378417969
    7. ' ' → logprob: -11.725700378417969
    8. '(
' → logprob: -12.475700378417969
    9. '(I' → logprob: -13.350700378417969
    10. '(int' → logprob: -14.475700378417969

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005402852548286319
    2. '):
' → logprob: -8.500540733337402
    3. ' ):' → logprob: -8.625540733337402
    4. '-' → logprob: -9.250540733337402
    5. ')' → logprob: -10.125540733337402
    6. ':' → logprob: -11.500540733337402
    7. '+' → logprob: -12.375540733337402
    8. ' ' → logprob: -13.125540733337402
    9. ' -' → logprob: -13.500540733337402
    10. '   ' → logprob: -13.750540733337402

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2060975581407547
    2. '   ' → logprob: -1.8310976028442383
    3. ':' → logprob: -4.206097602844238
    4. 'a' → logprob: -5.831097602844238
    5. '    ' → logprob: -6.581097602844238
    6. ' ' → logprob: -6.956097602844238
    7. ',' → logprob: -7.081097602844238
    8. '    
' → logprob: -7.206097602844238
    9. '[' → logprob: -7.331097602844238
    10. '        
' → logprob: -7.956097602844238

Token 39: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.26172828674316406
    2. ' a' → logprob: -1.636728286743164
    3. ' ' → logprob: -4.136728286743164
    4. ' 
' → logprob: -5.511728286743164
    5. '   ' → logprob: -5.636728286743164
    6. '       ' → logprob: -6.011728286743164
    7. '    
' → logprob: -6.636728286743164
    8. '<|end|>' → logprob: -6.636728286743164
    9. ' if' → logprob: -6.886728286743164
    10. '    ' → logprob: -7.011728286743164

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.028027301654219627
    2. '[' → logprob: -3.653027296066284
    3. '[a' → logprob: -6.403027534484863
    4. '[g' → logprob: -10.903027534484863
    5. '[I' → logprob: -11.153027534484863
    6. '\[' → logprob: -11.653027534484863
    7. ' [' → logprob: -12.403027534484863
    8. '```' → logprob: -12.528027534484863
    9. '[e' → logprob: -12.903027534484863
    10. '[...]' → logprob: -12.903027534484863

Token 41: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48157796263694763
    2. ']' → logprob: -1.23157799243927
    3. ' =' → logprob: -3.1065778732299805
    4. '=' → logprob: -3.2315778732299805
    5. ' )' → logprob: -6.2315778732299805
    6. ' ' → logprob: -6.2315778732299805
    7. ' ]' → logprob: -6.8565778732299805
    8. ']=' → logprob: -7.6065778732299805
    9. ')=' → logprob: -7.9815778732299805
    10. ' =)' → logprob: -9.60657787322998

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11297127604484558
    2. '=' → logprob: -2.237971305847168
    3. ' +=' → logprob: -9.487971305847168
    4. ' ' → logprob: -10.112971305847168
    5. ',' → logprob: -11.862971305847168
    6. '+=' → logprob: -11.862971305847168
    7. '+' → logprob: -12.487971305847168
    8. ')' → logprob: -12.987971305847168
    9. ' *=' → logprob: -12.987971305847168
    10. ' ^=' → logprob: -12.987971305847168

Token 43: ' (' (ID: 350)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7644798159599304
    2. ' g' → logprob: -0.7644798159599304
    3. ' (' → logprob: -2.889479875564575
    4. ' W' → logprob: -5.389479637145996
    5. '(g' → logprob: -5.639479637145996
    6. '(' → logprob: -6.014479637145996
    7. 'W' → logprob: -6.639479637145996
    8. ' S' → logprob: -7.764479637145996
    9. ' ' → logprob: -7.889479637145996
    10. 'S' → logprob: -8.514479637145996

Token 44: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04807714372873306
    2. ' g' → logprob: -4.17307710647583
    3. ' (' → logprob: -4.42307710647583
    4. '(g' → logprob: -4.54807710647583
    5. 'W' → logprob: -5.17307710647583
    6. 'S' → logprob: -6.79807710647583
    7. ' W' → logprob: -7.54807710647583
    8. '(' → logprob: -8.048077583312988
    9. '(W' → logprob: -8.298077583312988
    10. 'a' → logprob: -8.673077583312988

Token 45: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3491257429122925
    2. ' %' → logprob: -1.7241257429122925
    3. '%' → logprob: -2.974125862121582
    4. '*' → logprob: -3.224125862121582
    5. ' &' → logprob: -3.974125862121582
    6. ' >>' → logprob: -5.599125862121582
    7. ' +' → logprob: -7.099125862121582
    8. '>>' → logprob: -7.474125862121582
    9. ' ' → logprob: -7.724125862121582
    10. '+' → logprob: -8.224125862121582

Token 46: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.054874833673238754
    2. '2' → logprob: -3.679874897003174
    3. ' ' → logprob: -4.804874897003174
    4. '100' → logprob: -5.554874897003174
    5. '10' → logprob: -5.554874897003174
    6. 'W' → logprob: -5.804874897003174
    7. '127' → logprob: -6.054874897003174
    8. '3' → logprob: -6.179874897003174
    9. '5' → logprob: -6.304874897003174
    10. '4' → logprob: -7.304874897003174

Token 47: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.019973091781139374
    2. '2' → logprob: -4.769973278045654
    3. '100' → logprob: -5.019973278045654
    4. '10' → logprob: -6.769973278045654
    5. '3' → logprob: -7.394973278045654
    6. '127' → logprob: -7.394973278045654
    7. '5' → logprob: -7.894973278045654
    8. '4' → logprob: -8.144972801208496
    9. 'W' → logprob: -8.269972801208496
    10. '64' → logprob: -8.644972801208496

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09630722552537918
    2. ' +' → logprob: -3.7213072776794434
    3. '+' → logprob: -3.9713072776794434
    4. ' )' → logprob: -4.346307277679443
    5. '%' → logprob: -4.471307277679443
    6. ' %' → logprob: -4.846307277679443
    7. ' ' → logprob: -5.471307277679443
    8. '**' → logprob: -5.721307277679443
    9. '*' → logprob: -5.971307277679443
    10. ')%' → logprob: -6.346307277679443

Token 49: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2395361214876175
    2. '%' → logprob: -1.614536166191101
    3. ' ' → logprob: -4.364536285400391
    4. ' +' → logprob: -7.114536285400391
    5. '+' → logprob: -8.73953628540039
    6. '
' → logprob: -9.73953628540039
    7. ' %
' → logprob: -9.73953628540039
    8. '7' → logprob: -10.23953628540039
    9. '**' → logprob: -10.86453628540039
    10. ' ' → logprob: -11.11453628540039

Token 50: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4396647810935974
    2. '100' → logprob: -1.3146648406982422
    3. '5' → logprob: -3.689664840698242
    4. '3' → logprob: -3.939664840698242
    5. '6' → logprob: -5.314664840698242
    6. ' ' → logprob: -5.314664840698242
    7. '9' → logprob: -5.564664840698242
    8. '4' → logprob: -5.564664840698242
    9. '2' → logprob: -5.564664840698242
    10. '655' → logprob: -5.564664840698242

Token 51: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47534090280532837
    2. '100' → logprob: -1.3503408432006836
    3. '5' → logprob: -2.8503408432006836
    4. '3' → logprob: -3.4753408432006836
    5. '2' → logprob: -4.975340843200684
    6. '64' → logprob: -5.975340843200684
    7. '4' → logprob: -5.975340843200684
    8. '655' → logprob: -6.100340843200684
    9. '9' → logprob: -6.225340843200684
    10. '6' → logprob: -6.225340843200684

Token 52: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8190901875495911
    2. '
' → logprob: -2.1940901279449463
    3. 'g' → logprob: -2.4440901279449463
    4. ' 
' → logprob: -2.5690901279449463
    5. '   ' → logprob: -2.8190901279449463
    6. ' ' → logprob: -3.1940901279449463
    7. '       ' → logprob: -3.3190901279449463
    8. '\' → logprob: -4.069090366363525
    9. '\t' → logprob: -4.069090366363525
    10. '  
' → logprob: -4.569090366363525

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4798706769943237
    2. '       ' → logprob: -1.4798706769943237
    3. '\n' → logprob: -1.4798706769943237
    4. 'g' → logprob: -2.3548707962036133
    5. ' ' → logprob: -3.1048707962036133
    6. ' 
' → logprob: -3.6048707962036133
    7. '
' → logprob: -3.6048707962036133
    8. '\' → logprob: -3.7298707962036133
    9. '    
' → logprob: -4.229870796203613
    10. ' \' → logprob: -4.479870796203613

Token 54: ' if' (ID: 538)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1345130205154419
    2. ' g' → logprob: -2.1345129013061523
    3. '   ' → logprob: -5.759512901306152
    4. '	g' → logprob: -6.634512901306152
    5. ' 
' → logprob: -7.009512901306152
    6. '\n' → logprob: -7.634512901306152
    7. '
' → logprob: -7.759512901306152
    8. ' \' → logprob: -8.009512901306152
    9. ' ' → logprob: -8.384512901306152
    10. '\t' → logprob: -8.884512901306152

Token 55: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.1095099151134491
    2. 'g' → logprob: -2.6095099449157715
    3. ' i' → logprob: -4.2345099449157715
    4. ' (' → logprob: -4.8595099449157715
    5. ' ' → logprob: -5.3595099449157715
    6. 'i' → logprob: -6.6095099449157715
    7. '  ' → logprob: -7.6095099449157715
    8. '(g' → logprob: -8.109509468078613
    9. '(' → logprob: -8.359509468078613
    10. ' S' → logprob: -8.484509468078613

Token 56: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4020618796348572
    2. '%' → logprob: -1.277061939239502
    3. ' ' → logprob: -3.652061939239502
    4. ' &' → logprob: -4.777061939239502
    5. ' ==' → logprob: -5.402061939239502
    6. ' <' → logprob: -5.652061939239502
    7. ' >=' → logprob: -5.777061939239502
    8. '==' → logprob: -6.027061939239502
    9. '>=' → logprob: -6.902061939239502
    10. '<' → logprob: -6.902061939239502

Token 57: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7775903344154358
    2. '7' → logprob: -1.902590274810791
    3. '10' → logprob: -2.152590274810791
    4. '3' → logprob: -2.527590274810791
    5. '11' → logprob: -3.152590274810791
    6. '5' → logprob: -3.152590274810791
    7. ' ' → logprob: -3.402590274810791
    8. '4' → logprob: -3.777590274810791
    9. '6' → logprob: -4.027590274810791
    10. '8' → logprob: -4.027590274810791

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5411134362220764
    2. '7' → logprob: -1.5411133766174316
    3. '11' → logprob: -3.1661133766174316
    4. '5' → logprob: -3.2911133766174316
    5. '10' → logprob: -3.2911133766174316
    6. '3' → logprob: -3.4161133766174316
    7. '14' → logprob: -4.166113376617432
    8. '21' → logprob: -4.916113376617432
    9. '6' → logprob: -5.166113376617432
    10. '4' → logprob: -5.291113376617432

Token 59: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16220855712890625
    2. '==' → logprob: -1.9122085571289062
    3. ':' → logprob: -6.787208557128906
    4. ' ' → logprob: -7.912208557128906
    5. ' :' → logprob: -8.662208557128906
    6. '=' → logprob: -9.162208557128906
    7. '0' → logprob: -9.162208557128906
    8. ' !=' → logprob: -10.162208557128906
    9. ' =' → logprob: -10.537208557128906
    10. ' else' → logprob: -11.662208557128906

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0437551848590374
    2. ' ' → logprob: -3.293755292892456
    3. '1' → logprob: -5.168755054473877
    4. '=' → logprob: -12.606255531311035
    5. '۰' → logprob: -14.981255531311035
    6. 's' → logprob: -15.856255531311035
    7. '

' → logprob: -16.04375457763672
    8. ' =' → logprob: -16.16875457763672
    9. '```' → logprob: -16.23125457763672
    10. ' ' → logprob: -16.60625457763672

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006547682452946901
    2. '1' → logprob: -5.381547451019287
    3. ' ' → logprob: -6.256547451019287
    4. '۰' → logprob: -13.944047927856445
    5. '=' → logprob: -14.131547927856445
    6. 'S' → logprob: -14.756547927856445
    7. 'g' → logprob: -15.006547927856445
    8. 's' → logprob: -15.069047927856445
    9. '```' → logprob: -15.131547927856445
    10. '  ' → logprob: -15.444047927856445

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007822506129741669
    2. ':
' → logprob: -4.882822513580322
    3. ' :' → logprob: -8.757822036743164
    4. ' and' → logprob: -11.382822036743164
    5. '       ' → logprob: -11.382822036743164
    6. '):' → logprob: -12.257822036743164
    7. ':
' → logprob: -12.382822036743164
    8. ' :
' → logprob: -12.382822036743164
    9. ',' → logprob: -12.507822036743164
    10. '):
' → logprob: -12.757822036743164

Token 63: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2554086744785309
    2. ' g' → logprob: -2.005408763885498
    3. '           ' → logprob: -2.630408763885498
    4. 'g' → logprob: -4.255408763885498
    5. '               ' → logprob: -6.505408763885498
    6. '   ' → logprob: -7.005408763885498
    7. ' ' → logprob: -8.38040828704834
    8. '        ' → logprob: -8.38040828704834
    9. '      ' → logprob: -9.00540828704834
    10. '7' → logprob: -9.06790828704834

Token 64: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.16134846210479736
    2. ' g' → logprob: -1.9113484621047974
    3. '               ' → logprob: -7.036348342895508
    4. '           ' → logprob: -9.161348342895508
    5. ' ' → logprob: -10.786348342895508
    6. '7' → logprob: -10.786348342895508
    7. 'S' → logprob: -11.661348342895508
    8. 'W' → logprob: -11.786348342895508
    9. '	g' → logprob: -11.786348342895508
    10. 'a' → logprob: -12.036348342895508

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6377094388008118
    2. '=' → logprob: -0.8877094388008118
    3. '//=' → logprob: -3.262709379196167
    4. '*=' → logprob: -4.637709617614746
    5. ' *=' → logprob: -5.137709617614746
    6. ' //' → logprob: -6.262709617614746
    7. '+=' → logprob: -6.387709617614746
    8. ' ' → logprob: -6.887709617614746
    9. ' +=' → logprob: -7.512709617614746
    10. ' <<=' → logprob: -8.262709617614746

Token 66: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6993400454521179
    2. '(g' → logprob: -1.0743401050567627
    3. ' (' → logprob: -2.4493401050567627
    4. ' g' → logprob: -2.8243401050567627
    5. '(' → logprob: -5.199339866638184
    6. '(S' → logprob: -5.574339866638184
    7. '3' → logprob: -6.199339866638184
    8. ' ' → logprob: -6.574339866638184
    9. 'S' → logprob: -7.449339866638184
    10. '7' → logprob: -7.949339866638184

Token 67: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.301399827003479
    2. '//' → logprob: -2.0513997077941895
    3. ' *' → logprob: -2.3013997077941895
    4. '*' → logprob: -3.5513997077941895
    5. ' ' → logprob: -6.6763997077941895
    6. ' /' → logprob: -8.051400184631348
    7. '**' → logprob: -8.051400184631348
    8. ' +' → logprob: -8.676400184631348
    9. '+' → logprob: -8.926400184631348
    10. '>>' → logprob: -9.176400184631348

Token 68: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003430912329349667
    2. ' ' → logprob: -8.500343322753906
    3. '3' → logprob: -9.875343322753906
    4. '7' → logprob: -10.375343322753906
    5. '4' → logprob: -11.000343322753906
    6. '6' → logprob: -11.375343322753906
    7. '11' → logprob: -12.312843322753906
    8. '   ' → logprob: -12.562843322753906
    9. '```' → logprob: -13.187843322753906
    10. '5' → logprob: -13.312843322753906

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.045823566731997e-05
    2. '6' → logprob: -11.750020027160645
    3. ' ' → logprob: -12.500020027160645
    4. '4' → logprob: -13.000020027160645
    5. '3' → logprob: -13.375020027160645
    6. '   ' → logprob: -14.375020027160645
    7. '7' → logprob: -14.625020027160645
    8. '
' → logprob: -14.812520027160645
    9. '20' → logprob: -15.125020027160645
    10. '8' → logprob: -15.187520027160645

Token 70: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5889093279838562
    2. '       ' → logprob: -0.8389093279838562
    3. '+' → logprob: -5.338909149169922
    4. ' else' → logprob: -5.713909149169922
    5. '7' → logprob: -6.338909149169922
    6. ' +' → logprob: -6.963909149169922
    7. '   ' → logprob: -7.963909149169922
    8. 'elif' → logprob: -8.713909149169922
    9. '*' → logprob: -8.838909149169922
    10. '6' → logprob: -8.963909149169922

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017392845824360847
    2. 'else' → logprob: -4.267392635345459
    3. ' else' → logprob: -5.767392635345459
    4. '<|end|>' → logprob: -10.142393112182617
    5. '```' → logprob: -10.892393112182617
    6. 'elif' → logprob: -11.517393112182617
    7. '+' → logprob: -12.267393112182617
    8. '   ' → logprob: -12.767393112182617
    9. '<|end|>' → logprob: -13.017393112182617
    10. '	else' → logprob: -13.267393112182617

Token 72: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5127493143081665
    2. 'else' (adapté à ' else') → logprob: -1.3877493143081665
    3. ' else' → logprob: -1.8877493143081665
    4. '	else' → logprob: -10.512749671936035
    5. '   ' → logprob: -10.637749671936035
    6. 'elif' → logprob: -11.512749671936035
    7. '```' → logprob: -11.637749671936035
    8. '      ' → logprob: -12.012749671936035
    9. '    ' → logprob: -12.387749671936035
    10. ' ' → logprob: -12.887749671936035

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026349414139986038
    2. ':
' → logprob: -3.6513493061065674
    3. '           ' → logprob: -10.276349067687988
    4. ':

' → logprob: -12.401349067687988
    5. '       ' → logprob: -12.901349067687988
    6. ':
' → logprob: -13.151349067687988
    7. '          ' → logprob: -13.401349067687988
    8. '   ' → logprob: -14.026349067687988
    9. ' :' → logprob: -14.026349067687988
    10. '```' → logprob: -15.026349067687988

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06014386937022209
    2. 'g' → logprob: -2.9351439476013184
    3. ' g' → logprob: -6.060143947601318
    4. '3' → logprob: -6.810143947601318
    5. '7' → logprob: -7.060143947601318
    6. '               ' → logprob: -9.06014347076416
    7. '```' → logprob: -9.31014347076416
    8. '   ' → logprob: -9.43514347076416
    9. '       ' → logprob: -9.56014347076416
    10. '9' → logprob: -9.68514347076416

Token 75: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.02081548608839512
    2. ' g' → logprob: -4.020815372467041
    3. '3' → logprob: -6.145815372467041
    4. '7' → logprob: -8.0208158493042
    5. '           ' → logprob: -9.5208158493042
    6. ' ' → logprob: -10.5208158493042
    7. '               ' → logprob: -10.8958158493042
    8. '5' → logprob: -11.0208158493042
    9. '6' → logprob: -11.8958158493042
    10. '9' → logprob: -12.2708158493042

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788973867893219
    2. '=' → logprob: -2.578897476196289
    3. ' *=' → logprob: -12.703897476196289
    4. '*=' → logprob: -12.953897476196289
    5. ' ' → logprob: -14.203897476196289
    6. '*' → logprob: -14.328897476196289
    7. ' +=' → logprob: -15.328897476196289
    8. '+=' → logprob: -15.953897476196289
    9. '＝' → logprob: -16.57889747619629
    10. '1' → logprob: -16.70389747619629

Token 77: ' (' (ID: 350)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1999167650938034
    2. ' ' → logprob: -2.3249168395996094
    3. 'g' → logprob: -3.0749168395996094
    4. '(' → logprob: -3.8249168395996094
    5. ' (' → logprob: -4.574916839599609
    6. ' g' → logprob: -5.699916839599609
    7. '7' → logprob: -7.074916839599609
    8. '(g' → logprob: -7.699916839599609
    9. '5' → logprob: -9.07491683959961
    10. '1' → logprob: -9.32491683959961

Token 78: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.34447842836380005
    2. '3' → logprob: -1.3444783687591553
    3. '7' → logprob: -4.719478607177734
    4. '(' → logprob: -4.719478607177734
    5. '11' → logprob: -4.969478607177734
    6. '10' → logprob: -6.844478607177734
    7. '19' → logprob: -6.844478607177734
    8. '16' → logprob: -7.219478607177734
    9. '(g' → logprob: -7.344478607177734
    10. ' ' → logprob: -7.594478607177734

Token 79: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038151077926158905
    2. '*' → logprob: -3.2881510257720947
    3. ' ' → logprob: -9.913150787353516
    4. '+' → logprob: -10.788150787353516
    5. ' +' → logprob: -11.038150787353516
    6. '1' → logprob: -12.850650787353516
    7. '  ' → logprob: -13.163150787353516
    8. '```' → logprob: -13.288150787353516
    9. ' //' → logprob: -13.350650787353516
    10. ' -' → logprob: -13.538150787353516

Token 80: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11320262402296066
    2. ' ' → logprob: -2.2382025718688965
    3. '3' → logprob: -8.113203048706055
    4. '7' → logprob: -9.863203048706055
    5. '1' → logprob: -11.488203048706055
    6. '4' → logprob: -11.613203048706055
    7. '  ' → logprob: -13.300703048706055
    8. '5' → logprob: -13.363203048706055
    9. '6' → logprob: -14.300703048706055
    10. '   ' → logprob: -14.300703048706055

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018293926259502769
    2. ' ' → logprob: -6.376829624176025
    3. '3' → logprob: -9.251829147338867
    4. '7' → logprob: -11.626829147338867
    5. '4' → logprob: -11.876829147338867
    6. '19' → logprob: -12.001829147338867
    7. '1' → logprob: -12.626829147338867
    8. '5' → logprob: -13.564329147338867
    9. '29' → logprob: -14.939329147338867
    10. '  ' → logprob: -15.064329147338867

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010271730832755566
    2. '*' → logprob: -4.8852715492248535
    3. ')*' → logprob: -6.1352715492248535
    4. '1' → logprob: -8.760272026062012
    5. '7' → logprob: -9.135272026062012
    6. ' )' → logprob: -9.510272026062012
    7. ')+' → logprob: -9.510272026062012
    8. ' *' → logprob: -10.635272026062012
    9. '+' → logprob: -10.760272026062012
    10. '^' → logprob: -11.885272026062012

Token 83: ' ^' (ID: 7602)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4308454692363739
    2. '+' → logprob: -1.9308454990386963
    3. ' *' → logprob: -2.0558454990386963
    4. ' +' → logprob: -2.6808454990386963
    5. '7' → logprob: -6.055845260620117
    6. ' ' → logprob: -6.180845260620117
    7. '```' → logprob: -7.430845260620117
    8. '1' → logprob: -7.555845260620117
    9. ')' → logprob: -7.680845260620117
    10. '0' → logprob: -8.055845260620117

Token 84: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.015015599317848682
    2. ' W' → logprob: -4.390015602111816
    3. 'S' → logprob: -6.390015602111816
    4. '(W' → logprob: -8.265015602111816
    5. ' ' → logprob: -9.140015602111816
    6. ' (' → logprob: -9.515015602111816
    7. '   ' → logprob: -9.765015602111816
    8. '7' → logprob: -9.890015602111816
    9. '(' → logprob: -10.140015602111816
    10. '((' → logprob: -10.265015602111816

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3720337152481079
    2. '\n' → logprob: -1.747033715248108
    3. '+' → logprob: -3.2470335960388184
    4. 'return' → logprob: -3.6220335960388184
    5. '
' → logprob: -4.622033596038818
    6. '```' → logprob: -4.747033596038818
    7. '<|end|>' → logprob: -4.872033596038818
    8. '    
' → logprob: -4.872033596038818
    9. '0' → logprob: -5.122033596038818
    10. '[i' → logprob: -5.247033596038818

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011926139704883099
    2. '\n' → logprob: -5.636926174163818
    3. '    
' → logprob: -6.136926174163818
    4. '	return' → logprob: -6.386926174163818
    5. '<|end|>' → logprob: -6.511926174163818
    6. '       ' → logprob: -7.011926174163818
    7. '
' → logprob: -7.011926174163818
    8. ' return' → logprob: -8.13692569732666
    9. 'return' → logprob: -8.63692569732666
    10. ' 
' → logprob: -8.76192569732666

Token 87: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5792310237884521
    2. '<|end|>' → logprob: -1.2042310237884521
    3. '\n' → logprob: -2.329231023788452
    4. 'return' (adapté à ' return') → logprob: -4.954231262207031
    5. ' ' → logprob: -5.079231262207031
    6. '
' → logprob: -5.329231262207031
    7. '\' → logprob: -5.454231262207031
    8. ' return' → logprob: -5.454231262207031
    9. '	return' → logprob: -5.704231262207031
    10. '       ' → logprob: -6.079231262207031

Token 88: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889033854007721
    2. ' a' → logprob: -2.578890323638916
    3. '[a' → logprob: -14.703890800476074
    4. '	a' → logprob: -16.828889846801758
    5. '(a' → logprob: -16.953889846801758
    6. '_a' → logprob: -18.578889846801758
    7. ' ' → logprob: -18.953889846801758
    8. ' ' → logprob: -19.078889846801758
    9. ''a' → logprob: -19.078889846801758
    10. 'list' → logprob: -19.453889846801758

Token 89: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0577473640441895
    2. '<|end|>' → logprob: -1.0577473640441895
    3. '#' → logprob: -2.0577473640441895
    4. 'def' → logprob: -2.6827473640441895
    5. '```' → logprob: -3.1827473640441895
    6. '\n' → logprob: -3.1827473640441895
    7. '[' → logprob: -4.6827473640441895
    8. 'n' → logprob: -5.3077473640441895
    9. 'for' → logprob: -6.3077473640441895
    10. '<|end|>' → logprob: -6.4327473640441895

Token 91: ' mod' (ID: 1812)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05674775689840317
    2. ' solve' → logprob: -3.4317476749420166
    3. ' calculate' → logprob: -4.806747913360596
    4. ' process' → logprob: -5.556747913360596
    5. ' find' → logprob: -5.681747913360596
    6. ' max' → logprob: -6.056747913360596
    7. ' count' → logprob: -6.181747913360596
    8. 'main' → logprob: -7.556747913360596
    9. ' compute' → logprob: -7.681747913360596
    10. ' check' → logprob: -7.806747913360596

Token 92: 'exp' (ID: 8067)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -1.2007344961166382
    2. 'ular' → logprob: -1.8257344961166382
    3. '_factor' → logprob: -1.9507344961166382
    4. '_exp' → logprob: -2.0757346153259277
    5. '_inverse' → logprob: -2.9507346153259277
    6. 'pow' → logprob: -2.9507346153259277
    7. '_add' → logprob: -3.2007346153259277
    8. 'ulo' → logprob: -4.200734615325928
    9. '_ex' → logprob: -4.200734615325928
    10. 'exp' → logprob: -4.325734615325928

Token 93: '(base' (ID: 25314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033200893085449934
    2. '(n' → logprob: -9.00033187866211
    3. ' (' → logprob: -9.37533187866211
    4. '(a' → logprob: -9.62533187866211
    5. '(base' → logprob: -10.62533187866211
    6. '(x' → logprob: -11.00033187866211
    7. '(num' → logprob: -13.12533187866211
    8. '(p' → logprob: -13.62533187866211
    9. '(exp' → logprob: -14.00033187866211
    10. '(token' → logprob: -14.37533187866211

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -10.875028610229492
    3. ',n' → logprob: -11.875028610229492
    4. ',
' → logprob: -14.250028610229492
    5. ',b' → logprob: -14.375028610229492
    6. ',int' → logprob: -15.125028610229492
    7. ',num' → logprob: -15.250028610229492
    8. ',a' → logprob: -15.625028610229492
    9. ',p' → logprob: -16.000028610229492
    10. '‌,' → logprob: -16.125028610229492

Token 95: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.5049801468849182
    2. 'ex' → logprob: -1.0049800872802734
    3. ' exponent' → logprob: -3.7549800872802734
    4. ' exp' → logprob: -5.004980087280273
    5. ' ' → logprob: -9.004980087280273
    6. 'power' → logprob: -9.754980087280273
    7. 'b' → logprob: -10.129980087280273
    8. ' ex' → logprob: -10.254980087280273
    9. 'e' → logprob: -10.629980087280273
    10. 'expo' → logprob: -10.754980087280273

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.036524842376821e-05
    2. ' ,' → logprob: -10.625040054321289
    3. '):' → logprob: -11.125040054321289
    4. ':' → logprob: -14.750040054321289
    5. ',n' → logprob: -15.250040054321289
    6. ',
' → logprob: -15.750040054321289
    7. '   ' → logprob: -16.37504005432129
    8. '):
' → logprob: -16.37504005432129
    9. ' ' → logprob: -16.50004005432129
    10. ',b' → logprob: -17.25004005432129

Token 97: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.127008318901062
    2. ' mod' → logprob: -2.1270084381103516
    3. ' modulus' → logprob: -9.627008438110352
    4. 'm' → logprob: -12.127008438110352
    5. ' ' → logprob: -12.502008438110352
    6. 'MOD' → logprob: -13.127008438110352
    7. ' MOD' → logprob: -13.877008438110352
    8. ' m' → logprob: -14.252008438110352
    9. '	mod' → logprob: -14.502008438110352
    10. ' modulo' → logprob: -14.877008438110352

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.77627644513268e-06
    2. ' ):' → logprob: -12.750008583068848
    3. ')' → logprob: -12.875008583068848
    4. '):
' → logprob: -13.250008583068848
    5. ':' → logprob: -13.500008583068848
    6. '):
' → logprob: -16.500009536743164
    7. '=' → logprob: -16.750009536743164
    8. ',' → logprob: -17.375009536743164
    9. '>:' → logprob: -18.250009536743164
    10. '}:' → logprob: -18.500009536743164

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23223349452018738
    2. ':' → logprob: -1.6072335243225098
    3. ' ' → logprob: -6.10723352432251
    4. ' :' → logprob: -6.35723352432251
    5. '<|end|>' → logprob: -6.73223352432251
    6. ':
' → logprob: -7.48223352432251
    7. ',' → logprob: -8.982233047485352
    8. '(' → logprob: -8.982233047485352
    9. '**' → logprob: -9.232233047485352
    10. 'def' → logprob: -9.232233047485352

Token 100: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.38923102617263794
    2. 'result' (adapté à ' result') → logprob: -1.1392309665679932
    3. ' res' → logprob: -6.764231204986572
    4. 'res' → logprob: -7.514231204986572
    5. ' if' → logprob: -7.764231204986572
    6. '   ' → logprob: -8.514230728149414
    7. 'if' → logprob: -10.514230728149414
    8. '	result' → logprob: -12.889230728149414
    9. '```' → logprob: -13.764230728149414
    10. 'r' → logprob: -14.639230728149414

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031936357263475657
    2. '=' → logprob: -5.7531938552856445
    3. ' ' → logprob: -11.128193855285645
    4. ' =)' → logprob: -14.878193855285645
    5. '<|end|>' → logprob: -15.128193855285645
    6. ' =
' → logprob: -15.503193855285645
    7. '  ' → logprob: -16.003192901611328
    8. ' ='' → logprob: -16.753192901611328
    9. ' *=' → logprob: -17.003192901611328
    10. ' ="' → logprob: -17.128192901611328

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692810595035553
    2. ' ' → logprob: -2.1269280910491943
    3. '   ' → logprob: -18.126928329467773
    4. 'pow' → logprob: -18.626928329467773
    5. ' ' → logprob: -19.064428329467773
    6. '۱' → logprob: -19.189428329467773
    7. '```' → logprob: -19.439428329467773
    8. 'def' → logprob: -19.501928329467773
    9. '１' → logprob: -19.564428329467773
    10. '0' → logprob: -19.876928329467773

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.125003814697266
    4. '１' → logprob: -20.875003814697266
    5. '[' → logprob: -21.750003814697266
    6. '```' → logprob: -21.875003814697266
    7. '۱' → logprob: -21.875003814697266
    8. '{' → logprob: -22.250003814697266
    9. 'pow' → logprob: -22.812503814697266
    10. '১' → logprob: -23.125003814697266

Token 104: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' cur' (ID: 4396)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5381648540496826
    2. ' ' → logprob: -2.4131648540496826
    3. ' 
' → logprob: -2.4131648540496826
    4. '   ' → logprob: -2.4131648540496826
    5. '    
' → logprob: -2.7881648540496826
    6. '    ' → logprob: -3.6631648540496826
    7. ' while' → logprob: -4.538165092468262
    8. ' *' → logprob: -4.538165092468262
    9. '
' → logprob: -5.038165092468262
    10. 'base' → logprob: -5.288165092468262

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14591781795024872
    2. ' ' → logprob: -2.3959178924560547
    3. ' *=' → logprob: -3.6459178924560547
    4. ' <<=' → logprob: -4.770917892456055
    5. '=' → logprob: -5.145917892456055
    6. ' *' → logprob: -6.395917892456055
    7. '   ' → logprob: -7.645917892456055
    8. '    ' → logprob: -7.895917892456055
    9. '_' → logprob: -7.895917892456055
    10. ')' → logprob: -8.520917892456055

Token 108: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.31327930092811584
    2. ' base' → logprob: -1.3132792711257935
    3. '(base' → logprob: -11.563279151916504
    4. '1' → logprob: -12.438279151916504
    5. '	base' → logprob: -13.063279151916504
    6. '   ' → logprob: -13.438279151916504
    7. ' ' → logprob: -15.938279151916504
    8. '_base' → logprob: -16.43828010559082
    9. 'int' → logprob: -16.93828010559082
    10. '```' → logprob: -17.06328010559082

Token 109: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10275803506374359
    2. '%' → logprob: -2.3527579307556152
    3. '<|end|>' → logprob: -6.102757930755615
    4. ' ' → logprob: -8.852758407592773
    5. '<|end|>' → logprob: -10.227758407592773
    6. '   ' → logprob: -10.352758407592773
    7. '
' → logprob: -10.852758407592773
    8. '  
' → logprob: -11.477758407592773
    9. ' %=' → logprob: -11.602758407592773
    10. '```' → logprob: -11.602758407592773

Token 110: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.2729995988775045e-06
    2. ' mod' → logprob: -12.000006675720215
    3. '(mod' → logprob: -20.5000057220459
    4. '```' → logprob: -20.7500057220459
    5. ' ' → logprob: -21.7500057220459
    6. '	mod' → logprob: -22.1250057220459
    7. 'moder' → logprob: -23.1250057220459
    8. '   ' → logprob: -23.1250057220459
    9. 'mo' → logprob: -23.2500057220459
    10. 'md' → logprob: -23.8750057220459

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3772939443588257
    2. '   ' → logprob: -1.6272939443588257
    3. '<|end|>' → logprob: -2.5022940635681152
    4. '    
' → logprob: -3.7522940635681152
    5. '  
' → logprob: -5.627294063568115
    6. '<|end|>' → logprob: -6.002294063568115
    7. 'while' → logprob: -6.502294063568115
    8. ' 
' → logprob: -6.627294063568115
    9. ' while' → logprob: -7.127294063568115
    10. ',' → logprob: -7.502294063568115

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13605459034442902
    2. '
' → logprob: -2.886054515838623
    3. '    
' → logprob: -2.886054515838623
    4. ' 
' → logprob: -5.386054515838623
    5. ' while' → logprob: -5.511054515838623
    6. 'while' → logprob: -5.886054515838623
    7. '  
' → logprob: -6.261054515838623
    8. '   
' → logprob: -7.136054515838623
    9. '	while' → logprob: -8.011054992675781
    10. '<|end|>' → logprob: -8.011054992675781

Token 113: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.19829300045967102
    2. '   ' → logprob: -2.3232929706573486
    3. 'while' (adapté à ' while') → logprob: -2.5732929706573486
    4. ' for' → logprob: -5.323293209075928
    5. 'for' → logprob: -7.948293209075928
    6. '	while' → logprob: -8.07329273223877
    7. '```' → logprob: -10.44829273223877
    8. '    
' → logprob: -10.44829273223877
    9. ' ' → logprob: -11.07329273223877
    10. '
' → logprob: -12.57329273223877

Token 114: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.4740811586380005
    2. ' exp' → logprob: -0.9740811586380005
    3. '(exp' → logprob: -12.474081039428711
    4. '	exp' → logprob: -15.974081039428711
    5. '_exp' → logprob: -16.84908103942871
    6. 'ex' → logprob: -17.09908103942871
    7. 'e' → logprob: -17.34908103942871
    8. '.exp' → logprob: -17.97408103942871
    9. '   ' → logprob: -18.09908103942871
    10. ' ' → logprob: -18.09908103942871

Token 115: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4740987718105316
    2. '>' → logprob: -0.974098801612854
    3. ':' → logprob: -11.099099159240723
    4. ' ' → logprob: -12.974099159240723
    5. ' ' → logprob: -13.349099159240723
    6. '&gt' → logprob: -13.974099159240723
    7. '   ' → logprob: -14.724099159240723
    8. '[' → logprob: -15.099099159240723
    9. 'and' → logprob: -15.724099159240723
    10. '">' → logprob: -15.849099159240723

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416398212313652
    2. ' ' → logprob: -4.264163970947266
    3. '=' → logprob: -14.889163970947266
    4. '   ' → logprob: -16.264163970947266
    5. '    ' → logprob: -17.514163970947266
    6. '  ' → logprob: -17.639163970947266
    7. ' ' → logprob: -17.889163970947266
    8. '>' → logprob: -18.389163970947266
    9. '```' → logprob: -18.764163970947266
    10. '۰' → logprob: -19.264163970947266

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '=' → logprob: -20.375051498413086
    4. '   ' → logprob: -21.000051498413086
    5. '۰' → logprob: -21.250051498413086
    6. '```' → logprob: -21.500051498413086
    7. '>' → logprob: -22.250051498413086
    8. ' ' → logprob: -22.875051498413086
    9. '    ' → logprob: -22.875051498413086
    10. 'zero' → logprob: -23.250051498413086

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014312644489109516
    2. ':
' → logprob: -4.889312744140625
    3. '       ' → logprob: -5.514312744140625
    4. '<|end|>' → logprob: -6.389312744140625
    5. ',' → logprob: -8.014312744140625
    6. '   ' → logprob: -8.014312744140625
    7. '<|end|>' → logprob: -8.389312744140625
    8. '):' → logprob: -10.764312744140625
    9. ' :' → logprob: -11.014312744140625
    10. '):
' → logprob: -11.389312744140625

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038647815585136414
    2. '   ' → logprob: -3.5386478900909424
    3. ':' → logprob: -5.663647651672363
    4. ' 
' → logprob: -6.788647651672363
    5. ' ' → logprob: -7.163647651672363
    6. '    
' → logprob: -7.288647651672363
    7. '    ' → logprob: -7.538647651672363
    8. ':
' → logprob: -7.538647651672363
    9. '<|end|>' → logprob: -7.913647651672363
    10. '        
' → logprob: -8.413647651672363

Token 120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8375110030174255
    2. '       ' → logprob: -1.0875110626220703
    3. ' 
' → logprob: -2.5875110626220703
    4. '        ' → logprob: -2.7125110626220703
    5. 'if' (adapté à ' if') → logprob: -3.4625110626220703
    6. ' ' → logprob: -3.7125110626220703
    7. '    ' → logprob: -3.9625110626220703
    8. '   ' → logprob: -5.83751106262207
    9. '        
' → logprob: -5.96251106262207
    10. '<|end|>' → logprob: -6.21251106262207

Token 121: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.002884521847590804
    2. 'exp' → logprob: -6.752884387969971
    3. ' (' → logprob: -7.002884387969971
    4. '(exp' → logprob: -7.127884387969971
    5. ' ' → logprob: -14.252884864807129
    6. '(' → logprob: -14.877884864807129
    7. '	exp' → logprob: -16.377883911132812
    8. ' ' → logprob: -16.502883911132812
    9. '_exp' → logprob: -18.252883911132812
    10. ' ex' → logprob: -18.252883911132812

Token 122: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.00306683755479753
    2. '&' → logprob: -5.8780670166015625
    3. ' %' → logprob: -8.378067016601562
    4. '%' → logprob: -11.128067016601562
    5. ' ' → logprob: -11.253067016601562
    6. ' ' → logprob: -12.378067016601562
    7. '[' → logprob: -16.003067016601562
    8. '&nbsp' → logprob: -16.253067016601562
    9. ' &
' → logprob: -17.628067016601562
    10. '&amp' → logprob: -18.003067016601562

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -20.625001907348633
    4. 'exp' → logprob: -21.000001907348633
    5. '１' → logprob: -21.250001907348633
    6. '' → logprob: -21.625001907348633
    7. ' ' → logprob: -22.500001907348633
    8. '```' → logprob: -22.500001907348633
    9. '۱' → logprob: -22.500001907348633
    10. '   ' → logprob: -22.625001907348633

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '１' → logprob: -21.75
    4. '' → logprob: -21.75
    5. '(' → logprob: -22.25
    6. 'exp' → logprob: -22.5
    7. '۱' → logprob: -22.5
    8. '```' → logprob: -22.5
    9. '

' → logprob: -23.0
    10. '{' → logprob: -23.0

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10029562562704086
    2. ':
' → logprob: -2.3502955436706543
    3. '==' → logprob: -10.600296020507812
    4. ' ==' → logprob: -10.725296020507812
    5. '=' → logprob: -11.225296020507812
    6. '>' → logprob: -11.725296020507812
    7. ' :' → logprob: -12.350296020507812
    8. ':

' → logprob: -12.350296020507812
    9. '):
' → logprob: -12.475296020507812
    10. ' :
' → logprob: -12.975296020507812

Token 126: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.186970055103302
    2. ':
' → logprob: -1.9369699954986572
    3. '           ' → logprob: -3.6869699954986572
    4. '       ' → logprob: -7.936970233917236
    5. 'result' → logprob: -8.561969757080078
    6. '=' → logprob: -9.061969757080078
    7. ',' → logprob: -9.186969757080078
    8. ' :' → logprob: -9.186969757080078
    9. '):
' → logprob: -9.186969757080078
    10. ' result' → logprob: -9.686969757080078

Token 127: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.12756209075450897
    2. 'result' (adapté à ' result') → logprob: -2.1275620460510254
    3. ' 
' → logprob: -8.252562522888184
    4. '            ' → logprob: -8.877562522888184
    5. ' ' → logprob: -9.252562522888184
    6. '           ' → logprob: -10.377562522888184
    7. '
' → logprob: -11.002562522888184
    8. '(result' → logprob: -11.002562522888184
    9. '	result' → logprob: -11.252562522888184
    10. ' ' → logprob: -11.252562522888184

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39421674609184265
    2. ' =' → logprob: -1.144216775894165
    3. ' *=' → logprob: -5.269216537475586
    4. '*=' → logprob: -6.144216537475586
    5. ' ' → logprob: -11.519216537475586
    6. ' ' → logprob: -12.394216537475586
    7. '```' → logprob: -12.644216537475586
    8. '*' → logprob: -12.644216537475586
    9. '	' → logprob: -13.019216537475586
    10. '   ' → logprob: -14.269216537475586

Token 129: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.011079652234911919
    2. '(result' → logprob: -4.511079788208008
    3. ' result' → logprob: -10.636079788208008
    4. 'result' → logprob: -11.761079788208008
    5. ',result' → logprob: -17.886079788208008
    6. '[result' → logprob: -17.886079788208008
    7. '```' → logprob: -18.261079788208008
    8. '=result' → logprob: -18.761079788208008
    9. '(' → logprob: -18.886079788208008
    10. ' ' → logprob: -19.511079788208008

Token 130: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018271097913384438
    2. ' result' → logprob: -4.018270969390869
    3. '(result' → logprob: -9.018271446228027
    4. ' (' → logprob: -18.14327049255371
    5. '[result' → logprob: -19.51827049255371
    6. ',result' → logprob: -19.64327049255371
    7. '	result' → logprob: -19.64327049255371
    8. '_result' → logprob: -20.01827049255371
    9. '=result' → logprob: -20.14327049255371
    10. '$result' → logprob: -21.26827049255371

Token 131: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006716317031532526
    2. '*' → logprob: -5.006716251373291
    3. 'result' → logprob: -14.38171672821045
    4. ' ' → logprob: -15.88171672821045
    5. ' ' → logprob: -16.881715774536133
    6. '[result' → logprob: -16.881715774536133
    7. '*object' → logprob: -18.381715774536133
    8. '(result' → logprob: -18.381715774536133
    9. '1' → logprob: -18.506715774536133
    10. '```' → logprob: -18.756715774536133

Token 132: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.07888989895582199
    2. ' cur' → logprob: -2.578889846801758
    3. '	cur' → logprob: -16.953889846801758
    4. ' ' → logprob: -17.453889846801758
    5. '(cur' → logprob: -18.078889846801758
    6. '   ' → logprob: -18.703889846801758
    7. '[cur' → logprob: -18.703889846801758
    8. '-cur' → logprob: -19.953889846801758
    9. '_cur' → logprob: -20.078889846801758
    10. '.cur' → logprob: -20.203889846801758

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -11.750008583068848
    3. ')%' → logprob: -15.000008583068848
    4. '）' → logprob: -19.12500762939453
    5. '[cur' → logprob: -20.00000762939453
    6. '```' → logprob: -20.75000762939453
    7. '}' → logprob: -20.87500762939453
    8. ']' → logprob: -21.00000762939453
    9. '*' → logprob: -21.00000762939453
    10. '   ' → logprob: -21.12500762939453

Token 134: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16032131016254425
    2. '%' → logprob: -1.9103213548660278
    3. ')' → logprob: -9.285321235656738
    4. ')%' → logprob: -12.660321235656738
    5. ' ' → logprob: -14.785321235656738
    6. ' %=' → logprob: -15.035321235656738
    7. '```' → logprob: -15.785321235656738
    8. '%s' → logprob: -16.785322189331055
    9. ']' → logprob: -17.160322189331055
    10. ' ' → logprob: -17.160322189331055

Token 135: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001170225441455841
    2. ' mod' → logprob: -6.7511701583862305
    3. '(mod' → logprob: -19.001171112060547
    4. ' ' → logprob: -19.376171112060547
    5. 'm' → logprob: -20.501171112060547
    6. '	mod' → logprob: -20.626171112060547
    7. '```' → logprob: -21.626171112060547
    8. '   ' → logprob: -21.626171112060547
    9. 'mat' → logprob: -23.001171112060547
    10. ' мод' → logprob: -23.251171112060547

Token 136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011072326451539993
    2. '
' → logprob: -7.001107215881348
    3. '        
' → logprob: -9.001107215881348
    4. '<|end|>' → logprob: -10.376107215881348
    5. '           ' → logprob: -11.501107215881348
    6. '  
' → logprob: -12.126107215881348
    7. '\n' → logprob: -12.376107215881348
    8. '
' → logprob: -12.626107215881348
    9. ' 
' → logprob: -12.876107215881348
    10. '   ' → logprob: -13.126107215881348

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017636561824474484
    2. '        
' → logprob: -9.125176429748535
    3. '
' → logprob: -10.250176429748535
    4. '           ' → logprob: -11.500176429748535
    5. '```' → logprob: -12.500176429748535
    6. '   ' → logprob: -12.750176429748535
    7. '            
' → logprob: -13.000176429748535
    8. '[' → logprob: -13.125176429748535
    9. '    
' → logprob: -13.375176429748535
    10. '       
' → logprob: -13.750176429748535

Token 138: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.005785512272268534
    2. '       ' → logprob: -5.5057854652404785
    3. ' cur' → logprob: -6.8807854652404785
    4. 'exp' → logprob: -7.3807854652404785
    5. '   ' → logprob: -9.880785942077637
    6. ' exp' → logprob: -13.255785942077637
    7. '	cur' → logprob: -14.255785942077637
    8. '[cur' → logprob: -14.255785942077637
    9. ' ' → logprob: -15.005785942077637
    10. '
' → logprob: -15.630785942077637

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004306692280806601
    2. ' =' → logprob: -7.750430583953857
    3. '*=' → logprob: -18.000431060791016
    4. '   ' → logprob: -21.000431060791016
    5. ' ' → logprob: -21.000431060791016
    6. '＝' → logprob: -21.750431060791016
    7. '=

' → logprob: -21.750431060791016
    8. '.=' → logprob: -22.000431060791016
    9. '    ' → logprob: -22.000431060791016
    10. '=
' → logprob: -22.625431060791016

Token 140: ' (' (ID: 350)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.04859452322125435
    2. ' (' → logprob: -3.0485944747924805
    3. '(' → logprob: -12.17359447479248
    4. '   ' → logprob: -14.29859447479248
    5. ' ' → logprob: -14.67359447479248
    6. '[cur' → logprob: -14.92359447479248
    7. '(curr' → logprob: -15.29859447479248
    8. '(current' → logprob: -16.173595428466797
    9. '  ' → logprob: -16.298595428466797
    10. '(c' → logprob: -17.298595428466797

Token 141: 'cur' (ID: 3264)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.08287253975868225
    2. 'cur' → logprob: -2.5828726291656494
    3. ' cur' → logprob: -5.58287239074707
    4. ' (' → logprob: -8.58287239074707
    5. '[cur' → logprob: -10.70787239074707
    6. '	cur' → logprob: -13.08287239074707
    7. '(c' → logprob: -14.45787239074707
    8. ' ' → logprob: -15.70787239074707
    9. '.cur' → logprob: -15.70787239074707
    10. '   ' → logprob: -15.95787239074707

Token 142: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6940301656723022
    2. ' *' → logprob: -0.6940301656723022
    3. 'cur' → logprob: -7.694030284881592
    4. ' cur' → logprob: -8.819029808044434
    5. '[cur' → logprob: -9.194029808044434
    6. '(cur' → logprob: -9.319029808044434
    7. '2' → logprob: -10.069029808044434
    8. ' ' → logprob: -10.194029808044434
    9. '**' → logprob: -12.319029808044434
    10. '  ' → logprob: -13.944029808044434

Token 143: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.001170225441455841
    2. ' cur' → logprob: -6.7511701583862305
    3. '	cur' → logprob: -17.501171112060547
    4. '(cur' → logprob: -19.001171112060547
    5. '[cur' → logprob: -19.251171112060547
    6. ' ' → logprob: -20.126171112060547
    7. '.cur' → logprob: -20.876171112060547
    8. '_cur' → logprob: -21.126171112060547
    9. 'c' → logprob: -21.126171112060547
    10. '-cur' → logprob: -21.251171112060547

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')%' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.125019073486328
    4. '%' → logprob: -17.000019073486328
    5. '）' → logprob: -19.750019073486328
    6. '```' → logprob: -20.625019073486328
    7. '`)' → logprob: -20.875019073486328
    8. ')
' → logprob: -21.000019073486328
    9. ']' → logprob: -21.000019073486328
    10. ' %' → logprob: -21.000019073486328

Token 145: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25195178389549255
    2. ' %' → logprob: -1.501951813697815
    3. 'mod' → logprob: -11.251952171325684
    4. '
' → logprob: -12.001952171325684
    5. ' mod' → logprob: -13.751952171325684
    6. '%
' → logprob: -15.001952171325684
    7. ' ' → logprob: -15.001952171325684
    8. '```' → logprob: -15.251952171325684
    9. ' %=' → logprob: -15.376952171325684
    10. '       ' → logprob: -15.626952171325684

Token 146: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005233882926404476
    2. ' mod' → logprob: -5.2552337646484375
    3. '(mod' → logprob: -17.880233764648438
    4. ' ' → logprob: -18.130233764648438
    5. '	mod' → logprob: -18.755233764648438
    6. '   ' → logprob: -20.380233764648438
    7. 'm' → logprob: -20.630233764648438
    8. '```' → logprob: -21.380233764648438
    9. 'mat' → logprob: -21.755233764648438
    10. '
' → logprob: -21.880233764648438

Token 147: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024156268045771867
    2. '        
' → logprob: -9.62524127960205
    3. '```' → logprob: -9.87524127960205
    4. '
' → logprob: -10.50024127960205
    5. ',' → logprob: -10.50024127960205
    6. 'exp' → logprob: -10.75024127960205
    7. '``' → logprob: -10.75024127960205
    8. ',
' → logprob: -12.25024127960205
    9. '	' → logprob: -12.87524127960205
    10. '<|end|>' → logprob: -12.87524127960205

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010509284038562328
    2. 'exp' → logprob: -10.000104904174805
    3. '```' → logprob: -10.500104904174805
    4. ',' → logprob: -10.625104904174805
    5. '   ' → logprob: -12.375104904174805
    6. ' exp' → logprob: -13.750104904174805
    7. '           ' → logprob: -14.875104904174805
    8. '_exp' → logprob: -15.375104904174805
    9. '
' → logprob: -15.375104904174805
    10. '``' → logprob: -15.500104904174805

Token 149: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.575978696346283
    2. ' exp' → logprob: -0.825978696346283
    3. '       ' → logprob: -10.20097827911377
    4. '.exp' → logprob: -14.07597827911377
    5. '        ' → logprob: -14.57597827911377
    6. '	exp' → logprob: -15.45097827911377
    7. '```' → logprob: -15.57597827911377
    8. '    ' → logprob: -15.82597827911377
    9. '_exp' → logprob: -16.200979232788086
    10. ' ' → logprob: -16.575979232788086

Token 150: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.186020165681839
    2. '//=' → logprob: -2.6860201358795166
    3. ' >>=' → logprob: -2.8110201358795166
    4. '=' → logprob: -3.1860201358795166
    5. ' //' → logprob: -10.186019897460938
    6. '>' → logprob: -10.686019897460938
    7. '>>>' → logprob: -11.436019897460938
    8. '//' → logprob: -11.686019897460938
    9. ' =' → logprob: -11.936019897460938
    10. '	' → logprob: -12.061019897460938

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.125123977661133
    4. '```' → logprob: -17.125123977661133
    5. '１' → logprob: -19.687623977661133
    6. ' ' → logprob: -19.687623977661133
    7. '=' → logprob: -20.250123977661133
    8. '0' → logprob: -20.562623977661133
    9. '۱' → logprob: -20.687623977661133
    10. '  ' → logprob: -20.687623977661133

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -18.875
    4. '１' → logprob: -20.75
    5. '
' → logprob: -21.4375
    6. '   ' → logprob: -21.5625
    7. '' → logprob: -21.6875
    8. '0' → logprob: -22.0
    9. '۱' → logprob: -22.0625
    10. '=' → logprob: -22.125

Token 153: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03150273114442825
    2. '
' → logprob: -4.156502723693848
    3. ' 
' → logprob: -4.906502723693848
    4. ' return' → logprob: -5.906502723693848
    5. '    
' → logprob: -5.906502723693848
    6. 'return' → logprob: -6.406502723693848
    7. '<|end|>' → logprob: -8.156502723693848
    8. '        
' → logprob: -8.281502723693848
    9. '  
' → logprob: -9.156502723693848
    10. '       ' → logprob: -10.031502723693848

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06721414625644684
    2. ' return' → logprob: -3.442214250564575
    3. '
' → logprob: -4.442214012145996
    4. ' 
' → logprob: -4.567214012145996
    5. 'return' → logprob: -5.192214012145996
    6. '<|end|>' → logprob: -6.067214012145996
    7. '    
' → logprob: -6.192214012145996
    8. '	return' → logprob: -9.067214012145996
    9. ':return' → logprob: -9.067214012145996
    10. '        
' → logprob: -9.192214012145996

Token 155: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.027818985283374786
    2. ' return' → logprob: -3.7778189182281494
    3. '   ' → logprob: -5.4028191566467285
    4. '	return' → logprob: -10.65281867980957
    5. ' ' → logprob: -11.02781867980957
    6. ':return' → logprob: -11.65281867980957
    7. '       ' → logprob: -12.02781867980957
    8. '```' → logprob: -13.90281867980957
    9. '<|end|>' → logprob: -14.02781867980957
    10. '  ' → logprob: -14.27781867980957

Token 156: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0002613358374219388
    2. ' result' → logprob: -8.250261306762695
    3. '(result' → logprob: -17.125261306762695
    4. '$result' → logprob: -22.000261306762695
    5. '=result' → logprob: -22.125261306762695
    6. '[result' → logprob: -22.250261306762695
    7. '	result' → logprob: -22.500261306762695
    8. 'int' → logprob: -24.875261306762695
    9. ' ' → logprob: -25.250261306762695
    10. '.result' → logprob: -25.500261306762695

Token 157: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023528109304606915
    2. '<|end|>' → logprob: -6.252352714538574
    3. '#' → logprob: -9.252352714538574
    4. '```' → logprob: -9.502352714538574
    5. '
' → logprob: -10.002352714538574
    6. 'mod' → logprob: -10.502352714538574
    7. ')' → logprob: -11.002352714538574
    8. 'N' → logprob: -11.002352714538574
    9. '\' → logprob: -11.002352714538574
    10. 'import' → logprob: -11.127352714538574

Token 158: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000285530521068722
    2. 'M' → logprob: -9.125285148620605
    3. 'MOD' → logprob: -9.625285148620605
    4. 'mod' → logprob: -10.500285148620605
    5. '#' → logprob: -10.875285148620605
    6. 'N' → logprob: -11.625285148620605
    7. '```' → logprob: -12.000285148620605
    8. 'prime' → logprob: -12.125285148620605
    9. '(' → logprob: -12.375285148620605
    10. 'P' → logprob: -12.500285148620605

Token 159: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.014165864326059818
    2. 'True' → logprob: -4.264165878295898
    3. '(True' → logprob: -13.889165878295898
    4. ' T' → logprob: -14.639165878295898
    5. '1' → logprob: -14.764165878295898
    6. 'T' → logprob: -14.889165878295898
    7. ' ' → logprob: -16.6391658782959
    8. '=True' → logprob: -16.8891658782959
    9. 'true' → logprob: -17.3891658782959
    10. ' Tru' → logprob: -17.6391658782959

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.692145012086257e-05
    2. ':
' → logprob: -10.625046730041504
    3. ' :' → logprob: -11.375046730041504
    4. '():' → logprob: -12.000046730041504
    5. ':**' → logprob: -13.250046730041504
    6. '):' → logprob: -13.625046730041504
    7. ',' → logprob: -14.250046730041504
    8. ':

' → logprob: -15.250046730041504
    9. '{' → logprob: -15.750046730041504
    10. '.' → logprob: -15.750046730041504

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2837803065776825
    2. ' line' → logprob: -1.6587803363800049
    3. ' try' → logprob: -3.158780336380005
    4. ' n' → logprob: -4.908780097961426
    5. 'try' → logprob: -5.658780097961426
    6. 'n' → logprob: -6.408780097961426
    7. 'line' → logprob: -6.533780097961426
    8. ' s' → logprob: -9.033780097961426
    9. '	line' → logprob: -10.033780097961426
    10. '```' → logprob: -10.533780097961426

Token 162: ' N' (ID: 478)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07493046671152115
    2. ' line' → logprob: -2.699930429458618
    3. 'N' (adapté à ' N') → logprob: -6.074930667877197
    4. '   ' → logprob: -6.199930667877197
    5. 'n' → logprob: -8.574930191040039
    6. 'l' → logprob: -8.699930191040039
    7. 'try' → logprob: -9.449930191040039
    8. 'data' → logprob: -9.824930191040039
    9. 's' → logprob: -9.949930191040039
    10. 'params' → logprob: -10.324930191040039

Token 163: ',S' (ID: 42097)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004653465002775192
    2. ',S' → logprob: -8.250465393066406
    3. ',W' → logprob: -8.875465393066406
    4. ',M' → logprob: -11.125465393066406
    5. '=' → logprob: -11.500465393066406
    6. ',K' → logprob: -11.625465393066406
    7. ' =' → logprob: -12.125465393066406
    8. ',T' → logprob: -12.375465393066406
    9. ',Q' → logprob: -12.625465393066406
    10. ' ,' → logprob: -12.750465393066406

Token 164: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.48279082775115967
    2. ',' → logprob: -0.9827908277511597
    3. ',T' → logprob: -6.232790946960449
    4. '=' → logprob: -6.357790946960449
    5. ',Q' → logprob: -6.482790946960449
    6. ',K' → logprob: -6.607790946960449
    7. ',P' → logprob: -7.482790946960449
    8. ',M' → logprob: -8.23279094696045
    9. ' =' → logprob: -8.35779094696045
    10. ',w' → logprob: -8.48279094696045

Token 165: ',Q' (ID: 130136)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010842557530850172
    2. ' =' → logprob: -6.876084327697754
    3. '=input' → logprob: -10.001084327697754
    4. '=line' → logprob: -12.626084327697754
    5. '=sys' → logprob: -13.751084327697754
    6. ',' → logprob: -14.126084327697754
    7. '=N' → logprob: -14.501084327697754
    8. ',N' → logprob: -16.126083374023438
    9. '=

' → logprob: -16.376083374023438
    10. ',input' → logprob: -17.126083374023438

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02632654458284378
    2. ' =' → logprob: -3.6513266563415527
    3. '=input' → logprob: -10.776326179504395
    4. ',' → logprob: -12.651326179504395
    5. '=line' → logprob: -13.651326179504395
    6. '=sys' → logprob: -14.401326179504395
    7. '=

' → logprob: -15.151326179504395
    8. ' ' → logprob: -16.77632713317871
    9. '＝' → logprob: -17.15132713317871
    10. '[' → logprob: -17.40132713317871

Token 167: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009925569174811244
    2. ' map' → logprob: -7.000992774963379
    3. 'input' → logprob: -9.750992774963379
    4. 'list' → logprob: -10.750992774963379
    5. '(map' → logprob: -14.125992774963379
    6. '[' → logprob: -14.375992774963379
    7. ' input' → logprob: -17.500991821289062
    8. '	map' → logprob: -17.875991821289062
    9. 'tuple' → logprob: -18.250991821289062
    10. ' list' → logprob: -18.250991821289062

Token 168: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04086439684033394
    2. '(' → logprob: -3.2908644676208496
    3. '(input' → logprob: -5.91586446762085
    4. '(str' → logprob: -9.665863990783691
    5. '(lambda' → logprob: -10.165863990783691
    6. 'int' → logprob: -11.165863990783691
    7. '(
' → logprob: -13.790863990783691
    8. 'input' → logprob: -14.040863990783691
    9. '[int' → logprob: -14.165863990783691
    10. '(list' → logprob: -14.165863990783691

Token 169: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2574256360530853
    2. ',' → logprob: -1.5074256658554077
    3. 'sys' → logprob: -6.007425785064697
    4. 'input' → logprob: -6.507425785064697
    5. '(input' → logprob: -6.757425785064697
    6. '(sys' → logprob: -8.132425308227539
    7. '(' → logprob: -9.757425308227539
    8. ' ,' → logprob: -13.007425308227539
    9. '(),' → logprob: -13.257425308227539
    10. ' input' → logprob: -13.382425308227539

Token 170: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.627176768844947e-05
    2. ' input' → logprob: -9.250096321105957
    3. 'sys' → logprob: -16.75009536743164
    4. '(input' → logprob: -17.62509536743164
    5. '=input' → logprob: -20.25009536743164
    6. '	input' → logprob: -20.37509536743164
    7. ',input' → logprob: -20.37509536743164
    8. ')' → logprob: -20.62509536743164
    9. '<input' → logprob: -21.75009536743164
    10. '   ' → logprob: -22.00009536743164

Token 171: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.014684110297821e-06
    2. '()' → logprob: -11.625008583068848
    3. ' ().' → logprob: -17.000009536743164
    4. '())' → logprob: -18.625009536743164
    5. '.readline' → logprob: -19.375009536743164
    6. '.strip' → logprob: -19.875009536743164
    7. '(' → logprob: -20.375009536743164
    8. '.split' → logprob: -21.000009536743164
    9. '()
' → logprob: -21.250009536743164
    10. '.' → logprob: -21.750009536743164

Token 172: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07907859981060028
    2. 'strip' → logprob: -2.5790786743164062
    3. 'rstrip' → logprob: -8.579078674316406
    4. ' split' → logprob: -15.079078674316406
    5. '(split' → logprob: -15.579078674316406
    6. 'read' → logprob: -15.579078674316406
    7. ' strip' → logprob: -16.204078674316406
    8. '().' → logprob: -17.454078674316406
    9. 'decode' → logprob: -18.579078674316406
    10. '.split' → logprob: -19.204078674316406

Token 173: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008428169414401054
    2. '())' → logprob: -4.88342809677124
    3. '()' → logprob: -7.13342809677124
    4. '))' → logprob: -11.383428573608398
    5. ')
' → logprob: -12.133428573608398
    6. '(' → logprob: -13.258428573608398
    7. '):' → logprob: -13.383428573608398
    8. ')`' → logprob: -13.758428573608398
    9. '())
' → logprob: -14.508428573608398
    10. '),' → logprob: -15.133428573608398

Token 174: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3432224988937378
    2. '   ' → logprob: -2.2182226181030273
    3. '<|end|>' → logprob: -2.4682226181030273
    4. 'if' → logprob: -2.5932226181030273
    5. '
' → logprob: -4.718222618103027
    6. ' 
' → logprob: -4.968222618103027
    7. ' ' → logprob: -6.218222618103027
    8. '    
' → logprob: -6.343222618103027
    9. '    ' → logprob: -7.718222618103027
    10. ',' → logprob: -8.218222618103027

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06465037912130356
    2. ' if' → logprob: -2.814650297164917
    3. '   ' → logprob: -5.939650535583496
    4. '<|end|>' → logprob: -10.939650535583496
    5. '    ' → logprob: -11.439650535583496
    6. '    
' → logprob: -12.439650535583496
    7. ' ' → logprob: -12.564650535583496
    8. '#' → logprob: -12.814650535583496
    9. '	if' → logprob: -13.064650535583496
    10. ' 
' → logprob: -13.564650535583496

Token 176: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03807293251156807
    2. ' N' → logprob: -3.2880728244781494
    3. ' not' → logprob: -10.66307258605957
    4. '(N' → logprob: -12.16307258605957
    5. 'not' → logprob: -13.41307258605957
    6. '[N' → logprob: -14.28807258605957
    7. ' ' → logprob: -15.41307258605957
    8. ' (' → logprob: -15.78807258605957
    9. '0' → logprob: -16.16307258605957
    10. '(' → logprob: -16.16307258605957

Token 177: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759768486022949
    2. '==' → logprob: -0.8259768486022949
    3. '<=' → logprob: -11.325977325439453
    4. ' ' → logprob: -11.575977325439453
    5. ' <=' → logprob: -12.075977325439453
    6. ')==' → logprob: -12.825977325439453
    7. '=' → logprob: -13.075977325439453
    8. '<' → logprob: -13.700977325439453
    9. '0' → logprob: -13.950977325439453
    10. '===' → logprob: -14.200977325439453

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '-' → logprob: -17.37501335144043
    4. 'Q' → logprob: -19.00001335144043
    5. '０' → logprob: -19.25001335144043
    6. '```' → logprob: -19.25001335144043
    7. '۰' → logprob: -19.25001335144043
    8. 'S' → logprob: -19.50001335144043
    9. '=' → logprob: -20.37501335144043
    10. 'W' → logprob: -21.25001335144043

Token 179: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23252055048942566
    2. ' and' → logprob: -1.607520580291748
    3. 'and' → logprob: -4.982520580291748
    4. ':
' → logprob: -8.73252010345459
    5. ' or' → logprob: -10.10752010345459
    6. '   ' → logprob: -11.85752010345459
    7. ',' → logprob: -11.98252010345459
    8. ':return' → logprob: -12.10752010345459
    9. '	and' → logprob: -13.23252010345459
    10. ' :' → logprob: -13.60752010345459

Token 180: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.005233763717114925
    2. ' S' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.880233764648438
    4. '	S' → logprob: -19.130233764648438
    5. '  ' → logprob: -19.630233764648438
    6. '   ' → logprob: -19.755233764648438
    7. ',S' → logprob: -21.630233764648438
    8. ' ' → logprob: -22.005233764648438
    9. '"S' → logprob: -22.255233764648438
    10. '=S' → logprob: -22.380233764648438

Token 181: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00015860427811276168
    2. ' ==' → logprob: -8.750158309936523
    3. '=' → logprob: -17.500158309936523
    4. '0' → logprob: -17.750158309936523
    5. '===' → logprob: -18.500158309936523
    6. '==
' → logprob: -18.625158309936523
    7. '==-' → logprob: -18.625158309936523
    8. '()==' → logprob: -19.000158309936523
    9. '==(' → logprob: -20.625158309936523
    10. ')==' → logprob: -20.750158309936523

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. 'W' → logprob: -16.0
    4. '۰' → logprob: -19.75
    5. 'and' → logprob: -20.0
    6. '=' → logprob: -20.625
    7. '```' → logprob: -21.0
    8. 'Q' → logprob: -21.0
    9. 'w' → logprob: -21.75
    10. '==' → logprob: -21.9375

Token 183: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759406685829163
    2. ' and' → logprob: -0.8259406685829163
    3. '0' → logprob: -14.32594108581543
    4. ' ' → logprob: -15.07594108581543
    5. '	and' → logprob: -15.07594108581543
    6. '<|end|>' → logprob: -16.95094108581543
    7. '   ' → logprob: -18.20094108581543
    8. ':' → logprob: -18.20094108581543
    9. '<|end|>' → logprob: -18.20094108581543
    10. 'a' → logprob: -18.45094108581543

Token 184: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.001170460251159966
    2. ' W' → logprob: -6.751170635223389
    3. '   ' → logprob: -16.001171112060547
    4. '	W' → logprob: -16.251171112060547
    5. ' ' → logprob: -17.126171112060547
    6. '  ' → logprob: -17.626171112060547
    7. '```' → logprob: -20.126171112060547
    8. '<W' → logprob: -20.126171112060547
    9. '    ' → logprob: -20.626171112060547
    10. '=W' → logprob: -20.626171112060547

Token 185: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.4974866644479334e-05
    2. ' ==' → logprob: -11.125015258789062
    3. '0' → logprob: -15.875015258789062
    4. 'and' → logprob: -17.500015258789062
    5. '=' → logprob: -17.875015258789062
    6. '==
' → logprob: -18.125015258789062
    7. '===' → logprob: -18.250015258789062
    8. '()==' → logprob: -18.500015258789062
    9. ']==' → logprob: -19.125015258789062
    10. '```' → logprob: -19.250015258789062

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'and' → logprob: -16.250003814697266
    4. '=' → logprob: -17.875003814697266
    5. ' and' → logprob: -17.875003814697266
    6. '```' → logprob: -18.125003814697266
    7. '==' → logprob: -18.875003814697266
    8. '۰' → logprob: -19.187503814697266
    9. 'Q' → logprob: -19.500003814697266
    10. '<|end|>' → logprob: -20.437503814697266

Token 187: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2519303858280182
    2. ' and' → logprob: -1.5019303560256958
    3. ' ' → logprob: -14.001930236816406
    4. '	and' → logprob: -15.501930236816406
    5. '0' → logprob: -15.626930236816406
    6. ':' → logprob: -17.626930236816406
    7. '```' → logprob: -17.626930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '<|end|>' → logprob: -17.876930236816406
    10. '<|end|>' → logprob: -18.001930236816406

Token 188: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00033546582562848926
    2. ' Q' → logprob: -8.000335693359375
    3. '	Q' → logprob: -18.750335693359375
    4. ' ' → logprob: -19.125335693359375
    5. '   ' → logprob: -19.375335693359375
    6. '  ' → logprob: -21.250335693359375
    7. '0' → logprob: -21.500335693359375
    8. 'q' → logprob: -24.375335693359375
    9. '    ' → logprob: -24.875335693359375
    10. ',Q' → logprob: -25.250335693359375

Token 189: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018444200977683067
    2. ' ==' → logprob: -4.268444061279297
    3. ':' → logprob: -5.518444061279297
    4. '=' → logprob: -8.768444061279297
    5. ')==' → logprob: -9.518444061279297
    6. '()==' → logprob: -11.518444061279297
    7. '==
' → logprob: -12.518444061279297
    8. ']==' → logprob: -12.893444061279297
    9. ':
' → logprob: -13.018444061279297
    10. ')' → logprob: -13.018444061279297

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۰' → logprob: -16.750011444091797
    4. '০' → logprob: -18.312511444091797
    5. '０' → logprob: -18.437511444091797
    6. '०' → logprob: -18.687511444091797
    7. '=' → logprob: -18.687511444091797
    8. '000' → logprob: -19.812511444091797
    9. '00' → logprob: -20.000011444091797
    10. '<|end|>' → logprob: -20.000011444091797

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05044058710336685
    2. ':
' → logprob: -3.050440549850464
    3. '   ' → logprob: -6.300440788269043
    4. '       ' → logprob: -11.550440788269043
    5. ':return' → logprob: -12.925440788269043
    6. ':
' → logprob: -13.675440788269043
    7. '	break' → logprob: -13.925440788269043
    8. ' break' → logprob: -15.050440788269043
    9. '.' → logprob: -15.175440788269043
    10. '):
' → logprob: -15.425440788269043

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04305228590965271
    2. '   ' → logprob: -3.1680521965026855
    3. ' break' → logprob: -10.293052673339844
    4. '	break' → logprob: -11.918052673339844
    5. 'break' → logprob: -12.418052673339844
    6. '      ' → logprob: -13.293052673339844
    7. '   ' → logprob: -13.418052673339844
    8. '  ' → logprob: -13.793052673339844
    9. '     ' → logprob: -13.918052673339844
    10. '<|end|>' → logprob: -14.043052673339844

Token 193: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07948077470064163
    2. ' break' → logprob: -2.5794808864593506
    3. '       ' → logprob: -8.45448112487793
    4. '   ' → logprob: -8.57948112487793
    5. '	break' → logprob: -8.57948112487793
    6. '_break' → logprob: -13.95448112487793
    7. '
' → logprob: -14.82948112487793
    8. '    
' → logprob: -15.20448112487793
    9. '```' → logprob: -15.95448112487793
    10. 'Break' → logprob: -16.20448112487793

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07431314140558243
    2. '    
' → logprob: -3.199313163757324
    3. '
' → logprob: -4.199313163757324
    4. 'for' → logprob: -4.449313163757324
    5. 'a' → logprob: -6.824313163757324
    6. ' for' → logprob: -7.449313163757324
    7. 'answers' → logprob: -7.449313163757324
    8. 'queries' → logprob: -7.449313163757324
    9. '  
' → logprob: -7.824313163757324
    10. '```' → logprob: -8.199313163757324

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07736846059560776
    2. 'a' → logprob: -2.7023684978485107
    3. '    
' → logprob: -5.452368259429932
    4. 'for' → logprob: -6.702368259429932
    5. '
' → logprob: -6.827368259429932
    6. '```' → logprob: -8.07736873626709
    7. ' for' → logprob: -8.95236873626709
    8. ' a' → logprob: -9.70236873626709
    9. 'queries' → logprob: -9.95236873626709
    10. 'answers' → logprob: -10.32736873626709

Token 196: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0032786023803055286
    2. '   ' → logprob: -6.503278732299805
    3. 'sequence' → logprob: -6.753278732299805
    4. 'A' → logprob: -8.128278732299805
    5. 'seq' → logprob: -8.378278732299805
    6. 'arr' → logprob: -10.753278732299805
    7. ' a' → logprob: -11.003278732299805
    8. '    
' → logprob: -11.253278732299805
    9. '```' → logprob: -11.628278732299805
    10. 'data' → logprob: -12.128278732299805

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484654724597931
    2. '=' → logprob: -1.2234654426574707
    3. ',' → logprob: -11.348465919494629
    4. '[' → logprob: -12.223465919494629
    5. 'a' → logprob: -13.848465919494629
    6. ')' → logprob: -13.848465919494629
    7. '=a' → logprob: -15.473465919494629
    8. 's' → logprob: -15.598465919494629
    9. ' ' → logprob: -15.598465919494629
    10. '   ' → logprob: -15.723465919494629

Token 198: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.003178544342517853
    2. ' generate' → logprob: -5.753178596496582
    3. '(generate' → logprob: -14.128178596496582
    4. '   ' → logprob: -16.878177642822266
    5. '.generate' → logprob: -18.628177642822266
    6. '[' → logprob: -19.003177642822266
    7. ' ' → logprob: -19.503177642822266
    8. '  ' → logprob: -19.628177642822266
    9. '_generate' → logprob: -20.378177642822266
    10. 'gener' → logprob: -21.128177642822266

Token 199: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.1472419600977446e-06
    2. 'sequence' → logprob: -13.875000953674316
    3. 'a' → logprob: -16.875001907348633
    4. '_array' → logprob: -17.500001907348633
    5. '_seq' → logprob: -17.625001907348633
    6. '_sequences' → logprob: -17.750001907348633
    7. '_' → logprob: -18.875001907348633
    8. '(sequence' → logprob: -19.250001907348633
    9. '(a' → logprob: -19.875001907348633
    10. ' _' → logprob: -20.125001907348633

Token 200: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. ' (' → logprob: -16.75000762939453
    4. '```' → logprob: -17.00000762939453
    5. '(n' → logprob: -18.25000762939453
    6. '
' → logprob: -19.25000762939453
    7. '(S' → logprob: -19.62500762939453
    8. '​' → logprob: -19.87500762939453
    9. 'N' → logprob: -20.25000762939453
    10. 'a' → logprob: -20.25000762939453

Token 201: ',S' (ID: 42097)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008166544139385223
    2. ',S' → logprob: -7.125816822052002
    3. ' ,' → logprob: -11.375816345214844
    4. 'S' → logprob: -15.000816345214844
    5. ',
' → logprob: -15.875816345214844
    6. '   ' → logprob: -16.625816345214844
    7. ',s' → logprob: -17.375816345214844
    8. '```' → logprob: -17.625816345214844
    9. ')' → logprob: -18.250816345214844
    10. '(S' → logprob: -18.375816345214844

Token 202: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.5231398940086365
    2. ',' → logprob: -0.8981398940086365
    3. ' ,' → logprob: -11.773139953613281
    4. 'W' → logprob: -12.898139953613281
    5. ',w' → logprob: -12.898139953613281
    6. ',Q' → logprob: -13.398139953613281
    7. ',
' → logprob: -14.773139953613281
    8. ',a' → logprob: -15.273139953613281
    9. '```' → logprob: -15.398139953613281
    10. ')' → logprob: -15.773139953613281

Token 203: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002478627720847726
    2. ')
' → logprob: -6.00247859954834
    3. ')

' → logprob: -13.37747859954834
    4. '   ' → logprob: -14.62747859954834
    5. ')
' → logprob: -14.62747859954834
    6. ' )' → logprob: -15.37747859954834
    7. ')a' → logprob: -15.50247859954834
    8. ' ' → logprob: -17.252479553222656
    9. '
' → logprob: -17.627479553222656
    10. '),' → logprob: -17.627479553222656

Token 204: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.653948187828064
    2. '   ' → logprob: -1.403948187828064
    3. 'prefix' → logprob: -2.7789483070373535
    4. ' for' → logprob: -3.6539483070373535
    5. 'queries' → logprob: -3.6539483070373535
    6. 'answers' → logprob: -3.9039483070373535
    7. 'dp' → logprob: -4.1539483070373535
    8. 'query' → logprob: -4.2789483070373535
    9. 'm' → logprob: -4.7789483070373535
    10. 'c' → logprob: -5.0289483070373535

Token 205: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14170724153518677
    2. 'dp' → logprob: -3.891707181930542
    3. 'prefix' → logprob: -4.391707420349121
    4. 'answers' → logprob: -4.391707420349121
    5. 'ans' → logprob: -4.766707420349121
    6. 'x' → logprob: -4.891707420349121
    7. 'query' → logprob: -5.016707420349121
    8. 'queries' → logprob: -5.141707420349121
    9. 'from' → logprob: -5.266707420349121
    10. 'answer' → logprob: -5.516707420349121

Token 206: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0545868873596191
    2. ' queries' → logprob: -1.6795868873596191
    3. 'queries' → logprob: -2.429586887359619
    4. 'query' → logprob: -2.554586887359619
    5. ' for' → logprob: -2.554586887359619
    6. 'from' → logprob: -2.804586887359619
    7. 'dp' → logprob: -3.679586887359619
    8. 'answers' → logprob: -4.179586887359619
    9. 'results' → logprob: -4.554586887359619
    10. 'ans' → logprob: -4.679586887359619

Token 207: ' cherche' (ID: 52345)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03367635980248451
    2. '   ' → logprob: -3.6586763858795166
    3. ' for' → logprob: -5.7836761474609375
    4. 'for' → logprob: -6.7836761474609375
    5. 'es' → logprob: -7.1586761474609375
    6. ' e' → logprob: -7.4086761474609375
    7. ' =' → logprob: -8.283676147460938
    8. ' queries' → logprob: -8.408676147460938
    9. 'eline' → logprob: -9.033676147460938
    10. 'ly' → logprob: -9.033676147460938

Token 208: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.2695318460464478
    2. ' à' → logprob: -2.144531726837158
    3. 'a' → logprob: -2.394531726837158
    4. ' to' → logprob: -2.519531726837158
    5. 'to' → logprob: -2.769531726837158
    6. 'le' → logprob: -2.894531726837158
    7. ' la' → logprob: -3.019531726837158
    8. 'les' → logprob: -3.394531726837158
    9. 'def' → logprob: -4.019531726837158
    10. ' a' → logprob: -4.019531726837158

Token 209: ' compter' (ID: 81694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9018834829330444
    2. 'max' → logprob: -2.026883602142334
    3. 'ré' → logprob: -2.151883602142334
    4. 'calcul' → logprob: -2.151883602142334
    5. 'min' → logprob: -2.651883602142334
    6. 'l' → logprob: -2.651883602142334
    7. ' calcul' → logprob: -3.401883602142334
    8. 'tr' → logprob: -3.526883602142334
    9. 'count' → logprob: -3.651883602142334
    10. 'answer' → logprob: -3.651883602142334

Token 210: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7871488332748413
    2. 'le' → logprob: -1.0371488332748413
    3. ' le' → logprob: -2.037148952484131
    4. ' les' → logprob: -3.287148952484131
    5. ' combien' → logprob: -4.787148952484131
    6. '   ' → logprob: -5.037148952484131
    7. 'comb' → logprob: -6.287148952484131
    8. 'la' → logprob: -6.912148952484131
    9. ',' → logprob: -7.162148952484131
    10. ' la' → logprob: -7.412148952484131

Token 211: ' sous' (ID: 14487)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -1.7111274003982544
    2. 's' → logprob: -1.8361274003982544
    3. 'sub' → logprob: -2.211127281188965
    4. 'p' → logprob: -2.211127281188965
    5. 'indices' → logprob: -2.336127281188965
    6. 'pairs' → logprob: -2.461127281188965
    7. 'cou' → logprob: -2.586127281188965
    8. ' nombres' → logprob: -3.586127281188965
    9. 'segments' → logprob: -3.961127281188965
    10. 'nombre' → logprob: -4.211127281188965

Token 212: '-s' (ID: 2011)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.7149212956428528
    2. 's' → logprob: -0.8399212956428528
    3. 'ense' → logprob: -3.089921236038208
    4. '```' → logprob: -5.589921474456787
    5. '   ' → logprob: -5.714921474456787
    6. 'se' → logprob: -5.839921474456787
    7. 'list' → logprob: -5.964921474456787
    8. 'arrays' → logprob: -6.089921474456787
    9. 'chain' → logprob: -6.339921474456787
    10. 'segments' → logprob: -6.589921474456787

Token 213: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4944763779640198
    2. 'e' → logprob: -1.619476318359375
    3. 'équ' → logprob: -2.744476318359375
    4. 'quences' → logprob: -3.119476318359375
    5. 'eq' → logprob: -3.619476318359375
    6. 'tring' → logprob: -4.369476318359375
    7. '`' → logprob: -4.869476318359375
    8. '```' → logprob: -5.244476318359375
    9. '{' → logprob: -5.744476318359375
    10. 'eurs' → logprob: -5.869476318359375

Token 214: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.0004611743788700551
    2. 'quence' → logprob: -8.62546157836914
    3. 'ries' → logprob: -9.25046157836914
    4. 'q' → logprob: -9.62546157836914
    5. '```' → logprob: -10.62546157836914
    6. 'ences' → logprob: -10.75046157836914
    7. 'qu' → logprob: -11.12546157836914
    8. 'lections' → logprob: -12.00046157836914
    9. '**' → logprob: -12.12546157836914
    10. 'quent' → logprob: -12.37546157836914

Token 215: ' val' (ID: 1459)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.3421489894390106
    2. 'de' → logprob: -2.717149019241333
    3. 'a' → logprob: -3.592149019241333
    4. ' strictly' → logprob: -3.717149019241333
    5. '   ' → logprob: -3.842149019241333
    6. 'cro' → logprob: -3.967149019241333
    7. ' de' → logprob: -4.342148780822754
    8. ' strict' → logprob: -4.467148780822754
    9. '(' → logprob: -4.717148780822754
    10. ',' → logprob: -4.967148780822754

Token 216: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.009825863875448704
    2. 'ide' → logprob: -4.884825706481934
    3. 'id' → logprob: -6.884825706481934
    4. 'ues' → logprob: -7.884825706481934
    5. '```' → logprob: -8.509825706481934
    6. '[' → logprob: -8.509825706481934
    7. 'ables' → logprob: -9.384825706481934
    8. 'i' → logprob: -10.009825706481934
    9. '   ' → logprob: -10.384825706481934
    10. '#' → logprob: -10.884825706481934

Token 217: ' dont' (ID: 11562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04452883452177048
    2. 'dp' → logprob: -4.044528961181641
    3. 'indices' → logprob: -5.419528961181641
    4. ':' → logprob: -5.669528961181641
    5. 'valid' → logprob: -6.044528961181641
    6. '
' → logprob: -6.044528961181641
    7. 'count' → logprob: -6.169528961181641
    8. '.' → logprob: -6.419528961181641
    9. '<|end|>' → logprob: -6.794528961181641
    10. '    
' → logprob: -6.794528961181641

Token 218: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.10353143513202667
    2. 'le' → logprob: -3.3535313606262207
    3. ' la' → logprob: -3.3535313606262207
    4. 'l' → logprob: -4.728531360626221
    5. 'a' → logprob: -5.603531360626221
    6. 'len' → logprob: -5.603531360626221
    7. 'les' → logprob: -6.228531360626221
    8. ' le' → logprob: -6.353531360626221
    9. ' ' → logprob: -6.478531360626221
    10. 'leur' → logprob: -6.728531360626221

Token 219: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05075224116444588
    2. ' somme' → logprob: -3.3007521629333496
    3. 'som' → logprob: -5.42575216293335
    4. 'long' → logprob: -5.92575216293335
    5. ' longueur' → logprob: -7.05075216293335
    6. 'val' → logprob: -7.05075216293335
    7. 'produ' → logprob: -7.17575216293335
    8. 'xor' → logprob: -7.67575216293335
    9. 'X' → logprob: -7.80075216293335
    10. '```' → logprob: -8.175752639770508

Token 220: ' est' (ID: 893)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.916161298751831
    2. ' est' → logprob: -1.916161298751831
    3. '   ' → logprob: -2.041161298751831
    4. ' mod' → logprob: -2.666161298751831
    5. ' modulo' → logprob: -2.791161298751831
    6. '=' → logprob: -3.041161298751831
    7. ' is' → logprob: -3.666161298751831
    8. ' ' → logprob: -4.41616153717041
    9. 'est' → logprob: -4.54116153717041
    10. ' =' → logprob: -4.54116153717041

Token 221: ' divisible' (ID: 167813)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47056910395622253
    2. ' divisible' → logprob: -1.220569133758545
    3. 'div' → logprob: -3.345569133758545
    4. ' ' → logprob: -3.470569133758545
    5. '%' → logprob: -5.845569133758545
    6. '   ' → logprob: -6.220569133758545
    7. 'con' → logprob: -6.345569133758545
    8. 'multip' → logprob: -6.845569133758545
    9. '```' → logprob: -7.095569133758545
    10. 'mod' → logprob: -7.345569133758545

Token 222: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2648696005344391
    2. 'par' → logprob: -1.7648695707321167
    3. '10' → logprob: -3.3898696899414062
    4. 'by' → logprob: -3.7648696899414062
    5. ' par' → logprob: -6.389869689941406
    6. '```' → logprob: -6.889869689941406
    7. '#' → logprob: -7.264869689941406
    8. '7' → logprob: -7.889869689941406
    9. '       ' → logprob: -9.139869689941406
    10. '    ' → logprob: -9.139869689941406

Token 223: ' Q' (ID: 1486)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5064129829406738
    2. '3' → logprob: -1.3814129829406738
    3. 'Q' → logprob: -2.756412982940674
    4. '201' → logprob: -4.006412982940674
    5. '11' → logprob: -4.131412982940674
    6. '13' → logprob: -4.256412982940674
    7. '5' → logprob: -5.381412982940674
    8. '17' → logprob: -5.381412982940674
    9. '9' → logprob: -5.506412982940674
    10. '25' → logprob: -6.131412982940674

Token 224: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30192652344703674
    2. '
' → logprob: -1.9269264936447144
    3. 'dp' → logprob: -3.301926612854004
    4. 'count' → logprob: -3.676926612854004
    5. '    
' → logprob: -4.676926612854004
    6. '.' → logprob: -5.426926612854004
    7. ':' → logprob: -5.551926612854004
    8. 'valid' → logprob: -5.676926612854004
    9. ' dp' → logprob: -5.801926612854004
    10. '    ' → logprob: -5.926926612854004

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029788101091980934
    2. 'dp' → logprob: -4.654788017272949
    3. '
' → logprob: -5.154788017272949
    4. ' dp' → logprob: -5.529788017272949
    5. '<|end|>' → logprob: -6.154788017272949
    6. '    
' → logprob: -6.654788017272949
    7. ' valid' → logprob: -6.904788017272949
    8. 'count' → logprob: -6.904788017272949
    9. 'valid' → logprob: -6.904788017272949
    10. '    ' → logprob: -7.529788017272949

Token 226: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4636589288711548
    2. ' dp' → logprob: -1.2136589288711548
    3. '   ' → logprob: -4.088658809661865
    4. 'from' → logprob: -4.338658809661865
    5. 'prefix' → logprob: -4.463658809661865
    6. 'count' → logprob: -4.963658809661865
    7. ' from' → logprob: -4.963658809661865
    8. 'valid' → logprob: -5.088658809661865
    9. ' valid' → logprob: -5.213658809661865
    10. ' prefix' → logprob: -6.588658809661865

Token 227: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5360957980155945
    2. ' dp' → logprob: -0.9110957980155945
    3. 'from' → logprob: -5.03609561920166
    4. ' from' → logprob: -5.66109561920166
    5. 'prefix' → logprob: -6.53609561920166
    6. 'mod' → logprob: -8.28609561920166
    7. ' prefix' → logprob: -8.41109561920166
    8. ' mod' → logprob: -8.66109561920166
    9. 'count' → logprob: -9.28609561920166
    10. '   ' → logprob: -9.41109561920166

Token 228: ' considère' (ID: 176437)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.7324200868606567
    2. 'dp' → logprob: -1.8574200868606567
    3. 'def' → logprob: -2.357419967651367
    4. ' =' → logprob: -2.357419967651367
    5. 'continue' → logprob: -2.482419967651367
    6. ' a' → logprob: -2.607419967651367
    7. 'from' → logprob: -2.982419967651367
    8. 'a' → logprob: -3.107419967651367
    9. '=' → logprob: -3.232419967651367
    10. ' dp' → logprob: -3.982419967651367

Token 229: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.169792652130127
    2. ' les' → logprob: -1.294792652130127
    3. ' que' → logprob: -2.419792652130127
    4. ' un' → logprob: -3.169792652130127
    5. ' l' → logprob: -3.294792652130127
    6. ' une' → logprob: -3.544792652130127
    7. 'a' → logprob: -3.544792652130127
    8. ' le' → logprob: -3.544792652130127
    9. ' ' → logprob: -3.794792652130127
    10. ' a' → logprob: -3.919792652130127

Token 230: ' seuls' (ID: 115488)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1530943065881729
    2. ' dp' → logprob: -2.5280942916870117
    3. 'a' → logprob: -4.528094291687012
    4. 'mod' → logprob: -5.028094291687012
    5. 'val' → logprob: -5.653094291687012
    6. ' rest' → logprob: -5.903094291687012
    7. ' subse' → logprob: -6.028094291687012
    8. ' mod' → logprob: -6.153094291687012
    9. 'DP' → logprob: -6.278094291687012
    10. 'def' → logprob: -6.403094291687012

Token 231: ' i' (ID: 575)
  Prédit: ' chiffres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chiffres' → logprob: -0.8998510241508484
    2. ' éléments' → logprob: -1.7748510837554932
    3. ' digits' → logprob: -2.149851083755493
    4. 'digits' → logprob: -2.524851083755493
    5. ' indices' → logprob: -2.649851083755493
    6. ' nombres' → logprob: -2.899851083755493
    7. 'indices' → logprob: -3.774851083755493
    8. 'a' → logprob: -3.899851083755493
    9. ' tokens' → logprob: -4.649850845336914
    10. ' a' → logprob: -4.774850845336914

Token 232: ' avec' (ID: 3937)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.612788438796997
    2. 'indices' → logprob: -1.862788438796997
    3. '+' → logprob: -2.237788438796997
    4. ',' → logprob: -2.362788438796997
    5. ' indices' → logprob: -2.737788438796997
    6. ' in' → logprob: -2.862788438796997
    7. ' =' → logprob: -2.987788438796997
    8. ' +' → logprob: -3.112788438796997
    9. ' for' → logprob: -3.237788438796997
    10. ' <' → logprob: -3.862788438796997

Token 233: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4531102776527405
    2. ' a' → logprob: -1.0781102180480957
    3. ' ' → logprob: -4.578110218048096
    4. '0' → logprob: -5.078110218048096
    5. ' i' → logprob: -5.453110218048096
    6. 'i' → logprob: -5.953110218048096
    7. ' (' → logprob: -9.328110694885254
    8. '1' → logprob: -9.578110694885254
    9. '(a' → logprob: -9.953110694885254
    10. 'value' → logprob: -10.390610694885254

Token 234: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002800471556838602
    2. '[' → logprob: -9.125280380249023
    3. 'i' → logprob: -9.250280380249023
    4. ' [' → logprob: -10.250280380249023
    5. ' i' → logprob: -11.500280380249023
    6. ' ' → logprob: -12.500280380249023
    7. '[a' → logprob: -12.500280380249023
    8. '```' → logprob: -12.625280380249023
    9. '[j' → logprob: -12.875280380249023
    10. '[
' → logprob: -12.875280380249023

Token 235: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023795422166585922
    2. ']==' → logprob: -5.0237956047058105
    3. '[i' → logprob: -5.0237956047058105
    4. ']>=' → logprob: -5.2737956047058105
    5. ']>' → logprob: -6.1487956047058105
    6. ' ]' → logprob: -6.8987956047058105
    7. '[' → logprob: -7.8987956047058105
    8. ']=' → logprob: -8.148795127868652
    9. ']<=' → logprob: -8.148795127868652
    10. ']<' → logprob: -9.023795127868652

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026006263215094805
    2. ' ' → logprob: -6.12760066986084
    3. '-' → logprob: -7.87760066986084
    4. ' -' → logprob: -11.62760066986084
    5. 'a' → logprob: -12.00260066986084
    6. '9' → logprob: -12.12760066986084
    7. '1' → logprob: -12.37760066986084
    8. '```' → logprob: -13.19010066986084
    9. 'None' → logprob: -13.75260066986084
    10. '7' → logprob: -13.87760066986084

Token 237: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14458833634853363
    2. 'dp' → logprob: -3.0195882320404053
    3. '
' → logprob: -3.1445882320404053
    4. 'valid' → logprob: -4.269588470458984
    5. '    
' → logprob: -4.519588470458984
    6. 'indices' → logprob: -5.019588470458984
    7. ' dp' → logprob: -5.894588470458984
    8. 'count' → logprob: -6.519588470458984
    9. ' valid' → logprob: -6.519588470458984
    10. '  
' → logprob: -7.644588470458984

Token 238: 'pas' (ID: 21122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010737698525190353
    2. ' )' → logprob: -4.760737895965576
    3. ' or' → logprob: -7.385737895965576
    4. ').' → logprob: -7.510737895965576
    5. '   ' → logprob: -8.385737419128418
    6. ')
' → logprob: -8.885737419128418
    7. ' and' → logprob: -9.010737419128418
    8. '),' → logprob: -9.135737419128418
    9. 'or' → logprob: -9.635737419128418
    10. ' ' → logprob: -9.885737419128418

Token 239: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8589485883712769
    2. '0' → logprob: -1.7339485883712769
    3. ')' → logprob: -1.8589485883712769
    4. 'de' → logprob: -2.6089487075805664
    5. ' ' → logprob: -3.1089487075805664
    6. '=' → logprob: -3.7339487075805664
    7. 'd' → logprob: -3.9839487075805664
    8. ' a' → logprob: -4.233948707580566
    9. 'a' → logprob: -4.358948707580566
    10. 'contin' → logprob: -4.608948707580566

Token 240: ' zéro' (ID: 182040)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.1991899162530899
    2. 'leading' → logprob: -2.0741899013519287
    3. '0' → logprob: -3.8241899013519287
    4. ' zéro' → logprob: -4.699190139770508
    5. 'z' → logprob: -4.824190139770508
    6. ' zeros' → logprob: -5.824190139770508
    7. 'zero' → logprob: -5.824190139770508
    8. ' zero' → logprob: -6.074190139770508
    9. 'zeros' → logprob: -6.449190139770508
    10. ' z' → logprob: -6.449190139770508

Token 241: ' initial' (ID: 4871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0071721128188073635
    2. '),' → logprob: -6.382172107696533
    3. ' )' → logprob: -6.507172107696533
    4. 's' → logprob: -6.632172107696533
    5. '):' → logprob: -6.632172107696533
    6. ').' → logprob: -8.007172584533691
    7. '<|end|>' → logprob: -8.882172584533691
    8. ',' → logprob: -9.132172584533691
    9. '   ' → logprob: -9.132172584533691
    10. 'indices' → logprob: -9.257172584533691

Token 242: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13204023241996765
    2. 'e' → logprob: -3.38204026222229
    3. 'isé' → logprob: -4.007040023803711
    4. '),' → logprob: -4.132040023803711
    5. 'i' → logprob: -4.382040023803711
    6. '):' → logprob: -4.882040023803711
    7. '0' → logprob: -5.007040023803711
    8. 'es' → logprob: -5.132040023803711
    9. 'a' → logprob: -5.882040023803711
    10. '   ' → logprob: -6.132040023803711

Token 243: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6805418729782104
    2. ' dp' → logprob: -1.0555418729782104
    3. '   ' → logprob: -2.3055419921875
    4. ' 
' → logprob: -4.5555419921875
    5. '
' → logprob: -4.9305419921875
    6. 'count' → logprob: -5.5555419921875
    7. '    
' → logprob: -5.8055419921875
    8. ' from' → logprob: -6.4305419921875
    9. ' valid' → logprob: -6.5555419921875
    10. ' ' → logprob: -6.5555419921875

Token 244: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3160616159439087
    2. ' dp' → logprob: -2.066061496734619
    3. 'dp' → logprob: -2.066061496734619
    4. ' 
' → logprob: -5.691061496734619
    5. '    ' → logprob: -6.066061496734619
    6. ' ' → logprob: -6.191061496734619
    7. '    
' → logprob: -6.191061496734619
    8. ' valid' → logprob: -6.441061496734619
    9. 'count' → logprob: -7.316061496734619
    10. ')' → logprob: -7.316061496734619

Token 245: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.148426353931427
    2. '   ' → logprob: -2.2734262943267822
    3. ' dp' → logprob: -4.398426532745361
    4. 'from' → logprob: -4.773426532745361
    5. 'count' → logprob: -5.398426532745361
    6. 'valid' → logprob: -5.523426532745361
    7. 'freq' → logprob: -6.398426532745361
    8. 'counts' → logprob: -7.273426532745361
    9. ' from' → logprob: -7.523426532745361
    10. 'cnt' → logprob: -7.648426532745361

Token 246: ' ét' (ID: 4976)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4718942940235138
    2. ' =' → logprob: -1.8468942642211914
    3. '=' → logprob: -3.3468942642211914
    4. 'continue' → logprob: -3.3468942642211914
    5. ' continue' → logprob: -3.5968942642211914
    6. 'dp' → logprob: -4.096894264221191
    7. 'from' → logprob: -4.221894264221191
    8. '#' → logprob: -4.596894264221191
    9. 'count' → logprob: -4.721894264221191
    10. 'def' → logprob: -4.846894264221191

Token 247: 'ud' (ID: 527)
  Prédit: 'endre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -1.0574678182601929
    2. 'end' → logprob: -1.6824678182601929
    3. 'ant' → logprob: -2.3074679374694824
    4. 'ab' → logprob: -2.4324679374694824
    5. 'ud' → logprob: -2.8074679374694824
    6. 'endant' → logprob: -3.4324679374694824
    7. 'endue' → logprob: -3.8074679374694824
    8. 'ale' → logprob: -4.057467937469482
    9. 'ends' → logprob: -4.432467937469482
    10. 't' → logprob: -4.557467937469482

Token 248: 'ie' (ID: 396)
  Prédit: 'ud'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.44885173439979553
    2. 'ude' → logprob: -1.0738517045974731
    3. 'udi' → logprob: -5.323851585388184
    4. 'udit' → logprob: -5.698851585388184
    5. 'die' → logprob: -5.823851585388184
    6. 'udiant' → logprob: -5.823851585388184
    7. 'u' → logprob: -6.823851585388184
    8. 'ide' → logprob: -7.073851585388184
    9. 'uie' → logprob: -7.948851585388184
    10. 'e' → logprob: -8.073851585388184

Token 249: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0267970561981201
    2. '   ' → logprob: -1.1517970561981201
    3. ' les' → logprob: -3.15179705619812
    4. ' i' → logprob: -3.40179705619812
    5. 'a' → logprob: -3.52679705619812
    6. ' l' → logprob: -3.65179705619812
    7. 'dp' → logprob: -3.77679705619812
    8. 'la' → logprob: -3.90179705619812
    9. 'i' → logprob: -3.90179705619812
    10. ' ' → logprob: -4.151797294616699

Token 250: ' nombre' (ID: 9733)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -1.2706738710403442
    2. 'dp' → logprob: -1.6456738710403442
    3. ' reste' → logprob: -1.8956738710403442
    4. 'mod' → logprob: -3.1456737518310547
    5. 's' → logprob: -3.3956737518310547
    6. 'a' → logprob: -3.3956737518310547
    7. 'len' → logprob: -3.5206737518310547
    8. ' code' → logprob: -3.6456737518310547
    9. ' dp' → logprob: -4.145673751831055
    10. 'max' → logprob: -4.520673751831055

Token 251: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8162106275558472
    2. ' des' → logprob: -1.1912106275558472
    3. ' de' → logprob: -1.9412106275558472
    4. 's' → logprob: -3.5662107467651367
    5. 'def' → logprob: -3.9412107467651367
    6. 'des' → logprob: -4.316210746765137
    7. '_des' → logprob: -5.066210746765137
    8. 'import' → logprob: -5.191210746765137
    9. ' of' → logprob: -5.316210746765137
    10. '```' → logprob: -5.441210746765137

Token 252: ' sub' (ID: 1543)
  Prédit: ' subse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subse' → logprob: -1.3432639837265015
    2. ' sous' → logprob: -1.4682639837265015
    3. 's' → logprob: -1.7182639837265015
    4. 'i' → logprob: -2.093264102935791
    5. 'indices' → logprob: -2.718264102935791
    6. ' i' → logprob: -2.968264102935791
    7. 'a' → logprob: -3.843264102935791
    8. ' indices' → logprob: -3.968264102935791
    9. 'sub' → logprob: -4.843264102935791
    10. ' a' → logprob: -4.968264102935791

Token 253: 'arrays' (ID: 158630)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.020771127194166183
    2. 's' → logprob: -4.520771026611328
    3. 'sé' → logprob: -5.270771026611328
    4. 'seq' → logprob: -6.645771026611328
    5. 'sequence' → logprob: -7.020771026611328
    6. 'quences' → logprob: -7.145771026611328
    7. '_sequences' → logprob: -7.395771026611328
    8. ' sequences' → logprob: -8.270771026611328
    9. 'strings' → logprob: -9.020771026611328
    10. '   ' → logprob: -9.270771026611328

Token 254: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0426459312438965
    2. ',' → logprob: -1.7926459312438965
    3. 'a' → logprob: -2.5426459312438965
    4. ' =' → logprob: -2.7926459312438965
    5. '=' → logprob: -3.5426459312438965
    6. ' i' → logprob: -3.5426459312438965
    7. ')' → logprob: -3.5426459312438965
    8. 'i' → logprob: -3.6676459312438965
    9. 'with' → logprob: -3.6676459312438965
    10. '<|end|>' → logprob: -3.7926459312438965

Token 255: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04897133633494377
    2. 'a' → logprob: -4.673971176147461
    3. 'i' → logprob: -4.798971176147461
    4. '   ' → logprob: -5.173971176147461
    5. ' )' → logprob: -5.298971176147461
    6. 'j' → logprob: -5.548971176147461
    7. ' i' → logprob: -5.673971176147461
    8. ',' → logprob: -6.673971176147461
    9. '```' → logprob: -6.673971176147461
    10. ' j' → logprob: -6.923971176147461

Token 256: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8115436434745789
    2. ')' → logprob: -1.9365437030792236
    3. ',j' → logprob: -1.9365437030792236
    4. ' <=' → logprob: -2.5615437030792236
    5. '<=' → logprob: -2.8115437030792236
    6. '+' → logprob: -3.4365437030792236
    7. '   ' → logprob: -4.0615434646606445
    8. ' ,' → logprob: -4.4365434646606445
    9. ',
' → logprob: -4.5615434646606445
    10. '=' → logprob: -4.5615434646606445

Token 257: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004210532642900944
    2. '):' → logprob: -6.629210472106934
    3. ',' → logprob: -6.754210472106934
    4. '),' → logprob: -7.379210472106934
    5. ':' → logprob: -7.879210472106934
    6. 's' → logprob: -8.379210472106934
    7. ' avec' → logprob: -8.879210472106934
    8. 'with' → logprob: -9.629210472106934
    9. '   ' → logprob: -10.504210472106934
    10. ')
' → logprob: -10.629210472106934

Token 258: ' tels' (ID: 62007)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9469839334487915
    2. ',' → logprob: -1.1969839334487915
    3. ')' → logprob: -2.821983814239502
    4. 'for' → logprob: -2.821983814239502
    5. ' for' → logprob: -3.321983814239502
    6. 'with' → logprob: -3.446983814239502
    7. ' où' → logprob: -3.946983814239502
    8. '#' → logprob: -4.321983814239502
    9. '=' → logprob: -4.446983814239502
    10. ' with' → logprob: -4.446983814239502

Token 259: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00856114737689495
    2. '   ' → logprob: -5.008561134338379
    3. ' que' → logprob: -7.508561134338379
    4. '       ' → logprob: -7.883561134338379
    5. 'qu' → logprob: -8.258561134338379
    6. 'that' → logprob: -8.258561134338379
    7. '```' → logprob: -8.383561134338379
    8. 'j' → logprob: -10.383561134338379
    9. '           ' → logprob: -10.508561134338379
    10. 'def' → logprob: -11.258561134338379

Token 260: ' concat' (ID: 73950)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20389023423194885
    2. '(a' → logprob: -2.453890323638916
    3. '(' → logprob: -3.703890323638916
    4. 'sum' → logprob: -3.953890323638916
    5. 'a' → logprob: -4.203890323638916
    6. ' j' → logprob: -5.203890323638916
    7. '(sum' → logprob: -5.328890323638916
    8. '(i' → logprob: -5.453890323638916
    9. ' a' → logprob: -5.578890323638916
    10. ' la' → logprob: -5.578890323638916

Token 261: '(a' (ID: 6271)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5600742101669312
    2. 'en' → logprob: -1.3100742101669312
    3. 'én' → logprob: -2.4350743293762207
    4. 'entation' → logprob: -3.3100743293762207
    5. '       ' → logprob: -5.310074329376221
    6. '[i' → logprob: -5.685074329376221
    7. '(a' → logprob: -5.810074329376221
    8. 'ent' → logprob: -6.185074329376221
    9. ' =' → logprob: -6.185074329376221
    10. 'ené' → logprob: -6.310074329376221

Token 262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0502011738717556
    2. '[j' → logprob: -3.050201177597046
    3. '[' → logprob: -6.675200939178467
    4. '[a' → logprob: -8.425201416015625
    5. '[I' → logprob: -10.925201416015625
    6. ',[' → logprob: -11.050201416015625
    7. ')[' → logprob: -11.175201416015625
    8. ')' → logprob: -11.425201416015625
    9. ',i' → logprob: -11.550201416015625
    10. '[k' → logprob: -12.050201416015625

Token 263: '..' (ID: 485)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.802491307258606
    2. '[j' → logprob: -1.427491307258606
    3. ',j' → logprob: -1.552491307258606
    4. ',' → logprob: -2.9274911880493164
    5. ':j' → logprob: -3.4274911880493164
    6. '[i' → logprob: -4.927491188049316
    7. '],[' → logprob: -6.552491188049316
    8. ' ,' → logprob: -7.052491188049316
    9. ',i' → logprob: -7.177491188049316
    10. '][' → logprob: -7.427491188049316

Token 264: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006866985349915922
    2. 'i' → logprob: -8.000686645507812
    3. ',' → logprob: -9.000686645507812
    4. ' j' → logprob: -9.625686645507812
    5. '   ' → logprob: -10.000686645507812
    6. ':j' → logprob: -10.125686645507812
    7. ',j' → logprob: -10.750686645507812
    8. ']' → logprob: -10.750686645507812
    9. ')' → logprob: -11.750686645507812
    10. '],' → logprob: -11.875686645507812

Token 265: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003980184264946729
    2. '],' → logprob: -9.250397682189941
    3. '[i' → logprob: -9.750397682189941
    4. '])+' → logprob: -9.750397682189941
    5. ']' → logprob: -10.000397682189941
    6. ']+' → logprob: -10.250397682189941
    7. ')' → logprob: -10.375397682189941
    8. '])
' → logprob: -11.500397682189941
    9. '   ' → logprob: -11.625397682189941
    10. 'a' → logprob: -12.125397682189941

Token 266: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2026071399450302
    2. '%' → logprob: -1.7026071548461914
    3. ')' → logprob: -7.327607154846191
    4. ' ==' → logprob: -8.827607154846191
    5. ')%' → logprob: -9.452607154846191
    6. ' ' → logprob: -9.827607154846191
    7. ' <=' → logprob: -10.077607154846191
    8. '==' → logprob: -10.702607154846191
    9. '<|end|>' → logprob: -10.952607154846191
    10. '%i' → logprob: -11.077607154846191

Token 267: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0015056940028443933
    2. ' Q' → logprob: -6.5015058517456055
    3. '
' → logprob: -14.126505851745605
    4. 'len' → logprob: -14.251505851745605
    5. '(Q' → logprob: -14.751505851745605
    6. ')' → logprob: -15.376505851745605
    7. ' ' → logprob: -15.501505851745605
    8. '{' → logprob: -15.751505851745605
    9. '(' → logprob: -15.876505851745605
    10. 'q' → logprob: -16.25150489807129

Token 268: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10023557394742966
    2. '==' → logprob: -2.3502354621887207
    3. '=' → logprob: -10.975235939025879
    4. ')' → logprob: -12.725235939025879
    5. ' =' → logprob: -13.100235939025879
    6. ')==' → logprob: -13.475235939025879
    7. '   ' → logprob: -13.975235939025879
    8. ' ' → logprob: -13.975235939025879
    9. ' !=' → logprob: -13.975235939025879
    10. '()==' → logprob: -14.225235939025879

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.625003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '=' → logprob: -19.375003814697266
    6. '۰' → logprob: -20.250003814697266
    7. '[' → logprob: -21.250003814697266
    8. 'int' → logprob: -21.437503814697266
    9. '000' → logprob: -21.625003814697266
    10. '(' → logprob: -21.812503814697266

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.5
    4. '۰' → logprob: -20.0
    5. '   ' → logprob: -20.25
    6. '=' → logprob: -20.375
    7. '[' → logprob: -20.375
    8. '000' → logprob: -21.625
    9. '(' → logprob: -21.625
    10. 'int' → logprob: -21.6875

Token 271: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05199098959565163
    2. 'dp' → logprob: -3.3019909858703613
    3. '
' → logprob: -5.301990985870361
    4. 'from' → logprob: -5.676990985870361
    5. '    
' → logprob: -6.301990985870361
    6. 'mod' → logprob: -6.301990985870361
    7. ' dp' → logprob: -7.801990985870361
    8. '#' → logprob: -8.17699146270752
    9. ' from' → logprob: -8.55199146270752
    10. 'prefix' → logprob: -8.80199146270752

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019220169633626938
    2. 'dp' → logprob: -4.894220352172852
    3. '
' → logprob: -5.269220352172852
    4. '    
' → logprob: -5.644220352172852
    5. 'mod' → logprob: -6.269220352172852
    6. 'prefix' → logprob: -8.394220352172852
    7. ' mod' → logprob: -9.144220352172852
    8. 'count' → logprob: -9.519220352172852
    9. 'from' → logprob: -9.894220352172852
    10. ' dp' → logprob: -9.894220352172852

Token 273: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24654465913772583
    2. 'pow' → logprob: -2.496544599533081
    3. 'prefix' → logprob: -3.371544599533081
    4. 'from' → logprob: -3.621544599533081
    5. 'mod' → logprob: -3.621544599533081
    6. '   ' → logprob: -3.871544599533081
    7. 'power' → logprob: -5.12154483795166
    8. 'count' → logprob: -5.24654483795166
    9. 'freq' → logprob: -5.62154483795166
    10. 'm' → logprob: -6.37154483795166

Token 274: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.457011878490448
    2. 'from' → logprob: -1.8320119380950928
    3. 'prefix' → logprob: -2.7070119380950928
    4. 'pow' → logprob: -2.8320119380950928
    5. 'mod' → logprob: -3.0820119380950928
    6. 'freq' → logprob: -4.832011699676514
    7. 'count' → logprob: -5.582011699676514
    8. '#' → logprob: -5.582011699676514
    9. 'power' → logprob: -5.707011699676514
    10. '   ' → logprob: -5.832011699676514

Token 275: 'it' (ID: 278)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8127797245979309
    2. 'ur' → logprob: -0.8127797245979309
    3. 'far' → logprob: -3.562779664993286
    4. 'rt' → logprob: -3.812779664993286
    5. 'ry' → logprob: -4.187779903411865
    6. 'l' → logprob: -4.437779903411865
    7. '   ' → logprob: -4.812779903411865
    8. 'rl' → logprob: -5.062779903411865
    9. 'rc' → logprob: -5.312779903411865
    10. 'u' → logprob: -5.562779903411865

Token 276: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.002436876296997
    2. 'from' → logprob: -2.377436876296997
    3. ' prefix' → logprob: -2.377436876296997
    4. 'dp' → logprob: -2.627436876296997
    5. 'pow' → logprob: -2.877436876296997
    6. 'count' → logprob: -3.002436876296997
    7. 'M' → logprob: -3.502436876296997
    8. 'p' → logprob: -4.002436637878418
    9. 'mod' → logprob: -4.127436637878418
    10. 'def' → logprob: -4.377436637878418

Token 277: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.013447964563965797
    2. ' =' → logprob: -4.7634477615356445
    3. '_re' → logprob: -6.0134477615356445
    4. '_sum' → logprob: -7.2634477615356445
    5. '=' → logprob: -7.5134477615356445
    6. 'mod' → logprob: -7.8884477615356445
    7. '_rem' → logprob: -8.638447761535645
    8. '_s' → logprob: -9.138447761535645
    9. 'mods' → logprob: -9.263447761535645
    10. 's' → logprob: -9.638447761535645

Token 278: '[k' (ID: 14298)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04090673476457596
    2. '=' → logprob: -3.2909066677093506
    3. 's' → logprob: -6.16590690612793
    4. 'es' → logprob: -7.79090690612793
    5. '=[' → logprob: -9.16590690612793
    6. '_counts' → logprob: -9.16590690612793
    7. '[' → logprob: -10.16590690612793
    8. '_count' → logprob: -10.66590690612793
    9. '_mod' → logprob: -10.79090690612793
    10. '   ' → logprob: -11.29090690612793

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019531534053385258
    2. ' ]' → logprob: -8.875195503234863
    3. ']=' → logprob: -10.375195503234863
    4. ']:' → logprob: -10.750195503234863
    5. 's' → logprob: -15.000195503234863
    6. ']
' → logprob: -15.250195503234863
    7. '],' → logprob: -15.375195503234863
    8. ']={' → logprob: -15.500195503234863
    9. ' =' → logprob: -15.625195503234863
    10. ')' → logprob: -15.625195503234863

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701797485351562
    2. '=' → logprob: -2.1270179748535156
    3. ' =[' → logprob: -10.002017974853516
    4. '=[' → logprob: -10.252017974853516
    5. '[' → logprob: -12.002017974853516
    6. '=[]' → logprob: -13.502017974853516
    7. ',' → logprob: -14.502017974853516
    8. ':' → logprob: -15.252017974853516
    9. ' ' → logprob: -15.377017974853516
    10. 's' → logprob: -15.752017974853516

Token 281: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0296353530138731
    2. ' ' → logprob: -4.404635429382324
    3. '(' → logprob: -4.529635429382324
    4. ' (' → logprob: -5.154635429382324
    5. '(prefix' → logprob: -8.654635429382324
    6. '(a' → logprob: -9.779635429382324
    7. '(con' → logprob: -10.279635429382324
    8. 'prefix' → logprob: -10.654635429382324
    9. '((' → logprob: -10.779635429382324
    10. '   ' → logprob: -11.154635429382324

Token 282: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19511881470680237
    2. '%' → logprob: -2.9451189041137695
    3. 's' → logprob: -2.9451189041137695
    4. ' %' → logprob: -3.9451189041137695
    5. ' des' → logprob: -4.9451189041137695
    6. '(k' → logprob: -5.1951189041137695
    7. '=' → logprob: -5.6951189041137695
    8. '[k' → logprob: -5.8201189041137695
    9. '[' → logprob: -5.9451189041137695
    10. '_mod' → logprob: -6.0701189041137695

Token 283: '[' (ID: 58)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.22326375544071198
    2. '[' → logprob: -3.473263740539551
    3. 'k' → logprob: -3.473263740539551
    4. '(k' → logprob: -3.848263740539551
    5. '   ' → logprob: -4.098263740539551
    6. '[:' → logprob: -4.098263740539551
    7. 'def' → logprob: -4.348263740539551
    8. 's' → logprob: -4.473263740539551
    9. ' =' → logprob: -4.473263740539551
    10. '=' → logprob: -5.348263740539551

Token 284: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3871147334575653
    2. '[:' → logprob: -2.0121147632598877
    3. '[k' → logprob: -2.3871147632598877
    4. 'prefix' → logprob: -3.5121147632598877
    5. 'a' → logprob: -4.262114524841309
    6. '[' → logprob: -4.262114524841309
    7. '(k' → logprob: -5.137114524841309
    8. '[i' → logprob: -5.637114524841309
    9. '0' → logprob: -5.637114524841309
    10. '(' → logprob: -5.762114524841309

Token 285: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4255891740322113
    2. ':k' → logprob: -1.8005892038345337
    3. 'k' → logprob: -2.175589084625244
    4. '...' → logprob: -3.925589084625244
    5. '..' → logprob: -4.050589084625244
    6. ']%' → logprob: -4.675589084625244
    7. ' :' → logprob: -5.300589084625244
    8. ':' → logprob: -5.300589084625244
    9. '[k' → logprob: -5.925589084625244
    10. '][' → logprob: -6.425589084625244

Token 286: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.931863051955588e-05
    2. ' k' → logprob: -10.625059127807617
    3. ']' → logprob: -10.875059127807617
    4. '   ' → logprob: -12.375059127807617
    5. '
' → logprob: -12.500059127807617
    6. '(k' → logprob: -13.000059127807617
    7. '[k' → logprob: -14.000059127807617
    8. '```' → logprob: -14.125059127807617
    9. ' ' → logprob: -14.375059127807617
    10. ')' → logprob: -14.500059127807617

Token 287: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05113028734922409
    2. ']%' → logprob: -3.4261302947998047
    3. 'k' → logprob: -4.301130294799805
    4. '%' → logprob: -7.551130294799805
    5. '[k' → logprob: -7.551130294799805
    6. '   ' → logprob: -7.801130294799805
    7. '])' → logprob: -7.926130294799805
    8. '][' → logprob: -8.051130294799805
    9. '[' → logprob: -8.426130294799805
    10. '...' → logprob: -8.426130294799805

Token 288: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030819030478596687
    2. ']' → logprob: -3.5308189392089844
    3. ' k' → logprob: -7.155818939208984
    4. ' ]' → logprob: -9.530818939208984
    5. '   ' → logprob: -9.530818939208984
    6. ' ' → logprob: -9.655818939208984
    7. 'i' → logprob: -11.155818939208984
    8. ')' → logprob: -11.280818939208984
    9. '1' → logprob: -11.780818939208984
    10. ']+' → logprob: -11.905818939208984

Token 289: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01834975741803646
    2. ']%' → logprob: -4.143349647521973
    3. ' ]' → logprob: -7.143349647521973
    4. '])' → logprob: -7.143349647521973
    5. '   ' → logprob: -8.393349647521973
    6. ')' → logprob: -8.518349647521973
    7. ']
' → logprob: -9.268349647521973
    8. '%' → logprob: -10.143349647521973
    9. ' ' → logprob: -11.143349647521973
    10. 'k' → logprob: -11.143349647521973

Token 290: ' mod' (ID: 1812)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10114315152168274
    2. '=' → logprob: -2.8511431217193604
    3. '   ' → logprob: -3.4761431217193604
    4. ']' → logprob: -6.1011433601379395
    5. '%' → logprob: -6.4761433601379395
    6. ',' → logprob: -6.7261433601379395
    7. ')' → logprob: -7.7261433601379395
    8. '[' → logprob: -7.8511433601379395
    9. 'def' → logprob: -7.9761433601379395
    10. '=[' → logprob: -8.476142883300781

Token 291: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0009057454881258309
    2. ' Q' → logprob: -7.375905513763428
    3. '(Q' → logprob: -8.250905990600586
    4. 'k' → logprob: -11.625905990600586
    5. '   ' → logprob: -12.500905990600586
    6. '(' → logprob: -12.750905990600586
    7. ' (' → logprob: -14.375905990600586
    8. ' ' → logprob: -14.750905990600586
    9. '(k' → logprob: -14.875905990600586
    10. ',Q' → logprob: -14.875905990600586

Token 292: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03542013466358185
    2. '=' → logprob: -4.035419940948486
    3. '   ' → logprob: -4.160419940948486
    4. '
' → logprob: -8.035420417785645
    5. ' =
' → logprob: -8.035420417785645
    6. '[' → logprob: -8.160420417785645
    7. '=[' → logprob: -8.535420417785645
    8. ':' → logprob: -8.660420417785645
    9. '=
' → logprob: -10.035420417785645
    10. 'def' → logprob: -10.535420417785645

Token 293: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3917037546634674
    2. ':' → logprob: -2.5167038440704346
    3. '   ' → logprob: -2.6417038440704346
    4. '=' → logprob: -2.6417038440704346
    5. '
' → logprob: -3.0167038440704346
    6. '[' → logprob: -3.5167038440704346
    7. ']' → logprob: -4.3917036056518555
    8. ':
' → logprob: -6.2667036056518555
    9. '```' → logprob: -6.6417036056518555
    10. 'prefix' → logprob: -7.1417036056518555

Token 294: ' prefix' (ID: 18633)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49786484241485596
    2. '   ' → logprob: -1.122864842414856
    3. 'prefix' (adapté à ' prefix') → logprob: -3.1228647232055664
    4. ' prefix' → logprob: -4.497864723205566
    5. ' =' → logprob: -4.997864723205566
    6. '    
' → logprob: -5.997864723205566
    7. ':' → logprob: -6.872864723205566
    8. '=' → logprob: -7.997864723205566
    9. ':
' → logprob: -8.497864723205566
    10. '(prefix' → logprob: -9.247864723205566

Token 295: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.128163257315464e-07
    2. '\' → logprob: -17.375
    3. ' _' → logprob: -17.375
    4. '_' → logprob: -17.625
    5. '_len' → logprob: -17.875
    6. '=_' → logprob: -17.875
    7. '_MOD' → logprob: -18.25
    8. '_max' → logprob: -18.25
    9. '_m' → logprob: -18.375
    10. ')_' → logprob: -18.375

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409719228744507
    2. ' =' → logprob: -0.9740971922874451
    3. '=[' → logprob: -11.47409725189209
    4. '[' → logprob: -11.72409725189209
    5. ' =[' → logprob: -13.59909725189209
    6. '=[]' → logprob: -15.97409725189209
    7. ']' → logprob: -16.599096298217773
    8. ',' → logprob: -16.974096298217773
    9. '＝' → logprob: -17.099096298217773
    10. ')' → logprob: -17.349096298217773

Token 297: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.130576806142926e-05
    2. ' [' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.750030517578125
    4. '0' → logprob: -18.250030517578125
    5. '([' → logprob: -18.875030517578125
    6. '[a' → logprob: -19.250030517578125
    7. '{' → logprob: -19.625030517578125
    8. 'a' → logprob: -19.750030517578125
    9. '=[' → logprob: -20.125030517578125
    10. '[n' → logprob: -20.250030517578125

Token 298: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '{' → logprob: -20.125
    4. ']' → logprob: -20.625
    5. '[' → logprob: -20.75
    6. '۰' → logprob: -20.75
    7. '   ' → logprob: -20.875
    8. '
' → logprob: -20.875
    9. '(' → logprob: -21.0
    10. '1' → logprob: -22.0

Token 299: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03837480768561363
    2. ']*(' → logprob: -3.288374900817871
    3. ']*' → logprob: -8.663374900817871
    4. '*(' → logprob: -9.663374900817871
    5. 'for' → logprob: -10.288374900817871
    6. ' for' → logprob: -10.538374900817871
    7. ']+' → logprob: -10.913374900817871
    8. ']
' → logprob: -12.163374900817871
    9. ' ]' → logprob: -12.663374900817871
    10. ' *' → logprob: -13.163374900817871

Token 300: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.5048530030981055e-06
    2. '(N' → logprob: -14.125001907348633
    3. ' N' → logprob: -14.875001907348633
    4. 'len' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.000001907348633
    6. 'n' → logprob: -18.875001907348633
    7. '	N' → logprob: -18.875001907348633
    8. '[N' → logprob: -19.000001907348633
    9. '
' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.625001907348633

Token 301: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2127087504486553e-05
    2. ' +' → logprob: -10.750021934509277
    3. '+
' → logprob: -14.375021934509277
    4. '
' → logprob: -18.250022888183594
    5. '+)' → logprob: -19.125022888183594
    6. '1' → logprob: -19.250022888183594
    7. ')' → logprob: -20.125022888183594
    8. '＋' → logprob: -20.125022888183594
    9. '+k' → logprob: -20.250022888183594
    10. '+n' → logprob: -20.750022888183594

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.375031471252441
    4. '
' → logprob: -18.375032424926758
    5. '2' → logprob: -18.375032424926758
    6. '１' → logprob: -18.500032424926758
    7. ')' → logprob: -18.500032424926758
    8. '```' → logprob: -18.500032424926758
    9. '  ' → logprob: -18.937532424926758
    10. '    ' → logprob: -19.812532424926758

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011070103384554386
    2. ')
' → logprob: -4.511070251464844
    3. ')
' → logprob: -10.761070251464844
    4. ')

' → logprob: -14.511070251464844
    5. ' )' → logprob: -15.761070251464844
    6. ']' → logprob: -16.636070251464844
    7. ')`' → logprob: -16.886070251464844
    8. '   ' → logprob: -17.136070251464844
    9. ')`
' → logprob: -17.386070251464844
    10. ')#' → logprob: -17.636070251464844

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023009134456515312
    2. 'for' → logprob: -3.8980090618133545
    3. ' for' → logprob: -6.648009300231934
    4. 'pow' → logprob: -7.648009300231934
    5. 'p' → logprob: -7.773009300231934
    6. 'power' → logprob: -9.273009300231934
    7. 'mult' → logprob: -9.523009300231934
    8. 'powers' → logprob: -11.023009300231934
    9. '    
' → logprob: -11.148009300231934
    10. 'current' → logprob: -11.398009300231934

Token 305: ' for' (ID: 395)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.35791534185409546
    2. 'power' → logprob: -1.6079154014587402
    3. 'for' (adapté à ' for') → logprob: -2.4829154014587402
    4. 'p' → logprob: -4.98291540145874
    5. '   ' → logprob: -5.60791540145874
    6. 'powers' → logprob: -5.98291540145874
    7. 'mult' → logprob: -7.23291540145874
    8. 'base' → logprob: -7.60791540145874
    9. 'pw' → logprob: -7.60791540145874
    10. ' pow' → logprob: -7.73291540145874

Token 306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014248007908463478
    2. ' i' → logprob: -4.264247894287109
    3. 'k' → logprob: -9.38924789428711
    4. ' k' → logprob: -14.51424789428711
    5. 'j' → logprob: -15.51424789428711
    6. '	i' → logprob: -17.63924789428711
    7. '   ' → logprob: -18.51424789428711
    8. 'x' → logprob: -18.76424789428711
    9. '_i' → logprob: -18.88924789428711
    10. ' ' → logprob: -18.88924789428711

Token 307: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009814761579036713
    2. 'in' → logprob: -4.634814739227295
    3. '   ' → logprob: -10.259815216064453
    4. ' ' → logprob: -11.259815216064453
    5. '1' → logprob: -12.259815216064453
    6. '+' → logprob: -13.259815216064453
    7. ',' → logprob: -13.884815216064453
    8. '  ' → logprob: -14.134815216064453
    9. '	in' → logprob: -14.634815216064453
    10. '    ' → logprob: -15.009815216064453

Token 308: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067201098427176476
    2. ' range' → logprob: -5.006720066070557
    3. '   ' → logprob: -12.756720542907715
    4. ' ' → logprob: -13.381720542907715
    5. '  ' → logprob: -15.881720542907715
    6. '(range' → logprob: -16.7567195892334
    7. '	range' → logprob: -17.2567195892334
    8. '    ' → logprob: -17.7567195892334
    9. '0' → logprob: -18.6317195892334
    10. '     ' → logprob: -18.8817195892334

Token 309: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04915884509682655
    2. '(N' → logprob: -3.049158811569214
    3. '1' → logprob: -7.549159049987793
    4. 'N' → logprob: -10.299159049987793
    5. 'range' → logprob: -11.674159049987793
    6. '   ' → logprob: -13.424159049987793
    7. ' ' → logprob: -14.424159049987793
    8. ' range' → logprob: -15.299159049987793
    9. ',N' → logprob: -16.549158096313477
    10. '(n' → logprob: -16.674158096313477

Token 310: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.678187906742096
    2. '):
' → logprob: -0.803187906742096
    3. '+' → logprob: -3.178187847137451
    4. '1' → logprob: -5.928187847137451
    5. '   ' → logprob: -8.67818832397461
    6. '):
' → logprob: -10.80318832397461
    7. '=' → logprob: -11.42818832397461
    8. ')' → logprob: -11.80318832397461
    9. '
' → logprob: -12.05318832397461
    10. ' +' → logprob: -12.67818832397461

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013108364073559642
    2. 'prefix' → logprob: -7.3763108253479
    3. ' prefix' → logprob: -7.8763108253479
    4. '```' → logprob: -8.751311302185059
    5. '   ' → logprob: -9.626311302185059
    6. '(prefix' → logprob: -9.751311302185059
    7. '[' → logprob: -12.376311302185059
    8. ',' → logprob: -12.751311302185059
    9. '        
' → logprob: -13.001311302185059
    10. '      ' → logprob: -13.501311302185059

Token 312: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.09681638330221176
    2. ' prefix' → logprob: -2.471816301345825
    3. '   ' → logprob: -5.221816539764404
    4. '       ' → logprob: -6.096816539764404
    5. '```' → logprob: -9.221816062927246
    6. '(prefix' → logprob: -9.971816062927246
    7. '           ' → logprob: -10.346816062927246
    8. '``' → logprob: -12.221816062927246
    9. '_prefix' → logprob: -13.096816062927246
    10. ' ' → logprob: -13.221816062927246

Token 313: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00021712594025302678
    2. '   ' → logprob: -8.62521743774414
    3. '[i' → logprob: -11.25021743774414
    4. 'mod' → logprob: -11.75021743774414
    5. '=' → logprob: -13.12521743774414
    6. '[' → logprob: -13.12521743774414
    7. ' _' → logprob: -13.25021743774414
    8. '       ' → logprob: -13.25021743774414
    9. '```' → logprob: -13.62521743774414
    10. 'a' → logprob: -14.50021743774414

Token 314: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.254911869764328
    2. ' =' → logprob: -1.5049118995666504
    3. '[i' → logprob: -6.25491189956665
    4. '[' → logprob: -7.75491189956665
    5. ')' → logprob: -8.754911422729492
    6. '=(' → logprob: -9.129911422729492
    7. ' =(' → logprob: -9.254911422729492
    8. '(' → logprob: -9.379911422729492
    9. ']' → logprob: -9.754911422729492
    10. '[(' → logprob: -10.629911422729492

Token 315: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007236333331093192
    2. ' +' → logprob: -7.250723838806152
    3. ']' → logprob: -11.750723838806152
    4. '1' → logprob: -12.375723838806152
    5. '+]' → logprob: -14.125723838806152
    6. ']+' → logprob: -15.125723838806152
    7. '=' → logprob: -15.875723838806152
    8. '+=' → logprob: -16.500722885131836
    9. '＋' → logprob: -17.000722885131836
    10. ']+=' → logprob: -17.125722885131836

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.00001335144043
    4. '```' → logprob: -15.50001335144043
    5. '=' → logprob: -15.87501335144043
    6. ')' → logprob: -15.87501335144043
    7. '0' → logprob: -16.25001335144043
    8. ']' → logprob: -17.06251335144043
    9. '<|end|>' → logprob: -17.18751335144043
    10. 'i' → logprob: -17.68751335144043

Token 317: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7980174422264099
    2. '=' → logprob: -0.9230174422264099
    3. ' =' → logprob: -2.0480175018310547
    4. ')' → logprob: -3.9230175018310547
    5. ']=' → logprob: -5.923017501831055
    6. ']=(' → logprob: -7.298017501831055
    7. ')=' → logprob: -8.673017501831055
    8. '=(' → logprob: -9.298017501831055
    9. ' ]' → logprob: -10.548017501831055
    10. ' )' → logprob: -11.298017501831055

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476604888215661
    2. ' =' → logprob: -6.002476692199707
    3. '=(' → logprob: -13.877476692199707
    4. '=

' → logprob: -18.37747573852539
    5. ' =(' → logprob: -18.50247573852539
    6. '=((' → logprob: -18.87747573852539
    7. '＝' → logprob: -19.25247573852539
    8. '=
' → logprob: -19.50247573852539
    9. ')' → logprob: -19.50247573852539
    10. ')=' → logprob: -19.62747573852539

Token 319: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.19484828412532806
    2. '(prefix' → logprob: -2.3198482990264893
    3. '(prev' → logprob: -4.06984806060791
    4. '(pre' → logprob: -4.19484806060791
    5. '(p' → logprob: -4.44484806060791
    6. '   ' → logprob: -4.69484806060791
    7. '(mod' → logprob: -5.06984806060791
    8. '(' → logprob: -5.31984806060791
    9. '((' → logprob: -6.69484806060791
    10. '(next' → logprob: -6.81984806060791

Token 320: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.001383805531077087
    2. 'prefix' → logprob: -6.6263837814331055
    3. ' (' → logprob: -10.001383781433105
    4. '(' → logprob: -12.751383781433105
    5. '(parent' → logprob: -13.626383781433105
    6. '(prev' → logprob: -13.876383781433105
    7. '((' → logprob: -13.876383781433105
    8. '(pre' → logprob: -13.876383781433105
    9. '(pref' → logprob: -14.001383781433105
    10. '(p' → logprob: -14.126383781433105

Token 321: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.190178904333152e-05
    2. '   ' → logprob: -11.875031471252441
    3. 'mod' → logprob: -12.125031471252441
    4. '[i' → logprob: -12.500031471252441
    5. ']' → logprob: -13.250031471252441
    6. '1' → logprob: -13.625031471252441
    7. ')' → logprob: -13.750031471252441
    8. '       ' → logprob: -13.875031471252441
    9. 'a' → logprob: -13.875031471252441
    10. '+' → logprob: -14.500031471252441

Token 322: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.375003814697266
    3. 'i' → logprob: -13.750003814697266
    4. '
' → logprob: -15.250003814697266
    5. '```' → logprob: -15.875003814697266
    6. ' [' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.125003814697266
    8. ')[' → logprob: -16.625003814697266
    9. '[
' → logprob: -16.625003814697266
    10. '[-' → logprob: -16.875003814697266

Token 323: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10021928697824478
    2. ' *' → logprob: -2.350219249725342
    3. '*a' → logprob: -11.9752197265625
    4. ' ' → logprob: -13.2252197265625
    5. '**' → logprob: -13.3502197265625
    6. ' ' → logprob: -13.4752197265625
    7. '()*' → logprob: -15.2252197265625
    8. '```' → logprob: -15.3502197265625
    9. 'a' → logprob: -15.6002197265625
    10. '
' → logprob: -15.9752197265625

Token 324: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -18.5
    4. '   ' → logprob: -19.5
    5. '100' → logprob: -20.25
    6. 'pow' → logprob: -20.375
    7. 'mod' → logprob: -21.375
    8. '```' → logprob: -21.375
    9. '

' → logprob: -22.75
    10. '1' → logprob: -23.125

Token 325: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07984612882137299
    2. ' +' → logprob: -2.579846143722534
    3. '+a' → logprob: -6.954845905303955
    4. 'a' → logprob: -13.829846382141113
    5. '+A' → logprob: -15.204846382141113
    6. '+
' → logprob: -15.579846382141113
    7. '＋' → logprob: -16.329845428466797
    8. '```' → logprob: -16.954845428466797
    9. '+x' → logprob: -17.079845428466797
    10. '
' → logprob: -17.329845428466797

Token 326: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004306692280806601
    2. ' a' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.625431060791016
    4. '	a' → logprob: -18.750431060791016
    5. '(a' → logprob: -20.750431060791016
    6. ')a' → logprob: -20.750431060791016
    7. '[a' → logprob: -21.000431060791016
    8. ''a' → logprob: -22.000431060791016
    9. ' ' → logprob: -22.125431060791016
    10. '
' → logprob: -22.375431060791016

Token 327: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. ' [' → logprob: -17.5
    4. '[
' → logprob: -19.875
    5. '[a' → logprob: -20.125
    6. '[I' → logprob: -20.625
    7. '```' → logprob: -20.75
    8. 'i' → logprob: -20.875
    9. ')[' → logprob: -21.125
    10. '[j' → logprob: -21.25

Token 328: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011021859245374799
    2. ' )' → logprob: -9.250110626220703
    3. ')%' → logprob: -11.250110626220703
    4. '])' → logprob: -14.250110626220703
    5. '）' → logprob: -15.375110626220703
    6. '`)' → logprob: -17.125110626220703
    7. ']' → logprob: -17.375110626220703
    8. '))' → logprob: -17.500110626220703
    9. '[' → logprob: -18.875110626220703
    10. '   ' → logprob: -19.125110626220703

Token 329: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12695740163326263
    2. ' %' → logprob: -2.126957416534424
    3. ')' → logprob: -11.251956939697266
    4. '%A' → logprob: -12.126956939697266
    5. ')%' → logprob: -12.751956939697266
    6. '%B' → logprob: -13.251956939697266
    7. '%n' → logprob: -13.376956939697266
    8. '%D' → logprob: -13.501956939697266
    9. ' ' → logprob: -13.751956939697266
    10. '%i' → logprob: -14.126956939697266

Token 330: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00020354038861114532
    2. ' Q' → logprob: -8.500203132629395
    3. '   ' → logprob: -21.12520408630371
    4. '	Q' → logprob: -22.00020408630371
    5. ' ' → logprob: -22.62520408630371
    6. '(Q' → logprob: -22.75020408630371
    7. ',Q' → logprob: -23.50020408630371
    8. '```' → logprob: -25.00020408630371
    9. '  ' → logprob: -25.12520408630371
    10. '<Q' → logprob: -25.37520408630371

Token 331: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7194572687149048
    2. '   ' → logprob: -0.7194572687149048
    3. 'count' → logprob: -4.594457149505615
    4. '<|end|>' → logprob: -5.094457149505615
    5. '    
' → logprob: -5.219457149505615
    6. 'from' → logprob: -6.969457149505615
    7. 'counts' → logprob: -7.344457149505615
    8. 'dp' → logprob: -7.469457149505615
    9. '

' → logprob: -7.594457149505615
    10. ')' → logprob: -8.344457626342773

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2046581655740738
    2. 'dp' → logprob: -1.9546581506729126
    3. 'count' → logprob: -3.329658269882202
    4. 'from' → logprob: -5.204658031463623
    5. 'counts' → logprob: -6.829658031463623
    6. '    
' → logprob: -8.329658508300781
    7. '```' → logprob: -8.579658508300781
    8. 'counter' → logprob: -8.829658508300781
    9. 'cnt' → logprob: -8.829658508300781
    10. 'freq' → logprob: -8.954658508300781

Token 333: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0666617155075073
    2. 'pow' → logprob: -1.4416617155075073
    3. 'count' → logprob: -1.9416617155075073
    4. 'dp' → logprob: -2.191661834716797
    5. 'from' → logprob: -2.441661834716797
    6. 'power' → logprob: -3.316661834716797
    7. 'powers' → logprob: -4.191661834716797
    8. 'counts' → logprob: -4.566661834716797
    9. 'freq' → logprob: -4.691661834716797
    10. 'counter' → logprob: -6.441661834716797

Token 334: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.36937376856803894
    2. 'count' → logprob: -1.6193737983703613
    3. 'from' → logprob: -2.2443737983703613
    4. 'counts' → logprob: -5.994373798370361
    5. 'freq' → logprob: -6.619373798370361
    6. 'counter' → logprob: -7.869373798370361
    7. 'cnt' → logprob: -8.494373321533203
    8. 'mod' → logprob: -8.994373321533203
    9. '#' → logprob: -9.119373321533203
    10. 'pow' → logprob: -9.994373321533203

Token 335: ' va' (ID: 3423)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.15772387385368347
    2. 'count' → logprob: -2.532723903656006
    3. 'counts' → logprob: -3.032723903656006
    4. 'continue' → logprob: -5.157723903656006
    5. 'freq' → logprob: -5.157723903656006
    6. '#' → logprob: -6.657723903656006
    7. 'mod' → logprob: -6.657723903656006
    8. 'rem' → logprob: -7.407723903656006
    9. 'dp' → logprob: -7.532723903656006
    10. 'import' → logprob: -8.032723426818848

Token 336: ' utiliser' (ID: 43227)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.485935240983963
    2. ' compter' → logprob: -1.6109352111816406
    3. ' utiliser' → logprob: -2.7359352111816406
    4. 'count' → logprob: -3.4859352111816406
    5. 'comp' → logprob: -3.6109352111816406
    6. '   ' → logprob: -3.7359352111816406
    7. 'from' → logprob: -3.9859352111816406
    8. 'contin' → logprob: -5.735935211181641
    9. ' ' → logprob: -5.860935211181641
    10. 'com' → logprob: -6.110935211181641

Token 337: ' un' (ID: 537)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.009596600197255611
    2. 'default' → logprob: -5.509596824645996
    3. 'dp' → logprob: -6.134596824645996
    4. 'count' → logprob: -6.384596824645996
    5. 'freq' → logprob: -7.134596824645996
    6. 'pow' → logprob: -8.759596824645996
    7. ' from' → logprob: -8.759596824645996
    8. 'counter' → logprob: -9.134596824645996
    9. 'a' → logprob: -9.509596824645996
    10. 'counts' → logprob: -9.509596824645996

Token 338: ' compt' (ID: 39238)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4931785464286804
    2. 'default' → logprob: -0.9931785464286804
    3. 'dictionary' → logprob: -4.493178367614746
    4. 'hash' → logprob: -5.993178367614746
    5. ' defaultdict' → logprob: -6.368178367614746
    6. 'import' → logprob: -6.868178367614746
    7. 'dict' → logprob: -6.993178367614746
    8. '
' → logprob: -8.243178367614746
    9. 'count' → logprob: -8.368178367614746
    10. ' from' → logprob: -8.493178367614746

Token 339: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.06732961535453796
    2. 'eur' → logprob: -2.8173296451568604
    3. 'e' → logprob: -5.567329406738281
    4. '{}' → logprob: -8.317329406738281
    5. 'default' → logprob: -8.317329406738281
    6. 'uer' → logprob: -8.442329406738281
    7. '{' → logprob: -8.692329406738281
    8. 'or' → logprob: -8.817329406738281
    9. 'ateur' → logprob: -9.442329406738281
    10. '   ' → logprob: -9.692329406738281

Token 340: ' par' (ID: 686)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2840062081813812
    2. '   ' → logprob: -2.534006118774414
    3. ' from' → logprob: -3.159006118774414
    4. ' =' → logprob: -3.284006118774414
    5. '=' → logprob: -3.409006118774414
    6. 'mod' → logprob: -3.659006118774414
    7. 'import' → logprob: -5.034006118774414
    8. ' of' → logprob: -5.409006118774414
    9. 'dict' → logprob: -5.659006118774414
    10. ',' → logprob: -5.909006118774414

Token 341: ' hashing' (ID: 185245)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5408541560173035
    2. 'default' → logprob: -1.9158542156219482
    3. 'mod' → logprob: -2.1658542156219482
    4. 'dict' → logprob: -2.6658542156219482
    5. 'prefix' → logprob: -3.6658542156219482
    6. 'hash' → logprob: -4.040853977203369
    7. 'dictionary' → logprob: -4.665853977203369
    8. 'reste' → logprob: -4.665853977203369
    9. 'dic' → logprob: -4.790853977203369
    10. 'suffix' → logprob: -5.915853977203369

Token 342: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004451362881809473
    2. 'from' → logprob: -6.379451274871826
    3. 'count' → logprob: -6.504451274871826
    4. ' from' → logprob: -7.629451274871826
    5. 'mod' → logprob: -8.504451751708984
    6. 'counter' → logprob: -8.879451751708984
    7. 'counts' → logprob: -9.004451751708984
    8. 'freq' → logprob: -9.879451751708984
    9. ' counter' → logprob: -10.129451751708984
    10. ',' → logprob: -10.129451751708984

Token 343: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.22840161621570587
    2. 'mod' → logprob: -1.8534016609191895
    3. 'reste' → logprob: -4.3534016609191895
    4. 'rema' → logprob: -4.8534016609191895
    5. 'fr' → logprob: -5.2284016609191895
    6. 'indices' → logprob: -5.3534016609191895
    7. 'rest' → logprob: -5.7284016609191895
    8. 'com' → logprob: -5.7284016609191895
    9. 'mods' → logprob: -6.4784016609191895
    10. 'counts' → logprob: -6.6034016609191895

Token 344: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0007289938512258232
    2. 'es' → logprob: -8.500728607177734
    3. '_count' → logprob: -8.750728607177734
    4. '_counts' → logprob: -8.875728607177734
    5. 'mod' → logprob: -9.625728607177734
    6. 'e' → logprob: -9.625728607177734
    7. '_map' → logprob: -10.750728607177734
    8. '_counter' → logprob: -11.500728607177734
    9. '_hash' → logprob: -11.625728607177734
    10. '_' → logprob: -11.750728607177734

Token 345: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0875328928232193
    2. ' =' → logprob: -3.3375329971313477
    3. '_counts' → logprob: -4.462532997131348
    4. 'counts' → logprob: -4.462532997131348
    5. 'count' → logprob: -4.837532997131348
    6. '_counter' → logprob: -5.462532997131348
    7. '_count' → logprob: -5.462532997131348
    8. 'from' → logprob: -6.212532997131348
    9. '=' → logprob: -6.837532997131348
    10. ',' → logprob: -7.087532997131348

Token 346: ' substring' (ID: 89494)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9299675226211548
    2. 'from' → logprob: -1.5549675226211548
    3. 'default' → logprob: -1.5549675226211548
    4. ' compter' → logprob: -2.3049674034118652
    5. ' defaultdict' → logprob: -3.1799674034118652
    6. 'freq' → logprob: -5.054967403411865
    7. 'com' → logprob: -5.429967403411865
    8. ' from' → logprob: -5.429967403411865
    9. 'counts' → logprob: -5.554967403411865
    10. 'calcul' → logprob: -5.679967403411865

Token 347: ' divis' (ID: 37826)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.726682722568512
    2. '_counts' → logprob: -0.976682722568512
    3. '   ' → logprob: -2.476682662963867
    4. '_mod' → logprob: -4.101682662963867
    5. '_counter' → logprob: -4.476682662963867
    6. 'count' → logprob: -4.976682662963867
    7. ' =' → logprob: -4.976682662963867
    8. 's' → logprob: -5.476682662963867
    9. '_map' → logprob: -6.101682662963867
    10. 'counts' → logprob: -6.226682662963867

Token 348: 'ibles' (ID: 12234)
  Prédit: 'ibility'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibility' → logprob: -0.6038799285888672
    2. 'ibilité' → logprob: -1.1038799285888672
    3. 'ible' → logprob: -2.228879928588867
    4. 'ibil' → logprob: -4.978879928588867
    5. 'ibles' → logprob: -5.853879928588867
    6. 'ion' → logprob: -5.978879928588867
    7. 'ib' → logprob: -7.603879928588867
    8. 'ble' → logprob: -7.853879928588867
    9. 'ibl' → logprob: -7.853879928588867
    10. 'bil' → logprob: -8.853879928588867

Token 349: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001624952768906951
    2. 'count' → logprob: -7.251625061035156
    3. 'from' → logprob: -7.626625061035156
    4. 'counts' → logprob: -8.126625061035156
    5. 'counter' → logprob: -10.376625061035156
    6. ' counts' → logprob: -10.501625061035156
    7. ' from' → logprob: -10.751625061035156
    8. 'mod' → logprob: -11.626625061035156
    9. ',' → logprob: -11.751625061035156
    10. 'freq' → logprob: -12.001625061035156

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000695515947882086
    2. 'from' → logprob: -7.500695705413818
    3. 'count' → logprob: -9.62569522857666
    4. 'counts' → logprob: -10.25069522857666
    5. ' from' → logprob: -11.00069522857666
    6. '    
' → logprob: -11.75069522857666
    7. 'counter' → logprob: -12.50069522857666
    8. '```' → logprob: -13.12569522857666
    9. ' counts' → logprob: -13.37569522857666
    10. '
' → logprob: -13.62569522857666

Token 351: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016767051070928574
    2. 'count' → logprob: -4.5167670249938965
    3. 'from' → logprob: -5.5167670249938965
    4. 'counts' → logprob: -7.5167670249938965
    5. ' from' → logprob: -7.6417670249938965
    6. 'counter' → logprob: -8.016767501831055
    7. ' count' → logprob: -9.266767501831055
    8. ' counter' → logprob: -9.516767501831055
    9. ' counts' → logprob: -9.641767501831055
    10. '    
' → logprob: -10.141767501831055

Token 352: ' Mais' (ID: 13880)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1730237454175949
    2. 'from' → logprob: -2.2980237007141113
    3. 'counts' → logprob: -3.6730237007141113
    4. 'counter' → logprob: -3.7980237007141113
    5. '   ' → logprob: -5.548023700714111
    6. 'mod' → logprob: -5.923023700714111
    7. 'freq' → logprob: -6.673023700714111
    8. ' from' → logprob: -6.798023700714111
    9. ' count' → logprob: -7.298023700714111
    10. ' counter' → logprob: -7.673023700714111

Token 353: ' il' (ID: 1793)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5830104947090149
    2. ':' → logprob: -2.95801043510437
    3. 'prefix' → logprob: -3.20801043510437
    4. '#' → logprob: -3.33301043510437
    5. 'continue' → logprob: -3.45801043510437
    6. ' for' → logprob: -3.58301043510437
    7. 'from' → logprob: -3.58301043510437
    8. 'freq' → logprob: -3.70801043510437
    9. 'for' → logprob: -3.95801043510437
    10. 'counts' → logprob: -4.208010673522949

Token 354: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.869053065776825
    2. ' manque' → logprob: -1.1190531253814697
    3. ' faut' → logprob: -1.4940531253814697
    4. 's' → logprob: -4.994052886962891
    5. ' reste' → logprob: -5.244052886962891
    6. ' semble' → logprob: -5.494052886962891
    7. 'fa' → logprob: -5.494052886962891
    8. ' faudrait' → logprob: -5.994052886962891
    9. ' faudra' → logprob: -6.244052886962891
    10. 'man' → logprob: -7.494052886962891

Token 355: ' prendre' (ID: 24257)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8342456817626953
    2. 'égal' → logprob: -1.8342456817626953
    3. 'penser' → logprob: -2.0842456817626953
    4. 'com' → logprob: -2.2092456817626953
    5. 'd' → logprob: -2.5842456817626953
    6. 'comp' → logprob: -2.5842456817626953
    7. 'prendre' → logprob: -2.9592456817626953
    8. 'maint' → logprob: -3.4592456817626953
    9. 'tenir' → logprob: -3.4592456817626953
    10. 'de' → logprob: -3.7092456817626953

Token 356: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.06267175078392029
    2. 'care' → logprob: -2.937671661376953
    3. 'pow' → logprob: -6.062671661376953
    4. ' en' → logprob: -6.187671661376953
    5. '10' → logprob: -6.687671661376953
    6. 'into' → logprob: -7.687671661376953
    7. 'counter' → logprob: -8.187671661376953
    8. 'pas' → logprob: -8.312671661376953
    9. ' soin' → logprob: -9.062671661376953
    10. 'un' → logprob: -9.312671661376953

Token 357: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.9385402993066236e-05
    2. 'account' → logprob: -11.750019073486328
    3. ' compte' → logprob: -12.750019073486328
    4. 'consider' → logprob: -13.000019073486328
    5. 'com' → logprob: -13.750019073486328
    6. '[' → logprob: -13.750019073486328
    7. 'charge' → logprob: -14.125019073486328
    8. '
' → logprob: -14.250019073486328
    9. 'cons' → logprob: -14.250019073486328
    10. '```' → logprob: -14.625019073486328

Token 358: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06736940890550613
    2. ' que' → logprob: -3.5673694610595703
    3. 'la' → logprob: -4.06736946105957
    4. ' l' → logprob: -5.06736946105957
    5. ' les' → logprob: -5.06736946105957
    6. ' le' → logprob: -6.06736946105957
    7. 'l' → logprob: -6.81736946105957
    8. 'a' → logprob: -6.94236946105957
    9. ' aussi' → logprob: -6.94236946105957
    10. 'le' → logprob: -7.44236946105957

Token 359: ' déb' (ID: 37874)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.19872982800006866
    2. 'long' → logprob: -3.1987297534942627
    3. ' puiss' → logprob: -3.3237297534942627
    4. 'positions' → logprob: -3.6987297534942627
    5. 'length' → logprob: -3.9487297534942627
    6. 'p' → logprob: -4.323729991912842
    7. 'multip' → logprob: -4.448729991912842
    8. 'powers' → logprob: -4.698729991912842
    9. 'fact' → logprob: -4.948729991912842
    10. ' longue' → logprob: -5.198729991912842

Token 360: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.00527621153742075
    2. 'ut' → logprob: -5.255276203155518
    3. 'utations' → logprob: -11.630276679992676
    4. '[' → logprob: -12.130276679992676
    5. 'utions' → logprob: -12.130276679992676
    6. 'utes' → logprob: -12.505276679992676
    7. '"' → logprob: -13.130276679992676
    8. '
' → logprob: -13.255276679992676
    9. '``' → logprob: -13.380276679992676
    10. 'ts' → logprob: -13.630276679992676

Token 361: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6311246156692505
    2. ' des' → logprob: -1.8811246156692505
    3. 'from' → logprob: -3.006124496459961
    4. 'de' → logprob: -3.506124496459961
    5. '    ' → logprob: -3.631124496459961
    6. 'prefix' → logprob: -3.756124496459961
    7. ',' → logprob: -3.881124496459961
    8. ' et' → logprob: -3.881124496459961
    9. 'import' → logprob: -4.131124496459961
    10. ' de' → logprob: -4.256124496459961

Token 362: 'ides' (ID: 4105)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.655893087387085
    2. 'ues' → logprob: -2.280893087387085
    3. 'ue' → logprob: -2.280893087387085
    4. 'ides' → logprob: -2.780893087387085
    5. 'ids' → logprob: -2.780893087387085
    6. 'prefix' → logprob: -2.905893087387085
    7. 'us' → logprob: -3.405893087387085
    8. 'ide' → logprob: -4.030893325805664
    9. 'eurs' → logprob: -4.905893325805664
    10. 'idé' → logprob: -5.030893325805664

Token 363: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003739864332601428
    2. 'count' → logprob: -6.503739833831787
    3. 'from' → logprob: -7.128739833831787
    4. '    
' → logprob: -7.253739833831787
    5. '
' → logprob: -8.253740310668945
    6. 'counts' → logprob: -8.753740310668945
    7. 'indices' → logprob: -9.753740310668945
    8. ' from' → logprob: -9.878740310668945
    9. 'freq' → logprob: -10.753740310668945
    10. 'counter' → logprob: -10.753740310668945

Token 364: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.399743914604187
    2. ' i' → logprob: -2.6497440338134766
    3. '0' → logprob: -2.7747440338134766
    4. 'i' → logprob: -3.0247440338134766
    5. ' )' → logprob: -3.2747440338134766
    6. 'a' → logprob: -4.024744033813477
    7. 'for' → logprob: -4.774744033813477
    8. 'indices' → logprob: -4.774744033813477
    9. '   ' → logprob: -4.899744033813477
    10. ' ' → logprob: -5.024744033813477

Token 365: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013572083844337612
    2. '[' → logprob: -9.25013542175293
    3. 'i' → logprob: -11.12513542175293
    4. '[j' → logprob: -11.25013542175293
    5. '[I' → logprob: -12.62513542175293
    6. '[index' → logprob: -13.75013542175293
    7. '[k' → logprob: -13.75013542175293
    8. '[a' → logprob: -13.87513542175293
    9. '[start' → logprob: -14.25013542175293
    10. ']' → logprob: -14.37513542175293

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37277841567993164
    2. ']!=' → logprob: -1.3727784156799316
    3. '[i' → logprob: -2.8727784156799316
    4. '!=' → logprob: -7.872778415679932
    5. 'i' → logprob: -7.997778415679932
    6. '[' → logprob: -8.372777938842773
    7. ']!='' → logprob: -9.122777938842773
    8. ' !=' → logprob: -10.372777938842773
    9. ']==' → logprob: -10.622777938842773
    10. ' ]' → logprob: -10.747777938842773

Token 367: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.24773360788822174
    2. ' !=' → logprob: -2.3727335929870605
    3. ']!=' → logprob: -2.9977335929870605
    4. '[i' → logprob: -3.2477335929870605
    5. ']' → logprob: -3.7477335929870605
    6. '[' → logprob: -5.1227335929870605
    7. ')!=' → logprob: -5.4977335929870605
    8. ')' → logprob: -5.8727335929870605
    9. '()!=' → logprob: -7.9977335929870605
    10. '>' → logprob: -9.497734069824219

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.505233764648438
    4. '=' → logprob: -16.880233764648438
    5. ')' → logprob: -17.005233764648438
    6. '```' → logprob: -17.630233764648438
    7. '[' → logprob: -18.130233764648438
    8. '
' → logprob: -18.380233764648438
    9. '  ' → logprob: -18.755233764648438
    10. '  
' → logprob: -18.880233764648438

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -17.375158309936523
    4. ')' → logprob: -17.875158309936523
    5. '=' → logprob: -18.500158309936523
    6. ' ' → logprob: -19.125158309936523
    7. '   ' → logprob: -19.250158309936523
    8. '
' → logprob: -19.250158309936523
    9. '[' → logprob: -19.250158309936523
    10. '۰' → logprob: -19.375158309936523

Token 370: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02344357781112194
    2. '   ' → logprob: -3.8984434604644775
    3. ')
' → logprob: -5.898443698883057
    4. ' )' → logprob: -9.523443222045898
    5. ')
' → logprob: -10.523443222045898
    6. ').' → logprob: -10.648443222045898
    7. ')

' → logprob: -12.273443222045898
    8. ',' → logprob: -12.523443222045898
    9. '  ' → logprob: -13.273443222045898
    10. '),' → logprob: -13.273443222045898

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03925664722919464
    2. 'count' → logprob: -3.5392565727233887
    3. 'counts' → logprob: -5.664256572723389
    4. 'from' → logprob: -6.039256572723389
    5. 'valid' → logprob: -6.164256572723389
    6. '    
' → logprob: -7.289256572723389
    7. 'counter' → logprob: -8.539257049560547
    8. '
' → logprob: -8.664257049560547
    9. ' from' → logprob: -9.664257049560547
    10. 'indices' → logprob: -9.789257049560547

Token 372: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10505765676498413
    2. 'count' → logprob: -2.480057716369629
    3. 'from' → logprob: -4.605057716369629
    4. 'counts' → logprob: -5.980057716369629
    5. 'counter' → logprob: -6.230057716369629
    6. ' from' → logprob: -7.855057716369629
    7. '    
' → logprob: -7.980057716369629
    8. 'prefix' → logprob: -8.730057716369629
    9. ' count' → logprob: -8.980057716369629
    10. 'freq' → logprob: -9.230057716369629

Token 373: ' Pour' (ID: 13931)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14592956006526947
    2. 'from' → logprob: -2.1459295749664307
    3. 'counts' → logprob: -4.895929336547852
    4. '   ' → logprob: -5.520929336547852
    5. 'counter' → logprob: -5.770929336547852
    6. 'valid' → logprob: -6.645929336547852
    7. 'freq' → logprob: -6.895929336547852
    8. 'prefix' → logprob: -6.895929336547852
    9. 'pos' → logprob: -8.020929336547852
    10. 'dp' → logprob: -8.645929336547852

Token 374: ' cela' (ID: 17542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20255416631698608
    2. ' i' → logprob: -1.7025542259216309
    3. 'j' → logprob: -7.452554225921631
    4. 'valid' → logprob: -8.827553749084473
    5. 'count' → logprob: -9.077553749084473
    6. ' j' → logprob: -9.202553749084473
    7. ' valid' → logprob: -9.577553749084473
    8. 'start' → logprob: -10.327553749084473
    9. 'prefix' → logprob: -11.327553749084473
    10. '_i' → logprob: -11.827553749084473

Token 375: ',' (ID: 11)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -1.1608057022094727
    2. '   ' → logprob: -1.4108057022094727
    3. 'valid' → logprob: -1.6608057022094727
    4. 'count' → logprob: -1.9108057022094727
    5. ',' → logprob: -3.5358057022094727
    6. ' count' → logprob: -4.160805702209473
    7. 'indices' → logprob: -4.535805702209473
    8. 'counts' → logprob: -4.660805702209473
    9. ' counts' → logprob: -4.785805702209473
    10. ' indices' → logprob: -5.410805702209473

Token 376: ' on' (ID: 402)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2346647083759308
    2. 'from' → logprob: -2.7346646785736084
    3. 'valid' → logprob: -3.2346646785736084
    4. ' count' → logprob: -3.9846646785736084
    5. 'prefix' → logprob: -3.9846646785736084
    6. 'counts' → logprob: -4.1096649169921875
    7. 'pos' → logprob: -4.7346649169921875
    8. ' valid' → logprob: -4.9846649169921875
    9. 'freq' → logprob: -4.9846649169921875
    10. 'start' → logprob: -5.1096649169921875

Token 377: ' explore' (ID: 14326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7211506962776184
    2. 'counts' → logprob: -1.3461506366729736
    3. 'count' → logprob: -2.2211506366729736
    4. 'prefix' → logprob: -3.0961506366729736
    5. 'valid' → logprob: -3.3461506366729736
    6. 'continue' → logprob: -3.9711506366729736
    7. 'hash' → logprob: -4.346150875091553
    8. 'freq' → logprob: -5.221150875091553
    9. 'dp' → logprob: -5.471150875091553
    10. ' from' → logprob: -5.721150875091553

Token 378: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0812572240829468
    2. 'i' → logprob: -1.4562572240829468
    3. ' for' → logprob: -1.8312572240829468
    4. ' i' → logprob: -1.9562572240829468
    5. '   ' → logprob: -2.3312573432922363
    6. 'from' → logprob: -4.456257343292236
    7. 'j' → logprob: -5.956257343292236
    8. ' valid' → logprob: -6.081257343292236
    9. ' from' → logprob: -6.331257343292236
    10. ' all' → logprob: -6.456257343292236

Token 379: ' indices' (ID: 30378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.545430064201355
    2. 'indices' → logprob: -1.170430064201355
    3. 'positions' → logprob: -2.9204301834106445
    4. 'valid' → logprob: -4.1704301834106445
    5. ' indices' → logprob: -4.4204301834106445
    6. ' i' → logprob: -4.9204301834106445
    7. 'indexes' → logprob: -5.0454301834106445
    8. 'start' → logprob: -5.6704301834106445
    9. 'for' → logprob: -5.6704301834106445
    10. ' positions' → logprob: -6.0454301834106445

Token 380: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10991180688142776
    2. '   ' → logprob: -3.1099119186401367
    3. ' for' → logprob: -3.3599119186401367
    4. ' in' → logprob: -4.609911918640137
    5. 'i' → logprob: -5.109911918640137
    6. '[i' → logprob: -5.609911918640137
    7. 'for' → logprob: -6.984911918640137
    8. '    ' → logprob: -7.234911918640137
    9. ' where' → logprob: -7.484911918640137
    10. ' =' → logprob: -7.609911918640137

Token 381: ' et' (ID: 859)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7043056488037109
    2. ' in' → logprob: -0.7043056488037109
    3. '=' → logprob: -5.704305648803711
    4. ' =' → logprob: -5.704305648803711
    5. 'for' → logprob: -5.829305648803711
    6. ',' → logprob: -7.079305648803711
    7. ' for' → logprob: -8.704305648803711
    8. 'from' → logprob: -9.079305648803711
    9. 'range' → logprob: -9.454305648803711
    10. ':' → logprob: -9.704305648803711

Token 382: ' utilise' (ID: 70283)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016491303220391273
    2. 'k' → logprob: -4.516491413116455
    3. 'j' → logprob: -6.266491413116455
    4. ' i' → logprob: -6.266491413116455
    5. 'for' → logprob: -6.641491413116455
    6. 'range' → logprob: -8.766490936279297
    7. ' for' → logprob: -10.391490936279297
    8. 'ranges' → logprob: -10.766490936279297
    9. ' k' → logprob: -10.891490936279297
    10. '
' → logprob: -11.141490936279297

Token 383: ' un' (ID: 537)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1629893183708191
    2. 'a' → logprob: -2.287989377975464
    3. 'from' → logprob: -3.537989377975464
    4. ' un' → logprob: -5.287989139556885
    5. ' from' → logprob: -5.662989139556885
    6. ' defaultdict' → logprob: -6.412989139556885
    7. 'd' → logprob: -6.912989139556885
    8. 'prefix' → logprob: -7.037989139556885
    9. 'un' → logprob: -7.037989139556885
    10. '    ' → logprob: -7.287989139556885

Token 384: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0404350757598877
    2. 'dict' → logprob: -1.2904350757598877
    3. 'from' → logprob: -1.7904350757598877
    4. 'dictionary' → logprob: -2.4154350757598877
    5. 'hash' → logprob: -3.1654350757598877
    6. 'count' → logprob: -3.4154350757598877
    7. 'counter' → logprob: -4.040434837341309
    8. 'd' → logprob: -4.165434837341309
    9. 'dic' → logprob: -6.165434837341309
    10. 'prefix' → logprob: -6.540434837341309

Token 385: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19291117787361145
    2. ' =' → logprob: -2.692911148071289
    3. 'count' → logprob: -3.692911148071289
    4. '=' → logprob: -4.692911148071289
    5. 'prefix' → logprob: -4.817911148071289
    6. 'counts' → logprob: -4.817911148071289
    7. 'counter' → logprob: -4.942911148071289
    8. '(prefix' → logprob: -5.067911148071289
    9. '()
' → logprob: -5.567911148071289
    10. ' counter' → logprob: -5.692911148071289

Token 386: ' stock' (ID: 6546)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.8047969341278076
    2. 'from' → logprob: -1.8047969341278076
    3. ' =' → logprob: -2.5547969341278076
    4. 'default' → logprob: -2.6797969341278076
    5. '=' → logprob: -2.9297969341278076
    6. 'count' → logprob: -3.1797969341278076
    7. ' counts' → logprob: -3.8047969341278076
    8. ' maps' → logprob: -4.054797172546387
    9. ' defaultdict' → logprob: -4.429797172546387
    10. ' from' → logprob: -4.429797172546387

Token 387: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00022415895364247262
    2. 'ent' → logprob: -8.625224113464355
    3. 'er' → logprob: -11.375224113464355
    4. 'a' → logprob: -11.625224113464355
    5. 'ion' → logprob: -12.250224113464355
    6. '{' → logprob: -12.500224113464355
    7. '   ' → logprob: -13.250224113464355
    8. 't' → logprob: -13.375224113464355
    9. 'import' → logprob: -13.750224113464355
    10. 'te' → logprob: -13.750224113464355

Token 388: ' les' (ID: 1341)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.3956872224807739
    2. 'prefix' → logprob: -2.0206871032714844
    3. 'count' → logprob: -2.5206871032714844
    4. ' counts' → logprob: -3.0206871032714844
    5. 'indices' → logprob: -3.5206871032714844
    6. 'freq' → logprob: -4.895687103271484
    7. '{' → logprob: -5.645687103271484
    8. 'valid' → logprob: -5.895687103271484
    9. 'positions' → logprob: -5.895687103271484
    10. 'occ' → logprob: -5.895687103271484

Token 389: ' prefix' (ID: 18633)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.1934603899717331
    2. 'prefix' → logprob: -2.943460464477539
    3. 'indices' → logprob: -2.943460464477539
    4. 'count' → logprob: -3.693460464477539
    5. 'positions' → logprob: -3.943460464477539
    6. ' counts' → logprob: -4.443460464477539
    7. 'com' → logprob: -5.068460464477539
    8. ' indices' → logprob: -6.068460464477539
    9. 'multip' → logprob: -7.193460464477539
    10. 'occ' → logprob: -7.318460464477539

Token 390: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0006370236515067518
    2. '_counts' → logprob: -8.00063705444336
    3. '_count' → logprob: -9.00063705444336
    4. '_indices' → logprob: -10.12563705444336
    5. 'mod' → logprob: -10.75063705444336
    6. '   ' → logprob: -10.87563705444336
    7. '_' → logprob: -11.12563705444336
    8. '_freq' → logprob: -11.25063705444336
    9. '_counter' → logprob: -11.50063705444336
    10. 's' → logprob: -11.50063705444336

Token 391: ' aux' (ID: 5850)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8588517904281616
    2. '_counts' → logprob: -1.6088517904281616
    3. '_count' → logprob: -2.108851909637451
    4. 'count' → logprob: -2.358851909637451
    5. 'counts' → logprob: -2.733851909637451
    6. '=' → logprob: -2.858851909637451
    7. 'indices' → logprob: -4.483851909637451
    8. '_counter' → logprob: -5.233851909637451
    9. '   ' → logprob: -5.358851909637451
    10. '_freq' → logprob: -5.858851909637451

Token 392: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.11425986886024475
    2. 'positions' → logprob: -2.364259958267212
    3. 'j' → logprob: -4.989259719848633
    4. 'i' → logprob: -5.364259719848633
    5. 'valid' → logprob: -6.989259719848633
    6. 'indexes' → logprob: -6.989259719848633
    7. 'index' → logprob: -8.489259719848633
    8. 'indice' → logprob: -9.114259719848633
    9. 'dé' → logprob: -9.864259719848633
    10. ' indices' → logprob: -10.114259719848633

Token 393: ' où' (ID: 15113)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.1237478256225586
    2. '   ' → logprob: -1.3737478256225586
    3. 'val' → logprob: -1.7487478256225586
    4. ' val' → logprob: -3.8737478256225586
    5. '[val' → logprob: -3.8737478256225586
    6. '_valid' → logprob: -3.9987478256225586
    7. 'prefix' → logprob: -4.123747825622559
    8. 'visited' → logprob: -4.248747825622559
    9. ' valid' → logprob: -4.373747825622559
    10. 'seen' → logprob: -4.373747825622559

Token 394: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0029995699878782034
    2. ' a' → logprob: -6.127999782562256
    3. '   ' → logprob: -8.377999305725098
    4. 'j' → logprob: -8.752999305725098
    5. 'i' → logprob: -9.002999305725098
    6. 'valid' → logprob: -10.002999305725098
    7. 'the' → logprob: -10.002999305725098
    8. 'l' → logprob: -10.127999305725098
    9. 'start' → logprob: -10.127999305725098
    10. '```' → logprob: -10.627999305725098

Token 395: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.43584924936294556
    2. '[j' → logprob: -1.0608491897583008
    3. '[' → logprob: -5.310849189758301
    4. 'i' → logprob: -7.060849189758301
    5. 'j' → logprob: -7.310849189758301
    6. '[a' → logprob: -8.5608491897583
    7. ' [' → logprob: -9.3108491897583
    8. ' j' → logprob: -10.0608491897583
    9. '[index' → logprob: -10.1858491897583
    10. ' i' → logprob: -10.4358491897583

Token 396: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5805871486663818
    2. '[i' → logprob: -1.0805871486663818
    3. ']!=' → logprob: -2.330587148666382
    4. '[j' → logprob: -6.455587387084961
    5. 'i' → logprob: -7.330587387084961
    6. '!=' → logprob: -7.580587387084961
    7. '[' → logprob: -7.705587387084961
    8. ' !=' → logprob: -8.705587387084961
    9. ' ]' → logprob: -9.580587387084961
    10. ']!='' → logprob: -9.955587387084961

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036111166700720787
    2. ' ' → logprob: -5.628611087799072
    3. 'i' → logprob: -12.75361156463623
    4. 'j' → logprob: -13.25361156463623
    5. '```' → logprob: -13.62861156463623
    6. 'a' → logprob: -13.75361156463623
    7. '[i' → logprob: -14.25361156463623
    8. '[' → logprob: -14.37861156463623
    9. '
' → logprob: -14.50361156463623
    10. ' i' → logprob: -14.62861156463623

Token 398: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0172091256827116
    2. 'count' → logprob: -4.767209053039551
    3. 'counts' → logprob: -6.142209053039551
    4. 'from' → logprob: -6.267209053039551
    5. 'indices' → logprob: -6.517209053039551
    6. 'counter' → logprob: -7.267209053039551
    7. 'prefix' → logprob: -7.767209053039551
    8. 'dict' → logprob: -8.39220905303955
    9. 'freq' → logprob: -8.39220905303955
    10. 'dp' → logprob: -8.51720905303955

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012924784794449806
    2. '    
' → logprob: -5.262924671173096
    3. '
' → logprob: -5.762924671173096
    4. 'from' → logprob: -6.637924671173096
    5. '```' → logprob: -7.387924671173096
    6. 'count' → logprob: -7.762924671173096
    7. 'counter' → logprob: -7.762924671173096
    8. 'prefix' → logprob: -8.262925148010254
    9. 'counts' → logprob: -8.262925148010254
    10. ' from' → logprob: -9.137925148010254

Token 400: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4885588884353638
    2. 'prefix' → logprob: -1.4885588884353638
    3. 'count' → logprob: -1.6135588884353638
    4. '{' → logprob: -2.363558769226074
    5. '{
' → logprob: -2.738558769226074
    6. 'counts' → logprob: -2.738558769226074
    7. 'counter' → logprob: -3.363558769226074
    8. '```' → logprob: -3.988558769226074
    9. '
' → logprob: -4.113558769226074
    10. 'from' → logprob: -4.238558769226074

Token 401: ' En' (ID: 2130)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.416828453540802
    2. 'prefix' → logprob: -2.1668283939361572
    3. 'counter' → logprob: -2.6668283939361572
    4. 'counts' → logprob: -2.6668283939361572
    5. 'from' → logprob: -3.7918283939361572
    6. '   ' → logprob: -4.041828632354736
    7. 'freq' → logprob: -4.791828632354736
    8. 'valid' → logprob: -4.791828632354736
    9. ' counter' → logprob: -5.291828632354736
    10. ' count' → logprob: -5.541828632354736

Token 402: ' fait' (ID: 7473)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3791646957397461
    2. 'collections' → logprob: -2.129164695739746
    3. 'default' → logprob: -3.129164695739746
    4. ' defaultdict' → logprob: -3.254164695739746
    5. 'python' → logprob: -4.129164695739746
    6. 'continue' → logprob: -4.129164695739746
    7. 'counter' → logprob: -4.254164695739746
    8. ' from' → logprob: -4.754164695739746
    9. '```' → logprob: -4.754164695739746
    10. 'code' → logprob: -4.879164695739746

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5569056272506714
    2. '   ' → logprob: -1.4319056272506714
    3. 'from' → logprob: -3.181905746459961
    4. ' ,' → logprob: -3.306905746459961
    5. '    ' → logprob: -3.431905746459961
    6. ' prefix' → logprob: -4.181905746459961
    7. ' from' → logprob: -4.306905746459961
    8. 'prefix' → logprob: -4.431905746459961
    9. ' on' → logprob: -4.681905746459961
    10. ' for' → logprob: -5.556905746459961

Token 404: ' on' (ID: 402)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.093981146812439
    2. 'from' → logprob: -1.468981146812439
    3. ' count' → logprob: -2.0939812660217285
    4. ' from' → logprob: -2.5939812660217285
    5. ' freq' → logprob: -2.8439812660217285
    6. 'prefix' → logprob: -2.9689812660217285
    7. ' prefix' → logprob: -3.2189812660217285
    8. 'freq' → logprob: -3.4689812660217285
    9. ' counter' → logprob: -4.2189812660217285
    10. 'counts' → logprob: -4.5939812660217285

Token 405: ' traite' (ID: 180696)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10225085914134979
    2. 'contin' → logprob: -3.477250814437866
    3. ' continue' → logprob: -3.727250814437866
    4. '   ' → logprob: -4.727251052856445
    5. 'util' → logprob: -5.227251052856445
    6. 'for' → logprob: -5.352251052856445
    7. 'from' → logprob: -5.602251052856445
    8. 'vais' → logprob: -5.602251052856445
    9. 'continu' → logprob: -6.102251052856445
    10. 'do' → logprob: -6.727251052856445

Token 406: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0308476686477661
    2. ' les' → logprob: -1.2808476686477661
    3. ' la' → logprob: -2.7808475494384766
    4. '```' → logprob: -2.9058475494384766
    5. 'les' → logprob: -3.1558475494384766
    6. 'indices' → logprob: -3.4058475494384766
    7. ' uniquement' → logprob: -3.7808475494384766
    8. 'import' → logprob: -4.155847549438477
    9. ' ' → logprob: -4.280847549438477
    10. 'the' → logprob: -4.280847549438477

Token 407: ' substr' (ID: 29234)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.2010963410139084
    2. ' indices' → logprob: -2.201096296310425
    3. 'i' → logprob: -3.076096296310425
    4. 'j' → logprob: -5.326096534729004
    5. 'positions' → logprob: -5.451096534729004
    6. 'prefix' → logprob: -5.826096534729004
    7. ' i' → logprob: -6.201096534729004
    8. 'sub' → logprob: -6.201096534729004
    9. 'a' → logprob: -6.576096534729004
    10. 's' → logprob: -6.576096534729004

Token 408: 'ings' (ID: 963)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.7406695485115051
    2. 'ings' → logprob: -0.8656695485115051
    3. '   ' → logprob: -3.6156694889068604
    4. 'quence' → logprob: -3.7406694889068604
    5. 'ing' → logprob: -4.7406697273254395
    6. 'strings' → logprob: -4.8656697273254395
    7. 'rings' → logprob: -4.9906697273254395
    8. 'array' → logprob: -5.4906697273254395
    9. 'arrays' → logprob: -6.1156697273254395
    10. '_sequences' → logprob: -6.1156697273254395

Token 409: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4765113294124603
    2. 'from' → logprob: -2.226511240005493
    3. '[i' → logprob: -3.226511240005493
    4. ',' → logprob: -3.476511240005493
    5. '[j' → logprob: -3.851511240005493
    6. ')' → logprob: -4.101511478424072
    7. '(i' → logprob: -4.351511478424072
    8. ' from' → logprob: -4.476511478424072
    9. ' j' → logprob: -4.601511478424072
    10. ' i' → logprob: -4.726511478424072

Token 410: ' commencent' (ID: 184941)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7836995124816895
    2. ' commencent' → logprob: -1.1586995124816895
    3. ' start' → logprob: -1.5336995124816895
    4. 'comm' → logprob: -5.6586995124816895
    5. '_start' → logprob: -6.6586995124816895
    6. 's' → logprob: -6.6586995124816895
    7. 'dé' → logprob: -6.7836995124816895
    8. ' dém' → logprob: -7.1586995124816895
    9. 'begin' → logprob: -7.4086995124816895
    10. ' démar' → logprob: -7.4086995124816895

Token 411: ' en' (ID: 469)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.0096749067306519
    2. ' par' → logprob: -1.7596749067306519
    3. 'à' → logprob: -2.0096750259399414
    4. 'par' → logprob: -2.1346750259399414
    5. ' à' → logprob: -2.6346750259399414
    6. ' at' → logprob: -3.0096750259399414
    7. ' uniquement' → logprob: -3.3846750259399414
    8. 'with' → logprob: -4.634675025939941
    9. 'avec' → logprob: -5.259675025939941
    10. '```' → logprob: -5.384675025939941

Token 412: ' i' (ID: 575)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.2857958972454071
    2. 'i' → logprob: -2.1607959270477295
    3. ' indices' → logprob: -2.9107959270477295
    4. 'a' → logprob: -3.2857959270477295
    5. ' i' → logprob: -4.53579568862915
    6. 'positions' → logprob: -4.78579568862915
    7. ' a' → logprob: -4.91079568862915
    8. ' un' → logprob: -6.03579568862915
    9. ' positions' → logprob: -6.16079568862915
    10. '[i' → logprob: -6.16079568862915

Token 413: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008735707961022854
    2. 'from' → logprob: -5.758735656738281
    3. 'count' → logprob: -6.508735656738281
    4. '
' → logprob: -6.633735656738281
    5. '    
' → logprob: -7.883735656738281
    6. ' from' → logprob: -8.133735656738281
    7. ' =' → logprob: -8.383735656738281
    8. 'indices' → logprob: -8.383735656738281
    9. 'freq' → logprob: -8.383735656738281
    10. 'counter' → logprob: -8.633735656738281

Token 414: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0025105008389800787
    2. ' a' → logprob: -6.1275105476379395
    3. 'i' → logprob: -8.252510070800781
    4. '0' → logprob: -10.502510070800781
    5. 'j' → logprob: -11.252510070800781
    6. ' i' → logprob: -12.002510070800781
    7. '```' → logprob: -12.377510070800781
    8. '   ' → logprob: -12.502510070800781
    9. 'prefix' → logprob: -13.252510070800781
    10. ' ' → logprob: -13.377510070800781

Token 415: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.191489642835222e-05
    2. '[' → logprob: -10.750041961669922
    3. 'i' → logprob: -11.125041961669922
    4. '[j' → logprob: -12.875041961669922
    5. '[
' → logprob: -14.125041961669922
    6. '```' → logprob: -14.375041961669922
    7. '[a' → logprob: -14.500041961669922
    8. 'a' → logprob: -14.750041961669922
    9. ' [' → logprob: -14.750041961669922
    10. '\[' → logprob: -16.375041961669922

Token 416: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11676128208637238
    2. ']!=' → logprob: -2.3667612075805664
    3. '[i' → logprob: -4.616761207580566
    4. '!=' → logprob: -5.241761207580566
    5. ' !=' → logprob: -7.241761207580566
    6. '[j' → logprob: -8.241761207580566
    7. '[' → logprob: -9.241761207580566
    8. ' ]' → logprob: -9.741761207580566
    9. '']' → logprob: -10.491761207580566
    10. ')!=' → logprob: -11.366761207580566

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009128939709626138
    2. ' ' → logprob: -7.000912666320801
    3. '```' → logprob: -14.5009126663208
    4. '1' → logprob: -15.5009126663208
    5. '   ' → logprob: -15.6259126663208
    6. ''' → logprob: -16.125913619995117
    7. '  ' → logprob: -16.125913619995117
    8. ' ' → logprob: -16.375913619995117
    9. '=' → logprob: -16.375913619995117
    10. '
' → logprob: -17.063413619995117

Token 418: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007613136898726225
    2. 'count' → logprob: -5.757613182067871
    3. 'from' → logprob: -6.257613182067871
    4. '    
' → logprob: -7.257613182067871
    5. '
' → logprob: -7.507613182067871
    6. 'valid' → logprob: -8.132613182067871
    7. 'counts' → logprob: -8.132613182067871
    8. 'freq' → logprob: -9.007613182067871
    9. 'counter' → logprob: -9.507613182067871
    10. ' from' → logprob: -9.632613182067871

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042719002813100815
    2. 'from' → logprob: -7.254271984100342
    3. '    
' → logprob: -7.504271984100342
    4. '```' → logprob: -7.504271984100342
    5. 'count' → logprob: -7.629271984100342
    6. '
' → logprob: -7.629271984100342
    7. 'prefix' → logprob: -7.879271984100342
    8. 'indices' → logprob: -8.254271507263184
    9. 'counts' → logprob: -8.504271507263184
    10. ',' → logprob: -9.254271507263184

Token 420: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5169957280158997
    2. 'count' → logprob: -1.1419956684112549
    3. 'prefix' → logprob: -3.516995668411255
    4. 'from' → logprob: -4.016995906829834
    5. 'counts' → logprob: -4.641995906829834
    6. 'counter' → logprob: -4.766995906829834
    7. '
' → logprob: -5.016995906829834
    8. 'valid' → logprob: -5.641995906829834
    9. 'freq' → logprob: -6.016995906829834
    10. 'hash' → logprob: -7.016995906829834

Token 421: ' Les' (ID: 7029)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28429359197616577
    2. '   ' → logprob: -2.0342936515808105
    3. 'prefix' → logprob: -3.4092936515808105
    4. 'from' → logprob: -3.4092936515808105
    5. 'counts' → logprob: -3.5342936515808105
    6. 'counter' → logprob: -4.6592936515808105
    7. 'freq' → logprob: -5.5342936515808105
    8. 'valid' → logprob: -6.2842936515808105
    9. 'mod' → logprob: -6.4092936515808105
    10. 'dp' → logprob: -7.0342936515808105

Token 422: ' formule' (ID: 84316)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9878588318824768
    2. 'count' → logprob: -0.9878588318824768
    3. 'indices' → logprob: -2.987858772277832
    4. 'valid' → logprob: -3.237858772277832
    5. 'last' → logprob: -3.362858772277832
    6. 'i' → logprob: -3.862858772277832
    7. 'prefix' → logprob: -3.987858772277832
    8. 'freq' → logprob: -4.612858772277832
    9. '#' → logprob: -4.737858772277832
    10. 'from' → logprob: -4.862858772277832

Token 423: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22890780866146088
    2. 'for' → logprob: -2.853907823562622
    3. ' for' → logprob: -3.228907823562622
    4. ' s' → logprob: -3.853907823562622
    5. ' =' → logprob: -3.853907823562622
    6. 'es' → logprob: -4.228907585144043
    7. ' prefix' → logprob: -4.603907585144043
    8. 'prefix' → logprob: -4.728907585144043
    9. '#' → logprob: -5.228907585144043
    10. 'e' → logprob: -5.728907585144043

Token 424: ' substring' (ID: 89494)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1143600940704346
    2. 'for' → logprob: -1.2393600940704346
    3. 'count' → logprob: -1.6143600940704346
    4. ' count' → logprob: -2.6143600940704346
    5. '   ' → logprob: -3.9893600940704346
    6. ' valid' → logprob: -4.2393598556518555
    7. 'valid' → logprob: -4.3643598556518555
    8. 'dp' → logprob: -4.4893598556518555
    9. 'from' → logprob: -4.6143598556518555
    10. ' dp' → logprob: -4.8643598556518555

Token 425: ' a' (ID: 261)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.047617021948099136
    2. '_val' → logprob: -4.297616958618164
    3. '_hash' → logprob: -4.797616958618164
    4. '_start' → logprob: -5.297616958618164
    5. 's' → logprob: -5.422616958618164
    6. '_value' → logprob: -5.797616958618164
    7. '_length' → logprob: -6.047616958618164
    8. '_len' → logprob: -6.047616958618164
    9. ' =' → logprob: -6.172616958618164
    10. 'mod' → logprob: -6.797616958618164

Token 426: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.022725999355316162
    2. '[' → logprob: -4.647726058959961
    3. '[start' → logprob: -5.022726058959961
    4. '[j' → logprob: -5.397726058959961
    5. '[l' → logprob: -8.522726058959961
    6. '[s' → logprob: -8.647726058959961
    7. '[k' → logprob: -8.647726058959961
    8. '   ' → logprob: -9.022726058959961
    9. '[from' → logprob: -9.022726058959961
    10. 'i' → logprob: -9.147726058959961

Token 427: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.27168911695480347
    2. ']' → logprob: -2.6466891765594482
    3. ':j' → logprob: -3.2716891765594482
    4. '[i' → logprob: -3.6466891765594482
    5. '...' → logprob: -4.021688938140869
    6. ':' → logprob: -4.021688938140869
    7. '[j' → logprob: -4.146688938140869
    8. '][' → logprob: -4.521688938140869
    9. ',j' → logprob: -5.021688938140869
    10. ':i' → logprob: -5.271688938140869

Token 428: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00033593899570405483
    2. ' j' → logprob: -8.125335693359375
    3. ']' → logprob: -10.625335693359375
    4. 'i' → logprob: -11.750335693359375
    5. '   ' → logprob: -12.625335693359375
    6. ':j' → logprob: -13.625335693359375
    7. 'k' → logprob: -14.000335693359375
    8. '
' → logprob: -14.375335693359375
    9. ' ' → logprob: -15.250335693359375
    10. '_j' → logprob: -15.375335693359375

Token 429: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05175205320119858
    2. '])' → logprob: -3.3017520904541016
    3. ')' → logprob: -5.301752090454102
    4. '+' → logprob: -6.551752090454102
    5. '   ' → logprob: -6.926752090454102
    6. '][' → logprob: -7.176752090454102
    7. ']%' → logprob: -7.176752090454102
    8. '[i' → logprob: -7.301752090454102
    9. ']=' → logprob: -7.301752090454102
    10. ' ]' → logprob: -7.801752090454102

Token 430: ' mod' (ID: 1812)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22818075120449066
    2. '=' → logprob: -2.4781806468963623
    3. '%' → logprob: -3.3531806468963623
    4. '_mod' → logprob: -3.6031806468963623
    5. ')' → logprob: -4.353180885314941
    6. ']' → logprob: -5.103180885314941
    7. 'mod' → logprob: -5.103180885314941
    8. '   ' → logprob: -5.103180885314941
    9. '#' → logprob: -5.103180885314941
    10. ' %' → logprob: -5.478180885314941

Token 431: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.039446890354156494
    2. ' Q' → logprob: -3.6644468307495117
    3. '=' → logprob: -4.414446830749512
    4. ' =' → logprob: -7.289446830749512
    5. '==' → logprob: -9.664446830749512
    6. ' ==' → logprob: -10.164446830749512
    7. '```' → logprob: -10.164446830749512
    8. '   ' → logprob: -10.289446830749512
    9. ' ' → logprob: -11.039446830749512
    10. '(Q' → logprob: -11.289446830749512

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2446456402540207
    2. '=' → logprob: -1.994645595550537
    3. ' ==' → logprob: -2.869645595550537
    4. '   ' → logprob: -4.994645595550537
    5. ')' → logprob: -5.119645595550537
    6. '==' → logprob: -5.619645595550537
    7. ']' → logprob: -6.119645595550537
    8. ',' → logprob: -6.494645595550537
    9. ' ' → logprob: -7.619645595550537
    10. ':' → logprob: -7.869645595550537

Token 433: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0015193840954452753
    2. ' (' → logprob: -6.501519203186035
    3. '(p' → logprob: -12.376519203186035
    4. 'prefix' → logprob: -12.626519203186035
    5. '(pref' → logprob: -12.751519203186035
    6. '(pre' → logprob: -13.501519203186035
    7. '((' → logprob: -13.751519203186035
    8. '(' → logprob: -14.251519203186035
    9. '
' → logprob: -14.626519203186035
    10. '(P' → logprob: -14.751519203186035

Token 434: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.22724781930446625
    2. 'prefix' → logprob: -1.6022478342056274
    3. ' prefix' → logprob: -6.727247714996338
    4. ' (' → logprob: -7.477247714996338
    5. '(p' → logprob: -10.852248191833496
    6. '(' → logprob: -11.602248191833496
    7. '_prefix' → logprob: -11.977248191833496
    8. '((' → logprob: -12.102248191833496
    9. '(pref' → logprob: -12.102248191833496
    10. '
' → logprob: -12.477248191833496

Token 435: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.9040898880339228e-05
    2. '[j' → logprob: -10.500028610229492
    3. 'mod' → logprob: -14.500028610229492
    4. '[i' → logprob: -15.125028610229492
    5. '_' → logprob: -15.625028610229492
    6. '[' → logprob: -15.875028610229492
    7. '[_' → logprob: -16.500028610229492
    8. '[(' → logprob: -16.500028610229492
    9. '
' → logprob: -17.375028610229492
    10. '```' → logprob: -17.375028610229492

Token 436: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004067202680744231
    2. '[i' → logprob: -8.625406265258789
    3. 'j' → logprob: -9.000406265258789
    4. '[' → logprob: -10.500406265258789
    5. '(j' → logprob: -11.000406265258789
    6. '
' → logprob: -11.250406265258789
    7. '```' → logprob: -11.875406265258789
    8. '
' → logprob: -12.125406265258789
    9. '{' → logprob: -12.125406265258789
    10. ' [' → logprob: -12.625406265258789

Token 437: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003119863977190107
    2. ' +' → logprob: -8.375311851501465
    3. ']' → logprob: -9.500311851501465
    4. '[' → logprob: -13.125311851501465
    5. '1' → logprob: -14.000311851501465
    6. '+]' → logprob: -14.125311851501465
    7. '＋' → logprob: -14.625311851501465
    8. '-' → logprob: -14.750311851501465
    9. 'plus' → logprob: -14.750311851501465
    10. '   ' → logprob: -14.875311851501465

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.417976379045285e-05
    2. ' ' → logprob: -10.250043869018555
    3. '   ' → logprob: -11.875043869018555
    4. '2' → logprob: -14.000043869018555
    5. '```' → logprob: -15.125043869018555
    6. ']' → logprob: -16.500043869018555
    7. '  ' → logprob: -16.500043869018555
    8. '    ' → logprob: -16.750043869018555
    9. '``' → logprob: -17.000043869018555
    10. ')' → logprob: -17.125043869018555

Token 439: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3299642503261566
    2. ' -' → logprob: -1.329964280128479
    3. ')' → logprob: -5.0799641609191895
    4. '-' → logprob: -5.2049641609191895
    5. ']-' → logprob: -5.5799641609191895
    6. '}' → logprob: -7.7049641609191895
    7. '[' → logprob: -7.9549641609191895
    8. ' ]' → logprob: -9.829964637756348
    9. '```' → logprob: -10.079964637756348
    10. ')-' → logprob: -10.329964637756348

Token 440: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.494731605052948
    2. '(prefix' → logprob: -0.994731605052948
    3. ' prefix' → logprob: -4.119731426239014
    4. ' (' → logprob: -5.494731426239014
    5. '(' → logprob: -10.369731903076172
    6. 'pow' → logprob: -11.369731903076172
    7. '(p' → logprob: -11.619731903076172
    8. '((' → logprob: -11.994731903076172
    9. 'mod' → logprob: -11.994731903076172
    10. '(mod' → logprob: -12.619731903076172

Token 441: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -9.088346359931165e-07
    2. '[i' → logprob: -15.750000953674316
    3. 'mod' → logprob: -16.125
    4. '   ' → logprob: -16.25
    5. ' _' → logprob: -16.375
    6. '_' → logprob: -17.125
    7. '_prefix' → logprob: -17.25
    8. '_MOD' → logprob: -17.25
    9. '[_' → logprob: -17.375
    10. '[' → logprob: -17.375

Token 442: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011424804106354713
    2. 'i' → logprob: -7.376142501831055
    3. '[j' → logprob: -7.876142501831055
    4. '[' → logprob: -10.251142501831055
    5. '`' → logprob: -11.501142501831055
    6. ' [' → logprob: -11.751142501831055
    7. ']' → logprob: -11.876142501831055
    8. '[I' → logprob: -11.876142501831055
    9. '(i' → logprob: -12.001142501831055
    10. '[(' → logprob: -12.001142501831055

Token 443: ']*' (ID: 18579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2632520198822021
    2. '[j' → logprob: -1.2632520198822021
    3. '[i' → logprob: -1.6382520198822021
    4. ']' → logprob: -2.138252019882202
    5. ' *' → logprob: -3.138252019882202
    6. '*' → logprob: -3.513252019882202
    7. ']*' → logprob: -4.388252258300781
    8. ')*' → logprob: -4.638252258300781
    9. '+' → logprob: -5.013252258300781
    10. '[' → logprob: -5.013252258300781

Token 444: 'pow' (ID: 30304)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0020145252346992493
    2. ' mod' → logprob: -6.252014636993408
    3. 'pow' → logprob: -9.50201416015625
    4. '(mod' → logprob: -11.62701416015625
    5. '	mod' → logprob: -14.37701416015625
    6. '```' → logprob: -15.25201416015625
    7. '_mod' → logprob: -15.37701416015625
    8. ' ' → logprob: -15.75201416015625
    9. '10' → logprob: -15.87701416015625
    10. '(' → logprob: -16.12701416015625

Token 445: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6355258226394653
    2. '(' → logprob: -0.7605258226394653
    3. 'er' → logprob: -6.135525703430176
    4. 'mod' → logprob: -7.510525703430176
    5. '_mod' → logprob: -10.010525703430176
    6. 'ten' → logprob: -10.385525703430176
    7. '```' → logprob: -10.760525703430176
    8. 'erm' → logprob: -10.885525703430176
    9. 'pow' → logprob: -11.260525703430176
    10. 'ers' → logprob: -11.385525703430176

Token 446: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2522771656513214
    2. '(' → logprob: -1.502277135848999
    3. 'mod' → logprob: -9.002277374267578
    4. ')' → logprob: -9.002277374267578
    5. '[' → logprob: -10.752277374267578
    6. ' ' → logprob: -10.752277374267578
    7. '```' → logprob: -11.002277374267578
    8. ' (' → logprob: -11.377277374267578
    9. '   ' → logprob: -11.752277374267578
    10. '{' → logprob: -12.752277374267578

Token 447: ',j' (ID: 22712)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.574113130569458
    2. '[j' → logprob: -1.074113130569458
    3. '(' → logprob: -3.449113130569458
    4. ')' → logprob: -3.699113130569458
    5. '10' → logprob: -4.449112892150879
    6. '[' → logprob: -5.324112892150879
    7. 'j' → logprob: -5.324112892150879
    8. ',' → logprob: -5.699112892150879
    9. '[(' → logprob: -6.074112892150879
    10. '1' → logprob: -6.074112892150879

Token 448: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.691078245639801
    2. '+' → logprob: -1.9410781860351562
    3. '-i' → logprob: -2.5660781860351562
    4. '-j' → logprob: -2.5660781860351562
    5. ' -' → logprob: -2.9410781860351562
    6. '-(' → logprob: -2.9410781860351562
    7. '1' → logprob: -3.5660781860351562
    8. '(i' → logprob: -4.191078186035156
    9. '[i' → logprob: -4.441078186035156
    10. '[j' → logprob: -4.566078186035156

Token 449: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0382033996284008
    2. ')' → logprob: -4.038203239440918
    3. '1' → logprob: -4.788203239440918
    4. '))' → logprob: -5.788203239440918
    5. ' +' → logprob: -5.913203239440918
    6. '])' → logprob: -6.038203239440918
    7. ',' → logprob: -7.413203239440918
    8. '-' → logprob: -7.663203239440918
    9. ')]' → logprob: -7.663203239440918
    10. ']' → logprob: -7.788203239440918

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007390221580862999
    2. '2' → logprob: -5.507390022277832
    3. ')' → logprob: -6.007390022277832
    4. '(' → logprob: -8.632390022277832
    5. '
' → logprob: -8.757390022277832
    6. ' ' → logprob: -8.757390022277832
    7. '+' → logprob: -9.507390022277832
    8. '   ' → logprob: -9.632390022277832
    9. 'length' → logprob: -10.382390022277832
    10. '{' → logprob: -10.507390022277832

Token 451: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05247750133275986
    2. ')' → logprob: -3.1774775981903076
    3. ',' → logprob: -4.8024773597717285
    4. ')%' → logprob: -8.052477836608887
    5. ' ))' → logprob: -8.177477836608887
    6. '])' → logprob: -8.552477836608887
    7. '%' → logprob: -9.052477836608887
    8. '   ' → logprob: -9.427477836608887
    9. ' ,' → logprob: -9.927477836608887
    10. '```' → logprob: -10.677477836608887

Token 452: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04065621644258499
    2. ')' → logprob: -3.415656328201294
    3. ' )' → logprob: -6.915656089782715
    4. ' ' → logprob: -7.290656089782715
    5. '[' → logprob: -7.290656089782715
    6. '(' → logprob: -7.540656089782715
    7. '       ' → logprob: -7.915656089782715
    8. ']' → logprob: -7.915656089782715
    9. '10' → logprob: -8.165656089782715
    10. ' =' → logprob: -8.290656089782715

Token 453: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.016057714819908142
    2. ' Q' → logprob: -4.14105749130249
    3. '(Q' → logprob: -11.266057968139648
    4. '10' → logprob: -12.641057968139648
    5. ' ' → logprob: -13.266057968139648
    6. '   ' → logprob: -13.641057968139648
    7. '	Q' → logprob: -13.641057968139648
    8. '{' → logprob: -13.891057968139648
    9. '```' → logprob: -14.766057968139648
    10. ',Q' → logprob: -14.891057968139648

Token 454: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01243454497307539
    2. '
' → logprob: -5.012434482574463
    3. 'pow' → logprob: -5.887434482574463
    4. '    
' → logprob: -7.012434482574463
    5. ')' → logprob: -7.512434482574463
    6. 'from' → logprob: -8.012434959411621
    7. 'count' → logprob: -8.762434959411621
    8. 'dp' → logprob: -8.887434959411621
    9. 'import' → logprob: -9.012434959411621
    10. 'mod' → logprob: -9.262434959411621

Token 455: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13314585387706757
    2. ' ' → logprob: -2.383145809173584
    3. ' (' → logprob: -4.008145809173584
    4. '(' → logprob: -4.258145809173584
    5. '   ' → logprob: -10.383146286010742
    6. '(prefix' → logprob: -11.008146286010742
    7. 'prefix' → logprob: -11.758146286010742
    8. '((' → logprob: -11.883146286010742
    9. ' prefix' → logprob: -12.508146286010742
    10. '[' → logprob: -12.883146286010742

Token 456: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028908250387758017
    2. ' ' → logprob: -6.002890586853027
    3. '(' → logprob: -7.877890586853027
    4. ' (' → logprob: -10.252890586853027
    5. '   ' → logprob: -14.627890586853027
    6. '(prefix' → logprob: -16.002891540527344
    7. '((' → logprob: -16.502891540527344
    8. '000' → logprob: -17.877891540527344
    9. '```' → logprob: -17.877891540527344
    10. 'prefix' → logprob: -18.440391540527344

Token 457: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16750174760818481
    2. '
' → logprob: -2.04250168800354
    3. '    
' → logprob: -4.542501926422119
    4. ')' → logprob: -5.042501926422119
    5. '  
' → logprob: -6.417501926422119
    6. '<|end|>' → logprob: -6.542501926422119
    7. '\n' → logprob: -7.167501926422119
    8. '10' → logprob: -7.667501926422119
    9. ')
' → logprob: -7.667501926422119
    10. ',' → logprob: -7.792501926422119

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003914426546543837
    2. ')' → logprob: -6.7539143562316895
    3. '[' → logprob: -7.6289143562316895
    4. '    
' → logprob: -7.7539143562316895
    5. ',' → logprob: -8.003914833068848
    6. ':' → logprob: -8.128914833068848
    7. '
' → logprob: -8.378914833068848
    8. '...' → logprob: -8.503914833068848
    9. '<|end|>' → logprob: -8.878914833068848
    10. '```' → logprob: -9.253914833068848

Token 459: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1142209768295288
    2. '[' → logprob: -1.2392209768295288
    3. ':' → logprob: -1.9892209768295288
    4. '   ' → logprob: -2.6142210960388184
    5. '[
' → logprob: -3.1142210960388184
    6. '(' → logprob: -3.9892210960388184
    7. ':
' → logprob: -4.239221096038818
    8. ')' → logprob: -4.364221096038818
    9. '(
' → logprob: -4.739221096038818
    10. '  
' → logprob: -4.989221096038818

Token 460: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2977787256240845
    2. '       ' → logprob: -3.297778606414795
    3. '10' → logprob: -3.297778606414795
    4. 'pow' → logprob: -3.422778606414795
    5. ')' → logprob: -3.797778606414795
    6. ' for' → logprob: -3.922778606414795
    7. 'for' → logprob: -3.922778606414795
    8. ' 
' → logprob: -4.172778606414795
    9. '\n' → logprob: -4.297778606414795
    10. ' ' → logprob: -4.422778606414795

Token 461: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.729793906211853
    2. ' for' → logprob: -0.979793906211853
    3. 'from' → logprob: -3.6047940254211426
    4. 'pow' → logprob: -3.8547940254211426
    5. 'prefix' → logprob: -4.104794025421143
    6. '
' → logprob: -4.354794025421143
    7. ' pow' → logprob: -4.479794025421143
    8. ' (' → logprob: -4.729794025421143
    9. '   ' → logprob: -5.104794025421143
    10. ' prefix' → logprob: -5.354794025421143

Token 462: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -6.392202976712724e-06
    2. ' _' → logprob: -13.375006675720215
    3. '   ' → logprob: -13.625006675720215
    4. 'mod' → logprob: -13.875006675720215
    5. '_' → logprob: -14.375006675720215
    6. '_exp' → logprob: -15.500006675720215
    7. '_m' → logprob: -15.625006675720215
    8. '_pow' → logprob: -15.875006675720215
    9. '[_' → logprob: -16.2500057220459
    10. '_len' → logprob: -16.2500057220459

Token 463: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002754118526354432
    2. '[' → logprob: -6.627754211425781
    3. '[i' → logprob: -6.877754211425781
    4. '[(' → logprob: -9.877754211425781
    5. '==' → logprob: -10.002754211425781
    6. ' [' → logprob: -10.502754211425781
    7. ']' → logprob: -10.502754211425781
    8. 's' → logprob: -10.752754211425781
    9. ')' → logprob: -10.752754211425781
    10. ' =' → logprob: -11.252754211425781

Token 464: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004036133177578449
    2. ' +' → logprob: -6.004035949707031
    3. ']' → logprob: -7.629035949707031
    4. '[i' → logprob: -8.004035949707031
    5. '[' → logprob: -8.254035949707031
    6. ']+' → logprob: -9.254035949707031
    7. '```' → logprob: -9.379035949707031
    8. '1' → logprob: -10.129035949707031
    9. '+i' → logprob: -10.629035949707031
    10. '   ' → logprob: -10.691535949707031

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.500008583068848
    3. '```' → logprob: -13.750008583068848
    4. '
' → logprob: -14.125008583068848
    5. '2' → logprob: -14.437508583068848
    6. '   ' → logprob: -14.562508583068848
    7. '`' → logprob: -14.812508583068848
    8. '>' → logprob: -15.687508583068848
    9. ')' → logprob: -16.06250762939453
    10. '...' → logprob: -16.12500762939453

Token 466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6382232904434204
    2. ' -' → logprob: -1.2632232904434204
    3. ' ==' → logprob: -2.513223171234131
    4. ')' → logprob: -3.388223171234131
    5. ' =' → logprob: -4.013223171234131
    6. '-' → logprob: -4.263223171234131
    7. ']==' → logprob: -4.388223171234131
    8. '==' → logprob: -4.638223171234131
    9. ' ]' → logprob: -5.263223171234131
    10. '=' → logprob: -6.013223171234131

Token 467: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6945931315422058
    2. ' ==' → logprob: -0.6945931315422058
    3. ']==' → logprob: -7.9445929527282715
    4. ' -' → logprob: -8.69459342956543
    5. ')==' → logprob: -8.69459342956543
    6. ')' → logprob: -8.81959342956543
    7. ' =' → logprob: -8.94459342956543
    8. '=' → logprob: -8.94459342956543
    9. '==(' → logprob: -9.19459342956543
    10. ' must' → logprob: -10.06959342956543

Token 468: ' prefix' (ID: 18633)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.01550010871142149
    2. 'prefix' → logprob: -4.765500068664551
    3. ' (' → logprob: -5.015500068664551
    4. ' prefix' → logprob: -8.51550006866455
    5. '   ' → logprob: -12.14050006866455
    6. '(p' → logprob: -12.26550006866455
    7. ' ' → logprob: -12.39050006866455
    8. '(' → logprob: -12.89050006866455
    9. '(pref' → logprob: -13.01550006866455
    10. '(mod' → logprob: -13.76550006866455

Token 469: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.9361264946837764e-07
    2. 'mod' → logprob: -17.875
    3. ' _' → logprob: -18.375
    4. '_MOD' → logprob: -18.75
    5. '[_' → logprob: -19.0
    6. '   ' → logprob: -19.25
    7. '_' → logprob: -19.5
    8. 'a' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. ''_' → logprob: -19.875

Token 470: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004216170927975327
    2. '[j' → logprob: -8.250421524047852
    3. 'i' → logprob: -8.875421524047852
    4. ' [' → logprob: -11.500421524047852
    5. '[' → logprob: -12.125421524047852
    6. '_i' → logprob: -14.375421524047852
    7. '
' → logprob: -14.375421524047852
    8. ' i' → logprob: -14.625421524047852
    9. '   ' → logprob: -14.750421524047852
    10. '```' → logprob: -14.750421524047852

Token 471: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8167219758033752
    2. '+' → logprob: -1.4417219161987305
    3. '[j' → logprob: -1.6917219161987305
    4. ']*' → logprob: -2.1917219161987305
    5. '[i' → logprob: -4.6917219161987305
    6. '[' → logprob: -5.5667219161987305
    7. '   ' → logprob: -5.8167219161987305
    8. '*' → logprob: -6.1917219161987305
    9. '])' → logprob: -6.3167219161987305
    10. ')' → logprob: -6.8167219161987305

Token 472: '10' (ID: 702)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.4748196303844452
    2. 'mod' → logprob: -0.9748196601867676
    3. ' mod' → logprob: -7.599819660186768
    4. ' pow' → logprob: -8.59981918334961
    5. '(pow' → logprob: -10.22481918334961
    6. '```' → logprob: -11.59981918334961
    7. '(mod' → logprob: -11.97481918334961
    8. '10' → logprob: -13.34981918334961
    9. '`' → logprob: -13.84981918334961
    10. '(' → logprob: -14.59981918334961

Token 473: '^{' (ID: 42923)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',j' → logprob: -1.1818573474884033
    2. '[j' → logprob: -1.6818573474884033
    3. '   ' → logprob: -2.0568573474884033
    4. ',' → logprob: -2.1818573474884033
    5. 'pow' → logprob: -2.1818573474884033
    6. ' ,' → logprob: -3.1818573474884033
    7. '1' → logprob: -3.4318573474884033
    8. 'j' → logprob: -3.8068573474884033
    9. '**' → logprob: -4.806857109069824
    10. ' ' → logprob: -4.806857109069824

Token 474: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38797155022621155
    2. '(j' → logprob: -1.1379715204238892
    3. ' (' → logprob: -7.3879714012146
    4. '{' → logprob: -8.762971878051758
    5. '(' → logprob: -9.387971878051758
    6. ' j' → logprob: -9.512971878051758
    7. '((' → logprob: -9.637971878051758
    8. ' ' → logprob: -10.387971878051758
    9. '[j' → logprob: -10.637971878051758
    10. '```' → logprob: -10.887971878051758

Token 475: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.22532612085342407
    2. ' -' → logprob: -2.3503260612487793
    3. '-' → logprob: -3.2253260612487793
    4. '-(' → logprob: -3.3503260612487793
    5. '-j' → logprob: -4.350326061248779
    6. 'i' → logprob: -4.475326061248779
    7. '(i' → logprob: -6.350326061248779
    8. ' (' → logprob: -7.100326061248779
    9. '   ' → logprob: -7.225326061248779
    10. '1' → logprob: -7.350326061248779

Token 476: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00048083928413689137
    2. '1' → logprob: -8.000480651855469
    3. ' +' → logprob: -9.125480651855469
    4. '```' → logprob: -11.625480651855469
    5. '{' → logprob: -11.750480651855469
    6. '   ' → logprob: -11.875480651855469
    7. '2' → logprob: -12.875480651855469
    8. '+
' → logprob: -13.625480651855469
    9. ' ' → logprob: -13.875480651855469
    10. ''+' → logprob: -14.375480651855469

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019090480054728687
    2. '+' → logprob: -8.625190734863281
    3. '
' → logprob: -12.500190734863281
    4. ' ' → logprob: -13.375190734863281
    5. '{' → logprob: -13.750190734863281
    6. '(' → logprob: -13.750190734863281
    7. '```' → logprob: -14.125190734863281
    8. '   ' → logprob: -14.250190734863281
    9. 'length' → logprob: -14.250190734863281
    10. 'plus' → logprob: -15.250190734863281

Token 478: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.003037962829694152
    2. ' }' → logprob: -6.378037929534912
    3. ']' → logprob: -7.753037929534912
    4. '}+' → logprob: -7.878037929534912
    5. ')' → logprob: -8.62803840637207
    6. '})' → logprob: -9.25303840637207
    7. '%' → logprob: -9.75303840637207
    8. '   ' → logprob: -9.87803840637207
    9. '+' → logprob: -10.25303840637207
    10. '```' → logprob: -10.87803840637207

Token 479: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7071561217308044
    2. '
' → logprob: -0.9571561217308044
    3. 'from' → logprob: -2.957156181335449
    4. 'pow' → logprob: -3.582156181335449
    5. '    
' → logprob: -4.832156181335449
    6. ')' → logprob: -5.332156181335449
    7. '10' → logprob: -5.582156181335449
    8. 'dp' → logprob: -5.832156181335449
    9. '
' → logprob: -6.207156181335449
    10. 'count' → logprob: -6.207156181335449

Token 480: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.005234002135694027
    2. ' Q' → logprob: -5.2552337646484375
    3. '(Q' → logprob: -16.380233764648438
    4. '	Q' → logprob: -17.005233764648438
    5. ' ' → logprob: -17.755233764648438
    6. '   ' → logprob: -18.005233764648438
    7. ',Q' → logprob: -19.255233764648438
    8. '_Q' → logprob: -19.255233764648438
    9. '```' → logprob: -19.630233764648438
    10. '<Q' → logprob: -20.255233764648438

Token 481: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005539070349186659
    2. 'from' → logprob: -5.8805389404296875
    3. '    
' → logprob: -6.3805389404296875
    4. '
' → logprob: -7.1305389404296875
    5. ' from' → logprob: -9.880538940429688
    6. 'import' → logprob: -10.005538940429688
    7. 'dp' → logprob: -10.755538940429688
    8. 'count' → logprob: -10.880538940429688
    9. '```' → logprob: -11.255538940429688
    10. ')' → logprob: -11.380538940429688

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001399164437316358
    2. '    
' → logprob: -7.126399040222168
    3. '
' → logprob: -8.751399040222168
    4. 'for' → logprob: -9.001399040222168
    5. 'from' → logprob: -9.251399040222168
    6. 'count' → logprob: -10.376399040222168
    7. ')' → logprob: -10.376399040222168
    8. 'pow' → logprob: -10.626399040222168
    9. 'dp' → logprob: -10.876399040222168
    10. 'mod' → logprob: -11.376399040222168

Token 483: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14732420444488525
    2. '
' → logprob: -2.2723240852355957
    3. '    
' → logprob: -3.8973240852355957
    4. ' 
' → logprob: -5.647324085235596
    5. '\n' → logprob: -5.772324085235596
    6. '  
' → logprob: -5.897324085235596
    7. '```' → logprob: -6.022324085235596
    8. '   
' → logprob: -7.897324085235596
    9. ' for' → logprob: -8.147324562072754
    10. ':' → logprob: -8.397324562072754

Token 484: ' On' (ID: 2160)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5054193139076233
    2. 'count' → logprob: -1.5054192543029785
    3. '   ' → logprob: -3.0054192543029785
    4. 'counts' → logprob: -3.2554192543029785
    5. 'from' → logprob: -3.7554192543029785
    6. 'pos' → logprob: -4.3804192543029785
    7. 'powers' → logprob: -4.3804192543029785
    8. 'dp' → logprob: -4.6304192543029785
    9. 'power' → logprob: -5.0054192543029785
    10. 'counter' → logprob: -5.5054192543029785

Token 485: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.644571840763092
    2. ' continue' → logprob: -1.0195717811584473
    3. 'from' → logprob: -3.3945717811584473
    4. '=' → logprob: -4.519571781158447
    5. '   ' → logprob: -4.519571781158447
    6. 'def' → logprob: -4.894571781158447
    7. ' =' → logprob: -4.894571781158447
    8. 'initialize' → logprob: -5.644571781158447
    9. ' initialize' → logprob: -5.769571781158447
    10. 'for' → logprob: -5.769571781158447

Token 486: ' invers' (ID: 38721)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.209353506565094
    2. 'count' → logprob: -3.459353446960449
    3. 'util' → logprob: -3.709353446960449
    4. '   ' → logprob: -3.834353446960449
    5. 'default' → logprob: -3.834353446960449
    6. 'continue' → logprob: -3.959353446960449
    7. ' utiliser' → logprob: -4.334353446960449
    8. ' from' → logprob: -5.084353446960449
    9. 'import' → logprob: -5.334353446960449
    10. 'contin' → logprob: -5.334353446960449

Token 487: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.003986027557402849
    2. 'e' → logprob: -5.75398588180542
    3. 'érer' → logprob: -7.50398588180542
    4. 'ter' → logprob: -9.003986358642578
    5. 'ion' → logprob: -9.878986358642578
    6. 'é' → logprob: -11.378986358642578
    7. 't' → logprob: -11.503986358642578
    8. 'et' → logprob: -11.503986358642578
    9. 'ert' → logprob: -11.503986358642578
    10. 'iter' → logprob: -12.253986358642578

Token 488: ' la' (ID: 557)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.6263104677200317
    2. ')' → logprob: -2.501310348510742
    3. 'import' → logprob: -2.501310348510742
    4. ' the' → logprob: -2.626310348510742
    5. '   ' → logprob: -3.126310348510742
    6. ' ' → logprob: -3.251310348510742
    7. '    ' → logprob: -3.376310348510742
    8. ' j' → logprob: -3.376310348510742
    9. ' pow' → logprob: -3.501310348510742
    10. '       ' → logprob: -3.501310348510742

Token 489: ' relation' (ID: 18075)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.35524097084999084
    2. 'mod' → logprob: -2.480241060256958
    3. '#' → logprob: -3.605241060256958
    4. 'for' → logprob: -4.105240821838379
    5. ' pow' → logprob: -4.355240821838379
    6. 'i' → logprob: -4.355240821838379
    7. 'range' → logprob: -4.480240821838379
    8. '10' → logprob: -4.605240821838379
    9. 'def' → logprob: -4.730240821838379
    10. ' mod' → logprob: -4.855240821838379

Token 490: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016849361127242446
    2. '
' → logprob: -7.12668514251709
    3. '    
' → logprob: -7.87668514251709
    4. ')' → logprob: -8.62668514251709
    5. ':' → logprob: -9.00168514251709
    6. ' =' → logprob: -10.37668514251709
    7. '#' → logprob: -11.12668514251709
    8. '  
' → logprob: -11.25168514251709
    9. '```' → logprob: -11.37668514251709
    10. 'from' → logprob: -11.62668514251709

Token 491: ' compter' (ID: 81694)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2616552114486694
    2. 'i' → logprob: -1.6366552114486694
    3. '   ' → logprob: -2.386655330657959
    4. ' pouvoir' → logprob: -2.386655330657959
    5. ' compter' → logprob: -3.011655330657959
    6. 'comp' → logprob: -3.511655330657959
    7. ' ' → logprob: -3.511655330657959
    8. ' continuer' → logprob: -3.636655330657959
    9. 'count' → logprob: -3.761655330657959
    10. ' utiliser' → logprob: -4.011655330657959

Token 492: ' efficacement' (ID: 155449)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022056175395846367
    2. ')' → logprob: -5.0220561027526855
    3. ' =' → logprob: -6.2720561027526855
    4. '{' → logprob: -6.7720561027526855
    5. '
' → logprob: -7.0220561027526855
    6. '    ' → logprob: -7.0220561027526855
    7. '=' → logprob: -7.1470561027526855
    8. '```' → logprob: -7.1470561027526855
    9. 'from' → logprob: -7.3970561027526855
    10. 'for' → logprob: -7.3970561027526855

Token 493: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017026087269186974
    2. 'count' → logprob: -5.142025947570801
    3. 'from' → logprob: -5.392025947570801
    4. '
' → logprob: -6.267025947570801
    5. 'counts' → logprob: -6.517025947570801
    6. '    
' → logprob: -6.767025947570801
    7. 'counter' → logprob: -7.517025947570801
    8. 'freq' → logprob: -8.2670259475708
    9. 'indices' → logprob: -8.5170259475708
    10. 'dp' → logprob: -8.8920259475708

Token 494: ' pré' (ID: 9424)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.3322800397872925
    2. 'a' → logprob: -1.4572800397872925
    3. 'pow' → logprob: -1.4572800397872925
    4. ' un' → logprob: -1.7072800397872925
    5. 'default' → logprob: -3.082280158996582
    6. 'prefix' → logprob: -5.582280158996582
    7. 'from' → logprob: -5.582280158996582
    8. '```' → logprob: -5.707280158996582
    9. ' defaultdict' → logprob: -5.832280158996582
    10. 'une' → logprob: -5.832280158996582

Token 495: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.003399909706786275
    2. 'cision' → logprob: -6.503399848937988
    3. 'c' → logprob: -7.128399848937988
    4. 'dict' → logprob: -8.378399848937988
    5. 'fixed' → logprob: -8.753399848937988
    6. 'dic' → logprob: -9.503399848937988
    7. 'cis' → logprob: -9.628399848937988
    8. 'vious' → logprob: -9.753399848937988
    9. '{}' → logprob: -10.128399848937988
    10. 'f' → logprob: -10.128399848937988

Token 496: 'es' (ID: 268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23648780584335327
    2. '_mod' → logprob: -1.736487865447998
    3. 'sum' → logprob: -4.736487865447998
    4. 'mod' → logprob: -5.361487865447998
    5. '       ' → logprob: -5.361487865447998
    6. ' ' → logprob: -5.861487865447998
    7. '_sum' → logprob: -5.861487865447998
    8. ')' → logprob: -6.611487865447998
    9. ']' → logprob: -6.736487865447998
    10. ' sums' → logprob: -6.736487865447998

Token 497: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025980819016695023
    2. '
' → logprob: -5.1509809494018555
    3. 'count' → logprob: -5.1509809494018555
    4. 'from' → logprob: -5.5259809494018555
    5. '    
' → logprob: -5.7759809494018555
    6. 'counts' → logprob: -6.0259809494018555
    7. 'counter' → logprob: -7.7759809494018555
    8. 'dp' → logprob: -8.025980949401855
    9. 'freq' → logprob: -8.025980949401855
    10. 'indices' → logprob: -8.150980949401855

Token 498: ' puiss' (ID: 102546)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.718749463558197
    2. 'suffix' → logprob: -1.0937495231628418
    3. 'default' → logprob: -2.343749523162842
    4. 'multip' → logprob: -3.843749523162842
    5. 'powers' → logprob: -4.593749523162842
    6. 'hash' → logprob: -4.718749523162842
    7. ' suffix' → logprob: -4.718749523162842
    8. 'p' → logprob: -5.093749523162842
    9. ' pow' → logprob: -5.593749523162842
    10. 'power' → logprob: -5.968749523162842

Token 499: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.9406493902206421
    2. 'es' → logprob: -1.315649390220642
    3. 'ions' → logprob: -1.440649390220642
    4. '   ' → logprob: -3.0656495094299316
    5. 'ion' → logprob: -4.440649509429932
    6. 'a' → logprob: -5.315649509429932
    7. 'és' → logprob: -5.315649509429932
    8. 'ance' → logprob: -5.440649509429932
    9. 'ations' → logprob: -5.565649509429932
    10. 'ages' → logprob: -5.690649509429932

Token 500: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04899165779352188
    2. '
' → logprob: -3.1739916801452637
    3. '    
' → logprob: -6.048991680145264
    4. '  
' → logprob: -7.048991680145264
    5. ' =' → logprob: -7.798991680145264
    6. '   
' → logprob: -8.173991203308105
    7. ')' → logprob: -8.423991203308105
    8. ',' → logprob: -8.673991203308105
    9. ':' → logprob: -8.798991203308105
    10. 'count' → logprob: -8.923991203308105

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06581343710422516
    2. 'count' → logprob: -3.3158135414123535
    3. 'pow' → logprob: -4.6908135414123535
    4. 'counts' → logprob: -4.9408135414123535
    5. 'dp' → logprob: -5.5658135414123535
    6. 'from' → logprob: -6.1908135414123535
    7. 'powers' → logprob: -6.1908135414123535
    8. 'power' → logprob: -7.5658135414123535
    9. '
' → logprob: -7.6908135414123535
    10. 'cnt' → logprob: -7.9408135414123535

Token 502: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0160069465637207
    2. 'pow' → logprob: -1.5160069465637207
    3. 'from' → logprob: -1.7660069465637207
    4. '   ' → logprob: -2.2660069465637207
    5. 'pos' → logprob: -3.5160069465637207
    6. 'counts' → logprob: -3.5160069465637207
    7. 'dp' → logprob: -4.016006946563721
    8. 'freq' → logprob: -4.141006946563721
    9. 'power' → logprob: -4.266006946563721
    10. 'powers' → logprob: -4.266006946563721

Token 503: ' Calcul' (ID: 57243)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.2452266216278076
    2. '   ' → logprob: -1.7452266216278076
    3. 'from' → logprob: -1.7452266216278076
    4. 'count' → logprob: -1.9952266216278076
    5. 'pos' → logprob: -2.8702266216278076
    6. 'dp' → logprob: -2.9952266216278076
    7. 'power' → logprob: -3.7452266216278076
    8. 'counts' → logprob: -3.9952266216278076
    9. 'powers' → logprob: -4.370226860046387
    10. 'freq' → logprob: -4.620226860046387

Token 504: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10801617801189423
    2. 'pow' → logprob: -3.1080162525177
    3. '_pow' → logprob: -4.983016014099121
    4. ' =' → logprob: -4.983016014099121
    5. '_p' → logprob: -5.108016014099121
    6. 'powers' → logprob: -5.108016014099121
    7. '=' → logprob: -5.358016014099121
    8. ' pow' → logprob: -5.733016014099121
    9. ' powers' → logprob: -5.858016014099121
    10. ' of' → logprob: -5.983016014099121

Token 505: ' puiss' (ID: 102546)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.07713375240564346
    2. 'powers' → logprob: -3.0771336555480957
    3. ' pow' → logprob: -3.8271336555480957
    4. 'power' → logprob: -5.702133655548096
    5. ' powers' → logprob: -6.077133655548096
    6. ' power' → logprob: -8.327134132385254
    7. ' puiss' → logprob: -8.952134132385254
    8. 'pu' → logprob: -9.202134132385254
    9. 'pw' → logprob: -9.577134132385254
    10. 'p' → logprob: -10.202134132385254

Token 506: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.00015788905147928745
    2. 'es' → logprob: -9.125158309936523
    3. '10' → logprob: -10.875158309936523
    4. 'ance' → logprob: -11.500158309936523
    5. 'ences' → logprob: -11.625158309936523
    6. '   ' → logprob: -12.625158309936523
    7. ' ' → logprob: -13.125158309936523
    8. 'ANCES' → logprob: -13.250158309936523
    9. 'ages' → logprob: -13.625158309936523
    10. 'ces' → logprob: -14.125158309936523

Token 507: ' de' (ID: 334)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6020753979682922
    2. '_' → logprob: -1.7270753383636475
    3. ' =' → logprob: -2.1020753383636475
    4. 'pow' → logprob: -2.6020753383636475
    5. '   ' → logprob: -3.3520753383636475
    6. 'of' → logprob: -4.102075576782227
    7. '_pow' → logprob: -4.852075576782227
    8. '_of' → logprob: -4.977075576782227
    9. '=' → logprob: -5.102075576782227
    10. '_p' → logprob: -6.727075576782227

Token 508: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0014673690311610699
    2. ' ' → logprob: -6.751467227935791
    3. '(' → logprob: -9.12646770477295
    4. 'pow' → logprob: -9.37646770477295
    5. 'ten' → logprob: -10.37646770477295
    6. '[' → logprob: -10.50146770477295
    7. 'def' → logprob: -11.37646770477295
    8. ' ten' → logprob: -11.75146770477295
    9. 't' → logprob: -12.00146770477295
    10. 'mod' → logprob: -12.37646770477295

Token 509: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.87502670288086
    3. 'pow' → logprob: -12.50002670288086
    4. '   ' → logprob: -13.25002670288086
    5. '(' → logprob: -14.50002670288086
    6. 'mod' → logprob: -14.75002670288086
    7. 'ten' → logprob: -15.75002670288086
    8. 'powers' → logprob: -16.12502670288086
    9. '```' → logprob: -16.12502670288086
    10. '１０' → logprob: -16.25002670288086

Token 510: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36624565720558167
    2. '=' → logprob: -1.3662456274032593
    3. 'pow' → logprob: -3.491245746612549
    4. '[' → logprob: -4.491245746612549
    5. '10' → logprob: -5.616245746612549
    6. '   ' → logprob: -5.991245746612549
    7. '=[' → logprob: -6.366245746612549
    8. 'p' → logprob: -7.866245746612549
    9. 'mod' → logprob: -7.866245746612549
    10. 'powers' → logprob: -8.11624526977539

Token 511: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.15854711830615997
    2. '[' → logprob: -2.6585471630096436
    3. '(Q' → logprob: -3.2835471630096436
    4. '(' → logprob: -4.0335469245910645
    5. '   ' → logprob: -4.9085469245910645
    6. '10' → logprob: -5.1585469245910645
    7. 'mod' → logprob: -6.1585469245910645
    8. ' =' → logprob: -6.6585469245910645
    9. ']' → logprob: -7.0335469245910645
    10. ' (' → logprob: -7.0335469245910645

Token 512: '
' (ID: 198)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1820243000984192
    2. '   ' → logprob: -1.9320242404937744
    3. 'p' → logprob: -4.1820244789123535
    4. 'power' → logprob: -6.3070244789123535
    5. ' pow' → logprob: -6.4320244789123535
    6. 'powers' → logprob: -6.6820244789123535
    7. '10' → logprob: -7.9320244789123535
    8. ' =' → logprob: -8.432024002075195
    9. 'pw' → logprob: -8.557024002075195
    10. ' p' → logprob: -8.807024002075195

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5295423269271851
    2. 'pow' → logprob: -0.9045423269271851
    3. 'p' → logprob: -6.029542446136475
    4. 'power' → logprob: -6.154542446136475
    5. 'powers' → logprob: -6.904542446136475
    6. ' pow' → logprob: -7.404542446136475
    7. ' power' → logprob: -9.404541969299316
    8. 'pw' → logprob: -9.779541969299316
    9. '10' → logprob: -10.779541969299316
    10. ' p' → logprob: -10.904541969299316

Token 514: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.07232189178466797
    2. '   ' → logprob: -3.072321891784668
    3. ' pow' → logprob: -4.072321891784668
    4. 'power' → logprob: -5.572321891784668
    5. ' power' → logprob: -6.822321891784668
    6. 'p' → logprob: -6.822321891784668
    7. 'powers' → logprob: -8.197321891784668
    8. ' p' → logprob: -9.447321891784668
    9. 'pw' → logprob: -10.572321891784668
    10. '10' → logprob: -10.822321891784668

Token 515: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22767740488052368
    2. '_' → logprob: -1.602677345275879
    3. '=' → logprob: -6.852677345275879
    4. ' =' → logprob: -6.977677345275879
    5. 's' → logprob: -9.102677345275879
    6. '_=' → logprob: -9.727677345275879
    7. '(' → logprob: -9.852677345275879
    8. '```' → logprob: -11.352677345275879
    9. '_t' → logprob: -12.102677345275879
    10. '[' → logprob: -12.352677345275879

Token 516: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31334221363067627
    2. ' =' → logprob: -1.3133422136306763
    3. '=[' → logprob: -9.688342094421387
    4. '[' → logprob: -11.313342094421387
    5. ' =[' → logprob: -13.188342094421387
    6. ' ' → logprob: -13.313342094421387
    7. '   ' → logprob: -13.938342094421387
    8. ']' → logprob: -15.313342094421387
    9. '  ' → logprob: -15.313342094421387
    10. '```' → logprob: -15.563342094421387

Token 517: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003178901970386505
    2. ' [' → logprob: -5.75317907333374
    3. '[N' → logprob: -14.128178596496582
    4. '[len' → logprob: -16.3781795501709
    5. '[n' → logprob: -16.5031795501709
    6. '[num' → logprob: -16.7531795501709
    7. '[p' → logprob: -16.7531795501709
    8. '   ' → logprob: -16.8781795501709
    9. '[count' → logprob: -18.3781795501709
    10. '[length' → logprob: -18.3781795501709

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.000000953674316
    3. 'None' → logprob: -16.375
    4. ']' → logprob: -17.375
    5. '```' → logprob: -19.0
    6. ' ' → logprob: -19.0
    7. '
' → logprob: -19.375
    8. '(' → logprob: -19.625
    9. 'pow' → logprob: -19.75
    10. '[' → logprob: -20.125

Token 519: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6960246562957764
    2. ']*(' → logprob: -0.6960246562957764
    3. ']
' → logprob: -6.3210248947143555
    4. ']*' → logprob: -7.5710248947143555
    5. ']+' → logprob: -8.321024894714355
    6. '*(' → logprob: -8.446024894714355
    7. '   ' → logprob: -9.946024894714355
    8. ']
' → logprob: -10.696024894714355
    9. '(' → logprob: -11.071024894714355
    10. '```' → logprob: -12.571024894714355

Token 520: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.696889623621246e-06
    2. '(N' → logprob: -13.00000286102295
    3. ' N' → logprob: -15.37500286102295
    4. '   ' → logprob: -15.62500286102295
    5. 'n' → logprob: -17.750001907348633
    6. '[N' → logprob: -18.000001907348633
    7. 'len' → logprob: -18.125001907348633
    8. ' ' → logprob: -18.375001907348633
    9. '	N' → logprob: -18.875001907348633
    10. 'Q' → logprob: -19.250001907348633

Token 521: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.584239938296378e-06
    2. '+
' → logprob: -12.250007629394531
    3. ' +' → logprob: -12.875007629394531
    4. '
' → logprob: -16.87500762939453
    5. '   ' → logprob: -17.50000762939453
    6. '1' → logprob: -17.87500762939453
    7. '```' → logprob: -18.25000762939453
    8. '+)' → logprob: -19.00000762939453
    9. ')' → logprob: -20.25000762939453
    10. '+\' → logprob: -20.50000762939453

Token 522: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7091670036315918
    2. '1' → logprob: -1.3341670036315918
    3. 'N' → logprob: -1.4591670036315918
    4. '(N' → logprob: -5.459167003631592
    5. '   ' → logprob: -5.584167003631592
    6. ' ' → logprob: -6.209167003631592
    7. ' N' → logprob: -6.959167003631592
    8. '(' → logprob: -7.209167003631592
    9. ' +' → logprob: -8.58416748046875
    10. 'Q' → logprob: -9.20916748046875

Token 523: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16040293872356415
    2. ')' → logprob: -1.9104028940200806
    3. ')
' → logprob: -8.78540325164795
    4. '   ' → logprob: -10.78540325164795
    5. ' )
' → logprob: -12.66040325164795
    6. ')`
' → logprob: -14.53540325164795
    7. ' )' → logprob: -14.66040325164795
    8. ')

' → logprob: -14.78540325164795
    9. '```' → logprob: -15.53540325164795
    10. ']
' → logprob: -16.285402297973633

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16209493577480316
    2. 'for' → logprob: -1.9120949506759644
    3. ' for' → logprob: -6.287095069885254
    4. '	for' → logprob: -11.662095069885254
    5. '       ' → logprob: -16.912094116210938
    6. '```' → logprob: -16.912094116210938
    7. '
' → logprob: -17.162094116210938
    8. ' ' → logprob: -17.537094116210938
    9. '    
' → logprob: -18.037094116210938
    10. '  ' → logprob: -18.162094116210938

Token 525: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014496183022856712
    2. '   ' → logprob: -4.264496326446533
    3. ' for' → logprob: -8.014495849609375
    4. '	for' → logprob: -13.139495849609375
    5. '```' → logprob: -18.139495849609375
    6. ' ' → logprob: -19.139495849609375
    7. '
' → logprob: -19.639495849609375
    8. '       ' → logprob: -19.764495849609375
    9. '  ' → logprob: -19.889495849609375
    10. '    
' → logprob: -20.389495849609375

Token 526: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002475777640938759
    2. ' i' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.62747573852539
    4. ' ' → logprob: -16.75247573852539
    5. '	i' → logprob: -17.25247573852539
    6. '1' → logprob: -17.87747573852539
    7. '_i' → logprob: -18.50247573852539
    8. '  ' → logprob: -18.87747573852539
    9. 'k' → logprob: -19.00247573852539
    10. 'x' → logprob: -19.12747573852539

Token 527: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012100351974368095
    2. 'in' → logprob: -4.5121002197265625
    3. '1' → logprob: -6.8871002197265625
    4. '   ' → logprob: -11.137100219726562
    5. 'range' → logprob: -11.637100219726562
    6. ' ' → logprob: -13.262100219726562
    7. 'import' → logprob: -13.387100219726562
    8. '	in' → logprob: -13.762100219726562
    9. '
' → logprob: -14.887100219726562
    10. '  ' → logprob: -14.887100219726562

Token 528: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022167760878801346
    2. ' range' → logprob: -4.022167682647705
    3. '1' → logprob: -5.522167682647705
    4. ' ' → logprob: -11.647168159484863
    5. 'in' → logprob: -13.397168159484863
    6. ' in' → logprob: -13.397168159484863
    7. '   ' → logprob: -15.272168159484863
    8. '(range' → logprob: -15.272168159484863
    9. '  ' → logprob: -16.147167205810547
    10. '
' → logprob: -16.147167205810547

Token 529: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003510741807986051
    2. 'N' → logprob: -8.000350952148438
    3. ' ' → logprob: -11.750350952148438
    4. '(' → logprob: -12.000350952148438
    5. '(N' → logprob: -14.000350952148438
    6. '   ' → logprob: -14.625350952148438
    7. ' N' → logprob: -15.375350952148438
    8. 'range' → logprob: -17.250350952148438
    9. '
' → logprob: -17.750350952148438
    10. '    ' → logprob: -18.750350952148438

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00672211404889822
    2. 'N' → logprob: -5.0067219734191895
    3. ' ' → logprob: -12.756722450256348
    4. '   ' → logprob: -13.756722450256348
    5. 'range' → logprob: -13.881722450256348
    6. ' N' → logprob: -14.256722450256348
    7. '(' → logprob: -15.631722450256348
    8. '0' → logprob: -15.756722450256348
    9. 'n' → logprob: -15.881722450256348
    10. '
' → logprob: -16.13172149658203

Token 531: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01272648572921753
    2. ',N' → logprob: -4.387726306915283
    3. ' ,' → logprob: -8.512726783752441
    4. ',
' → logprob: -12.137726783752441
    5. ',n' → logprob: -12.387726783752441
    6. ',len' → logprob: -12.762726783752441
    7. '   ' → logprob: -13.637726783752441
    8. 'N' → logprob: -14.762726783752441
    9. ',Q' → logprob: -15.137726783752441
    10. 'to' → logprob: -15.137726783752441

Token 532: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03497958555817604
    2. '):
' → logprob: -3.4099795818328857
    3. '1' → logprob: -7.534979820251465
    4. '):' → logprob: -7.909979820251465
    5. '   ' → logprob: -8.659979820251465
    6. ' +' → logprob: -8.659979820251465
    7. ']:
' → logprob: -10.909979820251465
    8. '=' → logprob: -11.784979820251465
    9. '+
' → logprob: -11.909979820251465
    10. '```' → logprob: -11.909979820251465

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. '+' → logprob: -11.25001335144043
    3. ' ' → logprob: -15.00001335144043
    4. '   ' → logprob: -16.00001335144043
    5. '2' → logprob: -17.12501335144043
    6. '
' → logprob: -17.12501335144043
    7. ')' → logprob: -17.25001335144043
    8. '```' → logprob: -18.62501335144043
    9. '=' → logprob: -19.62501335144043
    10. 'N' → logprob: -20.25001335144043

Token 534: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0382426455616951
    2. '):' → logprob: -3.2882425785064697
    3. '):
' → logprob: -8.66324234008789
    4. ':' → logprob: -11.16324234008789
    5. ')' → logprob: -11.91324234008789
    6. '   ' → logprob: -12.66324234008789
    7. ':
' → logprob: -12.91324234008789
    8. '):

' → logprob: -14.41324234008789
    9. ']:
' → logprob: -14.41324234008789
    10. ' ):
' → logprob: -15.03824234008789

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.865583706414327e-05
    2. '   ' → logprob: -9.25009822845459
    3. 'pow' → logprob: -13.50009822845459
    4. '```' → logprob: -14.50009822845459
    5. ' pow' → logprob: -14.62509822845459
    6. '(pow' → logprob: -16.500099182128906
    7. '	   ' → logprob: -16.875099182128906
    8. '           ' → logprob: -17.125099182128906
    9. '      ' → logprob: -17.125099182128906
    10. '     ' → logprob: -17.625099182128906

Token 536: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.10056065022945404
    2. '       ' → logprob: -2.8505606651306152
    3. '   ' → logprob: -3.8505606651306152
    4. ' pow' → logprob: -4.100560665130615
    5. '(pow' → logprob: -11.100560188293457
    6. '_pow' → logprob: -13.100560188293457
    7. ' ' → logprob: -13.350560188293457
    8. '.pow' → logprob: -13.350560188293457
    9. '    ' → logprob: -13.475560188293457
    10. '```' → logprob: -13.600560188293457

Token 537: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.869017852295656e-06
    2. '[i' → logprob: -13.000006675720215
    3. '=' → logprob: -13.750006675720215
    4. '[' → logprob: -13.750006675720215
    5. '(' → logprob: -14.375006675720215
    6. 'pow' → logprob: -14.375006675720215
    7. '   ' → logprob: -15.000006675720215
    8. '```' → logprob: -15.125006675720215
    9. '(i' → logprob: -15.750006675720215
    10. ' =' → logprob: -15.875006675720215

Token 538: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.50000286102295
    3. '
' → logprob: -14.37500286102295
    4. '=' → logprob: -14.75000286102295
    5. '.append' → logprob: -16.000003814697266
    6. '(i' → logprob: -16.125003814697266
    7. '   ' → logprob: -16.500003814697266
    8. '[(' → logprob: -16.750003814697266
    9. '[
' → logprob: -17.125003814697266
    10. '  
' → logprob: -17.250003814697266

Token 539: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6843230724334717
    2. '=' → logprob: -0.9343230724334717
    3. ' =' → logprob: -2.3093230724334717
    4. ']=' → logprob: -5.809323310852051
    5. ')' → logprob: -8.68432331085205
    6. ']=(' → logprob: -8.68432331085205
    7. '=(' → logprob: -10.68432331085205
    8. ' ]' → logprob: -11.43432331085205
    9. ' ' → logprob: -12.05932331085205
    10. '   ' → logprob: -12.43432331085205

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002036595979006961
    2. ' =' → logprob: -8.500204086303711
    3. '=(' → logprob: -15.625204086303711
    4. '=
' → logprob: -20.62520408630371
    5. '=

' → logprob: -21.00020408630371
    6. '*=' → logprob: -21.12520408630371
    7. '＝' → logprob: -22.12520408630371
    8. '=p' → logprob: -22.25020408630371
    9. 'pow' → logprob: -22.87520408630371
    10. '(pow' → logprob: -23.00020408630371

Token 541: ' (' (ID: 350)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.002843510126695037
    2. ' (' → logprob: -6.002843379974365
    3. '(p' → logprob: -8.002843856811523
    4. '(' → logprob: -11.377843856811523
    5. 'pow' → logprob: -11.627843856811523
    6. '(power' → logprob: -11.877843856811523
    7. '   ' → logprob: -12.377843856811523
    8. '       ' → logprob: -14.752843856811523
    9. '(po' → logprob: -15.002843856811523
    10. ' pow' → logprob: -15.752843856811523

Token 542: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0007889019907452166
    2. '10' → logprob: -7.750788688659668
    3. '(pow' → logprob: -8.375788688659668
    4. ' pow' → logprob: -9.125788688659668
    5. '   ' → logprob: -11.375788688659668
    6. '       ' → logprob: -13.625788688659668
    7. ' ' → logprob: -13.875788688659668
    8. '(' → logprob: -14.250788688659668
    9. ' (' → logprob: -14.625788688659668
    10. 'po' → logprob: -14.750788688659668

Token 543: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.676981345459353e-06
    2. 'pow' → logprob: -12.500005722045898
    3. ' ' → logprob: -14.000005722045898
    4. '[' → logprob: -14.625005722045898
    5. '(' → logprob: -15.000005722045898
    6. '(pow' → logprob: -15.875005722045898
    7. '   ' → logprob: -16.3750057220459
    8. '１０' → logprob: -17.8750057220459
    9. '  ' → logprob: -18.1250057220459
    10. '...' → logprob: -18.3750057220459

Token 544: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.081584716506768e-05
    2. 'i' → logprob: -10.875020980834961
    3. '[' → logprob: -14.125020980834961
    4. '[-' → logprob: -15.375020980834961
    5. '   ' → logprob: -15.375020980834961
    6. '
' → logprob: -15.750020980834961
    7. '(i' → logprob: -15.875020980834961
    8. ' ' → logprob: -16.12502098083496
    9. ' [' → logprob: -17.12502098083496
    10. '[I' → logprob: -17.12502098083496

Token 545: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03717593103647232
    2. '-' → logprob: -3.4121758937835693
    3. 'i' → logprob: -5.662176132202148
    4. '(i' → logprob: -10.537176132202148
    5. '1' → logprob: -11.037176132202148
    6. '[-' → logprob: -13.162176132202148
    7. '[' → logprob: -13.537176132202148
    8. ']' → logprob: -14.287176132202148
    9. '   ' → logprob: -14.287176132202148
    10. ' -' → logprob: -14.287176132202148

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -12.00001335144043
    3. '   ' → logprob: -13.00001335144043
    4. 'i' → logprob: -13.12501335144043
    5. '```' → logprob: -13.75001335144043
    6. '10' → logprob: -14.62501335144043
    7. ')' → logprob: -15.62501335144043
    8. '  ' → logprob: -15.93751335144043
    9. ']' → logprob: -16.00001335144043
    10. '    ' → logprob: -16.18751335144043

Token 547: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3133964240550995
    2. ' *' → logprob: -1.3133964538574219
    3. '10' → logprob: -9.313396453857422
    4. '0' → logprob: -10.938396453857422
    5. ' ' → logprob: -11.313396453857422
    6. ']' → logprob: -11.938396453857422
    7. ' ' → logprob: -12.938396453857422
    8. '   ' → logprob: -13.188396453857422
    9. ']*' → logprob: -14.188396453857422
    10. '	' → logprob: -14.438396453857422

Token 548: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -18.125
    4. '
' → logprob: -20.25
    5. '```' → logprob: -20.875
    6. '۱۰' → logprob: -22.125
    7. '１０' → logprob: -22.875
    8. ')' → logprob: -23.0
    9. '  ' → logprob: -23.0
    10. '(' → logprob: -23.375

Token 549: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009456383413635194
    2. ')%' → logprob: -7.125945568084717
    3. ' )' → logprob: -8.875946044921875
    4. '%' → logprob: -13.875946044921875
    5. ']' → logprob: -15.375946044921875
    6. ')
' → logprob: -16.375946044921875
    7. ' %' → logprob: -16.625946044921875
    8. '%)' → logprob: -17.000946044921875
    9. '),' → logprob: -17.750946044921875
    10. ']%' → logprob: -18.125946044921875

Token 550: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.038673266768455505
    2. ' %' → logprob: -3.288673162460327
    3. ')' → logprob: -7.663673400878906
    4. ')%' → logprob: -8.788673400878906
    5. '%i' → logprob: -12.038673400878906
    6. '%A' → logprob: -14.038673400878906
    7. '%d' → logprob: -14.538673400878906
    8. '%s' → logprob: -14.788673400878906
    9. '%c' → logprob: -14.788673400878906
    10. '%n' → logprob: -15.038673400878906

Token 551: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -9.088346359931165e-07
    2. ' Q' → logprob: -14.000000953674316
    3. '   ' → logprob: -23.0
    4. '	Q' → logprob: -23.625
    5. '```' → logprob: -24.5
    6. '(Q' → logprob: -24.625
    7. ',Q' → logprob: -25.0
    8. ' ' → logprob: -25.25
    9. '
' → logprob: -26.625
    10. '<Q' → logprob: -26.875

Token 552: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5450190305709839
    2. '   ' → logprob: -1.0450190305709839
    3. '    
' → logprob: -3.2950191497802734
    4. '

' → logprob: -4.545019149780273
    5. 'count' → logprob: -4.795019149780273
    6. 'counts' → logprob: -6.170019149780273
    7. '<|end|>' → logprob: -6.295019149780273
    8. ')' → logprob: -6.295019149780273
    9. '  
' → logprob: -6.920019149780273
    10. 'indices' → logprob: -7.295019149780273

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03365227207541466
    2. 'count' → logprob: -4.283652305603027
    3. 'from' → logprob: -4.408652305603027
    4. 'counts' → logprob: -5.908652305603027
    5. 'prefix' → logprob: -6.783652305603027
    6. '
' → logprob: -6.908652305603027
    7. '```' → logprob: -7.533652305603027
    8. '    
' → logprob: -7.783652305603027
    9. 'dp' → logprob: -8.033652305603027
    10. 'valid' → logprob: -8.783652305603027

Token 554: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2144184112548828
    2. 'dp' → logprob: -2.339418411254883
    3. 'from' → logprob: -2.589418411254883
    4. '   ' → logprob: -4.339418411254883
    5. 'counts' → logprob: -5.839418411254883
    6. 'counter' → logprob: -6.464418411254883
    7. 'freq' → logprob: -6.589418411254883
    8. 'prefix' → logprob: -7.464418411254883
    9. 'cnt' → logprob: -7.464418411254883
    10. 'pos' → logprob: -7.839418411254883

Token 555: ' Appro' (ID: 24145)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1947803795337677
    2. 'from' → logprob: -1.9447803497314453
    3. 'dp' → logprob: -3.4447803497314453
    4. 'counts' → logprob: -7.319780349731445
    5. 'counter' → logprob: -7.819780349731445
    6. 'answer' → logprob: -8.569780349731445
    7. 'prefix' → logprob: -8.944780349731445
    8. 'valid' → logprob: -9.069780349731445
    9. 'ans' → logprob: -9.319780349731445
    10. 'freq' → logprob: -9.444780349731445

Token 556: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.0008016457431949675
    2. 'ach' → logprob: -7.3758015632629395
    3. 'ch' → logprob: -8.875802040100098
    4. 'xim' → logprob: -11.375802040100098
    5. 'x' → logprob: -12.000802040100098
    6. 'ches' → logprob: -12.125802040100098
    7. '#' → logprob: -12.500802040100098
    8. 'ache' → logprob: -12.625802040100098
    9. 'cher' → logprob: -13.625802040100098
    10. 'ché' → logprob: -14.000802040100098

Token 557: ':' (ID: 25)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7784430384635925
    2. '   ' → logprob: -1.2784430980682373
    3. 'dp' → logprob: -2.1534430980682373
    4. 'from' → logprob: -2.4034430980682373
    5. 'counts' → logprob: -4.153442859649658
    6. 'counter' → logprob: -4.403442859649658
    7. 'freq' → logprob: -4.653442859649658
    8. 'prefix' → logprob: -5.028442859649658
    9. 'mod' → logprob: -5.528442859649658
    10. 'cnt' → logprob: -6.528442859649658

Token 558: ' Pour' (ID: 13931)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5094153881072998
    2. 'from' → logprob: -1.1344153881072998
    3. 'dp' → logprob: -2.6344153881073
    4. 'counts' → logprob: -6.759415626525879
    5. 'valid' → logprob: -7.009415626525879
    6. 'prefix' → logprob: -7.259415626525879
    7. 'counter' → logprob: -7.384415626525879
    8. 'freq' → logprob: -7.634415626525879
    9. 'cnt' → logprob: -8.134415626525879
    10. 'ans' → logprob: -8.259415626525879

Token 559: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6525099873542786
    2. ' i' → logprob: -0.9025099873542786
    3. 'count' → logprob: -3.402509927749634
    4. ' chaque' → logprob: -4.777510166168213
    5. ' j' → logprob: -5.152510166168213
    6. 'each' → logprob: -5.402510166168213
    7. ' count' → logprob: -5.402510166168213
    8. 'j' → logprob: -5.527510166168213
    9. ' compter' → logprob: -5.652510166168213
    10. ' each' → logprob: -6.027510166168213

Token 560: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13973987102508545
    2. 'j' → logprob: -2.764739990234375
    3. ' i' → logprob: -3.139739990234375
    4. 'start' → logprob: -4.639739990234375
    5. 'index' → logprob: -5.639739990234375
    6. ' j' → logprob: -5.764739990234375
    7. 'valid' → logprob: -6.014739990234375
    8. 'a' → logprob: -6.639739990234375
    9. ' valid' → logprob: -7.264739990234375
    10. ' start' → logprob: -7.639739990234375

Token 561: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12067899852991104
    2. 'in' → logprob: -2.2456789016723633
    3. '   ' → logprob: -4.995678901672363
    4. ':' → logprob: -7.245678901672363
    5. ',' → logprob: -9.745678901672363
    6. 'dans' → logprob: -9.870678901672363
    7. ':
' → logprob: -9.995678901672363
    8. ' dans' → logprob: -10.370678901672363
    9. 'en' → logprob: -10.620678901672363
    10. ' en' → logprob: -10.995678901672363

Token 562: ' on' (ID: 402)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8209987878799438
    2. '   ' → logprob: -1.8209987878799438
    3. 'prefix' → logprob: -2.5709986686706543
    4. ' count' → logprob: -2.9459986686706543
    5. 'counts' → logprob: -2.9459986686706543
    6. 'from' → logprob: -3.4459986686706543
    7. 'dp' → logprob: -3.8209986686706543
    8. 'seen' → logprob: -3.8209986686706543
    9. ' seen' → logprob: -4.070998668670654
    10. 'freq' → logprob: -4.195998668670654

Token 563: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3624556064605713
    2. 'comp' → logprob: -1.7374556064605713
    3. 'count' → logprob: -1.8624556064605713
    4. 'from' → logprob: -2.6124556064605713
    5. '   ' → logprob: -2.8624556064605713
    6. 'rem' → logprob: -3.8624556064605713
    7. 'counts' → logprob: -3.8624556064605713
    8. 'util' → logprob: -4.112455368041992
    9. 'v' → logprob: -4.237455368041992
    10. 'd' → logprob: -4.237455368041992

Token 564: ' chercher' (ID: 79602)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.3927795886993408
    2. ' compter' → logprob: -1.5177795886993408
    3. 'util' → logprob: -1.7677795886993408
    4. '   ' → logprob: -2.267779588699341
    5. 'maint' → logprob: -2.517779588699341
    6. 'count' → logprob: -2.767779588699341
    7. ' utiliser' → logprob: -2.892779588699341
    8. 'com' → logprob: -4.392779350280762
    9. 'import' → logprob: -4.642779350280762
    10. 'from' → logprob: -5.517779350280762

Token 565: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3891685903072357
    2. 'for' → logprob: -2.1391685009002686
    3. 'les' → logprob: -2.6391685009002686
    4. 'à' → logprob: -3.5141685009002686
    5. '   ' → logprob: -3.8891685009002686
    6. ' i' → logprob: -4.139168739318848
    7. 'un' → logprob: -4.639168739318848
    8. 'a' → logprob: -4.889168739318848
    9. ' les' → logprob: -5.139168739318848
    10. ' for' → logprob: -5.264168739318848

Token 566: ' tel' (ID: 10716)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5646718144416809
    2. 'in' → logprob: -2.064671754837036
    3. 's' → logprob: -2.939671754837036
    4. 'dans' → logprob: -2.939671754837036
    5. 'où' → logprob: -3.189671754837036
    6. ' dans' → logprob: -3.939671754837036
    7. '=' → logprob: -4.064671993255615
    8. ' where' → logprob: -4.189671993255615
    9. ' such' → logprob: -4.314671993255615
    10. 'from' → logprob: -4.439671993255615

Token 567: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.016804683953523636
    2. ' que' → logprob: -4.6418046951293945
    3. 'à' → logprob: -6.2668046951293945
    4. '   ' → logprob: -6.5168046951293945
    5. 'that' → logprob: -7.3918046951293945
    6. 'ue' → logprob: -7.7668046951293945
    7. 'u' → logprob: -8.016804695129395
    8. '=' → logprob: -8.266804695129395
    9. '       ' → logprob: -8.391804695129395
    10. '=i' → logprob: -9.016804695129395

Token 568: ' a' (ID: 261)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.43934640288352966
    2. '(prefix' → logprob: -1.689346432685852
    3. ' prefix' → logprob: -1.814346432685852
    4. ' (' → logprob: -5.0643463134765625
    5. 'a' → logprob: -7.9393463134765625
    6. '(' → logprob: -8.064346313476562
    7. 'pow' → logprob: -8.439346313476562
    8. '(a' → logprob: -8.814346313476562
    9. '(i' → logprob: -9.189346313476562
    10. ' a' → logprob: -9.439346313476562

Token 569: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007410458754748106
    2. '[j' → logprob: -5.007410526275635
    3. 'i' → logprob: -7.382410526275635
    4. '[' → logprob: -10.007410049438477
    5. 'j' → logprob: -11.757410049438477
    6. '   ' → logprob: -11.882410049438477
    7. 'a' → logprob: -12.882410049438477
    8. '[a' → logprob: -13.382410049438477
    9. ' i' → logprob: -13.507410049438477
    10. '(i' → logprob: -14.257410049438477

Token 570: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6501942276954651
    2. ']!=' → logprob: -0.7751942276954651
    3. '[i' → logprob: -4.52519416809082
    4. '!=' → logprob: -5.27519416809082
    5. ' !=' → logprob: -7.77519416809082
    6. '[j' → logprob: -7.90019416809082
    7. ']!='' → logprob: -8.52519416809082
    8. ']==' → logprob: -8.65019416809082
    9. ')!=' → logprob: -9.02519416809082
    10. '][' → logprob: -10.02519416809082

Token 571: ' !=' (ID: 1666)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.24578268826007843
    2. '!=' → logprob: -1.995782732963562
    3. ']' → logprob: -2.6207826137542725
    4. ' !=' → logprob: -5.370782852172852
    5. '[i' → logprob: -6.245782852172852
    6. '[j' → logprob: -6.370782852172852
    7. '```' → logprob: -8.495782852172852
    8. '][' → logprob: -8.995782852172852
    9. ')!=' → logprob: -9.120782852172852
    10. ']==' → logprob: -9.245782852172852

Token 572: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '=' → logprob: -17.250431060791016
    4. '```' → logprob: -17.875431060791016
    5. '  ' → logprob: -18.625431060791016
    6. ' ' → logprob: -19.250431060791016
    7. '۰' → logprob: -19.250431060791016
    8. ' ' → logprob: -19.875431060791016
    9. '
' → logprob: -20.375431060791016
    10. '`' → logprob: -20.375431060791016

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '=' → logprob: -16.375059127807617
    4. '  ' → logprob: -18.125059127807617
    5. '۰' → logprob: -18.500059127807617
    6. '
' → logprob: -18.562559127807617
    7. ' ' → logprob: -18.875059127807617
    8. ''' → logprob: -19.000059127807617
    9. '```' → logprob: -19.125059127807617
    10. '`' → logprob: -19.375059127807617

Token 574: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0587741956114769
    2. ',' → logprob: -3.30877423286438
    3. ' and' → logprob: -4.433773994445801
    4. ':' → logprob: -5.683773994445801
    5. '
' → logprob: -6.433773994445801
    6. 'and' → logprob: -6.683773994445801
    7. '```' → logprob: -7.558773994445801
    8. ' ,' → logprob: -8.3087739944458
    9. '    
' → logprob: -8.5587739944458
    10. ',
' → logprob: -8.5587739944458

Token 575: ' prefix' (ID: 18633)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.6959228515625
    2. 'prefix' → logprob: -0.8209228515625
    3. ' prefix' → logprob: -2.9459228515625
    4. ' (' → logprob: -4.9459228515625
    5. '   ' → logprob: -8.1959228515625
    6. '(' → logprob: -8.4459228515625
    7. 'pow' → logprob: -8.8209228515625
    8. '
' → logprob: -9.0709228515625
    9. '_prefix' → logprob: -9.1959228515625
    10. '(i' → logprob: -9.3209228515625

Token 576: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -8.375538163818419e-05
    2. '   ' → logprob: -10.750083923339844
    3. 'mod' → logprob: -11.125083923339844
    4. '_hash' → logprob: -11.250083923339844
    5. '_count' → logprob: -12.375083923339844
    6. '_' → logprob: -12.500083923339844
    7. '```' → logprob: -12.875083923339844
    8. '_m' → logprob: -13.500083923339844
    9. '_sum' → logprob: -13.750083923339844
    10. ' _' → logprob: -13.750083923339844

Token 577: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0519503615796566
    2. '[i' → logprob: -3.051950454711914
    3. '[' → logprob: -6.801950454711914
    4. 'prefix' → logprob: -8.301950454711914
    5. '_prefix' → logprob: -8.926950454711914
    6. '   ' → logprob: -9.051950454711914
    7. ' [' → logprob: -9.051950454711914
    8. 'j' → logprob: -9.051950454711914
    9. '_mod' → logprob: -9.051950454711914
    10. ')' → logprob: -9.176950454711914

Token 578: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043049316853284836
    2. ']' → logprob: -3.2930493354797363
    3. ']+' → logprob: -6.168049335479736
    4. '[i' → logprob: -7.293049335479736
    5. '1' → logprob: -7.543049335479736
    6. ' +' → logprob: -7.668049335479736
    7. ']>=' → logprob: -8.543048858642578
    8. '[' → logprob: -9.043048858642578
    9. '+]' → logprob: -9.168048858642578
    10. '```' → logprob: -9.168048858642578

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.125003814697266
    3. '```' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.250003814697266
    5. ']' → logprob: -15.500003814697266
    6. '`' → logprob: -16.687503814697266
    7. '
' → logprob: -16.750003814697266
    8. ')' → logprob: -17.062503814697266
    9. '<|end|>' → logprob: -17.062503814697266
    10. '][' → logprob: -17.375003814697266

Token 580: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013985439203679562
    2. ']*' → logprob: -5.138985633850098
    3. ']==' → logprob: -5.138985633850098
    4. '*' → logprob: -7.138985633850098
    5. ' ]' → logprob: -8.138985633850098
    6. ' *' → logprob: -8.388985633850098
    7. '[i' → logprob: -8.763985633850098
    8. ' -' → logprob: -9.388985633850098
    9. ' ==' → logprob: -9.763985633850098
    10. '-' → logprob: -9.888985633850098

Token 581: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8723092079162598
    2. ' *' → logprob: -1.3723092079162598
    3. '==' → logprob: -1.8723092079162598
    4. '*' → logprob: -2.6223092079162598
    5. ']' → logprob: -2.6223092079162598
    6. ']==' → logprob: -4.62230920791626
    7. ' -' → logprob: -4.87230920791626
    8. ')' → logprob: -6.12230920791626
    9. '-' → logprob: -6.62230920791626
    10. ' in' → logprob: -7.12230920791626

Token 582: ' prefix' (ID: 18633)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.007959354668855667
    2. 'prefix' → logprob: -4.882959365844727
    3. ' (' → logprob: -8.007959365844727
    4. ' prefix' → logprob: -11.007959365844727
    5. '(pow' → logprob: -14.257959365844727
    6. '(pref' → logprob: -14.757959365844727
    7. '   ' → logprob: -15.132959365844727
    8. '(parent' → logprob: -15.257959365844727
    9. '_prefix' → logprob: -15.257959365844727
    10. '(' → logprob: -15.257959365844727

Token 583: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.7954958821064793e-05
    2. 'mod' → logprob: -11.500018119812012
    3. '[i' → logprob: -13.250018119812012
    4. '[_' → logprob: -14.500018119812012
    5. '```' → logprob: -14.500018119812012
    6. '   ' → logprob: -14.625018119812012
    7. ' _' → logprob: -14.625018119812012
    8. '-mod' → logprob: -15.125018119812012
    9. 's' → logprob: -15.250018119812012
    10. '[' → logprob: -15.375018119812012

Token 584: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015054450370371342
    2. '[j' → logprob: -4.265054225921631
    3. 'i' → logprob: -7.140054225921631
    4. '[' → logprob: -10.390054702758789
    5. 'j' → logprob: -10.765054702758789
    6. '[(' → logprob: -11.640054702758789
    7. '```' → logprob: -11.640054702758789
    8. '   ' → logprob: -12.015054702758789
    9. ' [' → logprob: -12.265054702758789
    10. '{i' → logprob: -12.890054702758789

Token 585: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.9290058016777039
    2. ']' → logprob: -1.3040058612823486
    3. '*' → logprob: -1.5540058612823486
    4. '[j' → logprob: -2.9290058612823486
    5. ' *' → logprob: -3.1790058612823486
    6. '[i' → logprob: -3.9290058612823486
    7. '*j' → logprob: -5.6790056228637695
    8. '[' → logprob: -7.1790056228637695
    9. '*i' → logprob: -7.3040056228637695
    10. ']*(' → logprob: -7.5540056228637695

Token 586: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00038682064041495323
    2. ' pow' → logprob: -7.875386714935303
    3. '(pow' → logprob: -12.125387191772461
    4. '10' → logprob: -13.875387191772461
    5. '```' → logprob: -16.00038719177246
    6. '.pow' → logprob: -17.12538719177246
    7. ' ' → logprob: -18.00038719177246
    8. '_pow' → logprob: -18.12538719177246
    9. 'Pow' → logprob: -18.25038719177246
    10. '
' → logprob: -18.25038719177246

Token 587: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000856193364597857
    2. '(' → logprob: -7.125856399536133
    3. '```' → logprob: -10.125856399536133
    4. ' ' → logprob: -12.000856399536133
    5. '[' → logprob: -13.125856399536133
    6. ' (' → logprob: -13.875856399536133
    7. '{' → logprob: -14.500856399536133
    8. 'pow' → logprob: -14.750856399536133
    9. '``' → logprob: -14.875856399536133
    10. '(pow' → logprob: -15.000856399536133

Token 588: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015979631280060858
    2. '[(' → logprob: -9.125160217285156
    3. '[' → logprob: -10.375160217285156
    4. '   ' → logprob: -11.625160217285156
    5. '[len' → logprob: -12.875160217285156
    6. ' [' → logprob: -13.000160217285156
    7. 'j' → logprob: -13.375160217285156
    8. '[N' → logprob: -14.000160217285156
    9. '```' → logprob: -14.750160217285156
    10. '(j' → logprob: -14.750160217285156

Token 589: '-i' (ID: 18499)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.014913184568285942
    2. '[-' → logprob: -4.889913082122803
    3. '[' → logprob: -5.014913082122803
    4. '-' → logprob: -8.889913558959961
    5. '-j' → logprob: -8.889913558959961
    6. '```' → logprob: -9.639913558959961
    7. '   ' → logprob: -10.014913558959961
    8. '[(' → logprob: -10.014913558959961
    9. ' [' → logprob: -10.389913558959961
    10. '[len' → logprob: -11.014913558959961

Token 590: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06581556051969528
    2. '1' → logprob: -2.9408154487609863
    3. '-' → logprob: -4.690815448760986
    4. '[-' → logprob: -7.815815448760986
    5. ']' → logprob: -7.940815448760986
    6. '[' → logprob: -8.065815925598145
    7. '```' → logprob: -8.565815925598145
    8. ']+' → logprob: -8.565815925598145
    9. ']-' → logprob: -9.565815925598145
    10. ' +' → logprob: -10.440815925598145

Token 591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '+' → logprob: -11.625012397766113
    3. '```' → logprob: -13.500012397766113
    4. ' ' → logprob: -13.750012397766113
    5. ']' → logprob: -15.375012397766113
    6. ']+' → logprob: -15.875012397766113
    7. '
' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.12501335144043
    9. '{' → logprob: -16.25001335144043
    10. ')' → logprob: -16.62501335144043

Token 592: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03296021744608879
    2. '[i' → logprob: -4.032960414886475
    3. ']%' → logprob: -4.907960414886475
    4. '   ' → logprob: -5.907960414886475
    5. '[j' → logprob: -6.282960414886475
    6. ']:
' → logprob: -7.532960414886475
    7. '%' → logprob: -7.907960414886475
    8. '```' → logprob: -7.907960414886475
    9. ']+' → logprob: -8.282959938049316
    10. ' ]' → logprob: -8.407959938049316

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010468624532222748
    2. ':' → logprob: -8.251047134399414
    3. '
' → logprob: -8.751047134399414
    4. ',' → logprob: -8.876047134399414
    5. ')' → logprob: -9.376047134399414
    6. '    
' → logprob: -9.751047134399414
    7. 'from' → logprob: -9.876047134399414
    8. '{' → logprob: -10.251047134399414
    9. '.' → logprob: -10.251047134399414
    10. '[' → logprob: -10.376047134399414

Token 594: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00198787497356534
    2. 'from' → logprob: -7.376987934112549
    3. '
' → logprob: -8.00198745727539
    4. 'count' → logprob: -8.25198745727539
    5. '```' → logprob: -8.87698745727539
    6. '    
' → logprob: -9.00198745727539
    7. '{' → logprob: -9.75198745727539
    8. ')' → logprob: -9.75198745727539
    9. 'counter' → logprob: -9.87698745727539
    10. 'counts' → logprob: -10.00198745727539

Token 595: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16348305344581604
    2. 'counts' → logprob: -2.663483142852783
    3. '   ' → logprob: -3.538483142852783
    4. 'from' → logprob: -3.788483142852783
    5. 'counter' → logprob: -4.163483142852783
    6. 'cnt' → logprob: -5.538483142852783
    7. 'dp' → logprob: -5.663483142852783
    8. 'prefix' → logprob: -6.163483142852783
    9. 'freq' → logprob: -6.288483142852783
    10. 'seen' → logprob: -7.413483142852783

Token 596: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4757149815559387
    2. 'from' → logprob: -1.475714921951294
    3. ' =' → logprob: -2.225714921951294
    4. '   ' → logprob: -4.350715160369873
    5. 'continue' → logprob: -4.725715160369873
    6. ' from' → logprob: -5.225715160369873
    7. ' continue' → logprob: -5.725715160369873
    8. 'def' → logprob: -6.725715160369873
    9. ')' → logprob: -6.850715160369873
    10. '#' → logprob: -6.975715160369873

Token 597: ' ré' (ID: 3146)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5749180316925049
    2. ' utiliser' → logprob: -2.074918031692505
    3. 'contin' → logprob: -2.449918031692505
    4. 'from' → logprob: -3.199918031692505
    5. '   ' → logprob: -3.324918031692505
    6. 'penser' → logprob: -3.824918031692505
    7. ' continuer' → logprob: -3.949918031692505
    8. 'maint' → logprob: -4.074917793273926
    9. 'use' → logprob: -4.324917793273926
    10. 'stock' → logprob: -4.574917793273926

Token 598: 'arr' (ID: 1614)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.26767992973327637
    2. 's' → logprob: -2.3926799297332764
    3. 'organ' → logprob: -2.7676799297332764
    4. 'arr' → logprob: -3.6426799297332764
    5. 'sum' → logprob: -4.0176801681518555
    6. 'crire' → logprob: -4.8926801681518555
    7. 'solver' → logprob: -5.7676801681518555
    8. 'expr' → logprob: -6.1426801681518555
    9. 'e' → logprob: -6.1426801681518555
    10. 'al' → logprob: -6.2676801681518555

Token 599: 'anger' (ID: 5249)
  Prédit: 'anger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anger' → logprob: -0.008746825158596039
    2. 'nger' → logprob: -5.00874662399292
    3. '[' → logprob: -7.88374662399292
    4. '#' → logprob: -8.258747100830078
    5. 'an' → logprob: -8.258747100830078
    6. '|' → logprob: -8.633747100830078
    7. 'enger' → logprob: -8.883747100830078
    8. '   ' → logprob: -9.258747100830078
    9. '(' → logprob: -9.508747100830078
    10. 'angler' → logprob: -9.633747100830078

Token 600: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1811485290527344
    2. 'prefix' → logprob: -1.1811485290527344
    3. 'for' → logprob: -2.1811485290527344
    4. '=' → logprob: -2.5561485290527344
    5. '(prefix' → logprob: -2.9311485290527344
    6. ':' → logprob: -3.9311485290527344
    7. ' prefix' → logprob: -4.056148529052734
    8. '[j' → logprob: -4.306148529052734
    9. 'j' → logprob: -4.681148529052734
    10. ' =' → logprob: -4.931148529052734

Token 601: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.429928183555603
    2. '   ' → logprob: -1.554928183555603
    3. ' prefix' → logprob: -1.679928183555603
    4. 'for' → logprob: -2.3049283027648926
    5. 'count' → logprob: -2.9299283027648926
    6. ' for' → logprob: -2.9299283027648926
    7. 'from' → logprob: -3.4299283027648926
    8. '(prefix' → logprob: -3.6799283027648926
    9. 'inv' → logprob: -5.054928302764893
    10. 'counts' → logprob: -5.054928302764893

Token 602: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -5.1689596148207784e-05
    2. '   ' → logprob: -10.125051498413086
    3. 'mod' → logprob: -13.125051498413086
    4. '_' → logprob: -13.125051498413086
    5. '_mult' → logprob: -13.750051498413086
    6. ' _' → logprob: -14.375051498413086
    7. '_m' → logprob: -14.500051498413086
    8. '_modified' → logprob: -14.875051498413086
    9. '_prefix' → logprob: -15.000051498413086
    10. '```' → logprob: -15.125051498413086

Token 603: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.009338336065411568
    2. '_mod' → logprob: -6.13433837890625
    3. '_j' → logprob: -6.75933837890625
    4. 'j' → logprob: -6.75933837890625
    5. '[i' → logprob: -6.88433837890625
    6. '_inv' → logprob: -7.50933837890625
    7. ' =' → logprob: -7.63433837890625
    8. '_indices' → logprob: -8.00933837890625
    9. '_prefix' → logprob: -8.50933837890625
    10. '=' → logprob: -8.50933837890625

Token 604: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017791526624932885
    2. ' +' → logprob: -9.125178337097168
    3. '[' → logprob: -10.625178337097168
    4. ']' → logprob: -11.750178337097168
    5. '[i' → logprob: -11.750178337097168
    6. '   ' → logprob: -12.000178337097168
    7. '1' → logprob: -12.375178337097168
    8. '[j' → logprob: -12.375178337097168
    9. ']+' → logprob: -13.500178337097168
    10. '```' → logprob: -13.500178337097168

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.251091377227567e-05
    2. '+' → logprob: -10.375042915344238
    3. ' ' → logprob: -12.500042915344238
    4. '
' → logprob: -12.750042915344238
    5. '```' → logprob: -13.625042915344238
    6. '   ' → logprob: -13.875042915344238
    7. ']' → logprob: -14.625042915344238
    8. '
' → logprob: -15.125042915344238
    9. '

' → logprob: -15.812542915344238
    10. '-' → logprob: -15.812542915344238

Token 606: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7520762085914612
    2. ']' → logprob: -1.2520761489868164
    3. '*' → logprob: -2.6270761489868164
    4. ' ==' → logprob: -2.8770761489868164
    5. '[j' → logprob: -3.0020761489868164
    6. '==' → logprob: -4.002076148986816
    7. ' -' → logprob: -4.002076148986816
    8. '[i' → logprob: -5.252076148986816
    9. ']==' → logprob: -5.252076148986816
    10. ' =' → logprob: -5.877076148986816

Token 607: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.726326584815979
    2. '*' → logprob: -0.851326584815979
    3. '=' → logprob: -3.3513264656066895
    4. ' -' → logprob: -3.9763264656066895
    5. 'pow' → logprob: -4.6013264656066895
    6. '-' → logprob: -4.8513264656066895
    7. '==' → logprob: -4.8513264656066895
    8. ' =' → logprob: -5.3513264656066895
    9. ' ==' → logprob: -6.4763264656066895
    10. '*j' → logprob: -6.7263264656066895

Token 608: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.12785470485687256
    2. 'mod' → logprob: -2.127854824066162
    3. 'inv' → logprob: -7.877854824066162
    4. ' pow' → logprob: -8.252854347229004
    5. '(pow' → logprob: -8.627854347229004
    6. ' mod' → logprob: -9.877854347229004
    7. '(mod' → logprob: -11.252854347229004
    8. 'inverse' → logprob: -11.377854347229004
    9. 'invert' → logprob: -12.127854347229004
    10. '```' → logprob: -12.252854347229004

Token 609: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03723657876253128
    2. 'pow' → logprob: -4.66223669052124
    3. '(pow' → logprob: -4.66223669052124
    4. '(Q' → logprob: -5.41223669052124
    5. 'mod' → logprob: -5.41223669052124
    6. '(' → logprob: -5.78723669052124
    7. '(-' → logprob: -6.28723669052124
    8. 'inv' → logprob: -7.28723669052124
    9. '^{-' → logprob: -7.28723669052124
    10. 'Q' → logprob: -7.78723669052124

Token 610: '^{' (ID: 42923)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.36018314957618713
    2. '[N' → logprob: -1.6101831197738647
    3. '[j' → logprob: -2.6101832389831543
    4. '[(' → logprob: -4.235183238983154
    5. 'inv' → logprob: -4.610183238983154
    6. '[' → logprob: -6.110183238983154
    7. '_inv' → logprob: -6.860183238983154
    8. 'inverse' → logprob: -8.110182762145996
    9. 'pow' → logprob: -8.235182762145996
    10. 'Inv' → logprob: -9.110182762145996

Token 611: '-(' (ID: 18825)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5157352089881897
    2. 'N' → logprob: -1.390735149383545
    3. '-(' → logprob: -3.015735149383545
    4. '(N' → logprob: -3.515735149383545
    5. '-N' → logprob: -3.890735149383545
    6. '(Q' → logprob: -4.015735149383545
    7. '-' → logprob: -4.140735149383545
    8. '-Q' → logprob: -4.765735149383545
    9. '(-' → logprob: -5.265735149383545
    10. '[-' → logprob: -6.265735149383545

Token 612: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3055388927459717
    2. '(j' → logprob: -1.5555388927459717
    3. '(N' → logprob: -3.5555388927459717
    4. 'N' → logprob: -4.930539131164551
    5. '[j' → logprob: -5.305539131164551
    6. ' (' → logprob: -5.680539131164551
    7. '-(' → logprob: -5.805539131164551
    8. '(' → logprob: -6.555539131164551
    9. '
' → logprob: -6.930539131164551
    10. '-' → logprob: -8.18053913116455

Token 613: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.5245922207832336
    2. '+' → logprob: -1.1495921611785889
    3. '1' → logprob: -3.524592161178589
    4. '-' → logprob: -3.899592161178589
    5. ' -' → logprob: -4.149592399597168
    6. 'i' → logprob: -4.524592399597168
    7. '   ' → logprob: -6.024592399597168
    8. '
' → logprob: -6.024592399597168
    9. '-(' → logprob: -6.649592399597168
    10. '[i' → logprob: -6.774592399597168

Token 614: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012758307857438922
    2. '-' → logprob: -6.751276016235352
    3. '1' → logprob: -9.501276016235352
    4. '```' → logprob: -11.126276016235352
    5. '+-' → logprob: -12.501276016235352
    6. ' +' → logprob: -12.876276016235352
    7. '2' → logprob: -13.376276016235352
    8. '[' → logprob: -14.001276016235352
    9. '   ' → logprob: -14.001276016235352
    10. '+
' → logprob: -14.126276016235352

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003455975791439414
    2. '+' → logprob: -6.128456115722656
    3. '2' → logprob: -7.128456115722656
    4. '-' → logprob: -8.253456115722656
    5. ')' → logprob: -10.003456115722656
    6. '```' → logprob: -10.003456115722656
    7. '
' → logprob: -10.378456115722656
    8. '...' → logprob: -11.003456115722656
    9. '

' → logprob: -11.503456115722656
    10. ' ' → logprob: -11.815956115722656

Token 616: ')}' (ID: 15468)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36233431100845337
    2. ']}' → logprob: -1.2373342514038086
    3. '}' → logprob: -4.862334251403809
    4. ')]' → logprob: -6.112334251403809
    5. '}]' → logprob: -6.487334251403809
    6. ')}' → logprob: -6.987334251403809
    7. '%' → logprob: -7.987334251403809
    8. ']%' → logprob: -8.237334251403809
    9. '[i' → logprob: -8.362334251403809
    10. '])' → logprob: -9.487334251403809

Token 617: ' ==' (ID: 951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9285293817520142
    2. ' =' → logprob: -0.9285293817520142
    3. '=' → logprob: -3.1785292625427246
    4. '[' → logprob: -3.3035292625427246
    5. '[j' → logprob: -3.4285292625427246
    6. '[i' → logprob: -3.6785292625427246
    7. ']' → logprob: -3.9285292625427246
    8. '**' → logprob: -4.178529262542725
    9. ')' → logprob: -4.803529262542725
    10. '```' → logprob: -5.553529262542725

Token 618: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5478830933570862
    2. '(prefix' → logprob: -1.2978830337524414
    3. ' prefix' → logprob: -1.9228830337524414
    4. ' (' → logprob: -6.297883033752441
    5. '(' → logprob: -8.297883033752441
    6. '(s' → logprob: -9.672883033752441
    7. 'None' → logprob: -9.797883033752441
    8. '0' → logprob: -10.297883033752441
    9. '(None' → logprob: -10.797883033752441
    10. '{' → logprob: -10.922883033752441

Token 619: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.0445127372804563e-05
    2. 'mod' → logprob: -11.75001049041748
    3. '[i' → logprob: -14.00001049041748
    4. '   ' → logprob: -15.50001049041748
    5. '_' → logprob: -15.62501049041748
    6. 'i' → logprob: -15.87501049041748
    7. '10' → logprob: -15.87501049041748
    8. '_m' → logprob: -16.375009536743164
    9. 's' → logprob: -16.625009536743164
    10. 'Mod' → logprob: -16.625009536743164

Token 620: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.7603686451911926
    2. '_mod' → logprob: -1.1353685855865479
    3. '_' → logprob: -2.260368585586548
    4. '[' → logprob: -2.760368585586548
    5. '[i' → logprob: -4.135368824005127
    6. ')' → logprob: -5.135368824005127
    7. '_j' → logprob: -5.260368824005127
    8. '   ' → logprob: -5.510368824005127
    9. '[_' → logprob: -6.635368824005127
    10. 's' → logprob: -6.760368824005127

Token 621: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04686018079519272
    2. '   ' → logprob: -4.546860218048096
    3. ' *' → logprob: -4.796860218048096
    4. '*' → logprob: -5.046860218048096
    5. ')' → logprob: -5.046860218048096
    6. ']*' → logprob: -5.546860218048096
    7. '**' → logprob: -5.921860218048096
    8. '}' → logprob: -6.421860218048096
    9. '[j' → logprob: -6.546860218048096
    10. '[i' → logprob: -7.171860218048096

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05761082097887993
    2. '[' → logprob: -3.8076107501983643
    3. '```' → logprob: -5.057610988616943
    4. ')' → logprob: -5.432610988616943
    5. '[i' → logprob: -5.557610988616943
    6. '**' → logprob: -5.932610988616943
    7. '=' → logprob: -6.307610988616943
    8. '\n' → logprob: -6.557610988616943
    9. '[
' → logprob: -6.557610988616943
    10. '
' → logprob: -6.682610988616943

Token 623: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019200868904590607
    2. '
' → logprob: -4.269200801849365
    3. '  
' → logprob: -7.019200801849365
    4. '    
' → logprob: -7.394200801849365
    5. '```' → logprob: -7.519200801849365
    6. '\n' → logprob: -7.644200801849365
    7. '[' → logprob: -8.019201278686523
    8. 'for' → logprob: -8.394201278686523
    9. ')' → logprob: -8.394201278686523
    10. ' =' → logprob: -8.894201278686523

Token 624: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029106696601957083
    2. ')' → logprob: -7.002910614013672
    3. 'from' → logprob: -7.627910614013672
    4. 'for' → logprob: -8.502910614013672
    5. 'pow' → logprob: -8.877910614013672
    6. 'inverse' → logprob: -8.877910614013672
    7. '#' → logprob: -9.002910614013672
    8. '(' → logprob: -9.252910614013672
    9. '    ' → logprob: -9.502910614013672
    10. '{' → logprob: -9.502910614013672

Token 625: ' calcul' (ID: 7559)
  Prédit: ' inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -1.459132194519043
    2. ' code' → logprob: -1.959132194519043
    3. 'inverse' → logprob: -2.209132194519043
    4. '#' → logprob: -2.709132194519043
    5. 'from' → logprob: -2.709132194519043
    6. ')' → logprob: -2.834132194519043
    7. 'n' → logprob: -3.084132194519043
    8. '=' → logprob: -3.584132194519043
    9. ']' → logprob: -3.709132194519043
    10. 'pow' → logprob: -3.834132194519043

Token 626: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3786940574645996
    2. ' =' → logprob: -1.3786940574645996
    3. ' of' → logprob: -1.6286940574645996
    4. '=' → logprob: -2.0036940574645996
    5. ' de' → logprob: -2.6286940574645996
    6. ' inverse' → logprob: -3.5036940574645996
    7. ' des' → logprob: -4.3786940574646
    8. 'inverse' → logprob: -4.7536940574646
    9. 's' → logprob: -5.0036940574646
    10. 'de' → logprob: -5.1286940574646

Token 627: ' puissance' (ID: 63494)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.21972285211086273
    2. 'inverse' → logprob: -2.5947227478027344
    3. 'l' → logprob: -2.8447227478027344
    4. 'mod' → logprob: -3.0947227478027344
    5. 'inv' → logprob: -4.844722747802734
    6. '(pow' → logprob: -5.719722747802734
    7. 'la' → logprob: -6.469722747802734
    8. ' pow' → logprob: -6.719722747802734
    9. 'in' → logprob: -6.844722747802734
    10. 'multip' → logprob: -7.219722747802734

Token 628: ' inverse' (ID: 53743)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6440821886062622
    2. '^{-' → logprob: -1.6440821886062622
    3. '^-' → logprob: -2.0190820693969727
    4. 'inverse' → logprob: -2.0190820693969727
    5. ' inverse' → logprob: -2.5190820693969727
    6. '[-' → logprob: -3.2690820693969727
    7. '_inverse' → logprob: -3.2690820693969727
    8. 'pow' → logprob: -3.5190820693969727
    9. '10' → logprob: -3.7690820693969727
    10. '-in' → logprob: -4.019082069396973

Token 629: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38737761974334717
    2. 'pow' → logprob: -2.5123777389526367
    3. '=' → logprob: -2.6373777389526367
    4. '(pow' → logprob: -3.5123777389526367
    5. '   ' → logprob: -3.6373777389526367
    6. 's' → logprob: -3.7623777389526367
    7. '10' → logprob: -4.262377738952637
    8. ' pow' → logprob: -4.387377738952637
    9. ',' → logprob: -4.637377738952637
    10. '(' → logprob: -4.762377738952637

Token 630: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.3255799114704132
    2. ' Q' → logprob: -2.325579881668091
    3. 'pow' → logprob: -2.325579881668091
    4. '(Q' → logprob: -3.200579881668091
    5. '(' → logprob: -4.45058012008667
    6. ' (' → logprob: -4.82558012008667
    7. '(pow' → logprob: -4.82558012008667
    8. ' pow' → logprob: -4.95058012008667
    9. '[' → logprob: -6.20058012008667
    10. '10' → logprob: -6.57558012008667

Token 631: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7056176662445068
    2. ' =' → logprob: -2.205617666244507
    3. '   ' → logprob: -2.205617666244507
    4. 's' → logprob: -2.330617666244507
    5. '=' → logprob: -2.705617666244507
    6. '[' → logprob: -2.705617666244507
    7. '<|end|>' → logprob: -2.955617666244507
    8. '(' → logprob: -3.080617666244507
    9. ' requires' → logprob: -3.080617666244507
    10. ' is' → logprob: -3.330617666244507

Token 632: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.3208269476890564
    2. ' possible' → logprob: -1.3208270072937012
    3. 'fac' → logprob: -6.445827007293701
    4. ' effectué' → logprob: -7.195827007293701
    5. ' impossible' → logprob: -7.445827007293701
    6. ' done' → logprob: -7.445827007293701
    7. ' nécessaire' → logprob: -7.445827007293701
    8. 'done' → logprob: -7.695827007293701
    9. 'mod' → logprob: -7.945827007293701
    10. '```' → logprob: -8.070826530456543

Token 633: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4022451937198639
    2. ' if' → logprob: -1.4022451639175415
    3. ',' → logprob: -3.277245283126831
    4. 'if' → logprob: -4.152245044708252
    5. '.' → logprob: -4.277245044708252
    6. ':' → logprob: -5.277245044708252
    7. ' ' → logprob: -6.527245044708252
    8. ' (' → logprob: -6.652245044708252
    9. '(' → logprob: -6.777245044708252
    10. '[' → logprob: -6.777245044708252

Token 634: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.034364692866802216
    2. 'pow' → logprob: -4.034364700317383
    3. ' Q' → logprob: -4.659364700317383
    4. 'mod' → logprob: -5.659364700317383
    5. '#' → logprob: -6.534364700317383
    6. 'import' → logprob: -7.159364700317383
    7. ' pow' → logprob: -8.909364700317383
    8. ' ' → logprob: -9.034364700317383
    9. '   ' → logprob: -9.409364700317383
    10. 'def' → logprob: -9.534364700317383

Token 635: ' premier' (ID: 15506)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.24946440756320953
    2. ' >' → logprob: -1.9994643926620483
    3. ' is' → logprob: -3.249464511871338
    4. ' est' → logprob: -3.749464511871338
    5. 's' → logprob: -5.249464511871338
    6. 'is' → logprob: -5.374464511871338
    7. '```' → logprob: -5.874464511871338
    8. ' !=' → logprob: -6.499464511871338
    9. '%' → logprob: -6.749464511871338
    10. ' and' → logprob: -6.999464511871338

Token 636: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8209466934204102
    2. ')' → logprob: -1.1959466934204102
    3. '=' → logprob: -2.57094669342041
    4. '_' → logprob: -3.57094669342041
    5. ':' → logprob: -3.69594669342041
    6. '<|end|>' → logprob: -3.82094669342041
    7. '[' → logprob: -4.32094669342041
    8. '10' → logprob: -4.57094669342041
    9. '\n' → logprob: -4.57094669342041
    10. ',' → logprob: -4.69594669342041

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015658074989914894
    2. '    
' → logprob: -6.876565933227539
    3. '
' → logprob: -9.001565933227539
    4. ',' → logprob: -9.501565933227539
    5. '\n' → logprob: -9.751565933227539
    6. ')' → logprob: -10.001565933227539
    7. '       ' → logprob: -10.251565933227539
    8. '  
' → logprob: -10.376565933227539
    9. '  ' → logprob: -10.751565933227539
    10. ':' → logprob: -10.751565933227539

Token 638: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03667328506708145
    2. 'inv' → logprob: -3.4116733074188232
    3. 'inverse' → logprob: -6.786673069000244
    4. 'from' → logprob: -7.161673069000244
    5. 'if' → logprob: -8.161673545837402
    6. 'mod' → logprob: -8.536673545837402
    7. '
' → logprob: -8.786673545837402
    8. '#' (adapté à ' #') → logprob: -9.036673545837402
    9. ' inv' → logprob: -9.786673545837402
    10. 'pow' → logprob: -9.786673545837402

Token 639: ' Pré' (ID: 86400)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.1280311495065689
    2. '   ' → logprob: -2.5030312538146973
    3. 'inverse' → logprob: -3.7530312538146973
    4. 'from' → logprob: -4.503031253814697
    5. '#' → logprob: -6.503031253814697
    6. 'in' → logprob: -7.378031253814697
    7. ' inv' → logprob: -7.503031253814697
    8. 'if' → logprob: -8.128030776977539
    9. 'pow' → logprob: -8.628030776977539
    10. 'import' → logprob: -8.753030776977539

Token 640: '-cal' (ID: 84920)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.0456560850143433
    2. 'fix' → logprob: -1.4206560850143433
    3. 'cal' → logprob: -1.6706560850143433
    4. 'comput' → logprob: -2.670656204223633
    5. 'calc' → logprob: -2.795656204223633
    6. 'computed' → logprob: -3.920656204223633
    7. 'c' → logprob: -4.045656204223633
    8. '#' → logprob: -4.420656204223633
    9. 'compute' → logprob: -4.670656204223633
    10. 'import' → logprob: -5.045656204223633

Token 641: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.07081596553325653
    2. 'culation' → logprob: -3.1958160400390625
    3. 'cule' → logprob: -4.1958160400390625
    4. 'c' → logprob: -4.5708160400390625
    5. '```' → logprob: -7.6958160400390625
    6. 'culated' → logprob: -7.9458160400390625
    7. '#' → logprob: -8.945816040039062
    8. 'cules' → logprob: -8.945816040039062
    9. '``' → logprob: -9.320816040039062
    10. 'cal' → logprob: -9.445816040039062

Token 642: ' de' (ID: 334)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.13914921879768372
    2. ' inv' → logprob: -2.5141491889953613
    3. '   ' → logprob: -4.139149188995361
    4. 'inverse' → logprob: -4.139149188995361
    5. 'in' → logprob: -4.514149188995361
    6. 'pow' → logprob: -5.639149188995361
    7. ' inverse' → logprob: -6.889149188995361
    8. '_inv' → logprob: -7.514149188995361
    9. ' pow' → logprob: -8.51414966583252
    10. ' invers' → logprob: -8.76414966583252

Token 643: ' l' (ID: 305)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.3993631899356842
    2. 'pow' → logprob: -1.1493631601333618
    3. 'inverse' → logprob: -5.024363040924072
    4. ' inv' → logprob: -5.899363040924072
    5. 'in' → logprob: -6.524363040924072
    6. 'mod' → logprob: -7.274363040924072
    7. ' pow' → logprob: -7.399363040924072
    8. ' inverse' → logprob: -9.89936351776123
    9. ' invers' → logprob: -10.02436351776123
    10. 'p' → logprob: -10.14936351776123

Token 644: ''in' (ID: 17942)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.39316561818122864
    2. 'inverse' → logprob: -1.6431655883789062
    3. 'inv' → logprob: -2.1431655883789062
    4. 'in' → logprob: -5.643165588378906
    5. 'verse' → logprob: -6.018165588378906
    6. 'v' → logprob: -6.018165588378906
    7. ' inverse' → logprob: -7.018165588378906
    8. ' pow' → logprob: -7.143165588378906
    9. 'vers' → logprob: -7.268165588378906
    10. 'p' → logprob: -7.643165588378906

Token 645: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.003534256014972925
    2. 'v' → logprob: -5.878534317016602
    3. 'vers' → logprob: -7.628534317016602
    4. 'inverse' → logprob: -9.753534317016602
    5. 'pow' → logprob: -10.628534317016602
    6. '[' → logprob: -11.003534317016602
    7. '```' → logprob: -11.003534317016602
    8. 'versed' → logprob: -11.128534317016602
    9. 'vr' → logprob: -11.128534317016602
    10. '
' → logprob: -11.253534317016602

Token 646: ' de' (ID: 334)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.19694334268569946
    2. '   ' → logprob: -2.1969432830810547
    3. '_pow' → logprob: -2.9469432830810547
    4. 'inv' → logprob: -5.321943283081055
    5. '_inv' → logprob: -5.571943283081055
    6. ' =' → logprob: -6.321943283081055
    7. '10' → logprob: -6.946943283081055
    8. 'inverse' → logprob: -7.446943283081055
    9. 'of' → logprob: -7.821943283081055
    10. '_p' → logprob: -8.071943283081055

Token 647: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2532709538936615
    2. 'pow' → logprob: -1.5032709836959839
    3. '(' → logprob: -7.753271102905273
    4. '(pow' → logprob: -7.753271102905273
    5. 'def' → logprob: -8.753271102905273
    6. '```' → logprob: -9.378271102905273
    7. ' pow' → logprob: -9.503271102905273
    8. ' ' → logprob: -9.503271102905273
    9. '[' → logprob: -11.003271102905273
    10. '`' → logprob: -11.378271102905273

Token 648: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.034212876111269
    2. 'pow' → logprob: -3.409212827682495
    3. '(' → logprob: -8.284213066101074
    4. ' ' → logprob: -9.034213066101074
    5. '(pow' → logprob: -9.534213066101074
    6. ' pow' → logprob: -10.534213066101074
    7. 'mod' → logprob: -11.034213066101074
    8. 'def' → logprob: -11.284213066101074
    9. '```' → logprob: -11.784213066101074
    10. '

' → logprob: -11.971713066101074

Token 649: ' modulo' (ID: 112372)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.4667237997055054
    2. 'mod' → logprob: -1.5917237997055054
    3. '_inv' → logprob: -1.9667237997055054
    4. ' =' → logprob: -2.216723918914795
    5. '_inverse' → logprob: -2.216723918914795
    6. 'pow' → logprob: -3.091723918914795
    7. 'inv' → logprob: -3.091723918914795
    8. '   ' → logprob: -3.341723918914795
    9. 'inverse' → logprob: -3.841723918914795
    10. ',' → logprob: -4.091723918914795

Token 650: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.022171849384903908
    2. ' Q' → logprob: -4.147171974182129
    3. '   ' → logprob: -5.647171974182129
    4. '10' → logprob: -6.772171974182129
    5. '(Q' → logprob: -8.022171974182129
    6. ',' → logprob: -8.647171974182129
    7. ',Q' → logprob: -8.772171974182129
    8. ' (' → logprob: -8.897171974182129
    9. 'pow' → logprob: -8.897171974182129
    10. 'mod' → logprob: -9.147171974182129

Token 651: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019447701051831245
    2. 'inv' → logprob: -4.0194478034973145
    3. ' inv' → logprob: -7.2694478034973145
    4. 'inverse' → logprob: -7.7694478034973145
    5. 'mod' → logprob: -10.269447326660156
    6. 'in' → logprob: -10.394447326660156
    7. ',' → logprob: -10.894447326660156
    8. '
' → logprob: -11.269447326660156
    9. 'pow' → logprob: -11.394447326660156
    10. ' =' → logprob: -11.394447326660156

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21686658263206482
    2. 'inv' → logprob: -1.7168666124343872
    3. 'pow' → logprob: -4.466866493225098
    4. 'inverse' → logprob: -6.091866493225098
    5. 'mod' → logprob: -7.466866493225098
    6. '
' → logprob: -8.091866493225098
    7. ' inv' → logprob: -8.466866493225098
    8. 'in' → logprob: -8.966866493225098
    9. '10' → logprob: -9.466866493225098
    10. '_inv' → logprob: -9.591866493225098

Token 653: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.0017747845267876983
    2. '   ' → logprob: -7.376774787902832
    3. 'pow' → logprob: -7.376774787902832
    4. 'inverse' → logprob: -7.751774787902832
    5. ' inv' → logprob: -9.626774787902832
    6. 'mod' → logprob: -10.751774787902832
    7. '10' → logprob: -13.501774787902832
    8. '_inv' → logprob: -14.126774787902832
    9. 'invert' → logprob: -14.751774787902832
    10. 'in' → logprob: -15.126774787902832

Token 654: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13143837451934814
    2. '_' → logprob: -2.1314382553100586
    3. ' =' → logprob: -5.506438255310059
    4. '=' → logprob: -7.881438255310059
    5. 'pow' → logprob: -10.881438255310059
    6. 'mod' → logprob: -11.256438255310059
    7. '_mod' → logprob: -11.506438255310059
    8. '_pow' → logprob: -12.006438255310059
    9. '_base' → logprob: -12.506438255310059
    10. '_t' → logprob: -12.756438255310059

Token 655: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519325315952301
    2. '=' → logprob: -1.5019325017929077
    3. ' ' → logprob: -13.626932144165039
    4. ')' → logprob: -14.001932144165039
    5. '   ' → logprob: -14.751932144165039
    6. ',' → logprob: -15.251932144165039
    7. '＝' → logprob: -15.501932144165039
    8. '  ' → logprob: -16.25193214416504
    9. 's' → logprob: -16.50193214416504
    10. ' ' → logprob: -16.75193214416504

Token 656: ' pow' (ID: 9779)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.547789674485102e-05
    2. ' mod' → logprob: -10.250035285949707
    3. '(mod' → logprob: -16.500036239624023
    4. 'pow' → logprob: -16.750036239624023
    5. '	mod' → logprob: -19.000036239624023
    6. '   ' → logprob: -19.375036239624023
    7. ' ' → logprob: -21.625036239624023
    8. '.mod' → logprob: -22.500036239624023
    9. '10' → logprob: -22.625036239624023
    10. '/mod' → logprob: -22.875036239624023

Token 657: '(' (ID: 7)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2799270749092102
    2. '(' → logprob: -1.7799270153045654
    3. '10' → logprob: -2.6549270153045654
    4. '(mod' → logprob: -6.2799272537231445
    5. 'exp' → logprob: -6.4049272537231445
    6. 'pow' → logprob: -7.4049272537231445
    7. '(pow' → logprob: -7.7799272537231445
    8. '(Q' → logprob: -8.154927253723145
    9. 'erm' → logprob: -9.154927253723145
    10. 'def' → logprob: -9.654927253723145

Token 658: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.625014305114746
    3. 'mod' → logprob: -12.500014305114746
    4. ' ' → logprob: -13.500014305114746
    5. ')' → logprob: -16.125015258789062
    6. '   ' → logprob: -16.875015258789062
    7. '```' → logprob: -17.500015258789062
    8. 'pow' → logprob: -17.875015258789062
    9. '
' → logprob: -18.250015258789062
    10. '  ' → logprob: -18.875015258789062

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2018677145242691
    2. ',Q' → logprob: -1.701867699623108
    3. ' ,' → logprob: -7.951867580413818
    4. '   ' → logprob: -9.451868057250977
    5. ')' → logprob: -12.201868057250977
    6. '  ' → logprob: -12.201868057250977
    7. ',-' → logprob: -12.326868057250977
    8. ',q' → logprob: -13.076868057250977
    9. 'Q' → logprob: -13.576868057250977
    10. '    ' → logprob: -13.951868057250977

Token 660: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0014322625938802958
    2. '-' → logprob: -7.251432418823242
    3. '-Q' → logprob: -7.251432418823242
    4. ' Q' → logprob: -11.501432418823242
    5. '<Q' → logprob: -13.376432418823242
    6. '	Q' → logprob: -14.876432418823242
    7. '_Q' → logprob: -15.251432418823242
    8. ',Q' → logprob: -15.251432418823242
    9. '(Q' → logprob: -15.751432418823242
    10. ' -' → logprob: -15.876432418823242

Token 661: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7491250875755213e-05
    2. ' -' → logprob: -10.875027656555176
    3. 'Q' → logprob: -11.875027656555176
    4. '```' → logprob: -14.375027656555176
    5. '-Q' → logprob: -15.000027656555176
    6. ' ' → logprob: -16.37502670288086
    7. '   ' → logprob: -16.50002670288086
    8. '(Q' → logprob: -16.62502670288086
    9. ' Q' → logprob: -17.00002670288086
    10. '<Q' → logprob: -17.25002670288086

Token 662: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0076458994299173355
    2. '-' → logprob: -4.882646083831787
    3. ' -' → logprob: -10.382645606994629
    4. ' ' → logprob: -12.257645606994629
    5. '```' → logprob: -13.007645606994629
    6. '   ' → logprob: -14.882645606994629
    7. '1' → logprob: -15.007645606994629
    8. '  ' → logprob: -15.257645606994629
    9. '
' → logprob: -15.882645606994629
    10. '(' → logprob: -16.570146560668945

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013295256067067385
    2. ' ,' → logprob: -7.25132942199707
    3. ')' → logprob: -7.50132942199707
    4. '   ' → logprob: -9.62632942199707
    5. ' )' → logprob: -15.62632942199707
    6. '	' → logprob: -15.87632942199707
    7. '%' → logprob: -15.87632942199707
    8. '```' → logprob: -16.00132942199707
    9. ')%' → logprob: -16.37632942199707
    10. '  ' → logprob: -16.62632942199707

Token 664: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00020354038861114532
    2. ' Q' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.75020408630371
    4. ')' → logprob: -18.37520408630371
    5. '	Q' → logprob: -19.75020408630371
    6. '```' → logprob: -20.75020408630371
    7. ' ' → logprob: -21.37520408630371
    8. '       ' → logprob: -23.00020408630371
    9. '  ' → logprob: -23.12520408630371
    10. '    ' → logprob: -23.12520408630371

Token 665: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.125000953674316
    4. '   ' → logprob: -15.625000953674316
    5. ')

' → logprob: -18.875
    6. ')#' → logprob: -19.0
    7. '),' → logprob: -19.375
    8. ' ' → logprob: -20.125
    9. ')
' → logprob: -20.375
    10. ')}' → logprob: -20.375

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00771818682551384
    2. '    
' → logprob: -5.882718086242676
    3. 'count' → logprob: -5.882718086242676
    4. ' count' → logprob: -7.007718086242676
    5. '
' → logprob: -7.882718086242676
    6. ' ans' → logprob: -8.882718086242676
    7. 'result' → logprob: -9.132718086242676
    8. ' counts' → logprob: -9.257718086242676
    9. 'counts' → logprob: -9.757718086242676
    10. ')' → logprob: -10.257718086242676

Token 667: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.02091238647699356
    2. 'from' → logprob: -5.395912170410156
    3. 'counter' → logprob: -5.395912170410156
    4. 'counts' → logprob: -5.895912170410156
    5. 'prefix' → logprob: -6.145912170410156
    6. '   ' → logprob: -6.270912170410156
    7. 'cnt' → logprob: -6.770912170410156
    8. 'ans' → logprob: -7.145912170410156
    9. 'answer' → logprob: -7.395912170410156
    10. 'dp' → logprob: -7.520912170410156

Token 668: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.11582954972982407
    2. 'from' → logprob: -3.1158294677734375
    3. 'counts' → logprob: -3.3658294677734375
    4. 'counter' → logprob: -4.2408294677734375
    5. 'dp' → logprob: -5.4908294677734375
    6. 'freq' → logprob: -5.7408294677734375
    7. 'cnt' → logprob: -5.8658294677734375
    8. 'pos' → logprob: -6.6158294677734375
    9. 'hash' → logprob: -6.7408294677734375
    10. 'prefix' → logprob: -6.8658294677734375

Token 669: ' parc' (ID: 22138)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5651777386665344
    2. 'from' → logprob: -1.1901776790618896
    3. '   ' → logprob: -3.1901776790618896
    4. 'counts' → logprob: -3.6901776790618896
    5. ' from' → logprob: -3.8151776790618896
    6. 'comp' → logprob: -4.065177917480469
    7. 'freq' → logprob: -5.065177917480469
    8. 'cnt' → logprob: -5.565177917480469
    9. ' count' → logprob: -6.065177917480469
    10. 'counter' → logprob: -6.440177917480469

Token 670: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.34688735008239746
    2. 'ourt' → logprob: -1.5968873500823975
    3. 'oure' → logprob: -2.5968873500823975
    4. 'our' → logprob: -4.346887588500977
    5. '_' → logprob: -7.221887588500977
    6. '#' → logprob: -7.721887588500977
    7. 'orre' → logprob: -8.096887588500977
    8. '       ' → logprob: -8.846887588500977
    9. 'court' → logprob: -8.846887588500977
    10. '```' → logprob: -8.846887588500977

Token 671: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3206971883773804
    2. '   ' → logprob: -1.3206971883773804
    3. ' j' → logprob: -2.69569730758667
    4. 'indices' → logprob: -2.69569730758667
    5. 'for' → logprob: -3.07069730758667
    6. 'from' → logprob: -3.19569730758667
    7. ' the' → logprob: -3.44569730758667
    8. ' for' → logprob: -3.69569730758667
    9. 'range' → logprob: -3.82069730758667
    10. 'the' → logprob: -4.07069730758667

Token 672: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.182946115732193
    2. 'in' → logprob: -2.30794620513916
    3. ' =' → logprob: -3.93294620513916
    4. ':' → logprob: -4.05794620513916
    5. '   ' → logprob: -4.30794620513916
    6. '=' → logprob: -4.80794620513916
    7. 'for' → logprob: -5.30794620513916
    8. ' for' → logprob: -6.80794620513916
    9. 'range' → logprob: -6.80794620513916
    10. ',' → logprob: -7.05794620513916

Token 673: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5822400857578032e-05
    2. 'range' → logprob: -11.125025749206543
    3. ' ' → logprob: -12.250025749206543
    4. ' range' → logprob: -12.625025749206543
    5. '1' → logprob: -12.750025749206543
    6. '   ' → logprob: -18.62502670288086
    7. 'N' → logprob: -19.62502670288086
    8. '=' → logprob: -20.12502670288086
    9. 'j' → logprob: -21.00002670288086
    10. '(' → logprob: -21.25002670288086

Token 674: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.023293538717553e-05
    2. 'range' → logprob: -10.500030517578125
    3. ' range' → logprob: -13.500030517578125
    4. '1' → logprob: -14.250030517578125
    5. ' ' → logprob: -14.375030517578125
    6. '   ' → logprob: -18.625030517578125
    7. 'N' → logprob: -19.250030517578125
    8. '۰' → logprob: -19.875030517578125
    9. '=' → logprob: -20.250030517578125
    10. '```' → logprob: -20.375030517578125

Token 675: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5806187987327576
    2. ' to' → logprob: -0.9556187987327576
    3. '   ' → logprob: -3.2056188583374023
    4. '
' → logprob: -5.580618858337402
    5. 'à' → logprob: -5.580618858337402
    6. 'for' → logprob: -6.080618858337402
    7. ',' → logprob: -6.205618858337402
    8. ' à' → logprob: -7.455618858337402
    9. ' jusqu' → logprob: -7.580618858337402
    10. 'import' → logprob: -7.830618858337402

Token 676: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.4849443838757e-06
    2. ' N' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.875004768371582
    4. 'n' → logprob: -17.875003814697266
    5. '	N' → logprob: -19.375003814697266
    6. '<N' → logprob: -20.625003814697266
    7. ' ' → logprob: -20.625003814697266
    8. '
' → logprob: -20.625003814697266
    9. '       ' → logprob: -21.125003814697266
    10. '(N' → logprob: -21.500003814697266

Token 677: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.589983344078064
    2. '   ' → logprob: -1.339983344078064
    3. '       ' → logprob: -2.8399834632873535
    4. '```' → logprob: -3.4649834632873535
    5. '=' → logprob: -3.8399834632873535
    6. '+' → logprob: -4.4649834632873535
    7. 'for' → logprob: -4.5899834632873535
    8. '):' → logprob: -5.0899834632873535
    9. ':
' → logprob: -5.2149834632873535
    10. ',' → logprob: -5.2149834632873535

Token 678: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12558037042617798
    2. '1' → logprob: -2.375580310821533
    3. '0' → logprob: -4.875580310821533
    4. '   ' → logprob: -5.000580310821533
    5. '```' → logprob: -5.375580310821533
    6. 'j' → logprob: -6.125580310821533
    7. '-' → logprob: -6.125580310821533
    8. ')' → logprob: -8.125580787658691
    9. '       ' → logprob: -8.625580787658691
    10. 'n' → logprob: -8.625580787658691

Token 679: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016092555597424507
    2. 'count' → logprob: -4.766092777252197
    3. 'counts' → logprob: -5.516092777252197
    4. 'counter' → logprob: -6.766092777252197
    5. '
' → logprob: -7.141092777252197
    6. '    
' → logprob: -7.766092777252197
    7. '```' → logprob: -8.891092300415039
    8. 'freq' → logprob: -8.891092300415039
    9. ' counts' → logprob: -9.266092300415039
    10. 'cnt' → logprob: -9.391092300415039

Token 680: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13445287942886353
    2. ' count' → logprob: -3.0094528198242188
    3. ' counter' → logprob: -3.7594528198242188
    4. ' counts' → logprob: -3.7594528198242188
    5. 'count' → logprob: -3.8844528198242188
    6. ' freq' → logprob: -6.009452819824219
    7. 'counts' → logprob: -6.009452819824219
    8. ' from' → logprob: -6.759452819824219
    9. 'counter' → logprob: -6.884452819824219
    10. 'from' → logprob: -7.634452819824219

Token 681: ' on' (ID: 402)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.34745875000953674
    2. 'comp' → logprob: -1.8474587202072144
    3. 'counts' → logprob: -2.847458839416504
    4. 'com' → logprob: -3.472458839416504
    5. 'from' → logprob: -3.597458839416504
    6. '   ' → logprob: -5.222458839416504
    7. 'initialize' → logprob: -5.972458839416504
    8. 'result' → logprob: -5.972458839416504
    9. 'calcul' → logprob: -7.097458839416504
    10. 'cnt' → logprob: -7.222458839416504

Token 682: ' calc' (ID: 25691)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.707535445690155
    2. 'continue' → logprob: -1.7075355052947998
    3. 'stock' → logprob: -2.3325355052948
    4. 'util' → logprob: -2.5825355052948
    5. 'cherche' → logprob: -3.4575355052948
    6. 'from' → logprob: -3.8325355052948
    7. 'vais' → logprob: -3.8325355052948
    8. 'va' → logprob: -4.332535266876221
    9. 'maint' → logprob: -4.457535266876221
    10. 'count' → logprob: -5.082535266876221

Token 683: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.006956780795007944
    2. 'ère' → logprob: -5.256956577301025
    3. 'ure' → logprob: -7.131956577301025
    4. 'ète' → logprob: -8.256957054138184
    5. 'ulé' → logprob: -9.256957054138184
    6. 'u' → logprob: -9.381957054138184
    7. 'ôte' → logprob: -9.756957054138184
    8. '**' → logprob: -10.131957054138184
    9. 'ulte' → logprob: -10.131957054138184
    10. 'ute' → logprob: -10.506957054138184

Token 684: ' key' (ID: 2140)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1435153484344482
    2. 'count' → logprob: -1.1435153484344482
    3. 'ans' → logprob: -1.6435153484344482
    4. ' ans' → logprob: -3.2685153484344482
    5. 'answer' → logprob: -3.5185153484344482
    6. ' count' → logprob: -3.7685153484344482
    7. 'counter' → logprob: -3.8935153484344482
    8. 'res' → logprob: -4.018515586853027
    9. ' counter' → logprob: -4.643515586853027
    10. ' answer' → logprob: -5.143515586853027

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01861470378935337
    2. '=' → logprob: -4.018614768981934
    3. '   ' → logprob: -8.143614768981934
    4. 's' → logprob: -9.518614768981934
    5. ')' → logprob: -10.893614768981934
    6. '=j' → logprob: -10.893614768981934
    7. '    ' → logprob: -11.143614768981934
    8. '```' → logprob: -11.768614768981934
    9. '[j' → logprob: -12.143614768981934
    10. ',' → logprob: -12.143614768981934

Token 686: ' prefix' (ID: 18633)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0160507932305336
    2. ' (' → logprob: -4.391050815582275
    3. 'prefix' → logprob: -5.766050815582275
    4. ' prefix' → logprob: -7.891050815582275
    5. '   ' → logprob: -10.891050338745117
    6. '(pref' → logprob: -13.016050338745117
    7. ' ' → logprob: -13.516050338745117
    8. '(p' → logprob: -13.766050338745117
    9. '((' → logprob: -13.766050338745117
    10. '(' → logprob: -14.266050338745117

Token 687: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.292907877039397e-06
    2. 'mod' → logprob: -13.75000286102295
    3. '[j' → logprob: -14.00000286102295
    4. '   ' → logprob: -14.25000286102295
    5. '[_' → logprob: -15.62500286102295
    6. ' _' → logprob: -16.500003814697266
    7. '[' → logprob: -16.750003814697266
    8. '```' → logprob: -16.750003814697266
    9. '_MOD' → logprob: -17.125003814697266
    10. '	mod' → logprob: -17.125003814697266

Token 688: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.147740689106286e-05
    2. '[' → logprob: -9.62507152557373
    3. '   ' → logprob: -13.50007152557373
    4. 'j' → logprob: -13.50007152557373
    5. ' [' → logprob: -14.25007152557373
    6. '[i' → logprob: -14.25007152557373
    7. '```' → logprob: -14.25007152557373
    8. '[N' → logprob: -15.25007152557373
    9. '[(' → logprob: -16.000070571899414
    10. '\[' → logprob: -16.750070571899414

Token 689: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0330456905066967
    2. '[j' → logprob: -4.158045768737793
    3. '[' → logprob: -4.283045768737793
    4. ']' → logprob: -6.783045768737793
    5. '   ' → logprob: -7.533045768737793
    6. '1' → logprob: -7.783045768737793
    7. ' +' → logprob: -8.158045768737793
    8. '{' → logprob: -8.533045768737793
    9. '[i' → logprob: -9.408045768737793
    10. '```' → logprob: -9.533045768737793

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '+' → logprob: -16.750001907348633
    6. '```' → logprob: -16.750001907348633
    7. '`' → logprob: -18.125001907348633
    8. '{' → logprob: -18.625001907348633
    9. '  ' → logprob: -19.437501907348633
    10. '

' → logprob: -19.625001907348633

Token 691: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4785977900028229
    2. ']' → logprob: -1.1035977602005005
    3. '*' → logprob: -3.35359787940979
    4. ']*' → logprob: -5.353597640991211
    5. '   ' → logprob: -6.103597640991211
    6. '
' → logprob: -6.228597640991211
    7. ')' → logprob: -6.728597640991211
    8. ',' → logprob: -6.853597640991211
    9. '[j' → logprob: -7.603597640991211
    10. '*j' → logprob: -7.978597640991211

Token 692: 'inv' (ID: 31086)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.29919546842575073
    2. 'mod' → logprob: -1.4241955280303955
    3. 'inv' → logprob: -4.174195289611816
    4. '(pow' → logprob: -6.674195289611816
    5. '(inv' → logprob: -7.674195289611816
    6. '(mod' → logprob: -7.799195289611816
    7. ' pow' → logprob: -8.299195289611816
    8. ' mod' → logprob: -9.799195289611816
    9. ' inv' → logprob: -10.924195289611816
    10. '```' → logprob: -12.049195289611816

Token 693: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.600714161526412e-05
    2. 'pow' → logprob: -9.500076293945312
    3. '(pow' → logprob: -14.250076293945312
    4. '_pow' → logprob: -14.625076293945312
    5. '_' → logprob: -17.250076293945312
    6. '(' → logprob: -17.250076293945312
    7. '[' → logprob: -18.375076293945312
    8. 'Pow' → logprob: -18.375076293945312
    9. ' pow' → logprob: -18.875076293945312
    10. '.pow' → logprob: -19.500076293945312

Token 694: '^{' (ID: 42923)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.11164338141679764
    2. '[(' → logprob: -2.4866433143615723
    3. '[' → logprob: -4.361643314361572
    4. 'pow' → logprob: -4.861643314361572
    5. '**' → logprob: -6.486643314361572
    6. '[((' → logprob: -9.36164379119873
    7. '[i' → logprob: -9.48664379119873
    8. '_pow' → logprob: -10.11164379119873
    9. '[N' → logprob: -10.36164379119873
    10. '(pow' → logprob: -10.36164379119873

Token 695: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008480889722704887
    2. '(j' → logprob: -5.008481025695801
    3. 'pow' → logprob: -6.883481025695801
    4. ' j' → logprob: -8.1334810256958
    5. '(pow' → logprob: -8.8834810256958
    6. '[j' → logprob: -8.8834810256958
    7. ' (' → logprob: -9.5084810256958
    8. 'i' → logprob: -10.1334810256958
    9. '
' → logprob: -11.1334810256958
    10. '(' → logprob: -11.6334810256958

Token 696: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02857125736773014
    2. '[j' → logprob: -4.278571128845215
    3. 'j' → logprob: -5.278571128845215
    4. '[' → logprob: -5.653571128845215
    5. '(j' → logprob: -6.278571128845215
    6. '-' → logprob: -7.778571128845215
    7. '+j' → logprob: -7.903571128845215
    8. '-j' → logprob: -8.153571128845215
    9. '{' → logprob: -8.278571128845215
    10. ' j' → logprob: -8.528571128845215

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045307583059184253
    2. '+' → logprob: -7.750452995300293
    3. ' ' → logprob: -11.500452995300293
    4. '   ' → logprob: -12.750452995300293
    5. '
' → logprob: -12.875452995300293
    6. '```' → logprob: -13.500452995300293
    7. '(' → logprob: -14.125452995300293
    8. 'i' → logprob: -14.500452995300293
    9. ' +' → logprob: -14.500452995300293
    10. '{' → logprob: -14.625452995300293

Token 698: '}' (ID: 92)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03338136523962021
    2. '}' → logprob: -3.908381462097168
    3. '%' → logprob: -5.533381462097168
    4. ']%' → logprob: -5.658381462097168
    5. '[j' → logprob: -5.783381462097168
    6. '   ' → logprob: -7.158381462097168
    7. '```' → logprob: -8.158381462097168
    8. '**' → logprob: -8.408381462097168
    9. ' %' → logprob: -8.408381462097168
    10. ')' → logprob: -9.033381462097168

Token 699: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11954561620950699
    2. ' =' → logprob: -2.8695456981658936
    3. '=' → logprob: -3.8695456981658936
    4. '
' → logprob: -4.1195454597473145
    5. ')' → logprob: -5.7445454597473145
    6. ',' → logprob: -6.3695454597473145
    7. ':' → logprob: -6.4945454597473145
    8. 'for' → logprob: -6.4945454597473145
    9. 'def' → logprob: -6.4945454597473145
    10. ' ' → logprob: -6.7445454597473145

Token 700: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00024822709383443
    2. ' Q' → logprob: -8.375247955322266
    3. '(Q' → logprob: -11.875247955322266
    4. '```' → logprob: -13.000247955322266
    5. '   ' → logprob: -13.375247955322266
    6. ')' → logprob: -13.500247955322266
    7. '_Q' → logprob: -13.625247955322266
    8. 'j' → logprob: -14.000247955322266
    9. ' (' → logprob: -14.375247955322266
    10. '(' → logprob: -14.625247955322266

Token 701: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02067210152745247
    2. '
' → logprob: -4.39567232131958
    3. ' =' → logprob: -6.14567232131958
    4. '```' → logprob: -6.77067232131958
    5. '=' → logprob: -7.14567232131958
    6. ':' → logprob: -7.14567232131958
    7. '    
' → logprob: -7.64567232131958
    8. 'count' → logprob: -7.64567232131958
    9. 'counter' → logprob: -7.89567232131958
    10. ',' → logprob: -8.145671844482422

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017024369444698095
    2. 'count' → logprob: -7.251702308654785
    3. ' =' → logprob: -8.126702308654785
    4. '
' → logprob: -9.126702308654785
    5. 'counter' → logprob: -9.126702308654785
    6. '=' → logprob: -9.251702308654785
    7. '```' → logprob: -9.376702308654785
    8. 'counts' → logprob: -9.626702308654785
    9. ',' → logprob: -10.126702308654785
    10. '    
' → logprob: -10.751702308654785

Token 703: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08736097067594528
    2. 'count' → logprob: -2.8373608589172363
    3. 'counter' → logprob: -4.337360858917236
    4. 'counts' → logprob: -4.712360858917236
    5. 'keys' → logprob: -7.587360858917236
    6. 'cnt' → logprob: -8.212361335754395
    7. 'freq' → logprob: -8.337361335754395
    8. 'from' → logprob: -8.337361335754395
    9. 'key' → logprob: -8.462361335754395
    10. '```' → logprob: -8.587361335754395

Token 704: ' On' (ID: 2160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12482190132141113
    2. 'counts' → logprob: -2.874821901321411
    3. 'counter' → logprob: -3.624821901321411
    4. '   ' → logprob: -3.874821901321411
    5. 'from' → logprob: -4.999821662902832
    6. 'freq' → logprob: -6.124821662902832
    7. 'cnt' → logprob: -6.249821662902832
    8. ' count' → logprob: -7.374821662902832
    9. 'keys' → logprob: -7.624821662902832
    10. 'seen' → logprob: -7.749821662902832

Token 705: ' en' (ID: 469)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7406750321388245
    2. 'from' → logprob: -1.1156749725341797
    3. '=' → logprob: -2.7406749725341797
    4. 'count' → logprob: -3.1156749725341797
    5. '   ' → logprob: -3.2406749725341797
    6. 'contin' → logprob: -4.86567497253418
    7. 'initialize' → logprob: -4.99067497253418
    8. 'comp' → logprob: -4.99067497253418
    9. '#' → logprob: -5.11567497253418
    10. 'continu' → logprob: -5.61567497253418

Token 706: 'registre' (ID: 77466)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6657332181930542
    2. 'counter' → logprob: -2.2907333374023438
    3. 'code' → logprob: -2.4157333374023438
    4. 'ter' → logprob: -2.5407333374023438
    5. 'sure' → logprob: -3.5407333374023438
    6. 'default' → logprob: -3.6657333374023438
    7. 'd' → logprob: -4.665733337402344
    8. 'contin' → logprob: -4.665733337402344
    9. 'tre' → logprob: -4.790733337402344
    10. 't' → logprob: -4.790733337402344

Token 707: ' pour' (ID: 1930)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.232951283454895
    2. 'key' → logprob: -1.607951283454895
    3. 'prefix' → logprob: -1.982951283454895
    4. 'keys' → logprob: -2.2329511642456055
    5. 'count' → logprob: -2.7329511642456055
    6. ' key' → logprob: -2.9829511642456055
    7. ' keys' → logprob: -3.1079511642456055
    8. ' counts' → logprob: -3.3579511642456055
    9. 'freq' → logprob: -4.3579511642456055
    10. 'counter' → logprob: -4.8579511642456055

Token 708: ' les' (ID: 1341)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8375179767608643
    2. 'i' → logprob: -1.5875179767608643
    3. 'key' → logprob: -2.2125179767608643
    4. ' key' → logprob: -2.4625179767608643
    5. ' i' → logprob: -2.9625179767608643
    6. 'j' → logprob: -3.3375179767608643
    7. ' j' → logprob: -3.4625179767608643
    8. '   ' → logprob: -4.212517738342285
    9. 'each' → logprob: -4.212517738342285
    10. ' each' → logprob: -4.837517738342285

Token 709: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.2532707750797272
    2. 'i' → logprob: -1.7532707452774048
    3. ' indices' → logprob: -3.3782708644866943
    4. ' i' → logprob: -5.128270626068115
    5. 'positions' → logprob: -6.128270626068115
    6. 'prefix' → logprob: -6.128270626068115
    7. 'indice' → logprob: -6.503270626068115
    8. 'j' → logprob: -6.878270626068115
    9. 'index' → logprob: -7.253270626068115
    10. 'a' → logprob: -7.753270626068115

Token 710: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3590712547302246
    2. ' j' → logprob: -1.6090712547302246
    3. 'j' → logprob: -1.7340712547302246
    4. 'prefix' → logprob: -2.1090712547302246
    5. 'key' → logprob: -3.2340712547302246
    6. ' key' → logprob: -3.2340712547302246
    7. '[j' → logprob: -3.7340712547302246
    8. ' prefix' → logprob: -3.8590712547302246
    9. ' i' → logprob: -4.109071254730225
    10. 'from' → logprob: -4.234071254730225

Token 711: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3151339292526245
    2. '=' → logprob: -1.5651339292526245
    3. ' =' → logprob: -1.6901339292526245
    4. ' where' → logprob: -3.190134048461914
    5. 'in' → logprob: -3.440134048461914
    6. '   ' → logprob: -3.440134048461914
    7. ':' → logprob: -3.690134048461914
    8. 'dans' → logprob: -3.940134048461914
    9. ' in' → logprob: -4.190134048461914
    10. 'where' → logprob: -4.190134048461914

Token 712: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1602764129638672
    2. ' a' → logprob: -1.9102764129638672
    3. '(a' → logprob: -10.660276412963867
    4. '   ' → logprob: -11.660276412963867
    5. ' ' → logprob: -12.535276412963867
    6. '```' → logprob: -12.660276412963867
    7. '0' → logprob: -12.785276412963867
    8. '	a' → logprob: -13.035276412963867
    9. '[a' → logprob: -13.535276412963867
    10. 'not' → logprob: -13.660276412963867

Token 713: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -12.00001335144043
    3. ' [' → logprob: -12.25001335144043
    4. 'i' → logprob: -13.37501335144043
    5. '[j' → logprob: -15.12501335144043
    6. '```' → logprob: -15.87501335144043
    7. 'a' → logprob: -16.62501335144043
    8. ' !=' → logprob: -16.62501335144043
    9. '!=' → logprob: -17.00001335144043
    10. ' i' → logprob: -17.25001335144043

Token 714: ']!=' (ID: 85780)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02993249148130417
    2. '!=' → logprob: -4.029932498931885
    3. ']' → logprob: -5.029932498931885
    4. ']!=' → logprob: -5.529932498931885
    5. ' !=' → logprob: -7.154932498931885
    6. '[j' → logprob: -8.654932022094727
    7. '[' → logprob: -8.654932022094727
    8. 'i' → logprob: -10.029932022094727
    9. '[]' → logprob: -11.529932022094727
    10. '   ' → logprob: -12.279932022094727

Token 715: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -17.62504005432129
    4. '=' → logprob: -18.00004005432129
    5. '۰' → logprob: -20.00004005432129
    6. ' ' → logprob: -20.12504005432129
    7. '０' → logprob: -20.50004005432129
    8. '1' → logprob: -21.37504005432129
    9. '   ' → logprob: -21.37504005432129
    10. '
' → logprob: -21.50004005432129

Token 716: ',' (ID: 11)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4288588762283325
    2. '   ' → logprob: -1.9288588762283325
    3. 'from' → logprob: -2.053858757019043
    4. 'counter' → logprob: -2.303858757019043
    5. '
' → logprob: -2.553858757019043
    6. ' =' → logprob: -3.178858757019043
    7. 'counts' → logprob: -3.178858757019043
    8. ' from' → logprob: -3.303858757019043
    9. ',' → logprob: -3.803858757019043
    10. ' in' → logprob: -3.803858757019043

Token 717: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9608286023139954
    2. 'counts' → logprob: -1.7108285427093506
    3. 'keys' → logprob: -2.3358285427093506
    4. ' keys' → logprob: -2.4608285427093506
    5. 'from' → logprob: -2.9608285427093506
    6. 'counter' → logprob: -3.2108285427093506
    7. 'freq' → logprob: -3.7108285427093506
    8. ' counts' → logprob: -3.9608285427093506
    9. 'indices' → logprob: -4.08582878112793
    10. 'prefix' → logprob: -4.21082878112793

Token 718: ' valeur' (ID: 41664)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5070347785949707
    2. 'key' → logprob: -1.6320347785949707
    3. 'pow' → logprob: -2.0070347785949707
    4. 'count' → logprob: -3.5070347785949707
    5. 'value' → logprob: -5.007034778594971
    6. 'keys' → logprob: -5.632034778594971
    7. 'for' → logprob: -6.007034778594971
    8. 'position' → logprob: -6.132034778594971
    9. 'prev' → logprob: -6.132034778594971
    10. 'power' → logprob: -6.257034778594971

Token 719: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.14537495374679565
    2. ' =' → logprob: -3.8953750133514404
    3. '=' → logprob: -4.145374774932861
    4. 'inv' → logprob: -4.270374774932861
    5. 's' → logprob: -4.395374774932861
    6. 'key' → logprob: -4.395374774932861
    7. 'de' → logprob: -4.520374774932861
    8. ' prefix' → logprob: -4.770374774932861
    9. 'inverse' → logprob: -4.770374774932861
    10. '_prefix' → logprob: -5.270374774932861

Token 720: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00010771531378850341
    2. 'mod' → logprob: -10.000107765197754
    3. '_hash' → logprob: -11.625107765197754
    4. '_' → logprob: -11.625107765197754
    5. '_count' → logprob: -11.750107765197754
    6. '_map' → logprob: -12.125107765197754
    7. 's' → logprob: -12.625107765197754
    8. '_keys' → logprob: -13.000107765197754
    9. '_counts' → logprob: -13.000107765197754
    10. '_inv' → logprob: -13.125107765197754

Token 721: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.602859377861023
    2. '=' → logprob: -1.477859377861023
    3. '_' → logprob: -2.8528594970703125
    4. '_counts' → logprob: -2.9778594970703125
    5. '_count' → logprob: -3.1028594970703125
    6. '_counter' → logprob: -4.1028594970703125
    7. '   ' → logprob: -4.6028594970703125
    8. '[' → logprob: -5.2278594970703125
    9. 'count' → logprob: -5.7278594970703125
    10. '[i' → logprob: -5.7278594970703125

Token 722: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12116891145706177
    2. '[i' → logprob: -2.371168851852417
    3. '],' → logprob: -4.746169090270996
    4. ']*' → logprob: -5.996169090270996
    5. ',' → logprob: -6.621169090270996
    6. ' ]' → logprob: -7.121169090270996
    7. ')' → logprob: -7.371169090270996
    8. '])' → logprob: -7.371169090270996
    9. ']
' → logprob: -7.496169090270996
    10. ']=' → logprob: -7.621169090270996

Token 723: 'inv' (ID: 31086)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0026508092414587736
    2. '(pow' → logprob: -6.502650737762451
    3. 'inv' → logprob: -7.377650737762451
    4. ' pow' → logprob: -7.752650737762451
    5. '(inv' → logprob: -10.75265121459961
    6. '
' → logprob: -10.75265121459961
    7. '(' → logprob: -11.00265121459961
    8. 'mod' → logprob: -11.50265121459961
    9. ' (' → logprob: -12.62765121459961
    10. '```' → logprob: -12.62765121459961

Token 724: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.861651490908116e-05
    2. 'pow' → logprob: -9.625068664550781
    3. '(pow' → logprob: -13.750068664550781
    4. '_pow' → logprob: -14.625068664550781
    5. '(' → logprob: -15.375068664550781
    6. '_' → logprob: -15.375068664550781
    7. '=' → logprob: -16.12506866455078
    8. ' ' → logprob: -16.37506866455078
    9. '```' → logprob: -16.37506866455078
    10. ' =' → logprob: -17.37506866455078

Token 725: '^{' (ID: 42923)
  Prédit: '^{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^{' → logprob: -0.3261694014072418
    2. ' =' → logprob: -2.951169490814209
    3. '**' → logprob: -3.326169490814209
    4. ')' → logprob: -3.576169490814209
    5. '{' → logprob: -3.826169490814209
    6. '^' → logprob: -4.076169490814209
    7. '
' → logprob: -4.076169490814209
    8. '```' → logprob: -4.326169490814209
    9. '   ' → logprob: -4.576169490814209
    10. '=' → logprob: -4.701169490814209

Token 726: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008935939986258745
    2. '(i' → logprob: -7.750893592834473
    3. ' i' → logprob: -7.875893592834473
    4. ' (' → logprob: -10.750893592834473
    5. '[i' → logprob: -10.750893592834473
    6. '(' → logprob: -11.125893592834473
    7. '0' → logprob: -11.875893592834473
    8. '
' → logprob: -12.625893592834473
    9. '   ' → logprob: -12.625893592834473
    10. '{i' → logprob: -13.125893592834473

Token 727: '}' (ID: 92)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013705970719456673
    2. '}' → logprob: -4.763706207275391
    3. ']%' → logprob: -6.638706207275391
    4. ' ]' → logprob: -7.263706207275391
    5. '])' → logprob: -7.388706207275391
    6. 'i' → logprob: -7.763706207275391
    7. ']}' → logprob: -7.888706207275391
    8. '   ' → logprob: -8.01370620727539
    9. '%' → logprob: -8.26370620727539
    10. '}]' → logprob: -8.26370620727539

Token 728: ' dans' (ID: 2671)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.24721835553646088
    2. '   ' → logprob: -1.997218370437622
    3. 'counter' → logprob: -3.247218370437622
    4. 'from' → logprob: -3.997218370437622
    5. 'counts' → logprob: -4.122218132019043
    6. '
' → logprob: -5.372218132019043
    7. 'cnt' → logprob: -6.747218132019043
    8. 'result' → logprob: -7.372218132019043
    9. 'ans' → logprob: -7.747218132019043
    10. 'dict' → logprob: -7.872218132019043

Token 729: ' un' (ID: 537)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7801435589790344
    2. 'count' → logprob: -2.0301434993743896
    3. 'counts' → logprob: -2.0301434993743896
    4. 'un' → logprob: -2.7801434993743896
    5. 'hash' → logprob: -2.7801434993743896
    6. 'd' → logprob: -2.7801434993743896
    7. 'freq' → logprob: -3.6551434993743896
    8. 'prefix' → logprob: -4.030143737792969
    9. 'default' → logprob: -4.030143737792969
    10. 'keys' → logprob: -5.280143737792969

Token 730: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.44832849502563477
    2. 'dict' → logprob: -1.1983284950256348
    3. '{}' → logprob: -2.9483284950256348
    4. 'dictionary' → logprob: -5.198328495025635
    5. '{' → logprob: -6.573328495025635
    6. 'dic' → logprob: -9.448328018188477
    7. '{
' → logprob: -10.198328018188477
    8. '{}
' → logprob: -10.198328018188477
    9. ' defaultdict' → logprob: -10.823328018188477
    10. '={}' → logprob: -11.448328018188477

Token 731: ' freq' (ID: 42078)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1923558712005615
    2. 'counter' → logprob: -1.6923558712005615
    3. 'counts' → logprob: -1.9423558712005615
    4. '
' → logprob: -2.3173558712005615
    5. 'from' → logprob: -2.6923558712005615
    6. '   ' → logprob: -3.4423558712005615
    7. 'freq' → logprob: -3.6923558712005615
    8. ' =' → logprob: -3.6923558712005615
    9. 'dict' → logprob: -3.8173558712005615
    10. '{' → logprob: -4.192356109619141

Token 732: '
' (ID: 198)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.8834814429283142
    2. ' =' → logprob: -1.383481502532959
    3. '
' → logprob: -2.008481502532959
    4. ' freq' → logprob: -2.383481502532959
    5. '=' → logprob: -3.258481502532959
    6. '   ' → logprob: -3.508481502532959
    7. '{' → logprob: -5.133481502532959
    8. '{}
' → logprob: -5.383481502532959
    9. '_freq' → logprob: -5.633481502532959
    10. '(freq' → logprob: -5.633481502532959

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30362600088119507
    2. 'freq' → logprob: -1.5536260604858398
    3. ' =' → logprob: -3.80362606048584
    4. '
' → logprob: -4.55362606048584
    5. '=' → logprob: -5.05362606048584
    6. ' freq' → logprob: -5.80362606048584
    7. 'from' → logprob: -5.92862606048584
    8. '```' → logprob: -6.05362606048584
    9. '    
' → logprob: -7.55362606048584
    10. ',' → logprob: -7.67862606048584

Token 734: ' #' (ID: 1069)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.14895112812519073
    2. '   ' → logprob: -2.1489510536193848
    3. '
' → logprob: -4.273951053619385
    4. 'from' → logprob: -5.148951053619385
    5. '```' → logprob: -7.273951053619385
    6. ' freq' → logprob: -7.398951053619385
    7. '    
' → logprob: -7.898951053619385
    8. 'frequency' → logprob: -8.523951530456543
    9. ' from' → logprob: -10.523951530456543
    10. 'count' → logprob: -10.523951530456543

Token 735: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3942778408527374
    2. 'freq' → logprob: -1.519277811050415
    3. 'from' → logprob: -2.269277811050415
    4. '
' → logprob: -6.144278049468994
    5. 'count' → logprob: -7.144278049468994
    6. ' freq' → logprob: -9.144277572631836
    7. 'frequency' → logprob: -9.269277572631836
    8. 'result' → logprob: -9.269277572631836
    9. '    
' → logprob: -9.394277572631836
    10. ' from' → logprob: -9.644277572631836

Token 736: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7226268649101257
    2. 'i' → logprob: -1.4726269245147705
    3. ' j' → logprob: -1.9726269245147705
    4. ' i' → logprob: -2.4726269245147705
    5. 'count' → logprob: -3.2226269245147705
    6. 'freq' → logprob: -4.722626686096191
    7. ' freq' → logprob: -5.347626686096191
    8. ' compter' → logprob: -6.597626686096191
    9. ' counting' → logprob: -6.847626686096191
    10. ' count' → logprob: -7.347626686096191

Token 737: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2014986276626587
    2. ' j' → logprob: -1.7014986276626587
    3. '_j' → logprob: -10.826498985290527
    4. '```' → logprob: -10.826498985290527
    5. '   ' → logprob: -11.201498985290527
    6. ' ' → logprob: -11.951498985290527
    7. '	j' → logprob: -12.201498985290527
    8. '`' → logprob: -13.076498985290527
    9. 'index' → logprob: -13.201498985290527
    10. 'i' → logprob: -13.701498985290527

Token 738: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17007842659950256
    2. '   ' → logprob: -2.4200785160064697
    3. ':
' → logprob: -2.7950785160064697
    4. '[j' → logprob: -6.295078277587891
    5. ',' → logprob: -7.045078277587891
    6. '[i' → logprob: -7.170078277587891
    7. '[' → logprob: -7.170078277587891
    8. '=' → logprob: -7.545078277587891
    9. 'for' → logprob: -8.29507827758789
    10. '):
' → logprob: -8.67007827758789

Token 739: ' on' (ID: 402)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.3156161308288574
    2. 'key' → logprob: -1.3156161308288574
    3. '   ' → logprob: -6.315616130828857
    4. ' if' → logprob: -7.940616130828857
    5. 'if' → logprob: -9.440616607666016
    6. '
' → logprob: -10.565616607666016
    7. 'count' → logprob: -11.190616607666016
    8. ' for' → logprob: -11.440616607666016
    9. '	key' → logprob: -11.440616607666016
    10. 'for' → logprob: -12.190616607666016

Token 740: ' récup' (ID: 62856)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2334185540676117
    2. ' continue' → logprob: -2.7334184646606445
    3. 'calculate' → logprob: -3.3584184646606445
    4. 'count' → logprob: -3.9834184646606445
    5. 'key' → logprob: -4.1084184646606445
    6. '=' → logprob: -4.1084184646606445
    7. 'contin' → logprob: -4.7334184646606445
    8. 'update' → logprob: -5.1084184646606445
    9. ' calculate' → logprob: -5.6084184646606445
    10. ' =' → logprob: -5.6084184646606445

Token 741: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.008830476552248001
    2. 'ere' → logprob: -5.758830547332764
    3. 're' → logprob: -6.383830547332764
    4. 'e' → logprob: -6.758830547332764
    5. 'ète' → logprob: -7.383830547332764
    6. 'u' → logprob: -7.633830547332764
    7. 'ène' → logprob: -7.758830547332764
    8. 'è' → logprob: -8.633830070495605
    9. 'érer' → logprob: -9.008830070495605
    10. '=' → logprob: -9.508830070495605

Token 742: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.03815440833568573
    2. ' freq' → logprob: -3.288154363632202
    3. '   ' → logprob: -10.038154602050781
    4. '(freq' → logprob: -10.663154602050781
    5. 'count' → logprob: -10.788154602050781
    6. 'fre' → logprob: -11.538154602050781
    7. 'prefix' → logprob: -12.913154602050781
    8. 'ans' → logprob: -13.038154602050781
    9. 'key' → logprob: -13.413154602050781
    10. 'len' → logprob: -13.788154602050781

Token 743: '[key' (ID: 16401)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.005407691001892
    2. '[p' → logprob: -1.005407691001892
    3. '[key' → logprob: -1.880407691001892
    4. 'get' → logprob: -2.6304078102111816
    5. '[val' → logprob: -4.755407810211182
    6. 'count' → logprob: -5.380407810211182
    7. '_count' → logprob: -5.505407810211182
    8. '[get' → logprob: -5.630407810211182
    9. '[f' → logprob: -5.755407810211182
    10. '_key' → logprob: -5.880407810211182

Token 744: ']' (ID: 60)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.02595200575888157
    2. ']' → logprob: -4.400951862335205
    3. '[key' → logprob: -4.525951862335205
    4. 'get' → logprob: -6.150951862335205
    5. '].' → logprob: -8.025952339172363
    6. '[get' → logprob: -10.900952339172363
    7. '[' → logprob: -11.400952339172363
    8. ')' → logprob: -12.025952339172363
    9. '[p' → logprob: -12.400952339172363
    10. ']+' → logprob: -12.525952339172363

Token 745: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.290597140789032
    2. ' =' → logprob: -1.5405972003936768
    3. '=' → logprob: -4.290596961975098
    4. 'freq' → logprob: -4.540596961975098
    5. '
' → logprob: -5.165596961975098
    6. ':' → logprob: -6.040596961975098
    7. 'from' → logprob: -6.665596961975098
    8. ':
' → logprob: -7.165596961975098
    9. '(freq' → logprob: -7.665596961975098
    10. '_freq' → logprob: -7.915596961975098

Token 746: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.9316356778144836
    2. 'increment' → logprob: -2.056635618209839
    3. 'aj' → logprob: -2.181635618209839
    4. 'acc' → logprob: -2.181635618209839
    5. ' ajouter' → logprob: -2.306635618209839
    6. 'count' → logprob: -2.806635618209839
    7. 'ans' → logprob: -3.681635618209839
    8. 'comp' → logprob: -3.806635618209839
    9. ' increment' → logprob: -4.681635856628418
    10. ' compt' → logprob: -4.931635856628418

Token 747: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27137291431427
    2. ' =' → logprob: -1.89637291431427
    3. '
' → logprob: -3.3963727951049805
    4. 'freq' → logprob: -3.8963727951049805
    5. '=' → logprob: -4.6463727951049805
    6. 'from' → logprob: -5.3963727951049805
    7. ' freq' → logprob: -5.6463727951049805
    8. '    
' → logprob: -6.2713727951049805
    9. 'import' → logprob: -6.5213727951049805
    10. '(
' → logprob: -6.7713727951049805

Token 748: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43654704093933105
    2. 'sub' → logprob: -1.561547040939331
    3. ' sous' → logprob: -2.686547040939331
    4. 'valid' → logprob: -3.936547040939331
    5. 'val' → logprob: -4.31154727935791
    6. ' substr' → logprob: -4.56154727935791
    7. ' valid' → logprob: -4.68654727935791
    8. ' occurrences' → logprob: -5.06154727935791
    9. 'substring' → logprob: -5.43654727935791
    10. 'occ' → logprob: -6.06154727935791

Token 749: '-s' (ID: 2011)
  Prédit: '_sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -0.17673282325267792
    2. ' sequences' → logprob: -3.1767327785491943
    3. 'arrays' → logprob: -3.1767327785491943
    4. 'se' → logprob: -3.3017327785491943
    5. '   ' → logprob: -3.9267327785491943
    6. 'seq' → logprob: -5.426733016967773
    7. '_seq' → logprob: -5.801733016967773
    8. '_mod' → logprob: -5.801733016967773
    9. '_se' → logprob: -6.301733016967773
    10. 'quences' → logprob: -6.301733016967773

Token 750: 'é' (ID: 377)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quences' → logprob: -8.268254896393046e-05
    2. 'q' → logprob: -9.750082969665527
    3. 'quence' → logprob: -11.125082969665527
    4. 'qs' → logprob: -13.125082969665527
    5. '   ' → logprob: -13.250082969665527
    6. 'qu' → logprob: -13.625082969665527
    7. 'e' → logprob: -14.375082969665527
    8. '[' → logprob: -14.375082969665527
    9. '```' → logprob: -14.625082969665527
    10. '#' → logprob: -15.125082969665527

Token 751: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.00023655613767914474
    2. 'q' → logprob: -8.875236511230469
    3. 'quence' → logprob: -9.250236511230469
    4. 'qu' → logprob: -15.000236511230469
    5. 'ences' → logprob: -16.12523651123047
    6. '   ' → logprob: -16.25023651123047
    7. 'qs' → logprob: -17.12523651123047
    8. '_' → logprob: -17.50023651123047
    9. '#' → logprob: -17.62523651123047
    10. 'ries' → logprob: -17.87523651123047

Token 752: ' termin' (ID: 18412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20008061826229095
    2. 'freq' → logprob: -1.8250806331634521
    3. 'from' → logprob: -4.700080394744873
    4. '
' → logprob: -5.200080394744873
    5. ' freq' → logprob: -5.575080394744873
    6. ' =' → logprob: -7.700080394744873
    7. '(freq' → logprob: -8.200080871582031
    8. ' from' → logprob: -8.200080871582031
    9. 'import' → logprob: -8.575080871582031
    10. '    
' → logprob: -9.075080871582031

Token 753: 'ant' (ID: 493)
  Prédit: 'nant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nant' → logprob: -1.0164326429367065
    2. 'ées' → logprob: -1.2664326429367065
    3. 'ines' → logprob: -2.141432762145996
    4. 'nées' → logprob: -2.266432762145996
    5. 'ant' → logprob: -2.391432762145996
    6. 'es' → logprob: -4.766432762145996
    7. 'in' → logprob: -5.016432762145996
    8. '   ' → logprob: -5.266432762145996
    9. 'inees' → logprob: -5.516432762145996
    10. 'iné' → logprob: -6.516432762145996

Token 754: ' à' (ID: 1221)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2504589557647705
    2. ' at' → logprob: -2.2504589557647705
    3. '[j' → logprob: -2.5004589557647705
    4. '_j' → logprob: -2.5004589557647705
    5. '_here' → logprob: -2.5004589557647705
    6. '=' → logprob: -2.6254589557647705
    7. ' j' → logprob: -2.8754589557647705
    8. '   ' → logprob: -3.3754589557647705
    9. 'à' → logprob: -3.5004589557647705
    10. 'par' → logprob: -3.6254589557647705

Token 755: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004095973912626505
    2. ' j' → logprob: -5.504096031188965
    3. '   ' → logprob: -12.004096031188965
    4. ' ' → logprob: -12.754096031188965
    5. '[j' → logprob: -13.129096031188965
    6. '```' → logprob: -13.129096031188965
    7. ')' → logprob: -13.754096031188965
    8. 'index' → logprob: -13.879096031188965
    9. '`' → logprob: -15.004096031188965
    10. '	j' → logprob: -15.129096031188965

Token 756: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027923956513404846
    2. 'count' → logprob: -6.8777923583984375
    3. 'freq' → logprob: -6.8777923583984375
    4. '
' → logprob: -8.252792358398438
    5. 'ans' → logprob: -8.877792358398438
    6. '    
' → logprob: -9.127792358398438
    7. 'result' → logprob: -9.502792358398438
    8. 'from' → logprob: -9.752792358398438
    9. 'answer' → logprob: -10.877792358398438
    10. 'cnt' → logprob: -11.252792358398438

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1304323524236679
    2. 'freq' → logprob: -2.255432367324829
    3. '
' → logprob: -4.13043212890625
    4. '    
' → logprob: -6.88043212890625
    5. 'from' → logprob: -8.50543212890625
    6. ' freq' → logprob: -9.50543212890625
    7. 'frequency' → logprob: -11.13043212890625
    8. '_freq' → logprob: -11.50543212890625
    9. '```' → logprob: -11.50543212890625
    10. '(freq' → logprob: -11.75543212890625

Token 758: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.2495623081922531
    2. '   ' → logprob: -1.7495622634887695
    3. 'from' → logprob: -3.2495622634887695
    4. '
' → logprob: -4.8745622634887695
    5. '```' → logprob: -7.8745622634887695
    6. ' freq' → logprob: -9.37456226348877
    7. 'import' → logprob: -10.24956226348877
    8. '    
' → logprob: -10.37456226348877
    9. 'frequency' → logprob: -10.74956226348877
    10. ' from' → logprob: -11.49956226348877

Token 759: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08948734402656555
    2. '=' → logprob: -2.464487314224243
    3. '={}' → logprob: -7.589487552642822
    4. '={' → logprob: -10.589487075805664
    5. '={'' → logprob: -11.839487075805664
    6. ' ={' → logprob: -13.089487075805664
    7. '   ' → logprob: -13.839487075805664
    8. '=dict' → logprob: -14.089487075805664
    9. '={"' → logprob: -14.089487075805664
    10. '{' → logprob: -14.089487075805664

Token 760: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00025895543512888253
    2. 'default' → logprob: -8.750259399414062
    3. 'dict' → logprob: -9.250259399414062
    4. '{' → logprob: -12.375259399414062
    5. ' {}' → logprob: -16.375259399414062
    6. '{})' → logprob: -16.625259399414062
    7. 'collections' → logprob: -17.500259399414062
    8. '{}

' → logprob: -17.500259399414062
    9. '{},' → logprob: -18.250259399414062
    10. ' defaultdict' → logprob: -18.500259399414062

Token 761: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016790216614026576
    2. '()
' → logprob: -9.125167846679688
    3. '{' → logprob: -11.125167846679688
    4. '({' → logprob: -11.125167846679688
    5. '()\' → logprob: -11.625167846679688
    6. '=' → logprob: -12.125167846679688
    7. '()]' → logprob: -12.875167846679688
    8. '()}' → logprob: -13.125167846679688
    9. '{}' → logprob: -13.250167846679688
    10. '()

' → logprob: -13.500167846679688

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09231697022914886
    2. 'count' → logprob: -2.4673168659210205
    3. 'result' → logprob: -6.8423171043396
    4. 'answer' → logprob: -6.9673171043396
    5. 'freq' → logprob: -7.7173171043396
    6. ' count' → logprob: -8.467316627502441
    7. 'for' → logprob: -8.967316627502441
    8. 'counter' → logprob: -9.092316627502441
    9. 'cnt' → logprob: -9.592316627502441
    10. 'ans' → logprob: -9.717316627502441

Token 763: ' answer' (ID: 6052)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6916850209236145
    2. 'answer' (adapté à ' answer') → logprob: -1.1916849613189697
    3. 'ans' → logprob: -2.1916849613189697
    4. 'result' → logprob: -2.6916849613189697
    5. 'res' → logprob: -4.441685199737549
    6. '   ' → logprob: -5.691685199737549
    7. 'freq' → logprob: -7.691685199737549
    8. 'total' → logprob: -8.81668472290039
    9. ' ans' → logprob: -9.19168472290039
    10. ' answer' → logprob: -10.19168472290039

Token 764: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868723213672638
    2. '=' → logprob: -1.1368722915649414
    3. ')' → logprob: -14.761872291564941
    4. '[' → logprob: -15.511872291564941
    5. ' +=' → logprob: -15.511872291564941
    6. '   ' → logprob: -15.511872291564941
    7. ' ' → logprob: -16.136873245239258
    8. ' =
' → logprob: -17.386873245239258
    9. '+=' → logprob: -17.511873245239258
    10. ',' → logprob: -17.511873245239258

Token 765: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.875911712646484
    4. '  ' → logprob: -19.375911712646484
    5. ' ' → logprob: -19.375911712646484
    6. '۰' → logprob: -20.375911712646484
    7. '    ' → logprob: -21.000911712646484
    8. '=' → logprob: -21.125911712646484
    9. '```' → logprob: -21.250911712646484
    10. '000' → logprob: -21.625911712646484

Token 766: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '۰' → logprob: -20.500001907348633
    5. 'int' → logprob: -21.000001907348633
    6. '=' → logprob: -21.375001907348633
    7. '```' → logprob: -21.375001907348633
    8. '000' → logprob: -21.562501907348633
    9. '1' → logprob: -21.562501907348633
    10. '０' → logprob: -21.750001907348633

Token 767: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07681597769260406
    2. 'for' → logprob: -3.0768160820007324
    3. ' for' → logprob: -3.9518160820007324
    4. '
' → logprob: -4.951816082000732
    5. '    
' → logprob: -6.826816082000732
    6. '```' → logprob: -8.576815605163574
    7. 'i' → logprob: -9.951815605163574
    8. '  
' → logprob: -9.951815605163574
    9. '	for' → logprob: -10.576815605163574
    10. ' 
' → logprob: -10.826815605163574

Token 768: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2059321254491806
    2. 'for' → logprob: -1.7059321403503418
    3. ' for' → logprob: -5.455932140350342
    4. 'i' → logprob: -9.580931663513184
    5. '```' → logprob: -10.080931663513184
    6. 'pow' → logprob: -10.455931663513184
    7. '
' → logprob: -10.580931663513184
    8. 'freq' → logprob: -11.205931663513184
    9. '    
' → logprob: -11.455931663513184
    10. '	for' → logprob: -11.580931663513184

Token 769: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12575499713420868
    2. '   ' → logprob: -2.3757550716400146
    3. ' for' → logprob: -3.8757550716400146
    4. 'pow' → logprob: -5.6257548332214355
    5. '```' → logprob: -7.8757548332214355
    6. 'inv' → logprob: -8.125755310058594
    7. 'i' → logprob: -9.750755310058594
    8. '	for' → logprob: -10.250755310058594
    9. '    
' → logprob: -10.625755310058594
    10. 'freq' → logprob: -11.125755310058594

Token 770: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21956254541873932
    2. 'i' → logprob: -1.8445625305175781
    3. ' j' → logprob: -3.469562530517578
    4. ' i' → logprob: -4.844562530517578
    5. '   ' → logprob: -11.219562530517578
    6. '```' → logprob: -12.594562530517578
    7. 'index' → logprob: -12.844562530517578
    8. '_j' → logprob: -12.844562530517578
    9. 'idx' → logprob: -13.094562530517578
    10. ' ' → logprob: -13.219562530517578

Token 771: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01853278838098049
    2. 'in' → logprob: -4.018532752990723
    3. ' ' → logprob: -8.893532752990723
    4. '=' → logprob: -9.393532752990723
    5. ',' → logprob: -9.768532752990723
    6. '0' → logprob: -10.393532752990723
    7. ' ,' → logprob: -11.143532752990723
    8. ')' → logprob: -11.518532752990723
    9. '   ' → logprob: -11.518532752990723
    10. ' =' → logprob: -11.768532752990723

Token 772: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008690637187100947
    2. ' range' → logprob: -7.250869274139404
    3. '0' → logprob: -8.750868797302246
    4. '   ' → logprob: -14.750868797302246
    5. '(range' → logprob: -15.875868797302246
    6. ' ' → logprob: -16.000869750976562
    7. 'r' → logprob: -17.250869750976562
    8. 'in' → logprob: -17.250869750976562
    9. '[' → logprob: -17.375869750976562
    10. 'rang' → logprob: -18.250869750976562

Token 773: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00027611342375166714
    2. '(N' → logprob: -8.625276565551758
    3. '0' → logprob: -9.875276565551758
    4. '   ' → logprob: -10.375276565551758
    5. ' N' → logprob: -11.375276565551758
    6. '	N' → logprob: -14.000276565551758
    7. '1' → logprob: -14.125276565551758
    8. 'i' → logprob: -15.125276565551758
    9. '(' → logprob: -15.750276565551758
    10. '[N' → logprob: -16.000276565551758

Token 774: '+' (ID: 10)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17604218423366547
    2. '):' → logprob: -2.426042079925537
    3. '+' → logprob: -2.926042079925537
    4. '   ' → logprob: -4.051042079925537
    5. ':' → logprob: -7.676042079925537
    6. ')' → logprob: -8.176042556762695
    7. '       ' → logprob: -8.301042556762695
    8. '):
' → logprob: -8.801042556762695
    9. ' +' → logprob: -8.926042556762695
    10. '
' → logprob: -9.176042556762695

Token 775: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.274932143744081e-05
    2. 'i' → logprob: -11.000042915344238
    3. 'N' → logprob: -11.500042915344238
    4. '+' → logprob: -11.875042915344238
    5. '   ' → logprob: -13.125042915344238
    6. '```' → logprob: -13.375042915344238
    7. '0' → logprob: -13.625042915344238
    8. ' ' → logprob: -13.625042915344238
    9. ')' → logprob: -13.875042915344238
    10. '
' → logprob: -14.000042915344238

Token 776: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.037197295576334
    2. '):' → logprob: -3.4121973514556885
    3. ':' → logprob: -6.162197113037109
    4. '   ' → logprob: -6.912197113037109
    5. '):
' → logprob: -8.41219711303711
    6. ':
' → logprob: -8.91219711303711
    7. '       ' → logprob: -10.66219711303711
    8. ')' → logprob: -10.66219711303711
    9. '+' → logprob: -11.78719711303711
    10. ',' → logprob: -11.91219711303711

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047654795343987644
    2. '   ' → logprob: -9.125476837158203
    3. '	   ' → logprob: -9.250476837158203
    4. '[' → logprob: -9.625476837158203
    5. '<|end|>' → logprob: -10.000476837158203
    6. ' if' → logprob: -10.125476837158203
    7. '```' → logprob: -10.250476837158203
    8. '	' → logprob: -10.500476837158203
    9. ',' → logprob: -11.750476837158203
    10. '    ' → logprob: -11.875476837158203

Token 778: ' if' (ID: 538)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06477899104356766
    2. '   ' → logprob: -2.939779043197632
    3. 'if' (adapté à ' if') → logprob: -5.064778804779053
    4. ' key' → logprob: -6.064778804779053
    5. '       ' → logprob: -7.064778804779053
    6. 'val' → logprob: -9.189779281616211
    7. 'k' → logprob: -9.564779281616211
    8. 'x' → logprob: -10.189779281616211
    9. ' if' → logprob: -10.189779281616211
    10. 'pow' → logprob: -10.939779281616211

Token 779: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00027420982951298356
    2. '(i' → logprob: -8.375274658203125
    3. 'a' → logprob: -10.625274658203125
    4. ' i' → logprob: -11.500274658203125
    5. '0' → logprob: -12.125274658203125
    6. '   ' → logprob: -13.625274658203125
    7. '(' → logprob: -13.875274658203125
    8. ' (' → logprob: -14.500274658203125
    9. '[i' → logprob: -15.000274658203125
    10. '	i' → logprob: -15.375274658203125

Token 780: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6568498015403748
    2. '==' → logprob: -1.5318498611450195
    3. ' ==' → logprob: -2.0318498611450195
    4. '>' → logprob: -3.1568498611450195
    5. '<' → logprob: -3.9068498611450195
    6. ' and' → logprob: -4.1568498611450195
    7. '<len' → logprob: -4.1568498611450195
    8. 'and' → logprob: -4.2818498611450195
    9. ' >' → logprob: -4.4068498611450195
    10. '0' → logprob: -5.5318498611450195

Token 781: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.750024795532227
    3. '=' → logprob: -12.625024795532227
    4. '1' → logprob: -18.125024795532227
    5. 'N' → logprob: -18.625024795532227
    6. '۰' → logprob: -19.562524795532227
    7. '   ' → logprob: -19.625024795532227
    8. '...' → logprob: -19.875024795532227
    9. ' =' → logprob: -20.125024795532227
    10. '
' → logprob: -20.250024795532227

Token 782: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '=' → logprob: -15.500003814697266
    4. 'N' → logprob: -16.000003814697266
    5. '1' → logprob: -16.250003814697266
    6. 'i' → logprob: -16.750003814697266
    7. '```' → logprob: -18.500003814697266
    8. '
' → logprob: -18.812503814697266
    9. '`' → logprob: -19.125003814697266
    10. '   ' → logprob: -19.187503814697266

Token 783: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01418289914727211
    2. 'and' → logprob: -4.264183044433594
    3. '   ' → logprob: -12.014183044433594
    4. '       ' → logprob: -12.264183044433594
    5. ':' → logprob: -12.514183044433594
    6. ':
' → logprob: -13.264183044433594
    7. '           ' → logprob: -13.389183044433594
    8. '	and' → logprob: -14.014183044433594
    9. ' ' → logprob: -15.264183044433594
    10. '<|end|>' → logprob: -16.014183044433594

Token 784: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008882584050297737
    2. 'i' → logprob: -4.758882522583008
    3. '(a' → logprob: -8.883882522583008
    4. '(i' → logprob: -9.883882522583008
    5. '0' → logprob: -10.258882522583008
    6. ' a' → logprob: -10.758882522583008
    7. '(' → logprob: -11.008882522583008
    8. ' (' → logprob: -13.383882522583008
    9. '   ' → logprob: -13.758882522583008
    10. ' i' → logprob: -14.133882522583008

Token 785: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -13.500004768371582
    3. 'i' → logprob: -13.750004768371582
    4. '[a' → logprob: -14.750004768371582
    5. '[
' → logprob: -14.875004768371582
    6. '```' → logprob: -14.875004768371582
    7. 'a' → logprob: -15.250004768371582
    8. '[I' → logprob: -15.500004768371582
    9. ' [' → logprob: -16.250003814697266
    10. '   ' → logprob: -16.625003814697266

Token 786: '-' (ID: 12)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.5745970606803894
    2. ']' → logprob: -1.0745971202850342
    3. '[i' → logprob: -2.949597120285034
    4. '[' → logprob: -3.324597120285034
    5. '!=' → logprob: -5.824596881866455
    6. '-' → logprob: -6.449596881866455
    7. '0' → logprob: -6.949596881866455
    8. 'i' → logprob: -7.324596881866455
    9. ']!='' → logprob: -8.199597358703613
    10. '```' → logprob: -8.324597358703613

Token 787: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019515875028446317
    2. '0' → logprob: -6.251951694488525
    3. ' ' → logprob: -11.001951217651367
    4. ']' → logprob: -12.376951217651367
    5. ']!=' → logprob: -13.751951217651367
    6. '```' → logprob: -14.626951217651367
    7. '   ' → logprob: -15.001951217651367
    8. 'i' → logprob: -16.501951217651367
    9. ']==' → logprob: -17.751951217651367
    10. ':' → logprob: -18.001951217651367

Token 788: ']' (ID: 60)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.582432746887207
    2. ']' → logprob: -0.832432746887207
    3. '!=' → logprob: -5.082432746887207
    4. ' !=' → logprob: -8.582432746887207
    5. ')!=' → logprob: -9.707432746887207
    6. '}' → logprob: -12.082432746887207
    7. ']!='' → logprob: -12.832432746887207
    8. '()!=' → logprob: -12.957432746887207
    9. '']' → logprob: -13.207432746887207
    10. '[' → logprob: -13.832432746887207

Token 789: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.005970034282654524
    2. ' !=' → logprob: -5.130970001220703
    3. ']!=' → logprob: -10.380970001220703
    4. ')!=' → logprob: -11.880970001220703
    5. '()!=' → logprob: -13.505970001220703
    6. '>' → logprob: -14.255970001220703
    7. '!==' → logprob: -14.755970001220703
    8. '0' → logprob: -15.005970001220703
    9. '[' → logprob: -15.505970001220703
    10. '```' → logprob: -15.630970001220703

Token 790: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '!=' → logprob: -17.000024795532227
    4. '!' → logprob: -17.125024795532227
    5. ''' → logprob: -18.500024795532227
    6. '   ' → logprob: -19.250024795532227
    7. '=' → logprob: -19.625024795532227
    8. ' ' → logprob: -19.750024795532227
    9. '۰' → logprob: -19.875024795532227
    10. '[' → logprob: -20.000024795532227

Token 791: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. ''' → logprob: -18.000015258789062
    4. 'not' → logprob: -19.375015258789062
    5. '۰' → logprob: -19.750015258789062
    6. '!=' → logprob: -19.750015258789062
    7. '!' → logprob: -19.750015258789062
    8. '   ' → logprob: -19.750015258789062
    9. '[' → logprob: -19.875015258789062
    10. '```' → logprob: -20.250015258789062

Token 792: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5541515946388245
    2. ':' → logprob: -0.9291515946388245
    3. '       ' → logprob: -3.5541515350341797
    4. '   ' → logprob: -6.55415153503418
    5. '           ' → logprob: -9.17915153503418
    6. ':return' → logprob: -9.42915153503418
    7. '):
' → logprob: -9.80415153503418
    8. ':
' → logprob: -10.05415153503418
    9. ' or' → logprob: -10.17915153503418
    10. ' continue' → logprob: -10.17915153503418

Token 793: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25515711307525635
    2. '           ' → logprob: -1.5051571130752563
    3. ' continue' → logprob: -6.130156993865967
    4. 'continue' → logprob: -7.005156993865967
    5. '	continue' → logprob: -9.880157470703125
    6. '	       ' → logprob: -10.255157470703125
    7. '   ' → logprob: -10.630157470703125
    8. '	   ' → logprob: -11.880157470703125
    9. '	' → logprob: -12.005157470703125
    10. ':' → logprob: -12.505157470703125

Token 794: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10804089903831482
    2. 'continue' → logprob: -2.3580408096313477
    3. ' continue' → logprob: -5.108040809631348
    4. '           ' → logprob: -6.983040809631348
    5. '   ' → logprob: -7.233040809631348
    6. '	continue' → logprob: -9.233040809631348
    7. ' ' → logprob: -13.108040809631348
    8. '```' → logprob: -13.858040809631348
    9. '	' → logprob: -14.108040809631348
    10. 'contin' → logprob: -14.233040809631348

Token 795: ' On' (ID: 2160)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.039493296295404434
    2. '       ' → logprob: -3.2894933223724365
    3. ' continue' → logprob: -7.164493083953857
    4. '           ' → logprob: -7.539493083953857
    5. '   ' → logprob: -9.039493560791016
    6. '	continue' → logprob: -11.289493560791016
    7. 'continu' → logprob: -12.164493560791016
    8. 'contin' → logprob: -13.289493560791016
    9. 'Continue' → logprob: -13.664493560791016
    10. '#' → logprob: -13.664493560791016

Token 796: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6240788102149963
    2. ' continue' → logprob: -0.9990788102149963
    3. '   ' → logprob: -2.3740787506103516
    4. '       ' → logprob: -6.124078750610352
    5. '	continue' → logprob: -7.499078750610352
    6. '    ' → logprob: -9.749078750610352
    7. 'contin' → logprob: -10.499078750610352
    8. '
' → logprob: -10.624078750610352
    9. ' ' → logprob: -10.999078750610352
    10. '           ' → logprob: -11.249078750610352

Token 797: ' stock' (ID: 6546)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07819738239049911
    2. ' continue' → logprob: -3.078197479248047
    3. '   ' → logprob: -3.578197479248047
    4. 'contin' → logprob: -7.578197479248047
    5. '       ' → logprob: -7.828197479248047
    6. '	continue' → logprob: -8.328197479248047
    7. ' ' → logprob: -10.453197479248047
    8. '           ' → logprob: -10.953197479248047
    9. '_continue' → logprob: -11.578197479248047
    10. '
' → logprob: -11.953197479248047

Token 798: 'e' (ID: 68)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.44521504640579224
    2. '           ' → logprob: -1.4452149868011475
    3. 'r' → logprob: -3.3202149868011475
    4. ' pas' → logprob: -3.4452149868011475
    5. '       ' → logprob: -3.5702149868011475
    6. 'p' → logprob: -4.070215225219727
    7. 'n' → logprob: -5.695215225219727
    8. 'nt' → logprob: -6.445215225219727
    9. '               ' → logprob: -6.820215225219727
    10. 'it' → logprob: -7.570215225219727

Token 799: ' pas' (ID: 2173)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2577374279499054
    2. ' continue' → logprob: -2.132737398147583
    3. '       ' → logprob: -2.632737398147583
    4. '   ' → logprob: -3.382737398147583
    5. '           ' → logprob: -6.632737636566162
    6. '	continue' → logprob: -6.632737636566162
    7. ' ' → logprob: -9.507737159729004
    8. '
' → logprob: -10.257737159729004
    9. 'contin' → logprob: -10.882737159729004
    10. '               ' → logprob: -11.257737159729004

Token 800: ' les' (ID: 1341)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.59422767162323
    2. '       ' → logprob: -1.09422767162323
    3. ' continue' → logprob: -2.5942277908325195
    4. '   ' → logprob: -3.3442277908325195
    5. '           ' → logprob: -6.4692277908325195
    6. '	continue' → logprob: -6.7192277908325195
    7. '
' → logprob: -8.71922779083252
    8. 'contin' → logprob: -9.59422779083252
    9. ' ' → logprob: -9.84422779083252
    10. ',' → logprob: -10.09422779083252

Token 801: ' positions' (ID: 15897)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06617411971092224
    2. 'freq' → logprob: -3.816174030303955
    3. 'prefix' → logprob: -3.941174030303955
    4. 'i' → logprob: -4.441174030303955
    5. ' continue' → logprob: -5.691174030303955
    6. 'indices' → logprob: -6.566174030303955
    7. 'key' → logprob: -6.816174030303955
    8. 'continu' → logprob: -7.066174030303955
    9. 'keys' → logprob: -7.191174030303955
    10. 'pass' → logprob: -7.316174030303955

Token 802: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03487401828169823
    2. ' continue' → logprob: -4.034873962402344
    3. 'continue' → logprob: -4.659873962402344
    4. '           ' → logprob: -5.784873962402344
    5. '   ' → logprob: -6.034873962402344
    6. '	continue' → logprob: -7.159873962402344
    7. '	' → logprob: -7.534873962402344
    8. 'contin' → logprob: -9.409873962402344
    9. ',' → logprob: -10.284873962402344
    10. '	   ' → logprob: -10.409873962402344

Token 803: ' où' (ID: 15113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004035895224660635
    2. ' continue' → logprob: -6.504035949707031
    3. '           ' → logprob: -6.754035949707031
    4. 'continue' → logprob: -7.129035949707031
    5. '   ' → logprob: -8.254035949707031
    6. '	' → logprob: -9.129035949707031
    7. '	continue' → logprob: -9.379035949707031
    8. ',' → logprob: -10.004035949707031
    9. '	   ' → logprob: -10.754035949707031
    10. '	       ' → logprob: -12.004035949707031

Token 804: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005580356228165329
    2. ' a' → logprob: -8.125557899475098
    3. 'not' → logprob: -8.500557899475098
    4. 'True' → logprob: -10.750557899475098
    5. 'i' → logprob: -11.375557899475098
    6. '0' → logprob: -11.375557899475098
    7. ' not' → logprob: -12.750557899475098
    8. '```' → logprob: -13.000557899475098
    9. 'False' → logprob: -13.125557899475098
    10. 'prefix' → logprob: -13.250557899475098

Token 805: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7133641196996905e-05
    2. 'a' → logprob: -11.25002670288086
    3. 'i' → logprob: -11.50002670288086
    4. '[' → logprob: -13.12502670288086
    5. '[a' → logprob: -14.37502670288086
    6. '```' → logprob: -15.12502670288086
    7. '   ' → logprob: -15.25002670288086
    8. '
' → logprob: -15.37502670288086
    9. '[(' → logprob: -16.12502670288086
    10. '[
' → logprob: -16.37502670288086

Token 806: ']!=' (ID: 85780)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004702338483184576
    2. ']' → logprob: -8.125470161437988
    3. ']==' → logprob: -9.375470161437988
    4. ' -' → logprob: -10.250470161437988
    5. 'i' → logprob: -11.000470161437988
    6. '```' → logprob: -11.250470161437988
    7. '[i' → logprob: -11.500470161437988
    8. ']!=' → logprob: -11.625470161437988
    9. '   ' → logprob: -13.750470161437988
    10. '==' → logprob: -14.125470161437988

Token 807: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005622077151201665
    2. ' ' → logprob: -8.00056266784668
    3. '1' → logprob: -8.75056266784668
    4. '=' → logprob: -9.87556266784668
    5. '-' → logprob: -11.37556266784668
    6. '```' → logprob: -12.62556266784668
    7. '   ' → logprob: -14.87556266784668
    8. '>' → logprob: -15.25056266784668
    9. '
' → logprob: -15.50056266784668
    10. ']' → logprob: -15.87556266784668

Token 808: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014059260487556458
    2. ' continue' → logprob: -5.139059066772461
    3. '           ' → logprob: -5.514059066772461
    4. 'continue' → logprob: -5.764059066772461
    5. ':' → logprob: -7.764059066772461
    6. '	continue' → logprob: -8.264059066772461
    7. '   ' → logprob: -8.889059066772461
    8. ':
' → logprob: -10.014059066772461
    9. '	' → logprob: -10.889059066772461
    10. ',' → logprob: -11.639059066772461

Token 809: ' ici' (ID: 27994)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9047642946243286
    2. 'continue' → logprob: -1.7797642946243286
    3. 'True' → logprob: -1.9047642946243286
    4. '       ' → logprob: -2.154764175415039
    5. ' continue' → logprob: -2.779764175415039
    6. '           ' → logprob: -2.779764175415039
    7. '   ' → logprob: -3.654764175415039
    8. '     ' → logprob: -6.279764175415039
    9. '         ' → logprob: -6.654764175415039
    10. '    ' → logprob: -6.654764175415039

Token 810: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19539819657802582
    2. ' continue' → logprob: -2.1953980922698975
    3. 'continue' → logprob: -2.8203980922698975
    4. '	continue' → logprob: -5.695398330688477
    5. '   ' → logprob: -5.945398330688477
    6. '           ' → logprob: -8.695398330688477
    7. ' continues' → logprob: -8.820398330688477
    8. '	' → logprob: -9.195398330688477
    9. ',' → logprob: -10.195398330688477
    10. '	   ' → logprob: -10.445398330688477

Token 811: ' index' (ID: 3472)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6190831065177917
    2. 'continue' → logprob: -0.8690831065177917
    3. '       ' → logprob: -3.4940831661224365
    4. '           ' → logprob: -5.119082927703857
    5. 'contin' → logprob: -6.119082927703857
    6. '	continue' → logprob: -6.619082927703857
    7. ' n' → logprob: -7.494082927703857
    8. 'n' → logprob: -7.744082927703857
    9. ' continues' → logprob: -8.244083404541016
    10. '_continue' → logprob: -8.244083404541016

Token 812: 'e' (ID: 68)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8709126710891724
    2. ' ==' → logprob: -1.3709126710891724
    3. ' !=' → logprob: -2.745912551879883
    4. '!=' → logprob: -3.495912551879883
    5. ' i' → logprob: -3.745912551879883
    6. ' not' → logprob: -3.995912551879883
    7. ' continue' → logprob: -3.995912551879883
    8. ')' → logprob: -4.120912551879883
    9. 'i' → logprob: -4.120912551879883
    10. ']' → logprob: -4.120912551879883

Token 813: ' prefix' (ID: 18633)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.619294285774231
    2. ' continue' → logprob: -1.244294285774231
    3. 'continue' → logprob: -1.869294285774231
    4. '	continue' → logprob: -4.619294166564941
    5. '   ' → logprob: -5.494294166564941
    6. '           ' → logprob: -6.494294166564941
    7. '=' → logprob: -6.744294166564941
    8. '	' → logprob: -7.744294166564941
    9. ' ' → logprob: -8.244294166564941
    10. ' =' → logprob: -8.369294166564941

Token 814: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0015817589592188597
    2. '_' → logprob: -7.37658166885376
    3. '       ' → logprob: -7.62658166885376
    4. ')' → logprob: -9.126582145690918
    5. ')_' → logprob: -9.126582145690918
    6. '   ' → logprob: -9.501582145690918
    7. ' _' → logprob: -9.626582145690918
    8. '_)' → logprob: -10.876582145690918
    9. ']_' → logprob: -11.001582145690918
    10. ' =' → logprob: -11.876582145690918

Token 815: '[i' (ID: 1768)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07223772257566452
    2. ' continue' → logprob: -3.447237730026245
    3. 'continue' → logprob: -3.822237730026245
    4. ':
' → logprob: -5.697237491607666
    5. '   ' → logprob: -6.322237491607666
    6. '[' → logprob: -6.322237491607666
    7. ':' → logprob: -6.447237491607666
    8. '           ' → logprob: -6.572237491607666
    9. '	continue' → logprob: -6.697237491607666
    10. '=' → logprob: -6.697237491607666

Token 816: '],' (ID: 2155)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5083320140838623
    2. 'continue' → logprob: -2.0083320140838623
    3. '):
' → logprob: -2.1333320140838623
    4. ':
' → logprob: -3.3833320140838623
    5. ']:
' → logprob: -3.3833320140838623
    6. ' continue' → logprob: -3.5083320140838623
    7. ']' → logprob: -4.633332252502441
    8. '):' → logprob: -5.008332252502441
    9. '   ' → logprob: -5.133332252502441
    10. '           ' → logprob: -5.383332252502441

Token 817: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021306201815605164
    2. ' continue' → logprob: -4.646306037902832
    3. 'continue' → logprob: -4.896306037902832
    4. '	continue' → logprob: -6.271306037902832
    5. '   ' → logprob: -6.396306037902832
    6. '           ' → logprob: -8.271306037902832
    7. '	' → logprob: -9.021306037902832
    8. '	   ' → logprob: -10.771306037902832
    9. ' ' → logprob: -11.646306037902832
    10. '	       ' → logprob: -11.771306037902832

Token 818: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0697152614593506
    2. 'continue' → logprob: -1.3197152614593506
    3. 'a' → logprob: -1.5697152614593506
    4. 'not' → logprob: -3.1947152614593506
    5. 'prefix' → logprob: -3.5697152614593506
    6. ' continue' → logprob: -3.9447152614593506
    7. ' i' → logprob: -4.31971549987793
    8. ' a' → logprob: -4.44471549987793
    9. '0' → logprob: -4.56971549987793
    10. 'pass' → logprob: -4.94471549987793

Token 819: '=' (ID: 28)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5620743036270142
    2. '==' → logprob: -1.6870743036270142
    3. '!=' → logprob: -1.6870743036270142
    4. 'continue' → logprob: -1.8120743036270142
    5. '           ' → logprob: -2.5620741844177246
    6. ' continue' → logprob: -3.0620741844177246
    7. '       ' → logprob: -3.0620741844177246
    8. ' not' → logprob: -4.687074184417725
    9. '-=' → logprob: -4.812074184417725
    10. ' !=' → logprob: -4.812074184417725

Token 820: 'indice' (ID: 176697)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0697527825832367
    2. '0' → logprob: -3.0697526931762695
    3. '1' → logprob: -4.0697526931762695
    4. ' i' → logprob: -6.1947526931762695
    5. '-' → logprob: -7.4447526931762695
    6. '...' → logprob: -7.8197526931762695
    7. ' ' → logprob: -8.56975269317627
    8. '   ' → logprob: -9.06975269317627
    9. '```' → logprob: -9.56975269317627
    10. 'index' → logprob: -9.94475269317627

Token 821: ' fin' (ID: 2131)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6876174211502075
    2. ' -' → logprob: -2.187617301940918
    3. '           ' → logprob: -2.687617301940918
    4. '       ' → logprob: -2.812617301940918
    5. '==' → logprob: -2.937617301940918
    6. 'continue' → logprob: -3.312617301940918
    7. ' continue' → logprob: -3.312617301940918
    8. ')' → logprob: -3.437617301940918
    9. ' ==' → logprob: -3.812617301940918
    10. ' not' → logprob: -4.687617301940918

Token 822: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3056504428386688
    2. '           ' → logprob: -2.055650472640991
    3. 'continue' → logprob: -2.430650472640991
    4. ' continue' → logprob: -3.680650472640991
    5. '   ' → logprob: -5.305650234222412
    6. ':
' → logprob: -5.305650234222412
    7. '=' → logprob: -6.055650234222412
    8. ',' → logprob: -6.930650234222412
    9. 'inue' → logprob: -7.055650234222412
    10. '):
' → logprob: -7.305650234222412

Token 823: ' prefix' (ID: 18633)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.2909259796142578
    2. 'la' → logprob: -1.4159259796142578
    3. 'substring' → logprob: -1.5409259796142578
    4. 's' → logprob: -2.540925979614258
    5. 'segment' → logprob: -2.915925979614258
    6. 'sequence' → logprob: -3.040925979614258
    7. 'prefix' → logprob: -3.915925979614258
    8. 'l' → logprob: -4.415925979614258
    9. 'chaine' → logprob: -5.040925979614258
    10. 'sé' → logprob: -5.040925979614258

Token 824: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11889202892780304
    2. '   ' → logprob: -3.493891954421997
    3. 'continue' → logprob: -3.868891954421997
    4. '           ' → logprob: -4.243892192840576
    5. '=' → logprob: -4.618892192840576
    6. ':
' → logprob: -5.243892192840576
    7. 'else' → logprob: -5.368892192840576
    8. '==' → logprob: -5.493892192840576
    9. '):
' → logprob: -5.743892192840576
    10. ' continue' → logprob: -5.993892192840576

Token 825: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008224590681493282
    2. '           ' → logprob: -5.2582244873046875
    3. ' continue' → logprob: -6.6332244873046875
    4. 'continue' → logprob: -6.8832244873046875
    5. '	' → logprob: -8.383224487304688
    6. '	continue' → logprob: -8.508224487304688
    7. '   ' → logprob: -9.383224487304688
    8. ':' → logprob: -9.758224487304688
    9. '	       ' → logprob: -11.633224487304688
    10. ':
' → logprob: -11.633224487304688

Token 826: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027646450325846672
    2. 'continue' → logprob: -4.277646541595459
    3. ' continue' → logprob: -4.902646541595459
    4. '   ' → logprob: -5.277646541595459
    5. '	continue' → logprob: -7.277646541595459
    6. '           ' → logprob: -9.5276460647583
    7. '	' → logprob: -9.7776460647583
    8. ' ' → logprob: -11.1526460647583
    9. '	   ' → logprob: -11.4026460647583
    10. '    ' → logprob: -12.6526460647583

Token 827: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015568895265460014
    2. ' continue' → logprob: -4.640568733215332
    3. 'continue' → logprob: -5.765568733215332
    4. '   ' → logprob: -6.015568733215332
    5. '	continue' → logprob: -8.765568733215332
    6. '           ' → logprob: -10.390568733215332
    7. '	' → logprob: -11.140568733215332
    8. ' ' → logprob: -12.015568733215332
    9. ' continues' → logprob: -12.765568733215332
    10. '	   ' → logprob: -12.765568733215332

Token 828: ' correspond' (ID: 11095)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.15999387204647064
    2. ' continue' → logprob: -2.409993886947632
    3. '   ' → logprob: -3.534993886947632
    4. '	continue' → logprob: -4.659993648529053
    5. '       ' → logprob: -5.534993648529053
    6. 'contin' → logprob: -5.534993648529053
    7. '=' → logprob: -5.909993648529053
    8. '+=' → logprob: -6.034993648529053
    9. '==' → logprob: -6.659993648529053
    10. ' +=' → logprob: -6.784993648529053

Token 829: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9989285469055176
    2. ' à' → logprob: -1.2489285469055176
    3. 'to' → logprob: -1.6239285469055176
    4. 'à' → logprob: -3.6239285469055176
    5. ' aux' → logprob: -3.6239285469055176
    6. ' au' → logprob: -3.8739285469055176
    7. '=' → logprob: -3.9989285469055176
    8. ')' → logprob: -4.748928546905518
    9. '    ' → logprob: -4.873928546905518
    10. '   ' → logprob: -5.123928546905518

Token 830: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10362450778484344
    2. ' i' → logprob: -2.4786245822906494
    3. 'a' → logprob: -5.22862434387207
    4. '0' → logprob: -5.85362434387207
    5. 'continue' → logprob: -6.47862434387207
    6. ' continue' → logprob: -7.10362434387207
    7. 'None' → logprob: -7.47862434387207
    8. ' ' → logprob: -7.72862434387207
    9. ' a' → logprob: -7.85362434387207
    10. ' la' → logprob: -7.97862434387207

Token 831: ' position' (ID: 4010)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.040812548249959946
    2. 'continu' → logprob: -4.6658124923706055
    3. 'position' → logprob: -5.0408124923706055
    4. 'pass' → logprob: -5.1658124923706055
    5. 'i' → logprob: -5.4158124923706055
    6. 'prefix' → logprob: -5.5408124923706055
    7. 'contin' → logprob: -6.0408124923706055
    8. ' continue' → logprob: -6.4158124923706055
    9. 'start' → logprob: -7.4158124923706055
    10. '0' → logprob: -7.4158124923706055

Token 832: ' après' (ID: 16460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.896191954612732
    2. ' continue' → logprob: -1.896191954612732
    3. '       ' → logprob: -2.1461920738220215
    4. ' not' → logprob: -2.6461920738220215
    5. ' ,' → logprob: -2.6461920738220215
    6. 'continue' → logprob: -2.7711920738220215
    7. '=' → logprob: -2.8961920738220215
    8. '           ' → logprob: -3.2711920738220215
    9. ' =' → logprob: -3.2711920738220215
    10. ' à' → logprob: -3.6461920738220215

Token 833: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33342432975769043
    2. 'a' → logprob: -1.7084243297576904
    3. 'the' → logprob: -2.8334243297576904
    4. ' i' → logprob: -4.2084245681762695
    5. '   ' → logprob: -4.3334245681762695
    6. ' the' → logprob: -5.3334245681762695
    7. ' a' → logprob: -6.0834245681762695
    8. '[i' → logprob: -6.4584245681762695
    9. '```' → logprob: -7.2084245681762695
    10. '    ' → logprob: -7.3334245681762695

Token 834: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2259921133518219
    2. 'i' → logprob: -1.6009920835494995
    3. ' i' → logprob: -7.975992202758789
    4. '   ' → logprob: -9.600992202758789
    5. '[' → logprob: -9.850992202758789
    6. '`' → logprob: -10.475992202758789
    7. '
' → logprob: -10.600992202758789
    8. 'a' → logprob: -11.350992202758789
    9. '[
' → logprob: -11.600992202758789
    10. '(i' → logprob: -11.975992202758789

Token 835: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010640407708706334
    2. ' -' → logprob: -9.500106811523438
    3. ']' → logprob: -11.000106811523438
    4. '[i' → logprob: -11.750106811523438
    5. '   ' → logprob: -13.375106811523438
    6. ']-' → logprob: -14.000106811523438
    7. '```' → logprob: -14.250106811523438
    8. '])' → logprob: -14.250106811523438
    9. '1' → logprob: -14.500106811523438
    10. '-i' → logprob: -14.625106811523438

Token 836: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006762618198990822
    2. '-' → logprob: -5.006762504577637
    3. 'i' → logprob: -10.631762504577637
    4. ' ' → logprob: -12.006762504577637
    5. '```' → logprob: -12.006762504577637
    6. '2' → logprob: -12.756762504577637
    7. '   ' → logprob: -12.881762504577637
    8. ']' → logprob: -13.006762504577637
    9. ' -' → logprob: -13.881762504577637
    10. '(i' → logprob: -14.381762504577637

Token 837: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9551103711128235
    2. '       ' → logprob: -1.5801103115081787
    3. ']:' → logprob: -1.8301103115081787
    4. ']:
' → logprob: -1.8301103115081787
    5. '):
' → logprob: -3.5801103115081787
    6. '):' → logprob: -4.205110549926758
    7. '   ' → logprob: -4.580110549926758
    8. ')' → logprob: -4.705110549926758
    9. ']
' → logprob: -5.455110549926758
    10. ',' → logprob: -5.830110549926758

Token 838: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059568872675299644
    2. ' continue' → logprob: -5.630956649780273
    3. 'continue' → logprob: -6.380956649780273
    4. '   ' → logprob: -7.880956649780273
    5. '```' → logprob: -9.255956649780273
    6. '	continue' → logprob: -9.630956649780273
    7. '           ' → logprob: -9.630956649780273
    8. '	' → logprob: -11.255956649780273
    9. ' continues' → logprob: -11.755956649780273
    10. ',' → logprob: -11.880956649780273

Token 839: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007081083487719297
    2. ' continue' → logprob: -5.257081031799316
    3. 'continue' → logprob: -7.007081031799316
    4. '   ' → logprob: -7.757081031799316
    5. '	continue' → logprob: -7.882081031799316
    6. '	' → logprob: -9.507081031799316
    7. '           ' → logprob: -10.757081031799316
    8. '	   ' → logprob: -11.382081031799316
    9. ' continues' → logprob: -12.257081031799316
    10. ' ' → logprob: -12.382081031799316

Token 840: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03577388823032379
    2. 'else' → logprob: -3.410773992538452
    3. ' else' → logprob: -6.410773754119873
    4. 'continue' → logprob: -8.035774230957031
    5. '           ' → logprob: -9.785774230957031
    6. '   ' → logprob: -10.285774230957031
    7. 'elif' → logprob: -10.785774230957031
    8. '	' → logprob: -11.285774230957031
    9. '```' → logprob: -11.285774230957031
    10. ' continue' → logprob: -11.660774230957031

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11189848929643631
    2. 'else' → logprob: -2.361898422241211
    3. ' else' → logprob: -4.486898422241211
    4. '   ' → logprob: -8.736898422241211
    5. '```' → logprob: -9.361898422241211
    6. 'continue' → logprob: -10.111898422241211
    7. 'elif' → logprob: -10.236898422241211
    8. '           ' → logprob: -11.111898422241211
    9. '	' → logprob: -11.986898422241211
    10. '<|end|>' → logprob: -12.236898422241211

Token 842: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3577338755130768
    2. '       ' → logprob: -1.2327338457107544
    3. ' else' → logprob: -4.732733726501465
    4. 'elif' → logprob: -8.232733726501465
    5. '   ' → logprob: -8.732733726501465
    6. '	else' → logprob: -11.982733726501465
    7. '           ' → logprob: -13.107733726501465
    8. ' elif' → logprob: -13.107733726501465
    9. 'continue' → logprob: -13.357733726501465
    10. '	' → logprob: -13.482733726501465

Token 843: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2356121987104416
    2. '       ' → logprob: -1.985612154006958
    3. ':
' → logprob: -2.985612154006958
    4. '           ' → logprob: -3.860612154006958
    5. ' :' → logprob: -7.860612392425537
    6. '   ' → logprob: -8.735611915588379
    7. '[' → logprob: -8.985611915588379
    8. '):
' → logprob: -9.360611915588379
    9. '):' → logprob: -9.610611915588379
    10. ' :
' → logprob: -9.610611915588379

Token 844: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009829873219132423
    2. '           ' → logprob: -4.634829998016357
    3. 'token' → logprob: -11.0098295211792
    4. '   ' → logprob: -11.3848295211792
    5. 'key' → logprob: -11.5098295211792
    6. ' key' → logprob: -11.8848295211792
    7. '	       ' → logprob: -11.8848295211792
    8. '	   ' → logprob: -12.1348295211792
    9. 'tokens' → logprob: -12.6348295211792
    10. ' token' → logprob: -13.0098295211792

Token 845: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.07656348496675491
    2. '       ' → logprob: -2.701563596725464
    3. ' key' → logprob: -5.076563358306885
    4. '           ' → logprob: -8.201563835144043
    5. 'token' → logprob: -10.576563835144043
    6. 'val' → logprob: -11.576563835144043
    7. '   ' → logprob: -11.576563835144043
    8. '	key' → logprob: -11.701563835144043
    9. '```' → logprob: -11.951563835144043
    10. 'value' → logprob: -11.951563835144043

Token 846: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519329786300659
    2. '=' → logprob: -1.501932978630066
    3. '=(' → logprob: -13.376933097839355
    4. '   ' → logprob: -14.126933097839355
    5. ' =(' → logprob: -15.126933097839355
    6. '=f' → logprob: -16.00193214416504
    7. ']' → logprob: -16.00193214416504
    8. '_key' → logprob: -16.00193214416504
    9. '    ' → logprob: -16.12693214416504
    10. ' ' → logprob: -16.25193214416504

Token 847: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.00019054718723054975
    2. 'prefix' → logprob: -8.750190734863281
    3. ' (' → logprob: -10.375190734863281
    4. ' prefix' → logprob: -15.125190734863281
    5. '(pref' → logprob: -15.125190734863281
    6. '   ' → logprob: -16.00019073486328
    7. '(pow' → logprob: -17.37519073486328
    8. '(p' → logprob: -17.37519073486328
    9. '(pre' → logprob: -17.50019073486328
    10. '(parent' → logprob: -17.62519073486328

Token 848: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0019293478690087795
    2. '(prefix' → logprob: -6.25192928314209
    3. ' prefix' → logprob: -14.12692928314209
    4. 'pref' → logprob: -17.751930236816406
    5. '_prefix' → logprob: -18.001930236816406
    6. 'PREFIX' → logprob: -18.501930236816406
    7. '.prefix' → logprob: -18.876930236816406
    8. 'Prefix' → logprob: -18.876930236816406
    9. '-prefix' → logprob: -19.251930236816406
    10. '   ' → logprob: -20.376930236816406

Token 849: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -7.896309739408025e-07
    2. 'mod' → logprob: -15.125000953674316
    3. '[i' → logprob: -15.750000953674316
    4. '_key' → logprob: -17.25
    5. '_MOD' → logprob: -17.5
    6. ' _' → logprob: -17.75
    7. '[_' → logprob: -17.75
    8. '   ' → logprob: -18.25
    9. '[' → logprob: -18.375
    10. ')' → logprob: -18.375

Token 850: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.578184497309849e-05
    2. 'i' → logprob: -9.625085830688477
    3. '[key' → logprob: -11.125085830688477
    4. 'key' → logprob: -13.375085830688477
    5. '[' → logprob: -14.000085830688477
    6. ' [' → logprob: -14.375085830688477
    7. ')' → logprob: -14.625085830688477
    8. ' i' → logprob: -14.750085830688477
    9. '   ' → logprob: -15.125085830688477
    10. '```' → logprob: -15.625085830688477

Token 851: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004387390334159136
    2. '*' → logprob: -5.754387378692627
    3. ' *' → logprob: -7.004387378692627
    4. '[' → logprob: -9.004387855529785
    5. '*i' → logprob: -10.254387855529785
    6. ')' → logprob: -10.504387855529785
    7. '[*' → logprob: -10.754387855529785
    8. 'i' → logprob: -11.129387855529785
    9. '*[' → logprob: -11.379387855529785
    10. ']' → logprob: -11.504387855529785

Token 852: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868773579597473
    2. ' *' → logprob: -1.1368772983551025
    3. '**' → logprob: -12.761877059936523
    4. ')' → logprob: -14.011877059936523
    5. '*(' → logprob: -14.136877059936523
    6. '   ' → logprob: -14.761877059936523
    7. '*object' → logprob: -14.886877059936523
    8. ' ' → logprob: -15.136877059936523
    9. '*)' → logprob: -15.386877059936523
    10. ',' → logprob: -15.886877059936523

Token 853: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.16683749854564667
    2. 'mod' → logprob: -1.916837453842163
    3. 'inv' → logprob: -5.041837692260742
    4. ' pow' → logprob: -9.541837692260742
    5. '(pow' → logprob: -10.666837692260742
    6. ' mod' → logprob: -11.041837692260742
    7. '(mod' → logprob: -11.791837692260742
    8. '(inv' → logprob: -12.791837692260742
    9. ' inv' → logprob: -13.416837692260742
    10. 'power' → logprob: -13.541837692260742

Token 854: '(inv' (ID: 107330)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.5725266933441162
    2. '(inv' → logprob: -1.5725266933441162
    3. 'mod' → logprob: -2.447526693344116
    4. '(mod' → logprob: -2.822526693344116
    5. 'pow' → logprob: -3.197526693344116
    6. '10' → logprob: -4.322526931762695
    7. 'inv' → logprob: -4.447526931762695
    8. '(exp' → logprob: -4.447526931762695
    9. 'exp' → logprob: -6.447526931762695
    10. '(' → logprob: -6.572526931762695

Token 855: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.32276904582977295
    2. '(' → logprob: -1.322769045829773
    3. '(inv' → logprob: -4.6977691650390625
    4. '(in' → logprob: -8.697769165039062
    5. 'inv' → logprob: -8.822769165039062
    6. '(i' → logprob: -11.822769165039062
    7. '{' → logprob: -12.572769165039062
    8. ')' → logprob: -12.572769165039062
    9. '```' → logprob: -12.572769165039062
    10. ' (' → logprob: -12.822769165039062

Token 856: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003675728803500533
    2. '(i' → logprob: -6.253675937652588
    3. 'i' → logprob: -7.003675937652588
    4. '[' → logprob: -7.628675937652588
    5. '[(' → logprob: -8.62867546081543
    6. ',i' → logprob: -9.50367546081543
    7. '{i' → logprob: -10.75367546081543
    8. ',' → logprob: -11.00367546081543
    9. '   ' → logprob: -11.12867546081543
    10. '       ' → logprob: -11.25367546081543

Token 857: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.941850526549388e-06
    2. '(i' → logprob: -13.000007629394531
    3. ' i' → logprob: -13.000007629394531
    4. '-i' → logprob: -13.250007629394531
    5. '-' → logprob: -14.250007629394531
    6. '(' → logprob: -15.500007629394531
    7. '(-' → logprob: -15.500007629394531
    8. '   ' → logprob: -15.625007629394531
    9. ' (' → logprob: -16.50000762939453
    10. ' -' → logprob: -16.75000762939453

Token 858: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021558532025665045
    2. ' ,' → logprob: -6.877155780792236
    3. ',Q' → logprob: -7.127155780792236
    4. '%' → logprob: -9.002156257629395
    5. '))' → logprob: -9.377156257629395
    6. ')' → logprob: -9.627156257629395
    7. '```' → logprob: -11.377156257629395
    8. 'Q' → logprob: -12.252156257629395
    9. '])' → logprob: -12.377156257629395
    10. '   ' → logprob: -12.752156257629395

Token 859: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -2.7729658540920354e-05
    2. ' Q' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.500028610229492
    4. '       ' → logprob: -18.125028610229492
    5. '           ' → logprob: -18.625028610229492
    6. '(Q' → logprob: -19.125028610229492
    7. ')' → logprob: -19.375028610229492
    8. '    ' → logprob: -19.625028610229492
    9. '	Q' → logprob: -19.625028610229492
    10. '  ' → logprob: -19.750028610229492

Token 860: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.017927029868588e-05
    2. ' ))' → logprob: -10.250080108642578
    3. ')' → logprob: -10.375080108642578
    4. '   ' → logprob: -12.000080108642578
    5. '])' → logprob: -12.250080108642578
    6. '       ' → logprob: -13.375080108642578
    7. '           ' → logprob: -15.750080108642578
    8. ' ' → logprob: -15.875080108642578
    9. ')%' → logprob: -15.875080108642578
    10. '    ' → logprob: -16.000080108642578

Token 861: ' %' (ID: 1851)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1900457739830017
    2. '%' → logprob: -2.3150458335876465
    3. ')' → logprob: -3.1900458335876465
    4. ' %' → logprob: -4.0650458335876465
    5. '   ' → logprob: -4.8150458335876465
    6. '           ' → logprob: -5.9400458335876465
    7. ')%' → logprob: -6.8150458335876465
    8. ' %=' → logprob: -7.1900458335876465
    9. '        
' → logprob: -7.4400458335876465
    10. '=' → logprob: -7.4400458335876465

Token 862: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -3.7697225252486533e-06
    2. ' Q' → logprob: -12.500003814697266
    3. '(Q' → logprob: -21.250003814697266
    4. '   ' → logprob: -21.500003814697266
    5. '```' → logprob: -21.625003814697266
    6. '	Q' → logprob: -21.750003814697266
    7. ' ' → logprob: -22.625003814697266
    8. ',Q' → logprob: -23.125003814697266
    9. '[' → logprob: -23.500003814697266
    10. '{' → logprob: -23.875003814697266

Token 863: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030733791645616293
    2. '           ' → logprob: -6.003073215484619
    3. 'freq' → logprob: -8.628073692321777
    4. '   ' → logprob: -9.003073692321777
    5. ' freq' → logprob: -9.503073692321777
    6. '
' → logprob: -9.503073692321777
    7. '```' → logprob: -10.128073692321777
    8. '        
' → logprob: -10.628073692321777
    9. '<|end|>' → logprob: -10.628073692321777
    10. ')' → logprob: -11.253073692321777

Token 864: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005161770153790712
    2. '```' → logprob: -6.130161762237549
    3. '           ' → logprob: -6.880161762237549
    4. '   ' → logprob: -7.130161762237549
    5. 'freq' → logprob: -7.255161762237549
    6. ' freq' → logprob: -7.880161762237549
    7. '``' → logprob: -11.505162239074707
    8. ' frequency' → logprob: -12.005162239074707
    9. '[' → logprob: -12.005162239074707
    10. '	   ' → logprob: -12.130162239074707

Token 865: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.010504385456442833
    2. ' freq' → logprob: -4.885504245758057
    3. '       ' → logprob: -6.385504245758057
    4. '           ' → logprob: -6.885504245758057
    5. 'frequency' → logprob: -9.385504722595215
    6. 'if' → logprob: -9.760504722595215
    7. '   ' → logprob: -11.385504722595215
    8. ' frequency' → logprob: -12.010504722595215
    9. '_freq' → logprob: -12.135504722595215
    10. '(freq' → logprob: -12.260504722595215

Token 866: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -4.990154047845863e-05
    2. '.setdefault' → logprob: -10.000049591064453
    3. '[' → logprob: -13.250049591064453
    4. 'key' → logprob: -13.375049591064453
    5. '_key' → logprob: -14.500049591064453
    6. '=' → logprob: -15.750049591064453
    7. '[token' → logprob: -16.125049591064453
    8. 'freq' → logprob: -16.750049591064453
    9. ' =' → logprob: -16.875049591064453
    10. ' [' → logprob: -17.375049591064453

Token 867: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003187339985743165
    2. ' =' → logprob: -5.75318717956543
    3. '=f' → logprob: -12.37818717956543
    4. '+=' → logprob: -12.62818717956543
    5. 'freq' → logprob: -13.25318717956543
    6. ']=' → logprob: -16.50318717956543
    7. ']' → logprob: -16.62818717956543
    8. '       ' → logprob: -17.12818717956543
    9. '(freq' → logprob: -17.12818717956543
    10. '        ' → logprob: -17.25318717956543

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5690089639974758e-05
    2. ' =' → logprob: -11.125015258789062
    3. '+=' → logprob: -14.125015258789062
    4. '=f' → logprob: -16.000015258789062
    5. 'freq' → logprob: -17.250015258789062
    6. '_=' → logprob: -18.875015258789062
    7. '＝' → logprob: -19.750015258789062
    8. ']=' → logprob: -20.000015258789062
    9. '=}' → logprob: -20.125015258789062
    10. '=count' → logprob: -20.125015258789062

Token 869: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.00020377879263833165
    2. ' freq' → logprob: -8.500204086303711
    3. 'fre' → logprob: -15.625204086303711
    4. '(freq' → logprob: -16.62520408630371
    5. 'frequency' → logprob: -16.75020408630371
    6. '_freq' → logprob: -19.12520408630371
    7. '.freq' → logprob: -19.62520408630371
    8. '1' → logprob: -20.50020408630371
    9. 'func' → logprob: -21.12520408630371
    10. 'f' → logprob: -21.25020408630371

Token 870: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00016539888747502118
    2. 'get' → logprob: -9.125164985656738
    3. '.' → logprob: -10.125164985656738
    4. '.setdefault' → logprob: -12.125164985656738
    5. '{}.' → logprob: -12.625164985656738
    6. ' .' → logprob: -13.000164985656738
    7. '].' → logprob: -13.500164985656738
    8. '```' → logprob: -13.625164985656738
    9. ').' → logprob: -13.750164985656738
    10. '[key' → logprob: -14.500164985656738

Token 871: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -2.1008713702030946e-06
    2. 'key' → logprob: -13.625001907348633
    3. '[key' → logprob: -14.625001907348633
    4. ',key' → logprob: -15.375001907348633
    5. '(' → logprob: -16.625001907348633
    6. '```' → logprob: -17.750001907348633
    7. '(token' → logprob: -17.875001907348633
    8. ' (' → logprob: -18.375001907348633
    9. '(freq' → logprob: -18.500001907348633
    10. '(
' → logprob: -18.500001907348633

Token 872: ',' (ID: 11)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.6842184066772461
    2. ',key' → logprob: -1.434218406677246
    3. ',' → logprob: -1.684218406677246
    4. 'key' → logprob: -2.684218406677246
    5. '[key' → logprob: -5.809218406677246
    6. ' key' → logprob: -8.184218406677246
    7. ':key' → logprob: -10.809218406677246
    8. '```' → logprob: -11.309218406677246
    9. ')' → logprob: -11.684218406677246
    10. ' ,' → logprob: -11.934218406677246

Token 873: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -19.625
    4. '```' → logprob: -19.75
    5. '1' → logprob: -20.125
    6. ')' → logprob: -21.4375
    7. '   ' → logprob: -22.0
    8. '０' → logprob: -22.1875
    9. ' ' → logprob: -22.1875
    10. '+' → logprob: -22.1875

Token 874: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004132899455726147
    2. ')+' → logprob: -5.5041327476501465
    3. '+' → logprob: -9.879133224487305
    4. ' )' → logprob: -13.629133224487305
    5. ']+' → logprob: -14.629133224487305
    6. '```' → logprob: -14.629133224487305
    7. ']' → logprob: -15.004133224487305
    8. '0' → logprob: -15.004133224487305
    9. '+)' → logprob: -15.504133224487305
    10. ' +' → logprob: -16.004133224487305

Token 875: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008616226725280285
    2. ' +' → logprob: -4.7586164474487305
    3. '+=' → logprob: -14.13361644744873
    4. '0' → logprob: -15.13361644744873
    5. '()+' → logprob: -15.50861644744873
    6. '+i' → logprob: -15.75861644744873
    7. '1' → logprob: -15.75861644744873
    8. ')+' → logprob: -16.008615493774414
    9. '+k' → logprob: -16.883615493774414
    10. '+
' → logprob: -17.883615493774414

Token 876: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.375009536743164
    4. '```' → logprob: -20.625009536743164
    5. '0' → logprob: -22.000009536743164
    6. '  ' → logprob: -22.125009536743164
    7. ' ' → logprob: -22.500009536743164
    8. '       ' → logprob: -23.625009536743164
    9. '+' → logprob: -24.000009536743164
    10. '	' → logprob: -24.000009536743164

Token 877: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -21.75
    4. '```' → logprob: -22.125
    5. '0' → logprob: -23.875
    6. '１' → logprob: -24.75
    7. '۱' → logprob: -24.75
    8. '  ' → logprob: -26.0
    9. '+' → logprob: -26.125
    10. '
' → logprob: -26.125

Token 878: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005363840609788895
    2. 'for' → logprob: -6.255363941192627
    3. '       ' → logprob: -6.630363941192627
    4. '<|end|>' → logprob: -6.880363941192627
    5. '```' → logprob: -7.755363941192627
    6. ' for' → logprob: -7.755363941192627
    7. '
' → logprob: -8.755363464355469
    8. '<|end|>' → logprob: -10.380363464355469
    9. '	for' → logprob: -11.005363464355469
    10. ')' → logprob: -12.255363464355469

Token 879: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04987778142094612
    2. 'for' → logprob: -3.049877882003784
    3. ' for' → logprob: -7.424877643585205
    4. '```' → logprob: -7.424877643585205
    5. '<|end|>' → logprob: -9.799878120422363
    6. '       ' → logprob: -10.674878120422363
    7. '
' → logprob: -11.674878120422363
    8. '    
' → logprob: -12.549878120422363
    9. ')' → logprob: -13.799878120422363
    10. 'from' → logprob: -13.924878120422363

Token 880: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '```' → logprob: -16.625
    5. '    
' → logprob: -20.875
    6. '	for' → logprob: -21.0
    7. 'from' → logprob: -21.0
    8. 'For' → logprob: -23.0
    9. '``' → logprob: -23.0
    10. '#' (adapté à ' #') → logprob: -23.375

Token 881: ' Maintenant' (ID: 163349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.45848218582978e-06
    2. ' for' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.00000286102295
    4. '```' → logprob: -17.000001907348633
    5. '    
' → logprob: -17.875001907348633
    6. '
' → logprob: -19.625001907348633
    7. 'j' → logprob: -20.625001907348633
    8. '	for' → logprob: -20.750001907348633
    9. 'from' → logprob: -20.750001907348633
    10. ' ' → logprob: -21.000001907348633

Token 882: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2783014476299286
    2. 'for' → logprob: -1.528301477432251
    3. ' for' → logprob: -3.653301477432251
    4. '
' → logprob: -9.528301239013672
    5. '```' → logprob: -10.653301239013672
    6. '    
' → logprob: -11.278301239013672
    7. ',' → logprob: -12.403301239013672
    8. '       ' → logprob: -13.278301239013672
    9. '  ' → logprob: -13.528301239013672
    10. ' ' → logprob: -13.653301239013672

Token 883: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04023559391498566
    2. ' for' → logprob: -3.4152355194091797
    3. 'continue' → logprob: -5.91523551940918
    4. '=' → logprob: -6.54023551940918
    5. '   ' → logprob: -6.66523551940918
    6. 'count' → logprob: -7.91523551940918
    7. 'answer' → logprob: -9.16523551940918
    8. ' =' → logprob: -9.29023551940918
    9. 'comp' → logprob: -9.29023551940918
    10. '```' → logprob: -9.41523551940918

Token 884: ' parcour' (ID: 130642)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3222322165966034
    2. ' for' → logprob: -1.4472322463989258
    3. 'comp' → logprob: -4.572232246398926
    4. 'count' → logprob: -4.947232246398926
    5. 'calcul' → logprob: -5.072232246398926
    6. '   ' → logprob: -5.197232246398926
    7. ' compter' → logprob: -5.197232246398926
    8. 'com' → logprob: -6.322232246398926
    9. ' parcour' → logprob: -7.072232246398926
    10. 'contin' → logprob: -7.572232246398926

Token 885: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.04824266582727432
    2. 'rir' → logprob: -3.6732425689697266
    3. 're' → logprob: -3.9232425689697266
    4. 'r' → logprob: -7.298242568969727
    5. 'rer' → logprob: -7.423242568969727
    6. 'er' → logprob: -8.423242568969727
    7. 'ire' → logprob: -8.798242568969727
    8. 'dre' → logprob: -9.423242568969727
    9. 'our' → logprob: -9.548242568969727
    10. 'tre' → logprob: -10.798242568969727

Token 886: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5969590544700623
    2. 'range' → logprob: -0.9719590544700623
    3. ' range' → logprob: -3.096959114074707
    4. ' for' → logprob: -3.971959114074707
    5. '(range' → logprob: -5.596959114074707
    6. '   ' → logprob: -6.221959114074707
    7. 'N' → logprob: -7.846959114074707
    8. '```' → logprob: -8.596959114074707
    9. '
' → logprob: -8.846959114074707
    10. 'answer' → logprob: -9.221959114074707

Token 887: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7098545432090759
    2. 'for' → logprob: -1.4598546028137207
    3. '   ' → logprob: -1.5848546028137207
    4. ' =' → logprob: -3.5848546028137207
    5. '=' → logprob: -3.7098546028137207
    6. ' in' → logprob: -4.584854602813721
    7. '(' → logprob: -6.459854602813721
    8. 'in' → logprob: -6.834854602813721
    9. 'from' → logprob: -7.084854602813721
    10. ':' → logprob: -7.084854602813721

Token 888: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005253206938505173
    2. ' range' → logprob: -5.380253314971924
    3. '0' → logprob: -7.880253314971924
    4. 'N' → logprob: -8.380252838134766
    5. '(range' → logprob: -11.005252838134766
    6. '1' → logprob: -13.005252838134766
    7. '(' → logprob: -13.255252838134766
    8. 'for' → logprob: -13.630252838134766
    9. '(N' → logprob: -13.880252838134766
    10. 'n' → logprob: -14.130252838134766

Token 889: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031186563428491354
    2. '0' → logprob: -6.003118515014648
    3. ' range' → logprob: -7.378118515014648
    4. '1' → logprob: -11.378118515014648
    5. '(range' → logprob: -12.878118515014648
    6. '(' → logprob: -13.253118515014648
    7. '   ' → logprob: -14.503118515014648
    8. '
' → logprob: -15.003118515014648
    9. '```' → logprob: -15.253118515014648
    10. 'for' → logprob: -15.378118515014648

Token 890: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20142249763011932
    2. ' to' → logprob: -1.8264224529266357
    3. 'à' → logprob: -5.076422691345215
    4. ',' → logprob: -5.326422691345215
    5. 'for' → logprob: -5.701422691345215
    6. '```' → logprob: -6.326422691345215
    7. '   ' → logprob: -6.451422691345215
    8. '
' → logprob: -7.076422691345215
    9. ' à' → logprob: -7.076422691345215
    10. ',to' → logprob: -8.451422691345215

Token 891: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.512236498361744e-07
    2. ' N' → logprob: -14.625000953674316
    3. '(N' → logprob: -17.875
    4. '```' → logprob: -20.0
    5. '	N' → logprob: -20.125
    6. 'n' → logprob: -20.625
    7. '   ' → logprob: -21.0
    8. '
' → logprob: -21.125
    9. '<N' → logprob: -21.125
    10. '0' → logprob: -22.0

Token 892: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00024882311117835343
    2. ':' → logprob: -8.750248908996582
    3. '   ' → logprob: -10.375248908996582
    4. ' -' → logprob: -10.625248908996582
    5. '```' → logprob: -11.125248908996582
    6. 'N' → logprob: -12.375248908996582
    7. '<|end|>' → logprob: -12.625248908996582
    8. '+' → logprob: -13.000248908996582
    9. '
' → logprob: -13.500248908996582
    10. '       ' → logprob: -13.625248908996582

Token 893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '```' → logprob: -11.75001049041748
    3. '-' → logprob: -13.37501049041748
    4. ' ' → logprob: -15.75001049041748
    5. '   ' → logprob: -16.125009536743164
    6. '``' → logprob: -16.250009536743164
    7. '
' → logprob: -16.375009536743164
    8. '0' → logprob: -17.875009536743164
    9. '{
' → logprob: -18.000009536743164
    10. '...' → logprob: -18.312509536743164

Token 894: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14837002754211426
    2. 'for' → logprob: -2.0233700275421143
    3. ' for' → logprob: -5.398369789123535
    4. '```' → logprob: -6.898369789123535
    5. '
' → logprob: -9.273369789123535
    6. ',' → logprob: -11.398369789123535
    7. '``' → logprob: -11.773369789123535
    8. '	for' → logprob: -11.898369789123535
    9. '    
' → logprob: -11.898369789123535
    10. '<|end|>' → logprob: -12.023369789123535

Token 895: ' compter' (ID: 81694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016477815806865692
    2. ' for' → logprob: -4.516477584838867
    3. '   ' → logprob: -5.516477584838867
    4. '```' → logprob: -7.266477584838867
    5. 'continue' → logprob: -9.141477584838867
    6. '
' → logprob: -9.391477584838867
    7. '       ' → logprob: -9.391477584838867
    8. ':
' → logprob: -9.516477584838867
    9. '<|end|>' → logprob: -9.766477584838867
    10. '``' → logprob: -10.516477584838867

Token 896: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3010483384132385
    2. 'for' → logprob: -1.5510482788085938
    3. ' for' → logprob: -3.3010482788085938
    4. 'answer' → logprob: -5.676048278808594
    5. '       ' → logprob: -5.926048278808594
    6. ' answer' → logprob: -7.551048278808594
    7. '=' → logprob: -7.551048278808594
    8. '```' → logprob: -7.676048278808594
    9. '(answer' → logprob: -7.676048278808594
    10. '(' → logprob: -8.176048278808594

Token 897: ' sous' (ID: 14487)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.12794062495231628
    2. 's' → logprob: -2.2529406547546387
    3. 'substr' → logprob: -5.502940654754639
    4. 'suffix' → logprob: -6.252940654754639
    5. 'prefix' → logprob: -6.377940654754639
    6. 'for' → logprob: -6.377940654754639
    7. 'substring' → logprob: -7.002940654754639
    8. 'indices' → logprob: -7.127940654754639
    9. 'i' → logprob: -7.377940654754639
    10. 'j' → logprob: -7.502940654754639

Token 898: ' sé' (ID: 7462)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.009466826915740967
    2. 's' → logprob: -5.884466648101807
    3. '   ' → logprob: -6.134466648101807
    4. 'sé' → logprob: -6.259466648101807
    5. '_sequences' → logprob: -6.759466648101807
    6. 'seq' → logprob: -7.634466648101807
    7. ' sequences' → logprob: -8.134467124938965
    8. '-se' → logprob: -8.134467124938965
    9. ' sé' → logprob: -9.759467124938965
    10. 'quences' → logprob: -10.009467124938965

Token 899: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -6.408677290892228e-05
    2. 'q' → logprob: -10.2500638961792
    3. 'quence' → logprob: -10.7500638961792
    4. 'qu' → logprob: -12.2500638961792
    5. 'ries' → logprob: -13.7500638961792
    6. '   ' → logprob: -14.8750638961792
    7. '#' → logprob: -15.6250638961792
    8. 'r' → logprob: -15.8750638961792
    9. 'quent' → logprob: -16.125064849853516
    10. '```' → logprob: -16.125064849853516

Token 900: ' fin' (ID: 2131)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03252240642905235
    2. 'for' → logprob: -3.532522439956665
    3. ' for' → logprob: -6.032522201538086
    4. '```' → logprob: -8.157522201538086
    5. ',' → logprob: -10.407522201538086
    6. '.' → logprob: -11.032522201538086
    7. '	for' → logprob: -11.782522201538086
    8. '(' → logprob: -12.782522201538086
    9. '       ' → logprob: -12.907522201538086
    10. '
' → logprob: -13.282522201538086

Token 901: 'issant' (ID: 31359)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4580530822277069
    2. 'issant' → logprob: -1.2080531120300293
    3. 'aux' → logprob: -3.5830531120300293
    4. 'i' → logprob: -3.9580531120300293
    5. 'j' → logprob: -4.208053112030029
    6. 'rant' → logprob: -6.708053112030029
    7. 'for' → logprob: -6.958053112030029
    8. '```' → logprob: -7.083053112030029
    9. 'ir' → logprob: -7.708053112030029
    10. 'ais' → logprob: -7.958053112030029

Token 902: ' en' (ID: 469)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0552607998251915
    2. '=' → logprob: -3.8052608966827393
    3. 'at' → logprob: -4.30526065826416
    4. ' à' → logprob: -5.05526065826416
    5. 'par' → logprob: -5.68026065826416
    6. ' at' → logprob: -6.05526065826416
    7. '(' → logprob: -6.55526065826416
    8. '```' → logprob: -6.93026065826416
    9. '   ' → logprob: -7.30526065826416
    10. '(j' → logprob: -7.68026065826416

Token 903: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08549907058477402
    2. 'range' → logprob: -2.5854990482330322
    3. ' j' → logprob: -5.710499286651611
    4. ' range' → logprob: -5.835499286651611
    5. '   ' → logprob: -8.460498809814453
    6. '```' → logprob: -10.335498809814453
    7. ' ' → logprob: -10.585498809814453
    8. '[j' → logprob: -10.960498809814453
    9. 'for' → logprob: -11.210498809814453
    10. '`' → logprob: -11.835498809814453

Token 904: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25370585918426514
    2. 'for' → logprob: -1.5037058591842651
    3. ' for' → logprob: -7.378705978393555
    4. '```' → logprob: -7.503705978393555
    5. '
' → logprob: -7.628705978393555
    6. '    
' → logprob: -10.253705978393555
    7. ',' → logprob: -10.503705978393555
    8. ':
' → logprob: -11.753705978393555
    9. '(' → logprob: -11.753705978393555
    10. '	for' → logprob: -12.128705978393555

Token 905: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3893255889415741
    2. 'for' → logprob: -1.1393256187438965
    3. '```' → logprob: -6.3893256187438965
    4. ' for' → logprob: -7.2643256187438965
    5. '
' → logprob: -10.264325141906738
    6. '	for' → logprob: -11.014325141906738
    7. '``' → logprob: -11.639325141906738
    8. '    
' → logprob: -12.014325141906738
    9. ',' → logprob: -13.514325141906738
    10. '       ' → logprob: -13.764325141906738

Token 906: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18264394998550415
    2. '```' → logprob: -1.9326438903808594
    3. '   ' → logprob: -4.307643890380859
    4. ' for' → logprob: -4.932643890380859
    5. '``' → logprob: -6.557643890380859
    6. '
' → logprob: -10.30764389038086
    7. 'answer' → logprob: -10.68264389038086
    8. '    
' → logprob: -11.93264389038086
    9. '	for' → logprob: -12.55764389038086
    10. 'j' → logprob: -13.80764389038086

Token 907: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021282276138663292
    2. '   ' → logprob: -3.896282196044922
    3. ' for' → logprob: -7.521282196044922
    4. '```' → logprob: -8.646282196044922
    5. '	for' → logprob: -11.521282196044922
    6. '
' → logprob: -11.771282196044922
    7. 'j' → logprob: -13.021282196044922
    8. '``' → logprob: -13.646282196044922
    9. '    
' → logprob: -14.396282196044922
    10. 'i' → logprob: -15.396282196044922

Token 908: ' cela' (ID: 17542)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.043309286236763
    2. 'i' → logprob: -3.168309211730957
    3. ' j' → logprob: -8.293309211730957
    4. ' i' → logprob: -10.793309211730957
    5. '```' → logprob: -11.668309211730957
    6. '_j' → logprob: -12.043309211730957
    7. 'key' → logprob: -12.543309211730957
    8. 'for' → logprob: -12.793309211730957
    9. 'answer' → logprob: -13.168309211730957
    10. '   ' → logprob: -13.168309211730957

Token 909: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6314850449562073
    2. ' for' → logprob: -1.2564849853515625
    3. '   ' → logprob: -1.7564849853515625
    4. '
' → logprob: -5.2564849853515625
    5. '```' → logprob: -5.7564849853515625
    6. ':
' → logprob: -8.131484985351562
    7. 'range' → logprob: -8.131484985351562
    8. ' in' → logprob: -8.256484985351562
    9. ':' → logprob: -8.381484985351562
    10. 'j' → logprob: -8.506484985351562

Token 910: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016401888569816947
    2. ' for' → logprob: -6.501640319824219
    3. '   ' → logprob: -9.001640319824219
    4. '
' → logprob: -11.751640319824219
    5. '```' → logprob: -12.626640319824219
    6. 'key' → logprob: -13.126640319824219
    7. 'freq' → logprob: -15.001640319824219
    8. '       ' → logprob: -15.001640319824219
    9. 'j' → logprob: -15.376640319824219
    10. 'from' → logprob: -15.876640319824219

Token 911: ' utilise' (ID: 70283)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03205368295311928
    2. ' for' → logprob: -3.5320537090301514
    3. '   ' → logprob: -7.532053470611572
    4. 'continue' → logprob: -7.532053470611572
    5. ' =' → logprob: -8.03205394744873
    6. '=' → logprob: -8.03205394744873
    7. '
' → logprob: -8.78205394744873
    8. 'key' → logprob: -8.78205394744873
    9. 'count' → logprob: -10.03205394744873
    10. '       ' → logprob: -10.28205394744873

Token 912: ' freq' (ID: 42078)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18390415608882904
    2. 'range' → logprob: -2.0589041709899902
    3. '   ' → logprob: -4.43390417098999
    4. 'answer' → logprob: -4.43390417098999
    5. 'freq' → logprob: -4.93390417098999
    6. 'prefix' → logprob: -5.43390417098999
    7. '```' → logprob: -6.30890417098999
    8. ' for' → logprob: -6.68390417098999
    9. '0' → logprob: -7.80890417098999
    10. '
' → logprob: -8.433903694152832

Token 913: ' aux' (ID: 5850)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5282242298126221
    2. ' =' → logprob: -1.028224229812622
    3. '   ' → logprob: -3.403224229812622
    4. 'for' → logprob: -4.528223991394043
    5. 'def' → logprob: -6.528223991394043
    6. ',' → logprob: -7.528223991394043
    7. '[' → logprob: -7.653223991394043
    8. ' for' → logprob: -7.653223991394043
    9. 'key' → logprob: -7.903223991394043
    10. ')' → logprob: -7.903223991394043

Token 914: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.5372065901756287
    2. 'j' → logprob: -1.1622066497802734
    3. 'i' → logprob: -3.2872066497802734
    4. 'keys' → logprob: -3.7872066497802734
    5. 'for' → logprob: -3.9122066497802734
    6. 'positions' → logprob: -5.287206649780273
    7. 'indice' → logprob: -5.912206649780273
    8. 'clé' → logprob: -6.037206649780273
    9. 'index' → logprob: -6.162206649780273
    10. 'key' → logprob: -6.287206649780273

Token 915: ' précéd' (ID: 55435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6674092411994934
    2. '=' → logprob: -1.7924091815948486
    3. ' =' → logprob: -2.2924091815948486
    4. '   ' → logprob: -3.1674091815948486
    5. '[j' → logprob: -3.1674091815948486
    6. '[' → logprob: -3.4174091815948486
    7. '```' → logprob: -3.9174091815948486
    8. ' for' → logprob: -4.542409420013428
    9. 'i' → logprob: -4.542409420013428
    10. 'j' → logprob: -4.792409420013428

Token 916: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -5.6934557505883276e-05
    2. 'ent' → logprob: -10.000057220458984
    3. 'entes' → logprob: -12.125057220458984
    4. '```' → logprob: -12.625057220458984
    5. '#' → logprob: -14.000057220458984
    6. 'e' → logprob: -14.500057220458984
    7. 'nts' → logprob: -15.250057220458984
    8. 's' → logprob: -15.625057220458984
    9. 'ENTS' → logprob: -16.000057220458984
    10. 'emment' → logprob: -16.125057220458984

Token 917: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15008874237537384
    2. '   ' → logprob: -2.1500887870788574
    3. '```' → logprob: -4.150088787078857
    4. ' for' → logprob: -5.150088787078857
    5. '
' → logprob: -6.900088787078857
    6. ',' → logprob: -9.1500883102417
    7. '``' → logprob: -9.1500883102417
    8. 'j' → logprob: -10.5250883102417
    9. '    
' → logprob: -10.6500883102417
    10. ')' → logprob: -11.7750883102417

Token 918: ' freq' (ID: 42078)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40289270877838135
    2. '```' → logprob: -1.1528927087783813
    3. '   ' → logprob: -4.777892589569092
    4. '``' → logprob: -5.777892589569092
    5. ' for' → logprob: -5.902892589569092
    6. '
' → logprob: -7.652892589569092
    7. 'j' → logprob: -7.902892589569092
    8. 'answer' → logprob: -7.902892589569092
    9. 'key' → logprob: -8.65289306640625
    10. 'i' → logprob: -9.52789306640625

Token 919: '_stock' (ID: 69488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8106491565704346
    2. '=' → logprob: -1.0606491565704346
    3. '_key' → logprob: -3.1856491565704346
    4. '[key' → logprob: -3.1856491565704346
    5. 'key' → logprob: -3.4356491565704346
    6. '_count' → logprob: -4.0606489181518555
    7. '<|end|>' → logprob: -4.6856489181518555
    8. ')' → logprob: -4.8106489181518555
    9. '[(' → logprob: -4.9356489181518555
    10. '[' → logprob: -5.3106489181518555

Token 920: 'e' (ID: 68)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5331733822822571
    2. '=' → logprob: -0.9081733822822571
    3. '[key' → logprob: -6.158173561096191
    4. 'e' → logprob: -6.408173561096191
    5. 's' → logprob: -6.908173561096191
    6. '_stock' → logprob: -7.033173561096191
    7. '[' → logprob: -7.283173561096191
    8. '={}' → logprob: -7.533173561096191
    9. 'ed' → logprob: -7.908173561096191
    10. '_freq' → logprob: -8.033173561096191

Token 921: ' prefix' (ID: 18633)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12917213141918182
    2. '=' → logprob: -2.1291720867156982
    3. '[key' → logprob: -8.004172325134277
    4. ',' → logprob: -8.629172325134277
    5. '   ' → logprob: -8.754172325134277
    6. ')' → logprob: -9.004172325134277
    7. 'key' → logprob: -9.004172325134277
    8. '_key' → logprob: -9.004172325134277
    9. 's' → logprob: -9.254172325134277
    10. '_freq' → logprob: -9.379172325134277

Token 922: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.01512092538177967
    2. ' =' → logprob: -4.515120983123779
    3. '   ' → logprob: -6.015120983123779
    4. '=' → logprob: -7.765120983123779
    5. '_' → logprob: -8.515120506286621
    6. '[j' → logprob: -8.765120506286621
    7. '_freq' → logprob: -9.015120506286621
    8. '[' → logprob: -9.390120506286621
    9. '_count' → logprob: -9.640120506286621
    10. 'mod' → logprob: -9.765120506286621

Token 923: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0087262392044067
    2. '[j' → logprob: -1.3837262392044067
    3. ' =' → logprob: -1.8837262392044067
    4. ']' → logprob: -2.508726119995117
    5. 's' → logprob: -3.633726119995117
    6. '[' → logprob: -4.008726119995117
    7. 'j' → logprob: -4.133726119995117
    8. '_inv' → logprob: -4.633726119995117
    9. '[(' → logprob: -4.758726119995117
    10. '_keys' → logprob: -4.883726119995117

Token 924: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09849309921264648
    2. 's' → logprob: -3.5984930992126465
    3. ')' → logprob: -3.9734930992126465
    4. '])' → logprob: -4.3484930992126465
    5. ')]' → logprob: -4.8484930992126465
    6. '+' → logprob: -5.0984930992126465
    7. '[j' → logprob: -5.5984930992126465
    8. '=' → logprob: -5.9734930992126465
    9. ' =' → logprob: -6.2234930992126465
    10. '[' → logprob: -6.3484930992126465

Token 925: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.27974241971969604
    2. 'pow' → logprob: -1.5297424793243408
    3. '(inv' → logprob: -3.654742479324341
    4. '(pow' → logprob: -7.154742240905762
    5. '10' → logprob: -7.529742240905762
    6. '(' → logprob: -9.654742240905762
    7. '```' → logprob: -10.279742240905762
    8. ' inv' → logprob: -10.279742240905762
    9. '1' → logprob: -10.654742240905762
    10. '(in' → logprob: -11.029742240905762

Token 926: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5928495486150496e-05
    2. '```' → logprob: -11.750016212463379
    3. '[key' → logprob: -13.000016212463379
    4. 'key' → logprob: -13.500016212463379
    5. '``' → logprob: -13.625016212463379
    6. '[' → logprob: -13.875016212463379
    7. 'pow' → logprob: -14.375016212463379
    8. '(key' → logprob: -14.875016212463379
    9. '(' → logprob: -15.125016212463379
    10. ')' → logprob: -15.750016212463379

Token 927: '^' (ID: 61)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5008677244186401
    2. '```' → logprob: -2.1258678436279297
    3. '^{' → logprob: -2.2508678436279297
    4. '   ' → logprob: -2.3758678436279297
    5. 'pow' → logprob: -2.3758678436279297
    6. '[j' → logprob: -2.5008678436279297
    7. ')' → logprob: -2.7508678436279297
    8. ' =' → logprob: -3.1258678436279297
    9. ']' → logprob: -3.6258678436279297
    10. '=' → logprob: -3.7508678436279297

Token 928: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5553886890411377
    2. 'i' → logprob: -1.0553886890411377
    3. '[i' → logprob: -2.8053886890411377
    4. '{i' → logprob: -4.555388450622559
    5. '(' → logprob: -5.430388450622559
    6. '[' → logprob: -7.430388450622559
    7. '(-' → logprob: -7.555388450622559
    8. '<|end|>' → logprob: -7.680388450622559
    9. '```' → logprob: -8.805388450622559
    10. '0' → logprob: -8.930388450622559

Token 929: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8236304521560669
    2. ' =' → logprob: -1.573630452156067
    3. 'for' → logprob: -1.823630452156067
    4. '=' → logprob: -2.3236303329467773
    5. ',' → logprob: -3.8236303329467773
    6. '[j' → logprob: -4.448630332946777
    7. ' for' → logprob: -4.573630332946777
    8. ')' → logprob: -4.698630332946777
    9. '
' → logprob: -4.698630332946777
    10. '```' → logprob: -5.198630332946777

Token 930: ' a' (ID: 261)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.590955138206482
    2. 'a' → logprob: -1.590955138206482
    3. 'i' → logprob: -1.715955138206482
    4. 'prefix' → logprob: -1.965955138206482
    5. 'j' → logprob: -2.2159552574157715
    6. 'range' → logprob: -2.9659552574157715
    7. 'key' → logprob: -2.9659552574157715
    8. '0' → logprob: -3.9659552574157715
    9. '```' → logprob: -5.2159552574157715
    10. '(prefix' → logprob: -5.3409552574157715

Token 931: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013037745840847492
    2. '[' → logprob: -5.13803768157959
    3. 'i' → logprob: -5.26303768157959
    4. '[j' → logprob: -6.63803768157959
    5. ')' → logprob: -8.51303768157959
    6. ']' → logprob: -8.76303768157959
    7. '=' → logprob: -9.88803768157959
    8. '```' → logprob: -10.01303768157959
    9. 'indices' → logprob: -10.51303768157959
    10. '.keys' → logprob: -11.13803768157959

Token 932: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5544064044952393
    2. ']!=' → logprob: -1.5544064044952393
    3. '!=' → logprob: -2.1794064044952393
    4. '[i' → logprob: -2.8044064044952393
    5. ' !=' → logprob: -4.42940616607666
    6. '[' → logprob: -4.67940616607666
    7. '-' → logprob: -4.80440616607666
    8. '[j' → logprob: -5.05440616607666
    9. '```' → logprob: -6.92940616607666
    10. '!=-' → logprob: -7.17940616607666

Token 933: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.7053759519476444e-05
    2. '```' → logprob: -10.000057220458984
    3. '1' → logprob: -11.750057220458984
    4. 'i' → logprob: -13.750057220458984
    5. ' ' → logprob: -14.000057220458984
    6. 'not' → logprob: -14.875057220458984
    7. '{' → logprob: -15.000057220458984
    8. '<|end|>' → logprob: -15.375057220458984
    9. '{i' → logprob: -15.500057220458984
    10. '(i' → logprob: -16.500057220458984

Token 934: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14905795454978943
    2. '   ' → logprob: -2.3990578651428223
    3. '
' → logprob: -3.2740578651428223
    4. '```' → logprob: -5.274057865142822
    5. ' for' → logprob: -5.524057865142822
    6. 'answer' → logprob: -8.39905834197998
    7. ',' → logprob: -8.64905834197998
    8. 'j' → logprob: -9.39905834197998
    9. '    
' → logprob: -9.52405834197998
    10. '``' → logprob: -10.39905834197998

Token 935: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4643833339214325
    2. '   ' → logprob: -1.0893833637237549
    3. ' for' → logprob: -3.589383363723755
    4. '```' → logprob: -4.964383125305176
    5. '
' → logprob: -8.464383125305176
    6. '``' → logprob: -9.964383125305176
    7. '	for' → logprob: -10.089383125305176
    8. ' ' → logprob: -10.089383125305176
    9. ',' → logprob: -10.339383125305176
    10. '    
' → logprob: -10.589383125305176

Token 936: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03907104581594467
    2. '   ' → logprob: -3.4140710830688477
    3. '```' → logprob: -5.664071083068848
    4. ' for' → logprob: -6.914071083068848
    5. '
' → logprob: -7.039071083068848
    6. '``' → logprob: -10.664071083068848
    7. '    
' → logprob: -11.039071083068848
    8. 'j' → logprob: -12.039071083068848
    9. '	for' → logprob: -12.289071083068848
    10. ')' → logprob: -12.539071083068848

Token 937: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004915889352560043
    2. '   ' → logprob: -5.379915714263916
    3. '```' → logprob: -8.629916191101074
    4. ' for' → logprob: -9.254916191101074
    5. '
' → logprob: -11.004916191101074
    6. '``' → logprob: -13.254916191101074
    7. '	for' → logprob: -13.754916191101074
    8. 'answer' → logprob: -14.129916191101074
    9. '    
' → logprob: -14.879916191101074
    10. 'j' → logprob: -15.504916191101074

Token 938: ' méthode' (ID: 71490)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27852770686149597
    2. 'freq' → logprob: -2.0285277366638184
    3. ' for' → logprob: -3.5285277366638184
    4. ' =' → logprob: -3.6535277366638184
    5. '
' → logprob: -3.7785277366638184
    6. '#' → logprob: -5.153527736663818
    7. '```' → logprob: -5.278527736663818
    8. '=' → logprob: -5.403527736663818
    9. 'answer' → logprob: -5.778527736663818
    10. ' freq' → logprob: -6.278527736663818

Token 939: ' nécessite' (ID: 126196)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2510303258895874
    2. 'continue' → logprob: -1.3760303258895874
    3. '=' → logprob: -2.001030445098877
    4. 'for' → logprob: -2.376030445098877
    5. ' =' → logprob: -2.751030445098877
    6. 'est' → logprob: -2.876030445098877
    7. ' continue' → logprob: -3.876030445098877
    8. ' est' → logprob: -4.126030445098877
    9. ' for' → logprob: -4.751030445098877
    10. '   ' → logprob: -4.876030445098877

Token 940: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19332019984722137
    2. '   ' → logprob: -2.9433202743530273
    3. '```' → logprob: -3.4433202743530273
    4. '#' → logprob: -3.9433202743530273
    5. ' for' → logprob: -4.318320274353027
    6. 'from' → logprob: -4.693320274353027
    7. '    ' → logprob: -5.193320274353027
    8. 'continue' → logprob: -5.318320274353027
    9. 'def' → logprob: -5.818320274353027
    10. '       ' → logprob: -5.818320274353027

Token 941: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2412099838256836
    2. 'continue' → logprob: -1.4912099838256836
    3. 'for' → logprob: -1.7412099838256836
    4. 'double' → logprob: -3.2412099838256836
    5. 'ré' → logprob: -3.8662099838256836
    6. 'second' → logprob: -3.8662099838256836
    7. 'default' → logprob: -3.8662099838256836
    8. 'mod' → logprob: -3.9912099838256836
    9. 'ligne' → logprob: -4.116209983825684
    10. '```' → logprob: -4.116209983825684

Token 942: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11361417919397354
    2. '#' → logprob: -2.738614082336426
    3. 'j' → logprob: -4.738614082336426
    4. 'default' → logprob: -4.863614082336426
    5. '```' → logprob: -5.238614082336426
    6. 'from' → logprob: -5.363614082336426
    7. 'answer' → logprob: -5.863614082336426
    8. '
' → logprob: -6.238614082336426
    9. 'continue' → logprob: -6.363614082336426
    10. 'range' → logprob: -6.613614082336426

Token 943: 'e' (ID: 68)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.2605600953102112
    2. 'nd' → logprob: -3.0105600357055664
    3. 'phase' → logprob: -3.1355600357055664
    4. '-pass' → logprob: -3.1355600357055664
    5. 'for' → logprob: -3.3855600357055664
    6. 'loop' → logprob: -4.635560035705566
    7. '-phase' → logprob: -4.635560035705566
    8. 'step' → logprob: -5.135560035705566
    9. '-step' → logprob: -5.385560035705566
    10. '-loop' → logprob: -5.510560035705566

Token 944: ' boucle' (ID: 174211)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3169456720352173
    2. 'for' → logprob: -1.5669456720352173
    3. ' boucle' → logprob: -4.066945552825928
    4. 'loop' → logprob: -4.316945552825928
    5. 'bou' → logprob: -4.316945552825928
    6. ' pass' → logprob: -5.191945552825928
    7. ' for' → logprob: -5.316945552825928
    8. ' loop' → logprob: -6.691945552825928
    9. 'fois' → logprob: -6.816945552825928
    10. 'phase' → logprob: -6.816945552825928

Token 945: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023793093860149384
    2. '   ' → logprob: -4.7737932205200195
    3. ' for' → logprob: -4.8987932205200195
    4. '```' → logprob: -4.8987932205200195
    5. '``' → logprob: -9.89879322052002
    6. '
' → logprob: -10.64879322052002
    7. '	for' → logprob: -10.77379322052002
    8. ',' → logprob: -11.52379322052002
    9. '<|end|>' → logprob: -11.77379322052002
    10. '    
' → logprob: -11.77379322052002

Token 946: ' actual' (ID: 6290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.620278000831604
    2. 'range' → logprob: -0.995278000831604
    3. '```' → logprob: -3.7452778816223145
    4. 'j' → logprob: -4.2452778816223145
    5. ' for' → logprob: -4.3702778816223145
    6. '0' → logprob: -4.3702778816223145
    7. 'i' → logprob: -4.4952778816223145
    8. ' range' → logprob: -5.1202778816223145
    9. ' i' → logprob: -6.2452778816223145
    10. 'answer' → logprob: -6.2452778816223145

Token 947: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.16287699341773987
    2. 'for' → logprob: -2.662877082824707
    3. 'isé' → logprob: -3.537877082824707
    4. 'ization' → logprob: -3.787877082824707
    5. 'ité' → logprob: -4.787877082824707
    6. 'isée' → logprob: -5.537877082824707
    7. '=' → logprob: -5.537877082824707
    8. 'i' → logprob: -5.537877082824707
    9. 'ités' → logprob: -5.787877082824707
    10. 'iser' → logprob: -7.037877082824707

Token 948: ' progressive' (ID: 35678)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013698920607566833
    2. ' for' → logprob: -4.388699054718018
    3. '
' → logprob: -7.388699054718018
    4. '```' → logprob: -8.01369857788086
    5. '   ' → logprob: -9.13869857788086
    6. 'i' → logprob: -9.76369857788086
    7. ',' → logprob: -10.63869857788086
    8. '``' → logprob: -11.63869857788086
    9. '(' → logprob: -11.88869857788086
    10. '=' → logprob: -12.38869857788086

Token 949: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04602799192070961
    2. ' for' → logprob: -3.921027898788452
    3. '```' → logprob: -4.296028137207031
    4. '
' → logprob: -4.921028137207031
    5. '   ' → logprob: -5.671028137207031
    6. '``' → logprob: -8.296028137207031
    7. 'i' → logprob: -9.046028137207031
    8. 'freq' → logprob: -9.296028137207031
    9. ',' → logprob: -9.546028137207031
    10. '    
' → logprob: -9.671028137207031

Token 950: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2150677591562271
    2. '   ' → logprob: -2.3400678634643555
    3. ' for' → logprob: -3.0900678634643555
    4. '```' → logprob: -3.0900678634643555
    5. '
' → logprob: -6.2150678634643555
    6. '``' → logprob: -6.5900678634643555
    7. 'i' → logprob: -6.9650678634643555
    8. 'j' → logprob: -6.9650678634643555
    9. '    
' → logprob: -8.340067863464355
    10. ',' → logprob: -8.590067863464355

Token 951: ' freq' (ID: 42078)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7522218823432922
    2. '   ' → logprob: -1.7522218227386475
    3. 'for' → logprob: -1.7522218227386475
    4. ' for' → logprob: -2.0022218227386475
    5. '``' → logprob: -3.7522218227386475
    6. '
' → logprob: -4.627222061157227
    7. '\n' → logprob: -5.252222061157227
    8. 'answer' → logprob: -6.002222061157227
    9. ' 
' → logprob: -7.127222061157227
    10. '\' → logprob: -7.127222061157227

Token 952: '.clear' (ID: 13562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1809903085231781
    2. ' =' → logprob: -1.8059903383255005
    3. '={}' → logprob: -7.305990219116211
    4. '_keys' → logprob: -9.180990219116211
    5. '_freq' → logprob: -9.680990219116211
    6. '={' → logprob: -9.805990219116211
    7. ',' → logprob: -9.805990219116211
    8. '_key' → logprob: -9.930990219116211
    9. '2' → logprob: -10.180990219116211
    10. '.clear' → logprob: -10.430990219116211

Token 953: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7055017352104187
    2. ')' → logprob: -1.8305017948150635
    3. ' for' → logprob: -1.9555017948150635
    4. '
' → logprob: -1.9555017948150635
    5. '<|end|>' → logprob: -3.7055017948150635
    6. '   ' → logprob: -4.330501556396484
    7. '{' → logprob: -5.455501556396484
    8. ')
' → logprob: -5.830501556396484
    9. 'freq' → logprob: -5.830501556396484
    10. '=' → logprob: -6.205501556396484

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5851314067840576
    2. 'for' → logprob: -1.4601314067840576
    3. ' for' → logprob: -1.7101314067840576
    4. '{' → logprob: -4.835131645202637
    5. 'i' → logprob: -5.210131645202637
    6. '```' → logprob: -5.460131645202637
    7. 'key' → logprob: -5.710131645202637
    8. ' key' → logprob: -5.835131645202637
    9. ')' → logprob: -6.335131645202637
    10. ' i' → logprob: -6.710131645202637

Token 955: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.33358797430992126
    2. 'freq' → logprob: -2.333587884902954
    3. 'for' → logprob: -2.708587884902954
    4. 'count' → logprob: -2.958587884902954
    5. 'key' → logprob: -3.458587884902954
    6. 'counter' → logprob: -4.458588123321533
    7. 'prev' → logprob: -5.208588123321533
    8. 'prefix' → logprob: -5.333588123321533
    9. '{' → logprob: -5.333588123321533
    10. 'counts' → logprob: -6.083588123321533

Token 956: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48363643884658813
    2. ' =' → logprob: -0.9836364388465881
    3. ' +=' → logprob: -4.858636379241943
    4. '+=' → logprob: -6.358636379241943
    5. '```' → logprob: -12.233636856079102
    6. '[' → logprob: -12.483636856079102
    7. ')' → logprob: -12.733636856079102
    8. '   ' → logprob: -13.108636856079102
    9. 'import' → logprob: -13.983636856079102
    10. '+' → logprob: -13.983636856079102

Token 957: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.750003814697266
    4. '```' → logprob: -19.000003814697266
    5. '۰' → logprob: -19.250003814697266
    6. '=' → logprob: -19.250003814697266
    7. '000' → logprob: -19.750003814697266
    8. '`' → logprob: -20.500003814697266
    9. '1' → logprob: -21.000003814697266
    10. '[' → logprob: -21.125003814697266

Token 958: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.125
    4. '000' → logprob: -18.0
    5. '```' → logprob: -18.25
    6. '=' → logprob: -19.0
    7. '۰' → logprob: -19.125
    8. '1' → logprob: -19.5
    9. '[' → logprob: -19.625
    10. '{' → logprob: -20.125

Token 959: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21872492134571075
    2. '   ' → logprob: -1.9687249660491943
    3. ' for' → logprob: -3.7187249660491943
    4. 'i' → logprob: -4.093724727630615
    5. '
' → logprob: -4.843724727630615
    6. '```' → logprob: -5.843724727630615
    7. 'pow' → logprob: -5.968724727630615
    8. 'freq' → logprob: -7.218724727630615
    9. 'prev' → logprob: -7.968724727630615
    10. 'key' → logprob: -8.218725204467773

Token 960: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09754697233438492
    2. '   ' → logprob: -2.8475470542907715
    3. 'pow' → logprob: -4.3475470542907715
    4. 'i' → logprob: -4.7225470542907715
    5. ' for' → logprob: -5.5975470542907715
    6. 'freq' → logprob: -5.9725470542907715
    7. '```' → logprob: -6.2225470542907715
    8. 'prev' → logprob: -6.7225470542907715
    9. 'prefix' → logprob: -7.0975470542907715
    10. 'key' → logprob: -7.5975470542907715

Token 961: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12373469024896622
    2. 'freq' → logprob: -2.373734712600708
    3. 'pow' → logprob: -3.873734712600708
    4. 'i' → logprob: -7.248734474182129
    5. 'prefix' → logprob: -7.748734474182129
    6. 'key' → logprob: -7.748734474182129
    7. 'left' → logprob: -7.998734474182129
    8. 'pos' → logprob: -9.623734474182129
    9. '```' → logprob: -9.623734474182129
    10. 'keys' → logprob: -9.623734474182129

Token 962: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26623106002807617
    2. 'pow' → logprob: -1.8912310600280762
    3. 'freq' → logprob: -2.641231060028076
    4. 'left' → logprob: -5.141231060028076
    5. 'from' → logprob: -6.766231060028076
    6. 'prefix' → logprob: -6.891231060028076
    7. 'power' → logprob: -7.141231060028076
    8. 'j' → logprob: -7.266231060028076
    9. 'i' → logprob: -7.266231060028076
    10. 'key' → logprob: -8.391231536865234

Token 963: ' incr' (ID: 52395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1762458086013794
    2. 'i' → logprob: -2.55124568939209
    3. '   ' → logprob: -3.55124568939209
    4. ' for' → logprob: -4.17624568939209
    5. 'freq' → logprob: -4.55124568939209
    6. 'pow' → logprob: -4.92624568939209
    7. 'prev' → logprob: -5.42624568939209
    8. 'keys' → logprob: -6.17624568939209
    9. '=' → logprob: -6.30124568939209
    10. '
' → logprob: -6.42624568939209

Token 964: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5665176510810852
    2. 'for' → logprob: -1.5665175914764404
    3. 'e' → logprob: -1.9415175914764404
    4. ' for' → logprob: -3.3165175914764404
    5. 'i' → logprob: -3.5665175914764404
    6. ' ' → logprob: -4.5665178298950195
    7. '=' → logprob: -6.4415178298950195
    8. ' i' → logprob: -6.9415178298950195
    9. 'ement' → logprob: -6.9415178298950195
    10. 'ease' → logprob: -7.6915178298950195

Token 965: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.08117765188217163
    2. 'for' → logprob: -2.8311777114868164
    3. 'ement' → logprob: -5.081177711486816
    4. 'i' → logprob: -5.081177711486816
    5. 'mente' → logprob: -6.081177711486816
    6. 'm' → logprob: -6.331177711486816
    7. 'mented' → logprob: -7.081177711486816
    8. 'freq' → logprob: -7.581177711486816
    9. 'rement' → logprob: -8.206177711486816
    10. 'ément' → logprob: -8.206177711486816

Token 966: ' le' (ID: 505)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.8938290476799011
    2. '   ' → logprob: -1.268829107284546
    3. 'for' → logprob: -1.643829107284546
    4. ' for' → logprob: -3.018829107284546
    5. 'i' → logprob: -3.143829107284546
    6. ' freq' → logprob: -4.893828868865967
    7. ' i' → logprob: -5.268828868865967
    8. '{' → logprob: -5.643828868865967
    9. 'key' → logprob: -5.893828868865967
    10. '{i' → logprob: -7.018828868865967

Token 967: ' compteur' (ID: 163344)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14426064491271973
    2. '0' → logprob: -2.7692606449127197
    3. 'for' → logprob: -3.3942606449127197
    4. 'count' → logprob: -4.394260406494141
    5. 'key' → logprob: -5.019260406494141
    6. 'counter' → logprob: -5.019260406494141
    7. 'freq' → logprob: -6.019260406494141
    8. 'answer' → logprob: -6.144260406494141
    9. 'prefix' → logprob: -6.394260406494141
    10. 'a' → logprob: -6.769260406494141

Token 968: ' freq' (ID: 42078)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10779251158237457
    2. '[' → logprob: -3.232792615890503
    3. 'for' → logprob: -3.857792615890503
    4. ' =' → logprob: -4.357792377471924
    5. ' for' → logprob: -4.732792377471924
    6. '=' → logprob: -4.857792377471924
    7. '[i' → logprob: -6.232792377471924
    8. 'i' → logprob: -6.357792377471924
    9. 'freq' → logprob: -6.607792377471924
    10. '(' → logprob: -6.857792377471924

Token 969: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01178607065230608
    2. '[' → logprob: -5.386785984039307
    3. ' =' → logprob: -5.636785984039307
    4. '=' → logprob: -7.011785984039307
    5. ' for' → logprob: -7.386785984039307
    6. '{' → logprob: -7.886785984039307
    7. '[key' → logprob: -7.886785984039307
    8. 'for' → logprob: -8.136786460876465
    9. '[token' → logprob: -8.261786460876465
    10. ' at' → logprob: -9.136786460876465

Token 970: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0062515614554286
    2. '{' → logprob: -5.631251335144043
    3. 'i' → logprob: -7.381251335144043
    4. '{i' → logprob: -7.506251335144043
    5. '(' → logprob: -7.756251335144043
    6. '1' → logprob: -7.881251335144043
    7. '   ' → logprob: -8.256251335144043
    8. ' ' → logprob: -8.756251335144043
    9. '(i' → logprob: -9.756251335144043
    10. '[' → logprob: -10.256251335144043

Token 971: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017808057367801666
    2. ' i' → logprob: -4.517807960510254
    3. 'for' → logprob: -6.267807960510254
    4. '   ' → logprob: -6.892807960510254
    5. 'j' → logprob: -7.017807960510254
    6. 'step' → logprob: -7.142807960510254
    7. ' step' → logprob: -7.392807960510254
    8. ' for' → logprob: -8.142807960510254
    9. 'iteration' → logprob: -8.267807960510254
    10. '0' → logprob: -8.517807960510254

Token 972: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7912970781326294
    2. '=' → logprob: -1.5412970781326294
    3. 'for' → logprob: -1.6662970781326294
    4. '[' → logprob: -3.54129695892334
    5. ':' → logprob: -3.66629695892334
    6. ' =' → logprob: -3.79129695892334
    7. ' for' → logprob: -3.91629695892334
    8. '[i' → logprob: -4.41629695892334
    9. '```' → logprob: -4.54129695892334
    10. ',' → logprob: -4.54129695892334

Token 973: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36356544494628906
    2. 'i' → logprob: -1.238565444946289
    3. ' a' → logprob: -4.863565444946289
    4. ' i' → logprob: -5.113565444946289
    5. '(i' → logprob: -7.363565444946289
    6. '(a' → logprob: -8.238565444946289
    7. '0' → logprob: -8.738565444946289
    8. ' (' → logprob: -9.488565444946289
    9. '   ' → logprob: -9.738565444946289
    10. '(' → logprob: -9.988565444946289

Token 974: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005593468667939305
    2. '[' → logprob: -8.25055980682373
    3. 'i' → logprob: -8.50055980682373
    4. ' [' → logprob: -10.12555980682373
    5. ' i' → logprob: -10.62555980682373
    6. 'if' → logprob: -11.75055980682373
    7. '   ' → logprob: -12.37555980682373
    8. '(i' → logprob: -12.50055980682373
    9. '```' → logprob: -13.37555980682373
    10. '[
' → logprob: -13.50055980682373

Token 975: ']!=' (ID: 85780)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4895744025707245
    2. ']' → logprob: -1.1145744323730469
    3. ']!=' → logprob: -2.864574432373047
    4. ' -' → logprob: -6.739574432373047
    5. '!=' → logprob: -8.239574432373047
    6. ' ]' → logprob: -8.864574432373047
    7. ']>=' → logprob: -8.989574432373047
    8. ']==' → logprob: -9.114574432373047
    9. ']!='' → logprob: -10.364574432373047
    10. ' !=' → logprob: -10.364574432373047

Token 976: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00219866749830544
    2. ' ' → logprob: -6.127198696136475
    3. '=' → logprob: -11.877198219299316
    4. '1' → logprob: -12.252198219299316
    5. '```' → logprob: -13.752198219299316
    6. '   ' → logprob: -15.627198219299316
    7. '!=' → logprob: -16.439699172973633
    8. '  ' → logprob: -16.689699172973633
    9. '``' → logprob: -16.752199172973633
    10. '>' → logprob: -17.127199172973633

Token 977: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7462790608406067
    2. ':' → logprob: -1.246279001235962
    3. ' for' → logprob: -2.746279001235962
    4. '```' → logprob: -3.121279001235962
    5. '
' → logprob: -3.871279001235962
    6. ' =' → logprob: -4.121279239654541
    7. 'for' → logprob: -4.246279239654541
    8. '=' → logprob: -4.246279239654541
    9. ',' → logprob: -4.496279239654541
    10. '[i' → logprob: -4.621279239654541

Token 978: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0646599531173706
    2. 'i' → logprob: -1.5646599531173706
    3. ' i' → logprob: -1.8146599531173706
    4. '   ' → logprob: -2.43966007232666
    5. ' for' → logprob: -2.56466007232666
    6. 'for' → logprob: -3.56466007232666
    7. '):' → logprob: -4.18966007232666
    8. ' key' → logprob: -4.43966007232666
    9. ' if' → logprob: -4.93966007232666
    10. ':' → logprob: -5.06466007232666

Token 979: ' dans' (ID: 2671)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.4746469259262085
    2. '=' → logprob: -2.099647045135498
    3. '<=' → logprob: -2.224647045135498
    4. ')' → logprob: -2.224647045135498
    5. ' ==' → logprob: -2.474647045135498
    6. ' <' → logprob: -2.474647045135498
    7. '+' → logprob: -2.599647045135498
    8. ' <=' → logprob: -2.849647045135498
    9. '+=' → logprob: -3.724647045135498
    10. '```' → logprob: -4.224647045135498

Token 980: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002354360418394208
    2. ' range' → logprob: -6.127354145050049
    3. '0' → logprob: -10.127354621887207
    4. '[' → logprob: -10.502354621887207
    5. 'N' → logprob: -10.627354621887207
    6. '```' → logprob: -10.627354621887207
    7. '   ' → logprob: -10.877354621887207
    8. 'a' → logprob: -11.127354621887207
    9. 'i' → logprob: -12.127354621887207
    10. ')' → logprob: -13.002354621887207

Token 981: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.612634362885728e-05
    2. ' range' → logprob: -10.375076293945312
    3. 'a' → logprob: -11.500076293945312
    4. '0' → logprob: -11.625076293945312
    5. 'prefix' → logprob: -12.250076293945312
    6. 'N' → logprob: -12.375076293945312
    7. '[' → logprob: -12.500076293945312
    8. '   ' → logprob: -12.750076293945312
    9. 'i' → logprob: -13.125076293945312
    10. '(range' → logprob: -13.250076293945312

Token 982: '..' (ID: 485)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.775305151939392
    2. '):' → logprob: -1.775305151939392
    3. ')' → logprob: -2.0253052711486816
    4. ',' → logprob: -2.0253052711486816
    5. '):
' → logprob: -2.2753052711486816
    6. ',N' → logprob: -2.4003052711486816
    7. '..' → logprob: -2.9003052711486816
    8. ' to' → logprob: -2.9003052711486816
    9. '
' → logprob: -3.7753052711486816
    10. '   ' → logprob: -4.400305271148682

Token 983: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0010954499011859298
    2. '0' → logprob: -7.626095294952393
    3. ' N' → logprob: -7.751095294952393
    4. 'i' → logprob: -9.75109577178955
    5. ')' → logprob: -10.00109577178955
    6. '
' → logprob: -10.62609577178955
    7. '   ' → logprob: -11.00109577178955
    8. '```' → logprob: -11.87609577178955
    9. '1' → logprob: -12.00109577178955
    10. ' ' → logprob: -12.25109577178955

Token 984: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6030545234680176
    2. '):' → logprob: -1.7280545234680176
    3. '):
' → logprob: -1.7280545234680176
    4. ')' → logprob: -3.1030545234680176
    5. '   ' → logprob: -3.4780545234680176
    6. '
' → logprob: -4.478054523468018
    7. ':' → logprob: -5.728054523468018
    8. ',' → logprob: -6.478054523468018
    9. '...' → logprob: -6.853054523468018
    10. '       ' → logprob: -7.603054523468018

Token 985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05359604209661484
    2. ' for' → logprob: -3.928596019744873
    3. 'for' → logprob: -3.928596019744873
    4. '
' → logprob: -5.178596019744873
    5. ' i' → logprob: -6.928596019744873
    6. 'i' → logprob: -6.928596019744873
    7. ',' → logprob: -6.928596019744873
    8. '```' → logprob: -7.178596019744873
    9. ')' → logprob: -7.303596019744873
    10. ':' → logprob: -7.428596019744873

Token 986: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40786582231521606
    2. 'for' → logprob: -1.9078657627105713
    3. 'i' → logprob: -2.5328657627105713
    4. '
' → logprob: -3.1578657627105713
    5. ' for' → logprob: -3.1578657627105713
    6. 'freq' → logprob: -4.53286600112915
    7. ' i' → logprob: -5.28286600112915
    8. '    
' → logprob: -6.40786600112915
    9. '{
' → logprob: -6.90786600112915
    10. '{' → logprob: -7.28286600112915

Token 987: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8157860636711121
    2. 'freq' → logprob: -1.3157861232757568
    3. 'i' → logprob: -1.4407861232757568
    4. '   ' → logprob: -3.315786123275757
    5. '
' → logprob: -5.190785884857178
    6. '{' → logprob: -5.940785884857178
    7. 'prev' → logprob: -6.940785884857178
    8. '0' → logprob: -6.940785884857178
    9. 'j' → logprob: -7.065785884857178
    10. 'count' → logprob: -7.440785884857178

Token 988: ' parc' (ID: 22138)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5234627723693848
    2. 'for' → logprob: -1.2734627723693848
    3. '
' → logprob: -3.5234627723693848
    4. '=' → logprob: -3.8984627723693848
    5. 'freq' → logprob: -4.523462772369385
    6. ' =' → logprob: -4.648462772369385
    7. 'prev' → logprob: -4.648462772369385
    8. ' for' → logprob: -4.648462772369385
    9. ' i' → logprob: -4.773462772369385
    10. '   ' → logprob: -4.773462772369385

Token 989: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.5195180773735046
    2. 'ourt' → logprob: -1.2695181369781494
    3. 'ours' → logprob: -2.1445181369781494
    4. 'or' → logprob: -5.51951789855957
    5. 'for' → logprob: -6.01951789855957
    6. 'r' → logprob: -9.39451789855957
    7. 'ourse' → logprob: -9.64451789855957
    8. 'orr' → logprob: -9.76951789855957
    9. 'urs' → logprob: -9.76951789855957
    10. '   ' → logprob: -9.76951789855957

Token 990: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0530971921980381
    2. ' range' → logprob: -3.0530972480773926
    3. 'i' → logprob: -6.178097248077393
    4. 'for' → logprob: -6.553097248077393
    5. '   ' → logprob: -7.928097248077393
    6. '0' → logprob: -8.678096771240234
    7. ' i' → logprob: -8.928096771240234
    8. '(range' → logprob: -8.928096771240234
    9. ' for' → logprob: -9.928096771240234
    10. 'N' → logprob: -10.053096771240234

Token 991: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30468812584877014
    2. ' =' → logprob: -2.1796882152557373
    3. '   ' → logprob: -3.0546882152557373
    4. 'in' → logprob: -3.3046882152557373
    5. ' in' → logprob: -3.6796882152557373
    6. 'for' → logprob: -4.054687976837158
    7. ':' → logprob: -4.804687976837158
    8. ' for' → logprob: -5.429687976837158
    9. '(range' → logprob: -6.054687976837158
    10. ',' → logprob: -6.304687976837158

Token 992: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007189844618551433
    2. ' range' → logprob: -7.25071907043457
    3. '   ' → logprob: -12.00071907043457
    4. '0' → logprob: -13.12571907043457
    5. ' ' → logprob: -15.50071907043457
    6. '
' → logprob: -15.62571907043457
    7. '```' → logprob: -15.62571907043457
    8. '(range' → logprob: -16.25071907043457
    9. '  ' → logprob: -16.50071907043457
    10. '	range' → logprob: -16.62571907043457

Token 993: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.857719275401905e-05
    2. ' range' → logprob: -10.250038146972656
    3. '0' → logprob: -13.250038146972656
    4. '   ' → logprob: -14.125038146972656
    5. '
' → logprob: -15.500038146972656
    6. 'for' → logprob: -15.625038146972656
    7. '(range' → logprob: -16.000038146972656
    8. 'i' → logprob: -16.250038146972656
    9. '```' → logprob: -17.375038146972656
    10. '`' → logprob: -18.000038146972656

Token 994: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.5580354332923889
    2. 'range' → logprob: -1.0580353736877441
    3. ',' → logprob: -3.308035373687744
    4. ',N' → logprob: -3.558035373687744
    5. ' range' → logprob: -5.058035373687744
    6. 'in' → logprob: -6.058035373687744
    7. '(range' → logprob: -6.558035373687744
    8. '...' → logprob: -6.808035373687744
    9. '
' → logprob: -7.183035373687744
    10. 'for' → logprob: -7.308035373687744

Token 995: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014406509581021965
    2. 'range' → logprob: -9.250144004821777
    3. '   ' → logprob: -10.500144004821777
    4. ' N' → logprob: -11.500144004821777
    5. '(N' → logprob: -12.875144004821777
    6. ' range' → logprob: -13.000144004821777
    7. '
' → logprob: -13.500144004821777
    8. '0' → logprob: -14.125144004821777
    9. '       ' → logprob: -14.250144004821777
    10. '```' → logprob: -14.625144004821777

Token 996: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30781346559524536
    2. ':' → logprob: -1.6828134059906006
    3. ':
' → logprob: -3.6828134059906006
    4. '-' → logprob: -4.05781364440918
    5. '   ' → logprob: -4.55781364440918
    6. '
' → logprob: -4.68281364440918
    7. '+
' → logprob: -4.93281364440918
    8. '```' → logprob: -5.43281364440918
    9. '):
' → logprob: -6.30781364440918
    10. 'for' → logprob: -6.68281364440918

Token 997: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. '2' → logprob: -10.62503433227539
    3. '-' → logprob: -13.00003433227539
    4. '```' → logprob: -13.00003433227539
    5. ' ' → logprob: -13.12503433227539
    6. '   ' → logprob: -14.50003433227539
    7. '0' → logprob: -14.62503433227539
    8. 'N' → logprob: -14.93753433227539
    9. '+' → logprob: -15.12503433227539
    10. 'j' → logprob: -15.56253433227539

Token 998: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5170081257820129
    2. '   ' → logprob: -1.7670080661773682
    3. ':' → logprob: -2.017008066177368
    4. ' for' → logprob: -3.392008066177368
    5. '```' → logprob: -3.642008066177368
    6. '
' → logprob: -4.142008304595947
    7. ':
' → logprob: -4.767008304595947
    8. 'freq' → logprob: -5.642008304595947
    9. '=' → logprob: -5.767008304595947
    10. ')' → logprob: -6.892008304595947

Token 999: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3041312098503113
    2. 'for' → logprob: -1.929131269454956
    3. ' for' → logprob: -2.554131269454956
    4. '```' → logprob: -3.679131269454956
    5. ')' → logprob: -5.429131031036377
    6. 'i' → logprob: -6.179131031036377
    7. '=' → logprob: -6.554131031036377
    8. ':' → logprob: -6.554131031036377
    9. ' i' → logprob: -6.804131031036377
    10. '
' → logprob: -7.804131031036377

Token 1000: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13641607761383057
    2. 'i' → logprob: -3.011415958404541
    3. ' for' → logprob: -3.761415958404541
    4. '{' → logprob: -4.136415958404541
    5. 'freq' → logprob: -4.261415958404541
    6. '   ' → logprob: -4.511415958404541
    7. '=' → logprob: -5.761415958404541
    8. ')' → logprob: -6.136415958404541
    9. 'j' → logprob: -6.511415958404541
    10. '
' → logprob: -6.511415958404541

Token 1001: ' Avant' (ID: 88245)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.5730780363082886
    2. 'i' → logprob: -1.0730780363082886
    3. 'for' → logprob: -2.573078155517578
    4. '   ' → logprob: -5.073078155517578
    5. 'j' → logprob: -5.698078155517578
    6. '
' → logprob: -6.573078155517578
    7. '```' → logprob: -6.948078155517578
    8. '{' → logprob: -7.323078155517578
    9. 'count' → logprob: -7.448078155517578
    10. 'left' → logprob: -7.448078155517578

Token 1002: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03099101595580578
    2. 'i' → logprob: -4.405991077423096
    3. '   ' → logprob: -5.155991077423096
    4. 'j' → logprob: -5.530991077423096
    5. ' for' → logprob: -5.530991077423096
    6. 'range' → logprob: -5.655991077423096
    7. ' i' → logprob: -8.030990600585938
    8. '```' → logprob: -8.780990600585938
    9. 'freq' → logprob: -8.780990600585938
    10. '0' → logprob: -9.155990600585938

Token 1003: ' traiter' (ID: 105852)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03445442020893097
    2. 'continue' → logprob: -4.659454345703125
    3. 'range' → logprob: -4.659454345703125
    4. 'i' → logprob: -5.034454345703125
    5. ' for' → logprob: -6.159454345703125
    6. '```' → logprob: -6.534454345703125
    7. 'j' → logprob: -7.284454345703125
    8. ':' → logprob: -7.534454345703125
    9. 'add' → logprob: -7.909454345703125
    10. '   ' → logprob: -8.159454345703125

Token 1004: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2585792541503906
    2. 'for' → logprob: -1.6335792541503906
    3. '   ' → logprob: -4.383579254150391
    4. ' for' → logprob: -4.758579254150391
    5. ' j' → logprob: -5.133579254150391
    6. 'range' → logprob: -6.383579254150391
    7. 'i' → logprob: -6.508579254150391
    8. 'the' → logprob: -7.758579254150391
    9. '0' → logprob: -7.883579254150391
    10. '=' → logprob: -8.50857925415039

Token 1005: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27582383155822754
    2. '   ' → logprob: -1.9008238315582275
    3. ':
' → logprob: -2.6508238315582275
    4. ',' → logprob: -4.900823593139648
    5. '=' → logprob: -5.525823593139648
    6. '):' → logprob: -6.400823593139648
    7. ' :' → logprob: -6.400823593139648
    8. 'for' → logprob: -6.525823593139648
    9. '       ' → logprob: -7.150823593139648
    10. '[i' → logprob: -7.650823593139648

Token 1006: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6019909977912903
    2. ' for' → logprob: -1.6019909381866455
    3. 'freq' → logprob: -1.8519909381866455
    4. '   ' → logprob: -2.4769909381866455
    5. ' freq' → logprob: -4.851991176605225
    6. 'pass' → logprob: -7.851991176605225
    7. '
' → logprob: -8.226990699768066
    8. 'i' → logprob: -8.726990699768066
    9. 'continue' → logprob: -9.101990699768066
    10. 'key' → logprob: -9.101990699768066

Token 1007: ' ajoute' (ID: 91611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016183342784643173
    2. ' for' → logprob: -4.266183376312256
    3. '   ' → logprob: -6.766183376312256
    4. 'i' → logprob: -7.766183376312256
    5. '```' → logprob: -9.016182899475098
    6. '#' → logprob: -9.766182899475098
    7. 'continue' → logprob: -9.891182899475098
    8. ' i' → logprob: -10.266182899475098
    9. 'key' → logprob: -10.391182899475098
    10. '=' → logprob: -10.891182899475098

Token 1008: ' prefix' (ID: 18633)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9403015971183777
    2. '(i' → logprob: -0.9403015971183777
    3. '(' → logprob: -2.9403016567230225
    4. ' (' → logprob: -3.0653016567230225
    5. 'i' → logprob: -3.1903016567230225
    6. '(prefix' → logprob: -3.4403016567230225
    7. 'prefix' → logprob: -4.440301418304443
    8. 'freq' → logprob: -4.815301418304443
    9. '(j' → logprob: -5.440301418304443
    10. 'key' → logprob: -5.565301418304443

Token 1009: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.546478935983032e-05
    2. '_' → logprob: -11.250025749206543
    3. '[i' → logprob: -13.125025749206543
    4. '   ' → logprob: -13.125025749206543
    5. '[_' → logprob: -13.250025749206543
    6. ')' → logprob: -13.500025749206543
    7. '```' → logprob: -13.875025749206543
    8. 'mod' → logprob: -14.250025749206543
    9. ' _' → logprob: -14.500025749206543
    10. '[' → logprob: -14.500025749206543

Token 1010: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001617035741219297
    2. '[' → logprob: -9.375162124633789
    3. '[i' → logprob: -9.625162124633789
    4. '```' → logprob: -12.875162124633789
    5. '   ' → logprob: -13.000162124633789
    6. 'j' → logprob: -13.000162124633789
    7. ',j' → logprob: -13.750162124633789
    8. ']' → logprob: -14.500162124633789
    9. '(j' → logprob: -14.625162124633789
    10. ' [' → logprob: -15.125162124633789

Token 1011: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43837180733680725
    2. '+' → logprob: -1.0633717775344849
    3. ' +' → logprob: -5.563371658325195
    4. ']+' → logprob: -5.938371658325195
    5. '   ' → logprob: -6.563371658325195
    6. ']*' → logprob: -7.313371658325195
    7. ')' → logprob: -8.563371658325195
    8. '])' → logprob: -8.938371658325195
    9. '+j' → logprob: -9.063371658325195
    10. ' ]' → logprob: -9.063371658325195

Token 1012: 'inv' (ID: 31086)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.502483606338501
    2. 'inv' → logprob: -1.002483606338501
    3. ' inv' → logprob: -4.377483367919922
    4. 'freq' → logprob: -4.627483367919922
    5. '(inv' → logprob: -6.252483367919922
    6. ' pow' → logprob: -6.252483367919922
    7. '(pow' → logprob: -7.377483367919922
    8. 'key' → logprob: -8.252483367919922
    9. '1' → logprob: -8.502483367919922
    10. ' (' → logprob: -8.752483367919922

Token 1013: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3544423381972592e-05
    2. 'pow' → logprob: -11.87501335144043
    3. '(' → logprob: -12.50001335144043
    4. '
' → logprob: -13.62501335144043
    5. '```' → logprob: -14.37501335144043
    6. '[' → logprob: -14.62501335144043
    7. '``' → logprob: -14.87501335144043
    8. '(pow' → logprob: -17.12501335144043
    9. ']' → logprob: -17.37501335144043
    10. '`' → logprob: -17.50001335144043

Token 1014: '^' (ID: 61)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2968842089176178
    2. '[' → logprob: -2.171884298324585
    3. '   ' → logprob: -3.296884298324585
    4. '```' → logprob: -3.546884298324585
    5. ')' → logprob: -3.671884298324585
    6. ']' → logprob: -3.671884298324585
    7. '[
' → logprob: -4.671884059906006
    8. '[key' → logprob: -6.046884059906006
    9. '^{' → logprob: -6.421884059906006
    10. '[(' → logprob: -6.421884059906006

Token 1015: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.12320925295352936
    2. 'j' → logprob: -2.373209238052368
    3. '(' → logprob: -3.998209238052368
    4. '1' → logprob: -6.498209476470947
    5. ' (' → logprob: -6.748209476470947
    6. ',j' → logprob: -8.123208999633789
    7. '```' → logprob: -8.248208999633789
    8. '[j' → logprob: -8.623208999633789
    9. ' j' → logprob: -8.623208999633789
    10. '(
' → logprob: -9.248208999633789

Token 1016: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050171468406915665
    2. '
' → logprob: -3.925171375274658
    3. 'for' → logprob: -4.300171375274658
    4. ' for' → logprob: -4.425171375274658
    5. ':' → logprob: -6.800171375274658
    6. ':
' → logprob: -7.675171375274658
    7. '```' → logprob: -7.800171375274658
    8. ')' → logprob: -7.800171375274658
    9. '    
' → logprob: -8.050171852111816
    10. '=' → logprob: -8.800171852111816

Token 1017: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04367108643054962
    2. ' a' → logprob: -3.668671131134033
    3. 'j' → logprob: -4.543671131134033
    4. '(a' → logprob: -5.668671131134033
    5. ' j' → logprob: -6.668671131134033
    6. '(j' → logprob: -6.668671131134033
    7. ' (' → logprob: -8.043670654296875
    8. '(' → logprob: -9.043670654296875
    9. '   ' → logprob: -9.543670654296875
    10. '0' → logprob: -10.168670654296875

Token 1018: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0021634676959365606
    2. '[' → logprob: -6.502163410186768
    3. '[i' → logprob: -7.752163410186768
    4. 'j' → logprob: -9.752163887023926
    5. ' [' → logprob: -9.877163887023926
    6. '[
' → logprob: -10.377163887023926
    7. ']' → logprob: -10.752163887023926
    8. '```' → logprob: -11.002163887023926
    9. ')' → logprob: -11.377163887023926
    10. '   ' → logprob: -12.127163887023926

Token 1019: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3232719600200653
    2. '[j' → logprob: -1.6982719898223877
    3. ']!=' → logprob: -2.5732719898223877
    4. '!=' → logprob: -4.448271751403809
    5. '[i' → logprob: -5.698271751403809
    6. '[' → logprob: -7.073271751403809
    7. ' !=' → logprob: -7.198271751403809
    8. '[
' → logprob: -9.573271751403809
    9. 'j' → logprob: -9.823271751403809
    10. ']==' → logprob: -10.698271751403809

Token 1020: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006751431501470506
    2. ' ' → logprob: -7.625675201416016
    3. '1' → logprob: -9.375675201416016
    4. 'j' → logprob: -10.375675201416016
    5. '!=' → logprob: -10.500675201416016
    6. '=' → logprob: -11.250675201416016
    7. '```' → logprob: -11.250675201416016
    8. ']' → logprob: -11.875675201416016
    9. '!' → logprob: -13.375675201416016
    10. '[j' → logprob: -13.375675201416016

Token 1021: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19137433171272278
    2. '```' → logprob: -2.4413743019104004
    3. ':' → logprob: -2.9413743019104004
    4. ':
' → logprob: -4.3163743019104
    5. 'for' → logprob: -4.8163743019104
    6. '
' → logprob: -5.8163743019104
    7. ',' → logprob: -6.0663743019104
    8. ' for' → logprob: -6.0663743019104
    9. ')' → logprob: -6.4413743019104
    10. '=' → logprob: -7.5663743019104

Token 1022: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01911923475563526
    2. '```' → logprob: -4.5191192626953125
    3. 'for' → logprob: -5.2691192626953125
    4. ' for' → logprob: -6.3941192626953125
    5. '
' → logprob: -7.3941192626953125
    6. ')' → logprob: -8.769119262695312
    7. ':' → logprob: -8.769119262695312
    8. ',' → logprob: -9.394119262695312
    9. '    
' → logprob: -9.769119262695312
    10. ':
' → logprob: -10.519119262695312

Token 1023: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2993147075176239
    2. 'for' → logprob: -1.6743147373199463
    3. ' for' → logprob: -3.1743147373199463
    4. '```' → logprob: -4.049314498901367
    5. ':' → logprob: -4.924314498901367
    6. ')' → logprob: -6.299314498901367
    7. '[j' → logprob: -8.049314498901367
    8. ',' → logprob: -8.174314498901367
    9. '[' → logprob: -8.299314498901367
    10. ' :' → logprob: -8.424314498901367

Token 1024: ' Ensuite' (ID: 113884)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049054767936468124
    2. '   ' → logprob: -3.0490548610687256
    3. '```' → logprob: -8.049055099487305
    4. ' for' → logprob: -9.549055099487305
    5. 'i' → logprob: -10.174055099487305
    6. '
' → logprob: -10.674055099487305
    7. 'freq' → logprob: -11.799055099487305
    8. 'j' → logprob: -12.674055099487305
    9. '``' → logprob: -13.299055099487305
    10. '    
' → logprob: -14.049055099487305

Token 1025: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48128122091293335
    2. 'for' → logprob: -1.1062812805175781
    3. ' for' → logprob: -2.981281280517578
    4. 'key' → logprob: -8.856281280517578
    5. ' key' → logprob: -9.606281280517578
    6. 'j' → logprob: -9.981281280517578
    7. '       ' → logprob: -9.981281280517578
    8. '
' → logprob: -9.981281280517578
    9. ' j' → logprob: -10.606281280517578
    10. '```' → logprob: -10.606281280517578

Token 1026: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051226794719696045
    2. ' for' → logprob: -3.301226854324341
    3. '   ' → logprob: -4.676226615905762
    4. 'calculate' → logprob: -6.926226615905762
    5. '```' → logprob: -7.301226615905762
    6. 'count' → logprob: -7.301226615905762
    7. '
' → logprob: -7.676226615905762
    8. 'compute' → logprob: -8.426226615905762
    9. 'key' → logprob: -9.676226615905762
    10. ' ' → logprob: -9.676226615905762

Token 1027: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0011387886479496956
    2. 'cule' → logprob: -7.376138687133789
    3. 'ulate' → logprob: -7.876138687133789
    4. 'ute' → logprob: -10.376138687133789
    5. '=' → logprob: -10.501138687133789
    6. 'ulte' → logprob: -11.376138687133789
    7. 'ulé' → logprob: -11.501138687133789
    8. '#' → logprob: -11.626138687133789
    9. '```' → logprob: -12.001138687133789
    10. 'ul' → logprob: -12.126138687133789

Token 1028: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.4890676736831665
    2. 'key' → logprob: -0.9890676736831665
    3. '(key' → logprob: -4.739067554473877
    4. '   ' → logprob: -5.239067554473877
    5. ' (' → logprob: -7.739067554473877
    6. '       ' → logprob: -8.364068031311035
    7. 'answer' → logprob: -9.864068031311035
    8. '```' → logprob: -11.114068031311035
    9. ' answer' → logprob: -11.239068031311035
    10. '           ' → logprob: -11.239068031311035

Token 1029: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07903112471103668
    2. '=' → logprob: -2.579031229019165
    3. '   ' → logprob: -9.204030990600586
    4. '=(' → logprob: -10.829030990600586
    5. ')' → logprob: -11.954030990600586
    6. '(' → logprob: -12.704030990600586
    7. ' =(' → logprob: -12.829030990600586
    8. '```' → logprob: -13.079030990600586
    9. ' (' → logprob: -13.829030990600586
    10. '           ' → logprob: -13.829030990600586

Token 1030: ' prefix' (ID: 18633)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.06282759457826614
    2. ' (' → logprob: -2.8128275871276855
    3. 'prefix' → logprob: -7.1878275871276855
    4. ' prefix' → logprob: -9.312828063964844
    5. '(pref' → logprob: -12.562828063964844
    6. '   ' → logprob: -13.187828063964844
    7. '(' → logprob: -13.187828063964844
    8. ' ' → logprob: -13.687828063964844
    9. '(parent' → logprob: -14.062828063964844
    10. '(key' → logprob: -14.437828063964844

Token 1031: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.774276774493046e-05
    2. '_' → logprob: -10.375038146972656
    3. '```' → logprob: -13.000038146972656
    4. ''_' → logprob: -13.875038146972656
    5. '_(' → logprob: -13.875038146972656
    6. '_MOD' → logprob: -14.750038146972656
    7. ' _' → logprob: -14.875038146972656
    8. '`' → logprob: -15.000038146972656
    9. '[j' → logprob: -15.625038146972656
    10. ')_' → logprob: -15.875038146972656

Token 1032: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002675656694918871
    2. '[' → logprob: -6.002675533294678
    3. '[(' → logprob: -8.752676010131836
    4. '   ' → logprob: -10.502676010131836
    5. '```' → logprob: -12.002676010131836
    6. '[
' → logprob: -12.502676010131836
    7. ' [' → logprob: -13.752676010131836
    8. 'j' → logprob: -14.377676010131836
    9. '_j' → logprob: -14.877676010131836
    10. ',j' → logprob: -15.002676010131836

Token 1033: '+' (ID: 10)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5273157358169556
    2. '+' → logprob: -0.9023157358169556
    3. '[' → logprob: -6.152315616607666
    4. ']' → logprob: -7.027315616607666
    5. '[
' → logprob: -7.777315616607666
    6. '+j' → logprob: -8.527316093444824
    7. '   ' → logprob: -9.152316093444824
    8. ']+' → logprob: -9.277316093444824
    9. '```' → logprob: -9.402316093444824
    10. ' +' → logprob: -9.652316093444824

Token 1034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '
' → logprob: -12.250008583068848
    3. ' ' → logprob: -12.875008583068848
    4. '```' → logprob: -15.125008583068848
    5. '   ' → logprob: -15.750008583068848
    6. '+' → logprob: -15.875008583068848
    7. '`' → logprob: -16.87500762939453
    8. '{
' → logprob: -17.00000762939453
    9. '{' → logprob: -17.37500762939453
    10. '
' → logprob: -17.75000762939453

Token 1035: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20964519679546356
    2. ' *' → logprob: -2.0846452713012695
    3. '*' → logprob: -3.4596452713012695
    4. ')' → logprob: -4.5846452713012695
    5. ']*' → logprob: -4.7096452713012695
    6. '[j' → logprob: -5.3346452713012695
    7. '][' → logprob: -5.8346452713012695
    8. '
' → logprob: -6.8346452713012695
    9. '   ' → logprob: -6.8346452713012695
    10. ' ]' → logprob: -7.3346452713012695

Token 1036: 'inv' (ID: 31086)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6095277667045593
    2. 'inv' → logprob: -1.109527826309204
    3. '(inv' → logprob: -2.234527826309204
    4. '(pow' → logprob: -3.984527826309204
    5. '(' → logprob: -7.734527587890625
    6. ' (' → logprob: -8.234527587890625
    7. ' inv' → logprob: -8.734527587890625
    8. ' pow' → logprob: -9.609527587890625
    9. '(
' → logprob: -10.859527587890625
    10. '```' → logprob: -11.359527587890625

Token 1037: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.990154047845863e-05
    2. '(' → logprob: -10.250049591064453
    3. 'pow' → logprob: -11.625049591064453
    4. ' ' → logprob: -12.375049591064453
    5. '(pow' → logprob: -14.750049591064453
    6. '``' → logprob: -15.125049591064453
    7. ' pow' → logprob: -15.375049591064453
    8. '
' → logprob: -16.125049591064453
    9. '```' → logprob: -16.875049591064453
    10. '   ' → logprob: -16.875049591064453

Token 1038: '^{' (ID: 42923)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0003609680861700326
    2. '[' → logprob: -9.125361442565918
    3. '[{' → logprob: -9.500361442565918
    4. '^{' → logprob: -9.625361442565918
    5. '```' → logprob: -10.750361442565918
    6. '   ' → logprob: -10.750361442565918
    7. '**' → logprob: -10.875361442565918
    8. '[(' → logprob: -11.125361442565918
    9. '[
' → logprob: -11.750361442565918
    10. '^' → logprob: -12.125361442565918

Token 1039: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00024311232846230268
    2. '(' → logprob: -9.250243186950684
    3. ' (' → logprob: -9.250243186950684
    4. 'j' → logprob: -10.250243186950684
    5. '[j' → logprob: -11.875243186950684
    6. '((' → logprob: -12.750243186950684
    7. '{' → logprob: -12.875243186950684
    8. '(
' → logprob: -13.750243186950684
    9. '1' → logprob: -13.875243186950684
    10. '
' → logprob: -14.750243186950684

Token 1040: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.100059156073257e-05
    2. '1' → logprob: -10.375070571899414
    3. '```' → logprob: -11.500070571899414
    4. ' +' → logprob: -11.625070571899414
    5. '+
' → logprob: -12.500070571899414
    6. '   ' → logprob: -12.500070571899414
    7. ')' → logprob: -12.750070571899414
    8. '-' → logprob: -12.875070571899414
    9. '{' → logprob: -13.250070571899414
    10. '[j' → logprob: -13.375070571899414

Token 1041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030635111033916473
    2. '-' → logprob: -5.878063678741455
    3. '```' → logprob: -9.378063201904297
    4. '(-' → logprob: -9.503063201904297
    5. '(' → logprob: -9.753063201904297
    6. ' -' → logprob: -11.128063201904297
    7. '+' → logprob: -11.378063201904297
    8. ' ' → logprob: -12.253063201904297
    9. '
' → logprob: -12.378063201904297
    10. '`' → logprob: -13.628063201904297

Token 1042: '}' (ID: 92)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3573632836341858
    2. ']' → logprob: -1.357363224029541
    3. '   ' → logprob: -4.357363224029541
    4. ')%' → logprob: -4.607363224029541
    5. ']%' → logprob: -4.982363224029541
    6. '%' → logprob: -4.982363224029541
    7. ' %' → logprob: -5.857363224029541
    8. ' )' → logprob: -6.732363224029541
    9. '```' → logprob: -7.607363224029541
    10. ' ]' → logprob: -7.732363224029541

Token 1043: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15574997663497925
    2. ' =' → logprob: -2.780750036239624
    3. ')' → logprob: -3.030750036239624
    4. '=' → logprob: -4.405749797821045
    5. ']' → logprob: -5.405749797821045
    6. '
' → logprob: -5.780749797821045
    7. 'for' → logprob: -6.280749797821045
    8. ':' → logprob: -6.530749797821045
    9. ':
' → logprob: -6.655749797821045
    10. '```' → logprob: -6.780749797821045

Token 1044: ' ajoute' (ID: 91611)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.054104600101709366
    2. ' freq' → logprob: -3.8041045665740967
    3. 'count' → logprob: -4.054104804992676
    4. 'answer' → logprob: -5.179104804992676
    5. '```' → logprob: -5.554104804992676
    6. 'get' → logprob: -7.304104804992676
    7. '{
' → logprob: -7.554104804992676
    8. ' answer' → logprob: -7.804104804992676
    9. 'ans' → logprob: -8.179104804992676
    10. 'counts' → logprob: -8.304104804992676

Token 1045: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.19542555510997772
    2. '(freq' → logprob: -1.9454255104064941
    3. ' freq' → logprob: -3.445425510406494
    4. ' (' → logprob: -6.570425510406494
    5. '(key' → logprob: -7.695425510406494
    6. '(
' → logprob: -8.195425987243652
    7. 'key' → logprob: -8.570425987243652
    8. '(' → logprob: -9.195425987243652
    9. ' key' → logprob: -10.070425987243652
    10. '   ' → logprob: -10.445425987243652

Token 1046: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0037778629921376705
    2. '[' → logprob: -6.753777980804443
    3. '[
' → logprob: -7.503777980804443
    4. '   ' → logprob: -7.628777980804443
    5. 'key' → logprob: -7.753777980804443
    6. ' =' → logprob: -7.878777980804443
    7. '[(' → logprob: -8.503777503967285
    8. '_key' → logprob: -8.753777503967285
    9. '=' → logprob: -8.878777503967285
    10. '(key' → logprob: -9.253777503967285

Token 1047: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01679975911974907
    2. ']
' → logprob: -5.0167999267578125
    3. ')' → logprob: -5.3917999267578125
    4. ')]' → logprob: -5.7667999267578125
    5. ']+' → logprob: -6.6417999267578125
    6. '   ' → logprob: -7.7667999267578125
    7. '])' → logprob: -9.266799926757812
    8. ']+=' → logprob: -9.516799926757812
    9. ')
' → logprob: -9.766799926757812
    10. '[key' → logprob: -9.766799926757812

Token 1048: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0224399846047163
    2. ' =' → logprob: -4.397439956665039
    3. '=' → logprob: -5.647439956665039
    4. ':' → logprob: -6.647439956665039
    5. ':
' → logprob: -6.647439956665039
    6. '(' → logprob: -7.647439956665039
    7. '
' → logprob: -7.772439956665039
    8. '()' → logprob: -7.772439956665039
    9. ' for' → logprob: -7.897439956665039
    10. 'for' → logprob: -8.022439956665039

Token 1049: ' compteur' (ID: 163344)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -9.615255839889869e-05
    2. ' answer' → logprob: -9.250096321105957
    3. '=' → logprob: -17.00009536743164
    4. 'count' → logprob: -19.00009536743164
    5. '	answer' → logprob: -19.25009536743164
    6. '```' → logprob: -19.37509536743164
    7. '_answer' → logprob: -19.50009536743164
    8. 'response' → logprob: -19.75009536743164
    9. '(answer' → logprob: -20.25009536743164
    10. 'Answer' → logprob: -20.75009536743164

Token 1050: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013215292245149612
    2. ':' → logprob: -5.263215065002441
    3. 'for' → logprob: -5.388215065002441
    4. ':
' → logprob: -6.513215065002441
    5. ' for' → logprob: -7.263215065002441
    6. '(' → logprob: -8.263215065002441
    7. '=' → logprob: -8.388215065002441
    8. '
' → logprob: -8.763215065002441
    9. ' =' → logprob: -9.263215065002441
    10. ')' → logprob: -9.763215065002441

Token 1051: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6342254281044006
    2. '```' → logprob: -0.8842254281044006
    3. ' for' → logprob: -3.634225368499756
    4. 'for' → logprob: -4.259225368499756
    5. ':' → logprob: -4.384225368499756
    6. ':
' → logprob: -6.634225368499756
    7. '``' → logprob: -6.634225368499756
    8. '    
' → logprob: -9.009225845336914
    9. ' =' → logprob: -9.134225845336914
    10. '
' → logprob: -9.259225845336914

Token 1052: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8488933444023132
    2. 'for' (adapté à ' for') → logprob: -0.9738933444023132
    3. '
' → logprob: -1.973893404006958
    4. '```' → logprob: -3.223893404006958
    5. ' for' → logprob: -4.223893165588379
    6. '    
' → logprob: -8.223893165588379
    7. ':
' → logprob: -8.348893165588379
    8. ':' → logprob: -8.473893165588379
    9. '``' → logprob: -8.598893165588379
    10. '  
' → logprob: -9.348893165588379

Token 1053: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007666371297091246
    2. ' j' → logprob: -5.13266658782959
    3. 'i' → logprob: -6.38266658782959
    4. ' i' → logprob: -10.25766658782959
    5. '   ' → logprob: -11.63266658782959
    6. '_j' → logprob: -14.50766658782959
    7. '	j' → logprob: -15.25766658782959
    8. '       ' → logprob: -15.63266658782959
    9. ' ' → logprob: -15.75766658782959
    10. '0' → logprob: -16.257665634155273

Token 1054: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05497504770755768
    2. 'in' → logprob: -2.9299750328063965
    3. '0' → logprob: -9.929975509643555
    4. ' ' → logprob: -11.179975509643555
    5. '(' → logprob: -11.804975509643555
    6. '	in' → logprob: -11.804975509643555
    7. '=' → logprob: -12.804975509643555
    8. 'import' → logprob: -13.179975509643555
    9. ',' → logprob: -13.304975509643555
    10. '   ' → logprob: -13.429975509643555

Token 1055: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41410866379737854
    2. '0' → logprob: -1.2891086339950562
    3. ' range' → logprob: -2.7891087532043457
    4. ' ' → logprob: -6.789108753204346
    5. 'N' → logprob: -7.164108753204346
    6. '   ' → logprob: -9.789108276367188
    7. ' N' → logprob: -9.914108276367188
    8. '(range' → logprob: -10.914108276367188
    9. 'in' → logprob: -11.289108276367188
    10. '(N' → logprob: -11.789108276367188

Token 1056: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06882647424936295
    2. '(N' → logprob: -2.81882643699646
    3. '0' → logprob: -5.443826675415039
    4. '   ' → logprob: -6.443826675415039
    5. '(' → logprob: -7.443826675415039
    6. ' N' → logprob: -8.443826675415039
    7. ',' → logprob: -10.068826675415039
    8. ')' → logprob: -10.568826675415039
    9. '       ' → logprob: -11.318826675415039
    10. ',N' → logprob: -11.443826675415039

Token 1057: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21608375012874603
    2. '):
' → logprob: -2.4660837650299072
    3. '):' → logprob: -2.5910837650299072
    4. '   ' → logprob: -4.216083526611328
    5. '=' → logprob: -4.966083526611328
    6. ')' → logprob: -5.466083526611328
    7. ':' → logprob: -5.716083526611328
    8. ',' → logprob: -6.091083526611328
    9. ' +' → logprob: -7.216083526611328
    10. '0' → logprob: -7.716083526611328

Token 1058: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034476007567718625
    2. '+' → logprob: -9.125345230102539
    3. '0' → logprob: -9.500345230102539
    4. ' ' → logprob: -9.500345230102539
    5. '2' → logprob: -9.875345230102539
    6. '   ' → logprob: -11.000345230102539
    7. 'N' → logprob: -12.250345230102539
    8. '```' → logprob: -12.500345230102539
    9. ')' → logprob: -12.875345230102539
    10. 'import' → logprob: -14.125345230102539

Token 1059: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3914065957069397
    2. '):' → logprob: -1.266406536102295
    3. ':' → logprob: -3.391406536102295
    4. '   ' → logprob: -5.391406536102295
    5. ')' → logprob: -6.766406536102295
    6. ':
' → logprob: -7.141406536102295
    7. '=' → logprob: -7.516406536102295
    8. '       ' → logprob: -8.016407012939453
    9. '+' → logprob: -8.141407012939453
    10. '):
' → logprob: -8.891407012939453

Token 1060: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5898808836936951
    2. '       ' → logprob: -0.8398808836936951
    3. '<|end|>' → logprob: -5.33988094329834
    4. '```' → logprob: -5.71488094329834
    5. '[' → logprob: -6.33988094329834
    6. '	if' → logprob: -6.58988094329834
    7. ' if' → logprob: -8.21488094329834
    8. '	   ' → logprob: -8.33988094329834
    9. '{' → logprob: -8.33988094329834
    10. '        
' → logprob: -8.33988094329834

Token 1061: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020594794303178787
    2. 'if' (adapté à ' if') → logprob: -4.145594596862793
    3. ' if' → logprob: -5.895594596862793
    4. '       ' → logprob: -6.395594596862793
    5. '```' → logprob: -10.020594596862793
    6. 'a' → logprob: -10.145594596862793
    7. '	if' → logprob: -11.520594596862793
    8. 'i' → logprob: -11.645594596862793
    9. '   ' → logprob: -12.020594596862793
    10. '`' → logprob: -13.520594596862793

Token 1062: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005382588133215904
    2. ' i' → logprob: -7.625538349151611
    3. '   ' → logprob: -10.125537872314453
    4. 'a' → logprob: -11.750537872314453
    5. '(i' → logprob: -13.875537872314453
    6. '       ' → logprob: -15.250537872314453
    7. '	i' → logprob: -15.500537872314453
    8. '     ' → logprob: -15.875537872314453
    9. '    ' → logprob: -15.875537872314453
    10. ' ' → logprob: -15.875537872314453

Token 1063: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9116447567939758
    2. '==' → logprob: -1.536644697189331
    3. '>' → logprob: -1.661644697189331
    4. ' ==' → logprob: -1.786644697189331
    5. ' <' → logprob: -4.28664493560791
    6. ' and' → logprob: -5.66164493560791
    7. ' !=' → logprob: -6.41164493560791
    8. 'and' → logprob: -6.53664493560791
    9. '!=' → logprob: -6.78664493560791
    10. '<' → logprob: -7.16164493560791

Token 1064: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '=' → logprob: -15.625553131103516
    4. '1' → logprob: -17.250553131103516
    5. '<|end|>' → logprob: -18.750553131103516
    6. '   ' → logprob: -19.125553131103516
    7. '  ' → logprob: -20.000553131103516
    8. 'i' → logprob: -20.125553131103516
    9. '۰' → logprob: -20.250553131103516
    10. 'N' → logprob: -20.625553131103516

Token 1065: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.125003814697266
    3. '1' → logprob: -13.500003814697266
    4. 'i' → logprob: -14.250003814697266
    5. 'N' → logprob: -16.500003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '```' → logprob: -18.125003814697266
    8. '
' → logprob: -18.250003814697266
    9. '-' → logprob: -18.437503814697266
    10. '  ' → logprob: -18.937503814697266

Token 1066: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017167652025818825
    2. 'and' → logprob: -4.142167568206787
    3. '       ' → logprob: -7.017167568206787
    4. '           ' → logprob: -9.142168045043945
    5. '<|end|>' → logprob: -9.892168045043945
    6. '<|end|>' → logprob: -11.142168045043945
    7. ':
' → logprob: -11.267168045043945
    8. '	and' → logprob: -11.392168045043945
    9. '   ' → logprob: -11.392168045043945
    10. ':' → logprob: -11.642168045043945

Token 1067: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005530327325686812
    2. ' a' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.750553131103516
    4. '	a' → logprob: -17.125553131103516
    5. '(a' → logprob: -17.250553131103516
    6. '[a' → logprob: -20.000553131103516
    7. ' ' → logprob: -20.250553131103516
    8. '#a' → logprob: -20.250553131103516
    9. '```' → logprob: -20.750553131103516
    10. '_a' → logprob: -21.000553131103516

Token 1068: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.069664333248511e-05
    2. 'i' → logprob: -11.000020980834961
    3. '-' → logprob: -13.000020980834961
    4. '[' → logprob: -14.750020980834961
    5. '```' → logprob: -15.500020980834961
    6. '[
' → logprob: -15.750020980834961
    7. 'import' → logprob: -15.750020980834961
    8. '[-' → logprob: -15.750020980834961
    9. '[user' → logprob: -16.12502098083496
    10. 'a' → logprob: -16.25002098083496

Token 1069: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002111694193445146
    2. '[i' → logprob: -8.500210762023926
    3. '[' → logprob: -12.125210762023926
    4. ' -' → logprob: -14.250210762023926
    5. '[-' → logprob: -14.250210762023926
    6. '```' → logprob: -14.750210762023926
    7. 'i' → logprob: -16.000211715698242
    8. '-[' → logprob: -16.250211715698242
    9. '−' → logprob: -17.000211715698242
    10. '[
' → logprob: -17.125211715698242

Token 1070: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -15.125000953674316
    4. 'i' → logprob: -16.125001907348633
    5. '```' → logprob: -16.750001907348633
    6. '-' → logprob: -17.250001907348633
    7. '[i' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '(i' → logprob: -17.562501907348633
    10. '१' → logprob: -17.687501907348633

Token 1071: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43447229266166687
    2. ']==' → logprob: -1.6844723224639893
    3. ' ==' → logprob: -2.3094723224639893
    4. ']' → logprob: -3.0594723224639893
    5. '!=' → logprob: -4.30947208404541
    6. ']!=' → logprob: -5.55947208404541
    7. ' !=' → logprob: -5.93447208404541
    8. ')==' → logprob: -7.93447208404541
    9. ')' → logprob: -9.05947208404541
    10. '```' → logprob: -10.05947208404541

Token 1072: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6438331007957458
    2. '!=' → logprob: -0.7688331007957458
    3. ' ==' → logprob: -5.143833160400391
    4. ' !=' → logprob: -5.268833160400391
    5. '```' → logprob: -9.64383316040039
    6. ']==' → logprob: -10.26883316040039
    7. ']!=' → logprob: -10.51883316040039
    8. '()!=' → logprob: -11.26883316040039
    9. '[' → logprob: -11.89383316040039
    10. ')!=' → logprob: -12.39383316040039

Token 1073: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -9.875053405761719
    3. '1' → logprob: -13.250053405761719
    4. '=' → logprob: -15.750053405761719
    5. '<|end|>' → logprob: -17.50005340576172
    6. '>' → logprob: -18.12505340576172
    7. '```' → logprob: -18.50005340576172
    8. '۰' → logprob: -18.62505340576172
    9. '`' → logprob: -19.62505340576172
    10. ' ' → logprob: -19.81255340576172

Token 1074: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.000019073486328
    3. '1' → logprob: -13.125019073486328
    4. '=' → logprob: -16.750019073486328
    5. '۰' → logprob: -17.437519073486328
    6. '>' → logprob: -18.062519073486328
    7. '   ' → logprob: -18.312519073486328
    8. '<|end|>' → logprob: -18.437519073486328
    9. '```' → logprob: -19.000019073486328
    10. ' ' → logprob: -19.187519073486328

Token 1075: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13035649061203003
    2. '       ' → logprob: -3.005356550216675
    3. ':
' → logprob: -3.255356550216675
    4. ':' → logprob: -3.505356550216675
    5. ' continue' → logprob: -6.130356311798096
    6. 'continue' → logprob: -6.505356311798096
    7. '==' → logprob: -9.255356788635254
    8. ' continues' → logprob: -9.630356788635254
    9. '=' → logprob: -10.130356788635254
    10. '	continue' → logprob: -10.630356788635254

Token 1076: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29136207699775696
    2. '           ' → logprob: -1.5413620471954346
    3. 'continue' → logprob: -3.9163620471954346
    4. ' continue' → logprob: -4.041362285614014
    5. ':' → logprob: -7.791362285614014
    6. ':
' → logprob: -8.291361808776855
    7. '	continue' → logprob: -8.416361808776855
    8. '```' → logprob: -9.041361808776855
    9. ' continues' → logprob: -9.541361808776855
    10. '   ' → logprob: -9.916361808776855

Token 1077: ' key' (ID: 2140)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9297909736633301
    2. 'continue' → logprob: -1.17979097366333
    3. ' continue' → logprob: -1.42979097366333
    4. '           ' → logprob: -2.92979097366333
    5. '	continue' → logprob: -5.55479097366333
    6. '   ' → logprob: -6.80479097366333
    7. '	       ' → logprob: -9.054790496826172
    8. '	' → logprob: -9.429790496826172
    9. '```' → logprob: -10.679790496826172
    10. '	   ' → logprob: -11.054790496826172

Token 1078: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18251049518585205
    2. ' =' → logprob: -1.807510495185852
    3. 'continue' → logprob: -6.3075103759765625
    4. '           ' → logprob: -7.3075103759765625
    5. ' continue' → logprob: -9.432510375976562
    6. '=None' → logprob: -10.557510375976562
    7. '       ' → logprob: -10.557510375976562
    8. '   ' → logprob: -10.682510375976562
    9. ' ' → logprob: -10.807510375976562
    10. '	continue' → logprob: -11.307510375976562

Token 1079: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5236184597015381
    2. '(prefix' → logprob: -1.148618459701538
    3. '(None' → logprob: -3.523618459701538
    4. '(key' → logprob: -3.898618459701538
    5. '0' → logprob: -4.148618698120117
    6. 'None' → logprob: -4.398618698120117
    7. ' None' → logprob: -4.898618698120117
    8. '(' → logprob: -6.148618698120117
    9. 'prefix' → logprob: -6.648618698120117
    10. 'key' → logprob: -7.648618698120117

Token 1080: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6947183012962341
    2. '(prefix' → logprob: -0.6947183012962341
    3. ' prefix' → logprob: -6.944718360900879
    4. ' (' → logprob: -8.194718360900879
    5. 'key' → logprob: -9.069718360900879
    6. '(key' → logprob: -9.694718360900879
    7. 'freq' → logprob: -9.819718360900879
    8. '(freq' → logprob: -11.069718360900879
    9. '(' → logprob: -11.444718360900879
    10. 'frequency' → logprob: -11.569718360900879

Token 1081: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00020520923135336488
    2. 'mod' → logprob: -8.500205039978027
    3. 'prefix' → logprob: -13.875205039978027
    4. '[i' → logprob: -15.375205039978027
    5. '_MOD' → logprob: -15.875205039978027
    6. 'i' → logprob: -16.125205993652344
    7. '_prefix' → logprob: -17.000205993652344
    8. '(i' → logprob: -17.125205993652344
    9. 'mods' → logprob: -17.125205993652344
    10. '```' → logprob: -17.125205993652344

Token 1082: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.551721889991313e-05
    2. '[j' → logprob: -10.125065803527832
    3. 'i' → logprob: -10.750065803527832
    4. '[key' → logprob: -13.750065803527832
    5. '[' → logprob: -13.875065803527832
    6. '```' → logprob: -14.500065803527832
    7. '{i' → logprob: -14.875065803527832
    8. ')' → logprob: -15.500065803527832
    9. '   ' → logprob: -15.625065803527832
    10. '[(' → logprob: -15.750065803527832

Token 1083: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0491243414580822
    2. '*' → logprob: -3.049124240875244
    3. ')' → logprob: -8.174124717712402
    4. '-' → logprob: -9.549124717712402
    5. ' -' → logprob: -9.799124717712402
    6. '       ' → logprob: -10.049124717712402
    7. '        ' → logprob: -11.049124717712402
    8. '```' → logprob: -11.299124717712402
    9. '+' → logprob: -11.424124717712402
    10. '   ' → logprob: -11.549124717712402

Token 1084: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0003490514063742012
    2. ' pow' → logprob: -8.125349044799805
    3. '(pow' → logprob: -9.875349044799805
    4. '1' → logprob: -15.125349044799805
    5. '```' → logprob: -15.250349044799805
    6. 'mod' → logprob: -15.625349044799805
    7. ' ' → logprob: -16.125349044799805
    8. '(' → logprob: -16.250349044799805
    9. '_pow' → logprob: -16.500349044799805
    10. '.pow' → logprob: -16.625349044799805

Token 1085: '(inv' (ID: 107330)
  Prédit: '(inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.00014287306112237275
    2. 'inv' → logprob: -9.125143051147461
    3. '(' → logprob: -10.375143051147461
    4. ' (' → logprob: -14.125143051147461
    5. '10' → logprob: -14.250143051147461
    6. '(
' → logprob: -14.375143051147461
    7. '```' → logprob: -15.625143051147461
    8. ' inv' → logprob: -16.37514305114746
    9. '(iv' → logprob: -16.50014305114746
    10. '(i' → logprob: -16.87514305114746

Token 1086: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018188223242759705
    2. '(' → logprob: -4.018187999725342
    3. '(inv' → logprob: -10.2681884765625
    4. '```' → logprob: -14.0181884765625
    5. ' ' → logprob: -14.2681884765625
    6. ' (' → logprob: -14.2681884765625
    7. 'inv' → logprob: -14.6431884765625
    8. '(i' → logprob: -15.3931884765625
    9. '[' → logprob: -15.7681884765625
    10. '(in' → logprob: -15.7681884765625

Token 1087: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07380913197994232
    2. ',i' → logprob: -2.6988091468811035
    3. '(i' → logprob: -5.8238091468811035
    4. ' ,' → logprob: -8.448808670043945
    5. '(' → logprob: -8.698808670043945
    6. '(-' → logprob: -8.948808670043945
    7. ',(' → logprob: -8.948808670043945
    8. '{i' → logprob: -9.448808670043945
    9. 'i' → logprob: -9.573808670043945
    10. '```' → logprob: -10.198808670043945

Token 1088: ',Q' (ID: 130136)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007727179676294327
    2. ',Q' → logprob: -5.382727146148682
    3. '-' → logprob: -6.132727146148682
    4. ' ,' → logprob: -8.13272762298584
    5. '%' → logprob: -8.25772762298584
    6. ' -' → logprob: -9.38272762298584
    7. '           ' → logprob: -9.63272762298584
    8. ',i' → logprob: -9.75772762298584
    9. ',-' → logprob: -10.13272762298584
    10. '```' → logprob: -10.50772762298584

Token 1089: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019036511657759547
    2. ')%' → logprob: -6.376903533935547
    3. ' )' → logprob: -9.001903533935547
    4. '-' → logprob: -10.376903533935547
    5. '```' → logprob: -11.626903533935547
    6. ' -' → logprob: -11.626903533935547
    7. '       ' → logprob: -11.751903533935547
    8. '-)' → logprob: -12.251903533935547
    9. '           ' → logprob: -12.376903533935547
    10. '))' → logprob: -13.126903533935547

Token 1090: '%' (ID: 4)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2568073868751526
    2. 'continue' → logprob: -2.381807327270508
    3. '%' → logprob: -3.006807327270508
    4. ' continue' → logprob: -3.381807327270508
    5. '       ' → logprob: -3.756807327270508
    6. ' %' → logprob: -4.881807327270508
    7. ';' → logprob: -5.506807327270508
    8. '-' → logprob: -5.631807327270508
    9. ' -' → logprob: -6.381807327270508
    10. '	continue' → logprob: -6.506807327270508

Token 1091: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -4.961759259458631e-06
    2. ' Q' → logprob: -12.250004768371582
    3. '```' → logprob: -17.1250057220459
    4. '(Q' → logprob: -17.8750057220459
    5. '_Q' → logprob: -19.0000057220459
    6. '10' → logprob: -19.0000057220459
    7. '	Q' → logprob: -19.1250057220459
    8. '   ' → logprob: -19.2500057220459
    9. 'key' → logprob: -20.0000057220459
    10. 'i' → logprob: -20.1250057220459

Token 1092: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04013928771018982
    2. 'continue' → logprob: -3.7901391983032227
    3. '       ' → logprob: -4.415139198303223
    4. ' continue' → logprob: -5.415139198303223
    5. '	continue' → logprob: -9.290139198303223
    6. '   ' → logprob: -10.165139198303223
    7. '	       ' → logprob: -10.915139198303223
    8. '=' → logprob: -11.165139198303223
    9. 'contin' → logprob: -11.790139198303223
    10. '<|end|>' → logprob: -12.040139198303223

Token 1093: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08586978912353516
    2. 'continue' → logprob: -2.585869789123535
    3. '```' → logprob: -5.710869789123535
    4. '       ' → logprob: -5.835869789123535
    5. ' continue' → logprob: -7.710869789123535
    6. '   ' → logprob: -8.460869789123535
    7. '	continue' → logprob: -10.335869789123535
    8. 'contin' → logprob: -11.710869789123535
    9. '_continue' → logprob: -11.835869789123535
    10. '``' → logprob: -12.335869789123535

Token 1094: ' answer' (ID: 6052)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.019450625404715538
    2. '           ' → logprob: -4.019450664520264
    3. ' continue' → logprob: -7.269450664520264
    4. '       ' → logprob: -7.519450664520264
    5. '```' → logprob: -10.269450187683105
    6. 'freq' → logprob: -11.394450187683105
    7. '	continue' → logprob: -12.019450187683105
    8. '   ' → logprob: -12.019450187683105
    9. 'continu' → logprob: -13.894450187683105
    10. 'contin' → logprob: -14.269450187683105

Token 1095: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.2772727906703949
    2. ' -=' → logprob: -2.0272727012634277
    3. '+=' → logprob: -2.2772727012634277
    4. '-' → logprob: -5.652272701263428
    5. ' +=' → logprob: -5.777272701263428
    6. '           ' → logprob: -7.027272701263428
    7. '=' → logprob: -8.652273178100586
    8. '```' → logprob: -9.152273178100586
    9. '   ' → logprob: -10.152273178100586
    10. '       ' → logprob: -10.152273178100586

Token 1096: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.0003718046355061233
    2. ' freq' → logprob: -8.000371932983398
    3. '0' → logprob: -10.250371932983398
    4. '(freq' → logprob: -13.875371932983398
    5. 'fre' → logprob: -17.0003719329834
    6. 'frequency' → logprob: -17.2503719329834
    7. '_freq' → logprob: -17.8753719329834
    8. ' ' → logprob: -17.8753719329834
    9. '(' → logprob: -18.3753719329834
    10. '   ' → logprob: -18.7503719329834

Token 1097: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.1756367712223437e-05
    2. 'get' → logprob: -11.500011444091797
    3. '.' → logprob: -14.000011444091797
    4. ' .' → logprob: -14.500011444091797
    5. '[key' → logprob: -15.250011444091797
    6. '(key' → logprob: -18.375011444091797
    7. '_get' → logprob: -18.375011444091797
    8. '.setdefault' → logprob: -19.750011444091797
    9. 'key' → logprob: -20.250011444091797
    10. '```' → logprob: -21.250011444091797

Token 1098: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00012368128227535635
    2. 'key' → logprob: -9.000123977661133
    3. '[key' → logprob: -16.250123977661133
    4. '(
' → logprob: -16.250123977661133
    5. '(' → logprob: -17.125123977661133
    6. ' key' → logprob: -18.000123977661133
    7. ',key' → logprob: -18.875123977661133
    8. ' (' → logprob: -19.750123977661133
    9. '```' → logprob: -20.125123977661133
    10. '((' → logprob: -20.625123977661133

Token 1099: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41774633526802063
    2. '(' → logprob: -1.1677463054656982
    3. '(
' → logprob: -4.542746543884277
    4. '(key' → logprob: -4.792746543884277
    5. ' (' → logprob: -5.417746543884277
    6. ')' → logprob: -5.917746543884277
    7. ' ,' → logprob: -6.667746543884277
    8. '           ' → logprob: -7.542746543884277
    9. ',key' → logprob: -7.667746543884277
    10. '((' → logprob: -7.792746543884277

Token 1100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004678497789427638
    2. ' ' → logprob: -7.750467777252197
    3. 'freq' → logprob: -10.375468254089355
    4. 'key' → logprob: -12.750468254089355
    5. ')' → logprob: -13.250468254089355
    6. ' freq' → logprob: -14.750468254089355
    7. '```' → logprob: -15.500468254089355
    8. '1' → logprob: -15.500468254089355
    9. ' key' → logprob: -15.875468254089355
    10. '           ' → logprob: -16.12546730041504

Token 1101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2539331018924713
    2. '<|end|>' → logprob: -1.628933072090149
    3. '       ' → logprob: -3.8789331912994385
    4. ']' → logprob: -6.378932952880859
    5. '<|end|>' → logprob: -6.503932952880859
    6. '```' → logprob: -7.128932952880859
    7. ')
' → logprob: -7.253932952880859
    8. '           ' → logprob: -7.253932952880859
    9. '
' → logprob: -7.503932952880859
    10. ' )' → logprob: -8.00393295288086

Token 1102: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.540270209312439
    2. '       ' → logprob: -0.915270209312439
    3. 'continue' → logprob: -4.9152703285217285
    4. '   ' → logprob: -5.4152703285217285
    5. 'else' → logprob: -5.5402703285217285
    6. ' continue' → logprob: -7.7902703285217285
    7. '``' → logprob: -8.04026985168457
    8. '<|end|>' → logprob: -8.79026985168457
    9. '	continue' → logprob: -8.91526985168457
    10. '           ' → logprob: -9.29026985168457

Token 1103: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.014974377118051052
    2. '       ' → logprob: -4.889974594116211
    3. '```' → logprob: -5.639974594116211
    4. ' else' → logprob: -6.639974594116211
    5. '   ' → logprob: -6.639974594116211
    6. 'continue' → logprob: -6.764974594116211
    7. 'elif' → logprob: -12.264974594116211
    8. '           ' → logprob: -12.639974594116211
    9. ' continue' → logprob: -12.764974594116211
    10. '``' → logprob: -13.139974594116211

Token 1104: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1474599838256836
    2. 'freq' → logprob: -2.1474599838256836
    3. '       ' → logprob: -4.522459983825684
    4. ' freq' → logprob: -5.397459983825684
    5. 'key' → logprob: -5.647459983825684
    6. ' key' → logprob: -7.647459983825684
    7. '```' → logprob: -7.647459983825684
    8. '   ' → logprob: -8.272459983825684
    9. ':' → logprob: -10.272459983825684
    10. '{
' → logprob: -10.647459983825684

Token 1105: '           ' (ID: 352)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.35661032795906067
    2. '       ' → logprob: -1.6066102981567383
    3. '           ' → logprob: -3.1066102981567383
    4. ' freq' → logprob: -3.7316102981567383
    5. 'key' → logprob: -3.8566102981567383
    6. ' key' → logprob: -4.981610298156738
    7. '   ' → logprob: -6.106610298156738
    8. '```' → logprob: -8.106610298156738
    9. '_freq' → logprob: -10.731610298156738
    10. '+' → logprob: -10.856610298156738

Token 1106: ' key' (ID: 2140)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.20240356028079987
    2. 'key' (adapté à ' key') → logprob: -1.7024035453796387
    3. 'if' → logprob: -7.202403545379639
    4. '           ' → logprob: -9.077404022216797
    5. '       ' → logprob: -9.327404022216797
    6. '   ' → logprob: -11.077404022216797
    7. ' freq' → logprob: -11.077404022216797
    8. 'k' → logprob: -12.702404022216797
    9. ' key' → logprob: -13.452404022216797
    10. 'frequency' → logprob: -14.452404022216797

Token 1107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042064756155014
    2. ' =' → logprob: -3.2880420684814453
    3. '=(' → logprob: -15.163042068481445
    4. '=
' → logprob: -15.413042068481445
    5. ' =(' → logprob: -17.663042068481445
    6. ')' → logprob: -17.788042068481445
    7. '=

' → logprob: -18.288042068481445
    8. '```' → logprob: -18.288042068481445
    9. '=}' → logprob: -18.413042068481445
    10. '＝' → logprob: -18.538042068481445

Token 1108: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5760720372200012
    2. '(prefix' → logprob: -0.8260720372200012
    3. '(freq' → logprob: -9.326071739196777
    4. '(pref' → logprob: -10.201071739196777
    5. 'prefix' → logprob: -13.451071739196777
    6. '(pow' → logprob: -14.201071739196777
    7. '(prompt' → logprob: -14.326071739196777
    8. ' prefix' → logprob: -14.576071739196777
    9. '(pop' → logprob: -14.701071739196777
    10. '(pred' → logprob: -14.826071739196777

Token 1109: 'prefix' (ID: 26155)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0005674490821547806
    2. 'prefix' → logprob: -7.500567436218262
    3. ' (' → logprob: -11.250567436218262
    4. '(pref' → logprob: -14.375567436218262
    5. '(freq' → logprob: -15.125567436218262
    6. '(key' → logprob: -15.500567436218262
    7. '(prompt' → logprob: -15.750567436218262
    8. ' prefix' → logprob: -16.125568389892578
    9. '(parent' → logprob: -16.750568389892578
    10. '(priority' → logprob: -17.125568389892578

Token 1110: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.11534805595874786
    2. '(prefix' → logprob: -2.2403481006622314
    3. 'prefix' → logprob: -6.115347862243652
    4. 'mod' → logprob: -8.990347862243652
    5. '[(' → logprob: -10.240347862243652
    6. ' (' → logprob: -10.490347862243652
    7. '[p' → logprob: -10.615347862243652
    8. '_prefix' → logprob: -11.115347862243652
    9. '[key' → logprob: -11.240347862243652
    10. '(i' → logprob: -11.490347862243652

Token 1111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002506101271137595
    2. '[key' → logprob: -6.002506256103516
    3. '[(' → logprob: -10.877506256103516
    4. '(i' → logprob: -11.877506256103516
    5. '[' → logprob: -12.877506256103516
    6. 'i' → logprob: -14.252506256103516
    7. '```' → logprob: -14.752506256103516
    8. '(key' → logprob: -14.877506256103516
    9. '[j' → logprob: -15.752506256103516
    10. 'key' → logprob: -15.752506256103516

Token 1112: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25656217336654663
    2. ' *' → logprob: -1.5065622329711914
    3. ')' → logprob: -6.381562232971191
    4. '[key' → logprob: -7.131562232971191
    5. ']*' → logprob: -7.131562232971191
    6. ')*' → logprob: -7.256562232971191
    7. ']' → logprob: -7.756562232971191
    8. '(key' → logprob: -10.006562232971191
    9. '```' → logprob: -10.381562232971191
    10. '[' → logprob: -11.131562232971191

Token 1113: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.512236498361744e-07
    2. '(pow' → logprob: -14.750000953674316
    3. ' pow' → logprob: -16.375
    4. 'inv' → logprob: -17.75
    5. '```' → logprob: -19.375
    6. '.pow' → logprob: -20.0
    7. 'freq' → logprob: -20.875
    8. '1' → logprob: -21.125
    9. '_pow' → logprob: -21.125
    10. '
' → logprob: -21.75

Token 1114: '(inv' (ID: 107330)
  Prédit: '(inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -2.7729658540920354e-05
    2. 'inv' → logprob: -10.500027656555176
    3. '(key' → logprob: -16.250028610229492
    4. '(pow' → logprob: -17.000028610229492
    5. '```' → logprob: -17.500028610229492
    6. '(' → logprob: -17.500028610229492
    7. 'key' → logprob: -18.250028610229492
    8. '(in' → logprob: -18.500028610229492
    9. ' (' → logprob: -19.125028610229492
    10. ' inv' → logprob: -19.375028610229492

Token 1115: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6207587122917175
    2. 'inv' → logprob: -1.2457587718963623
    3. '(inv' → logprob: -1.7457587718963623
    4. '(' → logprob: -9.245759010314941
    5. '```' → logprob: -10.495759010314941
    6. 'int' → logprob: -10.745759010314941
    7. '(-' → logprob: -10.870759010314941
    8. '_inv' → logprob: -10.870759010314941
    9. '``' → logprob: -11.370759010314941
    10. ' inv' → logprob: -11.745759010314941

Token 1116: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.0009188431431539357
    2. 'i' → logprob: -7.750918865203857
    3. ',' → logprob: -7.875918865203857
    4. '(i' → logprob: -9.5009183883667
    5. '[i' → logprob: -10.6259183883667
    6. ' ,' → logprob: -12.1259183883667
    7. '```' → logprob: -12.8759183883667
    8. '{i' → logprob: -14.7509183883667
    9. '_i' → logprob: -15.8759183883667
    10. ' i' → logprob: -16.000919342041016

Token 1117: ',Q' (ID: 130136)
  Prédit: ',Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Q' → logprob: -0.001709209755063057
    2. ',' → logprob: -6.376708984375
    3. ' ,' → logprob: -12.626708984375
    4. '%' → logprob: -12.751708984375
    5. ',%' → logprob: -15.751708984375
    6. '%,' → logprob: -15.876708984375
    7. ')%' → logprob: -16.001708984375
    8. '```' → logprob: -16.126708984375
    9. '[' → logprob: -16.376708984375
    10. '   ' → logprob: -16.876708984375

Token 1118: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789840817451477
    2. ')%' → logprob: -2.578984022140503
    3. '```' → logprob: -10.703984260559082
    4. ')]' → logprob: -10.828984260559082
    5. '))' → logprob: -11.328984260559082
    6. ')
' → logprob: -11.703984260559082
    7. ')+' → logprob: -12.203984260559082
    8. ')])' → logprob: -12.328984260559082
    9. ']%' → logprob: -12.703984260559082
    10. '])' → logprob: -12.828984260559082

Token 1119: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9519250392913818
    2. 'freq' → logprob: -1.4519250392913818
    3. 'answer' → logprob: -1.8269250392913818
    4. '=' → logprob: -2.576925039291382
    5. ')' → logprob: -2.951925039291382
    6. '
' → logprob: -3.076925039291382
    7. '+=' → logprob: -3.951925039291382
    8. '           ' → logprob: -5.326925277709961
    9. '%=' → logprob: -5.451925277709961
    10. ')%' → logprob: -5.576925277709961

Token 1120: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: 0.0
    2. ' Q' → logprob: -17.75
    3. 'key' → logprob: -18.25
    4. 'freq' → logprob: -20.625
    5. '	Q' → logprob: -21.125
    6. '(Q' → logprob: -21.375
    7. '_Q' → logprob: -21.75
    8. '-Q' → logprob: -22.0
    9. 'K' → logprob: -22.25
    10. '```' → logprob: -22.75

Token 1121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44645607471466064
    2. 'freq' → logprob: -1.1964560747146606
    3. ' freq' → logprob: -3.446455955505371
    4. '   ' → logprob: -4.196455955505371
    5. '```' → logprob: -4.821455955505371
    6. '           ' → logprob: -6.196455955505371
    7. '(freq' → logprob: -8.071455955505371
    8. '        
' → logprob: -8.946455955505371
    9. '_freq' → logprob: -9.071455955505371
    10. 'frequency' → logprob: -9.821455955505371

Token 1122: '           ' (ID: 352)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.0483279712498188
    2. '       ' → logprob: -4.048327922821045
    3. '```' → logprob: -4.048327922821045
    4. ' freq' → logprob: -5.548327922821045
    5. '   ' → logprob: -5.923327922821045
    6. '           ' → logprob: -6.423327922821045
    7. ':' → logprob: -6.548327922821045
    8. '(freq' → logprob: -7.298327922821045
    9. ':
' → logprob: -7.423327922821045
    10. '[' → logprob: -8.048328399658203

Token 1123: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -1.7954958821064793e-05
    2. 'answer' → logprob: -11.250018119812012
    3. 'if' → logprob: -12.375018119812012
    4. '   ' → logprob: -15.250018119812012
    5. ' freq' → logprob: -15.500018119812012
    6. 'frequency' → logprob: -17.125017166137695
    7. 'for' → logprob: -17.250017166137695
    8. '       ' → logprob: -17.375017166137695
    9. '
' → logprob: -17.625017166137695
    10. '```' → logprob: -18.000017166137695

Token 1124: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0003544118662830442
    2. 'key' → logprob: -8.000354766845703
    3. '[' → logprob: -11.000354766845703
    4. '```' → logprob: -13.125354766845703
    5. '[
' → logprob: -15.750354766845703
    6. '[(' → logprob: -15.750354766845703
    7. '=' → logprob: -16.875354766845703
    8. 'freq' → logprob: -18.125354766845703
    9. '(key' → logprob: -18.250354766845703
    10. ' key' → logprob: -18.500354766845703

Token 1125: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000784495088737458
    2. ' =' → logprob: -7.500784397125244
    3. '+=' → logprob: -8.375784873962402
    4. ' +=' → logprob: -14.375784873962402
    5. '=f' → logprob: -15.625784873962402
    6. ']+=' → logprob: -16.000783920288086
    7. ']' → logprob: -16.125783920288086
    8. ']=' → logprob: -16.375783920288086
    9. '=count' → logprob: -17.250783920288086
    10. ')' → logprob: -18.125783920288086

Token 1126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03807638958096504
    2. '+=' → logprob: -3.288076400756836
    3. ' =' → logprob: -10.913076400756836
    4. ' +=' → logprob: -11.038076400756836
    5. '```' → logprob: -14.913076400756836
    6. ']+=' → logprob: -15.913076400756836
    7. '-=' → logprob: -16.413076400756836
    8. '           ' → logprob: -17.038076400756836
    9. '=f' → logprob: -17.538076400756836
    10. '       ' → logprob: -17.913076400756836

Token 1127: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -9.639096970204264e-05
    2. ' freq' → logprob: -9.250096321105957
    3. '(freq' → logprob: -15.625096321105957
    4. 'fre' → logprob: -16.875097274780273
    5. 'frequency' → logprob: -17.125097274780273
    6. '1' → logprob: -17.625097274780273
    7. '.freq' → logprob: -19.750097274780273
    8. '_freq' → logprob: -20.125097274780273
    9. '```' → logprob: -20.125097274780273
    10. 'fq' → logprob: -21.125097274780273

Token 1128: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00024168188974726945
    2. 'get' → logprob: -8.37524127960205
    3. 'freq' → logprob: -11.50024127960205
    4. '.' → logprob: -14.87524127960205
    5. '```' → logprob: -15.37524127960205
    6. '1' → logprob: -16.000242233276367
    7. ' .' → logprob: -16.125242233276367
    8. '[i' → logprob: -16.500242233276367
    9. '.setdefault' → logprob: -17.500242233276367
    10. 'f' → logprob: -17.625242233276367

Token 1129: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.011979619972407818
    2. 'freq' → logprob: -4.636979579925537
    3. '(freq' → logprob: -6.761979579925537
    4. 'key' → logprob: -7.011979579925537
    5. '[key' → logprob: -8.761980056762695
    6. '```' → logprob: -12.886980056762695
    7. 'frequency' → logprob: -13.636980056762695
    8. ',key' → logprob: -13.761980056762695
    9. '0' → logprob: -14.886980056762695
    10. '_freq' → logprob: -15.011980056762695

Token 1130: ',' (ID: 11)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10185042023658752
    2. '(key' → logprob: -2.3518505096435547
    3. '[key' → logprob: -6.976850509643555
    4. ' key' → logprob: -8.101850509643555
    5. ',key' → logprob: -8.101850509643555
    6. '```' → logprob: -9.601850509643555
    7. '+' → logprob: -10.726850509643555
    8. ',' → logprob: -12.101850509643555
    9. '$key' → logprob: -13.351850509643555
    10. '	key' → logprob: -13.726850509643555

Token 1131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'i' → logprob: -15.750000953674316
    4. '1' → logprob: -18.375
    5. 'key' → logprob: -18.375
    6. '(i' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '   ' → logprob: -19.75
    9. '
' → logprob: -20.25
    10. '(' → logprob: -20.25

Token 1132: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026392726227641106
    2. ' +' → logprob: -3.651392698287964
    3. ')+' → logprob: -10.651392936706543
    4. ']+' → logprob: -11.026392936706543
    5. '```' → logprob: -11.026392936706543
    6. ')' → logprob: -11.276392936706543
    7. '()+' → logprob: -11.401392936706543
    8. '1' → logprob: -12.901392936706543
    9. '+=' → logprob: -13.026392936706543
    10. ']' → logprob: -13.526392936706543

Token 1133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' ' → logprob: -18.625
    4. '   ' → logprob: -21.125
    5. '0' → logprob: -21.375
    6. '+' → logprob: -21.75
    7. '
' → logprob: -23.5
    8. '`' → logprob: -23.875
    9. '       ' → logprob: -24.0
    10. '{
' → logprob: -24.125

Token 1134: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1135: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1136: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1137: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931537985801697
    2. ' i' → logprob: -0.6931537985801697
    3. '(i' → logprob: -12.818153381347656
    4. '   ' → logprob: -12.943153381347656
    5. ' ' → logprob: -15.193153381347656
    6. ' (' → logprob: -15.193153381347656
    7. ' key' → logprob: -15.443153381347656
    8. '	i' → logprob: -15.693153381347656
    9. ' ' → logprob: -16.318153381347656
    10. '0' → logprob: -16.443153381347656

Token 1138: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08540374040603638
    2. '<' → logprob: -2.7104036808013916
    3. ' ==' → logprob: -5.460403919219971
    4. '<len' → logprob: -5.585403919219971
    5. '>' → logprob: -5.960403919219971
    6. '==' → logprob: -6.210403919219971
    7. ' >' → logprob: -7.335403919219971
    8. ' !=' → logprob: -7.585403919219971
    9. '<n' → logprob: -8.085403442382812
    10. '<size' → logprob: -8.335403442382812

Token 1139: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.696889623621246e-06
    2. ' N' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.125001907348633
    4. '```' → logprob: -18.750001907348633
    5. '	N' → logprob: -19.500001907348633
    6. '(N' → logprob: -20.000001907348633
    7. 'n' → logprob: -21.625001907348633
    8. 'len' → logprob: -21.625001907348633
    9. ' ' → logprob: -22.000001907348633
    10. '
' → logprob: -22.250001907348633

Token 1140: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5932642221450806
    2. ':' → logprob: -0.9682642221450806
    3. ' and' → logprob: -2.968264102935791
    4. '```' → logprob: -5.218264102935791
    5. '   ' → logprob: -5.468264102935791
    6. '       ' → logprob: -6.093264102935791
    7. 'and' → logprob: -6.593264102935791
    8. '):
' → logprob: -7.343264102935791
    9. ' :' → logprob: -7.718264102935791
    10. '+' → logprob: -7.843264102935791

Token 1141: '               ' (ID: 506)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -1.0975465774536133
    2. '               ' → logprob: -1.4725465774536133
    3. 'key' → logprob: -1.4725465774536133
    4. '       ' → logprob: -1.7225465774536133
    5. '```' → logprob: -3.7225465774536133
    6. '           ' → logprob: -6.097546577453613
    7. '	key' → logprob: -7.597546577453613
    8. '   ' → logprob: -7.722546577453613
    9. '<|end|>' → logprob: -8.472546577453613
    10. '``' → logprob: -8.472546577453613

Token 1142: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.006864082533866167
    2. 'if' → logprob: -5.131864070892334
    3. 'pass' → logprob: -8.381864547729492
    4. 'continue' → logprob: -8.506864547729492
    5. ' key' → logprob: -8.756864547729492
    6. 'j' → logprob: -9.131864547729492
    7. '           ' → logprob: -9.381864547729492
    8. '   ' → logprob: -9.506864547729492
    9. '```' → logprob: -10.006864547729492
    10. 'k' → logprob: -11.381864547729492

Token 1143: '_next' (ID: 25436)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932742595672607
    2. ' =' → logprob: -0.6932742595672607
    3. '=(' → logprob: -9.19327449798584
    4. '_' → logprob: -12.44327449798584
    5. '_key' → logprob: -12.81827449798584
    6. '_next' → logprob: -13.06827449798584
    7. 'j' → logprob: -13.06827449798584
    8. '_val' → logprob: -13.19327449798584
    9. ' =(' → logprob: -13.56827449798584
    10. '2' → logprob: -13.69327449798584

Token 1144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020806640386581
    2. '=' → logprob: -2.350208044052124
    3. '=(' → logprob: -14.350208282470703
    4. ')' → logprob: -15.225208282470703
    5. '```' → logprob: -15.225208282470703
    6. ' =(' → logprob: -15.600208282470703
    7. ' ' → logprob: -16.350208282470703
    8. ',' → logprob: -17.850208282470703
    9. ']' → logprob: -17.975208282470703
    10. '=((' → logprob: -18.225208282470703

Token 1145: ' (' (ID: 350)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.16034699976444244
    2. ' (' → logprob: -1.9103469848632812
    3. '(pref' → logprob: -9.410346984863281
    4. '(key' → logprob: -11.785346984863281
    5. '(' → logprob: -11.785346984863281
    6. '(p' → logprob: -12.535346984863281
    7. '(pred' → logprob: -12.910346984863281
    8. '(payload' → logprob: -13.035346984863281
    9. '(pass' → logprob: -13.035346984863281
    10. '(pow' → logprob: -13.160346984863281

Token 1146: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5760692954063416
    2. '(prefix' → logprob: -0.8260692954063416
    3. ' prefix' → logprob: -9.201068878173828
    4. ' (' → logprob: -10.826068878173828
    5. '(pref' → logprob: -13.076068878173828
    6. 'pref' → logprob: -13.701068878173828
    7. '_prefix' → logprob: -13.701068878173828
    8. '-prefix' → logprob: -14.201068878173828
    9. '(p' → logprob: -14.451068878173828
    10. 'PREFIX' → logprob: -14.451068878173828

Token 1147: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.696889623621246e-06
    2. 'mod' → logprob: -13.37500286102295
    3. '[i' → logprob: -14.62500286102295
    4. '_prefix' → logprob: -15.50000286102295
    5. '_MOD' → logprob: -15.87500286102295
    6. '[' → logprob: -16.375001907348633
    7. '_(' → logprob: -16.875001907348633
    8. '_[' → logprob: -17.000001907348633
    9. '(i' → logprob: -17.750001907348633
    10. '_prom' → logprob: -17.750001907348633

Token 1148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014931005716789514
    2. '[j' → logprob: -8.875149726867676
    3. 'i' → logprob: -11.750149726867676
    4. '[' → logprob: -13.750149726867676
    5. '{i' → logprob: -15.875149726867676
    6. '(i' → logprob: -16.37514877319336
    7. '```' → logprob: -16.62514877319336
    8. '[I' → logprob: -18.00014877319336
    9. ')i' → logprob: -18.37514877319336
    10. 'j' → logprob: -18.37514877319336

Token 1149: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009960890747606754
    2. '[i' → logprob: -4.634961128234863
    3. '[' → logprob: -9.759961128234863
    4. '```' → logprob: -9.884961128234863
    5. ' +' → logprob: -10.259961128234863
    6. '+i' → logprob: -10.384961128234863
    7. '   ' → logprob: -11.509961128234863
    8. '[j' → logprob: -11.759961128234863
    9. 'i' → logprob: -12.634961128234863
    10. '+[' → logprob: -13.134961128234863

Token 1150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008957397076301277
    2. 'i' → logprob: -7.125895977020264
    3. '+' → logprob: -10.125895500183105
    4. '(i' → logprob: -10.125895500183105
    5. '```' → logprob: -12.000895500183105
    6. '[i' → logprob: -13.375895500183105
    7. '{i' → logprob: -13.750895500183105
    8. '
' → logprob: -14.500895500183105
    9. '(' → logprob: -14.500895500183105
    10. '`' → logprob: -15.250895500183105

Token 1151: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.18018384277820587
    2. ' *' → logprob: -1.8051838874816895
    3. '*(' → logprob: -8.805183410644531
    4. '```' → logprob: -9.805183410644531
    5. ')*' → logprob: -10.055183410644531
    6. ')' → logprob: -10.180183410644531
    7. '   ' → logprob: -10.430183410644531
    8. ']*' → logprob: -11.180183410644531
    9. '*out' → logprob: -11.305183410644531
    10. '[key' → logprob: -11.555183410644531

Token 1152: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -9.088346359931165e-07
    2. '(pow' → logprob: -14.625000953674316
    3. ' pow' → logprob: -14.875000953674316
    4. 'inv' → logprob: -18.875
    5. '.pow' → logprob: -19.75
    6. '_pow' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. '
' → logprob: -20.25
    9. 'p' → logprob: -21.125
    10. 'pw' → logprob: -21.25

Token 1153: '(inv' (ID: 107330)
  Prédit: '(inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -1.5048530030981055e-06
    2. 'inv' → logprob: -14.125001907348633
    3. '(pow' → logprob: -14.625001907348633
    4. '```' → logprob: -15.625001907348633
    5. '(' → logprob: -16.625001907348633
    6. ' (' → logprob: -17.750001907348633
    7. 'pow' → logprob: -19.000001907348633
    8. '(inp' → logprob: -19.250001907348633
    9. '(
' → logprob: -19.375001907348633
    10. '(iv' → logprob: -19.625001907348633

Token 1154: '10' (ID: 702)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.017086675390601158
    2. '10' → logprob: -4.142086505889893
    3. 'inv' → logprob: -6.892086505889893
    4. '(' → logprob: -10.76708698272705
    5. '```' → logprob: -11.89208698272705
    6. ' (' → logprob: -12.76708698272705
    7. '(i' → logprob: -13.01708698272705
    8. '(-' → logprob: -13.76708698272705
    9. '_inv' → logprob: -15.14208698272705
    10. ' inv' → logprob: -15.51708698272705

Token 1155: ',i' (ID: 25032)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5897113680839539
    2. ',i' → logprob: -0.8397113680839539
    3. '[i' → logprob: -4.4647111892700195
    4. ',' → logprob: -6.2147111892700195
    5. '```' → logprob: -9.83971118927002
    6. 'i' → logprob: -10.33971118927002
    7. '(' → logprob: -10.33971118927002
    8. ',(' → logprob: -11.08971118927002
    9. '[(' → logprob: -11.46471118927002
    10. '{i' → logprob: -11.83971118927002

Token 1156: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017676468705758452
    2. '1' → logprob: -6.376767635345459
    3. ' +' → logprob: -10.876768112182617
    4. '```' → logprob: -11.251768112182617
    5. '(' → logprob: -11.376768112182617
    6. ',' → logprob: -11.876768112182617
    7. 'i' → logprob: -12.376768112182617
    8. ',Q' → logprob: -12.626768112182617
    9. '{' → logprob: -13.251768112182617
    10. '+i' → logprob: -14.251768112182617

Token 1157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018131686374545097
    2. '(' → logprob: -4.393131732940674
    3. '(i' → logprob: -6.018131732940674
    4. '(Q' → logprob: -6.268131732940674
    5. '+' → logprob: -7.393131732940674
    6. 'Q' → logprob: -8.393131256103516
    7. 'i' → logprob: -8.893131256103516
    8. '-' → logprob: -9.393131256103516
    9. '```' → logprob: -9.768131256103516
    10. ' (' → logprob: -10.143131256103516

Token 1158: ',Q' (ID: 130136)
  Prédit: ',Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Q' → logprob: -0.0046235607005655766
    2. ',' → logprob: -5.3796234130859375
    3. ' ,' → logprob: -13.504623413085938
    4. '[' → logprob: -14.004623413085938
    5. '```' → logprob: -14.379623413085938
    6. '%' → logprob: -15.629623413085938
    7. '<Q' → logprob: -16.004623413085938
    8. ',
' → logprob: -16.254623413085938
    9. 'Q' → logprob: -17.129623413085938
    10. '   ' → logprob: -17.254623413085938

Token 1159: '))' (ID: 915)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.03810666874051094
    2. ')' → logprob: -3.288106679916382
    3. ']%' → logprob: -10.038106918334961
    4. ')]' → logprob: -11.913106918334961
    5. '           ' → logprob: -12.163106918334961
    6. ' )' → logprob: -12.788106918334961
    7. '       ' → logprob: -13.163106918334961
    8. ')...' → logprob: -14.038106918334961
    9. '])' → logprob: -14.288106918334961
    10. '))' → logprob: -14.288106918334961

Token 1160: '%' (ID: 4)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.5752968788146973
    2. ')' → logprob: -1.3252968788146973
    3. '%' → logprob: -1.8252968788146973
    4. ']%' → logprob: -4.825296878814697
    5. ' %' → logprob: -6.075296878814697
    6. ']' → logprob: -8.700296401977539
    7. '%)' → logprob: -10.200296401977539
    8. '           ' → logprob: -11.575296401977539
    9. ' )' → logprob: -11.825296401977539
    10. '()%' → logprob: -12.450296401977539

Token 1161: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.9027791495318525e-05
    2. 'key' → logprob: -11.000019073486328
    3. 'freq' → logprob: -13.500019073486328
    4. ' Q' → logprob: -14.750019073486328
    5. '```' → logprob: -15.125019073486328
    6. '(Q' → logprob: -16.500019073486328
    7. '10' → logprob: -17.000019073486328
    8. '	Q' → logprob: -17.375019073486328
    9. '_Q' → logprob: -17.500019073486328
    10. '{' → logprob: -17.625019073486328

Token 1162: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2942071855068207
    2. '           ' → logprob: -1.419207215309143
    3. '<|end|>' → logprob: -5.4192070960998535
    4. ')' → logprob: -5.5442070960998535
    5. '```' → logprob: -6.0442070960998535
    6. '=' → logprob: -7.9192070960998535
    7. ' =' → logprob: -7.9192070960998535
    8. ')
' → logprob: -8.419207572937012
    9. '       ' → logprob: -8.794207572937012
    10. '<|end|>' → logprob: -8.794207572937012

Token 1163: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11531183868646622
    2. '               ' → logprob: -2.740311861038208
    3. '```' → logprob: -3.365311861038208
    4. '       ' → logprob: -4.865311622619629
    5. '<|end|>' → logprob: -7.240311622619629
    6. '   ' → logprob: -7.865311622619629
    7. '``' → logprob: -8.490311622619629
    8. '                   ' → logprob: -8.865311622619629
    9. 'answer' → logprob: -8.990311622619629
    10. ' answer' → logprob: -9.240311622619629

Token 1164: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -1.5048530030981055e-06
    2. ' answer' → logprob: -13.750001907348633
    3. '           ' → logprob: -15.375001907348633
    4. '```' → logprob: -16.250001907348633
    5. '
' → logprob: -17.625001907348633
    6. '               ' → logprob: -18.125001907348633
    7. 'ans' → logprob: -18.375001907348633
    8. '	answer' → logprob: -19.250001907348633
    9. '                   ' → logprob: -19.375001907348633
    10. 'freq' → logprob: -20.250001907348633

Token 1165: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5245190262794495
    2. ' +=' → logprob: -0.8995190262794495
    3. '```' → logprob: -6.774518966674805
    4. '=' → logprob: -9.024518966674805
    5. ']+=' → logprob: -9.899518966674805
    6. '+' → logprob: -10.399518966674805
    7. '   ' → logprob: -11.274518966674805
    8. '           ' → logprob: -11.649518966674805
    9. ' =' → logprob: -11.899518966674805
    10. '+=(' → logprob: -12.149518966674805

Token 1166: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.0052342405542731285
    2. ' freq' → logprob: -5.255234241485596
    3. '(freq' → logprob: -15.005233764648438
    4. 'fre' → logprob: -16.880233764648438
    5. 'frequency' → logprob: -17.505233764648438
    6. '_freq' → logprob: -18.380233764648438
    7. '   ' → logprob: -18.630233764648438
    8. '           ' → logprob: -19.130233764648438
    9. '```' → logprob: -19.755233764648438
    10. 'Freq' → logprob: -19.880233764648438

Token 1167: '.get' (ID: 775)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0015284325927495956
    2. '.get' → logprob: -6.501528263092041
    3. 'get' → logprob: -11.5015287399292
    4. '(key' → logprob: -11.7515287399292
    5. '[get' → logprob: -12.0015287399292
    6. '```' → logprob: -13.8765287399292
    7. '[
' → logprob: -14.6265287399292
    8. '[(' → logprob: -14.8765287399292
    9. 'key' → logprob: -16.001527786254883
    10. '.setdefault' → logprob: -17.626527786254883

Token 1168: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -3.6550729419104755e-05
    2. 'key' → logprob: -10.250036239624023
    3. '[key' → logprob: -13.750036239624023
    4. ',key' → logprob: -18.125036239624023
    5. '```' → logprob: -18.125036239624023
    6. ' key' → logprob: -18.250036239624023
    7. '(
' → logprob: -19.000036239624023
    8. ' (' → logprob: -20.250036239624023
    9. '(' → logprob: -21.375036239624023
    10. '	key' → logprob: -22.000036239624023

Token 1169: '_next' (ID: 25436)
  Prédit: '[key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0015152193373069167
    2. '(key' → logprob: -6.5015153884887695
    3. 'key' → logprob: -12.12651538848877
    4. '[(' → logprob: -12.50151538848877
    5. '```' → logprob: -12.87651538848877
    6. '[
' → logprob: -14.00151538848877
    7. ',key' → logprob: -15.62651538848877
    8. '[' → logprob: -17.251514434814453
    9. '``' → logprob: -17.376514434814453
    10. '_key' → logprob: -17.501514434814453

Token 1170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004764745943248272
    2. ',key' → logprob: -5.879764556884766
    3. ')' → logprob: -6.629764556884766
    4. '(key' → logprob: -8.004764556884766
    5. ' ,' → logprob: -8.879764556884766
    6. ']' → logprob: -9.254764556884766
    7. ',
' → logprob: -11.379764556884766
    8. '])' → logprob: -11.379764556884766
    9. ',)' → logprob: -11.504764556884766
    10. '(),' → logprob: -11.754764556884766

Token 1171: '0' (ID: 15)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.0004014753212686628
    2. 'key' → logprob: -8.000401496887207
    3. '1' → logprob: -10.500401496887207
    4. '0' → logprob: -10.750401496887207
    5. '(freq' → logprob: -11.250401496887207
    6. ' freq' → logprob: -12.625401496887207
    7. '```' → logprob: -15.750401496887207
    8. '(key' → logprob: -16.00040054321289
    9. '_freq' → logprob: -16.50040054321289
    10. 'frequency' → logprob: -16.75040054321289

Token 1172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005100341513752937
    2. ')
' → logprob: -5.380100250244141
    3. '       ' → logprob: -9.00510025024414
    4. '```' → logprob: -9.25510025024414
    5. '           ' → logprob: -9.88010025024414
    6. ')+' → logprob: -10.25510025024414
    7. '())' → logprob: -10.63010025024414
    8. '+' → logprob: -10.75510025024414
    9. '<|end|>' → logprob: -10.75510025024414
    10. '               ' → logprob: -11.00510025024414

Token 1173: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1174: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16930760443210602
    2. '```' → logprob: -2.4193077087402344
    3. '<|end|>' → logprob: -2.7943077087402344
    4. '#' → logprob: -7.044307708740234
    5. '   ' → logprob: -7.044307708740234
    6. '
' → logprob: -7.294307708740234
    7. '<|end|>' → logprob: -7.419307708740234
    8. 'print' (adapté à ' print') → logprob: -7.669307708740234
    9. ')
' → logprob: -8.169307708740234
    10. '``' → logprob: -8.294307708740234

Token 1175: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -3.054500666621607e-06
    2. 'answer' → logprob: -12.75000286102295
    3. '(ans' → logprob: -15.75000286102295
    4. '(output' → logprob: -18.875003814697266
    5. '(question' → logprob: -18.875003814697266
    6. '	answer' → logprob: -19.500003814697266
    7. '(angle' → logprob: -21.125003814697266
    8. '(abs' → logprob: -21.125003814697266
    9. '(address' → logprob: -21.250003814697266
    10. '((' → logprob: -21.500003814697266

Token 1176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002338144404347986
    2. '())' → logprob: -9.62523365020752
    3. '()' → logprob: -10.00023365020752
    4. '```' → logprob: -10.00023365020752
    5. '<|end|>' → logprob: -10.50023365020752
    6. ')
' → logprob: -11.37523365020752
    7. '+' → logprob: -11.75023365020752
    8. ' )' → logprob: -12.00023365020752
    9. '
' → logprob: -12.50023365020752
    10. '')' → logprob: -12.75023365020752


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1174
Tokens correctement prédits (1ère position, stricte): 395
Tokens correctement prédits (1ère position, avec adaptation): 420
Tokens correctement prédits (top 10): 825
Précision stricte (1ère position): 33.65%
Précision adaptée (1ère position): 35.78%
Précision (top 10): 70.27%
================================================================================
