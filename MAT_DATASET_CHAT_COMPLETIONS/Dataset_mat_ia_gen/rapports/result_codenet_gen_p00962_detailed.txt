================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

# Pour résoudre ce problème, il faut comparer les distances minimales entre l'intersection 1 (pizzeria)
# et l'intersection 2 (maison d'Alyssa) dans le graphe original, puis simuler 
# la situation où l'orientation d'une seule route est inversée.
#
# Approche:
# 1. Calculer la plus courte distance de 1 à tous les sommets (dist1) avec Dijkstra sur le graphe initial.
# 2. Calculer la plus courte distance de 2 à tous les sommets (dist2) avec Dijkstra sur le graphe inverse
#    (car on veut rapidement évaluer la distance depuis un sommet donné vers 2).
#
# Pour chaque arête i (a_i -> b_i) avec coût c_i qui est inversée le jour i:
# - On enlève temporairement cette arête (uniquement pour le calcul théorique)
# - On ajoute son inverse (b_i -> a_i) avec même coût c_i (qui sera la seule modification ce jour là)
#
# Le plus court chemin modifié peut être:
# - Plus court si on peut passer par b_i -> a_i -> ... -> 2 et atteindrons 1 depuis a_i auparavant
# - Plus long ou infini (plus de chemin), si on perd un chemin existant par a_i -> b_i
#
# On calcule donc pour ce jour la distance:
# min(
#   dist1[2],                                       # chemin initial sans modification
#   dist1[b_i] + c_i + dist2[a_i]                   # chemin utilisant la route inversée ce jour
# )
#
# - dist1[x] = distance de 1 à x dans graphe original
# - dist2[x] = distance de x à 2 dans graphe original (calculée comme distance de 2 à x dans graphe inverse)
#
# Cette formule vient de la décomposition des chemins:
# 1->b_i (distance dist1[b_i]) + c_i (arête inversée) + b_i->a_i (sens inversé) + a_i->2 (dist2[a_i])
# mais on exprime b_i->a_i par le chemin inversé: b_i -> a_i équivaut à a_i -> b_i inversé donc on calcule
# dist2[a_i] = distance de a_i à 2.
#
# Enfin on compare:
# - Si le nouveau minimum < dist1[2] : "HAPPY"
# - Si le nouveau minimum == dist1[2]: "SOSO"
# - Sinon (pas possible de rejoindre 2 ou plus long): "SAD"

def dijkstra(start, graph, n):
    dist = [float('inf')] * (n + 1)
    dist[start] = 0
    heap = [(0, start)]
    while heap:
        cur_d, u = heapq.heappop(heap)
        if dist[u] < cur_d:
            continue
        for v, cost in graph[u]:
            nd = cur_d + cost
            if nd < dist[v]:
                dist[v] = nd
                heapq.heappush(heap, (nd, v))
    return dist

def main():
    n, m = map(int, input().split())
    edges = []
    graph = [[] for _ in range(n + 1)]
    rev_graph = [[] for _ in range(n + 1)]  # graphe avec arêtes inversées pour dijkstra depuis 2
    
    for _ in range(m):
        a, b, c = map(int, input().split())
        edges.append((a, b, c))
        graph[a].append((b, c))
        rev_graph[b].append((a, c))
    
    # Distance depuis 1 vers tous les sommets
    dist1 = dijkstra(1, graph, n)
    # Distance depuis 2 vers tous les sommets dans le graphe original,
    # donc distance de chaque sommet vers 2 dans le graphe original
    dist2 = dijkstra(2, rev_graph, n)
    
    dist_orig = dist1[2]  # distance originale de 1 à 2
    
    for i in range(m):
        a, b, c = edges[i]
        # Calcul du cout en prenant en compte inversion de l'arête i
        # Nouveau chemin possible: 1->b + c + a->2
        # => dist1[b] + c + dist2[a]
        # Si ce chemin est meilleur alors HAPPY,
        # sinon comparer avec chemin origine
        
        if dist1[b] == float('inf') or dist2[a] == float('inf'):
            # Impossible de faire un chemin via cette inversion
            new_dist = float('inf')
        else:
            new_dist = dist1[b] + c + dist2[a]
        
        if new_dist < dist_orig:
            print("HAPPY")
        elif new_dist == dist_orig:
            print("SOSO")
        else:
            print("SAD")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.297342985868454
    2. '\n' → logprob: -1.5473430156707764
    3. '<|end|>' → logprob: -3.7973430156707764
    4. '\' → logprob: -4.922342777252197
    5. 'newline' → logprob: -5.672342777252197
    6. 'import' → logprob: -5.672342777252197
    7. '<|end|>' → logprob: -6.047342777252197
    8. '
' → logprob: -6.922342777252197
    9. '```' → logprob: -6.922342777252197
    10. '' → logprob: -7.672342777252197

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3663626305060461e-05
    2. '.' → logprob: -11.37501335144043
    3. 'queue' → logprob: -14.62501335144043
    4. '#' → logprob: -14.75001335144043
    5. '_' → logprob: -15.12501335144043
    6. '=' → logprob: -15.37501335144043
    7. 'ify' → logprob: -15.50001335144043
    8. '[' → logprob: -15.87501335144043
    9. 'space' → logprob: -16.00001335144043
    10. 'u' → logprob: -16.62501335144043

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.964514970779419
    2. '\' → logprob: -1.589514970779419
    3. '\n' → logprob: -1.714514970779419
    4. '.' → logprob: -2.089514970779419
    5. '

' → logprob: -2.839514970779419
    6. '<|end|>' → logprob: -4.71451473236084
    7. '```' → logprob: -4.71451473236084
    8. '' → logprob: -5.08951473236084
    9. 'def' → logprob: -5.08951473236084
    10. 'import' → logprob: -5.83951473236084

Token 8: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3544423381972592e-05
    2. ' .' → logprob: -13.00001335144043
    3. '.readline' → logprob: -13.50001335144043
    4. '.​' → logprob: -13.50001335144043
    5. '.setdefault' → logprob: -13.87501335144043
    6. '.`' → logprob: -14.12501335144043
    7. '.)' → logprob: -14.25001335144043
    8. '.]' → logprob: -14.62501335144043
    9. '.import' → logprob: -14.62501335144043
    10. '[' → logprob: -14.62501335144043

Token 9: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.04250188171863556
    2. 't' → logprob: -4.667501926422119
    3. 'trace' → logprob: -4.667501926422119
    4. 'limit' → logprob: -4.667501926422119
    5. '_limit' → logprob: -5.917501926422119
    6. 'set' → logprob: -6.042501926422119
    7. '_rec' → logprob: -6.167501926422119
    8. 's' → logprob: -6.292501926422119
    9. 'rl' → logprob: -6.917501926422119
    10. 'f' → logprob: -7.042501926422119

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0003234262694604695
    2. 'urs' → logprob: -8.500323295593262
    3. 'ur' → logprob: -10.250323295593262
    4. 'limit' → logprob: -10.500323295593262
    5. 'ursive' → logprob: -10.500323295593262
    6. '_limit' → logprob: -11.750323295593262
    7. 'ision' → logprob: -12.250323295593262
    8. 'usion' → logprob: -12.500323295593262
    9. 'ursor' → logprob: -12.500323295593262
    10. 'urf' → logprob: -12.750323295593262

Token 11: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.084206375409849e-05
    2. '_limit' → logprob: -10.250041007995605
    3. ' limit' → logprob: -12.375041007995605
    4. 'lim' → logprob: -14.500041007995605
    5. 'depth' → logprob: -14.500041007995605
    6. 'Limit' → logprob: -16.62504005432129
    7. '.limit' → logprob: -16.62504005432129
    8. '(limit' → logprob: -16.75004005432129
    9. '-limit' → logprob: -17.62504005432129
    10. '_LIMIT' → logprob: -18.12504005432129

Token 12: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.941850526549388e-06
    2. '(
' → logprob: -12.500007629394531
    3. '(

' → logprob: -13.625007629394531
    4. '((' → logprob: -13.875007629394531
    5. ' (' → logprob: -14.125007629394531
    6. '("("' → logprob: -14.500007629394531
    7. '```' → logprob: -16.25000762939453
    8. '()' → logprob: -16.37500762939453
    9. '(**' → logprob: -16.37500762939453
    10. '(()' → logprob: -16.50000762939453

Token 13: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008636434562504292
    2. '100' → logprob: -4.758636474609375
    3. ' ' → logprob: -11.508636474609375
    4. '300' → logprob: -12.508636474609375
    5. '500' → logprob: -13.008636474609375
    6. '200' → logprob: -13.008636474609375
    7. '1' → logprob: -13.133636474609375
    8. '150' → logprob: -14.758636474609375
    9. '999' → logprob: -15.008636474609375
    10. '250' → logprob: -15.383636474609375

Token 14: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4248499572277069
    2. '7' → logprob: -1.5498499870300293
    3. '6' → logprob: -2.1748499870300293
    4. '4' → logprob: -4.299849987030029
    5. '5' → logprob: -5.549849987030029
    6. '000' → logprob: -6.049849987030029
    7. '00' → logprob: -7.924849987030029
    8. '8' → logprob: -10.799849510192871
    9. ')' → logprob: -11.424849510192871
    10. '07' → logprob: -12.174849510192871

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0004234051739331335
    2. '9' → logprob: -8.250423431396484
    3. '6' → logprob: -9.250423431396484
    4. '8' → logprob: -9.625423431396484
    5. '```' → logprob: -20.375423431396484
    6. ' ' → logprob: -21.000423431396484
    7. '**' → logprob: -21.625423431396484
    8. '(' → logprob: -22.000423431396484
    9. '``' → logprob: -22.250423431396484
    10. '

' → logprob: -23.250423431396484

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '))' → logprob: -16.0
    5. ')

' → logprob: -18.375
    6. '```' → logprob: -18.5
    7. ')
' → logprob: -19.0
    8. ' ' → logprob: -19.25
    9. '),' → logprob: -19.25
    10. ')))' → logprob: -19.25

Token 17: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0420982837677002
    2. '

' → logprob: -1.7920982837677002
    3. '\' → logprob: -2.0420982837677
    4. 'def' → logprob: -2.1670982837677
    5. '```' → logprob: -2.4170982837677
    6. '' → logprob: -2.9170982837677
    7. '
' → logprob: -3.1670982837677
    8. '\n' → logprob: -3.5420982837677
    9. '`' → logprob: -4.917098045349121
    10. 'class' → logprob: -5.292098045349121

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030507624614983797
    2. '()' → logprob: -9.75030517578125
    3. '('' → logprob: -9.87530517578125
    4. '40' → logprob: -9.87530517578125
    5. '("("' → logprob: -10.37530517578125
    6. ''' → logprob: -11.00030517578125
    7. ')' → logprob: -11.00030517578125
    8. '```' → logprob: -11.25030517578125
    9. '.' → logprob: -11.37530517578125
    10. '"' → logprob: -11.50030517578125

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8963446617126465
    2. 'input' → logprob: -1.1463446617126465
    3. ' input' → logprob: -1.5213446617126465
    4. 'sys' → logprob: -2.8963446617126465
    5. ' lambda' → logprob: -8.146345138549805
    6. 'lambda' → logprob: -9.146345138549805
    7. ' ' → logprob: -9.896345138549805
    8. '=sys' → logprob: -11.521345138549805
    9. '	sys' → logprob: -11.646345138549805
    10. ' raw' → logprob: -11.771345138549805

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.10656104236841202
    2. '.' → logprob: -2.7315609455108643
    3. '.readline' → logprob: -3.4815609455108643
    4. '.stdout' → logprob: -5.731561183929443
    5. ' .' → logprob: -7.106561183929443
    6. '.argv' → logprob: -7.981561183929443
    7. '.std' → logprob: -8.481560707092285
    8. '.input' → logprob: -8.981560707092285
    9. '.stderr' → logprob: -9.106560707092285
    10. '.exit' → logprob: -10.106560707092285

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002931558701675385
    2. '.read' → logprob: -8.625292778015137
    3. '.buffer' → logprob: -9.625292778015137
    4. '.' → logprob: -10.000292778015137
    5. '.readlines' → logprob: -13.750292778015137
    6. '.stdin' → logprob: -14.750292778015137
    7. 'buffer' → logprob: -15.125292778015137
    8. 'read' → logprob: -15.625292778015137
    9. '.Read' → logprob: -16.750293731689453
    10. '.reader' → logprob: -17.250293731689453

Token 22: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.109931230545044
    2. '\n' → logprob: -1.734931230545044
    3. '(' → logprob: -2.109931230545044
    4. '
' → logprob: -2.234931230545044
    5. 'n' → logprob: -2.234931230545044
    6. '\' → logprob: -3.734931230545044
    7. '

' → logprob: -3.734931230545044
    8. '```' → logprob: -3.859931230545044
    9. '()' → logprob: -4.109930992126465
    10. '(n' → logprob: -4.109930992126465

Token 23: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.68277508020401
    2. 'class' → logprob: -0.93277508020401
    3. 'n' → logprob: -2.3077750205993652
    4. 'N' → logprob: -7.557775020599365
    5. '
' → logprob: -7.932775020599365
    6. '\' → logprob: -8.182775497436523
    7. 'd' → logprob: -8.307775497436523
    8. '\n' → logprob: -9.057775497436523
    9. 'from' → logprob: -9.682775497436523
    10. ' class' → logprob: -9.807775497436523

Token 24: ' Pour' (ID: 13931)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038492392748594284
    2. 'def' → logprob: -3.663492441177368
    3. 'n' → logprob: -5.538492202758789
    4. 'a' → logprob: -6.663492202758789
    5. 'dp' → logprob: -7.038492202758789
    6. 's' → logprob: -7.038492202758789
    7. 'N' → logprob: -7.413492202758789
    8. 'de' → logprob: -7.413492202758789
    9. ' def' → logprob: -7.413492202758789
    10. 'i' → logprob: -7.788492202758789

Token 25: ' résoudre' (ID: 134006)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29429441690444946
    2. '_' → logprob: -2.4192943572998047
    3. 't' → logprob: -3.0442943572998047
    4. 's' → logprob: -3.4192943572998047
    5. '(' → logprob: -4.544294357299805
    6. '   ' → logprob: -4.544294357299805
    7. 'dfs' → logprob: -5.169294357299805
    8. '```' → logprob: -5.419294357299805
    9. 'u' → logprob: -5.544294357299805
    10. ' l' → logprob: -5.669294357299805

Token 26: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3000849187374115
    2. ' le' → logprob: -1.6750849485397339
    3. ' l' → logprob: -3.9250848293304443
    4. 'l' → logprob: -4.550085067749023
    5. ' la' → logprob: -4.550085067749023
    6. '(' → logprob: -4.800085067749023
    7. 'le' → logprob: -5.175085067749023
    8. '_' → logprob: -5.300085067749023
    9. ',' → logprob: -6.050085067749023
    10. ' the' → logprob: -6.675085067749023

Token 27: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.325298547744751
    2. 'pro' → logprob: -1.325298547744751
    3. ' probl' → logprob: -5.200298309326172
    4. 'proble' → logprob: -5.700298309326172
    5. ' probleme' → logprob: -6.575298309326172
    6. 'graph' → logprob: -7.575298309326172
    7. 'problem' → logprob: -8.450298309326172
    8. '_pro' → logprob: -8.450298309326172
    9. ' graph' → logprob: -8.450298309326172
    10. ' problem' → logprob: -8.825298309326172

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011839192593470216
    2. ' ,' → logprob: -7.501183986663818
    3. ':' → logprob: -8.12618350982666
    4. ',
' → logprob: -8.25118350982666
    5. 's' → logprob: -10.37618350982666
    6. 'def' → logprob: -11.50118350982666
    7. ' ' → logprob: -12.00118350982666
    8. '.' → logprob: -12.75118350982666
    9. '#' → logprob: -12.75118350982666
    10. '<|end|>' → logprob: -13.00118350982666

Token 29: ' il' (ID: 1793)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.34978941082954407
    2. ' il' → logprob: -2.4747893810272217
    3. 'n' → logprob: -2.7247893810272217
    4. ' n' → logprob: -3.0997893810272217
    5. ' nous' → logprob: -3.4747893810272217
    6. 'def' → logprob: -3.7247893810272217
    7. ' je' → logprob: -4.224789619445801
    8. 'on' → logprob: -4.599789619445801
    9. 'nous' → logprob: -4.724789619445801
    10. 'il' → logprob: -5.849789619445801

Token 30: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.5845750570297241
    2. 'f' → logprob: -0.8345750570297241
    3. ' faudra' → logprob: -5.084575176239014
    4. ' faudrait' → logprob: -6.584575176239014
    5. ' f' → logprob: -8.834574699401855
    6. ' ' → logprob: -8.959574699401855
    7. ' faud' → logprob: -9.084574699401855
    8. ' ' → logprob: -9.084574699401855
    9. ' fallait' → logprob: -9.084574699401855
    10. 's' → logprob: -9.334574699401855

Token 31: ' comparer' (ID: 125081)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.332443505525589
    2. ' utiliser' → logprob: -1.9574434757232666
    3. ' définir' → logprob: -4.082443714141846
    4. ' comprendre' → logprob: -4.332443714141846
    5. ' ' → logprob: -4.332443714141846
    6. ' definir' → logprob: -4.707443714141846
    7. 'dfs' → logprob: -4.832443714141846
    8. ' continuer' → logprob: -4.832443714141846
    9. 'tr' → logprob: -4.957443714141846
    10. ' ' → logprob: -5.082443714141846

Token 32: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.18790750205516815
    2. 'les' → logprob: -3.1879074573516846
    3. ' l' → logprob: -3.4379074573516846
    4. ' la' → logprob: -3.5629074573516846
    5. 's' → logprob: -4.062907695770264
    6. ' ' → logprob: -4.312907695770264
    7. 'l' → logprob: -5.062907695770264
    8. ' deux' → logprob: -5.062907695770264
    9. '_' → logprob: -5.187907695770264
    10. ' chaque' → logprob: -6.062907695770264

Token 33: ' distances' (ID: 48294)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.4964650869369507
    2. 'de' → logprob: -1.8714650869369507
    3. 'temps' → logprob: -2.7464652061462402
    4. 'che' → logprob: -3.4964652061462402
    5. 's' → logprob: -3.6214652061462402
    6. ' coûts' → logprob: -3.6214652061462402
    7. 't' → logprob: -3.9339652061462402
    8. 'co' → logprob: -3.9964652061462402
    9. ' deux' → logprob: -3.9964652061462402
    10. ' distances' → logprob: -4.05896520614624

Token 34: ' minim' (ID: 23874)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2608743906021118
    2. '_' → logprob: -1.5108743906021118
    3. ' entre' → logprob: -1.6358743906021118
    4. 'entre' → logprob: -2.3858742713928223
    5. ',' → logprob: -2.5108742713928223
    6. '.' → logprob: -3.3858742713928223
    7. ' between' → logprob: -3.6358742713928223
    8. 'between' → logprob: -4.635874271392822
    9. 's' → logprob: -4.885874271392822
    10. '(' → logprob: -4.885874271392822

Token 35: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -6.575563020305708e-05
    2. 'es' → logprob: -10.375065803527832
    3. 'ale' → logprob: -10.375065803527832
    4. 'a' → logprob: -13.500065803527832
    5. '```' → logprob: -14.250065803527832
    6. 'um' → logprob: -14.875065803527832
    7. 'les' → logprob: -15.375065803527832
    8. 'ALES' → logprob: -16.000064849853516
    9. 'als' → logprob: -16.375064849853516
    10. 'ques' → logprob: -16.750064849853516

Token 36: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.7570380568504333
    2. 'entre' → logprob: -0.7570380568504333
    3. ' ' → logprob: -3.257038116455078
    4. ' between' → logprob: -4.882038116455078
    5. ',' → logprob: -5.382038116455078
    6. '.' → logprob: -5.882038116455078
    7. 'between' → logprob: -6.007038116455078
    8. 'Entre' → logprob: -7.007038116455078
    9. '```' → logprob: -7.132038116455078
    10. ''entre' → logprob: -7.632038116455078

Token 37: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8112750053405762
    2. ' les' → logprob: -1.1862750053405762
    3. 'de' → logprob: -2.186275005340576
    4. ' deux' → logprob: -2.686275005340576
    5. ' chaque' → logprob: -4.061275005340576
    6. 'l' → logprob: -4.436275005340576
    7. 's' → logprob: -5.311275005340576
    8. ' points' → logprob: -5.686275005340576
    9. 't' → logprob: -5.811275005340576
    10. 'le' → logprob: -5.873775005340576

Token 38: ''inter' (ID: 55731)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1992412805557251
    2. 'a' → logprob: -2.0742411613464355
    3. 'es' → logprob: -3.0742411613464355
    4. ''' → logprob: -6.5742411613464355
    5. 'eux' → logprob: -6.6992411613464355
    6. '_' → logprob: -7.4492411613464355
    7. 'é' → logprob: -7.4492411613464355
    8. ''e' → logprob: -7.4492411613464355
    9. ''é' → logprob: -7.5742411613464355
    10. 'de' → logprob: -7.9492411613464355

Token 39: 'section' (ID: 6471)
  Prédit: 'sections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sections' → logprob: -0.5908384323120117
    2. 'faces' → logprob: -2.0908384323120117
    3. 'êt' → logprob: -3.0908384323120117
    4. 'section' → logprob: -3.0908384323120117
    5. 'val' → logprob: -3.2158384323120117
    6. 'ection' → logprob: -3.8408384323120117
    7. 'ven' → logprob: -4.340838432312012
    8. 'ections' → logprob: -4.465838432312012
    9. 'év' → logprob: -4.590838432312012
    10. 'et' → logprob: -4.590838432312012

Token 40: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003854347625747323
    2. ' s' → logprob: -6.378854274749756
    3. ',' → logprob: -7.378854274749756
    4. ' ' → logprob: -8.003854751586914
    5. '.' → logprob: -8.253854751586914
    6. '(s' → logprob: -8.878854751586914
    7. ' des' → logprob: -9.003854751586914
    8. ' et' → logprob: -9.003854751586914
    9. 'des' → logprob: -9.253854751586914
    10. '```' → logprob: -9.753854751586914

Token 41: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6100888252258301
    2. '1' → logprob: -1.98508882522583
    3. 'des' → logprob: -2.73508882522583
    4. 'et' → logprob: -3.23508882522583
    5. ' et' → logprob: -3.48508882522583
    6. 'de' → logprob: -3.48508882522583
    7. ',' → logprob: -3.48508882522583
    8. ' ' → logprob: -3.98508882522583
    9. 'adj' → logprob: -4.36008882522583
    10. ' des' → logprob: -4.61008882522583

Token 42: ' (' (ID: 350)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.32183223962783813
    2. 'et' → logprob: -2.4468321800231934
    3. ' and' → logprob: -2.4468321800231934
    4. ',' → logprob: -2.9468321800231934
    5. ' ' → logprob: -3.3218321800231934
    6. '0' → logprob: -5.696832180023193
    7. ' à' → logprob: -5.946832180023193
    8. '.' → logprob: -6.071832180023193
    9. 'and' → logprob: -7.196832180023193
    10. ' и' → logprob: -7.321832180023193

Token 43: 'p' (ID: 79)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0661843791604042
    2. 'et' → logprob: -3.1911842823028564
    3. ' et' → logprob: -4.9411845207214355
    4. 'le' → logprob: -5.1911845207214355
    5. 'l' → logprob: -6.0661845207214355
    6. 'la' → logprob: -6.3161845207214355
    7. ' )' → logprob: -6.3161845207214355
    8. ' la' → logprob: -6.8161845207214355
    9. ' and' → logprob: -7.0661845207214355
    10. '')' → logprob: -7.9411845207214355

Token 44: 'izzeria' (ID: 144499)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2560778260231018
    2. '')' → logprob: -2.131077766418457
    3. 'oint' → logprob: -2.881077766418457
    4. ''' → logprob: -4.756077766418457
    5. ''r' → logprob: -5.006077766418457
    6. 'é' → logprob: -5.381077766418457
    7. 'oints' → logprob: -5.381077766418457
    8. 'u' → logprob: -5.881077766418457
    9. 'our' → logprob: -6.131077766418457
    10. ')' → logprob: -6.131077766418457

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006192203611135483
    2. ' )' → logprob: -5.131192207336426
    3. ' et' → logprob: -9.131192207336426
    4. '')' → logprob: -10.131192207336426
    5. '0' → logprob: -10.381192207336426
    6. ',' → logprob: -10.756192207336426
    7. 'et' → logprob: -10.756192207336426
    8. '),' → logprob: -11.881192207336426
    9. 's' → logprob: -12.006192207336426
    10. ' and' → logprob: -12.381192207336426

Token 46: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052197620272636414
    2. ' ' → logprob: -3.6771976947784424
    3. '.' → logprob: -4.677197456359863
    4. ':' → logprob: -5.927197456359863
    5. ')' → logprob: -6.302197456359863
    6. '\' → logprob: -6.427197456359863
    7. '#' → logprob: -6.552197456359863
    8. '\n' → logprob: -6.677197456359863
    9. 'a' → logprob: -7.052197456359863
    10. ' and' → logprob: -7.302197456359863

Token 47: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.8133045434951782
    2. ' et' → logprob: -1.3133045434951782
    3. ',' → logprob: -2.3133044242858887
    4. '#' → logprob: -2.9383044242858887
    5. ' ' → logprob: -3.1883044242858887
    6. ' and' → logprob: -3.3133044242858887
    7. 'def' → logprob: -4.063304424285889
    8. '.' → logprob: -4.688304424285889
    9. 'and' → logprob: -5.188304424285889
    10. '2' → logprob: -6.063304424285889

Token 48: ' l' (ID: 305)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6472321152687073
    2. ' toutes' → logprob: -1.8972320556640625
    3. 'les' → logprob: -1.8972320556640625
    4. ' chaque' → logprob: -2.6472320556640625
    5. 't' → logprob: -3.0222320556640625
    6. 'l' → logprob: -4.0222320556640625
    7. ' l' → logprob: -4.2722320556640625
    8. ' chacune' → logprob: -4.5222320556640625
    9. ' tous' → logprob: -5.7722320556640625
    10. 'le' → logprob: -6.4597320556640625

Token 49: ''inter' (ID: 55731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2696943283081055
    2. 'es' → logprob: -1.2696943283081055
    3. ''ensemble' → logprob: -1.7696943283081055
    4. ''inter' → logprob: -2.7696943283081055
    5. ''autre' → logprob: -2.8946943283081055
    6. 'e' → logprob: -3.0196943283081055
    7. ''' → logprob: -3.5196943283081055
    8. ''autres' → logprob: -3.6446943283081055
    9. ''aut' → logprob: -4.8946943283081055
    10. 'intersection' → logprob: -4.8946943283081055

Token 50: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.004668287932872772
    2. 'ection' → logprob: -5.504668235778809
    3. 'sections' → logprob: -8.754668235778809
    4. ' section' → logprob: -9.129668235778809
    5. 'sect' → logprob: -9.629668235778809
    6. 'SECTION' → logprob: -10.504668235778809
    7. '#' → logprob: -11.004668235778809
    8. 'e' → logprob: -11.379668235778809
    9. '<section' → logprob: -11.379668235778809
    10. 'val' → logprob: -11.504668235778809

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06495831161737442
    2. 's' → logprob: -3.564958333969116
    3. '2' → logprob: -3.689958333969116
    4. ' suivante' → logprob: -5.439958095550537
    5. '1' → logprob: -6.439958095550537
    6. ' n' → logprob: -6.689958095550537
    7. '3' → logprob: -7.939958095550537
    8. ' s' → logprob: -8.314958572387695
    9. '  ' → logprob: -8.314958572387695
    10. '0' → logprob: -9.064958572387695

Token 52: '2' (ID: 17)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7401681542396545
    2. ' N' → logprob: -1.4901680946350098
    3. ' ' → logprob: -2.2401680946350098
    4. 'n' → logprob: -2.6151680946350098
    5. 'N' → logprob: -2.9901680946350098
    6. '2' → logprob: -3.1151680946350098
    7. ' i' → logprob: -4.74016809463501
    8. 'i' → logprob: -5.86516809463501
    9. 's' → logprob: -5.86516809463501
    10. '3' → logprob: -6.49016809463501

Token 53: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0676902532577515
    2. ',' → logprob: -1.6926902532577515
    3. ' (' → logprob: -1.8176902532577515
    4. '0' → logprob: -2.067690372467041
    5. '#' → logprob: -2.817690372467041
    6. ' #' → logprob: -3.692690372467041
    7. ' ' → logprob: -4.317690372467041
    8. ' et' → logprob: -4.942690372467041
    9. '(' → logprob: -5.067690372467041
    10. ' à' → logprob: -5.067690372467041

Token 54: 'ma' (ID: 809)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2359448671340942
    2. ' la' → logprob: -1.7359448671340942
    3. 'l' → logprob: -1.8609448671340942
    4. 'la' → logprob: -2.3609447479248047
    5. ')' → logprob: -3.0484447479248047
    6. ' ' → logprob: -3.5484447479248047
    7. 'le' → logprob: -3.7359447479248047
    8. ' le' → logprob: -3.7984447479248047
    9. ' pizza' → logprob: -3.9234447479248047
    10. ' les' → logprob: -3.9234447479248047

Token 55: 'ison' (ID: 5072)
  Prédit: 'ison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ison' → logprob: -0.6660853028297424
    2. 'r' → logprob: -1.0410852432250977
    3. 'x' → logprob: -3.7285852432250977
    4. '3' → logprob: -4.541085243225098
    5. 'i' → logprob: -4.916085243225098
    6. 'n' → logprob: -5.103585243225098
    7. 'p' → logprob: -5.353585243225098
    8. 'is' → logprob: -5.353585243225098
    9. 'in' → logprob: -5.603585243225098
    10. '#' → logprob: -5.603585243225098

Token 56: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3145831227302551
    2. ' )' → logprob: -1.3145830631256104
    3. '1' → logprob: -7.8145833015441895
    4. ' ' → logprob: -8.189582824707031
    5. '.' → logprob: -9.064582824707031
    6. '2' → logprob: -9.189582824707031
    7. ').' → logprob: -9.689582824707031
    8. ',' → logprob: -9.814582824707031
    9. '3' → logprob: -9.814582824707031
    10. 's' → logprob: -10.189582824707031

Token 57: ''A' (ID: 40735)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8611254692077637
    2. ''' → logprob: -2.1111254692077637
    3. 'u' → logprob: -2.1111254692077637
    4. ''un' → logprob: -2.8611254692077637
    5. 'es' → logprob: -3.1111254692077637
    6. '')' → logprob: -3.2361254692077637
    7. ''utilisateur' → logprob: -3.4861254692077637
    8. ''une' → logprob: -3.6111254692077637
    9. 'a' → logprob: -3.9861254692077637
    10. ''hab' → logprob: -4.111125469207764

Token 58: 'ly' (ID: 423)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4445137977600098
    2. 'l' → logprob: -1.9445137977600098
    3. 'nt' → logprob: -2.1945137977600098
    4. 'm' → logprob: -2.3195137977600098
    5. 'lice' → logprob: -2.4445137977600098
    6. 'nd' → logprob: -2.5695137977600098
    7. 'nton' → logprob: -2.8195137977600098
    8. 'ng' → logprob: -3.1945137977600098
    9. 'd' → logprob: -3.3195137977600098
    10. 'nne' → logprob: -3.6945137977600098

Token 59: 'ssa' (ID: 86307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03923600912094116
    2. 's' → logprob: -3.289236068725586
    3. 'ssa' → logprob: -8.039236068725586
    4. 'ah' → logprob: -8.414236068725586
    5. 'ss' → logprob: -8.664236068725586
    6. 'z' → logprob: -9.164236068725586
    7. 'e' → logprob: -9.664236068725586
    8. 'x' → logprob: -9.664236068725586
    9. '```' → logprob: -10.289236068725586
    10. '\' → logprob: -10.664236068725586

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011874916963279247
    2. ' )' → logprob: -7.251187324523926
    3. '#' → logprob: -8.376187324523926
    4. ')
' → logprob: -9.126187324523926
    5. ')

' → logprob: -10.126187324523926
    6. ',' → logprob: -10.251187324523926
    7. '')' → logprob: -11.751187324523926
    8. '.' → logprob: -11.876187324523926
    9. 'def' → logprob: -12.126187324523926
    10. ')#' → logprob: -12.126187324523926

Token 61: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6481334567070007
    2. '

' → logprob: -1.3981335163116455
    3. '
' → logprob: -1.8981335163116455
    4. '#' → logprob: -3.8981335163116455
    5. '\n' → logprob: -3.8981335163116455
    6. '\' → logprob: -4.773133277893066
    7. '```' → logprob: -4.773133277893066
    8. 'n' → logprob: -5.148133277893066
    9. 'class' → logprob: -5.398133277893066
    10. '' → logprob: -5.523133277893066

Token 62: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8456137776374817
    2. ' le' → logprob: -1.095613718032837
    3. 'le' → logprob: -2.470613718032837
    4. ' chaque' → logprob: -3.595613718032837
    5. ' les' → logprob: -3.720613718032837
    6. 'un' → logprob: -4.095613956451416
    7. ' graph' → logprob: -4.220613956451416
    8. 'l' → logprob: -4.220613956451416
    9. 'les' → logprob: -4.470613956451416
    10. ' ' → logprob: -4.970613956451416

Token 63: ' grap' (ID: 60955)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.17695587873458862
    2. ' grap' → logprob: -1.9269559383392334
    3. 'graph' → logprob: -4.926955699920654
    4. ' code' → logprob: -6.176955699920654
    5. ' reste' → logprob: -6.551955699920654
    6. ' ' → logprob: -6.801955699920654
    7. ' graphique' → logprob: -6.801955699920654
    8. ' réseau' → logprob: -7.301955699920654
    9. 'gr' → logprob: -7.551955699920654
    10. ' deux' → logprob: -8.176956176757812

Token 64: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.00690848333761096
    2. 'h' → logprob: -5.506908416748047
    3. 'phe' → logprob: -6.256908416748047
    4. 'aphe' → logprob: -7.256908416748047
    5. 'heme' → logprob: -9.756908416748047
    6. '#' → logprob: -10.006908416748047
    7. 'һ' → logprob: -10.881908416748047
    8. '```' → logprob: -11.631908416748047
    9. 'ph' → logprob: -11.756908416748047
    10. '`' → logprob: -12.006908416748047

Token 65: ' original' (ID: 4756)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38833945989608765
    2. ',' → logprob: -1.3883395195007324
    3. ':' → logprob: -3.7633395195007324
    4. '\' → logprob: -3.8883395195007324
    5. ' ' → logprob: -4.638339519500732
    6. '\n' → logprob: -5.763339519500732
    7. '```' → logprob: -6.013339519500732
    8. '#' → logprob: -6.138339519500732
    9. 'import' → logprob: -6.513339519500732
    10. ' :' → logprob: -6.638339519500732

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17102569341659546
    2. '.' → logprob: -2.1710257530212402
    3. '#' → logprob: -4.04602575302124
    4. 'et' → logprob: -5.54602575302124
    5. 'import' → logprob: -5.67102575302124
    6. '\n' → logprob: -5.79602575302124
    7. '```' → logprob: -5.92102575302124
    8. '\' → logprob: -5.92102575302124
    9. ':' → logprob: -6.04602575302124
    10. ',
' → logprob: -6.67102575302124

Token 67: ' puis' (ID: 18766)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05072243884205818
    2. 'et' → logprob: -4.050722599029541
    3. ' et' → logprob: -4.175722599029541
    4. ' puis' → logprob: -4.800722599029541
    5. ' #' → logprob: -5.300722599029541
    6. 'and' → logprob: -7.550722599029541
    7. 'ains' → logprob: -7.550722599029541
    8. ' ainsi' → logprob: -8.050722122192383
    9. 'le' → logprob: -8.925722122192383
    10. ' and' → logprob: -9.050722122192383

Token 68: ' sim' (ID: 1845)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.2166551649570465
    2. 'dans' → logprob: -1.9666551351547241
    3. ' le' → logprob: -4.216655254364014
    4. ' inverse' → logprob: -4.591655254364014
    5. 'le' → logprob: -5.341655254364014
    6. ' comparer' → logprob: -5.466655254364014
    7. ' ensuite' → logprob: -5.591655254364014
    8. ' entre' → logprob: -5.716655254364014
    9. ' les' → logprob: -5.841655254364014
    10. 'inverse' → logprob: -5.966655254364014

Token 69: 'uler' (ID: 11802)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3903756141662598
    2. 'uler' → logprob: -1.8903756141662598
    3. 'plement' → logprob: -2.2653756141662598
    4. 'pl' → logprob: -2.5153756141662598
    5. 'ple' → logprob: -2.5153756141662598
    6. 'plier' → logprob: -2.7653756141662598
    7. 'pler' → logprob: -2.7653756141662598
    8. '-' → logprob: -3.2653756141662598
    9. 'ply' → logprob: -3.7653756141662598
    10. '```' → logprob: -4.01537561416626

Token 70: ' 
' (ID: 793)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7670930027961731
    2. ' l' → logprob: -1.3920929431915283
    3. ' le' → logprob: -2.3920929431915283
    4. ' un' → logprob: -2.6420929431915283
    5. ' les' → logprob: -2.7670929431915283
    6. ' une' → logprob: -3.8920929431915283
    7. ' ' → logprob: -4.142093181610107
    8. ' des' → logprob: -5.017093181610107
    9. ' ' → logprob: -5.392093181610107
    10. 'l' → logprob: -6.017093181610107

Token 71: '#' (ID: 2)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4830312728881836
    2. ' la' → logprob: -1.6080312728881836
    3. ' le' → logprob: -2.4830312728881836
    4. ' les' → logprob: -3.2330312728881836
    5. 'l' → logprob: -4.233031272888184
    6. ' un' → logprob: -4.483031272888184
    7. 'le' → logprob: -4.858031272888184
    8. ' une' → logprob: -4.858031272888184
    9. ' ' → logprob: -5.358031272888184
    10. ' ' → logprob: -5.733031272888184

Token 72: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1966862678527832
    2. ' la' → logprob: -1.5716862678527832
    3. ' le' → logprob: -1.6966862678527832
    4. ' les' → logprob: -1.8216862678527832
    5. 'le' → logprob: -3.196686267852783
    6. 'l' → logprob: -3.321686267852783
    7. 'les' → logprob: -4.071686267852783
    8. ' un' → logprob: -4.321686267852783
    9. ' une' → logprob: -4.571686267852783
    10. ' des' → logprob: -4.571686267852783

Token 73: ' situation' (ID: 8789)
  Prédit: ' modification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modification' → logprob: -2.3185789585113525
    2. 's' → logprob: -2.4435789585113525
    3. ' possibilité' → logprob: -2.5685789585113525
    4. ' suppression' → logprob: -2.6935789585113525
    5. ' possible' → logprob: -2.8810789585113525
    6. ' situation' → logprob: -2.9435789585113525
    7. ' nouvelle' → logprob: -3.6935789585113525
    8. ' même' → logprob: -3.8810789585113525
    9. ' disparition' → logprob: -4.318578720092773
    10. ' transformation' → logprob: -4.443578720092773

Token 74: ' où' (ID: 15113)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7976680994033813
    2. 's' → logprob: -1.7976680994033813
    3. ' ' → logprob: -2.047667980194092
    4. '.' → logprob: -2.172667980194092
    5. '```' → logprob: -2.172667980194092
    6. '\' → logprob: -2.422667980194092
    7. ':' → logprob: -2.797667980194092
    8. 'import' → logprob: -3.297667980194092
    9. 'def' → logprob: -4.297667980194092
    10. 'n' → logprob: -4.422667980194092

Token 75: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4882577955722809
    2. ' on' → logprob: -1.4882577657699585
    3. 'l' → logprob: -2.988257884979248
    4. ' une' → logprob: -3.488257884979248
    5. ' la' → logprob: -4.238257884979248
    6. ' chaque' → logprob: -4.363257884979248
    7. ' le' → logprob: -4.863257884979248
    8. ' un' → logprob: -4.988257884979248
    9. ' les' → logprob: -4.988257884979248
    10. ' ' → logprob: -4.988257884979248

Token 76: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9137123227119446
    2. 'a' → logprob: -0.9137123227119446
    3. ''on' → logprob: -1.9137122631072998
    4. 'e' → logprob: -3.9137122631073
    5. ''a' → logprob: -4.663712501525879
    6. ' on' → logprob: -5.288712501525879
    7. ' a' → logprob: -5.413712501525879
    8. ''utilisateur' → logprob: -6.288712501525879
    9. ''espace' → logprob: -6.913712501525879
    10. 'es' → logprob: -7.038712501525879

Token 77: 'orientation' (ID: 65957)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.3525526523590088
    2. 'un' → logprob: -2.102552652359009
    3. 'inter' → logprob: -2.352552652359009
    4. 'ar' → logprob: -2.477552652359009
    5. 'intersection' → logprob: -2.477552652359009
    6. 'a' → logprob: -2.977552652359009
    7. 'util' → logprob: -3.790052652359009
    8. 'adj' → logprob: -3.790052652359009
    9. 'on' → logprob: -3.790052652359009
    10. ''utilisateur' → logprob: -4.35255241394043

Token 78: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09838041663169861
    2. 'des' → logprob: -2.7233803272247314
    3. ' du' → logprob: -4.4733805656433105
    4. 's' → logprob: -4.8483805656433105
    5. ' de' → logprob: -6.3483805656433105
    6. ' est' → logprob: -6.8483805656433105
    7. 'de' → logprob: -6.8483805656433105
    8. 'du' → logprob: -7.3483805656433105
    9. ' ' → logprob: -7.4733805656433105
    10. ' change' → logprob: -7.8483805656433105

Token 79: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.7154801487922668
    2. ''un' → logprob: -1.090480089187622
    3. 'a' → logprob: -2.840480089187622
    4. 'une' → logprob: -3.090480089187622
    5. ''' → logprob: -3.590480089187622
    6. ' une' → logprob: -3.840480089187622
    7. 'e' → logprob: -5.465480327606201
    8. ' un' → logprob: -5.465480327606201
    9. '’une' → logprob: -5.965480327606201
    10. 'un' → logprob: -5.965480327606201

Token 80: ' seule' (ID: 41983)
  Prédit: ' ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.2976932227611542
    2. 'ar' → logprob: -1.6726932525634766
    3. ' are' → logprob: -4.047693252563477
    4. 'are' → logprob: -4.297693252563477
    5. '```' → logprob: -5.047693252563477
    6. 'arc' → logprob: -5.297693252563477
    7. ' edge' → logprob: -5.797693252563477
    8. 'edge' → logprob: -5.922693252563477
    9. ''ar' → logprob: -6.047693252563477
    10. ' ' → logprob: -6.047693252563477

Token 81: ' route' (ID: 9656)
  Prédit: ' ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.06961102038621902
    2. ' are' → logprob: -3.694611072540283
    3. 'ar' → logprob: -3.819611072540283
    4. ' ' → logprob: -4.569611072540283
    5. 'are' → logprob: -5.569611072540283
    6. ''ar' → logprob: -6.569611072540283
    7. '```' → logprob: -7.194611072540283
    8. ' rue' → logprob: -7.694611072540283
    9. ' edge' → logprob: -7.944611072540283
    10. ' route' → logprob: -8.069610595703125

Token 82: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2140975296497345
    2. 'est' → logprob: -2.589097499847412
    3. 's' → logprob: -2.964097499847412
    4. '#' → logprob: -4.714097499847412
    5. ' s' → logprob: -4.839097499847412
    6. ' ' → logprob: -5.089097499847412
    7. ' a' → logprob: -5.339097499847412
    8. 'a' → logprob: -5.589097499847412
    9. ' is' → logprob: -5.839097499847412
    10. ' des' → logprob: -6.214097499847412

Token 83: ' invers' (ID: 38721)
  Prédit: ' invers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' invers' → logprob: -0.23534297943115234
    2. 'in' → logprob: -2.1103429794311523
    3. ' mod' → logprob: -2.8603429794311523
    4. ' chang' → logprob: -4.360342979431152
    5. 'chang' → logprob: -5.110342979431152
    6. 'mod' → logprob: -5.110342979431152
    7. 'invert' → logprob: -6.360342979431152
    8. 'inverse' → logprob: -7.110342979431152
    9. 'modifiable' → logprob: -7.360342979431152
    10. 'ch' → logprob: -7.485342979431152

Token 84: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.1606135219335556
    2. 'é' → logprob: -1.9106135368347168
    3. 'e' → logprob: -8.785613059997559
    4. 'i' → logprob: -10.285613059997559
    5. 'ées' → logprob: -10.410613059997559
    6. '�' → logprob: -10.535613059997559
    7. 'í' → logprob: -10.660613059997559
    8. 'ê' → logprob: -11.160613059997559
    9. 'ee' → logprob: -11.285613059997559
    10. '#' → logprob: -12.035613059997559

Token 85: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7738126516342163
    2. 'def' → logprob: -1.0238126516342163
    3. '

' → logprob: -2.148812770843506
    4. '\' → logprob: -3.648812770843506
    5. '\n' → logprob: -4.148812770843506
    6. '' → logprob: -5.023812770843506
    7. '```' → logprob: -5.148812770843506
    8. '
' → logprob: -5.773812770843506
    9. 'n' → logprob: -6.273812770843506
    10. 'class' → logprob: -6.898812770843506

Token 86: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12737877666950226
    2. '

' → logprob: -2.5023787021636963
    3. '
' → logprob: -3.8773787021636963
    4. 'n' → logprob: -4.752378940582275
    5. '\n' → logprob: -6.002378940582275
    6. '\' → logprob: -6.377378940582275
    7. '```' → logprob: -6.377378940582275
    8. 'class' → logprob: -6.627378940582275
    9. '#' → logprob: -8.002378463745117
    10. '' → logprob: -8.502378463745117

Token 87: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05272632837295532
    2. '\' → logprob: -3.3027262687683105
    3. '\n' → logprob: -5.1777262687683105
    4. 'n' → logprob: -5.1777262687683105
    5. '```' → logprob: -6.8027262687683105
    6. '#' → logprob: -7.3027262687683105
    7. 'class' → logprob: -7.5527262687683105
    8. '
' → logprob: -8.302726745605469
    9. 'import' → logprob: -8.302726745605469
    10. ' 
' → logprob: -9.177726745605469

Token 88: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008775762282311916
    2. 'n' → logprob: -4.88377571105957
    3. 'class' → logprob: -7.75877571105957
    4. '#' → logprob: -8.63377571105957
    5. 'from' → logprob: -8.63377571105957
    6. 'import' → logprob: -9.38377571105957
    7. '\' → logprob: -9.88377571105957
    8. 'd' → logprob: -10.00877571105957
    9. 'N' → logprob: -10.00877571105957
    10. ' def' → logprob: -10.00877571105957

Token 89: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -1.4130311012268066
    2. 'xim' → logprob: -1.7880311012268066
    3. 'ch' → logprob: -1.9130311012268066
    4. '#' → logprob: -2.0380311012268066
    5. 'fond' → logprob: -2.6630311012268066
    6. 'x' → logprob: -2.9130311012268066
    7. 'ches' → logprob: -3.0380311012268066
    8. 'cher' → logprob: -3.0380311012268066
    9. 'ach' → logprob: -3.1630311012268066
    10. 'xi' → logprob: -4.288031101226807

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13883540034294128
    2. ' :' → logprob: -2.1388354301452637
    3. 'def' → logprob: -4.888835430145264
    4. ',' → logprob: -5.763835430145264
    5. '#' → logprob: -8.138834953308105
    6. 'd' → logprob: -8.388834953308105
    7. ':
' → logprob: -9.138834953308105
    8. 'de' → logprob: -9.388834953308105
    9. ' def' → logprob: -9.513834953308105
    10. '=' → logprob: -10.138834953308105

Token 91: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2570186257362366
    2. ' def' → logprob: -1.5070185661315918
    3. '#' → logprob: -7.257018566131592
    4. 'd' → logprob: -7.257018566131592
    5. 'import' → logprob: -7.632018566131592
    6. 'distance' → logprob: -7.757018566131592
    7. 'from' → logprob: -8.00701904296875
    8. ' #' → logprob: -8.13201904296875
    9. '```' → logprob: -8.25701904296875
    10. 'n' → logprob: -8.25701904296875

Token 92: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37415745854377747
    2. ' def' → logprob: -1.624157428741455
    3. 'd' → logprob: -2.749157428741455
    4. '#' → logprob: -4.249157428741455
    5. ' d' → logprob: -4.624157428741455
    6. ' #' → logprob: -4.999157428741455
    7. 'from' → logprob: -5.499157428741455
    8. ' ' → logprob: -5.874157428741455
    9. 'import' → logprob: -5.874157428741455
    10. ' from' → logprob: -6.499157428741455

Token 93: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.026599645614624
    2. 'from' → logprob: -1.026599645614624
    3. '#' → logprob: -1.401599645614624
    4. 'd' → logprob: -3.776599645614624
    5. 'import' → logprob: -4.526599884033203
    6. 'dist' → logprob: -6.526599884033203
    7. 'On' → logprob: -7.026599884033203
    8. 'distance' → logprob: -8.401599884033203
    9. '1' → logprob: -8.526599884033203
    10. '
' → logprob: -9.276599884033203

Token 94: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08336290717124939
    2. '#' → logprob: -3.0833628177642822
    3. 'def' → logprob: -4.333363056182861
    4. '-' → logprob: -5.458363056182861
    5. ' ' → logprob: -5.583363056182861
    6. ' :' → logprob: -5.708363056182861
    7. 'd' → logprob: -6.583363056182861
    8. ',' → logprob: -6.708363056182861
    9. '.' → logprob: -6.708363056182861
    10. ' #' → logprob: -6.958363056182861

Token 95: ' Calcul' (ID: 57243)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9523125290870667
    2. 'Constru' → logprob: -1.0773124694824219
    3. '#' → logprob: -2.202312469482422
    4. ' Constru' → logprob: -2.952312469482422
    5. 'import' → logprob: -2.952312469482422
    6. 'Créer' → logprob: -4.202312469482422
    7. 'Lire' → logprob: -4.577312469482422
    8. ' from' → logprob: -4.702312469482422
    9. ' construire' → logprob: -5.202312469482422
    10. 'def' → logprob: -5.702312469482422

Token 96: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0021038639824837446
    2. 'e' → logprob: -6.627103805541992
    3. 'ateur' → logprob: -7.877103805541992
    4. ' de' → logprob: -9.877103805541992
    5. 'ez' → logprob: -10.002103805541992
    6. 'ons' → logprob: -10.127103805541992
    7. 'r' → logprob: -10.127103805541992
    8. 'ate' → logprob: -10.377103805541992
    9. 'atrice' → logprob: -10.377103805541992
    10. 'é' → logprob: -10.752103805541992

Token 97: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.23832449316978455
    2. ' la' → logprob: -1.988324522972107
    3. 'les' → logprob: -2.7383244037628174
    4. ' ' → logprob: -5.7383246421813965
    5. ' distances' → logprob: -6.2383246421813965
    6. 'la' → logprob: -6.6133246421813965
    7. ' deux' → logprob: -7.2383246421813965
    8. ' d' → logprob: -7.2383246421813965
    9. 'd' → logprob: -7.4883246421813965
    10. ' le' → logprob: -7.8633246421813965

Token 98: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.944056510925293
    2. 'plus' → logprob: -1.069056510925293
    3. 'distance' → logprob: -1.694056510925293
    4. 'dist' → logprob: -3.319056510925293
    5. ' distance' → logprob: -3.569056510925293
    6. ' shortest' → logprob: -5.319056510925293
    7. ' distances' → logprob: -5.319056510925293
    8. 'graph' → logprob: -5.819056510925293
    9. 'd' → logprob: -6.194056510925293
    10. ' dist' → logprob: -7.069056510925293

Token 99: ' courte' (ID: 130258)
  Prédit: ' courte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' courte' → logprob: -0.22896668314933777
    2. ' court' → logprob: -2.72896671295166
    3. 'cour' → logprob: -2.72896671295166
    4. ' cour' → logprob: -3.22896671295166
    5. 'court' → logprob: -4.35396671295166
    6. '-' → logprob: -5.35396671295166
    7. ' short' → logprob: -5.72896671295166
    8. ' longue' → logprob: -5.72896671295166
    9. ' ' → logprob: -6.10396671295166
    10. '```' → logprob: -6.47896671295166

Token 100: ' distance' (ID: 9324)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.0816829204559326
    2. '_path' → logprob: -1.3316829204559326
    3. '_che' → logprob: -2.2066829204559326
    4. '_dist' → logprob: -2.4566829204559326
    5. '_paths' → logprob: -2.5816829204559326
    6. '_' → logprob: -3.0816829204559326
    7. 'distance' → logprob: -3.2066829204559326
    8. ' distance' → logprob: -4.331683158874512
    9. 'dist' → logprob: -5.331683158874512
    10. ' _' → logprob: -5.331683158874512

Token 101: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9331865906715393
    2. ' entre' → logprob: -1.4331865310668945
    3. 'de' → logprob: -1.5581865310668945
    4. 'entre' → logprob: -3.5581865310668945
    5. 'from' → logprob: -3.6831865310668945
    6. ' depuis' → logprob: -4.0581865310668945
    7. 's' → logprob: -4.1831865310668945
    8. ' initial' → logprob: -4.4331865310668945
    9. ' d' → logprob: -4.5581865310668945
    10. 'initial' → logprob: -4.6831865310668945

Token 102: ' ' (ID: 220)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.0449624061584473
    2. ' ' → logprob: -1.4199624061584473
    3. '1' → logprob: -2.1699624061584473
    4. ' l' → logprob: -2.2949624061584473
    5. 'l' → logprob: -2.9199624061584473
    6. ' la' → logprob: -3.1699624061584473
    7. 't' → logprob: -3.2949624061584473
    8. 'cha' → logprob: -3.6699624061584473
    9. ' toutes' → logprob: -4.919962406158447
    10. 'la' → logprob: -5.169962406158447

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7656345367431641
    2. 'l' → logprob: -1.515634536743164
    3. 'la' → logprob: -1.640634536743164
    4. 't' → logprob: -3.140634536743164
    5. ' ' → logprob: -3.640634536743164
    6. ' la' → logprob: -3.890634536743164
    7. 'cha' → logprob: -4.140634536743164
    8. ' l' → logprob: -5.015634536743164
    9. 'p' → logprob: -5.765634536743164
    10. ' chaque' → logprob: -6.015634536743164

Token 104: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07172656059265137
    2. ' ' → logprob: -2.9467265605926514
    3. ' jusqu' → logprob: -4.8217267990112305
    4. 'à' → logprob: -5.5717267990112305
    5. ' vers' → logprob: -6.3217267990112305
    6. ' aux' → logprob: -8.19672679901123
    7. '  ' → logprob: -8.19672679901123
    8. ',' → logprob: -8.19672679901123
    9. '0' → logprob: -8.19672679901123
    10. ' to' → logprob: -8.32172679901123

Token 105: ' tous' (ID: 10688)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.8955665230751038
    2. 't' → logprob: -1.645566463470459
    3. ' tous' → logprob: -1.895566463470459
    4. ' chaque' → logprob: -2.145566463470459
    5. ' ' → logprob: -2.770566463470459
    6. ' all' → logprob: -3.145566463470459
    7. ' t' → logprob: -4.895566463470459
    8. 'tout' → logprob: -5.395566463470459
    9. ' n' → logprob: -5.520566463470459
    10. 'all' → logprob: -6.645566463470459

Token 106: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.042233023792505264
    2. 'les' → logprob: -3.4172329902648926
    3. ' vertices' → logprob: -5.667232990264893
    4. ' ' → logprob: -5.917232990264893
    5. ' nodes' → logprob: -7.792232990264893
    6. ',' → logprob: -7.917232990264893
    7. 'es' → logprob: -8.41723346710205
    8. ' points' → logprob: -8.41723346710205
    9. 'vertices' → logprob: -8.66723346710205
    10. 's' → logprob: -8.66723346710205

Token 107: ' somm' (ID: 44830)
  Prédit: ' noe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.38514089584350586
    2. ' somm' → logprob: -1.5101408958435059
    3. ' points' → logprob: -3.260140895843506
    4. ' n' → logprob: -3.760140895843506
    5. 'n' → logprob: -4.885140895843506
    6. ' nodes' → logprob: -4.885140895843506
    7. 's' → logprob: -5.260140895843506
    8. ' autres' → logprob: -5.385140895843506
    9. ' sommet' → logprob: -5.635140895843506
    10. ' ' → logprob: -6.135140895843506

Token 108: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0004510493890848011
    2. 'et' → logprob: -8.00045108795166
    3. 'ètres' → logprob: -10.37545108795166
    4. 'etes' → logprob: -10.62545108795166
    5. 'ètes' → logprob: -10.87545108795166
    6. 'êts' → logprob: -11.37545108795166
    7. 'è' → logprob: -11.62545108795166
    8. '#' → logprob: -11.87545108795166
    9. 'es' → logprob: -12.50045108795166
    10. 'ès' → logprob: -13.62545108795166

Token 109: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07762395590543747
    2. '
' → logprob: -3.8276238441467285
    3. '.' → logprob: -4.0776238441467285
    4. ',
' → logprob: -4.5776238441467285
    5. 'import' → logprob: -4.8276238441467285
    6. '\n' → logprob: -5.4526238441467285
    7. '#' → logprob: -5.7026238441467285
    8. '\' → logprob: -6.2026238441467285
    9. ' ,' → logprob: -6.5776238441467285
    10. 'graph' → logprob: -6.7026238441467285

Token 110: 'dist' (ID: 24126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20755605399608612
    2. ' )' → logprob: -2.2075560092926025
    3. 'graph' → logprob: -4.332556247711182
    4. ' using' → logprob: -4.832556247711182
    5. ' y' → logprob: -4.957556247711182
    6. 'G' → logprob: -4.957556247711182
    7. ' graph' → logprob: -5.332556247711182
    8. 'd' → logprob: -5.457556247711182
    9. 'using' → logprob: -5.707556247711182
    10. 'y' → logprob: -5.957556247711182

Token 111: '1' (ID: 16)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.6329153180122375
    2. ')' → logprob: -1.2579152584075928
    3. 'ance' → logprob: -2.1329152584075928
    4. ',' → logprob: -3.1329152584075928
    5. 'a' → logprob: -4.882915496826172
    6. ' )' → logprob: -5.382915496826172
    7. '_' → logprob: -5.507915496826172
    8. ' ' → logprob: -7.007915496826172
    9. 's' → logprob: -7.257915496826172
    10. 'anc' → logprob: -7.882915496826172

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028486566618084908
    2. ',' → logprob: -4.653486728668213
    3. ' )' → logprob: -4.653486728668213
    4. ')
' → logprob: -4.903486728668213
    5. '[' → logprob: -7.528486728668213
    6. ',)' → logprob: -7.903486728668213
    7. ' )
' → logprob: -8.528486251831055
    8. ')
' → logprob: -9.528486251831055
    9. '`)' → logprob: -9.903486251831055
    10. ')

' → logprob: -10.278486251831055

Token 113: ' avec' (ID: 3937)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4437142610549927
    2. '\n' → logprob: -1.6937142610549927
    3. ',' → logprob: -2.693714141845703
    4. '\' → logprob: -3.193714141845703
    5. 'import' → logprob: -4.193714141845703
    6. '#' → logprob: -4.443714141845703
    7. '

' → logprob: -4.568714141845703
    8. '```' → logprob: -5.068714141845703
    9. '
' → logprob: -5.443714141845703
    10. '' → logprob: -5.443714141845703

Token 114: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.8180095553398132
    2. 'D' → logprob: -1.193009614944458
    3. 'd' → logprob: -1.443009614944458
    4. ' d' → logprob: -5.318009376525879
    5. 'l' → logprob: -5.818009376525879
    6. ' heap' → logprob: -5.943009376525879
    7. 'heap' → logprob: -6.068009376525879
    8. 'une' → logprob: -6.193009376525879
    9. '```' → logprob: -6.318009376525879
    10. 'la' → logprob: -7.193009376525879

Token 115: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.006829863879829645
    2. 'ijk' → logprob: -5.006829738616943
    3. 'jik' → logprob: -9.506830215454102
    4. 'ij' → logprob: -10.381830215454102
    5. '```' → logprob: -12.881830215454102
    6. '   ' → logprob: -13.381830215454102
    7. 'ijks' → logprob: -13.631830215454102
    8. 'ijkl' → logprob: -14.131830215454102
    9. 'ik' → logprob: -14.256830215454102
    10. '#' → logprob: -14.506830215454102

Token 116: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.233581081032753
    2. ',' → logprob: -2.858581066131592
    3. 'import' → logprob: -3.358581066131592
    4. '\n' → logprob: -3.483581066131592
    5. '#' → logprob: -4.358581066131592
    6. 'def' → logprob: -4.358581066131592
    7. '

' → logprob: -4.483581066131592
    8. ',
' → logprob: -4.483581066131592
    9. '\' → logprob: -4.733581066131592
    10. ')' → logprob: -5.233581066131592

Token 117: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9129399061203003
    2. ' un' → logprob: -1.4129399061203003
    3. ' ' → logprob: -2.03794002532959
    4. ' l' → logprob: -2.41294002532959
    5. ' la' → logprob: -3.53794002532959
    6. 'l' → logprob: -3.91294002532959
    7. ' les' → logprob: -4.03794002532959
    8. ' graph' → logprob: -4.16294002532959
    9. 'le' → logprob: -4.28794002532959
    10. ' adjacency' → logprob: -5.53794002532959

Token 118: ' grap' (ID: 60955)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3874445855617523
    2. ' grap' → logprob: -1.3874446153640747
    3. 'graph' → logprob: -2.762444496154785
    4. ' ' → logprob: -5.512444496154785
    5. 'gr' → logprob: -7.012444496154785
    6. ' g' → logprob: -7.637444496154785
    7. ' '' → logprob: -8.137444496154785
    8. 'g' → logprob: -8.387444496154785
    9. ' original' → logprob: -8.387444496154785
    10. ' graphique' → logprob: -8.574944496154785

Token 119: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.5880167484283447
    2. 'ph' → logprob: -1.4630167484283447
    3. 'phe' → logprob: -2.3380167484283447
    4. 'he' → logprob: -2.7130167484283447
    5. 'h' → logprob: -3.0880167484283447
    6. 'aph' → logprob: -6.338016510009766
    7. '#' → logprob: -6.838016510009766
    8. 'hep' → logprob: -7.338016510009766
    9. '```' → logprob: -8.088016510009766
    10. 'hap' → logprob: -8.963016510009766

Token 120: ' initial' (ID: 4871)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orient' → logprob: -1.2394626140594482
    2. '_' → logprob: -2.1144626140594482
    3. ' orient' → logprob: -2.4894626140594482
    4. ',' → logprob: -2.6144626140594482
    5. 'G' → logprob: -2.7394626140594482
    6. '.' → logprob: -2.8644626140594482
    7. 'or' → logprob: -2.9894626140594482
    8. ' original' → logprob: -2.9894626140594482
    9. '_original' → logprob: -3.4894626140594482
    10. ' dirig' → logprob: -3.8644626140594482

Token 121: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17373357713222504
    2. '\n' → logprob: -3.0487334728240967
    3. ',
' → logprob: -3.1737334728240967
    4. ',' → logprob: -3.9237334728240967
    5. '2' → logprob: -4.673733711242676
    6. '
' → logprob: -5.048733711242676
    7. '#' → logprob: -5.048733711242676
    8. 'import' → logprob: -5.298733711242676
    9. '#
' → logprob: -5.673733711242676
    10. '

' → logprob: -5.798733711242676

Token 122: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04046744853258133
    2. '\n' → logprob: -3.5404675006866455
    3. '

' → logprob: -5.290467262268066
    4. '#' → logprob: -6.915467262268066
    5. '```' → logprob: -6.915467262268066
    6. '\' → logprob: -7.290467262268066
    7. '
' → logprob: -7.415467262268066
    8. ',
' → logprob: -7.540467262268066
    9. 'import' → logprob: -7.790467262268066
    10. '2' → logprob: -7.915467262268066

Token 123: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2551109194755554
    2. '\n' → logprob: -2.2551109790802
    3. '

' → logprob: -3.5051109790802
    4. ',' → logprob: -3.5051109790802
    5. '\' → logprob: -3.8801109790802
    6. ',
' → logprob: -4.630110740661621
    7. '
' → logprob: -5.380110740661621
    8. 'import' → logprob: -5.630110740661621
    9. '```' → logprob: -5.630110740661621
    10. '' → logprob: -5.880110740661621

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.049281295388936996
    2. '#' → logprob: -3.549281358718872
    3. 'graph' → logprob: -4.174281120300293
    4. 'import' → logprob: -6.424281120300293
    5. 'def' → logprob: -7.299281120300293
    6. ' ' → logprob: -8.174281120300293
    7. 'from' → logprob: -8.299281120300293
    8. '1' → logprob: -8.424281120300293
    9. '
' → logprob: -8.424281120300293
    10. '```' → logprob: -8.799281120300293

Token 125: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.017704999074339867
    2. '#' → logprob: -4.142704963684082
    3. 'import' → logprob: -6.767704963684082
    4. ',' → logprob: -8.642704963684082
    5. '.
' → logprob: -8.892704963684082
    6. '
' → logprob: -9.267704963684082
    7. ' #' → logprob: -11.017704963684082
    8. ')' → logprob: -11.142704963684082
    9. 'def' → logprob: -11.142704963684082
    10. '```' → logprob: -11.142704963684082

Token 126: ' Calcul' (ID: 57243)
  Prédit: 'Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calcul' → logprob: -0.08299872279167175
    2. ' Calcul' → logprob: -2.582998752593994
    3. 'Constru' → logprob: -6.332998752593994
    4. '#' → logprob: -6.582998752593994
    5. ' calcul' → logprob: -7.707998752593994
    6. 'Faire' → logprob: -9.082998275756836
    7. ' Constru' → logprob: -9.707998275756836
    8. 'Cal' → logprob: -9.957998275756836
    9. 'Créer' → logprob: -10.082998275756836
    10. ' #' → logprob: -10.207998275756836

Token 127: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -6.873571692267433e-05
    2. 'r' → logprob: -10.875068664550781
    3. '#' → logprob: -11.875068664550781
    4. 'érer' → logprob: -12.000068664550781
    5. 'rer' → logprob: -12.000068664550781
    6. '=' → logprob: -12.125068664550781
    7. 'iser' → logprob: -12.125068664550781
    8. 'uler' → logprob: -12.625068664550781
    9. 'uer' → logprob: -12.625068664550781
    10. '1' → logprob: -12.875068664550781

Token 128: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.005929274018853903
    2. 'la' → logprob: -5.255929470062256
    3. ' ' → logprob: -7.630929470062256
    4. ' les' → logprob: -8.755928993225098
    5. ' ' → logprob: -10.880928993225098
    6. 'les' → logprob: -11.505928993225098
    7. '_la' → logprob: -12.005928993225098
    8. '#' → logprob: -12.255928993225098
    9. ' the' → logprob: -12.755928993225098
    10. '  ' → logprob: -13.255928993225098

Token 129: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3877594769001007
    2. ' plus' → logprob: -1.1377594470977783
    3. 'la' → logprob: -8.7627592086792
    4. '#' → logprob: -8.8877592086792
    5. 'dist' → logprob: -9.1377592086792
    6. ' la' → logprob: -9.1377592086792
    7. '```' → logprob: -9.2627592086792
    8. 'distance' → logprob: -9.3877592086792
    9. '+' → logprob: -10.3877592086792
    10. ' distance' → logprob: -10.5127592086792

Token 130: ' courte' (ID: 130258)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.10499626398086548
    2. ' courte' → logprob: -2.8549962043762207
    3. 'short' → logprob: -3.2299962043762207
    4. 'court' → logprob: -6.354996204376221
    5. ' cour' → logprob: -7.979996204376221
    6. 'pro' → logprob: -8.854996681213379
    7. '```' → logprob: -9.104996681213379
    8. '#' → logprob: -9.979996681213379
    9. ' short' → logprob: -10.229996681213379
    10. ' longue' → logprob: -10.729996681213379

Token 131: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.43141478300094604
    2. 'distance' → logprob: -1.0564148426055908
    3. 'dist' → logprob: -6.306414604187012
    4. ' distances' → logprob: -7.681414604187012
    5. ' dist' → logprob: -8.306414604187012
    6. ' ' → logprob: -10.306414604187012
    7. '_distance' → logprob: -10.431414604187012
    8. ' distante' → logprob: -11.056414604187012
    9. 'import' → logprob: -11.556414604187012
    10. 'Distance' → logprob: -11.681414604187012

Token 132: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.051688775420188904
    2. 'de' → logprob: -3.1766886711120605
    3. 'from' → logprob: -5.4266886711120605
    4. ' des' → logprob: -6.0516886711120605
    5. ' from' → logprob: -7.3016886711120605
    6. ' ' → logprob: -7.9266886711120605
    7. 'des' → logprob: -8.801689147949219
    8. 'dist' → logprob: -8.926689147949219
    9. ' à' → logprob: -9.176689147949219
    10. ' depuis' → logprob: -9.426689147949219

Token 133: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5009729862213135
    2. ' ' → logprob: -1.6259729862213135
    3. ' n' → logprob: -2.6259729862213135
    4. 'n' → logprob: -2.7509729862213135
    5. 'len' → logprob: -4.500972747802734
    6. ' N' → logprob: -4.625972747802734
    7. ' l' → logprob: -4.750972747802734
    8. ' len' → logprob: -4.875972747802734
    9. 'l' → logprob: -5.125972747802734
    10. 'N' → logprob: -5.250972747802734

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.753517210483551
    2. 'n' → logprob: -1.0035171508789062
    3. ' n' → logprob: -2.5035171508789062
    4. 'N' → logprob: -2.8785171508789062
    5. ' N' → logprob: -4.878517150878906
    6. ' ' → logprob: -5.003517150878906
    7. 'len' → logprob: -5.378517150878906
    8. '1' → logprob: -6.003517150878906
    9. ' len' → logprob: -6.503517150878906
    10. 'l' → logprob: -7.253517150878906

Token 135: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.003936867695301771
    2. 'à' → logprob: -5.628936767578125
    3. ' =' → logprob: -9.878936767578125
    4. ' to' → logprob: -9.878936767578125
    5. ''à' → logprob: -9.878936767578125
    6. 'a' → logprob: -10.253936767578125
    7. ' a' → logprob: -10.378936767578125
    8. ' ' → logprob: -10.503936767578125
    9. '=' → logprob: -11.253936767578125
    10. '’à' → logprob: -11.378936767578125

Token 136: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.04885122925043106
    2. 't' → logprob: -3.048851251602173
    3. ' ' → logprob: -9.048851013183594
    4. 'Tous' → logprob: -9.798851013183594
    5. ' all' → logprob: -10.673851013183594
    6. 'tout' → logprob: -10.923851013183594
    7. ' tout' → logprob: -11.048851013183594
    8. ' ' → logprob: -11.548851013183594
    9. '_t' → logprob: -11.923851013183594
    10. ' t' → logprob: -12.423851013183594

Token 137: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.020120898261666298
    2. 'les' → logprob: -4.395121097564697
    3. ' ' → logprob: -6.645121097564697
    4. '<|end|>' → logprob: -7.020121097564697
    5. '```' → logprob: -7.145121097564697
    6. 's' → logprob: -7.395121097564697
    7. ' ' → logprob: -7.395121097564697
    8. ' le' → logprob: -7.520121097564697
    9. 'tokens' → logprob: -7.895121097564697
    10. '  ' → logprob: -8.020120620727539

Token 138: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.028041217476129532
    2. 's' → logprob: -3.903041124343872
    3. ' sommet' → logprob: -5.528041362762451
    4. 'som' → logprob: -7.153041362762451
    5. ' points' → logprob: -7.153041362762451
    6. ' ' → logprob: -7.528041362762451
    7. ' n' → logprob: -8.528040885925293
    8. ' autres' → logprob: -8.778040885925293
    9. ' ' → logprob: -8.903040885925293
    10. 'summ' → logprob: -9.153040885925293

Token 139: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.3699013590812683
    2. 'es' → logprob: -1.619901418685913
    3. 'êts' → logprob: -3.494901418685913
    4. 'ètres' → logprob: -4.369901180267334
    5. 'ètes' → logprob: -4.369901180267334
    6. 'és' → logprob: -4.869901180267334
    7. 'ts' → logprob: -5.119901180267334
    8. 'et' → logprob: -5.369901180267334
    9. 'ômes' → logprob: -5.369901180267334
    10. 'êtres' → logprob: -5.744901180267334

Token 140: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.001787513610906899
    2. '(' → logprob: -7.0017876625061035
    3. '(dist' → logprob: -7.7517876625061035
    4. ' dans' → logprob: -9.001787185668945
    5. '#' → logprob: -9.501787185668945
    6. ' avec' → logprob: -9.626787185668945
    7. 'dans' → logprob: -10.376787185668945
    8. ' ' → logprob: -10.376787185668945
    9. 'dist' → logprob: -10.501787185668945
    10. ',' → logprob: -10.751787185668945

Token 141: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5155555605888367
    2. ' dist' → logprob: -1.5155556201934814
    3. ' ' → logprob: -3.2655556201934814
    4. ' dans' → logprob: -3.2655556201934814
    5. 'dans' → logprob: -3.8905556201934814
    6. ' en' → logprob: -4.015555381774902
    7. ')' → logprob: -4.015555381774902
    8. '2' → logprob: -4.765555381774902
    9. ' sur' → logprob: -4.890555381774902
    10. ' avec' → logprob: -4.890555381774902

Token 142: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3254562020301819
    2. '2' → logprob: -1.325456142425537
    3. ' ' → logprob: -4.700456142425537
    4. ')' → logprob: -5.950456142425537
    5. 's' → logprob: -9.325456619262695
    6. 'initial' → logprob: -9.700456619262695
    7. '```' → logprob: -9.825456619262695
    8. ' )' → logprob: -10.075456619262695
    9. '   ' → logprob: -10.200456619262695
    10. '  ' → logprob: -10.825456619262695

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07040396332740784
    2. ' )' → logprob: -2.695404052734375
    3. ' sur' → logprob: -8.695404052734375
    4. ' avec' → logprob: -8.945404052734375
    5. ' dans' → logprob: -9.945404052734375
    6. 'sur' → logprob: -10.695404052734375
    7. ' ' → logprob: -10.945404052734375
    8. 'avec' → logprob: -11.695404052734375
    9. 'dans' → logprob: -11.695404052734375
    10. ',' → logprob: -11.820404052734375

Token 144: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21196523308753967
    2. '#' → logprob: -2.836965322494507
    3. '
' → logprob: -3.836965322494507
    4. 'import' → logprob: -4.211965084075928
    5. ' avec' → logprob: -4.211965084075928
    6. ' (' → logprob: -4.461965084075928
    7. '.' → logprob: -4.461965084075928
    8. ' en' → logprob: -4.961965084075928
    9. 'graph' → logprob: -5.086965084075928
    10. 'dist' → logprob: -5.211965084075928

Token 145: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.3528900444507599
    2. 'D' → logprob: -1.2278900146484375
    3. 'd' → logprob: -6.6028900146484375
    4. ' la' → logprob: -6.9778900146484375
    5. ' le' → logprob: -7.7278900146484375
    6. 'l' → logprob: -7.9778900146484375
    7. ' d' → logprob: -8.352890014648438
    8. 'heap' → logprob: -8.477890014648438
    9. 'la' → logprob: -8.852890014648438
    10. ' heap' → logprob: -8.977890014648438

Token 146: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00012821101699955761
    2. 'ijk' → logprob: -9.000127792358398
    3. 'jik' → logprob: -12.500127792358398
    4. 'ij' → logprob: -14.625127792358398
    5. 'ist' → logprob: -15.125127792358398
    6. 'ijks' → logprob: -16.0001277923584
    7. '```' → logprob: -16.6251277923584
    8. '#' → logprob: -16.8751277923584
    9. 'jk' → logprob: -17.2501277923584
    10. 'import' → logprob: -17.8751277923584

Token 147: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.7154192328453064
    2. ' sur' → logprob: -0.8404192328453064
    3. '#' → logprob: -3.340419292449951
    4. ' (' → logprob: -4.215419292449951
    5. 'import' → logprob: -4.715419292449951
    6. '(' → logprob: -5.090419292449951
    7. 'def' → logprob: -5.465419292449951
    8. 'dans' → logprob: -5.965419292449951
    9. ' dans' → logprob: -6.590419292449951
    10. '(graph' → logprob: -7.340419292449951

Token 148: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.45531392097473145
    2. 'le' → logprob: -1.0803139209747314
    3. 'l' → logprob: -4.455313682556152
    4. 'la' → logprob: -5.830313682556152
    5. 'les' → logprob: -5.955313682556152
    6. ' l' → logprob: -6.205313682556152
    7. ' les' → logprob: -6.705313682556152
    8. ' la' → logprob: -6.705313682556152
    9. ' ' → logprob: -6.955313682556152
    10. ' ' → logprob: -7.330313682556152

Token 149: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.15032099187374115
    2. ' grap' → logprob: -2.0253210067749023
    3. 'graph' → logprob: -5.150321006774902
    4. ' graph' → logprob: -7.150321006774902
    5. '#' → logprob: -7.525321006774902
    6. '```' → logprob: -8.650321006774902
    7. ' code' → logprob: -10.337821006774902
    8. ' ' → logprob: -10.462821006774902
    9. ' gr' → logprob: -10.525321006774902
    10. ' #' → logprob: -10.525321006774902

Token 150: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.0908375084400177
    2. 'he' → logprob: -3.3408374786376953
    3. 'phe' → logprob: -3.8408374786376953
    4. 'aph' → logprob: -4.840837478637695
    5. 'ph' → logprob: -4.840837478637695
    6. 'raph' → logprob: -5.590837478637695
    7. '#' → logprob: -5.715837478637695
    8. 'ophe' → logprob: -7.090837478637695
    9. 'ap' → logprob: -7.090837478637695
    10. '```' → logprob: -7.340837478637695

Token 151: ' inverse' (ID: 53743)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.8782674670219421
    2. 'initial' → logprob: -1.628267526626587
    3. '_initial' → logprob: -2.753267526626587
    4. '_' → logprob: -3.003267526626587
    5. '_original' → logprob: -3.003267526626587
    6. ' original' → logprob: -3.128267526626587
    7. '_inverse' → logprob: -3.628267526626587
    8. '_out' → logprob: -3.753267526626587
    9. 'original' → logprob: -4.003267288208008
    10. '_reverse' → logprob: -4.253267288208008

Token 152: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8728386163711548
    2. '.' → logprob: -1.3728386163711548
    3. 'graph' → logprob: -2.2478384971618652
    4. 'import' → logprob: -2.7478384971618652
    5. ',' → logprob: -3.1228384971618652
    6. '
' → logprob: -3.4978384971618652
    7. '#' → logprob: -3.7478384971618652
    8. '

' → logprob: -4.247838497161865
    9. ':' → logprob: -4.997838497161865
    10. ',
' → logprob: -5.747838497161865

Token 153: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29676276445388794
    2. '

' → logprob: -2.921762704849243
    3. '
' → logprob: -3.296762704849243
    4. 'graph' → logprob: -3.546762704849243
    5. '(
' → logprob: -3.796762704849243
    6. ',' → logprob: -3.796762704849243
    7. 'import' → logprob: -4.296762943267822
    8. 'g' → logprob: -4.671762943267822
    9. ',
' → logprob: -5.046762943267822
    10. 's' → logprob: -5.046762943267822

Token 154: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2009522914886475
    2. 'def' → logprob: -1.7009522914886475
    3. ',' → logprob: -1.8259522914886475
    4. 'graph' → logprob: -3.0759522914886475
    5. ',
' → logprob: -3.2009522914886475
    6. 's' → logprob: -3.2009522914886475
    7. '```' → logprob: -3.5759522914886475
    8. '#' → logprob: -3.5759522914886475
    9. '.
' → logprob: -3.7009522914886475
    10. ')' → logprob: -3.8259522914886475

Token 155: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7568045258522034
    2. ',' → logprob: -1.0068044662475586
    3. ')' → logprob: -2.7568044662475586
    4. 'graph' → logprob: -3.5068044662475586
    5. 'G' → logprob: -4.006804466247559
    6. 'g' → logprob: -4.506804466247559
    7. '#' → logprob: -4.631804466247559
    8. 's' → logprob: -6.256804466247559
    9. 'import' → logprob: -6.256804466247559
    10. ' ,' → logprob: -6.256804466247559

Token 156: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0412517786026
    2. ' afin' → logprob: -2.2912516593933105
    3. ' les' → logprob: -2.4162516593933105
    4. 'les' → logprob: -2.9162516593933105
    5. '#' → logprob: -3.1662516593933105
    6. 'pour' → logprob: -3.4162516593933105
    7. 'le' → logprob: -3.5412516593933105
    8. ' pour' → logprob: -3.5412516593933105
    9. ' )' → logprob: -3.6662516593933105
    10. ' le' → logprob: -3.6662516593933105

Token 157: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5257629752159119
    2. 'on' → logprob: -1.9007630348205566
    3. 'les' → logprob: -2.5257630348205566
    4. ' les' → logprob: -3.2757630348205566
    5. 'l' → logprob: -3.5257630348205566
    6. ' nous' → logprob: -4.400763034820557
    7. ' l' → logprob: -4.400763034820557
    8. 'le' → logprob: -4.400763034820557
    9. 'nous' → logprob: -4.650763034820557
    10. ' il' → logprob: -5.025763034820557

Token 158: ' veut' (ID: 41653)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.9679432511329651
    2. ' peut' → logprob: -1.0929431915283203
    3. ' doit' → logprob: -2.4679431915283203
    4. ' veut' → logprob: -2.5929431915283203
    5. 'a' → logprob: -2.7179431915283203
    6. 've' → logprob: -4.34294319152832
    7. 'est' → logprob: -4.84294319152832
    8. 'do' → logprob: -4.96794319152832
    9. ' a' → logprob: -5.34294319152832
    10. 'n' → logprob: -5.84294319152832

Token 159: ' rapidement' (ID: 43157)
  Prédit: ' pouvoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pouvoir' → logprob: -1.295162320137024
    2. ' vérifier' → logprob: -2.2951622009277344
    3. ' trouver' → logprob: -2.2951622009277344
    4. ' connaître' → logprob: -2.9201622009277344
    5. ' invers' → logprob: -2.9201622009277344
    6. 'tr' → logprob: -3.0451622009277344
    7. ' aussi' → logprob: -3.1701622009277344
    8. 'égal' → logprob: -3.5451622009277344
    9. ' savoir' → logprob: -3.7951622009277344
    10. 'p' → logprob: -3.9201622009277344

Token 160: ' é' (ID: 1212)
  Prédit: ' connaître'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connaître' → logprob: -0.6728262305259705
    2. ' pouvoir' → logprob: -1.9228262901306152
    3. ' savoir' → logprob: -2.5478262901306152
    4. ' trouver' → logprob: -3.0478262901306152
    5. ' connaitre' → logprob: -3.0478262901306152
    6. ' parcour' → logprob: -3.6728262901306152
    7. 'con' → logprob: -3.7978262901306152
    8. 'avoir' → logprob: -4.547826290130615
    9. ' invers' → logprob: -4.672826290130615
    10. 'tr' → logprob: -4.672826290130615

Token 161: 'valuer' (ID: 141145)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0435400009155273
    2. 'crire' → logprob: -1.1685400009155273
    3. 'valuer' → logprob: -1.2935400009155273
    4. 'changer' → logprob: -4.043540000915527
    5. 'ffect' → logprob: -4.793540000915527
    6. 'st' → logprob: -4.918540000915527
    7. 'x' → logprob: -4.918540000915527
    8. 'tre' → logprob: -5.793540000915527
    9. 'fficient' → logprob: -6.043540000915527
    10. 't' → logprob: -6.293540000915527

Token 162: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.2002968788146973
    2. ' l' → logprob: -1.5752968788146973
    3. ' si' → logprob: -1.9502968788146973
    4. ' la' → logprob: -1.9502968788146973
    5. 'les' → logprob: -2.9502968788146973
    6. ' toutes' → logprob: -3.2002968788146973
    7. ' le' → logprob: -3.5752968788146973
    8. 'le' → logprob: -4.200296878814697
    9. ' chaque' → logprob: -4.325296878814697
    10. 'la' → logprob: -4.325296878814697

Token 163: ' distance' (ID: 9324)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -1.2812107801437378
    2. 'distance' → logprob: -1.9062107801437378
    3. ' possibilité' → logprob: -1.9062107801437378
    4. ' sens' → logprob: -2.1562108993530273
    5. 'sens' → logprob: -2.1562108993530273
    6. ' distance' → logprob: -2.7812108993530273
    7. ' plus' → logprob: -4.656210899353027
    8. 'plus' → logprob: -4.906210899353027
    9. 'possible' → logprob: -4.906210899353027
    10. 'direction' → logprob: -5.031210899353027

Token 164: ' depuis' (ID: 16277)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.047357201576233
    2. ' d' → logprob: -2.1723570823669434
    3. ' du' → logprob: -2.4223570823669434
    4. ' des' → logprob: -2.7973570823669434
    5. ' entre' → logprob: -2.9223570823669434
    6. ' inverse' → logprob: -3.0473570823669434
    7. ' à' → logprob: -3.2973570823669434
    8. ')' → logprob: -3.6723570823669434
    9. ' dans' → logprob: -3.6723570823669434
    10. ' pour' → logprob: -3.6723570823669434

Token 165: ' un' (ID: 537)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15163183212280273
    2. ' ' → logprob: -3.1516318321228027
    3. ' la' → logprob: -3.5266318321228027
    4. 'la' → logprob: -3.6516318321228027
    5. ' chaque' → logprob: -4.026631832122803
    6. ' n' → logprob: -5.401631832122803
    7. 'l' → logprob: -5.526631832122803
    8. 'le' → logprob: -6.026631832122803
    9. 'n' → logprob: -6.276631832122803
    10. 't' → logprob: -6.401631832122803

Token 166: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.02373535744845867
    2. 'som' → logprob: -4.398735523223877
    3. ' point' → logprob: -5.898735523223877
    4. ' noe' → logprob: -6.023735523223877
    5. ' somm' → logprob: -6.148735523223877
    6. ' som' → logprob: -6.648735523223877
    7. ' n' → logprob: -7.023735523223877
    8. 'point' → logprob: -7.773735523223877
    9. 's' → logprob: -8.023735046386719
    10. ' node' → logprob: -9.148735046386719

Token 167: ' donné' (ID: 52079)
  Prédit: ' donné'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donné' → logprob: -0.8932688236236572
    2. ' vers' → logprob: -1.2682688236236572
    3. ' cible' → logprob: -2.8932688236236572
    4. 'vers' → logprob: -3.3932688236236572
    5. ')' → logprob: -3.5182688236236572
    6. ' jusqu' → logprob: -3.7682688236236572
    7. ',' → logprob: -3.8932688236236572
    8. ' donnée' → logprob: -4.143268585205078
    9. 'd' → logprob: -4.393268585205078
    10. ' ' → logprob: -4.393268585205078

Token 168: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.5655307769775391
    2. ')' → logprob: -1.440530776977539
    3. ' )' → logprob: -2.190530776977539
    4. ' jusqu' → logprob: -3.440530776977539
    5. ' dans' → logprob: -3.690530776977539
    6. ',' → logprob: -5.065530776977539
    7. 'vers' → logprob: -5.940530776977539
    8. ' en' → logprob: -6.190530776977539
    9. 'dans' → logprob: -6.315530776977539
    10. ' à' → logprob: -6.315530776977539

Token 169: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4991755485534668
    2. ' ' → logprob: -2.124175548553467
    3. '1' → logprob: -2.374175548553467
    4. ' tous' → logprob: -2.874175548553467
    5. 't' → logprob: -3.249175548553467
    6. ' l' → logprob: -3.999175548553467
    7. 'l' → logprob: -4.374175548553467
    8. 'un' → logprob: -4.749175548553467
    9. ' un' → logprob: -5.124175548553467
    10. 'le' → logprob: -5.249175548553467

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48568880558013916
    2. '1' → logprob: -1.9856888055801392
    3. ' ' → logprob: -2.3606886863708496
    4. 't' → logprob: -2.7356886863708496
    5. ' tous' → logprob: -3.4856886863708496
    6. 'la' → logprob: -3.9856886863708496
    7. ' la' → logprob: -4.48568868637085
    8. 'l' → logprob: -4.86068868637085
    9. 'le' → logprob: -5.61068868637085
    10. ' l' → logprob: -5.86068868637085

Token 171: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033288199454545975
    2. ' )' → logprob: -3.6582882404327393
    3. ').' → logprob: -5.40828800201416
    4. ')
' → logprob: -7.28328800201416
    5. ',' → logprob: -7.90828800201416
    6. '),' → logprob: -8.40828800201416
    7. '#' → logprob: -8.53328800201416
    8. '.)' → logprob: -8.65828800201416
    9. '.' → logprob: -8.78328800201416
    10. ' dans' → logprob: -9.53328800201416

Token 172: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19038759171962738
    2. '
' → logprob: -2.065387487411499
    3. '

' → logprob: -4.190387725830078
    4. '```' → logprob: -4.190387725830078
    5. 'import' → logprob: -4.440387725830078
    6. '\n' → logprob: -6.315387725830078
    7. '\' → logprob: -7.065387725830078
    8. '#' → logprob: -7.690387725830078
    9. 'graph' → logprob: -7.815387725830078
    10. ',
' → logprob: -9.065387725830078

Token 173: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026697691529989243
    2. 'graph' → logprob: -4.526697635650635
    3. '
' → logprob: -5.026697635650635
    4. '#' → logprob: -5.651697635650635
    5. '#
' → logprob: -6.026697635650635
    6. 'from' → logprob: -6.901697635650635
    7. 'import' → logprob: -7.401697635650635
    8. '\' → logprob: -7.901697635650635
    9. 'n' → logprob: -7.901697635650635
    10. '

' → logprob: -8.401698112487793

Token 174: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004298726562410593
    2. 'from' → logprob: -5.879298686981201
    3. 'n' → logprob: -7.254298686981201
    4. '#' → logprob: -7.754298686981201
    5. 'graph' → logprob: -8.62929916381836
    6. ' def' → logprob: -9.50429916381836
    7. 'N' → logprob: -10.12929916381836
    8. 'class' → logprob: -10.50429916381836
    9. 'import' → logprob: -10.62929916381836
    10. '
' → logprob: -12.75429916381836

Token 175: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.04094632714986801
    2. ' i' → logprob: -4.6659464836120605
    3. 'i' → logprob: -5.5409464836120605
    4. 'each' → logprob: -5.9159464836120605
    5. 'ch' → logprob: -6.4159464836120605
    6. ' each' → logprob: -6.5409464836120605
    7. ' construire' → logprob: -6.6659464836120605
    8. ' ch' → logprob: -6.6659464836120605
    9. ' cela' → logprob: -6.7909464836120605
    10. 'impl' → logprob: -6.9159464836120605

Token 176: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.1397758573293686
    2. ' edge' → logprob: -2.7647757530212402
    3. 'ar' → logprob: -3.5147757530212402
    4. ' route' → logprob: -4.26477575302124
    5. ' are' → logprob: -4.63977575302124
    6. 'are' → logprob: -5.26477575302124
    7. 'edge' → logprob: -5.63977575302124
    8. 'route' → logprob: -6.51477575302124
    9. ' arc' → logprob: -6.63977575302124
    10. 'arc' → logprob: -8.389776229858398

Token 177: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.10430356115102768
    2. 'c' → logprob: -2.7293035984039307
    3. 'ê' → logprob: -4.229303359985352
    4. 'e' → logprob: -4.854303359985352
    5. 'êt' → logprob: -5.604303359985352
    6. 'te' → logprob: -6.354303359985352
    7. '^' → logprob: -6.604303359985352
    8. 'ę' → logprob: -6.979303359985352
    9. 'ète' → logprob: -7.104303359985352
    10. 't' → logprob: -7.604303359985352

Token 178: ' i' (ID: 575)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.30368345975875854
    2. ' u' → logprob: -2.0536835193634033
    3. ' (' → logprob: -2.6786835193634033
    4. 'u' → logprob: -3.3036835193634033
    5. ' in' → logprob: -4.303683280944824
    6. ',' → logprob: -4.678683280944824
    7. ' ,' → logprob: -6.178683280944824
    8. '(' → logprob: -7.178683280944824
    9. '[u' → logprob: -7.178683280944824
    10. ' ' → logprob: -7.553683280944824

Token 179: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9734837412834167
    2. ',' → logprob: -1.4734838008880615
    3. ':' → logprob: -2.0984838008880615
    4. ' in' → logprob: -2.4734838008880615
    5. ' :' → logprob: -2.5984838008880615
    6. ' ,' → logprob: -3.0984838008880615
    7. '_' → logprob: -3.4734838008880615
    8. ' =' → logprob: -4.348483562469482
    9. 'u' → logprob: -4.973483562469482
    10. ' u' → logprob: -6.098483562469482

Token 180: 'a' (ID: 64)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.139901876449585
    2. ' u' → logprob: -1.514901876449585
    3. 'u' → logprob: -2.014901876449585
    4. ' (' → logprob: -2.514901876449585
    5. '(u' → logprob: -2.639901876449585
    6. ' ,' → logprob: -2.889901876449585
    7. '),' → logprob: -3.639901876449585
    8. ')' → logprob: -3.764901876449585
    9. ' in' → logprob: -3.764901876449585
    10. ' ),' → logprob: -4.514902114868164

Token 181: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40111470222473145
    2. ' ,' → logprob: -1.1511147022247314
    3. '[' → logprob: -5.276114463806152
    4. 'r' → logprob: -5.651114463806152
    5. ',b' → logprob: -6.401114463806152
    6. 'dj' → logprob: -7.151114463806152
    7. 'u' → logprob: -7.651114463806152
    8. 'm' → logprob: -8.026114463806152
    9. ',u' → logprob: -8.401114463806152
    10. 's' → logprob: -8.401114463806152

Token 182: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002684087259694934
    2. ' ,' → logprob: -6.377684116363525
    3. ')' → logprob: -8.127683639526367
    4. '-' → logprob: -8.752683639526367
    5. '),' → logprob: -8.752683639526367
    6. 'a' → logprob: -9.627683639526367
    7. '[' → logprob: -9.627683639526367
    8. ',)' → logprob: -10.377683639526367
    9. ',u' → logprob: -10.627683639526367
    10. ',b' → logprob: -10.627683639526367

Token 183: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.474097341299057
    2. ' b' → logprob: -0.9740973711013794
    3. ' ' → logprob: -11.34909725189209
    4. ' ' → logprob: -12.09909725189209
    5. ',' → logprob: -14.09909725189209
    6. ')' → logprob: -14.47409725189209
    7. '	b' → logprob: -15.09909725189209
    8. '  ' → logprob: -15.22409725189209
    9. '   ' → logprob: -15.34909725189209
    10. ',b' → logprob: -15.59909725189209

Token 184: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41932258009910583
    2. '),' → logprob: -1.2943226099014282
    3. ')' → logprob: -3.5443224906921387
    4. '[i' → logprob: -4.044322490692139
    5. '[' → logprob: -5.669322490692139
    6. '_i' → logprob: -5.919322490692139
    7. ' ),' → logprob: -5.919322490692139
    8. '):
' → logprob: -5.919322490692139
    9. '):' → logprob: -6.169322490692139
    10. '_,' → logprob: -6.669322490692139

Token 185: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1401689499616623
    2. '):' → logprob: -2.6401689052581787
    3. ' ),' → logprob: -3.8901689052581787
    4. ')' → logprob: -3.8901689052581787
    5. ',' → logprob: -4.640169143676758
    6. '):
' → logprob: -5.265169143676758
    7. ' ):' → logprob: -6.640169143676758
    8. ' )' → logprob: -7.640169143676758
    9. ':' → logprob: -7.640169143676758
    10. '):

' → logprob: -7.765169143676758

Token 186: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29714012145996094
    2. ':' → logprob: -1.422140121459961
    3. ' :' → logprob: -5.547140121459961
    4. ' in' → logprob: -5.797140121459961
    5. ' ,' → logprob: -5.797140121459961
    6. ':
' → logprob: -6.047140121459961
    7. '#' → logprob: -6.547140121459961
    8. '   ' → logprob: -7.797140121459961
    9. ' dans' → logprob: -8.172140121459961
    10. 'a' → logprob: -8.672140121459961

Token 187: ' coût' (ID: 73109)
  Prédit: ' poids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -1.0715609788894653
    2. ' coût' → logprob: -2.196560859680176
    3. ' son' → logprob: -2.696560859680176
    4. 'a' → logprob: -2.946560859680176
    5. 'po' → logprob: -2.946560859680176
    6. ' sa' → logprob: -2.946560859680176
    7. 'co' → logprob: -2.946560859680176
    8. ' weight' → logprob: -3.196560859680176
    9. 'weight' → logprob: -3.446560859680176
    10. 'son' → logprob: -3.446560859680176

Token 188: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35099154710769653
    2. ',' → logprob: -1.7259914875030518
    3. '=' → logprob: -2.6009914875030518
    4. ' ,' → logprob: -3.8509914875030518
    5. ' ' → logprob: -5.600991725921631
    6. ' i' → logprob: -5.850991725921631
    7. 'a' → logprob: -5.850991725921631
    8. ':' → logprob: -5.850991725921631
    9. '_i' → logprob: -6.100991725921631
    10. 'i' → logprob: -7.100991725921631

Token 189: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3996768295764923
    2. ':' → logprob: -1.27467679977417
    3. ' :' → logprob: -3.39967679977417
    4. '):' → logprob: -5.14967679977417
    5. ' ,' → logprob: -5.27467679977417
    6. ' =' → logprob: -6.02467679977417
    7. '=' → logprob: -7.02467679977417
    8. ' ' → logprob: -7.39967679977417
    9. ' ):' → logprob: -7.89967679977417
    10. '  ' → logprob: -8.024677276611328

Token 190: ' qui' (ID: 2780)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4802311956882477
    2. ',' → logprob: -0.9802311658859253
    3. ' :' → logprob: -5.605231285095215
    4. ':
' → logprob: -6.730231285095215
    5. ' ,' → logprob: -7.855231285095215
    6. '#' → logprob: -8.105231285095215
    7. '):' → logprob: -8.730231285095215
    8. ',
' → logprob: -9.730231285095215
    9. ' ' → logprob: -10.230231285095215
    10. ',:' → logprob: -10.230231285095215

Token 191: ' est' (ID: 893)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -1.0973669290542603
    2. ':' → logprob: -2.0973668098449707
    3. 'est' → logprob: -2.4723668098449707
    4. ' a' → logprob: -2.4723668098449707
    5. ' est' → logprob: -2.5973668098449707
    6. 's' → logprob: -2.9723668098449707
    7. 'n' → logprob: -2.9723668098449707
    8. 'part' → logprob: -3.2223668098449707
    9. 'a' → logprob: -3.4723668098449707
    10. ' n' → logprob: -3.4723668098449707

Token 192: ' invers' (ID: 38721)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -1.316956877708435
    2. 'a' → logprob: -2.5669569969177246
    3. 'une' → logprob: -2.8169569969177246
    4. 'util' → logprob: -2.8169569969177246
    5. ' utilisée' → logprob: -2.8169569969177246
    6. 'initial' → logprob: -2.8169569969177246
    7. ' utilisé' → logprob: -3.1919569969177246
    8. ' stock' → logprob: -3.3169569969177246
    9. 'in' → logprob: -3.3169569969177246
    10. 'ré' → logprob: -3.6919569969177246

Token 193: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.007081787567585707
    2. 'é' → logprob: -5.132081985473633
    3. 'er' → logprob: -7.882081985473633
    4. 'érée' → logprob: -8.507081985473633
    5. 'rée' → logprob: -8.757081985473633
    6. 'e' → logprob: -9.132081985473633
    7. 'ér' → logprob: -10.007081985473633
    8. 'ert' → logprob: -10.132081985473633
    9. 'lée' → logprob: -10.382081985473633
    10. 'i' → logprob: -10.632081985473633

Token 194: ' le' (ID: 505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49706727266311646
    2. ':' → logprob: -1.1220672130584717
    3. ' :' → logprob: -2.8720672130584717
    4. ' ,' → logprob: -5.122067451477051
    5. '#' → logprob: -6.622067451477051
    6. ' (' → logprob: -8.12206745147705
    7. ':
' → logprob: -8.12206745147705
    8. '   ' → logprob: -8.12206745147705
    9. ' =' → logprob: -8.37206745147705
    10. ' ' → logprob: -8.62206745147705

Token 195: ' jour' (ID: 8379)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.0226548910140991
    2. ' reste' → logprob: -2.0226550102233887
    3. 'u' → logprob: -2.5226550102233887
    4. 'a' → logprob: -3.0226550102233887
    5. '#' → logprob: -3.2726550102233887
    6. 's' → logprob: -3.6476550102233887
    7. ',' → logprob: -3.8976550102233887
    8. ':' → logprob: -4.147655010223389
    9. ' plus' → logprob: -4.272655010223389
    10. ' ' → logprob: -4.272655010223389

Token 196: ' i' (ID: 575)
  Prédit: ' suivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.5798434615135193
    2. ' i' → logprob: -2.204843521118164
    3. ' d' → logprob: -2.329843521118164
    4. 'i' → logprob: -2.954843521118164
    5. ',' → logprob: -3.454843521118164
    6. ' ' → logprob: -3.829843521118164
    7. ' suivante' → logprob: -4.204843521118164
    8. '#' → logprob: -4.204843521118164
    9. 'u' → logprob: -4.579843521118164
    10. '   ' → logprob: -4.954843521118164

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39161819219589233
    2. ',' → logprob: -1.141618251800537
    3. ' :' → logprob: -5.641618251800537
    4. ':
' → logprob: -7.516618251800537
    5. '#' → logprob: -8.766617774963379
    6. ' ,' → logprob: -9.016617774963379
    7. '):' → logprob: -9.016617774963379
    8. ',
' → logprob: -9.766617774963379
    9. ' ' → logprob: -10.141617774963379
    10. '.' → logprob: -10.516617774963379

Token 198: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23648685216903687
    2. 'for' → logprob: -2.3614869117736816
    3. ' for' → logprob: -2.6114869117736816
    4. 'import' → logprob: -4.861486911773682
    5. 'a' → logprob: -5.111486911773682
    6. 'n' → logprob: -5.111486911773682
    7. '#' → logprob: -5.361486911773682
    8. '   ' → logprob: -5.861486911773682
    9. ' def' → logprob: -5.861486911773682
    10. 'from' → logprob: -5.861486911773682

Token 199: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8711665272712708
    2. ' #' → logprob: -1.246166467666626
    3. ' for' → logprob: -2.871166467666626
    4. ' ' → logprob: -2.996166467666626
    5. '   ' → logprob: -3.121166467666626
    6. 'for' → logprob: -3.621166467666626
    7. ',' → logprob: -3.871166467666626
    8. ' a' → logprob: -3.996166467666626
    9. ' ' → logprob: -4.496166706085205
    10. 'a' → logprob: -4.621166706085205

Token 200: ' On' (ID: 2160)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.11620775610208511
    2. ' On' → logprob: -3.8662078380584717
    3. ' for' → logprob: -4.116207599639893
    4. ' #' → logprob: -4.241207599639893
    5. '#' → logprob: -4.366207599639893
    6. 'dist' → logprob: -4.366207599639893
    7. ' on' → logprob: -4.491207599639893
    8. 'for' → logprob: -5.741207599639893
    9. ' distance' → logprob: -5.991207599639893
    10. 'On' → logprob: -5.991207599639893

Token 201: ' enl' (ID: 116494)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7065377235412598
    2. ' calc' → logprob: -1.9565377235412598
    3. ' peut' → logprob: -2.3315377235412598
    4. 'v' → logprob: -2.3315377235412598
    5. 'calc' → logprob: -3.5815377235412598
    6. ' vér' → logprob: -3.7065377235412598
    7. ' regarde' → logprob: -3.7065377235412598
    8. 'va' → logprob: -3.8315377235412598
    9. ' considère' → logprob: -4.45653772354126
    10. 'cal' → logprob: -4.83153772354126

Token 202: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.0947696641087532
    2. 'e' → logprob: -2.4697697162628174
    3. 't' → logprob: -6.969769477844238
    4. 'er' → logprob: -6.969769477844238
    5. 'èves' → logprob: -6.969769477844238
    6. 'ace' → logprob: -7.219769477844238
    7. 'che' → logprob: -7.594769477844238
    8. 'a' → logprob: -7.844769477844238
    9. 'ev' → logprob: -8.719769477844238
    10. 've' → logprob: -9.219769477844238

Token 203: ' tempora' (ID: 117509)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1055399477481842
    2. ' la' → logprob: -3.1055400371551514
    3. 'l' → logprob: -3.9805400371551514
    4. ' le' → logprob: -4.605539798736572
    5. ' ' → logprob: -4.980539798736572
    6. ' cette' → logprob: -5.105539798736572
    7. 'a' → logprob: -5.730539798736572
    8. ' a' → logprob: -5.980539798736572
    9. 'la' → logprob: -6.230539798736572
    10. 'le' → logprob: -6.980539798736572

Token 204: 'irement' (ID: 19343)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5860561728477478
    2. 'a' → logprob: -2.0860562324523926
    3. 'u' → logprob: -2.0860562324523926
    4. 'er' → logprob: -2.3360562324523926
    5. 'ève' → logprob: -3.0860562324523926
    6. ''' → logprob: -4.836056232452393
    7. 'ue' → logprob: -5.461056232452393
    8. 'à' → logprob: -5.461056232452393
    9. ' u' → logprob: -5.586056232452393
    10. ' '' → logprob: -5.711056232452393

Token 205: ' cette' (ID: 7696)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.39849284291267395
    2. ' la' → logprob: -1.3984928131103516
    3. ' le' → logprob: -3.6484928131103516
    4. 'l' → logprob: -4.023492813110352
    5. 'la' → logprob: -4.398492813110352
    6. 'le' → logprob: -4.898492813110352
    7. ' "' → logprob: -5.398492813110352
    8. ' '' → logprob: -5.648492813110352
    9. ' ' → logprob: -5.898492813110352
    10. '"' → logprob: -6.398492813110352

Token 206: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.039282768964767456
    2. 'ar' → logprob: -3.28928279876709
    3. ' ' → logprob: -8.66428279876709
    4. ' are' → logprob: -9.03928279876709
    5. '_ar' → logprob: -9.03928279876709
    6. '_' → logprob: -9.28928279876709
    7. ' orientation' → logprob: -9.28928279876709
    8. ' edge' → logprob: -9.28928279876709
    9. 'are' → logprob: -9.91428279876709
    10. ' arr' → logprob: -10.16428279876709

Token 207: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0011428380385041237
    2. 'te' → logprob: -8.001142501831055
    3. 'ète' → logprob: -8.251142501831055
    4. 'ê' → logprob: -8.876142501831055
    5. 'êt' → logprob: -9.376142501831055
    6. 'êtes' → logprob: -9.501142501831055
    7. 'ôte' → logprob: -9.751142501831055
    8. 'âte' → logprob: -10.126142501831055
    9. 'c' → logprob: -10.376142501831055
    10. 'être' → logprob: -10.501142501831055

Token 208: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10601770132780075
    2. '#' → logprob: -2.981017589569092
    3. ' ,' → logprob: -3.981017589569092
    4. ' ' → logprob: -5.481017589569092
    5. ' de' → logprob: -5.481017589569092
    6. ' #' → logprob: -5.606017589569092
    7. ',
' → logprob: -5.731017589569092
    8. '.' → logprob: -5.856017589569092
    9. ' (' → logprob: -5.856017589569092
    10. 'from' → logprob: -6.356017589569092

Token 209: 'uni' (ID: 6500)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44939306378364563
    2. ' )' → logprob: -1.0743930339813232
    3. ' ' → logprob: -5.949393272399902
    4. ' ),' → logprob: -6.074393272399902
    5. ' la' → logprob: -6.199393272399902
    6. ',' → logprob: -6.324393272399902
    7. '),' → logprob: -6.324393272399902
    8. ' et' → logprob: -6.699393272399902
    9. ' puis' → logprob: -6.824393272399902
    10. '#' → logprob: -6.949393272399902

Token 210: 'quement' (ID: 42437)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5933143496513367
    2. 'quement' → logprob: -0.9683143496513367
    3. 't' → logprob: -2.9683144092559814
    4. 'q' → logprob: -5.343314170837402
    5. 'qu' → logprob: -5.343314170837402
    6. ')' → logprob: -5.968314170837402
    7. 'ti' → logprob: -6.593314170837402
    8. '   ' → logprob: -7.343314170837402
    9. '```' → logprob: -7.718314170837402
    10. 'quel' → logprob: -7.843314170837402

Token 211: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46399369835853577
    2. ' )' → logprob: -2.213993787765503
    3. ' pour' → logprob: -2.588993787765503
    4. ' le' → logprob: -3.213993787765503
    5. ' dans' → logprob: -3.213993787765503
    6. ' la' → logprob: -3.338993787765503
    7. 'le' → logprob: -3.588993787765503
    8. 'pour' → logprob: -4.338993549346924
    9. ' l' → logprob: -4.838993549346924
    10. 'la' → logprob: -5.588993549346924

Token 212: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1584581136703491
    2. 'le' → logprob: -1.6584581136703491
    3. ' le' → logprob: -2.2834582328796387
    4. ' l' → logprob: -2.4084582328796387
    5. ' ce' → logprob: -2.6584582328796387
    6. 'la' → logprob: -2.9084582328796387
    7. ' la' → logprob: -3.0334582328796387
    8. 'les' → logprob: -3.0334582328796387
    9. ' cette' → logprob: -3.9084582328796387
    10. 'ce' → logprob: -4.283458232879639

Token 213: ' calcul' (ID: 7559)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.5015422105789185
    2. ' jour' → logprob: -1.1265422105789185
    3. 'calcul' → logprob: -3.501542091369629
    4. ' calcul' → logprob: -3.751542091369629
    5. ' trajet' → logprob: -5.126542091369629
    6. 'cas' → logprob: -6.376542091369629
    7. 'i' → logprob: -6.751542091369629
    8. ' i' → logprob: -6.876542091369629
    9. ' parcours' → logprob: -6.876542091369629
    10. 'traj' → logprob: -7.376542091369629

Token 214: ' thé' (ID: 34740)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38623714447021484
    2. ' de' → logprob: -1.3862371444702148
    3. ' )' → logprob: -3.011237144470215
    4. ' du' → logprob: -5.136237144470215
    5. 'de' → logprob: -5.511237144470215
    6. ' tempora' → logprob: -5.761237144470215
    7. ' des' → logprob: -5.886237144470215
    8. ' d' → logprob: -6.011237144470215
    9. '),' → logprob: -7.636237144470215
    10. ' complet' → logprob: -7.761237144470215

Token 215: 'orique' (ID: 194822)
  Prédit: 'orique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orique' → logprob: -0.015572885051369667
    2. '#' → logprob: -4.515573024749756
    3. 'or' → logprob: -5.640573024749756
    4. 'orie' → logprob: -7.765573024749756
    5. 'ori' → logprob: -9.265572547912598
    6. 't' → logprob: -9.390572547912598
    7. '```' → logprob: -9.390572547912598
    8. 'que' → logprob: -10.015572547912598
    9. 'ique' → logprob: -10.390572547912598
    10. 'me' → logprob: -10.515572547912598

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016773968935012817
    2. ' )' → logprob: -4.3917741775512695
    3. '),' → logprob: -5.6417741775512695
    4. ',' → logprob: -8.39177417755127
    5. ' de' → logprob: -9.26677417755127
    6. ' ),' → logprob: -9.39177417755127
    7. ').' → logprob: -9.89177417755127
    8. ')#' → logprob: -9.89177417755127
    9. ' d' → logprob: -10.64177417755127
    10. 'de' → logprob: -10.89177417755127

Token 217: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6004579663276672
    2. '#' → logprob: -0.9754579663276672
    3. '.' → logprob: -3.7254579067230225
    4. ':' → logprob: -3.9754579067230225
    5. ' ' → logprob: -4.850458145141602
    6. ')' → logprob: -5.350458145141602
    7. ',
' → logprob: -5.350458145141602
    8. ' #' → logprob: -5.850458145141602
    9. 'a' → logprob: -6.475458145141602
    10. '\n' → logprob: -6.725458145141602

Token 218: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9275680780410767
    2. ',' → logprob: -1.6775680780410767
    3. 'def' → logprob: -1.9275680780410767
    4. ':' → logprob: -2.177567958831787
    5. 'import' → logprob: -2.802567958831787
    6. '.' → logprob: -3.802567958831787
    7. ')' → logprob: -4.177567958831787
    8. ',
' → logprob: -4.552567958831787
    9. 'for' → logprob: -4.552567958831787
    10. ' ' → logprob: -5.427567958831787

Token 219: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6814391016960144
    2. 'On' → logprob: -2.181439161300659
    3. 'for' → logprob: -2.181439161300659
    4. ' #' → logprob: -2.681439161300659
    5. ' for' → logprob: -2.806439161300659
    6. ' On' → logprob: -2.806439161300659
    7. ' on' → logprob: -3.181439161300659
    8. 'Pour' → logprob: -4.80643892288208
    9. 'on' → logprob: -5.80643892288208
    10. ' dist' → logprob: -5.93143892288208

Token 220: ' ajoute' (ID: 91611)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5522545576095581
    2. 'cal' → logprob: -2.5522546768188477
    3. 'expl' → logprob: -2.8022546768188477
    4. ' considère' → logprob: -2.9272546768188477
    5. 'calc' → logprob: -3.1772546768188477
    6. ' regarde' → logprob: -3.8022546768188477
    7. 're' → logprob: -3.9272546768188477
    8. ' vér' → logprob: -4.427254676818848
    9. '#' → logprob: -4.552254676818848
    10. ' recal' → logprob: -4.552254676818848

Token 221: ' son' (ID: 2391)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9234455227851868
    2. ' l' → logprob: -1.673445463180542
    3. ' la' → logprob: -1.798445463180542
    4. ' tempora' → logprob: -2.548445463180542
    5. ' le' → logprob: -2.673445463180542
    6. ' ' → logprob: -3.423445463180542
    7. ' un' → logprob: -4.173445701599121
    8. 'une' → logprob: -5.048445701599121
    9. 'tempor' → logprob: -5.173445701599121
    10. ' c' → logprob: -5.298445701599121

Token 222: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.3607710897922516
    2. 'inverse' → logprob: -1.6107710599899292
    3. 'in' → logprob: -3.8607711791992188
    4. ' inversion' → logprob: -4.235771179199219
    5. ' reverse' → logprob: -4.235771179199219
    6. 'reverse' → logprob: -4.360771179199219
    7. ' sens' → logprob: -4.485771179199219
    8. ' oppos' → logprob: -4.860771179199219
    9. 'ar' → logprob: -4.860771179199219
    10. 'sens' → logprob: -5.985771179199219

Token 223: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055385101586580276
    2. ':' → logprob: -4.055385112762451
    3. '(
' → logprob: -4.805385112762451
    4. '\' → logprob: -5.055385112762451
    5. ',' → logprob: -5.305385112762451
    6. ':
' → logprob: -5.680385112762451
    7. '
' → logprob: -6.055385112762451
    8. ',
' → logprob: -6.180385112762451
    9. '\n' → logprob: -6.305385112762451
    10. ')' → logprob: -6.680385112762451

Token 224: 'b' (ID: 65)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4856046438217163
    2. 'b' → logprob: -1.1106046438217163
    3. ' (' → logprob: -3.860604763031006
    4. ',' → logprob: -4.360604763031006
    5. ')' → logprob: -4.860604763031006
    6. '(b' → logprob: -5.735604763031006
    7. ' )' → logprob: -5.860604763031006
    8. ' ,' → logprob: -6.110604763031006
    9. ' ' → logprob: -6.360604763031006
    10. 'a' → logprob: -7.110604763031006

Token 225: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0035467357374727726
    2. ' _' → logprob: -6.503546714782715
    3. ')_' → logprob: -7.253546714782715
    4. '_' → logprob: -7.503546714782715
    5. ' ->' → logprob: -8.503546714782715
    6. ',' → logprob: -8.628546714782715
    7. '->_' → logprob: -9.128546714782715
    8. 'i' → logprob: -9.878546714782715
    9. '   ' → logprob: -10.128546714782715
    10. ''_' → logprob: -10.503546714782715

Token 226: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.006369189824908972
    2. '->' → logprob: -5.256369113922119
    3. ')->' → logprob: -7.256369113922119
    4. ',' → logprob: -8.256369590759277
    5. ' ' → logprob: -9.631369590759277
    6. ' ,' → logprob: -10.381369590759277
    7. ' ->
' → logprob: -10.506369590759277
    8. ')' → logprob: -10.756369590759277
    9. ' )->' → logprob: -11.756369590759277
    10. ' →' → logprob: -12.131369590759277

Token 227: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20146441459655762
    2. 'a' → logprob: -1.7014644145965576
    3. ' ' → logprob: -10.076464653015137
    4. ')' → logprob: -12.701464653015137
    5. '	a' → logprob: -13.451464653015137
    6. ' ai' → logprob: -13.826464653015137
    7. ')a' → logprob: -14.201464653015137
    8. ' )' → logprob: -14.576464653015137
    9. 'ai' → logprob: -14.826464653015137
    10. ',' → logprob: -14.951464653015137

Token 228: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -3.7697225252486533e-06
    2. 'i' → logprob: -13.375003814697266
    3. ' _' → logprob: -14.000003814697266
    4. ')_' → logprob: -14.625003814697266
    5. '_' → logprob: -15.125003814697266
    6. ')' → logprob: -15.250003814697266
    7. '```' → logprob: -16.500003814697266
    8. '
' → logprob: -16.875003814697266
    9. '_j' → logprob: -17.125003814697266
    10. '[i' → logprob: -17.375003814697266

Token 229: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24213296175003052
    2. ',' → logprob: -1.6171329021453857
    3. ' )' → logprob: -4.742133140563965
    4. ' avec' → logprob: -5.742133140563965
    5. ' ,' → logprob: -6.492133140563965
    6. ' c' → logprob: -7.492133140563965
    7. ')c' → logprob: -7.492133140563965
    8. '),' → logprob: -7.992133140563965
    9. 'c' → logprob: -8.242133140563965
    10. '#' → logprob: -8.742133140563965

Token 230: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16854143142700195
    2. ':' → logprob: -3.168541431427002
    3. ')' → logprob: -3.293541431427002
    4. '#' → logprob: -4.043541431427002
    5. '
' → logprob: -4.293541431427002
    6. ',' → logprob: -4.418541431427002
    7. 'for' → logprob: -4.918541431427002
    8. 'import' → logprob: -5.043541431427002
    9. ')
' → logprob: -5.168541431427002
    10. ':
' → logprob: -5.918541431427002

Token 231: ' même' (ID: 9679)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08935850113630295
    2. 'c' → logprob: -2.5893585681915283
    3. ' le' → logprob: -4.964358329772949
    4. ' cost' → logprob: -7.089358329772949
    5. 'co' → logprob: -7.464358329772949
    6. 'le' → logprob: -7.464358329772949
    7. ' coût' → logprob: -7.839358329772949
    8. ' son' → logprob: -8.58935832977295
    9. 'cost' → logprob: -8.83935832977295
    10. ' la' → logprob: -9.08935832977295

Token 232: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -1.094308853149414
    2. 'c' → logprob: -1.344308853149414
    3. ' cout' → logprob: -1.719308853149414
    4. 'co' → logprob: -1.969308853149414
    5. 'cout' → logprob: -3.719308853149414
    6. ' poids' → logprob: -3.719308853149414
    7. ' c' → logprob: -3.969308853149414
    8. ' cost' → logprob: -5.219308853149414
    9. 'cost' → logprob: -5.969308853149414
    10. ' custo' → logprob: -6.594308853149414

Token 233: ' c' (ID: 274)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1153540089726448
    2. 'def' → logprob: -3.365354061126709
    3. ':
' → logprob: -3.490354061126709
    4. '\n' → logprob: -4.365354061126709
    5. ',' → logprob: -4.490354061126709
    6. '#' → logprob: -5.365354061126709
    7. '.' → logprob: -6.115354061126709
    8. '
' → logprob: -6.240354061126709
    9. ':\' → logprob: -6.490354061126709
    10. '\' → logprob: -6.490354061126709

Token 234: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.038774654269218445
    2. '_' → logprob: -3.2887747287750244
    3. ')' → logprob: -7.663774490356445
    4. 'i' → logprob: -8.913774490356445
    5. '_
' → logprob: -9.288774490356445
    6. '_)' → logprob: -10.913774490356445
    7. '_
' → logprob: -12.663774490356445
    8. '_

' → logprob: -12.788774490356445
    9. '\n' → logprob: -13.288774490356445
    10. '.' → logprob: -13.538774490356445

Token 235: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002997120900545269
    2. '\' → logprob: -9.250299453735352
    3. '
' → logprob: -9.625299453735352
    4. ':
' → logprob: -11.125299453735352
    5. ' def' → logprob: -11.125299453735352
    6. '\n' → logprob: -11.125299453735352
    7. '

' → logprob: -11.250299453735352
    8. ':' → logprob: -11.375299453735352
    9. 'import' → logprob: -11.625299453735352
    10. '#' → logprob: -11.625299453735352

Token 236: 'qui' (ID: 22771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011115136556327343
    2. ' )' → logprob: -5.011115074157715
    3. ')
' → logprob: -6.011115074157715
    4. ').' → logprob: -6.511115074157715
    5. '),' → logprob: -9.136115074157715
    6. ' )
' → logprob: -9.761115074157715
    7. ')
' → logprob: -9.761115074157715
    8. ')\' → logprob: -10.136115074157715
    9. ')#' → logprob: -10.386115074157715
    10. '#' → logprob: -10.386115074157715

Token 237: ' sera' (ID: 15511)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.39959144592285156
    2. ' permettra' → logprob: -2.1495914459228516
    3. ')' → logprob: -2.6495914459228516
    4. ' )' → logprob: -3.3995914459228516
    5. ' pourrait' → logprob: -3.5245914459228516
    6. 'n' → logprob: -4.024591445922852
    7. ' peut' → logprob: -4.149591445922852
    8. ' est' → logprob: -4.524591445922852
    9. ' n' → logprob: -4.774591445922852
    10. ' ' → logprob: -5.524591445922852

Token 238: ' la' (ID: 557)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.8960381150245667
    2. 'util' → logprob: -1.6460380554199219
    3. ' pris' → logprob: -2.271038055419922
    4. ' testé' → logprob: -3.146038055419922
    5. ' possible' → logprob: -3.271038055419922
    6. ' utilisée' → logprob: -4.021038055419922
    7. ' évalu' → logprob: -4.146038055419922
    8. '
' → logprob: -4.146038055419922
    9. 'possible' → logprob: -4.271038055419922
    10. ' considéré' → logprob: -4.271038055419922

Token 239: ' seule' (ID: 41983)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.726136326789856
    2. '\n' → logprob: -2.7261362075805664
    3. ' distance' → logprob: -3.3511362075805664
    4. ')' → logprob: -3.4761362075805664
    5. 'man' → logprob: -3.7261362075805664
    6. ' meilleure' → logprob: -3.9761362075805664
    7. 'base' → logprob: -4.101136207580566
    8. 'me' → logprob: -4.101136207580566
    9. 'prem' → logprob: -4.226136207580566
    10. ' prochaine' → logprob: -4.226136207580566

Token 240: ' modification' (ID: 29847)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.46899282932281494
    2. ' ar' → logprob: -1.218992829322815
    3. ' edge' → logprob: -3.8439927101135254
    4. 'edge' → logprob: -4.218992710113525
    5. ' route' → logprob: -4.968992710113525
    6. 'route' → logprob: -5.343992710113525
    7. ')' → logprob: -5.343992710113525
    8. ' modification' → logprob: -5.718992710113525
    9. 'mod' → logprob: -6.093992710113525
    10. 'orientation' → logprob: -6.593992710113525

Token 241: ' ce' (ID: 2357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23317460715770721
    2. ' )' → logprob: -1.6081745624542236
    3. ' de' → logprob: -5.858174800872803
    4. ' possible' → logprob: -6.858174800872803
    5. ' à' → logprob: -7.108174800872803
    6. ' dans' → logprob: -7.108174800872803
    7. ' du' → logprob: -7.733174800872803
    8. ' pour' → logprob: -8.233174324035645
    9. ' sur' → logprob: -8.608174324035645
    10. '#' → logprob: -8.733174324035645

Token 242: ' jour' (ID: 8379)
  Prédit: ' jour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jour' → logprob: -0.2012883722782135
    2. ' qui' → logprob: -3.2012884616851807
    3. ' code' → logprob: -3.3262884616851807
    4. ' )' → logprob: -3.4512884616851807
    5. ' que' → logprob: -5.076288223266602
    6. ')' → logprob: -5.201288223266602
    7. ' ' → logprob: -5.201288223266602
    8. ' sur' → logprob: -5.326288223266602
    9. ' caractère' → logprob: -5.326288223266602
    10. ' ' → logprob: -5.451288223266602

Token 243: ' là' (ID: 8052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32012829184532166
    2. ' )' → logprob: -1.320128321647644
    3. ' )
' → logprob: -6.320128440856934
    4. ')
' → logprob: -6.820128440856934
    5. ' ' → logprob: -7.195128440856934
    6. '\n' → logprob: -7.445128440856934
    7. ').' → logprob: -7.695128440856934
    8. ')\' → logprob: -7.820128440856934
    9. 'import' → logprob: -8.445128440856934
    10. '.' → logprob: -8.820128440856934

Token 244: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008700847625732422
    2. ' )' → logprob: -5.508700847625732
    3. '):' → logprob: -6.133700847625732
    4. ').' → logprob: -7.008700847625732
    5. ')
' → logprob: -7.258700847625732
    6. '.' → logprob: -8.13370132446289
    7. ',' → logprob: -8.88370132446289
    8. ':' → logprob: -8.88370132446289
    9. '):
' → logprob: -9.75870132446289
    10. '#' → logprob: -10.38370132446289

Token 245: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004019514657557011
    2. 'import' → logprob: -6.254019737243652
    3. '\' → logprob: -6.504019737243652
    4. '
' → logprob: -9.004019737243652
    5. '```' → logprob: -9.004019737243652
    6. 'from' → logprob: -9.254019737243652
    7. '\n' → logprob: -9.254019737243652
    8. 'n' → logprob: -10.129019737243652
    9. ' def' → logprob: -10.879019737243652
    10. '

' → logprob: -11.004019737243652

Token 246: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004665385349653661
    2. '\' → logprob: -7.750466346740723
    3. '```' → logprob: -11.875466346740723
    4. 'import' → logprob: -12.000466346740723
    5. '
' → logprob: -12.125466346740723
    6. ' 
' → logprob: -12.500466346740723
    7. 'de' → logprob: -12.500466346740723
    8. ' def' → logprob: -13.000466346740723
    9. '\n' → logprob: -13.125466346740723
    10. '(
' → logprob: -13.750466346740723

Token 247: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011678500100970268
    2. 'n' → logprob: -4.636678695678711
    3. 'from' → logprob: -6.386678695678711
    4. 'import' → logprob: -9.136678695678711
    5. 'N' → logprob: -9.261678695678711
    6. '#' → logprob: -10.636678695678711
    7. 'V' → logprob: -12.386678695678711
    8. ' def' → logprob: -13.386678695678711
    9. 'INF' → logprob: -13.386678695678711
    10. '```' → logprob: -14.386678695678711

Token 248: ' plus' (ID: 2932)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.1952986717224121
    2. ' reste' → logprob: -1.945298671722412
    3. ' rest' → logprob: -5.070298671722412
    4. '#' → logprob: -5.695298671722412
    5. 'code' → logprob: -5.695298671722412
    6. ' graph' → logprob: -5.695298671722412
    7. 'def' → logprob: -5.695298671722412
    8. 's' → logprob: -5.820298671722412
    9. ' next' → logprob: -6.320298671722412
    10. 'rest' → logprob: -6.445298671722412

Token 249: ' court' (ID: 10314)
  Prédit: 'court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'court' → logprob: -0.1826019436120987
    2. ' court' → logprob: -1.9326019287109375
    3. '_' → logprob: -5.1826019287109375
    4. 'cour' → logprob: -5.1826019287109375
    5. 'co' → logprob: -5.6826019287109375
    6. 'pro' → logprob: -5.9326019287109375
    7. '```' → logprob: -6.6826019287109375
    8. 'sou' → logprob: -7.8076019287109375
    9. 'simple' → logprob: -7.9326019287109375
    10. 'c' → logprob: -8.057601928710938

Token 250: ' chemin' (ID: 45035)
  Prédit: ' chemin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.34768569469451904
    2. '_' → logprob: -2.3476858139038086
    3. ' trajet' → logprob: -2.8476858139038086
    4. ' distance' → logprob: -2.9726858139038086
    5. '_che' → logprob: -3.2226858139038086
    6. ' _' → logprob: -4.597685813903809
    7. 's' → logprob: -5.222685813903809
    8. '_distance' → logprob: -5.222685813903809
    9. 'distance' → logprob: -5.347685813903809
    10. ' parcours' → logprob: -5.347685813903809

Token 251: ' mod' (ID: 1812)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.0217140913009644
    2. ' complet' → logprob: -1.2717140913009644
    3. ' est' → logprob: -2.146714210510254
    4. ' minimal' → logprob: -3.146714210510254
    5. ' entre' → logprob: -3.646714210510254
    6. ' =' → logprob: -3.771714210510254
    7. ' le' → logprob: -3.896714210510254
    8. ' de' → logprob: -4.396714210510254
    9. 'possible' → logprob: -4.396714210510254
    10. 'est' → logprob: -4.521714210510254

Token 252: 'ifié' (ID: 49927)
  Prédit: 'ifié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifié' → logprob: -0.011201432906091213
    2. 'in' → logprob: -5.63620138168335
    3. 'iné' → logprob: -5.88620138168335
    4. 'ié' → logprob: -6.88620138168335
    5. 'isé' → logprob: -7.13620138168335
    6. 'ier' → logprob: -7.38620138168335
    7. 'ifie' → logprob: -7.51120138168335
    8. 'ière' → logprob: -7.88620138168335
    9. 'ifier' → logprob: -8.136201858520508
    10. 'i' → logprob: -8.886201858520508

Token 253: ' peut' (ID: 9216)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6265261173248291
    2. 'est' → logprob: -1.876526117324829
    3. ' =' → logprob: -2.751526117324829
    4. ' peut' → logprob: -3.251526117324829
    5. '#' → logprob: -3.626526117324829
    6. ',' → logprob: -3.876526117324829
    7. ' minimal' → logprob: -4.00152587890625
    8. ' possible' → logprob: -4.25152587890625
    9. ' entre' → logprob: -4.50152587890625
    10. '```' → logprob: -4.62652587890625

Token 254: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.2929410934448242
    2. 'être' → logprob: -1.6679410934448242
    3. ' s' → logprob: -3.917941093444824
    4. ' se' → logprob: -4.042941093444824
    5. ' alors' → logprob: -4.292941093444824
    6. ' passer' → logprob: -4.667941093444824
    7. ' pass' → logprob: -7.292941093444824
    8. ' etre' → logprob: -7.292941093444824
    9. '   ' → logprob: -7.542941093444824
    10. 's' → logprob: -8.042941093444824

Token 255: ':
' (ID: 734)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.0428438186645508
    2. ' estim' → logprob: -2.042843818664551
    3. 'calcul' → logprob: -2.042843818664551
    4. ' obtenu' → logprob: -3.042843818664551
    5. ' vu' → logprob: -3.542843818664551
    6. 'dist' → logprob: -3.667843818664551
    7. ' évalu' → logprob: -3.792843818664551
    8. 'estim' → logprob: -3.792843818664551
    9. ' le' → logprob: -3.917843818664551
    10. ' soit' → logprob: -4.042843818664551

Token 256: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02883826196193695
    2. ' #' → logprob: -4.028838157653809
    3. ' dist' → logprob: -5.653838157653809
    4. 'dist' → logprob: -5.778838157653809
    5. '#
' → logprob: -6.653838157653809
    6. ' soit' → logprob: -7.653838157653809
    7. 'min' → logprob: -8.278838157653809
    8. '   ' → logprob: -8.278838157653809
    9. '"""
' → logprob: -8.278838157653809
    10. ' min' → logprob: -8.528838157653809

Token 257: ' -' (ID: 533)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.9083174467086792
    2. 'min' → logprob: -1.4083174467086792
    3. '#' → logprob: -1.7833174467086792
    4. ' dist' → logprob: -2.2833175659179688
    5. 'dist' → logprob: -2.6583175659179688
    6. ' #' → logprob: -5.408317565917969
    7. ' soit' → logprob: -5.908317565917969
    8. 'max' → logprob: -6.783317565917969
    9. ' max' → logprob: -7.033317565917969
    10. '
' → logprob: -7.408317565917969

Token 258: ' Plus' (ID: 11899)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.747160792350769
    2. ' dist' → logprob: -0.997160792350769
    3. ' min' → logprob: -2.9971609115600586
    4. 'min' → logprob: -3.1221609115600586
    5. ' soit' → logprob: -3.2471609115600586
    6. 'so' → logprob: -4.247160911560059
    7. '1' → logprob: -6.622160911560059
    8. ' la' → logprob: -6.747160911560059
    9. 'le' → logprob: -6.997160911560059
    10. ' le' → logprob: -7.122160911560059

Token 259: ' court' (ID: 10314)
  Prédit: ' court'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' court' → logprob: -0.4309718906879425
    2. 'court' → logprob: -1.0559718608856201
    3. 'cour' → logprob: -6.680972099304199
    4. ' c' → logprob: -8.3059720993042
    5. 'c' → logprob: -8.4309720993042
    6. ' long' → logprob: -8.5559720993042
    7. ' petit' → logprob: -9.8059720993042
    8. '   ' → logprob: -10.0559720993042
    9. ' courts' → logprob: -10.0559720993042
    10. ' ' → logprob: -10.6809720993042

Token 260: ' si' (ID: 1784)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.338062047958374
    2. ' soit' → logprob: -1.338062047958374
    3. ' ou' → logprob: -1.588062047958374
    4. ',' → logprob: -1.963062047958374
    5. ' en' → logprob: -3.588062047958374
    6. ' de' → logprob: -3.838062047958374
    7. ' ' → logprob: -4.463062286376953
    8. 'de' → logprob: -4.463062286376953
    9. '.' → logprob: -5.338062286376953
    10. ':' → logprob: -5.338062286376953

Token 261: ' on' (ID: 402)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8461084961891174
    2. ' on' → logprob: -1.3461084365844727
    3. 'dist' → logprob: -1.3461084365844727
    4. 'on' → logprob: -3.8461084365844727
    5. ' il' → logprob: -4.471108436584473
    6. ' passing' → logprob: -5.471108436584473
    7. ' la' → logprob: -5.971108436584473
    8. ' passant' → logprob: -6.096108436584473
    9. ' le' → logprob: -6.721108436584473
    10. 'le' → logprob: -6.721108436584473

Token 262: ' peut' (ID: 9216)
  Prédit: ' passe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passe' → logprob: -0.1472461074590683
    2. ' utilise' → logprob: -2.7722461223602295
    3. ' trouve' → logprob: -3.8972461223602295
    4. ' peut' → logprob: -4.14724588394165
    5. 'util' → logprob: -5.02224588394165
    6. ' considère' → logprob: -5.14724588394165
    7. ' traverse' → logprob: -5.39724588394165
    8. 'p' → logprob: -5.77224588394165
    9. ' prend' → logprob: -6.02224588394165
    10. 'tr' → logprob: -6.27224588394165

Token 263: ' passer' (ID: 27727)
  Prédit: ' passer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passer' → logprob: -0.13553765416145325
    2. 'aller' → logprob: -3.135537624359131
    3. 'pass' → logprob: -3.635537624359131
    4. ' améliorer' → logprob: -4.385537624359131
    5. ' utiliser' → logprob: -4.510537624359131
    6. ' aller' → logprob: -4.885537624359131
    7. ' atteindre' → logprob: -5.260537624359131
    8. 'util' → logprob: -5.885537624359131
    9. ' travers' → logprob: -6.385537624359131
    10. 'prendre' → logprob: -6.635537624359131

Token 264: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.021064139902591705
    2. 'par' → logprob: -4.146064281463623
    3. ' ' → logprob: -5.896064281463623
    4. ' through' → logprob: -7.271064281463623
    5. ' à' → logprob: -7.771064281463623
    6. ' via' → logprob: -8.521063804626465
    7. '#' → logprob: -8.646063804626465
    8. ' ' → logprob: -8.896063804626465
    9. ' #' → logprob: -9.521063804626465
    10. ' через' → logprob: -9.771063804626465

Token 265: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.05979876220226288
    2. 'b' → logprob: -3.1847987174987793
    3. ' a' → logprob: -4.934798717498779
    4. 'a' → logprob: -5.434798717498779
    5. ' un' → logprob: -6.184798717498779
    6. ' c' → logprob: -6.934798717498779
    7. ' une' → logprob: -6.934798717498779
    8. ' l' → logprob: -8.184799194335938
    9. ' la' → logprob: -8.434799194335938
    10. ' ' → logprob: -9.059799194335938

Token 266: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9643639922142029
    2. '_i' → logprob: -0.9643639922142029
    3. ' _' → logprob: -1.4643640518188477
    4. ' ->' → logprob: -6.714364051818848
    5. ',' → logprob: -7.214364051818848
    6. 'i' → logprob: -7.214364051818848
    7. ')' → logprob: -7.464364051818848
    8. '   ' → logprob: -7.714364051818848
    9. ' ' → logprob: -7.964364051818848
    10. ' #' → logprob: -8.214364051818848

Token 267: ' ->' (ID: 2747)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9061174392700195
    2. ' ->' → logprob: -1.0311174392700195
    3. ' et' → logprob: -2.7811174392700195
    4. ',' → logprob: -3.0311174392700195
    5. ' and' → logprob: -3.5311174392700195
    6. '->' → logprob: -4.1561174392700195
    7. ' -' → logprob: -4.1561174392700195
    8. ':' → logprob: -4.5311174392700195
    9. '+' → logprob: -4.5311174392700195
    10. '   ' → logprob: -4.7811174392700195

Token 268: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16333432495594025
    2. 'a' → logprob: -1.9133343696594238
    3. ' ' → logprob: -6.288334369659424
    4. ' '' → logprob: -7.663334369659424
    5. '"' → logprob: -8.038333892822266
    6. ''' → logprob: -8.913333892822266
    7. ' "' → logprob: -9.163333892822266
    8. ' ' → logprob: -10.600833892822266
    9. ''a' → logprob: -10.663333892822266
    10. '  ' → logprob: -10.663333892822266

Token 269: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0008471485925838351
    2. '_' → logprob: -7.250847339630127
    3. 'i' → logprob: -9.000846862792969
    4. '_j' → logprob: -12.375846862792969
    5. ''_' → logprob: -12.500846862792969
    6. ' _' → logprob: -13.500846862792969
    7. ')_' → logprob: -14.750846862792969
    8. '_k' → logprob: -14.875846862792969
    9. '->_' → logprob: -15.125846862792969
    10. 'r' → logprob: -15.125846862792969

Token 270: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5593104362487793
    2. ',' → logprob: -1.5593104362487793
    3. 'def' → logprob: -1.9343104362487793
    4. ':' → logprob: -2.3093104362487793
    5. '.' → logprob: -2.6843104362487793
    6. '
' → logprob: -3.1843104362487793
    7. '#' → logprob: -3.4343104362487793
    8. ' ' → logprob: -3.8093104362487793
    9. '+' → logprob: -3.9343104362487793
    10. '\' → logprob: -3.9343104362487793

Token 271: ' ...' (ID: 2550)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.2719673812389374
    2. ' ...' → logprob: -2.0219674110412598
    3. '1' → logprob: -3.3969674110412598
    4. ' ' → logprob: -3.5219674110412598
    5. ' dist' → logprob: -4.02196741104126
    6. '2' → logprob: -4.52196741104126
    7. ' i' → logprob: -5.14696741104126
    8. 'i' → logprob: -6.27196741104126
    9. 'dist' → logprob: -6.27196741104126
    10. ' b' → logprob: -6.77196741104126

Token 272: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2692960500717163
    2. 'def' → logprob: -1.7692960500717163
    3. '#' → logprob: -1.8942960500717163
    4. '```' → logprob: -2.144296169281006
    5. '...' → logprob: -2.769296169281006
    6. ':' → logprob: -3.144296169281006
    7. ' ' → logprob: -3.519296169281006
    8. ',' → logprob: -4.144296169281006
    9. '   ' → logprob: -4.269296169281006
    10. '\n' → logprob: -4.519296169281006

Token 273: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09392896294593811
    2. ' ' → logprob: -2.8439290523529053
    3. '1' → logprob: -3.4689290523529053
    4. '...' → logprob: -8.343929290771484
    5. ' ' → logprob: -11.656429290771484
    6. ' ...' → logprob: -11.718929290771484
    7. 'b' → logprob: -12.218929290771484
    8. '```' → logprob: -12.218929290771484
    9. ' b' → logprob: -12.343929290771484
    10. '"' → logprob: -12.343929290771484

Token 274: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015688598155975342
    2. ' ' → logprob: -4.515688419342041
    3. '2' → logprob: -5.390688419342041
    4. '...' → logprob: -9.6406888961792
    5. ' ...' → logprob: -13.1406888961792
    6. '  ' → logprob: -14.1406888961792
    7. ' ' → logprob: -14.8281888961792
    8. '"' → logprob: -14.8281888961792
    9. '```' → logprob: -14.8906888961792
    10. '`' → logprob: -14.9531888961792

Token 275: ' et' (ID: 859)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9702568054199219
    2. 'def' → logprob: -1.3452568054199219
    3. '
' → logprob: -2.345256805419922
    4. '#' → logprob: -2.470256805419922
    5. '\' → logprob: -2.845256805419922
    6. ')' → logprob: -3.720256805419922
    7. ':' → logprob: -3.970256805419922
    8. ')
' → logprob: -4.345256805419922
    9. '#
' → logprob: -4.595256805419922
    10. ':
' → logprob: -4.845256805419922

Token 276: ' atte' (ID: 43312)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5116675496101379
    2. ' #' → logprob: -2.261667490005493
    3. '...' → logprob: -2.261667490005493
    4. ' que' → logprob: -2.886667490005493
    5. '\n' → logprob: -3.761667490005493
    6. 'que' → logprob: -3.886667490005493
    7. ' continuer' → logprob: -4.011667728424072
    8. '"' → logprob: -4.761667728424072
    9. 'dist' → logprob: -4.886667728424072
    10. ' ' → logprob: -5.511667728424072

Token 277: 'ind' (ID: 521)
  Prédit: 'indre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.009297349490225315
    2. 'nd' → logprob: -5.2592973709106445
    3. 'ind' → logprob: -5.7592973709106445
    4. 'int' → logprob: -8.134297370910645
    5. 'indra' → logprob: -9.134297370910645
    6. 'nir' → logprob: -9.509297370910645
    7. 'n' → logprob: -9.634297370910645
    8. 'inder' → logprob: -10.259297370910645
    9. 'ign' → logprob: -10.634297370910645
    10. '"' → logprob: -10.634297370910645

Token 278: 'rons' (ID: 50465)
  Prédit: 'indre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.7280927896499634
    2. 're' → logprob: -0.8530927896499634
    3. 'r' → logprob: -3.353092670440674
    4. 'nd' → logprob: -3.978092670440674
    5. 'dre' → logprob: -4.353092670440674
    6. 'n' → logprob: -4.478092670440674
    7. 'ind' → logprob: -5.353092670440674
    8. 'g' → logprob: -6.228092670440674
    9. 'int' → logprob: -6.603092670440674
    10. 'nt' → logprob: -6.853092670440674

Token 279: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39713311195373535
    2. ' la' → logprob: -2.1471331119537354
    3. ' l' → logprob: -2.8971331119537354
    4. ' le' → logprob: -3.3971331119537354
    5. 'r' → logprob: -3.8971331119537354
    6. '...' → logprob: -4.397132873535156
    7. '   ' → logprob: -4.897132873535156
    8. 'a' → logprob: -4.897132873535156
    9. 'le' → logprob: -4.897132873535156
    10. ' b' → logprob: -5.022132873535156

Token 280: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5482732057571411
    2. ' a' → logprob: -1.6732732057571411
    3. ' ' → logprob: -2.5482730865478516
    4. '1' → logprob: -2.5482730865478516
    5. ' b' → logprob: -3.6732730865478516
    6. 'b' → logprob: -4.048273086547852
    7. ' la' → logprob: -4.548273086547852
    8. ' le' → logprob: -4.923273086547852
    9. 'le' → logprob: -5.798273086547852
    10. 'la' → logprob: -6.423273086547852

Token 281: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8633811473846436
    2. '<|end|>' → logprob: -1.9883811473846436
    3. '
' → logprob: -2.1133811473846436
    4. '.' → logprob: -2.7383811473846436
    5. '#' → logprob: -3.1133811473846436
    6. '_' → logprob: -3.3633811473846436
    7. ',' → logprob: -3.8633811473846436
    8. '```' → logprob: -3.9883811473846436
    9. '...' → logprob: -4.363381385803223
    10. ' ' → logprob: -4.363381385803223

Token 282: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7587347626686096
    2. 'b' → logprob: -1.1337347030639648
    3. 'a' → logprob: -2.758734703063965
    4. ' l' → logprob: -3.133734703063965
    5. 'l' → logprob: -3.633734703063965
    6. ' ' → logprob: -4.008734703063965
    7. ' a' → logprob: -4.133734703063965
    8. '...' → logprob: -4.633734703063965
    9. ' la' → logprob: -5.258734703063965
    10. 'i' → logprob: -5.633734703063965

Token 283: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.46959078311920166
    2. '_' → logprob: -1.0945907831192017
    3. ' _' → logprob: -3.969590663909912
    4. 'r' → logprob: -5.219590663909912
    5. 'i' → logprob: -6.094590663909912
    6. ' ->' → logprob: -6.094590663909912
    7. ' ' → logprob: -6.344590663909912
    8. ')' → logprob: -6.344590663909912
    9. '_r' → logprob: -6.844590663909912
    10. '```' → logprob: -7.594590663909912

Token 284: ' auparavant' (ID: 163143)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0598961114883423
    2. 'def' → logprob: -1.8098961114883423
    3. ':' → logprob: -2.5598959922790527
    4. ')' → logprob: -2.8098959922790527
    5. '\n' → logprob: -2.9348959922790527
    6. ',' → logprob: -3.4348959922790527
    7. ':
' → logprob: -3.5598959922790527
    8. '\' → logprob: -3.5598959922790527
    9. '

' → logprob: -3.6848959922790527
    10. '(
' → logprob: -3.9348959922790527

Token 285: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3314005732536316
    2. '\n' → logprob: -2.4564006328582764
    3. ':' → logprob: -2.8314006328582764
    4. ':
' → logprob: -3.4564006328582764
    5. ')' → logprob: -3.7064006328582764
    6. '\' → logprob: -4.331400394439697
    7. '```' → logprob: -4.331400394439697
    8. ')
' → logprob: -4.581400394439697
    9. '
' → logprob: -4.831400394439697
    10. 'import' → logprob: -4.956400394439697

Token 286: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.7716038227081299
    2. ':' → logprob: -2.14660382270813
    3. 'def' → logprob: -2.27160382270813
    4. '\' → logprob: -2.39660382270813
    5. '#' → logprob: -2.77160382270813
    6. ',' → logprob: -2.77160382270813
    7. '
' → logprob: -3.14660382270813
    8. '```' → logprob: -3.14660382270813
    9. ')' → logprob: -3.27160382270813
    10. ' =' → logprob: -3.52160382270813

Token 287: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5211296677589417
    2. ')' → logprob: -1.5211296081542969
    3. ':' → logprob: -3.396129608154297
    4. '```' → logprob: -3.771129608154297
    5. '\n' → logprob: -3.896129608154297
    6. '\' → logprob: -3.896129608154297
    7. '#' → logprob: -4.146129608154297
    8. ',' → logprob: -4.521129608154297
    9. '.' → logprob: -4.646129608154297
    10. ' =' → logprob: -5.146129608154297

Token 288: ' Plus' (ID: 11899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12486177682876587
    2. ' #' → logprob: -2.999861717224121
    3. ' dist' → logprob: -4.499861717224121
    4. ' a' → logprob: -5.124861717224121
    5. ' max' → logprob: -5.124861717224121
    6. ' b' → logprob: -5.374861717224121
    7. '
' → logprob: -5.374861717224121
    8. 'max' → logprob: -5.499861717224121
    9. 'b' → logprob: -5.624861717224121
    10. 'a' → logprob: -5.624861717224121

Token 289: ' long' (ID: 1701)
  Prédit: ' court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' court' → logprob: -0.40725547075271606
    2. 'court' → logprob: -1.4072554111480713
    3. 'cour' → logprob: -2.6572554111480713
    4. ' long' → logprob: -5.15725564956665
    5. ' courts' → logprob: -6.03225564956665
    6. ' ' → logprob: -6.28225564956665
    7. ' bref' → logprob: -6.90725564956665
    8. ' précisément' → logprob: -6.90725564956665
    9. 'prec' → logprob: -7.03225564956665
    10. ' précis' → logprob: -7.03225564956665

Token 290: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5830121636390686
    2. '
' → logprob: -2.083012104034424
    3. ')' → logprob: -2.833012104034424
    4. ',' → logprob: -2.833012104034424
    5. '\n' → logprob: -3.208012104034424
    6. ':
' → logprob: -3.333012104034424
    7. '#' → logprob: -3.458012104034424
    8. '.' → logprob: -3.833012104034424
    9. 'def' → logprob: -4.333012104034424
    10. ',
' → logprob: -4.708012104034424

Token 291: ' inf' (ID: 5603)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.28631672263145447
    2. ' ég' → logprob: -1.9113167524337769
    3. 'égal' → logprob: -3.6613166332244873
    4. '#' → logprob: -4.036316871643066
    5. ' equal' → logprob: -5.286316871643066
    6. ' ident' → logprob: -5.411316871643066
    7. ' ind' → logprob: -5.661316871643066
    8. ' #' → logprob: -5.786316871643066
    9. ' inch' → logprob: -5.911316871643066
    10. ' pas' → logprob: -5.911316871643066

Token 292: 'ini' (ID: 2363)
  Prédit: 'inite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inite' → logprob: -1.2351741790771484
    2. 'ini' → logprob: -1.4851741790771484
    3. '...' → logprob: -1.9851741790771484
    4. '#' → logprob: -2.3601741790771484
    5. '```' → logprob: -2.8601741790771484
    6. 'inie' → logprob: -2.8601741790771484
    7. 'ine' → logprob: -3.2351741790771484
    8. ')' → logprob: -3.7351741790771484
    9. 'init' → logprob: -4.235174179077148
    10. 'érieur' → logprob: -4.360174179077148

Token 293: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4897702932357788
    2. ':' → logprob: -1.9897702932357788
    3. ':
' → logprob: -2.4897704124450684
    4. '
' → logprob: -2.8647704124450684
    5. '\n' → logprob: -3.3647704124450684
    6. '```' → logprob: -3.4897704124450684
    7. 'import' → logprob: -4.739770412445068
    8. '#' → logprob: -5.114770412445068
    9. '\' → logprob: -5.239770412445068
    10. '

' → logprob: -5.239770412445068

Token 294: 'plus' (ID: 11601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002551646437495947
    2. ' )' → logprob: -6.627551555633545
    3. '...' → logprob: -7.877551555633545
    4. ')
' → logprob: -8.127552032470703
    5. '#' → logprob: -8.502552032470703
    6. ' ' → logprob: -9.877552032470703
    7. '```' → logprob: -9.877552032470703
    8. '
' → logprob: -10.377552032470703
    9. ',' → logprob: -10.502552032470703
    10. ').' → logprob: -11.002552032470703

Token 295: ' de' (ID: 334)
  Prédit: ' court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' court' → logprob: -0.45602965354919434
    2. ' long' → logprob: -2.7060296535491943
    3. 'court' → logprob: -2.8310296535491943
    4. '```' → logprob: -2.8310296535491943
    5. ' de' → logprob: -3.2060296535491943
    6. 'ieurs' → logprob: -3.5810296535491943
    7. '#' → logprob: -4.831029891967773
    8. ' rien' → logprob: -4.831029891967773
    9. 'import' → logprob: -4.831029891967773
    10. '
' → logprob: -4.956029891967773

Token 296: ' chemin' (ID: 45035)
  Prédit: ' chemin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.17913579940795898
    2. ' chemins' → logprob: -2.179135799407959
    3. 'che' → logprob: -3.804135799407959
    4. '```' → logprob: -5.804135799407959
    5. 'conn' → logprob: -6.054135799407959
    6. ' ' → logprob: -6.054135799407959
    7. ' accès' → logprob: -6.054135799407959
    8. ')' → logprob: -6.179135799407959
    9. ' ' → logprob: -6.679135799407959
    10. ' reachable' → logprob: -6.804135799407959

Token 297: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06566888093948364
    2. ')
' → logprob: -2.940668821334839
    3. ' )' → logprob: -5.315669059753418
    4. ')

' → logprob: -6.815669059753418
    5. '
' → logprob: -7.065669059753418
    6. '):
' → logprob: -7.315669059753418
    7. ' )
' → logprob: -7.440669059753418
    8. '):' → logprob: -7.690669059753418
    9. '),' → logprob: -7.940669059753418
    10. '#' → logprob: -8.065669059753418

Token 298: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34685853123664856
    2. ')' → logprob: -1.8468585014343262
    3. '\n' → logprob: -3.471858501434326
    4. '\' → logprob: -4.346858501434326
    5. ' 
' → logprob: -4.346858501434326
    6. '...' → logprob: -4.596858501434326
    7. ' ' → logprob: -4.846858501434326
    8. '<|end|>' → logprob: -4.846858501434326
    9. '"\' → logprob: -4.971858501434326
    10. ''\' → logprob: -4.971858501434326

Token 299: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.28474220633506775
    2. '#' → logprob: -3.0347421169281006
    3. 'on' → logprob: -3.2847421169281006
    4. ' la' → logprob: -3.7847421169281006
    5. ' l' → logprob: -4.03474235534668
    6. 'a' → logprob: -4.15974235534668
    7. ' dist' → logprob: -4.28474235534668
    8. 'b' → logprob: -4.28474235534668
    9. ' le' → logprob: -4.53474235534668
    10. 'dist' → logprob: -4.65974235534668

Token 300: ' perd' (ID: 17696)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29824477434158325
    2. '#' → logprob: -2.4232447147369385
    3. 'n' → logprob: -2.4232447147369385
    4. ' ' → logprob: -3.9232447147369385
    5. ' continue' → logprob: -3.9232447147369385
    6. ' trouve' → logprob: -5.548244953155518
    7. ' a' → logprob: -5.673244953155518
    8. ' #' → logprob: -6.048244953155518
    9. 's' → logprob: -6.048244953155518
    10. ' ' → logprob: -6.173244953155518

Token 301: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6355851292610168
    2. ' la' → logprob: -1.260585069656372
    3. ' le' → logprob: -2.885585069656372
    4. ' ' → logprob: -3.510585069656372
    5. 'l' → logprob: -4.135585308074951
    6. 'la' → logprob: -4.385585308074951
    7. '#' → logprob: -4.635585308074951
    8. 'le' → logprob: -4.635585308074951
    9. '_' → logprob: -5.135585308074951
    10. ' accès' → logprob: -5.260585308074951

Token 302: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.928476095199585
    2. 'ar' → logprob: -2.053476095199585
    3. 'e' → logprob: -2.178476095199585
    4. '#' → logprob: -2.553476095199585
    5. ' chemin' → logprob: -3.303476095199585
    6. ' lien' → logprob: -3.553476095199585
    7. 'a' → logprob: -3.678476095199585
    8. ' trajet' → logprob: -3.928476095199585
    9. ')' → logprob: -4.178476333618164
    10. '```' → logprob: -4.178476333618164

Token 303: ' exist' (ID: 4310)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028046073392033577
    2. '\' → logprob: -4.778046131134033
    3. '\n' → logprob: -5.028046131134033
    4. '
' → logprob: -5.278046131134033
    5. '(
' → logprob: -5.778046131134033
    6. '"\' → logprob: -7.028046131134033
    7. '

' → logprob: -7.653046131134033
    8. ' def' → logprob: -7.778046131134033
    9. 'n' → logprob: -7.778046131134033
    10. 'import' → logprob: -8.028045654296875

Token 304: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13097427785396576
    2. '#' → logprob: -2.880974292755127
    3. '.' → logprob: -3.755974292755127
    4. ')' → logprob: -4.880974292755127
    5. '_' → logprob: -5.630974292755127
    6. ',' → logprob: -5.755974292755127
    7. '#
' → logprob: -5.880974292755127
    8. 'i' → logprob: -6.005974292755127
    9. '```' → logprob: -6.005974292755127
    10. ' ' → logprob: -6.005974292755127

Token 305: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9449821710586548
    2. '
' → logprob: -1.1949821710586548
    3. '

' → logprob: -1.1949821710586548
    4. '


' → logprob: -6.069982051849365
    5. '
' → logprob: -6.319982051849365
    6. '\n' → logprob: -7.569982051849365
    7. '
 
' → logprob: -7.944982051849365
    8. 'import' → logprob: -8.194982528686523
    9. '```' → logprob: -9.069982528686523
    10. '

' → logprob: -9.194982528686523

Token 306: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.610276699066162
    2. ' l' → logprob: -1.860276699066162
    3. ' cette' → logprob: -1.860276699066162
    4. ' la' → logprob: -2.610276699066162
    5. 'la' → logprob: -3.110276699066162
    6. ' ' → logprob: -3.110276699066162
    7. 'une' → logprob: -3.360276699066162
    8. 'a' → logprob: -3.610276699066162
    9. ' le' → logprob: -3.735276699066162
    10. ' b' → logprob: -3.985276699066162

Token 307: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.43057548999786377
    2. '_' → logprob: -1.0555754899978638
    3. '_
' → logprob: -8.180575370788574
    4. 'i' → logprob: -8.180575370788574
    5. '_
' → logprob: -8.180575370788574
    6. ' _' → logprob: -8.305575370788574
    7. 'r' → logprob: -8.430575370788574
    8. ''_' → logprob: -8.680575370788574
    9. '_r' → logprob: -9.305575370788574
    10. '"_' → logprob: -9.930575370788574

Token 308: ' ->' (ID: 2747)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20426425337791443
    2. '
' → logprob: -1.8292642831802368
    3. '

' → logprob: -4.079264163970947
    4. 'import' → logprob: -6.329264163970947
    5. '\' → logprob: -6.579264163970947
    6. '
' → logprob: -6.954264163970947
    7. '


' → logprob: -7.079264163970947
    8. '\n' → logprob: -7.329264163970947
    9. ' 
' → logprob: -8.079264640808105
    10. '
 
' → logprob: -8.329264640808105

Token 309: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07911747694015503
    2. 'b' → logprob: -2.5791175365448
    3. ' ' → logprob: -8.454117774963379
    4. ' a' → logprob: -12.454117774963379
    5. 'a' → logprob: -12.954117774963379
    6. '2' → logprob: -13.454117774963379
    7. '...' → logprob: -13.454117774963379
    8. '1' → logprob: -13.454117774963379
    9. ' ' → logprob: -13.579117774963379
    10. '  ' → logprob: -14.579117774963379

Token 310: '_i' (ID: 10853)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.845775842666626
    2. 'def' → logprob: -2.095775842666626
    3. ')' → logprob: -2.345775842666626
    4. '\' → logprob: -2.845775842666626
    5. '
' → logprob: -2.845775842666626
    6. '(
' → logprob: -2.970775842666626
    7. ':' → logprob: -3.095775842666626
    8. '```' → logprob: -4.220775604248047
    9. '

' → logprob: -4.470775604248047
    10. '):' → logprob: -4.720775604248047

Token 311: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6842411756515503
    2. '
' → logprob: -1.1842411756515503
    3. '

' → logprob: -1.8092411756515503
    4. '


' → logprob: -4.30924129486084
    5. '\' → logprob: -5.93424129486084
    6. 'import' → logprob: -6.18424129486084
    7. '\n' → logprob: -6.43424129486084
    8. '
' → logprob: -7.05924129486084
    9. '
 
' → logprob: -7.05924129486084
    10. '"\' → logprob: -7.43424129486084

Token 312: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2307281196117401
    2. '
' → logprob: -2.1057281494140625
    3. ':' → logprob: -3.7307281494140625
    4. '\' → logprob: -4.1057281494140625
    5. '

' → logprob: -4.6057281494140625
    6. '(
' → logprob: -4.6057281494140625
    7. '\n' → logprob: -5.1057281494140625
    8. ':
' → logprob: -5.7307281494140625
    9. ')' → logprob: -5.9807281494140625
    10. ' def' → logprob: -6.2307281494140625

Token 313: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008340333588421345
    2. '
' → logprob: -5.008340358734131
    3. '\' → logprob: -7.008340358734131
    4. '

' → logprob: -8.383339881896973
    5. 'import' → logprob: -8.758339881896973
    6. '\n' → logprob: -9.133339881896973
    7. '```' → logprob: -9.133339881896973
    8. ' 
' → logprob: -10.258339881896973
    9. '


' → logprob: -11.383339881896973
    10. ' def' → logprob: -11.508339881896973

Token 314: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005233656847849488
    2. '
' → logprob: -7.625523567199707
    3. '

' → logprob: -11.625523567199707
    4. 'n' → logprob: -11.625523567199707
    5. '\' → logprob: -12.000523567199707
    6. 'import' → logprob: -12.250523567199707
    7. 'from' → logprob: -12.875523567199707
    8. ' 
' → logprob: -14.125523567199707
    9. '\n' → logprob: -14.375523567199707
    10. ' def' → logprob: -14.875523567199707

Token 315: ' calc' (ID: 25691)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09444691240787506
    2. ' def' → logprob: -3.594446897506714
    3. ' continue' → logprob: -3.594446897506714
    4. ' peut' → logprob: -4.094447135925293
    5. 'continue' → logprob: -5.344447135925293
    6. ' va' → logprob: -6.219447135925293
    7. ' pourra' → logprob: -6.469447135925293
    8. '#' → logprob: -6.969447135925293
    9. 'for' → logprob: -7.094447135925293
    10. '_' → logprob: -7.344447135925293

Token 316: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.16799648106098175
    2. 'ul' → logprob: -1.9179965257644653
    3. 'uler' → logprob: -5.167996406555176
    4. 'ulate' → logprob: -7.542996406555176
    5. 'ulé' → logprob: -7.542996406555176
    6. 'cule' → logprob: -8.292996406555176
    7. '#' → logprob: -8.417996406555176
    8. 'ult' → logprob: -9.167996406555176
    9. 'ular' → logprob: -9.542996406555176
    10. 'l' → logprob: -9.917996406555176

Token 317: ' donc' (ID: 14206)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2790306806564331
    2. ' la' → logprob: -2.4040307998657227
    3. ' dist' → logprob: -2.5290307998657227
    4. 'for' → logprob: -3.9040307998657227
    5. ',' → logprob: -4.029030799865723
    6. ' for' → logprob: -4.904030799865723
    7. 'la' → logprob: -5.029030799865723
    8. ':' → logprob: -6.029030799865723
    9. ' les' → logprob: -6.154030799865723
    10. '(dist' → logprob: -6.654030799865723

Token 318: ' pour' (ID: 1930)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35938116908073425
    2. 'min' → logprob: -2.1093811988830566
    3. ' la' → logprob: -2.7343811988830566
    4. 'la' → logprob: -2.9843811988830566
    5. ' dist' → logprob: -4.234381198883057
    6. 'le' → logprob: -4.484381198883057
    7. 'max' → logprob: -4.859381198883057
    8. 'for' → logprob: -5.359381198883057
    9. '#' → logprob: -5.484381198883057
    10. 'les' → logprob: -5.859381198883057

Token 319: ' ce' (ID: 2357)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.009614300914108753
    2. 'cha' → logprob: -5.75961446762085
    3. 'i' → logprob: -6.50961446762085
    4. ' each' → logprob: -6.50961446762085
    5. ' i' → logprob: -6.63461446762085
    6. 'each' → logprob: -7.63461446762085
    7. 'ch' → logprob: -8.009613990783691
    8. 't' → logprob: -8.134613990783691
    9. 'a' → logprob: -8.259613990783691
    10. ' chacune' → logprob: -8.634613990783691

Token 320: ' jour' (ID: 8379)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.4236918687820435
    2. 'i' → logprob: -1.7986918687820435
    3. 'a' → logprob: -1.9236918687820435
    4. ' a' → logprob: -2.048691749572754
    5. ' b' → logprob: -2.423691749572754
    6. '_' → logprob: -2.798691749572754
    7. ' edge' → logprob: -3.548691749572754
    8. ' _' → logprob: -4.048691749572754
    9. ' ' → logprob: -4.048691749572754
    10. ' jour' → logprob: -4.173691749572754

Token 321: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9587098956108093
    2. ':' → logprob: -1.083709955215454
    3. ' i' → logprob: -2.083709955215454
    4. ',' → logprob: -3.083709955215454
    5. ' ' → logprob: -3.208709955215454
    6. '_' → logprob: -4.208709716796875
    7. 's' → logprob: -4.458709716796875
    8. ' :' → logprob: -4.583709716796875
    9. '_i' → logprob: -4.958709716796875
    10. '.' → logprob: -6.083709716796875

Token 322: ' distance' (ID: 9324)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3678986728191376
    2. '_' → logprob: -1.99289870262146
    3. ':' → logprob: -3.49289870262146
    4. ',' → logprob: -3.49289870262146
    5. '#' → logprob: -3.99289870262146
    6. '"' → logprob: -4.492898464202881
    7. ' #' → logprob: -4.867898464202881
    8. 'def' → logprob: -5.117898464202881
    9. ' :' → logprob: -5.242898464202881
    10. ')' → logprob: -5.367898464202881

Token 323: ':
' (ID: 734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21147288382053375
    2. 's' → logprob: -2.461472988128662
    3. '[' → logprob: -2.711472988128662
    4. ' _' → logprob: -5.461472988128662
    5. '_i' → logprob: -5.836472988128662
    6. ' =' → logprob: -5.961472988128662
    7. ')' → logprob: -5.961472988128662
    8. '[i' → logprob: -5.961472988128662
    9. ' ' → logprob: -6.086472988128662
    10. ',' → logprob: -6.086472988128662

Token 324: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0136771202087402
    2. 'min' → logprob: -1.3886771202087402
    3. ' min' → logprob: -1.5136771202087402
    4. ' dist' → logprob: -2.1386771202087402
    5. '"' → logprob: -4.13867712020874
    6. 'max' → logprob: -4.63867712020874
    7. ' max' → logprob: -5.26367712020874
    8. '   ' → logprob: -5.63867712020874
    9. '#' → logprob: -5.88867712020874
    10. 'a' → logprob: -6.51367712020874

Token 325: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6602163314819336
    2. ' dist' → logprob: -1.0352163314819336
    3. 'min' → logprob: -2.4102163314819336
    4. 'dist' → logprob: -3.2852163314819336
    5. '   ' → logprob: -7.910216331481934
    6. ' ans' → logprob: -9.410216331481934
    7. ' max' → logprob: -9.535216331481934
    8. ' minimum' → logprob: -10.160216331481934
    9. ' ' → logprob: -10.285216331481934
    10. 'max' → logprob: -10.660216331481934

Token 326: '(
' (ID: 1607)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.6501082181930542
    2. '(' → logprob: -0.7751082181930542
    3. '(
' → logprob: -4.275108337402344
    4. ' (' → logprob: -6.525108337402344
    5. '1' → logprob: -7.900108337402344
    6. 'dist' → logprob: -8.150108337402344
    7. '_dist' → logprob: -8.400108337402344
    8. '_' → logprob: -8.400108337402344
    9. '(min' → logprob: -8.650108337402344
    10. ' =' → logprob: -8.775108337402344

Token 327: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4318273663520813
    2. ' dist' → logprob: -1.0568273067474365
    3. '   ' → logprob: -5.931827545166016
    4. '(dist' → logprob: -7.931827545166016
    5. ' ' → logprob: -10.181827545166016
    6. '	dist' → logprob: -10.681827545166016
    7. '  ' → logprob: -11.806827545166016
    8. ')' → logprob: -11.931827545166016
    9. '(' → logprob: -12.431827545166016
    10. '_dist' → logprob: -12.556827545166016

Token 328: '  ' (ID: 256)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5763492584228516
    2. 'dist' → logprob: -0.8263492584228516
    3. '   ' → logprob: -8.701349258422852
    4. '(dist' → logprob: -8.701349258422852
    5. ' ' → logprob: -10.826349258422852
    6. ')' → logprob: -11.201349258422852
    7. '	dist' → logprob: -11.576349258422852
    8. '(' → logprob: -12.201349258422852
    9. ' ' → logprob: -12.451349258422852
    10. '_dist' → logprob: -12.701349258422852

Token 329: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.10081535577774048
    2. ' dist' → logprob: -2.3508152961730957
    3. '(dist' → logprob: -7.725815296173096
    4. '   ' → logprob: -10.225815773010254
    5. '(' → logprob: -10.475815773010254
    6. ' ' → logprob: -10.850815773010254
    7. 'min' → logprob: -10.850815773010254
    8. '	dist' → logprob: -11.975815773010254
    9. ')' → logprob: -12.100815773010254
    10. 'distance' → logprob: -12.100815773010254

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003601336502470076
    2. '[' → logprob: -8.250360488891602
    3. '_' → logprob: -10.625360488891602
    4. ')' → logprob: -10.875360488891602
    5. '[
' → logprob: -11.875360488891602
    6. 's' → logprob: -12.000360488891602
    7. ']' → logprob: -12.125360488891602
    8. '(' → logprob: -12.250360488891602
    9. ',' → logprob: -12.250360488891602
    10. ' [' → logprob: -12.375360488891602

Token 331: '[' (ID: 58)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.695727527141571
    2. '[b' → logprob: -0.695727527141571
    3. '[' → logprob: -6.320727348327637
    4. '[u' → logprob: -8.070727348327637
    5. ' [' → logprob: -8.445727348327637
    6. ' +' → logprob: -10.070727348327637
    7. ')' → logprob: -10.820727348327637
    8. '[v' → logprob: -11.070727348327637
    9. '[node' → logprob: -11.195727348327637
    10. '[d' → logprob: -11.445727348327637

Token 332: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.840936541557312
    2. 'a' → logprob: -1.215936541557312
    3. '1' → logprob: -1.590936541557312
    4. '0' → logprob: -3.0909366607666016
    5. '2' → logprob: -4.840936660766602
    6. ' b' → logprob: -5.215936660766602
    7. ' a' → logprob: -5.590936660766602
    8. ']' → logprob: -5.840936660766602
    9. ' ' → logprob: -6.715936660766602
    10. 'i' → logprob: -7.590936660766602

Token 333: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027465999126434326
    2. '],' → logprob: -3.652466058731079
    3. '[' → logprob: -8.4024658203125
    4. ']+' → logprob: -8.4024658203125
    5. '],
' → logprob: -8.5274658203125
    6. ' ]' → logprob: -8.6524658203125
    7. ']
' → logprob: -8.7774658203125
    8. '])' → logprob: -9.7774658203125
    9. ']-' → logprob: -10.0274658203125
    10. '][' → logprob: -10.4024658203125

Token 334: '                                      ' (ID: 24131)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5324941277503967
    2. 'dist' → logprob: -0.9074941277503967
    3. '
' → logprob: -6.032494068145752
    4. ')' → logprob: -6.532494068145752
    5. ',
' → logprob: -7.282494068145752
    6. ')
' → logprob: -7.407494068145752
    7. ' )' → logprob: -7.907494068145752
    8. ' )
' → logprob: -7.907494068145752
    9. 'heap' → logprob: -7.907494068145752
    10. ',' → logprob: -8.03249454498291

Token 335: ' #' (ID: 1069)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.19285151362419128
    2. ',' → logprob: -1.8178515434265137
    3. 'dist' → logprob: -4.942851543426514
    4. ' ,
' → logprob: -6.317851543426514
    5. ')' → logprob: -6.442851543426514
    6. ' ,' → logprob: -6.567851543426514
    7. ' dist' → logprob: -7.442851543426514
    8. ' )' → logprob: -9.192851066589355
    9. ',
' → logprob: -9.192851066589355
    10. ')
' → logprob: -9.442851066589355

Token 336: ' chemin' (ID: 45035)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5471799373626709
    2. ' dist' → logprob: -0.9221799373626709
    3. ')' → logprob: -4.04718017578125
    4. ' )' → logprob: -5.42218017578125
    5. ' ]' → logprob: -7.54718017578125
    6. ']' → logprob: -8.54718017578125
    7. ' ' → logprob: -8.79718017578125
    8. ',' → logprob: -9.17218017578125
    9. '
' → logprob: -9.29718017578125
    10. ' ' → logprob: -9.29718017578125

Token 337: ' initial' (ID: 4871)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7406112551689148
    2. ')' → logprob: -0.9906112551689148
    3. ' ,' → logprob: -2.7406113147735596
    4. ' )' → logprob: -3.3656113147735596
    5. '[' → logprob: -3.8656113147735596
    6. ',
' → logprob: -4.7406110763549805
    7. '),' → logprob: -5.3656110763549805
    8. '1' → logprob: -5.9906110763549805
    9. '#' → logprob: -6.1156110763549805
    10. ' ),' → logprob: -6.7406110763549805

Token 338: ' sans' (ID: 9828)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9545173048973083
    2. '#' → logprob: -1.2045173645019531
    3. ',
' → logprob: -1.7045173645019531
    4. ',' → logprob: -2.329517364501953
    5. ')
' → logprob: -4.829517364501953
    6. '),' → logprob: -5.079517364501953
    7. ' +' → logprob: -5.079517364501953
    8. '+' → logprob: -5.329517364501953
    9. ' )' → logprob: -5.454517364501953
    10. '#
' → logprob: -6.579517364501953

Token 339: ' modification' (ID: 29847)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08081024140119553
    2. ' modification' → logprob: -2.830810308456421
    3. ' changement' → logprob: -4.330810070037842
    4. 'modifier' → logprob: -6.455810070037842
    5. 'ch' → logprob: -6.705810070037842
    6. ' mod' → logprob: -6.955810070037842
    7. ' modifications' → logprob: -8.080810546875
    8. '#' → logprob: -8.955810546875
    9. 'changer' → logprob: -8.955810546875
    10. ' modifier' → logprob: -8.955810546875

Token 340: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7575538754463196
    2. ',
' → logprob: -1.0075538158416748
    3. ',' → logprob: -1.8825538158416748
    4. '#' → logprob: -5.257554054260254
    5. '+' → logprob: -6.132554054260254
    6. '),' → logprob: -6.132554054260254
    7. ')
' → logprob: -6.507554054260254
    8. '+
' → logprob: -7.382554054260254
    9. ' +' → logprob: -7.507554054260254
    10. ' )' → logprob: -7.632554054260254

Token 341: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1455329656600952
    2. ')' → logprob: -1.1455329656600952
    3. 'dist' → logprob: -2.0205330848693848
    4. ',' → logprob: -2.6455330848693848
    5. ' dist' → logprob: -2.6455330848693848
    6. ',
' → logprob: -3.1455330848693848
    7. '   ' → logprob: -3.8955330848693848
    8. ' ' → logprob: -5.020533084869385
    9. ' )' → logprob: -5.145533084869385
    10. ')
' → logprob: -6.395533084869385

Token 342: '  ' (ID: 256)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5627017021179199
    2. 'dist' → logprob: -0.9377017021179199
    3. '   ' → logprob: -3.68770170211792
    4. ')' → logprob: -5.18770170211792
    5. '  ' → logprob: -6.31270170211792
    6. ' ' → logprob: -6.93770170211792
    7. ' )' → logprob: -7.31270170211792
    8. 'max' → logprob: -7.68770170211792
    9. ')
' → logprob: -7.81270170211792
    10. '
' → logprob: -8.062702178955078

Token 343: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6339308023452759
    2. 'dist' (adapté à ' dist') → logprob: -0.7589308023452759
    3. '   ' → logprob: -7.633930683135986
    4. ' ' → logprob: -9.133931159973145
    5. ' min' → logprob: -9.133931159973145
    6. 'heap' → logprob: -9.508931159973145
    7. '  ' → logprob: -9.508931159973145
    8. 'min' → logprob: -9.508931159973145
    9. '    ' → logprob: -9.633931159973145
    10. '(dist' → logprob: -9.758931159973145

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05231631174683571
    2. '[' → logprob: -3.177316427230835
    3. '[b' → logprob: -5.552316188812256
    4. '[a' → logprob: -5.927316188812256
    5. ' [' → logprob: -6.927316188812256
    6. 'b' → logprob: -7.177316188812256
    7. 'a' → logprob: -8.302316665649414
    8. '[
' → logprob: -8.427316665649414
    9. '[i' → logprob: -8.802316665649414
    10. '```' → logprob: -9.177316665649414

Token 345: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.3359186053276062
    2. '[a' → logprob: -1.335918664932251
    3. '[' → logprob: -3.835918664932251
    4. ' [' → logprob: -7.710918426513672
    5. '][' → logprob: -9.710918426513672
    6. '[
' → logprob: -9.960918426513672
    7. '[c' → logprob: -10.210918426513672
    8. '[i' → logprob: -10.335918426513672
    9. '[u' → logprob: -10.835918426513672
    10. ')' → logprob: -11.085918426513672

Token 346: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.11163102090358734
    2. '[i' → logprob: -2.361630916595459
    3. ']' → logprob: -5.486630916595459
    4. '[_' → logprob: -5.986630916595459
    5. ']_' → logprob: -6.486630916595459
    6. '][' → logprob: -6.611630916595459
    7. 'i' → logprob: -6.736630916595459
    8. '][_' → logprob: -8.236631393432617
    9. '[' → logprob: -8.986631393432617
    10. ''_' → logprob: -9.861631393432617

Token 347: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010423346422612667
    2. ']+' → logprob: -5.135423183441162
    3. '][' → logprob: -6.010423183441162
    4. ']-' → logprob: -7.010423183441162
    5. '[i' → logprob: -7.260423183441162
    6. '[' → logprob: -9.01042366027832
    7. ' ]' → logprob: -9.26042366027832
    8. '[b' → logprob: -9.63542366027832
    9. '[a' → logprob: -10.01042366027832
    10. '],' → logprob: -10.51042366027832

Token 348: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11314663290977478
    2. '+' → logprob: -2.2381465435028076
    3. ']' → logprob: -8.863146781921387
    4. '[' → logprob: -9.363146781921387
    5. '+c' → logprob: -10.363146781921387
    6. ')' → logprob: -10.988146781921387
    7. ']+' → logprob: -11.113146781921387
    8. '+b' → logprob: -11.738146781921387
    9. ' ' → logprob: -12.113146781921387
    10. ')+' → logprob: -12.738146781921387

Token 349: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14338043332099915
    2. ' c' → logprob: -2.0183804035186768
    3. ''' → logprob: -7.643380641937256
    4. '"' → logprob: -9.393380165100098
    5. ' '' → logprob: -9.768380165100098
    6. ' ' → logprob: -10.143380165100098
    7. '   ' → logprob: -11.393380165100098
    8. '  ' → logprob: -12.143380165100098
    9. ')' → logprob: -12.518380165100098
    10. ')c' → logprob: -12.518380165100098

Token 350: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -5.9795445849886164e-05
    2. 'i' → logprob: -9.875060081481934
    3. '[i' → logprob: -12.125060081481934
    4. ' _' → logprob: -13.625060081481934
    5. ')' → logprob: -14.375060081481934
    6. '[' → logprob: -15.375060081481934
    7. '_' → logprob: -15.500060081481934
    8. '   ' → logprob: -16.500059127807617
    9. '"' → logprob: -16.625059127807617
    10. ''_' → logprob: -16.625059127807617

Token 351: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08898712694644928
    2. '+' → logprob: -2.463987112045288
    3. ')' → logprob: -10.463987350463867
    4. ']' → logprob: -12.463987350463867
    5. '   ' → logprob: -12.713987350463867
    6. '  ' → logprob: -12.838987350463867
    7. ' ' → logprob: -12.838987350463867
    8. ' +
' → logprob: -13.463987350463867
    9. ')+' → logprob: -13.713987350463867
    10. '[' → logprob: -14.338987350463867

Token 352: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6326376795768738
    2. ' dist' → logprob: -0.7576376795768738
    3. '"' → logprob: -11.007637977600098
    4. '1' → logprob: -12.007637977600098
    5. '	dist' → logprob: -12.632637977600098
    6. '   ' → logprob: -12.757637977600098
    7. '(dist' → logprob: -12.757637977600098
    8. ''' → logprob: -13.257637977600098
    9. '_dist' → logprob: -14.007637977600098
    10. ' ' → logprob: -14.007637977600098

Token 353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.741137283621356e-05
    2. '[' → logprob: -9.875057220458984
    3. '[a' → logprob: -12.250057220458984
    4. ' ' → logprob: -14.750057220458984
    5. '```' → logprob: -15.500057220458984
    6. 'a' → logprob: -15.750057220458984
    7. '1' → logprob: -16.000057220458984
    8. '_' → logprob: -16.500057220458984
    9. ' [' → logprob: -16.500057220458984
    10. '[b' → logprob: -16.500057220458984

Token 354: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.988221684878226e-06
    2. 'a' → logprob: -12.125006675720215
    3. '[b' → logprob: -13.500006675720215
    4. ' [' → logprob: -17.00000762939453
    5. '   ' → logprob: -17.50000762939453
    6. '[' → logprob: -17.50000762939453
    7. '[i' → logprob: -18.50000762939453
    8. '"[' → logprob: -18.87500762939453
    9. '[A' → logprob: -20.62500762939453
    10. '```' → logprob: -20.62500762939453

Token 355: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0015906770713627338
    2. ']' → logprob: -7.001590728759766
    3. 'i' → logprob: -7.501590728759766
    4. '])' → logprob: -10.001590728759766
    5. ']_' → logprob: -10.001590728759766
    6. '[i' → logprob: -10.501590728759766
    7. '_]' → logprob: -12.876590728759766
    8. '][' → logprob: -13.376590728759766
    9. '_j' → logprob: -14.126590728759766
    10. '[_' → logprob: -14.251590728759766

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2526650130748749
    2. '])' → logprob: -1.5026650428771973
    3. ']
' → logprob: -7.627665042877197
    4. '],' → logprob: -9.127664566040039
    5. ']),' → logprob: -10.377664566040039
    6. ' ]' → logprob: -10.752664566040039
    7. '[' → logprob: -10.877664566040039
    8. '])
' → logprob: -11.127664566040039
    9. ']))' → logprob: -11.502664566040039
    10. ')' → logprob: -11.627664566040039

Token 357: '                  ' (ID: 8854)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007216068916022778
    2. ' )' → logprob: -7.875721454620361
    3. '
' → logprob: -8.87572193145752
    4. '[' → logprob: -9.37572193145752
    5. ')
' → logprob: -9.87572193145752
    6. '   ' → logprob: -10.75072193145752
    7. '#' → logprob: -11.25072193145752
    8. '}' → logprob: -12.25072193145752
    9. '),' → logprob: -12.25072193145752
    10. ']' → logprob: -12.62572193145752

Token 358: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.660315895918757e-05
    2. ')
' → logprob: -10.375076293945312
    3. '#' (adapté à ' #') → logprob: -11.000076293945312
    4. '
' → logprob: -11.250076293945312
    5. ' )' → logprob: -12.250076293945312
    6. '}' → logprob: -12.750076293945312
    7. '),' → logprob: -12.875076293945312
    8. '   ' → logprob: -13.125076293945312
    9. ',' → logprob: -14.375076293945312
    10. ')#' → logprob: -14.500076293945312

Token 359: ' chemin' (ID: 45035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005123461596667767
    2. ' )' → logprob: -5.505123615264893
    3. '1' → logprob: -7.380123615264893
    4. ' ' → logprob: -8.880123138427734
    5. ')
' → logprob: -9.630123138427734
    6. '#' → logprob: -10.630123138427734
    7. '2' → logprob: -10.880123138427734
    8. ' ' → logprob: -10.880123138427734
    9. '<|end|>' → logprob: -11.005123138427734
    10. '...' → logprob: -11.255123138427734

Token 360: ' utilisant' (ID: 92474)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3682396411895752
    2. '[' → logprob: -1.2432396411895752
    3. '[i' → logprob: -4.993239402770996
    4. ' )' → logprob: -5.993239402770996
    5. ']' → logprob: -6.118239402770996
    6. ' alternatif' → logprob: -6.118239402770996
    7. '   ' → logprob: -6.493239402770996
    8. '[
' → logprob: -6.618239402770996
    9. '1' → logprob: -8.243239402770996
    10. '  ' → logprob: -8.368239402770996

Token 361: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.07414413243532181
    2. 'l' → logprob: -4.32414436340332
    3. 'b' → logprob: -4.44914436340332
    4. ')' → logprob: -4.94914436340332
    5. ' b' → logprob: -5.19914436340332
    6. ' the' → logprob: -5.44914436340332
    7. ' cette' → logprob: -5.57414436340332
    8. ' invers' → logprob: -5.57414436340332
    9. 'the' → logprob: -5.69914436340332
    10. ' la' → logprob: -5.69914436340332

Token 362: ' route' (ID: 9656)
  Prédit: ' inversion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inversion' → logprob: -0.7410719990730286
    2. 'in' → logprob: -0.9910719990730286
    3. ' route' → logprob: -3.366071939468384
    4. ' inverse' → logprob: -4.116072177886963
    5. ' invers' → logprob: -4.241072177886963
    6. ' inverted' → logprob: -4.366072177886963
    7. ' voie' → logprob: -4.491072177886963
    8. ' ' → logprob: -4.491072177886963
    9. ' ar' → logprob: -4.616072177886963
    10. 'inverse' → logprob: -4.741072177886963

Token 363: ' invers' (ID: 38721)
  Prédit: ' invers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' invers' → logprob: -0.06898380070924759
    2. 'in' → logprob: -4.193984031677246
    3. ')' → logprob: -4.568984031677246
    4. ' inverse' → logprob: -5.068984031677246
    5. 'inverse' → logprob: -5.318984031677246
    6. 'i' → logprob: -5.568984031677246
    7. ' inverted' → logprob: -5.693984031677246
    8. '_in' → logprob: -5.693984031677246
    9. '[i' → logprob: -5.818984031677246
    10. ']' → logprob: -5.943984031677246

Token 364: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.009442264214158058
    2. 'ee' → logprob: -5.384442329406738
    3. 'e' → logprob: -6.259442329406738
    4. 's' → logprob: -6.509442329406738
    5. 'é' → logprob: -7.009442329406738
    6. 'ed' → logprob: -9.259442329406738
    7. '#' → logprob: -9.759442329406738
    8. '{' → logprob: -10.384442329406738
    9. 'i' → logprob: -10.634442329406738
    10. 'es' → logprob: -10.634442329406738

Token 365: ' ce' (ID: 2357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000283265660982579
    2. '#' → logprob: -8.500283241271973
    3. ')
' → logprob: -9.875283241271973
    4. ' )' → logprob: -11.875283241271973
    5. '[' → logprob: -12.375283241271973
    6. ')#' → logprob: -12.500283241271973
    7. '}' → logprob: -13.000283241271973
    8. ']' → logprob: -13.625283241271973
    9. ')`' → logprob: -13.750283241271973
    10. '[i' → logprob: -14.125283241271973

Token 366: ' jour' (ID: 8379)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6197404861450195
    2. '_i' → logprob: -1.8697404861450195
    3. ' jour' → logprob: -1.9947404861450195
    4. 'i' → logprob: -3.2447404861450195
    5. ']' → logprob: -3.3697404861450195
    6. 'jour' → logprob: -4.2447404861450195
    7. '_j' → logprob: -4.2447404861450195
    8. '_' → logprob: -4.4947404861450195
    9. ' ' → logprob: -4.8697404861450195
    10. '```' → logprob: -4.8697404861450195

Token 367: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00821489654481411
    2. ']' → logprob: -5.258214950561523
    3. '[' → logprob: -7.508214950561523
    4. '[i' → logprob: -7.883214950561523
    5. 'i' → logprob: -7.883214950561523
    6. '#' → logprob: -8.008214950561523
    7. '])' → logprob: -8.133214950561523
    8. '   ' → logprob: -8.633214950561523
    9. ' )' → logprob: -9.008214950561523
    10. 'e' → logprob: -9.008214950561523

Token 368: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024596223374828696
    2. '#' → logprob: -8.875246047973633
    3. ')
' → logprob: -9.625246047973633
    4. ' )' → logprob: -11.250246047973633
    5. '}' → logprob: -11.625246047973633
    6. ')#' → logprob: -12.125246047973633
    7. ')\' → logprob: -13.125246047973633
    8. ',' → logprob: -13.750246047973633
    9. ' ' → logprob: -13.750246047973633
    10. 'def' → logprob: -13.875246047973633

Token 369: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001519325451226905
    2. '#' → logprob: -9.250151634216309
    3. ')
' → logprob: -10.625151634216309
    4. ' )' → logprob: -11.375151634216309
    5. '}' → logprob: -11.625151634216309
    6. ')`' → logprob: -13.375151634216309
    7. ')#' → logprob: -13.625151634216309
    8. ')

' → logprob: -13.875151634216309
    9. ' ' → logprob: -14.000151634216309
    10. '`)' → logprob: -14.125151634216309

Token 370: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11527243256568909
    2. '
' → logprob: -2.4902725219726562
    3. '\' → logprob: -4.740272521972656
    4. '\n' → logprob: -4.990272521972656
    5. '

' → logprob: -5.365272521972656
    6. '(
' → logprob: -6.865272521972656
    7. '```' → logprob: -6.865272521972656
    8. ')' → logprob: -7.490272521972656
    9. '
' → logprob: -7.865272521972656
    10. '


' → logprob: -7.990272521972656

Token 371: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.41129949549213e-05
    2. 'for' → logprob: -9.625083923339844
    3. '
' → logprob: -11.750083923339844
    4. '\' → logprob: -11.875083923339844
    5. 'import' → logprob: -14.000083923339844
    6. '```' → logprob: -14.250083923339844
    7. 'n' → logprob: -14.625083923339844
    8. 'de' → logprob: -14.875083923339844
    9. '

' → logprob: -15.875083923339844
    10. '\n' → logprob: -16.000083923339844

Token 372: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0023635171819478273
    2. 'n' → logprob: -6.127363681793213
    3. 'for' → logprob: -9.002363204956055
    4. '
' → logprob: -10.127363204956055
    5. '\' → logprob: -11.877363204956055
    6. 'd' → logprob: -13.252363204956055
    7. 'import' → logprob: -13.377363204956055
    8. '```' → logprob: -14.127363204956055
    9. 'ndef' → logprob: -14.252363204956055
    10. '\n' → logprob: -14.752363204956055

Token 373: ' dist' (ID: 3601)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011329513508826494
    2. '
' → logprob: -7.626132965087891
    3. 'import' → logprob: -8.12613296508789
    4. ' def' → logprob: -8.25113296508789
    5. '```' → logprob: -10.62613296508789
    6. ' 
' → logprob: -11.75113296508789
    7. 'de' → logprob: -11.75113296508789
    8. 'from' → logprob: -11.87613296508789
    9. '\' → logprob: -12.00113296508789
    10. ')' → logprob: -12.25113296508789

Token 374: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8614534139633179
    2. ']' → logprob: -1.4864534139633179
    3. '1' → logprob: -1.6114534139633179
    4. '[' → logprob: -2.2364535331726074
    5. '2' → logprob: -4.111453533172607
    6. ')' → logprob: -4.736453533172607
    7. 's' → logprob: -5.361453533172607
    8. '_]' → logprob: -5.986453533172607
    9. '[]' → logprob: -5.986453533172607
    10. '#' → logprob: -6.111453533172607

Token 375: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3503479063510895
    2. ' =' → logprob: -1.350347876548767
    3. '=' → logprob: -3.8503479957580566
    4. ',' → logprob: -5.225347995758057
    5. '[i' → logprob: -5.975347995758057
    6. '2' → logprob: -6.475347995758057
    7. '=[' → logprob: -6.975347995758057
    8. '[a' → logprob: -6.975347995758057
    9. ']' → logprob: -7.100347995758057
    10. ')' → logprob: -7.975347995758057

Token 376: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015847718343138695
    2. '[' → logprob: -4.890847682952881
    3. '[x' → logprob: -5.640847682952881
    4. '],' → logprob: -6.265847682952881
    5. '])' → logprob: -7.390847682952881
    6. ')' → logprob: -7.390847682952881
    7. '][' → logprob: -8.015848159790039
    8. ' ]' → logprob: -8.765848159790039
    9. '[]' → logprob: -9.015848159790039
    10. ']==' → logprob: -9.140848159790039

Token 377: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2938863039016724
    2. '[x' → logprob: -1.4188863039016724
    3. ' is' → logprob: -1.7938863039016724
    4. ' =' → logprob: -2.918886184692383
    5. '=' → logprob: -3.293886184692383
    6. ',' → logprob: -3.293886184692383
    7. ']' → logprob: -3.418886184692383
    8. '==' → logprob: -3.918886184692383
    9. 'が' → logprob: -4.043886184692383
    10. ' est' → logprob: -4.043886184692383

Token 378: ' distance' (ID: 9324)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0277575254440308
    2. 'float' → logprob: -2.0277576446533203
    3. 'distance' → logprob: -2.2777576446533203
    4. 'la' → logprob: -2.5277576446533203
    5. 'inf' → logprob: -2.5277576446533203
    6. 'min' → logprob: -3.1527576446533203
    7. '0' → logprob: -3.2777576446533203
    8. ' float' → logprob: -3.6527576446533203
    9. 'La' → logprob: -3.7777576446533203
    10. ' distance' → logprob: -4.02775764465332

Token 379: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6966928839683533
    2. '[x' → logprob: -1.446692943572998
    3. '[' → logprob: -1.821692943572998
    4. ' =' → logprob: -2.821692943572998
    5. '=' → logprob: -3.946692943572998
    6. 'from' → logprob: -5.196692943572998
    7. ']' → logprob: -5.196692943572998
    8. '[s' → logprob: -5.696692943572998
    9. '```' → logprob: -6.321692943572998
    10. ',' → logprob: -6.446692943572998

Token 380: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.42866888642311096
    2. 'x' → logprob: -2.053668975830078
    3. ' l' → logprob: -2.428668975830078
    4. ' ' → logprob: -2.553668975830078
    5. 'l' → logprob: -3.428668975830078
    6. '1' → logprob: -4.053668975830078
    7. ' la' → logprob: -6.053668975830078
    8. '[x' → logprob: -7.428668975830078
    9. '```' → logprob: -7.803668975830078
    10. '[' → logprob: -7.928668975830078

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17309202253818512
    2. 'x' → logprob: -2.6730921268463135
    3. 'l' → logprob: -2.6730921268463135
    4. ' ' → logprob: -4.173091888427734
    5. ' x' → logprob: -5.923091888427734
    6. ' l' → logprob: -6.423091888427734
    7. 'la' → logprob: -7.298091888427734
    8. ' la' → logprob: -8.048091888427734
    9. '```' → logprob: -9.923091888427734
    10. '0' → logprob: -11.173091888427734

Token 382: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38125988841056824
    2. ']' → logprob: -2.1312599182128906
    3. 'def' → logprob: -3.0062599182128906
    4. ',' → logprob: -3.3812599182128906
    5. '#' → logprob: -3.7562599182128906
    6. ')' → logprob: -4.131259918212891
    7. ' =' → logprob: -4.131259918212891
    8. '[
' → logprob: -4.131259918212891
    9. '[]' → logprob: -5.006259918212891
    10. '=' → logprob: -5.256259918212891

Token 383: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47421643137931824
    2. ' x' → logprob: -0.9742164611816406
    3. ' ' → logprob: -9.34921646118164
    4. '[x' → logprob: -10.34921646118164
    5. 'l' → logprob: -11.47421646118164
    6. ' l' → logprob: -12.59921646118164
    7. '   ' → logprob: -12.97421646118164
    8. ' ' → logprob: -13.47421646118164
    9. 'a' → logprob: -14.72421646118164
    10. '[' → logprob: -14.84921646118164

Token 384: ' dans' (ID: 2671)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2698149681091309
    2. ')' → logprob: -1.3948149681091309
    3. '
' → logprob: -1.5198149681091309
    4. 'def' → logprob: -2.894814968109131
    5. '```' → logprob: -3.019814968109131
    6. '\' → logprob: -3.644814968109131
    7. '[' → logprob: -3.894814968109131
    8. '#' → logprob: -4.019814968109131
    9. ']' → logprob: -4.644814968109131
    10. ',' → logprob: -4.644814968109131

Token 385: ' grap' (ID: 60955)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2773366868495941
    2. 'le' → logprob: -1.6523367166519165
    3. 'l' → logprob: -3.777336597442627
    4. ' l' → logprob: -3.902336597442627
    5. ' la' → logprob: -6.777336597442627
    6. ' ' → logprob: -7.027336597442627
    7. ' initial' → logprob: -7.277336597442627
    8. '```' → logprob: -7.277336597442627
    9. 'la' → logprob: -7.777336597442627
    10. '_le' → logprob: -7.902336597442627

Token 386: 'he' (ID: 273)
  Prédit: 'ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.264340877532959
    2. 'aphe' → logprob: -2.514340877532959
    3. 'h' → logprob: -2.639340877532959
    4. 'he' → logprob: -2.889340877532959
    5. 'phe' → logprob: -4.264340877532959
    6. 'ch' → logprob: -5.514340877532959
    7. 'p' → logprob: -6.139340877532959
    8. '#' → logprob: -6.264340877532959
    9. 'c' → logprob: -8.014341354370117
    10. 'aph' → logprob: -8.014341354370117

Token 387: ' original' (ID: 4756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2995669841766357
    2. ']' → logprob: -1.2995669841766357
    3. '[' → logprob: -2.5495669841766357
    4. '#' → logprob: -2.6745669841766357
    5. '.' → logprob: -2.7995669841766357
    6. '
' → logprob: -3.0495669841766357
    7. ',' → logprob: -3.4245669841766357
    8. '[
' → logprob: -3.5495669841766357
    9. '_' → logprob: -3.7995669841766357
    10. ' =' → logprob: -4.174567222595215

Token 388: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2624660134315491
    2. '
' → logprob: -1.8874659538269043
    3. '\n' → logprob: -3.2624659538269043
    4. '

' → logprob: -4.887465953826904
    5. '```' → logprob: -4.887465953826904
    6. '\' → logprob: -5.012465953826904
    7. ')' → logprob: -6.012465953826904
    8. '(
' → logprob: -6.137465953826904
    9. '#' → logprob: -6.262465953826904
    10. 'dist' → logprob: -6.387465953826904

Token 389: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18657049536705017
    2. ')' → logprob: -2.686570405960083
    3. '```' → logprob: -3.061570405960083
    4. ')
' → logprob: -4.186570644378662
    5. '#' → logprob: -4.686570644378662
    6. '\' → logprob: -5.061570644378662
    7. '\n' → logprob: -5.061570644378662
    8. 'dist' → logprob: -5.686570644378662
    9. ',
' → logprob: -5.811570644378662
    10. 'import' → logprob: -6.061570644378662

Token 390: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25257548689842224
    2. '```' → logprob: -2.877575397491455
    3. ')' → logprob: -3.002575397491455
    4. '#' → logprob: -3.502575397491455
    5. 'dist' → logprob: -3.502575397491455
    6. ')
' → logprob: -4.377575397491455
    7. '#
' → logprob: -4.627575397491455
    8. '\n' → logprob: -4.877575397491455
    9. '
' → logprob: -5.377575397491455
    10. '\' → logprob: -5.627575397491455

Token 391: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2817278504371643
    2. 'dist' → logprob: -1.4067277908325195
    3. '#' → logprob: -8.28172779083252
    4. 'import' → logprob: -9.28172779083252
    5. 'def' → logprob: -9.40672779083252
    6. ' #' → logprob: -11.15672779083252
    7. ' def' → logprob: -11.21922779083252
    8. 'b' → logprob: -11.28172779083252
    9. '2' → logprob: -11.65672779083252
    10. ' import' → logprob: -11.78172779083252

Token 392: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002296801656484604
    2. '1' → logprob: -6.1272969245910645
    3. '[' → logprob: -9.252296447753906
    4. '```' → logprob: -12.252296447753906
    5. ' ' → logprob: -13.377296447753906
    6. 'a' → logprob: -13.627296447753906
    7. '3' → logprob: -13.877296447753906
    8. 'sys' → logprob: -13.877296447753906
    9. 'from' → logprob: -14.002296447753906
    10. 'dist' → logprob: -14.252296447753906

Token 393: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.14250314235687256
    2. '=' → logprob: -2.517503261566162
    3. ' =' → logprob: -3.142503261566162
    4. '[' → logprob: -4.892503261566162
    5. ']' → logprob: -8.267502784729004
    6. '=[' → logprob: -8.267502784729004
    7. ',' → logprob: -8.642502784729004
    8. ')' → logprob: -9.142502784729004
    9. '=x' → logprob: -9.142502784729004
    10. 'x' → logprob: -9.392502784729004

Token 394: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024299313372466713
    2. ']=' → logprob: -8.875243186950684
    3. ' ]' → logprob: -9.625243186950684
    4. '=' → logprob: -10.625243186950684
    5. '[' → logprob: -12.375243186950684
    6. ')' → logprob: -13.125243186950684
    7. '#' → logprob: -13.500243186950684
    8. '[]' → logprob: -14.250243186950684
    9. ' =' → logprob: -14.812743186950684
    10. ']
' → logprob: -14.937743186950684

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05151362717151642
    2. ' =' → logprob: -3.051513671875
    3. ']' → logprob: -6.051513671875
    4. '[' → logprob: -8.551513671875
    5. ']=' → logprob: -8.801513671875
    6. '=
' → logprob: -9.176513671875
    7. ')' → logprob: -10.176513671875
    8. '#' → logprob: -10.801513671875
    9. '[x' → logprob: -11.551513671875
    10. '=[' → logprob: -11.551513671875

Token 396: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.08917392045259476
    2. ' distance' → logprob: -2.4641740322113037
    3. 'dist' → logprob: -8.964174270629883
    4. 'import' → logprob: -10.339174270629883
    5. '#' → logprob: -10.589174270629883
    6. 'Distance' → logprob: -12.089174270629883
    7. 'd' → logprob: -12.214174270629883
    8. ' dist' → logprob: -12.651674270629883
    9. '"' → logprob: -12.776674270629883
    10. ' distância' → logprob: -12.839174270629883

Token 397: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05928964540362358
    2. 'from' → logprob: -3.6842896938323975
    3. ' from' → logprob: -3.9342896938323975
    4. 'de' → logprob: -4.684289455413818
    5. ' ' → logprob: -6.434289455413818
    6. ' à' → logprob: -8.059289932250977
    7. ' d' → logprob: -8.059289932250977
    8. '_de' → logprob: -8.434289932250977
    9. ' =' → logprob: -8.809289932250977
    10. ' ' → logprob: -8.809289932250977

Token 398: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8783241510391235
    2. '2' → logprob: -1.2533241510391235
    3. '1' → logprob: -1.3783241510391235
    4. 'x' → logprob: -3.378324031829834
    5. ' x' → logprob: -4.378324031829834
    6. 'b' → logprob: -9.128324508666992
    7. ' b' → logprob: -9.503324508666992
    8. 'a' → logprob: -10.878324508666992
    9. ' sys' → logprob: -10.878324508666992
    10. '```' → logprob: -11.253324508666992

Token 399: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.42796266078948975
    2. 'à' → logprob: -1.3029626607894897
    3. '[' → logprob: -3.4279627799987793
    4. 'from' → logprob: -4.302962779998779
    5. '=' → logprob: -4.552962779998779
    6. ' =' → logprob: -5.677962779998779
    7. ' ' → logprob: -6.052962779998779
    8. '[]' → logprob: -6.177962779998779
    9. 'to' → logprob: -6.177962779998779
    10. '-à' → logprob: -6.427962779998779

Token 400: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2816517651081085
    2. ' ' → logprob: -1.5316517353057861
    3. '2' → logprob: -3.531651735305786
    4. '0' → logprob: -11.781651496887207
    5. ' ' → logprob: -11.781651496887207
    6. '   ' → logprob: -12.781651496887207
    7. '  ' → logprob: -12.906651496887207
    8. '```' → logprob: -13.469151496887207
    9. '[' → logprob: -14.156651496887207
    10. ' sys' → logprob: -14.219151496887207

Token 401: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4305433928966522
    2. '1' → logprob: -1.0555434226989746
    3. ' ' → logprob: -6.305543422698975
    4. '```' → logprob: -12.055542945861816
    5. '  ' → logprob: -13.430542945861816
    6. 'a' → logprob: -13.680542945861816
    7. '"' → logprob: -14.055542945861816
    8. '   ' → logprob: -14.118042945861816
    9. 'b' → logprob: -14.430542945861816
    10. '`' → logprob: -14.743042945861816

Token 402: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03423291817307472
    2. '
' → logprob: -4.159233093261719
    3. '

' → logprob: -4.284233093261719
    4. '```' → logprob: -6.284233093261719
    5. ')

' → logprob: -7.659233093261719
    6. 'import' → logprob: -7.659233093261719
    7. '
' → logprob: -8.534233093261719
    8. '\' → logprob: -8.784233093261719
    9. ')' → logprob: -8.784233093261719
    10. '(
' → logprob: -9.034233093261719

Token 403: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.24387697875499725
    2. 'le' → logprob: -2.4938769340515137
    3. 'dist' → logprob: -3.6188769340515137
    4. 'l' → logprob: -3.6188769340515137
    5. ' original' → logprob: -3.9938769340515137
    6. 'original' → logprob: -4.118876934051514
    7. '2' → logprob: -4.743876934051514
    8. ' grap' → logprob: -4.743876934051514
    9. ' l' → logprob: -4.868876934051514
    10. ' le' → logprob: -5.118876934051514

Token 404: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.013646355830132961
    2. 'aph' → logprob: -4.763646125793457
    3. 'phe' → logprob: -6.263646125793457
    4. 'he' → logprob: -6.638646125793457
    5. 'ap' → logprob: -7.138646125793457
    6. 'ph' → logprob: -7.513646125793457
    7. '#' → logprob: -9.138646125793457
    8. 'ophe' → logprob: -9.388646125793457
    9. '`' → logprob: -10.138646125793457
    10. '```' → logprob: -10.763646125793457

Token 405: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.2500111162662506
    2. ' original' → logprob: -1.7500110864639282
    3. 'inverse' → logprob: -4.375010967254639
    4. '2' → logprob: -5.000010967254639
    5. ')' → logprob: -5.375010967254639
    6. '_original' → logprob: -5.500010967254639
    7. '```' → logprob: -5.500010967254639
    8. ']' → logprob: -5.750010967254639
    9. 'initial' → logprob: -5.750010967254639
    10. '#' → logprob: -6.875010967254639

Token 406: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028851578012108803
    2. '\n' → logprob: -4.903851509094238
    3. '(
' → logprob: -5.028851509094238
    4. '\' → logprob: -5.653851509094238
    5. '
' → logprob: -6.528851509094238
    6. '

' → logprob: -6.653851509094238
    7. '```' → logprob: -6.653851509094238
    8. ')' → logprob: -6.778851509094238
    9. 'import' → logprob: -6.903851509094238
    10. '()

' → logprob: -7.278851509094238

Token 407: 'calcul' (ID: 157994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03163128346204758
    2. ' dans' → logprob: -4.5316314697265625
    3. ')
' → logprob: -5.1566314697265625
    4. ' en' → logprob: -6.4066314697265625
    5. ' )' → logprob: -6.5316314697265625
    6. ' inverse' → logprob: -6.7816314697265625
    7. 'dans' → logprob: -6.9066314697265625
    8. 'inverse' → logprob: -6.9066314697265625
    9. ' sur' → logprob: -7.1566314697265625
    10. ')

' → logprob: -7.1566314697265625

Token 408: 'ée' (ID: 2894)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14784236252307892
    2. '=' → logprob: -2.7728424072265625
    3. ' =' → logprob: -3.2728424072265625
    4. 'e' → logprob: -4.0228424072265625
    5. 'é' → logprob: -5.1478424072265625
    6. ' )' → logprob: -5.1478424072265625
    7. 'ée' → logprob: -6.3978424072265625
    8. ']' → logprob: -7.2728424072265625
    9. 'd' → logprob: -7.6478424072265625
    10. '_' → logprob: -7.6478424072265625

Token 409: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.042701005935669
    2. 'sur' → logprob: -1.042701005935669
    3. ' sur' → logprob: -1.542701005935669
    4. 'inverse' → logprob: -4.29270076751709
    5. ' avec' → logprob: -4.66770076751709
    6. 'à' → logprob: -4.79270076751709
    7. 'en' → logprob: -4.79270076751709
    8. ' à' → logprob: -4.91770076751709
    9. 'avec' → logprob: -4.91770076751709
    10. 'dans' → logprob: -5.04270076751709

Token 410: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39822277426719666
    2. 'd' → logprob: -1.398222804069519
    3. ' dist' → logprob: -3.6482226848602295
    4. 'distance' → logprob: -4.273222923278809
    5. 'D' → logprob: -5.273222923278809
    6. 'inverse' → logprob: -5.273222923278809
    7. ' d' → logprob: -5.398222923278809
    8. 'une' → logprob: -5.773222923278809
    9. 'import' → logprob: -6.023222923278809
    10. ' celle' → logprob: -6.148222923278809

Token 411: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8887724876403809
    2. 'from' → logprob: -1.5137724876403809
    3. 'inverse' → logprob: -2.763772487640381
    4. ' depuis' → logprob: -3.013772487640381
    5. '[::-' → logprob: -3.513772487640381
    6. ' inverse' → logprob: -3.513772487640381
    7. '=' → logprob: -3.763772487640381
    8. '```' → logprob: -3.763772487640381
    9. 'dep' → logprob: -4.263772487640381
    10. '_from' → logprob: -4.263772487640381

Token 412: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18022596836090088
    2. ' ' → logprob: -1.8052259683609009
    3. ' sys' → logprob: -7.930225849151611
    4. ' deux' → logprob: -9.80522632598877
    5. 'sys' → logprob: -10.80522632598877
    6. 'de' → logprob: -11.18022632598877
    7. ' ' → logprob: -11.43022632598877
    8. ' la' → logprob: -12.55522632598877
    9. '```' → logprob: -12.80522632598877
    10. '  ' → logprob: -13.05522632598877

Token 413: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.482821431243792e-05
    2. ' ' → logprob: -9.50008487701416
    3. '```' → logprob: -12.62508487701416
    4. 'sys' → logprob: -13.50008487701416
    5. '#' → logprob: -14.00008487701416
    6. 'l' → logprob: -14.12508487701416
    7. 'de' → logprob: -14.25008487701416
    8. '1' → logprob: -14.25008487701416
    9. 'la' → logprob: -14.87508487701416
    10. ')' → logprob: -15.50008487701416

Token 414: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6369452476501465
    2. ']' → logprob: -1.3869452476501465
    3. '])' → logprob: -2.6369452476501465
    4. 'à' → logprob: -3.7619452476501465
    5. 'from' → logprob: -3.7619452476501465
    6. '][' → logprob: -3.8869452476501465
    7. ' à' → logprob: -4.0119452476501465
    8. 'dans' → logprob: -4.6369452476501465
    9. 'dep' → logprob: -5.0119452476501465
    10. '```' → logprob: -5.0119452476501465

Token 415: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09410247206687927
    2. 'x' → logprob: -2.719102382659912
    3. 'all' → logprob: -4.469102382659912
    4. '[' → logprob: -6.219102382659912
    5. '2' → logprob: -6.594102382659912
    6. ')' → logprob: -6.594102382659912
    7. '...' → logprob: -6.719102382659912
    8. 'b' → logprob: -6.969102382659912
    9. ' ' → logprob: -6.969102382659912
    10. '```' → logprob: -6.969102382659912

Token 416: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017509164288640022
    2. 'dans' → logprob: -4.8925089836120605
    3. ' dans' → logprob: -5.2675089836120605
    4. ' )' → logprob: -6.6425089836120605
    5. ')
' → logprob: -7.5175089836120605
    6. '])' → logprob: -7.6425089836120605
    7. '#' → logprob: -8.142509460449219
    8. ']' → logprob: -8.267509460449219
    9. '```' → logprob: -8.267509460449219
    10. ')]' → logprob: -8.392509460449219

Token 417: ' grap' (ID: 60955)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0352988243103027
    2. 'l' → logprob: -1.2852988243103027
    3. 'graph' → logprob: -1.7852988243103027
    4. 'la' → logprob: -2.7852988243103027
    5. 'gr' → logprob: -2.9102988243103027
    6. 'sys' → logprob: -4.410298824310303
    7. 'un' → logprob: -4.410298824310303
    8. '#' → logprob: -4.410298824310303
    9. 'g' → logprob: -4.785298824310303
    10. 'reverse' → logprob: -5.285298824310303

Token 418: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.18068966269493103
    2. 'he' → logprob: -1.9306896924972534
    3. 'phe' → logprob: -4.930689811706543
    4. 'h' → logprob: -5.055689811706543
    5. 'aph' → logprob: -6.180689811706543
    6. 'ap' → logprob: -6.805689811706543
    7. '#' → logprob: -6.805689811706543
    8. 'ph' → logprob: -8.055689811706543
    9. 'hap' → logprob: -8.055689811706543
    10. 'heme' → logprob: -8.305689811706543

Token 419: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.09238959103822708
    2. 'in' → logprob: -2.8423895835876465
    3. ' invers' → logprob: -4.2173895835876465
    4. ' inverse' → logprob: -4.5923895835876465
    5. 'original' → logprob: -5.8423895835876465
    6. ')' → logprob: -7.4673895835876465
    7. 'initial' → logprob: -7.5923895835876465
    8. '#' → logprob: -8.467390060424805
    9. 'reverse' → logprob: -8.717390060424805
    10. 'invert' → logprob: -8.842390060424805

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0054444666020572186
    2. ')
' → logprob: -5.380444526672363
    3. 'graph' → logprob: -8.130444526672363
    4. ')

' → logprob: -8.755444526672363
    5. ')
' → logprob: -9.755444526672363
    6. ')`' → logprob: -10.005444526672363
    7. '```' → logprob: -10.130444526672363
    8. ')#' → logprob: -10.255444526672363
    9. '))' → logprob: -10.630444526672363
    10. 'def' → logprob: -10.755444526672363

Token 421: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001772638875991106
    2. '
' → logprob: -6.876772403717041
    3. '```' → logprob: -8.1267728805542
    4. '(
' → logprob: -8.8767728805542
    5. 'import' → logprob: -9.3767728805542
    6. '\' → logprob: -9.5017728805542
    7. '

' → logprob: -10.2517728805542
    8. '\n' → logprob: -11.2517728805542
    9. ',
' → logprob: -11.3767728805542
    10. ')
' → logprob: -11.3767728805542

Token 422: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022713904036208987
    2. '
' → logprob: -9.000226974487305
    3. '```' → logprob: -9.750226974487305
    4. '\' → logprob: -10.375226974487305
    5. 'import' → logprob: -12.375226974487305
    6. '\n' → logprob: -13.000226974487305
    7. '

' → logprob: -13.500226974487305
    8. 'n' → logprob: -13.750226974487305
    9. ')' → logprob: -14.250226974487305
    10. 'de' → logprob: -14.500226974487305

Token 423: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.771655115589965e-05
    2. 'import' → logprob: -11.625018119812012
    3. '
' → logprob: -12.625018119812012
    4. 'from' → logprob: -13.000018119812012
    5. 'class' → logprob: -13.250018119812012
    6. '```' → logprob: -14.500018119812012
    7. 'n' → logprob: -15.375018119812012
    8. ' def' → logprob: -15.875018119812012
    9. 'de' → logprob: -16.125017166137695
    10. '\' → logprob: -16.125017166137695

Token 424: ' formule' (ID: 84316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2051399946212769
    2. ' code' → logprob: -1.5801399946212769
    3. ')' → logprob: -1.9551399946212769
    4. '#' → logprob: -2.3301401138305664
    5. '_' → logprob: -3.2051401138305664
    6. ' def' → logprob: -3.2051401138305664
    7. ' )' → logprob: -3.4551401138305664
    8. '
' → logprob: -3.5801401138305664
    9. '.' → logprob: -4.330140113830566
    10. ' is' → logprob: -4.705140113830566

Token 425: ' vient' (ID: 40370)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6406018733978271
    2. '.' → logprob: -1.8906018733978271
    3. ' est' → logprob: -2.640601873397827
    4. 's' → logprob: -3.140601873397827
    5. '#' → logprob: -3.140601873397827
    6. '<|end|>' → logprob: -3.140601873397827
    7. ' s' → logprob: -3.640601873397827
    8. ',' → logprob: -4.015602111816406
    9. '<|end|>' → logprob: -4.390602111816406
    10. ' complète' → logprob: -4.765602111816406

Token 426: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9027402400970459
    2. ' du' → logprob: -1.277740240097046
    3. ' de' → logprob: -1.402740240097046
    4. 'd' → logprob: -3.902740240097046
    5. 'from' → logprob: -4.652740478515625
    6. ' des' → logprob: -4.902740478515625
    7. 'du' → logprob: -4.902740478515625
    8. 'de' → logprob: -5.152740478515625
    9. ' donc' → logprob: -5.277740478515625
    10. ' naturellement' → logprob: -5.777740478515625

Token 427: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4732673764228821
    2. 'la' → logprob: -1.7232673168182373
    3. 'le' → logprob: -2.7232673168182373
    4. ' l' → logprob: -2.7232673168182373
    5. ' ce' → logprob: -3.8482673168182373
    6. ' la' → logprob: -3.8482673168182373
    7. 'ce' → logprob: -4.473267555236816
    8. ' le' → logprob: -5.598267555236816
    9. 'une' → logprob: -6.098267555236816
    10. 'd' → logprob: -6.598267555236816

Token 428: ' dé' (ID: 2393)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.922843098640442
    2. 'raison' → logprob: -2.2978429794311523
    3. ' logique' → logprob: -2.2978429794311523
    4. 'form' → logprob: -2.7978429794311523
    5. 'pro' → logprob: -3.0478429794311523
    6. ' nature' → logprob: -3.2978429794311523
    7. 'dé' → logprob: -3.5478429794311523
    8. ' distance' → logprob: -3.5478429794311523
    9. '#' → logprob: -3.6728429794311523
    10. ' formule' → logprob: -3.6728429794311523

Token 429: 'composition' (ID: 119135)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.34127140045166016
    2. 'f' → logprob: -1.7162714004516602
    3. 'scription' → logprob: -3.21627140045166
    4. 'r' → logprob: -3.96627140045166
    5. 'rive' → logprob: -4.09127140045166
    6. 'fi' → logprob: -4.59127140045166
    7. 'riv' → logprob: -4.71627140045166
    8. 'tail' → logprob: -5.21627140045166
    9. ' finition' → logprob: -6.46627140045166
    10. 'finite' → logprob: -6.84127140045166

Token 430: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5622734427452087
    2. ' d' → logprob: -1.6872735023498535
    3. ' du' → logprob: -3.4372735023498535
    4. 'd' → logprob: -3.5622735023498535
    5. ' of' → logprob: -3.5622735023498535
    6. 'de' → logprob: -3.6872735023498535
    7. ' suivante' → logprob: -3.6872735023498535
    8. ' en' → logprob: -4.1872735023498535
    9. ' des' → logprob: -4.1872735023498535
    10. ' #' → logprob: -4.6872735023498535

Token 431: ' chemins' (ID: 192063)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.6191388964653015
    2. ' chemins' → logprob: -0.8691388964653015
    3. 'plus' → logprob: -4.119138717651367
    4. ' distances' → logprob: -4.369138717651367
    5. ' graph' → logprob: -5.619138717651367
    6. ' chemin' → logprob: -5.869138717651367
    7. 'che' → logprob: -6.369138717651367
    8. ' shortest' → logprob: -7.244138717651367
    9. 'graph' → logprob: -7.244138717651367
    10. ' dist' → logprob: -7.369138717651367

Token 432: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17990745604038239
    2. '
' → logprob: -2.8049075603485107
    3. ':' → logprob: -3.3049075603485107
    4. '\n' → logprob: -3.5549075603485107
    5. '(
' → logprob: -4.679907321929932
    6. '```' → logprob: -5.054907321929932
    7. ':
' → logprob: -5.429907321929932
    8. '\' → logprob: -5.679907321929932
    9. ')' → logprob: -5.679907321929932
    10. '

' → logprob: -6.054907321929932

Token 433: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31088316440582275
    2. '```' → logprob: -2.435883045196533
    3. 'import' → logprob: -2.685883045196533
    4. '#' → logprob: -3.310883045196533
    5. 'dist' → logprob: -3.810883045196533
    6. '\' → logprob: -4.060883045196533
    7. '\n' → logprob: -4.810883045196533
    8. '``' → logprob: -5.185883045196533
    9. '`' → logprob: -6.060883045196533
    10. '`
' → logprob: -6.310883045196533

Token 434: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6171050071716309
    2. 'dist' → logprob: -1.4921050071716309
    3. 'def' → logprob: -1.9921050071716309
    4. ' dist' → logprob: -3.117105007171631
    5. 'import' → logprob: -3.867105007171631
    6. ' #' → logprob: -4.992105007171631
    7. 'from' → logprob: -4.992105007171631
    8. 'distance' → logprob: -5.242105007171631
    9. 'd' → logprob: -6.117105007171631
    10. 'for' → logprob: -6.492105007171631

Token 435: '1' (ID: 16)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.37620076537132263
    2. 'def' → logprob: -2.0012006759643555
    3. ' dist' → logprob: -2.7512006759643555
    4. '#' → logprob: -3.0012006759643555
    5. 'import' → logprob: -3.3762006759643555
    6. 'from' → logprob: -5.0012006759643555
    7. 'distance' → logprob: -5.3762006759643555
    8. '```' → logprob: -5.6262006759643555
    9. 'for' → logprob: -6.1262006759643555
    10. 'd' → logprob: -6.3762006759643555

Token 436: '->' (ID: 609)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.26429036259651184
    2. '->' → logprob: -1.5142903327941895
    3. ')' → logprob: -6.0142903327941895
    4. '-' → logprob: -6.2642903327941895
    5. '<|end|>' → logprob: -6.7642903327941895
    6. ' ' → logprob: -6.8892903327941895
    7. ' -' → logprob: -7.0142903327941895
    8. ' ->
' → logprob: -7.7642903327941895
    9. '<|end|>' → logprob: -7.7642903327941895
    10. ')->' → logprob: -7.8892903327941895

Token 437: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09924058616161346
    2. ' a' → logprob: -2.47424054145813
    3. 'b' → logprob: -5.349240779876709
    4. ' b' → logprob: -5.724240779876709
    5. 'x' → logprob: -6.724240779876709
    6. ' ' → logprob: -7.724240779876709
    7. '...' → logprob: -8.22424030303955
    8. ' x' → logprob: -8.34924030303955
    9. '1' → logprob: -11.34924030303955
    10. 'i' → logprob: -11.72424030303955

Token 438: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0009618389885872602
    2. '_' → logprob: -7.000961780548096
    3. ' _' → logprob: -10.750962257385254
    4. 'i' → logprob: -12.125962257385254
    5. '_
' → logprob: -12.125962257385254
    6. ''_' → logprob: -12.125962257385254
    7. '"_' → logprob: -13.375962257385254
    8. '#' → logprob: -13.500962257385254
    9. '_j' → logprob: -13.500962257385254
    10. '_u' → logprob: -13.875962257385254

Token 439: ' (' (ID: 350)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.69773268699646
    2. '->' → logprob: -1.07273268699646
    3. ' +' → logprob: -2.69773268699646
    4. '+' → logprob: -3.32273268699646
    5. ')' → logprob: -3.44773268699646
    6. '[' → logprob: -5.322732925415039
    7. ',' → logprob: -5.697732925415039
    8. '_' → logprob: -5.822732925415039
    9. '→' → logprob: -6.322732925415039
    10. '[i' → logprob: -7.072732925415039

Token 440: 'distance' (ID: 40614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11119014769792557
    2. ')+' → logprob: -3.1111900806427
    3. ' +' → logprob: -3.6111900806427
    4. '->' → logprob: -4.361190319061279
    5. '+' → logprob: -5.111190319061279
    6. ' )' → logprob: -5.486190319061279
    7. ')->' → logprob: -5.611190319061279
    8. ' ->' → logprob: -5.986190319061279
    9. '#' → logprob: -6.986190319061279
    10. '_i' → logprob: -7.361190319061279

Token 441: ' dist' (ID: 3601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2119152545928955
    2. ']' → logprob: -1.9619152545928955
    3. ')+' → logprob: -4.211915016174316
    4. '[' → logprob: -4.586915016174316
    5. ']+' → logprob: -5.586915016174316
    6. '[i' → logprob: -5.586915016174316
    7. '+' → logprob: -5.586915016174316
    8. '_' → logprob: -5.836915016174316
    9. '_i' → logprob: -6.211915016174316
    10. ' +' → logprob: -6.211915016174316

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001209518639370799
    2. '_i' → logprob: -7.251209735870361
    3. ')' → logprob: -8.376209259033203
    4. '_' → logprob: -8.876209259033203
    5. '[' → logprob: -9.751209259033203
    6. '[i' → logprob: -10.501209259033203
    7. ']' → logprob: -10.876209259033203
    8. 'i' → logprob: -12.126209259033203
    9. '])' → logprob: -12.126209259033203
    10. '
' → logprob: -12.876209259033203

Token 443: '[b' (ID: 40800)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37939971685409546
    2. ')' → logprob: -1.3793997764587402
    3. '])' → logprob: -3.3793997764587402
    4. ']+' → logprob: -3.8793997764587402
    5. ')+' → logprob: -5.75439977645874
    6. '[i' → logprob: -6.12939977645874
    7. '[' → logprob: -6.37939977645874
    8. '）' → logprob: -7.37939977645874
    9. '])+' → logprob: -8.129399299621582
    10. '[a' → logprob: -8.504399299621582

Token 444: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00014096579980105162
    2. ']_' → logprob: -9.375141143798828
    3. '_]' → logprob: -10.875141143798828
    4. '])' → logprob: -11.375141143798828
    5. ']' → logprob: -12.000141143798828
    6. 'i' → logprob: -12.375141143798828
    7. ''_' → logprob: -12.625141143798828
    8. '_' → logprob: -12.750141143798828
    9. ' _' → logprob: -13.000141143798828
    10. ')_' → logprob: -13.375141143798828

Token 445: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25836414098739624
    2. ']' → logprob: -1.508364200592041
    3. ']+' → logprob: -5.883364200592041
    4. '])
' → logprob: -6.508364200592041
    5. ')' → logprob: -7.008364200592041
    6. ']
' → logprob: -7.758364200592041
    7. '])+' → logprob: -7.758364200592041
    8. ']),' → logprob: -8.758363723754883
    9. ' ])' → logprob: -10.133363723754883
    10. ')]' → logprob: -10.258363723754883

Token 446: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3620794117450714
    2. '+' → logprob: -1.737079381942749
    3. ')' → logprob: -2.987079381942749
    4. '#' → logprob: -3.487079381942749
    5. '+
' → logprob: -3.737079381942749
    6. ' +
' → logprob: -4.362079620361328
    7. ',' → logprob: -6.862079620361328
    8. ' #' → logprob: -7.112079620361328
    9. '```' → logprob: -7.112079620361328
    10. ')+' → logprob: -7.362079620361328

Token 447: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.35226547718048096
    2. 'c' → logprob: -1.227265477180481
    3. '"' → logprob: -6.227265357971191
    4. ''' → logprob: -7.227265357971191
    5. ' ' → logprob: -8.477265357971191
    6. ')' → logprob: -8.602265357971191
    7. ' +' → logprob: -8.852265357971191
    8. ' ' → logprob: -9.227265357971191
    9. ' '' → logprob: -9.352265357971191
    10. '1' → logprob: -9.727265357971191

Token 448: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0020542622078210115
    2. '_' → logprob: -6.252054214477539
    3. 'i' → logprob: -9.877054214477539
    4. ' _' → logprob: -10.502054214477539
    5. '+' → logprob: -11.252054214477539
    6. '_o' → logprob: -11.877054214477539
    7. ' +' → logprob: -12.127054214477539
    8. ''_' → logprob: -13.002054214477539
    9. '\' → logprob: -13.377054214477539
    10. '```' → logprob: -13.502054214477539

Token 449: ' (' (ID: 350)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08078506588935852
    2. '+' → logprob: -2.580785036087036
    3. ' ->' → logprob: -7.080785274505615
    4. ')' → logprob: -7.580785274505615
    5. '->' → logprob: -8.455784797668457
    6. '#' → logprob: -9.205784797668457
    7. ')+' → logprob: -9.580784797668457
    8. '*' → logprob: -10.205784797668457
    9. ' ' → logprob: -10.580784797668457
    10. ' +
' → logprob: -10.955784797668457

Token 450: 'ar' (ID: 277)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3162294328212738
    2. ')' → logprob: -1.5662294626235962
    3. ' a' → logprob: -3.6912293434143066
    4. '1' → logprob: -4.691229343414307
    5. 'b' → logprob: -5.191229343414307
    6. 'cost' → logprob: -5.941229343414307
    7. ' )' → logprob: -6.066229343414307
    8. 'reverse' → logprob: -6.441229343414307
    9. 'distance' → logprob: -6.566229343414307
    10. ')a' → logprob: -6.941229343414307

Token 451: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.14018075168132782
    2. 'r' → logprob: -3.015180826187134
    3. 'ê' → logprob: -3.640180826187134
    4. 'c' → logprob: -4.015180587768555
    5. '^' → logprob: -4.640180587768555
    6. 'êt' → logprob: -5.515180587768555
    7. 't' → logprob: -5.640180587768555
    8. '�' → logprob: -5.890180587768555
    9. '>' → logprob: -6.015180587768555
    10. '**' → logprob: -6.015180587768555

Token 452: ' invers' (ID: 38721)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0711919367313385
    2. ' )' → logprob: -2.8211920261383057
    3. ')+' → logprob: -5.196191787719727
    4. ' +' → logprob: -7.196191787719727
    5. '_i' → logprob: -8.321191787719727
    6. ' au' → logprob: -8.446191787719727
    7. ' ->' → logprob: -8.446191787719727
    8. '#' → logprob: -8.946191787719727
    9. ')->' → logprob: -9.071191787719727
    10. '   ' → logprob: -9.196191787719727

Token 453: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.612487256526947
    2. 'e' → logprob: -1.1124873161315918
    3. 'é' → logprob: -2.487487316131592
    4. 'ed' → logprob: -4.362487316131592
    5. ')' → logprob: -4.987487316131592
    6. ']' → logprob: -5.362487316131592
    7. '#' → logprob: -5.737487316131592
    8. 'r' → logprob: -6.112487316131592
    9. 'eté' → logprob: -6.237487316131592
    10. 'er' → logprob: -6.487487316131592

Token 454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020046497229486704
    2. ' )' → logprob: -6.877004623413086
    3. '#' → logprob: -7.627004623413086
    4. ')+' → logprob: -8.627004623413086
    5. ')#' → logprob: -9.877004623413086
    6. ')
' → logprob: -10.002004623413086
    7. '))' → logprob: -10.252004623413086
    8. '+' → logprob: -11.127004623413086
    9. ' ' → logprob: -11.252004623413086
    10. ' +' → logprob: -11.252004623413086

Token 455: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20513340830802917
    2. '+' → logprob: -1.7051334381103516
    3. ')' → logprob: -6.080133438110352
    4. '#' → logprob: -7.205133438110352
    5. ' +
' → logprob: -9.080133438110352
    6. ')+' → logprob: -9.205133438110352
    7. '+b' → logprob: -9.830133438110352
    8. ' )' → logprob: -10.080133438110352
    9. ' ' → logprob: -10.080133438110352
    10. '```' → logprob: -10.205133438110352

Token 456: ' b' (ID: 287)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.32019129395484924
    2. 'dist' → logprob: -1.3201912641525269
    3. '"' → logprob: -5.070191383361816
    4. ' "' → logprob: -8.445191383361816
    5. ' ' → logprob: -8.945191383361816
    6. ''' → logprob: -9.445191383361816
    7. 'a' → logprob: -10.570191383361816
    8. '1' → logprob: -10.695191383361816
    9. ' a' → logprob: -10.820191383361816
    10. ' ' → logprob: -11.132691383361816

Token 457: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0010536498157307506
    2. 'i' → logprob: -8.251053810119629
    3. 'dist' → logprob: -8.501053810119629
    4. ''_' → logprob: -9.001053810119629
    5. '"_' → logprob: -9.626053810119629
    6. 'a' → logprob: -9.626053810119629
    7. '>' → logprob: -10.001053810119629
    8. 'f' → logprob: -10.126053810119629
    9. '->' → logprob: -10.501053810119629
    10. '->_' → logprob: -10.751053810119629

Token 458: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.20629969239234924
    2. ' ->' → logprob: -2.5812997817993164
    3. ')->' → logprob: -3.7062997817993164
    4. '[' → logprob: -4.081299781799316
    5. ')' → logprob: -4.206299781799316
    6. '->_' → logprob: -4.581299781799316
    7. '_i' → logprob: -4.956299781799316
    8. '->[' → logprob: -5.081299781799316
    9. ']' → logprob: -5.456299781799316
    10. '_' → logprob: -5.956299781799316

Token 459: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25194790959358215
    2. ' a' → logprob: -1.5019478797912598
    3. ' ' → logprob: -11.376948356628418
    4. ''a' → logprob: -13.626948356628418
    5. '	a' → logprob: -13.626948356628418
    6. ' dist' → logprob: -13.876948356628418
    7. 'dist' → logprob: -14.001948356628418
    8. '_a' → logprob: -14.126948356628418
    9. '"' → logprob: -14.876948356628418
    10. ' ' → logprob: -15.001948356628418

Token 460: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00016992862219922245
    2. 'i' → logprob: -9.62516975402832
    3. 'r' → logprob: -10.00016975402832
    4. '[i' → logprob: -11.50016975402832
    5. '_r' → logprob: -11.50016975402832
    6. '[' → logprob: -12.00016975402832
    7. '_' → logprob: -12.00016975402832
    8. '_j' → logprob: -12.37516975402832
    9. '```' → logprob: -12.50016975402832
    10. ']' → logprob: -13.00016975402832

Token 461: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035260528326034546
    2. ']' → logprob: -4.5352606773376465
    3. '_' → logprob: -4.6602606773376465
    4. '#' → logprob: -5.5352606773376465
    5. '[' → logprob: -6.5352606773376465
    6. ':' → logprob: -6.6602606773376465
    7. '_i' → logprob: -6.6602606773376465
    8. '
' → logprob: -6.7852606773376465
    9. 's' → logprob: -7.2852606773376465
    10. 'i' → logprob: -7.9102606773376465

Token 462: 'sens' (ID: 146566)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19792015850543976
    2. ' dist' → logprob: -2.072920083999634
    3. ')' → logprob: -3.697920083999634
    4. 'distance' → logprob: -3.822920083999634
    5. ' distance' → logprob: -6.197920322418213
    6. ' )' → logprob: -7.447920322418213
    7. '"' → logprob: -7.822920322418213
    8. '1' → logprob: -8.072919845581055
    9. '")' → logprob: -8.072919845581055
    10. '(dist' → logprob: -8.197919845581055

Token 463: ' invers' (ID: 38721)
  Prédit: ' inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.9059949517250061
    2. 'inverse' → logprob: -1.5309948921203613
    3. ' invers' → logprob: -1.6559948921203613
    4. 'in' → logprob: -1.7809948921203613
    5. '_inverse' → logprob: -5.155994892120361
    6. '_in' → logprob: -5.905994892120361
    7. ')' → logprob: -6.155994892120361
    8. ' ->' → logprob: -7.155994892120361
    9. '_' → logprob: -7.155994892120361
    10. 'inv' → logprob: -7.280994892120361

Token 464: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.31345874071121216
    2. 'e' → logprob: -1.3134586811065674
    3. 'ed' → logprob: -9.438458442687988
    4. 'ée' → logprob: -9.938458442687988
    5. ')' → logprob: -10.563458442687988
    6. '#' → logprob: -10.688458442687988
    7. 'se' → logprob: -12.813458442687988
    8. 'è' → logprob: -13.063458442687988
    9. '_' → logprob: -13.188458442687988
    10. '```' → logprob: -13.188458442687988

Token 465: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02413387969136238
    2. ')->' → logprob: -4.524133682250977
    3. '->' → logprob: -4.899133682250977
    4. '#' → logprob: -6.899133682250977
    5. ')
' → logprob: -7.024133682250977
    6. ' ->' → logprob: -7.649133682250977
    7. ')#' → logprob: -7.649133682250977
    8. ' )' → logprob: -7.774133682250977
    9. ')+' → logprob: -7.899133682250977
    10. '),' → logprob: -8.649133682250977

Token 466: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011602511629462242
    2. '#' → logprob: -6.011602401733398
    3. '+' → logprob: -6.261602401733398
    4. ' +' → logprob: -6.511602401733398
    5. '[i' → logprob: -7.011602401733398
    6. '[' → logprob: -7.136602401733398
    7. ']' → logprob: -7.261602401733398
    8. '<|end|>' → logprob: -7.761602401733398
    9. ' )' → logprob: -8.011602401733398
    10. '.' → logprob: -8.011602401733398

Token 467: ' a' (ID: 261)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.034116677939891815
    2. 'dist' → logprob: -3.409116744995117
    3. ' a' → logprob: -8.284116744995117
    4. 'a' → logprob: -9.034116744995117
    5. ' ' → logprob: -10.534116744995117
    6. ' ' → logprob: -10.659116744995117
    7. '1' → logprob: -10.909116744995117
    8. '"' → logprob: -12.409116744995117
    9. '	dist' → logprob: -12.534116744995117
    10. '_dist' → logprob: -12.659116744995117

Token 468: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.644463479053229e-05
    2. '_' → logprob: -11.000046730041504
    3. 'i' → logprob: -11.250046730041504
    4. ''_' → logprob: -12.125046730041504
    5. '_j' → logprob: -12.625046730041504
    6. '_
' → logprob: -13.375046730041504
    7. '
' → logprob: -14.125046730041504
    8. '_r' → logprob: -14.125046730041504
    9. ' _' → logprob: -14.125046730041504
    10. 'a' → logprob: -14.500046730041504

Token 469: '->' (ID: 609)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.7535112500190735
    2. '_' → logprob: -0.8785112500190735
    3. ']' → logprob: -3.5035111904144287
    4. '->' → logprob: -4.003511428833008
    5. ']_' → logprob: -4.003511428833008
    6. '->_' → logprob: -5.128511428833008
    7. '[' → logprob: -5.253511428833008
    8. '+' → logprob: -5.503511428833008
    9. ')' → logprob: -5.503511428833008
    10. '_j' → logprob: -5.628511428833008

Token 470: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2980177700519562
    2. ' ' → logprob: -1.4230177402496338
    3. ' b' → logprob: -4.673017978668213
    4. 'b' → logprob: -5.423017978668213
    5. '1' → logprob: -6.048017978668213
    6. ' dist' → logprob: -8.798017501831055
    7. '```' → logprob: -9.048017501831055
    8. ' x' → logprob: -9.798017501831055
    9. 'dist' → logprob: -9.798017501831055
    10. 'x' → logprob: -9.923017501831055

Token 471: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13201767206192017
    2. '
' → logprob: -2.2570176124572754
    3. '```' → logprob: -5.007017612457275
    4. '\n' → logprob: -5.882017612457275
    5. '(
' → logprob: -6.132017612457275
    6. ')' → logprob: -6.132017612457275
    7. '

' → logprob: -6.257017612457275
    8. 'import' → logprob: -7.507017612457275
    9. ':' → logprob: -7.507017612457275
    10. ' def' → logprob: -8.007018089294434

Token 472: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15330122411251068
    2. ' dist' → logprob: -2.153301239013672
    3. 'distance' → logprob: -3.778301239013672
    4. ' distance' → logprob: -6.028301239013672
    5. ')' → logprob: -7.403301239013672
    6. ' ' → logprob: -10.153301239013672
    7. '(dist' → logprob: -10.403301239013672
    8. ' distances' → logprob: -11.278301239013672
    9. ' distancia' → logprob: -11.278301239013672
    10. '	dist' → logprob: -11.653301239013672

Token 473: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21617500483989716
    2. '2' → logprob: -2.091175079345703
    3. '_i' → logprob: -3.091175079345703
    4. '_' → logprob: -4.966175079345703
    5. 'ance' → logprob: -4.966175079345703
    6. '[i' → logprob: -5.216175079345703
    7. 'i' → logprob: -5.591175079345703
    8. ')' → logprob: -7.341175079345703
    9. 'a' → logprob: -7.341175079345703
    10. '[' → logprob: -7.966175079345703

Token 474: '[a' (ID: 32035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26179808378219604
    2. '])' → logprob: -2.386798143386841
    3. ']' → logprob: -2.886798143386841
    4. '[' → logprob: -3.636798143386841
    5. '[a' → logprob: -3.636798143386841
    6. '[x' → logprob: -4.011797904968262
    7. '[i' → logprob: -5.386797904968262
    8. '[b' → logprob: -6.136797904968262
    9. '）' → logprob: -7.511797904968262
    10. 'a' → logprob: -7.636797904968262

Token 475: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00016885579680092633
    2. 'i' → logprob: -8.750168800354004
    3. '[i' → logprob: -12.250168800354004
    4. 'a' → logprob: -13.125168800354004
    5. ']' → logprob: -13.875168800354004
    6. '[a' → logprob: -14.500168800354004
    7. '])' → logprob: -15.000168800354004
    8. '_j' → logprob: -15.125168800354004
    9. '_' → logprob: -15.625168800354004
    10. ')' → logprob: -15.750168800354004

Token 476: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03829829394817352
    2. ']' → logprob: -3.5382983684539795
    3. ')' → logprob: -4.9132981300354
    4. '])
' → logprob: -8.038298606872559
    5. ']))' → logprob: -8.038298606872559
    6. ')])' → logprob: -9.163298606872559
    7. ']),' → logprob: -9.413298606872559
    8. '[' → logprob: -9.913298606872559
    9. ')]' → logprob: -10.038298606872559
    10. '])
' → logprob: -10.288298606872559

Token 477: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03461161255836487
    2. '
' → logprob: -4.159611701965332
    3. '

' → logprob: -5.284611701965332
    4. '\n' → logprob: -5.659611701965332
    5. 'import' → logprob: -5.784611701965332
    6. '\' → logprob: -5.909611701965332
    7. '(
' → logprob: -6.409611701965332
    8. '"\' → logprob: -7.784611701965332
    9. 'n' → logprob: -8.159611701965332
    10. '


' → logprob: -8.284611701965332

Token 478: ' mais' (ID: 2899)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017518535256385803
    2. '
' → logprob: -4.642518520355225
    3. '\' → logprob: -5.767518520355225
    4. '```' → logprob: -6.142518520355225
    5. '\n' → logprob: -7.017518520355225
    6. 'import' → logprob: -7.392518520355225
    7. '

' → logprob: -8.642518997192383
    8. '(
' → logprob: -8.767518997192383
    9. ' 
' → logprob: -9.017518997192383
    10. 'n' → logprob: -9.267518997192383

Token 479: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6626518964767456
    2. ' pas' → logprob: -2.287652015686035
    3. ' #' → logprob: -2.662652015686035
    4. ' n' → logprob: -3.287652015686035
    5. ' ' → logprob: -3.537652015686035
    6. ' ' → logprob: -3.537652015686035
    7. ' est' → logprob: -3.787652015686035
    8. ' a' → logprob: -4.287652015686035
    9. ' not' → logprob: -4.537652015686035
    10. '
' → logprob: -4.662652015686035

Token 480: ' expr' (ID: 30206)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.2966433763504028
    2. ' n' → logprob: -1.6716433763504028
    3. '#' → logprob: -2.5466432571411133
    4. ' continue' → logprob: -2.5466432571411133
    5. ' calc' → logprob: -2.6716432571411133
    6. ' ajoute' → logprob: -2.6716432571411133
    7. ' considère' → logprob: -2.9216432571411133
    8. 'n' → logprob: -3.1716432571411133
    9. ' doit' → logprob: -4.171643257141113
    10. ' a' → logprob: -4.296643257141113

Token 481: 'ime' (ID: 642)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4926120042800903
    2. 'nd' → logprob: -1.6176120042800903
    3. 'te' → logprob: -2.367611885070801
    4. 'cut' → logprob: -2.367611885070801
    5. 't' → logprob: -3.617611885070801
    6. 'd' → logprob: -3.617611885070801
    7. 'nds' → logprob: -3.617611885070801
    8. 'nte' → logprob: -3.742611885070801
    9. 'ss' → logprob: -3.867611885070801
    10. 'r' → logprob: -3.992611885070801

Token 482: ' b' (ID: 287)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.6050870418548584
    2. '_' → logprob: -1.7300870418548584
    3. 'la' → logprob: -2.4800870418548584
    4. 'b' → logprob: -2.9800870418548584
    5. ' dist' → logprob: -2.9800870418548584
    6. ' ' → logprob: -3.2300870418548584
    7. ' ' → logprob: -3.3550870418548584
    8. ' le' → logprob: -3.4800870418548584
    9. ' plutôt' → logprob: -3.4800870418548584
    10. 'le' → logprob: -3.6050870418548584

Token 483: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.035648733377456665
    2. '_' → logprob: -3.410648822784424
    3. 'y' → logprob: -7.285648822784424
    4. ''_' → logprob: -7.785648822784424
    5. ' _' → logprob: -9.160648345947266
    6. '[_' → logprob: -9.285648345947266
    7. ')_' → logprob: -9.285648345947266
    8. 'dist' → logprob: -9.285648345947266
    9. 'i' → logprob: -9.410648345947266
    10. 'a' → logprob: -9.660648345947266

Token 484: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5681453943252563
    2. '[' → logprob: -1.5681453943252563
    3. ' ->' → logprob: -2.443145275115967
    4. '_' → logprob: -3.318145275115967
    5. '->_' → logprob: -4.193145275115967
    6. ')' → logprob: -4.193145275115967
    7. '[b' → logprob: -4.193145275115967
    8. '->[' → logprob: -4.818145275115967
    9. ')->' → logprob: -4.943145275115967
    10. '[_' → logprob: -4.943145275115967

Token 485: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22580628097057343
    2. ' a' → logprob: -1.6008062362670898
    3. ' ' → logprob: -8.60080623626709
    4. '_a' → logprob: -9.97580623626709
    5. '_' → logprob: -10.10080623626709
    6. ' ' → logprob: -10.97580623626709
    7. '
' → logprob: -11.22580623626709
    8. ' _' → logprob: -11.22580623626709
    9. ''a' → logprob: -11.22580623626709
    10. '1' → logprob: -11.60080623626709

Token 486: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00044318195432424545
    2. '[i' → logprob: -8.875443458557129
    3. '_' → logprob: -9.375443458557129
    4. 'i' → logprob: -9.750443458557129
    5. '_[' → logprob: -10.250443458557129
    6. '[' → logprob: -10.875443458557129
    7. ']' → logprob: -11.625443458557129
    8. '_a' → logprob: -11.625443458557129
    9. ')' → logprob: -11.750443458557129
    10. '[_' → logprob: -11.875443458557129

Token 487: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.70332270860672
    2. 'def' → logprob: -1.3283226490020752
    3. '```' → logprob: -2.828322649002075
    4. '_i' → logprob: -3.453322649002075
    5. '\n' → logprob: -3.703322649002075
    6. ':' → logprob: -3.953322649002075
    7. ')
' → logprob: -4.328322887420654
    8. ']' → logprob: -4.703322887420654
    9. '_' → logprob: -4.703322887420654
    10. '=' → logprob: -4.953322887420654

Token 488: ' le' (ID: 505)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39624717831611633
    2. ' dist' → logprob: -1.396247148513794
    3. 'c' → logprob: -3.896247148513794
    4. 'a' → logprob: -4.271247386932373
    5. ' c' → logprob: -4.271247386932373
    6. 'l' → logprob: -4.771247386932373
    7. ' l' → logprob: -5.396247386932373
    8. 'b' → logprob: -5.646247386932373
    9. '+' → logprob: -5.896247386932373
    10. ' b' → logprob: -6.021247386932373

Token 489: ' chemin' (ID: 45035)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1407496929168701
    2. 'co' → logprob: -1.3907496929168701
    3. '+' → logprob: -2.01574969291687
    4. 'plus' → logprob: -2.76574969291687
    5. 'cout' → logprob: -3.14074969291687
    6. 'dist' → logprob: -3.64074969291687
    7. 'reverse' → logprob: -3.76574969291687
    8. 'po' → logprob: -4.015749931335449
    9. 'inverse' → logprob: -4.390749931335449
    10. 'ar' → logprob: -4.515749931335449

Token 490: ' invers' (ID: 38721)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5579720735549927
    2. '[' → logprob: -2.182971954345703
    3. '_' → logprob: -2.432971954345703
    4. ')' → logprob: -2.682971954345703
    5. '[
' → logprob: -2.682971954345703
    6. ' =' → logprob: -2.807971954345703
    7. 's' → logprob: -3.057971954345703
    8. ' ' → logprob: -3.182971954345703
    9. ' complet' → logprob: -3.307971954345703
    10. '#' → logprob: -3.807971954345703

Token 491: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.07232000678777695
    2. 'e' → logprob: -2.697319984436035
    3. 'ée' → logprob: -6.822319984436035
    4. 'se' → logprob: -7.072319984436035
    5. 'eté' → logprob: -9.322319984436035
    6. '#' → logprob: -9.572319984436035
    7. 'er' → logprob: -10.072319984436035
    8. 'ité' → logprob: -10.197319984436035
    9. 'és' → logprob: -10.822319984436035
    10. 'es' → logprob: -10.822319984436035

Token 492: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.058074694126844406
    2. '
' → logprob: -3.933074712753296
    3. 'import' → logprob: -4.308074474334717
    4. '\n' → logprob: -4.808074474334717
    5. '(
' → logprob: -5.183074474334717
    6. '\' → logprob: -5.308074474334717
    7. '

' → logprob: -6.308074474334717
    8. '


' → logprob: -7.683074474334717
    9. '(' → logprob: -8.058074951171875
    10. '"\' → logprob: -8.183074951171875

Token 493: ' b' (ID: 287)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3200947046279907
    2. ' ' → logprob: -1.6950947046279907
    3. ')' → logprob: -1.9450947046279907
    4. ' a' → logprob: -2.445094585418701
    5. ' b' → logprob: -2.820094585418701
    6. 'a' → logprob: -3.195094585418701
    7. 'b' → logprob: -3.195094585418701
    8. '```' → logprob: -3.570094585418701
    9. ' dist' → logprob: -4.070094585418701
    10. '\' → logprob: -4.195094585418701

Token 494: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.007331405766308308
    2. ''_' → logprob: -5.382331371307373
    3. '_' → logprob: -6.132331371307373
    4. '"_' → logprob: -8.382331848144531
    5. ')_' → logprob: -9.257331848144531
    6. 'i' → logprob: -10.007331848144531
    7. '}_' → logprob: -10.382331848144531
    8. ')' → logprob: -11.007331848144531
    9. '->_' → logprob: -11.007331848144531
    10. ' _' → logprob: -11.257331848144531

Token 495: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.4323270618915558
    2. ' ->' → logprob: -1.3073270320892334
    3. ')' → logprob: -3.5573270320892334
    4. ' +' → logprob: -3.5573270320892334
    5. '[::-' → logprob: -5.3073272705078125
    6. ')->' → logprob: -5.6823272705078125
    7. '[' → logprob: -5.6823272705078125
    8. ']' → logprob: -6.4323272705078125
    9. '.' → logprob: -6.4323272705078125
    10. '+' → logprob: -6.4323272705078125

Token 496: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3875320553779602
    2. ' a' → logprob: -1.1375319957733154
    3. ' ' → logprob: -8.012532234191895
    4. ' dist' → logprob: -9.887532234191895
    5. '"' → logprob: -10.012532234191895
    6. '1' → logprob: -10.387532234191895
    7. ''a' → logprob: -10.512532234191895
    8. '2' → logprob: -11.137532234191895
    9. 'dist' → logprob: -11.262532234191895
    10. ' b' → logprob: -11.262532234191895

Token 497: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0001649220648687333
    2. '[i' → logprob: -9.375164985656738
    3. '_x' → logprob: -11.000164985656738
    4. '_' → logprob: -11.125164985656738
    5. 'i' → logprob: -11.250164985656738
    6. '[' → logprob: -12.250164985656738
    7. '_j' → logprob: -12.625164985656738
    8. ']' → logprob: -12.750164985656738
    9. '_r' → logprob: -12.750164985656738
    10. '_[' → logprob: -12.750164985656738

Token 498: ' équ' (ID: 18899)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.20839573442935944
    2. 'def' → logprob: -2.0833957195281982
    3. '(' → logprob: -3.2083957195281982
    4. '
' → logprob: -4.458395957946777
    5. '\n' → logprob: -6.083395957946777
    6. ':
' → logprob: -6.208395957946777
    7. ':' → logprob: -6.583395957946777
    8. 's' → logprob: -6.708395957946777
    9. '\' → logprob: -7.208395957946777
    10. '(
' → logprob: -7.458395957946777

Token 499: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.2903802990913391
    2. '=' → logprob: -1.7903802394866943
    3. 'ival' → logprob: -2.7903802394866943
    4. 'ivalent' → logprob: -4.165380477905273
    5. 'al' → logprob: -5.665380477905273
    6. 'ale' → logprob: -6.665380477905273
    7. 'als' → logprob: -6.665380477905273
    8. 'v' → logprob: -7.290380477905273
    9. 'a' → logprob: -7.790380477905273
    10. 'i' → logprob: -8.290380477905273

Token 500: 'aut' (ID: 1828)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7185724973678589
    2. 'ale' → logprob: -0.9685724973678589
    3. 'a' → logprob: -2.5935726165771484
    4. 'alent' → logprob: -3.2185726165771484
    5. 'aux' → logprob: -5.468572616577148
    6. 'aut' → logprob: -5.593572616577148
    7. 'als' → logprob: -6.343572616577148
    8. 'à' → logprob: -6.718572616577148
    9. 'e' → logprob: -7.343572616577148
    10. 'alet' → logprob: -7.843572616577148

Token 501: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.099635049700737
    2. 'à' → logprob: -2.724635124206543
    3. ' to' → logprob: -4.099635124206543
    4. 'to' → logprob: -4.974635124206543
    5. '=' → logprob: -6.224635124206543
    6. ')' → logprob: -6.974635124206543
    7. ' au' → logprob: -7.099635124206543
    8. ' =' → logprob: -7.599635124206543
    9. ''à' → logprob: -7.974635124206543
    10. ',' → logprob: -8.474635124206543

Token 502: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1939319372177124
    2. 'dist' → logprob: -2.568932056427002
    3. ' a' → logprob: -2.693932056427002
    4. ' dist' → logprob: -3.568932056427002
    5. 'l' → logprob: -8.068931579589844
    6. '+' → logprob: -8.068931579589844
    7. ' ' → logprob: -8.068931579589844
    8. 'c' → logprob: -8.193931579589844
    9. 'distance' → logprob: -8.193931579589844
    10. 'b' → logprob: -8.318931579589844

Token 503: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00035846480750478804
    2. '_' → logprob: -8.375358581542969
    3. 'i' → logprob: -10.125358581542969
    4. '->_' → logprob: -10.375358581542969
    5. '_r' → logprob: -11.125358581542969
    6. 'r' → logprob: -11.750358581542969
    7. ''_' → logprob: -11.875358581542969
    8. '->' → logprob: -12.375358581542969
    9. '_j' → logprob: -13.000358581542969
    10. 'a' → logprob: -13.000358581542969

Token 504: ' ->' (ID: 2747)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7798606753349304
    2. ']' → logprob: -1.2798607349395752
    3. '_' → logprob: -2.654860734939575
    4. '+' → logprob: -3.404860734939575
    5. '->' → logprob: -3.654860734939575
    6. '][' → logprob: -4.029860496520996
    7. ' ->' → logprob: -4.154860496520996
    8. ' +' → logprob: -4.529860496520996
    9. ')' → logprob: -4.529860496520996
    10. ']_' → logprob: -4.529860496520996

Token 505: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.579392671585083
    2. 'b' → logprob: -0.829392671585083
    3. 'a' → logprob: -6.204392433166504
    4. ' a' → logprob: -6.954392433166504
    5. ' ' → logprob: -8.329392433166504
    6. 'dist' → logprob: -9.829392433166504
    7. '1' → logprob: -9.829392433166504
    8. ' dist' → logprob: -9.954392433166504
    9. '2' → logprob: -10.454392433166504
    10. '```' → logprob: -10.954392433166504

Token 506: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0006319015519693494
    2. '_' → logprob: -8.125632286071777
    3. 'i' → logprob: -8.875632286071777
    4. '_id' → logprob: -9.250632286071777
    5. '_a' → logprob: -10.625632286071777
    6. '_j' → logprob: -10.750632286071777
    7. '->' → logprob: -11.250632286071777
    8. '_q' → logprob: -11.875632286071777
    9. '_ai' → logprob: -12.375632286071777
    10. '_e' → logprob: -12.500632286071777

Token 507: ' invers' (ID: 38721)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4195977449417114
    2. '(
' → logprob: -2.419597625732422
    3. ')' → logprob: -2.669597625732422
    4. ':' → logprob: -3.044597625732422
    5. '
' → logprob: -3.169597625732422
    6. '(' → logprob: -4.044597625732422
    7. 'def' → logprob: -4.169597625732422
    8. '\' → logprob: -4.294597625732422
    9. '```' → logprob: -4.919597625732422
    10. '[' → logprob: -5.044597625732422

Token 508: 'é' (ID: 377)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5150008797645569
    2. 'é' → logprob: -1.015000820159912
    3. 'ée' → logprob: -3.890000820159912
    4. 'e' → logprob: -4.390000820159912
    5. 'éd' → logprob: -6.140000820159912
    6. 'se' → logprob: -6.265000820159912
    7. 'er' → logprob: -7.015000820159912
    8. '#' → logprob: -7.765000820159912
    9. 'eed' → logprob: -8.26500129699707
    10. 'ited' → logprob: -8.89000129699707

Token 509: ' donc' (ID: 14206)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020305480808019638
    2. '
' → logprob: -4.520305633544922
    3. '(
' → logprob: -5.145305633544922
    4. '\n' → logprob: -7.395305633544922
    5. ')' → logprob: -7.520305633544922
    6. ':
' → logprob: -7.645305633544922
    7. ':' → logprob: -7.895305633544922
    8. ')
' → logprob: -7.895305633544922
    9. '

' → logprob: -8.395305633544922
    10. '\' → logprob: -8.895305633544922

Token 510: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20465302467346191
    2. ':' → logprob: -3.329653024673462
    3. ' ' → logprob: -3.329653024673462
    4. '#' → logprob: -3.704653024673462
    5. ' a' → logprob: -4.079652786254883
    6. 'b' → logprob: -4.454652786254883
    7. 'a' → logprob: -4.579652786254883
    8. '<|end|>' → logprob: -4.704652786254883
    9. ' b' → logprob: -4.829652786254883
    10. ']' → logprob: -5.204652786254883

Token 511: ' calc' (ID: 25691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.001120924949646
    2. ' continue' → logprob: -1.126120924949646
    3. ']' → logprob: -3.1261210441589355
    4. ')' → logprob: -3.2511210441589355
    5. '#' → logprob: -3.2511210441589355
    6. '[' → logprob: -3.5011210441589355
    7. ' +' → logprob: -4.0011210441589355
    8. ' peux' → logprob: -4.1261210441589355
    9. 'continue' → logprob: -4.1261210441589355
    10. 'contin' → logprob: -4.7511210441589355

Token 512: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00041935223271138966
    2. 'ul' → logprob: -9.000419616699219
    3. 'ure' → logprob: -9.750419616699219
    4. 'cule' → logprob: -9.875419616699219
    5. 'l' → logprob: -10.625419616699219
    6. 'ulate' → logprob: -10.750419616699219
    7. '#' → logprob: -10.750419616699219
    8. 'uler' → logprob: -10.750419616699219
    9. 'le' → logprob: -11.000419616699219
    10. 'ulé' → logprob: -11.750419616699219

Token 513: '
' (ID: 198)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8059362173080444
    2. 'dist' → logprob: -0.9309362173080444
    3. '```' → logprob: -3.180936336517334
    4. '[' → logprob: -3.555936336517334
    5. ')' → logprob: -4.055936336517334
    6. '
' → logprob: -4.680936336517334
    7. '[
' → logprob: -4.930936336517334
    8. ']' → logprob: -5.180936336517334
    9. '[b' → logprob: -5.430936336517334
    10. 'b' → logprob: -5.555936336517334

Token 514: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.30895254015922546
    2. ' dist' → logprob: -2.433952569961548
    3. 'b' → logprob: -3.058952569961548
    4. '```' → logprob: -3.183952569961548
    5. 'a' → logprob: -4.308952331542969
    6. '[b' → logprob: -4.683952331542969
    7. '1' → logprob: -4.683952331542969
    8. '[a' → logprob: -4.808952331542969
    9. 'def' → logprob: -5.308952331542969
    10. '[' → logprob: -5.308952331542969

Token 515: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1077618598937988
    2. 'a' → logprob: -1.9827618598937988
    3. ' a' → logprob: -2.232761859893799
    4. ' dist' → logprob: -2.357761859893799
    5. ')' → logprob: -2.607761859893799
    6. 'b' → logprob: -2.857761859893799
    7. ' b' → logprob: -3.732761859893799
    8. 'def' → logprob: -3.732761859893799
    9. '[' → logprob: -3.857761859893799
    10. ' ' → logprob: -3.857761859893799

Token 516: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07932054996490479
    2. '1' → logprob: -2.7043204307556152
    3. '_' → logprob: -4.704320430755615
    4. ')' → logprob: -9.454320907592773
    5. '[' → logprob: -10.704320907592773
    6. ' ' → logprob: -10.954320907592773
    7. ']' → logprob: -11.079320907592773
    8. '__' → logprob: -11.454320907592773
    9. '```' → logprob: -11.454320907592773
    10. ' _' → logprob: -11.641820907592773

Token 517: '[a' (ID: 32035)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6345347166061401
    2. '(
' → logprob: -1.5095347166061401
    3. '
' → logprob: -2.8845348358154297
    4. '[
' → logprob: -2.8845348358154297
    5. '[' → logprob: -3.7595348358154297
    6. ')' → logprob: -3.7595348358154297
    7. ' =' → logprob: -4.13453483581543
    8. '=' → logprob: -4.63453483581543
    9. ']' → logprob: -4.63453483581543
    10. '\n' → logprob: -4.63453483581543

Token 518: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.843177233240567e-05
    2. 'i' → logprob: -11.250018119812012
    3. '[i' → logprob: -13.250018119812012
    4. ']' → logprob: -14.250018119812012
    5. 'a' → logprob: -14.250018119812012
    6. '[_' → logprob: -14.625018119812012
    7. '_a' → logprob: -14.875018119812012
    8. ']_' → logprob: -14.875018119812012
    9. '[' → logprob: -15.125018119812012
    10. ''_' → logprob: -16.375019073486328

Token 519: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05586850643157959
    2. '])' → logprob: -2.930868625640869
    3. ']+' → logprob: -7.930868625640869
    4. '[a' → logprob: -8.180868148803711
    5. ')' → logprob: -8.555868148803711
    6. '],' → logprob: -10.305868148803711
    7. ']
' → logprob: -10.555868148803711
    8. ']))' → logprob: -10.555868148803711
    9. ')]' → logprob: -11.305868148803711
    10. ' ]' → logprob: -11.930868148803711

Token 520: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0277787484228611
    2. '
' → logprob: -4.027778625488281
    3. '(
' → logprob: -5.402778625488281
    4. '\n' → logprob: -6.402778625488281
    5. '

' → logprob: -6.777778625488281
    6. '```' → logprob: -7.027778625488281
    7. '\' → logprob: -7.277778625488281
    8. 'import' → logprob: -8.777778625488281
    9. ':' → logprob: -9.652778625488281
    10. '(' → logprob: -9.652778625488281

Token 521: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.0250297784805298
    2. ' dist' → logprob: -1.2750297784805298
    3. 'dist' → logprob: -1.5250297784805298
    4. ' distance' → logprob: -3.0250296592712402
    5. ' sys' → logprob: -3.5250296592712402
    6. 'sys' → logprob: -3.6500296592712402
    7. '0' → logprob: -4.52502965927124
    8. 'input' → logprob: -4.90002965927124
    9. ' input' → logprob: -5.52502965927124
    10. ' la' → logprob: -6.15002965927124

Token 522: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1438140869140625
    2. 'from' → logprob: -1.2688140869140625
    3. '[' → logprob: -2.2688140869140625
    4. ' from' → logprob: -3.0188140869140625
    5. ')' → logprob: -3.1438140869140625
    6. ' à' → logprob: -3.5188140869140625
    7. ']' → logprob: -3.8938140869140625
    8. ' ' → logprob: -3.8938140869140625
    9. ' des' → logprob: -4.1438140869140625
    10. '<|end|>' → logprob: -4.1438140869140625

Token 523: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23334434628486633
    2. '2' → logprob: -1.858344316482544
    3. 'a' → logprob: -3.608344316482544
    4. ' a' → logprob: -3.733344316482544
    5. ' x' → logprob: -7.358344554901123
    6. 'x' → logprob: -8.233344078063965
    7. '1' → logprob: -8.983344078063965
    8. ' l' → logprob: -9.983344078063965
    9. '```' → logprob: -10.108344078063965
    10. ' la' → logprob: -10.858344078063965

Token 524: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00781221641227603
    2. '_' → logprob: -4.882812023162842
    3. '_[' → logprob: -9.0078125
    4. '[i' → logprob: -10.1328125
    5. '[' → logprob: -11.6328125
    6. ' _' → logprob: -11.7578125
    7. '_]' → logprob: -12.2578125
    8. ']' → logprob: -12.3828125
    9. '```' → logprob: -12.6328125
    10. '[_' → logprob: -12.6328125

Token 525: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0077242180705070496
    2. '[' → logprob: -6.007724285125732
    3. ' ]' → logprob: -7.382724285125732
    4. ']
' → logprob: -7.507724285125732
    5. '[i' → logprob: -7.507724285125732
    6. ']+' → logprob: -7.507724285125732
    7. '+' → logprob: -7.757724285125732
    8. '],' → logprob: -8.007723808288574
    9. '[
' → logprob: -8.257723808288574
    10. '```' → logprob: -8.257723808288574

Token 526: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47409698367118835
    2. ' ' → logprob: -0.9740970134735107
    3. ' ' → logprob: -11.72409725189209
    4. ' deux' → logprob: -13.09909725189209
    5. ' l' → logprob: -13.22409725189209
    6. '```' → logprob: -13.47409725189209
    7. '1' → logprob: -13.47409725189209
    8. 'l' → logprob: -13.72409725189209
    9. ' la' → logprob: -14.34909725189209
    10. '  ' → logprob: -14.34909725189209

Token 527: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005239683669060469
    2. ' ' → logprob: -5.255239486694336
    3. '```' → logprob: -13.380239486694336
    4. '1' → logprob: -13.630239486694336
    5. ' ' → logprob: -14.505239486694336
    6. 'de' → logprob: -14.755239486694336
    7. ' sys' → logprob: -15.255239486694336
    8. '
' → logprob: -15.755239486694336
    9. 'sys' → logprob: -15.942739486694336
    10. 'b' → logprob: -16.005239486694336

Token 528: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2503355145454407
    2. '

' → logprob: -2.125335454940796
    3. '
' → logprob: -2.375335454940796
    4. '(
' → logprob: -5.875335693359375
    5. '
' → logprob: -6.375335693359375
    6. '


' → logprob: -6.625335693359375
    7. '\' → logprob: -7.000335693359375
    8. '\n' → logprob: -7.250335693359375
    9. ':' → logprob: -8.250335693359375
    10. ' def' → logprob: -8.750335693359375

Token 529: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005200555082410574
    2. '
' → logprob: -5.380200386047363
    3. '\n' → logprob: -9.005200386047363
    4. '\' → logprob: -9.130200386047363
    5. '

' → logprob: -9.380200386047363
    6. '(
' → logprob: -9.505200386047363
    7. '```' → logprob: -9.505200386047363
    8. ':
' → logprob: -10.755200386047363
    9. ' def' → logprob: -11.005200386047363
    10. '
' → logprob: -11.130200386047363

Token 530: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008700100006535649
    2. '
' → logprob: -7.625870227813721
    3. '\' → logprob: -8.375869750976562
    4. 'n' → logprob: -9.125869750976562
    5. '\n' → logprob: -11.500869750976562
    6. '```' → logprob: -11.625869750976562
    7. ' 
' → logprob: -11.750869750976562
    8. '

' → logprob: -12.125869750976562
    9. '(n' → logprob: -13.000869750976562
    10. 'ndef' → logprob: -13.500869750976562

Token 531: ' Enfin' (ID: 85274)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.629921436891891e-05
    2. '
' → logprob: -10.62502670288086
    3. 'import' → logprob: -14.37502670288086
    4. 'from' → logprob: -14.50002670288086
    5. '\' → logprob: -14.87502670288086
    6. '```' → logprob: -15.75002670288086
    7. ' def' → logprob: -16.25002670288086
    8. ' 
' → logprob: -16.50002670288086
    9. 'ndef' → logprob: -17.12502670288086
    10. '

' → logprob: -17.12502670288086

Token 532: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007518012076616287
    2. '
' → logprob: -5.6325178146362305
    3. '#' → logprob: -6.5075178146362305
    4. ':' → logprob: -7.1325178146362305
    5. 'for' → logprob: -7.5075178146362305
    6. 'n' → logprob: -7.7575178146362305
    7. 'import' → logprob: -8.38251781463623
    8. '

' → logprob: -8.88251781463623
    9. ' def' → logprob: -10.00751781463623
    10. '```' → logprob: -10.00751781463623

Token 533: ' compare' (ID: 12221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5127220153808594
    2. 'def' → logprob: -1.1377220153808594
    3. '#' → logprob: -3.6377220153808594
    4. 'continue' → logprob: -4.012722015380859
    5. 'lit' → logprob: -4.762722015380859
    6. 'aj' → logprob: -5.387722015380859
    7. 'n' → logprob: -5.762722015380859
    8. 'l' → logprob: -6.137722015380859
    9. 'range' → logprob: -6.262722015380859
    10. ' ajoute' → logprob: -6.262722015380859

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0280327796936035
    2. 'for' → logprob: -1.2780327796936035
    3. 'def' → logprob: -1.4030327796936035
    4. '#' → logprob: -3.0280327796936035
    5. ':
' → logprob: -4.4030327796936035
    6. 'dist' → logprob: -4.7780327796936035
    7. 'import' → logprob: -4.9030327796936035
    8. '\n' → logprob: -4.9030327796936035
    9. '\' → logprob: -5.4030327796936035
    10. ',' → logprob: -5.5280327796936035

Token 535: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23941461741924286
    2. 'n' → logprob: -2.489414691925049
    3. '#' → logprob: -2.864414691925049
    4. 'dist' → logprob: -2.864414691925049
    5. ' for' → logprob: -5.114414691925049
    6. 'import' → logprob: -6.114414691925049
    7. 'N' → logprob: -6.239414691925049
    8. '#
' → logprob: -6.614414691925049
    9. '```' → logprob: -7.239414691925049
    10. 'distance' → logprob: -7.614414691925049

Token 536: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6510649919509888
    2. 'dist' → logprob: -1.4010649919509888
    3. 'max' → logprob: -1.7760649919509888
    4. 'min' → logprob: -4.026064872741699
    5. '#' → logprob: -4.651064872741699
    6. 'def' → logprob: -4.776064872741699
    7. ' for' → logprob: -5.401064872741699
    8. 'n' → logprob: -5.401064872741699
    9. 'distance' → logprob: -6.151064872741699
    10. 'import' → logprob: -6.151064872741699

Token 537: ' Si' (ID: 7832)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8630393743515015
    2. ' dist' → logprob: -0.9880393743515015
    3. 'min' → logprob: -2.113039493560791
    4. ' min' → logprob: -3.488039493560791
    5. 'max' → logprob: -3.613039493560791
    6. ' max' → logprob: -4.613039493560791
    7. ' la' → logprob: -5.113039493560791
    8. 'for' → logprob: -5.738039493560791
    9. 'distance' → logprob: -6.488039493560791
    10. ' for' → logprob: -6.488039493560791

Token 538: ' le' (ID: 505)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3169264793395996
    2. 'dist' → logprob: -1.4419264793395996
    3. ' la' → logprob: -4.4419264793396
    4. ' on' → logprob: -4.6919264793396
    5. 'la' → logprob: -5.8169264793396
    6. 'on' → logprob: -5.8169264793396
    7. ' le' → logprob: -6.1919264793396
    8. 'le' → logprob: -6.5669264793396
    9. 'len' → logprob: -6.6919264793396
    10. ' len' → logprob: -7.3169264793396

Token 539: ' nouveau' (ID: 23184)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0941424369812012
    2. ' code' → logprob: -2.094142436981201
    3. ' shortest' → logprob: -3.219142436981201
    4. ' ' → logprob: -3.344142436981201
    5. ' original' → logprob: -3.344142436981201
    6. '2' → logprob: -3.344142436981201
    7. ' dist' → logprob: -3.844142436981201
    8. 'def' → logprob: -3.844142436981201
    9. '1' → logprob: -3.969142436981201
    10. '#' → logprob: -4.094142436981201

Token 540: ' minimum' (ID: 11085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19656871259212494
    2. '_che' → logprob: -2.446568727493286
    3. '_
' → logprob: -3.071568727493286
    4. ' _' → logprob: -4.321568489074707
    5. 'che' → logprob: -4.696568489074707
    6. ' chemin' → logprob: -4.821568489074707
    7. '_distance' → logprob: -6.196568489074707
    8. '\' → logprob: -6.696568489074707
    9. '_path' → logprob: -7.071568489074707
    10. '_\' → logprob: -7.071568489074707

Token 541: ' <' (ID: 464)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01703675091266632
    2. ' est' → logprob: -5.5170369148254395
    3. 'est' → logprob: -5.7670369148254395
    4. '=' → logprob: -6.5170369148254395
    5. '[' → logprob: -6.8920369148254395
    6. 'dist' → logprob: -7.2670369148254395
    7. ' =' → logprob: -7.3920369148254395
    8. '_
' → logprob: -7.3920369148254395
    9. ' ==' → logprob: -7.8920369148254395
    10. ' _' → logprob: -8.017036437988281

Token 542: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.29518112540245056
    2. 'dist' → logprob: -1.420181155204773
    3. '=' → logprob: -4.2951812744140625
    4. ' =' → logprob: -9.545181274414062
    5. ' sys' → logprob: -10.045181274414062
    6. ' ' → logprob: -10.045181274414062
    7. 'len' → logprob: -11.170181274414062
    8. ' ' → logprob: -11.295181274414062
    9. 'sys' → logprob: -11.420181274414062
    10. '	dist' → logprob: -11.545181274414062

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03778083622455597
    2. '_' → logprob: -3.91278076171875
    3. '[' → logprob: -4.66278076171875
    4. '2' → logprob: -5.53778076171875
    5. ']' → logprob: -6.28778076171875
    6. 'i' → logprob: -7.41278076171875
    7. 'ion' → logprob: -9.03778076171875
    8. 'ance' → logprob: -9.28778076171875
    9. 'e' → logprob: -9.28778076171875
    10. '[i' → logprob: -9.28778076171875

Token 544: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00434739887714386
    2. '2' → logprob: -5.629347324371338
    3. ':' → logprob: -7.879347324371338
    4. ',' → logprob: -8.879347801208496
    5. '```' → logprob: -9.379347801208496
    6. '1' → logprob: -10.629347801208496
    7. '\[' → logprob: -10.879347801208496
    8. '.' → logprob: -10.879347801208496
    9. '_' → logprob: -11.004347801208496
    10. ']' → logprob: -11.504347801208496

Token 545: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018422940047457814
    2. ']' → logprob: -8.875184059143066
    3. ' ' → logprob: -10.625184059143066
    4. '[' → logprob: -11.750184059143066
    5. 'i' → logprob: -12.875184059143066
    6. '   ' → logprob: -13.500184059143066
    7. '```' → logprob: -13.500184059143066
    8. '1' → logprob: -14.000184059143066
    9. '

' → logprob: -14.062684059143066
    10. ' ]' → logprob: -14.125184059143066

Token 546: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6312319040298462
    2. '],' → logprob: -1.5062319040298462
    3. ']' → logprob: -1.8812319040298462
    4. ']:
' → logprob: -2.3812317848205566
    5. '[' → logprob: -7.506231784820557
    6. ']:
' → logprob: -8.506232261657715
    7. ':' → logprob: -8.756232261657715
    8. ']
' → logprob: -8.881232261657715
    9. ']:

' → logprob: -9.381232261657715
    10. ']):
' → logprob: -10.131232261657715

Token 547: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015539318323135376
    2. ':
' → logprob: -5.015539169311523
    3. ',' → logprob: -5.515539169311523
    4. '[' → logprob: -5.640539169311523
    5. ']:' → logprob: -8.390539169311523
    6. '=' → logprob: -8.515539169311523
    7. '):' → logprob: -8.890539169311523
    8. ']' → logprob: -8.890539169311523
    9. 'def' → logprob: -9.140539169311523
    10. '.' → logprob: -9.265539169311523

Token 548: ' "' (ID: 392)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.598635196685791
    2. 'print' → logprob: -1.223635196685791
    3. ' on' → logprob: -3.098635196685791
    4. 'on' → logprob: -4.098635196685791
    5. 'distance' → logprob: -4.098635196685791
    6. 'for' → logprob: -4.348635196685791
    7. ' print' → logprob: -4.723635196685791
    8. ':' → logprob: -4.973635196685791
    9. ',' → logprob: -4.973635196685791
    10. 'return' → logprob: -5.473635196685791

Token 549: 'H' (ID: 39)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1979936957359314
    2. '"' → logprob: -2.322993755340576
    3. 'im' → logprob: -3.572993755340576
    4. ' print' → logprob: -3.697993755340576
    5. 'On' → logprob: -5.947993755340576
    6. 'me' → logprob: -6.072993755340576
    7. 'possible' → logprob: -6.197993755340576
    8. 'on' → logprob: -6.447993755340576
    9. 'YES' → logprob: -6.822993755340576
    10. 'Me' → logprob: -6.885493755340576

Token 550: 'APPY' (ID: 124449)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5618199110031128
    2. 'A' → logprob: -1.5618199110031128
    3. 'APPY' → logprob: -2.6868200302124023
    4. 'EL' → logprob: -3.0618200302124023
    5. 'É' → logprob: -4.311820030212402
    6. 'I' → logprob: -4.561820030212402
    7. 'ere' → logprob: -4.936820030212402
    8. 'ERE' → logprob: -5.061820030212402
    9. 'appy' → logprob: -5.186820030212402
    10. 'O' → logprob: -5.186820030212402

Token 551: '"
' (ID: 1092)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6357395648956299
    2. '"' → logprob: -1.0107395648956299
    3. '"
' → logprob: -2.88573956489563
    4. '"\' → logprob: -3.01073956489563
    5. '")' → logprob: -7.760739326477051
    6. '"
' → logprob: -8.13573932647705
    7. '")
' → logprob: -8.38573932647705
    8. '_' → logprob: -9.88573932647705
    9. 'NESS' → logprob: -10.01073932647705
    10. '":
' → logprob: -10.01073932647705

Token 552: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9702754616737366
    2. '\n' → logprob: -1.0952754020690918
    3. ':
' → logprob: -1.7202754020690918
    4. 'def' → logprob: -3.970275402069092
    5. '
' → logprob: -4.095275402069092
    6. '"\' → logprob: -4.095275402069092
    7. '\' → logprob: -4.470275402069092
    8. '#' → logprob: -4.970275402069092
    9. '  
' → logprob: -5.595275402069092
    10. '"' → logprob: -5.595275402069092

Token 553: ' -' (ID: 533)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4834437072277069
    2. '#' → logprob: -1.6084437370300293
    3. '#
' → logprob: -2.4834437370300293
    4. '
' → logprob: -2.7334437370300293
    5. 'import' → logprob: -4.733443737030029
    6. 'for' → logprob: -5.233443737030029
    7. ' else' → logprob: -5.358443737030029
    8. '\n' → logprob: -5.483443737030029
    9. 'elif' → logprob: -5.483443737030029
    10. ':
' → logprob: -6.358443737030029

Token 554: ' Si' (ID: 7832)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7004154324531555
    2. 'else' → logprob: -0.9504154324531555
    3. 'elif' → logprob: -3.0754153728485107
    4. '#' → logprob: -3.8254153728485107
    5. ' else' → logprob: -4.07541561126709
    6. ' "' → logprob: -4.70041561126709
    7. 'print' → logprob: -5.32541561126709
    8. 'if' → logprob: -5.57541561126709
    9. 'EL' → logprob: -5.70041561126709
    10. '"S' → logprob: -5.82541561126709

Token 555: ' le' (ID: 505)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5080509185791016
    2. ' dist' → logprob: -1.0080509185791016
    3. ' ' → logprob: -4.508050918579102
    4. 'dist' → logprob: -5.008050918579102
    5. 'new' → logprob: -5.258050918579102
    6. ' nouveau' → logprob: -5.508050918579102
    7. ' ' → logprob: -7.008050918579102
    8. '"' → logprob: -7.008050918579102
    9. ' NEW' → logprob: -7.383050918579102
    10. ' minimum' → logprob: -7.633050918579102

Token 556: ' nouveau' (ID: 23184)
  Prédit: ' nouveau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nouveau' → logprob: -0.6834802031517029
    2. ' new' → logprob: -1.0584802627563477
    3. 'new' → logprob: -2.3084802627563477
    4. 'nou' → logprob: -4.433480262756348
    5. '
' → logprob: -5.058480262756348
    6. 'n' → logprob: -5.058480262756348
    7. ' minimum' → logprob: -5.183480262756348
    8. ' ' → logprob: -5.308480262756348
    9. 'minimum' → logprob: -5.808480262756348
    10. '#' → logprob: -6.433480262756348

Token 557: ' minimum' (ID: 11085)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3609612286090851
    2. '==' → logprob: -1.7359611988067627
    3. '=' → logprob: -3.3609611988067627
    4. '"' → logprob: -3.7359611988067627
    5. '_' → logprob: -3.8609611988067627
    6. ' =' → logprob: -3.9859611988067627
    7. ' !=' → logprob: -5.610961437225342
    8. 'NESS' → logprob: -5.610961437225342
    9. ' "' → logprob: -5.985961437225342
    10. '=="' → logprob: -5.985961437225342

Token 558: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.766823410987854
    2. '==' → logprob: -1.391823410987854
    3. ' >' → logprob: -1.766823410987854
    4. '>' → logprob: -2.7668232917785645
    5. ' <' → logprob: -4.1418232917785645
    6. '=' → logprob: -4.1418232917785645
    7. '_' → logprob: -5.0168232917785645
    8. '<' → logprob: -5.6418232917785645
    9. '[' → logprob: -5.6418232917785645
    10. ' =' → logprob: -6.1418232917785645

Token 559: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5083116888999939
    2. '"' → logprob: -1.3833117485046387
    3. 'dist' → logprob: -2.0083117485046387
    4. ' "' → logprob: -4.383311748504639
    5. '"H' → logprob: -8.00831127166748
    6. ' ' → logprob: -8.75831127166748
    7. 'inf' → logprob: -9.00831127166748
    8. ' inf' → logprob: -9.63331127166748
    9. ''' → logprob: -10.50831127166748
    10. ' ' → logprob: -10.50831127166748

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032044618274085224
    2. '[' → logprob: -8.125320434570312
    3. '```' → logprob: -11.500320434570312
    4. 'i' → logprob: -12.625320434570312
    5. '2' → logprob: -12.750320434570312
    6. 'in' → logprob: -14.000320434570312
    7. 'anc' → logprob: -14.312820434570312
    8. '(' → logprob: -14.375320434570312
    9. '``' → logprob: -14.625320434570312
    10. ' ' → logprob: -14.687820434570312

Token 561: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0339031834737398e-05
    2. '2' → logprob: -11.125020027160645
    3. '```' → logprob: -12.750020027160645
    4. '#' → logprob: -14.500020027160645
    5. '[
' → logprob: -14.750020027160645
    6. ' [' → logprob: -15.375020027160645
    7. '1' → logprob: -15.750020027160645
    8. '   ' → logprob: -15.875020027160645
    9. '\[' → logprob: -16.00002098083496
    10. 'import' → logprob: -16.18752098083496

Token 562: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008763710036873817
    2. '[' → logprob: -4.758763790130615
    3. ' ' → logprob: -9.383763313293457
    4. '```' → logprob: -11.133763313293457
    5. '1' → logprob: -11.258763313293457
    6. ']' → logprob: -12.008763313293457
    7. '   ' → logprob: -12.196263313293457
    8. '(' → logprob: -12.321263313293457
    9. 'i' → logprob: -13.258763313293457
    10. ''' → logprob: -13.321263313293457

Token 563: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009284593164920807
    2. ' :' → logprob: -5.634284496307373
    3. ')' → logprob: -6.509284496307373
    4. '=' → logprob: -6.884284496307373
    5. '):' → logprob: -7.259284496307373
    6. ':
' → logprob: -7.509284496307373
    7. ' else' → logprob: -7.759284496307373
    8. '==' → logprob: -7.884284496307373
    9. 'else' → logprob: -8.384284973144531
    10. ' ==' → logprob: -8.509284973144531

Token 564: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0362323634326458
    2. ' print' → logprob: -3.6612324714660645
    3. ' "' → logprob: -5.0362324714660645
    4. 'print' → logprob: -6.4112324714660645
    5. ' pass' → logprob: -8.036231994628906
    6. ' ' → logprob: -8.286231994628906
    7. '   ' → logprob: -8.411231994628906
    8. ''' → logprob: -8.536231994628906
    9. ' ' → logprob: -9.036231994628906
    10. ' 
' → logprob: -9.286231994628906

Token 565: 'SOS' (ID: 157130)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5826109647750854
    2. 'SOS' → logprob: -0.8326109647750854
    3. 'SOR' → logprob: -6.707611083984375
    4. 'UNCH' → logprob: -6.832611083984375
    5. 'NO' → logprob: -7.332611083984375
    6. 'OK' → logprob: -7.707611083984375
    7. 'SM' → logprob: -7.957611083984375
    8. 'SO' → logprob: -8.082611083984375
    9. 'SUR' → logprob: -8.082611083984375
    10. 'same' → logprob: -8.707611083984375

Token 566: 'O' (ID: 46)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04666599631309509
    2. '"\' → logprob: -3.671665906906128
    3. '"
' → logprob: -4.296666145324707
    4. '\n' → logprob: -5.171666145324707
    5. 'O' → logprob: -7.921666145324707
    6. '"
' → logprob: -8.046666145324707
    7. 'OK' → logprob: -10.546666145324707
    8. 'H' → logprob: -10.921666145324707
    9. '"`
' → logprob: -11.296666145324707
    10. '\' → logprob: -11.671666145324707

Token 567: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0075557478703558445
    2. '"
' → logprob: -5.507555961608887
    3. '"\' → logprob: -6.257555961608887
    4. '\n' → logprob: -6.632555961608887
    5. '"
' → logprob: -10.007555961608887
    6. '"`
' → logprob: -10.257555961608887
    7. 'O' → logprob: -10.507555961608887
    8. '```' → logprob: -10.507555961608887
    9. '"

' → logprob: -11.007555961608887
    10. '")' → logprob: -11.257555961608887

Token 568: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00011963568249484524
    2. '```' → logprob: -10.00011920928955
    3. 'import' → logprob: -10.87511920928955
    4. '<|end|>' → logprob: -11.00011920928955
    5. '#
' → logprob: -11.50011920928955
    6. '
' → logprob: -11.87511920928955
    7. '-' → logprob: -11.87511920928955
    8. ')' → logprob: -13.12511920928955
    9. '...' → logprob: -13.12511920928955
    10. '\' → logprob: -13.12511920928955

Token 569: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0018951985985040665
    2. '#
' → logprob: -6.376895427703857
    3. '\n' → logprob: -9.5018949508667
    4. 'else' → logprob: -10.3768949508667
    5. '-' → logprob: -10.6268949508667
    6. '\' → logprob: -11.5018949508667
    7. '
' → logprob: -11.7518949508667
    8. '```' → logprob: -11.7518949508667
    9. ' #' → logprob: -11.8768949508667
    10. 'for' → logprob: -12.5018949508667

Token 570: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.37343862652778625
    2. ' else' → logprob: -1.3734385967254639
    3. '#' → logprob: -2.873438596725464
    4. ' #' → logprob: -7.373438835144043
    5. '-' → logprob: -8.123438835144043
    6. 'elif' → logprob: -8.248438835144043
    7. ' ' → logprob: -8.373438835144043
    8. '"' → logprob: -8.998438835144043
    9. 'Else' → logprob: -8.998438835144043
    10. ' -' → logprob: -9.998438835144043

Token 571: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24471451342105865
    2. ' "' → logprob: -1.7447144985198975
    3. '"' → logprob: -3.4947144985198975
    4. ' :' → logprob: -4.869714736938477
    5. '"H' → logprob: -6.119714736938477
    6. '"S' → logprob: -6.494714736938477
    7. ':
' → logprob: -7.994714736938477
    8. ':"' → logprob: -9.744714736938477
    9. '   ' → logprob: -10.119714736938477
    10. ' ' → logprob: -10.244714736938477

Token 572: 'pas' (ID: 21122)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5631614923477173
    2. '"' → logprob: -0.9381614923477173
    3. '"H' → logprob: -3.4381613731384277
    4. '"S' → logprob: -5.813161373138428
    5. ':' → logprob: -6.438161373138428
    6. '"D' → logprob: -7.063161373138428
    7. ' ' → logprob: -7.438161373138428
    8. ' ' → logprob: -8.563161849975586
    9. ' :' → logprob: -8.938161849975586
    10. '"E' → logprob: -8.938161849975586

Token 573: ' possible' (ID: 4149)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.6540318727493286
    2. '_' → logprob: -1.4040318727493286
    3. ')' → logprob: -2.654031753540039
    4. ' ' → logprob: -3.404031753540039
    5. '_found' → logprob: -3.529031753540039
    6. ' possible' → logprob: -4.279031753540039
    7. '"' → logprob: -4.404031753540039
    8. ' trouvé' → logprob: -4.529031753540039
    9. ' de' → logprob: -5.029031753540039
    10. 'found' → logprob: -5.029031753540039

Token 574: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6649256944656372
    2. '):' → logprob: -1.0399256944656372
    3. ':' → logprob: -2.2899255752563477
    4. '):
' → logprob: -4.414925575256348
    5. '":' → logprob: -4.664925575256348
    6. '")' → logprob: -6.039925575256348
    7. '"' → logprob: -6.039925575256348
    8. ')
' → logprob: -6.289925575256348
    9. ':
' → logprob: -6.789925575256348
    10. '```' → logprob: -7.914925575256348

Token 575: ' rejoindre' (ID: 100426)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.1729402095079422
    2. ' ' → logprob: -3.547940254211426
    3. 'r' → logprob: -3.672940254211426
    4. ' rejoindre' → logprob: -4.297940254211426
    5. ' ' → logprob: -4.672940254211426
    6. 'tr' → logprob: -4.672940254211426
    7. ' atteindre' → logprob: -4.672940254211426
    8. 'pass' → logprob: -5.172940254211426
    9. 'ex' → logprob: -5.547940254211426
    10. 're' → logprob: -5.672940254211426

Token 576: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12042507529258728
    2. ' ' → logprob: -2.37042498588562
    3. ' la' → logprob: -4.870425224304199
    4. 'la' → logprob: -5.120425224304199
    5. '1' → logprob: -5.620425224304199
    6. 'le' → logprob: -7.120425224304199
    7. ')' → logprob: -7.870425224304199
    8. ' le' → logprob: -7.870425224304199
    9. 'l' → logprob: -8.2454252243042
    10. ' ' → logprob: -8.3704252243042

Token 577: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019164497032761574
    2. 'la' → logprob: -4.144164562225342
    3. ' ' → logprob: -6.269164562225342
    4. '1' → logprob: -7.394164562225342
    5. ' la' → logprob: -7.894164562225342
    6. 'le' → logprob: -9.269164085388184
    7. 'l' → logprob: -10.144164085388184
    8. 'les' → logprob: -10.394164085388184
    9. '   ' → logprob: -11.019164085388184
    10. ')' → logprob: -11.706664085388184

Token 578: ' ou' (ID: 2031)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5520938634872437
    2. ')' → logprob: -1.0520938634872437
    3. '):
' → logprob: -3.302093982696533
    4. '"):' → logprob: -4.052093982696533
    5. '")' → logprob: -4.677093982696533
    6. ')
' → logprob: -5.177093982696533
    7. '"):
' → logprob: -6.677093982696533
    8. '),' → logprob: -7.177093982696533
    9. ''):' → logprob: -7.177093982696533
    10. '":' → logprob: -7.427093982696533

Token 579: ' plus' (ID: 2932)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18982167541980743
    2. ' "' → logprob: -1.939821720123291
    3. '"H' → logprob: -4.439821720123291
    4. ' dist' → logprob: -4.814821720123291
    5. ')' → logprob: -6.564821720123291
    6. '">' → logprob: -6.689821720123291
    7. 'dist' → logprob: -6.814821720123291
    8. ' ' → logprob: -7.314821720123291
    9. '```' → logprob: -8.064821243286133
    10. ' '' → logprob: -8.189821243286133

Token 580: ' long' (ID: 1701)
  Prédit: ' long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.3166923522949219
    2. 'long' → logprob: -1.4416923522949219
    3. '```' → logprob: -4.941692352294922
    4. 'grand' → logprob: -5.191692352294922
    5. 'loin' → logprob: -5.441692352294922
    6. 'grave' → logprob: -5.816692352294922
    7. ' longtemps' → logprob: -5.941692352294922
    8. ' longue' → logprob: -5.941692352294922
    9. ' ' → logprob: -5.941692352294922
    10. '_' → logprob: -7.316692352294922

Token 581: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09328532963991165
    2. ')' → logprob: -2.593285322189331
    3. '"):' → logprob: -4.71828556060791
    4. '):
' → logprob: -6.59328556060791
    5. '")' → logprob: -6.71828556060791
    6. '":' → logprob: -6.96828556060791
    7. ' ):' → logprob: -7.09328556060791
    8. '"' → logprob: -8.71828556060791
    9. ' que' → logprob: -9.21828556060791
    10. '),' → logprob: -9.21828556060791

Token 582: ' "' (ID: 392)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7433652877807617
    2. '"' → logprob: -1.3683652877807617
    3. 'print' → logprob: -1.3683652877807617
    4. ' "' → logprob: -4.368365287780762
    5. '   ' → logprob: -6.743365287780762
    6. '"\' → logprob: -7.368365287780762
    7. '"S' → logprob: -8.868365287780762
    8. ' ' → logprob: -9.118365287780762
    9. '\' → logprob: -9.368365287780762
    10. ''' → logprob: -9.743365287780762

Token 583: 'S' (ID: 50)
  Prédit: 'SOS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SOS' → logprob: -0.5049537420272827
    2. 'ANG' → logprob: -2.0049538612365723
    3. 'UN' → logprob: -2.3799538612365723
    4. 'NG' → logprob: -2.7549538612365723
    5. 'IMP' → logprob: -3.3799538612365723
    6. '"' → logprob: -3.7549538612365723
    7. 'NO' → logprob: -4.129953861236572
    8. 'BAD' → logprob: -4.754953861236572
    9. 'SOR' → logprob: -5.754953861236572
    10. 'S' → logprob: -6.379953861236572

Token 584: 'AD' (ID: 2416)
  Prédit: 'OS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OS' → logprob: -0.5780588984489441
    2. 'AD' → logprob: -0.9530588984489441
    3. 'O' → logprob: -3.703058958053589
    4. 'OR' → logprob: -3.703058958053589
    5. 'T' → logprob: -7.70305871963501
    6. 'TR' → logprob: -7.70305871963501
    7. 'S' → logprob: -7.70305871963501
    8. 'OSA' → logprob: -7.95305871963501
    9. 'SS' → logprob: -8.203059196472168
    10. 'AFE' → logprob: -8.703059196472168

Token 585: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.027740953490138054
    2. '"
' → logprob: -3.902740955352783
    3. 'e' → logprob: -5.902740955352783
    4. ')"' → logprob: -5.902740955352783
    5. '\n' → logprob: -7.902740955352783
    6. ')"
' → logprob: -7.902740955352783
    7. '"
' → logprob: -8.777740478515625
    8. ')' → logprob: -9.027740478515625
    9. '"]' → logprob: -9.527740478515625
    10. ']"' → logprob: -9.652740478515625

Token 586: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002306792652234435
    2. '
' → logprob: -6.127306938171387
    3. '\' → logprob: -9.377306938171387
    4. '\n' → logprob: -11.252306938171387
    5. 'n' → logprob: -11.877306938171387
    6. 'import' → logprob: -12.502306938171387
    7. '

' → logprob: -12.502306938171387
    8. '```' → logprob: -12.502306938171387
    9. 'from' → logprob: -13.502306938171387
    10. 'class' → logprob: -13.877306938171387

Token 587: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6938971877098083
    2. ' d' → logprob: -0.6938971877098083
    3. 'def' → logprob: -7.943897247314453
    4. ' main' → logprob: -8.568897247314453
    5. 'main' → logprob: -9.943897247314453
    6. ' def' → logprob: -9.943897247314453
    7. ' solve' → logprob: -10.443897247314453
    8. 'solve' → logprob: -10.693897247314453
    9. ' input' → logprob: -11.693897247314453
    10. 'input' → logprob: -11.693897247314453

Token 588: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.039435312151908875
    2. 'ijk' → logprob: -3.289435386657715
    3. 'ij' → logprob: -7.039435386657715
    4. 'ef' → logprob: -7.789435386657715
    5. 'i' → logprob: -10.414435386657715
    6. 'ijks' → logprob: -10.539435386657715
    7. 'ist' → logprob: -11.539435386657715
    8. 'efs' → logprob: -11.539435386657715
    9. 'jik' → logprob: -11.914435386657715
    10. 'def' → logprob: -12.039435386657715

Token 589: '(start' (ID: 20008)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.06494847685098648
    2. '(' → logprob: -2.814948558807373
    3. '(G' → logprob: -7.064948558807373
    4. '(Graph' → logprob: -7.564948558807373
    5. '(start' → logprob: -7.689948558807373
    6. '(g' → logprob: -8.314948081970215
    7. '(node' → logprob: -8.564948081970215
    8. '(adj' → logprob: -8.814948081970215
    9. '(gr' → logprob: -9.189948081970215
    10. '(u' → logprob: -9.439948081970215

Token 590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029852005536668
    2. ' ,' → logprob: -8.625298500061035
    3. '(graph' → logprob: -9.250298500061035
    4. '):' → logprob: -11.750298500061035
    5. ',n' → logprob: -12.125298500061035
    6. '(n' → logprob: -13.000298500061035
    7. ',node' → logprob: -13.500298500061035
    8. ',
' → logprob: -14.250298500061035
    9. ',g' → logprob: -14.250298500061035
    10. ',G' → logprob: -14.375298500061035

Token 591: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.01364259235560894
    2. ' graph' → logprob: -4.51364278793335
    3. 'adj' → logprob: -6.01364278793335
    4. 'n' → logprob: -10.013642311096191
    5. 'edges' → logprob: -10.263642311096191
    6. 'g' → logprob: -10.513642311096191
    7. ' adj' → logprob: -11.638642311096191
    8. 'G' → logprob: -11.638642311096191
    9. '   ' → logprob: -12.263642311096191
    10. ' n' → logprob: -12.263642311096191

Token 592: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1148853525519371
    2. ',' → logprob: -2.2398853302001953
    3. '):
' → logprob: -6.239885330200195
    4. ')' → logprob: -10.114885330200195
    5. ':' → logprob: -10.364885330200195
    6. '):
' → logprob: -10.739885330200195
    7. ' ):' → logprob: -11.239885330200195
    8. ' ,' → logprob: -13.489885330200195
    9. ',n' → logprob: -14.739885330200195
    10. '   ' → logprob: -14.739885330200195

Token 593: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002291448414325714
    2. 'dist' → logprob: -6.502291679382324
    3. ' n' → logprob: -7.502291679382324
    4. 'N' → logprob: -8.377291679382324
    5. 'num' → logprob: -12.252291679382324
    6. 'distance' → logprob: -14.252291679382324
    7. ' dist' → logprob: -14.252291679382324
    8. 'nb' → logprob: -15.127291679382324
    9. 'node' → logprob: -15.502291679382324
    10. 'INF' → logprob: -15.877291679382324

Token 594: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014047624543309212
    2. '):
' → logprob: -4.389047622680664
    3. ')' → logprob: -6.514047622680664
    4. ',' → logprob: -10.139047622680664
    5. '):
' → logprob: -11.514047622680664
    6. ' ):' → logprob: -12.889047622680664
    7. ':' → logprob: -14.014047622680664
    8. '):

' → logprob: -14.264047622680664
    9. 'e' → logprob: -15.514047622680664
    10. ')：' → logprob: -15.639047622680664

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15027862787246704
    2. '	dist' → logprob: -2.5252785682678223
    3. 'dist' → logprob: -2.9002785682678223
    4. ' dist' → logprob: -5.775278568267822
    5. ' distances' → logprob: -7.525278568267822
    6. ' ' → logprob: -8.52527904510498
    7. ':' → logprob: -9.02527904510498
    8. '	d' → logprob: -9.15027904510498
    9. '   ' → logprob: -9.52527904510498
    10. '_dist' → logprob: -9.52527904510498

Token 596: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0006376196397468448
    2. 'import' → logprob: -7.500637531280518
    3. ' dist' → logprob: -10.000638008117676
    4. '   ' → logprob: -10.250638008117676
    5. 'INF' → logprob: -12.750638008117676
    6. 'distance' → logprob: -14.750638008117676
    7. 'inf' → logprob: -15.750638008117676
    8. '	dist' → logprob: -15.750638008117676
    9. ' import' → logprob: -16.50063705444336
    10. '_dist' → logprob: -17.12563705444336

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133901357650757
    2. '=' → logprob: -1.3133901357650757
    3. '   ' → logprob: -10.063389778137207
    4. '=[' → logprob: -10.313389778137207
    5. '[' → logprob: -10.563389778137207
    6. 's' → logprob: -12.313389778137207
    7. '=[]' → logprob: -12.563389778137207
    8. '[start' → logprob: -12.813389778137207
    9. ' ' → logprob: -12.813389778137207
    10. ',' → logprob: -12.938389778137207

Token 598: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001664588926360011
    2. ' [' → logprob: -7.126664638519287
    3. '[int' → logprob: -7.626664638519287
    4. '[len' → logprob: -10.001664161682129
    5. '[node' → logprob: -10.376664161682129
    6. '[class' → logprob: -10.501664161682129
    7. '[n' → logprob: -10.501664161682129
    8. '[start' → logprob: -10.626664161682129
    9. '[src' → logprob: -10.876664161682129
    10. '[name' → logprob: -11.126664161682129

Token 599: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009126556105911732
    2. '10' → logprob: -7.000912666320801
    3. 'int' → logprob: -14.2509126663208
    4. ' float' → logprob: -14.5009126663208
    5. '(float' → logprob: -18.250911712646484
    6. 'sys' → logprob: -18.625911712646484
    7. '1' → logprob: -19.625911712646484
    8. '浮' → logprob: -21.375911712646484
    9. '	float' → logprob: -21.625911712646484
    10. 'flo' → logprob: -22.125911712646484

Token 600: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03009374625980854
    2. ''in' → logprob: -3.5300936698913574
    3. ''' → logprob: -8.280094146728516
    4. ''ex' → logprob: -10.655094146728516
    5. ''s' → logprob: -12.030094146728516
    6. ''ins' → logprob: -12.155094146728516
    7. ''inc' → logprob: -12.155094146728516
    8. ''il' → logprob: -12.280094146728516
    9. ''int' → logprob: -12.780094146728516
    10. ''op' → logprob: -12.780094146728516

Token 601: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.512236498361744e-07
    2. 'in' → logprob: -15.500000953674316
    3. ''in' → logprob: -15.625000953674316
    4. ''' → logprob: -16.375
    5. 'INF' → logprob: -18.125
    6. 'info' → logprob: -18.25
    7. ' inf' → logprob: -18.625
    8. 'Inf' → logprob: -19.375
    9. '_inf' → logprob: -19.625
    10. 'max' → logprob: -19.875

Token 602: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.004197594244033098
    2. ')]' → logprob: -5.754197597503662
    3. ']' → logprob: -7.129197597503662
    4. '')' → logprob: -8.629197120666504
    5. ')' → logprob: -10.629197120666504
    6. '")]' → logprob: -12.004197120666504
    7. '']' → logprob: -12.504197120666504
    8. ' '' → logprob: -13.379197120666504
    9. ''' → logprob: -13.754197120666504
    10. '('' → logprob: -13.879197120666504

Token 603: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0039343754760921
    2. ']*' → logprob: -6.003934383392334
    3. ' for' → logprob: -6.878934383392334
    4. 'for' → logprob: -8.003933906555176
    5. ']*(' → logprob: -9.503933906555176
    6. ' ]' → logprob: -11.628933906555176
    7. '']' → logprob: -13.003933906555176
    8. '()]' → logprob: -13.128933906555176
    9. '   ' → logprob: -13.503933906555176
    10. ')' → logprob: -13.628933906555176

Token 604: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004137529991567135
    2. 'n' → logprob: -5.5041375160217285
    3. ' (' → logprob: -10.129137992858887
    4. '(' → logprob: -10.879137992858887
    5. ' n' → logprob: -15.879137992858887
    6. '   ' → logprob: -17.25413703918457
    7. '((' → logprob: -17.87913703918457
    8. '
' → logprob: -17.87913703918457
    9. '(
' → logprob: -18.00413703918457
    10. '(N' → logprob: -18.00413703918457

Token 605: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005532711511477828
    2. '(n' → logprob: -7.500553131103516
    3. ' n' → logprob: -15.500553131103516
    4. ' (' → logprob: -16.500553131103516
    5. '   ' → logprob: -17.500553131103516
    6. '	n' → logprob: -19.125553131103516
    7. ')n' → logprob: -19.125553131103516
    8. '_n' → logprob: -19.875553131103516
    9. '{' → logprob: -20.250553131103516
    10. '
' → logprob: -20.500553131103516

Token 606: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47452086210250854
    2. '+' → logprob: -0.9745208621025085
    3. ' +' → logprob: -8.849520683288574
    4. ')
' → logprob: -8.974520683288574
    5. '+)' → logprob: -9.849520683288574
    6. ' )' → logprob: -11.099520683288574
    7. ']' → logprob: -11.099520683288574
    8. '<|end|>' → logprob: -11.099520683288574
    9. '+
' → logprob: -11.349520683288574
    10. ')+' → logprob: -11.474520683288574

Token 607: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.000009536743164
    4. '2' → logprob: -18.500009536743164
    5. '```' → logprob: -18.875009536743164
    6. '  ' → logprob: -19.125009536743164
    7. '
' → logprob: -19.375009536743164
    8. '0' → logprob: -19.875009536743164
    9. '    ' → logprob: -20.250009536743164
    10. ')' → logprob: -20.250009536743164

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -19.75
    4. '0' → logprob: -20.25
    5. '2' → logprob: -20.625
    6. '１' → logprob: -21.0
    7. '
' → logprob: -21.125
    8. '```' → logprob: -21.75
    9. '  ' → logprob: -22.125
    10. '10' → logprob: -22.125

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012701898231171072
    2. ')
' → logprob: -9.000126838684082
    3. '   ' → logprob: -12.875126838684082
    4. ')
' → logprob: -15.000126838684082
    5. ' )' → logprob: -15.000126838684082
    6. ']' → logprob: -16.7501277923584
    7. 'dist' → logprob: -16.7501277923584
    8. '))' → logprob: -17.6251277923584
    9. '),' → logprob: -17.8751277923584
    10. ')`' → logprob: -18.0001277923584

Token 610: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04200375825166702
    2. ' dist' → logprob: -3.292003870010376
    3. '   ' → logprob: -5.542003631591797
    4. '	dist' → logprob: -10.292003631591797
    5. '_dist' → logprob: -13.792003631591797
    6. '    
' → logprob: -15.792003631591797
    7. 'Dist' → logprob: -15.917003631591797
    8. '.dist' → logprob: -16.042003631591797
    9. '(dist' → logprob: -16.042003631591797
    10. 'def' → logprob: -16.167003631591797

Token 611: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -5.200166469876422e-06
    2. '   ' → logprob: -12.500004768371582
    3. ' dist' → logprob: -13.500004768371582
    4. '	dist' → logprob: -18.2500057220459
    5. '```' → logprob: -19.3750057220459
    6. '_dist' → logprob: -20.3750057220459
    7. 'import' → logprob: -21.7500057220459
    8. 'heap' → logprob: -21.8750057220459
    9. 'Dist' → logprob: -22.3750057220459
    10. '
' → logprob: -23.0000057220459

Token 612: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00014036978245712817
    2. '[' → logprob: -8.875140190124512
    3. 'start' → logprob: -15.250140190124512
    4. '[end' → logprob: -16.000141143798828
    5. '=start' → logprob: -16.625141143798828
    6. '```' → logprob: -17.125141143798828
    7. ' [' → logprob: -17.750141143798828
    8. '=' → logprob: -17.750141143798828
    9. '   ' → logprob: -18.125141143798828
    10. '[src' → logprob: -18.750141143798828

Token 613: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.824579784530215e-05
    2. ' ]' → logprob: -9.8750581741333
    3. ']=' → logprob: -12.2500581741333
    4. ')' → logprob: -13.8750581741333
    5. '   ' → logprob: -14.3750581741333
    6. '[' → logprob: -15.3750581741333
    7. '=' → logprob: -15.8750581741333
    8. ']
' → logprob: -18.000059127807617
    9. ')]' → logprob: -18.375059127807617
    10. '[start' → logprob: -18.875059127807617

Token 614: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078639671206474
    2. ' =' → logprob: -5.5040788650512695
    3. '[' → logprob: -15.87907886505127
    4. ']' → logprob: -17.254077911376953
    5. ']=' → logprob: -17.629077911376953
    6. '   ' → logprob: -18.004077911376953
    7. '＝' → logprob: -18.004077911376953
    8. '=start' → logprob: -18.129077911376953
    9. '=}' → logprob: -18.379077911376953
    10. '=
' → logprob: -18.504077911376953

Token 615: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '۰' → logprob: -23.375
    4. '   ' → logprob: -23.625
    5. '00' → logprob: -23.75
    6. '000' → logprob: -24.625
    7. '
' → logprob: -25.25
    8. '０' → logprob: -25.5
    9. '٠' → logprob: -25.875
    10. '```' → logprob: -26.375

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '۰' → logprob: -21.375
    3. ' ' → logprob: -22.5
    4. '０' → logprob: -23.0
    5. '٠' → logprob: -23.875
    6. '```' → logprob: -23.875
    7. '000' → logprob: -24.0
    8. '00' → logprob: -24.125
    9. '০' → logprob: -24.875
    10. '०' → logprob: -25.5

Token 617: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019512299913913012
    2. 'heap' → logprob: -7.001951217651367
    3. '
' → logprob: -7.251951217651367
    4. ' heap' → logprob: -8.876951217651367
    5. ',' → logprob: -9.626951217651367
    6. 'pq' → logprob: -10.376951217651367
    7. '    
' → logprob: -10.751951217651367
    8. 'import' → logprob: -11.626951217651367
    9. '' → logprob: -11.626951217651367
    10. '	' → logprob: -11.876951217651367

Token 618: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008242090232670307
    2. 'heap' → logprob: -5.008242130279541
    3. ' heap' → logprob: -6.883242130279541
    4. 'pq' → logprob: -8.883241653442383
    5. '	' → logprob: -9.383241653442383
    6. ',' → logprob: -9.633241653442383
    7. '
' → logprob: -10.133241653442383
    8. '	queue' → logprob: -10.258241653442383
    9. '_heap' → logprob: -11.008241653442383
    10. 'import' → logprob: -11.383241653442383

Token 619: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.2121656835079193
    2. 'pq' → logprob: -1.9621657133102417
    3. 'queue' → logprob: -3.462165594100952
    4. 'hq' → logprob: -3.962165594100952
    5. '   ' → logprob: -8.962165832519531
    6. 'q' → logprob: -9.462165832519531
    7. 'h' → logprob: -11.587165832519531
    8. ' heap' → logprob: -11.837165832519531
    9. 'que' → logprob: -12.212165832519531
    10. '```' → logprob: -12.962165832519531

Token 620: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.4087024927139282
    2. 'q' → logprob: -1.1587024927139282
    3. ' =' → logprob: -4.658702373504639
    4. '=' → logprob: -4.908702373504639
    5. '=[]
' → logprob: -5.408702373504639
    6. '   ' → logprob: -9.408702850341797
    7. '=[]
' → logprob: -9.533702850341797
    8. '```' → logprob: -11.158702850341797
    9. ')' → logprob: -11.533702850341797
    10. '=[' → logprob: -11.658702850341797

Token 621: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.941850526549388e-06
    2. ' [(' → logprob: -12.000007629394531
    3. '[]' → logprob: -13.250007629394531
    4. '[' → logprob: -17.25000762939453
    5. '[]
' → logprob: -18.25000762939453
    6. '[((' → logprob: -19.37500762939453
    7. '([(' → logprob: -20.50000762939453
    8. '[]

' → logprob: -22.50000762939453
    9. '[[' → logprob: -23.12500762939453
    10. '[
' → logprob: -24.00000762939453

Token 622: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '(' → logprob: -17.0
    4. 'start' → logprob: -19.875
    5. 'dist' → logprob: -19.875
    6. '   ' → logprob: -20.25
    7. '۰' → logprob: -22.0
    8. ')' → logprob: -22.125
    9. '(start' → logprob: -22.125
    10. '(dist' → logprob: -22.25

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017451542662456632
    2. ',start' → logprob: -6.376745223999023
    3. 'start' → logprob: -10.126745223999023
    4. ' ,' → logprob: -13.501745223999023
    5. '[start' → logprob: -14.376745223999023
    6. '0' → logprob: -15.501745223999023
    7. ',)' → logprob: -15.751745223999023
    8. ')' → logprob: -15.751745223999023
    9. '```' → logprob: -15.751745223999023
    10. ')]' → logprob: -16.251745223999023

Token 624: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.7697225252486533e-06
    2. ' start' → logprob: -12.500003814697266
    3. '[start' → logprob: -21.125003814697266
    4. '(start' → logprob: -22.750003814697266
    5. '	start' → logprob: -23.500003814697266
    6. ' ' → logprob: -23.500003814697266
    7. '=start' → logprob: -23.625003814697266
    8. '   ' → logprob: -23.750003814697266
    9. '0' → logprob: -24.250003814697266
    10. ':start' → logprob: -24.625003814697266

Token 625: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001333455671556294
    2. ')' → logprob: -6.626333236694336
    3. '),' → logprob: -12.876333236694336
    4. ')]
' → logprob: -13.376333236694336
    5. ')])' → logprob: -13.626333236694336
    6. ']' → logprob: -14.126333236694336
    7. ' )' → logprob: -14.376333236694336
    8. '))' → logprob: -14.876333236694336
    9. '   ' → logprob: -15.626333236694336
    10. ')]
' → logprob: -16.126333236694336

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02308730036020279
    2. ' while' → logprob: -4.523087501525879
    3. 'while' → logprob: -4.773087501525879
    4. '	while' → logprob: -6.273087501525879
    5. ')' → logprob: -6.523087501525879
    6. ',' → logprob: -9.273087501525879
    7. '```' → logprob: -10.398087501525879
    8. '    
' → logprob: -11.523087501525879
    9. '.' → logprob: -12.023087501525879
    10. 'While' → logprob: -12.523087501525879

Token 627: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002454726491123438
    2. ' while' → logprob: -6.50245475769043
    3. '   ' → logprob: -7.00245475769043
    4. '	while' → logprob: -10.12745475769043
    5. '```' → logprob: -13.12745475769043
    6. 'While' → logprob: -15.62745475769043
    7. '
' → logprob: -15.75245475769043
    8. 'heap' → logprob: -17.12745475769043
    9. '    
' → logprob: -18.00245475769043
    10. ')' → logprob: -18.25245475769043

Token 628: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00012368128227535635
    2. ' heap' → logprob: -9.000123977661133
    3. '(heap' → logprob: -15.500123977661133
    4. 'len' → logprob: -17.250123977661133
    5. 'he' → logprob: -19.375123977661133
    6. '.heap' → logprob: -19.500123977661133
    7. '   ' → logprob: -20.500123977661133
    8. '
' → logprob: -20.625123977661133
    9. '```' → logprob: -20.875123977661133
    10. 'h' → logprob: -21.375123977661133

Token 629: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2533479332923889
    2. ':
' → logprob: -1.5033478736877441
    3. '):
' → logprob: -7.128347873687744
    4. '):' → logprob: -7.878347873687744
    5. '.pop' → logprob: -10.128348350524902
    6. ',' → logprob: -10.378348350524902
    7. ']:' → logprob: -10.378348350524902
    8. '[' → logprob: -10.628348350524902
    9. ']:
' → logprob: -11.003348350524902
    10. 'pop' → logprob: -11.378348350524902

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005110303405672312
    2. ',' → logprob: -5.880110263824463
    3. '   ' → logprob: -6.255110263824463
    4. 'cost' → logprob: -9.005110740661621
    5. 'dist' → logprob: -9.380110740661621
    6. ' ,' → logprob: -9.505110740661621
    7. 'd' → logprob: -10.880110740661621
    8. '	' → logprob: -11.380110740661621
    9. '```' → logprob: -11.505110740661621
    10. '(cost' → logprob: -11.755110740661621

Token 631: ' cur' (ID: 4396)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5114763975143433
    2. 'd' → logprob: -1.0114763975143433
    3. 'dist' → logprob: -3.761476516723633
    4. '   ' → logprob: -4.636476516723633
    5. 'cur' (adapté à ' cur') → logprob: -6.136476516723633
    6. 'curr' → logprob: -7.386476516723633
    7. 'c' → logprob: -8.386476516723633
    8. '(cost' → logprob: -8.386476516723633
    9. 'current' → logprob: -8.636476516723633
    10. ' cost' → logprob: -9.511476516723633

Token 632: '_d' (ID: 1565)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.2954753041267395
    2. '_cost' → logprob: -1.6704752445220947
    3. 'dist' → logprob: -2.7954752445220947
    4. 'cost' → logprob: -5.795475482940674
    5. '_distance' → logprob: -5.920475482940674
    6. 'Dist' → logprob: -7.545475482940674
    7. '_d' → logprob: -8.920475006103516
    8. 'd' → logprob: -10.170475006103516
    9. 'distance' → logprob: -10.295475006103516
    10. 'Cost' → logprob: -10.795475006103516

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03316054493188858
    2. 'ist' → logprob: -3.658160448074341
    3. 'istance' → logprob: -5.03316068649292
    4. ' ,' → logprob: -8.408160209655762
    5. ',_' → logprob: -10.908160209655762
    6. 'ista' → logprob: -11.408160209655762
    7. '_,' → logprob: -11.408160209655762
    8. 'is' → logprob: -11.533160209655762
    9. ',d' → logprob: -11.908160209655762
    10. '   ' → logprob: -12.283160209655762

Token 634: ' u' (ID: 337)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1025848463177681
    2. 'u' → logprob: -2.3525848388671875
    3. 'node' → logprob: -6.1025848388671875
    4. ' cur' → logprob: -9.227584838867188
    5. 'v' → logprob: -10.602584838867188
    6. ' u' → logprob: -11.352584838867188
    7. ' node' → logprob: -12.852584838867188
    8. 'Cur' → logprob: -15.727584838867188
    9. '(cur' → logprob: -16.102584838867188
    10. 'curr' → logprob: -16.102584838867188

Token 635: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023248739540576935
    2. ' =' → logprob: -3.7732486724853516
    3. ')' → logprob: -13.398248672485352
    4. ')=' → logprob: -13.523248672485352
    5. '=u' → logprob: -15.023248672485352
    6. ']=' → logprob: -17.52324867248535
    7. '   ' → logprob: -17.64824867248535
    8. ' ' → logprob: -18.14824867248535
    9. ']' → logprob: -18.39824867248535
    10. '＝' → logprob: -18.64824867248535

Token 636: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -3.214019307051785e-05
    2. ' heap' → logprob: -10.875032424926758
    3. 'he' → logprob: -11.250032424926758
    4. '   ' → logprob: -16.000032424926758
    5. '(heap' → logprob: -17.250032424926758
    6. '
' → logprob: -18.625032424926758
    7. '.heap' → logprob: -18.625032424926758
    8. '0' → logprob: -19.375032424926758
    9. ' he' → logprob: -19.625032424926758
    10. 'h' → logprob: -19.875032424926758

Token 637: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01321270689368248
    2. '[' → logprob: -4.76321268081665
    3. 'pop' → logprob: -6.26321268081665
    4. '.pop' → logprob: -6.76321268081665
    5. '=' → logprob: -7.51321268081665
    6. '   ' → logprob: -7.63821268081665
    7. ',' → logprob: -8.638213157653809
    8. ' =' → logprob: -9.513213157653809
    9. '       ' → logprob: -9.638213157653809
    10. '
' → logprob: -9.763213157653809

Token 638: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.008894755505025387
    2. 'q' → logprob: -4.758894920349121
    3. '.' → logprob: -8.383894920349121
    4. '.pop' → logprob: -10.508894920349121
    5. 'app' → logprob: -11.758894920349121
    6. 'he' → logprob: -12.008894920349121
    7. ' he' → logprob: -12.633894920349121
    8. '.q' → logprob: -13.133894920349121
    9. '.heap' → logprob: -13.758894920349121
    10. ' .' → logprob: -14.008894920349121

Token 639: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.686778503237292e-05
    2. 'pp' → logprob: -9.250097274780273
    3. 'ap' → logprob: -14.375097274780273
    4. 'pop' → logprob: -16.750097274780273
    5. '[' → logprob: -18.500097274780273
    6. '```' → logprob: -19.000097274780273
    7. 'p' → logprob: -19.125097274780273
    8. 'appen' → logprob: -19.250097274780273
    9. 'appe' → logprob: -19.750097274780273
    10. '(app' → logprob: -20.125097274780273

Token 640: 'op' (ID: 467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.48336368799209595
    2. 'op' → logprob: -1.4833636283874512
    3. 'pp' → logprob: -1.9833636283874512
    4. 'ush' → logprob: -4.233363628387451
    5. 'p' → logprob: -6.233363628387451
    6. 'ap' → logprob: -6.233363628387451
    7. 'pop' → logprob: -8.23336410522461
    8. 'ort' → logprob: -10.35836410522461
    9. 'q' → logprob: -10.48336410522461
    10. 't' → logprob: -11.60836410522461

Token 641: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -8.7689099018462e-05
    2. 'heap' → logprob: -9.37508773803711
    3. '(' → logprob: -13.00008773803711
    4. '```' → logprob: -16.00008773803711
    5. '(
' → logprob: -16.50008773803711
    6. ')' → logprob: -16.75008773803711
    7. '(queue' → logprob: -17.25008773803711
    8. ' heap' → logprob: -17.25008773803711
    9. '(graph' → logprob: -17.50008773803711
    10. '(h' → logprob: -17.62508773803711

Token 642: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011122338473796844
    2. ')' → logprob: -4.511122226715088
    3. ')
' → logprob: -9.761122703552246
    4. '       ' → logprob: -11.636122703552246
    5. '   ' → logprob: -12.011122703552246
    6. ' )
' → logprob: -13.886122703552246
    7. '[' → logprob: -14.886122703552246
    8. ')`
' → logprob: -15.011122703552246
    9. ')

' → logprob: -16.13612174987793
    10. '))
' → logprob: -16.51112174987793

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005041812546551228
    2. '<|end|>' → logprob: -8.375504493713379
    3. 'if' → logprob: -9.375504493713379
    4. '        
' → logprob: -9.375504493713379
    5. ' if' → logprob: -9.625504493713379
    6. '   ' → logprob: -11.875504493713379
    7. ')' → logprob: -12.250504493713379
    8. ',' → logprob: -12.500504493713379
    9. '#' → logprob: -12.750504493713379
    10. '        ' → logprob: -12.875504493713379

Token 644: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0032561463303864002
    2. '       ' → logprob: -6.253256320953369
    3. ' if' → logprob: -6.628256320953369
    4. '        
' → logprob: -13.503255844116211
    5. 'for' → logprob: -14.128255844116211
    6. '
' → logprob: -14.253255844116211
    7. ';if' → logprob: -14.378255844116211
    8. '	if' → logprob: -15.378255844116211
    9. '```' → logprob: -15.378255844116211
    10. '   ' → logprob: -15.753255844116211

Token 645: ' dist' (ID: 3601)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.17392964661121368
    2. 'dist' → logprob: -1.9239296913146973
    3. ' cur' → logprob: -4.548929691314697
    4. ' dist' → logprob: -5.798929691314697
    5. '	cur' → logprob: -13.798929214477539
    6. '	dist' → logprob: -14.298929214477539
    7. '(cur' → logprob: -14.548929214477539
    8. '(dist' → logprob: -15.423929214477539
    9. 'curr' → logprob: -16.17392921447754
    10. '[cur' → logprob: -16.42392921447754

Token 646: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00091217877343297
    2. '[cur' → logprob: -7.000912189483643
    3. 'u' → logprob: -14.250911712646484
    4. 'cur' → logprob: -17.625911712646484
    5. '[' → logprob: -18.000911712646484
    6. '<u' → logprob: -18.625911712646484
    7. '```' → logprob: -19.750911712646484
    8. '_u' → logprob: -20.125911712646484
    9. '[user' → logprob: -20.125911712646484
    10. '	u' → logprob: -20.375911712646484

Token 647: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.004606008529663
    2. ' <' → logprob: -1.004606008529663
    3. '<u' → logprob: -1.504606008529663
    4. '[u' → logprob: -3.129606008529663
    5. '[' → logprob: -7.379606246948242
    6. ']' → logprob: -8.004606246948242
    7. '[cur' → logprob: -8.629606246948242
    8. ']<' → logprob: -9.129606246948242
    9. ' ' → logprob: -9.254606246948242
    10. ')<' → logprob: -9.879606246948242

Token 648: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1545373797416687
    2. '<u' → logprob: -2.1545374393463135
    3. ' <' → logprob: -3.6545374393463135
    4. '[u' → logprob: -7.404537200927734
    5. '<v' → logprob: -8.279537200927734
    6. '<c' → logprob: -9.154537200927734
    7. '<int' → logprob: -9.404537200927734
    8. '[' → logprob: -9.654537200927734
    9. '<n' → logprob: -10.404537200927734
    10. '<w' → logprob: -10.654537200927734

Token 649: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.306760805164231e-05
    2. ' cur' → logprob: -11.25001335144043
    3. '	cur' → logprob: -19.12501335144043
    4. '(cur' → logprob: -20.50001335144043
    5. '_cur' → logprob: -20.62501335144043
    6. '[cur' → logprob: -21.12501335144043
    7. '   ' → logprob: -21.75001335144043
    8. '-cur' → logprob: -21.87501335144043
    9. '.cur' → logprob: -22.75001335144043
    10. ' ' → logprob: -22.75001335144043

Token 650: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.9361264946837764e-07
    2. 'd' → logprob: -16.375
    3. '_' → logprob: -19.125
    4. '_dist' → logprob: -21.0
    5. '   ' → logprob: -21.125
    6. '_u' → logprob: -21.375
    7. '```' → logprob: -21.375
    8. 'cur' → logprob: -21.5
    9. '_
' → logprob: -21.5625
    10. '
' → logprob: -21.6875

Token 651: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25881773233413696
    2. '       ' → logprob: -1.6338176727294922
    3. ':
' → logprob: -3.508817672729492
    4. '           ' → logprob: -6.008817672729492
    5. 'continue' → logprob: -8.758817672729492
    6. '   ' → logprob: -8.883817672729492
    7. ' continue' → logprob: -9.508817672729492
    8. '	continue' → logprob: -10.133817672729492
    9. '	' → logprob: -10.633817672729492
    10. '               ' → logprob: -11.758817672729492

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15808719396591187
    2. '       ' → logprob: -2.1580872535705566
    3. 'continue' → logprob: -4.033087253570557
    4. ' continue' → logprob: -4.408087253570557
    5. ':' → logprob: -7.408087253570557
    6. '	continue' → logprob: -9.533086776733398
    7. '		' → logprob: -10.408086776733398
    8. '               ' → logprob: -10.533086776733398
    9. ':
' → logprob: -11.033086776733398
    10. '_continue' → logprob: -11.658086776733398

Token 653: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03844030946493149
    2. '       ' → logprob: -3.538440227508545
    3. ' continue' → logprob: -4.788440227508545
    4. '           ' → logprob: -8.163440704345703
    5. '	continue' → logprob: -10.413440704345703
    6. '   ' → logprob: -11.913440704345703
    7. '               ' → logprob: -13.038440704345703
    8. '_continue' → logprob: -13.163440704345703
    9. '```' → logprob: -14.913440704345703
    10. 'contin' → logprob: -15.288440704345703

Token 654: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00272189499810338
    2. '        
' → logprob: -6.377721786499023
    3. '
' → logprob: -7.627721786499023
    4. '<|end|>' → logprob: -8.752721786499023
    5. '   ' → logprob: -9.752721786499023
    6. ' 
' → logprob: -10.002721786499023
    7. '	' → logprob: -10.502721786499023
    8. ')' → logprob: -10.502721786499023
    9. '           ' → logprob: -10.627721786499023
    10. '        ' → logprob: -10.752721786499023

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001761272142175585
    2. '   ' → logprob: -9.250176429748535
    3. ' for' → logprob: -10.250176429748535
    4. '        
' → logprob: -11.500176429748535
    5. 'for' → logprob: -12.000176429748535
    6. '	' → logprob: -12.250176429748535
    7. '           ' → logprob: -12.375176429748535
    8. ')' → logprob: -12.625176429748535
    9. '```' → logprob: -12.625176429748535
    10. '    ' → logprob: -13.000176429748535

Token 656: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04553860425949097
    2. '       ' → logprob: -3.7955386638641357
    3. ' for' → logprob: -4.045538425445557
    4. '   ' → logprob: -5.420538425445557
    5. '	for' → logprob: -9.045538902282715
    6. '```' → logprob: -12.920538902282715
    7. '           ' → logprob: -14.420538902282715
    8. '        
' → logprob: -15.920538902282715
    9. ' ' → logprob: -15.920538902282715
    10. '   ' → logprob: -16.4205379486084

Token 657: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00043281487887725234
    2. '(v' → logprob: -7.750432968139648
    3. ' v' → logprob: -13.375432968139648
    4. 'w' → logprob: -15.625432968139648
    5. '[v' → logprob: -15.875432968139648
    6. '_v' → logprob: -16.25043296813965
    7. 'to' → logprob: -16.62543296813965
    8. '	v' → logprob: -17.00043296813965
    9. 'cost' → logprob: -17.37543296813965
    10. ',v' → logprob: -17.87543296813965

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001114106344175525
    2. ' ,' → logprob: -9.62511157989502
    3. ',v' → logprob: -10.75011157989502
    4. ',c' → logprob: -12.00011157989502
    5. ',d' → logprob: -12.37511157989502
    6. ' in' → logprob: -12.50011157989502
    7. ',w' → logprob: -12.75011157989502
    8. ',u' → logprob: -13.75011157989502
    9. ',n' → logprob: -14.12511157989502
    10. '‌,' → logprob: -14.50011157989502

Token 659: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.637001097202301
    2. 'c' → logprob: -1.1370010375976562
    3. 'cost' → logprob: -2.1370010375976562
    4. ' w' → logprob: -4.012001037597656
    5. ' c' → logprob: -5.012001037597656
    6. 'weight' → logprob: -5.262001037597656
    7. ' cost' → logprob: -6.262001037597656
    8. ' weight' → logprob: -9.137001037597656
    9. '   ' → logprob: -9.262001037597656
    10. 'v' → logprob: -10.137001037597656

Token 660: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05582577735185623
    2. 'in' → logprob: -2.930825710296631
    3. ',' → logprob: -7.180825710296631
    4. ')' → logprob: -9.555826187133789
    5. '   ' → logprob: -10.180826187133789
    6. ' ' → logprob: -11.180826187133789
    7. 's' → logprob: -11.430826187133789
    8. '_in' → logprob: -11.555826187133789
    9. 'v' → logprob: -11.930826187133789
    10. '	in' → logprob: -12.055826187133789

Token 661: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02635684423148632
    2. ' graph' → logprob: -3.6513569355010986
    3. '	graph' → logprob: -10.40135669708252
    4. '(graph' → logprob: -10.90135669708252
    5. ' ' → logprob: -12.90135669708252
    6. 's' → logprob: -13.15135669708252
    7. 'raph' → logprob: -14.27635669708252
    8. '_graph' → logprob: -14.27635669708252
    9. 'Graph' → logprob: -14.40135669708252
    10. '   ' → logprob: -15.40135669708252

Token 662: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.747814349073451e-05
    2. '   ' → logprob: -12.125017166137695
    3. '[' → logprob: -12.375017166137695
    4. ' in' → logprob: -12.500017166137695
    5. 'in' → logprob: -13.500017166137695
    6. 'u' → logprob: -13.625017166137695
    7. '       ' → logprob: -15.125017166137695
    8. '(u' → logprob: -15.125017166137695
    9. '[[' → logprob: -15.500017166137695
    10. '[in' → logprob: -15.750017166137695

Token 663: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3441573977470398
    2. '):
' → logprob: -1.5941574573516846
    3. ']:' → logprob: -3.3441574573516846
    4. ']' → logprob: -3.5941574573516846
    5. '):' → logprob: -4.3441572189331055
    6. ' in' → logprob: -6.3441572189331055
    7. ':' → logprob: -6.4691572189331055
    8. ')' → logprob: -6.5941572189331055
    9. ']):' → logprob: -6.5941572189331055
    10. ']):
' → logprob: -6.7191572189331055

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005030471365898848
    2. ':' → logprob: -5.630030632019043
    3. '               ' → logprob: -7.755030632019043
    4. '       ' → logprob: -7.880030632019043
    5. ',' → logprob: -8.755030632019043
    6. '	       ' → logprob: -8.755030632019043
    7. '<|end|>' → logprob: -9.505030632019043
    8. ':
' → logprob: -10.130030632019043
    9. ' :' → logprob: -10.380030632019043
    10. '            
' → logprob: -10.505030632019043

Token 665: ' nd' (ID: 5914)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7327274680137634
    2. ' if' → logprob: -0.8577274680137634
    3. 'if' → logprob: -2.857727527618408
    4. ' new' → logprob: -4.107727527618408
    5. '       ' → logprob: -4.232727527618408
    6. '               ' → logprob: -5.732727527618408
    7. 'new' → logprob: -5.982727527618408
    8. '   ' → logprob: -7.357727527618408
    9. ' nd' → logprob: -8.98272705078125
    10. '            
' → logprob: -9.85772705078125

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8387917280197144
    2. 'ist' → logprob: -0.9637917280197144
    3. '=' → logprob: -2.213791847229004
    4. 'istance' → logprob: -2.588791847229004
    5. 'v' → logprob: -7.088791847229004
    6. '=v' → logprob: -7.963791847229004
    7. '   ' → logprob: -8.463791847229004
    8. 'is' → logprob: -8.713791847229004
    9. 'isted' → logprob: -9.463791847229004
    10. 'ists' → logprob: -10.088791847229004

Token 667: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1269301027059555
    2. ' cur' → logprob: -2.126929998397827
    3. 'dist' → logprob: -13.876930236816406
    4. ' dist' → logprob: -14.001930236816406
    5. '	cur' → logprob: -15.501930236816406
    6. '(cur' → logprob: -17.251930236816406
    7. '[cur' → logprob: -18.001930236816406
    8. '   ' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.376930236816406
    10. '_cur' → logprob: -18.626930236816406

Token 668: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.9361264946837764e-07
    2. '+d' → logprob: -16.625
    3. '   ' → logprob: -17.25
    4. '+' → logprob: -17.375
    5. '       ' → logprob: -18.25
    6. '_' → logprob: -18.75
    7. '_dist' → logprob: -19.0
    8. '           ' → logprob: -19.125
    9. '_D' → logprob: -19.25
    10. 'd' → logprob: -19.25

Token 669: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889165729284286
    2. '+' → logprob: -2.5788917541503906
    3. '+c' → logprob: -13.45389175415039
    4. '＋' → logprob: -16.07889175415039
    5. ' +
' → logprob: -16.32889175415039
    6. '+d' → logprob: -16.95389175415039
    7. ' ' → logprob: -16.95389175415039
    8. '[cur' → logprob: -17.82889175415039
    9. '+
' → logprob: -17.95389175415039
    10. ' ' → logprob: -18.07889175415039

Token 670: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01416350994259119
    2. ' cost' → logprob: -4.264163494110107
    3. '(cost' → logprob: -18.264163970947266
    4. 'c' → logprob: -20.014163970947266
    5. '_cost' → logprob: -21.264163970947266
    6. 'Cost' → logprob: -21.514163970947266
    7. '   ' → logprob: -22.139163970947266
    8. 'co' → logprob: -22.514163970947266
    9. ' ' → logprob: -22.514163970947266
    10. ' kost' → logprob: -22.764163970947266

Token 671: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012440400896593928
    2. '<|end|>' → logprob: -7.126244068145752
    3. '		' → logprob: -8.751243591308594
    4. '<|end|>' → logprob: -9.376243591308594
    5. '               ' → logprob: -9.501243591308594
    6. '       ' → logprob: -10.001243591308594
    7. ')' → logprob: -11.001243591308594
    8. '          ' → logprob: -11.251243591308594
    9. '	       ' → logprob: -11.626243591308594
    10. '            
' → logprob: -12.001243591308594

Token 672: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003488129877950996
    2. '<|end|>' → logprob: -8.375349044799805
    3. '		' → logprob: -10.250349044799805
    4. '               ' → logprob: -10.625349044799805
    5. '<|end|>' → logprob: -10.875349044799805
    6. '          ' → logprob: -11.500349044799805
    7. '            
' → logprob: -11.875349044799805
    8. ' if' → logprob: -11.875349044799805
    9. '       ' → logprob: -12.375349044799805
    10. '	       ' → logprob: -13.000349044799805

Token 673: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007464524358510971
    2. ' if' → logprob: -5.007464408874512
    3. 'if' (adapté à ' if') → logprob: -7.632464408874512
    4. '               ' → logprob: -8.882464408874512
    5. '            
' → logprob: -10.132464408874512
    6. '       ' → logprob: -10.632464408874512
    7. '		' → logprob: -11.132464408874512
    8. '            ' → logprob: -11.382464408874512
    9. '          ' → logprob: -11.507464408874512
    10. '<|end|>' → logprob: -12.007464408874512

Token 674: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.15356747806072235
    2. 'nd' → logprob: -2.0285675525665283
    3. ' dist' → logprob: -4.778567314147949
    4. 'dist' → logprob: -6.028567314147949
    5. '(nd' → logprob: -11.40356731414795
    6. '	dist' → logprob: -13.27856731414795
    7. '_nd' → logprob: -14.52856731414795
    8. '   ' → logprob: -14.77856731414795
    9. ' ' → logprob: -14.90356731414795
    10. 'ndl' → logprob: -15.02856731414795

Token 675: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03374966233968735
    2. '<' → logprob: -3.408749580383301
    3. '<|end|>' → logprob: -9.5337495803833
    4. '[' → logprob: -11.1587495803833
    5. '<v' → logprob: -12.7837495803833
    6. ' ' → logprob: -13.0337495803833
    7. '<n' → logprob: -13.0337495803833
    8. '<int' → logprob: -13.4087495803833
    9. '<th' → logprob: -13.7837495803833
    10. '<len' → logprob: -14.4087495803833

Token 676: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019286326132714748
    2. ' dist' → logprob: -6.251928806304932
    3. '	dist' → logprob: -18.126928329467773
    4. '(dist' → logprob: -18.501928329467773
    5. '_dist' → logprob: -20.751928329467773
    6. '.dist' → logprob: -21.751928329467773
    7. 'Dist' → logprob: -22.501928329467773
    8. '```' → logprob: -22.501928329467773
    9. '   ' → logprob: -23.251928329467773
    10. 'd' → logprob: -23.376928329467773

Token 677: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.0
    3. '[u' → logprob: -17.75
    4. '```' → logprob: -20.625
    5. '[' → logprob: -21.125
    6. '	v' → logprob: -21.875
    7. '(v' → logprob: -22.375
    8. '<v' → logprob: -22.625
    9. ' v' → logprob: -23.75
    10. '   ' → logprob: -23.75

Token 678: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6646276116371155
    2. ']:' → logprob: -0.9146276116371155
    3. '):' → logprob: -2.9146275520324707
    4. '[v' → logprob: -3.6646275520324707
    5. ']:
' → logprob: -6.414627552032471
    6. ':
' → logprob: -6.539627552032471
    7. '):
' → logprob: -6.664627552032471
    8. ']' → logprob: -8.289628028869629
    9. '}:' → logprob: -8.914628028869629
    10. '[' → logprob: -9.914628028869629

Token 679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011105302110081539
    2. ':' → logprob: -10.500110626220703
    3. '           ' → logprob: -10.500110626220703
    4. ' =' → logprob: -11.250110626220703
    5. '              ' → logprob: -12.000110626220703
    6. '                   ' → logprob: -12.250110626220703
    7. '=' → logprob: -12.375110626220703
    8. '	           ' → logprob: -12.500110626220703
    9. '<|end|>' → logprob: -12.750110626220703
    10. '                       ' → logprob: -13.125110626220703

Token 680: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.06314011663198471
    2. 'dist' (adapté à ' dist') → logprob: -2.8131401538848877
    3. '               ' → logprob: -6.938139915466309
    4. '                ' → logprob: -9.063139915466309
    5. '_dist' → logprob: -10.313139915466309
    6. '	dist' → logprob: -10.313139915466309
    7. '                   ' → logprob: -11.813139915466309
    8. '(dist' → logprob: -12.188139915466309
    9. '                
' → logprob: -13.688139915466309
    10. 'Dist' → logprob: -14.063139915466309

Token 681: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. 'v' → logprob: -15.5
    3. '<|end|>' → logprob: -17.875
    4. '[val' → logprob: -18.0
    5. '<v' → logprob: -18.125
    6. '```' → logprob: -19.0
    7. '[' → logprob: -19.0
    8. '[u' → logprob: -19.125
    9. '	v' → logprob: -19.5
    10. '=v' → logprob: -19.5

Token 682: ']' (ID: 60)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.200166469876422e-06
    2. 'v' → logprob: -12.625004768371582
    3. ']' → logprob: -13.750004768371582
    4. '=v' → logprob: -14.625004768371582
    5. '[u' → logprob: -16.3750057220459
    6. '<v' → logprob: -16.3750057220459
    7. '=' → logprob: -17.0000057220459
    8. ']=' → logprob: -17.5000057220459
    9. '```' → logprob: -18.5000057220459
    10. '	v' → logprob: -18.5000057220459

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029061991721391678
    2. ' =' → logprob: -3.654062032699585
    3. '=v' → logprob: -6.154061794281006
    4. '[v' → logprob: -7.404061794281006
    5. '<|end|>' → logprob: -11.779062271118164
    6. ')' → logprob: -12.529062271118164
    7. '<v' → logprob: -13.029062271118164
    8. '.=' → logprob: -13.029062271118164
    9. 'v' → logprob: -13.404062271118164
    10. ',v' → logprob: -13.654062271118164

Token 684: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.10020752996206284
    2. ' nd' → logprob: -2.350207567214966
    3. '(nd' → logprob: -14.350207328796387
    4. '_nd' → logprob: -15.850207328796387
    5. 'ng' → logprob: -16.225208282470703
    6. 'ndl' → logprob: -18.100208282470703
    7. 'nb' → logprob: -18.225208282470703
    8. 'nt' → logprob: -18.350208282470703
    9. '.nd' → logprob: -18.350208282470703
    10. 'Nd' → logprob: -18.600208282470703

Token 685: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003556039300747216
    2. '                
' → logprob: -9.37535572052002
    3. ',' → logprob: -9.62535572052002
    4. '                ' → logprob: -10.25035572052002
    5. '              ' → logprob: -10.37535572052002
    6. '           ' → logprob: -10.37535572052002
    7. '                   ' → logprob: -10.50035572052002
    8. '<|end|>' → logprob: -10.75035572052002
    9. '			' → logprob: -11.00035572052002
    10. '             ' → logprob: -11.87535572052002

Token 686: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.862962229410186e-05
    2. 'heap' → logprob: -10.875078201293945
    3. '                
' → logprob: -11.000078201293945
    4. '			' → logprob: -11.125078201293945
    5. ' heap' → logprob: -12.000078201293945
    6. '(heap' → logprob: -12.375078201293945
    7. '                   ' → logprob: -12.500078201293945
    8. '<|end|>' → logprob: -12.500078201293945
    9. '```' → logprob: -13.125078201293945
    10. '[' → logprob: -13.625078201293945

Token 687: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -2.15310683415737e-05
    2. ' heap' → logprob: -10.750021934509277
    3. 'he' → logprob: -22.12502098083496
    4. '(heap' → logprob: -22.50002098083496
    5. '.heap' → logprob: -23.37502098083496
    6. '               ' → logprob: -24.12502098083496
    7. '           ' → logprob: -24.37502098083496
    8. '   ' → logprob: -24.62502098083496
    9. '_heap' → logprob: -24.75002098083496
    10. 'Heap' → logprob: -25.75002098083496

Token 688: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. '.he' → logprob: -14.875000953674316
    3. 'push' → logprob: -14.875000953674316
    4. '.push' → logprob: -16.625001907348633
    5. 'p' → logprob: -16.750001907348633
    6. 'he' → logprob: -17.125001907348633
    7. 'app' → logprob: -17.375001907348633
    8. 'heap' → logprob: -18.125001907348633
    9. '```' → logprob: -18.250001907348633
    10. 'h' → logprob: -18.875001907348633

Token 689: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.25338661670684814
    2. 'q' → logprob: -1.5033866167068481
    3. 'he' → logprob: -7.003386497497559
    4. 'p' → logprob: -8.253386497497559
    5. '.heap' → logprob: -9.128386497497559
    6. 'ush' → logprob: -9.628386497497559
    7. 'push' → logprob: -10.253386497497559
    8. 'app' → logprob: -10.378386497497559
    9. 'heap' → logprob: -10.878386497497559
    10. '.push' → logprob: -11.753386497497559

Token 690: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0002615742268972099
    2. 'ap' → logprob: -8.250261306762695
    3. 'pp' → logprob: -15.375261306762695
    4. 'a' → logprob: -18.250261306762695
    5. 'ап' → logprob: -19.375261306762695
    6. 'appen' → logprob: -19.375261306762695
    7. 'p' → logprob: -19.625261306762695
    8. 'push' → logprob: -19.875261306762695
    9. 'he' → logprob: -20.125261306762695
    10. ' app' → logprob: -20.500261306762695

Token 691: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00048656106810085475
    2. 'push' → logprob: -8.250486373901367
    3. 'app' → logprob: -8.750486373901367
    4. 'sh' → logprob: -10.125486373901367
    5. 'ap' → logprob: -11.000486373901367
    6. 'p' → logprob: -12.125486373901367
    7. 'ch' → logprob: -14.125486373901367
    8. 'pp' → logprob: -14.375486373901367
    9. '```' → logprob: -14.500486373901367
    10. 'u' → logprob: -14.625486373901367

Token 692: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. 'heap' → logprob: -17.000001907348633
    4. '(queue' → logprob: -18.250001907348633
    5. '(
' → logprob: -18.500001907348633
    6. '((' → logprob: -18.500001907348633
    7. '```' → logprob: -19.250001907348633
    8. ' (' → logprob: -19.250001907348633
    9. '(graph' → logprob: -20.375001907348633
    10. ' heap' → logprob: -20.375001907348633

Token 693: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.4140441635390744e-05
    2. '(' → logprob: -11.625014305114746
    3. 'heap' → logprob: -12.500014305114746
    4. ',' → logprob: -14.750014305114746
    5. ' heap' → logprob: -15.125014305114746
    6. ' (' → logprob: -15.125014305114746
    7. '((' → logprob: -15.625014305114746
    8. ')' → logprob: -15.750014305114746
    9. '(dist' → logprob: -16.75001335144043
    10. '```' → logprob: -16.87501335144043

Token 694: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.007731911726295948
    2. ' (' → logprob: -5.257731914520264
    3. '(' → logprob: -6.007731914520264
    4. '(n' → logprob: -10.382731437683105
    5. '(nn' → logprob: -13.507731437683105
    6. '   ' → logprob: -13.882731437683105
    7. '(ns' → logprob: -14.632731437683105
    8. '(nt' → logprob: -14.632731437683105
    9. '  ' → logprob: -15.132731437683105
    10. ' ' → logprob: -15.382731437683105

Token 695: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00013333676906768233
    2. '(nd' → logprob: -9.500133514404297
    3. ' nd' → logprob: -9.750133514404297
    4. '(' → logprob: -15.875133514404297
    5. '_nd' → logprob: -17.500133514404297
    6. '   ' → logprob: -17.750133514404297
    7. 'ndl' → logprob: -18.500133514404297
    8. 'dist' → logprob: -19.000133514404297
    9. ' ' → logprob: -19.375133514404297
    10. ' (' → logprob: -19.500133514404297

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006367852329276502
    2. ',v' → logprob: -7.375636577606201
    3. 'v' → logprob: -12.00063705444336
    4. ' ,' → logprob: -12.62563705444336
    5. ',
' → logprob: -14.25063705444336
    6. '```' → logprob: -17.00063705444336
    7. ' v' → logprob: -17.62563705444336
    8. '[v' → logprob: -18.00063705444336
    9. '<|end|>' → logprob: -18.25063705444336
    10. ')' → logprob: -18.25063705444336

Token 697: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.2729995988775045e-06
    2. ' v' → logprob: -12.000006675720215
    3. ')v' → logprob: -20.1250057220459
    4. '	v' → logprob: -20.8750057220459
    5. '```' → logprob: -23.0000057220459
    6. '[v' → logprob: -23.2500057220459
    7. 've' → logprob: -23.7500057220459
    8. '(v' → logprob: -23.8750057220459
    9. 'vj' → logprob: -24.0000057220459
    10. 'vq' → logprob: -24.1250057220459

Token 698: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010998018842656165
    2. '))
' → logprob: -9.125109672546387
    3. ' ))' → logprob: -14.500109672546387
    4. ')' → logprob: -14.875109672546387
    5. ')))' → logprob: -16.750110626220703
    6. 'v' → logprob: -17.125110626220703
    7. ',' → logprob: -17.250110626220703
    8. '))

' → logprob: -17.375110626220703
    9. '));' → logprob: -17.625110626220703
    10. '))
' → logprob: -18.625110626220703

Token 699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4773026704788208
    2. '<|end|>' → logprob: -2.2273025512695312
    3. 'return' → logprob: -2.3523025512695312
    4. '```' → logprob: -3.1023025512695312
    5. ')' → logprob: -3.1023025512695312
    6. '	return' → logprob: -3.7273025512695312
    7. ' return' → logprob: -4.102302551269531
    8. '    
' → logprob: -4.477302551269531
    9. ':return' → logprob: -4.602302551269531
    10. '               ' → logprob: -4.602302551269531

Token 700: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06128028407692909
    2. ' return' → logprob: -2.9362802505493164
    3. '   ' → logprob: -5.186280250549316
    4. '	return' → logprob: -8.311280250549316
    5. ':return' → logprob: -8.561280250549316
    6. ')' → logprob: -9.061280250549316
    7. '```' → logprob: -9.561280250549316
    8. '<|end|>' → logprob: -10.061280250549316
    9. ' ' → logprob: -10.561280250549316
    10. '    
' → logprob: -10.936280250549316

Token 701: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.5048530030981055e-06
    2. ' dist' → logprob: -13.500001907348633
    3. '(dist' → logprob: -21.375001907348633
    4. '	dist' → logprob: -24.375001907348633
    5. '_dist' → logprob: -25.875001907348633
    6. 'dest' → logprob: -26.000001907348633
    7. 'diff' → logprob: -26.500001907348633
    8. 'Dist' → logprob: -27.125001907348633
    9. 'd' → logprob: -27.750001907348633
    10. '```' → logprob: -28.125001907348633

Token 702: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 703: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03815750032663345
    2. 'def' → logprob: -3.2881574630737305
    3. '(n' → logprob: -9.41315746307373
    4. '#' → logprob: -11.03815746307373
    5. '```' → logprob: -11.66315746307373
    6. 'N' → logprob: -12.28815746307373
    7. 'if' → logprob: -13.16315746307373
    8. ' n' → logprob: -13.91315746307373
    9. 't' → logprob: -14.03815746307373
    10. 'ndef' → logprob: -14.28815746307373

Token 704: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6931816339492798
    2. 'main' → logprob: -0.6931816339492798
    3. 'solve' → logprob: -10.443181991577148
    4. ' solve' → logprob: -12.443181991577148
    5. 'solution' → logprob: -15.068181991577148
    6. '```' → logprob: -15.068181991577148
    7. 'process' → logprob: -15.193181991577148
    8. '_main' → logprob: -15.693181991577148
    9. '	main' → logprob: -15.818181991577148
    10. 'def' → logprob: -16.44318199157715

Token 705: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.41866585687967e-06
    2. ' ():' → logprob: -12.500008583068848
    3. '():
' → logprob: -13.000008583068848
    4. '()' → logprob: -13.375008583068848
    5. '(' → logprob: -14.250008583068848
    6. '(":' → logprob: -17.37500762939453
    7. '(:' → logprob: -17.75000762939453
    8. '()>' → logprob: -17.75000762939453
    9. '():
' → logprob: -17.87500762939453
    10. 'def' → logprob: -18.75000762939453

Token 706: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7297011017799377
    2. '   ' → logprob: -0.7297011017799377
    3. ' n' → logprob: -3.354701042175293
    4. '	n' → logprob: -6.979701042175293
    5. '```' → logprob: -10.354701042175293
    6. '   ' → logprob: -12.354701042175293
    7. ',n' → logprob: -12.854701042175293
    8. '_n' → logprob: -13.854701042175293
    9. '    
' → logprob: -13.854701042175293
    10. '  ' → logprob: -14.229701042175293

Token 707: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03876352682709694
    2. ' n' → logprob: -3.2887635231018066
    3. '   ' → logprob: -7.538763523101807
    4. 'N' → logprob: -8.913763999938965
    5. '	n' → logprob: -9.913763999938965
    6. ' N' → logprob: -12.538763999938965
    7. 'import' → logprob: -14.038763999938965
    8. '```' → logprob: -14.288763999938965
    9. '    
' → logprob: -15.413763999938965
    10. '_n' → logprob: -15.538763999938965

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000192812061868608
    2. ',n' → logprob: -10.000192642211914
    3. ' ,' → logprob: -10.125192642211914
    4. ',k' → logprob: -10.375192642211914
    5. ',s' → logprob: -11.000192642211914
    6. '=' → logprob: -11.125192642211914
    7. ',m' → logprob: -12.125192642211914
    8. ',a' → logprob: -12.250192642211914
    9. ',p' → logprob: -12.375192642211914
    10. ',c' → logprob: -12.500192642211914

Token 709: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.519893501419574e-05
    2. 'k' → logprob: -10.00009536743164
    3. 'q' → logprob: -10.00009536743164
    4. ' m' → logprob: -12.87509536743164
    5. 'd' → logprob: -13.87509536743164
    6. 'x' → logprob: -15.50009536743164
    7. 'M' → logprob: -15.62509536743164
    8. 'p' → logprob: -16.00009536743164
    9. '```' → logprob: -16.00009536743164
    10. 'e' → logprob: -16.12509536743164

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06203938648104668
    2. ' =' → logprob: -2.812039375305176
    3. ',' → logprob: -9.562039375305176
    4. '=input' → logprob: -13.687039375305176
    5. '=int' → logprob: -17.187040328979492
    6. '=sys' → logprob: -17.187040328979492
    7. '=line' → logprob: -17.437040328979492
    8. '＝' → logprob: -17.937040328979492
    9. '=list' → logprob: -18.187040328979492
    10. ')' → logprob: -18.187040328979492

Token 711: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.061967797577381134
    2. 'map' → logprob: -2.8119678497314453
    3. '	map' → logprob: -16.311967849731445
    4. '[' → logprob: -18.436967849731445
    5. '(map' → logprob: -18.686967849731445
    6. 'm' → logprob: -18.811967849731445
    7. 'list' → logprob: -19.311967849731445
    8. ' ' → logprob: -19.561967849731445
    9. ' ' → logprob: -19.561967849731445
    10. ' list' → logprob: -19.686967849731445

Token 712: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00039409202872775495
    2. '(' → logprob: -7.875393867492676
    3. '(input' → logprob: -11.500393867492676
    4. 'int' → logprob: -13.250393867492676
    5. '(str' → logprob: -14.250393867492676
    6. '(list' → logprob: -15.000393867492676
    7. '(lambda' → logprob: -15.250393867492676
    8. '(tuple' → logprob: -15.250393867492676
    9. '=int' → logprob: -15.625393867492676
    10. '(map' → logprob: -15.875393867492676

Token 713: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05854678153991699
    2. ',input' → logprob: -3.183546781539917
    3. 'input' → logprob: -5.058547019958496
    4. ',' → logprob: -5.433547019958496
    5. '(' → logprob: -5.558547019958496
    6. '=input' → logprob: -7.433547019958496
    7. '(int' → logprob: -9.433547019958496
    8. '[input' → logprob: -10.183547019958496
    9. ')' → logprob: -10.558547019958496
    10. '```' → logprob: -10.558547019958496

Token 714: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003357006062287837
    2. ' input' → logprob: -8.000335693359375
    3. 'int' → logprob: -15.500335693359375
    4. 'sys' → logprob: -17.000335693359375
    5. 'map' → logprob: -18.625335693359375
    6. 'str' → logprob: -21.375335693359375
    7. ' sys' → logprob: -21.500335693359375
    8. '=input' → logprob: -21.625335693359375
    9. 'Input' → logprob: -21.750335693359375
    10. 'lambda' → logprob: -22.000335693359375

Token 715: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023304643109440804
    2. '()' → logprob: -3.7733047008514404
    3. '())' → logprob: -9.77330493927002
    4. '()[' → logprob: -14.39830493927002
    5. '()
' → logprob: -15.02330493927002
    6. '()]' → logprob: -15.27330493927002
    7. '());' → logprob: -15.77330493927002
    8. '()>' → logprob: -15.89830493927002
    9. '()\' → logprob: -15.89830493927002
    10. '();)' → logprob: -16.273303985595703

Token 716: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.024062084034085274
    2. 'strip' → logprob: -3.774062156677246
    3. 'rstrip' → logprob: -7.149062156677246
    4. 'read' → logprob: -10.649062156677246
    5. '().' → logprob: -13.274062156677246
    6. ' split' → logprob: -13.524062156677246
    7. '(split' → logprob: -13.649062156677246
    8. ')' → logprob: -14.274062156677246
    9. 'decode' → logprob: -14.774062156677246
    10. '_split' → logprob: -14.899062156677246

Token 717: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5240503549575806
    2. ')' → logprob: -1.0240503549575806
    3. '()' → logprob: -3.024050235748291
    4. '(' → logprob: -8.89905071258545
    5. '('' → logprob: -13.39905071258545
    6. '())
' → logprob: -14.02405071258545
    7. '(),' → logprob: -14.39905071258545
    8. ' ())' → logprob: -15.14905071258545
    9. ' )' → logprob: -15.27405071258545
    10. '))' → logprob: -15.27405071258545

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011293021030724049
    2. 'graph' → logprob: -5.011292934417725
    3. ' graph' → logprob: -5.761292934417725
    4. '    
' → logprob: -7.511292934417725
    5. '	graph' → logprob: -7.511292934417725
    6. '```' → logprob: -9.011293411254883
    7. 'a' → logprob: -9.261293411254883
    8. 'g' → logprob: -10.136293411254883
    9. '_graph' → logprob: -11.761293411254883
    10. '   ' → logprob: -11.761293411254883

Token 719: ' edges' (ID: 22569)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03930786997079849
    2. ' graph' → logprob: -3.7893078327178955
    3. 'g' → logprob: -4.539308071136475
    4. '   ' → logprob: -5.539308071136475
    5. 'original' → logprob: -7.789308071136475
    6. 'G' → logprob: -8.039307594299316
    7. ' g' → logprob: -8.914307594299316
    8. 'adj' → logprob: -9.039307594299316
    9. 'edges' (adapté à ' edges') → logprob: -9.164307594299316
    10. ' edges' → logprob: -9.914307594299316

Token 720: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143507421016693
    2. '=' → logprob: -1.7014350891113281
    3. '=[]' → logprob: -10.826435089111328
    4. '[]' → logprob: -13.826435089111328
    5. ',' → logprob: -14.826435089111328
    6. '＝' → logprob: -15.701435089111328
    7. '   ' → logprob: -16.201435089111328
    8. '[' → logprob: -17.076435089111328
    9. '_' → logprob: -17.326435089111328
    10. ' ' → logprob: -17.326435089111328

Token 721: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0011847536079585552
    2. '[' → logprob: -6.751184940338135
    3. '[]
' → logprob: -11.251184463500977
    4. '[]=' → logprob: -14.751184463500977
    5. ' []' → logprob: -15.376184463500977
    6. '[n' → logprob: -15.501184463500977
    7. '[int' → logprob: -15.751184463500977
    8. '[num' → logprob: -16.126184463500977
    9. '[]

' → logprob: -16.876184463500977
    10. '[array' → logprob: -17.126184463500977

Token 722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017273928970098495
    2. 'graph' → logprob: -5.017273902893066
    3. 'for' → logprob: -5.642273902893066
    4. '    
' → logprob: -6.267273902893066
    5. ' graph' → logprob: -6.267273902893066
    6. ' for' → logprob: -6.267273902893066
    7. '
' → logprob: -7.392273902893066
    8. '	graph' → logprob: -7.642273902893066
    9. 'g' → logprob: -10.767273902893066
    10. '_graph' → logprob: -10.892273902893066

Token 723: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.049493931233882904
    2. ' graph' → logprob: -3.2994940280914307
    3. 'g' → logprob: -5.424493789672852
    4. '   ' → logprob: -5.424493789672852
    5. 'for' → logprob: -6.299493789672852
    6. 'G' → logprob: -8.549493789672852
    7. 'original' → logprob: -8.674493789672852
    8. ' g' → logprob: -9.549493789672852
    9. 'forward' → logprob: -9.674493789672852
    10. 'orig' → logprob: -9.799493789672852

Token 724: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408896684646606
    2. '=' → logprob: -0.9740889668464661
    3. '[' → logprob: -11.849088668823242
    4. '=[]' → logprob: -13.099088668823242
    5. '=[' → logprob: -14.599088668823242
    6. ' =[' → logprob: -14.599088668823242
    7. ',' → logprob: -14.849088668823242
    8. '   ' → logprob: -14.974088668823242
    9. '[]' → logprob: -15.599088668823242
    10. 's' → logprob: -15.724088668823242

Token 725: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519415020942688
    2. ' [[]' → logprob: -1.501941442489624
    3. '{' → logprob: -11.751941680908203
    4. '   ' → logprob: -12.876941680908203
    5. 'default' → logprob: -13.626941680908203
    6. '[[' → logprob: -14.501941680908203
    7. ' [' → logprob: -15.876941680908203
    8. ' defaultdict' → logprob: -17.251941680908203
    9. '[]' → logprob: -17.376941680908203
    10. ' ' → logprob: -17.376941680908203

Token 726: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28213050961494446
    2. ' for' → logprob: -1.407130479812622
    3. ',' → logprob: -7.907130718231201
    4. '(n' → logprob: -7.907130718231201
    5. ']' → logprob: -9.032130241394043
    6. ')' → logprob: -9.657130241394043
    7. '   ' → logprob: -10.532130241394043
    8. '(' → logprob: -11.282130241394043
    9. '	for' → logprob: -11.782130241394043
    10. '
' → logprob: -12.782130241394043

Token 727: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011550543829798698
    2. ' _' → logprob: -4.511550426483154
    3. ' range' → logprob: -8.011550903320312
    4. 'i' → logprob: -9.636550903320312
    5. 'range' → logprob: -10.261550903320312
    6. ' i' → logprob: -10.386550903320312
    7. '_i' → logprob: -11.511550903320312
    8. '_range' → logprob: -11.761550903320312
    9. ' in' → logprob: -11.886550903320312
    10. 'in' → logprob: -12.136550903320312

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11399505287408829
    2. 'in' → logprob: -2.36399507522583
    3. 'range' → logprob: -4.48899507522583
    4. '_' → logprob: -6.73899507522583
    5. ' range' → logprob: -6.73899507522583
    6. 'i' → logprob: -9.738994598388672
    7. 'n' → logprob: -12.113994598388672
    8. ' ' → logprob: -12.113994598388672
    9. 'e' → logprob: -12.738994598388672
    10. '(range' → logprob: -12.988994598388672

Token 729: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023671627044678
    2. ' range' → logprob: -1.9102367162704468
    3. '(range' → logprob: -11.285236358642578
    4. '	range' → logprob: -18.535236358642578
    5. '(n' → logprob: -18.910236358642578
    6. '   ' → logprob: -19.660236358642578
    7. '_range' → logprob: -19.910236358642578
    8. 'in' → logprob: -20.535236358642578
    9. '.range' → logprob: -20.785236358642578
    10. 'Range' → logprob: -20.785236358642578

Token 730: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.981667537620524e-06
    2. 'n' → logprob: -13.375001907348633
    3. '(' → logprob: -14.750001907348633
    4. ' (' → logprob: -17.625001907348633
    5. ' n' → logprob: -18.500001907348633
    6. '   ' → logprob: -21.250001907348633
    7. '((' → logprob: -21.500001907348633
    8. '	n' → logprob: -21.625001907348633
    9. '(N' → logprob: -22.000001907348633
    10. ')n' → logprob: -22.125001907348633

Token 731: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00026181264547631145
    2. ' +' → logprob: -8.250262260437012
    3. ')]' → logprob: -15.000262260437012
    4. '+
' → logprob: -15.625262260437012
    5. '＋' → logprob: -18.250261306762695
    6. '+n' → logprob: -19.000261306762695
    7. ')])' → logprob: -19.375261306762695
    8. '   ' → logprob: -19.500261306762695
    9. '()+' → logprob: -20.375261306762695
    10. '+)' → logprob: -20.625261306762695

Token 732: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '(' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.500003814697266
    5. 'm' → logprob: -17.500003814697266
    6. 'n' → logprob: -19.250003814697266
    7. '=' → logprob: -19.875003814697266
    8. '
' → logprob: -19.875003814697266
    9. '(m' → logprob: -20.000003814697266
    10. '```' → logprob: -20.000003814697266

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -19.125
    5. '
' → logprob: -19.875
    6. '0' → logprob: -20.375
    7. '2' → logprob: -21.125
    8. '１' → logprob: -21.125
    9. '  ' → logprob: -22.0
    10. '7' → logprob: -22.0

Token 734: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25447189807891846
    2. ')]' → logprob: -1.5044718980789185
    3. ')' → logprob: -6.004471778869629
    4. ']
' → logprob: -9.629471778869629
    5. ')]
' → logprob: -13.129471778869629
    6. ' ]' → logprob: -13.254471778869629
    7. '   ' → logprob: -13.754471778869629
    8. ']
' → logprob: -15.004471778869629
    9. '])' → logprob: -15.129471778869629
    10. ')],' → logprob: -15.379471778869629

Token 735: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04334182292222977
    2. 'for' → logprob: -3.793341875076294
    3. ' for' → logprob: -3.918341875076294
    4. '	for' → logprob: -11.418341636657715
    5. '    
' → logprob: -12.043341636657715
    6. '```' → logprob: -12.543341636657715
    7. 'graph' → logprob: -14.668341636657715
    8. '   ' → logprob: -15.668341636657715
    9. 'edges' → logprob: -15.793341636657715
    10. 'b' → logprob: -16.04334259033203

Token 736: ' rev' (ID: 10808)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.277750700712204
    2. 'for' → logprob: -1.9027507305145264
    3. 'reverse' → logprob: -2.6527507305145264
    4. '   ' → logprob: -4.527750492095947
    5. 'rev' (adapté à ' rev') → logprob: -4.777750492095947
    6. 'inverse' → logprob: -6.527750492095947
    7. ' for' → logprob: -6.902750492095947
    8. 'inv' → logprob: -7.652750492095947
    9. ' graph' → logprob: -7.777750492095947
    10. ' reverse' → logprob: -9.527750968933105

Token 737: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.07975433021783829
    2. 'graph' → logprob: -2.57975435256958
    3. 'raph' → logprob: -7.07975435256958
    4. ' graph' → logprob: -11.329753875732422
    5. '	graph' → logprob: -11.954753875732422
    6. 'aph' → logprob: -13.204753875732422
    7. 'Graph' → logprob: -14.204753875732422
    8. '_' → logprob: -14.829753875732422
    9. '.graph' → logprob: -15.454753875732422
    10. '(graph' → logprob: -15.829753875732422

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. '=[]' → logprob: -15.063261985778809
    4. '[' → logprob: -16.063262939453125
    5. '＝' → logprob: -16.063262939453125
    6. '=[' → logprob: -16.813262939453125
    7. ' ' → logprob: -17.938262939453125
    8. ' =[' → logprob: -18.563262939453125
    9. ')' → logprob: -19.063262939453125
    10. ']' → logprob: -19.188262939453125

Token 739: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021087527275085
    2. ' [[]' → logprob: -2.3502109050750732
    3. '[['' → logprob: -12.975211143493652
    4. '[[' → logprob: -13.350211143493652
    5. '[::-' → logprob: -16.600210189819336
    6. '[...]' → logprob: -16.600210189819336
    7. '[][' → logprob: -17.350210189819336
    8. '[]' → logprob: -17.350210189819336
    9. '   ' → logprob: -17.600210189819336
    10. '([' → logprob: -17.725210189819336

Token 740: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931482553482056
    2. 'for' → logprob: -0.6931482553482056
    3. '(for' → logprob: -14.693148612976074
    4. '	for' → logprob: -15.818148612976074
    5. ')' → logprob: -16.318147659301758
    6. '(n' → logprob: -16.693147659301758
    7. ' (' → logprob: -16.693147659301758
    8. '   ' → logprob: -16.818147659301758
    9. '=' → logprob: -16.818147659301758
    10. ' in' → logprob: -17.193147659301758

Token 741: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007835414726287127
    2. ' _' → logprob: -7.250783443450928
    3. ' in' → logprob: -9.625783920288086
    4. 'in' → logprob: -13.000783920288086
    5. '_range' → logprob: -13.000783920288086
    6. ' range' → logprob: -14.125783920288086
    7. '_in' → logprob: -14.250783920288086
    8. '_=' → logprob: -14.750783920288086
    9. '_i' → logprob: -15.375783920288086
    10. 'i' → logprob: -15.375783920288086

Token 742: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08738850057125092
    2. '_' → logprob: -2.837388515472412
    3. ' range' → logprob: -4.212388515472412
    4. '_range' → logprob: -4.962388515472412
    5. '_le' → logprob: -6.337388515472412
    6. 'le' → logprob: -7.087388515472412
    7. '(range' → logprob: -8.587388038635254
    8. ' le' → logprob: -8.712388038635254
    9. ' _' → logprob: -8.837388038635254
    10. '=' → logprob: -9.712388038635254

Token 743: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141927897930145
    2. ' range' → logprob: -1.7014192342758179
    3. '(range' → logprob: -12.32641887664795
    4. '_range' → logprob: -13.45141887664795
    5. '_' → logprob: -17.826419830322266
    6. '	range' → logprob: -17.826419830322266
    7. '.range' → logprob: -19.701419830322266
    8. ' ' → logprob: -21.201419830322266
    9. ' _' → logprob: -21.826419830322266
    10. 'n' → logprob: -21.826419830322266

Token 744: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011568804271519184
    2. 'range' → logprob: -4.511569023132324
    3. '(range' → logprob: -8.511569023132324
    4. 'n' → logprob: -8.761569023132324
    5. ' range' → logprob: -9.011569023132324
    6. ' (' → logprob: -10.261569023132324
    7. '(' → logprob: -12.511569023132324
    8. '_range' → logprob: -13.136569023132324
    9. ' n' → logprob: -16.261568069458008
    10. 'Range' → logprob: -16.386568069458008

Token 745: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132634460926056
    2. ' +' → logprob: -1.3132634162902832
    3. '+
' → logprob: -13.938263893127441
    4. ' +
' → logprob: -14.688263893127441
    5. ' ' → logprob: -16.063262939453125
    6. '```' → logprob: -16.938262939453125
    7. ' ' → logprob: -17.063262939453125
    8. ')+' → logprob: -17.063262939453125
    9. '   ' → logprob: -17.188262939453125
    10. '＋' → logprob: -17.313262939453125

Token 746: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2021826058626175
    2. 'n' → logprob: -1.952182650566101
    3. ' range' → logprob: -3.4521825313568115
    4. '1' → logprob: -5.077182769775391
    5. ' n' → logprob: -6.202182769775391
    6. 'm' → logprob: -6.952182769775391
    7. '(n' → logprob: -9.57718276977539
    8. ' ' → logprob: -9.95218276977539
    9. '
' → logprob: -10.95218276977539
    10. '(' → logprob: -11.32718276977539

Token 747: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38526350259780884
    2. 'n' → logprob: -1.385263442993164
    3. '1' → logprob: -2.760263442993164
    4. 'm' → logprob: -5.635263442993164
    5. ' range' → logprob: -6.135263442993164
    6. ' n' → logprob: -8.260263442993164
    7. '(n' → logprob: -8.760263442993164
    8. '(range' → logprob: -11.135263442993164
    9. '(' → logprob: -11.260263442993164
    10. '
' → logprob: -12.385263442993164

Token 748: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8203098773956299
    2. ')]' → logprob: -0.8203098773956299
    3. ')]
' → logprob: -2.82030987739563
    4. ']
' → logprob: -2.82030987739563
    5. ')' → logprob: -9.32030963897705
    6. '   ' → logprob: -9.94530963897705
    7. ']
' → logprob: -10.07030963897705
    8. ')]
' → logprob: -10.57030963897705
    9. ')]

' → logprob: -11.07030963897705
    10. ']

' → logprob: -11.57030963897705

Token 749: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.680027961730957
    2. '   ' → logprob: -1.430027961730957
    3. '    
' → logprob: -2.305027961730957
    4. '	
' → logprob: -2.680027961730957
    5. ' for' → logprob: -3.305027961730957
    6. 'for' → logprob: -3.305027961730957
    7. '	for' → logprob: -5.305027961730957
    8. '  
' → logprob: -5.805027961730957
    9. ' 
' → logprob: -6.305027961730957
    10. '```' → logprob: -6.680027961730957

Token 750: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48215314745903015
    2. '
' → logprob: -1.4821531772613525
    3. 'for' → logprob: -1.9821531772613525
    4. '    
' → logprob: -4.482152938842773
    5. ' for' → logprob: -5.232152938842773
    6. '	
' → logprob: -7.732152938842773
    7. '	for' → logprob: -8.482152938842773
    8. ' 
' → logprob: -8.982152938842773
    9. '  
' → logprob: -9.107152938842773
    10. '   
' → logprob: -10.357152938842773

Token 751: ' grap' (ID: 60955)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017124764621257782
    2. ' for' → logprob: -4.142124652862549
    3. '
' → logprob: -7.267124652862549
    4. '	for' → logprob: -8.392125129699707
    5. '   ' → logprob: -9.517125129699707
    6. '#' → logprob: -10.142125129699707
    7. '    
' → logprob: -10.642125129699707
    8. '	
' → logprob: -12.392125129699707
    9. ' 
' → logprob: -12.642125129699707
    10. '
' → logprob: -12.892125129699707

Token 752: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.707022488117218
    2. 'h' → logprob: -1.7070224285125732
    3. 'phe' → logprob: -1.7070224285125732
    4. 'aphe' → logprob: -2.4570224285125732
    5. 'ph' → logprob: -2.9570224285125732
    6. 'aph' → logprob: -5.332022666931152
    7. 'heme' → logprob: -7.082022666931152
    8. '#' → logprob: -8.332022666931152
    9. '   ' → logprob: -8.957022666931152
    10. '       ' → logprob: -9.707022666931152

Token 753: ' avec' (ID: 3937)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.327947735786438
    2. ' inverse' → logprob: -1.452947735786438
    3. ' invers' → logprob: -3.3279476165771484
    4. '_inverse' → logprob: -5.452947616577148
    5. 'in' → logprob: -5.827947616577148
    6. 'orient' → logprob: -7.577947616577148
    7. 'direct' → logprob: -7.952947616577148
    8. '   ' → logprob: -8.202947616577148
    9. '[::-' → logprob: -8.202947616577148
    10. 'Inverse' → logprob: -8.452947616577148

Token 754: ' ar' (ID: 646)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8606137037277222
    2. 'edges' → logprob: -2.2356138229370117
    3. ' edges' → logprob: -2.6106138229370117
    4. 'b' → logprob: -2.8606138229370117
    5. 'l' → logprob: -2.9856138229370117
    6. 'reverse' → logprob: -3.1106138229370117
    7. 'des' → logprob: -3.2356138229370117
    8. 'les' → logprob: -3.3606138229370117
    9. 'in' → logprob: -3.6106138229370117
    10. '#' → logprob: -4.360613822937012

Token 755: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.030770443379878998
    2. 'cs' → logprob: -3.5307705402374268
    3. 'c' → logprob: -7.280770301818848
    4. 'ête' → logprob: -8.780770301818848
    5. 'r' → logprob: -9.780770301818848
    6. 'ê' → logprob: -10.655770301818848
    7. 'e' → logprob: -10.780770301818848
    8. 'etes' → logprob: -10.780770301818848
    9. 'ètes' → logprob: -11.030770301818848
    10. 'tes' → logprob: -11.530770301818848

Token 756: ' invers' (ID: 38721)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.546847939491272
    2. ' invers' → logprob: -1.046847939491272
    3. 'inverse' → logprob: -2.7968478202819824
    4. ' inverse' → logprob: -5.296847820281982
    5. 'orient' → logprob: -7.296847820281982
    6. 'invert' → logprob: -7.546847820281982
    7. 'dans' → logprob: -7.921847820281982
    8. '_inverse' → logprob: -7.921847820281982
    9. '_in' → logprob: -8.04684829711914
    10. '[::-' → logprob: -8.17184829711914

Token 757: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0021625140216201544
    2. 'es' → logprob: -7.002162456512451
    3. 'és' → logprob: -8.50216293334961
    4. 'i' → logprob: -8.62716293334961
    5. 'é' → logprob: -8.62716293334961
    6. 'ees' → logprob: -8.87716293334961
    7. 'éch' → logprob: -9.12716293334961
    8. 'érées' → logprob: -9.37716293334961
    9. 'ies' → logprob: -9.62716293334961
    10. 'ch' → logprob: -10.00216293334961

Token 758: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8150955438613892
    2. ' for' → logprob: -1.0650955438613892
    3. 'for' → logprob: -1.6900955438613892
    4. '
' → logprob: -4.1900954246521
    5. '    
' → logprob: -5.0650954246521
    6. '<|end|>' → logprob: -5.5650954246521
    7. '	for' → logprob: -6.9400954246521
    8. '  
' → logprob: -6.9400954246521
    9. '	
' → logprob: -8.190095901489258
    10. ' 
' → logprob: -8.440095901489258

Token 759: ' d' (ID: 272)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.26912635564804077
    2. 'le' → logprob: -2.1441264152526855
    3. ' le' → logprob: -3.2691264152526855
    4. 'l' → logprob: -4.0191264152526855
    5. 'evalu' → logprob: -4.7691264152526855
    6. 'v' → logprob: -4.7691264152526855
    7. 'la' → logprob: -5.0191264152526855
    8. 'sim' → logprob: -5.0191264152526855
    9. 'inverse' → logprob: -5.3941264152526855
    10. ' la' → logprob: -5.6441264152526855

Token 760: 'ijkstra' (ID: 124290)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.10021325200796127
    2. 'istance' → logprob: -2.9752132892608643
    3. 'e' → logprob: -4.100213050842285
    4. 'ijkstra' → logprob: -4.100213050842285
    5. 'dist' → logprob: -5.600213050842285
    6. 'irected' → logprob: -6.975213050842285
    7. 'i' → logprob: -7.225213050842285
    8. 'ists' → logprob: -7.225213050842285
    9. 'irection' → logprob: -7.850213050842285
    10. '_dist' → logprob: -8.225213050842285

Token 761: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03470407798886299
    2. ' for' → logprob: -3.9097039699554443
    3. 'for' → logprob: -4.909704208374023
    4. '    
' → logprob: -5.409704208374023
    5. '
' → logprob: -6.409704208374023
    6. '  
' → logprob: -8.534704208374023
    7. '```' → logprob: -8.659704208374023
    8. '<|end|>' → logprob: -9.534704208374023
    9. '	for' → logprob: -10.409704208374023
    10. '   
' → logprob: -10.909704208374023

Token 762: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -11.375021934509277
    3. 'la' → logprob: -13.000021934509277
    4. '(' → logprob: -13.000021934509277
    5. 'de' → logprob: -13.500021934509277
    6. 'l' → logprob: -13.875021934509277
    7. '   ' → logprob: -14.500021934509277
    8. '#' → logprob: -14.500021934509277
    9. 'destination' → logprob: -14.500021934509277
    10. 'le' → logprob: -14.875021934509277

Token 763: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -16.625
    4. 'de' → logprob: -18.25
    5. '```' → logprob: -18.25
    6. '(' → logprob: -18.625
    7. '۲' → logprob: -18.75
    8. '...' → logprob: -18.75
    9. 'n' → logprob: -18.875
    10. 'm' → logprob: -19.0

Token 764: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6435251235961914
    2. '
' → logprob: -0.8935251235961914
    3. 'for' → logprob: -3.6435251235961914
    4. ' for' → logprob: -3.8935251235961914
    5. '    
' → logprob: -4.143525123596191
    6. '  
' → logprob: -6.518525123596191
    7. '	
' → logprob: -8.018525123596191
    8. '```' → logprob: -8.018525123596191
    9. '<|end|>' → logprob: -8.393525123596191
    10. '   
' → logprob: -8.893525123596191

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035188181791454554
    2. 'for' → logprob: -5.753518581390381
    3. ' for' → logprob: -8.003519058227539
    4. '	for' → logprob: -12.503519058227539
    5. '    
' → logprob: -13.128519058227539
    6. '```' → logprob: -14.003519058227539
    7. '   ' → logprob: -15.628519058227539
    8. '
' → logprob: -17.37851905822754
    9. '       ' → logprob: -17.37851905822754
    10. ' ' → logprob: -17.87851905822754

Token 766: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.375
    4. '
' → logprob: -22.0
    5. '	for' → logprob: -22.125
    6. '```' → logprob: -22.625
    7. '``' → logprob: -26.25
    8. '    
' → logprob: -26.25
    9. 'range' → logprob: -26.625
    10. 'import' → logprob: -26.75

Token 767: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1756367712223437e-05
    2. '_i' → logprob: -11.625011444091797
    3. ' _' → logprob: -12.875011444091797
    4. '_=' → logprob: -16.875011444091797
    5. 'i' → logprob: -17.000011444091797
    6. ' in' → logprob: -17.000011444091797
    7. '_in' → logprob: -17.375011444091797
    8. '_range' → logprob: -17.625011444091797
    9. '_line' → logprob: -20.000011444091797
    10. '_j' → logprob: -20.375011444091797

Token 768: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13465838134288788
    2. 'in' → logprob: -2.1346583366394043
    3. 'range' → logprob: -4.884658336639404
    4. 'n' → logprob: -9.259658813476562
    5. ' range' → logprob: -11.259658813476562
    6. 'i' → logprob: -11.384658813476562
    7. 'r' → logprob: -12.509658813476562
    8. ' ' → logprob: -12.509658813476562
    9. '   ' → logprob: -13.384658813476562
    10. 'ange' → logprob: -13.509658813476562

Token 769: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '(range' → logprob: -18.8750057220459
    4. '_range' → logprob: -19.1250057220459
    5. '	range' → logprob: -19.6250057220459
    6. 'rang' → logprob: -20.5000057220459
    7. 'ange' → logprob: -20.6250057220459
    8. '_' → logprob: -21.0000057220459
    9. '0' → logprob: -21.5000057220459
    10. '.range' → logprob: -22.1250057220459

Token 770: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.062035802751779556
    2. 'm' → logprob: -2.8120357990264893
    3. ' m' → logprob: -10.06203556060791
    4. '(' → logprob: -10.81203556060791
    5. 'range' → logprob: -13.31203556060791
    6. ' (' → logprob: -13.43703556060791
    7. '	m' → logprob: -13.93703556060791
    8. '   ' → logprob: -13.93703556060791
    9. ')m' → logprob: -15.56203556060791
    10. ' range' → logprob: -16.687036514282227

Token 771: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03466331958770752
    2. '):' → logprob: -3.409663200378418
    3. ',' → logprob: -7.784663200378418
    4. ':' → logprob: -8.159663200378418
    5. '):
' → logprob: -9.034663200378418
    6. ':
' → logprob: -9.659663200378418
    7. ')' → logprob: -10.159663200378418
    8. '   ' → logprob: -10.284663200378418
    9. '():
' → logprob: -10.909663200378418
    10. '=' → logprob: -11.159663200378418

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34587207436561584
    2. 'a' → logprob: -1.5958720445632935
    3. '   ' → logprob: -2.845872163772583
    4. ' a' → logprob: -3.470872163772583
    5. '	a' → logprob: -7.845871925354004
    6. '	   ' → logprob: -11.095871925354004
    7. ',a' → logprob: -11.345871925354004
    8. 'b' → logprob: -11.470871925354004
    9. '    ' → logprob: -11.595871925354004
    10. ' ' → logprob: -11.720871925354004

Token 773: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00018506382184568793
    2. ' a' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.750185012817383
    4. 'ai' → logprob: -13.000185012817383
    5. '	a' → logprob: -15.125185012817383
    6. ' ai' → logprob: -17.625185012817383
    7. '_a' → logprob: -17.875185012817383
    8. 'int' → logprob: -18.250185012817383
    9. '    
' → logprob: -18.250185012817383
    10. '(a' → logprob: -18.375185012817383

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002608952345326543
    2. ' ,' → logprob: -7.002608776092529
    3. '_,' → logprob: -7.252608776092529
    4. '_i' → logprob: -7.877608776092529
    5. ',b' → logprob: -8.252609252929688
    6. 'i' → logprob: -8.627609252929688
    7. ',i' → logprob: -9.252609252929688
    8. ',_' → logprob: -10.252609252929688
    9. 'b' → logprob: -11.877609252929688
    10. '‌,' → logprob: -12.002609252929688

Token 775: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. 'c' → logprob: -21.251502990722656
    4. ',b' → logprob: -21.876502990722656
    5. '	b' → logprob: -22.876502990722656
    6. '<|end|>' → logprob: -23.876502990722656
    7. 'bc' → logprob: -24.251502990722656
    8. ' ' → logprob: -24.501502990722656
    9. '=b' → logprob: -24.501502990722656
    10. '>b' → logprob: -24.626502990722656

Token 776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.625004768371582
    3. 'c' → logprob: -14.000004768371582
    4. ',c' → logprob: -14.375004768371582
    5. '=' → logprob: -16.5000057220459
    6. '_,' → logprob: -17.7500057220459
    7. '‌,' → logprob: -18.8750057220459
    8. ' =' → logprob: -19.0000057220459
    9. '<|end|>' → logprob: -20.2500057220459
    10. 's' → logprob: -20.2500057220459

Token 777: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. '	c' → logprob: -17.875553131103516
    4. 'cost' → logprob: -18.500553131103516
    5. ' ' → logprob: -21.375553131103516
    6. '   ' → logprob: -21.750553131103516
    7. '_c' → logprob: -22.125553131103516
    8. '  ' → logprob: -22.375553131103516
    9. ')c' → logprob: -22.375553131103516
    10. 'ct' → logprob: -23.125553131103516

Token 778: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. ',' → logprob: -16.35020637512207
    4. '   ' → logprob: -17.22520637512207
    5. '＝' → logprob: -17.72520637512207
    6. 'a' → logprob: -17.85020637512207
    7. ')' → logprob: -18.10020637512207
    8. '=input' → logprob: -18.22520637512207
    9. ' ' → logprob: -18.47520637512207
    10. 'c' → logprob: -18.72520637512207

Token 779: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0031781906727701426
    2. ' map' → logprob: -5.753178119659424
    3. '	map' → logprob: -14.878178596496582
    4. 'list' → logprob: -16.753177642822266
    5. '(map' → logprob: -17.378177642822266
    6. 'm' → logprob: -17.503177642822266
    7. 'tuple' → logprob: -18.003177642822266
    8. '_map' → logprob: -19.128177642822266
    9. '.map' → logprob: -19.878177642822266
    10. '   ' → logprob: -20.128177642822266

Token 780: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.9292415749514475e-05
    2. 'int' → logprob: -10.750039100646973
    3. '=int' → logprob: -12.375039100646973
    4. '[int' → logprob: -12.375039100646973
    5. '(' → logprob: -12.625039100646973
    6. '(tuple' → logprob: -13.375039100646973
    7. '<int' → logprob: -13.625039100646973
    8. '(list' → logprob: -14.000039100646973
    9. ',int' → logprob: -14.125039100646973
    10. '(str' → logprob: -14.625039100646973

Token 781: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.38690125942230225
    2. '(input' → logprob: -1.5119012594223022
    3. ',' → logprob: -2.386901378631592
    4. 'input' → logprob: -4.886901378631592
    5. '=input' → logprob: -7.261901378631592
    6. '(' → logprob: -9.636900901794434
    7. '(),' → logprob: -10.386900901794434
    8. ')' → logprob: -10.636900901794434
    9. '   ' → logprob: -10.886900901794434
    10. ' input' → logprob: -11.011900901794434

Token 782: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.15310683415737e-05
    2. ' input' → logprob: -10.750021934509277
    3. '<input' → logprob: -23.25002098083496
    4. 'int' → logprob: -23.62502098083496
    5. '=input' → logprob: -23.87502098083496
    6. 'sys' → logprob: -24.00002098083496
    7. ',input' → logprob: -24.37502098083496
    8. '	input' → logprob: -24.50002098083496
    9. '(input' → logprob: -25.00002098083496
    10. '_input' → logprob: -25.00002098083496

Token 783: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9862216504407115e-05
    2. '()' → logprob: -10.875020027160645
    3. '())' → logprob: -14.250020027160645
    4. ' ().' → logprob: -15.875020027160645
    5. '(' → logprob: -16.875019073486328
    6. '()
' → logprob: -17.000019073486328
    7. ')' → logprob: -18.000019073486328
    8. '().__' → logprob: -18.125019073486328
    9. '.split' → logprob: -18.250019073486328
    10. '().'' → logprob: -18.625019073486328

Token 784: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.45848218582978e-06
    2. 'strip' → logprob: -13.37500286102295
    3. ' split' → logprob: -14.62500286102295
    4. 'rstrip' → logprob: -15.37500286102295
    5. '(split' → logprob: -16.375001907348633
    6. 'spl' → logprob: -18.375001907348633
    7. '.split' → logprob: -19.250001907348633
    8. ')' → logprob: -20.250001907348633
    9. '_split' → logprob: -20.250001907348633
    10. 'plit' → logprob: -21.125001907348633

Token 785: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038058020174503326
    2. ')
' → logprob: -3.288058042526245
    3. ')
' → logprob: -11.413058280944824
    4. ')`
' → logprob: -13.788058280944824
    5. '())' → logprob: -13.913058280944824
    6. ')`' → logprob: -14.288058280944824
    7. '   ' → logprob: -14.788058280944824
    8. '())
' → logprob: -14.913058280944824
    9. ' )' → logprob: -15.288058280944824
    10. ').' → logprob: -15.413058280944824

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005781737272627652
    2. ' edges' → logprob: -8.250577926635742
    3. '   ' → logprob: -8.875577926635742
    4. 'edges' → logprob: -9.000577926635742
    5. '<|end|>' → logprob: -10.375577926635742
    6. '(edges' → logprob: -11.625577926635742
    7. '        
' → logprob: -12.750577926635742
    8. '```' → logprob: -13.375577926635742
    9. ',' → logprob: -13.750577926635742
    10. '           ' → logprob: -13.750577926635742

Token 787: ' edges' (ID: 22569)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.186126708984375
    2. '       ' → logprob: -1.311126708984375
    3. ' edges' → logprob: -1.436126708984375
    4. 'graph' → logprob: -1.936126708984375
    5. 'edges' (adapté à ' edges') → logprob: -3.686126708984375
    6. '   ' → logprob: -4.311126708984375
    7. '	graph' → logprob: -5.436126708984375
    8. ' graphs' → logprob: -10.936126708984375
    9. '(edges' → logprob: -11.186126708984375
    10. 'graphs' → logprob: -11.561126708984375

Token 788: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008625566959381104
    2. '.' → logprob: -4.758625507354736
    3. '.app' → logprob: -12.008625984191895
    4. 'append' → logprob: -13.133625984191895
    5. '.ap' → logprob: -13.633625984191895
    6. '.Append' → logprob: -14.133625984191895
    7. ' .' → logprob: -14.883625984191895
    8. ').' → logprob: -15.133625984191895
    9. '].' → logprob: -16.008625030517578
    10. '​.' → logprob: -16.133625030517578

Token 789: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. '(a' → logprob: -16.875003814697266
    4. ' ((' → logprob: -20.125003814697266
    5. '(
' → logprob: -21.000003814697266
    6. '([' → logprob: -22.125003814697266
    7. '```' → logprob: -22.375003814697266
    8. '   ' → logprob: -22.875003814697266
    9. '[(' → logprob: -23.000003814697266
    10. '(((' → logprob: -23.500003814697266

Token 790: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2664456789934775e-06
    2. ' a' → logprob: -13.625000953674316
    3. '	a' → logprob: -19.625001907348633
    4. ')a' → logprob: -19.750001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '(a' → logprob: -21.000001907348633
    7. ''a' → logprob: -21.375001907348633
    8. ',a' → logprob: -21.750001907348633
    9. '"a' → logprob: -22.000001907348633
    10. '#a' → logprob: -22.250001907348633

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027813989436253905
    2. ',b' → logprob: -8.62527847290039
    3. ' ,' → logprob: -9.25027847290039
    4. ',
' → logprob: -13.75027847290039
    5. 'b' → logprob: -14.87527847290039
    6. '‌,' → logprob: -15.12527847290039
    7. ',c' → logprob: -15.62527847290039
    8. '<|end|>' → logprob: -16.00027847290039
    9. ')' → logprob: -16.37527847290039
    10. '',' → logprob: -16.50027847290039

Token 792: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. ')b' → logprob: -19.875553131103516
    4. '	b' → logprob: -22.500553131103516
    5. '<|end|>' → logprob: -23.625553131103516
    6. ')' → logprob: -23.750553131103516
    7. ',b' → logprob: -23.750553131103516
    8. ' ' → logprob: -24.000553131103516
    9. ',' → logprob: -24.250553131103516
    10. ' б' → logprob: -24.500553131103516

Token 793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014716439181938767
    2. ',c' → logprob: -8.875146865844727
    3. ' ,' → logprob: -11.875146865844727
    4. ',
' → logprob: -15.875146865844727
    5. 'c' → logprob: -16.375146865844727
    6. '),' → logprob: -16.625146865844727
    7. ')' → logprob: -17.125146865844727
    8. ',b' → logprob: -18.250146865844727
    9. ',C' → logprob: -18.625146865844727
    10. ',p' → logprob: -18.750146865844727

Token 794: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25192946195602417
    2. ' c' → logprob: -1.501929521560669
    3. ')c' → logprob: -15.75192928314209
    4. '	c' → logprob: -16.126930236816406
    5. ' ' → logprob: -17.126930236816406
    6. ' ' → logprob: -17.251930236816406
    7. '   ' → logprob: -17.626930236816406
    8. ',c' → logprob: -18.126930236816406
    9. '    ' → logprob: -18.626930236816406
    10. ')' → logprob: -18.876930236816406

Token 795: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011472448240965605
    2. ')' → logprob: -6.876147270202637
    3. '))
' → logprob: -9.126147270202637
    4. ' ))' → logprob: -12.876147270202637
    5. ',' → logprob: -13.126147270202637
    6. '));' → logprob: -14.751147270202637
    7. '),' → logprob: -15.126147270202637
    8. ')
' → logprob: -15.626147270202637
    9. ')))' → logprob: -15.876147270202637
    10. '   ' → logprob: -16.50114631652832

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.779520092299208e-05
    2. 'graph' → logprob: -10.875078201293945
    3. '<|end|>' → logprob: -11.125078201293945
    4. '        
' → logprob: -11.375078201293945
    5. '	graph' → logprob: -11.625078201293945
    6. ' graph' → logprob: -11.750078201293945
    7. '   ' → logprob: -12.500078201293945
    8. '```' → logprob: -12.625078201293945
    9. '[' → logprob: -13.125078201293945
    10. '	' → logprob: -13.375078201293945

Token 797: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.16062518954277039
    2. ' graph' → logprob: -1.9106252193450928
    3. '   ' → logprob: -7.910624980926514
    4. '	graph' → logprob: -10.535625457763672
    5. '       ' → logprob: -11.910625457763672
    6. '    ' → logprob: -15.535625457763672
    7. '```' → logprob: -15.785625457763672
    8. '_graph' → logprob: -15.910625457763672
    9. '(graph' → logprob: -16.035625457763672
    10. '           ' → logprob: -16.660625457763672

Token 798: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.088346359931165e-07
    2. 'a' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.375
    4. '[' → logprob: -16.875
    5. ' [' → logprob: -17.125
    6. ')[' → logprob: -17.375
    7. '[b' → logprob: -18.0
    8. '```' → logprob: -18.125
    9. '[u' → logprob: -18.75
    10. '
' → logprob: -18.875

Token 799: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01777012087404728
    2. ').' → logprob: -4.267770290374756
    3. '.append' → logprob: -5.892770290374756
    4. ',' → logprob: -7.392770290374756
    5. '.' → logprob: -8.642769813537598
    6. '   ' → logprob: -10.642769813537598
    7. '       ' → logprob: -11.267769813537598
    8. ' ].' → logprob: -12.517769813537598
    9. ']' → logprob: -12.767769813537598
    10. '           ' → logprob: -13.892769813537598

Token 800: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -15.000000953674316
    3. ' append' → logprob: -15.750000953674316
    4. '_append' → logprob: -16.875
    5. 'app' → logprob: -18.75
    6. 'push' → logprob: -19.375
    7. 'appen' → logprob: -19.75
    8. 'Append' → logprob: -20.5
    9. 'pend' → logprob: -21.0
    10. '	append' → logprob: -21.375

Token 801: '((' (ID: 2054)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.007026745937764645
    2. ' (' → logprob: -5.507026672363281
    3. '((' → logprob: -6.257026672363281
    4. '(' → logprob: -6.882026672363281
    5. '(B' → logprob: -14.382026672363281
    6. '(
' → logprob: -15.882026672363281
    7. '(v' → logprob: -16.13202667236328
    8. '   ' → logprob: -17.38202667236328
    9. '([' → logprob: -17.50702667236328
    10. '[(' → logprob: -17.50702667236328

Token 802: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.512236498361744e-07
    2. ' b' → logprob: -14.500000953674316
    3. ')b' → logprob: -21.125
    4. '	b' → logprob: -22.0
    5. '(b' → logprob: -24.125
    6. '   ' → logprob: -24.125
    7. ',b' → logprob: -24.5
    8. '>b' → logprob: -25.375
    9. '```' → logprob: -26.5
    10. ''b' → logprob: -26.5

Token 803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001613459608051926
    2. ' ,' → logprob: -9.125161170959473
    3. ',c' → logprob: -9.875161170959473
    4. 'c' → logprob: -14.000161170959473
    5. ',
' → logprob: -17.00016212463379
    6. '‌,' → logprob: -17.62516212463379
    7. ' c' → logprob: -18.25016212463379
    8. '<|end|>' → logprob: -18.62516212463379
    9. '),' → logprob: -19.87516212463379
    10. '```' → logprob: -19.87516212463379

Token 804: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029750604182481766
    2. ' c' → logprob: -3.5297505855560303
    3. ')c' → logprob: -16.15475082397461
    4. '	c' → logprob: -17.27975082397461
    5. ',c' → logprob: -17.52975082397461
    6. ' ' → logprob: -19.90475082397461
    7. '   ' → logprob: -20.52975082397461
    8. '$c' → logprob: -20.52975082397461
    9. '(c' → logprob: -20.65475082397461
    10. ' ' → logprob: -20.77975082397461

Token 805: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002647927321959287
    2. '))' → logprob: -8.250265121459961
    3. ')
' → logprob: -13.625265121459961
    4. ')}' → logprob: -13.625265121459961
    5. ' )' → logprob: -14.625265121459961
    6. '<|end|>' → logprob: -15.250265121459961
    7. '),' → logprob: -16.50026512145996
    8. ')#' → logprob: -16.75026512145996
    9. '       ' → logprob: -16.87526512145996
    10. '   ' → logprob: -17.00026512145996

Token 806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004641829989850521
    2. 'rev' → logprob: -5.379642009735107
    3. ' rev' → logprob: -11.00464153289795
    4. '   ' → logprob: -12.50464153289795
    5. '           ' → logprob: -15.12964153289795
    6. 're' → logprob: -15.25464153289795
    7. '      ' → logprob: -15.37964153289795
    8. '     ' → logprob: -15.87964153289795
    9. '```' → logprob: -16.254642486572266
    10. '_rev' → logprob: -16.379642486572266

Token 807: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' (adapté à ' rev') → logprob: -3.786196975852363e-05
    2. ' rev' → logprob: -10.250038146972656
    3. '       ' → logprob: -13.000038146972656
    4. '   ' → logprob: -16.000038146972656
    5. 'rep' → logprob: -17.500038146972656
    6. '
' → logprob: -18.000038146972656
    7. '.rev' → logprob: -19.250038146972656
    8. '        
' → logprob: -19.500038146972656
    9. '_rev' → logprob: -19.750038146972656
    10. '           ' → logprob: -19.750038146972656

Token 808: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -7.896309739408025e-07
    2. 'graph' → logprob: -15.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_g' → logprob: -17.25
    5. ' _' → logprob: -17.375
    6. 'raph' → logprob: -17.5
    7. '_GRAPH' → logprob: -17.5
    8. ')_' → logprob: -17.875
    9. '_game' → logprob: -17.875
    10. '_gr' → logprob: -18.875

Token 809: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.292907877039397e-06
    2. ' [' → logprob: -13.12500286102295
    3. '[' → logprob: -13.75000286102295
    4. 'b' → logprob: -15.50000286102295
    5. '[c' → logprob: -17.750003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '	b' → logprob: -18.500003814697266
    8. '```' → logprob: -18.750003814697266
    9. '
' → logprob: -18.875003814697266
    10. ' ' → logprob: -19.750003814697266

Token 810: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.16541439294815063
    2. '.append' → logprob: -1.9154143333435059
    3. '].' → logprob: -5.290414333343506
    4. '.' → logprob: -9.415414810180664
    5. '   ' → logprob: -10.790414810180664
    6. ')' → logprob: -11.915414810180664
    7. ',' → logprob: -11.915414810180664
    8. '}.' → logprob: -12.040414810180664
    9. '       ' → logprob: -12.415414810180664
    10. ' ).' → logprob: -12.790414810180664

Token 811: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.0
    3. ' append' → logprob: -17.5
    4. 'appen' → logprob: -17.75
    5. 'app' → logprob: -19.375
    6. 'Append' → logprob: -20.5
    7. '	append' → logprob: -20.75
    8. '_append' → logprob: -22.25
    9. '```' → logprob: -22.625
    10. 'push' → logprob: -22.75

Token 812: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.541112427134067e-05
    2. '(a' → logprob: -9.500075340270996
    3. '(' → logprob: -15.250075340270996
    4. ' (' → logprob: -15.875075340270996
    5. '   ' → logprob: -17.000076293945312
    6. '(
' → logprob: -17.375076293945312
    7. ' ((' → logprob: -17.500076293945312
    8. '[(' → logprob: -18.125076293945312
    9. '(A' → logprob: -19.250076293945312
    10. ',' → logprob: -19.500076293945312

Token 813: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.372294698550832e-06
    2. '(a' → logprob: -11.625009536743164
    3. ' a' → logprob: -15.125009536743164
    4. ',a' → logprob: -16.750009536743164
    5. ' (' → logprob: -17.875009536743164
    6. '(' → logprob: -17.875009536743164
    7. ',' → logprob: -19.125009536743164
    8. ')a' → logprob: -19.125009536743164
    9. '
' → logprob: -19.625009536743164
    10. '[a' → logprob: -19.875009536743164

Token 814: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015359772078227252
    2. ',c' → logprob: -9.375153541564941
    3. ' ,' → logprob: -9.625153541564941
    4. 'c' → logprob: -12.875153541564941
    5. ',
' → logprob: -17.375154495239258
    6. '),' → logprob: -18.250154495239258
    7. '‌,' → logprob: -18.750154495239258
    8. ' c' → logprob: -18.750154495239258
    9. ' ' → logprob: -19.125154495239258
    10. '```' → logprob: -19.500154495239258

Token 815: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019286326132714748
    2. ' c' → logprob: -6.251928806304932
    3. ')c' → logprob: -17.751928329467773
    4. '	c' → logprob: -18.126928329467773
    5. ',c' → logprob: -18.501928329467773
    6. '   ' → logprob: -18.501928329467773
    7. ' ' → logprob: -18.626928329467773
    8. ',' → logprob: -19.126928329467773
    9. ')' → logprob: -19.626928329467773
    10. '
' → logprob: -20.001928329467773

Token 816: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003195066237822175
    2. ')' → logprob: -5.753195285797119
    3. '))
' → logprob: -11.003194808959961
    4. ')
' → logprob: -15.378194808959961
    5. ')))' → logprob: -15.628194808959961
    6. ' ))' → logprob: -15.878194808959961
    7. '))

' → logprob: -16.37819480895996
    8. '   ' → logprob: -16.62819480895996
    9. '       ' → logprob: -17.00319480895996
    10. '));' → logprob: -18.75319480895996

Token 817: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3457903563976288
    2. '    
' → logprob: -1.5957903861999512
    3. '   ' → logprob: -2.470790386199951
    4. 'dist' → logprob: -5.345790386199951
    5. '  
' → logprob: -8.845789909362793
    6. '        
' → logprob: -10.220789909362793
    7. '```' → logprob: -10.470789909362793
    8. '
' → logprob: -10.720789909362793
    9. ' dist' → logprob: -10.845789909362793
    10. '   
' → logprob: -11.220789909362793

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03807660564780235
    2. 'dist' → logprob: -3.288076639175415
    3. ' dist' → logprob: -10.413076400756836
    4. '	dist' → logprob: -13.038076400756836
    5. '    
' → logprob: -13.163076400756836
    6. '```' → logprob: -14.538076400756836
    7. '
' → logprob: -15.913076400756836
    8. '(dist' → logprob: -16.163076400756836
    9. '_dist' → logprob: -16.413076400756836
    10. '       ' → logprob: -16.538076400756836

Token 819: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.4140441635390744e-05
    2. '   ' → logprob: -11.250014305114746
    3. ' dist' → logprob: -14.250014305114746
    4. '    
' → logprob: -14.875014305114746
    5. '```' → logprob: -17.00001335144043
    6. '	dist' → logprob: -18.25001335144043
    7. '
' → logprob: -19.12501335144043
    8. 'Dist' → logprob: -19.87501335144043
    9. '#' (adapté à ' #') → logprob: -20.37501335144043
    10. '_dist' → logprob: -20.50001335144043

Token 820: ' Distance' (ID: 53583)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.4849443838757e-06
    2. '   ' → logprob: -12.875004768371582
    3. ' dist' → logprob: -13.750004768371582
    4. '#' → logprob: -14.250004768371582
    5. '    
' → logprob: -17.000003814697266
    6. '
' → logprob: -17.125003814697266
    7. 'Dist' → logprob: -18.125003814697266
    8. '```' → logprob: -18.375003814697266
    9. 'd' → logprob: -18.500003814697266
    10. '	dist' → logprob: -18.625003814697266

Token 821: ' depuis' (ID: 16277)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29489997029304504
    2. 'dist' → logprob: -2.4198999404907227
    3. ' =' → logprob: -2.7948999404907227
    4. 'from' → logprob: -2.9198999404907227
    5. 's' → logprob: -3.4198999404907227
    6. '=' → logprob: -4.544899940490723
    7. 'de' → logprob: -5.044899940490723
    8. '_from' → logprob: -7.169899940490723
    9. '_dist' → logprob: -8.294899940490723
    10. ' from' → logprob: -8.919899940490723

Token 822: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3954463510308415e-05
    2. ' ' → logprob: -9.875054359436035
    3. 'l' → logprob: -14.625054359436035
    4. '(' → logprob: -14.750054359436035
    5. 'le' → logprob: -14.875054359436035
    6. 'la' → logprob: -14.875054359436035
    7. '   ' → logprob: -15.625054359436035
    8. ' la' → logprob: -16.00005340576172
    9. 'start' → logprob: -16.12505340576172
    10. 's' → logprob: -16.62505340576172

Token 823: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'dist' → logprob: -15.25
    3. ' ' → logprob: -17.5
    4. 'le' → logprob: -18.375
    5. 'la' → logprob: -18.5
    6. 'start' → logprob: -18.5
    7. '１' → logprob: -18.75
    8. 'l' → logprob: -18.75
    9. 'les' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 824: ' vers' (ID: 3640)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08514069020748138
    2. 'dist' → logprob: -2.9601407051086426
    3. '=' → logprob: -3.7101407051086426
    4. ' dist' → logprob: -5.710140705108643
    5. '   ' → logprob: -7.085140705108643
    6. '(dist' → logprob: -7.710140705108643
    7. ':' → logprob: -8.085140228271484
    8. ')' → logprob: -9.085140228271484
    9. '[' → logprob: -9.210140228271484
    10. ' ' → logprob: -9.960140228271484

Token 825: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.17697535455226898
    2. 't' → logprob: -3.0519752502441406
    3. 'tout' → logprob: -3.1769752502441406
    4. ' tous' → logprob: -3.4269752502441406
    5. '1' → logprob: -4.426975250244141
    6. '2' → logprob: -4.551975250244141
    7. 'dist' → logprob: -5.301975250244141
    8. ' all' → logprob: -5.301975250244141
    9. 'Tous' → logprob: -5.926975250244141
    10. 'les' → logprob: -6.301975250244141

Token 826: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.158135324716568
    2. ' les' → logprob: -2.033135414123535
    3. '<|end|>' → logprob: -5.158135414123535
    4. 'dist' → logprob: -5.533135414123535
    5. 's' → logprob: -6.533135414123535
    6. '(dist' → logprob: -6.658135414123535
    7. ',' → logprob: -7.533135414123535
    8. '(' → logprob: -8.408135414123535
    9. 'es' → logprob: -8.533135414123535
    10. '[' → logprob: -8.658135414123535

Token 827: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10253405570983887
    2. 'som' → logprob: -2.352534055709839
    3. 'no' → logprob: -6.602534294128418
    4. 'n' → logprob: -7.727534294128418
    5. 'nodes' → logprob: -8.102534294128418
    6. 'points' → logprob: -9.352534294128418
    7. 'vertices' → logprob: -10.102534294128418
    8. ' somm' → logprob: -10.102534294128418
    9. '```' → logprob: -10.977534294128418
    10. 'No' → logprob: -11.102534294128418

Token 828: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -3.011373155459296e-05
    2. 'et' → logprob: -10.875030517578125
    3. 'êts' → logprob: -11.875030517578125
    4. 'è' → logprob: -13.250030517578125
    5. 'ètes' → logprob: -13.875030517578125
    6. 'mets' → logprob: -14.875030517578125
    7. 'ats' → logprob: -15.000030517578125
    8. 'ts' → logprob: -16.000030517578125
    9. '#' → logprob: -16.000030517578125
    10. 'etes' → logprob: -16.375030517578125

Token 829: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5808461308479309
    2. '   ' → logprob: -0.8308461308479309
    3. ' dist' → logprob: -5.330846309661865
    4. '	dist' → logprob: -10.580845832824707
    5. '(dist' → logprob: -10.955845832824707
    6. '_dist' → logprob: -12.455845832824707
    7. '    
' → logprob: -12.705845832824707
    8. '
' → logprob: -13.455845832824707
    9. '  ' → logprob: -13.705845832824707
    10. '.dist' → logprob: -13.830845832824707

Token 830: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048638008534908295
    2. 'dist' → logprob: -3.048638105392456
    3. ' dist' → logprob: -10.298638343811035
    4. '	dist' → logprob: -11.548638343811035
    5. '    
' → logprob: -12.798638343811035
    6. '(dist' → logprob: -13.048638343811035
    7. '
' → logprob: -14.673638343811035
    8. '   ' → logprob: -14.798638343811035
    9. '  ' → logprob: -15.048638343811035
    10. '_dist' → logprob: -15.048638343811035

Token 831: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -1.4140441635390744e-05
    2. ' dist' → logprob: -11.750014305114746
    3. '   ' → logprob: -12.000014305114746
    4. '	dist' → logprob: -18.50001335144043
    5. '```' → logprob: -18.87501335144043
    6. '    
' → logprob: -19.12501335144043
    7. 'Dist' → logprob: -19.62501335144043
    8. '_dist' → logprob: -20.50001335144043
    9. '
' → logprob: -21.12501335144043
    10. '(dist' → logprob: -21.25001335144043

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' =' → logprob: -10.875021934509277
    3. '_' → logprob: -13.000021934509277
    4. '=' → logprob: -14.250021934509277
    5. '```' → logprob: -16.375022888183594
    6. '[' → logprob: -17.875022888183594
    7. ' ' → logprob: -18.625022888183594
    8. '１' → logprob: -19.125022888183594
    9. '   ' → logprob: -19.250022888183594
    10. 'from' → logprob: -19.500022888183594

Token 833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474078506231308
    2. '=' → logprob: -0.9740785360336304
    3. '[' → logprob: -14.349078178405762
    4. ')' → logprob: -14.599078178405762
    5. ',' → logprob: -15.599078178405762
    6. '＝' → logprob: -16.474079132080078
    7. ']' → logprob: -17.474079132080078
    8. ' ' → logprob: -17.599079132080078
    9. ')=' → logprob: -17.599079132080078
    10. '=[' → logprob: -17.849079132080078

Token 834: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007099286303855479
    2. ' d' → logprob: -7.2507100105285645
    3. '	d' → logprob: -20.000709533691406
    4. '   ' → logprob: -21.625709533691406
    5. '(d' → logprob: -22.000709533691406
    6. '_d' → logprob: -22.875709533691406
    7. '.d' → logprob: -23.625709533691406
    8. '[d' → logprob: -24.250709533691406
    9. ' ' → logprob: -24.375709533691406
    10. 'dist' → logprob: -24.500709533691406

Token 835: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -7.3458322731312364e-06
    2. 'ijk' → logprob: -12.250007629394531
    3. 'ij' → logprob: -13.000007629394531
    4. 'jik' → logprob: -15.500007629394531
    5. '[i' → logprob: -17.87500762939453
    6. 'j' → logprob: -18.50000762939453
    7. 'i' → logprob: -18.50000762939453
    8. '(' → logprob: -18.50000762939453
    9. 'ijks' → logprob: -18.75000762939453
    10. 'ist' → logprob: -18.75000762939453

Token 836: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.000000953674316
    3. ' (' → logprob: -18.25
    4. '(
' → logprob: -18.625
    5. 'def' → logprob: -21.125
    6. '((' → logprob: -21.875
    7. '```' → logprob: -22.625
    8. '[' → logprob: -22.625
    9. ')' → logprob: -23.125
    10. ')(' → logprob: -23.5

Token 837: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '(' → logprob: -19.5
    4. '   ' → logprob: -20.625
    5. ')' → logprob: -20.875
    6. '```' → logprob: -22.375
    7. '
' → logprob: -24.375
    8. '１' → logprob: -24.5
    9. '[' → logprob: -24.75
    10. '`' → logprob: -25.25

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.125001907348633
    3. ',
' → logprob: -17.000001907348633
    4. '(graph' → logprob: -17.125001907348633
    5. 'graph' → logprob: -19.250001907348633
    6. ')' → logprob: -19.750001907348633
    7. '
' → logprob: -20.250001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '```' → logprob: -21.375001907348633
    10. '),' → logprob: -21.500001907348633

Token 839: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.676292231422849e-05
    2. ' graph' → logprob: -11.000017166137695
    3. '(graph' → logprob: -18.625017166137695
    4. '	graph' → logprob: -19.125017166137695
    5. 'graphql' → logprob: -22.625017166137695
    6. 'Graph' → logprob: -22.750017166137695
    7. '_graph' → logprob: -22.875017166137695
    8. 'graphs' → logprob: -23.500017166137695
    9. ')' → logprob: -24.125017166137695
    10. '   ' → logprob: -24.125017166137695

Token 840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040934275602921844
    2. ')' → logprob: -7.875409126281738
    3. ',n' → logprob: -10.625409126281738
    4. ' ,' → logprob: -12.375409126281738
    5. '   ' → logprob: -14.500409126281738
    6. ',)' → logprob: -16.625410079956055
    7. ' )' → logprob: -18.125410079956055
    8. ',
' → logprob: -18.750410079956055
    9. ' ' → logprob: -19.875410079956055
    10. 'n' → logprob: -19.875410079956055

Token 841: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.250000953674316
    3. ')n' → logprob: -19.75
    4. '	n' → logprob: -20.625
    5. '   ' → logprob: -23.125
    6. '
' → logprob: -23.625
    7. ')' → logprob: -24.25
    8. '$n' → logprob: -25.75
    9. '```' → logprob: -25.875
    10. '[n' → logprob: -26.125

Token 842: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -16.625001907348633
    4. ')

' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.875001907348633
    6. ')#' → logprob: -18.625001907348633
    7. '),' → logprob: -19.375001907348633
    8. ')
' → logprob: -19.500001907348633
    9. '))' → logprob: -19.625001907348633
    10. ').' → logprob: -20.375001907348633

Token 843: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002253506798297167
    2. '#' → logprob: -6.252253532409668
    3. 'dist' → logprob: -8.127253532409668
    4. '    
' → logprob: -10.627253532409668
    5. '
' → logprob: -12.752253532409668
    6. '```' → logprob: -13.877253532409668
    7. ' #' → logprob: -14.502253532409668
    8. ' dist' → logprob: -14.752253532409668
    9. '	dist' → logprob: -15.752253532409668
    10. '   ' → logprob: -16.25225257873535

Token 844: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5047203898429871
    2. 'dist' → logprob: -1.0047204494476318
    3. '#' (adapté à ' #') → logprob: -3.504720449447632
    4. ' dist' → logprob: -9.254720687866211
    5. '	dist' → logprob: -12.004720687866211
    6. ' #' → logprob: -12.254720687866211
    7. '```' → logprob: -12.379720687866211
    8. '    
' → logprob: -12.879720687866211
    9. '
' → logprob: -12.879720687866211
    10. '  ' → logprob: -13.254720687866211

Token 845: ' Distance' (ID: 53583)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006781334988772869
    2. '#' → logprob: -5.006781101226807
    3. ' dist' → logprob: -10.381781578063965
    4. '   ' → logprob: -10.381781578063965
    5. 'Dist' → logprob: -13.006781578063965
    6. '	dist' → logprob: -14.506781578063965
    7. '
' → logprob: -15.131781578063965
    8. 'distance' → logprob: -15.131781578063965
    9. 'Distance' → logprob: -15.131781578063965
    10. ' #' → logprob: -15.756781578063965

Token 846: ' depuis' (ID: 16277)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012565688230097294
    2. 'dist' → logprob: -4.512565612792969
    3. 'from' → logprob: -6.637565612792969
    4. '   ' → logprob: -9.387565612792969
    5. ' dist' → logprob: -10.262565612792969
    6. 'rev' → logprob: -10.387565612792969
    7. ' from' → logprob: -11.512565612792969
    8. '(' → logprob: -11.762565612792969
    9. 'dep' → logprob: -11.762565612792969
    10. '(dist' → logprob: -12.387565612792969

Token 847: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. 'd' → logprob: -14.875004768371582
    4. '   ' → logprob: -15.750004768371582
    5. '(' → logprob: -16.000003814697266
    6. 'def' → logprob: -18.375003814697266
    7. '  ' → logprob: -18.500003814697266
    8. 'dist' → logprob: -19.750003814697266
    9. '２' → logprob: -19.875003814697266
    10. '۲' → logprob: -19.875003814697266

Token 848: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.463036435074173e-05
    2. 'd' → logprob: -10.750024795532227
    3. ' ' → logprob: -13.125024795532227
    4. 'dist' → logprob: -14.500024795532227
    5. 'def' → logprob: -16.000024795532227
    6. '２' → logprob: -16.000024795532227
    7. '   ' → logprob: -16.125024795532227
    8. '۲' → logprob: -16.500024795532227
    9. 'de' → logprob: -16.625024795532227
    10. '  ' → logprob: -17.687524795532227

Token 849: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032505206763744354
    2. '=' → logprob: -4.282505035400391
    3. ' =' → logprob: -4.657505035400391
    4. '   ' → logprob: -5.157505035400391
    5. '(' → logprob: -6.657505035400391
    6. '2' → logprob: -7.407505035400391
    7. ' ,' → logprob: -7.907505035400391
    8. '(dist' → logprob: -8.03250503540039
    9. 'dist' → logprob: -8.65750503540039
    10. ' dist' → logprob: -9.53250503540039

Token 850: ' tous' (ID: 10688)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014170228969305754
    2. 'rev' → logprob: -6.62641716003418
    3. 'dist' → logprob: -9.75141716003418
    4. ' ' → logprob: -10.75141716003418
    5. 'n' → logprob: -12.50141716003418
    6. 're' → logprob: -12.87641716003418
    7. ' rev' → logprob: -13.00141716003418
    8. ' dist' → logprob: -14.12641716003418
    9. '   ' → logprob: -15.25141716003418
    10. 'the' → logprob: -15.37641716003418

Token 851: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3343057334423065
    2. 'dist' → logprob: -2.084305763244629
    3. '(dist' → logprob: -2.334305763244629
    4. '(' → logprob: -3.584305763244629
    5. ' les' → logprob: -4.459305763244629
    6. '2' → logprob: -4.959305763244629
    7. '   ' → logprob: -5.084305763244629
    8. 'rev' → logprob: -5.084305763244629
    9. 'le' → logprob: -6.709305763244629
    10. '(n' → logprob: -7.459305763244629

Token 852: ' somm' (ID: 44830)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.4414331018924713
    2. 's' → logprob: -1.316433072090149
    3. ' somm' → logprob: -3.5664331912994385
    4. 'graph' → logprob: -3.9414331912994385
    5. 'som' → logprob: -4.191432952880859
    6. 'summ' → logprob: -4.566432952880859
    7. 'dist' → logprob: -4.941432952880859
    8. ' sommet' → logprob: -5.441432952880859
    9. ' rev' → logprob: -6.441432952880859
    10. ' graph' → logprob: -7.691432952880859

Token 853: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0006196272443048656
    2. 'es' → logprob: -7.625619411468506
    3. 'et' → logprob: -9.000619888305664
    4. 'ats' → logprob: -13.625619888305664
    5. 'êts' → logprob: -13.625619888305664
    6. 'e' → logprob: -13.875619888305664
    7. 'ètres' → logprob: -14.375619888305664
    8. '#' → logprob: -14.375619888305664
    9. '[' → logprob: -14.500619888305664
    10. 'és' → logprob: -14.625619888305664

Token 854: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043938878923654556
    2. 'dist' → logprob: -3.4189388751983643
    3. ' dist' → logprob: -5.293939113616943
    4. 'rev' → logprob: -6.293939113616943
    5. '=' → logprob: -6.668939113616943
    6. '(dist' → logprob: -7.543939113616943
    7. '  ' → logprob: -7.918939113616943
    8. '2' → logprob: -7.918939113616943
    9. ' =' → logprob: -7.918939113616943
    10. ' rev' → logprob: -8.543938636779785

Token 855: ' le' (ID: 505)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -2.2603901015827432e-05
    2. ' rev' → logprob: -11.250022888183594
    3. 'l' → logprob: -12.500022888183594
    4. 'le' → logprob: -12.750022888183594
    5. 'reverse' → logprob: -13.250022888183594
    6. 'rep' → logprob: -14.125022888183594
    7. '```' → logprob: -15.750022888183594
    8. 'la' → logprob: -17.250022888183594
    9. '.rev' → logprob: -17.375022888183594
    10. '_rev' → logprob: -17.625022888183594

Token 856: ' grap' (ID: 60955)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -6.2729995988775045e-06
    2. ' rev' → logprob: -12.375006675720215
    3. 'reverse' → logprob: -14.000006675720215
    4. 'rep' → logprob: -14.500006675720215
    5. 'n' → logprob: -15.375006675720215
    6. '```' → logprob: -15.750006675720215
    7. 're' → logprob: -16.3750057220459
    8. 'revet' → logprob: -16.3750057220459
    9. 'r' → logprob: -16.8750057220459
    10. 'inv' → logprob: -17.7500057220459

Token 857: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.00041339205927215517
    2. 'h' → logprob: -8.250412940979004
    3. 'phe' → logprob: -9.750412940979004
    4. 'che' → logprob: -11.125412940979004
    5. 'e' → logprob: -11.625412940979004
    6. '#' → logprob: -11.750412940979004
    7. '_' → logprob: -11.875412940979004
    8. 'aphe' → logprob: -12.125412940979004
    9. '_he' → logprob: -12.375412940979004
    10. '[' → logprob: -12.375412940979004

Token 858: ' original' (ID: 4756)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.007783115841448307
    2. ' inverse' → logprob: -5.382782936096191
    3. 'in' → logprob: -6.382782936096191
    4. 'rev' → logprob: -7.007782936096191
    5. 'inv' → logprob: -7.757782936096191
    6. '_inverse' → logprob: -9.757782936096191
    7. 'reverse' → logprob: -10.132782936096191
    8. ' invers' → logprob: -10.757782936096191
    9. 'invert' → logprob: -12.257782936096191
    10. 're' → logprob: -12.507782936096191

Token 859: ',
' (ID: 412)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3712065815925598
    2. 'rev' → logprob: -1.871206521987915
    3. '   ' → logprob: -2.121206521987915
    4. ' dist' → logprob: -3.621206521987915
    5. '=' → logprob: -5.996206760406494
    6. '(dist' → logprob: -5.996206760406494
    7. ' =' → logprob: -6.246206760406494
    8. ' rev' → logprob: -6.871206760406494
    9. ',' → logprob: -7.621206760406494
    10. ' (' → logprob: -7.871206760406494

Token 860: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5990234017372131
    2. 'dist' → logprob: -0.8490234017372131
    3. ' dist' → logprob: -3.8490233421325684
    4. 'rev' → logprob: -6.974023342132568
    5. '#' → logprob: -8.474023818969727
    6. '	dist' → logprob: -8.724023818969727
    7. '  ' → logprob: -9.724023818969727
    8. ' rev' → logprob: -10.099023818969727
    9. '(dist' → logprob: -10.099023818969727
    10. '    ' → logprob: -10.474023818969727

Token 861: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023411085829138756
    2. '   ' → logprob: -4.273411273956299
    3. ' dist' → logprob: -4.773411273956299
    4. '#' (adapté à ' #') → logprob: -7.273411273956299
    5. 'rev' → logprob: -10.89841079711914
    6. '	dist' → logprob: -10.89841079711914
    7. '  ' → logprob: -11.64841079711914
    8. '(dist' → logprob: -12.77341079711914
    9. '    ' → logprob: -13.02341079711914
    10. '       ' → logprob: -13.52341079711914

Token 862: ' donc' (ID: 14206)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007803934160619974
    2. '   ' → logprob: -5.382803916931152
    3. ' dist' → logprob: -5.882803916931152
    4. '#' → logprob: -7.882803916931152
    5. '	dist' → logprob: -11.757803916931152
    6. '(dist' → logprob: -13.257803916931152
    7. '  ' → logprob: -13.632803916931152
    8. ' #' → logprob: -13.757803916931152
    9. ' ' → logprob: -14.382803916931152
    10. '.dist' → logprob: -14.632803916931152

Token 863: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05226493626832962
    2. ' dist' → logprob: -3.927264928817749
    3. 'd' → logprob: -4.052265167236328
    4. 'dans' → logprob: -4.427265167236328
    5. '#' → logprob: -8.052265167236328
    6. '   ' → logprob: -8.177265167236328
    7. ' dans' → logprob: -8.427265167236328
    8. 'la' → logprob: -8.677265167236328
    9. 'rev' → logprob: -8.802265167236328
    10. ' d' → logprob: -8.802265167236328

Token 864: ' de' (ID: 334)
  Prédit: 'dep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dep' → logprob: -0.027957284823060036
    2. '2' → logprob: -4.152957439422607
    3. '=' → logprob: -5.902957439422607
    4. 'from' → logprob: -6.152957439422607
    5. 'dans' → logprob: -6.527957439422607
    6. 'inverse' → logprob: -6.527957439422607
    7. ' depuis' → logprob: -7.027957439422607
    8. ' =' → logprob: -7.152957439422607
    9. 'rev' → logprob: -7.277957439422607
    10. 'de' → logprob: -7.402957439422607

Token 865: ' chaque' (ID: 21194)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.028224563226103783
    2. 'd' → logprob: -3.653224468231201
    3. 'de' → logprob: -6.903224468231201
    4. ' ' → logprob: -7.778224468231201
    5. 'dist' → logprob: -8.52822494506836
    6. ' d' → logprob: -9.02822494506836
    7. 'l' → logprob: -9.40322494506836
    8. 'rev' → logprob: -10.15322494506836
    9. ' deux' → logprob: -10.65322494506836
    10. ' dist' → logprob: -12.40322494506836

Token 866: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.02973613701760769
    2. 's' → logprob: -4.404736042022705
    3. 'no' → logprob: -4.404736042022705
    4. '```' → logprob: -6.404736042022705
    5. 'n' → logprob: -6.529736042022705
    6. 'point' → logprob: -7.654736042022705
    7. 'node' → logprob: -7.904736042022705
    8. ' sommet' → logprob: -8.029736518859863
    9. 'x' → logprob: -8.904736518859863
    10. 'vertex' → logprob: -9.029736518859863

Token 867: ' vers' (ID: 3640)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.1964418739080429
    2. 'vers' → logprob: -2.321441888809204
    3. ' à' → logprob: -3.821441888809204
    4. 'dep' → logprob: -4.196441650390625
    5. 'jus' → logprob: -4.571441650390625
    6. 'au' → logprob: -5.071441650390625
    7. ' vers' → logprob: -5.071441650390625
    8. '```' → logprob: -5.071441650390625
    9. '   ' → logprob: -5.446441650390625
    10. ' jusqu' → logprob: -6.071441650390625

Token 868: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.587483221665025e-05
    2. ' ' → logprob: -9.750065803527832
    3. '```' → logprob: -12.375065803527832
    4. '   ' → logprob: -13.375065803527832
    5. '1' → logprob: -13.500065803527832
    6. 'de' → logprob: -15.625065803527832
    7. '  ' → logprob: -16.75006675720215
    8. ' deux' → logprob: -17.75006675720215
    9. ' ' → logprob: -17.87506675720215
    10. '
' → logprob: -17.87506675720215

Token 869: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.25000762939453
    4. '   ' → logprob: -16.50000762939453
    5. '  ' → logprob: -18.00000762939453
    6. '۲' → logprob: -18.12500762939453
    7. 'de' → logprob: -18.25000762939453
    8. '
' → logprob: -18.75000762939453
    9. '２' → logprob: -19.12500762939453
    10. ' deux' → logprob: -19.62500762939453

Token 870: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18713310360908508
    2. '   ' → logprob: -2.4371330738067627
    3. '=' → logprob: -2.5621330738067627
    4. 'dist' → logprob: -5.437133312225342
    5. ' dist' → logprob: -7.437133312225342
    6. ',' → logprob: -7.437133312225342
    7. '(dist' → logprob: -7.687133312225342
    8. ' in' → logprob: -9.937132835388184
    9. ')' → logprob: -11.062132835388184
    10. ' (' → logprob: -11.687132835388184

Token 871: ' le' (ID: 505)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.01282852329313755
    2. 'le' → logprob: -4.387828350067139
    3. 'l' → logprob: -8.137828826904297
    4. 'la' → logprob: -11.762828826904297
    5. '```' → logprob: -12.012828826904297
    6. 'graph' → logprob: -12.762828826904297
    7. 'reverse' → logprob: -12.887828826904297
    8. 'rep' → logprob: -12.887828826904297
    9. ' rev' → logprob: -13.262828826904297
    10. ' le' → logprob: -14.387828826904297

Token 872: ' grap' (ID: 60955)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -4.246537173457909e-06
    2. 'graph' → logprob: -13.625003814697266
    3. 'gr' → logprob: -13.750003814697266
    4. 'reverse' → logprob: -14.500003814697266
    5. 'rep' → logprob: -14.500003814697266
    6. 'ré' → logprob: -15.125003814697266
    7. '```' → logprob: -15.375003814697266
    8. 'revet' → logprob: -16.250003814697266
    9. '
' → logprob: -16.500003814697266
    10. 'inv' → logprob: -17.125003814697266

Token 873: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03851671144366264
    2. 'h' → logprob: -3.4135167598724365
    3. 'aphe' → logprob: -6.038516521453857
    4. 'ph' → logprob: -6.663516521453857
    5. 'phe' → logprob: -8.163516998291016
    6. 'raph' → logprob: -8.413516998291016
    7. 'aph' → logprob: -8.663516998291016
    8. '#' → logprob: -9.413516998291016
    9. 'hé' → logprob: -9.788516998291016
    10. '_he' → logprob: -10.163516998291016

Token 874: ' original' (ID: 4756)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.25377729535102844
    2. 'rev' → logprob: -1.628777265548706
    3. 'in' → logprob: -3.878777265548706
    4. ' inverse' → logprob: -5.753777503967285
    5. 'inv' → logprob: -5.878777503967285
    6. 'reverse' → logprob: -7.253777503967285
    7. ' invers' → logprob: -9.128777503967285
    8. '_inverse' → logprob: -9.128777503967285
    9. 'ré' → logprob: -9.253777503967285
    10. 'original' → logprob: -9.628777503967285

Token 875: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5163818597793579
    2. 'dist' → logprob: -1.016381859779358
    3. ' dist' → logprob: -3.2663817405700684
    4. ' =' → logprob: -6.266381740570068
    5. '=' → logprob: -7.141381740570068
    6. '(dist' → logprob: -7.641381740570068
    7. ',' → logprob: -10.391382217407227
    8. '	dist' → logprob: -11.016382217407227
    9. '  ' → logprob: -11.141382217407227
    10. ' ' → logprob: -11.391382217407227

Token 876: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11370057612657547
    2. 'dist' → logprob: -2.2387006282806396
    3. ' dist' → logprob: -7.1137003898620605
    4. '	dist' → logprob: -10.113700866699219
    5. '(dist' → logprob: -11.613700866699219
    6. '```' → logprob: -12.738700866699219
    7. '_dist' → logprob: -12.988700866699219
    8. '.dist' → logprob: -13.113700866699219
    9. '    
' → logprob: -13.488700866699219
    10. ',' → logprob: -13.613700866699219

Token 877: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -8.113290095934644e-05
    2. '   ' → logprob: -9.500081062316895
    3. ' dist' → logprob: -12.000081062316895
    4. '    
' → logprob: -17.62508201599121
    5. '	dist' → logprob: -17.62508201599121
    6. '
' → logprob: -18.25008201599121
    7. '(dist' → logprob: -19.62508201599121
    8. '  ' → logprob: -19.62508201599121
    9. 'd' → logprob: -20.12508201599121
    10. ' ' → logprob: -20.37508201599121

Token 878: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. '２' → logprob: -19.125
    4. '```' → logprob: -19.375
    5. '=' → logprob: -19.625
    6. '۲' → logprob: -19.75
    7. '₂' → logprob: -19.875
    8. 'rev' → logprob: -21.0
    9. ' =' → logprob: -21.375
    10. ' ' → logprob: -21.75

Token 879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. '[' → logprob: -15.511871337890625
    4. ' ' → logprob: -16.511871337890625
    5. ',' → logprob: -16.886871337890625
    6. '＝' → logprob: -17.511871337890625
    7. ')' → logprob: -18.136871337890625
    8. '(' → logprob: -18.261871337890625
    9. ' ' → logprob: -18.261871337890625
    10. '   ' → logprob: -18.636871337890625

Token 880: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.935296834039036e-06
    2. ' d' → logprob: -12.75000286102295
    3. '(d' → logprob: -18.375003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '	d' → logprob: -19.500003814697266
    6. 'def' → logprob: -20.375003814697266
    7. 'dist' → logprob: -20.500003814697266
    8. ')d' → logprob: -21.875003814697266
    9. '[d' → logprob: -22.000003814697266
    10. '.d' → logprob: -22.125003814697266

Token 881: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00018232580623589456
    2. 'ijk' → logprob: -9.375182151794434
    3. 'ij' → logprob: -9.875182151794434
    4. 'd' → logprob: -10.625182151794434
    5. '[' → logprob: -11.375182151794434
    6. '[i' → logprob: -12.500182151794434
    7. '[d' → logprob: -13.750182151794434
    8. 'jik' → logprob: -14.000182151794434
    9. 'is' → logprob: -14.875182151794434
    10. 'ijks' → logprob: -15.000182151794434

Token 882: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001584850688232109
    2. '2' → logprob: -8.750158309936523
    3. ' (' → logprob: -17.750158309936523
    4. '(
' → logprob: -18.375158309936523
    5. ' ' → logprob: -20.375158309936523
    6. '   ' → logprob: -22.250158309936523
    7. '```' → logprob: -22.250158309936523
    8. '((' → logprob: -22.750158309936523
    9. 'def' → logprob: -22.875158309936523
    10. '[' → logprob: -23.250158309936523

Token 883: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.625
    4. '۲' → logprob: -20.125
    5. '(' → logprob: -20.5
    6. '```' → logprob: -21.375
    7. '２' → logprob: -21.5
    8. ')' → logprob: -22.875
    9. '২' → logprob: -23.25
    10. '  ' → logprob: -23.5

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ',re' → logprob: -12.250012397766113
    3. ' ,' → logprob: -12.250012397766113
    4. ',
' → logprob: -13.250012397766113
    5. 'rev' → logprob: -14.875012397766113
    6. '(re' → logprob: -15.125012397766113
    7. '   ' → logprob: -16.500011444091797
    8. ')' → logprob: -16.625011444091797
    9. '),' → logprob: -18.375011444091797
    10. '(' → logprob: -18.500011444091797

Token 885: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0007104054093360901
    2. ' rev' → logprob: -7.250710487365723
    3. 're' → logprob: -15.125710487365723
    4. 'rep' → logprob: -15.875710487365723
    5. '   ' → logprob: -17.875709533691406
    6. '.rev' → logprob: -18.500709533691406
    7. '_rev' → logprob: -19.125709533691406
    8. 'reverse' → logprob: -20.375709533691406
    9. 'Rev' → logprob: -20.375709533691406
    10. ' ' → logprob: -20.375709533691406

Token 886: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -3.8889261304575484e-06
    2. 'graph' → logprob: -12.750003814697266
    3. 'raph' → logprob: -14.375003814697266
    4. '_' → logprob: -15.125003814697266
    5. '_GRAPH' → logprob: -16.625003814697266
    6. ')_' → logprob: -18.250003814697266
    7. ')' → logprob: -18.875003814697266
    8. '	graph' → logprob: -19.500003814697266
    9. ' _' → logprob: -19.625003814697266
    10. '```' → logprob: -19.750003814697266

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012594614236149937
    2. ',n' → logprob: -9.125125885009766
    3. ' ,' → logprob: -11.000125885009766
    4. ')' → logprob: -16.625125885009766
    5. '   ' → logprob: -17.000125885009766
    6. 'n' → logprob: -18.375125885009766
    7. '(n' → logprob: -20.375125885009766
    8. ',
' → logprob: -20.375125885009766
    9. '‌,' → logprob: -21.250125885009766
    10. '[n' → logprob: -21.250125885009766

Token 888: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.5491004129871726e-05
    2. ' n' → logprob: -10.000045776367188
    3. '	n' → logprob: -19.375045776367188
    4. ')n' → logprob: -19.750045776367188
    5. '   ' → logprob: -20.125045776367188
    6. '```' → logprob: -21.625045776367188
    7. '$n' → logprob: -22.500045776367188
    8. ')' → logprob: -23.375045776367188
    9. 'python' → logprob: -23.625045776367188
    10. ',n' → logprob: -23.625045776367188

Token 889: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.625000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '))' → logprob: -17.750001907348633
    6. ')

' → logprob: -19.000001907348633
    7. ')`' → logprob: -19.375001907348633
    8. ')
' → logprob: -19.625001907348633
    9. ')return' → logprob: -19.750001907348633
    10. '),' → logprob: -20.000001907348633

Token 890: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25668537616729736
    2. 'for' → logprob: -1.7566853761672974
    3. '```' → logprob: -3.506685256958008
    4. '    
' → logprob: -4.631685256958008
    5. '
' → logprob: -4.631685256958008
    6. ' for' → logprob: -5.506685256958008
    7. '``' → logprob: -9.881685256958008
    8. '<|end|>' → logprob: -10.131685256958008
    9. '	for' → logprob: -10.506685256958008
    10. '  
' → logprob: -10.506685256958008

Token 891: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11958348751068115
    2. '   ' → logprob: -2.2445836067199707
    3. '```' → logprob: -5.869583606719971
    4. 'dist' → logprob: -6.369583606719971
    5. ' for' → logprob: -6.494583606719971
    6. 'result' → logprob: -7.494583606719971
    7. 'd' → logprob: -10.369583129882812
    8. 'distance' → logprob: -10.619583129882812
    9. '    
' → logprob: -10.869583129882812
    10. '``' → logprob: -11.369583129882812

Token 892: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.041614461690187454
    2. 'original' → logprob: -3.791614532470703
    3. 'dist' (adapté à ' dist') → logprob: -4.291614532470703
    4. 'orig' → logprob: -6.041614532470703
    5. 'base' → logprob: -6.791614532470703
    6. 'initial' → logprob: -8.166614532470703
    7. 'ans' → logprob: -8.291614532470703
    8. 'res' → logprob: -9.041614532470703
    9. 'answer' → logprob: -9.291614532470703
    10. 'result' → logprob: -9.541614532470703

Token 893: '_orig' (ID: 96685)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.382234662771225
    2. '2' → logprob: -1.8822346925735474
    3. '_' → logprob: -2.007234573364258
    4. '1' → logprob: -4.882234573364258
    5. '```' → logprob: -5.007234573364258
    6. 'for' → logprob: -5.132234573364258
    7. ' =' → logprob: -6.132234573364258
    8. 's' → logprob: -6.257234573364258
    9. '_min' → logprob: -6.757234573364258
    10. '.' → logprob: -6.882234573364258

Token 894: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2277093082666397
    2. '[' → logprob: -1.8527092933654785
    3. '=' → logprob: -3.6027092933654785
    4. '2' → logprob: -4.6027092933654785
    5. '_' → logprob: -4.7277092933654785
    6. '=[' → logprob: -7.4777092933654785
    7. 's' → logprob: -10.352709770202637
    8. ' ' → logprob: -11.477709770202637
    9. '_val' → logprob: -11.602709770202637
    10. ' =[' → logprob: -11.602709770202637

Token 895: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004078401252627373
    2. ' dist' → logprob: -5.504078388214111
    3. '(dist' → logprob: -18.379077911376953
    4. '	dist' → logprob: -18.879077911376953
    5. 'd' → logprob: -20.754077911376953
    6. '_dist' → logprob: -21.004077911376953
    7. 'Dist' → logprob: -21.129077911376953
    8. '.dist' → logprob: -21.629077911376953
    9. '-dist' → logprob: -22.879077911376953
    10. 'diff' → logprob: -23.254077911376953

Token 896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004108924185857177
    2. '[' → logprob: -8.375411033630371
    3. '_orig' → logprob: -8.750411033630371
    4. 'orig' → logprob: -10.750411033630371
    5. '_' → logprob: -16.125410079956055
    6. '```' → logprob: -16.500410079956055
    7. '(orig' → logprob: -16.625410079956055
    8. 'Orig' → logprob: -16.750410079956055
    9. '(' → logprob: -17.000410079956055
    10. ' orig' → logprob: -18.000410079956055

Token 897: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4153549020411447e-05
    2. '[m' → logprob: -10.75002384185791
    3. '[n' → logprob: -13.50002384185791
    4. '2' → logprob: -13.62502384185791
    5. ' [' → logprob: -17.375024795532227
    6. '[M' → logprob: -17.875024795532227
    7. ' ' → logprob: -18.500024795532227
    8. '```' → logprob: -18.625024795532227
    9. '[N' → logprob: -19.250024795532227
    10. '[s' → logprob: -19.375024795532227

Token 898: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -22.125
    4. '２' → logprob: -22.125
    5. '۲' → logprob: -22.125
    6. '```' → logprob: -24.5
    7. '২' → logprob: -25.0
    8. '२' → logprob: -25.25
    9. '٢' → logprob: -25.625
    10. '  ' → logprob: -25.875

Token 899: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.351473331451416
    2. ')' → logprob: -1.226473331451416
    3. '<|end|>' → logprob: -6.601473331451416
    4. 'if' → logprob: -7.976473331451416
    5. '<|end|>' → logprob: -8.101472854614258
    6. ' ]' → logprob: -8.226472854614258
    7. ' if' → logprob: -8.226472854614258
    8. '   ' → logprob: -9.101472854614258
    9. ' )' → logprob: -9.476472854614258
    10. '
' → logprob: -9.601472854614258

Token 900: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.631162166595459
    2. 'for' → logprob: -0.881162166595459
    3. '   ' → logprob: -3.131162166595459
    4. '    
' → logprob: -5.131162166595459
    5. ' for' → logprob: -5.631162166595459
    6. '	
' → logprob: -7.881162166595459
    7. '  
' → logprob: -9.381162643432617
    8. '	for' → logprob: -10.006162643432617
    9. '   
' → logprob: -10.506162643432617
    10. '```' → logprob: -11.631162643432617

Token 901: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09864604473114014
    2. '
' → logprob: -2.5986461639404297
    3. ' for' → logprob: -4.84864616394043
    4. '   ' → logprob: -4.97364616394043
    5. '    
' → logprob: -5.47364616394043
    6. '  
' → logprob: -8.34864616394043
    7. '	
' → logprob: -8.47364616394043
    8. '	for' → logprob: -9.97364616394043
    9. '   
' → logprob: -10.22364616394043
    10. '```' → logprob: -10.47364616394043

Token 902: ' distance' (ID: 9324)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030290616676211357
    2. 'print' → logprob: -3.7802906036376953
    3. 'if' → logprob: -5.405290603637695
    4. ' for' → logprob: -6.905290603637695
    5. 'result' → logprob: -7.280290603637695
    6. 'res' → logprob: -8.030290603637695
    7. 'ans' → logprob: -8.155290603637695
    8. 'min' → logprob: -10.030290603637695
    9. 'answer' → logprob: -10.030290603637695
    10. '
' → logprob: -10.280290603637695

Token 903: ' originale' (ID: 90997)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6167632341384888
    2. '   ' → logprob: -1.2417632341384888
    3. ' for' → logprob: -3.241763114929199
    4. '_orig' → logprob: -3.866763114929199
    5. '<|end|>' → logprob: -4.241763114929199
    6. 'import' → logprob: -4.366763114929199
    7. '  ' → logprob: -4.866763114929199
    8. '
' → logprob: -4.866763114929199
    9. 'or' → logprob: -5.116763114929199
    10. ' =' → logprob: -5.241763114929199

Token 904: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05284743756055832
    2. '   ' → logprob: -3.052847385406494
    3. '
' → logprob: -5.927847385406494
    4. '    
' → logprob: -7.052847385406494
    5. ' for' → logprob: -7.427847385406494
    6. '	
' → logprob: -9.552847862243652
    7. '	for' → logprob: -10.177847862243652
    8. '  
' → logprob: -11.302847862243652
    9. '```' → logprob: -12.927847862243652
    10. '   
' → logprob: -13.177847862243652

Token 905: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009534720331430435
    2. '2' → logprob: -4.88453483581543
    3. ' ' → logprob: -6.25953483581543
    4. '```' → logprob: -12.50953483581543
    5. '#' → logprob: -13.25953483581543
    6. 'sys' → logprob: -13.75953483581543
    7. '0' → logprob: -13.88453483581543
    8. 'dist' → logprob: -13.88453483581543
    9. ' sys' → logprob: -14.00953483581543
    10. '   ' → logprob: -14.00953483581543

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052464487962424755
    2. '2' → logprob: -5.255246639251709
    3. ' ' → logprob: -11.63024616241455
    4. '```' → logprob: -13.38024616241455
    5. 'la' → logprob: -14.63024616241455
    6. 'print' → logprob: -15.50524616241455
    7. '#' → logprob: -15.50524616241455
    8. '   ' → logprob: -15.50524616241455
    9. 'sys' → logprob: -15.63024616241455
    10. 'de' → logprob: -15.63024616241455

Token 907: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0016343588940799236
    2. ' à' → logprob: -6.751634120941162
    3. 'to' → logprob: -9.00163459777832
    4. ' jusqu' → logprob: -9.75163459777832
    5. 'À' → logprob: -9.87663459777832
    6. '<|end|>' → logprob: -9.87663459777832
    7. ''à' → logprob: -10.12663459777832
    8. '```' → logprob: -10.50163459777832
    9. '-à' → logprob: -10.75163459777832
    10. 'a' → logprob: -11.12663459777832

Token 908: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -20.250001907348633
    4. '   ' → logprob: -21.125001907348633
    5. '２' → logprob: -21.250001907348633
    6. '```' → logprob: -21.250001907348633
    7. '۲' → logprob: -21.625001907348633
    8. '  ' → logprob: -21.750001907348633
    9. '

' → logprob: -22.625001907348633
    10. '  
' → logprob: -23.875001907348633

Token 909: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. 'de' → logprob: -19.875
    4. '２' → logprob: -20.25
    5. '   ' → logprob: -20.25
    6. '۲' → logprob: -20.75
    7. '```' → logprob: -20.875
    8. '  ' → logprob: -21.75
    9. 'dist' → logprob: -22.25
    10. ' deux' → logprob: -23.125

Token 910: '
    
' (ID: 15698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05213787406682968
    2. '   ' → logprob: -3.052137851715088
    3. '
' → logprob: -5.802137851715088
    4. '    
' → logprob: -7.927137851715088
    5. ' for' → logprob: -8.927138328552246
    6. '	for' → logprob: -10.927138328552246
    7. '	
' → logprob: -11.802138328552246
    8. '  
' → logprob: -13.052138328552246
    9. '   
' → logprob: -13.677138328552246
    10. '
' → logprob: -15.177138328552246

Token 911: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014566626632586122
    2. '   ' → logprob: -6.6264567375183105
    3. ' for' → logprob: -9.501456260681152
    4. '```' → logprob: -10.501456260681152
    5. '	for' → logprob: -11.001456260681152
    6. '
' → logprob: -11.751456260681152
    7. '    
' → logprob: -12.501456260681152
    8. '  
' → logprob: -16.37645721435547
    9. '``' → logprob: -17.00145721435547
    10. '   
' → logprob: -17.12645721435547

Token 912: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' for' → logprob: -16.125
    4. '    
' → logprob: -18.5
    5. 'result' → logprob: -19.5
    6. '```' → logprob: -19.75
    7. '	for' → logprob: -19.875
    8. '
' → logprob: -21.0
    9. '  
' → logprob: -22.125
    10. 'results' → logprob: -22.125

Token 913: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022004861384630203
    2. ' a' → logprob: -4.397005081176758
    3. 'i' → logprob: -4.772005081176758
    4. '(a' → logprob: -7.522005081176758
    5. ' i' → logprob: -8.022005081176758
    6. ' (' → logprob: -9.397005081176758
    7. '(i' → logprob: -11.522005081176758
    8. '_,' → logprob: -12.022005081176758
    9. 'edge' → logprob: -12.522005081176758
    10. '_i' → logprob: -12.647005081176758

Token 914: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03454333543777466
    2. 'in' → logprob: -3.40954327583313
    3. ',' → logprob: -7.159543514251709
    4. ' ' → logprob: -9.65954303741455
    5. ' ,' → logprob: -10.28454303741455
    6. ' i' → logprob: -12.53454303741455
    7. '_' → logprob: -13.03454303741455
    8. '0' → logprob: -13.28454303741455
    9. ')' → logprob: -13.28454303741455
    10. '	in' → logprob: -13.28454303741455

Token 915: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.0391463193809614e-05
    2. ' range' → logprob: -9.750060081481934
    3. 'edges' → logprob: -13.250060081481934
    4. 'in' → logprob: -16.25006103515625
    5. 'edge' → logprob: -16.87506103515625
    6. '	range' → logprob: -17.37506103515625
    7. '```' → logprob: -17.75006103515625
    8. '(range' → logprob: -17.75006103515625
    9. 'r' → logprob: -18.00006103515625
    10. 'ranges' → logprob: -18.00006103515625

Token 916: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.930552313453518e-05
    2. '(' → logprob: -10.000049591064453
    3. '(len' → logprob: -13.000049591064453
    4. 'm' → logprob: -13.500049591064453
    5. ' (' → logprob: -15.625049591064453
    6. '(
' → logprob: -17.375049591064453
    7. '(i' → logprob: -18.000049591064453
    8. '(M' → logprob: -18.500049591064453
    9. '(n' → logprob: -18.625049591064453
    10. '((' → logprob: -18.625049591064453

Token 917: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0058672865852713585
    2. '):
' → logprob: -5.2558674812316895
    3. ')' → logprob: -7.8808674812316895
    4. ':' → logprob: -8.380867004394531
    5. ',' → logprob: -11.755867004394531
    6. '):
' → logprob: -11.880867004394531
    7. '   ' → logprob: -12.130867004394531
    8. ' ):' → logprob: -13.130867004394531
    9. '+' → logprob: -13.755867004394531
    10. '}:' → logprob: -13.880867004394531

Token 918: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3042726218700409
    2. '       ' → logprob: -1.6792726516723633
    3. 'a' → logprob: -2.6792726516723633
    4. ' a' → logprob: -5.429272651672363
    5. ',' → logprob: -7.054272651672363
    6. '(a' → logprob: -7.304272651672363
    7. ',a' → logprob: -7.679272651672363
    8. '	a' → logprob: -8.679272651672363
    9. '    ' → logprob: -8.804272651672363
    10. '```' → logprob: -9.304272651672363

Token 919: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.664371848164592e-05
    2. ' a' → logprob: -11.375016212463379
    3. '   ' → logprob: -12.250016212463379
    4. '(a' → logprob: -15.500016212463379
    5. '	a' → logprob: -17.125017166137695
    6. '       ' → logprob: -17.250017166137695
    7. '```' → logprob: -18.250017166137695
    8. 'ai' → logprob: -19.000017166137695
    9. '_a' → logprob: -19.125017166137695
    10. '    
' → logprob: -19.375017166137695

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005420696688815951
    2. ',b' → logprob: -7.625542163848877
    3. '_,' → logprob: -11.125541687011719
    4. '_i' → logprob: -11.250541687011719
    5. '=' → logprob: -11.750541687011719
    6. ' ,' → logprob: -12.125541687011719
    7. 'b' → logprob: -12.750541687011719
    8. ',i' → logprob: -12.750541687011719
    9. 'i' → logprob: -13.000541687011719
    10. ',a' → logprob: -13.250541687011719

Token 921: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16025316715240479
    2. 'b' → logprob: -1.9102531671524048
    3. ',b' → logprob: -11.035253524780273
    4. ',' → logprob: -11.535253524780273
    5. ' =' → logprob: -14.160253524780273
    6. ' ,' → logprob: -14.160253524780273
    7. ' ' → logprob: -14.285253524780273
    8. ' ' → logprob: -15.410253524780273
    9. ' 
' → logprob: -15.410253524780273
    10. '=' → logprob: -15.785253524780273

Token 922: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.897412822581828e-05
    2. ',c' → logprob: -9.875068664550781
    3. ' ,' → logprob: -11.250068664550781
    4. '=' → logprob: -13.250068664550781
    5. 'c' → logprob: -14.000068664550781
    6. '<|end|>' → logprob: -14.500068664550781
    7. ',b' → logprob: -15.375068664550781
    8. ',
' → logprob: -15.750068664550781
    9. '_,' → logprob: -15.750068664550781
    10. ',a' → logprob: -16.12506866455078

Token 923: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.0126840758603066e-05
    2. ' c' → logprob: -10.125040054321289
    3. ',c' → logprob: -16.87504005432129
    4. '	c' → logprob: -18.75004005432129
    5. ')c' → logprob: -19.00004005432129
    6. ',' → logprob: -19.25004005432129
    7. '<|end|>' → logprob: -19.50004005432129
    8. '=' → logprob: -19.50004005432129
    9. '_c' → logprob: -20.25004005432129
    10. '=c' → logprob: -20.25004005432129

Token 924: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014166207052767277
    2. ' =' → logprob: -4.264166355133057
    3. '       ' → logprob: -13.514165878295898
    4. ',' → logprob: -14.639165878295898
    5. 'a' → logprob: -15.389165878295898
    6. '   ' → logprob: -15.389165878295898
    7. '        ' → logprob: -16.1391658782959
    8. ')' → logprob: -16.1391658782959
    9. ')=' → logprob: -16.5141658782959
    10. '    ' → logprob: -17.2641658782959

Token 925: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.00317783304490149
    2. ' edges' → logprob: -5.753177642822266
    3. '(edges' → logprob: -16.378177642822266
    4. '.edges' → logprob: -17.753177642822266
    5. '   ' → logprob: -18.128177642822266
    6. '_edges' → logprob: -18.753177642822266
    7. 'edge' → logprob: -19.503177642822266
    8. 'Edges' → logprob: -20.378177642822266
    9. ' ' → logprob: -21.003177642822266
    10. 'ed' → logprob: -21.753177642822266

Token 926: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196123123168945
    2. ' =' → logprob: -1.5019612312316895
    3. '       ' → logprob: -10.751960754394531
    4. '   ' → logprob: -12.376960754394531
    5. '        ' → logprob: -13.501960754394531
    6. ',' → logprob: -13.501960754394531
    7. ')' → logprob: -14.251960754394531
    8. '    ' → logprob: -14.626960754394531
    9. '=
' → logprob: -14.626960754394531
    10. 'a' → logprob: -15.626960754394531

Token 927: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13453792035579681
    2. ')' → logprob: -2.259537935256958
    3. ']
' → logprob: -3.884537935256958
    4. ')
' → logprob: -7.384537696838379
    5. '       ' → logprob: -8.759537696838379
    6. ']
' → logprob: -9.759537696838379
    7. '])' → logprob: -10.134537696838379
    8. '   ' → logprob: -10.634537696838379
    9. ')]' → logprob: -11.009537696838379
    10. ')
' → logprob: -13.134537696838379

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03564378246665001
    2. '        
' → logprob: -3.6606438159942627
    3. '
' → logprob: -5.410643577575684
    4. '    
' → logprob: -6.285643577575684
    5. ' 
' → logprob: -7.160643577575684
    6. '  
' → logprob: -7.660643577575684
    7. '   ' → logprob: -7.910643577575684
    8. ',' → logprob: -8.660643577575684
    9. ' next' → logprob: -8.785643577575684
    10. ' new' → logprob: -8.785643577575684

Token 929: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.05612549930810928
    2. 'nd' → logprob: -4.056125640869141
    3. '       ' → logprob: -4.556125640869141
    4. 'res' → logprob: -5.181125640869141
    5. '   ' → logprob: -5.431125640869141
    6. 'alt' → logprob: -5.681125640869141
    7. 'min' → logprob: -6.056125640869141
    8. 'dist' → logprob: -6.181125640869141
    9. 'best' → logprob: -6.431125640869141
    10. 'mod' → logprob: -6.681125640869141

Token 930: ' Calcul' (ID: 57243)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04433100298047066
    2. 'dist' → logprob: -5.169331073760986
    3. 'mod' → logprob: -5.294331073760986
    4. '       ' → logprob: -5.294331073760986
    5. 'alt' → logprob: -5.419331073760986
    6. 'nd' → logprob: -5.544331073760986
    7. 'res' → logprob: -5.669331073760986
    8. 'min' → logprob: -5.794331073760986
    9. 'modified' → logprob: -5.919331073760986
    10. 'best' → logprob: -6.544331073760986

Token 931: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025548286736011505
    2. 'er' → logprob: -4.650548458099365
    3. ' new' → logprob: -5.275548458099365
    4. ' =' → logprob: -6.150548458099365
    5. 'result' → logprob: -6.275548458099365
    6. ':' → logprob: -6.900548458099365
    7. ' result' → logprob: -7.275548458099365
    8. ' de' → logprob: -7.650548458099365
    9. ' du' → logprob: -7.775548458099365
    10. '=' → logprob: -7.775548458099365

Token 932: ' cout' (ID: 10504)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3216449022293091
    2. 'min' → logprob: -1.821644902229309
    3. 'nou' → logprob: -2.4466447830200195
    4. 'nd' → logprob: -4.4466447830200195
    5. 'possible' → logprob: -5.4466447830200195
    6. 'minimum' → logprob: -6.4466447830200195
    7. 'best' → logprob: -6.4466447830200195
    8. 'nv' → logprob: -6.5716447830200195
    9. 'tmp' → logprob: -6.9466447830200195
    10. 'temp' → logprob: -6.9466447830200195

Token 933: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2827517092227936
    2. '       ' → logprob: -2.0327517986297607
    3. '=' → logprob: -2.7827517986297607
    4. ' min' → logprob: -4.282751560211182
    5. 'min' → logprob: -4.782751560211182
    6. '   ' → logprob: -4.907751560211182
    7. 'new' → logprob: -5.282751560211182
    8. ' new' → logprob: -5.407751560211182
    9. 'possible' → logprob: -6.157751560211182
    10. 'result' → logprob: -6.532751560211182

Token 934: ' prenant' (ID: 140375)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03345734253525734
    2. 'dist' → logprob: -3.5334572792053223
    3. 'in' → logprob: -7.658457279205322
    4. 'a' → logprob: -7.908457279205322
    5. 'inv' → logprob: -8.03345775604248
    6. '```' → logprob: -8.28345775604248
    7. 'minimum' → logprob: -8.28345775604248
    8. 'util' → logprob: -8.40845775604248
    9. ' min' → logprob: -8.65845775604248
    10. '[min' → logprob: -9.03345775604248

Token 935: ' en' (ID: 469)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10543502867221832
    2. 'dist' → logprob: -2.3554351329803467
    3. ' min' → logprob: -5.605434894561768
    4. ' dist' → logprob: -7.230434894561768
    5. 'la' → logprob: -7.855434894561768
    6. 'b' → logprob: -8.855435371398926
    7. 'en' → logprob: -9.355435371398926
    8. 'a' → logprob: -10.105435371398926
    9. ' la' → logprob: -10.480435371398926
    10. ' en' → logprob: -10.980435371398926

Token 936: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.00013250234769657254
    2. 'account' → logprob: -9.50013256072998
    3. '
' → logprob: -10.75013256072998
    4. 'com' → logprob: -11.62513256072998
    5. 'count' → logprob: -12.00013256072998
    6. ' compte' → logprob: -12.12513256072998
    7. 'consider' → logprob: -12.37513256072998
    8. 'a' → logprob: -12.87513256072998
    9. '   ' → logprob: -13.12513256072998
    10. 'cons' → logprob: -13.25013256072998

Token 937: ' inversion' (ID: 70924)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4469326436519623
    2. ' dist' → logprob: -1.3219326734542847
    3. ' la' → logprob: -2.821932554244995
    4. ' l' → logprob: -4.571932792663574
    5. 'la' → logprob: -5.321932792663574
    6. '"' → logprob: -5.446932792663574
    7. 'b' → logprob: -5.446932792663574
    8. 'l' → logprob: -5.446932792663574
    9. '   ' → logprob: -6.571932792663574
    10. 'rev' → logprob: -7.196932792663574

Token 938: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28422531485557556
    2. '=' → logprob: -1.784225344657898
    3. '   ' → logprob: -2.9092252254486084
    4. '       ' → logprob: -4.4092254638671875
    5. ':' → logprob: -6.4092254638671875
    6. '        
' → logprob: -6.7842254638671875
    7. 'min' → logprob: -7.0342254638671875
    8. 'dist' → logprob: -7.0342254638671875
    9. '[' → logprob: -7.1592254638671875
    10. ' de' → logprob: -7.4092254638671875

Token 939: ' l' (ID: 305)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9298383593559265
    2. ' b' → logprob: -0.9298383593559265
    3. ' l' → logprob: -2.1798384189605713
    4. 'l' → logprob: -2.4298384189605713
    5. 'a' → logprob: -5.804838180541992
    6. ' la' → logprob: -6.429838180541992
    7. ' ' → logprob: -6.804838180541992
    8. ' edges' → logprob: -7.054838180541992
    9. 'la' → logprob: -7.554838180541992
    10. ' a' → logprob: -7.929838180541992

Token 940: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.3172789216041565
    2. 'ar' → logprob: -1.8172788619995117
    3. 'a' → logprob: -2.3172788619995117
    4. 'b' → logprob: -5.692278861999512
    5. ''' → logprob: -6.192278861999512
    6. ''a' → logprob: -6.567278861999512
    7. 'are' → logprob: -7.067278861999512
    8. ' ar' → logprob: -7.192278861999512
    9. 'aré' → logprob: -8.067278861999512
    10. '’ar' → logprob: -8.317278861999512

Token 941: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.026356730610132217
    2. 'ê' → logprob: -3.9013566970825195
    3. 'ôte' → logprob: -6.2763566970825195
    4. 'ète' → logprob: -6.6513566970825195
    5. 'être' → logprob: -7.1513566970825195
    6. 'âte' → logprob: -7.7763566970825195
    7. 'te' → logprob: -8.15135669708252
    8. 'êt' → logprob: -8.27635669708252
    9. 'êche' → logprob: -8.65135669708252
    10. 'êtes' → logprob: -8.77635669708252

Token 942: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07976853102445602
    2. '=' → logprob: -3.454768419265747
    3. '   ' → logprob: -4.704768657684326
    4. ':' → logprob: -4.704768657684326
    5. ' possible' → logprob: -4.829768657684326
    6. 'possible' → logprob: -5.079768657684326
    7. 'new' → logprob: -6.329768657684326
    8. 'dist' → logprob: -6.454768657684326
    9. ' new' → logprob: -6.954768657684326
    10. 'min' → logprob: -7.204768657684326

Token 943: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43635836243629456
    2. '
' → logprob: -1.9363583326339722
    3. '       ' → logprob: -2.4363584518432617
    4. ' =' → logprob: -3.5613584518432617
    5. ',' → logprob: -3.9363584518432617
    6. ':
' → logprob: -3.9363584518432617
    7. '        
' → logprob: -4.436358451843262
    8. '=' → logprob: -4.561358451843262
    9. 'new' → logprob: -4.811358451843262
    10. '   ' → logprob: -5.311358451843262

Token 944: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18065084517002106
    2. ' new' → logprob: -2.5556509494781494
    3. '        
' → logprob: -3.9306509494781494
    4. '   ' → logprob: -4.43065071105957
    5. 'new' → logprob: -4.55565071105957
    6. ' 
' → logprob: -4.68065071105957
    7. ' nd' → logprob: -5.18065071105957
    8. ',' → logprob: -5.55565071105957
    9. '
' → logprob: -5.80565071105957
    10. '    
' → logprob: -5.93065071105957

Token 945: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11694560945034027
    2. 'cost' → logprob: -3.241945505142212
    3. 'nd' → logprob: -3.491945505142212
    4. ' new' → logprob: -4.991945743560791
    5. 'res' → logprob: -4.991945743560791
    6. 'cand' → logprob: -5.366945743560791
    7. 'val' → logprob: -5.616945743560791
    8. '   ' → logprob: -5.616945743560791
    9. 'tmp' → logprob: -5.991945743560791
    10. 'ans' → logprob: -6.241945743560791

Token 946: ' Nouveau' (ID: 136486)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.23753046989440918
    2. '       ' → logprob: -2.612530469894409
    3. ' new' → logprob: -3.237530469894409
    4. 'nd' → logprob: -3.862530469894409
    5. '   ' → logprob: -4.237530708312988
    6. 'cost' → logprob: -4.237530708312988
    7. 'dist' → logprob: -4.862530708312988
    8. 'res' → logprob: -4.862530708312988
    9. 'val' → logprob: -5.487530708312988
    10. 'possible' → logprob: -5.612530708312988

Token 947: ' chemin' (ID: 45035)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.9654430747032166
    2. 'cout' → logprob: -1.4654431343078613
    3. ' =' → logprob: -2.0904431343078613
    4. '_cost' → logprob: -2.3404431343078613
    5. '_dist' → logprob: -2.4654431343078613
    6. 'cost' → logprob: -3.4654431343078613
    7. '=' → logprob: -4.590443134307861
    8. '_che' → logprob: -4.590443134307861
    9. 'co' → logprob: -5.090443134307861
    10. 'dist' → logprob: -5.215443134307861

Token 948: ' possible' (ID: 4149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2812996208667755
    2. ' =' → logprob: -1.4062995910644531
    3. '   ' → logprob: -10.406299591064453
    4. '=min' → logprob: -10.656299591064453
    5. 'min' → logprob: -11.156299591064453
    6. '       ' → logprob: -11.656299591064453
    7. 'cost' → logprob: -11.781299591064453
    8. 'dist' → logprob: -11.781299591064453
    9. 'possible' → logprob: -12.156299591064453
    10. ')' → logprob: -12.406299591064453

Token 949: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.861910343170166
    2. '=' → logprob: -0.986910343170166
    3. '       ' → logprob: -1.986910343170166
    4. '   ' → logprob: -3.736910343170166
    5. 'new' → logprob: -3.861910343170166
    6. 'possible' → logprob: -5.111910343170166
    7. 'dist' → logprob: -5.486910343170166
    8. 'min' → logprob: -6.611910343170166
    9. ':' → logprob: -6.986910343170166
    10. 'cost' → logprob: -7.111910343170166

Token 950: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3986112177371979
    2. ' min' → logprob: -1.6486111879348755
    3. 'dist' → logprob: -2.273611307144165
    4. ' dist' → logprob: -3.773611307144165
    5. '   ' → logprob: -5.023611068725586
    6. '       ' → logprob: -6.273611068725586
    7. '
' → logprob: -7.773611068725586
    8. 'new' → logprob: -7.773611068725586
    9. ' new' → logprob: -8.523611068725586
    10. '    ' → logprob: -9.273611068725586

Token 951: '1' (ID: 16)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2318534255027771
    2. 'dist' → logprob: -1.6068534851074219
    3. ' min' → logprob: -5.231853485107422
    4. ' dist' → logprob: -7.106853485107422
    5. '   ' → logprob: -8.981853485107422
    6. 'max' → logprob: -10.481853485107422
    7. '
' → logprob: -10.731853485107422
    8. '(min' → logprob: -11.106853485107422
    9. 'new' → logprob: -11.856853485107422
    10. '[min' → logprob: -11.981853485107422

Token 952: '->' (ID: 609)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.31445667147636414
    2. 'dist' → logprob: -1.9394567012786865
    3. '[' → logprob: -3.9394567012786865
    4. ')' → logprob: -3.9394567012786865
    5. ' +' → logprob: -3.9394567012786865
    6. '+' → logprob: -3.9394567012786865
    7. 'b' → logprob: -4.439456462860107
    8. ']' → logprob: -4.939456462860107
    9. ' dist' → logprob: -4.939456462860107
    10. '[a' → logprob: -5.689456462860107

Token 953: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1136704683303833
    2. 'dist' → logprob: -2.2386703491210938
    3. ' dist' → logprob: -7.363670349121094
    4. ' b' → logprob: -8.738670349121094
    5. '[b' → logprob: -10.863670349121094
    6. '(dist' → logprob: -11.863670349121094
    7. 'a' → logprob: -11.988670349121094
    8. '   ' → logprob: -12.488670349121094
    9. '(b' → logprob: -12.863670349121094
    10. ']' → logprob: -13.926170349121094

Token 954: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14083728194236755
    2. ']' → logprob: -2.2658371925354004
    3. ')' → logprob: -4.0158371925354
    4. '+' → logprob: -5.1408371925354
    5. ']+' → logprob: -6.2658371925354
    6. ')+' → logprob: -7.5158371925354
    7. '[i' → logprob: -8.265837669372559
    8. '[' → logprob: -8.265837669372559
    9. ' ]' → logprob: -8.515837669372559
    10. '   ' → logprob: -9.015837669372559

Token 955: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5333296656608582
    2. ' c' → logprob: -0.9083296656608582
    3. ' dist' → logprob: -5.533329486846924
    4. 'dist' → logprob: -5.658329486846924
    5. '"' → logprob: -6.908329486846924
    6. ''' → logprob: -7.408329486846924
    7. '(c' → logprob: -8.658329963684082
    8. ' '' → logprob: -8.783329963684082
    9. ' b' → logprob: -8.783329963684082
    10. 'b' → logprob: -9.033329963684082

Token 956: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269298940896988
    2. '+' → logprob: -2.126929998397827
    3. ')' → logprob: -14.251930236816406
    4. ' plus' → logprob: -15.251930236816406
    5. '<|end|>' → logprob: -15.626930236816406
    6. '<|end|>' → logprob: -15.751930236816406
    7. ' ' → logprob: -15.876930236816406
    8. ')+' → logprob: -15.876930236816406
    9. ' ' → logprob: -16.501930236816406
    10. '[' → logprob: -16.876930236816406

Token 957: ' a' (ID: 261)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004078997299075127
    2. ' dist' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.62907886505127
    4. 'a' → logprob: -16.254079818725586
    5. '	dist' → logprob: -16.379079818725586
    6. 'dest' → logprob: -17.004079818725586
    7. '(dist' → logprob: -17.004079818725586
    8. '_dist' → logprob: -17.629079818725586
    9. '       ' → logprob: -18.254079818725586
    10. '+' → logprob: -18.379079818725586

Token 958: '->' (ID: 609)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5875444412231445
    2. '+' → logprob: -0.9625444412231445
    3. '[' → logprob: -3.9625444412231445
    4. ')' → logprob: -4.2125444412231445
    5. '->' → logprob: -5.3375444412231445
    6. '[i' → logprob: -5.7125444412231445
    7. ',' → logprob: -5.7125444412231445
    8. '<|end|>' → logprob: -6.0875444412231445
    9. '       ' → logprob: -6.7125444412231445
    10. ']' → logprob: -6.7125444412231445

Token 959: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7586554884910583
    2. 'dist' → logprob: -0.7586554884910583
    3. ' dist' → logprob: -3.008655548095703
    4. 'c' → logprob: -5.133655548095703
    5. ' ' → logprob: -6.633655548095703
    6. '[' → logprob: -6.883655548095703
    7. '(' → logprob: -7.133655548095703
    8. '1' → logprob: -7.508655548095703
    9. '(dist' → logprob: -7.758655548095703
    10. ' c' → logprob: -7.883655548095703

Token 960: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9082882404327393
    2. '
' → logprob: -1.0332882404327393
    3. ' =' → logprob: -2.5332882404327393
    4. '        
' → logprob: -3.0332882404327393
    5. '=' → logprob: -3.6582882404327393
    6. ',' → logprob: -3.6582882404327393
    7. '   ' → logprob: -4.40828800201416
    8. 'new' → logprob: -4.65828800201416
    9. '    
' → logprob: -5.03328800201416
    10. ')' → logprob: -5.40828800201416

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09690013527870178
    2. '   ' → logprob: -2.971900224685669
    3. 'result' → logprob: -4.59689998626709
    4. 'min' → logprob: -5.47189998626709
    5. 'new' → logprob: -5.59689998626709
    6. ' =' → logprob: -5.84689998626709
    7. '
' → logprob: -5.84689998626709
    8. ',' → logprob: -6.22189998626709
    9. ' min' → logprob: -6.47189998626709
    10. '        
' → logprob: -6.47189998626709

Token 962: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5330799221992493
    2. '       ' → logprob: -1.5330798625946045
    3. ' new' → logprob: -2.1580798625946045
    4. '   ' → logprob: -4.158080101013184
    5. 'nd' → logprob: -4.283080101013184
    6. 'dist' → logprob: -4.783080101013184
    7. ' nd' → logprob: -4.908080101013184
    8. 'possible' → logprob: -5.533080101013184
    9. '
' → logprob: -5.783080101013184
    10. 'n' → logprob: -5.783080101013184

Token 963: ' =>' (ID: 871)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16563977301120758
    2. ' new' → logprob: -3.040639877319336
    3. '   ' → logprob: -3.540639877319336
    4. '       ' → logprob: -3.665639877319336
    5. 'cost' → logprob: -4.415639877319336
    6. 'dist' → logprob: -4.665639877319336
    7. 'val' → logprob: -5.040639877319336
    8. 'nd' → logprob: -5.165639877319336
    9. 'res' → logprob: -5.915639877319336
    10. 'possible' → logprob: -5.915639877319336

Token 964: ' dist' (ID: 3601)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.38822564482688904
    2. ' min' → logprob: -2.263225555419922
    3. 'new' → logprob: -2.388225555419922
    4. 'dist' → logprob: -2.513225555419922
    5. ' new' → logprob: -4.138225555419922
    6. '   ' → logprob: -4.763225555419922
    7. ' dist' → logprob: -4.888225555419922
    8. 'cost' → logprob: -5.638225555419922
    9. 'nd' → logprob: -6.763225555419922
    10. 'tmp' → logprob: -7.013225555419922

Token 965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001217974815517664
    2. 'min' → logprob: -7.626217842102051
    3. '_min' → logprob: -8.37621784210205
    4. 'new' → logprob: -8.87621784210205
    5. ' =' → logprob: -9.25121784210205
    6. '_new' → logprob: -10.12621784210205
    7. '_' → logprob: -10.25121784210205
    8. '=' → logprob: -10.50121784210205
    9. '[' → logprob: -11.25121784210205
    10. '_val' → logprob: -11.62621784210205

Token 966: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.125018119812012
    3. 'b' → logprob: -13.875018119812012
    4. '[a' → logprob: -14.000018119812012
    5. ' [' → logprob: -14.375018119812012
    6. '[c' → logprob: -15.250018119812012
    7. '[v' → logprob: -15.375018119812012
    8. '[
' → logprob: -15.500018119812012
    9. '[B' → logprob: -16.125019073486328
    10. '[i' → logprob: -16.250019073486328

Token 967: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000492268183734268
    2. ']+' → logprob: -7.750492095947266
    3. ' ]' → logprob: -10.375492095947266
    4. '[i' → logprob: -10.875492095947266
    5. '[b' → logprob: -12.375492095947266
    6. '[' → logprob: -12.875492095947266
    7. '])' → logprob: -13.750492095947266
    8. '   ' → logprob: -14.125492095947266
    9. ']
' → logprob: -14.375492095947266
    10. '']' → logprob: -14.750492095947266

Token 968: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08901723474264145
    2. '+' → logprob: -2.464017152786255
    3. '+c' → logprob: -9.839016914367676
    4. ')' → logprob: -11.089016914367676
    5. ',' → logprob: -13.089016914367676
    6. ']' → logprob: -13.589016914367676
    7. '   ' → logprob: -14.214016914367676
    8. '+b' → logprob: -14.589016914367676
    9. ' +
' → logprob: -14.714016914367676
    10. ')+' → logprob: -14.964016914367676

Token 969: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20144842565059662
    2. ' c' → logprob: -1.7014484405517578
    3. ''' → logprob: -11.451448440551758
    4. '"' → logprob: -11.701448440551758
    5. ' ' → logprob: -11.951448440551758
    6. ' ' → logprob: -13.701448440551758
    7. ')c' → logprob: -13.826448440551758
    8. '```' → logprob: -13.826448440551758
    9. 'cost' → logprob: -14.076448440551758
    10. ' +' → logprob: -14.201448440551758

Token 970: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519318461418152
    2. '+' → logprob: -1.50193190574646
    3. '<|end|>' → logprob: -13.251932144165039
    4. ')' → logprob: -14.876932144165039
    5. ' +
' → logprob: -15.751932144165039
    6. ' ' → logprob: -16.00193214416504
    7. '<|end|>' → logprob: -17.12693214416504
    8. '    ' → logprob: -17.12693214416504
    9. '        ' → logprob: -17.25193214416504
    10. ' ' → logprob: -17.37693214416504

Token 971: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.048587486147880554
    2. ' dist' → logprob: -3.0485875606536865
    3. '(dist' → logprob: -16.298587799072266
    4. '"' → logprob: -18.298587799072266
    5. '	dist' → logprob: -18.548587799072266
    6. '_dist' → logprob: -18.923587799072266
    7. ' ' → logprob: -19.173587799072266
    8. 'Dist' → logprob: -19.798587799072266
    9. 'dest' → logprob: -19.798587799072266
    10. '.dist' → logprob: -19.923587799072266

Token 972: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '_' → logprob: -17.125
    3. ' ' → logprob: -17.25
    4. '```' → logprob: -17.25
    5. '   ' → logprob: -19.375
    6. '[' → logprob: -19.75
    7. '₂' → logprob: -19.75
    8. '
' → logprob: -19.875
    9. '۲' → logprob: -20.25
    10. '1' → logprob: -20.375

Token 973: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.9040898880339228e-05
    2. 'a' → logprob: -10.500028610229492
    3. '[' → logprob: -13.750028610229492
    4. '```' → logprob: -15.625028610229492
    5. ' [' → logprob: -16.250028610229492
    6. '(a' → logprob: -16.625028610229492
    7. '[
' → logprob: -18.250028610229492
    8. '   ' → logprob: -18.375028610229492
    9. ' a' → logprob: -18.500028610229492
    10. '[b' → logprob: -18.875028610229492

Token 974: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05142360180616379
    2. ')' → logprob: -3.0514235496520996
    3. '])' → logprob: -5.9264235496521
    4. ' ]' → logprob: -9.676424026489258
    5. ')]' → logprob: -9.801424026489258
    6. '       ' → logprob: -10.926424026489258
    7. '   ' → logprob: -12.051424026489258
    8. '[' → logprob: -12.301424026489258
    9. ' )' → logprob: -12.426424026489258
    10. ']
' → logprob: -13.051424026489258

Token 975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012295481748878956
    2. '   ' → logprob: -5.137295246124268
    3. '        
' → logprob: -6.262295246124268
    4. ' if' → logprob: -6.387295246124268
    5. ',' → logprob: -7.387295246124268
    6. '    
' → logprob: -7.887295246124268
    7. '
' → logprob: -8.137295722961426
    8. 'if' → logprob: -8.262295722961426
    9. 'new' → logprob: -8.762295722961426
    10. ' =' → logprob: -9.137295722961426

Token 976: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7208446264266968
    2. 'new' → logprob: -0.9708446264266968
    3. 'val' → logprob: -3.5958447456359863
    4. 'cost' → logprob: -3.7208447456359863
    5. ' new' → logprob: -3.9708447456359863
    6. 'if' → logprob: -4.595844745635986
    7. '   ' → logprob: -4.720844745635986
    8. 'dist' → logprob: -4.970844745635986
    9. 'res' → logprob: -5.095844745635986
    10. 'temp' → logprob: -5.470844745635986

Token 977: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14848965406417847
    2. 'new' → logprob: -2.1484897136688232
    3. 'val' → logprob: -4.773489475250244
    4. '   ' → logprob: -6.398489475250244
    5. 'cost' → logprob: -6.398489475250244
    6. 'nd' → logprob: -6.648489475250244
    7. 'res' → logprob: -7.023489475250244
    8. ' new' → logprob: -7.023489475250244
    9. 'dist' → logprob: -7.023489475250244
    10. 'possible' → logprob: -7.023489475250244

Token 978: ' ce' (ID: 2357)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3139618933200836
    2. 'dist' → logprob: -1.3139618635177612
    3. '(dist' → logprob: -8.56396198272705
    4. '   ' → logprob: -9.18896198272705
    5. ' min' → logprob: -9.31396198272705
    6. ' ' → logprob: -9.81396198272705
    7. 'min' → logprob: -9.81396198272705
    8. '_dist' → logprob: -10.56396198272705
    9. ' ' → logprob: -10.68896198272705
    10. '	dist' → logprob: -10.68896198272705

Token 979: ' chemin' (ID: 45035)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.667270839214325
    2. 'dist' → logprob: -1.4172708988189697
    3. '[' → logprob: -3.0422708988189697
    4. ' n' → logprob: -3.4172708988189697
    5. 'i' → logprob: -3.9172708988189697
    6. 'a' → logprob: -4.042270660400391
    7. 'if' → logprob: -4.167270660400391
    8. '_' → logprob: -4.417270660400391
    9. 'is' → logprob: -4.417270660400391
    10. '[i' → logprob: -4.417270660400391

Token 980: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1511886864900589
    2. '[' → logprob: -2.901188611984253
    3. ' <' → logprob: -3.901188611984253
    4. '==' → logprob: -4.276188850402832
    5. ' ==' → logprob: -4.526188850402832
    6. '<=' → logprob: -5.026188850402832
    7. '<' → logprob: -5.151188850402832
    8. ' is' → logprob: -5.776188850402832
    9. '   ' → logprob: -5.776188850402832
    10. ' <=' → logprob: -5.776188850402832

Token 981: ' meilleur' (ID: 37552)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6844033002853394
    2. 'float' → logprob: -1.8094033002853394
    3. 'not' → logprob: -2.434403419494629
    4. '<float' → logprob: -2.434403419494629
    5. ' <' → logprob: -2.684403419494629
    6. 'inf' → logprob: -3.559403419494629
    7. ' not' → logprob: -4.059403419494629
    8. 'less' → logprob: -4.184403419494629
    9. ' float' → logprob: -4.684403419494629
    10. ' less' → logprob: -5.434403419494629

Token 982: ' alors' (ID: 17971)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.2676914930343628
    2. 'or' → logprob: -1.6426914930343628
    3. ' ou' → logprob: -1.8926914930343628
    4. 'ou' → logprob: -2.0176916122436523
    5. '=' → logprob: -2.2676916122436523
    6. ':' → logprob: -3.0176916122436523
    7. '<=' → logprob: -3.3926916122436523
    8. ',' → logprob: -4.642691612243652
    9. ' =' → logprob: -4.642691612243652
    10. '==' → logprob: -4.767691612243652

Token 983: ' HAPPY' (ID: 187789)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.292397379875183
    2. 'result' → logprob: -1.792397379875183
    3. ' new' → logprob: -1.917397379875183
    4. '       ' → logprob: -2.0423974990844727
    5. 'min' → logprob: -2.9173974990844727
    6. 'if' → logprob: -3.1673974990844727
    7. '           ' → logprob: -3.9173974990844727
    8. 'print' → logprob: -4.167397499084473
    9. 'res' → logprob: -4.417397499084473
    10. 'dist' → logprob: -4.417397499084473

Token 984: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00800713524222374
    2. '
' → logprob: -5.258007049560547
    3. ',' → logprob: -7.633007049560547
    4. 'elif' → logprob: -7.633007049560547
    5. '   ' → logprob: -8.133007049560547
    6. '        
' → logprob: -8.258007049560547
    7. 'if' → logprob: -8.383007049560547
    8. ':' → logprob: -8.508007049560547
    9. ' if' → logprob: -8.508007049560547
    10. 'else' → logprob: -9.133007049560547

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22774331271648407
    2. 'elif' → logprob: -1.7277432680130005
    3. '#' → logprob: -4.102743148803711
    4. ' elif' → logprob: -5.727743148803711
    5. 'if' → logprob: -6.352743148803711
    6. '   ' → logprob: -6.602743148803711
    7. 'else' → logprob: -6.852743148803711
    8. '           ' → logprob: -7.352743148803711
    9. ' if' → logprob: -7.602743148803711
    10. '```' → logprob: -8.477743148803711

Token 986: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00904267467558384
    2. '       ' → logprob: -5.384042739868164
    3. '#' (adapté à ' #') → logprob: -5.509042739868164
    4. ' elif' → logprob: -8.384042739868164
    5. '   ' → logprob: -9.134042739868164
    6. '           ' → logprob: -11.259042739868164
    7. '#elif' → logprob: -12.634042739868164
    8. '	elif' → logprob: -12.884042739868164
    9. 'el' → logprob: -13.134042739868164
    10. 'else' → logprob: -14.009042739868164

Token 987: ' sinon' (ID: 52915)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5917578339576721
    2. '#' → logprob: -1.0917577743530273
    3. '       ' → logprob: -2.2167577743530273
    4. '   ' → logprob: -7.091757774353027
    5. ' elif' → logprob: -7.216757774353027
    6. '           ' → logprob: -9.091757774353027
    7. ' #' → logprob: -9.341757774353027
    8. 'else' → logprob: -9.716757774353027
    9. '```' → logprob: -10.341757774353027
    10. 'el' → logprob: -10.591757774353027

Token 988: ' comparer' (ID: 125081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7336698770523071
    2. ' if' → logprob: -1.4836698770523071
    3. 'if' → logprob: -1.7336698770523071
    4. 'elif' → logprob: -2.2336697578430176
    5. ' elif' → logprob: -5.608669757843018
    6. '```' → logprob: -5.858669757843018
    7. '           ' → logprob: -7.733669757843018
    8. '#' → logprob: -7.983669757843018
    9. ':' → logprob: -8.108670234680176
    10. '"' → logprob: -8.358670234680176

Token 989: ' avec' (ID: 3937)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6509547829627991
    2. 'if' → logprob: -1.2759547233581543
    3. '       ' → logprob: -2.6509547233581543
    4. ':' → logprob: -2.7759547233581543
    5. 'dist' → logprob: -3.6509547233581543
    6. '   ' → logprob: -4.400954723358154
    7. ' =' → logprob: -5.025954723358154
    8. ' à' → logprob: -5.400954723358154
    9. '=' → logprob: -5.525954723358154
    10. ' dist' → logprob: -6.275954723358154

Token 990: ' chemin' (ID: 45035)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.12730035185813904
    2. 'dist' → logprob: -2.127300262451172
    3. ' ' → logprob: -8.752300262451172
    4. '"' → logprob: -9.252300262451172
    5. '```' → logprob: -10.752300262451172
    6. '	dist' → logprob: -10.877300262451172
    7. '_dist' → logprob: -11.002300262451172
    8. '(dist' → logprob: -11.002300262451172
    9. ''' → logprob: -11.377300262451172
    10. ' ' → logprob: -12.002300262451172

Token 991: ' origine' (ID: 67665)
  Prédit: '_orig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_orig' → logprob: -0.43033087253570557
    2. '_original' → logprob: -1.4303308725357056
    3. ' original' → logprob: -2.930330753326416
    4. 'original' → logprob: -4.055330753326416
    5. '_' → logprob: -4.180330753326416
    6. '_initial' → logprob: -4.805330753326416
    7. 'origine' → logprob: -5.555330753326416
    8. 'initial' → logprob: -5.930330753326416
    9. ' initial' → logprob: -6.055330753326416
    10. '_origin' → logprob: -6.430330753326416

Token 992: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029142465442419052
    2. '   ' → logprob: -4.279142379760742
    3. 'if' → logprob: -4.404142379760742
    4. ' if' → logprob: -7.654142379760742
    5. 'e' → logprob: -7.904142379760742
    6. '
' → logprob: -7.904142379760742
    7. ':' → logprob: -8.529142379760742
    8. ':
' → logprob: -8.779142379760742
    9. '        
' → logprob: -9.029142379760742
    10. ',' → logprob: -9.154142379760742

Token 993: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034118397161364555
    2. '        
' → logprob: -8.375341415405273
    3. '   ' → logprob: -10.375341415405273
    4. ' if' → logprob: -11.125341415405273
    5. 'if' → logprob: -11.250341415405273
    6. '           ' → logprob: -11.750341415405273
    7. '      ' → logprob: -11.875341415405273
    8. '`' → logprob: -12.625341415405273
    9. '     ' → logprob: -12.625341415405273
    10. '```' → logprob: -12.750341415405273

Token 994: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.162350133061409
    2. '   ' → logprob: -3.1623501777648926
    3. 'res' → logprob: -3.5373501777648926
    4. 'val' → logprob: -3.7873501777648926
    5. 'nd' → logprob: -4.162350177764893
    6. 'cost' → logprob: -4.412350177764893
    7. 'if' (adapté à ' if') → logprob: -4.662350177764893
    8. 'alt' → logprob: -5.412350177764893
    9. 'tmp' → logprob: -6.287350177764893
    10. 'dist' → logprob: -6.412350177764893

Token 995: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1804426610469818
    2. ' dist' → logprob: -1.8054426908493042
    3. '   ' → logprob: -8.305442810058594
    4. '(dist' → logprob: -8.305442810058594
    5. 'min' → logprob: -9.180442810058594
    6. ' (' → logprob: -10.555442810058594
    7. ' min' → logprob: -10.680442810058594
    8. '	dist' → logprob: -11.055442810058594
    9. '(' → logprob: -11.430442810058594
    10. '  ' → logprob: -12.180442810058594

Token 996: '1' (ID: 16)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.42925024032592773
    2. '1' → logprob: -1.0542502403259277
    3. '[i' → logprob: -8.554250717163086
    4. '[' → logprob: -8.679250717163086
    5. '[a' → logprob: -10.304250717163086
    6. '```' → logprob: -10.554250717163086
    7. 'b' → logprob: -10.679250717163086
    8. ' [' → logprob: -10.804250717163086
    9. '   ' → logprob: -10.804250717163086
    10. ']' → logprob: -11.804250717163086

Token 997: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.000003814697266
    4. '[a' → logprob: -15.250003814697266
    5. 'b' → logprob: -16.000003814697266
    6. '[
' → logprob: -16.750003814697266
    7. '[i' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.125003814697266
    9. ']' → logprob: -18.250003814697266
    10. '[c' → logprob: -18.375003814697266

Token 998: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025035575032234192
    2. ']==' → logprob: -3.9000356197357178
    3. ']+' → logprob: -6.525035381317139
    4. '+' → logprob: -6.900035381317139
    5. ' +' → logprob: -7.650035381317139
    6. '==' → logprob: -7.775035381317139
    7. ' ]' → logprob: -7.900035381317139
    8. ']!=' → logprob: -8.150035858154297
    9. ' ==' → logprob: -8.775035858154297
    10. ']<' → logprob: -9.150035858154297

Token 999: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.394548237323761
    2. ' +' → logprob: -1.1445481777191162
    3. '<=' → logprob: -5.644548416137695
    4. ' <=' → logprob: -6.144548416137695
    5. ' !=' → logprob: -7.769548416137695
    6. '!=' → logprob: -7.894548416137695
    7. '==' → logprob: -8.019548416137695
    8. '<' → logprob: -8.269548416137695
    9. '+c' → logprob: -8.394548416137695
    10. ' ==' → logprob: -8.519548416137695

Token 1000: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -7.822646693966817e-06
    2. ' float' → logprob: -12.125007629394531
    3. '	float' → logprob: -13.125007629394531
    4. '=float' → logprob: -15.500007629394531
    5. '   ' → logprob: -16.50000762939453
    6. '<float' → logprob: -18.00000762939453
    7. '(float' → logprob: -19.37500762939453
    8. ',float' → logprob: -19.37500762939453
    9. '```' → logprob: -20.25000762939453
    10. 'flo' → logprob: -20.62500762939453

Token 1001: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002406090497970581
    2. ''in' → logprob: -8.375240325927734
    3. '['' → logprob: -12.625240325927734
    4. 'inf' → logprob: -13.125240325927734
    5. ''s' → logprob: -14.000240325927734
    6. '("' → logprob: -14.000240325927734
    7. ''inc' → logprob: -14.500240325927734
    8. ''' → logprob: -14.625240325927734
    9. '(' → logprob: -14.875240325927734
    10. '   ' → logprob: -15.375240325927734

Token 1002: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.1994775377388578e-05
    2. ''in' → logprob: -11.625012397766113
    3. ''' → logprob: -12.750012397766113
    4. ' inf' → logprob: -17.000011444091797
    5. 'in' → logprob: -17.375011444091797
    6. '')' → logprob: -18.375011444091797
    7. ''s' → logprob: -19.375011444091797
    8. '0' → logprob: -19.500011444091797
    9. ''inc' → logprob: -19.500011444091797
    10. '('' → logprob: -20.000011444091797

Token 1003: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015912731178104877
    2. '')' → logprob: -7.126591205596924
    3. '):' → logprob: -7.751591205596924
    4. '       ' → logprob: -9.251591682434082
    5. ' or' → logprob: -9.376591682434082
    6. ' )' → logprob: -9.376591682434082
    7. '):
' → logprob: -9.501591682434082
    8. '           ' → logprob: -12.751591682434082
    9. '   ' → logprob: -13.126591682434082
    10. 'or' → logprob: -13.251591682434082

Token 1004: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.004590092226862907
    2. 'or' → logprob: -6.004590034484863
    3. ':' → logprob: -6.254590034484863
    4. '           ' → logprob: -9.504590034484863
    5. '       ' → logprob: -9.754590034484863
    6. '	or' → logprob: -10.629590034484863
    7. ':
' → logprob: -11.004590034484863
    8. ')' → logprob: -12.504590034484863
    9. '   ' → logprob: -12.879590034484863
    10. ' :' → logprob: -13.129590034484863

Token 1005: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0011786778923124075
    2. ' dist' → logprob: -6.751178741455078
    3. '   ' → logprob: -11.751178741455078
    4. '(dist' → logprob: -15.126178741455078
    5. '	dist' → logprob: -15.751178741455078
    6. '           ' → logprob: -15.751178741455078
    7. '       ' → logprob: -17.251178741455078
    8. '  ' → logprob: -17.376178741455078
    9. '               ' → logprob: -18.126178741455078
    10. '_dist' → logprob: -18.251178741455078

Token 1006: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0029009245336055756
    2. '1' → logprob: -5.877901077270508
    3. '```' → logprob: -9.627901077270508
    4. '_' → logprob: -11.752901077270508
    5. '[' → logprob: -11.877901077270508
    6. '``' → logprob: -13.127901077270508
    7. '
' → logprob: -13.315401077270508
    8. ' ' → logprob: -13.690401077270508
    9. '_orig' → logprob: -13.690401077270508
    10. 'a' → logprob: -13.752901077270508

Token 1007: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.741137283621356e-05
    2. 'a' → logprob: -9.875057220458984
    3. '<a' → logprob: -13.000057220458984
    4. '```' → logprob: -13.875057220458984
    5. '[' → logprob: -14.375057220458984
    6. '>a' → logprob: -14.750057220458984
    7. '
' → logprob: -15.250057220458984
    8. '[
' → logprob: -15.500057220458984
    9. '	a' → logprob: -15.500057220458984
    10. ' a' → logprob: -15.500057220458984

Token 1008: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8130035996437073
    2. ']' → logprob: -1.3130035400390625
    3. ' ==' → logprob: -1.5630035400390625
    4. ']==' → logprob: -2.6880035400390625
    5. ')' → logprob: -4.6880035400390625
    6. ')==' → logprob: -7.5630035400390625
    7. '']==' → logprob: -9.063003540039062
    8. '']' → logprob: -10.313003540039062
    9. '}' → logprob: -11.438003540039062
    10. '[' → logprob: -11.438003540039062

Token 1009: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03805435076355934
    2. ' ==' → logprob: -3.2880544662475586
    3. ']==' → logprob: -12.038054466247559
    4. '==
' → logprob: -12.163054466247559
    5. ')==' → logprob: -14.163054466247559
    6. '===' → logprob: -15.663054466247559
    7. '   ' → logprob: -15.788054466247559
    8. '()==' → logprob: -15.788054466247559
    9. '	' → logprob: -15.913054466247559
    10. '=' → logprob: -15.913054466247559

Token 1010: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -3.7697225252486533e-06
    2. ' float' → logprob: -12.500003814697266
    3. '=float' → logprob: -18.000003814697266
    4. '	float' → logprob: -18.750003814697266
    5. 'inf' → logprob: -19.000003814697266
    6. '(float' → logprob: -20.125003814697266
    7. '<float' → logprob: -20.250003814697266
    8. 'flo' → logprob: -21.625003814697266
    9. ',float' → logprob: -22.000003814697266
    10. '.float' → logprob: -22.875003814697266

Token 1011: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.961759259458631e-06
    2. ''in' → logprob: -12.375004768371582
    3. ''s' → logprob: -15.000004768371582
    4. ' ('' → logprob: -16.0000057220459
    5. '(' → logprob: -16.8750057220459
    6. '(in' → logprob: -16.8750057220459
    7. '("' → logprob: -17.0000057220459
    8. ''' → logprob: -17.8750057220459
    9. 'inf' → logprob: -18.0000057220459
    10. ''il' → logprob: -18.0000057220459

Token 1012: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.004739126190543175
    2. ''in' → logprob: -5.379739284515381
    3. '('' → logprob: -9.379738807678223
    4. ''' → logprob: -10.504738807678223
    5. ''inc' → logprob: -13.379738807678223
    6. ''s' → logprob: -14.004738807678223
    7. ''ap' → logprob: -14.129738807678223
    8. ' inf' → logprob: -14.254738807678223
    9. 'float' → logprob: -14.879738807678223
    10. ''un' → logprob: -15.004738807678223

Token 1013: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37784579396247864
    2. '):' → logprob: -1.2528457641601562
    3. ')' → logprob: -3.6278457641601562
    4. ''):
' → logprob: -6.627845764160156
    5. '       ' → logprob: -7.502845764160156
    6. ''):' → logprob: -8.252845764160156
    7. ':' → logprob: -9.252845764160156
    8. ':
' → logprob: -9.877845764160156
    9. '   ' → logprob: -10.252845764160156
    10. '):

' → logprob: -10.377845764160156

Token 1014: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041440497152507305
    2. '       ' → logprob: -5.879144191741943
    3. ' continue' → logprob: -7.379144191741943
    4. ':' → logprob: -8.129143714904785
    5. 'continue' → logprob: -8.129143714904785
    6. ':
' → logprob: -10.254143714904785
    7. '	       ' → logprob: -10.504143714904785
    8. '		' → logprob: -11.754143714904785
    9. '               ' → logprob: -11.879143714904785
    10. ',' → logprob: -11.879143714904785

Token 1015: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25797101855278015
    2. 'print' → logprob: -1.5079710483551025
    3. ' print' → logprob: -5.507970809936523
    4. '           ' → logprob: -6.382970809936523
    5. '   ' → logprob: -8.632970809936523
    6. '
' → logprob: -10.007970809936523
    7. '```' → logprob: -10.007970809936523
    8. ' ' → logprob: -12.632970809936523
    9. '               ' → logprob: -13.007970809936523
    10. '	print' → logprob: -13.507970809936523

Token 1016: ' Impossible' (ID: 136939)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.531813702778891e-05
    2. '       ' → logprob: -9.50009536743164
    3. ' print' → logprob: -11.37509536743164
    4. '           ' → logprob: -12.12509536743164
    5. '#' → logprob: -13.12509536743164
    6. '   ' → logprob: -13.62509536743164
    7. '```' → logprob: -15.75009536743164
    8. '	print' → logprob: -17.12509536743164
    9. '               ' → logprob: -17.87509536743164
    10. 'Print' → logprob: -18.25009536743164

Token 1017: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18383097648620605
    2. '           ' → logprob: -1.933830976486206
    3. ' de' → logprob: -4.308831214904785
    4. 'print' → logprob: -5.183831214904785
    5. ':' → logprob: -6.183831214904785
    6. ' print' → logprob: -7.808831214904785
    7. 'à' → logprob: -7.933831214904785
    8. 'to' → logprob: -8.058831214904785
    9. 'de' → logprob: -8.683831214904785
    10. ' to' → logprob: -8.683831214904785

Token 1018: ' faire' (ID: 8119)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.13337549567222595
    2. 'atte' → logprob: -2.258375406265259
    3. 'jo' → logprob: -4.508375644683838
    4. ' rejoindre' → logprob: -5.008375644683838
    5. ' joindre' → logprob: -7.133375644683838
    6. ' atteindre' → logprob: -7.883375644683838
    7. 'ré' → logprob: -8.13337516784668
    8. 'util' → logprob: -8.88337516784668
    9. 'join' → logprob: -9.00837516784668
    10. 'aller' → logprob: -9.00837516784668

Token 1019: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.09120384603738785
    2. 'r' → logprob: -2.8412039279937744
    3. 'ce' → logprob: -4.216203689575195
    4. 'che' → logprob: -5.341203689575195
    5. ' ce' → logprob: -5.466203689575195
    6. ' le' → logprob: -5.841203689575195
    7. 'un' → logprob: -7.341203689575195
    8. 'pass' → logprob: -8.341203689575195
    9. '   ' → logprob: -8.591203689575195
    10. 'cel' → logprob: -8.716203689575195

Token 1020: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.031866405159235
    2. 'print' → logprob: -4.031866550445557
    3. 'traj' → logprob: -4.656866550445557
    4. 'nou' → logprob: -6.406866550445557
    5. 'jour' → logprob: -8.281866073608398
    6. 'changer' → logprob: -8.531866073608398
    7. 'voy' → logprob: -8.781866073608398
    8. 'path' → logprob: -9.031866073608398
    9. 's' → logprob: -9.031866073608398
    10. 'change' → logprob: -9.031866073608398

Token 1021: ' via' (ID: 4493)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13615748286247253
    2. '           ' → logprob: -2.761157512664795
    3. '
' → logprob: -3.261157512664795
    4. 'print' → logprob: -4.261157512664795
    5. ',' → logprob: -4.886157512664795
    6. ':' → logprob: -6.636157512664795
    7. ' print' → logprob: -7.011157512664795
    8. ':
' → logprob: -7.261157512664795
    9. '        
' → logprob: -8.386157035827637
    10. '   ' → logprob: -8.511157035827637

Token 1022: ' cette' (ID: 7696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.862206757068634
    2. ' cette' → logprob: -0.987206757068634
    3. ' l' → logprob: -2.3622066974639893
    4. 'a' → logprob: -2.8622066974639893
    5. 'in' → logprob: -4.737206935882568
    6. 'c' → logprob: -4.737206935882568
    7. 'b' → logprob: -4.737206935882568
    8. ' this' → logprob: -5.112206935882568
    9. 'cet' → logprob: -5.487206935882568
    10. ' ce' → logprob: -5.612206935882568

Token 1023: ' inversion' (ID: 70924)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.07249530404806137
    2. ' ar' → logprob: -2.697495222091675
    3. 'route' → logprob: -7.072495460510254
    4. 'arr' → logprob: -7.822495460510254
    5. ' route' → logprob: -8.072495460510254
    6. 'are' → logprob: -8.572495460510254
    7. 'voie' → logprob: -8.947495460510254
    8. ' ' → logprob: -9.072495460510254
    9. 'edge' → logprob: -9.197495460510254
    10. 'aré' → logprob: -9.197495460510254

Token 1024: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011359741911292076
    2. '           ' → logprob: -5.011359691619873
    3. '
' → logprob: -6.136359691619873
    4. 'print' → logprob: -6.761359691619873
    5. ':
' → logprob: -7.386359691619873
    6. ':' → logprob: -7.886359691619873
    7. ',' → logprob: -8.511360168457031
    8. ' print' → logprob: -10.511360168457031
    9. '   ' → logprob: -10.761360168457031
    10. '        
' → logprob: -10.886360168457031

Token 1025: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3626447021961212
    2. '       ' → logprob: -1.2376446723937988
    3. ':
' → logprob: -4.987644672393799
    4. '
' → logprob: -5.612644672393799
    5. 'continue' → logprob: -6.612644672393799
    6. ':' → logprob: -6.987644672393799
    7. ' continue' → logprob: -7.237644672393799
    8. '               ' → logprob: -7.987644672393799
    9. '\n' → logprob: -9.862645149230957
    10. ',' → logprob: -10.112645149230957

Token 1026: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054180145263671875
    2. 'print' → logprob: -3.179180145263672
    3. ' print' → logprob: -4.679180145263672
    4. '           ' → logprob: -6.429180145263672
    5. '   ' → logprob: -9.554180145263672
    6. ' if' → logprob: -9.804180145263672
    7. '```' → logprob: -10.429180145263672
    8. '	print' → logprob: -11.054180145263672
    9. '	' → logprob: -11.304180145263672
    10. 'if' → logprob: -11.429180145263672

Token 1027: '_dist' (ID: 37968)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.07273785769939423
    2. '_dist' → logprob: -3.0727379322052
    3. '_d' → logprob: -5.197737693786621
    4. '_distance' → logprob: -5.197737693786621
    5. '_c' → logprob: -5.322737693786621
    6. '_val' → logprob: -5.447737693786621
    7. '_' → logprob: -6.822737693786621
    8. 'cost' → logprob: -7.072737693786621
    9. ' =' → logprob: -7.322737693786621
    10. '=' → logprob: -8.197737693786621

Token 1028: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193288922309875
    2. ' =' → logprob: -1.5019328594207764
    3. '>' → logprob: -13.126933097839355
    4. '   ' → logprob: -14.751933097839355
    5. ')' → logprob: -15.376933097839355
    6. ',' → logprob: -15.376933097839355
    7. '[' → logprob: -15.626933097839355
    8. '=float' → logprob: -15.876933097839355
    9. ' ' → logprob: -16.12693214416504
    10. '=None' → logprob: -16.37693214416504

Token 1029: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -6.511406809295295e-06
    2. 'dist' → logprob: -12.000006675720215
    3. ' float' → logprob: -15.625006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '	float' → logprob: -19.5000057220459
    6. '=float' → logprob: -20.3750057220459
    7. '       ' → logprob: -21.1250057220459
    8. '(float' → logprob: -21.3750057220459
    9. '```' → logprob: -21.3750057220459
    10. 'flo' → logprob: -21.3750057220459

Token 1030: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0564331205387134e-05
    2. ''in' → logprob: -11.62501049041748
    3. ' ('' → logprob: -14.12501049041748
    4. '(in' → logprob: -14.87501049041748
    5. '(' → logprob: -15.25001049041748
    6. ''s' → logprob: -15.87501049041748
    7. 'inf' → logprob: -16.500011444091797
    8. '("' → logprob: -17.625011444091797
    9. ''inc' → logprob: -17.875011444091797
    10. ''' → logprob: -18.000011444091797

Token 1031: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0005583931924775243
    2. ''in' → logprob: -7.500558376312256
    3. ''' → logprob: -12.250558853149414
    4. '('' → logprob: -14.625558853149414
    5. ''inc' → logprob: -17.000558853149414
    6. ''s' → logprob: -17.125558853149414
    7. ' inf' → logprob: -17.500558853149414
    8. '-inf' → logprob: -17.875558853149414
    9. ''un' → logprob: -18.125558853149414
    10. ''ap' → logprob: -18.250558853149414

Token 1032: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023343777284026146
    2. '')' → logprob: -3.773343801498413
    3. '       ' → logprob: -10.023344039916992
    4. ')
' → logprob: -10.648344039916992
    5. '')
' → logprob: -11.398344039916992
    6. ')')
' → logprob: -11.523344039916992
    7. ')'' → logprob: -12.398344039916992
    8. ')'
' → logprob: -13.273344039916992
    9. ' )' → logprob: -14.148344039916992
    10. '           ' → logprob: -15.023344039916992

Token 1033: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00987743865698576
    2. 'else' → logprob: -4.7598772048950195
    3. ' else' → logprob: -6.8848772048950195
    4. '<|end|>' → logprob: -8.75987720489502
    5. '
' → logprob: -10.13487720489502
    6. 'elif' → logprob: -11.63487720489502
    7. ')' → logprob: -11.75987720489502
    8. '           ' → logprob: -12.13487720489502
    9. '   ' → logprob: -12.38487720489502
    10. '        
' → logprob: -12.63487720489502

Token 1034: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.17624619603157043
    2. ' else' → logprob: -2.301246166229248
    3. '       ' → logprob: -2.801246166229248
    4. '   ' → logprob: -8.176246643066406
    5. 'elif' → logprob: -8.551246643066406
    6. '	else' → logprob: -9.051246643066406
    7. ':
' → logprob: -10.051246643066406
    8. '
' → logprob: -10.926246643066406
    9. '        
' → logprob: -11.426246643066406
    10. ':' → logprob: -11.551246643066406

Token 1035: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5743629932403564
    2. ':' → logprob: -1.0743629932403564
    3. ':
' → logprob: -2.4493629932403564
    4. ' new' → logprob: -5.324362754821777
    5. 'new' → logprob: -6.824362754821777
    6. ' :' → logprob: -7.324362754821777
    7. ' :
' → logprob: -8.199362754821777
    8. ' =' → logprob: -8.324362754821777
    9. '       ' → logprob: -8.449362754821777
    10. ' ' → logprob: -8.574362754821777

Token 1036: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024540981277823448
    2. ' new' → logprob: -3.774540901184082
    3. 'new' → logprob: -7.024540901184082
    4. '       ' → logprob: -8.399540901184082
    5. ' ' → logprob: -9.524540901184082
    6. '               ' → logprob: -10.274540901184082
    7. '	       ' → logprob: -10.524540901184082
    8. '		' → logprob: -11.524540901184082
    9. '   ' → logprob: -11.774540901184082
    10. '        ' → logprob: -12.149540901184082

Token 1037: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.08974693715572357
    2. ' new' → logprob: -2.4647469520568848
    3. '           ' → logprob: -7.589746952056885
    4. 'dist' → logprob: -8.339746475219727
    5. '   ' → logprob: -10.589746475219727
    6. '               ' → logprob: -10.964746475219727
    7. ' dist' → logprob: -11.339746475219727
    8. '	new' → logprob: -12.839746475219727
    9. ' ' → logprob: -12.964746475219727
    10. '       ' → logprob: -14.214746475219727

Token 1038: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -12.125017166137695
    3. '_d' → logprob: -12.250017166137695
    4. ' _' → logprob: -13.375017166137695
    5. 'dist' → logprob: -13.625017166137695
    6. '```' → logprob: -13.875017166137695
    7. '_distance' → logprob: -14.250017166137695
    8. ')_' → logprob: -14.875017166137695
    9. ''_' → logprob: -14.875017166137695
    10. '_DIST' → logprob: -15.125017166137695

Token 1039: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '＝' → logprob: -16.60020637512207
    4. '=
' → logprob: -17.72520637512207
    5. ' =
' → logprob: -19.47520637512207
    6. '=

' → logprob: -19.60020637512207
    7. ')' → logprob: -20.10020637512207
    8. '[' → logprob: -20.10020637512207
    9. ' ' → logprob: -20.60020637512207
    10. '	' → logprob: -20.72520637512207

Token 1040: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014163747429847717
    2. ' dist' → logprob: -4.264163970947266
    3. '	dist' → logprob: -15.764163970947266
    4. '   ' → logprob: -16.139163970947266
    5. '(dist' → logprob: -17.764163970947266
    6. '       ' → logprob: -17.764163970947266
    7. '           ' → logprob: -18.014163970947266
    8. '_dist' → logprob: -19.389163970947266
    9. 'Dist' → logprob: -19.514163970947266
    10. '.dist' → logprob: -19.889163970947266

Token 1041: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '[b' → logprob: -13.000004768371582
    3. 'new' → logprob: -13.125004768371582
    4. '```' → logprob: -14.750004768371582
    5. 'b' → logprob: -16.0000057220459
    6. ' ' → logprob: -16.7500057220459
    7. ' new' → logprob: -16.7500057220459
    8. '[new' → logprob: -17.0000057220459
    9. '   ' → logprob: -17.3750057220459
    10. '１' → logprob: -17.7500057220459

Token 1042: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.3438327843905427e-05
    2. '[' → logprob: -10.87502384185791
    3. 'b' → logprob: -13.62502384185791
    4. ' [' → logprob: -14.37502384185791
    5. '[new' → logprob: -14.37502384185791
    6. '[v' → logprob: -14.50002384185791
    7. '```' → logprob: -14.75002384185791
    8. '[c' → logprob: -15.37502384185791
    9. '[token' → logprob: -15.50002384185791
    10. '[
' → logprob: -15.62502384185791

Token 1043: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39138922095298767
    2. '+' → logprob: -1.14138925075531
    3. ']' → logprob: -6.3913893699646
    4. '+c' → logprob: -6.8913893699646
    5. ')' → logprob: -7.0163893699646
    6. ']+' → logprob: -7.3913893699646
    7. ')+' → logprob: -8.141388893127441
    8. ',' → logprob: -13.641388893127441
    9. '   ' → logprob: -13.766388893127441
    10. '+]' → logprob: -13.891388893127441

Token 1044: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41628965735435486
    2. ' +' → logprob: -1.1662896871566772
    3. '+c' → logprob: -3.5412895679473877
    4. '+C' → logprob: -12.166289329528809
    5. '+
' → logprob: -12.541289329528809
    6. '+b' → logprob: -13.541289329528809
    7. ' +
' → logprob: -14.541289329528809
    8. '＋' → logprob: -14.541289329528809
    9. '<|end|>' → logprob: -14.666289329528809
    10. '+p' → logprob: -14.791289329528809

Token 1045: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022585332393646
    2. ' c' → logprob: -1.9102258682250977
    3. ' ' → logprob: -14.785225868225098
    4. '	c' → logprob: -15.035225868225098
    5. '```' → logprob: -15.535225868225098
    6. '`' → logprob: -15.785225868225098
    7. ' ' → logprob: -15.785225868225098
    8. ''' → logprob: -15.910225868225098
    9. '"' → logprob: -16.41022491455078
    10. '1' → logprob: -16.53522491455078

Token 1046: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020720958709717
    2. '+' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.100207328796387
    4. '<|end|>' → logprob: -15.725207328796387
    5. ' ' → logprob: -17.47520637512207
    6. '           ' → logprob: -17.85020637512207
    7. ' +
' → logprob: -17.97520637512207
    8. '```' → logprob: -18.10020637512207
    9. ')' → logprob: -18.85020637512207
    10. '+
' → logprob: -19.22520637512207

Token 1047: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.615255839889869e-05
    2. ' dist' → logprob: -9.250096321105957
    3. '	dist' → logprob: -20.25009536743164
    4. '_dist' → logprob: -22.37509536743164
    5. '.dist' → logprob: -22.50009536743164
    6. '   ' → logprob: -22.62509536743164
    7. '(dist' → logprob: -22.62509536743164
    8. 'dest' → logprob: -22.75009536743164
    9. 'Dist' → logprob: -23.87509536743164
    10. '       ' → logprob: -25.37509536743164

Token 1048: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.125
    3. '   ' → logprob: -17.75
    4. '_' → logprob: -18.625
    5. ' ' → logprob: -18.875
    6. '``' → logprob: -19.25
    7. '２' → logprob: -19.3125
    8. '`' → logprob: -19.375
    9. 'cost' → logprob: -19.375
    10. '۲' → logprob: -19.5625

Token 1049: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.816093228830141e-06
    2. 'a' → logprob: -12.87500286102295
    3. ' [' → logprob: -16.250001907348633
    4. '[' → logprob: -16.250001907348633
    5. '```' → logprob: -18.000001907348633
    6. '(a' → logprob: -18.625001907348633
    7. ' a' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '[A' → logprob: -20.125001907348633
    10. '	a' → logprob: -20.125001907348633

Token 1050: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052704960107803345
    2. '       ' → logprob: -3.0527050495147705
    3. '<|end|>' → logprob: -6.052704811096191
    4. ']' → logprob: -6.552704811096191
    5. '<|end|>' → logprob: -8.802704811096191
    6. '}' → logprob: -8.927704811096191
    7. '   ' → logprob: -11.677704811096191
    8. '')' → logprob: -11.677704811096191
    9. ' )' → logprob: -12.427704811096191
    10. '```' → logprob: -12.802704811096191

Token 1051: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06277397274971008
    2. '<|end|>' → logprob: -3.4377739429473877
    3. '
' → logprob: -4.687774181365967
    4. ' if' → logprob: -5.187774181365967
    5. '```' → logprob: -5.437774181365967
    6. '        
' → logprob: -5.437774181365967
    7. '   ' → logprob: -6.562774181365967
    8. '  
' → logprob: -7.437774181365967
    9. '\n' → logprob: -7.812774181365967
    10. 'if' → logprob: -7.937774181365967

Token 1052: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006554892170242965
    2. '        
' → logprob: -7.750655651092529
    3. '
' → logprob: -9.250655174255371
    4. '   ' → logprob: -9.500655174255371
    5. '```' → logprob: -10.500655174255371
    6. '<|end|>' → logprob: -11.875655174255371
    7. '    
' → logprob: -12.125655174255371
    8. '  
' → logprob: -12.625655174255371
    9. 'if' → logprob: -12.750655174255371
    10. ' if' → logprob: -13.000655174255371

Token 1053: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25604432821273804
    2. '       ' → logprob: -1.5060443878173828
    3. ' if' → logprob: -5.506044387817383
    4. '```' → logprob: -10.756044387817383
    5. '   ' → logprob: -11.256044387817383
    6. '	if' → logprob: -12.131044387817383
    7. 'result' → logprob: -13.256044387817383
    8. 'print' → logprob: -13.381044387817383
    9. '        
' → logprob: -13.881044387817383
    10. '
' → logprob: -15.881044387817383

Token 1054: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.12692926824092865
    2. 'new' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.50192928314209
    4. '_new' → logprob: -15.25192928314209
    5. '	new' → logprob: -16.126928329467773
    6. 'New' → logprob: -16.251928329467773
    7. '    ' → logprob: -16.626928329467773
    8. '   ' → logprob: -16.626928329467773
    9. '(new' → logprob: -16.876928329467773
    10. ')new' → logprob: -17.626928329467773

Token 1055: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.170270353322849e-05
    2. '_' → logprob: -9.750061988830566
    3. 'dist' → logprob: -12.875061988830566
    4. '_diff' → logprob: -15.750061988830566
    5. '_DIST' → logprob: -16.25006103515625
    6. 'Dist' → logprob: -16.50006103515625
    7. '```' → logprob: -16.62506103515625
    8. '_
' → logprob: -16.75006103515625
    9. '<' → logprob: -16.75006103515625
    10. '_distance' → logprob: -16.87506103515625

Token 1056: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1003987118601799
    2. '<' → logprob: -2.3503987789154053
    3. ' ==' → logprob: -9.225399017333984
    4. '[' → logprob: -10.725399017333984
    5. '==' → logprob: -10.975399017333984
    6. '<int' → logprob: -11.350399017333984
    7. '<|end|>' → logprob: -11.475399017333984
    8. '{' → logprob: -12.850399017333984
    9. ' ' → logprob: -12.850399017333984
    10. '<class' → logprob: -12.975399017333984

Token 1057: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03804171830415726
    2. ' dist' → logprob: -3.288041830062866
    3. '	dist' → logprob: -16.163042068481445
    4. '(dist' → logprob: -16.413042068481445
    5. 'dest' → logprob: -16.788042068481445
    6. '_dist' → logprob: -17.163042068481445
    7. '.dist' → logprob: -18.413042068481445
    8. 'Dist' → logprob: -18.913042068481445
    9. 'float' → logprob: -19.288042068481445
    10. ' ' → logprob: -19.538042068481445

Token 1058: '_orig' (ID: 96685)
  Prédit: '_orig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orig' → logprob: -5.800739018013701e-05
    2. '1' → logprob: -10.3750581741333
    3. 'orig' → logprob: -10.7500581741333
    4. 'Orig' → logprob: -12.7500581741333
    5. '_or' → logprob: -14.1250581741333
    6. '```' → logprob: -14.7500581741333
    7. '[' → logprob: -15.0000581741333
    8. '_ori' → logprob: -15.7500581741333
    9. '(orig' → logprob: -16.125057220458984
    10. '
' → logprob: -16.500057220458984

Token 1059: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08027318865060806
    2. ':
' → logprob: -2.580273151397705
    3. '           ' → logprob: -6.955273151397705
    4. '       ' → logprob: -7.830273151397705
    5. ' or' → logprob: -12.080273628234863
    6. ':
' → logprob: -12.205273628234863
    7. '   ' → logprob: -12.830273628234863
    8. '):
' → logprob: -13.080273628234863
    9. ' and' → logprob: -13.080273628234863
    10. ')' → logprob: -13.205273628234863

Token 1060: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008608423522673547
    2. 'print' → logprob: -7.875860691070557
    3. '	       ' → logprob: -8.500861167907715
    4. ' print' → logprob: -9.125861167907715
    5. '       ' → logprob: -9.375861167907715
    6. '		' → logprob: -9.625861167907715
    7. '
' → logprob: -12.250861167907715
    8. '```' → logprob: -12.500861167907715
    9. '               ' → logprob: -13.625861167907715
    10. ':' → logprob: -14.125861167907715

Token 1061: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0033211270347237587
    2. '           ' → logprob: -5.753321170806885
    3. ' print' → logprob: -8.878320693969727
    4. '       ' → logprob: -12.878320693969727
    5. '	print' → logprob: -14.628320693969727
    6. '               ' → logprob: -14.753320693969727
    7. '   ' → logprob: -15.128320693969727
    8. '```' → logprob: -15.628320693969727
    9. '		' → logprob: -15.753320693969727
    10. 'yield' → logprob: -17.128320693969727

Token 1062: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.13461574912071228
    2. '"H' → logprob: -2.134615659713745
    3. 'H' → logprob: -5.009615898132324
    4. '('' → logprob: -7.634615898132324
    5. ''H' → logprob: -8.134615898132324
    6. '"' → logprob: -8.759615898132324
    7. '(' → logprob: -11.009615898132324
    8. 'Happy' → logprob: -11.009615898132324
    9. '(H' → logprob: -11.509615898132324
    10. '   ' → logprob: -12.884615898132324

Token 1063: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.200166469876422e-06
    2. '"H' → logprob: -12.250004768371582
    3. ''H' → logprob: -15.500004768371582
    4. 'Happy' → logprob: -15.875004768371582
    5. ' HAPPY' → logprob: -18.3750057220459
    6. 'happy' → logprob: -19.5000057220459
    7. '`' → logprob: -19.7500057220459
    8. '```' → logprob: -20.0000057220459
    9. '	H' → logprob: -20.1250057220459
    10. '"' → logprob: -20.5000057220459

Token 1064: 'APPY' (ID: 124449)
  Prédit: 'APPY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APPY' → logprob: -0.004208989907056093
    2. 'A' → logprob: -5.504209041595459
    3. 'APP' → logprob: -9.0042085647583
    4. 'AP' → logprob: -12.0042085647583
    5. 'H' → logprob: -13.6292085647583
    6. 'appy' → logprob: -15.6292085647583
    7. '"' → logprob: -17.254209518432617
    8. '   ' → logprob: -17.254209518432617
    9. 'Happy' → logprob: -17.254209518432617
    10. 'APPER' → logprob: -17.754209518432617

Token 1065: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00408528558909893
    2. '")
' → logprob: -5.504085063934326
    3. '")
' → logprob: -12.504085540771484
    4. ')' → logprob: -12.879085540771484
    5. '"' → logprob: -14.879085540771484
    6. ' ")' → logprob: -16.754085540771484
    7. '");' → logprob: -16.754085540771484
    8. '```' → logprob: -17.129085540771484
    9. ')")' → logprob: -17.254085540771484
    10. '')' → logprob: -17.254085540771484

Token 1066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25509780645370483
    2. 'elif' → logprob: -1.5050978660583496
    3. ' elif' → logprob: -6.25509786605835
    4. '```' → logprob: -7.63009786605835
    5. '   ' → logprob: -8.630097389221191
    6. '
' → logprob: -9.130097389221191
    7. '<|end|>' → logprob: -9.130097389221191
    8. '        
' → logprob: -9.505097389221191
    9. '\n' → logprob: -9.505097389221191
    10. '	elif' → logprob: -9.880097389221191

Token 1067: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01429290883243084
    2. '       ' → logprob: -4.2642927169799805
    3. '```' → logprob: -9.63929271697998
    4. 'else' → logprob: -10.13929271697998
    5. ' elif' → logprob: -11.13929271697998
    6. 'el' → logprob: -12.01429271697998
    7. 'El' → logprob: -13.13929271697998
    8. '   ' → logprob: -14.13929271697998
    9. '        
' → logprob: -14.76429271697998
    10. '
' → logprob: -15.26429271697998

Token 1068: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.07888989895582199
    2. 'new' → logprob: -2.578889846801758
    3. '(new' → logprob: -16.328889846801758
    4. '_new' → logprob: -17.453889846801758
    5. '	new' → logprob: -17.703889846801758
    6. ' ' → logprob: -17.828889846801758
    7. ' ' → logprob: -17.828889846801758
    8. '   ' → logprob: -18.703889846801758
    9. ')new' → logprob: -18.703889846801758
    10. '$new' → logprob: -18.828889846801758

Token 1069: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.003664206713438034
    2. 'new' → logprob: -5.628664016723633
    3. ' new' → logprob: -10.253664016723633
    4. 'dist' → logprob: -10.878664016723633
    5. '(new' → logprob: -13.253664016723633
    6. '_new' → logprob: -13.628664016723633
    7. 'w' → logprob: -13.628664016723633
    8. 'Dist' → logprob: -13.753664016723633
    9. '_d' → logprob: -14.003664016723633
    10. '[new' → logprob: -14.003664016723633

Token 1070: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04887552931904793
    2. '==' → logprob: -3.048875570297241
    3. ' <=' → logprob: -8.17387580871582
    4. '<=' → logprob: -12.04887580871582
    5. ')==' → logprob: -15.92387580871582
    6. '==
' → logprob: -16.04887580871582
    7. ' ==
' → logprob: -17.29887580871582
    8. '===' → logprob: -17.29887580871582
    9. ']==' → logprob: -17.42387580871582
    10. ' ' → logprob: -17.54887580871582

Token 1071: ' dist' (ID: 3601)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.32146868109703064
    2. ' dist' → logprob: -1.446468710899353
    3. '"S' → logprob: -3.9464685916900635
    4. ' "' → logprob: -4.446468830108643
    5. 'dist' → logprob: -4.821468830108643
    6. '"H' → logprob: -8.196468353271484
    7. ''S' → logprob: -10.446468353271484
    8. '"s' → logprob: -10.696468353271484
    9. ''' → logprob: -10.821468353271484
    10. ' s' → logprob: -11.071468353271484

Token 1072: '_orig' (ID: 96685)
  Prédit: '_orig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orig' → logprob: -0.008152224123477936
    2. '"' → logprob: -5.133152008056641
    3. '[' → logprob: -6.258152008056641
    4. 'orig' → logprob: -8.50815200805664
    5. ''' → logprob: -10.25815200805664
    6. '1' → logprob: -11.13315200805664
    7. 'Orig' → logprob: -11.38315200805664
    8. '["' → logprob: -11.75815200805664
    9. '_ori' → logprob: -12.13315200805664
    10. '"_' → logprob: -12.25815200805664

Token 1073: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7931311130523682
    2. '           ' → logprob: -0.9181311130523682
    3. ':
' → logprob: -1.9181311130523682
    4. '       ' → logprob: -7.543130874633789
    5. '<|end|>' → logprob: -8.043130874633789
    6. '	       ' → logprob: -9.293130874633789
    7. ',' → logprob: -9.668130874633789
    8. '		' → logprob: -9.793130874633789
    9. ' or' → logprob: -9.793130874633789
    10. '               ' → logprob: -9.793130874633789

Token 1074: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046272401232272387
    2. '	       ' → logprob: -7.750462532043457
    3. '		' → logprob: -10.875462532043457
    4. 'print' → logprob: -11.875462532043457
    5. '               ' → logprob: -13.250462532043457
    6. ' print' → logprob: -14.000462532043457
    7. '	           ' → logprob: -14.000462532043457
    8. '       ' → logprob: -14.625462532043457
    9. '		   ' → logprob: -14.625462532043457
    10. '	   ' → logprob: -14.875462532043457

Token 1075: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03896545618772507
    2. 'print' (adapté à ' print') → logprob: -3.2889654636383057
    3. ' print' → logprob: -7.038965225219727
    4. '       ' → logprob: -10.788965225219727
    5. '               ' → logprob: -11.288965225219727
    6. '	       ' → logprob: -11.663965225219727
    7. '		' → logprob: -13.163965225219727
    8. '	print' → logprob: -13.538965225219727
    9. '   ' → logprob: -14.163965225219727
    10. '```' → logprob: -15.288965225219727

Token 1076: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. '"' → logprob: -15.000007629394531
    4. '"S' → logprob: -15.000007629394531
    5. ' ("' → logprob: -18.12500762939453
    6. '('' → logprob: -18.87500762939453
    7. '(
' → logprob: -19.25000762939453
    8. '(s' → logprob: -19.50000762939453
    9. '(S' → logprob: -20.50000762939453
    10. 's' → logprob: -20.50000762939453

Token 1077: 'SOS' (ID: 157130)
  Prédit: 'SOS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SOS' → logprob: -0.0052414643578231335
    2. '"S' → logprob: -5.255241394042969
    3. 's' → logprob: -12.630241394042969
    4. '"s' → logprob: -13.630241394042969
    5. 'S' → logprob: -13.880241394042969
    6. '"' → logprob: -14.005241394042969
    7. ''S' → logprob: -14.130241394042969
    8. ' SOS' → logprob: -14.380241394042969
    9. 'SO' → logprob: -16.38024139404297
    10. '"So' → logprob: -18.13024139404297

Token 1078: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.8624639324116288e-06
    2. 'SO' → logprob: -14.375001907348633
    3. '"O' → logprob: -14.750001907348633
    4. 'S' → logprob: -15.375001907348633
    5. 'OS' → logprob: -15.500001907348633
    6. ' O' → logprob: -15.875001907348633
    7. '```' → logprob: -16.000001907348633
    8. 'О' → logprob: -16.875001907348633
    9. '	O' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.500001907348633

Token 1079: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3244762420654297
    2. '")' → logprob: -1.3244762420654297
    3. '       ' → logprob: -4.57447624206543
    4. ')' → logprob: -7.69947624206543
    5. ')
' → logprob: -7.94947624206543
    6. '")
' → logprob: -11.32447624206543
    7. '"' → logprob: -12.07447624206543
    8. 'else' → logprob: -12.19947624206543
    9. '   ' → logprob: -12.32447624206543
    10. '```' → logprob: -13.07447624206543

Token 1080: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10180725902318954
    2. 'else' → logprob: -2.3518073558807373
    3. '```' → logprob: -6.601807117462158
    4. ' else' → logprob: -8.351807594299316
    5. '	else' → logprob: -12.976807594299316
    6. '``' → logprob: -14.351807594299316
    7. '_else' → logprob: -14.351807594299316
    8. '	' → logprob: -14.851807594299316
    9. '}else' → logprob: -14.976807594299316
    10. '<|end|>' → logprob: -15.101807594299316

Token 1081: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029837844893336296
    2. 'else' (adapté à ' else') → logprob: -3.5298378467559814
    3. ' else' → logprob: -9.404837608337402
    4. '```' → logprob: -12.404837608337402
    5. '	else' → logprob: -14.654837608337402
    6. 'elif' → logprob: -15.529837608337402
    7. '	' → logprob: -15.779837608337402
    8. '   ' → logprob: -16.65483856201172
    9. '           ' → logprob: -16.77983856201172
    10. '_else' → logprob: -17.65483856201172

Token 1082: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04081472381949425
    2. ':
' → logprob: -4.0408148765563965
    3. '():
' → logprob: -4.5408148765563965
    4. ':' → logprob: -4.7908148765563965
    5. '("' → logprob: -5.9158148765563965
    6. '():' → logprob: -8.790814399719238
    7. '()' → logprob: -8.915814399719238
    8. '       ' → logprob: -9.165814399719238
    9. '"' → logprob: -9.415814399719238
    10. '          ' → logprob: -10.165814399719238

Token 1083: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.702754474943504e-05
    2. 'print' → logprob: -10.62503719329834
    3. ' print' → logprob: -12.25003719329834
    4. '       ' → logprob: -12.50003719329834
    5. '               ' → logprob: -13.87503719329834
    6. '	       ' → logprob: -13.87503719329834
    7. '   ' → logprob: -14.00003719329834
    8. '```' → logprob: -14.00003719329834
    9. '		' → logprob: -15.25003719329834
    10. '          ' → logprob: -16.000036239624023

Token 1084: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00987566914409399
    2. '           ' → logprob: -5.009875774383545
    3. ' print' → logprob: -5.759875774383545
    4. '       ' → logprob: -13.134875297546387
    5. '```' → logprob: -13.509875297546387
    6. '	print' → logprob: -15.259875297546387
    7. '   ' → logprob: -16.134876251220703
    8. '               ' → logprob: -16.259876251220703
    9. '	       ' → logprob: -17.634876251220703
    10. '		' → logprob: -17.634876251220703

Token 1085: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -6.704273118884885e-07
    2. '"S' → logprob: -14.625000953674316
    3. '(' → logprob: -16.0
    4. 'S' → logprob: -18.875
    5. '('' → logprob: -19.125
    6. '"' → logprob: -19.75
    7. '(
' → logprob: -20.5
    8. '(S' → logprob: -22.25
    9. ' ("' → logprob: -22.375
    10. '(s' → logprob: -23.125

Token 1086: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0001234428636962548
    2. '"S' → logprob: -9.000123023986816
    3. 'Sad' → logprob: -17.000123977661133
    4. ''S' → logprob: -17.625123977661133
    5. ' SAD' → logprob: -19.000123977661133
    6. '>S' → logprob: -19.625123977661133
    7. '“S' → logprob: -20.875123977661133
    8. '\S' → logprob: -21.250123977661133
    9. ' S' → logprob: -21.500123977661133
    10. 'sad' → logprob: -21.750123977661133

Token 1087: 'AD' (ID: 2416)
  Prédit: 'AD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AD' → logprob: -7.896309739408025e-07
    2. 'S' → logprob: -15.375000953674316
    3. 'АД' → logprob: -15.750000953674316
    4. 'A' → logprob: -16.0
    5. '"' → logprob: -16.625
    6. 'ADD' → logprob: -17.125
    7. 'ADB' → logprob: -17.25
    8. 'ADS' → logprob: -17.75
    9. 'ADO' → logprob: -17.75
    10. 'ADT' → logprob: -18.0

Token 1088: '")

' (ID: 10822)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1089: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6491972804069519
    2. '<|end|>' → logprob: -1.0241973400115967
    3. '```' → logprob: -2.6491973400115967
    4. '#' → logprob: -3.7741973400115967
    5. 'main' → logprob: -4.149197101593018
    6. ')' → logprob: -5.649197101593018
    7. ' if' → logprob: -6.274197101593018
    8. '<|end|>' → logprob: -6.649197101593018
    9. '__' → logprob: -8.149197578430176
    10. '()' → logprob: -8.274197578430176

Token 1090: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1799928843975067
    2. '__' → logprob: -1.804992914199829
    3. ' main' → logprob: -9.17999267578125
    4. '_' → logprob: -9.67999267578125
    5. '_main' → logprob: -11.30499267578125
    6. ' _' → logprob: -11.42999267578125
    7. 'main' → logprob: -11.42999267578125
    8. ' ' → logprob: -11.67999267578125
    9. '​' → logprob: -11.80499267578125
    10. '﻿' → logprob: -11.80499267578125

Token 1091: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13101360201835632
    2. ' ==' → logprob: -2.3810136318206787
    3. '==' → logprob: -3.7560136318206787
    4. 'name' → logprob: -5.3810133934021
    5. ' __' → logprob: -6.8810133934021
    6. '=="' → logprob: -7.0060133934021
    7. '.__' → logprob: -8.881013870239258
    8. 'main' → logprob: -9.256013870239258
    9. '=='' → logprob: -10.506013870239258
    10. '```' → logprob: -10.506013870239258

Token 1092: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7432603272027336e-06
    2. '==' → logprob: -14.125001907348633
    3. '__.__' → logprob: -14.375001907348633
    4. '__('' → logprob: -15.500001907348633
    5. '__
' → logprob: -16.875001907348633
    6. '___' → logprob: -16.875001907348633
    7. '____' → logprob: -16.875001907348633
    8. '__("' → logprob: -17.750001907348633
    9. '__["' → logprob: -17.875001907348633
    10. '__.' → logprob: -17.875001907348633

Token 1093: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1810990273952484
    2. '__' → logprob: -2.0560989379882812
    3. '=="' → logprob: -3.9310989379882812
    4. ' ==' → logprob: -4.181098937988281
    5. '=='' → logprob: -5.931098937988281
    6. '=' → logprob: -9.931098937988281
    7. '==
' → logprob: -10.556098937988281
    8. '===' → logprob: -10.681098937988281
    9. '```' → logprob: -11.556098937988281
    10. '==="' → logprob: -12.556098937988281

Token 1094: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029752686619758606
    2. ''' → logprob: -3.529752731323242
    3. '__' → logprob: -13.154752731323242
    4. ' "__' → logprob: -15.154752731323242
    5. '"name' → logprob: -17.779752731323242
    6. ' '__' → logprob: -18.654752731323242
    7. '("__' → logprob: -19.529752731323242
    8. '"user' → logprob: -19.779752731323242
    9. 'main' → logprob: -20.154752731323242
    10. '"<?' → logprob: -20.154752731323242

Token 1095: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2855929732322693
    2. 'main' → logprob: -1.535593032836914
    3. '"' → logprob: -3.660593032836914
    4. ''' → logprob: -4.910593032836914
    5. '___' → logprob: -11.910593032836914
    6. '_main' → logprob: -13.035593032836914
    7. '__":
' → logprob: -13.410593032836914
    8. '____' → logprob: -13.660593032836914
    9. ' "__' → logprob: -13.660593032836914
    10. ' main' → logprob: -14.035593032836914

Token 1096: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.007630754727870226
    2. '__' → logprob: -5.007630825042725
    3. '__':
' → logprob: -7.007630825042725
    4. '():
' → logprob: -12.257630348205566
    5. '__()
' → logprob: -13.757630348205566
    6. '__["' → logprob: -13.882630348205566
    7. '__
' → logprob: -14.132630348205566
    8. '==' → logprob: -14.632630348205566
    9. '__:' → logprob: -14.757630348205566
    10. '```' → logprob: -15.257630348205566

Token 1097: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.059622351080179214
    2. '	main' → logprob: -3.559622287750244
    3. '   ' → logprob: -3.809622287750244
    4. ' main' → logprob: -4.934622287750244
    5. '    
' → logprob: -10.809622764587402
    6. '_main' → logprob: -11.184622764587402
    7. '(main' → logprob: -11.184622764587402
    8. '```' → logprob: -11.559622764587402
    9. '__' → logprob: -12.684622764587402
    10. '	Main' → logprob: -12.934622764587402

Token 1098: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.5
    3. '	main' → logprob: -23.25
    4. '_main' → logprob: -25.0
    5. 'Main' → logprob: -25.875
    6. '.main' → logprob: -26.875
    7. '(main' → logprob: -27.875
    8. '-main' → logprob: -28.75
    9. 'mainwindow' → logprob: -28.75
    10. '主' → logprob: -29.25

Token 1099: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1097
Tokens correctement prédits (1ère position, stricte): 389
Tokens correctement prédits (1ère position, avec adaptation): 416
Tokens correctement prédits (top 10): 780
Précision stricte (1ère position): 35.46%
Précision adaptée (1ère position): 37.92%
Précision (top 10): 71.10%
================================================================================
