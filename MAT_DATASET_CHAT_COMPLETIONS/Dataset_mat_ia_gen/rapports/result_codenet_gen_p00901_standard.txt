================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

MOD = 2011

def mod_inv(a, m=MOD):
    # Fermat's little theorem since MOD is prime
    return pow(a, m - 2, m)

class Cell:
    __slots__ = ['top','bot','h','w','data','base']
    def __init__(self, data, base):
        self.data = data
        self.h = len(data)
        self.w = len(data[0]) if self.h > 0 else 0
        self.top = 0
        self.bot = self.h - 1
        self.base = base

def trim(data):
    # trim rows and columns all '.' from top,bottom,left,right
    top = 0
    while top < len(data) and all(c == '.' for c in data[top]):
        top += 1
    if top == len(data):
        return ['']
    bot = len(data) - 1
    while bot >= 0 and all(c == '.' for c in data[bot]):
        bot -= 1
    data = data[top:bot+1]
    left = 0
    while left < len(data[0]) and all(row[left] == '.' for row in data):
        left += 1
    right = len(data[0]) - 1
    while right >= 0 and all(row[right] == '.' for row in data):
        right -= 1
    new_data = [row[left:right+1] for row in data]
    return new_data

def split_cells(line):
    # split line into cells by spaces (periods represent spaces)
    cells = []
    start = None
    for i,c in enumerate(line):
        if c != '.':
            if start is None:
                start = i
        else:
            if start is not None:
                cells.append((start,i-1))
                start = None
    if start is not None:
        cells.append((start,len(line)-1))
    return cells

def find_vinculum(lines):
    # find a line with >=3 consecutive hyphens: return line index and start,end col inclusive
    for i,line in enumerate(lines):
        run_len = 0
        start = None
        for j,ch in enumerate(line):
            if ch == '-':
                if run_len == 0:
                    start = j
                run_len += 1
            else:
                if run_len >= 3:
                    return i,start,j-1
                run_len = 0
        if run_len >=3:
            return i,start,len(line)-1
    return None

def parse_cell(lines, base_line):
    lines = trim(lines)
    if len(lines) == 0 or all(line == '' for line in lines):
        return None,None
    h = len(lines)
    w = len(lines[0])
    # If single character cell (terminal)
    if h == 1 and w == 1:
        ch = lines[0][0]
        if ch in '0123456789+-*().':
            return Cell(lines,base_line), ch
        # Unknown single char - still treat as terminal
        return Cell(lines,base_line), ch

    # Check fraction pattern (rule VI)
    vinc = find_vinculum(lines)
    if vinc is not None:
        # fraction: vinculum line and col
        i, s, e = vinc
        width = e - s + 1
        # get top expr (dividend)
        top_lines = lines[:i]
        # get bottom expr (divisor)
        bottom_lines = lines[i+1:]
        # Trim top_lines and bottom_lines horizontally centered on vinculum
        # find left/right spaces to pad for dividend and divisor per spec
        # dividend and divisor widths w1,w2 <= width-2; w1 = max width of dividend cell; w2 similarly divisor

        # They may have trailing spaces or dots, trim horizontally
        top_lines = [line[s:e+1] for line in top_lines]
        bottom_lines = [line[s:e+1] for line in bottom_lines]
        # Remove leading/trailing dots vertically for dividend top_lines
        top_trim = trim(top_lines)
        bottom_trim = trim(bottom_lines)
        # base line of fraction is vinculum line i relative in global cell height -> for dividend and divisor shifted accordingly

        dividend_cell, dividend_val = parse_cell(top_trim, len(top_trim)-1)
        divisor_cell, divisor_val = parse_cell(bottom_trim, 0)
        # Return fraction cell: base line is vinculum line i
        class FractionCell(Cell):
            __slots__ = ['dividend','divisor']
            def __init__(self, dividend, divisor, base):
                self.dividend = dividend
                self.divisor = divisor
                # data is combined lines with vinculum and spaces - not needed for evaluation
                # set h,w and base from arguments
                self.base = base
            def __repr__(self):
                return f"Fraction({self.dividend},{self.divisor})"
        fr_cell = FractionCell(dividend_cell, divisor_cell, base_line)
        return fr_cell, ('fraction', dividend_val, divisor_val)

    # Check powexpr (rule V)
    # Definition: powexpr = primary + optional digit at 1 line above base_line horizontally adjacent right
    # So find if one line above base_line there is a digit adjacent right to some primary cell

    # Find all connected cells horizontally on base_line
    # First split lines by spaces ('.'), parse children and align base lines

    # We parse with composing expr -> term -> factor etc, based on top lines and rules.
    # Here we use a top-down approach per spec:

    # try parse digit at base_line-1 line, right adjacent
    if base_line > 0:
        # Try parse primary below and digit above
        # leftmost non-dot cell in base_line line
        # find ranges of non-dot in base_line line
        line_base = lines[base_line]
        cells_at_base = split_cells(line_base)
        for idx,(l,r) in enumerate(cells_at_base):
            # for primary candidate
            primary_part = [line_base[l:r+1]]
            # get lines between base_line and next base line if needed

            # this primary candidate cell coords in all lines
            primary_lines = []
            for row in range(len(lines)):
                if row == base_line or (l<=len(lines[row])-1<r) or (r < len(lines[row]) and lines[row][r] != '.'):
                    # take substring from l to r for all lines in cell height
                    if len(lines[row])>=r+1:
                        primary_lines.append(lines[row][l:r+1])
                    else:
                        primary_lines.append('.'*(r-l+1))
                else:
                    primary_lines.append('.'*(r-l+1))
            # they are left aligned -- so just trim the block
            primary_lines = trim(primary_lines)
            primary_cell, primary_val = parse_cell(primary_lines, base_line)
            if primary_cell is None:
                continue

            # check if line above base_line has a digit cell right adjacent to primary cell
            above_line = lines[base_line-1] if base_line-1>=0 else ''
            if above_line and r+1 < len(above_line):
                if above_line[r+1] in '0123456789':
                    pow_digit = above_line[r+1]
                    # Make powexpr cell
                    class PowExprCell(Cell):
                        __slots__ = ['primary', 'digit']
                        def __init__(self, primary, digit, base):
                            self.primary = primary
                            self.digit = digit
                            self.base = base
                        def __repr__(self):
                            return f"PowExpr({self.primary},{self.digit})"
                    pow_cell = PowExprCell(primary_cell, pow_digit, base_line)
                    return pow_cell, ('powexpr', primary_val, pow_digit)

    # parse digits, terminals (single char)
    # parenthesis or expressions with terms and factors separated by + - *

    # If entire lines is single line and single digit
    if h == 1:
        s = ''.join(lines[0])
        if len(s) == 1 and s[0] in '0123456789+-*().':
            return Cell(lines,base_line), s[0]

    # Remove external parentheses wrapping all if any
    # Check if first char '(' last char ')' for entire lines
    if lines[base_line][0] == '(' and lines[base_line][-1] == ')':
        # check if matching parentheses - naive since BNF
        # Just remove them and parse inside
        new_lines = []
        for row in range(h):
            new_lines.append(lines[row][1:-1])
        new_lines = trim(new_lines)
        res_cell, res_val = parse_cell(new_lines, base_line)
        if res_cell is not None:
            return res_cell, res_val

    # Now split by top-level + and - (not counting inside parentheses)
    # Also support * with higher precedence

    # Build string and parse with minimal precedence + and - at top-level
    # Construct a string per col from base line to do token scan for operators outside parentheses

    def to_str(lines):
        return [''.join(row) for row in lines]

    s_lines = to_str(lines)
    s = s_lines[base_line]
    # find plus or minus at base_line line where not in parentheses
    def find_op_outside_paren(s, ops):
        res = []
        depth=0
        for i,ch in enumerate(s):
            if ch == '(':
                depth+=1
            elif ch == ')':
                depth-=1
            elif depth == 0 and ch in ops:
                res.append((i,ch))
        return res

    ops = find_op_outside_paren(s, '+-')
    # If + or - found at top level, split expression on these ops and parse parts recursively (left to right)
    if ops:
        cells = []
        vals = []
        last = 0
        last_op = None
        for pos,ch in ops:
            # parse substring lines of region last -> pos-1
            sub_lines = []
            for row in range(h):
                sub_lines.append(lines[row][last:pos])
            sub_lines = trim(sub_lines)
            c,v = parse_cell(sub_lines, base_line)
            if c is None:
                continue
            cells.append((c,v))
            vals.append(v)
            cells.append(ch)
            last = pos+1
        # last segment
        sub_lines = []
        for row in range(h):
            sub_lines.append(lines[row][last:])
        sub_lines = trim(sub_lines)
        c,v = parse_cell(sub_lines, base_line)
        if c is not None:
            cells.append((c,v))
            vals.append(v)

        # Evaluate left to right for + and -
        def eval_nodes(nodes):
            val = eval_expr(nodes[0][1])
            i = 1
            while i < len(nodes):
                op = nodes[i]
                v2 = eval_expr(nodes[i+1][1])
                if op == '+':
                    val = (val + v2) % MOD
                elif op == '-':
                    val = (val - v2) % MOD
                i += 2
            return val
        # for evaluation only
        return Cell(lines,base_line), ('expr', cells)

    # Else split by * operators (higher precedence)
    ops = find_op_outside_paren(s, '*')
    if ops:
        cells = []
        vals = []
        last = 0
        last_op = None
        for pos,ch in ops:
            sub_lines = []
            for row in range(h):
                sub_lines.append(lines[row][last:pos])
            sub_lines = trim(sub_lines)
            c,v = parse_cell(sub_lines, base_line)
            if c is None:
                continue
            cells.append((c,v))
            cells.append(ch)
            last = pos+1
        sub_lines = []
        for row in range(h):
            sub_lines.append(lines[row][last:])
        sub_lines = trim(sub_lines)
        c,v = parse_cell(sub_lines, base_line)
        if c is not None:
            cells.append((c,v))
        return Cell(lines,base_line), ('term', cells)

    # unary minus and plus
    if s and s[0] in '+-':
        # parse unary op + operand recursively
        sign = s[0]
        sub_lines = []
        for row in range(h):
            sub_lines.append(lines[row][1:])
        sub_lines = trim(sub_lines)
        c,v = parse_cell(sub_lines, base_line)
        if c is not None:
            return Cell(lines,base_line), ('factor', [sign,v])
    # digits or parentheses just return
    if h == 1:
        val = s.strip('.')
        if val.isdigit():
            return Cell(lines,base_line), val
        # just return
        return Cell(lines,base_line), s

    # default return as is
    return Cell(lines,base_line), s

def eval_expr(ast):
    if isinstance(ast, str):
        if ast.isdigit():
            return int(ast) % MOD
        if ast in '+-':
            # unary plus/minus without number return 0 or something
            return 0
        return 0
    if isinstance(ast, tuple):
        kind = ast[0]
        if kind == 'fraction':
            _, num_ast, den_ast = ast
            x = eval_expr(num_ast)
            y = eval_expr(den_ast)
            y_inv = mod_inv(y)
            return (x * y_inv) % MOD
        if kind == 'powexpr':
            _, base_ast, digit = ast
            base = eval_expr(base_ast)
            e = int(digit)
            if e == 0:
                return 1
            return pow(base, e, MOD)
        if kind == 'expr':
            nodes = ast[1]
            val = eval_expr(nodes[0][1])
            i = 1
            while i < len(nodes):
                op = nodes[i]
                v2 = eval_expr(nodes[i+1][1])
                if op == '+':
                    val = (val + v2) % MOD
                elif op == '-':
                    val = (val - v2) % MOD
                i += 2
            return val
        if kind == 'term':
            nodes = ast[1]
            val = 1
            for node in nodes:
                if isinstance(node, tuple):
                    val = (val * eval_expr(node[1])) % MOD
            return val
        if kind == 'factor':
            sign, val_ast = ast[1]
            val = eval_expr(val_ast)
            if sign == '-':
                val = (-val) % MOD
            return val
    if isinstance(ast, list):
        # product or sum list
        val = 0
        for a in ast:
            val += eval_expr(a)
        return val % MOD
    # else default fallback
    return 0

def main():
    lines_iter = iter(sys.stdin.read().rstrip('\n').split('\n'))
    while True:
        try:
            n_line = next(lines_iter)
        except StopIteration:
            break
        if n_line == '0':
            break
        n = int(n_line)
        data = [next(lines_iter).replace(' ', '.') for _ in range(n)]
        # parse root cell, baseline is set to the line containing the main line (heuristic)
        base_line = n//2
        root_cell, ast = parse_cell(data, base_line)
        res = eval_expr(ast)
        print(res % MOD)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6429765224456787
    2. '.' → logprob: -0.8929765224456787
    3. 'import' → logprob: -3.8929765224456787
    4. 'newline' → logprob: -4.267976760864258
    5. '\' → logprob: -4.767976760864258
    6. '<|end|>' → logprob: -5.017976760864258
    7. '```' → logprob: -5.392976760864258
    8. '
' → logprob: -5.767976760864258
    9. '<|end|>' → logprob: -6.517976760864258
    10. '' → logprob: -6.517976760864258

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.007317567011341e-05
    2. '[' → logprob: -11.250089645385742
    3. '.import' → logprob: -11.625089645385742
    4. '.readline' → logprob: -11.750089645385742
    5. '```' → logprob: -11.750089645385742
    6. ' .' → logprob: -12.000089645385742
    7. '.
' → logprob: -12.500089645385742
    8. '.`' → logprob: -12.625089645385742
    9. '`.' → logprob: -12.875089645385742
    10. '.user' → logprob: -12.875089645385742

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7563169002532959
    2. 's' → logprob: -1.131316900253296
    3. 't' → logprob: -3.006316900253296
    4. 'sys' → logprob: -3.256316900253296
    5. 'set' → logprob: -3.631316900253296
    6. 'soft' → logprob: -4.006317138671875
    7. 'default' → logprob: -4.256317138671875
    8. 'ex' → logprob: -4.881317138671875
    9. '_' → logprob: -5.006317138671875
    10. 'suffix' → logprob: -5.131317138671875

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037456906866282225
    2. 'ursive' → logprob: -6.3787455558776855
    3. 'limit' → logprob: -7.0037455558776855
    4. 'ur' → logprob: -7.5037455558776855
    5. 'urse' → logprob: -9.253746032714844
    6. '_limit' → logprob: -9.628746032714844
    7. 'urs' → logprob: -9.628746032714844
    8. 'ut' → logprob: -9.753746032714844
    9. 'u' → logprob: -10.003746032714844
    10. 't' → logprob: -10.128746032714844

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4403606057167053
    2. 'limit' → logprob: -1.0653605461120605
    3. '_depth' → logprob: -4.5653605461120605
    4. 'depth' → logprob: -7.5653605461120605
    5. '_' → logprob: -8.315361022949219
    6. '_rate' → logprob: -10.065361022949219
    7. 'lim' → logprob: -10.190361022949219
    8. '_factor' → logprob: -10.440361022949219
    9. '(' → logprob: -10.565361022949219
    10. '_stack' → logprob: -10.690361022949219

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1279553291387856e-05
    2. ' (' → logprob: -12.250011444091797
    3. '(
' → logprob: -12.500011444091797
    4. '(

' → logprob: -13.125011444091797
    5. '((' → logprob: -15.750011444091797
    6. '("("' → logprob: -15.750011444091797
    7. '('' → logprob: -16.125011444091797
    8. '(.' → logprob: -16.625011444091797
    9. '(
' → logprob: -17.000011444091797
    10. '()' → logprob: -17.375011444091797

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892361283302307
    2. '100' → logprob: -2.5789237022399902
    3. '300' → logprob: -11.078923225402832
    4. ' ' → logprob: -11.828923225402832
    5. '500' → logprob: -12.328923225402832
    6. '999' → logprob: -12.578923225402832
    7. '150' → logprob: -14.203923225402832
    8. '200' → logprob: -14.328923225402832
    9. '1' → logprob: -14.578923225402832
    10. '   ' → logprob: -14.953923225402832

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004525180906057358
    2. '9' → logprob: -6.004525184631348
    3. '8' → logprob: -6.504525184631348
    4. '6' → logprob: -7.504525184631348
    5. ' ' → logprob: -16.25452423095703
    6. '```' → logprob: -17.25452423095703
    7. ')' → logprob: -17.62952423095703
    8. '(' → logprob: -19.75452423095703
    9. '}' → logprob: -20.00452423095703
    10. '``' → logprob: -20.12952423095703

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47371506690979004
    2. '\' → logprob: -1.22371506690979
    3. '\n' → logprob: -3.72371506690979
    4. '```' → logprob: -4.098714828491211
    5. '
' → logprob: -4.223714828491211
    6. ')' → logprob: -5.098714828491211
    7. '`' → logprob: -5.473714828491211
    8. 'import' → logprob: -5.473714828491211
    9. '#' → logprob: -5.598714828491211
    10. '

' → logprob: -6.598714828491211

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4744798541069031
    2. '=' → logprob: -0.9744798541069031
    3. ' ' → logprob: -8.849479675292969
    4. ')' → logprob: -9.349479675292969
    5. '_' → logprob: -9.599479675292969
    6. ' =
' → logprob: -10.349479675292969
    7. ' =)' → logprob: -10.474479675292969
    8. '.' → logprob: -11.724479675292969
    9. '<|end|>' → logprob: -11.849479675292969
    10. ' )' → logprob: -12.099479675292969

Token 15: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12697912752628326
    2. ' ' → logprob: -2.126979112625122
    3. '100' → logprob: -10.126978874206543
    4. '1' → logprob: -11.501978874206543
    5. 'int' → logprob: -14.251978874206543
    6. ' ' → logprob: -16.25197982788086
    7. '(' → logprob: -16.87697982788086
    8. ' int' → logprob: -17.25197982788086
    9. '998' → logprob: -17.25197982788086
    10. '2' → logprob: -17.37697982788086

Token 16: '201' (ID: 667)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005290837725624442
    2. '100' → logprob: -7.7505292892456055
    3. ' ' → logprob: -9.250529289245605
    4. '1' → logprob: -13.000529289245605
    5. 'int' → logprob: -16.37552833557129
    6. '998' → logprob: -17.62552833557129
    7. '(' → logprob: -17.75052833557129
    8. 'pow' → logprob: -20.00052833557129
    9. '109' → logprob: -20.12552833557129
    10. '2' → logprob: -20.25052833557129

Token 17: '1' (ID: 16)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5519051551818848
    2. '7' → logprob: -1.3019051551818848
    3. '9' → logprob: -3.5519051551818848
    4. '427' → logprob: -3.6769051551818848
    5. '+' → logprob: -3.8019051551818848
    6. '247' → logprob: -4.426905155181885
    7. '326' → logprob: -4.426905155181885
    8. '``' → logprob: -4.426905155181885
    9. '3' → logprob: -4.926905155181885
    10. '"""' → logprob: -6.176905155181885

Token 18: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7257772088050842
    2. '
' → logprob: -0.8507772088050842
    3. '\' → logprob: -3.4757771492004395
    4. 'def' → logprob: -3.7257771492004395
    5. '
' → logprob: -4.8507771492004395
    6. '' → logprob: -4.8507771492004395
    7. '

' → logprob: -4.9757771492004395
    8. '```' → logprob: -5.1007771492004395
    9. 'newline' → logprob: -6.6007771492004395
    10. ' 
' → logprob: -7.1007771492004395

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005056571681052446
    2. '```' → logprob: -5.505056381225586
    3. 'n' → logprob: -7.255056381225586
    4. '
' → logprob: -9.755056381225586
    5. '\' → logprob: -10.005056381225586
    6. '``' → logprob: -10.255056381225586
    7. ' def' → logprob: -10.630056381225586
    8. 'a' → logprob: -11.005056381225586
    9. '\n' → logprob: -11.130056381225586
    10. 'dp' → logprob: -11.255056381225586

Token 20: ' mod' (ID: 1812)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.48990678787231445
    2. ' factorial' → logprob: -1.4899067878723145
    3. ' solve' → logprob: -2.2399067878723145
    4. ' main' → logprob: -4.2399067878723145
    5. ' calculate' → logprob: -4.9899067878723145
    6. ' factor' → logprob: -5.2399067878723145
    7. ' f' → logprob: -5.2399067878723145
    8. ' pow' → logprob: -5.3649067878723145
    9. ' dp' → logprob: -5.6149067878723145
    10. ' count' → logprob: -5.8649067878723145

Token 21: '_inv' (ID: 53427)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29943788051605225
    2. '_pow' → logprob: -2.049437999725342
    3. '_mul' → logprob: -3.174437999725342
    4. '_exp' → logprob: -3.299437999725342
    5. '_factor' → logprob: -3.924437999725342
    6. '_add' → logprob: -4.424437999725342
    7. ' _' → logprob: -4.924437999725342
    8. 'ular' → logprob: -5.299437999725342
    9. '_ex' → logprob: -5.924437999725342
    10. 'pow' → logprob: -7.174437999725342

Token 22: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004423825070261955
    2. '(a' → logprob: -6.12942361831665
    3. '(x' → logprob: -6.25442361831665
    4. '(n' → logprob: -8.504424095153809
    5. ' (' → logprob: -9.504424095153809
    6. '(i' → logprob: -11.379424095153809
    7. '(k' → logprob: -12.379424095153809
    8. '_' → logprob: -12.879424095153809
    9. '(p' → logprob: -13.379424095153809
    10. '("("' → logprob: -13.379424095153809

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009365935111418366
    2. '):' → logprob: -7.250936508178711
    3. ')' → logprob: -9.250936508178711
    4. ' ,' → logprob: -9.750936508178711
    5. ',a' → logprob: -10.000936508178711
    6. ',n' → logprob: -11.125936508178711
    7. ',b' → logprob: -12.625936508178711
    8. ':' → logprob: -13.625936508178711
    9. ',k' → logprob: -13.875936508178711
    10. ',)' → logprob: -14.000936508178711

Token 24: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04719263315200806
    2. ' m' → logprob: -3.1721925735473633
    3. 'mod' → logprob: -5.922192573547363
    4. 'p' → logprob: -7.922192573547363
    5. ' mod' → logprob: -7.922192573547363
    6. 'MOD' → logprob: -8.047192573547363
    7. 'b' → logprob: -8.172192573547363
    8. 'n' → logprob: -10.172192573547363
    9. ' p' → logprob: -10.297192573547363
    10. ' MOD' → logprob: -10.547192573547363

Token 25: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013682155404239893
    2. ')' → logprob: -6.626368045806885
    3. ' ):' → logprob: -10.626368522644043
    4. '):
' → logprob: -11.501368522644043
    5. '=' → logprob: -12.501368522644043
    6. ':' → logprob: -13.626368522644043
    7. ',' → logprob: -14.251368522644043
    8. ')=' → logprob: -14.501368522644043
    9. ')：' → logprob: -14.501368522644043
    10. ''):' → logprob: -15.376368522644043

Token 26: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.031223278492689133
    2. '201' → logprob: -3.7812232971191406
    3. ')' → logprob: -5.031223297119141
    4. ' MOD' → logprob: -6.656223297119141
    5. 'mod' → logprob: -10.28122329711914
    6. ' ' → logprob: -10.78122329711914
    7. '_MOD' → logprob: -11.03122329711914
    8. 'm' → logprob: -11.28122329711914
    9. '```' → logprob: -11.28122329711914
    10. ' )' → logprob: -11.53122329711914

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010417404118925333
    2. ')' → logprob: -6.876041889190674
    3. ' ):' → logprob: -11.751041412353516
    4. '):
' → logprob: -14.501041412353516
    5. ':' → logprob: -15.501041412353516
    6. ')：' → logprob: -15.876041412353516
    7. ',' → logprob: -16.501041412353516
    8. ''):' → logprob: -17.126041412353516
    9. '),' → logprob: -17.251041412353516
    10. ')):' → logprob: -17.501041412353516

Token 28: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02726510353386402
    2. '):' → logprob: -3.9022650718688965
    3. '   ' → logprob: -5.1522650718688965
    4. ' :' → logprob: -7.2772650718688965
    5. ':**' → logprob: -9.652265548706055
    6. ':return' → logprob: -9.902265548706055
    7. ')' → logprob: -10.777265548706055
    8. ',' → logprob: -11.152265548706055
    9. ' ' → logprob: -11.777265548706055
    10. ':
' → logprob: -11.902265548706055

Token 29: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030104735866189003
    2. ' return' → logprob: -3.655104637145996
    3. 'return' → logprob: -6.155104637145996
    4. '    ' → logprob: -7.530104637145996
    5. 'b' → logprob: -8.280104637145996
    6. ' b' → logprob: -8.280104637145996
    7. ' if' → logprob: -8.780104637145996
    8. 'def' → logprob: -9.655104637145996
    9. 'pow' → logprob: -9.780104637145996
    10. 'if' → logprob: -9.905104637145996

Token 30: ' Ferm' (ID: 156422)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.021273136138916
    2. '   ' → logprob: -1.396273136138916
    3. ' """' → logprob: -2.396273136138916
    4. ' if' → logprob: -2.646273136138916
    5. '"""' → logprob: -3.146273136138916
    6. ' def' → logprob: -3.396273136138916
    7. ' x' → logprob: -3.521273136138916
    8. ' a' → logprob: -3.896273136138916
    9. 'return' → logprob: -4.271273136138916
    10. 'def' → logprob: -4.521273136138916

Token 31: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00020187153131701052
    2. 't' → logprob: -8.875202178955078
    3. 'a' → logprob: -10.500202178955078
    4. 'ат' → logprob: -11.625202178955078
    5. ' at' → logprob: -12.375202178955078
    6. 'i' → logprob: -12.500202178955078
    7. 'mat' → logprob: -12.875202178955078
    8. '	at' → logprob: -13.000202178955078
    9. 'pil' → logprob: -13.250202178955078
    10. 'p' → logprob: -13.375202178955078

Token 32: ''s' (ID: 885)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9071525931358337
    2. ''' → logprob: -1.2821526527404785
    3. ')' → logprob: -2.2821526527404785
    4. ''s' → logprob: -2.4071526527404785
    5. '')' → logprob: -3.0321526527404785
    6. '<|end|>' → logprob: -3.4071526527404785
    7. '   ' → logprob: -4.2821526527404785
    8. '```' → logprob: -5.1571526527404785
    9. '  ' → logprob: -5.7821526527404785
    10. '`' → logprob: -6.1571526527404785

Token 33: ' little' (ID: 3389)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19207464158535004
    2. '_' → logprob: -2.8170745372772217
    3. '_pow' → logprob: -3.0670745372772217
    4. ''s' → logprob: -4.317074775695801
    5. ''' → logprob: -4.692074775695801
    6. ' _' → logprob: -4.817074775695801
    7. '  ' → logprob: -5.692074775695801
    8. ')' → logprob: -5.692074775695801
    9. 'pow' → logprob: -5.817074775695801
    10. '   ' → logprob: -6.067074775695801

Token 34: ' theorem' (ID: 177750)
  Prédit: ' theorem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' theorem' → logprob: -0.011347956955432892
    2. ' ' → logprob: -5.136347770690918
    3. ''s' → logprob: -6.386347770690918
    4. ')' → logprob: -6.761347770690918
    5. '   ' → logprob: -7.386347770690918
    6. '_' → logprob: -7.761347770690918
    7. ' The' → logprob: -8.261347770690918
    8. '_the' → logprob: -8.386347770690918
    9. '```' → logprob: -8.511347770690918
    10. 'The' → logprob: -8.636347770690918

Token 35: ' since' (ID: 3630)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06614053249359131
    2. ' :' → logprob: -3.941140651702881
    3. '   ' → logprob: -3.941140651702881
    4. '):' → logprob: -3.941140651702881
    5. ')' → logprob: -5.941140651702881
    6. ':return' → logprob: -6.816140651702881
    7. ' ' → logprob: -7.066140651702881
    8. ':
' → logprob: -7.566140651702881
    9. ' return' → logprob: -9.441140174865723
    10. ' :
' → logprob: -9.566140174865723

Token 36: ' MOD' (ID: 32868)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.42893186211586
    2. 'm' → logprob: -1.0539318323135376
    3. ' a' → logprob: -8.803932189941406
    4. 'a' → logprob: -9.678932189941406
    5. ' ' → logprob: -12.178932189941406
    6. 'M' → logprob: -12.928932189941406
    7. '   ' → logprob: -13.303932189941406
    8. 'MOD' → logprob: -13.553932189941406
    9. ' ' → logprob: -13.553932189941406
    10. 'mod' → logprob: -13.803932189941406

Token 37: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21016962826251984
    2. ')' → logprob: -2.460169553756714
    3. ' ' → logprob: -2.585169553756714
    4. '-' → logprob: -4.835169792175293
    5. ' -' → logprob: -5.085169792175293
    6. '   ' → logprob: -5.335169792175293
    7. ' )' → logprob: -5.835169792175293
    8. ',' → logprob: -6.960169792175293
    9. 'is' → logprob: -7.460169792175293
    10. '=' → logprob: -7.460169792175293

Token 38: ' prime' (ID: 9197)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.29342567920684814
    2. ' ' → logprob: -1.7934256792068481
    3. ' prime' → logprob: -2.5434255599975586
    4. 'a' → logprob: -5.793425559997559
    5. '201' → logprob: -5.918425559997559
    6. 'prime' → logprob: -6.043425559997559
    7. '`' → logprob: -8.168425559997559
    8. '_prime' → logprob: -8.168425559997559
    9. ' an' → logprob: -9.043425559997559
    10. ' ' → logprob: -9.418425559997559

Token 39: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1310705840587616
    2. '   ' → logprob: -2.506070613861084
    3. '):' → logprob: -3.381070613861084
    4. ' :' → logprob: -6.131070613861084
    5. ':return' → logprob: -6.506070613861084
    6. ')' → logprob: -6.631070613861084
    7. ' ' → logprob: -7.381070613861084
    8. ':
' → logprob: -7.381070613861084
    9. '):
' → logprob: -7.631070613861084
    10. '  ' → logprob: -9.381070137023926

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4669771194458008
    2. '   ' → logprob: -1.0919771194458008
    3. '):' → logprob: -3.341977119445801
    4. ')' → logprob: -7.341977119445801
    5. ':return' → logprob: -7.341977119445801
    6. ' :' → logprob: -8.0919771194458
    7. ':
' → logprob: -8.8419771194458
    8. '):
' → logprob: -8.9669771194458
    9. ' ' → logprob: -9.7169771194458
    10. '  ' → logprob: -9.8419771194458

Token 41: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4233378469944
    2. ' return' → logprob: -1.2983378171920776
    3. 'return' (adapté à ' return') → logprob: -2.673337936401367
    4. ':return' → logprob: -7.173337936401367
    5. '    ' → logprob: -7.298337936401367
    6. ')' → logprob: -7.423337936401367
    7. '	return' → logprob: -7.548337936401367
    8. 'eturn' → logprob: -8.923337936401367
    9. ' ' → logprob: -9.548337936401367
    10. '
' → logprob: -9.548337936401367

Token 42: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.014164566993713379
    2. ' pow' → logprob: -4.264164447784424
    3. '(pow' → logprob: -13.889164924621582
    4. 'power' → logprob: -16.514163970947266
    5. '   ' → logprob: -17.889163970947266
    6. ' ' → logprob: -17.889163970947266
    7. '_pow' → logprob: -18.264163970947266
    8. ' power' → logprob: -19.639163970947266
    9. 'a' → logprob: -19.639163970947266
    10. '1' → logprob: -19.764163970947266

Token 43: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933588981628418
    2. '(a' → logprob: -0.6933588981628418
    3. 'a' → logprob: -9.068359375
    4. '<|end|>' → logprob: -9.568359375
    5. '(
' → logprob: -11.693359375
    6. '<|end|>' → logprob: -12.568359375
    7. '```' → logprob: -12.943359375
    8. '(ai' → logprob: -12.943359375
    9. ')' → logprob: -13.068359375
    10. '(end' → logprob: -13.943359375

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.919942486798391e-05
    2. ' ,' → logprob: -9.875059127807617
    3. ',m' → logprob: -12.750059127807617
    4. ',-' → logprob: -13.000059127807617
    5. ',
' → logprob: -14.000059127807617
    6. '-' → logprob: -14.375059127807617
    7. '   ' → logprob: -15.500059127807617
    8. ',module' → logprob: -15.875059127807617
    9. ' ' → logprob: -16.125059127807617
    10. 'mod' → logprob: -16.375059127807617

Token 45: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0056131696328520775
    2. 'MOD' → logprob: -5.755613327026367
    3. ' m' → logprob: -6.630613327026367
    4. 'mod' → logprob: -7.380613327026367
    5. '-' → logprob: -8.005613327026367
    6. '%m' → logprob: -9.755613327026367
    7. ' MOD' → logprob: -10.630613327026367
    8. '-m' → logprob: -10.755613327026367
    9. '	m' → logprob: -11.255613327026367
    10. ' ' → logprob: -12.005613327026367

Token 46: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7610454708337784e-05
    2. ' -' → logprob: -10.500027656555176
    3. '−' → logprob: -19.00002670288086
    4. '```' → logprob: -20.25002670288086
    5. ' ' → logprob: -21.50002670288086
    6. '–' → logprob: -21.50002670288086
    7. '1' → logprob: -22.75002670288086
    8. '2' → logprob: -23.37502670288086
    9. '<|end|>' → logprob: -23.50002670288086
    10. '־' → logprob: -23.62502670288086

Token 47: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '-' → logprob: -16.625
    4. '```' → logprob: -16.625
    5. '

' → logprob: -17.125
    6. '۲' → logprob: -17.625
    7. ')' → logprob: -18.1875
    8. '٢' → logprob: -18.5
    9. '  ' → logprob: -18.6875
    10. '
' → logprob: -18.75

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. '-' → logprob: -14.750001907348633
    3. ')' → logprob: -15.062501907348633
    4. '```' → logprob: -15.125001907348633
    5. '۲' → logprob: -15.125001907348633
    6. '

' → logprob: -15.312501907348633
    7. '٢' → logprob: -15.500001907348633
    8. '
' → logprob: -16.312501907348633
    9. ' ' → logprob: -16.750001907348633
    10. '२' → logprob: -16.875001907348633

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002870801545213908
    2. ' ,' → logprob: -8.750287055969238
    3. ')' → logprob: -9.000287055969238
    4. '   ' → logprob: -12.750287055969238
    5. ' ' → logprob: -14.125287055969238
    6. ',m' → logprob: -14.500287055969238
    7. ',a' → logprob: -15.625287055969238
    8. '```' → logprob: -15.750287055969238
    9. '，' → logprob: -16.000288009643555
    10. '  ' → logprob: -16.000288009643555

Token 50: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00863631535321474
    2. ' m' → logprob: -4.758636474609375
    3. 'MOD' → logprob: -11.008636474609375
    4. ')' → logprob: -12.508636474609375
    5. ' MOD' → logprob: -14.633636474609375
    6. 'mod' → logprob: -14.633636474609375
    7. ')m' → logprob: -15.008636474609375
    8. '   ' → logprob: -15.883636474609375
    9. ' ' → logprob: -16.508636474609375
    10. '	m' → logprob: -16.633636474609375

Token 51: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -17.0
    4. '))' → logprob: -18.25
    5. ')

' → logprob: -19.0
    6. ')return' → logprob: -19.125
    7. ')}' → logprob: -19.125
    8. '),' → logprob: -19.75
    9. ')#' → logprob: -19.875
    10. ')`' → logprob: -20.25

Token 52: 'class' (ID: 1444)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.16583897173404694
    2. '
' → logprob: -2.1658389568328857
    3. 'def' → logprob: -3.2908389568328857
    4. '
' → logprob: -7.790839195251465
    5. '```' → logprob: -8.540839195251465
    6. '#' → logprob: -9.915839195251465
    7. '' → logprob: -10.040839195251465
    8. '\n' → logprob: -10.040839195251465
    9. ' 

' → logprob: -10.290839195251465
    10. 'n' → logprob: -10.290839195251465

Token 53: ' Cell' (ID: 23050)
  Prédit: ' Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Factor' → logprob: -0.021056203171610832
    2. ' ' → logprob: -4.396056175231934
    3. ' Matrix' → logprob: -5.646056175231934
    4. ' Combination' → logprob: -6.521056175231934
    5. ' Com' → logprob: -7.396056175231934
    6. ' factorial' → logprob: -7.771056175231934
    7. ' Polynomial' → logprob: -7.771056175231934
    8. ' Pascal' → logprob: -8.021056175231934
    9. ' Calculator' → logprob: -8.396056175231934
    10. ' Mod' → logprob: -8.771056175231934

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006559623870998621
    2. '(' → logprob: -8.125656127929688
    3. '():' → logprob: -8.750656127929688
    4. ' :' → logprob: -9.250656127929688
    5. ':**' → logprob: -10.250656127929688
    6. '):' → logprob: -10.250656127929688
    7. '{' → logprob: -12.125656127929688
    8. '>:' → logprob: -12.125656127929688
    9. ':
' → logprob: -12.750656127929688
    10. ' (' → logprob: -13.000656127929688

Token 55: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038271527737379074
    2. '   ' → logprob: -5.753827095031738
    3. ':
' → logprob: -7.628827095031738
    4. ' :' → logprob: -9.878827095031738
    5. '(object' → logprob: -10.128827095031738
    6. '(' → logprob: -10.503827095031738
    7. '():' → logprob: -11.378827095031738
    8. '<|end|>' → logprob: -12.003827095031738
    9. ':def' → logprob: -12.378827095031738
    10. ' ' → logprob: -12.378827095031738

Token 56: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7599778175354004
    2. ' def' → logprob: -0.8849778175354004
    3. 'def' → logprob: -2.1349778175354004
    4. '    ' → logprob: -7.3849778175354
    5. ' ' → logprob: -8.009977340698242
    6. '	def' → logprob: -8.884977340698242
    7. '  ' → logprob: -10.009977340698242
    8. ':def' → logprob: -10.134977340698242
    9. ':' → logprob: -10.634977340698242
    10. '       ' → logprob: -10.634977340698242

Token 57: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.029827436432242393
    2. 'slots' → logprob: -3.529827356338501
    3. ' init' → logprob: -9.779827117919922
    4. ' slots' → logprob: -11.654827117919922
    5. 'slot' → logprob: -11.654827117919922
    6. 'int' → logprob: -13.779827117919922
    7. '_init' → logprob: -14.529827117919922
    8. ' ' → logprob: -15.279827117919922
    9. '  ' → logprob: -15.404827117919922
    10. '   ' → logprob: -15.654827117919922

Token 58: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001214237418025732
    2. '=' → logprob: -9.250121116638184
    3. '___' → logprob: -11.375121116638184
    4. '=['' → logprob: -11.875121116638184
    5. '__('' → logprob: -12.625121116638184
    6. '____' → logprob: -13.500121116638184
    7. '__.__' → logprob: -14.375121116638184
    8. ' =' → logprob: -14.875121116638184
    9. '__[' → logprob: -15.250121116638184
    10. '__,' → logprob: -15.375121116638184

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15276364982128143
    2. ' =' → logprob: -2.527763605117798
    3. '=['' → logprob: -3.277763605117798
    4. '__' → logprob: -3.902763605117798
    5. '=('' → logprob: -5.652763843536377
    6. '['' → logprob: -8.402763366699219
    7. '=["' → logprob: -9.652763366699219
    8. '=[' → logprob: -9.777763366699219
    9. '=("' → logprob: -10.777763366699219
    10. '[' → logprob: -10.902763366699219

Token 60: ' ['' (ID: 5140)
  Prédit: '('__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('__' → logprob: -1.1426938772201538
    2. '('' → logprob: -1.6426938772201538
    3. ''' → logprob: -1.7676938772201538
    4. '['' → logprob: -2.0176939964294434
    5. '('_' → logprob: -2.1426939964294434
    6. ''s' → logprob: -2.8926939964294434
    7. '['_' → logprob: -5.142693996429443
    8. ''_' → logprob: -6.517693996429443
    9. ''a' → logprob: -7.142693996429443
    10. ''x' → logprob: -7.517693996429443

Token 61: 'top' (ID: 8169)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2001393586397171
    2. 'x' → logprob: -2.200139284133911
    3. 'val' → logprob: -3.825139284133911
    4. 'row' → logprob: -4.95013952255249
    5. 'parent' → logprob: -4.95013952255249
    6. 'r' → logprob: -5.07513952255249
    7. 'i' → logprob: -5.45013952255249
    8. 'dp' → logprob: -6.07513952255249
    9. 'n' → logprob: -6.20013952255249
    10. 'a' → logprob: -6.20013952255249

Token 62: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.007198382169008255
    2. '_left' → logprob: -5.757198333740234
    3. '_height' → logprob: -6.632198333740234
    4. '']' → logprob: -7.132198333740234
    5. ''' → logprob: -8.007198333740234
    6. '_color' → logprob: -8.257198333740234
    7. '_row' → logprob: -8.507198333740234
    8. '_',' → logprob: -9.257198333740234
    9. '_sum' → logprob: -9.382198333740234
    10. '_id' → logprob: -9.507198333740234

Token 63: 'bot' (ID: 13669)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08920815587043762
    2. 'bottom' → logprob: -2.7142081260681152
    3. ' left' → logprob: -4.464208126068115
    4. ' bottom' → logprob: -5.839208126068115
    5. 'right' → logprob: -5.964208126068115
    6. 'bot' → logprob: -6.714208126068115
    7. '_left' → logprob: -8.464208602905273
    8. 'down' → logprob: -8.464208602905273
    9. ' bot' → logprob: -9.839208602905273
    10. 'value' → logprob: -10.089208602905273

Token 64: '','' (ID: 4074)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0427955687046051
    2. '','' → logprob: -3.6677956581115723
    3. '',' → logprob: -4.167795658111572
    4. 'om' → logprob: -7.417795658111572
    5. ''' → logprob: -8.542795181274414
    6. 'op' → logprob: -10.667795181274414
    7. ',' → logprob: -10.917795181274414
    8. 'o' → logprob: -11.167795181274414
    9. ']' → logprob: -12.042795181274414
    10. '',"' → logprob: -12.542795181274414

Token 65: 'h' (ID: 71)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08312465995550156
    2. ' left' → logprob: -3.9581246376037598
    3. 'lef' → logprob: -4.20812463760376
    4. 'top' → logprob: -4.95812463760376
    5. 'val' → logprob: -4.95812463760376
    6. 'l' → logprob: -5.08312463760376
    7. 'right' → logprob: -5.95812463760376
    8. ' lef' → logprob: -6.08312463760376
    9. 'cnt' → logprob: -6.70812463760376
    10. 'idx' → logprob: -6.77062463760376

Token 66: '','' (ID: 4074)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.4922120273113251
    2. '']' → logprob: -0.9922120571136475
    3. 'e' → logprob: -4.867211818695068
    4. '','' → logprob: -5.117211818695068
    5. '',' → logprob: -5.992211818695068
    6. ''' → logprob: -7.867211818695068
    7. 'ight' → logprob: -8.117212295532227
    8. 'eg' → logprob: -8.617212295532227
    9. 'eig' → logprob: -8.617212295532227
    10. ''],' → logprob: -8.742212295532227

Token 67: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.042232446372509
    2. 'x' → logprob: -4.292232513427734
    3. '']' → logprob: -4.417232513427734
    4. 'v' → logprob: -6.042232513427734
    5. 'sum' → logprob: -6.667232513427734
    6. 's' → logprob: -6.667232513427734
    7. 'n' → logprob: -6.917232513427734
    8. 'l' → logprob: -7.167232513427734
    9. 'idx' → logprob: -7.417232513427734
    10. ''' → logprob: -7.542232513427734

Token 68: '','' (ID: 4074)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.002701208693906665
    2. '',' → logprob: -6.502701282501221
    3. '','' → logprob: -7.002701282501221
    4. '']
' → logprob: -8.877700805664062
    5. ''' → logprob: -9.502700805664062
    6. '']

' → logprob: -10.252700805664062
    7. ']' → logprob: -10.627700805664062
    8. '']
' → logprob: -11.502700805664062
    9. ' ']' → logprob: -13.627700805664062
    10. ',' → logprob: -13.752700805664062

Token 69: 'data' (ID: 1074)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6337023973464966
    2. 'p' → logprob: -2.633702278137207
    3. 'v' → logprob: -2.758702278137207
    4. 'c' → logprob: -3.008702278137207
    5. 'r' → logprob: -3.133702278137207
    6. 'color' → logprob: -3.133702278137207
    7. 'dp' → logprob: -3.258702278137207
    8. 'l' → logprob: -3.383702278137207
    9. 't' → logprob: -3.383702278137207
    10. 'parent' → logprob: -3.508702278137207

Token 70: '','' (ID: 4074)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0024518726859241724
    2. '',' → logprob: -6.6274518966674805
    3. '']
' → logprob: -7.3774518966674805
    4. '','' → logprob: -8.37745189666748
    5. '']

' → logprob: -8.75245189666748
    6. ']' → logprob: -9.75245189666748
    7. '']
' → logprob: -10.12745189666748
    8. ''' → logprob: -11.62745189666748
    9. ',' → logprob: -12.75245189666748
    10. '"]' → logprob: -14.37745189666748

Token 71: 'base' (ID: 5423)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8419758081436157
    2. 'prefix' → logprob: -2.216975688934326
    3. 'idx' → logprob: -2.591975688934326
    4. 'parent' → logprob: -2.841975688934326
    5. 'pos' → logprob: -2.966975688934326
    6. 'ans' → logprob: -2.966975688934326
    7. 'inv' → logprob: -3.091975688934326
    8. '']' → logprob: -3.216975688934326
    9. 'sum' → logprob: -3.466975688934326
    10. 'mod' → logprob: -3.716975688934326

Token 72: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.15614736080169678
    2. '','' → logprob: -2.0311474800109863
    3. '',' → logprob: -5.406147480010986
    4. '_x' → logprob: -6.656147480010986
    5. '_hash' → logprob: -6.656147480010986
    6. 's' → logprob: -6.906147480010986
    7. '_sum' → logprob: -7.281147480010986
    8. 'x' → logprob: -7.406147480010986
    9. '_row' → logprob: -7.656147480010986
    10. '_top' → logprob: -8.156147003173828

Token 73: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4124096632003784
    2. '=' → logprob: -1.5374096632003784
    3. '   ' → logprob: -2.287409782409668
    4. ':' → logprob: -4.912409782409668
    5. 'def' → logprob: -4.912409782409668
    6. ',' → logprob: -5.912409782409668
    7. ' def' → logprob: -6.662409782409668
    8. '	def' → logprob: -7.287409782409668
    9. '    
' → logprob: -7.537409782409668
    10. ' ' → logprob: -8.412409782409668

Token 74: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9181457757949829
    2. 'def' (adapté à ' def') → logprob: -1.418145775794983
    3. '=' → logprob: -1.793145775794983
    4. ' =' → logprob: -2.4181456565856934
    5. ':' → logprob: -2.6681456565856934
    6. '   ' → logprob: -3.9181456565856934
    7. '
' → logprob: -4.543145656585693
    8. ':def' → logprob: -6.543145656585693
    9. '    
' → logprob: -7.543145656585693
    10. '	def' → logprob: -7.668145656585693

Token 75: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.21445785462856293
    2. ' init' → logprob: -2.0894577503204346
    3. 'init' → logprob: -2.9644577503204346
    4. '__' → logprob: -4.214457988739014
    5. '_init' → logprob: -6.714457988739014
    6. ' ' → logprob: -7.089457988739014
    7. ' def' → logprob: -7.714457988739014
    8. ' ' → logprob: -9.214457511901855
    9. 'def' → logprob: -9.464457511901855
    10. 'class' → logprob: -10.089457511901855

Token 76: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.12694427371025085
    2. 'slots' → logprob: -2.1269443035125732
    3. 'slot' → logprob: -11.251944541931152
    4. 'class' → logprob: -13.126944541931152
    5. ' slots' → logprob: -15.126944541931152
    6. 'lt' → logprob: -15.751944541931152
    7. 'hash' → logprob: -15.876944541931152
    8. 'cls' → logprob: -15.876944541931152
    9. ' init' → logprob: -16.126943588256836
    10. '_slots' → logprob: -16.376943588256836

Token 77: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006763094570487738
    2. '__' → logprob: -5.006762981414795
    3. '__((' → logprob: -10.631763458251953
    4. '__(
' → logprob: -11.506763458251953
    5. '__('' → logprob: -12.006763458251953
    6. '(self' → logprob: -12.631763458251953
    7. '__(*' → logprob: -13.131763458251953
    8. '(' → logprob: -13.381763458251953
    9. '__("' → logprob: -15.506763458251953
    10. '___' → logprob: -15.881763458251953

Token 78: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.682846287731081e-05
    2. ' self' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.250066757202148
    4. '(self' → logprob: -15.500066757202148
    5. ',self' → logprob: -16.12506675720215
    6. ')' → logprob: -16.75006675720215
    7. '0' → logprob: -16.87506675720215
    8. '	self' → logprob: -17.00006675720215
    9. ',' → logprob: -17.25006675720215
    10. 's' → logprob: -17.62506675720215

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005713689140975475
    2. ' ,' → logprob: -5.25571346282959
    3. 'self' → logprob: -8.63071346282959
    4. ',self' → logprob: -8.63071346282959
    5. '):' → logprob: -9.75571346282959
    6. '(self' → logprob: -10.38071346282959
    7. ',h' → logprob: -11.63071346282959
    8. '   ' → logprob: -12.50571346282959
    9. ',w' → logprob: -12.88071346282959
    10. ',data' → logprob: -13.00571346282959

Token 80: ' data' (ID: 1238)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.38865670561790466
    2. ' top' → logprob: -1.263656735420227
    3. 'h' → logprob: -3.3886566162109375
    4. ' h' → logprob: -5.2636566162109375
    5. 'self' → logprob: -8.138656616210938
    6. ' self' → logprob: -9.513656616210938
    7. '   ' → logprob: -9.763656616210938
    8. ' data' → logprob: -11.513656616210938
    9. '	top' → logprob: -11.513656616210938
    10. ' ' → logprob: -11.638656616210938

Token 81: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4754132330417633
    2. ',' → logprob: -0.9754132032394409
    3. ':' → logprob: -7.2254133224487305
    4. ' ):' → logprob: -8.35041332244873
    5. ')' → logprob: -8.72541332244873
    6. ' ,' → logprob: -9.22541332244873
    7. '):
' → logprob: -10.10041332244873
    8. '=' → logprob: -10.60041332244873
    9. '=None' → logprob: -11.35041332244873
    10. '   ' → logprob: -12.10041332244873

Token 82: ' base' (ID: 3611)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.47698843479156494
    2. ' h' → logprob: -1.226988434791565
    3. ' top' → logprob: -2.9769883155822754
    4. 'top' → logprob: -3.3519883155822754
    5. '   ' → logprob: -9.601988792419434
    6. ')' → logprob: -10.726988792419434
    7. 'w' → logprob: -11.101988792419434
    8. '	h' → logprob: -11.226988792419434
    9. ',' → logprob: -11.601988792419434
    10. ' ' → logprob: -11.601988792419434

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04092928022146225
    2. ',' → logprob: -3.5409293174743652
    3. '=' → logprob: -4.665929317474365
    4. '=None' → logprob: -6.790929317474365
    5. ')' → logprob: -8.165928840637207
    6. ' ):' → logprob: -8.915928840637207
    7. ':' → logprob: -9.665928840637207
    8. '):
' → logprob: -10.165928840637207
    9. ' ' → logprob: -12.040928840637207
    10. ' =' → logprob: -12.040928840637207

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05714346840977669
    2. ':' → logprob: -2.932143449783325
    3. ',' → logprob: -6.807143688201904
    4. '):' → logprob: -7.307143688201904
    5. '<|end|>' → logprob: -8.807143211364746
    6. '        
' → logprob: -10.057143211364746
    7. '```' → logprob: -10.057143211364746
    8. 'self' → logprob: -10.557143211364746
    9. '   ' → logprob: -10.807143211364746
    10. '<|end|>' → logprob: -10.932143211364746

Token 85: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0708056315779686
    2. 'self' (adapté à ' self') → logprob: -3.070805549621582
    3. '       ' → logprob: -3.820805549621582
    4. '   ' → logprob: -9.945805549621582
    5. ' super' → logprob: -11.695805549621582
    6. ' ' → logprob: -13.070805549621582
    7. '	self' → logprob: -13.445805549621582
    8. '        ' → logprob: -14.070805549621582
    9. '    ' → logprob: -14.820805549621582
    10. 'super' → logprob: -14.945805549621582

Token 86: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.38267800211906433
    2. '.' → logprob: -1.2576780319213867
    3. '.top' → logprob: -3.6326780319213867
    4. '=' → logprob: -5.632678031921387
    5. ' =' → logprob: -6.382678031921387
    6. '=data' → logprob: -6.757678031921387
    7. ' .' → logprob: -8.132678031921387
    8. 'data' → logprob: -9.132678031921387
    9. '.=' → logprob: -9.132678031921387
    10. '.h' → logprob: -9.257678031921387

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519354820251465
    2. '=' → logprob: -1.5019354820251465
    3. ',' → logprob: -12.501935958862305
    4. '=data' → logprob: -13.751935958862305
    5. ' ' → logprob: -14.501935958862305
    6. '[' → logprob: -15.251935958862305
    7. '[:]' → logprob: -15.501935958862305
    8. ' =[' → logprob: -15.626935958862305
    9. '=[]' → logprob: -16.126935958862305
    10. ' ,' → logprob: -16.251935958862305

Token 88: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3869795501232147
    2. ' data' → logprob: -1.136979579925537
    3. '[' → logprob: -10.136979103088379
    4. ' [' → logprob: -10.761979103088379
    5. '[data' → logprob: -11.261979103088379
    6. ' ' → logprob: -11.386979103088379
    7. '[]' → logprob: -11.761979103088379
    8. '0' → logprob: -12.886979103088379
    9. 'list' → logprob: -13.261979103088379
    10. 'base' → logprob: -13.511979103088379

Token 89: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10338891297578812
    2. '<|end|>' → logprob: -2.853389024734497
    3. '
' → logprob: -3.228389024734497
    4. '        
' → logprob: -7.853388786315918
    5. '<|end|>' → logprob: -7.978388786315918
    6. ',' → logprob: -9.853388786315918
    7. '      ' → logprob: -10.478388786315918
    8. '        ' → logprob: -10.603388786315918
    9. '[' → logprob: -11.353388786315918
    10. '   ' → logprob: -11.478388786315918

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029100847896188498
    2. '
' → logprob: -6.502910137176514
    3. '<|end|>' → logprob: -7.127910137176514
    4. '        
' → logprob: -8.002909660339355
    5. '   ' → logprob: -9.502909660339355
    6. ',' → logprob: -9.877909660339355
    7. '      ' → logprob: -10.752909660339355
    8. ' ' → logprob: -10.877909660339355
    9. '        ' → logprob: -11.002909660339355
    10. '	' → logprob: -11.127909660339355

Token 91: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4138611853122711
    2. '       ' → logprob: -1.7888611555099487
    3. 'self' (adapté à ' self') → logprob: -1.9138611555099487
    4. '   ' → logprob: -4.413861274719238
    5. '
' → logprob: -5.288861274719238
    6. ' ' → logprob: -5.538861274719238
    7. '        
' → logprob: -6.663861274719238
    8. ',' → logprob: -7.788861274719238
    9. '    
' → logprob: -8.163861274719238
    10. '	self' → logprob: -9.038861274719238

Token 92: '.h' (ID: 1508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015572358388453722
    2. '.top' → logprob: -6.501557350158691
    3. ' .' → logprob: -10.876557350158691
    4. '.base' → logprob: -11.626557350158691
    5. '.h' → logprob: -11.876557350158691
    6. '.user' → logprob: -12.251557350158691
    7. '.w' → logprob: -12.626557350158691
    8. '.=' → logprob: -13.251557350158691
    9. '.data' → logprob: -13.626557350158691
    10. '=' → logprob: -13.876557350158691

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.501440703868866
    2. ' =' → logprob: -1.3764407634735107
    3. ',' → logprob: -2.0014407634735107
    4. '<|end|>' → logprob: -5.126440525054932
    5. '=len' → logprob: -8.50144100189209
    6. ' ' → logprob: -8.50144100189209
    7. ' ,' → logprob: -8.62644100189209
    8. ')' → logprob: -9.62644100189209
    9. '-' → logprob: -10.50144100189209
    10. '<|end|>' → logprob: -10.75144100189209

Token 94: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.13271042704582214
    2. 'len' → logprob: -2.2577104568481445
    3. ' base' → logprob: -4.1327104568481445
    4. '1' → logprob: -6.6327104568481445
    5. ' data' → logprob: -7.3827104568481445
    6. ' ' → logprob: -7.3827104568481445
    7. 'base' → logprob: -7.3827104568481445
    8. ' w' → logprob: -8.757710456848145
    9. 'data' → logprob: -9.132710456848145
    10. 'w' → logprob: -9.257710456848145

Token 95: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0014808172127231956
    2. '(' → logprob: -7.001480579376221
    3. '(base' → logprob: -7.501480579376221
    4. '(self' → logprob: -11.001481056213379
    5. 'data' → logprob: -15.876481056213379
    6. '(d' → logprob: -17.126480102539062
    7. '(
' → logprob: -18.251480102539062
    8. ' (' → logprob: -18.376480102539062
    9. '(dat' → logprob: -18.876480102539062
    10. 'base' → logprob: -19.501480102539062

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016110755677800626
    2. ')
' → logprob: -8.875161170959473
    3. '[' → logprob: -11.125161170959473
    4. '   ' → logprob: -12.875161170959473
    5. ' )' → logprob: -13.250161170959473
    6. '       ' → logprob: -14.375161170959473
    7. ')

' → logprob: -15.375161170959473
    8. '`)' → logprob: -16.000160217285156
    9. '),' → logprob: -16.125160217285156
    10. ')#' → logprob: -16.125160217285156

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004561257548630238
    2. '<|end|>' → logprob: -5.504561424255371
    3. '
' → logprob: -9.129561424255371
    4. '   ' → logprob: -9.504561424255371
    5. '        
' → logprob: -9.879561424255371
    6. '        ' → logprob: -10.129561424255371
    7. 'w' → logprob: -10.254561424255371
    8. ')' → logprob: -10.254561424255371
    9. '      ' → logprob: -10.879561424255371
    10. '\' → logprob: -10.879561424255371

Token 98: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14514072239398956
    2. '       ' → logprob: -2.2701406478881836
    3. '<|end|>' → logprob: -4.270140647888184
    4. ' self' → logprob: -4.395140647888184
    5. 'w' → logprob: -5.645140647888184
    6. '   ' → logprob: -7.645140647888184
    7. '        
' → logprob: -7.895140647888184
    8. '
' → logprob: -9.020140647888184
    9. '\' → logprob: -9.270140647888184
    10. ' w' → logprob: -9.395140647888184

Token 99: '.w' (ID: 2234)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20254619419574738
    2. '.w' → logprob: -1.702546238899231
    3. '<|end|>' → logprob: -7.452546119689941
    4. ' .' → logprob: -8.452546119689941
    5. '.wpi' → logprob: -9.077546119689941
    6. 'w' → logprob: -9.702546119689941
    7. '<|end|>' → logprob: -10.327546119689941
    8. '.wicket' → logprob: -10.827546119689941
    9. ' ' → logprob: -10.952546119689941
    10. '.wso' → logprob: -11.327546119689941

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3143906891345978
    2. '=' → logprob: -1.3143906593322754
    3. '=len' → logprob: -6.814390659332275
    4. '<|end|>' → logprob: -11.064391136169434
    5. ',' → logprob: -11.939391136169434
    6. '=data' → logprob: -13.189391136169434
    7. ')' → logprob: -13.439391136169434
    8. ' ' → logprob: -13.814391136169434
    9. 'len' → logprob: -13.814391136169434
    10. '(len' → logprob: -14.314391136169434

Token 101: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12697839736938477
    2. ' len' → logprob: -2.1269783973693848
    3. ' w' → logprob: -10.751977920532227
    4. 'w' → logprob: -11.001977920532227
    5. '(len' → logprob: -12.251977920532227
    6. '0' → logprob: -12.376977920532227
    7. 'data' → logprob: -13.126977920532227
    8. ' data' → logprob: -14.126977920532227
    9. 'max' → logprob: -15.501977920532227
    10. ' ' → logprob: -15.876977920532227

Token 102: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. 'data' → logprob: -15.50001335144043
    4. ' (' → logprob: -16.62501335144043
    5. ')data' → logprob: -16.62501335144043
    6. ' data' → logprob: -18.12501335144043
    7. '(max' → logprob: -18.37501335144043
    8. '<|end|>' → logprob: -18.37501335144043
    9. '[data' → logprob: -19.00001335144043
    10. '(
' → logprob: -19.00001335144043

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ')' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '[-' → logprob: -19.500001907348633
    5. ' [' → logprob: -20.125001907348633
    6. '```' → logprob: -20.875001907348633
    7. '>' → logprob: -21.625001907348633
    8. ' ' → logprob: -22.000001907348633
    9. '(' → logprob: -22.375001907348633
    10. '-' → logprob: -22.500001907348633

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -12.000009536743164
    3. '[' → logprob: -12.500009536743164
    4. ')' → logprob: -17.125009536743164
    5. ']' → logprob: -18.625009536743164
    6. '   ' → logprob: -19.375009536743164
    7. '(' → logprob: -19.750009536743164
    8. '>' → logprob: -20.000009536743164
    9. '])' → logprob: -21.000009536743164
    10. '```' → logprob: -21.000009536743164

Token 105: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00012582694762386382
    2. ')' → logprob: -9.750125885009766
    3. ']' → logprob: -10.375125885009766
    4. ' ])' → logprob: -10.500125885009766
    5. '])
' → logprob: -12.875125885009766
    6. '])]' → logprob: -13.000125885009766
    7. ')])' → logprob: -13.625125885009766
    8. ')]' → logprob: -13.875125885009766
    9. ''])' → logprob: -14.750125885009766
    10. '],' → logprob: -15.125125885009766

Token 106: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067405966110527515
    2. '<|end|>' → logprob: -5.381740570068359
    3. '
' → logprob: -7.256740570068359
    4. '        
' → logprob: -7.881740570068359
    5. ',' → logprob: -8.38174057006836
    6. ')' → logprob: -8.38174057006836
    7. 'self' → logprob: -9.00674057006836
    8. '	' → logprob: -9.00674057006836
    9. '   ' → logprob: -9.75674057006836
    10. '' → logprob: -10.25674057006836

Token 107: ' self' (ID: 1051)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.38758012652397156
    2. 'data' → logprob: -1.137580156326294
    3. ' self' → logprob: -8.012579917907715
    4. ' h' → logprob: -8.762579917907715
    5. 'self' → logprob: -8.887579917907715
    6. 'h' → logprob: -9.512579917907715
    7. 'len' → logprob: -12.512579917907715
    8. ' len' → logprob: -12.512579917907715
    9. ' ' → logprob: -13.512579917907715
    10. '	data' → logprob: -15.637579917907715

Token 108: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0005762664368376136
    2. '.data' → logprob: -8.12557601928711
    3. '.w' → logprob: -8.50057601928711
    4. '.' → logprob: -9.50057601928711
    5. 'data' → logprob: -13.37557601928711
    6. ' .' → logprob: -15.87557601928711
    7. 'w' → logprob: -16.00057601928711
    8. ' data' → logprob: -17.37557601928711
    9. 'h' → logprob: -17.50057601928711
    10. '.has' → logprob: -17.50057601928711

Token 109: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.016256526112556458
    2. ' >' → logprob: -4.141256332397461
    3. 'else' → logprob: -8.641256332397461
    4. ' else' → logprob: -10.766256332397461
    5. '&gt' → logprob: -11.766256332397461
    6. '">' → logprob: -12.266256332397461
    7. '<|end|>' → logprob: -12.766256332397461
    8. ' ' → logprob: -12.891256332397461
    9. ' ' → logprob: -13.516256332397461
    10. '()>' → logprob: -14.141256332397461

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '>' → logprob: -16.504077911376953
    4. ' ' → logprob: -17.754077911376953
    5. '   ' → logprob: -17.879077911376953
    6. '  ' → logprob: -18.004077911376953
    7. '۰' → logprob: -18.254077911376953
    8. '=' → logprob: -18.629077911376953
    9. '1' → logprob: -19.629077911376953
    10. '０' → logprob: -20.066577911376953

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024764856789261103
    2. ' ' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.252476692199707
    4. '   ' → logprob: -16.18997573852539
    5. '1' → logprob: -16.37747573852539
    6. '  ' → logprob: -16.75247573852539
    7. '>' → logprob: -17.25247573852539
    8. '=' → logprob: -17.31497573852539
    9. '۰' → logprob: -17.31497573852539
    10. '

' → logprob: -17.56497573852539

Token 112: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06196914613246918
    2. 'else' → logprob: -2.811969041824341
    3. ' ' → logprob: -14.311968803405762
    4. '	else' → logprob: -14.311968803405762
    5. ' and' → logprob: -15.561968803405762
    6. ' ' → logprob: -17.311969757080078
    7. '<|end|>' → logprob: -17.436969757080078
    8. '_else' → logprob: -18.561969757080078
    9. 'and' → logprob: -19.061969757080078
    10. ')' → logprob: -19.311969757080078

Token 113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. '1' → logprob: -15.62747573852539
    4. '   ' → logprob: -17.00247573852539
    5. ' ' → logprob: -18.12747573852539
    6. '    ' → logprob: -19.00247573852539
    7. '  ' → logprob: -19.06497573852539
    8. '۰' → logprob: -19.43997573852539
    9. '```' → logprob: -20.87747573852539
    10. '０' → logprob: -20.87747573852539

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.698698704596609e-05
    2. ' ' → logprob: -9.250097274780273
    3. '1' → logprob: -14.250097274780273
    4. '   ' → logprob: -16.500097274780273
    5. ' ' → logprob: -18.000097274780273
    6. '۰' → logprob: -18.250097274780273
    7. '  ' → logprob: -18.625097274780273
    8. '```' → logprob: -19.187597274780273
    9. '０' → logprob: -19.312597274780273
    10. '    ' → logprob: -19.437597274780273

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006223951932042837
    2. 'self' → logprob: -5.881224155426025
    3. '
' → logprob: -6.756224155426025
    4. '<|end|>' → logprob: -7.256224155426025
    5. '	' → logprob: -7.756224155426025
    6. ',' → logprob: -8.006223678588867
    7. '        
' → logprob: -8.131223678588867
    8. '	self' → logprob: -8.881223678588867
    9. ' self' → logprob: -9.381223678588867
    10. '   ' → logprob: -9.631223678588867

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7009270787239075
    2. '<|end|>' → logprob: -1.0759270191192627
    3. '
' → logprob: -2.5759270191192627
    4. '   ' → logprob: -2.8259270191192627
    5. ',' → logprob: -4.575927257537842
    6. 'self' → logprob: -4.950927257537842
    7. '    
' → logprob: -5.700927257537842
    8. '        
' → logprob: -6.700927257537842
    9. '<|end|>' → logprob: -7.200927257537842
    10. '	' → logprob: -7.200927257537842

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018901444971561432
    2. '       ' → logprob: -4.018901348114014
    3. ' self' → logprob: -7.518901348114014
    4. '   ' → logprob: -9.518901824951172
    5. 'for' → logprob: -9.768901824951172
    6. 'from' → logprob: -10.518901824951172
    7. 'top' → logprob: -10.518901824951172
    8. 'import' → logprob: -11.143901824951172
    9. 'super' → logprob: -12.268901824951172
    10. 'def' → logprob: -13.643901824951172

Token 118: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.0026735186111181974
    2. '.' → logprob: -6.002673625946045
    3. '.base' → logprob: -8.752673149108887
    4. ' .' → logprob: -10.502673149108887
    5. '.bottom' → logprob: -12.377673149108887
    6. '.bot' → logprob: -13.002673149108887
    7. 'top' → logprob: -13.502673149108887
    8. '.Top' → logprob: -13.627673149108887
    9. '.left' → logprob: -14.627673149108887
    10. '.t' → logprob: -14.752673149108887

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3148695230484009
    2. '=' → logprob: -1.3148695230484009
    3. ',' → logprob: -6.439869403839111
    4. ' ,' → logprob: -12.43986988067627
    5. '=None' → logprob: -12.81486988067627
    6. '=[]' → logprob: -13.18986988067627
    7. ' ' → logprob: -14.93986988067627
    8. ')' → logprob: -15.81486988067627
    9. '    ' → logprob: -16.189868927001953
    10. '=int' → logprob: -16.314868927001953

Token 120: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19537749886512756
    2. ' [' → logprob: -1.9453774690628052
    3. '0' → logprob: -4.070377349853516
    4. '[-' → logprob: -5.695377349853516
    5. '[[' → logprob: -6.195377349853516
    6. '[data' → logprob: -6.445377349853516
    7. 'None' → logprob: -6.570377349853516
    8. '[]' → logprob: -6.570377349853516
    9. '[len' → logprob: -6.570377349853516
    10. ' base' → logprob: -6.945377349853516

Token 121: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01120485458523035
    2. '[-' → logprob: -5.386204719543457
    3. '0' → logprob: -5.886204719543457
    4. 'None' → logprob: -6.636204719543457
    5. '[len' → logprob: -7.511204719543457
    6. '[data' → logprob: -7.761204719543457
    7. '[]' → logprob: -7.886204719543457
    8. '[self' → logprob: -7.886204719543457
    9. '[[' → logprob: -8.261204719543457
    10. 'base' → logprob: -8.886204719543457

Token 122: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.278874933719635
    2. '<|end|>' → logprob: -1.5288748741149902
    3. '       ' → logprob: -4.02887487411499
    4. '<|end|>' → logprob: -5.90387487411499
    5. '   ' → logprob: -6.40387487411499
    6. 'self' → logprob: -6.52887487411499
    7. '
' → logprob: -7.65387487411499
    8. '	self' → logprob: -7.65387487411499
    9. '    
' → logprob: -7.77887487411499
    10. ' ' → logprob: -8.153875350952148

Token 123: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0814794301986694
    2. '       ' → logprob: -1.0814794301986694
    3. '<|end|>' → logprob: -1.2064794301986694
    4. 'self' → logprob: -4.831479549407959
    5. '   ' → logprob: -6.081479549407959
    6. '	' → logprob: -6.206479549407959
    7. '<|end|>' → logprob: -6.206479549407959
    8. '        
' → logprob: -6.706479549407959
    9. '    
' → logprob: -6.706479549407959
    10. '  
' → logprob: -7.081479549407959

Token 124: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03472089022397995
    2. ' self' → logprob: -3.4097208976745605
    3. '       ' → logprob: -7.4097208976745605
    4. '0' → logprob: -8.284720420837402
    5. '
' → logprob: -9.409720420837402
    6. '[self' → logprob: -9.909720420837402
    7. '	self' → logprob: -10.034720420837402
    8. '   ' → logprob: -11.659720420837402
    9. '1' → logprob: -11.909720420837402
    10. '(self' → logprob: -12.034720420837402

Token 125: '.bot' (ID: 69901)
  Prédit: '.bot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bot' → logprob: -0.49466249346733093
    2. '.' → logprob: -0.9946625232696533
    3. ' .' → logprob: -4.244662284851074
    4. ' ' → logprob: -6.494662284851074
    5. ' =' → logprob: -6.869662284851074
    6. '.bottom' → logprob: -7.119662284851074
    7. '.Bot' → logprob: -7.244662284851074
    8. '=' → logprob: -7.494662284851074
    9. ',' → logprob: -7.494662284851074
    10. '.top' → logprob: -8.244662284851074

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407999634742737
    2. '=' → logprob: -0.974079966545105
    3. '0' → logprob: -14.224080085754395
    4. ' ' → logprob: -14.349080085754395
    5. '+' → logprob: -14.474080085754395
    6. ',' → logprob: -14.724080085754395
    7. '=None' → logprob: -15.349080085754395
    8. ' +' → logprob: -15.724080085754395
    9. ' +=' → logprob: -16.224079132080078
    10. ' =
' → logprob: -16.599079132080078

Token 127: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2739954888820648
    2. 'self' → logprob: -1.5239955186843872
    3. ' self' → logprob: -4.773995399475098
    4. ' ' → logprob: -5.148995399475098
    5. 'len' → logprob: -5.148995399475098
    6. '[' → logprob: -8.398995399475098
    7. '1' → logprob: -8.398995399475098
    8. 'Cell' → logprob: -8.648995399475098
    9. ' len' → logprob: -8.648995399475098
    10. '-' → logprob: -8.898995399475098

Token 128: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.08956560492515564
    2. '.w' → logprob: -2.5895655155181885
    3. '.' → logprob: -4.714565753936768
    4. 'w' → logprob: -6.464565753936768
    5. '0' → logprob: -10.21456527709961
    6. '-' → logprob: -10.96456527709961
    7. 'h' → logprob: -11.08956527709961
    8. 'self' → logprob: -12.21456527709961
    9. ' .' → logprob: -12.46456527709961
    10. '+' → logprob: -12.83956527709961

Token 129: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '<|end|>' → logprob: -15.25280475616455
    4. '0' → logprob: -16.877805709838867
    5. '2' → logprob: -18.002805709838867
    6. '   ' → logprob: -18.252805709838867
    7. '
' → logprob: -19.127805709838867
    8. '  ' → logprob: -19.377805709838867
    9. '```' → logprob: -19.690305709838867
    10. ' ' → logprob: -19.815305709838867

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -19.25000762939453
    4. '
' → logprob: -20.37500762939453
    5. '```' → logprob: -20.50000762939453
    6. '2' → logprob: -21.12500762939453
    7. '   ' → logprob: -21.25000762939453
    8. '0' → logprob: -21.50000762939453
    9. '

' → logprob: -21.87500762939453
    10. '-' → logprob: -22.75000762939453

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12192698568105698
    2. '<|end|>' → logprob: -2.24692702293396
    3. '	' → logprob: -5.371926784515381
    4. 'self' → logprob: -6.371926784515381
    5. ' ' → logprob: -6.746926784515381
    6. '   ' → logprob: -8.121927261352539
    7. '	self' → logprob: -8.371927261352539
    8. ' self' → logprob: -8.746927261352539
    9. ',' → logprob: -8.746927261352539
    10. '<|end|>' → logprob: -9.246927261352539

Token 134: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16535407304763794
    2. '       ' → logprob: -2.165354013442993
    3. ' self' → logprob: -3.290354013442993
    4. '   ' → logprob: -9.165353775024414
    5. 'def' → logprob: -9.165353775024414
    6. '	self' → logprob: -9.415353775024414
    7. ' ' → logprob: -9.790353775024414
    8. '0' → logprob: -10.790353775024414
    9. '<|end|>' → logprob: -10.915353775024414
    10. ')' → logprob: -11.415353775024414

Token 135: '.base' (ID: 15523)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005927728023380041
    2. '.bot' → logprob: -5.630927562713623
    3. '.top' → logprob: -6.755927562713623
    4. ' .' → logprob: -7.380927562713623
    5. '.w' → logprob: -8.255928039550781
    6. '.base' → logprob: -8.630928039550781
    7. '.bottom' → logprob: -10.380928039550781
    8. '.user' → logprob: -11.505928039550781
    9. '.left' → logprob: -11.755928039550781
    10. '.right' → logprob: -12.005928039550781

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407910227775574
    2. '=' → logprob: -0.9740791320800781
    3. ')' → logprob: -14.099079132080078
    4. ' ' → logprob: -14.599079132080078
    5. ']' → logprob: -15.724079132080078
    6. '[' → logprob: -15.724079132080078
    7. ',' → logprob: -15.849079132080078
    8. 's' → logprob: -16.099079132080078
    9. '_' → logprob: -16.974079132080078
    10. '<|end|>' → logprob: -17.099079132080078

Token 137: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.08020716905593872
    2. '1' → logprob: -3.455207109451294
    3. ' base' → logprob: -3.455207109451294
    4. '0' → logprob: -5.580207347869873
    5. '10' → logprob: -5.705207347869873
    6. ' ' → logprob: -6.455207347869873
    7. '[' → logprob: -6.580207347869873
    8. 'w' → logprob: -6.830207347869873
    9. '(base' → logprob: -6.830207347869873
    10. ' [' → logprob: -8.330206871032715

Token 138: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' trim' (ID: 19334)
  Prédit: ' cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cell' → logprob: -1.8618512153625488
    2. ' combine' → logprob: -1.8618512153625488
    3. ' merge' → logprob: -2.111851215362549
    4. ' multiply' → logprob: -2.111851215362549
    5. ' _' → logprob: -2.611851215362549
    6. ' ' → logprob: -2.986851215362549
    7. ' compute' → logprob: -2.986851215362549
    8. '_' → logprob: -3.361851215362549
    9. ' get' → logprob: -3.611851215362549
    10. ' calc' → logprob: -4.111851215362549

Token 141: '(data' (ID: 4819)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14296855032444
    2. '(self' → logprob: -2.8929686546325684
    3. '_cells' → logprob: -3.6429686546325684
    4. '(cell' → logprob: -3.8929686546325684
    5. '_' → logprob: -4.517968654632568
    6. '_cell' → logprob: -4.642968654632568
    7. '(Cell' → logprob: -5.392968654632568
    8. '_top' → logprob: -6.142968654632568
    9. '_left' → logprob: -7.142968654632568
    10. '_(' → logprob: -7.267968654632568

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14343392848968506
    2. ',' → logprob: -2.0184340476989746
    3. ')' → logprob: -7.643434047698975
    4. '):
' → logprob: -9.393433570861816
    5. ' ):' → logprob: -9.393433570861816
    6. ':' → logprob: -9.893433570861816
    7. '[' → logprob: -10.893433570861816
    8. ' ,' → logprob: -11.393433570861816
    9. ']:' → logprob: -12.893433570861816
    10. ',n' → logprob: -13.268433570861816

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00987047515809536
    2. ' while' → logprob: -6.134870529174805
    3. 'data' → logprob: -6.259870529174805
    4. 'n' → logprob: -7.259870529174805
    5. 'while' → logprob: -7.384870529174805
    6. ':' → logprob: -7.509870529174805
    7. ' i' → logprob: -7.884870529174805
    8. '    
' → logprob: -8.009870529174805
    9. 'r' → logprob: -8.009870529174805
    10. ' data' → logprob: -8.134870529174805

Token 144: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0976831912994385
    2. 'l' → logprob: -1.7226831912994385
    3. 'while' → logprob: -1.8476831912994385
    4. ' top' → logprob: -2.0976831912994385
    5. 'top' → logprob: -2.3476831912994385
    6. 'i' → logprob: -2.9726831912994385
    7. 'r' → logprob: -4.347682952880859
    8. 'n' → logprob: -4.472682952880859
    9. '   ' → logprob: -4.722682952880859
    10. ' l' → logprob: -5.222682952880859

Token 145: ' trim' (ID: 19334)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6507969498634338
    2. 'h' → logprob: -1.900796890258789
    3. 'top' → logprob: -2.150796890258789
    4. ' while' → logprob: -2.650796890258789
    5. ' h' → logprob: -2.900796890258789
    6. 'while' → logprob: -3.275796890258789
    7. 'n' → logprob: -4.775796890258789
    8. ' n' → logprob: -5.275796890258789
    9. '   ' → logprob: -5.275796890258789
    10. ' rows' → logprob: -5.525796890258789

Token 146: ' rows' (ID: 13585)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8462322950363159
    2. 'rows' → logprob: -2.2212324142456055
    3. 'def' → logprob: -2.5962324142456055
    4. ' data' → logprob: -2.8462324142456055
    5. '(data' → logprob: -2.9712324142456055
    6. ' while' → logprob: -3.0962324142456055
    7. ' rows' → logprob: -3.2212324142456055
    8. 'while' → logprob: -3.3462324142456055
    9. '   ' → logprob: -3.3462324142456055
    10. ' leading' → logprob: -3.5962324142456055

Token 147: ' and' (ID: 326)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6619400382041931
    2. 'while' → logprob: -0.7869400382041931
    3. '   ' → logprob: -4.036940097808838
    4. 'data' → logprob: -5.411940097808838
    5. 'def' → logprob: -5.786940097808838
    6. ':' → logprob: -7.286940097808838
    7. ' data' → logprob: -7.536940097808838
    8. ' top' → logprob: -7.911940097808838
    9. ',' → logprob: -8.03693962097168
    10. '=' → logprob: -8.41193962097168

Token 148: ' columns' (ID: 15697)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.8398499488830566
    2. ' columns' → logprob: -1.3398499488830566
    3. 'cols' → logprob: -1.4648499488830566
    4. ' cols' → logprob: -2.5898499488830566
    5. 'def' → logprob: -9.339849472045898
    6. 'col' → logprob: -9.589849472045898
    7. 'data' → logprob: -11.589849472045898
    8. 'column' → logprob: -12.214849472045898
    9. ' col' → logprob: -12.714849472045898
    10. 'return' → logprob: -12.839849472045898

Token 149: ' all' (ID: 722)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.18883518874645233
    2. ':' → logprob: -2.4388351440429688
    3. '   ' → logprob: -3.5638351440429688
    4. '(' → logprob: -3.8138351440429688
    5. 'data' → logprob: -4.188835144042969
    6. 'def' → logprob: -5.438835144042969
    7. '):' → logprob: -6.188835144042969
    8. ',' → logprob: -6.188835144042969
    9. '[' → logprob: -6.313835144042969
    10. '(
' → logprob: -6.313835144042969

Token 150: ' '.'' (ID: 64762)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0938719511032104
    2. 'zero' → logprob: -1.4688719511032104
    3. ' zero' → logprob: -1.9688719511032104
    4. ' zeros' → logprob: -2.2188720703125
    5. 'zeros' → logprob: -2.9688720703125
    6. ' whitespace' → logprob: -3.2188720703125
    7. '_zero' → logprob: -3.2188720703125
    8. ' ' → logprob: -4.7188720703125
    9. '-zero' → logprob: -4.9688720703125
    10. '[' → logprob: -5.0938720703125

Token 151: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.615242063999176
    2. '   ' → logprob: -1.8652420043945312
    3. ' while' → logprob: -1.8652420043945312
    4. 'def' → logprob: -2.9902420043945312
    5. 'while' → logprob: -3.3652420043945312
    6. '
' → logprob: -3.6152420043945312
    7. ',' → logprob: -4.740242004394531
    8. ':
' → logprob: -5.615242004394531
    9. '#' → logprob: -5.990242004394531
    10. '<|end|>' → logprob: -5.990242004394531

Token 152: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.4799685478210449
    2. 'both' → logprob: -1.729968547821045
    3. 'the' → logprob: -2.729968547821045
    4. 'start' → logprob: -2.854968547821045
    5. 'left' → logprob: -3.104968547821045
    6. ' top' → logprob: -4.229968547821045
    7. ' the' → logprob: -4.979968547821045
    8. ' both' → logprob: -5.104968547821045
    9. 'data' → logprob: -5.854968547821045
    10. ' start' → logprob: -6.354968547821045

Token 153: ',b' (ID: 17568)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9001756310462952
    2. ' and' → logprob: -1.4001755714416504
    3. ',' → logprob: -1.5251755714416504
    4. 'def' → logprob: -2.2751755714416504
    5. ':' → logprob: -4.90017557144165
    6. ' ,' → logprob: -5.40017557144165
    7. 'and' → logprob: -5.65017557144165
    8. '
' → logprob: -6.15017557144165
    9. '    
' → logprob: -6.77517557144165
    10. ',
' → logprob: -6.90017557144165

Token 154: 'ottom' (ID: 4448)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.00799105130136013
    2. 'ottom' → logprob: -5.382990837097168
    3. 'o' → logprob: -5.757990837097168
    4. '```' → logprob: -8.757990837097168
    5. 'ott' → logprob: -11.632990837097168
    6. 'otom' → logprob: -12.132990837097168
    7. '#' → logprob: -12.257990837097168
    8. ''' → logprob: -12.257990837097168
    9. 'op' → logprob: -12.507990837097168
    10. '``' → logprob: -12.632990837097168

Token 155: ',left' (ID: 192836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32542815804481506
    2. 'def' → logprob: -2.4504282474517822
    3. ' while' → logprob: -2.7004282474517822
    4. 'while' → logprob: -2.9504282474517822
    5. ',' → logprob: -3.4504282474517822
    6. '
' → logprob: -3.7004282474517822
    7. ' and' → logprob: -5.575428009033203
    8. ':' → logprob: -6.450428009033203
    9. '    
' → logprob: -6.450428009033203
    10. ' def' → logprob: -6.950428009033203

Token 156: ',right' (ID: 164487)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7987529039382935
    2. ' and' → logprob: -0.9237529039382935
    3. '   ' → logprob: -2.673752784729004
    4. 'def' → logprob: -3.048752784729004
    5. 'and' → logprob: -4.173752784729004
    6. ' ,' → logprob: -4.298752784729004
    7. ',
' → logprob: -6.923752784729004
    8. ' =' → logprob: -7.048752784729004
    9. '<|end|>' → logprob: -7.673752784729004
    10. 'import' → logprob: -7.798752784729004

Token 157: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6797662973403931
    2. '   ' → logprob: -0.8047662973403931
    3. '
' → logprob: -3.9297661781311035
    4. ':
' → logprob: -4.3047661781311035
    5. '    
' → logprob: -5.6797661781311035
    6. ',' → logprob: -6.5547661781311035
    7. 'while' → logprob: -6.8047661781311035
    8. ' while' → logprob: -6.8047661781311035
    9. 'def' → logprob: -6.9297661781311035
    10. '  
' → logprob: -7.1797661781311035

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5544947385787964
    2. ':' → logprob: -1.1794947385787964
    3. '
' → logprob: -2.804494857788086
    4. ':
' → logprob: -3.054494857788086
    5. 'def' → logprob: -5.054494857788086
    6. '    
' → logprob: -6.804494857788086
    7. '```' → logprob: -6.929494857788086
    8. '  
' → logprob: -7.554494857788086
    9. '   
' → logprob: -8.179494857788086
    10. 'data' → logprob: -8.304494857788086

Token 159: ' top' (ID: 2344)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0373862981796265
    2. ' top' → logprob: -1.4123862981796265
    3. 'n' → logprob: -2.287386417388916
    4. '   ' → logprob: -2.412386417388916
    5. ' n' → logprob: -3.287386417388916
    6. 'h' → logprob: -3.287386417388916
    7. 'top' (adapté à ' top') → logprob: -3.287386417388916
    8. ' rows' → logprob: -3.537386417388916
    9. 'r' → logprob: -3.912386417388916
    10. ' while' → logprob: -4.037386417388916

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6489696502685547
    2. ' =' → logprob: -0.7739696502685547
    3. ',' → logprob: -4.148969650268555
    4. '_' → logprob: -8.398969650268555
    5. ' ,' → logprob: -8.773969650268555
    6. '_idx' → logprob: -10.273969650268555
    7. ' ' → logprob: -11.773969650268555
    8. ' =
' → logprob: -12.398969650268555
    9. '_,' → logprob: -12.648969650268555
    10. ')' → logprob: -12.773969650268555

Token 161: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007606866303831339
    2. ' ' → logprob: -4.8826069831848145
    3. 'next' → logprob: -15.132606506347656
    4. ' next' → logprob: -15.507606506347656
    5. '   ' → logprob: -17.132606506347656
    6. '1' → logprob: -17.132606506347656
    7. 'len' → logprob: -17.382606506347656
    8. 'bottom' → logprob: -17.507606506347656
    9. '-' → logprob: -18.070106506347656
    10. '
' → logprob: -18.195106506347656

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. 'next' → logprob: -14.375000953674316
    3. 'len' → logprob: -16.75
    4. ' ' → logprob: -16.875
    5. '-' → logprob: -17.5
    6. '1' → logprob: -19.125
    7. 'None' → logprob: -19.5
    8. 'for' → logprob: -20.125
    9. 'float' → logprob: -20.5
    10. '```' → logprob: -20.875

Token 163: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9635533094406128
    2. 'while' → logprob: -1.2135533094406128
    3. '<|end|>' → logprob: -1.4635533094406128
    4. '
' → logprob: -2.4635534286499023
    5. '<|end|>' → logprob: -6.713553428649902
    6. ' ' → logprob: -6.963553428649902
    7. '	while' → logprob: -7.338553428649902
    8. ' 
' → logprob: -7.713553428649902
    9. ',' → logprob: -7.963553428649902
    10. '#' → logprob: -8.588553428649902

Token 164: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5711082816123962
    2. '
' → logprob: -0.9461082816123962
    3. ' while' → logprob: -3.071108341217041
    4. 'for' → logprob: -8.696107864379883
    5. '	while' → logprob: -9.946107864379883
    6. 'n' → logprob: -10.196107864379883
    7. '
' → logprob: -10.446107864379883
    8. '   ' → logprob: -10.446107864379883
    9. 'While' → logprob: -10.446107864379883
    10. '<|end|>' → logprob: -11.071107864379883

Token 165: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.007058830466121435
    2. ' while' → logprob: -5.007058620452881
    3. 'for' → logprob: -8.757059097290039
    4. 'h' → logprob: -9.132059097290039
    5. 'n' → logprob: -9.632059097290039
    6. 'bottom' → logprob: -11.882059097290039
    7. '
' → logprob: -12.507059097290039
    8. ' for' → logprob: -14.757059097290039
    9. 'While' → logprob: -15.007059097290039
    10. '   ' → logprob: -15.007059097290039

Token 166: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.08921687304973602
    2. ' top' → logprob: -2.464216947555542
    3. ' all' → logprob: -8.839217185974121
    4. 'all' → logprob: -8.964217185974121
    5. '(top' → logprob: -13.464217185974121
    6. '	top' → logprob: -13.589217185974121
    7. ' ' → logprob: -14.589217185974121
    8. 'any' → logprob: -14.839217185974121
    9. ' any' → logprob: -15.089217185974121
    10. '[top' → logprob: -15.214217185974121

Token 167: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7988685965538025
    2. ' <' → logprob: -1.2988686561584473
    3. '<len' → logprob: -1.2988686561584473
    4. '<data' → logprob: -5.423868656158447
    5. '<size' → logprob: -10.798868179321289
    6. '<n' → logprob: -10.923868179321289
    7. 'len' → logprob: -11.673868179321289
    8. '<th' → logprob: -12.673868179321289
    9. '<h' → logprob: -12.673868179321289
    10. '[' → logprob: -12.923868179321289

Token 168: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.8087270038668066e-05
    2. ' len' → logprob: -10.500027656555176
    3. 'data' → logprob: -15.500027656555176
    4. '(len' → logprob: -15.750027656555176
    5. '=len' → logprob: -16.125028610229492
    6. '	len' → logprob: -18.625028610229492
    7. ',len' → logprob: -18.750028610229492
    8. '   ' → logprob: -19.250028610229492
    9. '[len' → logprob: -19.625028610229492
    10. '<len' → logprob: -19.750028610229492

Token 169: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0015029559144750237
    2. 'data' → logprob: -6.501502990722656
    3. ' data' → logprob: -15.126502990722656
    4. '(' → logprob: -15.376502990722656
    5. ')data' → logprob: -16.376502990722656
    6. '[data' → logprob: -17.626502990722656
    7. '=data' → logprob: -19.001502990722656
    8. '<data' → logprob: -19.626502990722656
    9. '	data' → logprob: -20.126502990722656
    10. '\data' → logprob: -20.126502990722656

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19269855320453644
    2. 'and' → logprob: -2.3176984786987305
    3. ' and' → logprob: -2.5676984786987305
    4. '):' → logprob: -10.81769847869873
    5. ' )' → logprob: -11.19269847869873
    6. '):
' → logprob: -11.56769847869873
    7. '   ' → logprob: -12.19269847869873
    8. ' ' → logprob: -12.94269847869873
    9. ':' → logprob: -13.06769847869873
    10. '[' → logprob: -13.56769847869873

Token 171: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38688716292381287
    2. 'and' → logprob: -1.1368871927261353
    3. '   ' → logprob: -11.886887550354004
    4. ':' → logprob: -12.261887550354004
    5. ':
' → logprob: -13.636887550354004
    6. ' ' → logprob: -13.886887550354004
    7. '[' → logprob: -14.011887550354004
    8. '	and' → logprob: -14.261887550354004
    9. '[]' → logprob: -15.511887550354004
    10. '
' → logprob: -15.636887550354004

Token 172: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.011057964526116848
    2. 'data' → logprob: -5.1360578536987305
    3. ' all' → logprob: -5.6360578536987305
    4. ''.' → logprob: -6.8860578536987305
    5. 'set' → logprob: -7.6360578536987305
    6. ' data' → logprob: -11.26105785369873
    7. ''all' → logprob: -11.63605785369873
    8. ' '.'' → logprob: -12.26105785369873
    9. '(all' → logprob: -12.63605785369873
    10. ' set' → logprob: -12.63605785369873

Token 173: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0172199048101902
    2. '(ch' → logprob: -4.2672200202941895
    3. '(x' → logprob: -6.5172200202941895
    4. '(cell' → logprob: -6.5172200202941895
    5. '(data' → logprob: -10.267219543457031
    6. '((' → logprob: -10.392219543457031
    7. 'c' → logprob: -11.267219543457031
    8. '(' → logprob: -12.017219543457031
    9. 'ch' → logprob: -12.142219543457031
    10. '(char' → logprob: -13.017219543457031

Token 174: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760403275489807
    2. ' ==' → logprob: -0.8260403275489807
    3. '.' → logprob: -9.576040267944336
    4. '[' → logprob: -11.326040267944336
    5. '=='' → logprob: -12.076040267944336
    6. 'c' → logprob: -12.701040267944336
    7. ' for' → logprob: -12.826040267944336
    8. 'for' → logprob: -13.701040267944336
    9. ' ' → logprob: -13.826040267944336
    10. ' c' → logprob: -14.076040267944336

Token 175: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0009196776081807911
    2. ' '.'' → logprob: -7.000919818878174
    3. '.' → logprob: -12.000919342041016
    4. '"."' → logprob: -13.625919342041016
    5. ''' → logprob: -14.875919342041016
    6. '('.')' → logprob: -15.500919342041016
    7. '".' → logprob: -16.625919342041016
    8. ' '.')' → logprob: -16.625919342041016
    9. ' ' → logprob: -17.500919342041016
    10. '')' → logprob: -18.125919342041016

Token 176: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03818103298544884
    2. 'for' → logprob: -3.2881810665130615
    3. ' in' → logprob: -9.66318130493164
    4. ' ' → logprob: -10.28818130493164
    5. ')' → logprob: -10.91318130493164
    6. 'data' → logprob: -11.66318130493164
    7. ' data' → logprob: -11.78818130493164
    8. ' or' → logprob: -13.53818130493164
    9. '   ' → logprob: -13.78818130493164
    10. ' c' → logprob: -14.16318130493164

Token 177: ' c' (ID: 274)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.1614588350057602
    2. 'data' → logprob: -1.9114588499069214
    3. 'c' → logprob: -7.161458969116211
    4. ' c' → logprob: -8.286458969116211
    5. ' row' → logprob: -8.911458969116211
    6. 'row' → logprob: -10.536458969116211
    7. ' ' → logprob: -10.661458969116211
    8. ' line' → logprob: -12.911458969116211
    9. '	data' → logprob: -12.911458969116211
    10. ' col' → logprob: -13.036458969116211

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08191260695457458
    2. 'data' → logprob: -2.9569125175476074
    3. 'in' → logprob: -4.206912517547607
    4. ' data' → logprob: -4.581912517547607
    5. 'c' → logprob: -6.706912517547607
    6. ' c' → logprob: -8.706912994384766
    7. ' ' → logprob: -9.331912994384766
    8. '  ' → logprob: -11.331912994384766
    9. 'row' → logprob: -11.956912994384766
    10. '_' → logprob: -12.456912994384766

Token 179: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0232466422021389
    2. ' data' → logprob: -3.7732465267181396
    3. '(data' → logprob: -14.773246765136719
    4. ' ' → logprob: -15.273246765136719
    5. ')data' → logprob: -16.02324676513672
    6. 'dat' → logprob: -16.14824676513672
    7. '
' → logprob: -16.39824676513672
    8. '	data' → logprob: -16.39824676513672
    9. '[data' → logprob: -17.02324676513672
    10. '<data' → logprob: -17.58574676513672

Token 180: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -9.817902173381299e-05
    2. 'top' → logprob: -9.25009822845459
    3. '[' → logprob: -13.62509822845459
    4. ' top' → logprob: -15.00009822845459
    5. '(top' → logprob: -16.000097274780273
    6. '[
' → logprob: -16.125097274780273
    7. ' [' → logprob: -16.750097274780273
    8. '   ' → logprob: -17.125097274780273
    9. '
' → logprob: -17.250097274780273
    10. '	top' → logprob: -17.875097274780273

Token 181: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.031166084110736847
    2. ']):
' → logprob: -3.7811660766601562
    3. '[top' → logprob: -5.656166076660156
    4. ']' → logprob: -5.781166076660156
    5. ' ]' → logprob: -7.656166076660156
    6. '])' → logprob: -7.656166076660156
    7. '']):
' → logprob: -9.656166076660156
    8. '):' → logprob: -10.031166076660156
    9. 'top' → logprob: -10.281166076660156
    10. '[' → logprob: -10.531166076660156

Token 182: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.045261263847351
    2. ':' → logprob: -1.170261263847351
    3. '   ' → logprob: -1.170261263847351
    4. '):
' → logprob: -4.045261383056641
    5. '
' → logprob: -5.045261383056641
    6. '       ' → logprob: -6.545261383056641
    7. ' top' → logprob: -6.920261383056641
    8. '[top' → logprob: -7.545261383056641
    9. '):' → logprob: -8.54526138305664
    10. '	top' → logprob: -8.54526138305664

Token 183: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.252628892660141
    2. 'top' (adapté à ' top') → logprob: -1.5026289224624634
    3. '	top' → logprob: -7.877628803253174
    4. '   ' → logprob: -8.252629280090332
    5. '[top' → logprob: -10.877629280090332
    6. '
' → logprob: -10.877629280090332
    7. '(top' → logprob: -11.002629280090332
    8. '       ' → logprob: -13.002629280090332
    9. '_top' → logprob: -14.502629280090332
    10. '\n' → logprob: -14.502629280090332

Token 184: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10103659331798553
    2. ' +=' → logprob: -2.351036548614502
    3. '+' → logprob: -7.101036548614502
    4. ']+=' → logprob: -12.85103702545166
    5. '+="' → logprob: -13.97603702545166
    6. '   ' → logprob: -14.60103702545166
    7. ' +' → logprob: -14.60103702545166
    8. '+='' → logprob: -14.97603702545166
    9. '=' → logprob: -15.22603702545166
    10. '[' → logprob: -16.476036071777344

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -19.50010871887207
    4. '   ' → logprob: -19.62510871887207
    5. '۱' → logprob: -21.37510871887207
    6. '
' → logprob: -21.50010871887207
    7. '１' → logprob: -21.62510871887207
    8. '  ' → logprob: -22.12510871887207
    9. '0' → logprob: -22.68760871887207
    10. ' ' → logprob: -22.87510871887207

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -20.625
    5. '１' → logprob: -20.75
    6. '۱' → logprob: -21.6875
    7. '
' → logprob: -21.875
    8. '0' → logprob: -22.0
    9. '`' → logprob: -22.25
    10. '১' → logprob: -22.625

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012030738405883312
    2. '<|end|>' → logprob: -5.887030601501465
    3. '  
' → logprob: -6.387030601501465
    4. '    
' → logprob: -6.387030601501465
    5. '\n' → logprob: -6.887030601501465
    6. '   ' → logprob: -6.887030601501465
    7. ' 
' → logprob: -6.887030601501465
    8. '```' → logprob: -7.137030601501465
    9. 'newline' → logprob: -7.637030601501465
    10. ' top' → logprob: -8.512030601501465

Token 188: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09951580315828323
    2. 'bottom' → logprob: -2.724515914916992
    3. '   ' → logprob: -3.849515914916992
    4. 'bot' → logprob: -5.974515914916992
    5. '    
' → logprob: -6.224515914916992
    6. ' bottom' → logprob: -6.599515914916992
    7. 'def' → logprob: -6.849515914916992
    8. '```' → logprob: -8.224515914916992
    9. '  
' → logprob: -8.724515914916992
    10. '\n' → logprob: -9.224515914916992

Token 189: ' if' (ID: 538)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.20811104774475098
    2. 'bot' → logprob: -1.708111047744751
    3. 'if' (adapté à ' if') → logprob: -5.583110809326172
    4. ' bottom' → logprob: -6.333110809326172
    5. '   ' → logprob: -6.958110809326172
    6. ' if' → logprob: -9.083110809326172
    7. ' bot' → logprob: -9.958110809326172
    8. '
' → logprob: -10.958110809326172
    9. 'left' → logprob: -13.208110809326172
    10. 'b' → logprob: -13.583110809326172

Token 190: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.012512121349573135
    2. 'top' → logprob: -4.38751220703125
    3. ' not' → logprob: -13.51251220703125
    4. '	top' → logprob: -14.26251220703125
    5. ' ' → logprob: -15.38751220703125
    6. '_top' → logprob: -17.26251220703125
    7. '(top' → logprob: -17.26251220703125
    8. ' data' → logprob: -17.26251220703125
    9. ' топ' → logprob: -17.38751220703125
    10. 'Top' → logprob: -17.51251220703125

Token 191: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10877007246017456
    2. ' ==' → logprob: -2.3587701320648193
    3. '>=' → logprob: -4.85876989364624
    4. ' >=' → logprob: -7.23376989364624
    5. '=' → logprob: -10.608770370483398
    6. '>' → logprob: -11.983770370483398
    7. ')' → logprob: -12.358770370483398
    8. '<len' → logprob: -12.983770370483398
    9. '=len' → logprob: -13.983770370483398
    10. ' >' → logprob: -14.108770370483398

Token 192: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '=len' → logprob: -20.125001907348633
    5. '(len' → logprob: -20.250001907348633
    6. '	len' → logprob: -20.750001907348633
    7. '
' → logprob: -21.125001907348633
    8. 'length' → logprob: -21.500001907348633
    9. '0' → logprob: -21.625001907348633
    10. '<len' → logprob: -23.125001907348633

Token 193: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -9.253090865968261e-06
    2. 'data' → logprob: -11.625009536743164
    3. ')data' → logprob: -15.875009536743164
    4. ' data' → logprob: -16.625009536743164
    5. '(' → logprob: -16.750009536743164
    6. '[data' → logprob: -17.500009536743164
    7. '=data' → logprob: -17.625009536743164
    8. ',data' → logprob: -18.500009536743164
    9. '<data' → logprob: -18.875009536743164
    10. '(
' → logprob: -18.875009536743164

Token 194: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3134405016899109
    2. '):' → logprob: -1.3134405612945557
    3. '   ' → logprob: -9.438440322875977
    4. ')' → logprob: -9.688440322875977
    5. ' ):
' → logprob: -11.063440322875977
    6. '):
' → logprob: -11.813440322875977
    7. ' ):' → logprob: -11.938440322875977
    8. ':
' → logprob: -12.813440322875977
    9. '):

' → logprob: -13.063440322875977
    10. ':' → logprob: -13.438440322875977

Token 195: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6650062203407288
    2. '   ' → logprob: -0.9150062203407288
    3. '       ' → logprob: -3.040006160736084
    4. ' return' → logprob: -3.290006160736084
    5. '[]
' → logprob: -9.665006637573242
    6. ':return' → logprob: -10.915006637573242
    7. '[]' → logprob: -11.040006637573242
    8. '	return' → logprob: -11.165006637573242
    9. '
' → logprob: -13.165006637573242
    10. '[
' → logprob: -13.415006637573242

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007806300185620785
    2. ' return' → logprob: -5.007806301116943
    3. '   ' → logprob: -7.257806301116943
    4. '[]
' → logprob: -7.882806301116943
    5. '       ' → logprob: -12.632805824279785
    6. '[]' → logprob: -13.007805824279785
    7. '[
' → logprob: -14.382805824279785
    8. '	return' → logprob: -14.507805824279785
    9. '    
' → logprob: -14.757805824279785
    10. ':return' → logprob: -15.007805824279785

Token 197: ' ['' (ID: 5140)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004608488176018
    2. ' []' → logprob: -5.754608631134033
    3. '[' → logprob: -7.754608631134033
    4. '[]
' → logprob: -7.879608631134033
    5. '['' → logprob: -8.504608154296875
    6. '[],' → logprob: -8.754608154296875
    7. '[['' → logprob: -9.129608154296875
    8. '["' → logprob: -9.504608154296875
    9. 'None' → logprob: -10.254608154296875
    10. '[]

' → logprob: -11.504608154296875

Token 198: '']
' (ID: 9756)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17443391680717468
    2. '']' → logprob: -1.924433946609497
    3. '.]' → logprob: -4.674433708190918
    4. ''.' → logprob: -5.799433708190918
    5. '['' → logprob: -7.049433708190918
    6. ']' → logprob: -7.549433708190918
    7. '"]' → logprob: -9.424433708190918
    8. '.'' → logprob: -9.424433708190918
    9. ''' → logprob: -10.299433708190918
    10. '.')' → logprob: -10.424433708190918

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08389830589294434
    2. '
' → logprob: -2.7088983058929443
    3. 'data' → logprob: -5.083898544311523
    4. '    
' → logprob: -5.083898544311523
    5. ' data' → logprob: -7.583898544311523
    6. '[]' → logprob: -8.208898544311523
    7. '

' → logprob: -9.083898544311523
    8. ',' → logprob: -9.333898544311523
    9. '  
' → logprob: -9.458898544311523
    10. 'def' → logprob: -9.583898544311523

Token 200: ' bot' (ID: 11257)
  Prédit: 'bot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bot' (adapté à ' bot') → logprob: -1.2211416959762573
    2. 'bottom' → logprob: -1.2211416959762573
    3. ' bottom' → logprob: -1.8461416959762573
    4. 'data' → logprob: -1.9711416959762573
    5. ' data' → logprob: -2.471141815185547
    6. ' bot' → logprob: -3.721141815185547
    7. '   ' → logprob: -6.471141815185547
    8. 'def' → logprob: -7.096141815185547
    9. '
' → logprob: -7.221141815185547
    10. 'b' → logprob: -8.596141815185547

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815006136894226
    2. '=' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.893150329589844
    4. ' ' → logprob: -17.268150329589844
    5. ' +=' → logprob: -17.393150329589844
    6. '=len' → logprob: -17.518150329589844
    7. '=data' → logprob: -18.018150329589844
    8. ' =
' → logprob: -18.143150329589844
    9. '   ' → logprob: -18.268150329589844
    10. '```' → logprob: -19.018150329589844

Token 202: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023253517225384712
    2. ' len' → logprob: -3.7732534408569336
    3. '   ' → logprob: -12.023253440856934
    4. '(len' → logprob: -14.273253440856934
    5. '	len' → logprob: -14.398253440856934
    6. '=len' → logprob: -14.523253440856934
    7. '[len' → logprob: -15.398253440856934
    8. ',len' → logprob: -17.02325439453125
    9. ' ' → logprob: -17.52325439453125
    10. '0' → logprob: -17.64825439453125

Token 203: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -5.264322317088954e-05
    2. 'data' → logprob: -9.875052452087402
    3. '(' → logprob: -13.750052452087402
    4. ' data' → logprob: -16.87505340576172
    5. ')data' → logprob: -17.25005340576172
    6. ' (' → logprob: -17.75005340576172
    7. ',data' → logprob: -18.62505340576172
    8. '=data' → logprob: -18.62505340576172
    9. '[data' → logprob: -18.75005340576172
    10. '(
' → logprob: -19.12505340576172

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06452275812625885
    2. '-' → logprob: -2.9395227432250977
    3. ')-' → logprob: -4.814522743225098
    4. ' -' → logprob: -6.689522743225098
    5. 'data' → logprob: -9.439522743225098
    6. ')data' → logprob: -9.814522743225098
    7. '(data' → logprob: -10.189522743225098
    8. ' )' → logprob: -10.564522743225098
    9. '   ' → logprob: -11.189522743225098
    10. '-)' → logprob: -11.314522743225098

Token 205: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740845859050751
    2. ' -' → logprob: -0.9740846157073975
    3. ' ' → logprob: -12.849084854125977
    4. '   ' → logprob: -13.349084854125977
    5. '()-' → logprob: -13.349084854125977
    6. 'data' → logprob: -14.474084854125977
    7. '-
' → logprob: -14.474084854125977
    8. ')' → logprob: -15.224084854125977
    9. ' -
' → logprob: -15.349084854125977
    10. '-data' → logprob: -17.099084854125977

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.62500762939453
    4. '
' → logprob: -19.00000762939453
    5. '```' → logprob: -20.37500762939453
    6. '2' → logprob: -21.87500762939453
    7. '

' → logprob: -22.75000762939453
    8. '  ' → logprob: -22.75000762939453
    9. 'def' → logprob: -22.87500762939453
    10. '       ' → logprob: -22.87500762939453

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -20.000001907348633
    4. '```' → logprob: -20.000001907348633
    5. '
' → logprob: -20.250001907348633
    6. '-' → logprob: -20.250001907348633
    7. 'def' → logprob: -20.875001907348633
    8. '   ' → logprob: -21.000001907348633
    9. '۱' → logprob: -21.562501907348633
    10. 'from' → logprob: -22.250001907348633

Token 208: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21166545152664185
    2. ' while' → logprob: -2.336665391921997
    3. '<|end|>' → logprob: -2.836665391921997
    4. '
' → logprob: -3.461665391921997
    5. 'While' → logprob: -6.711665630340576
    6. 'top' → logprob: -7.711665630340576
    7. '[top' → logprob: -7.711665630340576
    8. ';' → logprob: -7.836665630340576
    9. '<|end|>' → logprob: -7.836665630340576
    10. '```' → logprob: -8.211665153503418

Token 209: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.20561161637306213
    2. 'while' → logprob: -1.8306115865707397
    3. '<|end|>' → logprob: -4.205611705780029
    4. '   ' → logprob: -4.705611705780029
    5. '
' → logprob: -7.330611705780029
    6. '	while' → logprob: -8.330611228942871
    7. 'While' → logprob: -8.330611228942871
    8. ')' → logprob: -9.080611228942871
    9. '<|end|>' → logprob: -9.455611228942871
    10. ',' → logprob: -9.705611228942871

Token 210: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2521098554134369
    2. 'while' (adapté à ' while') → logprob: -1.5021098852157593
    3. '   ' → logprob: -8.87710952758789
    4. 'While' → logprob: -10.50210952758789
    5. '	while' → logprob: -11.37710952758789
    6. '    ' → logprob: -13.75210952758789
    7. ' While' → logprob: -14.75210952758789
    8. '
' → logprob: -15.37710952758789
    9. '```' → logprob: -15.87710952758789
    10. ' ' → logprob: -16.25210952758789

Token 211: ' bot' (ID: 11257)
  Prédit: 'bot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bot' → logprob: -0.6355211734771729
    2. ' bot' → logprob: -0.7605211734771729
    3. 'data' → logprob: -6.385520935058594
    4. ' data' → logprob: -7.510520935058594
    5. '(bot' → logprob: -7.635520935058594
    6. ' all' → logprob: -9.385520935058594
    7. 'all' → logprob: -9.635520935058594
    8. 'top' → logprob: -10.760520935058594
    9. 'Bot' → logprob: -11.635520935058594
    10. '.bot' → logprob: -12.260520935058594

Token 212: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47905364632606506
    2. ' >=' → logprob: -1.4790536165237427
    3. '>' → logprob: -1.9790536165237427
    4. '>=' → logprob: -4.229053497314453
    5. '   ' → logprob: -12.604053497314453
    6. ' <' → logprob: -12.604053497314453
    7. ' ' → logprob: -12.854053497314453
    8. '```' → logprob: -14.104053497314453
    9. ' ≥' → logprob: -15.229053497314453
    10. '<' → logprob: -15.354053497314453

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003360582049936056
    2. ' ' → logprob: -8.000335693359375
    3. 'top' → logprob: -14.750335693359375
    4. 'len' → logprob: -16.625335693359375
    5. ' top' → logprob: -17.125335693359375
    6. '   ' → logprob: -18.500335693359375
    7. '
' → logprob: -18.625335693359375
    8. '1' → logprob: -18.875335693359375
    9. 'bot' → logprob: -19.562835693359375
    10. '۰' → logprob: -19.812835693359375

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005850838497281075
    2. ' ' → logprob: -7.500585079193115
    3. 'top' → logprob: -10.375585556030273
    4. ' top' → logprob: -14.375585556030273
    5. '
' → logprob: -16.250585556030273
    6. 'bot' → logprob: -16.875585556030273
    7. '   ' → logprob: -17.125585556030273
    8. '1' → logprob: -17.250585556030273
    9. '(top' → logprob: -17.375585556030273
    10. 'len' → logprob: -17.563085556030273

Token 215: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602274775505066
    2. 'and' → logprob: -1.9102275371551514
    3. '   ' → logprob: -12.78522777557373
    4. ' ' → logprob: -15.41022777557373
    5. '    ' → logprob: -15.66022777557373
    6. '	and' → logprob: -17.410226821899414
    7. ' ' → logprob: -17.660226821899414
    8. 'a' → logprob: -17.785226821899414
    9. ',' → logprob: -18.035226821899414
    10. ' и' → logprob: -18.160226821899414

Token 216: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00020377879263833165
    2. ' all' → logprob: -8.500204086303711
    3. 'bot' → logprob: -16.00020408630371
    4. '   ' → logprob: -16.37520408630371
    5. '
' → logprob: -17.87520408630371
    6. '	all' → logprob: -18.12520408630371
    7. ' ' → logprob: -18.25020408630371
    8. 'not' → logprob: -18.25020408630371
    9. '(all' → logprob: -18.75020408630371
    10. ''all' → logprob: -18.87520408630371

Token 217: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00022284770966507494
    2. 'c' → logprob: -9.125223159790039
    3. '(data' → logprob: -9.125223159790039
    4. '(' → logprob: -13.125223159790039
    5. ' (' → logprob: -13.375223159790039
    6. '(cell' → logprob: -14.250223159790039
    7. 'data' → logprob: -14.625223159790039
    8. ' c' → logprob: -16.00022315979004
    9. '   ' → logprob: -16.37522315979004
    10. '(d' → logprob: -16.87522315979004

Token 218: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009766122326254845
    2. '==' → logprob: -4.634766101837158
    3. ' ' → logprob: -12.134766578674316
    4. '.' → logprob: -12.884766578674316
    5. '=='' → logprob: -14.134766578674316
    6. '[' → logprob: -14.759766578674316
    7. ')' → logprob: -14.884766578674316
    8. ' =='' → logprob: -15.759766578674316
    9. ')==' → logprob: -16.259765625
    10. 'data' → logprob: -16.509765625

Token 219: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.003514667972922325
    2. ' '.'' → logprob: -5.753514766693115
    3. '.' → logprob: -8.003514289855957
    4. '('.')' → logprob: -14.753514289855957
    5. '.'' → logprob: -15.003514289855957
    6. ' ' → logprob: -15.003514289855957
    7. '.'.' → logprob: -15.128514289855957
    8. '"."' → logprob: -15.128514289855957
    9. ' for' → logprob: -15.378514289855957
    10. ' .' → logprob: -15.503514289855957

Token 220: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07888989895582199
    2. 'for' → logprob: -2.578889846801758
    3. ')' → logprob: -17.203889846801758
    4. ' ' → logprob: -17.328889846801758
    5. '	for' → logprob: -17.578889846801758
    6. ' in' → logprob: -17.703889846801758
    7. '   ' → logprob: -18.328889846801758
    8. '
' → logprob: -19.703889846801758
    9. ' ' → logprob: -19.703889846801758
    10. '  ' → logprob: -19.953889846801758

Token 221: ' c' (ID: 274)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.14273551106452942
    2. ' data' → logprob: -2.017735481262207
    3. '(data' → logprob: -9.767735481262207
    4. ')data' → logprob: -14.142735481262207
    5. ' ' → logprob: -14.517735481262207
    6. ')' → logprob: -15.392735481262207
    7. '[data' → logprob: -15.642735481262207
    8. '```' → logprob: -15.642735481262207
    9. '	data' → logprob: -15.767735481262207
    10. '.' → logprob: -15.892735481262207

Token 222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013628131709992886
    2. 'in' → logprob: -4.388628005981445
    3. 'data' → logprob: -6.888628005981445
    4. ' data' → logprob: -10.638628005981445
    5. '(data' → logprob: -10.888628005981445
    6. ')' → logprob: -10.888628005981445
    7. '[data' → logprob: -11.138628005981445
    8. ' ' → logprob: -12.513628005981445
    9. ']' → logprob: -12.638628005981445
    10. '[' → logprob: -12.763628005981445

Token 223: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.04301265999674797
    2. ' data' → logprob: -3.1680126190185547
    3. '
' → logprob: -12.793012619018555
    4. '(data' → logprob: -12.918012619018555
    5. '.data' → logprob: -13.168012619018555
    6. '[data' → logprob: -13.668012619018555
    7. ' ' → logprob: -14.043012619018555
    8. '.' → logprob: -14.043012619018555
    9. '   ' → logprob: -14.418012619018555
    10. '	data' → logprob: -14.668012619018555

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023488728038500994
    2. 'bot' → logprob: -8.375234603881836
    3. '(bot' → logprob: -13.375234603881836
    4. ' bot' → logprob: -13.750234603881836
    5. '[
' → logprob: -14.750234603881836
    6. ' [' → logprob: -15.125234603881836
    7. '```' → logprob: -15.875234603881836
    8. '[top' → logprob: -16.000234603881836
    9. '   ' → logprob: -16.125234603881836
    10. 'Bot' → logprob: -16.250234603881836

Token 225: 'bot' (ID: 13669)
  Prédit: 'bot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bot' → logprob: -2.570319702499546e-05
    2. '[' → logprob: -10.875025749206543
    3. ' bot' → logprob: -12.250025749206543
    4. '(bot' → logprob: -13.750025749206543
    5. '
' → logprob: -14.750025749206543
    6. '```' → logprob: -15.625025749206543
    7. '.bot' → logprob: -16.625024795532227
    8. '_bot' → logprob: -16.750024795532227
    9. 'obot' → logprob: -17.000024795532227
    10. '[
' → logprob: -17.375024795532227

Token 226: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.735797107219696
    2. ']):
' → logprob: -0.860797107219696
    3. '):
' → logprob: -2.735797166824341
    4. '):' → logprob: -3.610797166824341
    5. 'bot' → logprob: -6.485796928405762
    6. '']):
' → logprob: -6.485796928405762
    7. '[' → logprob: -6.610796928405762
    8. ']' → logprob: -7.985796928405762
    9. '])' → logprob: -8.610796928405762
    10. '   ' → logprob: -8.610796928405762

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4611443877220154
    2. 'bot' → logprob: -1.5861444473266602
    3. ' bot' → logprob: -1.8361444473266602
    4. '   ' → logprob: -5.58614444732666
    5. '(bot' → logprob: -7.58614444732666
    6. ':
' → logprob: -8.33614444732666
    7. ':' → logprob: -8.58614444732666
    8. '    ' → logprob: -8.71114444732666
    9. '.bot' → logprob: -8.71114444732666
    10. '_bot' → logprob: -9.21114444732666

Token 228: ' bot' (ID: 11257)
  Prédit: 'bot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bot' (adapté à ' bot') → logprob: -0.5759890675544739
    2. ' bot' → logprob: -0.8259890675544739
    3. '(bot' → logprob: -10.45098876953125
    4. '.bot' → logprob: -12.20098876953125
    5. 'Bot' → logprob: -12.20098876953125
    6. '_bot' → logprob: -12.70098876953125
    7. '       ' → logprob: -12.95098876953125
    8. '   ' → logprob: -13.20098876953125
    9. 'b' → logprob: -13.82598876953125
    10. ' бот' → logprob: -14.07598876953125

Token 229: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.02139068767428398
    2. '-=' → logprob: -3.896390676498413
    3. '   ' → logprob: -7.521390914916992
    4. '    ' → logprob: -9.521390914916992
    5. ' <=' → logprob: -9.896390914916992
    6. ' +=' → logprob: -10.146390914916992
    7. '-' → logprob: -10.521390914916992
    8. ' >=' → logprob: -10.646390914916992
    9. '>=' → logprob: -10.646390914916992
    10. '<=' → logprob: -10.771390914916992

Token 230: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326679587364197
    2. '1' → logprob: -0.7576679587364197
    3. '0' → logprob: -9.632667541503906
    4. '-' → logprob: -13.507667541503906
    5. ' -' → logprob: -14.382667541503906
    6. '```' → logprob: -15.070167541503906
    7. ' ' → logprob: -15.195167541503906
    8. 'bot' → logprob: -15.257667541503906
    9. '   ' → logprob: -16.382667541503906
    10. '2' → logprob: -16.382667541503906

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '0' → logprob: -15.375261306762695
    4. '```' → logprob: -18.375261306762695
    5. '-' → logprob: -18.500261306762695
    6. '<|end|>' → logprob: -19.437761306762695
    7. '   ' → logprob: -19.625261306762695
    8. '
' → logprob: -20.500261306762695
    9. '2' → logprob: -20.500261306762695
    10. '۱' → logprob: -20.625261306762695

Token 232: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5999237895011902
    2. '   ' → logprob: -0.8499237895011902
    3. '    
' → logprob: -4.599923610687256
    4. '<|end|>' → logprob: -5.724923610687256
    5. ')' → logprob: -5.849923610687256
    6. 'def' → logprob: -6.224923610687256
    7. ',' → logprob: -6.474923610687256
    8. '  
' → logprob: -7.599923610687256
    9. 'data' → logprob: -7.599923610687256
    10. '```' → logprob: -7.724923610687256

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008845245465636253
    2. '
' → logprob: -5.008845329284668
    3. '    
' → logprob: -6.383845329284668
    4. 'data' → logprob: -8.883845329284668
    5. ' data' → logprob: -10.258845329284668
    6. '```' → logprob: -10.508845329284668
    7. '[top' → logprob: -10.633845329284668
    8. ' top' → logprob: -10.633845329284668
    9. ' 
' → logprob: -10.758845329284668
    10. ' trimmed' → logprob: -11.008845329284668

Token 234: ' data' (ID: 1238)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2291433960199356
    2. 'left' → logprob: -2.2291433811187744
    3. ' res' → logprob: -3.9791433811187744
    4. ' data' → logprob: -3.9791433811187744
    5. ' trimmed' → logprob: -3.9791433811187744
    6. '
' → logprob: -4.8541436195373535
    7. ' lef' → logprob: -4.9791436195373535
    8. 'data' (adapté à ' data') → logprob: -5.1041436195373535
    9. ' cropped' → logprob: -5.6041436195373535
    10. '   ' → logprob: -5.7291436195373535

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0036249039694666862
    2. ' =' → logprob: -5.62862491607666
    3. '=data' → logprob: -10.75362491607666
    4. 'data' → logprob: -12.75362491607666
    5. '=
' → logprob: -15.50362491607666
    6. '[' → logprob: -15.62862491607666
    7. '[data' → logprob: -15.75362491607666
    8. '```' → logprob: -17.253623962402344
    9. '   ' → logprob: -17.753623962402344
    10. '=

' → logprob: -18.003623962402344

Token 236: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.10131756216287613
    2. ' data' → logprob: -2.3513176441192627
    3. '[data' → logprob: -7.101317405700684
    4. ' [' → logprob: -8.601317405700684
    5. '[' → logprob: -9.226317405700684
    6. '   ' → logprob: -12.976317405700684
    7. '[
' → logprob: -13.851317405700684
    8. ' ' → logprob: -15.851317405700684
    9. '	data' → logprob: -16.226318359375
    10. 'Data' → logprob: -16.601318359375

Token 237: '[top' (ID: 169123)
  Prédit: '[top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -3.1782583391759545e-05
    2. '[' → logprob: -10.375031471252441
    3. '[to' → logprob: -16.375032424926758
    4. ' [' → logprob: -16.375032424926758
    5. '[data' → logprob: -16.375032424926758
    6. '[
' → logprob: -16.500032424926758
    7. '[temp' → logprob: -16.875032424926758
    8. '[tmp' → logprob: -17.125032424926758
    9. '   ' → logprob: -17.500032424926758
    10. '[tag' → logprob: -18.000032424926758

Token 238: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023107275774236768
    2. ' :' → logprob: -8.37523078918457
    3. 'bot' → logprob: -15.62523078918457
    4. ':b' → logprob: -16.00023078918457
    5. ':]' → logprob: -16.37523078918457
    6. ':
' → logprob: -16.87523078918457
    7. ' ' → logprob: -17.62523078918457
    8. ':(' → logprob: -17.75023078918457
    9. '：' → logprob: -19.00023078918457
    10. 'Bot' → logprob: -19.12523078918457

Token 239: 'bot' (ID: 13669)
  Prédit: 'bot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bot' → logprob: -4.251091377227567e-05
    2. '(bot' → logprob: -10.500042915344238
    3. ' bot' → logprob: -11.125042915344238
    4. '(' → logprob: -16.750041961669922
    5. '   ' → logprob: -16.875041961669922
    6. '
' → logprob: -17.000041961669922
    7. 'bob' → logprob: -18.625041961669922
    8. '```' → logprob: -19.125041961669922
    9. '.bot' → logprob: -19.250041961669922
    10. ' ' → logprob: -19.500041961669922

Token 240: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001398929744027555
    2. ' +' → logprob: -8.875140190124512
    3. '＋' → logprob: -17.875139236450195
    4. ']+' → logprob: -19.250139236450195
    5. '1' → logprob: -19.625139236450195
    6. '+
' → logprob: -20.125139236450195
    7. '+i' → logprob: -21.000139236450195
    8. '+j' → logprob: -21.125139236450195
    9. '+n' → logprob: -21.500139236450195
    10. '+h' → logprob: -21.750139236450195

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. ']' → logprob: -15.750004768371582
    4. '
' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '```' → logprob: -18.125003814697266
    7. '۱' → logprob: -18.875003814697266
    8. '+' → logprob: -19.125003814697266
    9. '11' → logprob: -19.250003814697266
    10. '2' → logprob: -19.562503814697266

Token 242: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.621933451038785e-05
    2. ' ]' → logprob: -10.000056266784668
    3. ']
' → logprob: -11.500056266784668
    4. '   ' → logprob: -15.125056266784668
    5. ']

' → logprob: -15.250056266784668
    6. ']
' → logprob: -16.87505531311035
    7. ')' → logprob: -16.87505531311035
    8. '']' → logprob: -17.00005531311035
    9. '].' → logprob: -18.12505531311035
    10. '`]' → logprob: -18.25005531311035

Token 243: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6960079669952393
    2. '   ' → logprob: -0.6960079669952393
    3. '    
' → logprob: -6.44600772857666
    4. 'left' → logprob: -8.19600772857666
    5. 'def' → logprob: -8.32100772857666
    6. '[left' → logprob: -8.82100772857666
    7. ' left' → logprob: -9.44600772857666
    8. '  
' → logprob: -10.07100772857666
    9. ' 
' → logprob: -10.07100772857666
    10. 'rows' → logprob: -10.32100772857666

Token 244: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.7745672464370728
    2. '   ' → logprob: -1.3995672464370728
    3. ' left' → logprob: -1.3995672464370728
    4. '
' → logprob: -3.149567127227783
    5. 'cols' → logprob: -7.274567127227783
    6. '    
' → logprob: -7.399567127227783
    7. 'def' → logprob: -7.649567127227783
    8. ' cols' → logprob: -8.024567604064941
    9. ' lef' → logprob: -8.774567604064941
    10. 'l' → logprob: -9.649567604064941

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. '   ' → logprob: -16.10020637512207
    4. ' ' → logprob: -16.85020637512207
    5. '0' → logprob: -19.22520637512207
    6. ' ' → logprob: -19.35020637512207
    7. 'def' → logprob: -19.47520637512207
    8. ',' → logprob: -19.60020637512207
    9. ' =
' → logprob: -19.72520637512207
    10. '    ' → logprob: -19.85020637512207

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020752996206284
    2. ' ' → logprob: -2.350207567214966
    3. '   ' → logprob: -14.850207328796387
    4. 'data' → logprob: -15.725207328796387
    5. 'len' → logprob: -16.350208282470703
    6. ' data' → logprob: -16.600208282470703
    7. ' len' → logprob: -16.600208282470703
    8. ' ' → logprob: -16.850208282470703
    9. '  ' → logprob: -17.162708282470703
    10. 'def' → logprob: -18.475208282470703

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'len' → logprob: -17.125024795532227
    4. '   ' → logprob: -18.375024795532227
    5. '[' → logprob: -18.625024795532227
    6. 'next' → logprob: -19.375024795532227
    7. 'def' → logprob: -19.625024795532227
    8. '
' → logprob: -20.250024795532227
    9. '1' → logprob: -20.875024795532227
    10. 'for' → logprob: -21.125024795532227

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9835745692253113
    2. '
' → logprob: -1.233574628829956
    3. 'while' → logprob: -1.733574628829956
    4. ' while' → logprob: -1.983574628829956
    5. '<|end|>' → logprob: -4.483574390411377
    6. ' 
' → logprob: -5.983574390411377
    7. '	while' → logprob: -5.983574390411377
    8. '    
' → logprob: -6.483574390411377
    9. '<|end|>' → logprob: -7.233574390411377
    10. '  
' → logprob: -7.483574390411377

Token 249: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8173075318336487
    2. '   ' → logprob: -1.317307472229004
    3. 'while' → logprob: -1.317307472229004
    4. '<|end|>' → logprob: -4.317307472229004
    5. '
' → logprob: -5.317307472229004
    6. '	while' → logprob: -5.942307472229004
    7. '<|end|>' → logprob: -7.692307472229004
    8. ' 
' → logprob: -8.067307472229004
    9. '    
' → logprob: -8.442307472229004
    10. 'While' → logprob: -8.942307472229004

Token 250: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4745580852031708
    2. ' while' → logprob: -0.9745581150054932
    3. 'left' → logprob: -8.099557876586914
    4. ' left' → logprob: -9.599557876586914
    5. 'len' → logprob: -9.849557876586914
    6. 'While' → logprob: -10.974557876586914
    7. ' len' → logprob: -11.099557876586914
    8. '
' → logprob: -11.349557876586914
    9. '   ' → logprob: -12.474557876586914
    10. '	while' → logprob: -12.974557876586914

Token 251: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.4741498529911041
    2. 'left' → logprob: -0.9741498231887817
    3. ' all' → logprob: -9.724149703979492
    4. 'all' → logprob: -12.224149703979492
    5. ' True' → logprob: -12.849149703979492
    6. 'True' → logprob: -13.599149703979492
    7. '	left' → logprob: -13.599149703979492
    8. '(left' → logprob: -14.099149703979492
    9. ' any' → logprob: -14.224149703979492
    10. ' ' → logprob: -14.224149703979492

Token 252: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026363704353570938
    2. '<' → logprob: -3.9013636112213135
    3. '<len' → logprob: -5.151363849639893
    4. '<data' → logprob: -11.776363372802734
    5. 'len' → logprob: -12.901363372802734
    6. '<size' → logprob: -14.026363372802734
    7. ' ' → logprob: -14.651363372802734
    8. '<n' → logprob: -14.776363372802734
    9. ' len' → logprob: -15.276363372802734
    10. '<int' → logprob: -15.526363372802734

Token 253: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003610282437875867
    2. ' len' → logprob: -5.628610134124756
    3. 'data' → logprob: -11.878610610961914
    4. '(len' → logprob: -13.503610610961914
    5. 'cell' → logprob: -13.628610610961914
    6. '
' → logprob: -15.628610610961914
    7. 'max' → logprob: -16.503610610961914
    8. '   ' → logprob: -16.628610610961914
    9. ' data' → logprob: -16.628610610961914
    10. '=len' → logprob: -16.878610610961914

Token 254: '(data' (ID: 4819)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.08960375934839249
    2. '(data' → logprob: -2.4646036624908447
    3. ' data' → logprob: -7.339603900909424
    4. '(' → logprob: -11.464603424072266
    5. ')data' → logprob: -14.089603424072266
    6. 'd' → logprob: -14.589603424072266
    7. ' ' → logprob: -14.714603424072266
    8. '[data' → logprob: -14.714603424072266
    9. ' (' → logprob: -14.964603424072266
    10. '
' → logprob: -15.089603424072266

Token 255: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07360106706619263
    2. ')' → logprob: -3.198601007461548
    3. ' and' → logprob: -4.198601245880127
    4. 'and' → logprob: -4.198601245880127
    5. '   ' → logprob: -9.823600769042969
    6. '0' → logprob: -10.573600769042969
    7. ' ' → logprob: -12.073600769042969
    8. '
' → logprob: -12.823600769042969
    9. ' )' → logprob: -12.823600769042969
    10. ']' → logprob: -13.198600769042969

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001051984610967338
    2. 'data' → logprob: -6.876051902770996
    3. '[' → logprob: -11.251051902770996
    4. ' ' → logprob: -12.501051902770996
    5. ' data' → logprob: -14.126051902770996
    6. '(' → logprob: -14.751051902770996
    7. ']' → logprob: -15.001051902770996
    8. 'left' → logprob: -15.251051902770996
    9. ')' → logprob: -15.876051902770996
    10. '
' → logprob: -16.001052856445312

Token 257: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028050830587744713
    2. '])' → logprob: -3.6530508995056152
    3. ' )' → logprob: -6.403050899505615
    4. ']' → logprob: -10.903050422668457
    5. ' and' → logprob: -10.903050422668457
    6. '`)' → logprob: -11.403050422668457
    7. '')' → logprob: -11.653050422668457
    8. ' ])' → logprob: -11.903050422668457
    9. ''])' → logprob: -12.153050422668457
    10. 'and' → logprob: -12.278050422668457

Token 258: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141403377056122
    2. 'and' → logprob: -1.7014139890670776
    3. '   ' → logprob: -15.076414108276367
    4. ')' → logprob: -15.576414108276367
    5. ' ' → logprob: -15.576414108276367
    6. 'while' → logprob: -16.951414108276367
    7. '    ' → logprob: -17.326414108276367
    8. '[' → logprob: -18.076414108276367
    9. ' и' → logprob: -18.076414108276367
    10. ',' → logprob: -18.076414108276367

Token 259: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.03804493322968483
    2. ' all' → logprob: -3.2880449295043945
    3. '   ' → logprob: -13.038044929504395
    4. '
' → logprob: -14.788044929504395
    5. ' ' → logprob: -14.913044929504395
    6. '(all' → logprob: -16.16304588317871
    7. '	all' → logprob: -16.41304588317871
    8. '    ' → logprob: -16.41304588317871
    9. '  ' → logprob: -16.66304588317871
    10. '```' → logprob: -17.16304588317871

Token 260: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0064203632064163685
    2. '(data' → logprob: -5.756420135498047
    3. 'row' → logprob: -6.006420135498047
    4. '(c' → logprob: -7.381420135498047
    5. '(line' → logprob: -9.006420135498047
    6. '(' → logprob: -10.881420135498047
    7. 'c' → logprob: -12.756420135498047
    8. ' row' → logprob: -12.756420135498047
    9. 'data' → logprob: -12.881420135498047
    10. '(cell' → logprob: -14.381420135498047

Token 261: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.00024287392443511635
    2. 'left' → logprob: -8.375243186950684
    3. '   ' → logprob: -11.625243186950684
    4. ' [' → logprob: -14.250243186950684
    5. '[i' → logprob: -14.625243186950684
    6. ' left' → logprob: -14.875243186950684
    7. '[row' → logprob: -15.000243186950684
    8. '```' → logprob: -15.125243186950684
    9. '[
' → logprob: -15.250243186950684
    10. '[' → logprob: -15.250243186950684

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09653618186712265
    2. ' ==' → logprob: -2.971536159515381
    3. ']==' → logprob: -3.596536159515381
    4. '==' → logprob: -4.346536159515381
    5. ' ]' → logprob: -8.346536636352539
    6. ']=='' → logprob: -9.221536636352539
    7. '']' → logprob: -10.471536636352539
    8. ')' → logprob: -10.721536636352539
    9. ' ' → logprob: -10.971536636352539
    10. '=='' → logprob: -11.971536636352539

Token 263: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0430460050702095
    2. '==' → logprob: -3.168045997619629
    3. ' ' → logprob: -10.418045997619629
    4. ')' → logprob: -12.293045997619629
    5. '.' → logprob: -12.418045997619629
    6. ']==' → logprob: -13.043045997619629
    7. '=='' → logprob: -13.168045997619629
    8. ')==' → logprob: -13.418045997619629
    9. '[' → logprob: -14.543045997619629
    10. ' =='' → logprob: -14.793045997619629

Token 264: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0007148159202188253
    2. ' '.'' → logprob: -7.2507147789001465
    3. '.' → logprob: -12.375715255737305
    4. '('.')' → logprob: -15.375715255737305
    5. '"."' → logprob: -15.375715255737305
    6. ' '.')' → logprob: -16.000715255737305
    7. '.'.' → logprob: -17.625715255737305
    8. '')' → logprob: -18.125715255737305
    9. '   ' → logprob: -18.125715255737305
    10. ' ' → logprob: -18.375715255737305

Token 265: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01107234600931406
    2. 'for' → logprob: -4.511072158813477
    3. ')' → logprob: -11.136072158813477
    4. ' ' → logprob: -11.886072158813477
    5. '	for' → logprob: -13.136072158813477
    6. '   ' → logprob: -14.886072158813477
    7. '       ' → logprob: -15.386072158813477
    8. '    ' → logprob: -15.636072158813477
    9. '  ' → logprob: -16.636072158813477
    10. '<|end|>' → logprob: -16.761072158813477

Token 266: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.07889319956302643
    2. ' row' → logprob: -2.5788931846618652
    3. 'data' → logprob: -12.703893661499023
    4. ' data' → logprob: -16.078893661499023
    5. '(row' → logprob: -16.078893661499023
    6. '	row' → logprob: -16.203893661499023
    7. ' ' → logprob: -16.703893661499023
    8. '[row' → logprob: -17.828893661499023
    9. 'rown' → logprob: -19.203893661499023
    10. '   ' → logprob: -19.453893661499023

Token 267: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03021380864083767
    2. 'in' → logprob: -3.7802138328552246
    3. 'data' → logprob: -5.030213832855225
    4. ' data' → logprob: -7.905213832855225
    5. 'row' → logprob: -10.780213356018066
    6. ' ' → logprob: -11.780213356018066
    7. ' row' → logprob: -12.780213356018066
    8. ')' → logprob: -13.030213356018066
    9. '   ' → logprob: -14.155213356018066
    10. '    ' → logprob: -14.405213356018066

Token 268: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.22541756927967072
    2. ' data' → logprob: -1.6004176139831543
    3. ' ' → logprob: -13.600417137145996
    4. '(data' → logprob: -13.975417137145996
    5. ')data' → logprob: -14.600417137145996
    6. '
' → logprob: -14.725417137145996
    7. '	data' → logprob: -14.975417137145996
    8. '[data' → logprob: -15.225417137145996
    9. 'range' → logprob: -15.600417137145996
    10. 'd' → logprob: -15.600417137145996

Token 269: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2812589704990387
    2. '):' → logprob: -1.4062589406967163
    3. ')' → logprob: -10.281258583068848
    4. '   ' → logprob: -10.281258583068848
    5. ' ):
' → logprob: -11.531258583068848
    6. ' ):' → logprob: -12.156258583068848
    7. '):

' → logprob: -12.281258583068848
    8. '[' → logprob: -12.406258583068848
    9. ''):
' → logprob: -12.656258583068848
    10. ':' → logprob: -12.781258583068848

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009569590329192579
    2. ' left' → logprob: -7.875957012176514
    3. 'left' → logprob: -8.500956535339355
    4. ':
' → logprob: -8.500956535339355
    5. '):
' → logprob: -9.375956535339355
    6. '   ' → logprob: -10.500956535339355
    7. '	left' → logprob: -11.500956535339355
    8. ':' → logprob: -11.625956535339355
    9. ',' → logprob: -11.750956535339355
    10. ':left' → logprob: -11.750956535339355

Token 271: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.20141790807247162
    2. ' left' → logprob: -1.7014179229736328
    3. '	left' → logprob: -13.201417922973633
    4. '   ' → logprob: -13.701417922973633
    5. '       ' → logprob: -13.951417922973633
    6. '           ' → logprob: -15.576417922973633
    7. '(left' → logprob: -15.701417922973633
    8. '.left' → logprob: -15.701417922973633
    9. '[left' → logprob: -15.701417922973633
    10. '_left' → logprob: -16.826417922973633

Token 272: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029751529917120934
    2. '+=' → logprob: -3.5297515392303467
    3. ' ' → logprob: -15.029751777648926
    4. '    ' → logprob: -15.279751777648926
    5. '+' → logprob: -16.02975082397461
    6. ' +' → logprob: -16.02975082397461
    7. '=' → logprob: -16.15475082397461
    8. ']+=' → logprob: -16.52975082397461
    9. ' ' → logprob: -17.65475082397461
    10. '+='' → logprob: -18.52975082397461

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -15.880233764648438
    4. '```' → logprob: -17.130233764648438
    5. '
' → logprob: -17.880233764648438
    6. '１' → logprob: -19.067733764648438
    7. '0' → logprob: -19.442733764648438
    8. '۱' → logprob: -19.630233764648438
    9. ' ' → logprob: -20.130233764648438
    10. '       ' → logprob: -20.255233764648438

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '
' → logprob: -18.687585830688477
    4. '   ' → logprob: -18.937585830688477
    5. '```' → logprob: -19.000085830688477
    6. 'def' → logprob: -19.750085830688477
    7. '۱' → logprob: -20.062585830688477
    8. '１' → logprob: -20.500085830688477
    9. '0' → logprob: -20.812585830688477
    10. '<|end|>' → logprob: -21.250085830688477

Token 275: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010237160138785839
    2. '
' → logprob: -5.510237216949463
    3. 'data' → logprob: -6.135237216949463
    4. '    
' → logprob: -6.635237216949463
    5. ' data' → logprob: -6.635237216949463
    6. '<|end|>' → logprob: -8.135236740112305
    7. ')' → logprob: -8.510236740112305
    8. '  
' → logprob: -9.135236740112305
    9. ',' → logprob: -9.385236740112305
    10. ' 
' → logprob: -9.885236740112305

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6266946196556091
    2. 'data' → logprob: -1.001694679260254
    3. ' data' → logprob: -2.501694679260254
    4. '
' → logprob: -4.501694679260254
    5. 'right' → logprob: -6.376694679260254
    6. '    
' → logprob: -6.751694679260254
    7. ' right' → logprob: -7.251694679260254
    8. ')' → logprob: -8.251694679260254
    9. ' 
' → logprob: -8.501694679260254
    10. ',' → logprob: -9.126694679260254

Token 277: ' right' (ID: 1849)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5338777303695679
    2. ' data' → logprob: -0.9088777303695679
    3. ' if' → logprob: -4.908877849578857
    4. 'if' → logprob: -6.533877849578857
    5. '   ' → logprob: -7.033877849578857
    6. 'return' → logprob: -8.5338773727417
    7. ' return' → logprob: -9.0338773727417
    8. 'right' (adapté à ' right') → logprob: -9.1588773727417
    9. ' right' → logprob: -9.2838773727417
    10. 'new' → logprob: -9.2838773727417

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. '=len' → logprob: -16.038042068481445
    4. ' ' → logprob: -16.413042068481445
    5. '   ' → logprob: -18.913042068481445
    6. '=int' → logprob: -19.288042068481445
    7. '＝' → logprob: -20.788042068481445
    8. '  ' → logprob: -21.163042068481445
    9. ' =
' → logprob: -21.413042068481445
    10. ' +=' → logprob: -21.413042068481445

Token 279: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6931602954864502
    2. ' len' → logprob: -0.6931602954864502
    3. '   ' → logprob: -11.443160057067871
    4. '	len' → logprob: -13.818160057067871
    5. '(len' → logprob: -14.568160057067871
    6. '=len' → logprob: -14.693160057067871
    7. '0' → logprob: -14.943160057067871
    8. ' ' → logprob: -16.193161010742188
    9. '[len' → logprob: -16.818161010742188
    10. ',len' → logprob: -17.818161010742188

Token 280: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0003361774142831564
    2. 'data' → logprob: -8.000336647033691
    3. '[data' → logprob: -14.875336647033691
    4. '(' → logprob: -16.250335693359375
    5. ')data' → logprob: -16.375335693359375
    6. '=data' → logprob: -16.500335693359375
    7. ' data' → logprob: -17.625335693359375
    8. 's' → logprob: -18.750335693359375
    9. '   ' → logprob: -19.125335693359375
    10. 'def' → logprob: -19.375335693359375

Token 281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002892132615670562
    2. '(data' → logprob: -6.002892017364502
    3. 'data' → logprob: -8.25289249420166
    4. '(' → logprob: -9.62789249420166
    5. ')' → logprob: -9.75289249420166
    6. '[data' → logprob: -10.50289249420166
    7. '0' → logprob: -13.25289249420166
    8. ')-' → logprob: -14.00289249420166
    9. ' [' → logprob: -14.25289249420166
    10. '   ' → logprob: -14.75289249420166

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5771939754486084
    2. 'data' → logprob: -0.9521939754486084
    3. '[' → logprob: -2.9521939754486084
    4. ' data' → logprob: -8.202194213867188
    5. ' ' → logprob: -9.577194213867188
    6. '   ' → logprob: -10.952194213867188
    7. '(data' → logprob: -11.202194213867188
    8. '(' → logprob: -11.577194213867188
    9. '[data' → logprob: -11.827194213867188
    10. ')' → logprob: -12.577194213867188

Token 283: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008279714384116232
    2. ')-' → logprob: -7.250827789306641
    3. ' )' → logprob: -9.12582778930664
    4. '-' → logprob: -12.62582778930664
    5. '[' → logprob: -13.25082778930664
    6. '-)' → logprob: -13.87582778930664
    7. ' -' → logprob: -14.00082778930664
    8. ')
' → logprob: -14.62582778930664
    9. '')' → logprob: -14.87582778930664
    10. '   ' → logprob: -15.00082778930664

Token 284: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12692810595035553
    2. ' -' → logprob: -2.1269280910491943
    3. '()-' → logprob: -17.876928329467773
    4. '<|end|>' → logprob: -18.626928329467773
    5. '−' → logprob: -18.751928329467773
    6. '–' → logprob: -18.876928329467773
    7. '-
' → logprob: -19.876928329467773
    8. ')-' → logprob: -20.376928329467773
    9. ' ' → logprob: -20.626928329467773
    10. ')' → logprob: -20.626928329467773

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620353225618601
    2. ' ' → logprob: -5.379620552062988
    3. '   ' → logprob: -17.129619598388672
    4. '0' → logprob: -17.254619598388672
    5. '```' → logprob: -17.879619598388672
    6. '2' → logprob: -18.379619598388672
    7. '<|end|>' → logprob: -18.879619598388672
    8. '  ' → logprob: -19.254619598388672
    9. '
' → logprob: -19.379619598388672
    10. ' ' → logprob: -19.879619598388672

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '0' → logprob: -18.875085830688477
    4. '   ' → logprob: -19.750085830688477
    5. '2' → logprob: -19.875085830688477
    6. '
' → logprob: -20.000085830688477
    7. '```' → logprob: -20.500085830688477
    8. '  ' → logprob: -21.000085830688477
    9. ')' → logprob: -21.625085830688477
    10. '<|end|>' → logprob: -21.937585830688477

Token 287: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19531378149986267
    2. '<|end|>' → logprob: -1.820313811302185
    3. ' while' → logprob: -5.195313930511475
    4. '
' → logprob: -5.445313930511475
    5. 'while' → logprob: -6.570313930511475
    6. '+' → logprob: -6.820313930511475
    7. ')' → logprob: -6.945313930511475
    8. '<|end|>' → logprob: -7.570313930511475
    9. ' +' → logprob: -7.945313930511475
    10. '    
' → logprob: -8.070313453674316

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.737923800945282
    2. '<|end|>' → logprob: -1.7379238605499268
    3. ' while' → logprob: -1.9879238605499268
    4. '
' → logprob: -1.9879238605499268
    5. 'while' → logprob: -2.7379238605499268
    6. '<|end|>' → logprob: -6.362923622131348
    7. '    
' → logprob: -6.737923622131348
    8. ')' → logprob: -6.987923622131348
    9. '  
' → logprob: -7.362923622131348
    10. ' 
' → logprob: -7.487923622131348

Token 289: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.008798571303486824
    2. ' while' → logprob: -4.758798599243164
    3. '   ' → logprob: -8.633798599243164
    4. '
' → logprob: -13.258798599243164
    5. '	while' → logprob: -13.258798599243164
    6. 'right' → logprob: -13.758798599243164
    7. 'While' → logprob: -14.008798599243164
    8. ' ' → logprob: -15.258798599243164
    9. ')' → logprob: -16.758798599243164
    10. '<|end|>' → logprob: -17.008798599243164

Token 290: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3132631182670593
    2. ' right' → logprob: -1.313263177871704
    3. '	right' → logprob: -14.438262939453125
    4. '   ' → logprob: -15.438262939453125
    5. '(right' → logprob: -15.438262939453125
    6. ' ' → logprob: -15.813262939453125
    7. 'Right' → logprob: -16.563262939453125
    8. '[right' → logprob: -17.063262939453125
    9. '
' → logprob: -17.438262939453125
    10. 'r' → logprob: -17.438262939453125

Token 291: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5250113010406494
    2. ' >' → logprob: -1.2750113010406494
    3. '>' → logprob: -2.5250113010406494
    4. '>=' → logprob: -3.0250113010406494
    5. ' <' → logprob: -8.15001106262207
    6. ' ' → logprob: -9.65001106262207
    7. '<' → logprob: -10.90001106262207
    8. '   ' → logprob: -11.15001106262207
    9. ')' → logprob: -12.27501106262207
    10. 'right' → logprob: -12.90001106262207

Token 292: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001402621390298009
    2. ' ' → logprob: -6.751402854919434
    3. 'left' → logprob: -8.501402854919434
    4. ' left' → logprob: -10.501402854919434
    5. '   ' → logprob: -13.876402854919434
    6. 'right' → logprob: -14.251402854919434
    7. ' right' → logprob: -16.751401901245117
    8. '1' → logprob: -17.251401901245117
    9. '	left' → logprob: -17.626401901245117
    10. '(left' → logprob: -17.751401901245117

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011709370883181691
    2. ' ' → logprob: -6.751171112060547
    3. 'left' → logprob: -15.001171112060547
    4. 'right' → logprob: -15.501171112060547
    5. '1' → logprob: -16.376171112060547
    6. '   ' → logprob: -17.188671112060547
    7. 'len' → logprob: -17.376171112060547
    8. '```' → logprob: -17.813671112060547
    9. '<|end|>' → logprob: -18.001171112060547
    10. ' left' → logprob: -18.126171112060547

Token 294: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889816164970398
    2. 'and' → logprob: -2.5788981914520264
    3. ' ' → logprob: -12.453898429870605
    4. '<|end|>' → logprob: -12.578898429870605
    5. '   ' → logprob: -15.578898429870605
    6. '	and' → logprob: -15.828898429870605
    7. ',' → logprob: -16.32889747619629
    8. ' &' → logprob: -16.32889747619629
    9. ' &&' → logprob: -16.45389747619629
    10. '0' → logprob: -16.45389747619629

Token 295: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.011075177229940891
    2. ' all' → logprob: -4.511075019836426
    3. 'right' → logprob: -10.761075019836426
    4. '   ' → logprob: -12.386075019836426
    5. ' ' → logprob: -14.511075019836426
    6. '    ' → logprob: -15.136075019836426
    7. '  ' → logprob: -15.636075019836426
    8. 'not' → logprob: -15.761075019836426
    9. '       ' → logprob: -16.011075973510742
    10. '	all' → logprob: -16.011075973510742

Token 296: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.006101205013692379
    2. 'row' → logprob: -5.256101131439209
    3. ' row' → logprob: -7.256101131439209
    4. '(data' → logprob: -9.131101608276367
    5. ' (' → logprob: -10.131101608276367
    6. 'data' → logprob: -12.131101608276367
    7. '   ' → logprob: -12.881101608276367
    8. '[row' → logprob: -13.256101608276367
    9. '(' → logprob: -13.506101608276367
    10. ' ' → logprob: -13.881101608276367

Token 297: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -2.3915141355246305e-05
    2. 'right' → logprob: -11.25002384185791
    3. '[' → logprob: -11.87502384185791
    4. '[left' → logprob: -13.00002384185791
    5. ' [' → logprob: -14.37502384185791
    6. '[
' → logprob: -14.87502384185791
    7. ' right' → logprob: -15.75002384185791
    8. '(right' → logprob: -16.125024795532227
    9. '[root' → logprob: -16.375024795532227
    10. ')' → logprob: -16.875024795532227

Token 298: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06382457166910172
    2. '==' → logprob: -2.8138246536254883
    3. ']' → logprob: -6.688824653625488
    4. ']==' → logprob: -7.688824653625488
    5. ')' → logprob: -9.938824653625488
    6. '=='' → logprob: -10.188824653625488
    7. ' ' → logprob: -10.313824653625488
    8. '[' → logprob: -11.563824653625488
    9. ' =='' → logprob: -11.688824653625488
    10. ' ]' → logprob: -12.938824653625488

Token 299: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1002415120601654
    2. '==' → logprob: -2.3502414226531982
    3. '=='' → logprob: -10.850241661071777
    4. ' ' → logprob: -12.225241661071777
    5. '.' → logprob: -12.975241661071777
    6. ']==' → logprob: -13.225241661071777
    7. ' =='' → logprob: -13.475241661071777
    8. ')' → logprob: -13.850241661071777
    9. ' '.'' → logprob: -13.975241661071777
    10. ')==' → logprob: -14.225241661071777

Token 300: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00132976402528584
    2. ' '.'' → logprob: -6.6263298988342285
    3. '.' → logprob: -12.62632942199707
    4. '('.')' → logprob: -15.50132942199707
    5. ''' → logprob: -16.00132942199707
    6. '"."' → logprob: -16.50132942199707
    7. '.'.' → logprob: -17.75132942199707
    8. ' ' → logprob: -17.87632942199707
    9. '   ' → logprob: -18.12632942199707
    10. '')' → logprob: -18.25132942199707

Token 301: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5761397480964661
    2. 'for' → logprob: -0.8261397480964661
    3. ')' → logprob: -8.576139450073242
    4. ' ' → logprob: -11.951139450073242
    5. '   ' → logprob: -13.326139450073242
    6. 'row' → logprob: -13.951139450073242
    7. '	for' → logprob: -14.701139450073242
    8. 'or' → logprob: -14.826139450073242
    9. '  ' → logprob: -15.201139450073242
    10. '```' → logprob: -15.201139450073242

Token 302: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.023246875032782555
    2. 'row' → logprob: -3.7732467651367188
    3. '[row' → logprob: -14.523246765136719
    4. '(row' → logprob: -14.648246765136719
    5. ' ' → logprob: -15.398246765136719
    6. '	row' → logprob: -15.898246765136719
    7. ' data' → logprob: -16.27324676513672
    8. 'data' → logprob: -16.77324676513672
    9. '   ' → logprob: -17.77324676513672
    10. '  ' → logprob: -19.52324676513672

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00527621153742075
    2. 'in' → logprob: -5.380276203155518
    3. 'data' → logprob: -8.255276679992676
    4. ')' → logprob: -8.505276679992676
    5. '   ' → logprob: -9.130276679992676
    6. '       ' → logprob: -10.255276679992676
    7. '[data' → logprob: -11.505276679992676
    8. ' ' → logprob: -11.755276679992676
    9. '):
' → logprob: -11.755276679992676
    10. '[' → logprob: -12.130276679992676

Token 304: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.22547055780887604
    2. ' data' → logprob: -1.6004705429077148
    3. 'row' → logprob: -11.100470542907715
    4. ' range' → logprob: -11.225470542907715
    5. 'range' → logprob: -11.350470542907715
    6. ' ' → logprob: -11.975470542907715
    7. ' row' → logprob: -12.475470542907715
    8. '[data' → logprob: -12.975470542907715
    9. '   ' → logprob: -13.350470542907715
    10. '(data' → logprob: -14.225470542907715

Token 305: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11777787655591965
    2. '):' → logprob: -2.2427778244018555
    3. '       ' → logprob: -5.7427778244018555
    4. ')' → logprob: -6.9927778244018555
    5. '   ' → logprob: -8.117777824401855
    6. ':' → logprob: -8.367777824401855
    7. 'right' → logprob: -8.992777824401855
    8. ':
' → logprob: -9.992777824401855
    9. ' right' → logprob: -10.367777824401855
    10. '):

' → logprob: -10.867777824401855

Token 306: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.622909665107727
    2. ' right' → logprob: -1.247909665107727
    3. '       ' → logprob: -1.747909665107727
    4. '   ' → logprob: -6.3729095458984375
    5. '	right' → logprob: -7.6229095458984375
    6. '[right' → logprob: -9.747909545898438
    7. '(right' → logprob: -10.497909545898438
    8. ':right' → logprob: -10.622909545898438
    9. ',right' → logprob: -11.122909545898438
    10. '    ' → logprob: -11.247909545898438

Token 307: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.25201377272605896
    2. ' right' → logprob: -1.5020138025283813
    3. '       ' → logprob: -9.62701416015625
    4. '	right' → logprob: -11.37701416015625
    5. '   ' → logprob: -12.25201416015625
    6. '     ' → logprob: -14.25201416015625
    7. '    ' → logprob: -14.50201416015625
    8. '           ' → logprob: -15.12701416015625
    9. ',right' → logprob: -15.37701416015625
    10. '.right' → logprob: -15.87701416015625

Token 308: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.2017575204372406
    2. '-=' → logprob: -1.701757550239563
    3. '-' → logprob: -8.076757431030273
    4. '   ' → logprob: -10.701757431030273
    5. ' -' → logprob: -12.701757431030273
    6. '>' → logprob: -13.451757431030273
    7. '>=' → logprob: -13.576757431030273
    8. '       ' → logprob: -13.826757431030273
    9. '=' → logprob: -13.826757431030273
    10. '+=' → logprob: -13.951757431030273

Token 309: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023269474506378174
    2. '1' → logprob: -3.7732694149017334
    3. '0' → logprob: -10.648269653320312
    4. ' ' → logprob: -15.148269653320312
    5. '<|end|>' → logprob: -18.898269653320312
    6. 'right' → logprob: -19.398269653320312
    7. ' right' → logprob: -19.398269653320312
    8. ' 
' → logprob: -19.648269653320312
    9. '​' → logprob: -19.648269653320312
    10. '   ' → logprob: -19.648269653320312

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.052989229559898376
    2. ' ' → logprob: -3.0529892444610596
    3. '0' → logprob: -5.4279890060424805
    4. 'right' → logprob: -16.177989959716797
    5. ' right' → logprob: -16.802989959716797
    6. '   ' → logprob: -16.927989959716797
    7. '```' → logprob: -18.427989959716797
    8. ')' → logprob: -18.865489959716797
    9. '-' → logprob: -18.865489959716797
    10. ' -' → logprob: -19.302989959716797

Token 311: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007556340657174587
    2. '
' → logprob: -5.132556438446045
    3. ')' → logprob: -7.257556438446045
    4. '    
' → logprob: -8.132555961608887
    5. '<|end|>' → logprob: -8.757555961608887
    6. 'data' → logprob: -8.882555961608887
    7. '\n' → logprob: -10.257555961608887
    8. ' data' → logprob: -10.257555961608887
    9. '[' → logprob: -10.632555961608887
    10. '\' → logprob: -10.882555961608887

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0263755414634943
    2. ')' → logprob: -4.526375770568848
    3. '<|end|>' → logprob: -5.526375770568848
    4. '
' → logprob: -5.901375770568848
    5. ':' → logprob: -5.901375770568848
    6. '```' → logprob: -6.651375770568848
    7. 'data' → logprob: -6.901375770568848
    8. ',' → logprob: -7.651375770568848
    9. '[' → logprob: -7.651375770568848
    10. '\' → logprob: -7.776375770568848

Token 313: ' new' (ID: 620)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11836469173431396
    2. 'data' → logprob: -2.8683648109436035
    3. '
' → logprob: -3.1183648109436035
    4. ' data' → logprob: -4.8683648109436035
    5. '    
' → logprob: -6.8683648109436035
    6. ' return' → logprob: -7.8683648109436035
    7. 'return' → logprob: -7.9933648109436035
    8. ' 
' → logprob: -8.368364334106445
    9. '```' → logprob: -9.118364334106445
    10. '\n' → logprob: -9.368364334106445

Token 314: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.41798698902130127
    2. 'data' → logprob: -1.1679869890213013
    3. ' =' → logprob: -3.6679868698120117
    4. ' data' → logprob: -5.792986869812012
    5. '_' → logprob: -7.167986869812012
    6. '=' → logprob: -7.292986869812012
    7. '   ' → logprob: -8.542986869812012
    8. 'd' → logprob: -9.292986869812012
    9. '[' → logprob: -9.417986869812012
    10. 'Data' → logprob: -9.792986869812012

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694239616394043
    2. ' =' → logprob: -2.1269423961639404
    3. '=[' → logprob: -11.62694263458252
    4. '[data' → logprob: -13.12694263458252
    5. '=data' → logprob: -13.25194263458252
    6. '[' → logprob: -13.87694263458252
    7. ' =[' → logprob: -15.00194263458252
    8. '[row' → logprob: -16.751941680908203
    9. ' [' → logprob: -17.001941680908203
    10. '   ' → logprob: -17.001941680908203

Token 316: ' [' (ID: 723)
  Prédit: '[data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[data' → logprob: -0.09950653463602066
    2. '[' → logprob: -2.8495066165924072
    3. ' [' → logprob: -3.8495066165924072
    4. '[row' → logprob: -4.849506378173828
    5. '['' → logprob: -5.349506378173828
    6. '[line' → logprob: -7.099506378173828
    7. '["' → logprob: -7.724506378173828
    8. '[cell' → logprob: -7.974506378173828
    9. '[]
' → logprob: -8.724506378173828
    10. '[]' → logprob: -8.849506378173828

Token 317: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0025037210434675217
    2. ' row' → logprob: -6.002503871917725
    3. 'line' → logprob: -10.502503395080566
    4. 'r' → logprob: -14.752503395080566
    5. ' line' → logprob: -16.252504348754883
    6. '   ' → logprob: -17.877504348754883
    7. '(row' → logprob: -18.002504348754883
    8. '	row' → logprob: -18.127504348754883
    9. 'rows' → logprob: -18.377504348754883
    10. 'x' → logprob: -19.252504348754883

Token 318: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -8.590104698669165e-05
    2. 'left' → logprob: -9.750085830688477
    3. '   ' → logprob: -10.875085830688477
    4. '=' → logprob: -12.375085830688477
    5. '[' → logprob: -13.125085830688477
    6. '[new' → logprob: -14.375085830688477
    7. '[right' → logprob: -15.125085830688477
    8. ' [' → logprob: -15.125085830688477
    9. ' left' → logprob: -15.375085830688477
    10. '(left' → logprob: -15.375085830688477

Token 319: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.008996715769171715
    2. 'right' → logprob: -5.008996486663818
    3. '[right' → logprob: -6.883996486663818
    4. ' :' → logprob: -7.383996486663818
    5. ':' → logprob: -7.883996486663818
    6. '+' → logprob: -8.883996963500977
    7. ' right' → logprob: -10.633996963500977
    8. ' ' → logprob: -10.758996963500977
    9. '   ' → logprob: -11.008996963500977
    10. '	right' → logprob: -11.633996963500977

Token 320: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.306760805164231e-05
    2. ' +' → logprob: -11.25001335144043
    3. ']+' → logprob: -20.75001335144043
    4. '＋' → logprob: -20.87501335144043
    5. '1' → logprob: -21.50001335144043
    6. '+j' → logprob: -23.00001335144043
    7. '[' → logprob: -23.62501335144043
    8. '+s' → logprob: -23.62501335144043
    9. '+r' → logprob: -23.75001335144043
    10. '+i' → logprob: -24.00001335144043

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. ']' → logprob: -11.250016212463379
    3. ' ' → logprob: -12.750016212463379
    4. '+' → logprob: -16.750015258789062
    5. '   ' → logprob: -17.875015258789062
    6. '
' → logprob: -18.000015258789062
    7. ']
' → logprob: -18.250015258789062
    8. '-' → logprob: -18.750015258789062
    9. 'len' → logprob: -18.875015258789062
    10. '```' → logprob: -18.875015258789062

Token 322: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5451681974809617e-05
    2. ' ]' → logprob: -11.125015258789062
    3. '']' → logprob: -14.625015258789062
    4. ']
' → logprob: -16.625015258789062
    5. ' for' → logprob: -17.375015258789062
    6. ')' → logprob: -17.625015258789062
    7. '])' → logprob: -18.000015258789062
    8. 'for' → logprob: -18.000015258789062
    9. ' ' → logprob: -18.375015258789062
    10. '"]' → logprob: -18.500015258789062

Token 323: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07893726974725723
    2. 'for' → logprob: -2.578937292098999
    3. '           ' → logprob: -11.828937530517578
    4. ']' → logprob: -11.828937530517578
    5. '       ' → logprob: -12.078937530517578
    6. '        ' → logprob: -12.453937530517578
    7. '    ' → logprob: -12.578937530517578
    8. '         ' → logprob: -12.578937530517578
    9. ' ' → logprob: -12.578937530517578
    10. '          ' → logprob: -12.703937530517578

Token 324: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.038084402680397034
    2. 'row' → logprob: -3.2880845069885254
    3. ' data' → logprob: -10.288084030151367
    4. 'data' → logprob: -11.913084030151367
    5. '	row' → logprob: -13.788084030151367
    6. '(row' → logprob: -14.413084030151367
    7. ' ' → logprob: -15.038084030151367
    8. 'Row' → logprob: -15.913084030151367
    9. '[row' → logprob: -16.288084030151367
    10. '$row' → logprob: -17.038084030151367

Token 325: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.436581015586853
    2. 'data' → logprob: -1.811581015586853
    3. 'row' → logprob: -2.4365811347961426
    4. ' data' → logprob: -3.1865811347961426
    5. 'in' → logprob: -3.3115811347961426
    6. ' row' → logprob: -3.6865811347961426
    7. ' ' → logprob: -10.186580657958984
    8. ',row' → logprob: -12.061580657958984
    9. '(row' → logprob: -12.311580657958984
    10. '	row' → logprob: -12.811580657958984

Token 326: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0019286326132714748
    2. ' data' → logprob: -6.251928806304932
    3. '(data' → logprob: -18.376928329467773
    4. 'row' → logprob: -18.626928329467773
    5. 'dat' → logprob: -18.626928329467773
    6. 'd' → logprob: -18.876928329467773
    7. ' ' → logprob: -19.001928329467773
    8. '	data' → logprob: -19.251928329467773
    9. 'range' → logprob: -19.626928329467773
    10. 'new' → logprob: -19.751928329467773

Token 327: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.778209353797138e-05
    2. ']
' → logprob: -10.250067710876465
    3. ' ]' → logprob: -10.750067710876465
    4. '   ' → logprob: -11.500067710876465
    5. ')' → logprob: -15.375067710876465
    6. ']
' → logprob: -15.875067710876465
    7. ']

' → logprob: -16.00006866455078
    8. '<|end|>' → logprob: -16.50006866455078
    9. '']' → logprob: -17.00006866455078
    10. '()]' → logprob: -17.12506866455078

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001126026691053994
    2. 'return' → logprob: -9.500112533569336
    3. '	return' → logprob: -10.875112533569336
    4. ' return' → logprob: -11.250112533569336
    5. '<|end|>' → logprob: -12.625112533569336
    6. '    
' → logprob: -13.625112533569336
    7. '
' → logprob: -14.500112533569336
    8. '       ' → logprob: -15.250112533569336
    9. ':return' → logprob: -15.625112533569336
    10. ')' → logprob: -16.000112533569336

Token 329: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16141277551651
    2. 'return' (adapté à ' return') → logprob: -1.9114127159118652
    3. ' return' → logprob: -6.786412715911865
    4. '	return' → logprob: -10.036413192749023
    5. '    
' → logprob: -12.286413192749023
    6. ':return' → logprob: -12.286413192749023
    7. '
' → logprob: -12.661413192749023
    8. '       ' → logprob: -14.536413192749023
    9. '```' → logprob: -14.536413192749023
    10. '<|end|>' → logprob: -14.661413192749023

Token 330: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -3.750436007976532e-05
    2. ' new' → logprob: -10.25003719329834
    3. '[new' → logprob: -13.12503719329834
    4. '
' → logprob: -17.375038146972656
    5. '[' → logprob: -17.375038146972656
    6. '['' → logprob: -18.000038146972656
    7. '[
' → logprob: -18.500038146972656
    8. '   ' → logprob: -19.500038146972656
    9. '```' → logprob: -20.000038146972656
    10. '	new' → logprob: -20.500038146972656

Token 331: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.011100047267973423
    2. 'ew' → logprob: -4.511099815368652
    3. 'new' → logprob: -10.261099815368652
    4. 'w' → logprob: -11.386099815368652
    5. '_' → logprob: -13.261099815368652
    6. '_new' → logprob: -13.386099815368652
    7. 'data' → logprob: -13.511099815368652
    8. '_w' → logprob: -14.636099815368652
    9. 'e' → logprob: -14.886099815368652
    10. '```' → logprob: -15.261099815368652

Token 332: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003957608714699745
    2. 'class' → logprob: -9.125395774841309
    3. 'import' → logprob: -9.625395774841309
    4. '
' → logprob: -9.750395774841309
    5. '#' → logprob: -9.875395774841309
    6. '\' → logprob: -10.000395774841309
    7. '\n' → logprob: -11.000395774841309
    8. '```' → logprob: -11.500395774841309
    9. ' def' → logprob: -12.375395774841309
    10. 'from' → logprob: -12.500395774841309

Token 334: ' split' (ID: 12648)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.5281318426132202
    2. ' main' → logprob: -1.7781318426132202
    3. ' combine' → logprob: -2.1531319618225098
    4. ' multiply' → logprob: -2.4031319618225098
    5. ' count' → logprob: -3.2781319618225098
    6. ' parse' → logprob: -3.4031319618225098
    7. ' pow' → logprob: -3.5281319618225098
    8. ' merge' → logprob: -3.5281319618225098
    9. 'solve' → logprob: -3.5281319618225098
    10. ' cell' → logprob: -3.6531319618225098

Token 335: '_cells' (ID: 93468)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.24621503055095673
    2. '(' → logprob: -1.7462149858474731
    3. '_cells' → logprob: -4.496214866638184
    4. '(cell' → logprob: -4.621214866638184
    5. '(s' → logprob: -4.871214866638184
    6. '(line' → logprob: -5.496214866638184
    7. '_cell' → logprob: -5.871214866638184
    8. '(lines' → logprob: -6.621214866638184
    9. '('' → logprob: -6.746214866638184
    10. '(grid' → logprob: -7.371214866638184

Token 336: '(line' (ID: 18178)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.015213316306471825
    2. '(s' → logprob: -4.265213489532471
    3. '(text' → logprob: -8.390213012695312
    4. '(lines' → logprob: -8.390213012695312
    5. '(cell' → logprob: -8.765213012695312
    6. '(c' → logprob: -9.265213012695312
    7. '(grid' → logprob: -9.390213012695312
    8. '(line' → logprob: -9.640213012695312
    9. '(code' → logprob: -10.265213012695312
    10. '(d' → logprob: -10.515213012695312

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23275643587112427
    2. ',' → logprob: -1.8577563762664795
    3. '):
' → logprob: -3.1077563762664795
    4. '(line' → logprob: -5.232756614685059
    5. ')' → logprob: -7.482756614685059
    6. ',line' → logprob: -8.232756614685059
    7. ' ):' → logprob: -8.607756614685059
    8. '):
' → logprob: -8.732756614685059
    9. ':' → logprob: -9.857756614685059
    10. ' ,' → logprob: -10.107756614685059

Token 338: '   ' (ID: 271)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.3224357068538666
    2. '   ' → logprob: -1.572435736656189
    3. ' cells' → logprob: -2.8224356174468994
    4. 'tokens' → logprob: -5.6974358558654785
    5. 'return' → logprob: -6.3224358558654785
    6. 'parts' → logprob: -7.0724358558654785
    7. ' parts' → logprob: -7.5724358558654785
    8. '```' → logprob: -7.6974358558654785
    9. 'def' → logprob: -7.9474358558654785
    10. ' return' → logprob: -8.32243537902832

Token 339: ' #' (ID: 1069)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.012653854675590992
    2. 'parts' → logprob: -5.137653827667236
    3. '   ' → logprob: -5.762653827667236
    4. 'res' → logprob: -5.887653827667236
    5. ' cells' → logprob: -8.262654304504395
    6. 'tokens' → logprob: -8.762654304504395
    7. 'return' → logprob: -9.262654304504395
    8. 'result' → logprob: -9.512654304504395
    9. 'lines' → logprob: -9.762654304504395
    10. 'pieces' → logprob: -10.762654304504395

Token 340: ' split' (ID: 12648)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.604462742805481
    2. ' res' → logprob: -2.1044626235961914
    3. ' cells' → logprob: -2.3544626235961914
    4. 'parts' → logprob: -2.7294626235961914
    5. 'line' → logprob: -3.3544626235961914
    6. ' parts' → logprob: -3.3544626235961914
    7. 'res' → logprob: -3.3544626235961914
    8. 'return' → logprob: -3.7294626235961914
    9. 'tokens' → logprob: -4.229462623596191
    10. ' line' → logprob: -4.979462623596191

Token 341: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7306360006332397
    2. '(line' → logprob: -1.3556360006332397
    3. 'line' → logprob: -2.2306361198425293
    4. '[line' → logprob: -2.3556361198425293
    5. 's' → logprob: -4.355636119842529
    6. ' cells' → logprob: -4.605636119842529
    7. ' parts' → logprob: -4.980636119842529
    8. 'cells' → logprob: -5.105636119842529
    9. 'parts' → logprob: -5.480636119842529
    10. 'tokens' → logprob: -5.605636119842529

Token 342: ' into' (ID: 1511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013142693787813187
    2. '=' → logprob: -4.8881425857543945
    3. '(line' → logprob: -6.0131425857543945
    4. ',' → logprob: -7.7631425857543945
    5. 's' → logprob: -8.138142585754395
    6. ' by' → logprob: -8.138142585754395
    7. '[]' → logprob: -8.138142585754395
    8. '=[]' → logprob: -8.138142585754395
    9. '(' → logprob: -8.263142585754395
    10. '=line' → logprob: -8.513142585754395

Token 343: ' cells' (ID: 11242)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5055742263793945
    2. '[line' → logprob: -1.5055742263793945
    3. '[]
' → logprob: -2.3805742263793945
    4. '[]' → logprob: -3.0055742263793945
    5. 'tokens' → logprob: -4.6305742263793945
    6. '[' → logprob: -4.6305742263793945
    7. '(line' → logprob: -5.6305742263793945
    8. '['' → logprob: -5.7555742263793945
    9. 'cells' → logprob: -6.0055742263793945
    10. '[],' → logprob: -6.5055742263793945

Token 344: ' by' (ID: 656)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.40344128012657166
    2. '[]' → logprob: -2.5284411907196045
    3. '   ' → logprob: -2.6534411907196045
    4. ' =' → logprob: -3.0284411907196045
    5. '[]
' → logprob: -3.4034411907196045
    6. 'tokens' → logprob: -3.5284411907196045
    7. 'res' → logprob: -3.7784411907196045
    8. 'result' → logprob: -4.528441429138184
    9. ' cells' → logprob: -4.528441429138184
    10. '=' → logprob: -5.153441429138184

Token 345: ' spaces' (ID: 18608)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10002020001411438
    2. '';' → logprob: -2.850020170211792
    3. '','' → logprob: -3.850020170211792
    4. ''#' → logprob: -5.850020408630371
    5. 'line' → logprob: -6.100020408630371
    6. '',' → logprob: -6.100020408630371
    7. ''.' → logprob: -6.225020408630371
    8. ''\' → logprob: -6.225020408630371
    9. ' '' → logprob: -6.850020408630371
    10. ''*' → logprob: -8.100020408630371

Token 346: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09225556999444962
    2. '   ' → logprob: -2.7172555923461914
    3. '(line' → logprob: -5.342255592346191
    4. '[]' → logprob: -5.592255592346191
    5. '=' → logprob: -5.717255592346191
    6. '(' → logprob: -6.467255592346191
    7. 'def' → logprob: -6.717255592346191
    8. ',' → logprob: -6.842255592346191
    9. '():' → logprob: -6.842255592346191
    10. ':' → logprob: -7.467255592346191

Token 347: 'period' (ID: 32867)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13741843402385712
    2. ' )' → logprob: -2.387418508529663
    3. ''' → logprob: -3.387418508529663
    4. ' '' → logprob: -7.012418270111084
    5. 'def' → logprob: -8.137418746948242
    6. '')' → logprob: -8.387418746948242
    7. 'token' → logprob: -8.387418746948242
    8. ' line' → logprob: -8.387418746948242
    9. ' ' → logprob: -8.637418746948242
    10. 'return' → logprob: -8.887418746948242

Token 348: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5951855778694153
    2. ''' → logprob: -1.3451855182647705
    3. ')' → logprob: -1.9701855182647705
    4. '')' → logprob: -3.7201855182647705
    5. '<|end|>' → logprob: -4.72018575668335
    6. ''s' → logprob: -5.34518575668335
    7. ',' → logprob: -5.59518575668335
    8. '=' → logprob: -6.84518575668335
    9. ' '' → logprob: -6.97018575668335
    10. ' or' → logprob: -7.09518575668335

Token 349: ' represent' (ID: 5188)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1508119106292725
    2. ''' → logprob: -1.2758119106292725
    3. ' or' → logprob: -2.0258119106292725
    4. '')' → logprob: -2.6508119106292725
    5. 'and' → logprob: -3.1508119106292725
    6. ',' → logprob: -3.2758119106292725
    7. 'or' → logprob: -3.4008119106292725
    8. ' and' → logprob: -3.4008119106292725
    9. '<|end|>' → logprob: -4.150812149047852
    10. '+' → logprob: -4.900812149047852

Token 350: ' spaces' (ID: 18608)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9354262351989746
    2. ''.' → logprob: -1.0604262351989746
    3. 'cells' → logprob: -2.1854262351989746
    4. 'empty' → logprob: -3.1854262351989746
    5. ')' → logprob: -3.6854262351989746
    6. 'tokens' → logprob: -4.435426235198975
    7. 'cell' → logprob: -4.435426235198975
    8. 'delimiter' → logprob: -4.685426235198975
    9. ' cells' → logprob: -5.060426235198975
    10. ' empty' → logprob: -5.560426235198975

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7141227126121521
    2. '):' → logprob: -0.8391227126121521
    3. ' )' → logprob: -4.589122772216797
    4. '   ' → logprob: -4.589122772216797
    5. '):
' → logprob: -4.589122772216797
    6. '')' → logprob: -4.714122772216797
    7. ',' → logprob: -4.839122772216797
    8. 'def' → logprob: -4.964122772216797
    9. ' ):' → logprob: -5.464122772216797
    10. ''):' → logprob: -5.714122772216797

Token 352: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3492223918437958
    2. 'cells' → logprob: -2.474222421646118
    3. 'tokens' → logprob: -2.849222421646118
    4. ' return' → logprob: -2.849222421646118
    5. '   ' → logprob: -2.974222421646118
    6. 'parts' → logprob: -4.099222183227539
    7. 'def' → logprob: -4.724222183227539
    8. ' cells' → logprob: -5.099222183227539
    9. ' parts' → logprob: -5.474222183227539
    10. '```' → logprob: -6.724222183227539

Token 353: ' cells' (ID: 11242)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07503949850797653
    2. ' return' → logprob: -2.7000393867492676
    3. 'cells' (adapté à ' cells') → logprob: -6.575039386749268
    4. 'parts' → logprob: -6.825039386749268
    5. '   ' → logprob: -7.075039386749268
    6. ' parts' → logprob: -7.575039386749268
    7. 'line' → logprob: -8.200039863586426
    8. ' cells' → logprob: -8.325039863586426
    9. 'tokens' → logprob: -8.450039863586426
    10. 'import' → logprob: -8.825039863586426

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892856746912003
    2. '=' → logprob: -2.5789284706115723
    3. '=[]' → logprob: -10.32892894744873
    4. ',' → logprob: -13.07892894744873
    5. '=line' → logprob: -13.07892894744873
    6. ' ' → logprob: -14.95392894744873
    7. 's' → logprob: -15.20392894744873
    8. '=[]
' → logprob: -15.20392894744873
    9. ')' → logprob: -15.82892894744873
    10. '_line' → logprob: -15.95392894744873

Token 355: ' []
' (ID: 8911)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04329603910446167
    2. '[]' → logprob: -3.5432960987091064
    3. '[line' → logprob: -4.918295860290527
    4. '[]
' → logprob: -5.168295860290527
    5. ' line' → logprob: -8.918295860290527
    6. '[' → logprob: -9.043295860290527
    7. 'list' → logprob: -9.418295860290527
    8. '['' → logprob: -10.043295860290527
    9. '[]

' → logprob: -10.668295860290527
    10. '(line' → logprob: -11.043295860290527

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.145340919494629
    2. 'current' → logprob: -1.145340919494629
    3. ' current' → logprob: -1.645340919494629
    4. 'i' → logprob: -3.395340919494629
    5. 'cell' → logprob: -3.520340919494629
    6. 'start' → logprob: -3.645340919494629
    7. ' cell' → logprob: -3.770340919494629
    8. ' i' → logprob: -4.020340919494629
    9. ' start' → logprob: -4.395340919494629
    10. 'cur' → logprob: -4.770340919494629

Token 357: ' start' (ID: 1604)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.14581263065338135
    2. 'cell' → logprob: -2.645812511444092
    3. 'start' (adapté à ' start') → logprob: -3.270812511444092
    4. 'cur' → logprob: -4.145812511444092
    5. 'curr' → logprob: -5.145812511444092
    6. 'parts' → logprob: -6.145812511444092
    7. 'i' → logprob: -6.645812511444092
    8. ' current' → logprob: -7.770812511444092
    9. 'token' → logprob: -8.02081298828125
    10. 'temp' → logprob: -8.39581298828125

Token 358: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868767023086548
    2. ' =' → logprob: -1.1368767023086548
    3. '_idx' → logprob: -12.386877059936523
    4. ' ' → logprob: -14.761877059936523
    5. '_' → logprob: -15.011877059936523
    6. '_index' → logprob: -15.136877059936523
    7. ',' → logprob: -15.761877059936523
    8. '_=' → logprob: -16.011877059936523
    9. 'idx' → logprob: -16.386877059936523
    10. '=None' → logprob: -16.636877059936523

Token 359: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037478472222574055
    2. ' ' → logprob: -8.375374794006348
    3. 'None' → logprob: -8.875374794006348
    4. ' None' → logprob: -12.375374794006348
    5. '-' → logprob: -15.625374794006348
    6. ' -' → logprob: -17.50037384033203
    7. '   ' → logprob: -17.87537384033203
    8. '  ' → logprob: -19.75037384033203
    9. 'none' → logprob: -20.50037384033203
    10. 'len' → logprob: -20.62537384033203

Token 360: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40594756603240967
    2. 'for' → logprob: -1.1559475660324097
    3. ' 
' → logprob: -4.780947685241699
    4. '
' → logprob: -5.280947685241699
    5. ' ' → logprob: -6.530947685241699
    6. '<|end|>' → logprob: -6.655947685241699
    7. '0' → logprob: -7.280947685241699
    8. '=' → logprob: -7.655947685241699
    9. '   ' → logprob: -7.780947685241699
    10. '  
' → logprob: -8.2809476852417

Token 361: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31346431374549866
    2. 'for' → logprob: -1.3134642839431763
    3. '   ' → logprob: -9.188464164733887
    4. 'def' → logprob: -9.938464164733887
    5. '
' → logprob: -10.438464164733887
    6. ' 
' → logprob: -12.188464164733887
    7. ' ' → logprob: -12.438464164733887
    8. '=' → logprob: -12.938464164733887
    9. '```' → logprob: -13.313464164733887
    10. ' in' → logprob: -13.563464164733887

Token 362: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023248156532645226
    2. ' for' → logprob: -3.7732481956481934
    3. '
' → logprob: -13.523247718811035
    4. '0' → logprob: -14.523247718811035
    5. '   ' → logprob: -14.648247718811035
    6. 'i' → logprob: -15.148247718811035
    7. 'def' → logprob: -16.27324867248535
    8. ' 
' → logprob: -19.14824867248535
    9. ' ' → logprob: -19.27324867248535
    10. '	for' → logprob: -19.64824867248535

Token 363: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164448715746403
    2. ' i' → logprob: -4.264164447784424
    3. 'idx' → logprob: -14.014164924621582
    4. ' idx' → logprob: -16.639163970947266
    5. '(i' → logprob: -17.639163970947266
    6. 'c' → logprob: -19.139163970947266
    7. 'index' → logprob: -19.389163970947266
    8. ' ' → logprob: -19.639163970947266
    9. '	i' → logprob: -19.639163970947266
    10. ',i' → logprob: -21.264163970947266

Token 364: ',c' (ID: 22261)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29372236132621765
    2. 'in' → logprob: -1.41872239112854
    3. ',' → logprob: -4.418722152709961
    4. ' ,' → logprob: -8.543722152709961
    5. ' ' → logprob: -8.918722152709961
    6. ',in' → logprob: -9.293722152709961
    7. '=' → logprob: -11.918722152709961
    8. '	in' → logprob: -13.168722152709961
    9. 'i' → logprob: -13.168722152709961
    10. 'In' → logprob: -13.543722152709961

Token 365: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05911482498049736
    2. 'in' → logprob: -3.434114933013916
    3. 'n' → logprob: -3.684114933013916
    4. ' ' → logprob: -11.434114456176758
    5. ' n' → logprob: -12.434114456176758
    6. ',' → logprob: -12.809114456176758
    7. 'i' → logprob: -12.809114456176758
    8. '	in' → logprob: -13.184114456176758
    9. '   ' → logprob: -14.059114456176758
    10. 's' → logprob: -14.184114456176758

Token 366: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5759404301643372
    2. ' enumerate' → logprob: -0.8259404301643372
    3. 'range' → logprob: -14.825940132141113
    4. 'en' → logprob: -15.200940132141113
    5. '```' → logprob: -15.325940132141113
    6. '(en' → logprob: -16.82594108581543
    7. 'enum' → logprob: -16.95094108581543
    8. '
' → logprob: -18.07594108581543
    9. '.enumer' → logprob: -18.57594108581543
    10. ' ' → logprob: -18.82594108581543

Token 367: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0025961112696677446
    2. 'line' → logprob: -6.002595901489258
    3. ' line' → logprob: -9.377595901489258
    4. ')' → logprob: -11.377595901489258
    5. ',line' → logprob: -11.502595901489258
    6. '(' → logprob: -12.627595901489258
    7. '=line' → logprob: -13.002595901489258
    8. '[line' → logprob: -13.127595901489258
    9. ' (' → logprob: -13.627595901489258
    10. '
' → logprob: -14.127595901489258

Token 368: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004170406609773636
    2. '):' → logprob: -5.5041704177856445
    3. '():
' → logprob: -10.129170417785645
    4. ':
' → logprob: -11.129170417785645
    5. ':' → logprob: -11.254170417785645
    6. ' ):
' → logprob: -11.504170417785645
    7. '):
' → logprob: -11.879170417785645
    8. '   ' → logprob: -12.379170417785645
    9. '()):
' → logprob: -14.004170417785645
    10. '=' → logprob: -14.379170417785645

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006288022268563509
    2. ' if' → logprob: -7.75062894821167
    3. '   ' → logprob: -9.375628471374512
    4. '    ' → logprob: -9.875628471374512
    5. 'if' → logprob: -11.250628471374512
    6. ' ' → logprob: -11.750628471374512
    7. '<|end|>' → logprob: -11.750628471374512
    8. '	   ' → logprob: -11.875628471374512
    9. ',' → logprob: -12.500628471374512
    10. '        
' → logprob: -12.625628471374512

Token 370: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1737528294324875
    2. '       ' → logprob: -2.298752784729004
    3. 'if' (adapté à ' if') → logprob: -3.548752784729004
    4. ' 
' → logprob: -4.798752784729004
    5. '
' → logprob: -5.048752784729004
    6. '   ' → logprob: -5.173752784729004
    7. '    ' → logprob: -5.298752784729004
    8. ' ' → logprob: -5.798752784729004
    9. '        
' → logprob: -7.423752784729004
    10. '           ' → logprob: -7.923752784729004

Token 371: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01604551263153553
    2. ' c' → logprob: -4.141045570373535
    3. ' not' → logprob: -12.266045570373535
    4. ' ' → logprob: -12.766045570373535
    5. '   ' → logprob: -13.641045570373535
    6. 'not' → logprob: -13.766045570373535
    7. '	c' → logprob: -14.141045570373535
    8. '(c' → logprob: -16.01604461669922
    9. '     ' → logprob: -16.14104461669922
    10. '  ' → logprob: -16.51604461669922

Token 372: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06318509578704834
    2. '!='' → logprob: -3.438185214996338
    3. ' !=' → logprob: -3.813185214996338
    4. '==' → logprob: -5.313185214996338
    5. ' not' → logprob: -7.063185214996338
    6. 'not' → logprob: -7.188185214996338
    7. '=' → logprob: -8.31318473815918
    8. '=='' → logprob: -9.06318473815918
    9. '!' → logprob: -10.06318473815918
    10. ' ==' → logprob: -10.93818473815918

Token 373: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6327546834945679
    2. ''.' → logprob: -0.7577546834945679
    3. ' '.'' → logprob: -10.0077543258667
    4. ' '' → logprob: -10.0077543258667
    5. ' '.' → logprob: -11.0077543258667
    6. '.' → logprob: -11.1327543258667
    7. ''o' → logprob: -12.5077543258667
    8. '"' → logprob: -12.6327543258667
    9. '':' → logprob: -12.6327543258667
    10. ''a' → logprob: -13.1327543258667

Token 374: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1323581486940384
    2. ' and' → logprob: -2.1323580741882324
    3. 'and' → logprob: -6.132358074188232
    4. ' '' → logprob: -6.382358074188232
    5. '':
' → logprob: -6.632358074188232
    6. '':' → logprob: -9.13235855102539
    7. ':
' → logprob: -10.00735855102539
    8. ''s' → logprob: -10.13235855102539
    9. ':' → logprob: -11.25735855102539
    10. '"' → logprob: -12.25735855102539

Token 375: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6391775608062744
    2. '           ' → logprob: -1.2641775608062744
    3. ' if' → logprob: -1.7641775608062744
    4. 'and' → logprob: -4.889177322387695
    5. '       ' → logprob: -5.014177322387695
    6. 'if' → logprob: -5.514177322387695
    7. ':' → logprob: -9.264177322387695
    8. ':
' → logprob: -10.389177322387695
    9. ' ' → logprob: -10.639177322387695
    10. '	       ' → logprob: -11.014177322387695

Token 376: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38729989528656006
    2. 'if' (adapté à ' if') → logprob: -1.13729989528656
    3. '           ' → logprob: -8.012299537658691
    4. 'start' → logprob: -10.012299537658691
    5. '
' → logprob: -10.762299537658691
    6. ' start' → logprob: -10.887299537658691
    7. '               ' → logprob: -11.762299537658691
    8. '       ' → logprob: -13.387299537658691
    9. 'If' → logprob: -13.512299537658691
    10. '   ' → logprob: -14.887299537658691

Token 377: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03804149478673935
    2. ' start' → logprob: -3.288041591644287
    3. '           ' → logprob: -17.288042068481445
    4. '	start' → logprob: -18.663042068481445
    5. '[start' → logprob: -20.913042068481445
    6. ':start' → logprob: -21.038042068481445
    7. ' ' → logprob: -21.413042068481445
    8. '               ' → logprob: -21.413042068481445
    9. '   ' → logprob: -21.538042068481445
    10. 'Start' → logprob: -21.538042068481445

Token 378: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.20141734182834625
    2. ' is' → logprob: -1.701417326927185
    3. '==' → logprob: -12.951416969299316
    4. ')' → logprob: -14.576416969299316
    5. '	is' → logprob: -14.701416969299316
    6. 'Is' → logprob: -15.576416969299316
    7. 'i' → logprob: -15.951416969299316
    8. '[' → logprob: -16.076417922973633
    9. ')is' → logprob: -16.451417922973633
    10. '=' → logprob: -16.451417922973633

Token 379: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.686778503237292e-05
    2. ' None' → logprob: -9.250097274780273
    3. '_None' → logprob: -15.000097274780273
    4. '=None' → logprob: -16.250097274780273
    5. 'N' → logprob: -16.500097274780273
    6. '(None' → logprob: -16.875097274780273
    7. 'none' → logprob: -17.625097274780273
    8. '_none' → logprob: -18.750097274780273
    9. ' ' → logprob: -18.750097274780273
    10. '0' → logprob: -18.875097274780273

Token 380: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12713021039962769
    2. ':' → logprob: -2.1271302700042725
    3. ':start' → logprob: -9.502130508422852
    4. '=' → logprob: -9.627130508422852
    5. '               ' → logprob: -10.502130508422852
    6. '):
' → logprob: -11.252130508422852
    7. '           ' → logprob: -11.877130508422852
    8. '=start' → logprob: -12.752130508422852
    9. 'start' → logprob: -13.127130508422852
    10. ':

' → logprob: -13.252130508422852

Token 381: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05422339215874672
    2. 'start' → logprob: -3.0542232990264893
    3. ' start' → logprob: -5.554223537445068
    4. '           ' → logprob: -6.429223537445068
    5. '[start' → logprob: -9.80422306060791
    6. ',start' → logprob: -10.80422306060791
    7. '<|end|>' → logprob: -11.67922306060791
    8. ':start' → logprob: -11.92922306060791
    9. '=start' → logprob: -12.05422306060791
    10. '                   ' → logprob: -12.17922306060791

Token 382: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00671809446066618
    2. ' i' → logprob: -5.006718158721924
    3. 'start' (adapté à ' start') → logprob: -13.131717681884766
    4. '               ' → logprob: -14.381717681884766
    5. '                   ' → logprob: -16.506717681884766
    6. '           ' → logprob: -17.006717681884766
    7. '0' → logprob: -17.381717681884766
    8. ' start' → logprob: -17.756717681884766
    9. '	i' → logprob: -18.881717681884766
    10. '
' → logprob: -19.131717681884766

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009115827269852161
    2. ' =' → logprob: -7.000911712646484
    3. '=
' → logprob: -17.625911712646484
    4. '=start' → logprob: -18.625911712646484
    5. '=i' → logprob: -18.750911712646484
    6. '=

' → logprob: -19.875911712646484
    7. '＝' → logprob: -20.000911712646484
    8. '=int' → logprob: -20.625911712646484
    9. '=}' → logprob: -20.750911712646484
    10. '=end' → logprob: -21.625911712646484

Token 384: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. '
' → logprob: -20.000036239624023
    4. '	i' → logprob: -21.500036239624023
    5. '           ' → logprob: -21.875036239624023
    6. '   ' → logprob: -22.875036239624023
    7. ' ' → logprob: -23.125036239624023
    8. '                   ' → logprob: -23.875036239624023
    9. '               ' → logprob: -24.000036239624023
    10. '0' → logprob: -24.125036239624023

Token 385: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10671254992485046
    2. '<|end|>' → logprob: -2.731712579727173
    3. '
' → logprob: -3.606712579727173
    4. '<|end|>' → logprob: -5.231712341308594
    5. 'elif' → logprob: -6.981712341308594
    6. ')' → logprob: -6.981712341308594
    7. ';' → logprob: -7.356712341308594
    8. ':' → logprob: -8.606712341308594
    9. ',' → logprob: -8.856712341308594
    10. ' elif' → logprob: -8.981712341308594

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8325677703833207e-05
    2. 'elif' → logprob: -11.250028610229492
    3. '           ' → logprob: -12.125028610229492
    4. ' elif' → logprob: -12.750028610229492
    5. '<|end|>' → logprob: -13.000028610229492
    6. ')' → logprob: -13.125028610229492
    7. ',' → logprob: -14.125028610229492
    8. '
' → logprob: -14.750028610229492
    9. '   ' → logprob: -15.250028610229492
    10. '.' → logprob: -15.250028610229492

Token 387: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022534050047397614
    2. 'elif' → logprob: -4.022533893585205
    3. ' elif' → logprob: -5.522533893585205
    4. 'else' (adapté à ' else') → logprob: -8.772534370422363
    5. '   ' → logprob: -8.897534370422363
    6. ' else' → logprob: -10.022534370422363
    7. '	elif' → logprob: -10.647534370422363
    8. '
' → logprob: -11.397534370422363
    9. '     ' → logprob: -13.022534370422363
    10. '           ' → logprob: -13.522534370422363

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14306122064590454
    2. ':
' → logprob: -2.0180611610412598
    3. '       ' → logprob: -8.518061637878418
    4. '           ' → logprob: -9.018061637878418
    5. ',' → logprob: -11.143061637878418
    6. '<|end|>' → logprob: -11.393061637878418
    7. ' if' → logprob: -11.768061637878418
    8. '):
' → logprob: -12.143061637878418
    9. 'if' → logprob: -12.268061637878418
    10. ' :' → logprob: -12.768061637878418

Token 389: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26820603013038635
    2. '           ' → logprob: -1.643206000328064
    3. 'if' → logprob: -3.2682061195373535
    4. ' if' → logprob: -5.6432061195373535
    5. '   ' → logprob: -8.268205642700195
    6. '```' → logprob: -12.643205642700195
    7. '	if' → logprob: -12.893205642700195
    8. ' ' → logprob: -13.143205642700195
    9. 'If' → logprob: -13.143205642700195
    10. '               ' → logprob: -13.393205642700195

Token 390: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07792537659406662
    2. '           ' → logprob: -3.077925443649292
    3. ' if' → logprob: -3.577925443649292
    4. '       ' → logprob: -6.952925205230713
    5. '   ' → logprob: -10.952925682067871
    6. ' ' → logprob: -13.202925682067871
    7. '	if' → logprob: -13.202925682067871
    8. '               ' → logprob: -15.202925682067871
    9. 'If' → logprob: -15.202925682067871
    10. '	       ' → logprob: -15.827925682067871

Token 391: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002475777640938759
    2. ' start' → logprob: -6.002475738525391
    3. '           ' → logprob: -17.25247573852539
    4. '   ' → logprob: -17.37747573852539
    5. ' ' → logprob: -19.12747573852539
    6. '               ' → logprob: -19.12747573852539
    7. '       ' → logprob: -20.12747573852539
    8. '	start' → logprob: -20.12747573852539
    9. '         ' → logprob: -20.37747573852539
    10. '
' → logprob: -20.37747573852539

Token 392: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.016036950051784515
    2. 'is' → logprob: -4.1410369873046875
    3. '	is' → logprob: -14.141036987304688
    4. '<|end|>' → logprob: -14.516036987304688
    5. '!=' → logprob: -15.016036987304688
    6. ')' → logprob: -15.391036987304688
    7. ' ' → logprob: -15.641036987304688
    8. ')is' → logprob: -16.016036987304688
    9. ' not' → logprob: -16.266036987304688
    10. '<|end|>' → logprob: -16.266036987304688

Token 393: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0059355515986680984
    2. ' not' → logprob: -5.1309356689453125
    3. 'None' → logprob: -13.255935668945312
    4. '	not' → logprob: -13.255935668945312
    5. 'Not' → logprob: -13.880935668945312
    6. '!' → logprob: -14.380935668945312
    7. '0' → logprob: -14.505935668945312
    8. '
' → logprob: -15.005935668945312
    9. '   ' → logprob: -15.380935668945312
    10. '       ' → logprob: -16.130935668945312

Token 394: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018183303996920586
    2. 'not' → logprob: -4.01818323135376
    3. ' None' → logprob: -10.643183708190918
    4. 'none' → logprob: -11.893183708190918
    5. ' not' → logprob: -14.018183708190918
    6. '0' → logprob: -14.643183708190918
    7. '
' → logprob: -14.893183708190918
    8. '=None' → logprob: -15.518183708190918
    9. '   ' → logprob: -15.643183708190918
    10. 'i' → logprob: -15.893183708190918

Token 395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007651942316442728
    2. ':
' → logprob: -5.1326518058776855
    3. '           ' → logprob: -7.2576518058776855
    4. '               ' → logprob: -7.5076518058776855
    5. '):' → logprob: -9.007652282714844
    6. '       ' → logprob: -9.257652282714844
    7. ',' → logprob: -9.632652282714844
    8. ')' → logprob: -10.007652282714844
    9. '):
' → logprob: -10.007652282714844
    10. '=' → logprob: -10.382652282714844

Token 396: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0761364996433258
    2. '               ' → logprob: -2.951136589050293
    3. 'cells' → logprob: -4.326136589050293
    4. ' cells' → logprob: -5.076136589050293
    5. '       ' → logprob: -6.951136589050293
    6. 'tokens' → logprob: -7.701136589050293
    7. '```' → logprob: -9.951136589050293
    8. '   ' → logprob: -10.701136589050293
    9. ' tokens' → logprob: -11.326136589050293
    10. '_cells' → logprob: -11.576136589050293

Token 397: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.25402751564979553
    2. ' cells' → logprob: -2.3790276050567627
    3. '           ' → logprob: -2.6290276050567627
    4. '       ' → logprob: -3.5040276050567627
    5. '               ' → logprob: -3.6290276050567627
    6. 'end' → logprob: -6.504027366638184
    7. '   ' → logprob: -7.004027366638184
    8. 'cell' → logprob: -8.129027366638184
    9. 'line' → logprob: -9.504027366638184
    10. 'c' → logprob: -10.004027366638184

Token 398: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.417976379045285e-05
    2. '.' → logprob: -10.125043869018555
    3. 'append' → logprob: -13.000043869018555
    4. '.app' → logprob: -14.125043869018555
    5. '.extend' → logprob: -14.625043869018555
    6. '=' → logprob: -15.125043869018555
    7. '.ap' → logprob: -16.125043869018555
    8. '.Append' → logprob: -16.250043869018555
    9. 'Append' → logprob: -16.500043869018555
    10. '_append' → logprob: -16.875043869018555

Token 399: '((' (ID: 2054)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.4761933386325836
    2. 'line' → logprob: -0.9761933088302612
    3. ' line' → logprob: -6.601193428039551
    4. '(' → logprob: -7.476193428039551
    5. '(i' → logprob: -8.97619342803955
    6. '((' → logprob: -10.60119342803955
    7. ' (' → logprob: -10.85119342803955
    8. '(start' → logprob: -12.10119342803955
    9. '(
' → logprob: -13.35119342803955
    10. '[line' → logprob: -13.35119342803955

Token 400: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.000158842682139948
    2. ' start' → logprob: -8.75015926361084
    3. '(start' → logprob: -15.37515926361084
    4. '   ' → logprob: -17.000158309936523
    5. '[start' → logprob: -17.000158309936523
    6. '
' → logprob: -18.000158309936523
    7. ')' → logprob: -18.250158309936523
    8. '               ' → logprob: -18.500158309936523
    9. 'line' → logprob: -18.625158309936523
    10. ' ' → logprob: -18.625158309936523

Token 401: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020827043801546097
    2. ',i' → logprob: -4.145826816558838
    3. ' ,' → logprob: -5.395826816558838
    4. ',start' → logprob: -8.645827293395996
    5. ',end' → logprob: -10.770827293395996
    6. ',
' → logprob: -10.895827293395996
    7. ',c' → logprob: -11.020827293395996
    8. ',s' → logprob: -13.270827293395996
    9. ',n' → logprob: -13.270827293395996
    10. ',index' → logprob: -13.645827293395996

Token 402: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005652636755257845
    2. '))
' → logprob: -5.38065242767334
    3. ' ))' → logprob: -7.00565242767334
    4. '-' → logprob: -9.75565242767334
    5. ' ))
' → logprob: -10.88065242767334
    6. ')' → logprob: -11.00565242767334
    7. ' -' → logprob: -11.50565242767334
    8. ',' → logprob: -11.88065242767334
    9. ',start' → logprob: -12.00565242767334
    10. ',None' → logprob: -13.50565242767334

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6457742175552994e-05
    2. ' ' → logprob: -10.375056266784668
    3. 'start' → logprob: -10.750056266784668
    4. ')' → logprob: -13.125056266784668
    5. '))' → logprob: -13.875056266784668
    6. '
' → logprob: -15.375056266784668
    7. '```' → logprob: -16.250057220458984
    8. ',' → logprob: -16.750057220458984
    9. '   ' → logprob: -16.875057220458984
    10. '[start' → logprob: -17.125057220458984

Token 404: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023035230115056038
    2. '))
' → logprob: -4.273035049438477
    3. ')' → logprob: -4.773035049438477
    4. ' ))' → logprob: -8.148035049438477
    5. ',' → logprob: -10.148035049438477
    6. ' ))
' → logprob: -11.148035049438477
    7. ')
' → logprob: -11.648035049438477
    8. ' )' → logprob: -11.898035049438477
    9. ',))
' → logprob: -12.398035049438477
    10. '+' → logprob: -12.773035049438477

Token 405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.8126592193730175e-05
    2. '           ' → logprob: -10.0000581741333
    3. '       ' → logprob: -12.3750581741333
    4. '                
' → logprob: -13.2500581741333
    5. 'start' → logprob: -13.5000581741333
    6. '              ' → logprob: -13.6250581741333
    7. '                   ' → logprob: -13.6250581741333
    8. '                ' → logprob: -13.8750581741333
    9. '```' → logprob: -13.8750581741333
    10. '   ' → logprob: -15.2500581741333

Token 406: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.12731316685676575
    2. ' start' → logprob: -2.1273131370544434
    3. '               ' → logprob: -7.877313137054443
    4. '           ' → logprob: -12.752313613891602
    5. '[start' → logprob: -14.252313613891602
    6. '   ' → logprob: -14.502313613891602
    7. '	start' → logprob: -14.627313613891602
    8. '       ' → logprob: -14.627313613891602
    9. '                   ' → logprob: -15.252313613891602
    10. ' ' → logprob: -15.752313613891602

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003502434410620481
    2. ' =' → logprob: -8.000349998474121
    3. '=None' → logprob: -11.125349998474121
    4. 'None' → logprob: -17.875350952148438
    5. ' None' → logprob: -18.125350952148438
    6. '＝' → logprob: -18.750350952148438
    7. ' is' → logprob: -19.000350952148438
    8. '=
' → logprob: -19.500350952148438
    9. '=}' → logprob: -19.500350952148438
    10. '<|end|>' → logprob: -20.000350952148438

Token 408: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.339278580620885e-06
    2. ' None' → logprob: -13.000001907348633
    3. 'none' → logprob: -20.625001907348633
    4. '=None' → logprob: -21.250001907348633
    5. '_None' → logprob: -23.125001907348633
    6. '(None' → logprob: -23.875001907348633
    7. '   ' → logprob: -24.125001907348633
    8. ',None' → logprob: -24.500001907348633
    9. '_none' → logprob: -25.750001907348633
    10. '
' → logprob: -26.000001907348633

Token 409: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008199920994229615
    2. '    
' → logprob: -7.250820159912109
    3. '
' → logprob: -9.50082015991211
    4. '       ' → logprob: -11.25082015991211
    5. '  
' → logprob: -12.62582015991211
    6. '.' → logprob: -12.62582015991211
    7. '        
' → logprob: -13.37582015991211
    8. '\n' → logprob: -13.50082015991211
    9. ',' → logprob: -13.62582015991211
    10. ' 
' → logprob: -13.62582015991211

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.232493564719334e-05
    2. '
' → logprob: -10.375082015991211
    3. 'if' → logprob: -10.375082015991211
    4. '.' → logprob: -12.125082015991211
    5. '       ' → logprob: -12.875082015991211
    6. ')' → logprob: -12.875082015991211
    7. '```' → logprob: -13.250082015991211
    8. 'elif' → logprob: -13.375082015991211
    9. '    
' → logprob: -13.625082015991211
    10. ' if' → logprob: -14.250082015991211

Token 411: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2317211627960205
    2. 'if' (adapté à ' if') → logprob: -1.6067211627960205
    3. ' if' → logprob: -5.481720924377441
    4. '
' → logprob: -6.606720924377441
    5. '```' → logprob: -7.731720924377441
    6. 'for' → logprob: -9.356720924377441
    7. ')' → logprob: -9.856720924377441
    8. '.' → logprob: -10.356720924377441
    9. ' ' → logprob: -10.606720924377441
    10. '[' → logprob: -11.106720924377441

Token 412: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20141343772411346
    2. ' start' → logprob: -1.7014133930206299
    3. '(start' → logprob: -17.076414108276367
    4. ' ' → logprob: -17.201414108276367
    5. '	start' → logprob: -17.576414108276367
    6. 'Start' → logprob: -17.826414108276367
    7. '[start' → logprob: -18.076414108276367
    8. 'not' → logprob: -18.576414108276367
    9. 'star' → logprob: -18.701414108276367
    10. '   ' → logprob: -19.076414108276367

Token 413: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0619698166847229
    2. 'is' → logprob: -2.811969757080078
    3. '	is' → logprob: -13.561969757080078
    4. ')' → logprob: -15.061969757080078
    5. ')is' → logprob: -15.686969757080078
    6. '=' → logprob: -15.936969757080078
    7. '!=' → logprob: -16.561969757080078
    8. ' ' → logprob: -16.936969757080078
    9. '=is' → logprob: -17.186969757080078
    10. '!==' → logprob: -18.186969757080078

Token 414: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.004092766437679529
    2. ' not' → logprob: -5.504092693328857
    3. '0' → logprob: -12.004093170166016
    4. 'None' → logprob: -12.129093170166016
    5. 'Not' → logprob: -13.504093170166016
    6. '   ' → logprob: -14.504093170166016
    7. ' ' → logprob: -14.879093170166016
    8. '!' → logprob: -15.879093170166016
    9. 'i' → logprob: -16.129093170166016
    10. '	not' → logprob: -16.254093170166016

Token 415: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0077011496759951115
    2. ' None' → logprob: -4.8827009201049805
    3. 'not' → logprob: -10.13270092010498
    4. '0' → logprob: -10.63270092010498
    5. '(None' → logprob: -11.13270092010498
    6. '_None' → logprob: -12.00770092010498
    7. ' ' → logprob: -12.50770092010498
    8. 'i' → logprob: -13.25770092010498
    9. 'none' → logprob: -13.75770092010498
    10. '...' → logprob: -14.00770092010498

Token 416: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31978365778923035
    2. ':' → logprob: -1.3197836875915527
    3. '       ' → logprob: -5.194783687591553
    4. '   ' → logprob: -7.694783687591553
    5. '):
' → logprob: -8.069783210754395
    6. '           ' → logprob: -10.069783210754395
    7. ' :
' → logprob: -10.444783210754395
    8. '               ' → logprob: -10.569783210754395
    9. '):' → logprob: -10.694783210754395
    10. ':
' → logprob: -11.194783210754395

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1927739530801773
    2. 'cells' → logprob: -1.9427739381790161
    3. ' cells' → logprob: -3.4427740573883057
    4. '   ' → logprob: -10.317773818969727
    5. '           ' → logprob: -11.942773818969727
    6. '.cells' → logprob: -12.067773818969727
    7. '_cells' → logprob: -13.067773818969727
    8. '      ' → logprob: -14.192773818969727
    9. '               ' → logprob: -14.567773818969727
    10. '     ' → logprob: -14.942773818969727

Token 418: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.5038458108901978
    2. '       ' → logprob: -1.5038458108901978
    3. ' cells' → logprob: -1.7538458108901978
    4. '   ' → logprob: -8.003846168518066
    5. '           ' → logprob: -9.628846168518066
    6. '.cells' → logprob: -12.253846168518066
    7. '_cells' → logprob: -12.878846168518066
    8. '               ' → logprob: -13.003846168518066
    9. '      ' → logprob: -13.003846168518066
    10. '     ' → logprob: -13.503846168518066

Token 419: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00048775310278870165
    2. '.' → logprob: -8.000487327575684
    3. 'append' → logprob: -8.875487327575684
    4. ' .' → logprob: -11.625487327575684
    5. 'Append' → logprob: -13.750487327575684
    6. ').' → logprob: -14.250487327575684
    7. '.app' → logprob: -14.750487327575684
    8. ' append' → logprob: -14.875487327575684
    9. '.Append' → logprob: -15.000487327575684
    10. 'app' → logprob: -15.500487327575684

Token 420: '((' (ID: 2054)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.039059124886989594
    2. '((' → logprob: -3.2890591621398926
    3. '(' → logprob: -6.914059162139893
    4. ' (' → logprob: -11.164058685302734
    5. '(end' → logprob: -12.789058685302734
    6. '(len' → logprob: -13.164058685302734
    7. '   ' → logprob: -13.164058685302734
    8. '(Start' → logprob: -13.664058685302734
    9. '(None' → logprob: -14.914058685302734
    10. '(last' → logprob: -15.539058685302734

Token 421: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.8624639324116288e-06
    2. ' start' → logprob: -13.250001907348633
    3. '0' → logprob: -19.375001907348633
    4. '(start' → logprob: -20.375001907348633
    5. ' ' → logprob: -21.125001907348633
    6. '[start' → logprob: -21.125001907348633
    7. '	start' → logprob: -22.000001907348633
    8. '   ' → logprob: -22.625001907348633
    9. 'star' → logprob: -22.625001907348633
    10. ')' → logprob: -22.625001907348633

Token 422: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.0009158630855381489
    2. ',' → logprob: -7.000916004180908
    3. ' ,' → logprob: -13.00091552734375
    4. ',line' → logprob: -13.50091552734375
    5. ',start' → logprob: -14.87591552734375
    6. 'len' → logprob: -15.25091552734375
    7. ',
' → logprob: -16.87591552734375
    8. ',end' → logprob: -17.25091552734375
    9. ',i' → logprob: -17.25091552734375
    10. ',last' → logprob: -17.50091552734375

Token 423: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.841743303695694e-05
    2. 'line' → logprob: -9.25009822845459
    3. ' line' → logprob: -13.75009822845459
    4. '[line' → logprob: -14.37509822845459
    5. ')' → logprob: -15.50009822845459
    6. '=line' → logprob: -15.87509822845459
    7. '	line' → logprob: -16.000099182128906
    8. ',line' → logprob: -16.750099182128906
    9. '(start' → logprob: -17.000099182128906
    10. '(' → logprob: -17.125099182128906

Token 424: ')-' (ID: 14080)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.07053739577531815
    2. '-' → logprob: -3.0705373287200928
    3. ')' → logprob: -4.695537567138672
    4. ')-' → logprob: -5.195537567138672
    5. 'line' → logprob: -5.320537567138672
    6. '))' → logprob: -6.695537567138672
    7. ' line' → logprob: -7.945537567138672
    8. '[line' → logprob: -8.195537567138672
    9. ' -' → logprob: -8.820537567138672
    10. '	line' → logprob: -10.195537567138672

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.743758760625497e-05
    2. ' ' → logprob: -9.500077247619629
    3. ')' → logprob: -13.250077247619629
    4. '
' → logprob: -15.750077247619629
    5. '0' → logprob: -15.875077247619629
    6. '))' → logprob: -16.250078201293945
    7. '```' → logprob: -16.875078201293945
    8. 'start' → logprob: -17.000078201293945
    9. '   ' → logprob: -17.875078201293945
    10. 'len' → logprob: -18.000078201293945

Token 426: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47414007782936096
    2. ')' → logprob: -0.9741400480270386
    3. '))
' → logprob: -10.349140167236328
    4. ')
' → logprob: -10.599140167236328
    5. ' ))' → logprob: -12.974140167236328
    6. ' )' → logprob: -13.474140167236328
    7. ')))' → logprob: -13.724140167236328
    8. '   ' → logprob: -14.224140167236328
    9. ')}' → logprob: -15.349140167236328
    10. '),' → logprob: -16.724140167236328

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030185774085111916
    2. 'return' → logprob: -8.2503023147583
    3. ' return' → logprob: -10.5003023147583
    4. '	return' → logprob: -12.1253023147583
    5. '
' → logprob: -12.3753023147583
    6. 'def' → logprob: -13.1253023147583
    7. '```' → logprob: -14.3753023147583
    8. '    
' → logprob: -15.0003023147583
    9. '       ' → logprob: -15.7503023147583
    10. '[' → logprob: -16.500301361083984

Token 428: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036045825108885765
    2. ' return' → logprob: -6.378604412078857
    3. 'return' (adapté à ' return') → logprob: -6.628604412078857
    4. '	return' → logprob: -7.878604412078857
    5. '
' → logprob: -9.378604888916016
    6. '    
' → logprob: -10.128604888916016
    7. 'def' → logprob: -11.003604888916016
    8. '<|end|>' → logprob: -11.253604888916016
    9. ' ' → logprob: -11.878604888916016
    10. ')' → logprob: -12.128604888916016

Token 429: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.00015872348740231246
    2. ' cells' → logprob: -8.750158309936523
    3. '[c' → logprob: -15.750158309936523
    4. '[(' → logprob: -16.625158309936523
    5. 'cell' → logprob: -17.375158309936523
    6. '.cells' → logprob: -17.625158309936523
    7. '[start' → logprob: -18.125158309936523
    8. '[' → logprob: -18.375158309936523
    9. '[cell' → logprob: -18.500158309936523
    10. '_cells' → logprob: -18.625158309936523

Token 430: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003305784775875509
    2. 'class' → logprob: -8.875330924987793
    3. '
' → logprob: -9.750330924987793
    4. '```' → logprob: -10.000330924987793
    5. '#' → logprob: -10.625330924987793
    6. '<|end|>' → logprob: -11.250330924987793
    7. '\' → logprob: -11.625330924987793
    8. ' def' → logprob: -11.750330924987793
    9. 'import' → logprob: -12.500330924987793
    10. '(' → logprob: -13.000330924987793

Token 432: ' find' (ID: 1646)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.7663466930389404
    2. 'parse' → logprob: -1.5163466930389404
    3. ' main' → logprob: -2.1413466930389404
    4. ' read' → logprob: -3.6413466930389404
    5. ' combine' → logprob: -3.7663466930389404
    6. ' process' → logprob: -3.7663466930389404
    7. 'read' → logprob: -4.0163469314575195
    8. ' solve' → logprob: -4.0163469314575195
    9. 'main' → logprob: -4.3913469314575195
    10. 'combine' → logprob: -4.3913469314575195

Token 433: '_v' (ID: 5390)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.10417510569095612
    2. '_cell' → logprob: -2.604175090789795
    3. '_pattern' → logprob: -4.729175090789795
    4. '_next' → logprob: -4.854175090789795
    5. '_' → logprob: -6.729175090789795
    6. '_bound' → logprob: -6.979175090789795
    7. '_matches' → logprob: -7.104175090789795
    8. '_all' → logprob: -7.354175090789795
    9. '_sub' → logprob: -7.479175090789795
    10. '_bounds' → logprob: -7.854175090789795

Token 434: 'inc' (ID: 2768)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.0030972622334957123
    2. '_cells' → logprob: -6.378097057342529
    3. 'erts' → logprob: -7.378097057342529
    4. 'cells' → logprob: -7.878097057342529
    5. 'er' → logprob: -8.878097534179688
    6. '_' → logprob: -10.128097534179688
    7. 'owels' → logprob: -10.253097534179688
    8. 'alue' → logprob: -10.628097534179688
    9. 'erc' → logprob: -11.003097534179688
    10. 'erti' → logprob: -11.878097534179688

Token 435: 'ulum' (ID: 40868)
  Prédit: 'inity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inity' → logprob: -1.6578409671783447
    2. 'e' → logprob: -1.9078409671783447
    3. 'ular' → logprob: -2.6578409671783447
    4. 'k' → logprob: -2.6578409671783447
    5. 'kle' → logprob: -2.7828409671783447
    6. 'ker' → logprob: -2.7828409671783447
    7. 'ula' → logprob: -3.0328409671783447
    8. 'tor' → logprob: -3.2828409671783447
    9. 'hes' → logprob: -3.2828409671783447
    10. 'ent' → logprob: -3.5328409671783447

Token 436: '(lines' (ID: 73839)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7962650060653687
    2. '(line' → logprob: -0.7962650060653687
    3. '_positions' → logprob: -3.796265125274658
    4. '(lines' → logprob: -3.921265125274658
    5. '_cells' → logprob: -3.921265125274658
    6. '(start' → logprob: -5.046265125274658
    7. '_' → logprob: -5.546265125274658
    8. '(s' → logprob: -5.921265125274658
    9. '(cell' → logprob: -5.921265125274658
    10. '(row' → logprob: -6.046265125274658

Token 437: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23417143523693085
    2. '):' → logprob: -1.7341713905334473
    3. '(lines' → logprob: -3.6091713905334473
    4. '):
' → logprob: -5.984171390533447
    5. ',line' → logprob: -6.734171390533447
    6. '_lines' → logprob: -6.984171390533447
    7. '(line' → logprob: -8.859171867370605
    8. ' ,' → logprob: -9.609171867370605
    9. '   ' → logprob: -9.734171867370605
    10. ')' → logprob: -10.109171867370605

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030990466475486755
    2. ' for' → logprob: -5.878098964691162
    3. 'for' → logprob: -8.87809944152832
    4. ' lines' → logprob: -10.37809944152832
    5. 'def' → logprob: -10.87809944152832
    6. 'n' → logprob: -11.00309944152832
    7. ' n' → logprob: -11.00309944152832
    8. ' rows' → logprob: -11.12809944152832
    9. ' top' → logprob: -11.50309944152832
    10. ' def' → logprob: -11.87809944152832

Token 439: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14661666750907898
    2. ' for' → logprob: -2.2716166973114014
    3. '   ' → logprob: -3.6466166973114014
    4. 'n' → logprob: -5.521616458892822
    5. 'h' → logprob: -6.646616458892822
    6. 'height' → logprob: -7.771616458892822
    7. 'idx' → logprob: -7.896616458892822
    8. ' n' → logprob: -8.14661693572998
    9. 'line' → logprob: -9.14661693572998
    10. 'width' → logprob: -9.27161693572998

Token 440: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15259911119937897
    2. ' for' → logprob: -2.4025990962982178
    3. 'n' → logprob: -3.1525990962982178
    4. ' n' → logprob: -5.527599334716797
    5. 'def' → logprob: -6.652599334716797
    6. 'in' → logprob: -7.402599334716797
    7. 'h' → logprob: -7.652599334716797
    8. '#' → logprob: -8.277599334716797
    9. 'height' → logprob: -8.527599334716797
    10. ' in' → logprob: -8.527599334716797

Token 441: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17485696077346802
    2. 'idx' → logprob: -2.9248569011688232
    3. ' for' → logprob: -3.0498569011688232
    4. 'v' → logprob: -4.424857139587402
    5. ' vinc' → logprob: -4.674857139587402
    6. 'i' → logprob: -4.674857139587402
    7. 'index' → logprob: -5.049857139587402
    8. ' idx' → logprob: -5.424857139587402
    9. 'line' → logprob: -5.674857139587402
    10. 'len' → logprob: -5.924857139587402

Token 442: ' line' (ID: 2543)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5802745223045349
    2. 'v' → logprob: -1.7052745819091797
    3. ' for' → logprob: -2.0802745819091797
    4. ' vinc' → logprob: -2.4552745819091797
    5. 'line' → logprob: -4.33027458190918
    6. ' line' → logprob: -5.20527458190918
    7. 'i' → logprob: -5.33027458190918
    8. 'n' → logprob: -5.33027458190918
    9. 'idx' → logprob: -5.58027458190918
    10. '   ' → logprob: -5.70527458190918

Token 443: ' with' (ID: 483)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.030106782913208
    2. 'for' → logprob: -1.530106782913208
    3. 'that' → logprob: -2.155106782913208
    4. 'idx' → logprob: -2.655106782913208
    5. 'with' → logprob: -3.030106782913208
    6. 'index' → logprob: -3.155106782913208
    7. ' that' → logprob: -3.655106782913208
    8. ' in' → logprob: -3.655106782913208
    9. '   ' → logprob: -3.905106782913208
    10. '=' → logprob: -4.030106544494629

Token 444: ' >=' (ID: 5064)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.20311009883880615
    2. ''-' → logprob: -2.4531102180480957
    3. 'set' → logprob: -2.7031102180480957
    4. ''' → logprob: -4.203110218048096
    5. ''all' → logprob: -5.203110218048096
    6. ' all' → logprob: -5.578110218048096
    7. 'a' → logprob: -5.828110218048096
    8. ''*' → logprob: -7.328110218048096
    9. 'len' → logprob: -7.453110218048096
    10. ''^' → logprob: -7.578110218048096

Token 445: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5676273703575134
    2. '1' → logprob: -1.6926274299621582
    3. '2' → logprob: -1.6926274299621582
    4. '5' → logprob: -3.692627429962158
    5. '4' → logprob: -3.817627429962158
    6. ' ' → logprob: -4.817627429962158
    7. '6' → logprob: -5.567627429962158
    8. '7' → logprob: -5.942627429962158
    9. 'len' → logprob: -6.442627429962158
    10. '10' → logprob: -7.192627429962158

Token 446: ' consecutive' (ID: 40840)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.10452810674905777
    2. ''' → logprob: -2.4795281887054443
    3. ''*' → logprob: -5.729527950286865
    4. ' '-'' → logprob: -6.229527950286865
    5. '('-' → logprob: -6.354527950286865
    6. 'len' → logprob: -6.604527950286865
    7. ''^' → logprob: -6.854527950286865
    8. 'for' → logprob: -7.229527950286865
    9. ' ' → logprob: -7.354527950286865
    10. '('='' → logprob: -7.354527950286865

Token 447: ' hy' (ID: 7537)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00800405815243721
    2. ''' → logprob: -5.383004188537598
    3. '-' → logprob: -5.758004188537598
    4. ' '-'' → logprob: -10.008004188537598
    5. '"-' → logprob: -10.258004188537598
    6. ''*' → logprob: -10.508004188537598
    7. ''^' → logprob: -10.758004188537598
    8. '`' → logprob: -11.008004188537598
    9. ''_' → logprob: -11.133004188537598
    10. 'd' → logprob: -12.008004188537598

Token 448: 'ph' (ID: 961)
  Prédit: 'ph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.0008882334805093706
    2. 'phen' → logprob: -7.500888347625732
    3. 'p' → logprob: -8.875887870788574
    4. '-' → logprob: -9.250887870788574
    5. 'n' → logprob: -9.750887870788574
    6. '-
' → logprob: -11.125887870788574
    7. '   ' → logprob: -12.125887870788574
    8. '
' → logprob: -12.375887870788574
    9. '-ph' → logprob: -12.500887870788574
    10. '```' → logprob: -12.750887870788574

Token 449: 'ens' (ID: 696)
  Prédit: 'ens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ens' → logprob: -0.02000405639410019
    2. 'en' → logprob: -4.0200042724609375
    3. '```' → logprob: -7.3950042724609375
    4. '   ' → logprob: -8.145004272460938
    5. '-' → logprob: -8.520004272460938
    6. 'n' → logprob: -8.895004272460938
    7. 'ph' → logprob: -9.145004272460938
    8. ''-' → logprob: -9.645004272460938
    9. 'ns' → logprob: -9.770004272460938
    10. ''' → logprob: -9.895004272460938

Token 450: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18818515539169312
    2. ' for' → logprob: -2.313185214996338
    3. 'for' → logprob: -3.063185214996338
    4. ':' → logprob: -4.688185214996338
    5. 'def' → logprob: -5.563185214996338
    6. '(' → logprob: -5.688185214996338
    7. '
' → logprob: -6.188185214996338
    8. '(lines' → logprob: -6.438185214996338
    9. '(line' → logprob: -6.438185214996338
    10. '```' → logprob: -6.813185214996338

Token 451: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07716144621372223
    2. 'for' → logprob: -2.9521615505218506
    3. ' for' → logprob: -3.8271615505218506
    4. 'def' → logprob: -8.45216178894043
    5. '```' → logprob: -10.45216178894043
    6. '
' → logprob: -11.70216178894043
    7. '    
' → logprob: -13.45216178894043
    8. 'n' → logprob: -13.57716178894043
    9. '``' → logprob: -13.82716178894043
    10. 'i' → logprob: -13.82716178894043

Token 452: ' line' (ID: 2543)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -1.0673316717147827
    2. 'next' → logprob: -1.5673316717147827
    3. 'index' → logprob: -2.3173317909240723
    4. '(lines' → logprob: -2.3173317909240723
    5. ' next' → logprob: -2.5673317909240723
    6. ' lines' → logprob: -3.0673317909240723
    7. 'len' → logprob: -3.1923317909240723
    8. 'None' → logprob: -3.4423317909240723
    9. 'line' → logprob: -4.442331790924072
    10. ' index' → logprob: -5.317331790924072

Token 453: ' index' (ID: 3472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4966495633125305
    2. 'None' → logprob: -1.3716495037078857
    3. ' for' → logprob: -3.1216495037078857
    4. '   ' → logprob: -3.3716495037078857
    5. '
' → logprob: -4.371649742126465
    6. 'def' → logprob: -4.371649742126465
    7. 'lines' → logprob: -5.496649742126465
    8. '```' → logprob: -5.746649742126465
    9. ':' → logprob: -5.871649742126465
    10. 's' → logprob: -5.996649742126465

Token 454: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0859426259994507
    2. 'for' → logprob: -1.0859426259994507
    3. '   ' → logprob: -1.9609426259994507
    4. 'def' → logprob: -2.3359427452087402
    5. '
' → logprob: -2.5859427452087402
    6. 'None' → logprob: -5.33594274520874
    7. '(' → logprob: -6.08594274520874
    8. ',' → logprob: -7.08594274520874
    9. ' and' → logprob: -7.46094274520874
    10. '(None' → logprob: -7.71094274520874

Token 455: ' start' (ID: 1604)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.8695414066314697
    2. 'start' → logprob: -1.3695414066314697
    3. 'length' → logprob: -1.8695414066314697
    4. '(lines' → logprob: -2.4945414066314697
    5. ' lines' → logprob: -3.1195414066314697
    6. 'line' → logprob: -5.244541168212891
    7. 'count' → logprob: -5.244541168212891
    8. ' start' → logprob: -5.369541168212891
    9. ' length' → logprob: -5.494541168212891
    10. 'len' → logprob: -5.619541168212891

Token 456: ',end' (ID: 93014)
  Prédit: ',end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.4811405837535858
    2. ',' → logprob: -0.9811406135559082
    3. ' ,' → logprob: -5.356140613555908
    4. ',index' → logprob: -7.231140613555908
    5. ',i' → logprob: -7.856140613555908
    6. '<|end|>' → logprob: -7.981140613555908
    7. 'index' → logprob: -8.73114013671875
    8. '<|end|>' → logprob: -8.85614013671875
    9. 'and' → logprob: -9.60614013671875
    10. ',start' → logprob: -9.85614013671875

Token 457: ' col' (ID: 996)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.2354578971862793
    2. ',' → logprob: -1.3604578971862793
    3. '(lines' → logprob: -1.7354578971862793
    4. '   ' → logprob: -1.9854578971862793
    5. '_,' → logprob: -3.6104578971862793
    6. 'def' → logprob: -4.110457897186279
    7. '(i' → logprob: -4.360457897186279
    8. 'for' → logprob: -4.485457897186279
    9. '(' → logprob: -4.735457897186279
    10. ' for' → logprob: -4.985457897186279

Token 458: ' inclusive' (ID: 29482)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.43231818079948425
    2. '(line' → logprob: -1.6823182106018066
    3. '   ' → logprob: -2.4323182106018066
    4. 'def' → logprob: -3.6823182106018066
    5. '(
' → logprob: -4.307318210601807
    6. '(s' → logprob: -5.057318210601807
    7. ',' → logprob: -5.182318210601807
    8. 's' → logprob: -5.307318210601807
    9. '
' → logprob: -5.307318210601807
    10. '(' → logprob: -5.557318210601807

Token 459: '
' (ID: 198)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.4182564616203308
    2. '(lines' → logprob: -2.0432565212249756
    3. 'def' → logprob: -2.1682565212249756
    4. '   ' → logprob: -2.9182565212249756
    5. '(' → logprob: -3.7932565212249756
    6. ':' → logprob: -4.5432562828063965
    7. ':
' → logprob: -6.0432562828063965
    8. '(
' → logprob: -6.1682562828063965
    9. '
' → logprob: -6.4182562828063965
    10. ',' → logprob: -6.6682562828063965

Token 460: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23009708523750305
    2. '   ' → logprob: -1.7300970554351807
    3. '```' → logprob: -4.23009729385376
    4. 'for' → logprob: -5.10509729385376
    5. '
' → logprob: -5.73009729385376
    6. ':' → logprob: -6.23009729385376
    7. ' for' → logprob: -6.73009729385376
    8. '(' → logprob: -7.60509729385376
    9. ':
' → logprob: -8.355096817016602
    10. '``' → logprob: -8.730096817016602

Token 461: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008519304916262627
    2. ' for' → logprob: -5.133519172668457
    3. '   ' → logprob: -6.258519172668457
    4. 'best' → logprob: -7.883519172668457
    5. 'start' → logprob: -8.758519172668457
    6. 'max' → logprob: -9.508519172668457
    7. 'def' → logprob: -10.133519172668457
    8. 'min' → logprob: -11.883519172668457
    9. 'v' → logprob: -12.508519172668457
    10. 'top' → logprob: -13.008519172668457

Token 462: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00795509573072195
    2. ' i' → logprob: -5.007955074310303
    3. 'idx' → logprob: -6.757955074310303
    4. ' idx' → logprob: -9.507955551147461
    5. 'index' → logprob: -12.882955551147461
    6. 'l' → logprob: -16.00795555114746
    7. 'li' → logprob: -16.00795555114746
    8. ' index' → logprob: -16.13295555114746
    9. '	i' → logprob: -17.25795555114746
    10. 'ind' → logprob: -17.25795555114746

Token 463: ',line' (ID: 171132)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3412436842918396
    2. ',line' → logprob: -1.3412437438964844
    3. 'in' → logprob: -4.091243743896484
    4. ' in' → logprob: -4.591243743896484
    5. ',in' → logprob: -8.216243743896484
    6. ',row' → logprob: -8.591243743896484
    7. ' ,' → logprob: -8.716243743896484
    8. ',l' → logprob: -10.091243743896484
    9. ',v' → logprob: -11.466243743896484
    10. ',value' → logprob: -11.591243743896484

Token 464: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045509327203035355
    2. 'in' → logprob: -3.5455093383789062
    3. ' in' → logprob: -4.920509338378906
    4. ',line' → logprob: -4.920509338378906
    5. ',in' → logprob: -7.545509338378906
    6. ' ,' → logprob: -7.920509338378906
    7. ',row' → logprob: -9.795509338378906
    8. ',index' → logprob: -10.295509338378906
    9. ',n' → logprob: -11.545509338378906
    10. ',v' → logprob: -11.545509338378906

Token 465: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.018516989424824715
    2. 'range' → logprob: -4.018517017364502
    3. ' enumerate' → logprob: -8.018516540527344
    4. '
' → logprob: -11.268516540527344
    5. ' range' → logprob: -11.643516540527344
    6. '   ' → logprob: -12.393516540527344
    7. '```' → logprob: -12.393516540527344
    8. ' ' → logprob: -12.518516540527344
    9. '  ' → logprob: -13.393516540527344
    10. ',' → logprob: -14.018516540527344

Token 466: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.014344490133225918
    2. 'lines' → logprob: -4.639344692230225
    3. ' lines' → logprob: -5.389344692230225
    4. ' (' → logprob: -12.139344215393066
    5. ')' → logprob: -12.639344215393066
    6. '	lines' → logprob: -13.014344215393066
    7. '(' → logprob: -15.014344215393066
    8. '
' → logprob: -15.014344215393066
    9. '(range' → logprob: -15.389344215393066
    10. ',' → logprob: -15.389344215393066

Token 467: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001761809689924121
    2. '):' → logprob: -6.6267619132995605
    3. '   ' → logprob: -8.751761436462402
    4. ':
' → logprob: -9.001761436462402
    5. '):
' → logprob: -9.251761436462402
    6. ':' → logprob: -10.501761436462402
    7. '():
' → logprob: -10.751761436462402
    8. '       ' → logprob: -12.501761436462402
    9. ',' → logprob: -13.001761436462402
    10. ''):
' → logprob: -13.751761436462402

Token 468: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16079725325107574
    2. '       ' → logprob: -1.9107972383499146
    3. ' for' → logprob: -7.910797119140625
    4. ' line' → logprob: -10.410797119140625
    5. ' length' → logprob: -10.410797119140625
    6. 'for' → logprob: -10.660797119140625
    7. 'n' → logprob: -11.035797119140625
    8. ' s' → logprob: -11.285797119140625
    9. ' if' → logprob: -11.535797119140625
    10. '```' → logprob: -11.660797119140625

Token 469: ' run' (ID: 2461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7383701205253601
    2. '   ' → logprob: -1.8633701801300049
    3. 'j' → logprob: -2.113370180130005
    4. 'for' → logprob: -2.488370180130005
    5. ' j' → logprob: -3.738370180130005
    6. 'start' → logprob: -3.738370180130005
    7. 'cnt' → logprob: -3.738370180130005
    8. 'col' → logprob: -3.988370180130005
    9. 'pos' → logprob: -4.363369941711426
    10. ' count' → logprob: -4.613369941711426

Token 470: '_len' (ID: 13683)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.8319587707519531
    2. '_len' → logprob: -0.8319587707519531
    3. '_length' → logprob: -2.081958770751953
    4. ' =' → logprob: -5.456958770751953
    5. '=' → logprob: -7.831958770751953
    6. 'start' → logprob: -9.081958770751953
    7. 'len' → logprob: -9.331958770751953
    8. '_' → logprob: -11.081958770751953
    9. 'length' → logprob: -11.456958770751953
    10. '_st' → logprob: -11.956958770751953

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07895929366350174
    2. ' =' → logprob: -2.5789592266082764
    3. '>=' → logprob: -9.953959465026855
    4. ' >=' → logprob: -11.453959465026855
    5. ',' → logprob: -12.203959465026855
    6. '   ' → logprob: -12.953959465026855
    7. '=len' → logprob: -13.828959465026855
    8. '≥' → logprob: -14.078959465026855
    9. 's' → logprob: -14.703959465026855
    10. ')' → logprob: -14.953959465026855

Token 472: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029708960209973156
    2. ' ' → logprob: -8.125297546386719
    3. '   ' → logprob: -14.500297546386719
    4. 'count' → logprob: -16.25029754638672
    5. '
' → logprob: -16.50029754638672
    6. 'run' → logprob: -16.62529754638672
    7. '1' → logprob: -16.75029754638672
    8. '  ' → logprob: -16.87529754638672
    9. '```' → logprob: -17.25029754638672
    10. '=' → logprob: -18.62529754638672

Token 473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014299227041192353
    2. ' ' → logprob: -8.875143051147461
    3. '1' → logprob: -13.125143051147461
    4. '   ' → logprob: -14.625143051147461
    5. '
' → logprob: -15.375143051147461
    6. 'count' → logprob: -15.500143051147461
    7. '```' → logprob: -16.87514305114746
    8. 'run' → logprob: -17.25014305114746
    9. '  ' → logprob: -17.62514305114746
    10. 'max' → logprob: -18.31264305114746

Token 474: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024282244965434074
    2. ' if' → logprob: -5.149282455444336
    3. ' for' → logprob: -5.274282455444336
    4. '
' → logprob: -5.399282455444336
    5. '   ' → logprob: -6.024282455444336
    6. '<|end|>' → logprob: -6.024282455444336
    7. 'for' → logprob: -6.774282455444336
    8. ',' → logprob: -7.399282455444336
    9. '           ' → logprob: -8.024282455444336
    10. '<|end|>' → logprob: -8.149282455444336

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02082914300262928
    2. ' for' → logprob: -4.270829200744629
    3. 'for' → logprob: -6.395829200744629
    4. '   ' → logprob: -6.520829200744629
    5. '<|end|>' → logprob: -6.520829200744629
    6. ',' → logprob: -7.895829200744629
    7. ' and' → logprob: -8.145829200744629
    8. '<|end|>' → logprob: -8.395829200744629
    9. '=' → logprob: -8.770829200744629
    10. 'tokens' → logprob: -9.270829200744629

Token 476: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26332640647888184
    2. 'start' (adapté à ' start') → logprob: -1.6383264064788818
    3. 'run' → logprob: -4.263326644897461
    4. 'best' → logprob: -4.763326644897461
    5. '       ' → logprob: -5.138326644897461
    6. 'max' → logprob: -5.638326644897461
    7. ' for' → logprob: -6.263326644897461
    8. '   ' → logprob: -7.263326644897461
    9. 'result' → logprob: -7.388326644897461
    10. 'col' → logprob: -7.513326644897461

Token 477: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006717743817716837
    2. ' =' → logprob: -5.006717681884766
    3. '=None' → logprob: -13.381717681884766
    4. ' ' → logprob: -15.131717681884766
    5. ',' → logprob: -15.631717681884766
    6. '=
' → logprob: -16.381717681884766
    7. '=i' → logprob: -16.631717681884766
    8. '_=' → logprob: -17.006717681884766
    9. '   ' → logprob: -17.506717681884766
    10. '_' → logprob: -17.881717681884766

Token 478: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3617352545261383
    2. '0' → logprob: -1.361735224723816
    3. '-' → logprob: -3.1117353439331055
    4. ' None' → logprob: -5.9867353439331055
    5. ' ' → logprob: -9.111735343933105
    6. ' -' → logprob: -9.236735343933105
    7. 'i' → logprob: -9.861735343933105
    8. '   ' → logprob: -11.236735343933105
    9. '=None' → logprob: -13.111735343933105
    10. '
' → logprob: -13.236735343933105

Token 479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007488752016797662
    2. '<|end|>' → logprob: -8.000748634338379
    3. ' for' → logprob: -8.375748634338379
    4. '
' → logprob: -9.375748634338379
    5. '<|end|>' → logprob: -10.750748634338379
    6. ',' → logprob: -10.875748634338379
    7. 'for' → logprob: -11.000748634338379
    8. '           ' → logprob: -11.000748634338379
    9. '   ' → logprob: -12.000748634338379
    10. '        
' → logprob: -13.000748634338379

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001422770437784493
    2. ' for' → logprob: -10.000142097473145
    3. '
' → logprob: -10.125142097473145
    4. '           ' → logprob: -11.000142097473145
    5. '   ' → logprob: -11.375142097473145
    6. 'for' → logprob: -11.375142097473145
    7. '<|end|>' → logprob: -11.500142097473145
    8. ',' → logprob: -13.125142097473145
    9. '```' → logprob: -13.750142097473145
    10. '<|end|>' → logprob: -14.000142097473145

Token 481: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0907374694943428
    2. ' for' → logprob: -2.5907375812530518
    3. '       ' → logprob: -4.465737342834473
    4. '   ' → logprob: -8.340737342834473
    5. '           ' → logprob: -10.965737342834473
    6. 'if' → logprob: -11.090737342834473
    7. '
' → logprob: -12.215737342834473
    8. ' if' → logprob: -13.340737342834473
    9. ' ' → logprob: -13.840737342834473
    10. '	for' → logprob: -13.965737342834473

Token 482: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006729576736688614
    2. ' j' → logprob: -5.006729602813721
    3. 'idx' → logprob: -11.506729125976562
    4. 'c' → logprob: -13.006729125976562
    5. 'col' → logprob: -13.631729125976562
    6. ' idx' → logprob: -15.756729125976562
    7. '   ' → logprob: -15.756729125976562
    8. '```' → logprob: -16.256729125976562
    9. 'i' → logprob: -16.381729125976562
    10. 'ch' → logprob: -16.631729125976562

Token 483: ',ch' (ID: 165575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7853603959083557
    2. ' in' → logprob: -0.7853603959083557
    3. 'in' → logprob: -3.035360336303711
    4. ',line' → logprob: -4.160360336303711
    5. ',c' → logprob: -4.535360336303711
    6. ',j' → logprob: -5.535360336303711
    7. ',char' → logprob: -5.535360336303711
    8. ' ,' → logprob: -5.910360336303711
    9. ',in' → logprob: -6.285360336303711
    10. ',k' → logprob: -8.160360336303711

Token 484: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06211400404572487
    2. 'in' → logprob: -2.8121140003204346
    3. '=' → logprob: -9.687113761901855
    4. ',' → logprob: -10.687113761901855
    5. 's' → logprob: -11.562113761901855
    6. ',j' → logprob: -12.062113761901855
    7. ' =' → logprob: -12.187113761901855
    8. '_in' → logprob: -12.312113761901855
    9. '	in' → logprob: -12.312113761901855
    10. ' ' → logprob: -12.437113761901855

Token 485: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00029875844484195113
    2. 'range' → logprob: -8.750298500061035
    3. ' enumerate' → logprob: -8.875298500061035
    4. 'line' → logprob: -16.12529945373535
    5. 'enum' → logprob: -16.37529945373535
    6. '   ' → logprob: -16.87529945373535
    7. '
' → logprob: -17.00029945373535
    8. '```' → logprob: -17.25029945373535
    9. ' range' → logprob: -18.62529945373535
    10. '[' → logprob: -18.75029945373535

Token 486: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0006164124351926148
    2. '(line' → logprob: -7.750616550445557
    3. ' line' → logprob: -8.625616073608398
    4. 'range' → logprob: -13.125616073608398
    5. 'lines' → logprob: -13.625616073608398
    6. '[line' → logprob: -14.375616073608398
    7. ',line' → logprob: -14.625616073608398
    8. '=line' → logprob: -14.750616073608398
    9. '   ' → logprob: -15.000616073608398
    10. '#line' → logprob: -15.125616073608398

Token 487: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0013689270708709955
    2. '):' → logprob: -7.126368999481201
    3. ':
' → logprob: -8.501368522644043
    4. '           ' → logprob: -8.751368522644043
    5. '       ' → logprob: -9.501368522644043
    6. ':' → logprob: -10.126368522644043
    7. ''):
' → logprob: -10.376368522644043
    8. '   ' → logprob: -11.626368522644043
    9. '=' → logprob: -11.751368522644043
    10. '):
' → logprob: -11.876368522644043

Token 488: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.35706390615087e-05
    2. 'if' → logprob: -11.375033378601074
    3. ' if' → logprob: -11.875033378601074
    4. '	       ' → logprob: -12.375033378601074
    5. '         ' → logprob: -13.125033378601074
    6. '          ' → logprob: -13.250033378601074
    7. '               ' → logprob: -13.500033378601074
    8. '       ' → logprob: -14.125033378601074
    9. ',' → logprob: -14.125033378601074
    10. '   ' → logprob: -14.500033378601074

Token 489: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3605280816555023
    2. '               ' → logprob: -1.8605281114578247
    3. ' if' → logprob: -2.610527992248535
    4. 'if' (adapté à ' if') → logprob: -2.610527992248535
    5. '	           ' → logprob: -10.860527992248535
    6. '   ' → logprob: -10.985527992248535
    7. '	       ' → logprob: -10.985527992248535
    8. '            ' → logprob: -10.985527992248535
    9. '       ' → logprob: -12.110527992248535
    10. ' ' → logprob: -12.110527992248535

Token 490: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.014166799373924732
    2. ' ch' → logprob: -4.264166831970215
    3. '	ch' → logprob: -13.514166831970215
    4. 'j' → logprob: -14.014166831970215
    5. '(ch' → logprob: -15.014166831970215
    6. '   ' → logprob: -15.264166831970215
    7. ' ' → logprob: -15.639166831970215
    8. '[ch' → logprob: -16.2641658782959
    9. '           ' → logprob: -16.3891658782959
    10. ' j' → logprob: -17.0141658782959

Token 491: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.301323264837265
    2. ' ==' → logprob: -1.4263232946395874
    3. '=='' → logprob: -3.926323175430298
    4. '=' → logprob: -9.051322937011719
    5. '[' → logprob: -10.301322937011719
    6. '-' → logprob: -10.426322937011719
    7. '==
' → logprob: -10.426322937011719
    8. '==-' → logprob: -11.176322937011719
    9. '===' → logprob: -12.051322937011719
    10. '=="' → logprob: -12.301322937011719

Token 492: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00036667886888608336
    2. '-' → logprob: -8.1253662109375
    3. ' '-' → logprob: -9.7503662109375
    4. ' '-'' → logprob: -11.5003662109375
    5. '"-' → logprob: -14.2503662109375
    6. '('-' → logprob: -14.3753662109375
    7. ''' → logprob: -15.1253662109375
    8. ''>' → logprob: -15.2503662109375
    9. '’-' → logprob: -16.3753662109375
    10. ' ' → logprob: -16.5003662109375

Token 493: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.021524053066968918
    2. '':' → logprob: -4.271523952484131
    3. '-' → logprob: -5.146523952484131
    4. ''' → logprob: -6.896523952484131
    5. ''):
' → logprob: -8.521524429321289
    6. '':
' → logprob: -9.146524429321289
    7. ''-' → logprob: -9.396524429321289
    8. ' '' → logprob: -10.021524429321289
    9. ':
' → logprob: -10.646524429321289
    10. '):
' → logprob: -11.646524429321289

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003288701642304659
    2. ' if' → logprob: -6.003288745880127
    3. '<|end|>' → logprob: -8.003288269042969
    4. '           ' → logprob: -9.128288269042969
    5. ':
' → logprob: -9.378288269042969
    6. ' and' → logprob: -9.753288269042969
    7. 'if' → logprob: -10.003288269042969
    8. ':' → logprob: -10.378288269042969
    9. '<|end|>' → logprob: -10.628288269042969
    10. '):
' → logprob: -11.128288269042969

Token 495: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4841157793998718
    2. 'if' (adapté à ' if') → logprob: -0.9841157793998718
    3. '               ' → logprob: -4.6091156005859375
    4. '                   ' → logprob: -11.359115600585938
    5. '           ' → logprob: -12.109115600585938
    6. ' ' → logprob: -12.484115600585938
    7. '                ' → logprob: -13.109115600585938
    8. 'If' → logprob: -13.734115600585938
    9. '	if' → logprob: -14.484115600585938
    10. '              ' → logprob: -14.484115600585938

Token 496: ' run' (ID: 2461)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.27989065647125244
    2. ' start' → logprob: -1.9048906564712524
    3. 'run' → logprob: -2.779890537261963
    4. ' run' → logprob: -3.404890537261963
    5. ' ' → logprob: -11.154891014099121
    6. '   ' → logprob: -11.404891014099121
    7. '	start' → logprob: -12.529891014099121
    8. '	run' → logprob: -13.029891014099121
    9. ' ' → logprob: -13.154891014099121
    10. '  ' → logprob: -13.529891014099121

Token 497: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.004938427824527025
    2. ' is' → logprob: -6.37993860244751
    3. 'start' → logprob: -7.37993860244751
    4. '==' → logprob: -7.50493860244751
    5. '_start' → logprob: -7.50493860244751
    6. 's' → logprob: -7.75493860244751
    7. 'len' → logprob: -8.004938125610352
    8. ' ==' → logprob: -9.129938125610352
    9. '               ' → logprob: -9.379938125610352
    10. '                   ' → logprob: -9.629938125610352

Token 498: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.581230640411377
    2. ' ==' → logprob: -0.831230640411377
    3. '0' → logprob: -5.331230640411377
    4. '1' → logprob: -9.331230163574219
    5. '=' → logprob: -9.456230163574219
    6. ' is' → logprob: -9.456230163574219
    7. ' ' → logprob: -9.581230163574219
    8. ' +=' → logprob: -9.956230163574219
    9. '+=' → logprob: -10.581230163574219
    10. '+' → logprob: -10.956230163574219

Token 499: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -20.375001907348633
    4. '<|end|>' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.250001907348633
    6. ' ' → logprob: -21.625001907348633
    7. '1' → logprob: -21.625001907348633
    8. '
' → logprob: -21.750001907348633
    9. '  ' → logprob: -22.000001907348633
    10. '```' → logprob: -22.125001907348633

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.000001907348633
    4. '۰' → logprob: -19.500001907348633
    5. '1' → logprob: -19.750001907348633
    6. '  ' → logprob: -19.875001907348633
    7. '<|end|>' → logprob: -20.125001907348633
    8. '০' → logprob: -21.437501907348633
    9. '０' → logprob: -21.437501907348633
    10. '000' → logprob: -21.562501907348633

Token 501: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09481650590896606
    2. ':' → logprob: -2.5948164463043213
    3. '                   ' → logprob: -4.4698166847229
    4. '               ' → logprob: -5.9698166847229
    5. ':start' → logprob: -7.3448166847229
    6. '<|end|>' → logprob: -8.469816207885742
    7. ',' → logprob: -8.594816207885742
    8. ' :
' → logprob: -9.219816207885742
    9. '):
' → logprob: -9.469816207885742
    10. ' and' → logprob: -9.469816207885742

Token 502: '                   ' (ID: 699)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.37487444281578064
    2. '                   ' → logprob: -1.374874472618103
    3. ' start' → logprob: -2.9998743534088135
    4. '                       ' → logprob: -4.749874591827393
    5. '               ' → logprob: -6.874874591827393
    6. ',start' → logprob: -9.624874114990234
    7. '[start' → logprob: -10.374874114990234
    8. '                ' → logprob: -10.624874114990234
    9. '```' → logprob: -10.624874114990234
    10. ' ' → logprob: -11.249874114990234

Token 503: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.4952482581138611
    2. 'j' → logprob: -0.9952482581138611
    3. ' j' → logprob: -4.120248317718506
    4. ' start' → logprob: -5.620248317718506
    5. '                   ' → logprob: -6.870248317718506
    6. '   ' → logprob: -11.245247840881348
    7. '                       ' → logprob: -11.370247840881348
    8. '               ' → logprob: -12.245247840881348
    9. '	j' → logprob: -12.620247840881348
    10. ' ' → logprob: -12.745247840881348

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00302762514911592
    2. '=j' → logprob: -6.003027439117432
    3. ' =' → logprob: -7.503027439117432
    4. '=
' → logprob: -15.50302791595459
    5. '=i' → logprob: -17.503026962280273
    6. '=

' → logprob: -18.128026962280273
    7. '=k' → logprob: -18.253026962280273
    8. '=int' → logprob: -18.628026962280273
    9. '=None' → logprob: -18.628026962280273
    10. '=start' → logprob: -18.753026962280273

Token 505: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002613358374219388
    2. ' j' → logprob: -8.250261306762695
    3. '	j' → logprob: -18.250261306762695
    4. '$j' → logprob: -19.750261306762695
    5. '_j' → logprob: -20.125261306762695
    6. '   ' → logprob: -20.750261306762695
    7. '=j' → logprob: -20.750261306762695
    8. '[j' → logprob: -21.125261306762695
    9. '*j' → logprob: -21.875261306762695
    10. '
' → logprob: -22.000261306762695

Token 506: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02936161495745182
    2. '
' → logprob: -3.9043617248535156
    3. '<|end|>' → logprob: -5.404361724853516
    4. '                   ' → logprob: -7.029361724853516
    5. '                
' → logprob: -7.029361724853516
    6. '<|end|>' → logprob: -7.279361724853516
    7. ' 
' → logprob: -7.529361724853516
    8. '  
' → logprob: -7.779361724853516
    9. '           ' → logprob: -8.779361724853516
    10. '                ' → logprob: -9.154361724853516

Token 507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006522706826217473
    2. '                   ' → logprob: -7.750652313232422
    3. '
' → logprob: -9.750652313232422
    4. '           ' → logprob: -10.250652313232422
    5. '<|end|>' → logprob: -10.375652313232422
    6. '			' → logprob: -11.250652313232422
    7. '                ' → logprob: -11.250652313232422
    8. '<|end|>' → logprob: -11.500652313232422
    9. '                
' → logprob: -11.750652313232422
    10. '              ' → logprob: -11.875652313232422

Token 508: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.6496797800064087
    2. ' run' → logprob: -0.8996797800064087
    3. '               ' → logprob: -2.649679660797119
    4. '                   ' → logprob: -8.024680137634277
    5. '           ' → logprob: -10.274680137634277
    6. '                ' → logprob: -11.274680137634277
    7. '
' → logprob: -11.899680137634277
    8. '(run' → logprob: -12.024680137634277
    9. '   ' → logprob: -12.649680137634277
    10. '       ' → logprob: -12.774680137634277

Token 509: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.750001907348633
    3. 'len' → logprob: -14.750001907348633
    4. '_l' → logprob: -15.500001907348633
    5. '_le' → logprob: -16.750001907348633
    6. ' _' → logprob: -17.000001907348633
    7. '_LEN' → logprob: -17.000001907348633
    8. 'Len' → logprob: -17.375001907348633
    9. '__' → logprob: -17.500001907348633
    10. 's' → logprob: -17.875001907348633

Token 510: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00476569589227438
    2. ' +=' → logprob: -5.379765510559082
    3. '=' → logprob: -8.879765510559082
    4. ']+=' → logprob: -12.254765510559082
    5. '+' → logprob: -14.254765510559082
    6. '1' → logprob: -14.379765510559082
    7. '   ' → logprob: -17.0047664642334
    8. '```' → logprob: -17.0047664642334
    9. '+='' → logprob: -17.2547664642334
    10. '+=(' → logprob: -17.3797664642334

Token 511: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.376928329467773
    4. '
' → logprob: -20.126928329467773
    5. '<|end|>' → logprob: -20.251928329467773
    6. '```' → logprob: -20.751928329467773
    7. '0' → logprob: -21.751928329467773
    8. ' ' → logprob: -22.001928329467773
    9. '  ' → logprob: -22.001928329467773
    10. '۱' → logprob: -22.876928329467773

Token 512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -21.875001907348633
    4. '   ' → logprob: -22.000001907348633
    5. '
' → logprob: -22.000001907348633
    6. '<|end|>' → logprob: -23.125001907348633
    7. '۱' → logprob: -23.812501907348633
    8. '-' → logprob: -24.062501907348633
    9. '１' → logprob: -24.125001907348633
    10. '१' → logprob: -24.750001907348633

Token 513: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002186307217925787
    2. '               ' → logprob: -7.127186298370361
    3. '<|end|>' → logprob: -7.502186298370361
    4. 'else' → logprob: -8.62718677520752
    5. '
' → logprob: -8.62718677520752
    6. ' else' → logprob: -9.00218677520752
    7. '       ' → logprob: -9.12718677520752
    8. 'elif' → logprob: -9.50218677520752
    9. '<|end|>' → logprob: -10.12718677520752
    10. ' elif' → logprob: -10.50218677520752

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012890440411865711
    2. '               ' → logprob: -6.876288890838623
    3. 'else' → logprob: -8.751289367675781
    4. '       ' → logprob: -10.376289367675781
    5. '```' → logprob: -10.501289367675781
    6. '		' → logprob: -10.876289367675781
    7. 'elif' → logprob: -12.001289367675781
    8. '	       ' → logprob: -12.001289367675781
    9. ' else' → logprob: -12.876289367675781
    10. '<|end|>' → logprob: -13.751289367675781

Token 515: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6363487839698792
    2. '           ' → logprob: -0.8863487839698792
    3. ' else' → logprob: -2.8863487243652344
    4. '       ' → logprob: -6.011348724365234
    5. '               ' → logprob: -9.261348724365234
    6. '		' → logprob: -9.386348724365234
    7. 'elif' → logprob: -10.011348724365234
    8. '	else' → logprob: -10.136348724365234
    9. '	       ' → logprob: -10.511348724365234
    10. '   ' → logprob: -10.511348724365234

Token 516: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008410728187300265
    2. '           ' → logprob: -7.37584114074707
    3. ':' → logprob: -8.75084114074707
    4. ':
' → logprob: -10.50084114074707
    5. '```' → logprob: -12.00084114074707
    6. '       ' → logprob: -12.25084114074707
    7. 'if' → logprob: -12.62584114074707
    8. ' if' → logprob: -12.62584114074707
    9. ',' → logprob: -12.75084114074707
    10. '                   ' → logprob: -12.87584114074707

Token 517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34468013048171997
    2. '           ' → logprob: -1.9696800708770752
    3. 'if' → logprob: -2.219680070877075
    4. '       ' → logprob: -3.219680070877075
    5. ' if' → logprob: -5.719680309295654
    6. 'run' → logprob: -9.344679832458496
    7. '   ' → logprob: -10.219679832458496
    8. '```' → logprob: -11.594679832458496
    9. '                   ' → logprob: -11.969679832458496
    10. 'return' → logprob: -12.219679832458496

Token 518: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14227135479450226
    2. ' if' → logprob: -2.3922712802886963
    3. '           ' → logprob: -3.3922712802886963
    4. '               ' → logprob: -4.892271518707275
    5. '       ' → logprob: -10.392271041870117
    6. '                   ' → logprob: -11.017271041870117
    7. '   ' → logprob: -12.517271041870117
    8. ' ' → logprob: -13.267271041870117
    9. '         ' → logprob: -14.392271041870117
    10. '          ' → logprob: -14.517271041870117

Token 519: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.018151111900806427
    2. ' run' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.39315128326416
    4. '(run' → logprob: -14.76815128326416
    5. '	run' → logprob: -16.643150329589844
    6. ' ' → logprob: -17.018150329589844
    7. '       ' → logprob: -17.018150329589844
    8. '           ' → logprob: -17.143150329589844
    9. 'start' → logprob: -17.268150329589844
    10. '
' → logprob: -17.893150329589844

Token 520: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -14.75
    3. '_LEN' → logprob: -19.0
    4. '_' → logprob: -20.375
    5. 'Len' → logprob: -20.75
    6. 'run' → logprob: -21.125
    7. '__' → logprob: -21.125
    8. '_l' → logprob: -21.5
    9. '_run' → logprob: -21.625
    10. '_val' → logprob: -22.0

Token 521: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3873825967311859
    2. '>=' → logprob: -1.1373826265335083
    3. '>' → logprob: -8.137382507324219
    4. ' >' → logprob: -9.512382507324219
    5. ' <' → logprob: -10.387382507324219
    6. '   ' → logprob: -10.637382507324219
    7. 'and' → logprob: -10.762382507324219
    8. '<' → logprob: -11.012382507324219
    9. ')>=' → logprob: -11.262382507324219
    10. '≥' → logprob: -11.262382507324219

Token 522: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.375051498413086
    4. '1' → logprob: -16.500051498413086
    5. '2' → logprob: -16.750051498413086
    6. '```' → logprob: -17.625051498413086
    7. '4' → logprob: -18.312551498413086
    8. '
' → logprob: -18.500051498413086
    9. '  ' → logprob: -18.937551498413086
    10. '---
' → logprob: -19.125051498413086

Token 523: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.75
    4. '2' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '1' → logprob: -18.625
    7. '
' → logprob: -18.9375
    8. '-' → logprob: -19.125
    9. '---
' → logprob: -20.0625
    10. '۳' → logprob: -20.125

Token 524: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5272476077079773
    2. ':' → logprob: -0.9022476077079773
    3. '                   ' → logprob: -6.152247428894043
    4. '               ' → logprob: -6.527247428894043
    5. '           ' → logprob: -8.152247428894043
    6. '):
' → logprob: -9.152247428894043
    7. ' and' → logprob: -10.527247428894043
    8. ':

' → logprob: -10.652247428894043
    9. ' :
' → logprob: -11.027247428894043
    10. ':return' → logprob: -11.402247428894043

Token 525: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026012640446424484
    2. 'return' → logprob: -4.401012420654297
    3. ' return' → logprob: -4.526012420654297
    4. '           ' → logprob: -6.401012420654297
    5. '               ' → logprob: -7.151012420654297
    6. '                       ' → logprob: -9.651012420654297
    7. '       ' → logprob: -9.776012420654297
    8. '   ' → logprob: -11.276012420654297
    9. '```' → logprob: -12.651012420654297
    10. '                  ' → logprob: -13.651012420654297

Token 526: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018219484016299248
    2. ' return' → logprob: -4.018219470977783
    3. '                   ' → logprob: -9.768219947814941
    4. '	return' → logprob: -11.893219947814941
    5. '                       ' → logprob: -12.768219947814941
    6. '       ' → logprob: -13.643219947814941
    7. '               ' → logprob: -14.393219947814941
    8. '   ' → logprob: -14.643219947814941
    9. '
' → logprob: -15.393219947814941
    10. '           ' → logprob: -16.268218994140625

Token 527: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29818490147590637
    2. '(i' → logprob: -1.548184871673584
    3. ' i' → logprob: -3.298184871673584
    4. ' (' → logprob: -4.798184871673584
    5. '   ' → logprob: -12.298185348510742
    6. ' ' → logprob: -14.048185348510742
    7. '[i' → logprob: -14.173185348510742
    8. '{i' → logprob: -14.923185348510742
    9. '	i' → logprob: -15.048185348510742
    10. ' ' → logprob: -15.548185348510742

Token 528: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.313587486743927
    2. ',start' → logprob: -1.3135874271392822
    3. 'start' → logprob: -8.813587188720703
    4. ' ,' → logprob: -8.813587188720703
    5. '(start' → logprob: -11.063587188720703
    6. ' start' → logprob: -11.438587188720703
    7. ',end' → logprob: -14.313587188720703
    8. ',
' → logprob: -14.563587188720703
    9. ' (' → logprob: -15.563587188720703
    10. '[start' → logprob: -15.688587188720703

Token 529: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.08928611129522324
    2. ',start' → logprob: -2.5892860889434814
    3. ',' → logprob: -4.9642863273620605
    4. 'j' → logprob: -6.0892863273620605
    5. 'start' → logprob: -6.8392863273620605
    6. ',end' → logprob: -11.339285850524902
    7. ' j' → logprob: -12.464285850524902
    8. ' ,' → logprob: -12.839285850524902
    9. ',i' → logprob: -14.339285850524902
    10. ',s' → logprob: -14.464285850524902

Token 530: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02893402986228466
    2. '               ' → logprob: -3.7789340019226074
    3. ' -' → logprob: -5.403934001922607
    4. 'None' → logprob: -7.028934001922607
    5. ' None' → logprob: -9.278934478759766
    6. '
' → logprob: -9.528934478759766
    7. '           ' → logprob: -10.153934478759766
    8. '                   ' → logprob: -11.278934478759766
    9. '                
' → logprob: -11.278934478759766
    10. '                ' → logprob: -11.653934478759766

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -18.625003814697266
    4. '2' → logprob: -19.000003814697266
    5. '```' → logprob: -19.062503814697266
    6. 'start' → logprob: -20.250003814697266
    7. '   ' → logprob: -20.625003814697266
    8. '<|end|>' → logprob: -20.687503814697266
    9. ',' → logprob: -20.750003814697266
    10. '-' → logprob: -21.000003814697266

Token 532: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0802738870552275e-05
    2. ',' → logprob: -12.00001049041748
    3. '           ' → logprob: -13.75001049041748
    4. '<|end|>' → logprob: -13.87501049041748
    5. 'else' → logprob: -14.37501049041748
    6. '			' → logprob: -14.75001049041748
    7. '.' → logprob: -15.12501049041748
    8. '                   ' → logprob: -15.12501049041748
    9. '		       ' → logprob: -15.62501049041748
    10. '       ' → logprob: -15.75001049041748

Token 533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.246537173457909e-06
    2. '           ' → logprob: -12.875003814697266
    3. '                   ' → logprob: -14.125003814697266
    4. ',' → logprob: -14.875003814697266
    5. 'else' → logprob: -15.375003814697266
    6. '              ' → logprob: -16.250003814697266
    7. 'import' → logprob: -16.500003814697266
    8. '       ' → logprob: -16.875003814697266
    9. '			' → logprob: -17.000003814697266
    10. '[' → logprob: -17.875003814697266

Token 534: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.07759726792573929
    2. '               ' → logprob: -2.7025973796844482
    3. ' run' → logprob: -5.577597141265869
    4. '           ' → logprob: -5.702597141265869
    5. '       ' → logprob: -7.827597141265869
    6. '(run' → logprob: -10.327597618103027
    7. 'else' → logprob: -10.702597618103027
    8. 'return' → logprob: -11.327597618103027
    9. '                   ' → logprob: -11.827597618103027
    10. '
' → logprob: -11.952597618103027

Token 535: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.704273118884885e-07
    2. 'len' → logprob: -15.125000953674316
    3. '=' → logprob: -16.25
    4. '_l' → logprob: -16.5
    5. '_' → logprob: -17.25
    6. 's' → logprob: -18.0
    7. ' =' → logprob: -18.0
    8. '_le' → logprob: -18.125
    9. '_LEN' → logprob: -18.75
    10. 'Len' → logprob: -19.0

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.65475082397461
    4. ',' → logprob: -18.40475082397461
    5. '        ' → logprob: -18.52975082397461
    6. '=
' → logprob: -18.77975082397461
    7. ' +=' → logprob: -18.90475082397461
    8. '0' → logprob: -18.90475082397461
    9. '+=' → logprob: -19.27975082397461
    10. '==' → logprob: -19.40475082397461

Token 537: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -19.00002670288086
    4. '   ' → logprob: -19.75002670288086
    5. '00' → logprob: -20.12502670288086
    6. '000' → logprob: -20.87502670288086
    7. '０' → logprob: -21.56252670288086
    8. ' ' → logprob: -21.81252670288086
    9. '  ' → logprob: -21.93752670288086
    10. '০' → logprob: -22.06252670288086

Token 538: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -18.62500762939453
    4. '   ' → logprob: -18.68750762939453
    5. '０' → logprob: -19.93750762939453
    6. '000' → logprob: -19.93750762939453
    7. '00' → logprob: -20.06250762939453
    8. '  ' → logprob: -20.75000762939453
    9. ' ' → logprob: -20.75000762939453
    10. '  ' → logprob: -20.81250762939453

Token 539: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.619311974034645e-05
    2. '
' → logprob: -10.500036239624023
    3. '   ' → logprob: -11.750036239624023
    4. '           ' → logprob: -15.375036239624023
    5. 'return' → logprob: -15.750036239624023
    6. 'None' → logprob: -16.125036239624023
    7. '        
' → logprob: -16.375036239624023
    8. '```' → logprob: -17.250036239624023
    9. '[' → logprob: -17.750036239624023
    10. 'else' → logprob: -17.750036239624023

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.245724504580721e-05
    2. '   ' → logprob: -9.500092506408691
    3. '
' → logprob: -11.750092506408691
    4. 'return' → logprob: -12.125092506408691
    5. 'if' → logprob: -12.750092506408691
    6. 'None' → logprob: -14.875092506408691
    7. '```' → logprob: -15.625092506408691
    8. 'def' → logprob: -15.625092506408691
    9. '           ' → logprob: -16.125091552734375
    10. '#' → logprob: -16.250091552734375

Token 541: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8705714344978333
    2. '       ' → logprob: -1.1205713748931885
    3. 'if' (adapté à ' if') → logprob: -1.3705713748931885
    4. ' if' → logprob: -6.745571613311768
    5. 'return' → logprob: -10.62057113647461
    6. 'def' → logprob: -11.62057113647461
    7. '
' → logprob: -11.74557113647461
    8. 'for' → logprob: -11.87057113647461
    9. 'If' → logprob: -12.74557113647461
    10. '#' → logprob: -14.12057113647461

Token 542: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.05488600209355354
    2. ' run' → logprob: -2.9298861026763916
    3. '   ' → logprob: -13.429885864257812
    4. ' ' → logprob: -14.304885864257812
    5. '(run' → logprob: -14.554885864257812
    6. '	run' → logprob: -14.554885864257812
    7. '0' → logprob: -15.679885864257812
    8. '
' → logprob: -15.804885864257812
    9. '  ' → logprob: -15.804885864257812
    10. 'len' → logprob: -17.054885864257812

Token 543: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0004261468129698187
    2. 'un' → logprob: -8.750426292419434
    3. 'run' → logprob: -9.000426292419434
    4. 'len' → logprob: -9.125426292419434
    5. 'Len' → logprob: -11.000426292419434
    6. 'n' → logprob: -11.000426292419434
    7. 'en' → logprob: -14.000426292419434
    8. '_run' → logprob: -15.125426292419434
    9. '_l' → logprob: -15.875426292419434
    10. 't' → logprob: -16.000425338745117

Token 544: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6931923627853394
    2. '>=' → logprob: -0.6931923627853394
    3. ')>=' → logprob: -10.568192481994629
    4. '   ' → logprob: -12.318192481994629
    5. '≥' → logprob: -12.318192481994629
    6. ']>=' → logprob: -12.818192481994629
    7. '<|end|>' → logprob: -13.193192481994629
    8. ' ' → logprob: -13.443192481994629
    9. '<|end|>' → logprob: -13.693192481994629
    10. '>' → logprob: -14.068192481994629

Token 545: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. '   ' → logprob: -15.755928993225098
    4. '
' → logprob: -17.50592803955078
    5. '```' → logprob: -18.50592803955078
    6. '３' → logprob: -18.88092803955078
    7. '۳' → logprob: -19.13092803955078
    8. '  ' → logprob: -19.25592803955078
    9. ' three' → logprob: -19.31842803955078
    10. '<|end|>' → logprob: -20.13092803955078

Token 546: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25248900055885315
    2. ':' → logprob: -1.5024889707565308
    3. ' :
' → logprob: -8.62748908996582
    4. '       ' → logprob: -8.87748908996582
    5. '           ' → logprob: -9.12748908996582
    6. ':return' → logprob: -9.50248908996582
    7. ' :' → logprob: -11.00248908996582
    8. '):
' → logprob: -11.37748908996582
    9. ',' → logprob: -11.62748908996582
    10. '=' → logprob: -12.25248908996582

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14296048879623413
    2. 'return' → logprob: -2.142960548400879
    3. ' return' → logprob: -4.142960548400879
    4. '       ' → logprob: -11.142960548400879
    5. '   ' → logprob: -11.892960548400879
    6. '               ' → logprob: -13.017960548400879
    7. '          ' → logprob: -13.767960548400879
    8. ':return' → logprob: -14.267960548400879
    9. ' ' → logprob: -14.392960548400879
    10. '		' → logprob: -14.642960548400879

Token 548: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07895577698945999
    2. ' return' → logprob: -2.578955888748169
    3. '           ' → logprob: -9.70395565032959
    4. '       ' → logprob: -12.70395565032959
    5. '   ' → logprob: -13.70395565032959
    6. ' ' → logprob: -14.82895565032959
    7. '	return' → logprob: -16.203956604003906
    8. ':return' → logprob: -16.453956604003906
    9. '               ' → logprob: -16.703956604003906
    10. 'eturn' → logprob: -17.328956604003906

Token 549: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006715370807796717
    2. ' i' → logprob: -5.006715297698975
    3. '	i' → logprob: -18.256715774536133
    4. '   ' → logprob: -18.631715774536133
    5. ' ' → logprob: -19.631715774536133
    6. '
' → logprob: -19.756715774536133
    7. ' ' → logprob: -20.756715774536133
    8. ',i' → logprob: -21.381715774536133
    9. '(i' → logprob: -21.881715774536133
    10. '  ' → logprob: -22.006715774536133

Token 550: ',start' (ID: 121128)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00920545682311058
    2. ' start' → logprob: -5.009205341339111
    3. ',start' → logprob: -6.384205341339111
    4. ',' → logprob: -7.134205341339111
    5. '(start' → logprob: -14.25920581817627
    6. '[start' → logprob: -14.63420581817627
    7. '	start' → logprob: -15.50920581817627
    8. '0' → logprob: -16.259204864501953
    9. '   ' → logprob: -16.759204864501953
    10. '
' → logprob: -17.384204864501953

Token 551: ',len' (ID: 73338)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.017102496698498726
    2. ',len' → logprob: -4.3921027183532715
    3. 'run' → logprob: -6.3921027183532715
    4. ',' → logprob: -6.7671027183532715
    5. 'j' → logprob: -7.0171027183532715
    6. 'start' → logprob: -8.392102241516113
    7. ',j' → logprob: -8.517102241516113
    8. ' len' → logprob: -8.892102241516113
    9. '       ' → logprob: -9.017102241516113
    10. '   ' → logprob: -9.267102241516113

Token 552: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -8.041768160182983e-05
    2. '(lines' → logprob: -9.500080108642578
    3. 'line' → logprob: -12.125080108642578
    4. '[line' → logprob: -17.250080108642578
    5. ' line' → logprob: -17.875080108642578
    6. '=line' → logprob: -18.000080108642578
    7. '	line' → logprob: -19.000080108642578
    8. '(' → logprob: -19.625080108642578
    9. ',line' → logprob: -19.625080108642578
    10. '#line' → logprob: -19.875080108642578

Token 553: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.2531364858150482
    2. ')' → logprob: -1.5031365156173706
    3. '-' → logprob: -6.87813663482666
    4. ')
' → logprob: -9.25313663482666
    5. ' )' → logprob: -11.00313663482666
    6. ')]' → logprob: -11.37813663482666
    7. ' -' → logprob: -11.75313663482666
    8. '-)' → logprob: -12.00313663482666
    9. '))' → logprob: -12.25313663482666
    10. '[' → logprob: -12.25313663482666

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05507082864642143
    2. 'line' → logprob: -2.9300708770751953
    3. ' line' → logprob: -9.305070877075195
    4. '(line' → logprob: -9.430070877075195
    5. ' ' → logprob: -11.305070877075195
    6. '```' → logprob: -13.555070877075195
    7. ')' → logprob: -13.680070877075195
    8. '[line' → logprob: -13.805070877075195
    9. '(' → logprob: -14.805070877075195
    10. '
' → logprob: -15.180070877075195

Token 555: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.714047372341156
    2. 'def' → logprob: -0.714047372341156
    3. '
' → logprob: -4.214047431945801
    4. '<|end|>' → logprob: -5.464047431945801
    5. 'return' → logprob: -7.089047431945801
    6. 'None' → logprob: -8.3390474319458
    7. '    
' → logprob: -8.4640474319458
    8. '<|end|>' → logprob: -9.2140474319458
    9. '#' → logprob: -9.9640474319458
    10. '  
' → logprob: -10.3390474319458

Token 556: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8388096690177917
    2. '   ' → logprob: -1.3388097286224365
    3. 'def' → logprob: -1.3388097286224365
    4. 'None' → logprob: -3.4638097286224365
    5. '
' → logprob: -5.213809490203857
    6. ' return' → logprob: -5.838809490203857
    7. '<|end|>' → logprob: -6.463809490203857
    8. '	return' → logprob: -7.338809490203857
    9. '```' → logprob: -8.213809967041016
    10. ' ' → logprob: -8.213809967041016

Token 558: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007100477814674377
    2. ' None' → logprob: -7.2507100105285645
    3. '_None' → logprob: -17.375709533691406
    4. '(None' → logprob: -18.000709533691406
    5. ',None' → logprob: -18.875709533691406
    6. 'none' → logprob: -21.125709533691406
    7. '
' → logprob: -21.250709533691406
    8. '   ' → logprob: -21.750709533691406
    9. '_none' → logprob: -21.875709533691406
    10. '.None' → logprob: -22.250709533691406

Token 559: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8889445662498474
    2. '<|end|>' → logprob: -0.8889445662498474
    3. '
' → logprob: -1.7639446258544922
    4. '<|end|>' → logprob: -5.888944625854492
    5. '

' → logprob: -6.013944625854492
    6. 'newline' → logprob: -8.513944625854492
    7. '```' → logprob: -8.763944625854492
    8. '\' → logprob: -9.138944625854492
    9. '#' → logprob: -9.138944625854492
    10. ',' → logprob: -9.388944625854492

Token 560: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02413877099752426
    2. '
' → logprob: -4.149138927459717
    3. '<|end|>' → logprob: -5.024138927459717
    4. '<|end|>' → logprob: -7.399138927459717
    5. '```' → logprob: -8.149138450622559
    6. '

' → logprob: -8.399138450622559
    7. '\' → logprob: -9.399138450622559
    8. '#' → logprob: -9.774138450622559
    9. '\n' → logprob: -10.149138450622559
    10. 'newline' → logprob: -10.274138450622559

Token 561: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.7140828967094421
    2. ' parse' → logprob: -0.8390828967094421
    3. ' main' → logprob: -3.714082956314087
    4. 'main' → logprob: -4.589082717895508
    5. ' solve' → logprob: -4.714082717895508
    6. 'solve' → logprob: -5.339082717895508
    7. 'read' → logprob: -5.964082717895508
    8. 'process' → logprob: -6.214082717895508
    9. ' merge' → logprob: -6.339082717895508
    10. 'merge' → logprob: -6.339082717895508

Token 562: '_cell' (ID: 39197)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.7194907069206238
    2. '_expression' → logprob: -1.2194907665252686
    3. '_formula' → logprob: -2.3444907665252686
    4. '_cells' → logprob: -3.0944907665252686
    5. '(expression' → logprob: -3.7194907665252686
    6. '_lines' → logprob: -4.0944905281066895
    7. '_cell' → logprob: -4.3444905281066895
    8. '(' → logprob: -5.3444905281066895
    9. '_expr' → logprob: -5.7194905281066895
    10. '_equ' → logprob: -5.9694905281066895

Token 563: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.36872002482414246
    2. '(data' → logprob: -1.6187200546264648
    3. '(line' → logprob: -2.368720054626465
    4. '(' → logprob: -4.118720054626465
    5. '(cell' → logprob: -8.618720054626465
    6. '(s' → logprob: -9.868720054626465
    7. '(text' → logprob: -10.743720054626465
    8. '(rows' → logprob: -10.993720054626465
    9. '():' → logprob: -11.368720054626465
    10. '(row' → logprob: -11.368720054626465

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.360996485454962e-05
    2. '   ' → logprob: -11.0000638961792
    3. ',start' → logprob: -11.1250638961792
    4. '):' → logprob: -11.7500638961792
    5. ',line' → logprob: -11.7500638961792
    6. ' ,' → logprob: -11.8750638961792
    7. ',i' → logprob: -12.5000638961792
    8. ',index' → logprob: -13.0000638961792
    9. ',n' → logprob: -13.7500638961792
    10. '):
' → logprob: -14.8750638961792

Token 565: ' base' (ID: 3611)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.5314683318138123
    2. ' top' → logprob: -1.531468391418457
    3. 'start' → logprob: -2.406468391418457
    4. 'row' → logprob: -3.656468391418457
    5. 'r' → logprob: -3.906468391418457
    6. 'i' → logprob: -3.906468391418457
    7. ' start' → logprob: -4.156468391418457
    8. 'x' → logprob: -5.656468391418457
    9. ' row' → logprob: -5.781468391418457
    10. ' r' → logprob: -6.031468391418457

Token 566: '_line' (ID: 14418)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1575208455324173
    2. '):
' → logprob: -2.4075207710266113
    3. '):' → logprob: -3.1575207710266113
    4. '   ' → logprob: -4.407520771026611
    5. ',
' → logprob: -8.15752124786377
    6. ',index' → logprob: -9.15752124786377
    7. ',start' → logprob: -9.53252124786377
    8. '):
' → logprob: -9.65752124786377
    9. ' ,' → logprob: -9.65752124786377
    10. ',line' → logprob: -9.90752124786377

Token 567: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0846104547381401
    2. '):' → logprob: -2.9596104621887207
    3. ',' → logprob: -3.7096104621887207
    4. '   ' → logprob: -5.459610462188721
    5. '_idx' → logprob: -8.459609985351562
    6. '=' → logprob: -9.334609985351562
    7. '):
' → logprob: -9.334609985351562
    8. '_index' → logprob: -10.209609985351562
    9. 'index' → logprob: -10.334609985351562
    10. '):

' → logprob: -11.334609985351562

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015097891446202993
    2. 'def' → logprob: -8.875150680541992
    3. '```' → logprob: -11.750150680541992
    4. '   ' → logprob: -13.500150680541992
    5. '       ' → logprob: -14.750150680541992
    6. ' def' → logprob: -14.875150680541992
    7. '``' → logprob: -15.625150680541992
    8. '`' → logprob: -15.750150680541992
    9. 'for' → logprob: -16.000150680541992
    10. 'data' → logprob: -16.125150680541992

Token 569: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02180718071758747
    2. ' h' → logprob: -4.5218071937561035
    3. ' top' → logprob: -5.1468071937561035
    4. 'top' → logprob: -6.8968071937561035
    5. ' cell' → logprob: -7.3968071937561035
    6. 'h' → logprob: -7.3968071937561035
    7. ' data' → logprob: -7.7718071937561035
    8. ' n' → logprob: -8.021806716918945
    9. 'data' → logprob: -8.396806716918945
    10. 'def' → logprob: -8.521806716918945

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40793630480766296
    2. ' =' → logprob: -1.2829363346099854
    3. '_idx' → logprob: -3.4079363346099854
    4. '   ' → logprob: -4.532936096191406
    5. ',' → logprob: -5.282936096191406
    6. ')' → logprob: -6.532936096191406
    7. '_' → logprob: -7.157936096191406
    8. 'def' → logprob: -7.157936096191406
    9. '_len' → logprob: -7.407936096191406
    10. '_index' → logprob: -7.407936096191406

Token 571: ' trim' (ID: 19334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5779871344566345
    2. 'trim' → logprob: -1.4529871940612793
    3. ' [' → logprob: -2.0779871940612793
    4. 'lines' → logprob: -2.9529871940612793
    5. ' trim' → logprob: -4.452987194061279
    6. ' lines' → logprob: -4.952987194061279
    7. '[line' → logprob: -5.452987194061279
    8. '[l' → logprob: -6.577987194061279
    9. '[list' → logprob: -6.827987194061279
    10. '[data' → logprob: -7.952987194061279

Token 572: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -1.3306015716807451e-05
    2. '([' → logprob: -11.37501335144043
    3. 'lines' → logprob: -14.12501335144043
    4. '(line' → logprob: -14.75001335144043
    5. '(list' → logprob: -16.00001335144043
    6. ' lines' → logprob: -16.00001335144043
    7. ' (' → logprob: -16.25001335144043
    8. '(' → logprob: -16.25001335144043
    9. '(data' → logprob: -17.00001335144043
    10. '(
' → logprob: -17.50001335144043

Token 573: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0232709851115942
    2. ')
' → logprob: -3.773271083831787
    3. '   ' → logprob: -11.648270606994629
    4. ')

' → logprob: -12.398270606994629
    5. ')
' → logprob: -12.398270606994629
    6. ' )' → logprob: -12.523270606994629
    7. '[:' → logprob: -13.898270606994629
    8. '[' → logprob: -14.398270606994629
    9. 'def' → logprob: -14.523270606994629
    10. '
' → logprob: -14.773270606994629

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016885438933968544
    2. '
' → logprob: -4.641885280609131
    3. 'if' → logprob: -5.391885280609131
    4. '    
' → logprob: -6.391885280609131
    5. ' if' → logprob: -7.141885280609131
    6. 'def' → logprob: -11.141885757446289
    7. 'h' → logprob: -11.141885757446289
    8. 'for' → logprob: -11.391885757446289
    9. ',' → logprob: -11.516885757446289
    10. ' 
' → logprob: -12.391885757446289

Token 575: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8866316080093384
    2. ' if' → logprob: -1.1366316080093384
    3. 'if' (adapté à ' if') → logprob: -1.5116316080093384
    4. 'h' → logprob: -3.511631488800049
    5. ' h' → logprob: -4.136631488800049
    6. '
' → logprob: -8.261631965637207
    7. 'n' → logprob: -8.886631965637207
    8. 'height' → logprob: -9.511631965637207
    9. 'for' → logprob: -10.011631965637207
    10. 'cell' → logprob: -10.511631965637207

Token 576: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.049141138792037964
    2. 'not' → logprob: -3.0491411685943604
    3. 'len' → logprob: -8.299140930175781
    4. ' len' → logprob: -8.299140930175781
    5. ' lines' → logprob: -10.424140930175781
    6. 'lines' → logprob: -10.799140930175781
    7. ' base' → logprob: -12.674140930175781
    8. 'base' → logprob: -13.299140930175781
    9. ' ' → logprob: -13.924140930175781
    10. '   ' → logprob: -16.29914093017578

Token 577: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -7.822646693966817e-06
    2. 'lines' → logprob: -11.875007629394531
    3. ' lines' → logprob: -15.375007629394531
    4. '(' → logprob: -15.500007629394531
    5. '(line' → logprob: -15.500007629394531
    6. '(data' → logprob: -16.12500762939453
    7. '	lines' → logprob: -17.25000762939453
    8. 's' → logprob: -18.75000762939453
    9. '(rows' → logprob: -19.00000762939453
    10. '[' → logprob: -19.12500762939453

Token 578: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013413269072771072
    2. ')==' → logprob: -4.638413429260254
    3. '[' → logprob: -5.763413429260254
    4. '==' → logprob: -7.763413429260254
    5. ' ==' → logprob: -10.013413429260254
    6. ' )' → logprob: -11.013413429260254
    7. ')<' → logprob: -11.388413429260254
    8. ')>' → logprob: -12.513413429260254
    9. '0' → logprob: -12.763413429260254
    10. '```' → logprob: -13.013413429260254

Token 579: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07892151176929474
    2. ' ==' → logprob: -2.5789215564727783
    3. '<' → logprob: -11.7039213180542
    4. '<=' → logprob: -12.2039213180542
    5. ')==' → logprob: -12.5789213180542
    6. '==
' → logprob: -12.8289213180542
    7. '=' → logprob: -12.9539213180542
    8. '0' → logprob: -13.0789213180542
    9. '()==' → logprob: -13.0789213180542
    10. ')' → logprob: -13.4539213180542

Token 580: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.0391463193809614e-05
    2. '1' → logprob: -10.000060081481934
    3. ' ' → logprob: -11.125060081481934
    4. '   ' → logprob: -16.50006103515625
    5. '```' → logprob: -17.62506103515625
    6. '=' → logprob: -19.75006103515625
    7. '۰' → logprob: -20.00006103515625
    8. '
' → logprob: -20.00006103515625
    9. ')' → logprob: -20.25006103515625
    10. '  ' → logprob: -20.62506103515625

Token 581: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.558399319241289e-05
    2. '1' → logprob: -11.125025749206543
    3. ' ' → logprob: -11.500025749206543
    4. '```' → logprob: -14.750025749206543
    5. '
' → logprob: -16.125024795532227
    6. '[' → logprob: -17.375024795532227
    7. '   ' → logprob: -17.750024795532227
    8. ')' → logprob: -17.875024795532227
    9. '=' → logprob: -18.375024795532227
    10. '۰' → logprob: -18.625024795532227

Token 582: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.21850217878818512
    2. 'or' → logprob: -1.718502163887024
    3. ':' → logprob: -4.968502044677734
    4. ':
' → logprob: -5.218502044677734
    5. ':return' → logprob: -5.593502044677734
    6. '   ' → logprob: -7.093502044677734
    7. ' ' → logprob: -11.593502044677734
    8. '	or' → logprob: -12.343502044677734
    9. 'return' → logprob: -12.843502044677734
    10. '  ' → logprob: -13.343502044677734

Token 583: ' all' (ID: 722)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.11818475276231766
    2. 'all' → logprob: -2.243184804916382
    3. 'len' → logprob: -6.368184566497803
    4. '(lines' → logprob: -6.618184566497803
    5. ' lines' → logprob: -6.868184566497803
    6. 'not' → logprob: -7.243184566497803
    7. ' all' → logprob: -7.868184566497803
    8. '(all' → logprob: -9.743185043334961
    9. ' not' → logprob: -9.868185043334961
    10. ' (' → logprob: -11.243185043334961

Token 584: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.25567153096199036
    2. '(c' → logprob: -1.755671501159668
    3. '(len' → logprob: -3.755671501159668
    4. '(row' → logprob: -4.255671501159668
    5. 'all' → logprob: -5.005671501159668
    6. '(all' → logprob: -5.755671501159668
    7. '(not' → logprob: -6.130671501159668
    8. 'line' → logprob: -6.755671501159668
    9. '(l' → logprob: -7.005671501159668
    10. 'c' → logprob: -8.255671501159668

Token 585: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16282686591148376
    2. ' ==' → logprob: -1.9128268957138062
    3. '.strip' → logprob: -6.537827014923096
    4. '.' → logprob: -6.787827014923096
    5. '=='' → logprob: -11.912826538085938
    6. '   ' → logprob: -12.037826538085938
    7. ')==' → logprob: -13.287826538085938
    8. '=' → logprob: -13.287826538085938
    9. 'strip' → logprob: -13.662826538085938
    10. ' ' → logprob: -13.787826538085938

Token 586: ' ''' (ID: 8686)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0004271004581823945
    2. ''.' → logprob: -8.25042724609375
    3. '""' → logprob: -8.75042724609375
    4. '''.' → logprob: -12.50042724609375
    5. ' ''' → logprob: -13.25042724609375
    6. ''' → logprob: -13.75042724609375
    7. '''
' → logprob: -14.25042724609375
    8. '"' → logprob: -16.50042724609375
    9. '"."' → logprob: -16.62542724609375
    10. ''',' → logprob: -16.75042724609375

Token 587: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20163153111934662
    2. 'for' → logprob: -1.7016315460205078
    3. ' or' → logprob: -8.701631546020508
    4. 'or' → logprob: -10.451631546020508
    5. '   ' → logprob: -12.201631546020508
    6. ')' → logprob: -12.201631546020508
    7. '    ' → logprob: -12.201631546020508
    8. ' ' → logprob: -13.451631546020508
    9. '       ' → logprob: -13.826631546020508
    10. '	for' → logprob: -13.826631546020508

Token 588: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00317783304490149
    2. ' line' → logprob: -5.753177642822266
    3. 'lines' → logprob: -17.003177642822266
    4. '	line' → logprob: -17.878177642822266
    5. '#line' → logprob: -18.503177642822266
    6. '(line' → logprob: -18.753177642822266
    7. ' ' → logprob: -19.503177642822266
    8. 'l' → logprob: -20.128177642822266
    9. '
' → logprob: -20.753177642822266
    10. '   ' → logprob: -20.878177642822266

Token 589: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12771204113960266
    2. 'in' → logprob: -2.1277120113372803
    3. 'line' → logprob: -7.377712249755859
    4. 'lines' → logprob: -8.87771224975586
    5. ' line' → logprob: -11.12771224975586
    6. ' lines' → logprob: -13.00271224975586
    7. ' ' → logprob: -13.87771224975586
    8. '   ' → logprob: -14.50271224975586
    9. '
' → logprob: -16.62771224975586
    10. '(line' → logprob: -16.75271224975586

Token 590: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.001502598519437015
    2. ' lines' → logprob: -6.501502513885498
    3. 'line' → logprob: -15.501502990722656
    4. '	lines' → logprob: -17.251502990722656
    5. '(lines' → logprob: -17.626502990722656
    6. '   ' → logprob: -17.751502990722656
    7. ' ' → logprob: -18.001502990722656
    8. '
' → logprob: -18.626502990722656
    9. '.lines' → logprob: -19.876502990722656
    10. 'lin' → logprob: -19.876502990722656

Token 591: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02364909090101719
    2. '):' → logprob: -3.773648977279663
    3. '   ' → logprob: -7.898649215698242
    4. '):
' → logprob: -10.898649215698242
    5. ')' → logprob: -11.773649215698242
    6. '       ' → logprob: -12.523649215698242
    7. '):

' → logprob: -14.273649215698242
    8. ' ):
' → logprob: -14.648649215698242
    9. ':' → logprob: -14.773649215698242
    10. ''):
' → logprob: -15.148649215698242

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006582272471860051
    2. '   ' → logprob: -7.50065803527832
    3. ':' → logprob: -10.00065803527832
    4. ':
' → logprob: -11.00065803527832
    5. ' return' → logprob: -11.12565803527832
    6. ',' → logprob: -11.12565803527832
    7. '
' → logprob: -12.50065803527832
    8. 'return' → logprob: -13.12565803527832
    9. ':return' → logprob: -13.12565803527832
    10. '):
' → logprob: -13.75065803527832

Token 593: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.907738447189331
    2. ' return' → logprob: -1.157738447189331
    3. '       ' → logprob: -1.407738447189331
    4. '   ' → logprob: -3.282738447189331
    5. '
' → logprob: -9.03273868560791
    6. ' ' → logprob: -11.53273868560791
    7. '	return' → logprob: -11.90773868560791
    8. '    ' → logprob: -12.78273868560791
    9. '  ' → logprob: -13.53273868560791
    10. '           ' → logprob: -13.53273868560791

Token 594: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.01252154540270567
    2. 'None' → logprob: -4.387521743774414
    3. '
' → logprob: -11.637521743774414
    4. ' ' → logprob: -13.887521743774414
    5. ' 
' → logprob: -14.262521743774414
    6. '(None' → logprob: -14.887521743774414
    7. ',None' → logprob: -15.012521743774414
    8. ' Cell' → logprob: -15.512521743774414
    9. ' none' → logprob: -15.762521743774414
    10. ' N' → logprob: -15.887521743774414

Token 595: ',None' (ID: 186897)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6010043025016785
    2. '   ' → logprob: -0.8510043025016785
    3. '    
' → logprob: -3.7260043621063232
    4. ',' → logprob: -7.976004123687744
    5. ',
' → logprob: -8.726004600524902
    6. '        
' → logprob: -10.101004600524902
    7. '  
' → logprob: -10.601004600524902
    8. ' 
' → logprob: -10.726004600524902
    9. '
' → logprob: -11.101004600524902
    10. '```' → logprob: -11.101004600524902

Token 596: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07248954474925995
    2. '   ' → logprob: -2.9474895000457764
    3. '    
' → logprob: -4.4474897384643555
    4. ',' → logprob: -5.3224897384643555
    5. ',
' → logprob: -7.1974897384643555
    6. '  
' → logprob: -10.697489738464355
    7. '
' → logprob: -10.822489738464355
    8. '        
' → logprob: -10.947489738464355
    9. '

' → logprob: -11.197489738464355
    10. '   
' → logprob: -11.697489738464355

Token 597: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22164538502693176
    2. '   ' → logprob: -1.7216453552246094
    3. '    
' → logprob: -4.471645355224609
    4. ',' → logprob: -5.346645355224609
    5. ',
' → logprob: -5.721645355224609
    6. '
' → logprob: -8.59664535522461
    7. '  
' → logprob: -9.22164535522461
    8. ' 
' → logprob: -9.22164535522461
    9. '        
' → logprob: -10.47164535522461
    10. '   
' → logprob: -10.84664535522461

Token 598: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.849928081035614
    2. ' top' → logprob: -1.3499281406402588
    3. ' cell' → logprob: -2.349928140640259
    4. ' data' → logprob: -2.724928140640259
    5. 'cell' → logprob: -3.224928140640259
    6. 'top' → logprob: -3.599928140640259
    7. ' if' → logprob: -4.09992790222168
    8. 'data' → logprob: -4.34992790222168
    9. ' h' → logprob: -4.47492790222168
    10. ' base' → logprob: -4.72492790222168

Token 599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38968273997306824
    2. '=' → logprob: -1.1396827697753906
    3. ',' → logprob: -6.264682769775391
    4. '   ' → logprob: -7.139682769775391
    5. ' =
' → logprob: -10.13968276977539
    6. '=len' → logprob: -11.13968276977539
    7. '=
' → logprob: -11.26468276977539
    8. ' ' → logprob: -11.51468276977539
    9. '    ' → logprob: -11.88968276977539
    10. ')' → logprob: -12.13968276977539

Token 600: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889242470264435
    2. ' len' → logprob: -2.578892469406128
    3. '   ' → logprob: -13.078892707824707
    4. '(len' → logprob: -15.203892707824707
    5. '[len' → logprob: -15.828892707824707
    6. '=len' → logprob: -16.32889175415039
    7. ' ' → logprob: -16.57889175415039
    8. '	len' → logprob: -17.82889175415039
    9. '
' → logprob: -18.20389175415039
    10. ',len' → logprob: -18.95389175415039

Token 601: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -4.961759259458631e-06
    2. 'lines' → logprob: -12.375004768371582
    3. ' lines' → logprob: -14.500004768371582
    4. '(' → logprob: -16.3750057220459
    5. '(data' → logprob: -17.7500057220459
    6. '(rows' → logprob: -17.7500057220459
    7. '	lines' → logprob: -17.7500057220459
    8. '(line' → logprob: -18.2500057220459
    9. 'Lines' → logprob: -19.2500057220459
    10. '(
' → logprob: -19.3750057220459

Token 602: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4290820062160492
    2. ')
' → logprob: -1.0540820360183716
    3. '   ' → logprob: -8.054081916809082
    4. 'def' → logprob: -11.054081916809082
    5. ' )' → logprob: -11.804081916809082
    6. ' )
' → logprob: -11.929081916809082
    7. '[' → logprob: -11.929081916809082
    8. ')#' → logprob: -11.929081916809082
    9. ')
' → logprob: -12.429081916809082
    10. ')

' → logprob: -12.554081916809082

Token 603: '   ' (ID: 271)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4024263918399811
    2. '   ' → logprob: -1.1524263620376587
    3. ' w' → logprob: -4.277426242828369
    4. '
' → logprob: -6.527426242828369
    5. '```' → logprob: -10.777426719665527
    6. ',' → logprob: -10.902426719665527
    7. ',w' → logprob: -11.027426719665527
    8. '	w' → logprob: -11.027426719665527
    9. 'W' → logprob: -12.402426719665527
    10. '    
' → logprob: -12.652426719665527

Token 604: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.023476533591747284
    2. ' w' → logprob: -3.7734766006469727
    3. '   ' → logprob: -8.898476600646973
    4. 'if' → logprob: -10.898476600646973
    5. ' if' → logprob: -11.023476600646973
    6. 'for' → logprob: -11.648476600646973
    7. '
' → logprob: -11.773476600646973
    8. ' for' → logprob: -12.023476600646973
    9. ' top' → logprob: -12.148476600646973
    10. 'top' → logprob: -12.523476600646973

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931610703468323
    2. ' =' → logprob: -0.6931610703468323
    3. '=len' → logprob: -12.068161010742188
    4. ',' → logprob: -12.943161010742188
    5. '=w' → logprob: -13.443161010742188
    6. ' ' → logprob: -13.818161010742188
    7. 's' → logprob: -14.818161010742188
    8. ' =
' → logprob: -14.818161010742188
    9. '<|end|>' → logprob: -15.068161010742188
    10. 'w' → logprob: -15.318161010742188

Token 606: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00033558503491804004
    2. ' len' → logprob: -8.000335693359375
    3. 'max' → logprob: -16.500335693359375
    4. '(len' → logprob: -18.375335693359375
    5. '   ' → logprob: -18.875335693359375
    6. '[len' → logprob: -19.875335693359375
    7. ' ' → logprob: -20.750335693359375
    8. '
' → logprob: -22.000335693359375
    9. '0' → logprob: -22.250335693359375
    10. '	len' → logprob: -22.500335693359375

Token 607: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -9.639096970204264e-05
    2. 'lines' → logprob: -9.250096321105957
    3. ' lines' → logprob: -15.750096321105957
    4. '	lines' → logprob: -18.500097274780273
    5. '(line' → logprob: -19.000097274780273
    6. '(rows' → logprob: -20.375097274780273
    7. '(' → logprob: -20.375097274780273
    8. '(trim' → logprob: -20.625097274780273
    9. '.lines' → logprob: -21.000097274780273
    10. '(data' → logprob: -21.250097274780273

Token 608: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4855663721391466e-05
    2. ')' → logprob: -11.750015258789062
    3. '   ' → logprob: -12.500015258789062
    4. ')
' → logprob: -13.750015258789062
    5. 'lines' → logprob: -14.000015258789062
    6. '(lines' → logprob: -15.375015258789062
    7. '[-' → logprob: -15.500015258789062
    8. '(' → logprob: -15.625015258789062
    9. ' lines' → logprob: -16.000015258789062
    10. 'def' → logprob: -16.125015258789062

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.839121826691553e-05
    2. 'lines' → logprob: -9.875078201293945
    3. '[' → logprob: -11.250078201293945
    4. ' ' → logprob: -11.375078201293945
    5. ' lines' → logprob: -13.625078201293945
    6. '(lines' → logprob: -14.625078201293945
    7. ')' → logprob: -15.500078201293945
    8. ']' → logprob: -15.500078201293945
    9. '   ' → logprob: -15.750078201293945
    10. '(' → logprob: -16.750078201293945

Token 610: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04116439446806908
    2. ')' → logprob: -3.7911643981933594
    3. '])
' → logprob: -4.166164398193359
    4. ')
' → logprob: -6.541164398193359
    5. ')])' → logprob: -7.916164398193359
    6. ')]' → logprob: -8.16616439819336
    7. '   ' → logprob: -9.79116439819336
    8. 'def' → logprob: -10.66616439819336
    9. ' ])' → logprob: -11.16616439819336
    10. ''])' → logprob: -11.41616439819336

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06268597394227982
    2. '
' → logprob: -3.062685966491699
    3. '    
' → logprob: -4.562685966491699
    4. ' if' → logprob: -6.937685966491699
    5. 'data' → logprob: -7.187685966491699
    6. 'def' → logprob: -7.937685966491699
    7. 'if' → logprob: -7.937685966491699
    8. '```' → logprob: -7.937685966491699
    9. ' 
' → logprob: -9.3126859664917
    10. '  
' → logprob: -9.4376859664917

Token 612: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.188419222831726
    2. ' data' → logprob: -1.313419222831726
    3. 'data' → logprob: -1.438419222831726
    4. ' return' → logprob: -3.6884193420410156
    5. 'return' → logprob: -3.8134193420410156
    6. ' top' → logprob: -3.9384193420410156
    7. ' cells' → logprob: -4.313419342041016
    8. '
' → logprob: -4.563419342041016
    9. ' prefix' → logprob: -4.688419342041016
    10. 'top' → logprob: -4.813419342041016

Token 613: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4479522407054901
    2. 'for' → logprob: -2.0729522705078125
    3. 'top' → logprob: -2.3229522705078125
    4. 'data' → logprob: -2.9479522705078125
    5. '#' → logprob: -3.0729522705078125
    6. 'cells' → logprob: -4.4479522705078125
    7. 'line' → logprob: -5.9479522705078125
    8. 'def' → logprob: -6.3229522705078125
    9. 'values' → logprob: -6.4479522705078125
    10. 'return' → logprob: -6.4479522705078125

Token 614: ' single' (ID: 4590)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.146241545677185
    2. ' w' → logprob: -1.396241545677185
    3. ' h' → logprob: -2.1462416648864746
    4. 'h' → logprob: -2.1462416648864746
    5. ' all' → logprob: -2.1462416648864746
    6. ' lines' → logprob: -2.8962416648864746
    7. 'lines' → logprob: -4.646241664886475
    8. 'all' → logprob: -5.021241664886475
    9. ' any' → logprob: -5.271241664886475
    10. ' not' → logprob: -6.396241664886475

Token 615: ' character' (ID: 5855)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7510377168655396
    2. 'line' → logprob: -1.7510377168655396
    3. ' if' → logprob: -2.37603759765625
    4. 'if' → logprob: -2.62603759765625
    5. 'def' → logprob: -3.50103759765625
    6. ' cell' → logprob: -3.87603759765625
    7. 'len' → logprob: -3.87603759765625
    8. 'import' → logprob: -4.25103759765625
    9. '
' → logprob: -4.37603759765625
    10. 'char' → logprob: -4.50103759765625

Token 616: ' cell' (ID: 4206)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2619505822658539
    2. ' ==' → logprob: -2.5119504928588867
    3. '==' → logprob: -3.2619504928588867
    4. 'and' → logprob: -3.3869504928588867
    5. 'if' → logprob: -3.5119504928588867
    6. ' if' → logprob: -3.7619504928588867
    7. '   ' → logprob: -4.636950492858887
    8. ':' → logprob: -4.761950492858887
    9. ':
' → logprob: -6.011950492858887
    10. ',' → logprob: -6.886950492858887

Token 617: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42626237869262695
    2. ' and' → logprob: -1.301262378692627
    3. ':' → logprob: -3.676262378692627
    4. ' ==' → logprob: -4.051262378692627
    5. ' if' → logprob: -4.301262378692627
    6. 'and' → logprob: -4.926262378692627
    7. '==' → logprob: -5.551262378692627
    8. 'if' → logprob: -6.051262378692627
    9. ',' → logprob: -6.301262378692627
    10. '       ' → logprob: -6.551262378692627

Token 618: 'terminal' (ID: 71025)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5242111682891846
    2. ')' → logprob: -1.2742111682891846
    3. ' lines' → logprob: -3.0242111682891846
    4. 'lines' → logprob: -3.8992111682891846
    5. 'h' → logprob: -4.2742109298706055
    6. ' and' → logprob: -4.7742109298706055
    7. '
' → logprob: -4.8992109298706055
    8. ' w' → logprob: -5.1492109298706055
    9. '),' → logprob: -5.1492109298706055
    10. 'and' → logprob: -5.5242109298706055

Token 619: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9869035482406616
    2. '):
' → logprob: -1.1119035482406616
    3. ')' → logprob: -1.9869035482406616
    4. ' and' → logprob: -2.861903667449951
    5. ' or' → logprob: -2.861903667449951
    6. ' ):
' → logprob: -4.861903667449951
    7. '),' → logprob: -5.111903667449951
    8. ' token' → logprob: -5.111903667449951
    9. '   ' → logprob: -5.236903667449951
    10. ' )' → logprob: -5.486903667449951

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0721091777086258
    2. ' if' → logprob: -2.9471092224121094
    3. 'if' → logprob: -4.572109222412109
    4. ' and' → logprob: -5.322109222412109
    5. ',' → logprob: -7.197109222412109
    6. '       ' → logprob: -7.572109222412109
    7. ':' → logprob: -8.19710922241211
    8. 'and' → logprob: -8.44710922241211
    9. ' or' → logprob: -10.82210922241211
    10. ':
' → logprob: -11.32210922241211

Token 621: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5890812277793884
    2. ' if' → logprob: -0.8390812277793884
    3. '   ' → logprob: -4.339081287384033
    4. ' ' → logprob: -12.589080810546875
    5. '	if' → logprob: -13.964080810546875
    6. '       ' → logprob: -14.589080810546875
    7. ' i' → logprob: -14.714080810546875
    8. '  ' → logprob: -14.714080810546875
    9. ',' → logprob: -15.339080810546875
    10. 'If' → logprob: -15.339080810546875

Token 622: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20839214324951172
    2. ' h' → logprob: -1.7083921432495117
    3. 'w' → logprob: -5.333392143249512
    4. ' w' → logprob: -6.208392143249512
    5. ' lines' → logprob: -10.583392143249512
    6. 'len' → logprob: -10.958392143249512
    7. ' (' → logprob: -11.083392143249512
    8. '(h' → logprob: -11.333392143249512
    9. ' ' → logprob: -11.333392143249512
    10. ' len' → logprob: -11.458392143249512

Token 623: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07002601772546768
    2. ' ==' → logprob: -2.69502592086792
    3. '<=' → logprob: -10.320026397705078
    4. '1' → logprob: -10.820026397705078
    5. '[' → logprob: -11.195026397705078
    6. '==
' → logprob: -11.820026397705078
    7. '```' → logprob: -12.695026397705078
    8. '()==' → logprob: -12.820026397705078
    9. '=' → logprob: -13.070026397705078
    10. ' <=' → logprob: -13.070026397705078

Token 624: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.794061770662665e-05
    2. ' ' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.62509822845459
    4. '
' → logprob: -14.87509822845459
    5. '=' → logprob: -17.375097274780273
    6. '```' → logprob: -17.937597274780273
    7. '0' → logprob: -18.000097274780273
    8. '  ' → logprob: -18.062597274780273
    9. 'def' → logprob: -18.437597274780273
    10. '...' → logprob: -18.750097274780273

Token 625: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '
' → logprob: -15.875075340270996
    4. '=' → logprob: -16.25007438659668
    5. '   ' → logprob: -17.12507438659668
    6. '```' → logprob: -18.50007438659668
    7. '...' → logprob: -19.12507438659668
    8. '0' → logprob: -19.37507438659668
    9. 'def' → logprob: -19.50007438659668
    10. '  ' → logprob: -19.68757438659668

Token 626: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25193583965301514
    2. 'and' → logprob: -1.5019358396530151
    3. '==' → logprob: -12.626935958862305
    4. '   ' → logprob: -13.376935958862305
    5. '	and' → logprob: -14.001935958862305
    6. ' ' → logprob: -14.626935958862305
    7. ':' → logprob: -16.001935958862305
    8. '=' → logprob: -16.251935958862305
    9. ' и' → logprob: -16.376935958862305
    10. ')' → logprob: -16.376935958862305

Token 627: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04300946369767189
    2. ' w' → logprob: -3.1680095195770264
    3. 'len' → logprob: -12.168009757995605
    4. 'lines' → logprob: -13.418009757995605
    5. ' ' → logprob: -13.543009757995605
    6. ' lines' → logprob: -14.168009757995605
    7. '   ' → logprob: -15.043009757995605
    8. '
' → logprob: -15.168009757995605
    9. '(w' → logprob: -15.543009757995605
    10. 'line' → logprob: -15.668009757995605

Token 628: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4287220239639282
    2. '==' → logprob: -1.0537220239639282
    3. ' <=' → logprob: -11.428722381591797
    4. '<=' → logprob: -12.178722381591797
    5. '1' → logprob: -13.053722381591797
    6. ' ' → logprob: -14.053722381591797
    7. '==
' → logprob: -14.553722381591797
    8. '=' → logprob: -15.178722381591797
    9. '```' → logprob: -15.178722381591797
    10. '===' → logprob: -15.178722381591797

Token 629: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019305398454889655
    2. ' ' → logprob: -6.2519307136535645
    3. '   ' → logprob: -14.001930236816406
    4. '
' → logprob: -15.564430236816406
    5. '```' → logprob: -15.876930236816406
    6. 'len' → logprob: -16.001930236816406
    7. '0' → logprob: -16.189430236816406
    8. '  ' → logprob: -16.314430236816406
    9. ' ' → logprob: -16.501930236816406
    10. '2' → logprob: -16.939430236816406

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005564896273426712
    2. ' ' → logprob: -7.500556468963623
    3. '   ' → logprob: -14.375556945800781
    4. '
' → logprob: -14.938056945800781
    5. 'len' → logprob: -15.125556945800781
    6. '0' → logprob: -15.313056945800781
    7. '2' → logprob: -15.313056945800781
    8. '```' → logprob: -15.375556945800781
    9. '3' → logprob: -15.438056945800781
    10. '  ' → logprob: -15.875556945800781

Token 631: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6547359824180603
    2. ' and' → logprob: -1.029736042022705
    3. '       ' → logprob: -2.529736042022705
    4. ':' → logprob: -3.529736042022705
    5. 'and' → logprob: -5.029736042022705
    6. '   ' → logprob: -5.404736042022705
    7. ':return' → logprob: -5.779736042022705
    8. '):
' → logprob: -10.029735565185547
    9. ':
' → logprob: -10.404735565185547
    10. ',' → logprob: -10.404735565185547

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011612925445660949
    2. ' return' → logprob: -7.501161098480225
    3. '   ' → logprob: -8.501161575317383
    4. 'return' → logprob: -9.001161575317383
    5. ':
' → logprob: -9.001161575317383
    6. ':' → logprob: -9.126161575317383
    7. ',' → logprob: -11.376161575317383
    8. '
' → logprob: -11.751161575317383
    9. ':return' → logprob: -12.001161575317383
    10. '           ' → logprob: -12.251161575317383

Token 633: ' ch' (ID: 549)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03173799440264702
    2. '       ' → logprob: -3.781738042831421
    3. ' return' → logprob: -6.156737804412842
    4. 'if' → logprob: -6.281737804412842
    5. 'ch' (adapté à ' ch') → logprob: -6.906737804412842
    6. '
' → logprob: -6.906737804412842
    7. 'c' → logprob: -7.031737804412842
    8. 'value' → logprob: -7.656737804412842
    9. 'char' → logprob: -8.03173828125
    10. '   ' → logprob: -8.15673828125

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939953327179
    2. '=' → logprob: -0.825939953327179
    3. ',' → logprob: -15.575940132141113
    4. '=line' → logprob: -16.575939178466797
    5. ' ' → logprob: -16.700939178466797
    6. ')' → logprob: -16.825939178466797
    7. '=
' → logprob: -16.950939178466797
    8. ' =
' → logprob: -17.200939178466797
    9. '＝' → logprob: -18.200939178466797
    10. 's' → logprob: -18.200939178466797

Token 635: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.004623322281986475
    2. ' lines' → logprob: -5.3796234130859375
    3. '   ' → logprob: -13.254623413085938
    4. '	lines' → logprob: -14.379623413085938
    5. 'line' → logprob: -15.004623413085938
    6. '(lines' → logprob: -15.129623413085938
    7. '
' → logprob: -16.379623413085938
    8. ' ' → logprob: -17.129623413085938
    9. '.lines' → logprob: -18.129623413085938
    10. '`' → logprob: -18.379623413085938

Token 636: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014215784904081374
    2. '0' → logprob: -9.000142097473145
    3. '
' → logprob: -12.500142097473145
    4. '=' → logprob: -12.750142097473145
    5. 'def' → logprob: -12.875142097473145
    6. 's' → logprob: -13.250142097473145
    7. ' [' → logprob: -13.250142097473145
    8. ' ' → logprob: -13.875142097473145
    9. '```' → logprob: -13.875142097473145
    10. '[
' → logprob: -14.125142097473145

Token 637: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.670925358776003e-05
    2. '[' → logprob: -10.125066757202148
    3. ' ' → logprob: -10.625066757202148
    4. '   ' → logprob: -14.312566757202148
    5. '
' → logprob: -15.312566757202148
    6. '-' → logprob: -15.375066757202148
    7. '00' → logprob: -15.937566757202148
    8. 'def' → logprob: -16.00006675720215
    9. '```' → logprob: -16.06256675720215
    10. ')' → logprob: -16.37506675720215

Token 638: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00976919662207365
    2. '][' → logprob: -4.634768962860107
    3. '0' → logprob: -12.634769439697266
    4. ']' → logprob: -12.759769439697266
    5. ',' → logprob: -13.134769439697266
    6. '
' → logprob: -13.259769439697266
    7. ')[' → logprob: -14.009769439697266
    8. ' [' → logprob: -14.134769439697266
    9. '   ' → logprob: -15.259769439697266
    10. '```' → logprob: -15.384769439697266

Token 639: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -14.87501049041748
    4. '۰' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.750011444091797
    6. '[' → logprob: -17.375011444091797
    7. ')' → logprob: -17.375011444091797
    8. '```' → logprob: -17.750011444091797
    9. ']' → logprob: -17.812511444091797
    10. '  ' → logprob: -18.125011444091797

Token 640: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.05664480850100517
    2. ']' → logprob: -2.931644916534424
    3. ')
' → logprob: -6.556644916534424
    4. ')' → logprob: -8.556644439697266
    5. '       ' → logprob: -9.806644439697266
    6. ']
' → logprob: -10.681644439697266
    7. '
' → logprob: -11.181644439697266
    8. ' ]
' → logprob: -11.556644439697266
    9. '   ' → logprob: -11.681644439697266
    10. '])
' → logprob: -12.181644439697266

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005372964311391115
    2. '
' → logprob: -5.505373001098633
    3. ',' → logprob: -7.755373001098633
    4. '<|end|>' → logprob: -7.755373001098633
    5. '           ' → logprob: -9.755373001098633
    6. ' if' → logprob: -9.880373001098633
    7. '        
' → logprob: -9.880373001098633
    8. ':
' → logprob: -9.880373001098633
    9. 'return' → logprob: -10.255373001098633
    10. '   ' → logprob: -10.380373001098633

Token 642: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5801581144332886
    2. 'return' → logprob: -0.8301581144332886
    3. '       ' → logprob: -6.455158233642578
    4. ' if' → logprob: -6.580158233642578
    5. ' return' → logprob: -7.330158233642578
    6. '   ' → logprob: -8.080158233642578
    7. 'cell' → logprob: -8.580158233642578
    8. 'data' → logprob: -10.205158233642578
    9. 'try' → logprob: -10.580158233642578
    10. '#' → logprob: -11.955158233642578

Token 643: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.002488022670149803
    2. ' ch' → logprob: -6.127488136291504
    3. ''ch' → logprob: -8.377488136291504
    4. ''' → logprob: -10.252488136291504
    5. 'not' → logprob: -11.002488136291504
    6. 'c' → logprob: -11.377488136291504
    7. ' not' → logprob: -12.877488136291504
    8. ''.' → logprob: -13.502488136291504
    9. '(ch' → logprob: -13.877488136291504
    10. '	ch' → logprob: -14.127488136291504

Token 644: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8218113780021667
    2. '==' → logprob: -0.9468113780021667
    3. ' ==' → logprob: -2.1968114376068115
    4. '.is' → logprob: -3.4468114376068115
    5. 'in' → logprob: -4.571811199188232
    6. ' not' → logprob: -5.321811199188232
    7. '>=' → logprob: -5.446811199188232
    8. '=='' → logprob: -5.821811199188232
    9. 'isdigit' → logprob: -6.196811199188232
    10. '.' → logprob: -6.696811199188232

Token 645: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.027425173670053482
    2. ''+' → logprob: -3.6524252891540527
    3. '('' → logprob: -7.777425289154053
    4. '"' → logprob: -8.527424812316895
    5. ''*' → logprob: -8.652424812316895
    6. ' '' → logprob: -8.902424812316895
    7. '['' → logprob: -9.652424812316895
    8. ''-' → logprob: -10.527424812316895
    9. ''^' → logprob: -11.027424812316895
    10. ''A' → logprob: -11.277424812316895

Token 646: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.02007533609867096
    2. '123' → logprob: -4.52007532119751
    3. '+-' → logprob: -5.14507532119751
    4. '()+' → logprob: -6.89507532119751
    5. '01' → logprob: -7.14507532119751
    6. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -7.89507532119751
    7. '+' → logprob: -8.270075798034668
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -8.770075798034668
    9. '()' → logprob: -9.395075798034668
    10. '-' → logprob: -9.395075798034668

Token 647: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -4.127333340875339e-06
    2. '012' → logprob: -12.875003814697266
    3. '3' → logprob: -14.000003814697266
    4. '34' → logprob: -14.875003814697266
    5. '346' → logprob: -16.000003814697266
    6. '
' → logprob: -17.500003814697266
    7. '789' → logprob: -17.625003814697266
    8. '456' → logprob: -17.625003814697266
    9. '347' → logprob: -18.125003814697266
    10. '234' → logprob: -18.125003814697266

Token 648: '678' (ID: 30833)
  Prédit: '678'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '678' → logprob: -0.00019185843120794743
    2. '789' → logprob: -8.875191688537598
    3. '679' → logprob: -10.250191688537598
    4. '67' → logprob: -11.250191688537598
    5. '689' → logprob: -13.250191688537598
    6. '9' → logprob: -13.750191688537598
    7. '69' → logprob: -15.125191688537598
    8. ''''
' → logprob: -16.000192642211914
    9. '
' → logprob: -16.625192642211914
    10. '467' → logprob: -17.000192642211914

Token 649: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002655079588294029
    2. '789' → logprob: -8.750265121459961
    3. '678' → logprob: -9.250265121459961
    4. '89' → logprob: -12.875265121459961
    5. '679' → logprob: -13.125265121459961
    6. '79' → logprob: -13.250265121459961
    7. ''''
' → logprob: -13.625265121459961
    8. ''''' → logprob: -14.500265121459961
    9. '987' → logprob: -14.875265121459961
    10. '９' → logprob: -14.875265121459961

Token 650: '+-' (ID: 44764)
  Prédit: '+-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+-' → logprob: -0.5563148856163025
    2. '':
' → logprob: -1.4313149452209473
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.3063149452209473
    4. '+' → logprob: -3.5563149452209473
    5. '*/' → logprob: -4.556314945220947
    6. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -4.556314945220947
    7. '()+' → logprob: -4.931314945220947
    8. '.' → logprob: -4.931314945220947
    9. '':' → logprob: -5.181314945220947
    10. '012' → logprob: -5.431314945220947

Token 651: '*' (ID: 9)
  Prédit: '*/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*/' → logprob: -0.13944199681282043
    2. '':
' → logprob: -2.264441967010498
    3. ')' → logprob: -4.639441967010498
    4. '()' → logprob: -5.514441967010498
    5. '*' → logprob: -6.014441967010498
    6. '':' → logprob: -6.264441967010498
    7. '/*' → logprob: -6.514441967010498
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.639441967010498
    9. '*/)' → logprob: -7.014441967010498
    10. '.' → logprob: -7.139441967010498

Token 652: '().' (ID: 1454)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10795058310031891
    2. '/'' → logprob: -2.7329506874084473
    3. '/')' → logprob: -4.732950687408447
    4. '/^' → logprob: -4.857950687408447
    5. '*/' → logprob: -5.107950687408447
    6. '()/' → logprob: -5.232950687408447
    7. '()' → logprob: -5.857950687408447
    8. '/)' → logprob: -6.357950687408447
    9. '/x' → logprob: -7.482950687408447
    10. ''' → logprob: -7.607950687408447

Token 653: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.07378444075584412
    2. ')' → logprob: -3.448784351348877
    3. '*/' → logprob: -3.823784351348877
    4. '':' → logprob: -5.573784351348877
    5. ' '' → logprob: -5.948784351348877
    6. '+-' → logprob: -5.948784351348877
    7. '):
' → logprob: -6.698784351348877
    8. '()' → logprob: -6.948784351348877
    9. ''):
' → logprob: -7.073784351348877
    10. '012' → logprob: -7.323784351348877

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021906549111008644
    2. '       ' → logprob: -3.896906614303589
    3. ':
' → logprob: -7.89690637588501
    4. ':' → logprob: -7.89690637588501
    5. ':return' → logprob: -8.646906852722168
    6. '   ' → logprob: -9.021906852722168
    7. 'return' → logprob: -9.146906852722168
    8. ' return' → logprob: -9.271906852722168
    9. '          ' → logprob: -10.021906852722168
    10. '	       ' → logprob: -10.771906852722168

Token 655: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10716588795185089
    2. ' return' → logprob: -2.357165813446045
    3. '       ' → logprob: -5.232165813446045
    4. '
' → logprob: -7.357165813446045
    5. '           ' → logprob: -7.607165813446045
    6. 'data' → logprob: -8.732166290283203
    7. '   ' → logprob: -8.982166290283203
    8. 'cell' → logprob: -9.482166290283203
    9. ' data' → logprob: -10.107166290283203
    10. ' cell' → logprob: -11.232166290283203

Token 656: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.005823445040732622
    2. 'ch' → logprob: -6.130823612213135
    3. ' Cell' → logprob: -6.630823612213135
    4. '(Cell' → logprob: -6.755823612213135
    5. 'int' → logprob: -7.255823612213135
    6. '(ch' → logprob: -9.255823135375977
    7. 'lines' → logprob: -9.380823135375977
    8. 'None' → logprob: -9.755823135375977
    9. '(' → logprob: -9.880823135375977
    10. '('' → logprob: -10.255823135375977

Token 657: '(lines' (ID: 73839)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.1405411809682846
    2. '([[' → logprob: -2.5155410766601562
    3. '(lines' → logprob: -3.2655410766601562
    4. '(['' → logprob: -4.640541076660156
    5. '([(' → logprob: -6.765541076660156
    6. '[[' → logprob: -8.015541076660156
    7. '(([' → logprob: -8.015541076660156
    8. '((' → logprob: -8.765541076660156
    9. '(["' → logprob: -8.765541076660156
    10. '([\' → logprob: -9.265541076660156

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08702633529901505
    2. ',[' → logprob: -2.712026357650757
    3. '),' → logprob: -4.712026119232178
    4. ',['' → logprob: -5.337026119232178
    5. ' ,' → logprob: -7.462026119232178
    6. ',line' → logprob: -7.712026119232178
    7. ',None' → logprob: -7.712026119232178
    8. ',(' → logprob: -8.087026596069336
    9. '[' → logprob: -8.087026596069336
    10. ',data' → logprob: -8.712026596069336

Token 659: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.08404190093278885
    2. ' base' → logprob: -2.9590418338775635
    3. '1' → logprob: -4.959042072296143
    4. 'None' → logprob: -5.334042072296143
    5. '(base' → logprob: -5.459042072296143
    6. '0' → logprob: -5.834042072296143
    7. '10' → logprob: -5.959042072296143
    8. '(' → logprob: -6.459042072296143
    9. '[' → logprob: -7.084042072296143
    10. ' ' → logprob: -7.709042072296143

Token 660: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0014197572600096464
    2. ')' → logprob: -7.126419544219971
    3. 'line' → logprob: -8.001420021057129
    4. '),' → logprob: -8.751420021057129
    5. '_LINE' → logprob: -11.001420021057129
    6. ')
' → logprob: -11.376420021057129
    7. '
' → logprob: -11.501420021057129
    8. ',' → logprob: -11.501420021057129
    9. ')_' → logprob: -11.751420021057129
    10. '   ' → logprob: -12.001420021057129

Token 661: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03056176006793976
    2. ')' → logprob: -3.530561685562134
    3. '   ' → logprob: -7.780561923980713
    4. ' ),' → logprob: -8.780561447143555
    5. '       ' → logprob: -9.155561447143555
    6. ',' → logprob: -9.905561447143555
    7. ')
' → logprob: -10.280561447143555
    8. '),(' → logprob: -11.155561447143555
    9. ',),' → logprob: -11.905561447143555
    10. '  ' → logprob: -12.155561447143555

Token 662: ' ch' (ID: 549)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014357296749949455
    2. ' None' → logprob: -5.389357089996338
    3. 'False' → logprob: -6.014357089996338
    4. 'True' → logprob: -6.514357089996338
    5. 'lines' → logprob: -6.764357089996338
    6. '0' → logprob: -7.264357089996338
    7. '
' → logprob: -7.264357089996338
    8. '[]' → logprob: -7.514357089996338
    9. '(None' → logprob: -7.639357089996338
    10. 'ch' → logprob: -7.764357089996338

Token 663: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00208126287907362
    2. '<|end|>' → logprob: -7.377081394195557
    3. '
' → logprob: -7.502081394195557
    4. '   ' → logprob: -7.877081394195557
    5. '.' → logprob: -8.502080917358398
    6. 'return' → logprob: -9.502080917358398
    7. '        
' → logprob: -9.627080917358398
    8. '    
' → logprob: -10.502080917358398
    9. '	' → logprob: -10.752080917358398
    10. 'else' → logprob: -11.002080917358398

Token 664: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20814792811870575
    2. '       ' → logprob: -1.7081478834152222
    3. '    
' → logprob: -5.583148002624512
    4. '
' → logprob: -6.083148002624512
    5. '        
' → logprob: -8.583148002624512
    6. 'return' → logprob: -8.833148002624512
    7. '.' → logprob: -9.208148002624512
    8. ')' → logprob: -10.583148002624512
    9. 'else' → logprob: -10.708148002624512
    10. '    ' → logprob: -10.833148002624512

Token 665: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00342211639508605
    2. '
' → logprob: -6.628422260284424
    3. 'else' → logprob: -6.878422260284424
    4. 'return' → logprob: -7.003422260284424
    5. '       ' → logprob: -10.003421783447266
    6. 'elif' → logprob: -10.003421783447266
    7. 'if' → logprob: -10.503421783447266
    8. '    
' → logprob: -11.628421783447266
    9. ' else' → logprob: -12.003421783447266
    10. '#' (adapté à ' #') → logprob: -12.003421783447266

Token 666: ' Unknown' (ID: 41855)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0927361324429512
    2. 'else' → logprob: -2.71773624420166
    3. 'if' → logprob: -4.84273624420166
    4. 'elif' → logprob: -5.59273624420166
    5. '
' → logprob: -5.71773624420166
    6. '   ' → logprob: -5.96773624420166
    7. '#' → logprob: -6.09273624420166
    8. '       ' → logprob: -6.96773624420166
    9. 'raise' → logprob: -7.59273624420166
    10. ' return' → logprob: -7.71773624420166

Token 667: ' single' (ID: 4590)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8550369739532471
    2. '
' → logprob: -1.355036973953247
    3. 'return' → logprob: -2.605036973953247
    4. 'None' → logprob: -2.980036973953247
    5. ' else' → logprob: -3.105036973953247
    6. '   ' → logprob: -3.230036973953247
    7. ' None' → logprob: -3.230036973953247
    8. ':return' → logprob: -4.480036735534668
    9. '       ' → logprob: -4.980036735534668
    10. ' ' → logprob: -5.105036735534668

Token 668: ' char' (ID: 1826)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5977784395217896
    2. 'None' → logprob: -1.5977784395217896
    3. ' character' → logprob: -2.5977783203125
    4. ' token' → logprob: -2.8477783203125
    5. ')' → logprob: -3.5977783203125
    6. 'token' → logprob: -3.7227783203125
    7. ' cell' → logprob: -3.8477783203125
    8. 'character' → logprob: -4.0977783203125
    9. 'cell' → logprob: -5.3477783203125
    10. 'char' → logprob: -5.4727783203125

Token 669: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13834691047668457
    2. '   ' → logprob: -3.0133469104766846
    3. '
' → logprob: -3.6383469104766846
    4. '<|end|>' → logprob: -4.3883466720581055
    5. '        
' → logprob: -5.0133466720581055
    6. ' return' → logprob: -5.0133466720581055
    7. ':' → logprob: -5.0133466720581055
    8. ',' → logprob: -5.0133466720581055
    9. '    
' → logprob: -5.7633466720581055
    10. ':
' → logprob: -6.2633466720581055

Token 670: ' still' (ID: 2928)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4759763181209564
    2. ' return' → logprob: -0.9759763479232788
    3. '       ' → logprob: -7.225976467132568
    4. '   ' → logprob: -7.600976467132568
    5. 'raise' → logprob: -8.10097599029541
    6. ' raise' → logprob: -8.85097599029541
    7. '
' → logprob: -9.72597599029541
    8. 'else' → logprob: -9.97597599029541
    9. ' else' → logprob: -10.60097599029541
    10. ':return' → logprob: -10.72597599029541

Token 671: ' treat' (ID: 4665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3145958483219147
    2. ' return' → logprob: -1.3145958185195923
    3. '       ' → logprob: -7.314595699310303
    4. '
' → logprob: -8.189596176147461
    5. ':return' → logprob: -8.689596176147461
    6. '   ' → logprob: -8.814596176147461
    7. '           ' → logprob: -10.439596176147461
    8. ',' → logprob: -11.564596176147461
    9. ':' → logprob: -11.939596176147461
    10. '	return' → logprob: -12.314596176147461

Token 672: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.7269083261489868
    2. ' as' → logprob: -0.8519083261489868
    3. 'Cell' → logprob: -2.6019082069396973
    4. 'return' → logprob: -4.476908206939697
    5. ' return' → logprob: -6.476908206939697
    6. '   ' → logprob: -6.601908206939697
    7. ' Cell' → logprob: -7.976908206939697
    8. '(Cell' → logprob: -8.101908683776855
    9. '<Cell' → logprob: -8.726908683776855
    10. '
' → logprob: -8.851908683776855

Token 673: ' terminal' (ID: 21801)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.012447139248251915
    2. ' Cell' → logprob: -4.637447357177734
    3. 'terminal' → logprob: -6.512447357177734
    4. 'cell' → logprob: -6.887447357177734
    5. 'a' → logprob: -10.262447357177734
    6. 'text' → logprob: -10.887447357177734
    7. 'symbol' → logprob: -10.887447357177734
    8. ' terminal' → logprob: -11.137447357177734
    9. ' cell' → logprob: -11.137447357177734
    10. 'literal' → logprob: -11.387447357177734

Token 674: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7206193804740906
    2. '       ' → logprob: -0.9706193804740906
    3. '
' → logprob: -3.3456194400787354
    4. ')' → logprob: -3.8456194400787354
    5. '.' → logprob: -3.8456194400787354
    6. ',' → logprob: -4.095619201660156
    7. '    
' → logprob: -4.345619201660156
    8. '<|end|>' → logprob: -5.095619201660156
    9. '        
' → logprob: -5.470619201660156
    10. ' return' → logprob: -5.720619201660156

Token 675: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007581897545605898
    2. '   ' → logprob: -5.25758171081543
    3. ' return' → logprob: -7.63258171081543
    4. 'return' → logprob: -7.88258171081543
    5. '.' → logprob: -8.50758171081543
    6. '	' → logprob: -8.63258171081543
    7. ',' → logprob: -8.75758171081543
    8. '<|end|>' → logprob: -8.88258171081543
    9. '           ' → logprob: -9.00758171081543
    10. '
' → logprob: -9.00758171081543

Token 676: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.058043867349624634
    2. ' return' → logprob: -3.058043956756592
    3. '       ' → logprob: -4.683043956756592
    4. '   ' → logprob: -9.433043479919434
    5. '	return' → logprob: -9.808043479919434
    6. '           ' → logprob: -10.808043479919434
    7. ' ' → logprob: -13.683043479919434
    8. ':return' → logprob: -13.808043479919434
    9. '```' → logprob: -13.933043479919434
    10. '
' → logprob: -14.433043479919434

Token 677: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.0086397435516119
    2. ' Cell' → logprob: -4.758639812469482
    3. '(Cell' → logprob: -10.633639335632324
    4. 'None' → logprob: -14.133639335632324
    5. '_Cell' → logprob: -15.883639335632324
    6. '(' → logprob: -16.25864028930664
    7. '<Cell' → logprob: -16.88364028930664
    8. ' (' → logprob: -17.50864028930664
    9. 'Cel' → logprob: -17.50864028930664
    10. ' None' → logprob: -17.63364028930664

Token 678: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -3.128163257315464e-07
    2. '(line' → logprob: -15.875
    3. ' (' → logprob: -16.625
    4. '(data' → logprob: -17.125
    5. '(rows' → logprob: -18.0
    6. 'lines' → logprob: -18.375
    7. '(' → logprob: -18.625
    8. ' lines' → logprob: -18.875
    9. '(
' → logprob: -19.125
    10. '	lines' → logprob: -19.375

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ' ,' → logprob: -12.375005722045898
    3. '),' → logprob: -14.500005722045898
    4. ',data' → logprob: -15.375005722045898
    5. 'lines' → logprob: -15.875005722045898
    6. ',
' → logprob: -16.3750057220459
    7. ',line' → logprob: -16.3750057220459
    8. '```' → logprob: -16.7500057220459
    9. ',b' → logprob: -16.8750057220459
    10. ';base' → logprob: -16.8750057220459

Token 680: 'base' (ID: 5423)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.9589791893959045
    2. 'ch' → logprob: -1.2089791297912598
    3. 'lines' → logprob: -2.0839791297912598
    4. 'base' → logprob: -2.7089791297912598
    5. ' ch' → logprob: -3.4589791297912598
    6. ''ch' → logprob: -3.5839791297912598
    7. ''?' → logprob: -4.08397912979126
    8. ''' → logprob: -4.33397912979126
    9. ' base' → logprob: -4.83397912979126
    10. 'None' → logprob: -4.83397912979126

Token 681: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.6457742175552994e-05
    2. 'line' → logprob: -10.000056266784668
    3. '_lines' → logprob: -11.875056266784668
    4. 'lines' → logprob: -13.000056266784668
    5. '   ' → logprob: -14.750056266784668
    6. '
' → logprob: -15.375056266784668
    7. '```' → logprob: -15.500056266784668
    8. ')' → logprob: -15.500056266784668
    9. 'Line' → logprob: -15.750056266784668
    10. '_LINE' → logprob: -15.750056266784668

Token 682: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1131495013833046
    2. '),' → logprob: -2.363149404525757
    3. ','.' → logprob: -5.238149642944336
    4. ',None' → logprob: -5.488149642944336
    5. ','' → logprob: -6.238149642944336
    6. ',ch' → logprob: -7.488149642944336
    7. ',''' → logprob: -8.113149642944336
    8. '),'' → logprob: -8.738149642944336
    9. ',),' → logprob: -8.988149642944336
    10. 'None' → logprob: -8.988149642944336

Token 683: ' ch' (ID: 549)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6169151663780212
    2. 'ch' → logprob: -0.8669151663780212
    3. ''.' → logprob: -4.116915225982666
    4. 'None' → logprob: -4.491915225982666
    5. ''ch' → logprob: -4.991915225982666
    6. ' lines' → logprob: -5.991915225982666
    7. ' ch' → logprob: -6.991915225982666
    8. ''?' → logprob: -7.491915225982666
    9. ''' → logprob: -7.741915225982666
    10. '''' → logprob: -8.241914749145508

Token 684: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 685: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 686: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10850486159324646
    2. 'top' → logprob: -3.2335047721862793
    3. '   ' → logprob: -3.4835047721862793
    4. 'cells' → logprob: -4.358504772186279
    5. '
' → logprob: -5.358504772186279
    6. 'line' → logprob: -5.983504772186279
    7. 'tokens' → logprob: -5.983504772186279
    8. ' #' → logprob: -6.608504772186279
    9. 'def' → logprob: -6.733504772186279
    10. 'if' → logprob: -6.983504772186279

Token 687: ' Check' (ID: 6208)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5896465182304382
    2. '#' → logprob: -0.9646465182304382
    3. 'vin' → logprob: -3.339646577835083
    4. 'for' → logprob: -4.964646339416504
    5. 'cells' → logprob: -5.089646339416504
    6. 'idx' → logprob: -5.839646339416504
    7. 'if' → logprob: -6.464646339416504
    8. '   ' → logprob: -6.714646339416504
    9. 'line' → logprob: -6.964646339416504
    10. 'vine' → logprob: -7.089646339416504

Token 688: ' fraction' (ID: 33763)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1406836062669754
    2. ' for' → logprob: -2.640683650970459
    3. 'if' → logprob: -3.140683650970459
    4. 'lines' → logprob: -5.140683650970459
    5. ' if' → logprob: -5.640683650970459
    6. ' lines' → logprob: -6.140683650970459
    7. '
' → logprob: -6.390683650970459
    8. '   ' → logprob: -6.640683650970459
    9. 'cells' → logprob: -7.640683650970459
    10. 'top' → logprob: -8.1406831741333

Token 689: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1474997103214264
    2. 'for' → logprob: -2.6474997997283936
    3. 'v' → logprob: -3.0224997997283936
    4. 'line' → logprob: -4.7724995613098145
    5. ' for' → logprob: -5.2724995613098145
    6. '
' → logprob: -7.1474995613098145
    7. 'if' → logprob: -7.7724995613098145
    8. 'lines' → logprob: -7.7724995613098145
    9. 'idx' → logprob: -8.147500038146973
    10. 'vine' → logprob: -8.272500038146973

Token 690: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061282187700271606
    2. 'for' → logprob: -4.186282157897949
    3. ' for' → logprob: -4.311282157897949
    4. 'v' → logprob: -4.561282157897949
    5. 'if' → logprob: -4.686282157897949
    6. '
' → logprob: -5.436282157897949
    7. ' if' → logprob: -6.061282157897949
    8. 'line' → logprob: -7.186282157897949
    9. 'top' → logprob: -7.311282157897949
    10. ' top' → logprob: -7.936282157897949

Token 691: 'rule' (ID: 32558)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.41216328740119934
    2. 'h' → logprob: -1.787163257598877
    3. ' lines' → logprob: -2.287163257598877
    4. 'if' → logprob: -4.037163257598877
    5. 'def' → logprob: -4.162163257598877
    6. ')' → logprob: -4.412163257598877
    7. '(lines' → logprob: -4.912163257598877
    8. 'len' → logprob: -5.162163257598877
    9. '#' → logprob: -6.412163257598877
    10. 'w' → logprob: -6.412163257598877

Token 692: ' VI' (ID: 34297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7715182900428772
    2. ':' → logprob: -1.3965182304382324
    3. ' if' → logprob: -1.8965182304382324
    4. 'if' → logprob: -2.7715182304382324
    5. '=' → logprob: -4.521518230438232
    6. '):
' → logprob: -4.771518230438232
    7. ' lines' → logprob: -4.896518230438232
    8. '
' → logprob: -5.271518230438232
    9. '(lines' → logprob: -5.396518230438232
    10. ')' → logprob: -5.396518230438232

Token 693: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5270729660987854
    2. ')' → logprob: -1.2770729064941406
    3. '):
' → logprob: -2.7770729064941406
    4. '):' → logprob: -3.2770729064941406
    5. ':' → logprob: -4.777072906494141
    6. '   ' → logprob: -5.152072906494141
    7. ' )
' → logprob: -5.402072906494141
    8. 'def' → logprob: -5.777072906494141
    9. ')

' → logprob: -6.402072906494141
    10. ' and' → logprob: -6.527072906494141

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09568820893764496
    2. 'if' → logprob: -3.9706881046295166
    3. 'for' → logprob: -4.220688343048096
    4. ' for' → logprob: -4.345688343048096
    5. ' top' → logprob: -4.595688343048096
    6. ' if' → logprob: -4.720688343048096
    7. '
' → logprob: -5.345688343048096
    8. 'top' → logprob: -5.345688343048096
    9. 'line' → logprob: -5.470688343048096
    10. 'v' → logprob: -5.845688343048096

Token 695: ' vinc' (ID: 46511)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9957029819488525
    2. 'v' → logprob: -1.3707029819488525
    3. '   ' → logprob: -1.7457029819488525
    4. ' if' → logprob: -2.8707029819488525
    5. 'for' → logprob: -2.9957029819488525
    6. ' vinc' → logprob: -3.9957029819488525
    7. 'top' → logprob: -4.245702743530273
    8. ' for' → logprob: -4.745702743530273
    9. ' top' → logprob: -4.745702743530273
    10. 'vin' → logprob: -4.870702743530273

Token 696: ' =' (ID: 314)
  Prédit: 'ulum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulum' → logprob: -0.0004255508247297257
    2. 'um' → logprob: -8.875425338745117
    3. ' =' → logprob: -9.250425338745117
    4. 'lum' → logprob: -9.500425338745117
    5. '_line' → logprob: -10.375425338745117
    6. '=' → logprob: -10.500425338745117
    7. 'ul' → logprob: -11.250425338745117
    8. 'num' → logprob: -12.000425338745117
    9. 'uml' → logprob: -12.125425338745117
    10. '_index' → logprob: -12.375425338745117

Token 697: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.17976224422454834
    2. ' find' → logprob: -1.8047622442245483
    3. '(find' → logprob: -11.80476188659668
    4. '   ' → logprob: -12.30476188659668
    5. '=find' → logprob: -13.17976188659668
    6. '	find' → logprob: -13.42976188659668
    7. ' ' → logprob: -14.05476188659668
    8. '.find' → logprob: -14.67976188659668
    9. ')find' → logprob: -15.17976188659668
    10. '_find' → logprob: -15.92976188659668

Token 698: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -7.839121826691553e-05
    2. 'v' → logprob: -9.500078201293945
    3. '(lines' → logprob: -12.750078201293945
    4. '_' → logprob: -15.500078201293945
    5. '(line' → logprob: -15.875078201293945
    6. '(v' → logprob: -16.250078201293945
    7. '(' → logprob: -17.000078201293945
    8. 'V' → logprob: -17.250078201293945
    9. '('_' → logprob: -18.500078201293945
    10. ')' → logprob: -19.000078201293945

Token 699: 'inc' (ID: 2768)
  Prédit: 'inc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.0017719273455440998
    2. 'in' → logprob: -6.376771926879883
    3. 'incl' → logprob: -9.751771926879883
    4. 'i' → logprob: -11.876771926879883
    5. 'n' → logprob: -14.126771926879883
    6. 'ind' → logprob: -14.626771926879883
    7. 'nc' → logprob: -14.751771926879883
    8. '(' → logprob: -14.876771926879883
    9. 'enc' → logprob: -15.251771926879883
    10. 'c' → logprob: -15.501771926879883

Token 700: 'ulum' (ID: 40868)
  Prédit: 'ulum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulum' → logprob: -6.988221684878226e-06
    2. 'um' → logprob: -12.625006675720215
    3. 'ul' → logprob: -13.250006675720215
    4. 'cul' → logprob: -14.250006675720215
    5. 'lum' → logprob: -14.500006675720215
    6. 'ulam' → logprob: -15.375006675720215
    7. 'umul' → logprob: -16.25000762939453
    8. 'uml' → logprob: -16.37500762939453
    9. 'ulim' → logprob: -16.62500762939453
    10. 'ulm' → logprob: -16.87500762939453

Token 701: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -2.2200749754119897e-06
    2. 'lines' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.375001907348633
    4. ' lines' → logprob: -15.875001907348633
    5. '(line' → logprob: -15.875001907348633
    6. 'def' → logprob: -16.000001907348633
    7. ' =' → logprob: -16.625001907348633
    8. ' (' → logprob: -17.000001907348633
    9. '(
' → logprob: -17.000001907348633
    10. '=' → logprob: -17.250001907348633

Token 702: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6018039584159851
    2. ')
' → logprob: -0.9768039584159851
    3. '(lines' → logprob: -2.72680401802063
    4. '   ' → logprob: -4.601803779602051
    5. 'def' → logprob: -10.22680377960205
    6. '=' → logprob: -10.72680377960205
    7. ')
' → logprob: -10.72680377960205
    8. ' ' → logprob: -10.85180377960205
    9. '(' → logprob: -10.85180377960205
    10. ' =' → logprob: -11.35180377960205

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006024802569299936
    2. ' if' → logprob: -7.8756022453308105
    3. 'if' → logprob: -8.500602722167969
    4. '
' → logprob: -11.750602722167969
    5. '	if' → logprob: -12.875602722167969
    6. ' =' → logprob: -13.375602722167969
    7. '    
' → logprob: -13.625602722167969
    8. ',' → logprob: -13.750602722167969
    9. '<|end|>' → logprob: -13.750602722167969
    10. '       ' → logprob: -14.375602722167969

Token 704: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5517652630805969
    2. 'if' (adapté à ' if') → logprob: -1.5517652034759521
    3. ' if' → logprob: -1.5517652034759521
    4. '	if' → logprob: -8.426765441894531
    5. 'If' → logprob: -10.426765441894531
    6. ' ' → logprob: -10.551765441894531
    7. '    
' → logprob: -11.301765441894531
    8. '
' → logprob: -12.051765441894531
    9. '<|end|>' → logprob: -12.051765441894531
    10. ',' → logprob: -12.551765441894531

Token 705: ' vinc' (ID: 46511)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2014361321926117
    2. ' vinc' → logprob: -1.701436161994934
    3. 'vin' → logprob: -12.076436042785645
    4. ' vincul' → logprob: -12.576436042785645
    5. '   ' → logprob: -12.701436042785645
    6. '(v' → logprob: -13.076436042785645
    7. 'not' → logprob: -13.326436042785645
    8. '
' → logprob: -13.701436042785645
    9. '	v' → logprob: -13.701436042785645
    10. ' venc' → logprob: -13.701436042785645

Token 706: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07935326546430588
    2. 'is' → logprob: -3.2043533325195312
    3. '=' → logprob: -3.4543533325195312
    4. ' =' → logprob: -5.704353332519531
    5. ':' → logprob: -7.454353332519531
    6. ')' → logprob: -9.954353332519531
    7. ':=' → logprob: -9.954353332519531
    8. ':
' → logprob: -10.329353332519531
    9. '=is' → logprob: -11.829353332519531
    10. '=None' → logprob: -11.954353332519531

Token 707: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1785479187965393
    2. ' not' → logprob: -1.9285478591918945
    3. 'None' → logprob: -4.0535478591918945
    4. ' None' → logprob: -7.1785478591918945
    5. '   ' → logprob: -10.928547859191895
    6. 'Not' → logprob: -11.553547859191895
    7. ' ' → logprob: -13.678547859191895
    8. '...' → logprob: -13.928547859191895
    9. 'none' → logprob: -14.053547859191895
    10. '	not' → logprob: -14.303547859191895

Token 708: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00010998018842656165
    2. ' None' → logprob: -9.125109672546387
    3. 'not' → logprob: -14.875109672546387
    4. '(None' → logprob: -15.375109672546387
    5. '_None' → logprob: -15.500109672546387
    6. '=None' → logprob: -15.750109672546387
    7. '   ' → logprob: -16.125110626220703
    8. 'none' → logprob: -16.750110626220703
    9. '0' → logprob: -17.250110626220703
    10. '.None' → logprob: -18.250110626220703

Token 709: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3595161437988281
    2. ':
' → logprob: -1.3595161437988281
    3. ',' → logprob: -3.234516143798828
    4. '   ' → logprob: -5.609516143798828
    5. ' and' → logprob: -7.109516143798828
    6. '       ' → logprob: -7.484516143798828
    7. ' =' → logprob: -7.984516143798828
    8. '):
' → logprob: -8.734516143798828
    9. '=' → logprob: -9.734516143798828
    10. ':,' → logprob: -10.359516143798828

Token 710: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28221285343170166
    2. '       ' → logprob: -1.9072128534317017
    3. 'i' → logprob: -2.407212734222412
    4. ' row' → logprob: -6.282212734222412
    5. ' line' → logprob: -6.532212734222412
    6. '    ' → logprob: -6.657212734222412
    7. 'row' → logprob: -7.157212734222412
    8. 'v' → logprob: -7.907212734222412
    9. '   ' → logprob: -8.03221321105957
    10. ' ' → logprob: -8.28221321105957

Token 711: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8585107922554016
    2. ' i' → logprob: -0.8585107922554016
    3. 'vl' → logprob: -3.108510732650757
    4. 'v' → logprob: -3.483510732650757
    5. ' v' → logprob: -4.233510971069336
    6. ' vi' → logprob: -4.358510971069336
    7. ' vl' → logprob: -4.358510971069336
    8. ' row' → logprob: -4.858510971069336
    9. 'line' → logprob: -4.983510971069336
    10. ' line' → logprob: -5.358510971069336

Token 712: ' fraction' (ID: 33763)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5517823696136475
    2. 'v' → logprob: -1.1767823696136475
    3. 'vl' → logprob: -2.8017823696136475
    4. 'line' → logprob: -3.6767823696136475
    5. 'vi' → logprob: -4.176782608032227
    6. 'idx' → logprob: -5.426782608032227
    7. ' i' → logprob: -6.176782608032227
    8. '   ' → logprob: -6.301782608032227
    9. 'vin' → logprob: -6.551782608032227
    10. 'row' → logprob: -7.176782608032227

Token 713: ':' (ID: 25)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8674754500389099
    2. 'i' → logprob: -1.3674755096435547
    3. '_i' → logprob: -2.1174755096435547
    4. '       ' → logprob: -2.2424755096435547
    5. 'line' → logprob: -3.2424755096435547
    6. '_top' → logprob: -4.242475509643555
    7. '_lines' → logprob: -4.492475509643555
    8. '   ' → logprob: -4.867475509643555
    9. ',' → logprob: -4.992475509643555
    10. 'top' → logprob: -5.492475509643555

Token 714: ' vinc' (ID: 46511)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6754196882247925
    2. ' i' → logprob: -1.5504196882247925
    3. '       ' → logprob: -2.175419807434082
    4. 'v' → logprob: -2.550419807434082
    5. ' v' → logprob: -3.925419807434082
    6. ' row' → logprob: -4.550419807434082
    7. 'row' → logprob: -4.675419807434082
    8. ' vi' → logprob: -4.800419807434082
    9. ' line' → logprob: -5.175419807434082
    10. 'vl' → logprob: -5.175419807434082

Token 715: 'ulum' (ID: 40868)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.35293230414390564
    2. '_i' → logprob: -1.227932333946228
    3. 'line' → logprob: -6.102932453155518
    4. 'i' → logprob: -6.852932453155518
    5. '_l' → logprob: -7.602932453155518
    6. '_idx' → logprob: -8.85293197631836
    7. '_y' → logprob: -9.60293197631836
    8. 'Line' → logprob: -9.60293197631836
    9. ' =' → logprob: -9.97793197631836
    10. '=' → logprob: -9.97793197631836

Token 716: ' line' (ID: 2543)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.7793463468551636
    2. 'i' → logprob: -1.1543463468551636
    3. '_line' → logprob: -1.7793463468551636
    4. 'line' → logprob: -3.029346466064453
    5. ' =' → logprob: -5.654346466064453
    6. ',' → logprob: -6.529346466064453
    7. '   ' → logprob: -6.904346466064453
    8. '_row' → logprob: -7.654346466064453
    9. '_idx' → logprob: -8.029346466064453
    10. '=' → logprob: -8.154346466064453

Token 717: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6948502063751221
    2. 'i' → logprob: -1.069850206375122
    3. '       ' → logprob: -2.444850206375122
    4. ',i' → logprob: -3.444850206375122
    5. '   ' → logprob: -4.194849967956543
    6. ' i' → logprob: -4.944849967956543
    7. ' =' → logprob: -5.319849967956543
    8. '_,' → logprob: -5.944849967956543
    9. '_i' → logprob: -6.069849967956543
    10. ' ,' → logprob: -6.194849967956543

Token 718: ' col' (ID: 996)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.5815785527229309
    2. ' its' → logprob: -1.9565784931182861
    3. 'top' → logprob: -2.206578493118286
    4. ' start' → logprob: -2.956578493118286
    5. 'start' → logprob: -2.956578493118286
    6. ' cells' → logprob: -4.206578731536865
    7. ' lines' → logprob: -4.456578731536865
    8. ' the' → logprob: -4.456578731536865
    9. ' above' → logprob: -4.956578731536865
    10. ' upper' → logprob: -5.206578731536865

Token 719: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16571453213691711
    2. 'i' → logprob: -2.4157145023345947
    3. ',i' → logprob: -4.290714740753174
    4. ' =' → logprob: -4.540714740753174
    5. ' ,' → logprob: -4.915714740753174
    6. 's' → logprob: -5.165714740753174
    7. '_idx' → logprob: -5.290714740753174
    8. 'index' → logprob: -5.790714740753174
    9. '_index' → logprob: -5.915714740753174
    10. 'idx' → logprob: -5.915714740753174

Token 720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2714778780937195
    2. 'i' → logprob: -2.3964779376983643
    3. ' =' → logprob: -2.7714779376983643
    4. ',' → logprob: -3.3964779376983643
    5. '_i' → logprob: -3.3964779376983643
    6. '_,' → logprob: -5.646477699279785
    7. ' i' → logprob: -5.771477699279785
    8. '=' → logprob: -6.271477699279785
    9. '_index' → logprob: -6.271477699279785
    10. ',i' → logprob: -6.521477699279785

Token 721: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.3592432737350464
    2. 'v' → logprob: -1.6092432737350464
    3. 'vl' → logprob: -3.109243392944336
    4. ' i' → logprob: -3.734243392944336
    5. 'line' → logprob: -4.359243392944336
    6. 'vi' → logprob: -4.984243392944336
    7. 'idx' → logprob: -5.359243392944336
    8. ' v' → logprob: -6.109243392944336
    9. ' idx' → logprob: -6.484243392944336
    10. ' vi' → logprob: -6.734243392944336

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03175312280654907
    2. ',line' → logprob: -3.9067530632019043
    3. ',start' → logprob: -4.906753063201904
    4. ',row' → logprob: -6.406753063201904
    5. ' ,' → logprob: -6.906753063201904
    6. ',v' → logprob: -7.406753063201904
    7. '_,' → logprob: -8.156753540039062
    8. '_line' → logprob: -10.406753540039062
    9. ',s' → logprob: -10.406753540039062
    10. ',val' → logprob: -10.656753540039062

Token 723: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00510793412104249
    2. 's' → logprob: -5.380107879638672
    3. ' start' → logprob: -8.380107879638672
    4. 'v' → logprob: -8.880107879638672
    5. 'j' → logprob: -9.380107879638672
    6. 'a' → logprob: -11.380107879638672
    7. 'col' → logprob: -12.505107879638672
    8. 'st' → logprob: -12.630107879638672
    9. 'l' → logprob: -12.755107879638672
    10. 'left' → logprob: -12.880107879638672

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22954432666301727
    2. 't' → logprob: -1.7295442819595337
    3. ',start' → logprob: -3.7295444011688232
    4. 'start' → logprob: -6.354544162750244
    5. ',v' → logprob: -6.729544162750244
    6. ',t' → logprob: -8.604544639587402
    7. ',e' → logprob: -8.979544639587402
    8. ',s' → logprob: -9.104544639587402
    9. 's' → logprob: -9.479544639587402
    10. ',i' → logprob: -9.729544639587402

Token 725: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3856492842023727e-06
    2. ' e' → logprob: -13.625000953674316
    3. 't' → logprob: -15.875000953674316
    4. '	e' → logprob: -17.625001907348633
    5. '_e' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '```' → logprob: -20.000001907348633
    8. 'f' → logprob: -20.125001907348633
    9. '

' → logprob: -20.625001907348633
    10. '  
' → logprob: -21.000001907348633

Token 726: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759603977203369
    2. ' =' → logprob: -0.8259603977203369
    3. '   ' → logprob: -11.450960159301758
    4. '=line' → logprob: -12.325960159301758
    5. ',' → logprob: -12.825960159301758
    6. ' ' → logprob: -13.950960159301758
    7. '=i' → logprob: -14.075960159301758
    8. '  ' → logprob: -15.075960159301758
    9. '    ' → logprob: -15.325960159301758
    10. 'i' → logprob: -15.825960159301758

Token 727: ' vinc' (ID: 46511)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0009125363430939615
    2. ' vinc' → logprob: -7.000912666320801
    3. 'vince' → logprob: -15.5009126663208
    4. 'vin' → logprob: -15.8759126663208
    5. '	v' → logprob: -15.8759126663208
    6. '   ' → logprob: -16.250911712646484
    7. ' vincul' → logprob: -16.625911712646484
    8. 'vind' → logprob: -16.875911712646484
    9. ' venc' → logprob: -17.000911712646484
    10. ' v' → logprob: -17.250911712646484

Token 728: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17971962690353394
    2. '       ' → logprob: -1.9297196865081787
    3. '   ' → logprob: -4.1797194480896
    4. '
' → logprob: -6.6797194480896
    5. '        
' → logprob: -6.9297194480896
    6. '    
' → logprob: -7.1797194480896
    7. ' =' → logprob: -8.429719924926758
    8. ',' → logprob: -8.679719924926758
    9. '           ' → logprob: -9.554719924926758
    10. '  
' → logprob: -9.679719924926758

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017978310585021973
    2. '
' → logprob: -4.142978191375732
    3. '   ' → logprob: -6.392978191375732
    4. '        
' → logprob: -9.26797866821289
    5. ',' → logprob: -9.64297866821289
    6. '    
' → logprob: -10.26797866821289
    7. '
' → logprob: -11.76797866821289
    8. '           ' → logprob: -12.01797866821289
    9. '```' → logprob: -12.01797866821289
    10. ' lines' → logprob: -12.14297866821289

Token 730: ' width' (ID: 4345)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -1.3234443664550781
    2. '   ' → logprob: -1.4484443664550781
    3. 'top' → logprob: -1.4484443664550781
    4. 'num' → logprob: -1.5734443664550781
    5. ' numerator' → logprob: -3.573444366455078
    6. '       ' → logprob: -4.698444366455078
    7. 'above' → logprob: -4.948444366455078
    8. ' top' → logprob: -5.198444366455078
    9. 'upper' → logprob: -5.573444366455078
    10. ' numer' → logprob: -7.448444366455078

Token 731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38719800114631653
    2. '=' → logprob: -1.1371979713439941
    3. '   ' → logprob: -8.137198448181152
    4. 's' → logprob: -11.012198448181152
    5. ',' → logprob: -12.262198448181152
    6. '=line' → logprob: -12.387198448181152
    7. '=len' → logprob: -13.637198448181152
    8. '       ' → logprob: -13.637198448181152
    9. ' ' → logprob: -13.887198448181152
    10. '    ' → logprob: -13.887198448181152

Token 732: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.012618070468306541
    2. ' e' → logprob: -4.387618064880371
    3. 'lines' → logprob: -10.262618064880371
    4. 'max' → logprob: -10.762618064880371
    5. ' lines' → logprob: -11.137618064880371
    6. 'len' → logprob: -11.387618064880371
    7. ' max' → logprob: -11.512618064880371
    8. ' ' → logprob: -12.387618064880371
    9. '   ' → logprob: -12.637618064880371
    10. 'w' → logprob: -13.137618064880371

Token 733: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6935032606124878
    2. ' -' → logprob: -0.6935032606124878
    3. '-s' → logprob: -7.943503379821777
    4. 's' → logprob: -15.068503379821777
    5. ' ' → logprob: -15.693503379821777
    6. '   ' → logprob: -15.693503379821777
    7. '+' → logprob: -15.693503379821777
    8. ' s' → logprob: -17.44350242614746
    9. '−' → logprob: -17.56850242614746
    10. '-S' → logprob: -18.06850242614746

Token 734: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01416350994259119
    2. ' s' → logprob: -4.264163494110107
    3. 'start' → logprob: -16.889163970947266
    4. '=' → logprob: -18.014163970947266
    5. '_s' → logprob: -18.514163970947266
    6. '	s' → logprob: -19.514163970947266
    7. ' ' → logprob: -19.514163970947266
    8. '+' → logprob: -19.764163970947266
    9. '(s' → logprob: -20.264163970947266
    10. 'i' → logprob: -20.639163970947266

Token 735: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038043100386857986
    2. ' +' → logprob: -3.2880430221557617
    3. '+
' → logprob: -13.413043022155762
    4. '+i' → logprob: -16.913043975830078
    5. 's' → logprob: -17.038043975830078
    6. ' +
' → logprob: -17.288043975830078
    7. '   ' → logprob: -17.538043975830078
    8. '
' → logprob: -17.913043975830078
    9. '+s' → logprob: -17.913043975830078
    10. '＋' → logprob: -18.163043975830078

Token 736: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.375625610351562
    4. '```' → logprob: -17.750625610351562
    5. '
' → logprob: -19.250625610351562
    6. '=' → logprob: -19.500625610351562
    7. '  ' → logprob: -20.750625610351562
    8. ' =' → logprob: -21.000625610351562
    9. '2' → logprob: -21.000625610351562
    10. ' ' → logprob: -22.000625610351562

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -15.250045776367188
    4. '   ' → logprob: -16.750045776367188
    5. '=' → logprob: -17.500045776367188
    6. '
' → logprob: -18.625045776367188
    7. '2' → logprob: -19.062545776367188
    8. '+' → logprob: -19.250045776367188
    9. 'length' → logprob: -19.562545776367188
    10. '`' → logprob: -19.687545776367188

Token 738: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36566346883773804
    2. '       ' → logprob: -1.3656635284423828
    3. '   ' → logprob: -3.115663528442383
    4. '<|end|>' → logprob: -5.615663528442383
    5. ',' → logprob: -7.115663528442383
    6. '
' → logprob: -7.865663528442383
    7. '    
' → logprob: -8.115663528442383
    8. '        
' → logprob: -8.240663528442383
    9. ')' → logprob: -8.365663528442383
    10. ')
' → logprob: -8.865663528442383

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011510715819895267
    2. '
' → logprob: -4.761510848999023
    3. ' top' → logprob: -6.636510848999023
    4. 'top' → logprob: -7.261510848999023
    5. '   ' → logprob: -7.886510848999023
    6. '        
' → logprob: -8.511510848999023
    7. 'upper' → logprob: -10.136510848999023
    8. ' upper' → logprob: -10.136510848999023
    9. '    
' → logprob: -10.761510848999023
    10. ',' → logprob: -11.136510848999023

Token 740: ' #' (ID: 1069)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.5437676310539246
    2. 'num' → logprob: -1.1687676906585693
    3. 'numer' → logprob: -2.2937676906585693
    4. '#' (adapté à ' #') → logprob: -5.16876745223999
    5. '   ' → logprob: -6.91876745223999
    6. 'n' → logprob: -8.293767929077148
    7. ' numerator' → logprob: -8.418767929077148
    8. 'upper' → logprob: -8.543767929077148
    9. 'up' → logprob: -9.418767929077148
    10. 'above' → logprob: -9.668767929077148

Token 741: ' get' (ID: 717)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.2070382684469223
    2. 'num' → logprob: -2.207038164138794
    3. 'numer' → logprob: -2.707038164138794
    4. '#' → logprob: -4.707038402557373
    5. 'upper' → logprob: -8.082037925720215
    6. 'above' → logprob: -8.207037925720215
    7. '   ' → logprob: -8.707037925720215
    8. 'n' → logprob: -9.082037925720215
    9. 'up' → logprob: -9.707037925720215
    10. 'if' → logprob: -10.082037925720215

Token 742: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.06391862779855728
    2. 'numer' → logprob: -3.6889185905456543
    3. ' top' → logprob: -4.063918590545654
    4. 'num' → logprob: -4.688918590545654
    5. ' numerator' → logprob: -5.188918590545654
    6. '   ' → logprob: -6.063918590545654
    7. 'upper' → logprob: -7.188918590545654
    8. 'above' → logprob: -7.563918590545654
    9. 'up' → logprob: -8.188919067382812
    10. 'left' → logprob: -9.063919067382812

Token 743: ' expr' (ID: 30206)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.9638795256614685
    2. ' =' → logprob: -1.3388795852661133
    3. 'part' → logprob: -2.3388795852661133
    4. '_data' → logprob: -2.7138795852661133
    5. '_part' → logprob: -2.9638795852661133
    6. 'lines' → logprob: -3.0888795852661133
    7. '=' → logprob: -3.0888795852661133
    8. 'data' → logprob: -3.4638795852661133
    9. '_cells' → logprob: -4.588879585266113
    10. '_cell' → logprob: -5.713879585266113

Token 744: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1089659333229065
    2. '=' → logprob: -2.6089658737182617
    3. '       ' → logprob: -3.6089658737182617
    4. ',' → logprob: -6.608965873718262
    5. '_lines' → logprob: -7.483965873718262
    6. '   ' → logprob: -7.858965873718262
    7. 'lines' → logprob: -9.358965873718262
    8. ' lines' → logprob: -9.608965873718262
    9. '(lines' → logprob: -10.608965873718262
    10. 'data' → logprob: -11.108965873718262

Token 745: 'div' (ID: 862)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.25362855195999146
    2. ' lines' → logprob: -1.5036284923553467
    3. ')' → logprob: -7.628628730773926
    4. '(lines' → logprob: -7.628628730773926
    5. '   ' → logprob: -8.753628730773926
    6. '[' → logprob: -9.503628730773926
    7. '
' → logprob: -9.628628730773926
    8. '       ' → logprob: -9.753628730773926
    9. 'Cell' → logprob: -9.878628730773926
    10. '	lines' → logprob: -9.878628730773926

Token 746: 'idend' (ID: 80275)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.3405698537826538
    2. 'isions' → logprob: -1.4655698537826538
    3. 's' → logprob: -1.8405698537826538
    4. 'ision' → logprob: -2.0905699729919434
    5. 'lines' → logprob: -2.4655699729919434
    6. ')' → logprob: -3.3405699729919434
    7. 'start' → logprob: -4.090569972991943
    8. 'er' → logprob: -4.090569972991943
    9. '_start' → logprob: -4.715569972991943
    10. 'iding' → logprob: -4.965569972991943

Token 747: ')
' (ID: 446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15224985778331757
    2. '_lines' → logprob: -2.402249813079834
    3. '=' → logprob: -3.527249813079834
    4. ')' → logprob: -4.277249813079834
    5. ',' → logprob: -5.777249813079834
    6. '   ' → logprob: -6.777249813079834
    7. '_cells' → logprob: -6.777249813079834
    8. '_data' → logprob: -7.527249813079834
    9. ')
' → logprob: -7.777249813079834
    10. ' lines' → logprob: -8.402250289916992

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004898211918771267
    2. 'top' → logprob: -5.6298980712890625
    3. ' top' → logprob: -7.2548980712890625
    4. ',' → logprob: -7.7548980712890625
    5. '
' → logprob: -10.129898071289062
    6. '   ' → logprob: -10.754898071289062
    7. '[top' → logprob: -10.754898071289062
    8. 'cells' → logprob: -11.254898071289062
    9. 'cell' → logprob: -11.504898071289062
    10. '(top' → logprob: -12.004898071289062

Token 749: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -0.2023257613182068
    2. ' top' → logprob: -1.8273258209228516
    3. '       ' → logprob: -3.8273258209228516
    4. '   ' → logprob: -7.827325820922852
    5. '	top' → logprob: -9.452325820922852
    6. 't' → logprob: -10.452325820922852
    7. 'cell' → logprob: -11.577325820922852
    8. '[top' → logprob: -11.827325820922852
    9. ' tops' → logprob: -11.952325820922852
    10. ' ' → logprob: -12.577325820922852

Token 750: '_lines' (ID: 42980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11329992115497589
    2. '=' → logprob: -2.61329984664917
    3. '_lines' → logprob: -3.48829984664917
    4. '   ' → logprob: -6.48829984664917
    5. '_cells' → logprob: -7.11329984664917
    6. '_data' → logprob: -7.73829984664917
    7. '_cell' → logprob: -8.488300323486328
    8. 'lines' → logprob: -9.363300323486328
    9. 'data' → logprob: -9.613300323486328
    10. ',' → logprob: -9.613300323486328

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931501030921936
    2. ' =' → logprob: -0.6931501030921936
    3. '   ' → logprob: -13.943150520324707
    4. ',' → logprob: -14.193150520324707
    5. ' lines' → logprob: -14.443150520324707
    6. '(lines' → logprob: -15.068150520324707
    7. '=line' → logprob: -15.943150520324707
    8. ' ' → logprob: -16.06814956665039
    9. '       ' → logprob: -16.56814956665039
    10. '_lines' → logprob: -16.56814956665039

Token 752: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4290301501750946
    2. ' lines' → logprob: -1.054030179977417
    3. '[' → logprob: -9.054030418395996
    4. ' [' → logprob: -9.429030418395996
    5. '   ' → logprob: -9.804030418395996
    6. 'trim' → logprob: -10.429030418395996
    7. '	lines' → logprob: -11.179030418395996
    8. '(lines' → logprob: -11.429030418395996
    9. ' trim' → logprob: -11.554030418395996
    10. ' ' → logprob: -13.304030418395996

Token 753: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -8.339776832144707e-05
    2. '[' → logprob: -10.125082969665527
    3. '       ' → logprob: -10.750082969665527
    4. '   ' → logprob: -11.750082969665527
    5. '[i' → logprob: -11.750082969665527
    6. ':i' → logprob: -12.750082969665527
    7. '][:' → logprob: -13.750082969665527
    8. ':' → logprob: -13.875082969665527
    9. '           ' → logprob: -15.250082969665527
    10. ' [:' → logprob: -15.250082969665527

Token 754: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7432603272027336e-06
    2. ' i' → logprob: -13.500001907348633
    3. '
' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '```' → logprob: -17.250001907348633
    6. '       ' → logprob: -17.500001907348633
    7. '(i' → logprob: -19.500001907348633
    8. '	i' → logprob: -19.500001907348633
    9. '``' → logprob: -19.500001907348633
    10. '<|end|>' → logprob: -19.875001907348633

Token 755: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.05547510087490082
    2. ']' → logprob: -2.9304749965667725
    3. '       ' → logprob: -8.055475234985352
    4. ']
' → logprob: -8.680475234985352
    5. '   ' → logprob: -9.805475234985352
    6. ' ]
' → logprob: -11.055475234985352
    7. ']

' → logprob: -11.555475234985352
    8. '
' → logprob: -11.680475234985352
    9. 'def' → logprob: -12.180475234985352
    10. ' ]' → logprob: -12.805475234985352

Token 756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008879951201379299
    2. '<|end|>' → logprob: -7.375887870788574
    3. ',' → logprob: -9.125887870788574
    4. '   ' → logprob: -10.250887870788574
    5. '        
' → logprob: -10.375887870788574
    6. '#' → logprob: -10.375887870788574
    7. '
' → logprob: -10.750887870788574
    8. ')' → logprob: -11.875887870788574
    9. '<|end|>' → logprob: -12.375887870788574
    10. ' ' → logprob: -12.500887870788574

Token 757: ' #' (ID: 1069)
  Prédit: 'bot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bot' → logprob: -0.6625641584396362
    2. 'bottom' → logprob: -0.9125641584396362
    3. ' bottom' → logprob: -2.787564277648926
    4. '       ' → logprob: -4.162564277648926
    5. ' bot' → logprob: -5.162564277648926
    6. '   ' → logprob: -9.537564277648926
    7. 'top' → logprob: -11.662564277648926
    8. '_bot' → logprob: -11.912564277648926
    9. '
' → logprob: -12.287564277648926
    10. ' ' → logprob: -12.412564277648926

Token 758: ' get' (ID: 717)
  Prédit: 'bot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bot' → logprob: -0.14312714338302612
    2. ' bot' → logprob: -2.268127202987671
    3. 'bottom' → logprob: -3.893127202987671
    4. ' bottom' → logprob: -4.768126964569092
    5. '       ' → logprob: -7.143126964569092
    6. 'top' → logprob: -9.64312744140625
    7. '   ' → logprob: -10.01812744140625
    8. ' top' → logprob: -10.76812744140625
    9. '
' → logprob: -12.01812744140625
    10. 'base' → logprob: -12.14312744140625

Token 759: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.14589381217956543
    2. ' bottom' → logprob: -2.1458938121795654
    3. 'bot' → logprob: -4.0208940505981445
    4. ' bot' → logprob: -7.8958940505981445
    5. 'lines' → logprob: -8.270894050598145
    6. '
' → logprob: -9.645894050598145
    7. ' lines' → logprob: -10.645894050598145
    8. 'down' → logprob: -10.645894050598145
    9. '   ' → logprob: -11.145894050598145
    10. 'below' → logprob: -11.145894050598145

Token 760: ' expr' (ID: 30206)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00024477019906044006
    2. 'lines' → logprob: -8.375245094299316
    3. '```' → logprob: -12.125245094299316
    4. '   ' → logprob: -13.375245094299316
    5. '_cells' → logprob: -13.625245094299316
    6. '_line' → logprob: -13.875245094299316
    7. '
' → logprob: -14.125245094299316
    8. '_' → logprob: -14.125245094299316
    9. '(lines' → logprob: -14.250245094299316
    10. ' lines' → logprob: -14.250245094299316

Token 761: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5774314403533936
    2. ' =' → logprob: -0.8274314403533936
    3. '       ' → logprob: -6.702431678771973
    4. '(lines' → logprob: -9.577431678771973
    5. '_lines' → logprob: -9.577431678771973
    6. '   ' → logprob: -9.702431678771973
    7. ' lines' → logprob: -11.077431678771973
    8. '```' → logprob: -11.077431678771973
    9. 'lines' → logprob: -11.577431678771973
    10. '        ' → logprob: -12.577431678771973

Token 762: 'div' (ID: 862)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2520008981227875
    2. ' lines' → logprob: -1.5020009279251099
    3. '   ' → logprob: -10.75200080871582
    4. '	lines' → logprob: -11.00200080871582
    5. '(lines' → logprob: -12.25200080871582
    6. '```' → logprob: -12.25200080871582
    7. 'line' → logprob: -12.37700080871582
    8. ' ' → logprob: -12.87700080871582
    9. '       ' → logprob: -12.87700080871582
    10. '           ' → logprob: -13.00200080871582

Token 763: 'isor' (ID: 65473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.02564537525177
    2. '_lines' → logprob: -1.27564537525177
    3. 'lines' → logprob: -1.65064537525177
    4. '       ' → logprob: -2.4006452560424805
    5. 'i' → logprob: -3.0256452560424805
    6. '           ' → logprob: -6.0256452560424805
    7. '	lines' → logprob: -6.0256452560424805
    8. '```' → logprob: -6.1506452560424805
    9. '      ' → logprob: -6.2756452560424805
    10. ' lines' → logprob: -6.2756452560424805

Token 764: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18044276535511017
    2. ' =' → logprob: -2.8054428100585938
    3. ']' → logprob: -3.6804428100585938
    4. ')' → logprob: -3.8054428100585938
    5. ')
' → logprob: -4.180442810058594
    6. ']
' → logprob: -4.555442810058594
    7. '=' → logprob: -4.555442810058594
    8. '_lines' → logprob: -4.555442810058594
    9. ' lines' → logprob: -5.805442810058594
    10. '(lines' → logprob: -6.180442810058594

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03967021778225899
    2. 'bottom' → logprob: -3.28967022895813
    3. ' bottom' → logprob: -7.164669990539551
    4. 'bot' → logprob: -7.789669990539551
    5. '   ' → logprob: -8.66466999053955
    6. '
' → logprob: -9.16466999053955
    7. '```' → logprob: -9.28966999053955
    8. '        
' → logprob: -11.66466999053955
    9. '=' → logprob: -11.66466999053955
    10. ',' → logprob: -11.78966999053955

Token 766: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' (adapté à ' bottom') → logprob: -0.18074935674667358
    2. ' bottom' → logprob: -1.9307494163513184
    3. 'bot' → logprob: -4.055749416351318
    4. ' lines' → logprob: -6.555749416351318
    5. ' bot' → logprob: -6.805749416351318
    6. 'lines' → logprob: -7.930749416351318
    7. '       ' → logprob: -10.18074893951416
    8. 'down' → logprob: -10.43074893951416
    9. 'b' → logprob: -11.18074893951416
    10. ' bottoms' → logprob: -12.30574893951416

Token 767: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0007737740525044501
    2. ' =' → logprob: -7.500773906707764
    3. '=' → logprob: -8.875773429870605
    4. 'lines' → logprob: -10.375773429870605
    5. 's' → logprob: -11.250773429870605
    6. '   ' → logprob: -11.500773429870605
    7. '_' → logprob: -12.000773429870605
    8. '```' → logprob: -12.125773429870605
    9. ' lines' → logprob: -12.875773429870605
    10. '_cells' → logprob: -13.125773429870605

Token 768: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022564470767975
    2. ' =' → logprob: -1.9102256298065186
    3. '   ' → logprob: -14.410225868225098
    4. ' lines' → logprob: -14.660225868225098
    5. ' ' → logprob: -15.910225868225098
    6. '       ' → logprob: -16.03522491455078
    7. '(lines' → logprob: -16.41022491455078
    8. 'lines' → logprob: -16.66022491455078
    9. 's' → logprob: -16.91022491455078
    10. '=
' → logprob: -17.41022491455078

Token 769: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.281202107667923
    2. 'lines' → logprob: -1.4062020778656006
    3. '(lines' → logprob: -11.15620231628418
    4. '	lines' → logprob: -11.28120231628418
    5. '   ' → logprob: -11.65620231628418
    6. ' ' → logprob: -12.78120231628418
    7. '       ' → logprob: -12.90620231628418
    8. '.lines' → logprob: -13.34370231628418
    9. '[' → logprob: -13.78120231628418
    10. '    ' → logprob: -13.84370231628418

Token 770: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043519894825294614
    2. ' =' → logprob: -7.8754353523254395
    3. '=' → logprob: -10.375434875488281
    4. 'lines' → logprob: -11.250434875488281
    5. '=i' → logprob: -12.750434875488281
    6. '[(' → logprob: -12.875434875488281
    7. '[' → logprob: -13.000434875488281
    8. 's' → logprob: -14.750434875488281
    9. '[e' → logprob: -14.875434875488281
    10. 'from' → logprob: -14.875434875488281

Token 771: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016319159418344498
    2. '[i' → logprob: -4.266319274902344
    3. '[' → logprob: -6.391319274902344
    4. ' +' → logprob: -8.266319274902344
    5. '1' → logprob: -9.391319274902344
    6. '[s' → logprob: -10.766319274902344
    7. '+i' → logprob: -10.891319274902344
    8. 'i' → logprob: -11.016319274902344
    9. ':' → logprob: -11.516319274902344
    10. '[
' → logprob: -11.766319274902344

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -13.125007629394531
    3. '2' → logprob: -13.625007629394531
    4. '```' → logprob: -13.750007629394531
    5. '...' → logprob: -13.875007629394531
    6. '
' → logprob: -14.000007629394531
    7. ':' → logprob: -14.625007629394531
    8. '+' → logprob: -15.375007629394531
    9. ':]' → logprob: -15.937507629394531
    10. 'None' → logprob: -16.00000762939453

Token 773: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.017610600218176842
    2. ':' → logprob: -4.642610549926758
    3. ':]
' → logprob: -4.892610549926758
    4. ']' → logprob: -8.392610549926758
    5. '+' → logprob: -10.392610549926758
    6. ':i' → logprob: -10.892610549926758
    7. ':],' → logprob: -11.517610549926758
    8. '1' → logprob: -11.517610549926758
    9. ':]

' → logprob: -11.892610549926758
    10. ' :]' → logprob: -12.017610549926758

Token 774: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1167549192905426
    2. '
' → logprob: -2.2417550086975098
    3. '   ' → logprob: -6.61675500869751
    4. ',' → logprob: -7.24175500869751
    5. ' top' → logprob: -7.61675500869751
    6. '        
' → logprob: -7.61675500869751
    7. '    
' → logprob: -8.241754531860352
    8. 'top' → logprob: -8.616754531860352
    9. ',
' → logprob: -9.241754531860352
    10. '<|end|>' → logprob: -9.491754531860352

Token 775: ' #' (ID: 1069)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6326329112052917
    2. 'top' → logprob: -0.8826329112052917
    3. '       ' → logprob: -3.0076329708099365
    4. '   ' → logprob: -5.507632732391357
    5. '
' → logprob: -7.882632732391357
    6. '	top' → logprob: -8.007633209228516
    7. 'return' → logprob: -8.132633209228516
    8. ' return' → logprob: -9.007633209228516
    9. '[top' → logprob: -9.007633209228516
    10. ' if' → logprob: -9.382633209228516

Token 776: ' Trim' (ID: 72417)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.002989470958709717
    2. ' top' → logprob: -6.502989292144775
    3. 'return' → logprob: -6.752989292144775
    4. '   ' → logprob: -8.627989768981934
    5. 'cell' → logprob: -9.877989768981934
    6. '       ' → logprob: -10.377989768981934
    7. 'def' → logprob: -10.877989768981934
    8. 'if' → logprob: -11.752989768981934
    9. 'bottom' → logprob: -11.877989768981934
    10. ' return' → logprob: -12.627989768981934

Token 777: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.5768885016441345
    2. 'top' → logprob: -0.8268885016441345
    3. '   ' → logprob: -8.326888084411621
    4. '(top' → logprob: -8.326888084411621
    5. '       ' → logprob: -8.451888084411621
    6. '
' → logprob: -9.326888084411621
    7. '	top' → logprob: -9.951888084411621
    8. 'def' → logprob: -10.326888084411621
    9. '[top' → logprob: -10.451888084411621
    10. '_top' → logprob: -10.951888084411621

Token 778: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0037032817490398884
    2. 'top' → logprob: -6.8787031173706055
    3. ' =' → logprob: -7.7537031173706055
    4. '_cells' → logprob: -7.8787031173706055
    5. '_top' → logprob: -8.003703117370605
    6. 'lines' → logprob: -8.128703117370605
    7. '(top' → logprob: -8.378703117370605
    8. '=' → logprob: -8.378703117370605
    9. '   ' → logprob: -8.378703117370605
    10. '       ' → logprob: -8.628703117370605

Token 779: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43450337648391724
    2. ' =' → logprob: -1.0595033168792725
    3. '       ' → logprob: -5.684503555297852
    4. '   ' → logprob: -6.184503555297852
    5. 'top' → logprob: -8.434503555297852
    6. ' top' → logprob: -10.434503555297852
    7. '[top' → logprob: -10.809503555297852
    8. ' and' → logprob: -11.059503555297852
    9. '(top' → logprob: -11.559503555297852
    10. '    ' → logprob: -12.184503555297852

Token 780: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.2015509456396103
    2. ' bottom' → logprob: -1.7015509605407715
    3. 'top' → logprob: -9.701550483703613
    4. 'def' → logprob: -11.576550483703613
    5. '       ' → logprob: -11.826550483703613
    6. '
' → logprob: -11.951550483703613
    7. ' top' → logprob: -11.951550483703613
    8. '   ' → logprob: -12.076550483703613
    9. '#' → logprob: -12.076550483703613
    10. 'split' → logprob: -12.701550483703613

Token 781: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.21262705326080322
    2. 'bottom' → logprob: -1.7126270532608032
    3. '_bottom' → logprob: -4.962626934051514
    4. '=' → logprob: -6.712626934051514
    5. '_cells' → logprob: -7.337626934051514
    6. 'lines' → logprob: -7.837626934051514
    7. ' =' → logprob: -7.837626934051514
    8. '       ' → logprob: -7.962626934051514
    9. 'top' → logprob: -8.337627410888672
    10. '   ' → logprob: -8.587627410888672

Token 782: ' horizontally' (ID: 113653)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.631475567817688
    2. '       ' → logprob: -1.131475567817688
    3. '=' → logprob: -2.5064754486083984
    4. 'top' → logprob: -3.3814754486083984
    5. '   ' → logprob: -3.8814754486083984
    6. ' top' → logprob: -5.006475448608398
    7. '
' → logprob: -7.256475448608398
    8. '[top' → logprob: -7.381475448608398
    9. '(top' → logprob: -7.881475448608398
    10. ',' → logprob: -8.756475448608398

Token 783: ' centered' (ID: 50768)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8025549650192261
    2. ' =' → logprob: -1.677554965019226
    3. 'top' → logprob: -1.677554965019226
    4. '=' → logprob: -3.4275550842285156
    5. ' top' → logprob: -3.4275550842285156
    6. ' to' → logprob: -3.8025550842285156
    7. '
' → logprob: -4.052555084228516
    8. ' and' → logprob: -4.177555084228516
    9. 'def' → logprob: -4.677555084228516
    10. ' for' → logprob: -4.927555084228516

Token 784: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42802661657333374
    2. ' top' → logprob: -2.4280266761779785
    3. ' at' → logprob: -2.6780266761779785
    4. 'top' → logprob: -3.3030266761779785
    5. '
' → logprob: -3.4280266761779785
    6. 'def' → logprob: -3.8030266761779785
    7. ' with' → logprob: -4.4280266761779785
    8. 'left' → logprob: -4.6780266761779785
    9. ' around' → logprob: -4.6780266761779785
    10. ' for' → logprob: -4.9280266761779785

Token 785: ' vinc' (ID: 46511)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.709122359752655
    2. '(s' → logprob: -0.709122359752655
    3. ' s' → logprob: -4.959122180938721
    4. ' (' → logprob: -5.209122180938721
    5. '(e' → logprob: -6.584122180938721
    6. 'e' → logprob: -7.209122180938721
    7. 'v' → logprob: -8.709122657775879
    8. '(v' → logprob: -8.834122657775879
    9. '((' → logprob: -8.834122657775879
    10. '
' → logprob: -9.209122657775879

Token 786: 'ulum' (ID: 40868)
  Prédit: 'ulum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulum' → logprob: -0.21951641142368317
    2. '   ' → logprob: -1.844516396522522
    3. 'um' → logprob: -4.219516277313232
    4. '  ' → logprob: -5.219516277313232
    5. '       ' → logprob: -5.469516277313232
    6. ' ' → logprob: -5.719516277313232
    7. '           ' → logprob: -5.844516277313232
    8. '     ' → logprob: -6.594516277313232
    9. '    ' → logprob: -6.844516277313232
    10. ' =' → logprob: -6.969516277313232

Token 787: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07638060301542282
    2. 's' → logprob: -4.451380729675293
    3. ' with' → logprob: -4.826380729675293
    4. 'start' → logprob: -4.826380729675293
    5. ',' → logprob: -5.201380729675293
    6. 'def' → logprob: -5.701380729675293
    7. ' s' → logprob: -5.951380729675293
    8. ':' → logprob: -5.951380729675293
    9. '
' → logprob: -6.076380729675293
    10. '        
' → logprob: -6.201380729675293

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010933688841760159
    2. '
' → logprob: -5.760933876037598
    3. ' =' → logprob: -6.260933876037598
    4. ',' → logprob: -7.010933876037598
    5. '        
' → logprob: -7.135933876037598
    6. ' for' → logprob: -7.510933876037598
    7. ':' → logprob: -7.635933876037598
    8. '#' → logprob: -7.885933876037598
    9. ' (' → logprob: -8.385933876037598
    10. ' with' → logprob: -8.510933876037598

Token 789: ' #' (ID: 1069)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -1.0127445459365845
    2. ' left' → logprob: -1.8877445459365845
    3. 'mid' → logprob: -2.012744426727295
    4. '       ' → logprob: -2.387744426727295
    5. ' if' → logprob: -3.012744426727295
    6. ' center' → logprob: -3.137744426727295
    7. 'left' → logprob: -3.512744426727295
    8. ' s' → logprob: -3.887744426727295
    9. 'center' → logprob: -4.012744426727295
    10. ' middle' → logprob: -4.262744426727295

Token 790: ' find' (ID: 1646)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.6817036271095276
    2. 'mid' → logprob: -1.3067035675048828
    3. 'left' → logprob: -2.681703567504883
    4. 'if' → logprob: -3.306703567504883
    5. 's' → logprob: -3.431703567504883
    6. 'cs' → logprob: -4.056703567504883
    7. 'c' → logprob: -4.556703567504883
    8. 'hs' → logprob: -4.931703567504883
    9. ' center' → logprob: -5.181703567504883
    10. '#' → logprob: -5.306703567504883

Token 791: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5376558899879456
    2. 'min' → logprob: -1.6626558303833008
    3. ' left' → logprob: -3.037655830383301
    4. 'v' → logprob: -3.037655830383301
    5. ' min' → logprob: -3.287655830383301
    6. 'center' → logprob: -3.912655830383301
    7. 'mid' → logprob: -3.912655830383301
    8. 'def' → logprob: -4.287655830383301
    9. 'max' → logprob: -4.662655830383301
    10. 's' → logprob: -4.787655830383301

Token 792: '/right' (ID: 199186)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07899080216884613
    2. '=' → logprob: -3.2039906978607178
    3. '_bound' → logprob: -4.328990936279297
    4. 's' → logprob: -5.203990936279297
    5. 'bound' → logprob: -5.578990936279297
    6. 'margin' → logprob: -5.828990936279297
    7. 'most' → logprob: -6.078990936279297
    8. '_margin' → logprob: -6.203990936279297
    9. '_offset' → logprob: -6.953990936279297
    10. 'col' → logprob: -7.078990936279297

Token 793: ' spaces' (ID: 18608)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1444367915391922
    2. '=' → logprob: -2.269436836242676
    3. '_bound' → logprob: -4.394436836242676
    4. 'bound' → logprob: -4.769436836242676
    5. 'most' → logprob: -5.269436836242676
    6. 'margin' → logprob: -6.769436836242676
    7. 's' → logprob: -7.019436836242676
    8. '   ' → logprob: -7.644436836242676
    9. 'limit' → logprob: -8.144436836242676
    10. '_margin' → logprob: -8.144436836242676

Token 794: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4945404827594757
    2. ' =' → logprob: -1.4945404529571533
    3. '=' → logprob: -1.8695404529571533
    4. '   ' → logprob: -5.244540691375732
    5. 'left' → logprob: -5.619540691375732
    6. ',' → logprob: -8.119540214538574
    7. '_left' → logprob: -8.119540214538574
    8. ' left' → logprob: -8.619540214538574
    9. 'def' → logprob: -8.869540214538574
    10. 'while' → logprob: -8.994540214538574

Token 795: ' pad' (ID: 11280)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9268214702606201
    2. 'trim' → logprob: -1.4268214702606201
    3. 'the' → logprob: -2.80182147026062
    4. 'min' → logprob: -2.80182147026062
    5. 'remove' → logprob: -3.05182147026062
    6. 'pad' → logprob: -3.30182147026062
    7. ' trim' → logprob: -3.55182147026062
    8. ' the' → logprob: -4.051821708679199
    9. ' max' → logprob: -4.051821708679199
    10. 'balance' → logprob: -4.176821708679199

Token 796: ' for' (ID: 395)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.216537594795227
    2. 'left' → logprob: -1.341537594795227
    3. ' top' → logprob: -1.466537594795227
    4. '       ' → logprob: -2.4665374755859375
    5. ' left' → logprob: -2.7165374755859375
    6. '
' → logprob: -3.7165374755859375
    7. ' =' → logprob: -4.2165374755859375
    8. '=' → logprob: -5.8415374755859375
    9. '_left' → logprob: -5.9665374755859375
    10. '   ' → logprob: -6.0915374755859375

Token 797: ' dividend' (ID: 53956)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.44984912872314453
    2. ' top' → logprob: -1.5748491287231445
    3. 'max' → logprob: -2.3248491287231445
    4. ' alignment' → logprob: -3.9498491287231445
    5. ' max' → logprob: -4.8248491287231445
    6. 'alignment' → logprob: -4.8248491287231445
    7. 's' → logprob: -5.3248491287231445
    8. 'both' → logprob: -6.3248491287231445
    9. ' cent' → logprob: -6.3248491287231445
    10. ' s' → logprob: -6.4498491287231445

Token 798: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009690692648291588
    2. ' =' → logprob: -5.384690761566162
    3. 'left' → logprob: -6.884690761566162
    4. '=' → logprob: -7.009690761566162
    5. 'top' → logprob: -7.009690761566162
    6. ',' → logprob: -7.259690761566162
    7. 'def' → logprob: -8.384690284729004
    8. '   ' → logprob: -8.509690284729004
    9. '
' → logprob: -9.009690284729004
    10. ' and' → logprob: -9.259690284729004

Token 799: ' divisor' (ID: 100482)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.06938983500003815
    2. 'right' → logprob: -2.944389820098877
    3. 'div' → logprob: -4.319389820098877
    4. ' bottom' → logprob: -7.569389820098877
    5. 'top' → logprob: -7.819389820098877
    6. 'v' → logprob: -9.819390296936035
    7. 'def' → logprob: -9.819390296936035
    8. ' right' → logprob: -11.194390296936035
    9. 'divider' → logprob: -11.819390296936035
    10. 'den' → logprob: -11.944390296936035

Token 800: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006707197520881891
    2. 'left' → logprob: -5.881707191467285
    3. 'top' → logprob: -7.006707191467285
    4. ' =' → logprob: -7.006707191467285
    5. ' left' → logprob: -7.131707191467285
    6. ' top' → logprob: -7.756707191467285
    7. ',' → logprob: -8.881707191467285
    8. '=' → logprob: -8.881707191467285
    9. '   ' → logprob: -9.131707191467285
    10. '_left' → logprob: -9.631707191467285

Token 801: ' spec' (ID: 1755)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.2280117273330688
    2. 'max' → logprob: -1.7280117273330688
    3. 'len' → logprob: -2.6030116081237793
    4. 'length' → logprob: -2.7280116081237793
    5. 'width' → logprob: -2.7280116081237793
    6. 'side' → logprob: -2.9780116081237793
    7. 'v' → logprob: -2.9780116081237793
    8. 'def' → logprob: -3.6030116081237793
    9. ' side' → logprob: -3.6030116081237793
    10. ' top' → logprob: -3.7280116081237793

Token 802: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00666765496134758
    2. '
' → logprob: -5.381667613983154
    3. '        
' → logprob: -7.881667613983154
    4. ',' → logprob: -8.006668090820312
    5. 'left' → logprob: -8.131668090820312
    6. ' =' → logprob: -8.381668090820312
    7. ' left' → logprob: -8.506668090820312
    8. '   ' → logprob: -8.756668090820312
    9. ':' → logprob: -9.506668090820312
    10. ' (' → logprob: -10.131668090820312

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035599232651293278
    2. '   ' → logprob: -6.7535600662231445
    3. 'left' → logprob: -7.5035600662231445
    4. ',' → logprob: -8.003560066223145
    5. ' left' → logprob: -8.003560066223145
    6. '        
' → logprob: -8.878560066223145
    7. ':' → logprob: -9.128560066223145
    8. ' =' → logprob: -9.378560066223145
    9. '<|end|>' → logprob: -9.503560066223145
    10. '
' → logprob: -9.628560066223145

Token 804: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7136146426200867
    2. ' left' → logprob: -1.2136147022247314
    3. 'left' → logprob: -1.8386147022247314
    4. ' l' → logprob: -4.088614463806152
    5. 'l' → logprob: -5.463614463806152
    6. ' ind' → logprob: -5.588614463806152
    7. ' top' → logprob: -5.588614463806152
    8. '   ' → logprob: -5.838614463806152
    9. ' lef' → logprob: -6.088614463806152
    10. '#' (adapté à ' #') → logprob: -6.213614463806152

Token 805: ' dividend' (ID: 53956)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19365902245044708
    2. ' left' → logprob: -2.4436590671539307
    3. 'left' → logprob: -2.6936590671539307
    4. ' pad' → logprob: -5.568658828735352
    5. 'pad' → logprob: -5.943658828735352
    6. ' l' → logprob: -6.068658828735352
    7. '   ' → logprob: -6.443658828735352
    8. 'top' → logprob: -6.568658828735352
    9. ' top' → logprob: -6.568658828735352
    10. ' ind' → logprob: -6.693658828735352

Token 806: ' and' (ID: 326)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.27205902338027954
    2. '_lines' → logprob: -2.6470589637756348
    3. '_w' → logprob: -3.1470589637756348
    4. ' =' → logprob: -3.5220589637756348
    5. '_width' → logprob: -3.5220589637756348
    6. '_pad' → logprob: -4.397058963775635
    7. '_len' → logprob: -4.397058963775635
    8. '_start' → logprob: -4.772058963775635
    9. 'left' → logprob: -5.147058963775635
    10. '_cells' → logprob: -5.522058963775635

Token 807: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.536304235458374
    2. ' divisor' → logprob: -0.911304235458374
    3. 'v' → logprob: -4.411304473876953
    4. 'top' → logprob: -8.286304473876953
    5. 'def' → logprob: -8.411304473876953
    6. '
' → logprob: -8.911304473876953
    7. '#' → logprob: -9.411304473876953
    8. 'divider' → logprob: -9.786304473876953
    9. '       ' → logprob: -10.411304473876953
    10. ' ' → logprob: -10.536304473876953

Token 808: ' widths' (ID: 127335)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14988702535629272
    2. '_cells' → logprob: -2.6498870849609375
    3. '=' → logprob: -4.1498870849609375
    4. ' are' → logprob: -4.8998870849609375
    5. '_top' → logprob: -4.8998870849609375
    6. '_cell' → logprob: -5.0248870849609375
    7. ' cells' → logprob: -5.2748870849609375
    8. '   ' → logprob: -5.3998870849609375
    9. '_lines' → logprob: -5.3998870849609375
    10. 'cells' → logprob: -6.3998870849609375

Token 809: ' w' (ID: 286)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2671142518520355
    2. '=' → logprob: -1.767114281654358
    3. '       ' → logprob: -4.017114162445068
    4. 'top' → logprob: -4.142114162445068
    5. ' are' → logprob: -5.017114162445068
    6. '   ' → logprob: -5.267114162445068
    7. ' top' → logprob: -5.517114162445068
    8. '_top' → logprob: -5.517114162445068
    9. 's' → logprob: -5.767114162445068
    10. ',' → logprob: -5.892114162445068

Token 810: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6330467462539673
    2. '=' → logprob: -0.8830467462539673
    3. 'idth' → logprob: -3.1330466270446777
    4. ',' → logprob: -5.008046627044678
    5. '   ' → logprob: -5.383046627044678
    6. 'ith' → logprob: -9.508047103881836
    7. '>' → logprob: -10.258047103881836
    8. 's' → logprob: -10.383047103881836
    9. 'def' → logprob: -10.633047103881836
    10. 'e' → logprob: -10.633047103881836

Token 811: ',w' (ID: 49598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8341042995452881
    2. ' =' → logprob: -0.8341042995452881
    3. ',' → logprob: -2.209104299545288
    4. 'idth' → logprob: -4.084104537963867
    5. ' and' → logprob: -6.834104537963867
    6. '1' → logprob: -7.084104537963867
    7. '   ' → logprob: -7.084104537963867
    8. ',w' → logprob: -8.584104537963867
    9. 'and' → logprob: -8.709104537963867
    10. 'hile' → logprob: -8.834104537963867

Token 812: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5951646566390991
    2. ' =' → logprob: -1.8451646566390991
    3. '=' → logprob: -1.9701646566390991
    4. '2' → logprob: -2.2201647758483887
    5. ',' → logprob: -3.4701647758483887
    6. 'idth' → logprob: -4.970164775848389
    7. '```' → logprob: -6.845164775848389
    8. '   ' → logprob: -7.720164775848389
    9. 'w' → logprob: -7.845164775848389
    10. '...' → logprob: -7.845164775848389

Token 813: ' <=' (ID: 5017)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20656852424144745
    2. '       ' → logprob: -1.8315684795379639
    3. '=' → logprob: -3.831568479537964
    4. '
' → logprob: -6.456568717956543
    5. '   ' → logprob: -6.831568717956543
    6. ',' → logprob: -7.331568717956543
    7. 'w' → logprob: -7.456568717956543
    8. '1' → logprob: -9.081568717956543
    9. '=
' → logprob: -9.206568717956543
    10. ':' → logprob: -9.456568717956543

Token 814: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.06754479557275772
    2. ' width' → logprob: -3.31754469871521
    3. 'max' → logprob: -4.442544937133789
    4. 'w' → logprob: -5.067544937133789
    5. 'e' → logprob: -5.692544937133789
    6. '(width' → logprob: -6.317544937133789
    7. 'min' → logprob: -6.567544937133789
    8. 'len' → logprob: -6.692544937133789
    9. ' max' → logprob: -6.942544937133789
    10. ' e' → logprob: -7.192544937133789

Token 815: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3309701681137085
    2. '
' → logprob: -1.5809701681137085
    3. '<|end|>' → logprob: -3.205970287322998
    4. '<|end|>' → logprob: -4.205970287322998
    5. ',' → logprob: -4.830970287322998
    6. '        
' → logprob: -5.330970287322998
    7. '   ' → logprob: -5.955970287322998
    8. ' and' → logprob: -6.955970287322998
    9. ',
' → logprob: -7.330970287322998
    10. 'def' → logprob: -7.830970287322998

Token 816: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08651896566152573
    2. '2' → logprob: -2.7115190029144287
    3. ' ' → logprob: -4.46151876449585
    4. '0' → logprob: -6.46151876449585
    5. '
' → logprob: -7.33651876449585
    6. '   ' → logprob: -7.71151876449585
    7. '4' → logprob: -7.83651876449585
    8. '=' → logprob: -8.336519241333008
    9. 'def' → logprob: -8.336519241333008
    10. '3' → logprob: -8.961519241333008

Token 817: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.464999794960022
    2. '
' → logprob: -1.214999794960022
    3. '<|end|>' → logprob: -2.8399996757507324
    4. '<|end|>' → logprob: -5.339999675750732
    5. ',' → logprob: -5.464999675750732
    6. '        
' → logprob: -6.214999675750732
    7. '   ' → logprob: -6.589999675750732
    8. ' and' → logprob: -7.714999675750732
    9. ' (' → logprob: -7.839999675750732
    10. ' if' → logprob: -7.839999675750732

Token 818: ' w' (ID: 286)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -1.355790615081787
    2. '
' → logprob: -1.855790615081787
    3. 'top' → logprob: -2.230790615081787
    4. '<|end|>' → logprob: -2.230790615081787
    5. ' return' → logprob: -2.605790615081787
    6. ' 
' → logprob: -3.105790615081787
    7. '#' → logprob: -3.355790615081787
    8. '       ' → logprob: -3.480790615081787
    9. 'return' → logprob: -3.605790615081787
    10. ' #' → logprob: -3.605790615081787

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2152271568775177
    2. 'hile' → logprob: -2.5902271270751953
    3. '=' → logprob: -3.2152271270751953
    4. ' =' → logprob: -3.3402271270751953
    5. 'idth' → logprob: -4.215227127075195
    6. '   ' → logprob: -4.340227127075195
    7. 'top' → logprob: -6.090227127075195
    8. '...' → logprob: -6.090227127075195
    9. '#' → logprob: -6.965227127075195
    10. '
' → logprob: -7.090227127075195

Token 820: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0725340843200684
    2. '=' → logprob: -1.5725340843200684
    3. ' and' → logprob: -1.6975340843200684
    4. ',' → logprob: -3.1975340843200684
    5. '-' → logprob: -3.4475340843200684
    6. '+' → logprob: -3.4475340843200684
    7. 'and' → logprob: -3.6975340843200684
    8. ' <=' → logprob: -3.8225340843200684
    9. '   ' → logprob: -4.322534084320068
    10. '<|end|>' → logprob: -4.572534084320068

Token 821: ' max' (ID: 2999)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.140362024307251
    2. 'width' → logprob: -1.140362024307251
    3. 'max' → logprob: -1.890362024307251
    4. 'e' → logprob: -3.140362024307251
    5. 'len' → logprob: -3.265362024307251
    6. '(width' → logprob: -3.265362024307251
    7. 's' → logprob: -3.640362024307251
    8. 'None' → logprob: -4.640361785888672
    9. '0' → logprob: -4.640361785888672
    10. 'min' → logprob: -4.890361785888672

Token 822: ' width' (ID: 4345)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20665837824344635
    2. '_w' → logprob: -2.081658363342285
    3. ' =' → logprob: -4.331658363342285
    4. '_width' → logprob: -4.456658363342285
    5. 'width' → logprob: -5.081658363342285
    6. 'def' → logprob: -5.831658363342285
    7. ',' → logprob: -5.831658363342285
    8. '=' → logprob: -5.831658363342285
    9. '(w' → logprob: -5.956658363342285
    10. 'top' → logprob: -6.206658363342285

Token 823: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24933724105358124
    2. '1' → logprob: -2.3743371963500977
    3. '=' → logprob: -3.2493371963500977
    4. ',' → logprob: -3.3743371963500977
    5. 'w' → logprob: -3.6243371963500977
    6. '   ' → logprob: -4.999337196350098
    7. 's' → logprob: -5.499337196350098
    8. 'top' → logprob: -5.749337196350098
    9. ',w' → logprob: -5.999337196350098
    10. '=w' → logprob: -5.999337196350098

Token 824: ' dividend' (ID: 53956)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.020366108044981956
    2. 'trim' → logprob: -4.145366191864014
    3. ' top' → logprob: -7.020366191864014
    4. '[top' → logprob: -7.020366191864014
    5. 'split' → logprob: -7.395366191864014
    6. 'max' → logprob: -7.895366191864014
    7. 'cell' → logprob: -8.145365715026855
    8. 'len' → logprob: -8.270365715026855
    9. '
' → logprob: -8.895365715026855
    10. 'strip' → logprob: -9.145365715026855

Token 825: ' cell' (ID: 4206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1701399087905884
    2. '       ' → logprob: -1.5451399087905884
    3. ' =' → logprob: -1.9201399087905884
    4. ' and' → logprob: -2.170139789581299
    5. 'w' → logprob: -2.795139789581299
    6. '   ' → logprob: -3.045139789581299
    7. '=' → logprob: -3.795139789581299
    8. 'and' → logprob: -4.045139789581299
    9. ' w' → logprob: -4.545139789581299
    10. '
' → logprob: -5.045139789581299

Token 826: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12424639612436295
    2. ',' → logprob: -2.99924635887146
    3. '
' → logprob: -4.249246597290039
    4. ' and' → logprob: -4.499246597290039
    5. '<|end|>' → logprob: -4.499246597290039
    6. ' =' → logprob: -5.249246597290039
    7. '<|end|>' → logprob: -5.374246597290039
    8. '   ' → logprob: -5.749246597290039
    9. 's' → logprob: -6.124246597290039
    10. ';' → logprob: -6.624246597290039

Token 827: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.30517110228538513
    2. ' w' → logprob: -2.055171012878418
    3. '       ' → logprob: -3.555171012878418
    4. '#' → logprob: -3.555171012878418
    5. '...' → logprob: -4.180171012878418
    6. 'top' → logprob: -4.680171012878418
    7. ' top' → logprob: -4.930171012878418
    8. '
' → logprob: -5.305171012878418
    9. ' #' → logprob: -5.305171012878418
    10. 'def' → logprob: -5.430171012878418

Token 828: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3055863082408905
    2. '=' → logprob: -1.930586338043213
    3. ' =' → logprob: -2.555586338043213
    4. '2' → logprob: -3.680586338043213
    5. '   ' → logprob: -5.430586338043213
    6. 'idth' → logprob: -6.305586338043213
    7. '-' → logprob: -6.930586338043213
    8. 'ight' → logprob: -7.180586338043213
    9. 's' → logprob: -7.180586338043213
    10. '-=' → logprob: -7.555586338043213

Token 829: ' similarly' (ID: 60314)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2824611961841583
    2. '=' → logprob: -1.407461166381836
    3. ',' → logprob: -7.407461166381836
    4. '   ' → logprob: -8.282461166381836
    5. 'def' → logprob: -10.157461166381836
    6. '=max' → logprob: -10.282461166381836
    7. 'w' → logprob: -10.282461166381836
    8. 'max' → logprob: -10.407461166381836
    9. '...' → logprob: -10.532461166381836
    10. '<|end|>' → logprob: -10.657461166381836

Token 830: ' divisor' (ID: 100482)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04929117113351822
    2. '<|end|>' → logprob: -3.9242911338806152
    3. ',' → logprob: -4.924291133880615
    4. '
' → logprob: -5.049291133880615
    5. '<|end|>' → logprob: -5.424291133880615
    6. '        
' → logprob: -6.674291133880615
    7. ' and' → logprob: -6.799291133880615
    8. '#' → logprob: -6.799291133880615
    9. '   ' → logprob: -7.174291133880615
    10. ' w' → logprob: -7.299291133880615

Token 831: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1015039011836052
    2. '
' → logprob: -2.851503849029541
    3. '<|end|>' → logprob: -3.851503849029541
    4. '<|end|>' → logprob: -5.101503849029541
    5. '        
' → logprob: -5.851503849029541
    6. '   ' → logprob: -6.101503849029541
    7. ',' → logprob: -6.351503849029541
    8. '#' → logprob: -6.476503849029541
    9. 'def' → logprob: -7.476503849029541
    10. 's' → logprob: -7.851503849029541

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15512840449810028
    2. '   ' → logprob: -2.5301284790039062
    3. '
' → logprob: -3.5301284790039062
    4. '<|end|>' → logprob: -3.6551284790039062
    5. ' w' → logprob: -6.655128479003906
    6. '#' → logprob: -6.780128479003906
    7. '        
' → logprob: -7.030128479003906
    8. ',' → logprob: -7.155128479003906
    9. '<|end|>' → logprob: -7.155128479003906
    10. 'w' → logprob: -7.405128479003906

Token 833: ' #' (ID: 1069)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0274415016174316
    2. ' top' → logprob: -1.7774415016174316
    3. '       ' → logprob: -2.1524415016174316
    4. ' w' → logprob: -2.2774415016174316
    5. '
' → logprob: -2.2774415016174316
    6. 'top' → logprob: -2.5274415016174316
    7. '#' (adapté à ' #') → logprob: -3.6524415016174316
    8. 'def' → logprob: -4.527441501617432
    9. ' #' → logprob: -4.777441501617432
    10. 'max' → logprob: -5.277441501617432

Token 834: ' They' (ID: 3164)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5111947059631348
    2. 'top' → logprob: -1.7611947059631348
    3. 'max' → logprob: -2.8861947059631348
    4. 'left' → logprob: -3.0111947059631348
    5. '       ' → logprob: -3.1361947059631348
    6. '#' → logprob: -3.1361947059631348
    7. 'def' → logprob: -4.136194705963135
    8. ' w' → logprob: -5.511194705963135
    9. 'div' → logprob: -5.511194705963135
    10. ' top' → logprob: -6.511194705963135

Token 835: ' may' (ID: 1340)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3153396248817444
    2. '       ' → logprob: -2.5653395652770996
    3. '=' → logprob: -2.9403395652770996
    4. '_' → logprob: -3.4403395652770996
    5. '   ' → logprob: -3.6903395652770996
    6. '#' → logprob: -4.3153395652771
    7. 'w' → logprob: -4.4403395652771
    8. '_top' → logprob: -4.5653395652771
    9. ' #' → logprob: -4.9403395652771
    10. '...' → logprob: -5.3153395652771

Token 836: ' have' (ID: 679)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48364508152008057
    2. '=' → logprob: -2.108644962310791
    3. '       ' → logprob: -2.608644962310791
    4. '   ' → logprob: -3.608644962310791
    5. 'top' → logprob: -3.858644962310791
    6. 'def' → logprob: -4.108644962310791
    7. '_top' → logprob: -4.233644962310791
    8. ' are' → logprob: -4.483644962310791
    9. ' may' → logprob: -4.483644962310791
    10. ' top' → logprob: -4.483644962310791

Token 837: ' trailing' (ID: 57985)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7415201663970947
    2. '
' → logprob: -2.6165201663970947
    3. '       ' → logprob: -2.6165201663970947
    4. '   ' → logprob: -2.9915201663970947
    5. ' to' → logprob: -3.1165201663970947
    6. 'max' → logprob: -3.2415201663970947
    7. 'w' → logprob: -3.3665201663970947
    8. '0' → logprob: -3.6165201663970947
    9. 'to' → logprob: -3.7415201663970947
    10. 'def' → logprob: -3.7415201663970947

Token 838: ' spaces' (ID: 18608)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6934825778007507
    2. 'and' → logprob: -1.3184826374053955
    3. ' spaces' → logprob: -2.3184826374053955
    4. 'spaces' → logprob: -2.6934826374053955
    5. '_spaces' → logprob: -3.9434826374053955
    6. ' or' → logprob: -4.193482398986816
    7. '#' → logprob: -5.568482398986816
    8. 'or' → logprob: -5.693482398986816
    9. '```' → logprob: -5.693482398986816
    10. ',' → logprob: -5.818482398986816

Token 839: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5384877920150757
    2. ',' → logprob: -2.5384879112243652
    3. ' or' → logprob: -2.7884879112243652
    4. ' in' → logprob: -2.7884879112243652
    5. 'and' → logprob: -3.0384879112243652
    6. ' to' → logprob: -3.4134879112243652
    7. ' that' → logprob: -3.6634879112243652
    8. '.' → logprob: -3.9134879112243652
    9. ' but' → logprob: -3.9134879112243652
    10. '<|end|>' → logprob: -3.9134879112243652

Token 840: ' dots' (ID: 53572)
  Prédit: 'leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leading' → logprob: -0.08754468709230423
    2. ' leading' → logprob: -2.9625446796417236
    3. 'lines' → logprob: -3.9625446796417236
    4. ' lines' → logprob: -4.837544918060303
    5. 'new' → logprob: -6.837544918060303
    6. 'newline' → logprob: -7.462544918060303
    7. 'tr' → logprob: -7.712544918060303
    8. ' trailing' → logprob: -7.837544918060303
    9. 'blank' → logprob: -8.087544441223145
    10. 'extra' → logprob: -8.212544441223145

Token 841: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2672451734542847
    2. ' to' → logprob: -1.6422451734542847
    3. ',' → logprob: -2.017245292663574
    4. '   ' → logprob: -2.142245292663574
    5. '        
' → logprob: -2.517245292663574
    6. '
' → logprob: -3.017245292663574
    7. '    
' → logprob: -3.267245292663574
    8. ' that' → logprob: -4.017245292663574
    9. ' in' → logprob: -4.142245292663574
    10. '.' → logprob: -4.142245292663574

Token 842: ' trim' (ID: 19334)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -1.3733528852462769
    2. '#' → logprob: -1.9983528852462769
    3. '       ' → logprob: -1.9983528852462769
    4. ' but' → logprob: -2.3733530044555664
    5. ' and' → logprob: -2.3733530044555664
    6. '...' → logprob: -3.3733530044555664
    7. 'def' → logprob: -3.4983530044555664
    8. ' which' → logprob: -3.6233530044555664
    9. '
' → logprob: -3.7483530044555664
    10. 'and' → logprob: -3.9983530044555664

Token 843: ' horizontally' (ID: 113653)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1461155414581299
    2. 'top' → logprob: -1.2711155414581299
    3. ' top' → logprob: -1.7711155414581299
    4. '   ' → logprob: -2.89611554145813
    5. '
' → logprob: -2.89611554145813
    6. ' while' → logprob: -3.64611554145813
    7. ' to' → logprob: -4.396115303039551
    8. 'while' → logprob: -4.521115303039551
    9. ' and' → logprob: -4.646115303039551
    10. ' for' → logprob: -4.771115303039551

Token 844: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07414335757493973
    2. ' while' → logprob: -3.949143409729004
    3. 'while' → logprob: -4.199143409729004
    4. '   ' → logprob: -4.449143409729004
    5. '
' → logprob: -5.449143409729004
    6. ' for' → logprob: -5.824143409729004
    7. ' and' → logprob: -5.824143409729004
    8. '.' → logprob: -6.199143409729004
    9. 'top' → logprob: -6.324143409729004
    10. 'left' → logprob: -6.449143409729004

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003619908355176449
    2. ' and' → logprob: -7.12861967086792
    3. '   ' → logprob: -7.37861967086792
    4. '<|end|>' → logprob: -7.62861967086792
    5. 'left' → logprob: -7.75361967086792
    6. '        
' → logprob: -8.253620147705078
    7. ',' → logprob: -8.503620147705078
    8. ' left' → logprob: -9.128620147705078
    9. '.' → logprob: -9.253620147705078
    10. ' for' → logprob: -9.503620147705078

Token 846: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.822794497013092
    2. 'top' (adapté à ' top') → logprob: -1.3227944374084473
    3. '       ' → logprob: -1.4477944374084473
    4. 'left' → logprob: -3.6977944374084473
    5. ' left' → logprob: -4.447794437408447
    6. 'def' → logprob: -4.572794437408447
    7. '   ' → logprob: -5.947794437408447
    8. 'while' → logprob: -6.697794437408447
    9. '#' → logprob: -6.947794437408447
    10. ' def' → logprob: -6.947794437408447

Token 847: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0017488420708104968
    2. '_width' → logprob: -7.501749038696289
    3. ' =' → logprob: -7.751749038696289
    4. '_cells' → logprob: -7.876749038696289
    5. '_data' → logprob: -8.876749038696289
    6. '=' → logprob: -9.626749038696289
    7. '_' → logprob: -10.126749038696289
    8. 'lines' → logprob: -10.376749038696289
    9. '_w' → logprob: -10.626749038696289
    10. 'width' → logprob: -11.251749038696289

Token 848: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020958632230759
    2. ' =' → logprob: -2.3502094745635986
    3. '[' → logprob: -13.72520923614502
    4. '=[' → logprob: -14.35020923614502
    5. '   ' → logprob: -14.72520923614502
    6. ' ' → logprob: -15.60020923614502
    7. 'trim' → logprob: -15.85020923614502
    8. ',' → logprob: -15.85020923614502
    9. '[:]' → logprob: -16.475210189819336
    10. '=cut' → logprob: -16.600210189819336

Token 849: ' [' (ID: 723)
  Prédit: '[top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[top' → logprob: -0.2965686023235321
    2. '[' → logprob: -2.1715686321258545
    3. 'trim' → logprob: -2.1715686321258545
    4. ' [' → logprob: -4.171568393707275
    5. 'top' → logprob: -5.046568393707275
    6. ' trim' → logprob: -5.671568393707275
    7. '[t' → logprob: -6.671568393707275
    8. ' top' → logprob: -7.421568393707275
    9. '[line' → logprob: -9.171568870544434
    10. '['' → logprob: -9.171568870544434

Token 850: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20311808586120605
    2. 'row' → logprob: -1.703118085861206
    3. ' line' → logprob: -6.828118324279785
    4. ' row' → logprob: -8.203118324279785
    5. 'tl' → logprob: -8.703118324279785
    6. 'l' → logprob: -8.953118324279785
    7. 'ln' → logprob: -10.453118324279785
    8. 't' → logprob: -12.328118324279785
    9. 'top' → logprob: -12.703118324279785
    10. 'trim' → logprob: -12.828118324279785

Token 851: '[s' (ID: 24177)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.5889633297920227
    2. '[s' → logprob: -0.9639633297920227
    3. '.rstrip' → logprob: -2.963963270187378
    4. '[' → logprob: -5.338963508605957
    5. '[:]' → logprob: -5.838963508605957
    6. '[l' → logprob: -7.088963508605957
    7. ' +' → logprob: -7.588963508605957
    8. '+s' → logprob: -8.088963508605957
    9. '           ' → logprob: -8.338963508605957
    10. '.l' → logprob: -8.338963508605957

Token 852: ':e' (ID: 87596)
  Prédit: ':e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':e' → logprob: -0.00032497590291313827
    2. ':' → logprob: -9.000325202941895
    3. ':r' → logprob: -9.500325202941895
    4. ':s' → logprob: -9.625325202941895
    5. ':right' → logprob: -11.500325202941895
    6. 'e' → logprob: -11.625325202941895
    7. ' :' → logprob: -11.750325202941895
    8. '+' → logprob: -11.875325202941895
    9. ':end' → logprob: -12.500325202941895
    10. ':].' → logprob: -12.625325202941895

Token 853: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.226628895296017e-06
    2. ' +' → logprob: -11.875007629394531
    3. ']+' → logprob: -16.37500762939453
    4. '1' → logprob: -17.00000762939453
    5. 's' → logprob: -17.62500762939453
    6. ']' → logprob: -17.75000762939453
    7. '-' → logprob: -18.37500762939453
    8. '[' → logprob: -18.75000762939453
    9. '＋' → logprob: -18.75000762939453
    10. '2' → logprob: -19.62500762939453

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. ']' → logprob: -16.875001907348633
    4. '+' → logprob: -16.875001907348633
    5. '2' → logprob: -18.375001907348633
    6. ']+' → logprob: -18.750001907348633
    7. 's' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.500001907348633
    9. '])' → logprob: -20.625001907348633
    10. '```' → logprob: -21.000001907348633

Token 855: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4297214150428772
    2. ']' → logprob: -1.0547213554382324
    3. '.rstrip' → logprob: -7.679721355438232
    4. '   ' → logprob: -8.55472183227539
    5. ' ].' → logprob: -8.55472183227539
    6. ' ]' → logprob: -9.17972183227539
    7. '.strip' → logprob: -10.30472183227539
    8. '.replace' → logprob: -11.92972183227539
    9. 'rstrip' → logprob: -12.55472183227539
    10. '.l' → logprob: -12.67972183227539

Token 856: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020196720957756042
    2. 'for' → logprob: -4.020196914672852
    3. '[:]' → logprob: -6.520196914672852
    4. '       ' → logprob: -7.895196914672852
    5. '           ' → logprob: -9.020196914672852
    6. ']' → logprob: -10.895196914672852
    7. '               ' → logprob: -11.395196914672852
    8. '        ' → logprob: -11.395196914672852
    9. '	for' → logprob: -11.645196914672852
    10. '            ' → logprob: -12.145196914672852

Token 857: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00017970333283301443
    2. ' line' → logprob: -8.625179290771484
    3. '	line' → logprob: -17.500179290771484
    4. '#line' → logprob: -17.625179290771484
    5. '(line' → logprob: -17.875179290771484
    6. 'top' → logprob: -17.875179290771484
    7. ' ' → logprob: -18.000179290771484
    8. '=line' → logprob: -19.125179290771484
    9. '
' → logprob: -19.250179290771484
    10. '   ' → logprob: -19.500179290771484

Token 858: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5429422855377197
    2. 'in' → logprob: -0.9179422855377197
    3. 'line' → logprob: -4.292942047119141
    4. 'top' → logprob: -5.417942047119141
    5. ' line' → logprob: -6.792942047119141
    6. ' top' → logprob: -7.917942047119141
    7. ' ' → logprob: -11.41794204711914
    8. '
' → logprob: -12.04294204711914
    9. 'lines' → logprob: -12.66794204711914
    10. 'range' → logprob: -12.91794204711914

Token 859: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -8.566264295950532e-05
    2. ' top' → logprob: -9.500085830688477
    3. 'range' → logprob: -11.500085830688477
    4. '
' → logprob: -15.625085830688477
    5. '   ' → logprob: -15.875085830688477
    6. 'line' → logprob: -16.625085830688477
    7. ' ' → logprob: -16.625085830688477
    8. '[top' → logprob: -16.750085830688477
    9. '(top' → logprob: -16.875085830688477
    10. 'lines' → logprob: -17.000085830688477

Token 860: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.004627360496670008
    2. 'lines' → logprob: -5.379627227783203
    3. 'Lines' → logprob: -13.129627227783203
    4. '
' → logprob: -13.754627227783203
    5. ']' → logprob: -14.129627227783203
    6. '   ' → logprob: -14.254627227783203
    7. '```' → logprob: -14.254627227783203
    8. '_LINES' → logprob: -14.879627227783203
    9. '	lines' → logprob: -15.254627227783203
    10. ' lines' → logprob: -15.379627227783203

Token 861: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07012081891298294
    2. '       ' → logprob: -2.8201208114624023
    3. ']
' → logprob: -5.070120811462402
    4. ' ]' → logprob: -6.945120811462402
    5. ' if' → logprob: -8.320120811462402
    6. '   ' → logprob: -8.570120811462402
    7. '<|end|>' → logprob: -8.695120811462402
    8. '
' → logprob: -10.070120811462402
    9. '        
' → logprob: -10.195120811462402
    10. '           ' → logprob: -10.195120811462402

Token 862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15895730257034302
    2. '   ' → logprob: -2.0339572429656982
    3. 'top' → logprob: -4.533957481384277
    4. '<|end|>' → logprob: -6.158957481384277
    5. '[top' → logprob: -6.783957481384277
    6. ' top' → logprob: -7.283957481384277
    7. ',' → logprob: -7.783957481384277
    8. '
' → logprob: -8.033957481384277
    9. ')' → logprob: -9.033957481384277
    10. 'def' → logprob: -9.533957481384277

Token 863: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.4957437813282013
    2. 'bottom' (adapté à ' bottom') → logprob: -1.745743751525879
    3. '       ' → logprob: -1.995743751525879
    4. ' top' → logprob: -3.245743751525879
    5. ' bottom' → logprob: -3.370743751525879
    6. '   ' → logprob: -4.995743751525879
    7. '[top' → logprob: -9.370743751525879
    8. 'for' → logprob: -10.245743751525879
    9. ' lines' → logprob: -10.370743751525879
    10. ' for' → logprob: -10.370743751525879

Token 864: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -13.750001907348633
    3. '_' → logprob: -14.875001907348633
    4. '_line' → logprob: -15.750001907348633
    5. '_LINES' → logprob: -16.000001907348633
    6. '
' → logprob: -16.250001907348633
    7. 's' → logprob: -16.750001907348633
    8. '=' → logprob: -17.250001907348633
    9. '[' → logprob: -17.250001907348633
    10. '_layers' → logprob: -17.500001907348633

Token 865: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038048841059207916
    2. ' =' → logprob: -3.28804874420166
    3. '=[' → logprob: -11.91304874420166
    4. '[' → logprob: -14.91304874420166
    5. '=line' → logprob: -16.163049697875977
    6. '=[]' → logprob: -16.663049697875977
    7. '   ' → logprob: -16.913049697875977
    8. '=
' → logprob: -17.288049697875977
    9. ' =[' → logprob: -17.663049697875977
    10. ')' → logprob: -17.788049697875977

Token 866: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.42031657695770264
    2. '[line' → logprob: -1.1703165769577026
    3. '[' → logprob: -3.420316696166992
    4. '[row' → logprob: -9.545316696166992
    5. '[b' → logprob: -9.545316696166992
    6. '[top' → logprob: -10.420316696166992
    7. '[left' → logprob: -12.670316696166992
    8. '[cell' → logprob: -13.045316696166992
    9. 'bottom' → logprob: -13.545316696166992
    10. '[i' → logprob: -13.670316696166992

Token 867: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.0339031834737398e-05
    2. ' line' → logprob: -10.875020027160645
    3. 'row' → logprob: -13.750020027160645
    4. '[line' → logprob: -15.875020027160645
    5. '(line' → logprob: -16.00002098083496
    6. '   ' → logprob: -18.37502098083496
    7. '	line' → logprob: -18.75002098083496
    8. '#line' → logprob: -19.00002098083496
    9. '           ' → logprob: -19.00002098083496
    10. '```' → logprob: -19.37502098083496

Token 868: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0024404549039900303
    2. '[e' → logprob: -6.502440452575684
    3. 's' → logprob: -7.752440452575684
    4. 'e' → logprob: -8.627440452575684
    5. '   ' → logprob: -9.627440452575684
    6. '(s' → logprob: -10.377440452575684
    7. '[' → logprob: -10.377440452575684
    8. '[b' → logprob: -10.627440452575684
    9. '[i' → logprob: -10.752440452575684
    10. '           ' → logprob: -10.877440452575684

Token 869: ':e' (ID: 87596)
  Prédit: ':e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':e' → logprob: -0.0002602629829198122
    2. 'e' → logprob: -9.000260353088379
    3. ':' → logprob: -9.250260353088379
    4. ' :' → logprob: -11.000260353088379
    5. ':end' → logprob: -11.750260353088379
    6. 'bottom' → logprob: -12.875260353088379
    7. '```' → logprob: -13.375260353088379
    8. ' e' → logprob: -13.375260353088379
    9. '+' → logprob: -13.625260353088379
    10. ':
' → logprob: -13.625260353088379

Token 870: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5954712075181305e-05
    2. '1' → logprob: -10.500036239624023
    3. 'bottom' → logprob: -13.125036239624023
    4. '```' → logprob: -13.625036239624023
    5. '[' → logprob: -14.000036239624023
    6. ' +' → logprob: -14.000036239624023
    7. 'n' → logprob: -14.625036239624023
    8. '+
' → logprob: -14.750036239624023
    9. ']+' → logprob: -15.000036239624023
    10. 'e' → logprob: -15.062536239624023

Token 871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024382755509577692
    2. '+' → logprob: -8.375244140625
    3. '```' → logprob: -12.125244140625
    4. ' ' → logprob: -13.000244140625
    5. 'bottom' → logprob: -13.500244140625
    6. ']+' → logprob: -14.125244140625
    7. ']' → logprob: -14.500244140625
    8. '   ' → logprob: -14.625244140625
    9. '11' → logprob: -15.062744140625
    10. '])' → logprob: -15.312744140625

Token 872: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0051678200252354145
    2. 'for' → logprob: -5.5051679611206055
    3. ' for' → logprob: -6.8801679611206055
    4. ' ]' → logprob: -9.880167961120605
    5. ')' → logprob: -12.255167961120605
    6. '   ' → logprob: -13.130167961120605
    7. '       ' → logprob: -13.755167961120605
    8. ']
' → logprob: -15.005167961120605
    9. '[' → logprob: -15.130167961120605
    10. ' ' → logprob: -15.380167961120605

Token 873: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12693724036216736
    2. 'for' → logprob: -2.1269371509552
    3. ']' → logprob: -12.001936912536621
    4. '       ' → logprob: -13.751936912536621
    5. '           ' → logprob: -14.251936912536621
    6. ')' → logprob: -15.126936912536621
    7. '	for' → logprob: -15.251936912536621
    8. '        ' → logprob: -15.501936912536621
    9. '   ' → logprob: -15.751936912536621
    10. ' ' → logprob: -15.751936912536621

Token 874: ' line' (ID: 2543)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.093423992395401
    2. 'line' → logprob: -2.468424081802368
    3. ' bottom' → logprob: -5.593423843383789
    4. ' line' → logprob: -7.218423843383789
    5. 'bot' → logprob: -12.218423843383789
    6. 'row' → logprob: -12.343423843383789
    7. '   ' → logprob: -12.593423843383789
    8. '
' → logprob: -13.468423843383789
    9. 'b' → logprob: -13.718423843383789
    10. ' ' → logprob: -14.218423843383789

Token 875: ' in' (ID: 306)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.009977295994758606
    2. ' bottom' → logprob: -4.759977340698242
    3. 'in' → logprob: -8.384977340698242
    4. 'range' → logprob: -8.384977340698242
    5. '(bottom' → logprob: -8.509977340698242
    6. 'top' → logprob: -8.634977340698242
    7. 'lines' → logprob: -9.259977340698242
    8. ' in' → logprob: -9.509977340698242
    9. '_bottom' → logprob: -9.884977340698242
    10. '```' → logprob: -10.009977340698242

Token 876: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0007127894787117839
    2. ' bottom' → logprob: -7.250712871551514
    3. 'top' → logprob: -13.750712394714355
    4. 'lines' → logprob: -14.500712394714355
    5. 'range' → logprob: -15.250712394714355
    6. '   ' → logprob: -15.375712394714355
    7. '(bottom' → logprob: -15.625712394714355
    8. '```' → logprob: -15.625712394714355
    9. '
' → logprob: -15.875712394714355
    10. 'bot' → logprob: -16.500713348388672

Token 877: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.200166469876422e-06
    2. 'lines' → logprob: -12.875004768371582
    3. 'bottom' → logprob: -14.125004768371582
    4. '```' → logprob: -14.125004768371582
    5. '   ' → logprob: -15.000004768371582
    6. 'Lines' → logprob: -15.625004768371582
    7. '_LINES' → logprob: -15.750004768371582
    8. '       ' → logprob: -16.1250057220459
    9. '_bottom' → logprob: -16.5000057220459
    10. '
' → logprob: -16.6250057220459

Token 878: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8784579634666443
    2. '
' → logprob: -1.128458023071289
    3. '<|end|>' → logprob: -1.753458023071289
    4. '   ' → logprob: -2.753458023071289
    5. 'top' → logprob: -4.628458023071289
    6. ' top' → logprob: -5.253458023071289
    7. '        
' → logprob: -6.253458023071289
    8. '```' → logprob: -6.628458023071289
    9. '[top' → logprob: -6.628458023071289
    10. 'def' → logprob: -6.878458023071289

Token 880: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4205628037452698
    2. 'top' → logprob: -1.545562744140625
    3. ' top' → logprob: -2.420562744140625
    4. '
' → logprob: -3.420562744140625
    5. '   ' → logprob: -5.045562744140625
    6. '        
' → logprob: -7.170562744140625
    7. 'def' → logprob: -8.420562744140625
    8. '    
' → logprob: -8.670562744140625
    9. '	top' → logprob: -8.795562744140625
    10. 'from' → logprob: -9.170562744140625

Token 881: ' Remove' (ID: 18141)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.01920262537896633
    2. ' top' → logprob: -4.894202709197998
    3. '       ' → logprob: -5.269202709197998
    4. '   ' → logprob: -5.519202709197998
    5. 'def' → logprob: -7.019202709197998
    6. '#' → logprob: -7.269202709197998
    7. '
' → logprob: -7.894202709197998
    8. 'return' → logprob: -9.14420223236084
    9. 'trim' → logprob: -9.51920223236084
    10. 'cell' → logprob: -10.14420223236084

Token 882: ' leading' (ID: 8117)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.7745446562767029
    2. 'top' → logprob: -0.8995446562767029
    3. ' trailing' → logprob: -3.5245447158813477
    4. ' empty' → logprob: -3.8995447158813477
    5. 'def' → logprob: -3.8995447158813477
    6. 'empty' → logprob: -4.399544715881348
    7. ' leading' → logprob: -5.024544715881348
    8. ' blank' → logprob: -5.024544715881348
    9. 'blank' → logprob: -5.399544715881348
    10. ' =' → logprob: -5.774544715881348

Token 883: '/tr' (ID: 41808)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.28207674622535706
    2. ' and' → logprob: -1.4070767164230347
    3. '/tr' → logprob: -8.157076835632324
    4. 'spaces' → logprob: -8.407076835632324
    5. '.' → logprob: -8.532076835632324
    6. 'dots' → logprob: -9.407076835632324
    7. 'tr' → logprob: -9.782076835632324
    8. 'period' → logprob: -10.782076835632324
    9. ' spaces' → logprob: -11.157076835632324
    10. '...' → logprob: -12.032076835632324

Token 884: 'ailing' (ID: 24408)
  Prédit: 'ailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ailing' → logprob: -0.32351359724998474
    2. 'ail' → logprob: -1.6985136270523071
    3. 'im' → logprob: -2.8235135078430176
    4. 'right' → logprob: -4.823513507843018
    5. 'top' → logprob: -5.198513507843018
    6. '.' → logprob: -5.323513507843018
    7. '       ' → logprob: -5.573513507843018
    8. '   ' → logprob: -5.948513507843018
    9. 'imming' → logprob: -6.448513507843018
    10. '...' → logprob: -7.073513507843018

Token 885: ' dots' (ID: 53572)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02642558142542839
    2. ''.' → logprob: -4.401425361633301
    3. 'spaces' → logprob: -5.276425361633301
    4. 'dots' → logprob: -5.401425361633301
    5. ' spaces' → logprob: -6.401425361633301
    6. ' dots' → logprob: -6.776425361633301
    7. ' '.'' → logprob: -7.776425361633301
    8. '...' → logprob: -7.776425361633301
    9. 'period' → logprob: -8.7764253616333
    10. ' .' → logprob: -9.2764253616333

Token 886: ' vertically' (ID: 94774)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6907206177711487
    2. ' top' → logprob: -1.190720558166504
    3. ' and' → logprob: -2.815720558166504
    4. ' while' → logprob: -3.065720558166504
    5. ' for' → logprob: -3.940720558166504
    6. '(top' → logprob: -4.190720558166504
    7. ' in' → logprob: -4.315720558166504
    8. 'top' → logprob: -4.440720558166504
    9. '[top' → logprob: -4.690720558166504
    10. ' from' → logprob: -5.440720558166504

Token 887: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48938730359077454
    2. ' while' → logprob: -1.2393872737884521
    3. 'while' → logprob: -3.489387273788452
    4. ' and' → logprob: -3.614387273788452
    5. ' top' → logprob: -3.739387273788452
    6. 'top' → logprob: -5.364387512207031
    7. '(top' → logprob: -6.114387512207031
    8. ',' → logprob: -6.364387512207031
    9. '
' → logprob: -6.489387512207031
    10. '   ' → logprob: -6.739387512207031

Token 888: ' dividend' (ID: 53956)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.3880743384361267
    2. 'top' → logprob: -1.1380743980407715
    3. ' both' → logprob: -8.138073921203613
    4. 'def' → logprob: -8.138073921203613
    5. ' def' → logprob: -8.763073921203613
    6. 'both' → logprob: -9.013073921203613
    7. '
' → logprob: -9.388073921203613
    8. '   ' → logprob: -9.763073921203613
    9. ' each' → logprob: -9.888073921203613
    10. ' ' → logprob: -9.888073921203613

Token 889: ' top' (ID: 2344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11037244647741318
    2. ' and' → logprob: -2.485372543334961
    3. ',' → logprob: -5.610372543334961
    4. ' while' → logprob: -5.860372543334961
    5. 'top' → logprob: -6.110372543334961
    6. 'while' → logprob: -6.235372543334961
    7. ' top' → logprob: -6.235372543334961
    8. '   ' → logprob: -6.360372543334961
    9. '<|end|>' → logprob: -6.485372543334961
    10. '(top' → logprob: -6.610372543334961

Token 890: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0056049879640340805
    2. 'while' → logprob: -6.505605220794678
    3. '   ' → logprob: -6.755605220794678
    4. 'lines' → logprob: -6.880605220794678
    5. '       ' → logprob: -7.880605220794678
    6. 'and' → logprob: -7.880605220794678
    7. ' and' → logprob: -8.00560474395752
    8. ',' → logprob: -9.13060474395752
    9. ' lines' → logprob: -9.13060474395752
    10. 'top' → logprob: -9.25560474395752

Token 891: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002505982294678688
    2. '<|end|>' → logprob: -7.377505779266357
    3. ' and' → logprob: -7.502505779266357
    4. '   ' → logprob: -8.002506256103516
    5. ',' → logprob: -8.002506256103516
    6. '
' → logprob: -8.627506256103516
    7. '        
' → logprob: -8.877506256103516
    8. 'while' → logprob: -9.377506256103516
    9. 'and' → logprob: -9.752506256103516
    10. 'def' → logprob: -10.127506256103516

Token 892: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003542813006788492
    2. '   ' → logprob: -5.753542900085449
    3. ',' → logprob: -8.87854290008545
    4. ' and' → logprob: -8.87854290008545
    5. '
' → logprob: -10.87854290008545
    6. 'def' → logprob: -11.00354290008545
    7. ')' → logprob: -11.75354290008545
    8. 'and' → logprob: -11.75354290008545
    9. '<|end|>' → logprob: -11.87854290008545
    10. 'top' → logprob: -12.00354290008545

Token 893: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.6384894251823425
    2. 'top' (adapté à ' top') → logprob: -0.7634894251823425
    3. '       ' → logprob: -5.888489246368408
    4. '   ' → logprob: -6.638489246368408
    5. 'def' → logprob: -7.013489246368408
    6. 'while' → logprob: -8.263489723205566
    7. ' while' → logprob: -8.763489723205566
    8. ' for' → logprob: -9.263489723205566
    9. 'for' → logprob: -9.263489723205566
    10. '
' → logprob: -9.513489723205566

Token 894: '_trim' (ID: 183863)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00029494395130313933
    2. ' =' → logprob: -9.50029468536377
    3. '_' → logprob: -9.87529468536377
    4. '=' → logprob: -9.87529468536377
    5. 'lines' → logprob: -10.00029468536377
    6. '   ' → logprob: -10.87529468536377
    7. '_cells' → logprob: -12.00029468536377
    8. '_len' → logprob: -12.50029468536377
    9. '_index' → logprob: -12.62529468536377
    10. '_trim' → logprob: -12.75029468536377

Token 895: ' =' (ID: 314)
  Prédit: 'med'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'med' → logprob: -0.030640730634331703
    2. 'ed' → logprob: -4.530640602111816
    3. 'ped' → logprob: -4.905640602111816
    4. '=' → logprob: -5.155640602111816
    5. '   ' → logprob: -5.905640602111816
    6. ' =' → logprob: -6.030640602111816
    7. '       ' → logprob: -7.655640602111816
    8. 'pped' → logprob: -8.905640602111816
    9. '_lines' → logprob: -9.280640602111816
    10. '     ' → logprob: -10.030640602111816

Token 896: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.023367654532194138
    2. ' trim' → logprob: -3.8983676433563232
    3. '[' → logprob: -6.398367881774902
    4. 'top' → logprob: -7.898367881774902
    5. '[]
' → logprob: -8.023367881774902
    6. ' [' → logprob: -8.898367881774902
    7. '[top' → logprob: -8.898367881774902
    8. 'strip' → logprob: -10.023367881774902
    9. '(trim' → logprob: -10.398367881774902
    10. '[]' → logprob: -11.273367881774902

Token 897: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -1.580929347255733e-05
    2. 'top' → logprob: -11.750016212463379
    3. '(' → logprob: -12.500016212463379
    4. '[top' → logprob: -13.125016212463379
    5. ' (' → logprob: -14.250016212463379
    6. ' top' → logprob: -15.000016212463379
    7. '(bottom' → logprob: -15.250016212463379
    8. '(
' → logprob: -15.250016212463379
    9. '(lines' → logprob: -15.375016212463379
    10. '
' → logprob: -16.000015258789062

Token 898: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.309382373117842e-05
    2. '(lines' → logprob: -11.125033378601074
    3. ')' → logprob: -12.000033378601074
    4. '(top' → logprob: -12.250033378601074
    5. 'lines' → logprob: -13.000033378601074
    6. 'top' → logprob: -13.625033378601074
    7. '[top' → logprob: -14.000033378601074
    8. '
' → logprob: -14.250033378601074
    9. '```' → logprob: -14.250033378601074
    10. ')
' → logprob: -14.750033378601074

Token 899: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06198785454034805
    2. ')
' → logprob: -2.81198787689209
    3. '       ' → logprob: -11.56198787689209
    4. ')
' → logprob: -12.06198787689209
    5. ')

' → logprob: -13.06198787689209
    6. '   ' → logprob: -13.68698787689209
    7. ' )' → logprob: -14.18698787689209
    8. ')`
' → logprob: -15.68698787689209
    9. ' )
' → logprob: -16.061986923217773
    10. '[' → logprob: -16.311986923217773

Token 900: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004158534109592438
    2. 'bottom' → logprob: -5.7541584968566895
    3. 'def' → logprob: -8.254158973693848
    4. '   ' → logprob: -8.254158973693848
    5. ' bottom' → logprob: -8.504158973693848
    6. '<|end|>' → logprob: -9.379158973693848
    7. 'data' → logprob: -10.129158973693848
    8. '
' → logprob: -10.504158973693848
    9. ')' → logprob: -10.879158973693848
    10. 'top' → logprob: -11.004158973693848

Token 901: ' bottom' (ID: 8725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033234238624572754
    2. ' bottom' → logprob: -3.783234119415283
    3. 'bottom' (adapté à ' bottom') → logprob: -4.658234119415283
    4. '   ' → logprob: -8.408234596252441
    5. '
' → logprob: -8.658234596252441
    6. '```' → logprob: -11.158234596252441
    7. ' ' → logprob: -11.533234596252441
    8. '           ' → logprob: -12.033234596252441
    9. 'def' → logprob: -12.658234596252441
    10. '#' → logprob: -12.658234596252441

Token 902: '_trim' (ID: 183863)
  Prédit: '_trim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trim' → logprob: -0.001992278266698122
    2. '_lines' → logprob: -6.251992225646973
    3. 'trim' → logprob: -9.751992225646973
    4. '
' → logprob: -13.376992225646973
    5. '_strip' → logprob: -13.876992225646973
    6. 'Trim' → logprob: -13.876992225646973
    7. '=' → logprob: -14.876992225646973
    8. '_' → logprob: -15.001992225646973
    9. '```' → logprob: -15.001992225646973
    10. '_tr' → logprob: -15.126992225646973

Token 903: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753267765045166
    2. ' =' → logprob: -3.5297532081604004
    3. '=
' → logprob: -13.904753684997559
    4. ')' → logprob: -14.404753684997559
    5. '   ' → logprob: -14.529753684997559
    6. '=[]' → logprob: -15.904753684997559
    7. '<|end|>' → logprob: -16.404752731323242
    8. '[' → logprob: -16.529752731323242
    9. 'bottom' → logprob: -16.654752731323242
    10. ',' → logprob: -16.654752731323242

Token 904: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.018178856000304222
    2. ' trim' → logprob: -4.018178939819336
    3. '(trim' → logprob: -10.643178939819336
    4. 'bottom' → logprob: -12.768178939819336
    5. 'tr' → logprob: -14.518178939819336
    6. ' bottom' → logprob: -14.643178939819336
    7. '   ' → logprob: -15.018178939819336
    8. ' ' → logprob: -15.268178939819336
    9. '.trim' → logprob: -15.518178939819336
    10. 'strip' → logprob: -16.955678939819336

Token 905: '(bottom' (ID: 114240)
  Prédit: '(bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -6.034592388459714e-06
    2. 'bottom' → logprob: -12.125005722045898
    3. ' bottom' → logprob: -15.500005722045898
    4. ' (' → logprob: -15.625005722045898
    5. '(' → logprob: -16.8750057220459
    6. '(top' → logprob: -17.1250057220459
    7. '   ' → logprob: -18.2500057220459
    8. '(bot' → logprob: -18.5000057220459
    9. '(bound' → logprob: -18.5000057220459
    10. '(best' → logprob: -18.7500057220459

Token 906: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0003022153687197715
    2. 'lines' → logprob: -8.1253023147583
    3. 'bottom' → logprob: -12.6253023147583
    4. 'Lines' → logprob: -13.6253023147583
    5. '(lines' → logprob: -14.1253023147583
    6. '_LINES' → logprob: -14.7503023147583
    7. ' lines' → logprob: -15.7503023147583
    8. ')' → logprob: -16.375301361083984
    9. 'ines' → logprob: -16.750301361083984
    10. '```' → logprob: -16.875301361083984

Token 907: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30032816529273987
    2. ')' → logprob: -1.4253281354904175
    3. '<|end|>' → logprob: -4.800328254699707
    4. ')
' → logprob: -5.050328254699707
    5. '
' → logprob: -5.925328254699707
    6. '   ' → logprob: -7.050328254699707
    7. ',' → logprob: -7.550328254699707
    8. '<|end|>' → logprob: -9.675328254699707
    9. '        
' → logprob: -10.050328254699707
    10. ')return' → logprob: -10.050328254699707

Token 908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03137624263763428
    2. '
' → logprob: -3.531376361846924
    3. '   ' → logprob: -7.156376361846924
    4. '        
' → logprob: -7.781376361846924
    5. '<|end|>' → logprob: -9.031375885009766
    6. '    
' → logprob: -9.156375885009766
    7. '```' → logprob: -9.406375885009766
    8. 'return' → logprob: -10.281375885009766
    9. '  
' → logprob: -11.156375885009766
    10. ' return' → logprob: -11.281375885009766

Token 909: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4605163633823395
    2. 'top' → logprob: -1.335516333580017
    3. ' top' → logprob: -2.4605164527893066
    4. '
' → logprob: -4.835516452789307
    5. '   ' → logprob: -4.835516452789307
    6. 'cell' → logprob: -5.960516452789307
    7. 'return' → logprob: -7.585516452789307
    8. ' cell' → logprob: -7.835516452789307
    9. 'if' → logprob: -7.960516452789307
    10. ' if' → logprob: -8.335515975952148

Token 910: ' base' (ID: 3611)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.006264831870794296
    2. 'return' → logprob: -5.631264686584473
    3. '       ' → logprob: -6.756264686584473
    4. 'div' → logprob: -7.131264686584473
    5. 'if' → logprob: -8.506264686584473
    6. '   ' → logprob: -8.506264686584473
    7. 'cell' → logprob: -9.131264686584473
    8. ' top' → logprob: -9.631264686584473
    9. '#' → logprob: -10.381264686584473
    10. 'def' → logprob: -11.131264686584473

Token 911: ' line' (ID: 2543)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.010360929183661938
    2. ' =' → logprob: -5.8853607177734375
    3. '_lines' → logprob: -6.0103607177734375
    4. '_cell' → logprob: -6.2603607177734375
    5. '   ' → logprob: -6.7603607177734375
    6. '=' → logprob: -7.6353607177734375
    7. 'line' → logprob: -7.8853607177734375
    8. '_cells' → logprob: -7.8853607177734375
    9. ',' → logprob: -9.135360717773438
    10. '_base' → logprob: -9.510360717773438

Token 912: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07618565112352371
    2. ' =' → logprob: -3.201185703277588
    3. '+=' → logprob: -3.826185703277588
    4. ' +=' → logprob: -5.951185703277588
    5. '   ' → logprob: -6.076185703277588
    6. '_offset' → logprob: -6.451185703277588
    7. '-=' → logprob: -6.701185703277588
    8. ' -=' → logprob: -6.826185703277588
    9. ',' → logprob: -7.576185703277588
    10. '       ' → logprob: -7.951185703277588

Token 913: ' fraction' (ID: 33763)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.4082021713256836
    2. 'bottom' → logprob: -1.1582021713256836
    3. ' top' → logprob: -4.408202171325684
    4. ' bottom' → logprob: -5.033202171325684
    5. 'Cell' → logprob: -7.783202171325684
    6. 'div' → logprob: -7.908202171325684
    7. 'parse' → logprob: -8.158202171325684
    8. '   ' → logprob: -8.408202171325684
    9. ' Cell' → logprob: -8.783202171325684
    10. 'return' → logprob: -8.783202171325684

Token 914: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2814739942550659
    2. ' =' → logprob: -1.406473994255066
    3. '   ' → logprob: -9.406474113464355
    4. '       ' → logprob: -10.406474113464355
    5. 'offset' → logprob: -10.406474113464355
    6. ',' → logprob: -10.531474113464355
    7. '_offset' → logprob: -10.656474113464355
    8. 'top' → logprob: -10.781474113464355
    9. 'idx' → logprob: -11.781474113464355
    10. 'base' → logprob: -11.906474113464355

Token 915: ' vinc' (ID: 46511)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.1512961983680725
    2. ' base' → logprob: -2.0262961387634277
    3. '0' → logprob: -5.901296138763428
    4. '   ' → logprob: -5.901296138763428
    5. 'i' → logprob: -6.651296138763428
    6. ' ' → logprob: -7.901296138763428
    7. '(base' → logprob: -8.026296615600586
    8. '
' → logprob: -8.151296615600586
    9. ' i' → logprob: -8.401296615600586
    10. 'bottom' → logprob: -8.526296615600586

Token 916: 'ulum' (ID: 40868)
  Prédit: 'ulum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulum' → logprob: -0.008874312974512577
    2. '_line' → logprob: -5.008874416351318
    3. 'cul' → logprob: -7.383874416351318
    4. 'um' → logprob: -8.25887393951416
    5. 'iculum' → logprob: -8.25887393951416
    6. 'icum' → logprob: -8.50887393951416
    7. 'line' → logprob: -9.00887393951416
    8. '   ' → logprob: -9.13387393951416
    9. 'cum' → logprob: -9.63387393951416
    10. 'inum' → logprob: -9.88387393951416

Token 917: ' line' (ID: 2543)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8836976289749146
    2. ' +' → logprob: -1.2586976289749146
    3. ' -' → logprob: -2.008697509765625
    4. '-' → logprob: -2.008697509765625
    5. '_line' → logprob: -4.258697509765625
    6. 'line' → logprob: -5.133697509765625
    7. '-line' → logprob: -5.633697509765625
    8. '<|end|>' → logprob: -5.758697509765625
    9. '<|end|>' → logprob: -6.133697509765625
    10. '+i' → logprob: -6.758697509765625

Token 918: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9240015149116516
    2. ' +' → logprob: -1.4240014553070068
    3. '       ' → logprob: -2.299001455307007
    4. ',' → logprob: -2.424001455307007
    5. '+' → logprob: -2.549001455307007
    6. '
' → logprob: -3.299001455307007
    7. '<|end|>' → logprob: -4.049001693725586
    8. '<|end|>' → logprob: -4.174001693725586
    9. ' -' → logprob: -4.674001693725586
    10. 'return' → logprob: -5.674001693725586

Token 919: ' relative' (ID: 15001)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09929487854242325
    2. '   ' → logprob: -3.224294900894165
    3. '+' → logprob: -3.724294900894165
    4. '
' → logprob: -4.099294662475586
    5. ' +' → logprob: -5.224294662475586
    6. ',' → logprob: -5.349294662475586
    7. 'def' → logprob: -6.724294662475586
    8. 'return' → logprob: -7.099294662475586
    9. '    
' → logprob: -7.849294662475586
    10. '        
' → logprob: -8.474294662475586

Token 920: ' in' (ID: 306)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11459923535585403
    2. '=' → logprob: -2.6145992279052734
    3. ' to' → logprob: -3.3645992279052734
    4. ' lines' → logprob: -8.864599227905273
    5. 'lines' → logprob: -8.989599227905273
    6. ' =' → logprob: -9.489599227905273
    7. 'top' → logprob: -9.864599227905273
    8. 'def' → logprob: -10.614599227905273
    9. '_to' → logprob: -10.614599227905273
    10. '+=' → logprob: -11.739599227905273

Token 921: ' global' (ID: 5466)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00950802955776453
    2. ' lines' → logprob: -5.00950813293457
    3. 'top' → logprob: -6.25950813293457
    4. 'the' → logprob: -7.75950813293457
    5. 'def' → logprob: -8.50950813293457
    6. 'cells' → logprob: -10.25950813293457
    7. 'parse' → logprob: -10.38450813293457
    8. 'range' → logprob: -10.50950813293457
    9. 'cell' → logprob: -10.88450813293457
    10. 'base' → logprob: -11.00950813293457

Token 922: ' cell' (ID: 4206)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.12959140539169312
    2. ' lines' → logprob: -3.129591464996338
    3. '_lines' → logprob: -3.254591464996338
    4. '(lines' → logprob: -4.504591464996338
    5. '=' → logprob: -5.004591464996338
    6. 'coordinates' → logprob: -5.754591464996338
    7. 'offset' → logprob: -5.879591464996338
    8. 'def' → logprob: -6.129591464996338
    9. '
' → logprob: -6.379591464996338
    10. 'cells' → logprob: -6.629591464996338

Token 923: ' height' (ID: 4679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29788529872894287
    2. ',' → logprob: -2.1728854179382324
    3. '   ' → logprob: -2.4228854179382324
    4. '
' → logprob: -4.047885417938232
    5. 'def' → logprob: -4.672885417938232
    6. ' +' → logprob: -4.797885417938232
    7. ',
' → logprob: -5.047885417938232
    8. '<|end|>' → logprob: -5.922885417938232
    9. ')' → logprob: -6.172885417938232
    10. ' =' → logprob: -6.547885417938232

Token 924: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10660925507545471
    2. '
' → logprob: -2.731609344482422
    3. '   ' → logprob: -3.606609344482422
    4. ',' → logprob: -5.356609344482422
    5. '<|end|>' → logprob: -6.231609344482422
    6. ')' → logprob: -7.606609344482422
    7. ',
' → logprob: -8.231609344482422
    8. '        
' → logprob: -8.356609344482422
    9. '<|end|>' → logprob: -8.356609344482422
    10. '    
' → logprob: -8.481609344482422

Token 925: ' for' (ID: 395)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.5851207971572876
    2. ' base' → logprob: -1.4601207971572876
    3. 'i' → logprob: -2.460120677947998
    4. 'top' → logprob: -3.835120677947998
    5. 'frac' → logprob: -4.085120677947998
    6. 'cell' → logprob: -4.210120677947998
    7. ' i' → logprob: -4.335120677947998
    8. ' top' → logprob: -4.835120677947998
    9. 'fraction' → logprob: -4.835120677947998
    10. 'return' → logprob: -4.835120677947998

Token 926: ' dividend' (ID: 53956)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.04484552890062332
    2. ' top' → logprob: -4.6698455810546875
    3. 'parse' → logprob: -4.7948455810546875
    4. 'return' → logprob: -4.9198455810546875
    5. 'fraction' → logprob: -5.0448455810546875
    6. 'bottom' → logprob: -6.0448455810546875
    7. 'def' → logprob: -6.1698455810546875
    8. 'base' → logprob: -6.4198455810546875
    9. 'Cell' → logprob: -6.6698455810546875
    10. '   ' → logprob: -6.9198455810546875

Token 927: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8859609961509705
    2. ',' → logprob: -2.1359610557556152
    3. '+' → logprob: -2.6359610557556152
    4. ' +' → logprob: -2.7609610557556152
    5. ' and' → logprob: -2.8859610557556152
    6. '
' → logprob: -2.8859610557556152
    7. '   ' → logprob: -3.1359610557556152
    8. ' -' → logprob: -3.2609610557556152
    9. '-' → logprob: -3.5109610557556152
    10. ' top' → logprob: -4.010961055755615

Token 928: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.03975774720311165
    2. 'bottom' → logprob: -3.28975772857666
    3. ' divisor' → logprob: -6.53975772857666
    4. ' bottom' → logprob: -9.41475772857666
    5. 'fraction' → logprob: -10.16475772857666
    6. 'def' → logprob: -10.16475772857666
    7. 'divider' → logprob: -10.28975772857666
    8. 'top' → logprob: -11.41475772857666
    9. '
' → logprob: -11.53975772857666
    10. 'den' → logprob: -11.78975772857666

Token 929: ' shifted' (ID: 58644)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28975966572761536
    2. ' =' → logprob: -2.414759635925293
    3. '
' → logprob: -2.539759635925293
    4. ',' → logprob: -3.414759635925293
    5. ':' → logprob: -4.664759635925293
    6. ' return' → logprob: -5.039759635925293
    7. ' top' → logprob: -5.289759635925293
    8. ' is' → logprob: -5.289759635925293
    9. '=' → logprob: -5.664759635925293
    10. ' base' → logprob: -6.039759635925293

Token 930: ' accordingly' (ID: 44041)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6717343330383301
    2. 'by' → logprob: -1.29673433303833
    3. '=' → logprob: -2.42173433303833
    4. '=i' → logprob: -3.42173433303833
    5. 'def' → logprob: -3.92173433303833
    6. 'i' → logprob: -4.29673433303833
    7. 'relative' → logprob: -4.54673433303833
    8. ' =' → logprob: -4.92173433303833
    9. 'down' → logprob: -5.04673433303833
    10. ',' → logprob: -5.42173433303833

Token 931: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.429482102394104
    2. '       ' → logprob: -1.179482102394104
    3. '   ' → logprob: -3.3044819831848145
    4. '<|end|>' → logprob: -6.0544819831848145
    5. '        
' → logprob: -6.9294819831848145
    6. '    
' → logprob: -7.1794819831848145
    7. '<|end|>' → logprob: -8.054482460021973
    8. '
' → logprob: -8.429482460021973
    9. ',' → logprob: -9.179482460021973
    10. 'def' → logprob: -10.179482460021973

Token 932: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03511989116668701
    2. '   ' → logprob: -3.9101200103759766
    3. '
' → logprob: -4.285120010375977
    4. ' top' → logprob: -8.410120010375977
    5. '```' → logprob: -9.160120010375977
    6. '    
' → logprob: -9.410120010375977
    7. '        
' → logprob: -9.535120010375977
    8. 'top' → logprob: -9.785120010375977
    9. 'return' → logprob: -10.410120010375977
    10. 'def' → logprob: -10.785120010375977

Token 933: ' dividend' (ID: 53956)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.010846072807908058
    2. 'num' → logprob: -5.885846138000488
    3. 'numer' → logprob: -6.260846138000488
    4. 'cell' → logprob: -6.385846138000488
    5. '   ' → logprob: -6.635846138000488
    6. 'div' → logprob: -7.010846138000488
    7. 'frac' → logprob: -7.135846138000488
    8. 'base' → logprob: -7.635846138000488
    9. '       ' → logprob: -8.385846138000488
    10. ' top' → logprob: -8.635846138000488

Token 934: '_cell' (ID: 39197)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11526700854301453
    2. '_cell' → logprob: -2.615267038345337
    3. ' =' → logprob: -3.490267038345337
    4. '_cells' → logprob: -5.865266799926758
    5. '=' → logprob: -6.865266799926758
    6. ',_' → logprob: -7.615266799926758
    7. ' ,' → logprob: -7.865266799926758
    8. 'cell' → logprob: -8.990266799926758
    9. ',c' → logprob: -9.865266799926758
    10. 'Cell' → logprob: -9.990266799926758

Token 935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3908446729183197
    2. '=' → logprob: -1.515844702720642
    3. ' =' → logprob: -2.2658445835113525
    4. ',parent' → logprob: -10.390844345092773
    5. ' ,' → logprob: -10.515844345092773
    6. 'div' → logprob: -11.265844345092773
    7. '=parse' → logprob: -11.515844345092773
    8. ',result' → logprob: -11.640844345092773
    9. ',d' → logprob: -11.890844345092773
    10. ',val' → logprob: -12.140844345092773

Token 936: ' dividend' (ID: 53956)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.17730548977851868
    2. ' dividend' → logprob: -2.3023054599761963
    3. '_' → logprob: -2.9273054599761963
    4. '_div' → logprob: -5.302305698394775
    5. ' _' → logprob: -6.427305698394775
    6. 'top' → logprob: -7.177305698394775
    7. ' div' → logprob: -7.677305698394775
    8. ' top' → logprob: -8.177305221557617
    9. 'd' → logprob: -8.927305221557617
    10. ' divisor' → logprob: -8.927305221557617

Token 937: '_val' (ID: 13694)
  Prédit: '_ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.7474419474601746
    2. ' =' → logprob: -1.7474420070648193
    3. '_token' → logprob: -2.8724420070648193
    4. '_expr' → logprob: -2.9974420070648193
    5. '_symbol' → logprob: -3.1224420070648193
    6. '_char' → logprob: -3.2474420070648193
    7. '_label' → logprob: -3.3724420070648193
    8. '_cell' → logprob: -3.6224420070648193
    9. '_base' → logprob: -4.12244176864624
    10. 'ch' → logprob: -4.37244176864624

Token 938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25243088603019714
    2. ' =' → logprob: -1.5024309158325195
    3. ',' → logprob: -7.6274309158325195
    4. '=None' → logprob: -12.50243091583252
    5. '   ' → logprob: -12.75243091583252
    6. '=parse' → logprob: -12.75243091583252
    7. '=
' → logprob: -13.62743091583252
    8. ' ' → logprob: -13.87743091583252
    9. ')' → logprob: -14.62743091583252
    10. ' ,' → logprob: -14.87743091583252

Token 939: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0619683600962162
    2. ' parse' → logprob: -2.8119683265686035
    3. '   ' → logprob: -14.436968803405762
    4. '	parse' → logprob: -16.811967849731445
    5. '(parse' → logprob: -17.186967849731445
    6. '=parse' → logprob: -17.311967849731445
    7. 'par' → logprob: -17.686967849731445
    8. ' ' → logprob: -17.936967849731445
    9. 'parser' → logprob: -18.561967849731445
    10. '```' → logprob: -19.311967849731445

Token 940: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.00019531534053385258
    2. 'cell' → logprob: -9.125195503234863
    3. '_cells' → logprob: -9.375195503234863
    4. 'cells' → logprob: -14.875195503234863
    5. 'top' → logprob: -15.000195503234863
    6. '(top' → logprob: -15.625195503234863
    7. 'Cell' → logprob: -15.875195503234863
    8. '(cell' → logprob: -16.125194549560547
    9. 'cel' → logprob: -16.500194549560547
    10. '(' → logprob: -16.500194549560547

Token 941: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -1.1279553291387856e-05
    2. '(' → logprob: -12.000011444091797
    3. 'top' → logprob: -12.625011444091797
    4. '(
' → logprob: -14.375011444091797
    5. ' (' → logprob: -14.750011444091797
    6. '(bottom' → logprob: -14.750011444091797
    7. '[top' → logprob: -15.875011444091797
    8. '   ' → logprob: -16.125011444091797
    9. ' top' → logprob: -16.750011444091797
    10. '((' → logprob: -17.500011444091797

Token 942: '_trim' (ID: 183863)
  Prédit: '_trim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trim' → logprob: -0.003765285713598132
    2. '_lines' → logprob: -5.628765106201172
    3. 'trim' → logprob: -9.128765106201172
    4. '(trim' → logprob: -10.878765106201172
    5. '_cells' → logprob: -11.753765106201172
    6. '```' → logprob: -12.003765106201172
    7. 'Trim' → logprob: -12.628765106201172
    8. ')' → logprob: -12.878765106201172
    9. 'lines' → logprob: -12.878765106201172
    10. '(' → logprob: -13.128765106201172

Token 943: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014001181116327643
    2. ' ,' → logprob: -7.001399993896484
    3. '       ' → logprob: -8.876399993896484
    4. ',b' → logprob: -9.376399993896484
    5. ',line' → logprob: -10.001399993896484
    6. '   ' → logprob: -10.626399993896484
    7. ')' → logprob: -10.626399993896484
    8. '(top' → logprob: -11.001399993896484
    9. ',(' → logprob: -11.251399993896484
    10. 'top' → logprob: -11.501399993896484

Token 944: ' len' (ID: 4631)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.016965728253126144
    2. '0' → logprob: -4.141965866088867
    3. ' base' → logprob: -7.766965866088867
    4. 'i' → logprob: -8.016965866088867
    5. '   ' → logprob: -9.891965866088867
    6. 's' → logprob: -10.391965866088867
    7. ' ' → logprob: -10.641965866088867
    8. 'v' → logprob: -11.391965866088867
    9. 'top' → logprob: -11.641965866088867
    10. '(base' → logprob: -11.766965866088867

Token 945: '(top' (ID: 42605)
  Prédit: '(top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.03775133565068245
    2. '(base' → logprob: -3.9127514362335205
    3. '(lines' → logprob: -4.662751197814941
    4. 'top' → logprob: -5.287751197814941
    5. '(div' → logprob: -7.037751197814941
    6. 'lines' → logprob: -7.537751197814941
    7. '(bottom' → logprob: -7.662751197814941
    8. '(data' → logprob: -8.662751197814941
    9. '(' → logprob: -9.162751197814941
    10. 'base' → logprob: -9.287751197814941

Token 946: '_trim' (ID: 183863)
  Prédit: '(top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(top' → logprob: -0.014318044297397137
    2. 'top' → logprob: -4.389317989349365
    3. '(lines' → logprob: -7.139317989349365
    4. 'lines' → logprob: -8.264318466186523
    5. '(div' → logprob: -8.389318466186523
    6. '[top' → logprob: -9.014318466186523
    7. '_top' → logprob: -9.264318466186523
    8. '(base' → logprob: -9.889318466186523
    9. 'div' → logprob: -9.889318466186523
    10. '_lines' → logprob: -10.014318466186523

Token 947: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3556257486343384
    2. '))' → logprob: -1.2306257486343384
    3. ')-' → logprob: -5.730625629425049
    4. ')+' → logprob: -6.105625629425049
    5. ')
' → logprob: -6.730625629425049
    6. ' )' → logprob: -8.480626106262207
    7. '))
' → logprob: -9.105626106262207
    8. ' ))' → logprob: -9.480626106262207
    9. ')))' → logprob: -10.230626106262207
    10. '-' → logprob: -11.855626106262207

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004658233083318919
    2. ' ' → logprob: -8.125465393066406
    3. '0' → logprob: -9.625465393066406
    4. 'bottom' → logprob: -9.750465393066406
    5. '(' → logprob: -11.250465393066406
    6. '   ' → logprob: -12.000465393066406
    7. '2' → logprob: -12.125465393066406
    8. 'top' → logprob: -12.500465393066406
    9. ' (' → logprob: -12.875465393066406
    10. 'div' → logprob: -12.875465393066406

Token 949: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38774362206459045
    2. ')
' → logprob: -1.137743592262268
    3. '       ' → logprob: -7.1377434730529785
    4. '   ' → logprob: -9.762743949890137
    5. ')
' → logprob: -12.012743949890137
    6. ' )' → logprob: -12.137743949890137
    7. ' )
' → logprob: -12.137743949890137
    8. ')`
' → logprob: -14.262743949890137
    9. ')

' → logprob: -14.387743949890137
    10. '+' → logprob: -14.637743949890137

Token 950: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03139414265751839
    2. 'div' → logprob: -3.7813942432403564
    3. ',' → logprob: -6.031394004821777
    4. '   ' → logprob: -6.281394004821777
    5. '
' → logprob: -6.281394004821777
    6. ' divisor' → logprob: -6.406394004821777
    7. ',
' → logprob: -9.156394004821777
    8. '           ' → logprob: -9.281394004821777
    9. '                   ' → logprob: -10.781394004821777
    10. '     ' → logprob: -11.031394004821777

Token 951: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.040493205189704895
    2. '       ' → logprob: -3.2904932498931885
    3. ' divisor' → logprob: -6.040493011474609
    4. '   ' → logprob: -10.41549301147461
    5. 'divider' → logprob: -10.91549301147461
    6. '      ' → logprob: -12.29049301147461
    7. 'bottom' → logprob: -12.91549301147461
    8. '           ' → logprob: -13.16549301147461
    9. '	div' → logprob: -13.29049301147461
    10. '     ' → logprob: -13.29049301147461

Token 952: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.03779207915067673
    2. ',' → logprob: -3.4127919673919678
    3. ',_' → logprob: -5.537792205810547
    4. '_cells' → logprob: -10.037792205810547
    5. ' _' → logprob: -10.162792205810547
    6. '_,' → logprob: -10.537792205810547
    7. '=' → logprob: -11.037792205810547
    8. '_' → logprob: -11.537792205810547
    9. '_Cell' → logprob: -11.537792205810547
    10. ' ,' → logprob: -11.662792205810547

Token 953: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ' ,' → logprob: -12.500005722045898
    3. '=' → logprob: -13.750005722045898
    4. ',d' → logprob: -14.375005722045898
    5. ',
' → logprob: -15.500005722045898
    6. ',b' → logprob: -16.3750057220459
    7. ',de' → logprob: -16.7500057220459
    8. ',_' → logprob: -16.8750057220459
    9. ',const' → logprob: -17.5000057220459
    10. ',val' → logprob: -17.5000057220459

Token 954: ' divisor' (ID: 100482)
  Prédit: ' divisor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisor' → logprob: -0.6817818880081177
    2. 'div' → logprob: -0.8067818880081177
    3. ' bottom' → logprob: -3.556781768798828
    4. 'bottom' → logprob: -4.181781768798828
    5. ' div' → logprob: -5.806781768798828
    6. ' dividend' → logprob: -8.681781768798828
    7. 'None' → logprob: -9.431781768798828
    8. ' parse' → logprob: -9.431781768798828
    9. ' ' → logprob: -9.431781768798828
    10. '(div' → logprob: -9.556781768798828

Token 955: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0017083751736208797
    2. 'val' → logprob: -6.376708507537842
    3. '_value' → logprob: -13.751708030700684
    4. ' val' → logprob: -14.001708030700684
    5. '
' → logprob: -14.501708030700684
    6. '```' → logprob: -14.501708030700684
    7. '_bottom' → logprob: -14.501708030700684
    8. 'bottom' → logprob: -14.751708030700684
    9. ' _' → logprob: -14.876708030700684
    10. '_' → logprob: -15.001708030700684

Token 956: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25286248326301575
    2. ' =' → logprob: -1.5028624534606934
    3. ',' → logprob: -7.002862453460693
    4. '   ' → logprob: -11.002862930297852
    5. ')' → logprob: -12.127862930297852
    6. ')=' → logprob: -14.627862930297852
    7. ' ' → logprob: -14.877862930297852
    8. '=
' → logprob: -15.627862930297852
    9. '    ' → logprob: -15.877862930297852
    10. ' =
' → logprob: -16.25286293029785

Token 957: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.47408273816108704
    2. 'parse' → logprob: -0.9740827083587646
    3. '	parse' → logprob: -13.349082946777344
    4. '(parse' → logprob: -13.474082946777344
    5. ' ' → logprob: -13.599082946777344
    6. '=parse' → logprob: -14.724082946777344
    7. '   ' → logprob: -15.224082946777344
    8. 'par' → logprob: -15.849082946777344
    9. '```' → logprob: -15.849082946777344
    10. ' ' → logprob: -15.974082946777344

Token 958: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.01260806992650032
    2. 'cell' → logprob: -4.387608051300049
    3. 'bottom' → logprob: -9.512608528137207
    4. 'val' → logprob: -12.137608528137207
    5. 'div' → logprob: -12.387608528137207
    6. '_bottom' → logprob: -12.762608528137207
    7. 'Cell' → logprob: -13.012608528137207
    8. 'top' → logprob: -13.012608528137207
    9. 'cel' → logprob: -13.262608528137207
    10. '_cells' → logprob: -13.887608528137207

Token 959: '(bottom' (ID: 114240)
  Prédit: '(bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -0.004152126144617796
    2. 'bottom' → logprob: -5.504152297973633
    3. ' bottom' → logprob: -9.879152297973633
    4. ' (' → logprob: -11.879152297973633
    5. '   ' → logprob: -12.129152297973633
    6. '```' → logprob: -12.629152297973633
    7. '(' → logprob: -13.629152297973633
    8. '(top' → logprob: -13.754152297973633
    9. '(bot' → logprob: -14.004152297973633
    10. '       ' → logprob: -14.504152297973633

Token 960: '_trim' (ID: 183863)
  Prédit: '_trim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trim' → logprob: -8.423219696851447e-05
    2. 'trim' → logprob: -9.875083923339844
    3. '_lines' → logprob: -12.125083923339844
    4. '(trim' → logprob: -12.625083923339844
    5. '```' → logprob: -12.875083923339844
    6. '   ' → logprob: -12.875083923339844
    7. 'Trim' → logprob: -13.250083923339844
    8. '       ' → logprob: -13.500083923339844
    9. '[' → logprob: -13.625083923339844
    10. 'bottom' → logprob: -13.875083923339844

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002647240413352847
    2. ',len' → logprob: -6.252647399902344
    3. ' ,' → logprob: -7.752647399902344
    4. ')' → logprob: -9.752647399902344
    5. '(' → logprob: -10.252647399902344
    6. '(len' → logprob: -10.252647399902344
    7. '   ' → logprob: -10.252647399902344
    8. '       ' → logprob: -10.627647399902344
    9. ',length' → logprob: -10.627647399902344
    10. '           ' → logprob: -11.377647399902344

Token 962: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5507010817527771
    2. 'len' → logprob: -1.1757011413574219
    3. '-' → logprob: -2.925701141357422
    4. 'base' → logprob: -3.425701141357422
    5. ' len' → logprob: -4.425701141357422
    6. ' ' → logprob: -4.925701141357422
    7. ' -' → logprob: -5.925701141357422
    8. ' base' → logprob: -6.050701141357422
    9. '-base' → logprob: -6.050701141357422
    10. 'div' → logprob: -7.050701141357422

Token 963: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4403213858604431
    2. '0' → logprob: -1.065321445465088
    3. 'base' → logprob: -5.315321445465088
    4. '-' → logprob: -5.940321445465088
    5. 'None' → logprob: -6.690321445465088
    6. 'div' → logprob: -6.815321445465088
    7. ' len' → logprob: -7.065321445465088
    8. ' ' → logprob: -7.690321445465088
    9. 'bottom' → logprob: -9.44032096862793
    10. '-base' → logprob: -9.94032096862793

Token 964: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005496950470842421
    2. '       ' → logprob: -7.875549793243408
    3. '   ' → logprob: -9.00054931640625
    4. ')
' → logprob: -10.00054931640625
    5. ' )' → logprob: -14.25054931640625
    6. '))' → logprob: -17.00054931640625
    7. '           ' → logprob: -17.25054931640625
    8. ')return' → logprob: -17.37554931640625
    9. '),' → logprob: -18.00054931640625
    10. ')}' → logprob: -18.50054931640625

Token 965: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7037453651428223
    2. '       ' → logprob: -0.7037453651428223
    3. '    
' → logprob: -5.078745365142822
    4. '
' → logprob: -5.953745365142822
    5. '        
' → logprob: -6.703745365142822
    6. '<|end|>' → logprob: -8.953744888305664
    7. ')' → logprob: -9.078744888305664
    8. ')
' → logprob: -9.953744888305664
    9. '  
' → logprob: -10.328744888305664
    10. 'return' → logprob: -10.453744888305664

Token 966: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24853424727916718
    2. 'return' → logprob: -1.7485342025756836
    3. '   ' → logprob: -4.248534202575684
    4. 'if' → logprob: -4.373534202575684
    5. ' return' → logprob: -4.498534202575684
    6. '
' → logprob: -5.498534202575684
    7. ' if' → logprob: -5.748534202575684
    8. 'fraction' → logprob: -8.498534202575684
    9. 'cell' → logprob: -8.623534202575684
    10. '        
' → logprob: -9.498534202575684

Token 967: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11211004853248596
    2. '       ' → logprob: -3.112110137939453
    3. 'if' → logprob: -3.237110137939453
    4. '   ' → logprob: -4.237110137939453
    5. ' return' → logprob: -5.112110137939453
    6. ' if' → logprob: -6.737110137939453
    7. 'fraction' → logprob: -8.112110137939453
    8. 'cell' → logprob: -8.362110137939453
    9. '
' → logprob: -10.487110137939453
    10. '           ' → logprob: -11.862110137939453

Token 968: ' fraction' (ID: 33763)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.07007870823144913
    2. ' Cell' → logprob: -2.6950786113739014
    3. '(Cell' → logprob: -9.44507884979248
    4. '   ' → logprob: -10.07007884979248
    5. 'Fraction' → logprob: -11.57007884979248
    6. ' ' → logprob: -12.82007884979248
    7. ' (' → logprob: -12.94507884979248
    8. '
' → logprob: -13.32007884979248
    9. '(' → logprob: -13.82007884979248
    10. '_Cell' → logprob: -14.19507884979248

Token 969: ' cell' (ID: 4206)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.018630376085639
    2. ' Cell' → logprob: -4.518630504608154
    3. ',' → logprob: -5.518630504608154
    4. '(Cell' → logprob: -5.768630504608154
    5. '   ' → logprob: -8.643630027770996
    6. 'return' → logprob: -9.143630027770996
    7. '
' → logprob: -9.893630027770996
    8. '       ' → logprob: -10.143630027770996
    9. '_Cell' → logprob: -11.518630027770996
    10. '(' → logprob: -11.643630027770996

Token 970: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4666517972946167
    2. ',' → logprob: -1.0916517972946167
    3. '   ' → logprob: -3.7166519165039062
    4. '
' → logprob: -5.341651916503906
    5. ',
' → logprob: -5.466651916503906
    6. ' ,' → logprob: -7.091651916503906
    7. 'return' → logprob: -7.591651916503906
    8. ' return' → logprob: -7.591651916503906
    9. ':' → logprob: -7.966651916503906
    10. ' and' → logprob: -7.966651916503906

Token 971: ' base' (ID: 3611)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7633050084114075
    2. 'return' → logprob: -0.7633050084114075
    3. '
' → logprob: -3.5133049488067627
    4. ' Cell' → logprob: -4.013305187225342
    5. 'Cell' → logprob: -4.638305187225342
    6. '       ' → logprob: -5.013305187225342
    7. ' cell' → logprob: -6.638305187225342
    8. 'cell' → logprob: -7.513305187225342
    9. 'def' → logprob: -8.138304710388184
    10. '```' → logprob: -8.513304710388184

Token 972: ' line' (ID: 2543)
  Prédit: '_cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.6691968441009521
    2. '_line' → logprob: -1.4191968441009521
    3. ' =' → logprob: -2.044196844100952
    4. '=' → logprob: -3.294196844100952
    5. '   ' → logprob: -3.544196844100952
    6. ',' → logprob: -4.544197082519531
    7. 'cell' → logprob: -4.794197082519531
    8. 'return' → logprob: -5.044197082519531
    9. 'Cell' → logprob: -5.169197082519531
    10. '_val' → logprob: -5.544197082519531

Token 973: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5272502303123474
    2. ' =' → logprob: -1.0272502899169922
    3. 'return' → logprob: -4.027250289916992
    4. '   ' → logprob: -4.152250289916992
    5. ',' → logprob: -4.402250289916992
    6. 'eturn' → logprob: -5.777250289916992
    7. '       ' → logprob: -6.777250289916992
    8. ' return' → logprob: -6.902250289916992
    9. '=
' → logprob: -8.652250289916992
    10. ':' → logprob: -9.902250289916992

Token 974: ' vinc' (ID: 46511)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4257977306842804
    2. 'base' → logprob: -1.175797700881958
    3. 'Cell' → logprob: -4.175797939300537
    4. ' base' → logprob: -4.425797939300537
    5. ' i' → logprob: -5.050797939300537
    6. ' Cell' → logprob: -6.800797939300537
    7. '   ' → logprob: -6.925797939300537
    8. 'v' → logprob: -7.050797939300537
    9. 'div' → logprob: -8.050797462463379
    10. ' ' → logprob: -8.300797462463379

Token 975: 'ulum' (ID: 40868)
  Prédit: 'ulum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulum' → logprob: -0.5059620141983032
    2. 'iculum' → logprob: -1.0059620141983032
    3. 'cul' → logprob: -3.8809618949890137
    4. 'icum' → logprob: -5.005961894989014
    5. 'icul' → logprob: -7.005961894989014
    6. 'cum' → logprob: -7.380961894989014
    7. '   ' → logprob: -7.630961894989014
    8. 'uc' → logprob: -8.005962371826172
    9. 'ic' → logprob: -8.505962371826172
    10. 'cium' → logprob: -8.880962371826172

Token 976: ' line' (ID: 2543)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.04370144382119179
    2. ',' → logprob: -4.168701648712158
    3. '+' → logprob: -4.918701648712158
    4. ',i' → logprob: -5.543701648712158
    5. '   ' → logprob: -5.793701648712158
    6. ' +' → logprob: -5.793701648712158
    7. 'line' → logprob: -6.043701648712158
    8. '+i' → logprob: -6.043701648712158
    9. ',line' → logprob: -6.418701648712158
    10. '_cell' → logprob: -7.168701648712158

Token 977: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24241672456264496
    2. '   ' → logprob: -1.8674167394638062
    3. '       ' → logprob: -3.8674166202545166
    4. 'return' → logprob: -4.117416858673096
    5. '
' → logprob: -4.742416858673096
    6. ' return' → logprob: -4.992416858673096
    7. ',
' → logprob: -5.242416858673096
    8. ' =' → logprob: -7.117416858673096
    9. ' ,' → logprob: -7.242416858673096
    10. '=' → logprob: -8.117416381835938

Token 978: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9234721660614014
    2. '       ' → logprob: -1.1734721660614014
    3. ',' → logprob: -1.7984721660614014
    4. '   ' → logprob: -2.4234721660614014
    5. ',
' → logprob: -4.2984724044799805
    6. ' return' → logprob: -4.2984724044799805
    7. 'return' → logprob: -4.9234724044799805
    8. '    
' → logprob: -6.6734724044799805
    9. ')
' → logprob: -6.9234724044799805
    10. ' ,' → logprob: -7.2984724044799805

Token 979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3554021120071411
    2. '   ' → logprob: -1.2304021120071411
    3. '
' → logprob: -5.855401992797852
    4. ',' → logprob: -6.480401992797852
    5. 'return' → logprob: -6.480401992797852
    6. ' return' → logprob: -7.105401992797852
    7. '    
' → logprob: -9.980401992797852
    8. ',
' → logprob: -10.480401992797852
    9. '        
' → logprob: -10.480401992797852
    10. '	return' → logprob: -11.105401992797852

Token 980: ' class' (ID: 744)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013401972129940987
    2. ' return' → logprob: -4.763401985168457
    3. '       ' → logprob: -6.013401985168457
    4. '   ' → logprob: -6.388401985168457
    5. '
' → logprob: -8.138401985168457
    6. 'cell' → logprob: -8.138401985168457
    7. 'fraction' → logprob: -10.013401985168457
    8. ' cell' → logprob: -11.763401985168457
    9. '	return' → logprob: -13.013401985168457
    10. '
' → logprob: -13.388401985168457

Token 981: ' Fraction' (ID: 112108)
  Prédit: ' Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Cell' → logprob: -0.4433400332927704
    2. 'Cell' → logprob: -1.3183400630950928
    3. 'Fraction' → logprob: -2.5683400630950928
    4. ' Fraction' → logprob: -4.318339824676514
    5. 'Frac' → logprob: -7.818339824676514
    6. '_Cell' → logprob: -10.193340301513672
    7. '<Cell' → logprob: -11.068340301513672
    8. 'def' → logprob: -11.318340301513672
    9. '(Cell' → logprob: -11.318340301513672
    10. ' fraction' → logprob: -11.443340301513672

Token 982: 'Cell' (ID: 5346)
  Prédit: '(Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Cell' → logprob: -0.6043434143066406
    2. ':' → logprob: -1.1043434143066406
    3. '(' → logprob: -2.3543434143066406
    4. 'Cell' → logprob: -4.604343414306641
    5. '(
' → logprob: -4.854343414306641
    6. ':
' → logprob: -4.854343414306641
    7. '(object' → logprob: -7.354343414306641
    8. '<Cell' → logprob: -7.729343414306641
    9. '(C' → logprob: -9.35434341430664
    10. '):' → logprob: -9.85434341430664

Token 983: '(Cell' (ID: 150981)
  Prédit: '(Cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Cell' → logprob: -0.21444207429885864
    2. ':' → logprob: -1.8394420146942139
    3. '(' → logprob: -3.464442014694214
    4. '(object' → logprob: -6.839442253112793
    5. ':
' → logprob: -7.464442253112793
    6. '   ' → logprob: -7.964442253112793
    7. '):' → logprob: -8.714442253112793
    8. '(
' → logprob: -8.839442253112793
    9. '<Cell' → logprob: -9.089442253112793
    10. 'Cell' → logprob: -9.339442253112793

Token 984: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44367489218711853
    2. '):
' → logprob: -1.068674921989441
    3. '   ' → logprob: -4.5686750411987305
    4. '(Cell' → logprob: -6.0686750411987305
    5. ',' → logprob: -7.1936750411987305
    6. ':' → logprob: -7.4436750411987305
    7. '<Cell' → logprob: -8.56867504119873
    8. 'Cell' → logprob: -8.69367504119873
    9. '):
' → logprob: -8.81867504119873
    10. '       ' → logprob: -9.56867504119873

Token 985: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050539602525532246
    2. '   ' → logprob: -6.130053997039795
    3. '	   ' → logprob: -6.255053997039795
    4. 'def' → logprob: -8.005053520202637
    5. '	def' → logprob: -8.880053520202637
    6. '	       ' → logprob: -8.880053520202637
    7. '           ' → logprob: -9.380053520202637
    8. '
' → logprob: -9.505053520202637
    9. ' def' → logprob: -10.130053520202637
    10. '        
' → logprob: -11.255053520202637

Token 986: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.46303945779800415
    2. '       ' → logprob: -1.7130393981933594
    3. '   ' → logprob: -2.2130393981933594
    4. ' def' → logprob: -2.9630393981933594
    5. '           ' → logprob: -4.463039398193359
    6. '__' (adapté à ' __') → logprob: -4.838039398193359
    7. 'pass' → logprob: -5.713039398193359
    8. ' pass' → logprob: -5.713039398193359
    9. '	def' → logprob: -6.713039398193359
    10. ' __' → logprob: -6.963039398193359

Token 987: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -4.320199877838604e-07
    2. 'init' → logprob: -15.5
    3. 'slot' → logprob: -16.875
    4. '_slots' → logprob: -17.0
    5. ' slots' → logprob: -17.25
    6. '
' → logprob: -17.875
    7. 'class' → logprob: -18.5
    8. '   ' → logprob: -18.875
    9. 'sl' → logprob: -19.75
    10. '```' → logprob: -19.875

Token 988: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02158110775053501
    2. '=' → logprob: -3.8965811729431152
    3. ' =' → logprob: -7.646581172943115
    4. '=['' → logprob: -7.646581172943115
    5. '___' → logprob: -10.271580696105957
    6. '____' → logprob: -11.646580696105957
    7. '__('' → logprob: -11.646580696105957
    8. '['' → logprob: -11.646580696105957
    9. '__:' → logprob: -12.021580696105957
    10. '_=' → logprob: -12.521580696105957

Token 989: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43018606305122375
    2. ' =' → logprob: -1.0551860332489014
    3. '=['' → logprob: -6.5551862716674805
    4. '['' → logprob: -10.05518627166748
    5. ' ['' → logprob: -12.18018627166748
    6. '           ' → logprob: -12.43018627166748
    7. '__' → logprob: -12.68018627166748
    8. '   ' → logprob: -13.43018627166748
    9. '=('' → logprob: -13.80518627166748
    10. ':' → logprob: -14.68018627166748

Token 990: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.003230829257518053
    2. ' ['' → logprob: -5.753231048583984
    3. '[]' → logprob: -10.878231048583984
    4. '[' → logprob: -11.878231048583984
    5. '['_' → logprob: -11.878231048583984
    6. '   ' → logprob: -12.253231048583984
    7. ' ' → logprob: -12.253231048583984
    8. ''' → logprob: -12.753231048583984
    9. '[top' → logprob: -13.378231048583984
    10. ''t' → logprob: -13.753231048583984

Token 991: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.9067922234535217
    2. 'top' → logprob: -1.156792163848877
    3. 'numer' → logprob: -1.406792163848877
    4. 'num' → logprob: -3.656792163848877
    5. 'frac' → logprob: -6.156792163848877
    6. '   ' → logprob: -6.156792163848877
    7. ' numerator' → logprob: -6.281792163848877
    8. 'fraction' → logprob: -6.781792163848877
    9. ' top' → logprob: -7.156792163848877
    10. 'left' → logprob: -7.281792163848877

Token 992: 'idend' (ID: 80275)
  Prédit: 'idend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idend' → logprob: -0.0003542926860973239
    2. 'ident' → logprob: -8.500354766845703
    3. 'id' → logprob: -9.875354766845703
    4. 'isor' → logprob: -10.125354766845703
    5. 'iden' → logprob: -11.375354766845703
    6. 'ided' → logprob: -11.625354766845703
    7. 'iend' → logprob: -11.875354766845703
    8. '']' → logprob: -12.500354766845703
    9. 'ider' → logprob: -13.000354766845703
    10. 'ision' → logprob: -13.250354766845703

Token 993: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.11834964901208878
    2. '',' → logprob: -2.243349552154541
    3. ',' → logprob: -5.243349552154541
    4. ','' → logprob: -8.8683500289917
    5. '',
' → logprob: -10.7433500289917
    6. ''' → logprob: -10.9933500289917
    7. '',"' → logprob: -11.3683500289917
    8. '']' → logprob: -11.9933500289917
    9. 'Cell' → logprob: -12.2433500289917
    10. '_cell' → logprob: -12.3683500289917

Token 994: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0003407071635592729
    2. ' divisor' → logprob: -8.000340461730957
    3. '_div' → logprob: -13.750340461730957
    4. '   ' → logprob: -14.000340461730957
    5. ' ' → logprob: -14.250340461730957
    6. '	div' → logprob: -14.375340461730957
    7. '
' → logprob: -14.625340461730957
    8. ''' → logprob: -15.375340461730957
    9. '<div' → logprob: -15.500340461730957
    10. 'divider' → logprob: -15.625340461730957

Token 995: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.0029462052043527365
    2. 'is' → logprob: -7.377946376800537
    3. 'ider' → logprob: -7.502946376800537
    4. 'idend' → logprob: -8.252945899963379
    5. ''' → logprob: -8.627945899963379
    6. 'ident' → logprob: -9.377945899963379
    7. 'den' → logprob: -9.377945899963379
    8. '']' → logprob: -9.377945899963379
    9. '{}' → logprob: -9.502945899963379
    10. '['' → logprob: -9.565445899963379

Token 996: '']
' (ID: 9756)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.08003685623407364
    2. '',' → logprob: -2.5800368785858154
    3. '']' → logprob: -7.080036640167236
    4. ',' → logprob: -8.830037117004395
    5. ','' → logprob: -9.455037117004395
    6. '',
' → logprob: -10.205037117004395
    7. '']
' → logprob: -11.205037117004395
    8. ''' → logprob: -11.455037117004395
    9. '   ' → logprob: -11.705037117004395
    10. '',"' → logprob: -12.955037117004395

Token 997: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8573564291000366
    2. '           ' → logprob: -1.3573564291000366
    3. '       ' → logprob: -1.6073564291000366
    4. 'def' → logprob: -3.107356548309326
    5. ' =' → logprob: -4.232356548309326
    6. ',' → logprob: -4.232356548309326
    7. '    ' → logprob: -4.357356548309326
    8. '
' → logprob: -4.482356548309326
    9. '=' → logprob: -5.357356548309326
    10. '    
' → logprob: -6.107356548309326

Token 998: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5739986896514893
    2. ' def' → logprob: -1.4489986896514893
    3. '   ' → logprob: -1.6989986896514893
    4. '           ' → logprob: -4.69899845123291
    5. '       ' → logprob: -5.07399845123291
    6. '	def' → logprob: -5.69899845123291
    7. '    ' → logprob: -8.69899845123291
    8. '               ' → logprob: -10.07399845123291
    9. '	   ' → logprob: -10.69899845123291
    10. ' ' → logprob: -10.69899845123291

Token 999: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.006996207870543003
    2. '__' → logprob: -5.006996154785156
    3. '_init' → logprob: -8.381996154785156
    4. ' __' → logprob: -10.006996154785156
    5. ' init' → logprob: -12.756996154785156
    6. '```' → logprob: -12.881996154785156
    7. 'def' → logprob: -14.381996154785156
    8. '_' → logprob: -15.506996154785156
    9. '
' → logprob: -15.756996154785156
    10. '`' → logprob: -17.006996154785156

Token 1000: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0011708177626132965
    2. 'slots' → logprob: -6.751170635223389
    3. 'slot' → logprob: -14.501171112060547
    4. 'class' → logprob: -17.001171112060547
    5. ' init' → logprob: -18.251171112060547
    6. '_init' → logprob: -18.626171112060547
    7. 'new' → logprob: -18.876171112060547
    8. 'def' → logprob: -19.376171112060547
    9. '```' → logprob: -19.376171112060547
    10. '...' → logprob: -19.751171112060547

Token 1001: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007133854669518769
    2. '__' → logprob: -7.250713348388672
    3. '__((' → logprob: -13.750713348388672
    4. '(self' → logprob: -13.875713348388672
    5. '__(
' → logprob: -13.875713348388672
    6. '__('' → logprob: -15.000713348388672
    7. '_(' → logprob: -17.000713348388672
    8. 'self' → logprob: -17.625713348388672
    9. '(' → logprob: -18.250713348388672
    10. '__("' → logprob: -18.500713348388672

Token 1002: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.256334695033729e-05
    2. '(self' → logprob: -10.500082969665527
    3. '           ' → logprob: -10.875082969665527
    4. ' self' → logprob: -11.000082969665527
    5. ',self' → logprob: -11.500082969665527
    6. '               ' → logprob: -12.375082969665527
    7. 'div' → logprob: -12.875082969665527
    8. '                   ' → logprob: -14.250082969665527
    9. ',' → logprob: -14.500082969665527
    10. '	self' → logprob: -15.375082969665527

Token 1003: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5614957213401794
    2. ',' → logprob: -1.0614957809448242
    3. '(self' → logprob: -3.186495780944824
    4. ',self' → logprob: -3.186495780944824
    5. '__(' → logprob: -7.436495780944824
    6. '           ' → logprob: -9.061495780944824
    7. ' self' → logprob: -9.061495780944824
    8. '__,' → logprob: -9.686495780944824
    9. ',data' → logprob: -9.686495780944824
    10. '       ' → logprob: -10.686495780944824

Token 1004: ' dividend' (ID: 53956)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.49598193168640137
    2. 'self' → logprob: -0.9959819316864014
    3. 'data' → logprob: -4.2459821701049805
    4. '           ' → logprob: -5.4959821701049805
    5. ' self' → logprob: -6.9959821701049805
    6. '               ' → logprob: -6.9959821701049805
    7. ' dividend' → logprob: -7.8709821701049805
    8. '<div' → logprob: -9.24598217010498
    9. '(div' → logprob: -9.49598217010498
    10. '                   ' → logprob: -9.62098217010498

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004914337769150734
    2. '','' → logprob: -9.00049114227295
    3. '<|end|>' → logprob: -9.00049114227295
    4. '<|end|>' → logprob: -10.12549114227295
    5. ' ,' → logprob: -10.37549114227295
    6. '',' → logprob: -10.37549114227295
    7. ','' → logprob: -10.37549114227295
    8. ',d' → logprob: -10.87549114227295
    9. ',None' → logprob: -10.87549114227295
    10. ',
' → logprob: -11.37549114227295

Token 1006: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0002181987656513229
    2. ' divisor' → logprob: -8.500218391418457
    3. '                   ' → logprob: -11.375218391418457
    4. '               ' → logprob: -13.875218391418457
    5. '           ' → logprob: -14.000218391418457
    6. '                  ' → logprob: -14.750218391418457
    7. '	div' → logprob: -15.875218391418457
    8. '       ' → logprob: -16.12521743774414
    9. '   ' → logprob: -16.25021743774414
    10. '_div' → logprob: -16.25021743774414

Token 1007: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0073201656341552734
    2. '):
' → logprob: -5.132320404052734
    3. '):' → logprob: -7.007320404052734
    4. '               ' → logprob: -8.382320404052734
    5. ''):
' → logprob: -10.007320404052734
    6. '',' → logprob: -10.132320404052734
    7. ',d' → logprob: -10.382320404052734
    8. ',parent' → logprob: -10.632320404052734
    9. '           ' → logprob: -11.257320404052734
    10. ',self' → logprob: -11.507320404052734

Token 1008: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.25519776344299316
    2. ' base' → logprob: -1.5051977634429932
    3. '           ' → logprob: -7.505197525024414
    4. 'div' → logprob: -7.505197525024414
    5. 'h' → logprob: -8.505197525024414
    6. 'top' → logprob: -8.630197525024414
    7. '            ' → logprob: -8.880197525024414
    8. '               ' → logprob: -8.880197525024414
    9. '             ' → logprob: -9.255197525024414
    10. 'v' → logprob: -9.380197525024414

Token 1009: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6026003956794739
    2. '_line' → logprob: -0.9776003956794739
    3. '):' → logprob: -2.727600336074829
    4. '=' → logprob: -5.727600574493408
    5. '       ' → logprob: -5.852600574493408
    6. ',' → logprob: -6.727600574493408
    7. '=None' → logprob: -7.352600574493408
    8. '):
' → logprob: -7.477600574493408
    9. '   ' → logprob: -7.727600574493408
    10. '           ' → logprob: -7.852600574493408

Token 1010: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015755676431581378
    2. '		       ' → logprob: -7.751575469970703
    3. '	           ' → logprob: -8.001575469970703
    4. '       ' → logprob: -8.001575469970703
    5. '	       ' → logprob: -9.251575469970703
    6. ',' → logprob: -9.876575469970703
    7. '           ' → logprob: -10.501575469970703
    8. '			' → logprob: -10.626575469970703
    9. '```' → logprob: -10.751575469970703
    10. '<|end|>' → logprob: -10.751575469970703

Token 1011: ' self' (ID: 1051)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'super' → logprob: -0.4472278654575348
    2. '               ' → logprob: -1.1972278356552124
    3. ' super' → logprob: -2.947227954864502
    4. 'self' (adapté à ' self') → logprob: -5.197227954864502
    5. '	super' → logprob: -8.322227478027344
    6. '                   ' → logprob: -8.697227478027344
    7. '           ' → logprob: -10.072227478027344
    8. ' self' → logprob: -10.197227478027344
    9. '   ' → logprob: -10.947227478027344
    10. '			' → logprob: -11.322227478027344

Token 1012: '.div' (ID: 26803)
  Prédit: '.div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.div' → logprob: -0.05350395664572716
    2. '.data' → logprob: -3.55350399017334
    3. '.top' → logprob: -4.17850399017334
    4. 'div' → logprob: -4.92850399017334
    5. '=' → logprob: -8.30350399017334
    6. 'data' → logprob: -8.55350399017334
    7. '	div' → logprob: -8.67850399017334
    8. '.base' → logprob: -8.92850399017334
    9. ' =' → logprob: -9.42850399017334
    10. '_div' → logprob: -11.17850399017334

Token 1013: 'idend' (ID: 80275)
  Prédit: 'idend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idend' → logprob: -0.00013202552509028465
    2. 'ident' → logprob: -9.875131607055664
    3. '           ' → logprob: -10.375131607055664
    4. '   ' → logprob: -10.875131607055664
    5. 'id' → logprob: -11.750131607055664
    6. '       ' → logprob: -11.875131607055664
    7. '               ' → logprob: -12.250131607055664
    8. 'iden' → logprob: -13.250131607055664
    9. 'indent' → logprob: -13.875131607055664
    10. '            ' → logprob: -14.125131607055664

Token 1014: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48019856214523315
    2. ' =' → logprob: -0.9801985621452332
    3. ',' → logprob: -5.105198383331299
    4. '   ' → logprob: -11.355198860168457
    5. ' ,' → logprob: -11.980198860168457
    6. '    ' → logprob: -12.605198860168457
    7. '       ' → logprob: -12.730198860168457
    8. ' ' → logprob: -12.980198860168457
    9. '        ' → logprob: -13.230198860168457
    10. ',d' → logprob: -13.730198860168457

Token 1015: ' dividend' (ID: 53956)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0789085179567337
    2. ' dividend' → logprob: -2.5789084434509277
    3. ' dividends' → logprob: -12.453908920288086
    4. '	div' → logprob: -12.703908920288086
    5. '<div' → logprob: -12.953908920288086
    6. 'fraction' → logprob: -13.078908920288086
    7. ' div' → logprob: -13.578908920288086
    8. '(div' → logprob: -13.578908920288086
    9. 'Dividend' → logprob: -14.078908920288086
    10. '           ' → logprob: -14.453908920288086

Token 1016: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037705088034272194
    2. ',' → logprob: -6.378770351409912
    3. 'self' → logprob: -6.503770351409912
    4. '<|end|>' → logprob: -8.37877082824707
    5. '       ' → logprob: -9.12877082824707
    6. ' self' → logprob: -9.75377082824707
    7. ',
' → logprob: -10.12877082824707
    8. ',self' → logprob: -10.50377082824707
    9. '
' → logprob: -11.25377082824707
    10. '		       ' → logprob: -11.50377082824707

Token 1017: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037004391197115183
    2. 'self' → logprob: -5.878700256347656
    3. '       ' → logprob: -7.128700256347656
    4. '           ' → logprob: -10.378700256347656
    5. ',' → logprob: -11.003700256347656
    6. 'def' → logprob: -11.628700256347656
    7. ' self' → logprob: -11.628700256347656
    8. 'super' → logprob: -11.753700256347656
    9. '
' → logprob: -12.253700256347656
    10. '                   ' → logprob: -12.628700256347656

Token 1018: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03086133860051632
    2. 'div' → logprob: -3.5308613777160645
    3. ' self' → logprob: -7.0308613777160645
    4. '               ' → logprob: -8.655860900878906
    5. '                   ' → logprob: -10.405860900878906
    6. ' divisor' → logprob: -11.280860900878906
    7. 'def' → logprob: -12.905860900878906
    8. '           ' → logprob: -13.530860900878906
    9. ' div' → logprob: -13.655860900878906
    10. '   ' → logprob: -14.155860900878906

Token 1019: '.div' (ID: 26803)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.06768696010112762
    2. 'base' → logprob: -3.5676870346069336
    3. 'bot' → logprob: -3.6926870346069336
    4. '.div' → logprob: -5.567687034606934
    5. 'top' → logprob: -5.817687034606934
    6. '.bot' → logprob: -6.442687034606934
    7. '
' → logprob: -7.317687034606934
    8. '.base' → logprob: -7.567687034606934
    9. '.' → logprob: -7.817687034606934
    10. '.top' → logprob: -8.317687034606934

Token 1020: 'isor' (ID: 65473)
  Prédit: 'idend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idend' → logprob: -0.0007623416022397578
    2. '               ' → logprob: -7.875762462615967
    3. 'id' → logprob: -9.000761985778809
    4. 'ident' → logprob: -9.250761985778809
    5. '           ' → logprob: -9.625761985778809
    6. '   ' → logprob: -10.625761985778809
    7. '       ' → logprob: -11.625761985778809
    8. '                   ' → logprob: -11.625761985778809
    9. '                ' → logprob: -12.375761985778809
    10. ' ' → logprob: -12.500761985778809

Token 1021: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23515716195106506
    2. ' =' → logprob: -1.7351571321487427
    3. ',' → logprob: -3.4851572513580322
    4. '               ' → logprob: -6.235157012939453
    5. ',
' → logprob: -8.985157012939453
    6. ')' → logprob: -9.235157012939453
    7. '<|end|>' → logprob: -9.360157012939453
    8. ' ,' → logprob: -9.610157012939453
    9. '                ' → logprob: -9.985157012939453
    10. '                   ' → logprob: -10.360157012939453

Token 1022: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.005235887598246336
    2. ' divisor' → logprob: -5.25523567199707
    3. '<div' → logprob: -14.25523567199707
    4. '	div' → logprob: -14.88023567199707
    5. '                   ' → logprob: -15.25523567199707
    6. '(div' → logprob: -15.38023567199707
    7. ' divis' → logprob: -15.38023567199707
    8. 'dis' → logprob: -15.88023567199707
    9. 'den' → logprob: -16.25523567199707
    10. '               ' → logprob: -16.75523567199707

Token 1023: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002664361847564578
    2. '<|end|>' → logprob: -6.877664566040039
    3. 'self' → logprob: -7.002664566040039
    4. '
' → logprob: -8.377664566040039
    5. '                
' → logprob: -8.502664566040039
    6. '                ' → logprob: -9.252664566040039
    7. ',' → logprob: -9.752664566040039
    8. '       ' → logprob: -10.877664566040039
    9. '              ' → logprob: -11.252664566040039
    10. '			' → logprob: -11.377664566040039

Token 1024: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011859419755637646
    2. 'self' → logprob: -7.126185894012451
    3. '			' → logprob: -8.50118637084961
    4. '		       ' → logprob: -9.37618637084961
    5. '       ' → logprob: -10.75118637084961
    6. '	' → logprob: -10.75118637084961
    7. ' self' → logprob: -11.00118637084961
    8. '<|end|>' → logprob: -12.00118637084961
    9. 'super' → logprob: -12.50118637084961
    10. '	self' → logprob: -12.62618637084961

Token 1025: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002381592057645321
    2. ' self' → logprob: -6.252381801605225
    3. 'base' → logprob: -8.752381324768066
    4. 'super' → logprob: -8.752381324768066
    5. '               ' → logprob: -9.002381324768066
    6. ' base' → logprob: -11.877381324768066
    7. ' super' → logprob: -12.252381324768066
    8. '                   ' → logprob: -14.502381324768066
    9. '	self' → logprob: -14.752381324768066
    10. ' ' → logprob: -15.502381324768066

Token 1026: ' data' (ID: 1238)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'super' → logprob: -0.1681159883737564
    2. '               ' → logprob: -2.6681160926818848
    3. 'self' → logprob: -3.0431160926818848
    4. ' super' → logprob: -3.2931160926818848
    5. 'Cell' → logprob: -8.793115615844727
    6. ' self' → logprob: -9.168115615844727
    7. '           ' → logprob: -9.418115615844727
    8. 'h' → logprob: -9.418115615844727
    9. ' Cell' → logprob: -10.293115615844727
    10. '                   ' → logprob: -10.543115615844727

Token 1027: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20163142681121826
    2. ' =' → logprob: -1.7016314268112183
    3. '       ' → logprob: -9.326631546020508
    4. ')' → logprob: -10.951631546020508
    5. '               ' → logprob: -11.076631546020508
    6. '   ' → logprob: -11.451631546020508
    7. ',' → logprob: -11.576631546020508
    8. '=line' → logprob: -11.576631546020508
    9. '=self' → logprob: -11.701631546020508
    10. '           ' → logprob: -11.826631546020508

Token 1028: ' combined' (ID: 15890)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -1.318193793296814
    2. 'lines' → logprob: -1.318193793296814
    3. '[]
' → logprob: -1.443193793296814
    4. 'None' → logprob: -2.1931939125061035
    5. '[]' → logprob: -3.1931939125061035
    6. '[' → logprob: -3.5681939125061035
    7. '[
' → logprob: -4.4431939125061035
    8. '["' → logprob: -4.8181939125061035
    9. ' lines' → logprob: -5.3181939125061035
    10. ' None' → logprob: -5.3181939125061035

Token 1029: ' lines' (ID: 8698)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4717985689640045
    2. ' lines' → logprob: -1.7217985391616821
    3. '=' → logprob: -2.5967986583709717
    4. '[
' → logprob: -3.5967986583709717
    5. 'lines' → logprob: -3.7217986583709717
    6. '[' → logprob: -3.8467986583709717
    7. '(lines' → logprob: -4.346798419952393
    8. '       ' → logprob: -4.596798419952393
    9. '[]
' → logprob: -4.971798419952393
    10. ',' → logprob: -6.096798419952393

Token 1030: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06967584788799286
    2. '=' → logprob: -3.694675922393799
    3. '[
' → logprob: -4.819675922393799
    4. '[' → logprob: -4.819675922393799
    5. '       ' → logprob: -5.319675922393799
    6. '<|end|>' → logprob: -5.319675922393799
    7. ' +' → logprob: -5.694675922393799
    8. ',' → logprob: -6.069675922393799
    9. '<|end|>' → logprob: -6.194675922393799
    10. ':' → logprob: -6.819675922393799

Token 1031: ' vinc' (ID: 46511)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.7109022736549377
    2. 'div' → logprob: -0.8359022736549377
    3. '['' → logprob: -3.710902214050293
    4. '[
' → logprob: -4.460902214050293
    5. ''' → logprob: -4.835902214050293
    6. ''-' → logprob: -5.210902214050293
    7. ''.' → logprob: -5.460902214050293
    8. '\n' → logprob: -5.585902214050293
    9. ' dividend' → logprob: -6.085902214050293
    10. '[' → logprob: -6.085902214050293

Token 1032: 'ulum' (ID: 40868)
  Prédit: 'ulum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulum' → logprob: -0.00020270596724003553
    2. 'iculum' → logprob: -9.000203132629395
    3. 'u' → logprob: -10.500203132629395
    4. '   ' → logprob: -11.250203132629395
    5. 'icum' → logprob: -12.250203132629395
    6. '-
' → logprob: -12.250203132629395
    7. 'cul' → logprob: -12.500203132629395
    8. '
' → logprob: -12.875203132629395
    9. ''''
' → logprob: -13.375203132629395
    10. 'ul' → logprob: -13.375203132629395

Token 1033: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7187967300415039
    2. ' =' → logprob: -0.9687967300415039
    3. '=' → logprob: -3.093796730041504
    4. '       ' → logprob: -3.468796730041504
    5. ',' → logprob: -4.093796730041504
    6. ':
' → logprob: -4.968796730041504
    7. '
' → logprob: -5.218796730041504
    8. '[' → logprob: -5.718796730041504
    9. ':' → logprob: -5.718796730041504
    10. '           ' → logprob: -6.093796730041504

Token 1034: ' spaces' (ID: 18608)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.9040462970733643
    2. ''-' → logprob: -1.2790462970733643
    3. 'base' → logprob: -2.5290462970733643
    4. 'fraction' → logprob: -3.2790462970733643
    5. 'top' → logprob: -3.5290462970733643
    6. '[' → logprob: -3.6540462970733643
    7. 'v' → logprob: -3.7790462970733643
    8. 'div' → logprob: -4.029046058654785
    9. '
' → logprob: -4.279046058654785
    10. 'cells' → logprob: -4.279046058654785

Token 1035: ' -' (ID: 533)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04394162818789482
    2. '       ' → logprob: -3.6689417362213135
    3. '<|end|>' → logprob: -5.668941497802734
    4. '
' → logprob: -6.418941497802734
    5. '                ' → logprob: -6.793941497802734
    6. ',' → logprob: -6.793941497802734
    7. ' =' → logprob: -7.168941497802734
    8. 'self' → logprob: -7.168941497802734
    9. '   ' → logprob: -7.293941497802734
    10. '\' → logprob: -7.293941497802734

Token 1036: ' not' (ID: 625)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.31974607706069946
    2. 'lines' → logprob: -1.3197460174560547
    3. 'None' → logprob: -5.944746017456055
    4. ' None' → logprob: -6.944746017456055
    5. '[
' → logprob: -6.944746017456055
    6. '[' → logprob: -7.194746017456055
    7. '[]' → logprob: -8.069746017456055
    8. ' [' → logprob: -9.069746017456055
    9. ''' → logprob: -9.194746017456055
    10. 'data' → logprob: -9.444746017456055

Token 1037: ' needed' (ID: 6118)
  Prédit: 'stored'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stored' → logprob: -0.6901169419288635
    2. 'implemented' → logprob: -1.4401168823242188
    3. 'used' → logprob: -2.1901168823242188
    4. ' stored' → logprob: -2.3151168823242188
    5. 'None' → logprob: -4.190116882324219
    6. ' None' → logprob: -4.565116882324219
    7. ' used' → logprob: -5.190116882324219
    8. 'fully' → logprob: -5.815116882324219
    9. 'over' → logprob: -6.315116882324219
    10. ' fully' → logprob: -6.440116882324219

Token 1038: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37972667813301086
    2. '
' → logprob: -1.2547266483306885
    3. ' for' → logprob: -4.379726886749268
    4. '                
' → logprob: -5.629726886749268
    5. ',' → logprob: -5.754726886749268
    6. '<|end|>' → logprob: -5.879726886749268
    7. '   ' → logprob: -7.129726886749268
    8. '                ' → logprob: -7.129726886749268
    9. ' ' → logprob: -7.379726886749268
    10. '
                
' → logprob: -7.504726886749268

Token 1039: ' evaluation' (ID: 21407)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -1.047432541847229
    2. 'fraction' → logprob: -1.797432541847229
    3. 'evaluation' → logprob: -2.0474324226379395
    4. 'par' → logprob: -2.4224324226379395
    5. ' now' → logprob: -2.6724324226379395
    6. 'this' → logprob: -2.6724324226379395
    7. 'f' → logprob: -2.9224324226379395
    8. 'cal' → logprob: -4.4224324226379395
    9. 'com' → logprob: -4.6724324226379395
    10. 'storage' → logprob: -4.6724324226379395

Token 1040: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16463318467140198
    2. '
' → logprob: -1.9146331548690796
    3. '<|end|>' → logprob: -6.789633274078369
    4. '                
' → logprob: -6.914633274078369
    5. ',' → logprob: -7.539633274078369
    6. '\n' → logprob: -8.414632797241211
    7. '           ' → logprob: -8.664632797241211
    8. ',
' → logprob: -8.789632797241211
    9. '       ' → logprob: -8.914632797241211
    10. '   ' → logprob: -9.039632797241211

Token 1041: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002973280206788331
    2. '       ' → logprob: -9.750297546386719
    3. '                
' → logprob: -9.875297546386719
    4. '
' → logprob: -10.000297546386719
    5. 'self' → logprob: -10.000297546386719
    6. '<|end|>' → logprob: -10.500297546386719
    7. '                ' → logprob: -10.625297546386719
    8. '           ' → logprob: -11.875297546386719
    9. '   ' → logprob: -11.875297546386719
    10. '```' → logprob: -12.000297546386719

Token 1042: ' #' (ID: 1069)
  Prédit: ' super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' super' → logprob: -0.7286944389343262
    2. '               ' → logprob: -1.1036944389343262
    3. 'super' → logprob: -1.7286944389343262
    4. 'self' → logprob: -5.228694438934326
    5. ' self' → logprob: -6.228694438934326
    6. '                   ' → logprob: -7.728694438934326
    7. '   ' → logprob: -9.478694915771484
    8. '                ' → logprob: -9.603694915771484
    9. ' ' → logprob: -9.853694915771484
    10. 'return' → logprob: -9.978694915771484

Token 1043: ' set' (ID: 920)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'super' → logprob: -0.6218386888504028
    2. '               ' → logprob: -1.1218386888504028
    3. 'self' → logprob: -2.1218385696411133
    4. ' super' → logprob: -4.246838569641113
    5. 'def' → logprob: -7.121838569641113
    6. '           ' → logprob: -7.246838569641113
    7. '       ' → logprob: -7.871838569641113
    8. 'return' → logprob: -7.871838569641113
    9. ' self' → logprob: -8.246838569641113
    10. '                   ' → logprob: -8.746838569641113

Token 1044: ' h' (ID: 312)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1226835250854492
    2. 'h' → logprob: -1.3726835250854492
    3. 'super' → logprob: -1.4976835250854492
    4. 'top' → logprob: -2.622683525085449
    5. 'base' → logprob: -3.122683525085449
    6. ' super' → logprob: -3.622683525085449
    7. ' base' → logprob: -3.997683525085449
    8. ' h' → logprob: -4.622683525085449
    9. ' top' → logprob: -4.997683525085449
    10. '           ' → logprob: -5.497683525085449

Token 1045: ',w' (ID: 49598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.035259831696748734
    2. ' =' → logprob: -3.53525972366333
    3. '       ' → logprob: -5.53525972366333
    4. '   ' → logprob: -6.91025972366333
    5. '=self' → logprob: -8.035260200500488
    6. 'self' → logprob: -9.285260200500488
    7. '           ' → logprob: -10.035260200500488
    8. '               ' → logprob: -10.785260200500488
    9. '=
' → logprob: -10.910260200500488
    10. '        ' → logprob: -11.535260200500488

Token 1046: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08898330479860306
    2. '               ' → logprob: -3.2139832973480225
    3. ' =' → logprob: -3.3389832973480225
    4. '=self' → logprob: -5.338983535766602
    5. 'self' → logprob: -6.213983535766602
    6. '                   ' → logprob: -7.213983535766602
    7. '           ' → logprob: -7.338983535766602
    8. '       ' → logprob: -7.963983535766602
    9. ',' → logprob: -7.963983535766602
    10. '   ' → logprob: -8.463983535766602

Token 1047: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.4974633455276489
    2. 'base' → logprob: -1.122463345527649
    3. 'w' → logprob: -2.8724632263183594
    4. '       ' → logprob: -5.622463226318359
    5. ' w' → logprob: -6.497463226318359
    6. 'self' → logprob: -7.122463226318359
    7. ' super' → logprob: -7.247463226318359
    8. 'super' → logprob: -7.372463226318359
    9. '           ' → logprob: -7.622463226318359
    10. '   ' → logprob: -7.997463226318359

Token 1048: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011404176242649555
    2. 'self' → logprob: -5.386404037475586
    3. ' =' → logprob: -5.636404037475586
    4. '=' → logprob: -7.011404037475586
    5. ' self' → logprob: -7.136404037475586
    6. ',' → logprob: -8.011404037475586
    7. 'super' → logprob: -8.386404037475586
    8. '(self' → logprob: -8.636404037475586
    9. ' super' → logprob: -8.761404037475586
    10. '                ' → logprob: -9.011404037475586

Token 1049: ' arguments' (ID: 11917)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0045585306361317635
    2. 'self' → logprob: -5.629558563232422
    3. '           ' → logprob: -8.129558563232422
    4. 'max' → logprob: -8.754558563232422
    5. '       ' → logprob: -8.879558563232422
    6. '               ' → logprob: -9.129558563232422
    7. 'super' → logprob: -9.254558563232422
    8. '   ' → logprob: -10.004558563232422
    9. ' dividend' → logprob: -10.379558563232422
    10. 'fraction' → logprob: -11.004558563232422

Token 1050: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012999514117836952
    2. '
' → logprob: -4.512999534606934
    3. '                
' → logprob: -7.387999534606934
    4. ' 
' → logprob: -8.512999534606934
    5. '   ' → logprob: -8.762999534606934
    6. 'self' → logprob: -9.262999534606934
    7. '                ' → logprob: -9.262999534606934
    8. ' ' → logprob: -9.262999534606934
    9. 'super' → logprob: -9.387999534606934
    10. ' super' → logprob: -9.387999534606934

Token 1051: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015383612480945885
    2. '
' → logprob: -9.750153541564941
    3. 'self' → logprob: -10.625153541564941
    4. '       ' → logprob: -11.000153541564941
    5. '			' → logprob: -11.375153541564941
    6. 'class' → logprob: -11.750153541564941
    7. 'super' → logprob: -11.875153541564941
    8. '```' → logprob: -12.000153541564941
    9. '   ' → logprob: -12.750153541564941
    10. '		       ' → logprob: -12.750153541564941

Token 1052: ' self' (ID: 1051)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'super' → logprob: -0.6473469138145447
    2. '               ' → logprob: -1.5223469734191895
    3. ' super' → logprob: -2.0223469734191895
    4. 'self' (adapté à ' self') → logprob: -2.5223469734191895
    5. '
' → logprob: -3.3973469734191895
    6. ' self' → logprob: -4.8973469734191895
    7. '                   ' → logprob: -5.8973469734191895
    8. '   ' → logprob: -7.8973469734191895
    9. '                ' → logprob: -7.8973469734191895
    10. '       ' → logprob: -7.8973469734191895

Token 1053: '.base' (ID: 15523)
  Prédit: '.h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0014415422920137644
    2. '.' → logprob: -7.126441478729248
    3. '.data' → logprob: -7.501441478729248
    4. 'data' → logprob: -10.376441955566406
    5. '.top' → logprob: -10.501441955566406
    6. 'h' → logprob: -11.876441955566406
    7. '=' → logprob: -12.251441955566406
    8. ' .' → logprob: -12.376441955566406
    9. '.base' → logprob: -13.501441955566406
    10. '   ' → logprob: -13.626441955566406

Token 1054: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021033883094788
    2. ' =' → logprob: -2.350210428237915
    3. '   ' → logprob: -14.100210189819336
    4. '	' → logprob: -14.350210189819336
    5. ',' → logprob: -14.475210189819336
    6. '    ' → logprob: -14.600210189819336
    7. '=self' → logprob: -14.975210189819336
    8. ' ' → logprob: -15.350210189819336
    9. '=
' → logprob: -15.975210189819336
    10. '       ' → logprob: -16.100210189819336

Token 1055: ' base' (ID: 3611)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6283589601516724
    2. 'base' → logprob: -0.8783589601516724
    3. '0' → logprob: -3.503358840942383
    4. ' base' → logprob: -4.253358840942383
    5. ' i' → logprob: -6.128358840942383
    6. 'div' → logprob: -6.503358840942383
    7. 'len' → logprob: -6.753358840942383
    8. '   ' → logprob: -7.253358840942383
    9. 'self' → logprob: -7.753358840942383
    10. ' ' → logprob: -8.878358840942383

Token 1056: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000540762091986835
    2. 'self' → logprob: -7.875540733337402
    3. '
' → logprob: -9.750540733337402
    4. '       ' → logprob: -10.500540733337402
    5. '<|end|>' → logprob: -10.750540733337402
    6. ',' → logprob: -11.250540733337402
    7. '		       ' → logprob: -11.625540733337402
    8. '			' → logprob: -11.750540733337402
    9. '           ' → logprob: -12.500540733337402
    10. ' self' → logprob: -12.625540733337402

Token 1057: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003928437363356352
    2. '       ' → logprob: -6.3789286613464355
    3. 'self' → logprob: -6.7539286613464355
    4. '
' → logprob: -7.3789286613464355
    5. '<|end|>' → logprob: -8.753928184509277
    6. '		       ' → logprob: -9.128928184509277
    7. '	' → logprob: -9.503928184509277
    8. '			' → logprob: -10.753928184509277
    9. '```' → logprob: -11.753928184509277
    10. ',' → logprob: -12.128928184509277

Token 1058: ' def' (ID: 1056)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32976025342941284
    2. '           ' → logprob: -1.3297603130340576
    3. 'self' → logprob: -4.2047600746154785
    4. 'def' (adapté à ' def') → logprob: -7.5797600746154785
    5. '       ' → logprob: -8.454760551452637
    6. ' self' → logprob: -8.829760551452637
    7. '
' → logprob: -9.204760551452637
    8. 'super' → logprob: -9.329760551452637
    9. '   ' → logprob: -9.579760551452637
    10. 'h' → logprob: -10.079760551452637

Token 1059: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5992836952209473
    2. 'h' → logprob: -1.7242836952209473
    3. 'init' → logprob: -2.8492836952209473
    4. 'repr' → logprob: -2.9742836952209473
    5. ' __' → logprob: -3.3492836952209473
    6. 'eval' → logprob: -3.4742836952209473
    7. 'top' → logprob: -3.9742836952209473
    8. 'w' → logprob: -4.099283695220947
    9. 'get' → logprob: -4.349283695220947
    10. 'update' → logprob: -4.974283695220947

Token 1060: 'repr' (ID: 67002)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0006152204005047679
    2. 'repr' → logprob: -8.250615119934082
    3. 'len' → logprob: -8.375615119934082
    4. 'class' → logprob: -9.375615119934082
    5. 'str' → logprob: -10.500615119934082
    6. 'eq' → logprob: -12.500615119934082
    7. 'sizeof' → logprob: -13.000615119934082
    8. 'get' → logprob: -13.500615119934082
    9. 'lt' → logprob: -13.875615119934082
    10. ' init' → logprob: -14.000615119934082

Token 1061: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01181034091860056
    2. '__' → logprob: -5.511810302734375
    3. '(self' → logprob: -5.511810302734375
    4. '__(
' → logprob: -6.011810302734375
    5. '__('' → logprob: -6.761810302734375
    6. '(' → logprob: -10.386810302734375
    7. '__((' → logprob: -11.761810302734375
    8. '__("' → logprob: -12.136810302734375
    9. '__:' → logprob: -12.886810302734375
    10. '__[' → logprob: -13.136810302734375

Token 1062: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005881795077584684
    2. '(self' → logprob: -8.000588417053223
    3. ' self' → logprob: -8.375588417053223
    4. ')' → logprob: -11.125588417053223
    5. '(' → logprob: -13.375588417053223
    6. '   ' → logprob: -13.500588417053223
    7. ')(' → logprob: -14.125588417053223
    8. '           ' → logprob: -14.250588417053223
    9. '
' → logprob: -14.250588417053223
    10. '):
' → logprob: -14.375588417053223

Token 1063: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9046822786331177
    2. '__(' → logprob: -1.0296822786331177
    3. '__('' → logprob: -2.154682159423828
    4. '__(
' → logprob: -2.279682159423828
    5. '(self' → logprob: -4.779682159423828
    6. '__':
' → logprob: -5.904682159423828
    7. 'self' → logprob: -6.404682159423828
    8. '__(*' → logprob: -6.529682159423828
    9. '__:' → logprob: -7.029682159423828
    10. '(' → logprob: -7.154682159423828

Token 1064: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7103152871131897
    2. '           ' → logprob: -1.460315227508545
    3. ' self' → logprob: -2.460315227508545
    4. 'self' → logprob: -2.835315227508545
    5. '(self' → logprob: -3.460315227508545
    6. ''' → logprob: -3.585315227508545
    7. '       ' → logprob: -3.710315227508545
    8. ' return' → logprob: -4.085315227508545
    9. '                   ' → logprob: -4.960315227508545
    10. 'return' → logprob: -4.960315227508545

Token 1065: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10027007013559341
    2. ' return' → logprob: -2.3502700328826904
    3. '               ' → logprob: -10.10027027130127
    4. '                   ' → logprob: -10.97527027130127
    5. '           ' → logprob: -12.72527027130127
    6. '
' → logprob: -14.10027027130127
    7. '                       ' → logprob: -14.35027027130127
    8. '	return' → logprob: -14.60027027130127
    9. '   ' → logprob: -16.100269317626953
    10. '       ' → logprob: -16.225269317626953

Token 1066: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25270408391952515
    2. ' f' → logprob: -1.50270414352417
    3. ''' → logprob: -8.377703666687012
    4. '"' → logprob: -8.877703666687012
    5. ' super' → logprob: -8.877703666687012
    6. 'super' → logprob: -9.002703666687012
    7. ''f' → logprob: -10.252703666687012
    8. '   ' → logprob: -10.377703666687012
    9. 'F' → logprob: -10.752703666687012
    10. ' ' → logprob: -11.002703666687012

Token 1067: '"' (ID: 1)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.5708627700805664
    2. ' Fraction' → logprob: -1.9458627700805664
    3. '(F' → logprob: -2.3208627700805664
    4. 'Cell' → logprob: -2.8208627700805664
    5. '"' → logprob: -3.0708627700805664
    6. ''' → logprob: -3.4458627700805664
    7. '"<' → logprob: -4.320862770080566
    8. 'self' → logprob: -4.695862770080566
    9. ''<' → logprob: -5.195862770080566
    10. ' Cell' → logprob: -5.570862770080566

Token 1068: 'Fraction' (ID: 74401)
  Prédit: 'Fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.009039008989930153
    2. ' Fraction' → logprob: -5.634038925170898
    3. 'f' → logprob: -6.259038925170898
    4. 'Cell' → logprob: -6.509038925170898
    5. ' f' → logprob: -7.259038925170898
    6. ''' → logprob: -7.759038925170898
    7. 'self' → logprob: -8.134038925170898
    8. '<F' → logprob: -8.759038925170898
    9. '{' → logprob: -9.134038925170898
    10. 'F' → logprob: -9.259038925170898

Token 1069: '({' (ID: 3972)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -7.815280696377158e-05
    2. '(' → logprob: -10.500078201293945
    3. '("' → logprob: -10.500078201293945
    4. '(
' → logprob: -12.375078201293945
    5. '"' → logprob: -12.625078201293945
    6. '('' → logprob: -13.000078201293945
    7. '("("' → logprob: -13.250078201293945
    8. 'Line' → logprob: -13.500078201293945
    9. '("
' → logprob: -13.500078201293945
    10. '<Cell' → logprob: -14.250078201293945

Token 1070: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.0219828002154827e-05
    2. 'repr' → logprob: -11.625020027160645
    3. ''' → logprob: -12.250020027160645
    4. 'div' → logprob: -12.875020027160645
    5. ' self' → logprob: -13.625020027160645
    6. 'str' → logprob: -13.625020027160645
    7. '{' → logprob: -15.000020027160645
    8. '   ' → logprob: -15.375020027160645
    9. ''{' → logprob: -16.25002098083496
    10. '(self' → logprob: -16.25002098083496

Token 1071: '.div' (ID: 26803)
  Prédit: '.div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.div' → logprob: -0.008694346062839031
    2. '.base' → logprob: -4.758694171905518
    3. 'div' → logprob: -10.758694648742676
    4. '.' → logprob: -11.133694648742676
    5. '.den' → logprob: -11.883694648742676
    6. '}.' → logprob: -12.133694648742676
    7. '	div' → logprob: -12.508694648742676
    8. ' .' → logprob: -12.758694648742676
    9. ').' → logprob: -12.883694648742676
    10. '.divide' → logprob: -13.133694648742676

Token 1072: 'idend' (ID: 80275)
  Prédit: 'idend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idend' → logprob: -0.01748315803706646
    2. 'and' → logprob: -4.517483234405518
    3. 'ident' → logprob: -6.142483234405518
    4. 'end' → logprob: -7.142483234405518
    5. 'cell' → logprob: -8.26748275756836
    6. 'isor' → logprob: -8.39248275756836
    7. 'id' → logprob: -8.64248275756836
    8. 'Cell' → logprob: -8.76748275756836
    9. '_cell' → logprob: -8.76748275756836
    10. 'class' → logprob: -8.89248275756836

Token 1073: '},{' (ID: 34684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04859180003404617
    2. ')' → logprob: -4.298591613769531
    3. ',
' → logprob: -4.673591613769531
    4. ',"' → logprob: -5.048591613769531
    5. '"' → logprob: -5.173591613769531
    6. ' ,' → logprob: -5.423591613769531
    7. '),' → logprob: -6.298591613769531
    8. '},' → logprob: -6.798591613769531
    9. ')}' → logprob: -7.423591613769531
    10. ')"' → logprob: -7.673591613769531

Token 1074: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010151672904612496
    2. ' self' → logprob: -9.250101089477539
    3. '       ' → logprob: -13.250101089477539
    4. '           ' → logprob: -13.750101089477539
    5. '   ' → logprob: -14.000101089477539
    6. '               ' → logprob: -14.375101089477539
    7. '                   ' → logprob: -14.625101089477539
    8. ' ' → logprob: -15.625101089477539
    9. '     ' → logprob: -16.62510108947754
    10. '         ' → logprob: -16.75010108947754

Token 1075: '.div' (ID: 26803)
  Prédit: '.div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.div' → logprob: -0.0007768734358251095
    2. 'div' → logprob: -7.375776767730713
    3. '.' → logprob: -9.000777244567871
    4. ''.' → logprob: -11.625777244567871
    5. '}.' → logprob: -12.375777244567871
    6. '}' → logprob: -13.000777244567871
    7. '/div' → logprob: -13.125777244567871
    8. '	div' → logprob: -13.500777244567871
    9. '   ' → logprob: -13.625777244567871
    10. '<div' → logprob: -13.750777244567871

Token 1076: 'isor' (ID: 65473)
  Prédit: 'idend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idend' → logprob: -0.018644653260707855
    2. 'isor' → logprob: -4.0186448097229
    3. 'ident' → logprob: -9.143644332885742
    4. 'and' → logprob: -9.143644332885742
    5. ')' → logprob: -10.393644332885742
    6. 'end' → logprob: -10.643644332885742
    7. '{' → logprob: -10.643644332885742
    8. '}' → logprob: -10.893644332885742
    9. 'id' → logprob: -11.018644332885742
    10. ')
' → logprob: -11.268644332885742

Token 1077: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.058429621160030365
    2. '})' → logprob: -2.933429718017578
    3. ')' → logprob: -5.808429718017578
    4. ')"
' → logprob: -8.183429718017578
    5. ')}' → logprob: -8.933429718017578
    6. '}"' → logprob: -10.058429718017578
    7. ' )' → logprob: -10.933429718017578
    8. ' })' → logprob: -11.058429718017578
    9. '))' → logprob: -11.558429718017578
    10. ',' → logprob: -11.808429718017578

Token 1078: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15522128343582153
    2. '<|end|>' → logprob: -2.2802212238311768
    3. '       ' → logprob: -4.655221462249756
    4. '
' → logprob: -5.030221462249756
    5. '           ' → logprob: -5.280221462249756
    6. '"' → logprob: -5.280221462249756
    7. ' )' → logprob: -6.030221462249756
    8. '\n' → logprob: -6.280221462249756
    9. '               ' → logprob: -6.405221462249756
    10. '<|end|>' → logprob: -6.780221462249756

Token 1079: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4020949602127075
    2. '<|end|>' → logprob: -2.277094841003418
    3. ' 
' → logprob: -2.652094841003418
    4. '       ' → logprob: -3.027094841003418
    5. '           ' → logprob: -3.527094841003418
    6. '               ' → logprob: -3.652094841003418
    7. '    
' → logprob: -4.652094841003418
    8. '        
' → logprob: -5.277094841003418
    9. '            
' → logprob: -5.402094841003418
    10. ' ' → logprob: -5.402094841003418

Token 1080: ' fr' (ID: 1441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09260378777980804
    2. '
' → logprob: -2.7176036834716797
    3. '           ' → logprob: -4.84260368347168
    4. 'return' → logprob: -4.96760368347168
    5. ' return' → logprob: -5.46760368347168
    6. '               ' → logprob: -6.59260368347168
    7. '	' → logprob: -7.46760368347168
    8. ' 
' → logprob: -7.96760368347168
    9. '        
' → logprob: -8.46760368347168
    10. '
' → logprob: -9.09260368347168

Token 1081: '_cell' (ID: 39197)
  Prédit: 'action'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'action' → logprob: -0.3244234025478363
    2. 'ac' → logprob: -1.5744234323501587
    3. 'a' → logprob: -2.699423313140869
    4. 'act' → logprob: -6.699423313140869
    5. 'actions' → logprob: -7.949423313140869
    6. 'om' → logprob: -8.699423789978027
    7. 'acti' → logprob: -8.949423789978027
    8. 'e' → logprob: -9.074423789978027
    9. 'agment' → logprob: -9.699423789978027
    10. 'actal' → logprob: -9.949423789978027

Token 1082: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759556293487549
    2. ' =' → logprob: -0.8259556293487549
    3. ')' → logprob: -12.450955390930176
    4. '=
' → logprob: -12.575955390930176
    5. '   ' → logprob: -12.825955390930176
    6. '.' → logprob: -12.950955390930176
    7. ',' → logprob: -13.825955390930176
    8. ' =
' → logprob: -14.200955390930176
    9. '    ' → logprob: -14.700955390930176
    10. ' ' → logprob: -14.950955390930176

Token 1083: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.048588961362838745
    2. ' Fraction' → logprob: -3.048588991165161
    3. '   ' → logprob: -14.423588752746582
    4. '       ' → logprob: -15.673588752746582
    5. '_fraction' → logprob: -15.673588752746582
    6. '    ' → logprob: -15.798588752746582
    7. ' fraction' → logprob: -15.923588752746582
    8. ' ' → logprob: -16.2985897064209
    9. 'fraction' → logprob: -16.7985897064209
    10. '        ' → logprob: -16.7985897064209

Token 1084: 'Cell' (ID: 5346)
  Prédit: 'Cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -5.204720582696609e-05
    2. '<Cell' → logprob: -10.625052452087402
    3. '(Cell' → logprob: -12.000052452087402
    4. '_cell' → logprob: -12.000052452087402
    5. '_Cell' → logprob: -12.125052452087402
    6. 'Cel' → logprob: -12.875052452087402
    7. 'PCell' → logprob: -13.000052452087402
    8. 'Cells' → logprob: -13.125052452087402
    9. 'C' → logprob: -14.250052452087402
    10. '(' → logprob: -14.375052452087402

Token 1085: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.0005548207554966211
    2. 'div' → logprob: -7.500555038452148
    3. '   ' → logprob: -14.000555038452148
    4. '(
' → logprob: -14.750555038452148
    5. '(' → logprob: -15.125555038452148
    6. ' (' → logprob: -16.37555503845215
    7. '	div' → logprob: -16.50055503845215
    8. '<div' → logprob: -16.75055503845215
    9. '       ' → logprob: -17.25055503845215
    10. 'Dividend' → logprob: -17.50055503845215

Token 1086: 'idend' (ID: 80275)
  Prédit: 'idend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idend' → logprob: -9.372294698550832e-06
    2. 'id' → logprob: -12.500009536743164
    3. 'ident' → logprob: -12.625009536743164
    4. 'end' → logprob: -14.375009536743164
    5. 'iend' → logprob: -14.750009536743164
    6. 'd' → logprob: -15.000009536743164
    7. '   ' → logprob: -15.250009536743164
    8. '=' → logprob: -15.250009536743164
    9. 'and' → logprob: -16.500009536743164
    10. 'iden' → logprob: -16.625009536743164

Token 1087: '_cell' (ID: 39197)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002589573385193944
    2. '_cell' → logprob: -6.127589702606201
    3. ' ,' → logprob: -8.627589225769043
    4. '   ' → logprob: -9.627589225769043
    5. ',_' → logprob: -9.877589225769043
    6. ',d' → logprob: -11.127589225769043
    7. ',val' → logprob: -11.127589225769043
    8. ',
' → logprob: -11.252589225769043
    9. 'cell' → logprob: -11.377589225769043
    10. ' ' → logprob: -11.752589225769043

Token 1088: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003124632057733834
    2. ' ,' → logprob: -8.500312805175781
    3. '   ' → logprob: -10.125312805175781
    4. ',
' → logprob: -10.375312805175781
    5. '       ' → logprob: -10.875312805175781
    6. ',d' → logprob: -12.250312805175781
    7. '           ' → logprob: -12.500312805175781
    8. 'div' → logprob: -12.500312805175781
    9. '               ' → logprob: -14.250312805175781
    10. '  ' → logprob: -14.875312805175781

Token 1089: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.4498052223643754e-05
    2. ' divisor' → logprob: -11.250014305114746
    3. '                   ' → logprob: -13.750014305114746
    4. '           ' → logprob: -16.500015258789062
    5. '               ' → logprob: -16.500015258789062
    6. '                  ' → logprob: -16.750015258789062
    7. '       ' → logprob: -17.125015258789062
    8. '   ' → logprob: -17.750015258789062
    9. '(div' → logprob: -17.875015258789062
    10. '	div' → logprob: -17.875015258789062

Token 1090: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0002714681322686374
    2. 'cell' → logprob: -8.250271797180176
    3. 'div' → logprob: -12.750271797180176
    4. 'Cell' → logprob: -12.875271797180176
    5. ')' → logprob: -14.125271797180176
    6. 'val' → logprob: -14.250271797180176
    7. '-cell' → logprob: -14.500271797180176
    8. '   ' → logprob: -14.500271797180176
    9. '_div' → logprob: -14.625271797180176
    10. '
' → logprob: -15.000271797180176

Token 1091: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005340963136404753
    2. ',i' → logprob: -5.255341053009033
    3. ' ,' → logprob: -10.005340576171875
    4. ',e' → logprob: -10.255340576171875
    5. '           ' → logprob: -12.505340576171875
    6. '       ' → logprob: -12.505340576171875
    7. ',
' → logprob: -12.630340576171875
    8. '   ' → logprob: -12.880340576171875
    9. ',int' → logprob: -13.005340576171875
    10. ',v' → logprob: -13.380340576171875

Token 1092: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0899517834186554
    2. 'i' → logprob: -2.464951753616333
    3. ' base' → logprob: -7.214951992034912
    4. '   ' → logprob: -8.839951515197754
    5. ' i' → logprob: -9.839951515197754
    6. '     ' → logprob: -11.464951515197754
    7. '       ' → logprob: -12.089951515197754
    8. '    ' → logprob: -12.089951515197754
    9. '	base' → logprob: -12.339951515197754
    10. '0' → logprob: -12.402451515197754

Token 1093: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.03843274340033531
    2. '+' → logprob: -4.038432598114014
    3. ')' → logprob: -4.288432598114014
    4. ' +' → logprob: -6.288432598114014
    5. '+i' → logprob: -6.413432598114014
    6. 'line' → logprob: -6.538432598114014
    7. ')
' → logprob: -7.538432598114014
    8. '=' → logprob: -7.663432598114014
    9. 'i' → logprob: -9.163433074951172
    10. '=i' → logprob: -9.413433074951172

Token 1094: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07659991830587387
    2. ')
' → logprob: -3.2015998363494873
    3. ' +' → logprob: -3.5765998363494873
    4. '+' → logprob: -5.576600074768066
    5. '+i' → logprob: -7.326600074768066
    6. '   ' → logprob: -8.201600074768066
    7. ' )' → logprob: -8.451600074768066
    8. ' -' → logprob: -10.326600074768066
    9. '=' → logprob: -10.576600074768066
    10. '       ' → logprob: -10.701600074768066

Token 1095: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013590441085398197
    2. '   ' → logprob: -6.876358985900879
    3. '
' → logprob: -9.251358985900879
    4. '<|end|>' → logprob: -9.251358985900879
    5. 'return' → logprob: -9.876358985900879
    6. '        
' → logprob: -11.126358985900879
    7. '	return' → logprob: -11.126358985900879
    8. '	' → logprob: -11.251358985900879
    9. ' return' → logprob: -12.001358985900879
    10. ')' → logprob: -12.376358985900879

Token 1096: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007396845147013664
    2. '   ' → logprob: -5.257396697998047
    3. 'return' (adapté à ' return') → logprob: -6.882396697998047
    4. 'fr' → logprob: -8.007396697998047
    5. '	' → logprob: -8.132396697998047
    6. ' return' → logprob: -9.507396697998047
    7. '        
' → logprob: -9.507396697998047
    8. ' fr' → logprob: -9.882396697998047
    9. '	fr' → logprob: -9.882396697998047
    10. '<|end|>' → logprob: -10.132396697998047

Token 1097: ' fr' (ID: 1441)
  Prédit: 'fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -3.531315314830863e-06
    2. ' fr' → logprob: -12.625003814697266
    3. '(fr' → logprob: -15.875003814697266
    4. '   ' → logprob: -17.625003814697266
    5. '	fr' → logprob: -17.875003814697266
    6. 'fract' → logprob: -20.000003814697266
    7. 'fra' → logprob: -20.375003814697266
    8. '```' → logprob: -21.500003814697266
    9. '(' → logprob: -22.125003814697266
    10. 'frist' → logprob: -22.500003814697266

Token 1098: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -7.994086627149954e-05
    2. '_' → logprob: -10.625080108642578
    3. '_fr' → logprob: -10.875080108642578
    4. '_cells' → logprob: -11.125080108642578
    5. ',_' → logprob: -11.750080108642578
    6. '_Cell' → logprob: -13.125080108642578
    7. '\' → logprob: -13.375080108642578
    8. '```' → logprob: -13.500080108642578
    9. ' _' → logprob: -13.750080108642578
    10. ')_' → logprob: -13.875080108642578

Token 1099: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04533424973487854
    2. ',None' → logprob: -3.1703343391418457
    3. ','.' → logprob: -7.170334339141846
    4. 'None' → logprob: -7.295334339141846
    5. ','' → logprob: -8.045333862304688
    6. ','%' → logprob: -8.670333862304688
    7. '','' → logprob: -9.795333862304688
    8. ' None' → logprob: -10.170333862304688
    9. ',/' → logprob: -10.295333862304688
    10. ',''' → logprob: -10.420333862304688

Token 1100: ' ('' (ID: 9906)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.034527670592069626
    2. ''/' → logprob: -3.6595277786254883
    3. '"/' → logprob: -5.409527778625488
    4. '('/')' → logprob: -6.784527778625488
    5. ''*' → logprob: -7.534527778625488
    6. '('' → logprob: -7.909527778625488
    7. '('/',' → logprob: -8.034527778625488
    8. '('/' → logprob: -8.284527778625488
    9. '(' → logprob: -8.409527778625488
    10. '"' → logprob: -8.534527778625488

Token 1101: 'fraction' (ID: 173249)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3636073172092438
    2. 'frac' → logprob: -2.113607406616211
    3. ''/' → logprob: -2.488607406616211
    4. 'fraction' → logprob: -3.613607406616211
    5. 'div' → logprob: -4.238607406616211
    6. '')' → logprob: -4.363607406616211
    7. '('' → logprob: -4.988607406616211
    8. '('/',' → logprob: -4.988607406616211
    9. '/')' → logprob: -5.238607406616211
    10. '/' → logprob: -5.238607406616211

Token 1102: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -1.045168399810791
    2. ')' → logprob: -1.170168399810791
    3. '')' → logprob: -1.170168399810791
    4. ',' → logprob: -4.545168399810791
    5. '','' → logprob: -4.795168399810791
    6. ''' → logprob: -5.670168399810791
    7. '(',' → logprob: -6.420168399810791
    8. '<|end|>' → logprob: -6.795168399810791
    9. '(','' → logprob: -7.545168399810791
    10. '('' → logprob: -8.045167922973633

Token 1103: ' dividend' (ID: 53956)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.017766019329428673
    2. '(div' → logprob: -4.142765998840332
    3. ')' → logprob: -7.017765998840332
    4. ' dividend' → logprob: -8.392765998840332
    5. '(' → logprob: -8.517765998840332
    6. 'fraction' → logprob: -9.642765998840332
    7. '[' → logprob: -9.767765998840332
    8. ''' → logprob: -10.017765998840332
    9. '')' → logprob: -10.642765998840332
    10. 'None' → logprob: -10.892765998840332

Token 1104: '_val' (ID: 13694)
  Prédit: '_cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.368524432182312
    2. ',' → logprob: -1.243524432182312
    3. ')' → logprob: -4.243524551391602
    4. '','' → logprob: -6.868524551391602
    5. ',_' → logprob: -6.993524551391602
    6. ',)' → logprob: -7.493524551391602
    7. '   ' → logprob: -7.743524551391602
    8. ','' → logprob: -7.993524551391602
    9. 'Cell' → logprob: -8.368524551391602
    10. '',' → logprob: -8.368524551391602

Token 1105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11913914233446121
    2. ')' → logprob: -2.3691391944885254
    3. '<|end|>' → logprob: -4.744139194488525
    4. ',
' → logprob: -4.994139194488525
    5. ',)' → logprob: -6.619139194488525
    6. '[' → logprob: -7.744139194488525
    7. '',' → logprob: -8.119138717651367
    8. '','' → logprob: -8.244138717651367
    9. '),' → logprob: -8.369138717651367
    10. ' ,' → logprob: -8.744138717651367

Token 1106: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.001037214300595224
    2. ' divisor' → logprob: -6.876037120819092
    3. '(div' → logprob: -13.12603759765625
    4. ''' → logprob: -13.75103759765625
    5. '                   ' → logprob: -15.25103759765625
    6. '('' → logprob: -15.62603759765625
    7. ' div' → logprob: -15.87603759765625
    8. 'divider' → logprob: -16.25103759765625
    9. '_div' → logprob: -16.37603759765625
    10. '               ' → logprob: -16.62603759765625

Token 1107: '_val' (ID: 13694)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6682073473930359
    2. 'or' → logprob: -1.9182074069976807
    3. ',' → logprob: -2.2932074069976807
    4. 'r' → logprob: -2.5432074069976807
    5. 'ator' → logprob: -2.9182074069976807
    6. '_cell' → logprob: -2.9182074069976807
    7. '_val' → logprob: -4.918207168579102
    8. '-' → logprob: -5.168207168579102
    9. '_line' → logprob: -5.168207168579102
    10. 'tor' → logprob: -5.543207168579102

Token 1108: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7146746763028204e-05
    2. ',' → logprob: -10.75003719329834
    3. ')
' → logprob: -11.87503719329834
    4. '   ' → logprob: -12.25003719329834
    5. ' )' → logprob: -13.25003719329834
    6. '       ' → logprob: -13.87503719329834
    7. ',)' → logprob: -15.00003719329834
    8. '),' → logprob: -15.12503719329834
    9. '')' → logprob: -15.87503719329834
    10. '[' → logprob: -15.87503719329834

Token 1109: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1110: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5747117400169373
    2. '   ' → logprob: -0.9497117400169373
    3. '
' → logprob: -3.449711799621582
    4. 'return' → logprob: -4.574711799621582
    5. '    
' → logprob: -5.574711799621582
    6. 'if' → logprob: -6.949711799621582
    7. 'for' → logprob: -6.949711799621582
    8. 'def' → logprob: -7.574711799621582
    9. 'raise' → logprob: -7.699711799621582
    10. ' #' → logprob: -7.824711799621582

Token 1111: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6925658583641052
    2. 'cells' → logprob: -0.8175658583641052
    3. 'rows' → logprob: -4.19256591796875
    4. 'cols' → logprob: -4.69256591796875
    5. 'lines' → logprob: -4.81756591796875
    6. 'tokens' → logprob: -5.44256591796875
    7. 'return' → logprob: -5.56756591796875
    8. '   ' → logprob: -5.56756591796875
    9. 'cell' → logprob: -5.56756591796875
    10. 'for' → logprob: -6.06756591796875

Token 1112: ' pow' (ID: 9779)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.989511251449585
    2. 'for' → logprob: -1.489511251449585
    3. 'w' → logprob: -1.989511251449585
    4. ' any' → logprob: -2.989511251449585
    5. ' w' → logprob: -3.239511251449585
    6. ''' → logprob: -3.489511251449585
    7. ' all' → logprob: -3.739511251449585
    8. 'if' → logprob: -3.989511251449585
    9. ' line' → logprob: -4.364511489868164
    10. ''.' → logprob: -4.489511489868164

Token 1113: 'expr' (ID: 21343)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9446005821228027
    2. 'er' → logprob: -1.1946005821228027
    3. 'def' → logprob: -2.4446005821228027
    4. '_lines' → logprob: -2.9446005821228027
    5. '_cells' → logprob: -3.3196005821228027
    6. 'if' → logprob: -3.9446005821228027
    7. '(' → logprob: -3.9446005821228027
    8. '(lines' → logprob: -4.319600582122803
    9. 'lines' → logprob: -4.694600582122803
    10. 'cells' → logprob: -4.944600582122803

Token 1114: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08457562327384949
    2. 'def' → logprob: -3.459575653076172
    3. '(' → logprob: -3.709575653076172
    4. ',' → logprob: -5.709575653076172
    5. '<|end|>' → logprob: -5.709575653076172
    6. '(line' → logprob: -5.834575653076172
    7. ' (' → logprob: -5.959575653076172
    8. '<|end|>' → logprob: -6.209575653076172
    9. '(None' → logprob: -6.584575653076172
    10. '
' → logprob: -6.834575653076172

Token 1115: 'rule' (ID: 32558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6442904472351074
    2. 'w' → logprob: -2.1442904472351074
    3. 'if' → logprob: -2.3942904472351074
    4. 'line' → logprob: -2.6442904472351074
    5. 'lines' → logprob: -2.7692904472351074
    6. ')' → logprob: -3.1442904472351074
    7. 'for' → logprob: -3.8942904472351074
    8. '   ' → logprob: -4.519290447235107
    9. ' line' → logprob: -4.644290447235107
    10. 'len' → logprob: -4.894290447235107

Token 1116: ' V' (ID: 631)
  Prédit: 'VI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VI' → logprob: -1.0916976928710938
    2. ' VI' → logprob: -1.2166976928710938
    3. '   ' → logprob: -1.7166976928710938
    4. '=' → logprob: -2.2166976928710938
    5. ' =' → logprob: -3.4666976928710938
    6. 'def' → logprob: -4.841697692871094
    7. ')' → logprob: -4.841697692871094
    8. ' ' → logprob: -5.591697692871094
    9. 'VII' → logprob: -5.716697692871094
    10. '='' → logprob: -5.966697692871094

Token 1117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40027567744255066
    2. '   ' → logprob: -1.650275707244873
    3. ')
' → logprob: -2.400275707244873
    4. '):' → logprob: -3.400275707244873
    5. '):
' → logprob: -4.900275707244873
    6. ':' → logprob: -6.150275707244873
    7. '=' → logprob: -7.025275707244873
    8. 'def' → logprob: -7.025275707244873
    9. ':)' → logprob: -7.900275707244873
    10. '       ' → logprob: -8.275275230407715

Token 1118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018349874764680862
    2. 'cells' → logprob: -4.393349647521973
    3. '#' → logprob: -5.768349647521973
    4. 'pow' → logprob: -7.393349647521973
    5. 'cell' → logprob: -7.518349647521973
    6. 'line' → logprob: -7.643349647521973
    7. 'lines' → logprob: -8.518349647521973
    8. 'def' → logprob: -8.893349647521973
    9. 'if' → logprob: -9.143349647521973
    10. 'top' → logprob: -9.518349647521973

Token 1119: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7283520102500916
    2. 'if' → logprob: -1.7283520698547363
    3. 'line' → logprob: -2.4783520698547363
    4. 'i' → logprob: -2.9783520698547363
    5. '   ' → logprob: -3.2283520698547363
    6. 'cells' → logprob: -3.2283520698547363
    7. ' for' → logprob: -3.4783520698547363
    8. 'lines' → logprob: -4.103352069854736
    9. 'pow' → logprob: -4.103352069854736
    10. 'sup' → logprob: -4.728352069854736

Token 1120: ' Definition' (ID: 42046)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.124699354171753
    2. 'line' → logprob: -1.874699354171753
    3. 'pow' → logprob: -2.249699354171753
    4. '#' → logprob: -2.374699354171753
    5. 'cells' → logprob: -2.374699354171753
    6. '   ' → logprob: -2.499699354171753
    7. 'if' → logprob: -2.749699354171753
    8. 'lines' → logprob: -3.999699354171753
    9. 'top' → logprob: -4.374699592590332
    10. 'base' → logprob: -4.874699592590332

Token 1121: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07347779721021652
    2. 'def' → logprob: -3.3234777450561523
    3. ' for' → logprob: -4.698477745056152
    4. ':' → logprob: -5.948477745056152
    5. ' =' → logprob: -5.948477745056152
    6. '#' → logprob: -6.073477745056152
    7. '
' → logprob: -6.198477745056152
    8. 'for' → logprob: -6.323477745056152
    9. 'import' → logprob: -6.448477745056152
    10. ' def' → logprob: -6.573477745056152

Token 1122: ' pow' (ID: 9779)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1711777448654175
    2. 'for' → logprob: -1.1711777448654175
    3. 'pow' → logprob: -1.6711777448654175
    4. '#' → logprob: -2.796177864074707
    5. 'def' → logprob: -3.046177864074707
    6. 'line' → logprob: -3.796177864074707
    7. 'i' → logprob: -4.171177864074707
    8. 'lines' → logprob: -4.796177864074707
    9. 'base' → logprob: -4.921177864074707
    10. 'power' → logprob: -5.421177864074707

Token 1123: 'expr' (ID: 21343)
  Prédit: '_expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.4854722321033478
    2. 'expr' → logprob: -1.8604722023010254
    3. 'er' → logprob: -1.9854722023010254
    4. '   ' → logprob: -3.7354722023010254
    5. ' =' → logprob: -3.8604722023010254
    6. 'def' → logprob: -4.735472202301025
    7. '
' → logprob: -4.860472202301025
    8. '(' → logprob: -5.235472202301025
    9. '_' → logprob: -5.735472202301025
    10. 'e' → logprob: -5.860472202301025

Token 1124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3613879680633545
    2. 'def' → logprob: -2.6113879680633545
    3. '_lines' → logprob: -2.7363879680633545
    4. '=' → logprob: -4.236388206481934
    5. 'lines' → logprob: -4.486388206481934
    6. ':' → logprob: -4.486388206481934
    7. '_cells' → logprob: -4.486388206481934
    8. ' lines' → logprob: -4.611388206481934
    9. '   ' → logprob: -4.736388206481934
    10. ' starts' → logprob: -4.861388206481934

Token 1125: ' primary' (ID: 9107)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.9527640342712402
    2. 'lines' → logprob: -0.9527640342712402
    3. 'def' → logprob: -2.9527640342712402
    4. ''' → logprob: -3.3277640342712402
    5. 'split' → logprob: -3.4527640342712402
    6. 'parse' → logprob: -3.8277640342712402
    7. 'None' → logprob: -4.07776403427124
    8. 'line' → logprob: -4.32776403427124
    9. '('' → logprob: -4.32776403427124
    10. ' Cell' → logprob: -4.82776403427124

Token 1126: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.653983473777771
    2. '(' → logprob: -1.903983473777771
    3. ' =' → logprob: -2.5289835929870605
    4. '   ' → logprob: -2.9039835929870605
    5. '(
' → logprob: -2.9039835929870605
    6. ')' → logprob: -3.1539835929870605
    7. '
' → logprob: -3.4039835929870605
    8. '('' → logprob: -3.4039835929870605
    9. ',' → logprob: -3.5289835929870605
    10. ' (' → logprob: -3.6539835929870605

Token 1127: ' optional' (ID: 18297)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.11638805270195007
    2. ' '^' → logprob: -2.6163880825042725
    3. ''*' → logprob: -4.116387844085693
    4. ''' → logprob: -4.366387844085693
    5. '"' → logprob: -6.241387844085693
    6. ' '*'' → logprob: -7.491387844085693
    7. ' '' → logprob: -7.741387844085693
    8. ' ' → logprob: -7.741387844085693
    9. '('' → logprob: -7.741387844085693
    10. '['' → logprob: -7.866387844085693

Token 1128: ' digit' (ID: 19181)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.2920454442501068
    2. ''' → logprob: -2.5420453548431396
    3. ' '^' → logprob: -3.1670453548431396
    4. '('' → logprob: -3.9170453548431396
    5. '^' → logprob: -4.167045593261719
    6. '[' → logprob: -4.542045593261719
    7. '_' → logprob: -4.667045593261719
    8. '   ' → logprob: -4.667045593261719
    9. '(' → logprob: -4.792045593261719
    10. ''*' → logprob: -5.292045593261719

Token 1129: ' at' (ID: 540)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13652153313159943
    2. ' or' → logprob: -2.511521577835083
    3. '[' → logprob: -4.886521339416504
    4. '_' → logprob: -5.261521339416504
    5. '<|end|>' → logprob: -5.386521339416504
    6. 'or' → logprob: -5.636521339416504
    7. ',' → logprob: -5.761521339416504
    8. '(s' → logprob: -5.886521339416504
    9. '   ' → logprob: -6.011521339416504
    10. '<|end|>' → logprob: -6.386521339416504

Token 1130: ' ' (ID: 220)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.403273582458496
    2. '1' → logprob: -1.653273582458496
    3. 'the' → logprob: -1.653273582458496
    4. 'end' → logprob: -2.278273582458496
    5. 'right' → logprob: -2.528273582458496
    6. ' ' → logprob: -3.653273582458496
    7. '[-' → logprob: -3.653273582458496
    8. 'next' → logprob: -3.903273582458496
    9. '0' → logprob: -4.153273582458496
    10. '^' → logprob: -4.278273582458496

Token 1131: '1' (ID: 16)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -1.2845114469528198
    2. ' ' → logprob: -2.0345115661621094
    3. 'end' → logprob: -2.4095115661621094
    4. 'next' → logprob: -2.4095115661621094
    5. '0' → logprob: -2.6595115661621094
    6. 'right' → logprob: -2.9095115661621094
    7. 'top' → logprob: -3.2845115661621094
    8. '1' → logprob: -3.4095115661621094
    9. 'start' → logprob: -3.5345115661621094
    10. 'sup' → logprob: -3.5345115661621094

Token 1132: ' line' (ID: 2543)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7950353026390076
    2. '[' → logprob: -0.9200353026390076
    3. ' +' → logprob: -3.2950353622436523
    4. ' ' → logprob: -3.4200353622436523
    5. '   ' → logprob: -3.9200353622436523
    6. ' [' → logprob: -4.295035362243652
    7. ')' → logprob: -4.545035362243652
    8. ']' → logprob: -4.920035362243652
    9. '<|end|>' → logprob: -5.545035362243652
    10. '    ' → logprob: -5.795035362243652

Token 1133: ' above' (ID: 5151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08695179969072342
    2. ' if' → logprob: -2.836951732635498
    3. '
' → logprob: -4.836951732635498
    4. ' for' → logprob: -5.336951732635498
    5. 'if' → logprob: -5.586951732635498
    6. ' lines' → logprob: -6.086951732635498
    7. 'def' → logprob: -6.461951732635498
    8. 'for' → logprob: -6.711951732635498
    9. ' line' → logprob: -7.711951732635498
    10. ',' → logprob: -7.836951732635498

Token 1134: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015248768962919712
    2. '
' → logprob: -4.265248775482178
    3. ' if' → logprob: -7.140248775482178
    4. '    
' → logprob: -9.89024829864502
    5. 'if' → logprob: -10.14024829864502
    6. ' for' → logprob: -10.14024829864502
    7. 'def' → logprob: -10.26524829864502
    8. ',' → logprob: -10.64024829864502
    9. ' lines' → logprob: -10.89024829864502
    10. ' line' → logprob: -11.26524829864502

Token 1135: '_line' (ID: 14418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047765687108039856
    2. '
' → logprob: -3.4227657318115234
    3. 'if' → logprob: -5.297765731811523
    4. ' if' → logprob: -5.297765731811523
    5. 'def' → logprob: -7.047765731811523
    6. 'for' → logprob: -7.047765731811523
    7. ' for' → logprob: -7.172765731811523
    8. ' line' → logprob: -8.047765731811523
    9. 'line' → logprob: -8.172765731811523
    10. '#' → logprob: -8.297765731811523

Token 1136: ' horizontally' (ID: 113653)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04244624078273773
    2. 'if' → logprob: -3.9174461364746094
    3. ' if' → logprob: -4.167446136474609
    4. '
' → logprob: -5.292446136474609
    5. 'def' → logprob: -7.792446136474609
    6. 'for' → logprob: -8.79244613647461
    7. '#' → logprob: -9.54244613647461
    8. ' for' → logprob: -9.66744613647461
    9. 'line' → logprob: -9.66744613647461
    10. ' line' → logprob: -9.66744613647461

Token 1137: ' adjacent' (ID: 39069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30473628640174866
    2. 'if' → logprob: -2.054736375808716
    3. ' if' → logprob: -2.554736375808716
    4. ' for' → logprob: -4.429736137390137
    5. 'def' → logprob: -4.554736137390137
    6. 'for' → logprob: -4.679736137390137
    7. 'line' → logprob: -5.304736137390137
    8. 'pow' → logprob: -5.429736137390137
    9. ' line' → logprob: -5.679736137390137
    10. '
' → logprob: -6.179736137390137

Token 1138: ' right' (ID: 1849)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10872098803520203
    2. '
' → logprob: -2.6087210178375244
    3. ' if' → logprob: -4.483720779418945
    4. 'if' → logprob: -5.108720779418945
    5. 'def' → logprob: -5.358720779418945
    6. ' lines' → logprob: -6.108720779418945
    7. '#' → logprob: -7.108720779418945
    8. 'for' → logprob: -7.233720779418945
    9. ' line' → logprob: -7.608720779418945
    10. ' for' → logprob: -7.733720779418945

Token 1139: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5330057740211487
    2. 'if' → logprob: -1.408005714416504
    3. 'for' → logprob: -2.783005714416504
    4. 'line' → logprob: -3.283005714416504
    5. 'offset' → logprob: -3.658005714416504
    6. 'above' → logprob: -4.908005714416504
    7. ' if' → logprob: -5.158005714416504
    8. ' for' → logprob: -5.783005714416504
    9. 'start' → logprob: -5.783005714416504
    10. '#' → logprob: -5.783005714416504

Token 1140: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7512139081954956
    2. 'for' → logprob: -1.2512139081954956
    3. 'line' → logprob: -2.376214027404785
    4. '   ' → logprob: -3.126214027404785
    5. ' for' → logprob: -3.751214027404785
    6. 'def' → logprob: -4.126214027404785
    7. ' if' → logprob: -4.126214027404785
    8. 'pow' → logprob: -4.751214027404785
    9. '#' → logprob: -5.001214027404785
    10. 'i' → logprob: -5.126214027404785

Token 1141: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9648470282554626
    2. '   ' → logprob: -1.4648470878601074
    3. 'if' → logprob: -1.4648470878601074
    4. ' for' → logprob: -3.0898470878601074
    5. 'for' → logprob: -3.7148470878601074
    6. ' line' → logprob: -3.7148470878601074
    7. '#' (adapté à ' #') → logprob: -4.464847087860107
    8. '
' → logprob: -4.714847087860107
    9. 'line' → logprob: -4.714847087860107
    10. ' lines' → logprob: -5.339847087860107

Token 1142: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3323550224304199
    2. 'if' → logprob: -1.45735502243042
    3. ' if' → logprob: -3.95735502243042
    4. 'pow' → logprob: -4.08235502243042
    5. 'line' → logprob: -5.83235502243042
    6. 'offset' → logprob: -6.45735502243042
    7. 'top' → logprob: -6.58235502243042
    8. 'above' → logprob: -7.08235502243042
    9. 'for' → logprob: -7.20735502243042
    10. '#' → logprob: -7.33235502243042

Token 1143: ' find' (ID: 1646)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5869930982589722
    2. ' if' → logprob: -0.8369930982589722
    3. '   ' → logprob: -5.461993217468262
    4. ' line' → logprob: -6.711993217468262
    5. ' for' → logprob: -7.086993217468262
    6. 'for' → logprob: -7.211993217468262
    7. ' above' → logprob: -7.336993217468262
    8. 'line' → logprob: -7.711993217468262
    9. 'pow' → logprob: -7.711993217468262
    10. '
' → logprob: -8.086993217468262

Token 1144: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6815754771232605
    2. 'pow' → logprob: -0.8065754771232605
    3. ' if' → logprob: -4.181575298309326
    4. 'pos' → logprob: -5.431575298309326
    5. 'for' → logprob: -5.431575298309326
    6. 'offset' → logprob: -5.681575298309326
    7. 'base' → logprob: -5.806575298309326
    8. 'def' → logprob: -6.181575298309326
    9. 'i' → logprob: -6.306575298309326
    10. 'cell' → logprob: -6.681575298309326

Token 1145: ' one' (ID: 1001)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.07907561957836151
    2. ' base' → logprob: -2.579075574874878
    3. '(base' → logprob: -9.079075813293457
    4. 'len' → logprob: -10.454075813293457
    5. ' ' → logprob: -11.329075813293457
    6. 'h' → logprob: -11.579075813293457
    7. 'lines' → logprob: -11.954075813293457
    8. '   ' → logprob: -12.079075813293457
    9. '
' → logprob: -12.829075813293457
    10. ' h' → logprob: -13.329075813293457

Token 1146: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08243177086114883
    2. 'line' → logprob: -3.3324317932128906
    3. 'def' → logprob: -4.082431793212891
    4. ' ' → logprob: -4.207431793212891
    5. '   ' → logprob: -5.957431793212891
    6. '
' → logprob: -5.957431793212891
    7. ' lines' → logprob: -6.457431793212891
    8. ' def' → logprob: -6.582431793212891
    9. '-line' → logprob: -7.207431793212891
    10. ' <' → logprob: -7.832431793212891

Token 1147: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.045329123735427856
    2. ' above' → logprob: -3.1703290939331055
    3. 'below' → logprob: -6.2953290939331055
    4. 'up' → logprob: -8.545329093933105
    5. '
' → logprob: -9.670329093933105
    6. 'before' → logprob: -9.920329093933105
    7. 'after' → logprob: -10.170329093933105
    8. ' exists' → logprob: -10.170329093933105
    9. ' below' → logprob: -10.420329093933105
    10. '   ' → logprob: -11.170329093933105

Token 1148: ' base' (ID: 3611)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.973139762878418
    2. 'base' → logprob: -1.473139762878418
    3. ' =' → logprob: -1.848139762878418
    4. '=' → logprob: -2.598139762878418
    5. '   ' → logprob: -3.348139762878418
    6. 'lines' → logprob: -3.473139762878418
    7. 'idx' → logprob: -4.348139762878418
    8. '_base' → logprob: -4.473139762878418
    9. '(base' → logprob: -4.598139762878418
    10. '_line' → logprob: -4.723139762878418

Token 1149: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.05847954377532005
    2. '_lines' → logprob: -3.6834795475006104
    3. '=' → logprob: -3.9334795475006104
    4. 'lines' → logprob: -4.808479309082031
    5. 'line' → logprob: -5.933479309082031
    6. ' =' → logprob: -7.433479309082031
    7. 'def' → logprob: -8.183479309082031
    8. 'if' → logprob: -9.058479309082031
    9. '   ' → logprob: -9.808479309082031
    10. 'ine' → logprob: -10.058479309082031

Token 1150: ' there' (ID: 1354)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32197004556655884
    2. ' and' → logprob: -1.821969985961914
    3. '   ' → logprob: -2.946969985961914
    4. ',' → logprob: -3.696969985961914
    5. ' if' → logprob: -4.196969985961914
    6. 'and' → logprob: -5.071969985961914
    7. ':
' → logprob: -5.321969985961914
    8. 'if' → logprob: -5.821969985961914
    9. ' =' → logprob: -5.946969985961914
    10. '=' → logprob: -7.071969985961914

Token 1151: ' is' (ID: 382)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0356479287147522
    2. '<' → logprob: -4.285647869110107
    3. ' is' → logprob: -4.660647869110107
    4. ' >=' → logprob: -6.035647869110107
    5. '>=' → logprob: -6.410647869110107
    6. 'if' → logprob: -6.910647869110107
    7. '<len' → logprob: -6.910647869110107
    8. ' exists' → logprob: -7.035647869110107
    9. ' if' → logprob: -7.285647869110107
    10. ' in' → logprob: -7.285647869110107

Token 1152: ' a' (ID: 261)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.02423873171210289
    2. ' base' → logprob: -3.8992388248443604
    3. 'lines' → logprob: -6.524238586425781
    4. '(base' → logprob: -6.649238586425781
    5. '   ' → logprob: -8.274238586425781
    6. 'len' → logprob: -8.524238586425781
    7. 'line' → logprob: -9.149238586425781
    8. ' lines' → logprob: -9.274238586425781
    9. ' ' → logprob: -9.524238586425781
    10. '(' → logprob: -9.774238586425781

Token 1153: ' digit' (ID: 19181)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6019984483718872
    2. 'cell' → logprob: -1.9769984483718872
    3. 'base' → logprob: -2.4769983291625977
    4. ''' → logprob: -2.6019983291625977
    5. 'Cell' → logprob: -3.1019983291625977
    6. 'line' → logprob: -3.6019983291625977
    7. 'lines' → logprob: -3.8519983291625977
    8. 'if' → logprob: -3.9769983291625977
    9. ''s' → logprob: -5.101998329162598
    10. 'pow' → logprob: -5.101998329162598

Token 1154: ' adjacent' (ID: 39069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14284154772758484
    2. ':' → logprob: -3.2678415775299072
    3. ' if' → logprob: -3.3928415775299072
    4. '
' → logprob: -3.7678415775299072
    5. 'if' → logprob: -3.7678415775299072
    6. ',' → logprob: -4.767841339111328
    7. ':
' → logprob: -5.892841339111328
    8. ' ' → logprob: -6.892841339111328
    9. ' and' → logprob: -7.017841339111328
    10. '.' → logprob: -7.267841339111328

Token 1155: ' right' (ID: 1849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2482898235321045
    2. ' if' → logprob: -1.2482898235321045
    3. '   ' → logprob: -1.3732898235321045
    4. ' line' → logprob: -2.7482898235321045
    5. ':' → logprob: -3.3732898235321045
    6. ' to' → logprob: -3.6232898235321045
    7. 'line' → logprob: -4.123290061950684
    8. ',' → logprob: -4.998290061950684
    9. '_line' → logprob: -5.873290061950684
    10. '(' → logprob: -6.123290061950684

Token 1156: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6746612787246704
    2. ' if' → logprob: -0.9246612787246704
    3. '   ' → logprob: -2.549661159515381
    4. ':' → logprob: -5.049661159515381
    5. ' line' → logprob: -5.924661159515381
    6. 'line' → logprob: -6.299661159515381
    7. '
' → logprob: -6.299661159515381
    8. ' lines' → logprob: -7.424661159515381
    9. ',' → logprob: -7.924661159515381
    10. 'base' → logprob: -8.049661636352539

Token 1157: ' some' (ID: 1236)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.12676481902599335
    2. 'base' → logprob: -3.0017647743225098
    3. 'Cell' → logprob: -4.12676477432251
    4. 'cells' → logprob: -4.12676477432251
    5. 'trim' → logprob: -4.50176477432251
    6. 'w' → logprob: -4.75176477432251
    7. 'def' → logprob: -5.00176477432251
    8. ' lines' → logprob: -6.50176477432251
    9. 'cell' → logprob: -6.62676477432251
    10. ')' → logprob: -6.75176477432251

Token 1158: ' primary' (ID: 9107)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.38307061791419983
    2. '_cell' → logprob: -2.133070707321167
    3. 'w' → logprob: -2.383070707321167
    4. 'base' → logprob: -3.633070707321167
    5. 'pos' → logprob: -3.758070707321167
    6. 'token' → logprob: -4.508070468902588
    7. ' cell' → logprob: -4.883070468902588
    8. 'char' → logprob: -5.633070468902588
    9. 'Cell' → logprob: -5.758070468902588
    10. 'for' → logprob: -5.758070468902588

Token 1159: ' cell' (ID: 4206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19936999678611755
    2. ' if' → logprob: -2.5743699073791504
    3. 'line' → logprob: -3.0743699073791504
    4. '   ' → logprob: -3.1993699073791504
    5. ' line' → logprob: -5.19936990737915
    6. 'for' → logprob: -6.32436990737915
    7. '#' → logprob: -6.32436990737915
    8. 'def' → logprob: -6.44936990737915
    9. 'base' → logprob: -6.82436990737915
    10. 'lines' → logprob: -6.94936990737915

Token 1160: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7016705274581909
    2. '
' → logprob: -1.201670527458191
    3. ' if' → logprob: -2.8266706466674805
    4. 'if' → logprob: -3.0766706466674805
    5. 'def' → logprob: -3.3266706466674805
    6. ':' → logprob: -3.7016706466674805
    7. '#' → logprob: -4.3266706466674805
    8. '    
' → logprob: -5.2016706466674805
    9. ' 
' → logprob: -5.5766706466674805
    10. ',' → logprob: -5.8266706466674805

Token 1161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42571601271629333
    2. 'line' → logprob: -1.8007160425186157
    3. 'if' → logprob: -2.300715923309326
    4. 'base' → logprob: -3.925715923309326
    5. '#' → logprob: -4.425715923309326
    6. 'cell' → logprob: -4.550715923309326
    7. 'cells' → logprob: -4.675715923309326
    8. 'def' → logprob: -5.300715923309326
    9. ' line' → logprob: -5.425715923309326
    10. ' if' → logprob: -5.425715923309326

Token 1162: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.046149730682373
    2. 'if' → logprob: -1.046149730682373
    3. 'line' → logprob: -1.546149730682373
    4. ' if' → logprob: -3.421149730682373
    5. ' line' → logprob: -4.296149730682373
    6. 'base' → logprob: -4.546149730682373
    7. 'return' → logprob: -4.671149730682373
    8. '#' (adapté à ' #') → logprob: -5.796149730682373
    9. 'above' → logprob: -6.171149730682373
    10. 'lines' → logprob: -6.296149730682373

Token 1163: ' Find' (ID: 9764)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14768801629543304
    2. 'line' → logprob: -3.2726879119873047
    3. 'above' → logprob: -3.6476879119873047
    4. '#' → logprob: -3.8976879119873047
    5. 'cells' → logprob: -4.397687911987305
    6. 'pow' → logprob: -4.397687911987305
    7. '   ' → logprob: -5.147687911987305
    8. 'adj' → logprob: -5.147687911987305
    9. 'upper' → logprob: -5.522687911987305
    10. 'for' → logprob: -6.147687911987305

Token 1164: ' all' (ID: 722)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.6007314324378967
    2. 'pow' → logprob: -1.475731372833252
    3. 'base' → logprob: -2.725731372833252
    4. 'cell' → logprob: -3.225731372833252
    5. 'primary' → logprob: -3.850731372833252
    6. 'i' → logprob: -3.975731372833252
    7. ' cells' → logprob: -4.100731372833252
    8. 'line' → logprob: -4.475731372833252
    9. 'top' → logprob: -4.600731372833252
    10. 'def' → logprob: -5.350731372833252

Token 1165: ' connected' (ID: 12079)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.0962187796831131
    2. 'lines' → logprob: -2.5962188243865967
    3. 'for' → logprob: -4.971218585968018
    4. 'line' → logprob: -5.596218585968018
    5. 'if' → logprob: -6.471218585968018
    6. 'def' → logprob: -6.596218585968018
    7. ' cells' → logprob: -6.971218585968018
    8. 'cell' → logprob: -7.596218585968018
    9. 'c' → logprob: -7.846218585968018
    10. '_cells' → logprob: -7.971218585968018

Token 1166: ' cells' (ID: 11242)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.06035969778895378
    2. 'cells' → logprob: -4.060359477996826
    3. '_components' → logprob: -4.560359477996826
    4. '_cells' → logprob: -4.560359477996826
    5. 'def' → logprob: -5.185359477996826
    6. 'lines' → logprob: -5.310359477996826
    7. ' components' → logprob: -5.935359477996826
    8. 'segments' → logprob: -6.310359477996826
    9. 'tokens' → logprob: -6.435359477996826
    10. 'component' → logprob: -6.560359477996826

Token 1167: ' horizontally' (ID: 113653)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1179322004318237
    2. 'cells' → logprob: -1.9929322004318237
    3. ' =' → logprob: -2.4929323196411133
    4. '=' → logprob: -2.4929323196411133
    5. '(line' → logprob: -2.6179323196411133
    6. '   ' → logprob: -3.3679323196411133
    7. ' in' → logprob: -3.6179323196411133
    8. 'line' → logprob: -3.7429323196411133
    9. '=line' → logprob: -3.9929323196411133
    10. 'in' → logprob: -4.117932319641113

Token 1168: ' on' (ID: 402)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8350562453269958
    2. ' on' → logprob: -1.2100563049316406
    3. '   ' → logprob: -2.4600563049316406
    4. ' at' → logprob: -3.7100563049316406
    5. 'def' → logprob: -3.9600563049316406
    6. ' =' → logprob: -4.085056304931641
    7. ',' → logprob: -4.085056304931641
    8. 'in' → logprob: -4.085056304931641
    9. ' line' → logprob: -4.335056304931641
    10. '=' → logprob: -4.335056304931641

Token 1169: ' base' (ID: 3611)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.003335513873025775
    2. ' lines' → logprob: -5.753335475921631
    3. 'line' → logprob: -9.878335952758789
    4. 'base' → logprob: -10.378335952758789
    5. '(lines' → logprob: -10.628335952758789
    6. '   ' → logprob: -11.253335952758789
    7. 'trim' → logprob: -11.378335952758789
    8. '
' → logprob: -12.378335952758789
    9. '	lines' → logprob: -12.378335952758789
    10. 'data' → logprob: -12.628335952758789

Token 1170: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5169896483421326
    2. 'line' → logprob: -1.0169897079467773
    3. 'lines' → logprob: -4.141989707946777
    4. '_lines' → logprob: -4.391989707946777
    5. '   ' → logprob: -5.641989707946777
    6. ' line' → logprob: -6.266989707946777
    7. ')' → logprob: -6.391989707946777
    8. 'def' → logprob: -7.266989707946777
    9. 'eline' → logprob: -7.266989707946777
    10. '[line' → logprob: -7.266989707946777

Token 1171: '
' (ID: 198)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8052916526794434
    2. ':' → logprob: -2.3052916526794434
    3. ' =' → logprob: -2.3052916526794434
    4. 'cells' → logprob: -2.3052916526794434
    5. 'line' → logprob: -3.0552916526794434
    6. ' cells' → logprob: -3.4302916526794434
    7. '   ' → logprob: -3.8052916526794434
    8. ' lines' → logprob: -4.055291652679443
    9. '=' → logprob: -4.055291652679443
    10. 'def' → logprob: -4.305291652679443

Token 1172: '   ' (ID: 271)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.7938352227210999
    2. ' line' → logprob: -1.418835163116455
    3. 'line' → logprob: -1.668835163116455
    4. ' cells' → logprob: -3.043835163116455
    5. 'base' → logprob: -4.043835163116455
    6. 'for' → logprob: -4.793835163116455
    7. ' for' → logprob: -4.793835163116455
    8. 'lines' → logprob: -5.293835163116455
    9. ' lines' → logprob: -5.293835163116455
    10. ' base' → logprob: -5.543835163116455

Token 1173: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6611586809158325
    2. 'cells' → logprob: -0.9111586809158325
    3. 'base' → logprob: -3.286158561706543
    4. 'lines' → logprob: -3.786158561706543
    5. 'current' → logprob: -5.911158561706543
    6. 'def' → logprob: -6.036158561706543
    7. 'row' → logprob: -6.286158561706543
    8. '   ' → logprob: -6.536158561706543
    9. 'curr' → logprob: -6.536158561706543
    10. 'for' → logprob: -6.786158561706543

Token 1174: ' First' (ID: 8338)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.554625928401947
    2. 'line' → logprob: -1.0546259880065918
    3. 'return' → logprob: -4.054625988006592
    4. '   ' → logprob: -4.554625988006592
    5. 'lines' → logprob: -4.679625988006592
    6. 'def' → logprob: -5.054625988006592
    7. 'base' → logprob: -5.304625988006592
    8. '#' → logprob: -5.679625988006592
    9. 'row' → logprob: -5.929625988006592
    10. 'w' → logprob: -6.304625988006592

Token 1175: ' split' (ID: 12648)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7212769389152527
    2. 'cells' → logprob: -0.9712769389152527
    3. 'row' → logprob: -2.9712769985198975
    4. 'lines' → logprob: -4.096276760101318
    5. 'w' → logprob: -4.221276760101318
    6. 'for' → logprob: -4.346276760101318
    7. 'def' → logprob: -4.721276760101318
    8. 'top' → logprob: -5.596276760101318
    9. 'cell' → logprob: -5.721276760101318
    10. 'base' → logprob: -5.721276760101318

Token 1176: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.8801777362823486
    2. 'line' → logprob: -1.0051777362823486
    3. 'cells' → logprob: -2.3801777362823486
    4. 'def' → logprob: -3.7551777362823486
    5. '_cells' → logprob: -3.7551777362823486
    6. 'data' → logprob: -4.0051774978637695
    7. '(line' → logprob: -4.0051774978637695
    8. '_line' → logprob: -4.6301774978637695
    9. ' =' → logprob: -5.1301774978637695
    10. '(lines' → logprob: -5.2551774978637695

Token 1177: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3372824788093567
    2. '[' → logprob: -1.712282419204712
    3. ' =' → logprob: -3.587282419204712
    4. '[line' → logprob: -4.212282657623291
    5. 'def' → logprob: -4.337282657623291
    6. 'data' → logprob: -4.712282657623291
    7. 'lines' → logprob: -5.337282657623291
    8. '=[]' → logprob: -5.462282657623291
    9. 'cells' → logprob: -5.587282657623291
    10. '_cells' → logprob: -5.712282657623291

Token 1178: ' spaces' (ID: 18608)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.753835141658783
    2. ''.' → logprob: -0.878835141658783
    3. 'spaces' → logprob: -2.5038352012634277
    4. ''' → logprob: -4.253835201263428
    5. 'def' → logprob: -5.253835201263428
    6. 'lines' → logprob: -5.753835201263428
    7. 'cells' → logprob: -5.878835201263428
    8. 'line' → logprob: -6.503835201263428
    9. 'lambda' → logprob: -6.628835201263428
    10. 'rows' → logprob: -7.253835201263428

Token 1179: ' (' (ID: 350)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.0515162944793701
    2. '[' → logprob: -1.8015162944793701
    3. 'lines' → logprob: -1.8015162944793701
    4. '=' → logprob: -2.55151629447937
    5. '   ' → logprob: -2.67651629447937
    6. '[line' → logprob: -3.05151629447937
    7. 'for' → logprob: -3.17651629447937
    8. 'def' → logprob: -3.80151629447937
    9. ' =' → logprob: -3.80151629447937
    10. 'line' → logprob: -4.801516532897949

Token 1180: ''.' (ID: 6120)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32140564918518066
    2. ''\' → logprob: -2.4464056491851807
    3. 'def' → logprob: -2.9464056491851807
    4. '')' → logprob: -3.1964056491851807
    5. ')
' → logprob: -3.6964056491851807
    6. ''' → logprob: -3.8214056491851807
    7. 'line' → logprob: -4.321405410766602
    8. ''.' → logprob: -5.196405410766602
    9. 'cells' → logprob: -5.446405410766602
    10. 'data' → logprob: -5.696405410766602

Token 1181: ''),' (ID: 10047)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005723286420106888
    2. ''' → logprob: -5.630723476409912
    3. '')
' → logprob: -7.380723476409912
    4. ''),' → logprob: -7.380723476409912
    5. ''):
' → logprob: -8.005722999572754
    6. '')]' → logprob: -9.130722999572754
    7. '',' → logprob: -9.255722999572754
    8. ')' → logprob: -9.380722999572754
    9. ''):' → logprob: -9.380722999572754
    10. ' ')' → logprob: -10.380722999572754

Token 1182: ' parse' (ID: 8420)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.22654104232788086
    2. ' cells' → logprob: -3.351541042327881
    3. 'for' → logprob: -3.601541042327881
    4. 'line' → logprob: -3.851541042327881
    5. '#' → logprob: -3.976541042327881
    6. 'lines' → logprob: -4.101541042327881
    7. 'def' → logprob: -4.726541042327881
    8. 'cell' → logprob: -4.851541042327881
    9. 'h' → logprob: -4.851541042327881
    10. 'tokens' → logprob: -4.851541042327881

Token 1183: ' children' (ID: 3953)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.4821670055389404
    2. 'lines' → logprob: -1.7321670055389404
    3. 'cells' → logprob: -1.9821670055389404
    4. 'def' → logprob: -2.2321670055389404
    5. ' cells' → logprob: -2.7321670055389404
    6. 'for' → logprob: -2.8571670055389404
    7. ')' → logprob: -2.8571670055389404
    8. '(lines' → logprob: -3.4821670055389404
    9. 'base' → logprob: -4.2321672439575195
    10. ' for' → logprob: -4.4821672439575195

Token 1184: ' and' (ID: 326)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.5705035924911499
    2. 'for' → logprob: -2.3205037117004395
    3. 'lines' → logprob: -2.5705037117004395
    4. 'line' → logprob: -2.9455037117004395
    5. '   ' → logprob: -3.1955037117004395
    6. '=' → logprob: -3.5705037117004395
    7. '[line' → logprob: -3.8205037117004395
    8. ')' → logprob: -3.9455037117004395
    9. 'base' → logprob: -4.5705037117004395
    10. 'def' → logprob: -4.5705037117004395

Token 1185: ' align' (ID: 9538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010361875407397747
    2. 'combine' → logprob: -5.510361671447754
    3. 'cells' → logprob: -6.635361671447754
    4. '#' → logprob: -7.135361671447754
    5. 'def' → logprob: -7.260361671447754
    6. ' return' → logprob: -7.635361671447754
    7. 'merge' → logprob: -7.885361671447754
    8. 'collect' → logprob: -8.135361671447754
    9. 'base' → logprob: -8.260361671447754
    10. 'for' → logprob: -8.385361671447754

Token 1186: ' base' (ID: 3611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.422951102256775
    2. 'lines' → logprob: -2.2979512214660645
    3. 'cells' → logprob: -2.2979512214660645
    4. ' lines' → logprob: -2.4229512214660645
    5. 'def' → logprob: -2.4229512214660645
    6. 'for' → logprob: -2.9229512214660645
    7. '=' → logprob: -2.9229512214660645
    8. '   ' → logprob: -3.1729512214660645
    9. ' for' → logprob: -3.7979512214660645
    10. '#' → logprob: -3.7979512214660645

Token 1187: ' lines' (ID: 8698)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7226890921592712
    2. '_cells' → logprob: -1.972689151763916
    3. '   ' → logprob: -2.472689151763916
    4. '_lines' → logprob: -2.597689151763916
    5. '_line' → logprob: -2.722689151763916
    6. '<|end|>' → logprob: -3.597689151763916
    7. '_' → logprob: -3.847689151763916
    8. 'cells' → logprob: -4.222689151763916
    9. ']' → logprob: -4.597689151763916
    10. 'def' → logprob: -4.847689151763916

Token 1188: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5213040113449097
    2. 'cells' → logprob: -1.6463040113449097
    3. '#' → logprob: -1.8963040113449097
    4. 'def' → logprob: -2.021304130554199
    5. 'lines' → logprob: -3.021304130554199
    6. 'line' → logprob: -3.271304130554199
    7. 'for' → logprob: -3.396304130554199
    8. '...' → logprob: -3.771304130554199
    9. '
' → logprob: -3.896304130554199
    10. '```' → logprob: -4.021304130554199

Token 1189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33513346314430237
    2. 'for' → logprob: -2.7101335525512695
    3. '#' → logprob: -2.9601335525512695
    4. ',' → logprob: -3.5851335525512695
    5. 'def' → logprob: -3.5851335525512695
    6. '.' → logprob: -3.8351335525512695
    7. '...' → logprob: -4.0851335525512695
    8. ')' → logprob: -4.2101335525512695
    9. ':' → logprob: -4.3351335525512695
    10. ' for' → logprob: -4.5851335525512695

Token 1190: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1095080375671387
    2. '   ' → logprob: -1.4845080375671387
    3. 'cells' → logprob: -1.9845080375671387
    4. 'lines' → logprob: -2.7345080375671387
    5. '#' (adapté à ' #') → logprob: -2.9845080375671387
    6. 'return' → logprob: -2.9845080375671387
    7. 'for' → logprob: -3.2345080375671387
    8. 'def' → logprob: -3.4845080375671387
    9. ' line' → logprob: -4.234508037567139
    10. 'if' → logprob: -4.734508037567139

Token 1191: ' We' (ID: 1416)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.7219163775444031
    2. '#' → logprob: -1.3469164371490479
    3. 'return' → logprob: -2.471916437149048
    4. '   ' → logprob: -3.346916437149048
    5. 'lines' → logprob: -3.471916437149048
    6. 'line' → logprob: -3.471916437149048
    7. 'children' → logprob: -3.846916437149048
    8. 'child' → logprob: -4.221916198730469
    9. 'base' → logprob: -4.971916198730469
    10. 'def' → logprob: -5.221916198730469

Token 1192: ' parse' (ID: 8420)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5675392746925354
    2. '   ' → logprob: -1.9425392150878906
    3. '=' → logprob: -2.0675392150878906
    4. 'def' → logprob: -2.6925392150878906
    5. ' continue' → logprob: -3.5675392150878906
    6. 'continue' → logprob: -3.9425392150878906
    7. '.' → logprob: -4.567539215087891
    8. '[' → logprob: -5.067539215087891
    9. 'n' → logprob: -5.692539215087891
    10. ')' → logprob: -5.692539215087891

Token 1193: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8664053082466125
    2. 'lines' → logprob: -1.4914052486419678
    3. '...' → logprob: -2.7414052486419678
    4. ' lines' → logprob: -2.7414052486419678
    5. 'cells' → logprob: -2.7414052486419678
    6. '   ' → logprob: -3.7414052486419678
    7. '(lines' → logprob: -3.9914052486419678
    8. 'line' → logprob: -4.241405487060547
    9. 'the' → logprob: -4.491405487060547
    10. '#' → logprob: -4.491405487060547

Token 1194: ' composing' (ID: 91098)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2270980328321457
    2. 'indent' → logprob: -3.352097988128662
    3. 'cells' → logprob: -3.602097988128662
    4. 'ind' → logprob: -3.977097988128662
    5. 'lines' → logprob: -4.102097988128662
    6. 'base' → logprob: -4.227097988128662
    7. 'i' → logprob: -4.602097988128662
    8. 'for' → logprob: -4.727097988128662
    9. 'in' → logprob: -4.727097988128662
    10. ' indentation' → logprob: -5.102097988128662

Token 1195: ' expr' (ID: 30206)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4273219406604767
    2. ' lines' → logprob: -2.5523219108581543
    3. 'lines' → logprob: -2.6773219108581543
    4. 'cells' → logprob: -3.0523219108581543
    5. '...' → logprob: -3.8023219108581543
    6. ' cells' → logprob: -3.9273219108581543
    7. 'tokens' → logprob: -3.9273219108581543
    8. '_lines' → logprob: -4.927321910858154
    9. '_cells' → logprob: -4.927321910858154
    10. 'from' → logprob: -5.052321910858154

Token 1196: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1197: ' term' (ID: 2914)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.400425672531128
    2. '...' → logprob: -1.650425672531128
    3. ' pass' → logprob: -2.400425672531128
    4. '#' → logprob: -2.400425672531128
    5. ' for' → logprob: -3.150425672531128
    6. 'for' → logprob: -3.400425672531128
    7. 'pass' → logprob: -3.400425672531128
    8. 'return' → logprob: -3.400425672531128
    9. ' ' → logprob: -3.650425672531128
    10. ' return' → logprob: -3.775425672531128

Token 1198: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4452066719532013
    2. '<|end|>' → logprob: -2.195206642150879
    3. '<|end|>' → logprob: -2.445206642150879
    4. '
' → logprob: -3.695206642150879
    5. ')' → logprob: -3.820206642150879
    6. '.' → logprob: -3.945206642150879
    7. '=' → logprob: -4.195206642150879
    8. '#' → logprob: -4.195206642150879
    9. 'def' → logprob: -4.195206642150879
    10. ',' → logprob: -4.445206642150879

Token 1199: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.19906046986579895
    2. 'primary' → logprob: -2.3240604400634766
    3. 'def' → logprob: -2.8240604400634766
    4. 'cell' → logprob: -4.574060440063477
    5. ' factor' → logprob: -5.574060440063477
    6. 'token' → logprob: -5.949060440063477
    7. 'atom' → logprob: -6.574060440063477
    8. 'Cell' → logprob: -7.699060440063477
    9. 'expression' → logprob: -7.824060440063477
    10. 'expr' → logprob: -7.824060440063477

Token 1200: ' etc' (ID: 5178)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1201: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9757224917411804
    2. '<|end|>' → logprob: -1.4757225513458252
    3. 'def' → logprob: -1.6007225513458252
    4. '
' → logprob: -2.975722551345825
    5. '#' → logprob: -3.225722551345825
    6. ')' → logprob: -3.475722551345825
    7. '<|end|>' → logprob: -4.350722312927246
    8. '   ' → logprob: -4.600722312927246
    9. ' ' → logprob: -4.725722312927246
    10. ',' → logprob: -4.725722312927246

Token 1202: ' based' (ID: 4122)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1203: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9315485954284668
    2. '...' → logprob: -1.3065485954284668
    3. '<|end|>' → logprob: -2.056548595428467
    4. ' on' → logprob: -2.806548595428467
    5. '=' → logprob: -3.306548595428467
    6. ' ' → logprob: -3.931548595428467
    7. '.' → logprob: -4.181548595428467
    8. '   ' → logprob: -4.306548595428467
    9. ':' → logprob: -4.431548595428467
    10. ')' → logprob: -4.556548595428467

Token 1204: ' top' (ID: 2344)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2889020442962646
    2. 'lines' → logprob: -1.5389020442962646
    3. 'the' → logprob: -1.7889020442962646
    4. 'line' → logprob: -2.7889020442962646
    5. 'len' → logprob: -2.7889020442962646
    6. 'indent' → logprob: -3.1639020442962646
    7. 'cells' → logprob: -3.4139020442962646
    8. 'base' → logprob: -3.6639020442962646
    9. '```' → logprob: -3.7889020442962646
    10. ' indentation' → logprob: -4.413902282714844

Token 1205: ' lines' (ID: 8698)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1801977157592773
    2. 'def' → logprob: -1.9301977157592773
    3. '=' → logprob: -2.3051977157592773
    4. '#' → logprob: -2.4301977157592773
    5. ':' → logprob: -2.4301977157592773
    6. '.' → logprob: -2.5551977157592773
    7. ')' → logprob: -3.1801977157592773
    8. '```' → logprob: -3.1801977157592773
    9. '...' → logprob: -4.555197715759277
    10. ',' → logprob: -4.555197715759277

Token 1206: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1207: ' rules' (ID: 9607)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.15618477761745453
    2. 'base' → logprob: -2.531184673309326
    3. 'lines' → logprob: -3.906184673309326
    4. 'def' → logprob: -4.656184673309326
    5. '
' → logprob: -5.031184673309326
    6. 'h' → logprob: -5.156184673309326
    7. ' bottom' → logprob: -5.531184673309326
    8. '   ' → logprob: -5.656184673309326
    9. 'w' → logprob: -5.906184673309326
    10. 'return' → logprob: -6.281184673309326

Token 1208: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1209: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1210: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1211: ' Here' (ID: 7306)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.02513587474823
    2. '   ' → logprob: -1.52513587474823
    3. ':' → logprob: -1.77513587474823
    4. ')' → logprob: -2.0251359939575195
    5. '(' → logprob: -3.6501359939575195
    6. 'def' → logprob: -3.9001359939575195
    7. ' ' → logprob: -4.5251359939575195
    8. '.' → logprob: -4.6501359939575195
    9. '...' → logprob: -4.6501359939575195
    10. '    ' → logprob: -4.6501359939575195

Token 1212: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9956192970275879
    2. '#' → logprob: -1.620619297027588
    3. 'def' → logprob: -2.120619297027588
    4. 'return' → logprob: -2.745619297027588
    5. '...' → logprob: -3.120619297027588
    6. 'for' → logprob: -3.370619297027588
    7. 'pass' → logprob: -3.370619297027588
    8. 'import' → logprob: -3.870619297027588
    9. '    ' → logprob: -4.370619297027588
    10. 'if' → logprob: -4.495619297027588

Token 1213: ' use' (ID: 1199)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1427751779556274
    2. 'continue' → logprob: -1.6427751779556274
    3. ' return' → logprob: -1.7677751779556274
    4. '...' → logprob: -2.267775058746338
    5. 'return' → logprob: -2.642775058746338
    6. 'def' → logprob: -3.142775058746338
    7. '   ' → logprob: -3.892775058746338
    8. '#' → logprob: -4.267775058746338
    9. 'import' → logprob: -4.392775058746338
    10. 'pass' → logprob: -4.517775058746338

Token 1214: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17007984220981598
    2. '...' → logprob: -3.2950799465179443
    3. 'lines' → logprob: -3.6700799465179443
    4. 'None' → logprob: -4.420079708099365
    5. 'base' → logprob: -4.795079708099365
    6. 'parse' → logprob: -4.920079708099365
    7. 'line' → logprob: -5.045079708099365
    8. '#' → logprob: -5.045079708099365
    9. 'pass' → logprob: -5.045079708099365
    10. 'cells' → logprob: -5.045079708099365

Token 1215: ' top' (ID: 2344)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11942523717880249
    2. 'return' → logprob: -3.4944252967834473
    3. ' def' → logprob: -3.7444252967834473
    4. 'pass' → logprob: -4.369425296783447
    5. 'for' → logprob: -4.744425296783447
    6. '#' → logprob: -4.744425296783447
    7. ' for' → logprob: -5.494425296783447
    8. ' return' → logprob: -5.494425296783447
    9. '...' → logprob: -5.494425296783447
    10. ' pass' → logprob: -5.869425296783447

Token 1216: '-down' (ID: 26673)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.0930778980255127
    2. '_lines' → logprob: -1.7180778980255127
    3. '_' → logprob: -1.9680778980255127
    4. 'line' → logprob: -2.3430778980255127
    5. 'def' → logprob: -2.8430778980255127
    6. '
' → logprob: -3.2180778980255127
    7. '#' → logprob: -3.9680778980255127
    8. 'lines' → logprob: -4.343077659606934
    9. '```' → logprob: -4.343077659606934
    10. '_cell' → logprob: -4.843077659606934

Token 1217: ' approach' (ID: 7139)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appro' → logprob: -0.7629953026771545
    2. ' approach' → logprob: -1.7629952430725098
    3. 'recursive' → logprob: -2.1379952430725098
    4. 'parse' → logprob: -2.6379952430725098
    5. 'parser' → logprob: -2.8879952430725098
    6. 'par' → logprob: -2.8879952430725098
    7. 'def' → logprob: -3.1379952430725098
    8. '...' → logprob: -5.38799524307251
    9. ' parser' → logprob: -6.26299524307251
    10. ' parsing' → logprob: -6.26299524307251

Token 1218: ' per' (ID: 777)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6845910549163818
    2. '   ' → logprob: -0.9345910549163818
    3. '<|end|>' → logprob: -3.184591054916382
    4. 'def' → logprob: -3.309591054916382
    5. '.' → logprob: -5.684591293334961
    6. ',' → logprob: -5.809591293334961
    7. ':
' → logprob: -6.059591293334961
    8. '       ' → logprob: -6.059591293334961
    9. ' ' → logprob: -6.309591293334961
    10. ')' → logprob: -6.434591293334961

Token 1219: ' spec' (ID: 1755)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2338152974843979
    2. '#' → logprob: -2.3588151931762695
    3. 'pass' → logprob: -2.6088151931762695
    4. 'line' → logprob: -4.6088151931762695
    5. 'return' → logprob: -4.7338151931762695
    6. '...' → logprob: -5.6088151931762695
    7. '
' → logprob: -5.8588151931762695
    8. 'indent' → logprob: -5.8588151931762695
    9. 'cell' → logprob: -6.3588151931762695
    10. 'token' → logprob: -6.4838151931762695

Token 1220: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8678253889083862
    2. '<|end|>' → logprob: -1.1178253889083862
    3. ' ' → logprob: -2.867825508117676
    4. '#' → logprob: -2.992825508117676
    5. 'def' → logprob: -3.367825508117676
    6. ')' → logprob: -3.617825508117676
    7. '   ' → logprob: -3.742825508117676
    8. '<|end|>' → logprob: -4.617825508117676
    9. ',' → logprob: -4.992825508117676
    10. '...' → logprob: -4.992825508117676

Token 1221: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9591588973999023
    2. '   ' → logprob: -1.5841588973999023
    3. '...' → logprob: -1.5841588973999023
    4. '<|end|>' → logprob: -2.4591588973999023
    5. ' pass' → logprob: -2.8341588973999023
    6. 'pass' → logprob: -3.9591588973999023
    7. '    ' → logprob: -4.834158897399902
    8. ' #' → logprob: -5.084158897399902
    9. ' ' → logprob: -5.209158897399902
    10. '
' → logprob: -5.584158897399902

Token 1223: ' try' (ID: 2075)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0915237665176392
    2. '   ' → logprob: -1.4665237665176392
    3. 'pass' → logprob: -1.7165237665176392
    4. '#' → logprob: -2.2165236473083496
    5. '...' → logprob: -2.9665236473083496
    6. 'cells' → logprob: -3.5915236473083496
    7. 'def' → logprob: -4.46652364730835
    8. 'lines' → logprob: -4.71652364730835
    9. 'for' → logprob: -4.96652364730835
    10. 'None' → logprob: -5.09152364730835

Token 1224: ' parse' (ID: 8420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07168140262365341
    2. ':' → logprob: -2.821681499481201
    3. ':
' → logprob: -4.946681499481201
    4. ' for' → logprob: -6.446681499481201
    5. 'for' → logprob: -7.571681499481201
    6. ' lines' → logprob: -9.071681022644043
    7. '       ' → logprob: -9.696681022644043
    8. '    ' → logprob: -10.071681022644043
    9. '#' → logprob: -10.321681022644043
    10. ' if' → logprob: -10.571681022644043

Token 1225: ' digit' (ID: 19181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1288753747940063
    2. '(lines' → logprob: -1.3788753747940063
    3. '   ' → logprob: -2.003875255584717
    4. 'def' → logprob: -2.753875255584717
    5. '(
' → logprob: -2.878875255584717
    6. ':' → logprob: -3.878875255584717
    7. ')' → logprob: -4.378875255584717
    8. '(line' → logprob: -4.503875255584717
    9. ' ' → logprob: -4.753875255584717
    10. ',' → logprob: -4.753875255584717

Token 1226: ' at' (ID: 540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4710954427719116
    2. '(' → logprob: -1.7210954427719116
    3. ')' → logprob: -1.9710954427719116
    4. '   ' → logprob: -2.471095561981201
    5. ' =' → logprob: -2.596095561981201
    6. '<|end|>' → logprob: -2.721095561981201
    7. '[' → logprob: -3.221095561981201
    8. '(line' → logprob: -3.471095561981201
    9. ',' → logprob: -3.846095561981201
    10. '=' → logprob: -4.221095561981201

Token 1227: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -4.310693111619912e-05
    2. '   ' → logprob: -10.875042915344238
    3. ' base' → logprob: -11.375042915344238
    4. '(base' → logprob: -11.375042915344238
    5. 'line' → logprob: -14.500042915344238
    6. '
' → logprob: -15.250042915344238
    7. ' ' → logprob: -15.625042915344238
    8. '	base' → logprob: -16.750043869018555
    9. '0' → logprob: -17.000043869018555
    10. '```' → logprob: -17.625043869018555

Token 1228: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0004682073777075857
    2. '_lines' → logprob: -8.750468254089355
    3. '_' → logprob: -8.875468254089355
    4. '   ' → logprob: -9.875468254089355
    5. '
' → logprob: -10.000468254089355
    6. 'line' → logprob: -10.500468254089355
    7. ')' → logprob: -12.250468254089355
    8. '_
' → logprob: -12.500468254089355
    9. '_lineno' → logprob: -12.500468254089355
    10. '[line' → logprob: -12.500468254089355

Token 1229: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14793284237384796
    2. '   ' → logprob: -2.772932767868042
    3. '[' → logprob: -4.272933006286621
    4. ')' → logprob: -4.522933006286621
    5. '[line' → logprob: -4.522933006286621
    6. ' =' → logprob: -4.772933006286621
    7. '):' → logprob: -4.772933006286621
    8. ',' → logprob: -4.897933006286621
    9. '_lines' → logprob: -6.397933006286621
    10. '[:]' → logprob: -6.522933006286621

Token 1230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024037064576987177
    2. ' ' → logprob: -8.375240325927734
    3. '
' → logprob: -11.875240325927734
    4. '+' → logprob: -13.875240325927734
    5. '```' → logprob: -13.875240325927734
    6. '   ' → logprob: -14.500240325927734
    7. '-' → logprob: -16.000240325927734
    8. '0' → logprob: -16.625240325927734
    9. '``' → logprob: -16.750240325927734
    10. ' +' → logprob: -17.375240325927734

Token 1231: ' line' (ID: 2543)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7824431657791138
    2. '   ' → logprob: -0.9074431657791138
    3. ' if' → logprob: -2.657443046569824
    4. ',' → logprob: -4.407443046569824
    5. ':
' → logprob: -4.657443046569824
    6. ' and' → logprob: -4.907443046569824
    7. '<|end|>' → logprob: -5.032443046569824
    8. ')' → logprob: -5.157443046569824
    9. 'if' → logprob: -5.657443046569824
    10. '(' → logprob: -5.782443046569824

Token 1232: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11200591921806335
    2. '   ' → logprob: -2.4870059490203857
    3. ':
' → logprob: -5.237005710601807
    4. ' if' → logprob: -5.237005710601807
    5. ',' → logprob: -5.612005710601807
    6. '<|end|>' → logprob: -6.487005710601807
    7. '.' → logprob: -6.987005710601807
    8. ' :' → logprob: -7.362005710601807
    9. '):' → logprob: -7.362005710601807
    10. 'if' → logprob: -7.612005710601807

Token 1233: ' right' (ID: 1849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23087690770626068
    2. '   ' → logprob: -1.6058769226074219
    3. ' if' → logprob: -5.480876922607422
    4. 'line' → logprob: -7.605876922607422
    5. 'return' → logprob: -8.105876922607422
    6. 'lines' → logprob: -8.980876922607422
    7. 'cells' → logprob: -9.730876922607422
    8. 'cell' → logprob: -9.980876922607422
    9. '
' → logprob: -10.480876922607422
    10. 'idx' → logprob: -10.605876922607422

Token 1234: ' adjacent' (ID: 39069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7072363495826721
    2. '=' → logprob: -2.2072362899780273
    3. ' =' → logprob: -2.4572362899780273
    4. ' if' → logprob: -2.5822362899780273
    5. 'if' → logprob: -2.7072362899780273
    6. 'def' → logprob: -2.9572362899780273
    7. 'of' → logprob: -3.2072362899780273
    8. ',' → logprob: -4.332236289978027
    9. ' of' → logprob: -4.957236289978027
    10. '       ' → logprob: -5.207236289978027

Token 1235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4041210114955902
    2. ':' → logprob: -1.5291210412979126
    3. ',' → logprob: -3.404120922088623
    4. ' =' → logprob: -3.529120922088623
    5. ' if' → logprob: -4.654120922088623
    6. 'def' → logprob: -4.904120922088623
    7. ' line' → logprob: -5.154120922088623
    8. ')' → logprob: -5.279120922088623
    9. '.' → logprob: -5.654120922088623
    10. '(line' → logprob: -5.779120922088623

Token 1236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02372453361749649
    2. ' if' → logprob: -4.523724555969238
    3. ':' → logprob: -4.773724555969238
    4. 'if' → logprob: -6.773724555969238
    5. 'def' → logprob: -7.273724555969238
    6. ',' → logprob: -7.648724555969238
    7. ' for' → logprob: -8.023724555969238
    8. '.' → logprob: -8.023724555969238
    9. ' at' → logprob: -8.773724555969238
    10. 'for' → logprob: -9.023724555969238

Token 1237: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41622644662857056
    2. '   ' → logprob: -1.4162263870239258
    3. 'if' (adapté à ' if') → logprob: -2.666226387023926
    4. ' line' → logprob: -5.041226387023926
    5. '
' → logprob: -5.416226387023926
    6. ' lines' → logprob: -5.666226387023926
    7. ' 
' → logprob: -5.791226387023926
    8. '<|end|>' → logprob: -6.291226387023926
    9. ' ' → logprob: -6.541226387023926
    10. '    
' → logprob: -7.541226387023926

Token 1238: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.1269536167383194
    2. 'base' → logprob: -2.126953601837158
    3. ' ' → logprob: -11.251954078674316
    4. '(base' → logprob: -11.751954078674316
    5. ' (' → logprob: -13.251954078674316
    6. '0' → logprob: -13.376954078674316
    7. '   ' → logprob: -13.876954078674316
    8. '	base' → logprob: -15.376954078674316
    9. '(' → logprob: -15.501954078674316
    10. '  ' → logprob: -16.626953125

Token 1239: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.009960890747606754
    2. '_' → logprob: -6.009961128234863
    3. '+' → logprob: -6.134961128234863
    4. '-' → logprob: -6.634961128234863
    5. ' _' → logprob: -6.759961128234863
    6. '_LINE' → logprob: -7.259961128234863
    7. ' +' → logprob: -7.384961128234863
    8. ' <' → logprob: -7.634961128234863
    9. ' ==' → logprob: -8.384961128234863
    10. ' -' → logprob: -8.384961128234863

Token 1240: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14472223818302155
    2. '>' → logprob: -2.6447222232818604
    3. '-' → logprob: -3.3947222232818604
    4. ' -' → logprob: -3.5197222232818604
    5. ' >=' → logprob: -8.519721984863281
    6. '>-' → logprob: -8.769721984863281
    7. ' ==' → logprob: -9.644721984863281
    8. '   ' → logprob: -10.144721984863281
    9. ':' → logprob: -10.394721984863281
    10. '>=' → logprob: -10.519721984863281

Token 1241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043674863991327584
    2. ' ' → logprob: -7.750436782836914
    3. '=' → logprob: -12.625436782836914
    4. '   ' → logprob: -12.875436782836914
    5. '1' → logprob: -15.625436782836914
    6. '  ' → logprob: -17.625436782836914
    7. '     ' → logprob: -18.000436782836914
    8. '-' → logprob: -18.875436782836914
    9. '>' → logprob: -19.000436782836914
    10. '           ' → logprob: -19.000436782836914

Token 1242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001835141738411039
    2. ' ' → logprob: -8.62518310546875
    3. '   ' → logprob: -13.25018310546875
    4. '-' → logprob: -13.37518310546875
    5. '1' → logprob: -15.50018310546875
    6. '  ' → logprob: -16.37518310546875
    7. '
' → logprob: -16.62518310546875
    8. ' -' → logprob: -16.87518310546875
    9. '```' → logprob: -17.12518310546875
    10. '     ' → logprob: -17.37518310546875

Token 1243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6318604946136475
    2. ':
' → logprob: -0.8818604946136475
    3. ' and' → logprob: -3.0068604946136475
    4. '   ' → logprob: -5.506860733032227
    5. '       ' → logprob: -7.381860733032227
    6. 'and' → logprob: -8.631860733032227
    7. ',' → logprob: -11.131860733032227
    8. ' :
' → logprob: -11.131860733032227
    9. '):
' → logprob: -11.256860733032227
    10. ':
' → logprob: -11.506860733032227

Token 1244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1930299997329712
    2. '   ' → logprob: -1.8180299997329712
    3. ' lines' → logprob: -5.568029880523682
    4. ' line' → logprob: -5.818029880523682
    5. '    ' → logprob: -5.943029880523682
    6. ':' → logprob: -7.068029880523682
    7. '	   ' → logprob: -7.568029880523682
    8. '    
' → logprob: -7.568029880523682
    9. ' for' → logprob: -7.693029880523682
    10. ',' → logprob: -8.69303035736084

Token 1245: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9114508032798767
    2. 'upper' → logprob: -1.2864508628845215
    3. 'up' → logprob: -1.9114508628845215
    4. 'above' → logprob: -2.4114508628845215
    5. 'line' → logprob: -3.2864508628845215
    6. 'top' → logprob: -4.2864508628845215
    7. 'adj' → logprob: -4.9114508628845215
    8. 'sup' → logprob: -5.1614508628845215
    9. 'pow' → logprob: -5.5364508628845215
    10. '       ' → logprob: -5.5364508628845215

Token 1246: ' Try' (ID: 14720)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49079588055610657
    2. 'line' → logprob: -2.365795850753784
    3. 'above' → logprob: -2.490795850753784
    4. 'upper' → logprob: -2.990795850753784
    5. 'pow' → logprob: -3.490795850753784
    6. 'up' → logprob: -3.490795850753784
    7. 'lines' → logprob: -3.615795850753784
    8. 'sup' → logprob: -4.115796089172363
    9. 'adj' → logprob: -4.365796089172363
    10. '       ' → logprob: -4.365796089172363

Token 1247: ' parse' (ID: 8420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016212081536650658
    2. ':' → logprob: -5.141211986541748
    3. ' lines' → logprob: -5.266211986541748
    4. '       ' → logprob: -6.641211986541748
    5. 'lines' → logprob: -7.016211986541748
    6. ':
' → logprob: -7.391211986541748
    7. 'top' → logprob: -7.891211986541748
    8. ' ' → logprob: -8.016212463378906
    9. '           ' → logprob: -8.141212463378906
    10. ' line' → logprob: -8.266212463378906

Token 1248: ' primary' (ID: 9107)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.23753029108047485
    2. ' lines' → logprob: -1.86253023147583
    3. '   ' → logprob: -3.73753023147583
    4. 'cells' → logprob: -4.36253023147583
    5. 'digit' → logprob: -5.23753023147583
    6. 'digits' → logprob: -5.36253023147583
    7. '(lines' → logprob: -5.86253023147583
    8. ' cells' → logprob: -6.48753023147583
    9. '       ' → logprob: -6.48753023147583
    10. 'line' → logprob: -6.98753023147583

Token 1249: ' below' (ID: 4895)
  Prédit: '_cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.9539156556129456
    2. '   ' → logprob: -1.0789155960083008
    3. '(lines' → logprob: -3.203915596008301
    4. '
' → logprob: -3.328915596008301
    5. 'cell' → logprob: -3.453915596008301
    6. '_cells' → logprob: -3.578915596008301
    7. '_lines' → logprob: -3.953915596008301
    8. ' =' → logprob: -4.328915596008301
    9. '       ' → logprob: -4.578915596008301
    10. 'cells' → logprob: -4.578915596008301

Token 1250: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40602558851242065
    2. '(lines' → logprob: -2.0310256481170654
    3. '   ' → logprob: -2.5310256481170654
    4. ',' → logprob: -3.4060256481170654
    5. ' lines' → logprob: -4.031025409698486
    6. ':' → logprob: -4.031025409698486
    7. ' =' → logprob: -4.656025409698486
    8. ' and' → logprob: -4.781025409698486
    9. '(' → logprob: -5.406025409698486
    10. 'lines' → logprob: -5.531025409698486

Token 1251: ' digit' (ID: 19181)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.7036988139152527
    2. 'right' → logprob: -1.7036988735198975
    3. 'base' → logprob: -2.2036988735198975
    4. 'top' → logprob: -3.2036988735198975
    5. 'adj' → logprob: -3.5786988735198975
    6. 'digit' → logprob: -3.8286988735198975
    7. 'pow' → logprob: -3.8286988735198975
    8. 'if' → logprob: -4.328698635101318
    9. ' above' → logprob: -4.703698635101318
    10. 'next' → logprob: -4.703698635101318

Token 1252: ' above' (ID: 5151)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.4601315259933472
    2. ' =' → logprob: -1.5851315259933472
    3. '       ' → logprob: -1.9601315259933472
    4. ' at' → logprob: -2.0851316452026367
    5. '   ' → logprob: -2.3351316452026367
    6. ',' → logprob: -3.3351316452026367
    7. '_cell' → logprob: -3.4601316452026367
    8. '=' → logprob: -3.4601316452026367
    9. '_line' → logprob: -4.335131645202637
    10. 'cell' → logprob: -4.835131645202637

Token 1253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4098028242588043
    2. '<|end|>' → logprob: -1.284802794456482
    3. ':' → logprob: -3.5348029136657715
    4. '<|end|>' → logprob: -4.7848029136657715
    5. ',' → logprob: -5.0348029136657715
    6. '   ' → logprob: -5.1598029136657715
    7. '.' → logprob: -5.9098029136657715
    8. '...' → logprob: -6.2848029136657715
    9. ' at' → logprob: -7.5348029136657715
    10. ':
' → logprob: -7.7848029136657715

Token 1254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036100372672080994
    2. ':' → logprob: -3.536100387573242
    3. '   ' → logprob: -6.036100387573242
    4. ',' → logprob: -6.911100387573242
    5. ':
' → logprob: -7.036100387573242
    6. '           ' → logprob: -7.911100387573242
    7. '.' → logprob: -8.036100387573242
    8. ' and' → logprob: -8.286100387573242
    9. '<|end|>' → logprob: -8.286100387573242
    10. '(' → logprob: -9.036100387573242

Token 1255: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027793940156698227
    2. '   ' → logprob: -5.027793884277344
    3. 'line' → logprob: -5.652793884277344
    4. 'pass' → logprob: -5.777793884277344
    5. 'for' → logprob: -5.902793884277344
    6. 'top' → logprob: -6.277793884277344
    7. 'primary' → logprob: -6.277793884277344
    8. 'lines' → logprob: -6.777793884277344
    9. 'return' → logprob: -7.152793884277344
    10. ' lines' → logprob: -7.152793884277344

Token 1256: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27653777599334717
    2. 'line' → logprob: -2.2765378952026367
    3. '   ' → logprob: -3.9015378952026367
    4. 'lines' → logprob: -3.9015378952026367
    5. 'for' → logprob: -4.151537895202637
    6. 'above' → logprob: -4.151537895202637
    7. 'top' → logprob: -4.401537895202637
    8. 'primary' → logprob: -4.776537895202637
    9. 'digit' → logprob: -5.026537895202637
    10. 'pass' → logprob: -5.151537895202637

Token 1257: 'most' (ID: 5309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3029022514820099
    2. '=' → logprob: -1.6779022216796875
    3. '    ' → logprob: -4.1779022216796875
    4. ',' → logprob: -4.6779022216796875
    5. ':' → logprob: -5.1779022216796875
    6. '   ' → logprob: -5.4279022216796875
    7. '    
' → logprob: -5.5529022216796875
    8. '       ' → logprob: -5.8029022216796875
    9. ' 
' → logprob: -6.1779022216796875
    10. '        
' → logprob: -6.4279022216796875

Token 1258: ' non' (ID: 2893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2072811126708984
    2. '=' → logprob: -1.5822811126708984
    3. ':' → logprob: -1.9572811126708984
    4. '<|end|>' → logprob: -2.8322811126708984
    5. '<|end|>' → logprob: -3.0822811126708984
    6. 'token' → logprob: -3.3322811126708984
    7. 'cell' → logprob: -3.7072811126708984
    8. '+' → logprob: -3.7072811126708984
    9. ',' → logprob: -4.207281112670898
    10. '_token' → logprob: -4.332281112670898

Token 1259: '-dot' (ID: 180344)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.39966148138046265
    2. 'None' → logprob: -1.1496615409851074
    3. '=None' → logprob: -4.774661540985107
    4. ' 
' → logprob: -6.149661540985107
    5. '.' → logprob: -7.899661540985107
    6. ',None' → logprob: -8.02466106414795
    7. '=' → logprob: -8.39966106414795
    8. '
' → logprob: -8.64966106414795
    9. '.None' → logprob: -8.77466106414795
    10. ' none' → logprob: -8.89966106414795

Token 1260: ' cell' (ID: 4206)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4938322603702545
    2. '=' → logprob: -2.1188323497772217
    3. ')' → logprob: -2.6188323497772217
    4. ':' → logprob: -2.8688323497772217
    5. '_' → logprob: -3.3688323497772217
    6. ' ' → logprob: -3.6188323497772217
    7. ',' → logprob: -4.743832111358643
    8. 'pos' → logprob: -5.493832111358643
    9. ':
' → logprob: -5.493832111358643
    10. '   ' → logprob: -5.493832111358643

Token 1261: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4009523391723633
    2. '=' → logprob: -1.4009523391723633
    3. '   ' → logprob: -3.9009523391723633
    4. '_idx' → logprob: -4.150952339172363
    5. '_index' → logprob: -4.650952339172363
    6. 'idx' → logprob: -4.650952339172363
    7. '_line' → logprob: -4.775952339172363
    8. 'pos' → logprob: -6.150952339172363
    9. '_pos' → logprob: -6.275952339172363
    10. ',' → logprob: -6.525952339172363

Token 1262: ' base' (ID: 3611)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -5.049755782238208e-05
    2. ' lines' → logprob: -10.50005054473877
    3. 'line' → logprob: -10.87505054473877
    4. '   ' → logprob: -13.62505054473877
    5. 'base' → logprob: -14.37505054473877
    6. 'parse' → logprob: -14.37505054473877
    7. '(lines' → logprob: -14.50005054473877
    8. 'data' → logprob: -15.50005054473877
    9. 'trim' → logprob: -15.62505054473877
    10. ' ' → logprob: -15.75005054473877

Token 1263: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.042623892426490784
    2. 'line' → logprob: -3.292623996734619
    3. '0' → logprob: -6.667623996734619
    4. '_lines' → logprob: -6.917623996734619
    5. 'lines' → logprob: -7.042623996734619
    6. '   ' → logprob: -7.167623996734619
    7. ' line' → logprob: -9.167623519897461
    8. ')' → logprob: -9.167623519897461
    9. '       ' → logprob: -9.542623519897461
    10. '=' → logprob: -9.667623519897461

Token 1264: ' line' (ID: 2543)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5909945368766785
    2. '   ' → logprob: -1.9659945964813232
    3. '_line' → logprob: -1.9659945964813232
    4. '_cells' → logprob: -2.8409945964813232
    5. '=' → logprob: -3.3409945964813232
    6. '_idx' → logprob: -4.715994358062744
    7. 'cells' → logprob: -4.715994358062744
    8. '_index' → logprob: -5.090994358062744
    9. 'line' → logprob: -5.090994358062744
    10. ':' → logprob: -5.215994358062744

Token 1265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.813134491443634
    2. '   ' → logprob: -1.1881344318389893
    3. ' =' → logprob: -1.8131344318389893
    4. '=' → logprob: -3.1881344318389893
    5. ':' → logprob: -3.5631344318389893
    6. ',' → logprob: -5.438134670257568
    7. ' line' → logprob: -6.188134670257568
    8. ':
' → logprob: -6.313134670257568
    9. '=line' → logprob: -6.938134670257568
    10. ' lines' → logprob: -7.063134670257568

Token 1266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23935849964618683
    2. ':' → logprob: -1.8643585443496704
    3. ' =' → logprob: -3.614358425140381
    4. ',' → logprob: -4.989358425140381
    5. '   ' → logprob: -5.114358425140381
    6. '<|end|>' → logprob: -5.239358425140381
    7. '=' → logprob: -5.489358425140381
    8. '.' → logprob: -6.614358425140381
    9. ':
' → logprob: -6.614358425140381
    10. '        ' → logprob: -6.864358425140381

Token 1267: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6951472163200378
    2. ' lines' → logprob: -1.6951472759246826
    3. 'cells' → logprob: -2.5701472759246826
    4. 'lines' → logprob: -2.6951472759246826
    5. ' cells' → logprob: -3.6951472759246826
    6. ' line' → logprob: -4.0701470375061035
    7. 'line' → logprob: -4.0701470375061035
    8. ' pass' → logprob: -4.3201470375061035
    9. 'for' → logprob: -4.4451470375061035
    10. 'pass' → logprob: -4.4451470375061035

Token 1268: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3689982295036316
    2. 'line' → logprob: -2.8689982891082764
    3. 'for' → logprob: -2.9939982891082764
    4. ' for' → logprob: -3.6189982891082764
    5. 'lines' → logprob: -3.6189982891082764
    6. ' line' → logprob: -3.7439982891082764
    7. 'row' → logprob: -3.8689982891082764
    8. ' lines' → logprob: -4.118998050689697
    9. 'cells' → logprob: -4.118998050689697
    10. '#' → logprob: -5.118998050689697

Token 1269: ' ranges' (ID: 33269)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.3033040761947632
    2. ' cells' → logprob: -2.1783041954040527
    3. ' base' → logprob: -2.5533041954040527
    4. 'base' → logprob: -2.6783041954040527
    5. 'i' → logprob: -3.0533041954040527
    6. '0' → logprob: -3.1783041954040527
    7. 'line' → logprob: -3.3033041954040527
    8. 'start' → logprob: -3.3033041954040527
    9. '   ' → logprob: -3.4283041954040527
    10. 'j' → logprob: -3.6783041954040527

Token 1270: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1499147266149521
    2. ' =' → logprob: -2.2749147415161133
    3. '   ' → logprob: -3.5249147415161133
    4. 'for' → logprob: -6.774914741516113
    5. '=line' → logprob: -6.774914741516113
    6. '0' → logprob: -7.024914741516113
    7. ',' → logprob: -7.149914741516113
    8. '=None' → logprob: -7.274914741516113
    9. 'def' → logprob: -8.274914741516113
    10. 'lines' → logprob: -8.524914741516113

Token 1271: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.32334426045417786
    2. 'cells' → logprob: -1.8233442306518555
    3. 'lines' → logprob: -3.0733442306518555
    4. 'line' → logprob: -3.6983442306518555
    5. 'dots' → logprob: -4.4483442306518555
    6. 'i' → logprob: -4.9483442306518555
    7. 'None' → logprob: -4.9483442306518555
    8. 'base' → logprob: -5.9483442306518555
    9. ''.' → logprob: -6.5733442306518555
    10. '.' → logprob: -6.6983442306518555

Token 1272: '-dot' (ID: 180344)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006571484263986349
    2. 'None' → logprob: -5.381571292877197
    3. ''.' → logprob: -6.756571292877197
    4. '   ' → logprob: -8.756571769714355
    5. ' None' → logprob: -8.756571769714355
    6. '.None' → logprob: -9.131571769714355
    7. '.
' → logprob: -9.881571769714355
    8. '       ' → logprob: -10.006571769714355
    9. '.'.' → logprob: -10.631571769714355
    10. '...' → logprob: -11.006571769714355

Token 1273: ' in' (ID: 306)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.8686326742172241
    2. ')' → logprob: -2.1186327934265137
    3. 'chars' → logprob: -2.1186327934265137
    4. 's' → logprob: -2.3686327934265137
    5. ' cells' → logprob: -2.7436327934265137
    6. ' characters' → logprob: -2.8686327934265137
    7. ' segments' → logprob: -2.8686327934265137
    8. ' line' → logprob: -3.1186327934265137
    9. ' chars' → logprob: -3.2436327934265137
    10. '   ' → logprob: -3.2436327934265137

Token 1274: ' base' (ID: 3611)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0007796077989041805
    2. 'line' → logprob: -7.625779628753662
    3. ' lines' → logprob: -8.625779151916504
    4. 'base' → logprob: -9.625779151916504
    5. 'data' → logprob: -11.250779151916504
    6. 'parse' → logprob: -11.625779151916504
    7. 'cells' → logprob: -11.875779151916504
    8. '(lines' → logprob: -12.375779151916504
    9. 'trim' → logprob: -12.500779151916504
    10. 'cell' → logprob: -12.750779151916504

Token 1275: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.026491297408938408
    2. 'line' → logprob: -3.651491403579712
    3. '_lines' → logprob: -9.651491165161133
    4. '   ' → logprob: -9.776491165161133
    5. 'lines' → logprob: -11.401491165161133
    6. '[line' → logprob: -11.401491165161133
    7. '[' → logprob: -11.526491165161133
    8. ' line' → logprob: -11.776491165161133
    9. ')' → logprob: -11.776491165161133
    10. 'Line' → logprob: -12.526491165161133

Token 1276: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15717768669128418
    2. ' =' → logprob: -3.157177686691284
    3. 'cells' → logprob: -3.282177686691284
    4. '=' → logprob: -3.782177686691284
    5. 'line' → logprob: -4.407177925109863
    6. ' line' → logprob: -5.532177925109863
    7. '
' → logprob: -5.782177925109863
    8. ':' → logprob: -5.782177925109863
    9. ',' → logprob: -6.157177925109863
    10. 'for' → logprob: -6.282177925109863

Token 1277: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07154801487922668
    2. 'line' → logprob: -3.4465479850769043
    3. 'cells' → logprob: -3.9465479850769043
    4. '
' → logprob: -6.071547985076904
    5. ' line' → logprob: -6.071547985076904
    6. ':' → logprob: -6.196547985076904
    7. '       ' → logprob: -6.321547985076904
    8. 'row' → logprob: -7.071547985076904
    9. ',' → logprob: -7.196547985076904
    10. 'base' → logprob: -7.321547985076904

Token 1278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5291832685470581
    2. '   ' → logprob: -0.9041832685470581
    3. ' for' → logprob: -7.029183387756348
    4. ',' → logprob: -7.029183387756348
    5. ':' → logprob: -7.154183387756348
    6. 'for' → logprob: -7.529183387756348
    7. '
' → logprob: -7.779183387756348
    8. ' =' → logprob: -8.279183387756348
    9. ' and' → logprob: -8.529183387756348
    10. ')' → logprob: -8.654183387756348

Token 1279: ' line' (ID: 2543)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.8586299419403076
    2. 'line' (adapté à ' line') → logprob: -2.3586299419403076
    3. ' cells' → logprob: -2.4836299419403076
    4. ' line' → logprob: -2.6086299419403076
    5. ' lines' → logprob: -2.7336299419403076
    6. 'lines' → logprob: -2.9836299419403076
    7. 'ranges' → logprob: -2.9836299419403076
    8. 'base' → logprob: -3.7336299419403076
    9. 'cell' → logprob: -3.8586299419403076
    10. ' ranges' → logprob: -3.8586299419403076

Token 1280: '_base' (ID: 17096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18162424862384796
    2. ' =' → logprob: -1.8066242933273315
    3. '=sys' → logprob: -6.931624412536621
    4. '=line' → logprob: -7.556624412536621
    5. 's' → logprob: -8.306624412536621
    6. '_lines' → logprob: -10.181624412536621
    7. '_ranges' → logprob: -10.681624412536621
    8. '_' → logprob: -11.306624412536621
    9. '   ' → logprob: -11.431624412536621
    10. '_cells' → logprob: -11.681624412536621

Token 1281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5772371888160706
    2. '=' → logprob: -0.9522371888160706
    3. '_' → logprob: -3.827237129211426
    4. 's' → logprob: -4.827237129211426
    5. '_ranges' → logprob: -4.952237129211426
    6. '_lines' → logprob: -5.577237129211426
    7. ')' → logprob: -5.952237129211426
    8. '   ' → logprob: -6.327237129211426
    9. '=line' → logprob: -6.452237129211426
    10. '_line' → logprob: -6.952237129211426

Token 1282: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0003993296413682401
    2. ' lines' → logprob: -8.000399589538574
    3. '   ' → logprob: -10.125399589538574
    4. 'line' → logprob: -10.875399589538574
    5. '(lines' → logprob: -13.250399589538574
    6. 'trim' → logprob: -14.000399589538574
    7. 'cells' → logprob: -14.500399589538574
    8. ' ' → logprob: -14.750399589538574
    9. '	lines' → logprob: -14.875399589538574
    10. 'parse' → logprob: -15.500399589538574

Token 1283: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018340740352869034
    2. '=' → logprob: -4.393340587615967
    3. ' =' → logprob: -5.393340587615967
    4. '
' → logprob: -7.393340587615967
    5. '   ' → logprob: -8.143341064453125
    6. 'base' → logprob: -8.768341064453125
    7. 'def' → logprob: -9.143341064453125
    8. '#' → logprob: -11.018341064453125
    9. '[
' → logprob: -11.143341064453125
    10. '=[' → logprob: -11.393341064453125

Token 1284: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -6.742448022123426e-05
    2. ' base' → logprob: -10.000067710876465
    3. '
' → logprob: -11.875067710876465
    4. '   ' → logprob: -11.875067710876465
    5. ']' → logprob: -12.750067710876465
    6. '(base' → logprob: -13.250067710876465
    7. '	base' → logprob: -14.375067710876465
    8. '_base' → logprob: -14.750067710876465
    9. '0' → logprob: -14.875067710876465
    10. '```' → logprob: -15.375067710876465

Token 1285: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.28352460265159607
    2. 'base' → logprob: -1.9085246324539185
    3. '_base' → logprob: -2.908524513244629
    4. '[' → logprob: -4.783524513244629
    5. ']' → logprob: -4.908524513244629
    6. '=' → logprob: -5.658524513244629
    7. '   ' → logprob: -5.658524513244629
    8. '(base' → logprob: -6.158524513244629
    9. 'line' → logprob: -6.408524513244629
    10. 'e' → logprob: -6.408524513244629

Token 1286: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07385808229446411
    2. ']' → logprob: -2.6988580226898193
    3. '].' → logprob: -6.073858261108398
    4. '][' → logprob: -6.948858261108398
    5. ']
' → logprob: -7.698858261108398
    6. '   ' → logprob: -8.948858261108398
    7. '       ' → logprob: -10.573858261108398
    8. ']

' → logprob: -11.448858261108398
    9. ' ]
' → logprob: -11.823858261108398
    10. '[' → logprob: -11.948858261108398

Token 1287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21340353786945343
    2. '   ' → logprob: -1.713403582572937
    3. ' =' → logprob: -5.338403701782227
    4. ')' → logprob: -6.088403701782227
    5. '=' → logprob: -6.963403701782227
    6. ',' → logprob: -6.963403701782227
    7. '```' → logprob: -7.463403701782227
    8. ':' → logprob: -7.838403701782227
    9. '        
' → logprob: -8.463403701782227
    10. '
' → logprob: -8.588403701782227

Token 1288: ' cells' (ID: 11242)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7374371886253357
    2. 'cells' (adapté à ' cells') → logprob: -0.7374371886253357
    3. '   ' → logprob: -4.2374372482299805
    4. 'ranges' → logprob: -4.3624372482299805
    5. 'for' → logprob: -4.6124372482299805
    6. 'cell' → logprob: -6.2374372482299805
    7. '```' → logprob: -6.7374372482299805
    8. ' cells' → logprob: -7.1124372482299805
    9. 'r' → logprob: -8.11243724822998
    10. '
' → logprob: -8.48743724822998

Token 1289: '_at' (ID: 8254)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11310596764087677
    2. ' =' → logprob: -2.2381060123443604
    3. '=[]' → logprob: -8.863105773925781
    4. '_ranges' → logprob: -9.613105773925781
    5. 'ranges' → logprob: -10.863105773925781
    6. '=[]
' → logprob: -10.988105773925781
    7. 's' → logprob: -11.238105773925781
    8. '   ' → logprob: -11.613105773925781
    9. '=line' → logprob: -12.113105773925781
    10. '=
' → logprob: -12.738105773925781

Token 1290: '_base' (ID: 17096)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.09172996133565903
    2. '=' → logprob: -2.7167298793792725
    3. 'None' → logprob: -4.591730117797852
    4. '_base' → logprob: -5.716730117797852
    5. ' =' → logprob: -5.841730117797852
    6. ' base' → logprob: -6.591730117797852
    7. ' None' → logprob: -6.716730117797852
    8. '0' → logprob: -7.591730117797852
    9. '```' → logprob: -8.091730117797852
    10. '=None' → logprob: -8.091730117797852

Token 1291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08716367185115814
    2. ' =' → logprob: -2.5871636867523193
    3. '   ' → logprob: -5.71216344833374
    4. 's' → logprob: -6.21216344833374
    5. '=[]' → logprob: -6.96216344833374
    6. '=[]
' → logprob: -7.08716344833374
    7. '_ranges' → logprob: -7.21216344833374
    8. '=
' → logprob: -8.712163925170898
    9. 'ranges' → logprob: -9.337163925170898
    10. '=line' → logprob: -10.962163925170898

Token 1292: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008854917832650244
    2. ' split' → logprob: -7.250885486602783
    3. '[]
' → logprob: -8.750885963439941
    4. '   ' → logprob: -12.375885963439941
    5. '[]' → logprob: -12.500885963439941
    6. '[(' → logprob: -13.000885963439941
    7. '[' → logprob: -13.000885963439941
    8. '(split' → logprob: -13.250885963439941
    9. '
' → logprob: -14.625885963439941
    10. ' ' → logprob: -14.750885963439941

Token 1293: '_cells' (ID: 93468)
  Prédit: '_cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.27740299701690674
    2. '(line' → logprob: -1.9024029970169067
    3. 'cells' → logprob: -2.652402877807617
    4. 'line' → logprob: -3.902402877807617
    5. '_line' → logprob: -7.527402877807617
    6. '_base' → logprob: -7.902402877807617
    7. '[line' → logprob: -7.902402877807617
    8. 'base' → logprob: -8.027402877807617
    9. 'lines' → logprob: -9.027402877807617
    10. '_lines' → logprob: -9.027402877807617

Token 1294: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.5570885807392187e-05
    2. '(lines' → logprob: -11.625015258789062
    3. 'line' → logprob: -12.250015258789062
    4. '[line' → logprob: -13.625015258789062
    5. '=line' → logprob: -14.875015258789062
    6. ',line' → logprob: -16.000015258789062
    7. '#line' → logprob: -16.625015258789062
    8. '(' → logprob: -16.625015258789062
    9. '(
' → logprob: -17.125015258789062
    10. '
' → logprob: -18.625015258789062

Token 1295: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.0009357591043226421
    2. 'base' → logprob: -7.1259355545043945
    3. ')' → logprob: -9.500935554504395
    4. '[line' → logprob: -11.500935554504395
    5. '_line' → logprob: -11.625935554504395
    6. '[' → logprob: -12.125935554504395
    7. '(base' → logprob: -12.375935554504395
    8. ')
' → logprob: -12.500935554504395
    9. '   ' → logprob: -12.625935554504395
    10. ')_' → logprob: -12.875935554504395

Token 1296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02352125197649002
    2. ')
' → logprob: -4.023521423339844
    3. '(line' → logprob: -5.898521423339844
    4. '(lines' → logprob: -6.273521423339844
    5. ')[' → logprob: -8.023521423339844
    6. '   ' → logprob: -8.773521423339844
    7. '[line' → logprob: -8.773521423339844
    8. '[' → logprob: -10.898521423339844
    9. ',' → logprob: -10.898521423339844
    10. ')

' → logprob: -11.398521423339844

Token 1297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039108652621507645
    2. 'for' → logprob: -3.7891087532043457
    3. '   ' → logprob: -4.414108753204346
    4. ' for' → logprob: -5.789108753204346
    5. 'if' → logprob: -8.164108276367188
    6. '           ' → logprob: -9.289108276367188
    7. '```' → logprob: -9.414108276367188
    8. '
' → logprob: -10.414108276367188
    9. ' if' → logprob: -10.789108276367188
    10. '#' → logprob: -11.539108276367188

Token 1298: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.45849907398223877
    2. '       ' → logprob: -1.0834990739822388
    3. ' for' → logprob: -4.208498954772949
    4. 'if' → logprob: -4.583498954772949
    5. '   ' → logprob: -6.083498954772949
    6. '           ' → logprob: -7.458498954772949
    7. '#' → logprob: -7.458498954772949
    8. '
' → logprob: -8.83349895477295
    9. 'next' → logprob: -8.95849895477295
    10. ' if' → logprob: -9.08349895477295

Token 1299: ' idx' (ID: 14016)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011902815662324429
    2. 's' → logprob: -5.261902809143066
    3. '(start' → logprob: -5.886902809143066
    4. 'cell' → logprob: -6.886902809143066
    5. '(s' → logprob: -7.511902809143066
    6. 'l' → logprob: -7.761902809143066
    7. 'st' → logprob: -7.886902809143066
    8. 'left' → logprob: -8.261902809143066
    9. 'x' → logprob: -8.636902809143066
    10. 'idx' → logprob: -8.886902809143066

Token 1300: ',(' (ID: 27243)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18040841817855835
    2. 'in' → logprob: -2.055408477783203
    3. ' in' → logprob: -3.680408477783203
    4. ',in' → logprob: -5.055408477783203
    5. ' ,' → logprob: -5.805408477783203
    6. '_,' → logprob: -6.930408477783203
    7. ',i' → logprob: -8.180408477783203
    8. '   ' → logprob: -8.430408477783203
    9. ',c' → logprob: -8.680408477783203
    10. ',next' → logprob: -8.930408477783203

Token 1301: 'l' (ID: 75)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.14839449524879456
    2. 's' → logprob: -2.0233945846557617
    3. 'end' → logprob: -5.648394584655762
    4. ' start' → logprob: -7.648394584655762
    5. 'e' → logprob: -8.023394584655762
    6. '   ' → logprob: -8.273394584655762
    7. '0' → logprob: -8.398394584655762
    8. ')' → logprob: -8.898394584655762
    9. 'c' → logprob: -9.273394584655762
    10. 'b' → logprob: -9.273394584655762

Token 1302: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04676361009478569
    2. ' ,' → logprob: -4.2967634201049805
    3. ',start' → logprob: -4.2967634201049805
    4. ',l' → logprob: -5.0467634201049805
    5. ',r' → logprob: -5.2967634201049805
    6. ',i' → logprob: -6.6717634201049805
    7. ',j' → logprob: -7.0467634201049805
    8. ',right' → logprob: -7.2967634201049805
    9. ',w' → logprob: -7.5467634201049805
    10. ',s' → logprob: -7.7967634201049805

Token 1303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ')
' → logprob: -11.500024795532227
    3. ')=' → logprob: -12.000024795532227
    4. '):
' → logprob: -13.375024795532227
    5. ' )' → logprob: -13.625024795532227
    6. '       ' → logprob: -13.750024795532227
    7. 'in' → logprob: -13.875024795532227
    8. ')==' → logprob: -14.875024795532227
    9. '           ' → logprob: -15.000024795532227
    10. '))' → logprob: -15.250024795532227

Token 1304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3675054907798767
    2. ')' → logprob: -1.7425055503845215
    3. 'in' → logprob: -3.1175055503845215
    4. ',' → logprob: -3.4925055503845215
    5. '+' → logprob: -3.7425055503845215
    6. ':' → logprob: -4.6175055503845215
    7. '=' → logprob: -4.7425055503845215
    8. '):
' → logprob: -5.4925055503845215
    9. ':
' → logprob: -5.9925055503845215
    10. ' =' → logprob: -6.3675055503845215

Token 1305: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.20399610698223114
    2. 'cells' → logprob: -1.7039960622787476
    3. ' enumerate' → logprob: -6.203996181488037
    4. 'range' → logprob: -7.953996181488037
    5. ' cells' → logprob: -9.578995704650879
    6. '   ' → logprob: -10.078995704650879
    7. 'line' → logprob: -10.828995704650879
    8. '[(' → logprob: -11.578995704650879
    9. 'split' → logprob: -11.703995704650879
    10. 'enum' → logprob: -12.078995704650879

Token 1306: '(c' (ID: 2410)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.16473479568958282
    2. '(c' → logprob: -2.0397348403930664
    3. '(line' → logprob: -4.539734840393066
    4. 'line' → logprob: -5.664734840393066
    5. ' cells' → logprob: -6.414734840393066
    6. ')' → logprob: -6.664734840393066
    7. 'lines' → logprob: -6.789734840393066
    8. 'range' → logprob: -6.914734840393066
    9. '(lines' → logprob: -7.039734840393066
    10. 'c' → logprob: -7.289734840393066

Token 1307: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.9703847169876099
    2. ')' → logprob: -1.5953847169876099
    3. 'line' → logprob: -1.5953847169876099
    4. '(line' → logprob: -1.8453847169876099
    5. 'ines' → logprob: -4.72038459777832
    6. 'cells' → logprob: -4.97038459777832
    7. ' line' → logprob: -5.09538459777832
    8. 'ine' → logprob: -5.22038459777832
    9. 'lines' → logprob: -5.84538459777832
    10. 'ell' → logprob: -5.84538459777832

Token 1308: '_at' (ID: 8254)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09698852896690369
    2. '       ' → logprob: -2.9719884395599365
    3. '):' → logprob: -3.5969884395599365
    4. '           ' → logprob: -5.096988677978516
    5. '_at' → logprob: -6.096988677978516
    6. ')' → logprob: -6.346988677978516
    7. 'At' → logprob: -6.471988677978516
    8. '   ' → logprob: -7.096988677978516
    9. ':
' → logprob: -8.596988677978516
    10. '[' → logprob: -8.971988677978516

Token 1309: '_base' (ID: 17096)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.24332794547080994
    2. 'range' → logprob: -2.1183278560638428
    3. 'split' → logprob: -3.7433278560638428
    4. 'line' → logprob: -3.7433278560638428
    5. 'x' → logprob: -4.493328094482422
    6. 'index' → logprob: -5.118328094482422
    7. ' enumerate' → logprob: -5.118328094482422
    8. '   ' → logprob: -5.243328094482422
    9. 'list' → logprob: -5.493328094482422
    10. ' ' → logprob: -5.993328094482422

Token 1310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1616516411304474
    2. '):' → logprob: -1.911651611328125
    3. '       ' → logprob: -7.411651611328125
    4. ')' → logprob: -8.411651611328125
    5. ':' → logprob: -8.536651611328125
    6. '           ' → logprob: -9.036651611328125
    7. '   ' → logprob: -9.286651611328125
    8. '):
' → logprob: -9.411651611328125
    9. ':
' → logprob: -9.661651611328125
    10. ',' → logprob: -11.036651611328125

Token 1311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15757562220096588
    2. '       ' → logprob: -2.0325756072998047
    3. '               ' → logprob: -5.157575607299805
    4. ':' → logprob: -5.282575607299805
    5. '   ' → logprob: -7.407575607299805
    6. '	       ' → logprob: -7.407575607299805
    7. ':
' → logprob: -7.657575607299805
    8. ',' → logprob: -7.907575607299805
    9. '```' → logprob: -7.907575607299805
    10. '<|end|>' → logprob: -8.407575607299805

Token 1312: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3000541925430298
    2. ' if' → logprob: -1.5500541925430298
    3. '           ' → logprob: -3.3000540733337402
    4. 'if' → logprob: -5.05005407333374
    5. '   ' → logprob: -7.30005407333374
    6. '       ' → logprob: -7.67505407333374
    7. ' line' → logprob: -8.050054550170898
    8. ' next' → logprob: -8.175054550170898
    9. ' cell' → logprob: -8.300054550170898
    10. ' left' → logprob: -8.300054550170898

Token 1313: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8561115860939026
    2. 'if' → logprob: -0.9811115860939026
    3. '               ' → logprob: -1.9811115264892578
    4. '           ' → logprob: -3.481111526489258
    5. 'cell' → logprob: -4.606111526489258
    6. 'ch' → logprob: -4.731111526489258
    7. ' cell' → logprob: -5.981111526489258
    8. ' ch' → logprob: -6.106111526489258
    9. 'line' → logprob: -6.731111526489258
    10. 'left' → logprob: -6.981111526489258

Token 1314: ' primary' (ID: 9107)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4218976497650146
    2. 'ch' → logprob: -1.5468976497650146
    3. 'line' → logprob: -2.4218976497650146
    4. 'l' → logprob: -2.4218976497650146
    5. 'c' → logprob: -2.5468976497650146
    6. 'start' → logprob: -2.6718976497650146
    7. 'j' → logprob: -3.0468976497650146
    8. 'r' → logprob: -3.1718976497650146
    9. 'cell' → logprob: -3.2968976497650146
    10. 'd' → logprob: -4.296897888183594

Token 1315: ' candidate' (ID: 17098)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.306894063949585
    2. 'if' → logprob: -2.181894063949585
    3. '           ' → logprob: -2.181894063949585
    4. ' if' → logprob: -2.556894063949585
    5. 'cell' → logprob: -2.931894063949585
    6. ',' → logprob: -2.931894063949585
    7. '_cell' → logprob: -3.056894063949585
    8. '               ' → logprob: -3.181894063949585
    9. ':
' → logprob: -3.306894063949585
    10. '_data' → logprob: -3.681894063949585

Token 1316: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6564708352088928
    2. 'if' → logprob: -1.281470775604248
    3. '               ' → logprob: -1.781470775604248
    4. '           ' → logprob: -4.781470775604248
    5. '
' → logprob: -5.156470775604248
    6. ' for' → logprob: -5.531470775604248
    7. ':
' → logprob: -6.406470775604248
    8. ',' → logprob: -6.406470775604248
    9. 'for' → logprob: -6.531470775604248
    10. '                
' → logprob: -6.656470775604248

Token 1317: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5171343088150024
    2. ' if' → logprob: -1.3921343088150024
    3. '           ' → logprob: -2.267134189605713
    4. ',' → logprob: -4.017134189605713
    5. ':' → logprob: -4.392134189605713
    6. 'if' → logprob: -4.517134189605713
    7. ' for' → logprob: -5.767134189605713
    8. '       ' → logprob: -6.767134189605713
    9. ':
' → logprob: -7.017134189605713
    10. ')' → logprob: -7.642134189605713

Token 1318: ' primary' (ID: 9107)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29736754298210144
    2. '               ' → logprob: -2.172367572784424
    3. 'if' → logprob: -2.297367572784424
    4. '           ' → logprob: -3.547367572784424
    5. ' line' → logprob: -6.047367572784424
    6. 'cell' → logprob: -6.172367572784424
    7. ' cell' → logprob: -6.547367572784424
    8. ' for' → logprob: -6.922367572784424
    9. 'line' → logprob: -6.922367572784424
    10. 'left' → logprob: -7.172367572784424

Token 1319: '_part' (ID: 24053)
  Prédit: '_cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.6088687181472778
    2. '_data' → logprob: -1.7338687181472778
    3. '_cells' → logprob: -2.2338685989379883
    4. '_line' → logprob: -2.3588685989379883
    5. '_lines' → logprob: -2.9838685989379883
    6. ' =' → logprob: -4.858868598937988
    7. '_start' → logprob: -4.858868598937988
    8. '=' → logprob: -5.358868598937988
    9. '_range' → logprob: -5.608868598937988
    10. 'data' → logprob: -7.358868598937988

Token 1320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6389802098274231
    2. '=' → logprob: -0.7639802098274231
    3. '_data' → logprob: -6.638980388641357
    4. 'data' → logprob: -7.013980388641357
    5. '   ' → logprob: -7.138980388641357
    6. '_lines' → logprob: -7.263980388641357
    7. '=line' → logprob: -7.263980388641357
    8. '       ' → logprob: -7.388980388641357
    9. '           ' → logprob: -7.888980388641357
    10. ',' → logprob: -8.5139799118042

Token 1321: ' [' (ID: 723)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0530291311442852
    2. '[' → logprob: -4.5530290603637695
    3. '[line' → logprob: -4.5530290603637695
    4. ' lines' → logprob: -4.6780290603637695
    5. '(lines' → logprob: -4.9280290603637695
    6. 'line' → logprob: -5.4280290603637695
    7. 'trim' → logprob: -5.6780290603637695
    8. ' [' → logprob: -5.9280290603637695
    9. '[l' → logprob: -6.4280290603637695
    10. 'l' → logprob: -8.55302906036377

Token 1322: 'line' (ID: 1137)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2572811245918274
    2. 'line' → logprob: -1.5072810649871826
    3. 'row' → logprob: -5.382281303405762
    4. ' lines' → logprob: -8.257281303405762
    5. '[line' → logprob: -8.382281303405762
    6. 'rows' → logprob: -9.382281303405762
    7. '[' → logprob: -9.507281303405762
    8. ' line' → logprob: -10.507281303405762
    9. '(lines' → logprob: -11.632281303405762
    10. 'l' → logprob: -11.757281303405762

Token 1323: '_base' (ID: 17096)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14433681964874268
    2. 'base' → logprob: -2.269336700439453
    3. '[line' → logprob: -4.394336700439453
    4. 's' → logprob: -5.019336700439453
    5. 'for' → logprob: -5.269336700439453
    6. '   ' → logprob: -6.144336700439453
    7. 'lines' → logprob: -7.394336700439453
    8. 'line' → logprob: -7.394336700439453
    9. '[cell' → logprob: -7.769336700439453
    10. '       ' → logprob: -7.894336700439453

Token 1324: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0014573780354112387
    2. '][' → logprob: -6.876457214355469
    3. '[' → logprob: -8.001457214355469
    4. '           ' → logprob: -11.001457214355469
    5. '[r' → logprob: -11.251457214355469
    6. ']' → logprob: -11.376457214355469
    7. 'l' → logprob: -11.626457214355469
    8. ' [' → logprob: -11.876457214355469
    9. '[left' → logprob: -12.626457214355469
    10. '[line' → logprob: -12.751457214355469

Token 1325: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.0018288150895386934
    2. ':' → logprob: -6.501828670501709
    3. ' :' → logprob: -9.376829147338867
    4. '   ' → logprob: -10.001829147338867
    5. 'r' → logprob: -10.001829147338867
    6. '])' → logprob: -10.251829147338867
    7. ':l' → logprob: -10.376829147338867
    8. ']' → logprob: -11.376829147338867
    9. '+' → logprob: -11.501829147338867
    10. '+r' → logprob: -11.751829147338867

Token 1326: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010020548506872728
    2. ']+' → logprob: -10.125100135803223
    3. ' +' → logprob: -10.875100135803223
    4. ']' → logprob: -10.875100135803223
    5. '])' → logprob: -11.125100135803223
    6. ']]' → logprob: -12.875100135803223
    7. '+
' → logprob: -13.875100135803223
    8. '],' → logprob: -14.000100135803223
    9. '1' → logprob: -14.250100135803223
    10. 's' → logprob: -15.125100135803223

Token 1327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. ']' → logprob: -16.5
    4. '   ' → logprob: -18.25
    5. 'r' → logprob: -18.75
    6. '+' → logprob: -18.875
    7. '```' → logprob: -19.75
    8. '])' → logprob: -20.375
    9. '
' → logprob: -20.75
    10. 'l' → logprob: -20.875

Token 1328: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14421772956848145
    2. ']]' → logprob: -2.5192177295684814
    3. ']]
' → logprob: -3.1442177295684814
    4. ']
' → logprob: -4.644217491149902
    5. '+' → logprob: -7.769217491149902
    6. ']]
' → logprob: -9.019217491149902
    7. ' ]' → logprob: -9.644217491149902
    8. '   ' → logprob: -9.769217491149902
    9. ']]]' → logprob: -9.769217491149902
    10. '           ' → logprob: -9.769217491149902

Token 1329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050441719591617584
    2. '<|end|>' → logprob: -3.3004417419433594
    3. '               ' → logprob: -4.675441741943359
    4. '       ' → logprob: -7.050441741943359
    5. '<|end|>' → logprob: -7.425441741943359
    6. ',' → logprob: -7.675441741943359
    7. ')' → logprob: -8.17544174194336
    8. '            
' → logprob: -9.17544174194336
    9. '                   ' → logprob: -9.17544174194336
    10. '...' → logprob: -9.42544174194336

Token 1330: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047940885997377336
    2. '<|end|>' → logprob: -8.250479698181152
    3. '               ' → logprob: -9.625479698181152
    4. '       ' → logprob: -10.500479698181152
    5. ' if' → logprob: -11.125479698181152
    6. '
' → logprob: -11.250479698181152
    7. 'continue' → logprob: -11.250479698181152
    8. '<|end|>' → logprob: -11.250479698181152
    9. 'if' → logprob: -11.625479698181152
    10. '            
' → logprob: -12.000479698181152

Token 1331: ' get' (ID: 717)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00581763731315732
    2. 'if' → logprob: -6.255817413330078
    3. ' if' → logprob: -6.380817413330078
    4. '       ' → logprob: -7.130817413330078
    5. '               ' → logprob: -7.505817413330078
    6. 'continue' → logprob: -8.630817413330078
    7. '   ' → logprob: -9.255817413330078
    8. 'import' → logprob: -9.630817413330078
    9. '                   ' → logprob: -9.755817413330078
    10. 'for' → logprob: -9.755817413330078

Token 1332: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5072829127311707
    2. ' lines' → logprob: -1.5072829723358154
    3. '           ' → logprob: -3.3822829723358154
    4. 'top' → logprob: -3.3822829723358154
    5. 'next' → logprob: -3.3822829723358154
    6. '       ' → logprob: -3.5072829723358154
    7. 'idx' → logprob: -4.882282733917236
    8. '   ' → logprob: -5.257282733917236
    9. 'primary' → logprob: -5.632282733917236
    10. 'line' → logprob: -5.757282733917236

Token 1333: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0402051210403442
    2. 'above' → logprob: -1.6652051210403442
    3. '_ab' → logprob: -1.7902051210403442
    4. '=' → logprob: -1.7902051210403442
    5. '           ' → logprob: -3.1652050018310547
    6. '[' → logprob: -4.040205001831055
    7. 'base' → logprob: -4.165205001831055
    8. '       ' → logprob: -4.665205001831055
    9. '   ' → logprob: -4.915205001831055
    10. ' =' → logprob: -5.165205001831055

Token 1334: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0021248033735901117
    2. 'l' → logprob: -6.752124786376953
    3. '0' → logprob: -7.502124786376953
    4. ' base' → logprob: -9.127124786376953
    5. '   ' → logprob: -9.252124786376953
    6. '(base' → logprob: -9.252124786376953
    7. '
' → logprob: -10.627124786376953
    8. 'line' → logprob: -10.877124786376953
    9. 'primary' → logprob: -11.002124786376953
    10. '           ' → logprob: -11.127124786376953

Token 1335: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0035769070964306593
    2. '+' → logprob: -6.128576755523682
    3. 'line' → logprob: -7.628576755523682
    4. '_base' → logprob: -8.87857723236084
    5. '   ' → logprob: -9.25357723236084
    6. '
' → logprob: -9.37857723236084
    7. '           ' → logprob: -9.62857723236084
    8. 'e' → logprob: -9.75357723236084
    9. 'eline' → logprob: -10.00357723236084
    10. '[' → logprob: -10.12857723236084

Token 1336: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6410444974899292
    2. '-' → logprob: -0.7660444974899292
    3. ' +' → logprob: -6.266044616699219
    4. 'base' → logprob: -6.516044616699219
    5. ' -' → logprob: -6.766044616699219
    6. ' and' → logprob: -7.391044616699219
    7. '[' → logprob: -7.391044616699219
    8. '   ' → logprob: -7.391044616699219
    9. '[l' → logprob: -7.891044616699219
    10. 'and' → logprob: -8.016044616699219

Token 1337: ' next' (ID: 2613)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.06615046411752701
    2. '(base' → logprob: -2.816150426864624
    3. 'l' → logprob: -6.441150665283203
    4. '(l' → logprob: -6.816150665283203
    5. '(' → logprob: -7.191150665283203
    6. ' base' → logprob: -7.941150665283203
    7. 'idx' → logprob: -9.191150665283203
    8. '0' → logprob: -9.816150665283203
    9. '   ' → logprob: -9.816150665283203
    10. ' (' → logprob: -9.816150665283203

Token 1338: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.43945741653442383
    2. 'line' → logprob: -1.4394574165344238
    3. '
' → logprob: -2.814457416534424
    4. '(base' → logprob: -4.189457416534424
    5. ' base' → logprob: -4.564457416534424
    6. 'idx' → logprob: -4.564457416534424
    7. '   ' → logprob: -4.939457416534424
    8. ' line' → logprob: -5.689457416534424
    9. '_line' → logprob: -6.814457416534424
    10. 'def' → logprob: -6.814457416534424

Token 1339: ' line' (ID: 2543)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00729543948546052
    2. '+' → logprob: -5.132295608520508
    3. 'line' → logprob: -7.007295608520508
    4. '           ' → logprob: -8.757295608520508
    5. '   ' → logprob: -9.257295608520508
    6. ' +' → logprob: -10.132295608520508
    7. '
' → logprob: -10.382295608520508
    8. 'Line' → logprob: -10.882295608520508
    9. '       ' → logprob: -11.007295608520508
    10. '```' → logprob: -11.507295608520508

Token 1340: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26159560680389404
    2. '<|end|>' → logprob: -1.761595606803894
    3. '<|end|>' → logprob: -3.5115957260131836
    4. '       ' → logprob: -5.011595726013184
    5. '...' → logprob: -5.511595726013184
    6. ',' → logprob: -5.761595726013184
    7. '		' → logprob: -5.886595726013184
    8. '            ' → logprob: -6.761595726013184
    9. ' (' → logprob: -6.761595726013184
    10. '   ' → logprob: -6.886595726013184

Token 1341: ' needed' (ID: 6118)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.039367128163576126
    2. ' base' → logprob: -3.414367198944092
    3. 'l' → logprob: -6.289367198944092
    4. '(base' → logprob: -6.414367198944092
    5. 'len' → logprob: -6.914367198944092
    6. '   ' → logprob: -7.664367198944092
    7. 'line' → logprob: -8.539366722106934
    8. 'r' → logprob: -9.039366722106934
    9. 'idx' → logprob: -9.539366722106934
    10. ' l' → logprob: -9.539366722106934

Token 1342: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21285293996334076
    2. '<|end|>' → logprob: -1.962852954864502
    3. '...' → logprob: -3.962852954864502
    4. '<|end|>' → logprob: -4.962852954864502
    5. '       ' → logprob: -5.212852954864502
    6. ',' → logprob: -5.837852954864502
    7. '               ' → logprob: -5.837852954864502
    8. '            
' → logprob: -6.212852954864502
    9. ' ' → logprob: -6.462852954864502
    10. '   ' → logprob: -6.587852954864502

Token 1343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007492100354284048
    2. '               ' → logprob: -5.2574920654296875
    3. '<|end|>' → logprob: -6.7574920654296875
    4. '       ' → logprob: -7.7574920654296875
    5. ',' → logprob: -9.007492065429688
    6. '                   ' → logprob: -9.132492065429688
    7. '            
' → logprob: -9.757492065429688
    8. '...' → logprob: -9.882492065429688
    9. '                       ' → logprob: -10.257492065429688
    10. '<|end|>' → logprob: -10.257492065429688

Token 1344: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13259778916835785
    2. '           ' → logprob: -2.8825976848602295
    3. '<|end|>' → logprob: -4.007597923278809
    4. ' continue' → logprob: -4.507597923278809
    5. '...' → logprob: -4.757597923278809
    6. 'continue' → logprob: -5.507597923278809
    7. '                   ' → logprob: -5.632597923278809
    8. ' if' → logprob: -5.882597923278809
    9. ' ' → logprob: -6.132597923278809
    10. ' for' → logprob: -6.382597923278809

Token 1345: ' this' (ID: 495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30413946509361267
    2. '<|end|>' → logprob: -2.0541393756866455
    3. '               ' → logprob: -2.6791393756866455
    4. '...' → logprob: -4.304139614105225
    5. '       ' → logprob: -4.429139614105225
    6. '   ' → logprob: -5.304139614105225
    7. '                   ' → logprob: -5.429139614105225
    8. 'continue' → logprob: -5.554139614105225
    9. '<|end|>' → logprob: -5.804139614105225
    10. 'return' → logprob: -5.804139614105225

Token 1346: ' primary' (ID: 9107)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9414745569229126
    2. '               ' → logprob: -2.191474437713623
    3. ' continues' → logprob: -2.441474437713623
    4. ' is' → logprob: -2.566474437713623
    5. ' code' → logprob: -3.316474437713623
    6. '#' → logprob: -3.441474437713623
    7. '<|end|>' → logprob: -3.441474437713623
    8. '                   ' → logprob: -3.941474437713623
    9. '...' → logprob: -4.566474437713623
    10. 'continue' → logprob: -4.566474437713623

Token 1347: ' candidate' (ID: 17098)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.03830839321017265
    2. '_token' → logprob: -4.288308620452881
    3. '_' → logprob: -5.538308620452881
    4. '<|end|>' → logprob: -5.788308620452881
    5. '_cells' → logprob: -6.038308620452881
    6. '_parts' → logprob: -6.038308620452881
    7. '_tokens' → logprob: -6.288308620452881
    8. '<|end|>' → logprob: -6.288308620452881
    9. '_cell' → logprob: -6.538308620452881
    10. ')' → logprob: -6.538308620452881

Token 1348: ' cell' (ID: 4206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8098791241645813
    2. '<|end|>' → logprob: -1.3098790645599365
    3. ' =' → logprob: -2.3098790645599365
    4. ' continues' → logprob: -2.8098790645599365
    5. '<|end|>' → logprob: -3.6848790645599365
    6. ' is' → logprob: -4.059879302978516
    7. ',' → logprob: -4.559879302978516
    8. ':' → logprob: -4.809879302978516
    9. '...' → logprob: -5.309879302978516
    10. '_tokens' → logprob: -5.309879302978516

Token 1349: ' coords' (ID: 53253)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1350: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1351: ' all' (ID: 722)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2644394338130951
    2. ' lines' → logprob: -1.5144394636154175
    3. 'cells' → logprob: -5.889439582824707
    4. 'base' → logprob: -6.139439582824707
    5. ' cells' → logprob: -6.264439582824707
    6. '(lines' → logprob: -6.389439582824707
    7. '   ' → logprob: -7.514439582824707
    8. 'line' → logprob: -7.764439582824707
    9. ' base' → logprob: -7.764439582824707
    10. 'top' → logprob: -8.264439582824707

Token 1352: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.20978493988513947
    2. ' lines' → logprob: -1.709784984588623
    3. '(lines' → logprob: -5.834784984588623
    4. ')' → logprob: -6.959784984588623
    5. '_lines' → logprob: -6.959784984588623
    6. '   ' → logprob: -7.709784984588623
    7. '
' → logprob: -7.834784984588623
    8. 'for' → logprob: -7.959784984588623
    9. ':' → logprob: -8.084784507751465
    10. 'cells' → logprob: -8.459784507751465

Token 1353: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02479894459247589
    2. '<|end|>' → logprob: -4.89979887008667
    3. ':' → logprob: -5.02479887008667
    4. ',' → logprob: -5.39979887008667
    5. ' =' → logprob: -6.77479887008667
    6. '[' → logprob: -7.89979887008667
    7. '   ' → logprob: -7.89979887008667
    8. ':
' → logprob: -7.89979887008667
    9. '               ' → logprob: -7.89979887008667
    10. '       ' → logprob: -7.89979887008667

Token 1355: ' primary' (ID: 9107)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014465752989053726
    2. '<|end|>' → logprob: -5.889465808868408
    3. ' for' → logprob: -6.139465808868408
    4. 'for' → logprob: -6.639465808868408
    5. '<|end|>' → logprob: -6.639465808868408
    6. '...' → logprob: -6.764465808868408
    7. 'continue' → logprob: -7.264465808868408
    8. '               ' → logprob: -7.389465808868408
    9. '#' → logprob: -7.639465808868408
    10. '   ' → logprob: -7.764465808868408

Token 1356: '_lines' (ID: 42980)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.3998122811317444
    2. '_lines' → logprob: -1.8998122215270996
    3. '_cells' → logprob: -2.1498122215270996
    4. '_data' → logprob: -3.8998122215270996
    5. '_start' → logprob: -3.8998122215270996
    6. '_parts' → logprob: -5.0248122215271
    7. '_top' → logprob: -5.3998122215271
    8. '   ' → logprob: -6.1498122215271
    9. '           ' → logprob: -6.2748122215271
    10. '_cell' → logprob: -6.2748122215271

Token 1357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038153380155563354
    2. ' =' → logprob: -3.2881534099578857
    3. '=
' → logprob: -10.413153648376465
    4. '   ' → logprob: -10.663153648376465
    5. '=line' → logprob: -10.788153648376465
    6. '=[' → logprob: -11.163153648376465
    7. '=[]' → logprob: -12.038153648376465
    8. '           ' → logprob: -12.413153648376465
    9. '       ' → logprob: -12.913153648376465
    10. '[line' → logprob: -13.288153648376465

Token 1358: ' []
' (ID: 8911)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.3294279873371124
    2. '[' → logprob: -1.95442795753479
    3. 'lines' → logprob: -2.32942795753479
    4. ' [' → logprob: -3.70442795753479
    5. '[l' → logprob: -4.704428195953369
    6. ' lines' → logprob: -6.204428195953369
    7. '[data' → logprob: -7.204428195953369
    8. '   ' → logprob: -7.204428195953369
    9. '[row' → logprob: -7.829428195953369
    10. '[x' → logprob: -7.829428195953369

Token 1359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6267163157463074
    2. ' for' → logprob: -1.3767163753509521
    3. 'for' → logprob: -1.6267163753509521
    4. '               ' → logprob: -4.501716136932373
    5. '       ' → logprob: -6.501716136932373
    6. '   ' → logprob: -7.251716136932373
    7. '	for' → logprob: -7.251716136932373
    8. '                   ' → logprob: -7.751716136932373
    9. '(lines' → logprob: -8.251716613769531
    10. '```' → logprob: -8.376716613769531

Token 1360: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4973624646663666
    2. 'for' (adapté à ' for') → logprob: -1.372362494468689
    3. '           ' → logprob: -1.997362494468689
    4. '   ' → logprob: -7.1223626136779785
    5. '               ' → logprob: -7.2473626136779785
    6. '       ' → logprob: -7.8723626136779785
    7. '	for' → logprob: -8.74736213684082
    8. '                   ' → logprob: -8.74736213684082
    9. '            ' → logprob: -9.74736213684082
    10. ' ' → logprob: -9.87236213684082

Token 1361: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.3866455852985382
    2. 'k' → logprob: -2.261645555496216
    3. 'i' → logprob: -2.761645555496216
    4. 'offset' → logprob: -3.261645555496216
    5. 'line' → logprob: -3.886645555496216
    6. 'x' → logprob: -4.136645793914795
    7. 'y' → logprob: -4.136645793914795
    8. '_' → logprob: -4.261645793914795
    9. '_row' → logprob: -4.886645793914795
    10. '_line' → logprob: -5.261645793914795

Token 1362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3494167625904083
    2. 'in' → logprob: -1.224416732788086
    3. 'i' → logprob: -7.474416732788086
    4. 'idx' → logprob: -8.474416732788086
    5. '_idx' → logprob: -10.099416732788086
    6. '_in' → logprob: -10.349416732788086
    7. 'x' → logprob: -10.474416732788086
    8. '   ' → logprob: -10.599416732788086
    9. 'index' → logprob: -11.474416732788086
    10. 'num' → logprob: -11.974416732788086

Token 1363: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004116076452191919
    2. ' range' → logprob: -7.875411510467529
    3. 'lines' → logprob: -11.000411987304688
    4. '   ' → logprob: -11.375411987304688
    5. 'base' → logprob: -14.125411987304688
    6. '(range' → logprob: -14.125411987304688
    7. ' ' → logprob: -14.250411987304688
    8. 'in' → logprob: -15.125411987304688
    9. '	range' → logprob: -15.375411987304688
    10. 'line' → logprob: -15.500411987304688

Token 1364: '(len' (ID: 14990)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0033260034397244453
    2. '0' → logprob: -5.878325939178467
    3. 'len' → logprob: -8.378326416015625
    4. 'r' → logprob: -9.128326416015625
    5. ' base' → logprob: -9.628326416015625
    6. '(base' → logprob: -9.753326416015625
    7. '
' → logprob: -10.753326416015625
    8. 'l' → logprob: -11.378326416015625
    9. 'idx' → logprob: -11.378326416015625
    10. '   ' → logprob: -11.753326416015625

Token 1365: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.000916935910936445
    2. 'lines' → logprob: -7.000916957855225
    3. '(line' → logprob: -13.125916481018066
    4. '	lines' → logprob: -13.500916481018066
    5. ' lines' → logprob: -14.625916481018066
    6. ')' → logprob: -14.625916481018066
    7. '(primary' → logprob: -15.375916481018066
    8. '(data' → logprob: -16.125917434692383
    9. '```' → logprob: -16.250917434692383
    10. '   ' → logprob: -16.500917434692383

Token 1366: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08729040622711182
    2. '):' → logprob: -2.5872902870178223
    3. '[' → logprob: -5.212290287017822
    4. ')):
' → logprob: -6.087290287017822
    5. ')):' → logprob: -8.08729076385498
    6. '[:' → logprob: -9.33729076385498
    7. '       ' → logprob: -9.33729076385498
    8. '           ' → logprob: -10.08729076385498
    9. '   ' → logprob: -10.08729076385498
    10. '):

' → logprob: -11.33729076385498

Token 1367: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012621364556252956
    2. ':' → logprob: -5.3876214027404785
    3. ' if' → logprob: -6.5126214027404785
    4. '           ' → logprob: -6.6376214027404785
    5. ':
' → logprob: -6.7626214027404785
    6. '       ' → logprob: -6.8876214027404785
    7. '```' → logprob: -7.5126214027404785
    8. '):
' → logprob: -8.13762092590332
    9. '   ' → logprob: -8.26262092590332
    10. ',' → logprob: -8.26262092590332

Token 1368: ' if' (ID: 538)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -1.2725136280059814
    2. 'if' (adapté à ' if') → logprob: -1.5225136280059814
    3. ' if' → logprob: -1.5225136280059814
    4. '   ' → logprob: -1.7725136280059814
    5. '               ' → logprob: -2.7725136280059814
    6. ' primary' → logprob: -3.1475136280059814
    7. 'line' → logprob: -5.147513389587402
    8. ' line' → logprob: -7.147513389587402
    9. 'row' → logprob: -8.022513389587402
    10. '           ' → logprob: -8.397513389587402

Token 1369: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.14137880504131317
    2. 'base' → logprob: -2.141378879547119
    3. 'l' → logprob: -5.266378879547119
    4. ' row' → logprob: -5.516378879547119
    5. ' base' → logprob: -5.641378879547119
    6. 'primary' → logprob: -7.266378879547119
    7. 'line' → logprob: -8.141378402709961
    8. '   ' → logprob: -8.766378402709961
    9. ' ' → logprob: -9.266378402709961
    10. 'lines' → logprob: -9.641378402709961

Token 1370: ' ==' (ID: 951)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.636170506477356
    2. ' >=' → logprob: -0.761170506477356
    3. '<=' → logprob: -6.511170387268066
    4. ' in' → logprob: -7.261170387268066
    5. ' <=' → logprob: -7.386170387268066
    6. '==' → logprob: -8.511170387268066
    7. '>' → logprob: -8.886170387268066
    8. ' <' → logprob: -9.136170387268066
    9. ' ==' → logprob: -9.261170387268066
    10. 'in' → logprob: -9.761170387268066

Token 1371: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0036125436890870333
    2. ' base' → logprob: -6.378612518310547
    3. 'line' → logprob: -7.253612518310547
    4. '0' → logprob: -7.753612518310547
    5. 'row' → logprob: -8.128612518310547
    6. 'l' → logprob: -8.128612518310547
    7. 'primary' → logprob: -9.253612518310547
    8. 'idx' → logprob: -10.253612518310547
    9. ' ' → logprob: -11.628612518310547
    10. 'len' → logprob: -11.628612518310547

Token 1372: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0001773192489054054
    2. 'line' → logprob: -9.125177383422852
    3. 'Line' → logprob: -10.125177383422852
    4. '
' → logprob: -12.500177383422852
    5. '   ' → logprob: -12.875177383422852
    6. '```' → logprob: -12.875177383422852
    7. '_layer' → logprob: -13.125177383422852
    8. 'def' → logprob: -13.125177383422852
    9. '_lines' → logprob: -13.375177383422852
    10. ')' → logprob: -13.500177383422852

Token 1373: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6370148658752441
    2. ' or' → logprob: -1.2620148658752441
    3. ':' → logprob: -1.8870148658752441
    4. ' and' → logprob: -3.887014865875244
    5. '                   ' → logprob: -5.012014865875244
    6. '               ' → logprob: -5.637014865875244
    7. '):
' → logprob: -6.637014865875244
    8. 'or' → logprob: -6.762014865875244
    9. 'and' → logprob: -7.137014865875244
    10. ' :
' → logprob: -7.887014865875244

Token 1374: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.38317710161209106
    2. '(row' → logprob: -1.6331770420074463
    3. ' (' → logprob: -2.6331770420074463
    4. 'row' → logprob: -4.758177280426025
    5. 'all' → logprob: -4.883177280426025
    6. '(any' → logprob: -5.133177280426025
    7. 'any' → logprob: -5.508177280426025
    8. ' all' → logprob: -5.633177280426025
    9. '(all' → logprob: -5.883177280426025
    10. '(line' → logprob: -5.883177280426025

Token 1375: 'l' (ID: 75)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.20941172540187836
    2. 'base' → logprob: -2.33441162109375
    3. 'l' → logprob: -3.33441162109375
    4. '(base' → logprob: -3.33441162109375
    5. '(row' → logprob: -4.33441162109375
    6. 'primary' → logprob: -5.70941162109375
    7. ' row' → logprob: -7.08441162109375
    8. 'top' → logprob: -7.08441162109375
    9. 'line' → logprob: -7.45941162109375
    10. ' base' → logprob: -7.58441162109375

Token 1376: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4306997060775757
    2. '<=' → logprob: -1.0556997060775757
    3. ' <' → logprob: -7.305699825286865
    4. ')' → logprob: -8.180699348449707
    5. '<' → logprob: -8.430699348449707
    6. ',' → logprob: -8.930699348449707
    7. '<len' → logprob: -9.055699348449707
    8. '```' → logprob: -9.055699348449707
    9. ')<=' → logprob: -9.805699348449707
    10. '   ' → logprob: -9.930699348449707

Token 1377: 'len' (ID: 3303)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00042054426739923656
    2. 'row' → logprob: -8.250420570373535
    3. ' r' → logprob: -9.125420570373535
    4. '   ' → logprob: -11.125420570373535
    5. 'primary' → logprob: -11.625420570373535
    6. 'l' → logprob: -12.250420570373535
    7. '(r' → logprob: -12.625420570373535
    8. 'len' → logprob: -13.375420570373535
    9. 'right' → logprob: -13.375420570373535
    10. '                   ' → logprob: -13.500420570373535

Token 1378: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.1876833289861679
    2. 'lines' → logprob: -1.812683343887329
    3. '(line' → logprob: -5.93768310546875
    4. 'primary' → logprob: -6.31268310546875
    5. 'line' → logprob: -6.43768310546875
    6. '(primary' → logprob: -6.68768310546875
    7. 'cells' → logprob: -8.43768310546875
    8. '(c' → logprob: -9.31268310546875
    9. 'c' → logprob: -10.43768310546875
    10. ' lines' → logprob: -10.56268310546875

Token 1379: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.12266233563423157
    2. ')' → logprob: -2.247662305831909
    3. '[' → logprob: -5.497662544250488
    4. ')-' → logprob: -6.122662544250488
    5. '[line' → logprob: -6.372662544250488
    6. 'row' → logprob: -8.122662544250488
    7. ' and' → logprob: -8.247662544250488
    8. '(row' → logprob: -8.372662544250488
    9. ')>' → logprob: -8.622662544250488
    10. '[l' → logprob: -8.747662544250488

Token 1380: '])-' (ID: 160447)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7222992181777954
    2. ')-' → logprob: -0.8472992181777954
    3. '[row' → logprob: -3.597299098968506
    4. '[l' → logprob: -3.847299098968506
    5. '[' → logprob: -3.972299098968506
    6. '[line' → logprob: -5.597299098968506
    7. '])' → logprob: -5.847299098968506
    8. ')]' → logprob: -6.097299098968506
    9. '[r' → logprob: -6.097299098968506
    10. '-' → logprob: -6.472299098968506

Token 1381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -10.000052452087402
    3. 'r' → logprob: -12.500052452087402
    4. '(' → logprob: -14.625052452087402
    5. ' r' → logprob: -14.937552452087402
    6. '   ' → logprob: -14.937552452087402
    7. '(r' → logprob: -14.937552452087402
    8. '           ' → logprob: -15.125052452087402
    9. ' (' → logprob: -15.500052452087402
    10. 'l' → logprob: -15.875052452087402

Token 1382: '<' (ID: 27)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22607682645320892
    2. 'and' → logprob: -1.6010768413543701
    3. '>=' → logprob: -8.10107707977295
    4. ')' → logprob: -8.60107707977295
    5. '<=' → logprob: -9.85107707977295
    6. ' >=' → logprob: -10.47607707977295
    7. '           ' → logprob: -10.85107707977295
    8. '               ' → logprob: -11.10107707977295
    9. '```' → logprob: -11.60107707977295
    10. '):
' → logprob: -11.60107707977295

Token 1383: 'r' (ID: 81)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5658517479896545
    2. 'r' → logprob: -0.9408517479896545
    3. '=r' → logprob: -3.9408516883850098
    4. '=len' → logprob: -4.44085168838501
    5. ' r' → logprob: -5.81585168838501
    6. 'len' → logprob: -6.19085168838501
    7. ' =' → logprob: -6.81585168838501
    8. '=row' → logprob: -7.44085168838501
    9. '=l' → logprob: -7.69085168838501
    10. '=
' → logprob: -7.69085168838501

Token 1384: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19004803895950317
    2. ')' → logprob: -2.0650479793548584
    3. ']' → logprob: -3.9400479793548584
    4. '):' → logprob: -5.0650482177734375
    5. ']+' → logprob: -5.3150482177734375
    6. ')+' → logprob: -5.4400482177734375
    7. ')]' → logprob: -6.3150482177734375
    8. '):
' → logprob: -6.6900482177734375
    9. '])' → logprob: -6.6900482177734375
    10. ' +' → logprob: -6.6900482177734375

Token 1385: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8831625580787659
    2. ':' → logprob: -1.383162498474121
    3. ' and' → logprob: -1.633162498474121
    4. ' or' → logprob: -3.008162498474121
    5. '):
' → logprob: -3.133162498474121
    6. '       ' → logprob: -4.633162498474121
    7. '           ' → logprob: -5.008162498474121
    8. 'and' → logprob: -5.633162498474121
    9. ']:
' → logprob: -5.633162498474121
    10. '+' → logprob: -5.758162498474121

Token 1386: ' (' (ID: 350)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.9347566366195679
    2. 'row' → logprob: -1.6847566366195679
    3. '(row' → logprob: -2.5597567558288574
    4. ' False' → logprob: -2.8097567558288574
    5. '(False' → logprob: -2.9347567558288574
    6. 'lines' → logprob: -3.0597567558288574
    7. ' (' → logprob: -3.1847567558288574
    8. ' lines' → logprob: -3.8097567558288574
    9. 'l' → logprob: -3.8097567558288574
    10. ' row' → logprob: -4.059756755828857

Token 1387: 'r' (ID: 81)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7142083644866943
    2. 'row' → logprob: -0.9642083644866943
    3. ' row' → logprob: -2.8392083644866943
    4. ' l' → logprob: -2.8392083644866943
    5. 'True' → logprob: -6.214208602905273
    6. 'primary' → logprob: -6.339208602905273
    7. ' primary' → logprob: -6.464208602905273
    8. '0' → logprob: -6.464208602905273
    9. '(row' → logprob: -6.589208602905273
    10. 'False' → logprob: -6.839208602905273

Token 1388: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5725608468055725
    2. ' >=' → logprob: -1.4475607872009277
    3. '<=' → logprob: -2.4475607872009277
    4. ' <' → logprob: -3.1975607872009277
    5. ' <=' → logprob: -3.6975607872009277
    6. ')' → logprob: -4.322560787200928
    7. '+' → logprob: -4.447560787200928
    8. '<' → logprob: -4.947560787200928
    9. '<len' → logprob: -5.572560787200928
    10. '>' → logprob: -5.947560787200928

Token 1389: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04015922546386719
    2. ' len' → logprob: -3.540159225463867
    3. '=' → logprob: -5.415159225463867
    4. 'row' → logprob: -5.915159225463867
    5. '=len' → logprob: -7.040159225463867
    6. ')' → logprob: -7.665159225463867
    7. 'l' → logprob: -7.915159225463867
    8. ' row' → logprob: -8.540159225463867
    9. 'lines' → logprob: -8.790159225463867
    10. 'r' → logprob: -8.790159225463867

Token 1390: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.13963475823402405
    2. '(lines' → logprob: -2.139634847640991
    3. ' lines' → logprob: -4.389634609222412
    4. ')' → logprob: -9.26463508605957
    5. 'rows' → logprob: -10.76463508605957
    6. 'row' → logprob: -11.01463508605957
    7. '	lines' → logprob: -11.01463508605957
    8. 'len' → logprob: -11.01463508605957
    9. 's' → logprob: -11.38963508605957
    10. '(rows' → logprob: -11.51463508605957

Token 1391: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.021782217547297478
    2. ')' → logprob: -4.271782398223877
    3. 'row' → logprob: -5.521782398223877
    4. 'ow' → logprob: -7.271782398223877
    5. ')-' → logprob: -7.521782398223877
    6. '(row' → logprob: -7.521782398223877
    7. '[' → logprob: -7.646782398223877
    8. '):
' → logprob: -7.896782398223877
    9. ')):
' → logprob: -8.771781921386719
    10. '):' → logprob: -8.896781921386719

Token 1392: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49993476271629333
    2. ')-' → logprob: -1.3749347925186157
    3. '])' → logprob: -2.749934673309326
    4. '])-' → logprob: -3.749934673309326
    5. ')]' → logprob: -4.249934673309326
    6. ')])' → logprob: -4.624934673309326
    7. ']-' → logprob: -5.249934673309326
    8. ']):' → logprob: -5.374934673309326
    9. ']' → logprob: -5.374934673309326
    10. '])):
' → logprob: -5.749934673309326

Token 1393: ' and' (ID: 326)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.953065812587738
    2. ' and' → logprob: -0.953065812587738
    3. ')' → logprob: -2.453065872192383
    4. 'and' → logprob: -2.453065872192383
    5. '):' → logprob: -3.578065872192383
    6. '):
' → logprob: -4.078065872192383
    7. ' -' → logprob: -5.078065872192383
    8. ':' → logprob: -7.328065872192383
    9. '       ' → logprob: -7.453065872192383
    10. '[' → logprob: -7.453065872192383

Token 1394: ' lines' (ID: 8698)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.1301517486572266
    2. 'l' → logprob: -1.2551517486572266
    3. 'lines' → logprob: -2.0051517486572266
    4. ' lines' → logprob: -2.2551517486572266
    5. ' l' → logprob: -3.2551517486572266
    6. ' row' → logprob: -3.5051517486572266
    7. 'len' → logprob: -3.5051517486572266
    8. 'all' → logprob: -4.255151748657227
    9. 'r' → logprob: -5.005151748657227
    10. 'True' → logprob: -5.255151748657227

Token 1395: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -4.7755875129951164e-05
    2. 'row' → logprob: -10.62504768371582
    3. '[' → logprob: -12.12504768371582
    4. ')' → logprob: -12.25004768371582
    5. '=row' → logprob: -13.12504768371582
    6. '(row' → logprob: -13.50004768371582
    7. '[line' → logprob: -13.50004768371582
    8. ' ' → logprob: -13.75004768371582
    9. ' [' → logprob: -13.75004768371582
    10. '
' → logprob: -14.00004768371582

Token 1396: '][' (ID: 2696)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.2568252682685852
    2. '][' → logprob: -1.5068252086639404
    3. '[' → logprob: -5.8818254470825195
    4. ']' → logprob: -7.0068254470825195
    5. '[r' → logprob: -7.5068254470825195
    6. '   ' → logprob: -9.25682544708252
    7. '[line' → logprob: -9.38182544708252
    8. ' ' → logprob: -9.75682544708252
    9. '[l' → logprob: -10.13182544708252
    10. '
' → logprob: -10.13182544708252

Token 1397: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.050507910549640656
    2. 'row' → logprob: -3.3005080223083496
    3. 'l' → logprob: -4.67550802230835
    4. ']' → logprob: -6.67550802230835
    5. '   ' → logprob: -8.050507545471191
    6. '[row' → logprob: -8.175507545471191
    7. '][' → logprob: -8.425507545471191
    8. ' row' → logprob: -8.550507545471191
    9. ' r' → logprob: -9.050507545471191
    10. 'primary' → logprob: -9.175507545471191

Token 1398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06721348315477371
    2. '])' → logprob: -3.442213535308838
    3. ']>' → logprob: -4.567213535308838
    4. ']):
' → logprob: -5.442213535308838
    5. ']==' → logprob: -5.942213535308838
    6. ']):' → logprob: -6.067213535308838
    7. '][' → logprob: -6.192213535308838
    8. ']<' → logprob: -6.567213535308838
    9. ']>=' → logprob: -6.817213535308838
    10. ')]' → logprob: -6.942213535308838

Token 1399: ' !=' (ID: 1666)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.033350706100464
    2. '==' → logprob: -2.033350706100464
    3. ']):' → logprob: -2.158350706100464
    4. ')' → logprob: -2.408350706100464
    5. '):' → logprob: -2.533350706100464
    6. '[l' → logprob: -2.783350706100464
    7. ']==' → logprob: -3.033350706100464
    8. ' ==' → logprob: -3.158350706100464
    9. '[' → logprob: -3.408350706100464
    10. '):
' → logprob: -3.658350706100464

Token 1400: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.009789143688976765
    2. ''' → logprob: -4.759788990020752
    3. ' '.')' → logprob: -7.509788990020752
    4. ' '.' → logprob: -7.759788990020752
    5. ' '.'' → logprob: -8.88478946685791
    6. ' '' → logprob: -10.13478946685791
    7. '.' → logprob: -12.25978946685791
    8. '".' → logprob: -12.50978946685791
    9. ''\' → logprob: -13.50978946685791
    10. ''d' → logprob: -13.50978946685791

Token 1401: ''):
' (ID: 26539)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5484271049499512
    2. '):' → logprob: -1.4234271049499512
    3. ']):' → logprob: -3.173427104949951
    4. '):
' → logprob: -3.423427104949951
    5. '.' → logprob: -3.798427104949951
    6. ')]' → logprob: -4.048427104949951
    7. ' and' → logprob: -4.298427104949951
    8. ']' → logprob: -4.548427104949951
    9. ''):' → logprob: -4.923427104949951
    10. '])' → logprob: -4.923427104949951

Token 1402: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8637090921401978
    2. ':
' → logprob: -1.2387090921401978
    3. ':' → logprob: -1.4887090921401978
    4. '           ' → logprob: -4.238708972930908
    5. '):
' → logprob: -4.363708972930908
    6. '<|end|>' → logprob: -4.738708972930908
    7. '       ' → logprob: -5.488708972930908
    8. ' or' → logprob: -6.238708972930908
    9. ' and' → logprob: -6.238708972930908
    10. '   ' → logprob: -6.488708972930908

Token 1403: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.8915749788284302
    2. ' lines' → logprob: -2.1415748596191406
    3. '               ' → logprob: -2.2665748596191406
    4. ' ' → logprob: -2.2665748596191406
    5. ' primary' → logprob: -2.6415748596191406
    6. ' ' → logprob: -2.6415748596191406
    7. ':
' → logprob: -2.6415748596191406
    8. '                       ' → logprob: -2.8915748596191406
    9. ' 
' → logprob: -3.6415748596191406
    10. '                ' → logprob: -3.7665748596191406

Token 1404: ' take' (ID: 2304)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3281750679016113
    2. '                       ' → logprob: -1.7031750679016113
    3. ' primary' → logprob: -1.8281750679016113
    4. '                   ' → logprob: -2.3281750679016113
    5. 'primary' → logprob: -3.2031750679016113
    6. ' if' → logprob: -3.4531750679016113
    7. ' ' → logprob: -3.7031750679016113
    8. ' ' → logprob: -3.9531750679016113
    9. ' continue' → logprob: -3.9531750679016113
    10. ' for' → logprob: -4.578175067901611

Token 1405: ' substring' (ID: 89494)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.05064617097377777
    2. 'lines' → logprob: -3.6756460666656494
    3. ' row' → logprob: -5.0506463050842285
    4. ' True' → logprob: -5.3006463050842285
    5. 'row' → logprob: -5.8006463050842285
    6. 'True' → logprob: -6.5506463050842285
    7. ' line' → logprob: -6.9256463050842285
    8. '[
' → logprob: -7.0506463050842285
    9. ' not' → logprob: -7.3006463050842285
    10. ' primary' → logprob: -7.4256463050842285

Token 1406: ' from' (ID: 591)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.797713577747345
    2. '(row' → logprob: -1.0477135181427002
    3. ' primary' → logprob: -3.1727135181427
    4. '(primary' → logprob: -3.7977135181427
    5. '[line' → logprob: -4.172713756561279
    6. '[' → logprob: -4.172713756561279
    7. '(lines' → logprob: -4.672713756561279
    8. ' lines' → logprob: -4.797713756561279
    9. '               ' → logprob: -4.797713756561279
    10. '                   ' → logprob: -4.922713756561279

Token 1407: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10851779580116272
    2. 'row' → logprob: -2.60851788520813
    3. ' l' → logprob: -4.233517646789551
    4. ' row' → logprob: -4.358517646789551
    5. 'lines' → logprob: -7.108517646789551
    6. ' lines' → logprob: -7.233517646789551
    7. 'line' → logprob: -8.85851764678955
    8. 'rows' → logprob: -9.23351764678955
    9. 'r' → logprob: -10.73351764678955
    10. '   ' → logprob: -11.10851764678955

Token 1408: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06800119578838348
    2. ':r' → logprob: -3.4430012702941895
    3. ' :' → logprob: -4.3180012702941895
    4. ' to' → logprob: -4.9430012702941895
    5. ':
' → logprob: -5.3180012702941895
    6. ':l' → logprob: -6.1930012702941895
    7. '           ' → logprob: -6.6930012702941895
    8. ' ' → logprob: -7.0680012702941895
    9. '               ' → logprob: -7.5680012702941895
    10. '       ' → logprob: -7.8180012702941895

Token 1409: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008814993314445019
    2. ' r' → logprob: -4.758814811706543
    3. 'l' → logprob: -9.508814811706543
    4. '```' → logprob: -10.258814811706543
    5. ' lines' → logprob: -10.508814811706543
    6. '+' → logprob: -11.008814811706543
    7. 'lines' → logprob: -12.008814811706543
    8. '(r' → logprob: -12.633814811706543
    9. ' l' → logprob: -12.696314811706543
    10. '``' → logprob: -12.883814811706543

Token 1410: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7308856248855591
    2. ':
' → logprob: -1.355885624885559
    3. ':' → logprob: -1.980885624885559
    4. '                       ' → logprob: -2.9808855056762695
    5. '               ' → logprob: -3.4808855056762695
    6. ' for' → logprob: -4.7308855056762695
    7. '[' → logprob: -5.1058855056762695
    8. ']:
' → logprob: -5.4808855056762695
    9. '+' → logprob: -5.8558855056762695
    10. '):
' → logprob: -6.3558855056762695

Token 1411: ' all' (ID: 722)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7141124606132507
    2. ' row' → logprob: -1.0891125202178955
    3. 'row' → logprob: -1.8391125202178955
    4. 'lines' → logprob: -4.589112281799316
    5. ' rows' → logprob: -6.839112281799316
    6. 'rows' → logprob: -6.964112281799316
    7. ' each' → logprob: -7.589112281799316
    8. ' all' → logprob: -8.089112281799316
    9. ' line' → logprob: -8.214112281799316
    10. '[row' → logprob: -8.589112281799316

Token 1412: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.24990461766719818
    2. 'row' → logprob: -2.2499046325683594
    3. ' row' → logprob: -2.7499046325683594
    4. 'lines' → logprob: -3.8749046325683594
    5. ' in' → logprob: -4.499904632568359
    6. ' line' → logprob: -5.624904632568359
    7. 'rows' → logprob: -5.624904632568359
    8. ' rows' → logprob: -5.749904632568359
    9. '(row' → logprob: -6.374904632568359
    10. ' for' → logprob: -6.374904632568359

Token 1413: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8348262906074524
    2. '                   ' → logprob: -0.9598262906074524
    3. ':
' → logprob: -2.5848262310028076
    4. '               ' → logprob: -3.0848262310028076
    5. '                       ' → logprob: -3.3348262310028076
    6. ',' → logprob: -4.959826469421387
    7. '[' → logprob: -5.959826469421387
    8. ' and' → logprob: -6.334826469421387
    9. '<|end|>' → logprob: -6.709826469421387
    10. '.' → logprob: -6.834826469421387

Token 1414: ' cell' (ID: 4206)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.8742610812187195
    2. ' lines' → logprob: -1.1242611408233643
    3. 'range' → logprob: -1.4992611408233643
    4. ' range' → logprob: -3.3742611408233643
    5. '   ' → logprob: -9.499260902404785
    6. 'primary' → logprob: -9.624260902404785
    7. 'line' → logprob: -9.999260902404785
    8. '[' → logprob: -9.999260902404785
    9. '(lines' → logprob: -10.499260902404785
    10. ' primary' → logprob: -10.749260902404785

Token 1415: ' height' (ID: 4679)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9869498610496521
    2. ':' → logprob: -1.1119499206542969
    3. '                   ' → logprob: -1.9869499206542969
    4. '               ' → logprob: -2.236949920654297
    5. '                       ' → logprob: -4.236949920654297
    6. '[' → logprob: -4.611949920654297
    7. '):
' → logprob: -5.361949920654297
    8. ',' → logprob: -5.861949920654297
    9. '           ' → logprob: -5.861949920654297
    10. ']:
' → logprob: -5.861949920654297

Token 1416: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9242770075798035
    2. '                       ' → logprob: -1.4242770671844482
    3. ':
' → logprob: -1.9242770671844482
    4. '                   ' → logprob: -2.0492770671844482
    5. '               ' → logprob: -3.5492770671844482
    6. ',' → logprob: -4.049276828765869
    7. '<|end|>' → logprob: -4.549276828765869
    8. '                        
' → logprob: -5.799276828765869
    9. '.' → logprob: -6.174276828765869
    10. '):
' → logprob: -6.174276828765869

Token 1417: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.42700129747390747
    2. '                   ' → logprob: -1.8020012378692627
    3. ':' → logprob: -2.8020012378692627
    4. ':
' → logprob: -3.3020012378692627
    5. '               ' → logprob: -3.5520012378692627
    6. '<|end|>' → logprob: -4.177001476287842
    7. ',' → logprob: -5.177001476287842
    8. '       ' → logprob: -5.302001476287842
    9. '```' → logprob: -5.427001476287842
    10. '):
' → logprob: -5.802001476287842

Token 1418: ' if' (ID: 538)
  Prédit: ' primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primary' → logprob: -0.26186326146125793
    2. 'primary' → logprob: -2.3868632316589355
    3. '                       ' → logprob: -3.2618632316589355
    4. '                   ' → logprob: -3.5118632316589355
    5. '):
' → logprob: -4.7618632316589355
    6. ' ' → logprob: -4.8868632316589355
    7. ':
' → logprob: -5.2618632316589355
    8. ')' → logprob: -5.2618632316589355
    9. ',' → logprob: -5.5118632316589355
    10. '(primary' → logprob: -5.5118632316589355

Token 1419: ' len' (ID: 4631)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7191340923309326
    2. 'row' → logprob: -1.0941340923309326
    3. 'lines' → logprob: -1.9691340923309326
    4. 'len' → logprob: -3.7191340923309326
    5. ' row' → logprob: -5.594134330749512
    6. ' lines' → logprob: -5.844134330749512
    7. '0' → logprob: -5.969134330749512
    8. ' l' → logprob: -6.094134330749512
    9. 'r' → logprob: -6.844134330749512
    10. 'rows' → logprob: -7.594134330749512

Token 1420: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.005280603654682636
    2. 'lines' → logprob: -5.255280494689941
    3. ' lines' → logprob: -10.380280494689941
    4. '(line' → logprob: -11.505280494689941
    5. '(rows' → logprob: -13.255280494689941
    6. 'line' → logprob: -13.880280494689941
    7. '	lines' → logprob: -13.880280494689941
    8. '(' → logprob: -14.380280494689941
    9. ' ' → logprob: -15.255280494689941
    10. '   ' → logprob: -15.255280494689941

Token 1421: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.008727675303816795
    2. ')' → logprob: -4.883727550506592
    3. ')>' → logprob: -7.633727550506592
    4. '[line' → logprob: -8.13372802734375
    5. '[' → logprob: -9.50872802734375
    6. '   ' → logprob: -9.88372802734375
    7. '>' → logprob: -10.50872802734375
    8. 'row' → logprob: -10.75872802734375
    9. ')>=' → logprob: -11.00872802734375
    10. ' >' → logprob: -11.13372802734375

Token 1422: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.26792511343955994
    2. ')' → logprob: -1.6429251432418823
    3. '[l' → logprob: -4.142925262451172
    4. '][' → logprob: -4.767925262451172
    5. ')>' → logprob: -5.017925262451172
    6. ']' → logprob: -6.142925262451172
    7. ')>=' → logprob: -6.267925262451172
    8. '[' → logprob: -6.767925262451172
    9. '   ' → logprob: -7.142925262451172
    10. '       ' → logprob: -7.142925262451172

Token 1423: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.49646055698394775
    2. ' >=' → logprob: -0.9964605569839478
    3. '>' → logprob: -4.121460437774658
    4. ' >' → logprob: -5.496460437774658
    5. ' <' → logprob: -6.746460437774658
    6. '<=' → logprob: -8.621460914611816
    7. ')' → logprob: -8.996460914611816
    8. ')>=' → logprob: -9.246460914611816
    9. ' <=' → logprob: -9.996460914611816
    10. '<' → logprob: -10.121460914611816

Token 1424: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007791309617459774
    2. ' r' → logprob: -7.250779151916504
    3. '(r' → logprob: -10.000779151916504
    4. 'l' → logprob: -10.875779151916504
    5. '   ' → logprob: -13.375779151916504
    6. '(' → logprob: -14.000779151916504
    7. ' (' → logprob: -14.375779151916504
    8. '1' → logprob: -14.875779151916504
    9. '(l' → logprob: -15.625779151916504
    10. '```' → logprob: -15.625779151916504

Token 1425: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16208337247371674
    2. ' and' → logprob: -2.412083387374878
    3. 'and' → logprob: -3.037083387374878
    4. ':
' → logprob: -4.787083148956299
    5. ':' → logprob: -6.412083148956299
    6. ' +' → logprob: -7.162083148956299
    7. '           ' → logprob: -8.287083625793457
    8. '+l' → logprob: -8.287083625793457
    9. '):
' → logprob: -8.787083625793457
    10. ')' → logprob: -9.287083625793457

Token 1426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -15.625005722045898
    4. '   ' → logprob: -16.1250057220459
    5. '2' → logprob: -16.2500057220459
    6. '
' → logprob: -16.5000057220459
    7. '+' → logprob: -17.8750057220459
    8. '       ' → logprob: -18.1250057220459
    9. '``' → logprob: -18.2500057220459
    10. '0' → logprob: -18.5000057220459

Token 1427: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2606031894683838
    2. ':
' → logprob: -1.5106031894683838
    3. ':' → logprob: -5.260602951049805
    4. 'and' → logprob: -6.135602951049805
    5. '               ' → logprob: -7.510602951049805
    6. '                       ' → logprob: -8.510602951049805
    7. '):
' → logprob: -8.635602951049805
    8. '           ' → logprob: -8.885602951049805
    9. '                   ' → logprob: -10.010602951049805
    10. '       ' → logprob: -10.260602951049805

Token 1428: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10972584038972855
    2. ':
' → logprob: -3.1097259521484375
    3. '                   ' → logprob: -4.1097259521484375
    4. ':' → logprob: -4.3597259521484375
    5. ' and' → logprob: -4.3597259521484375
    6. '               ' → logprob: -5.2347259521484375
    7. ',' → logprob: -5.8597259521484375
    8. ' =' → logprob: -6.2347259521484375
    9. '):
' → logprob: -6.9847259521484375
    10. '                           ' → logprob: -7.2347259521484375

Token 1429: ' primary' (ID: 9107)
  Prédit: ' primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primary' → logprob: -0.17677827179431915
    2. 'primary' (adapté à ' primary') → logprob: -1.9267783164978027
    3. '   ' → logprob: -4.676778316497803
    4. '                       ' → logprob: -5.051778316497803
    5. '                           ' → logprob: -8.676777839660645
    6. ' ' → logprob: -8.801777839660645
    7. '                               ' → logprob: -9.426777839660645
    8. '               ' → logprob: -9.801777839660645
    9. '                   ' → logprob: -9.801777839660645
    10. ' ' → logprob: -9.926777839660645

Token 1430: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.038413699716329575
    2. '_part' → logprob: -3.2884137630462646
    3. '_parts' → logprob: -8.663414001464844
    4. 'lines' → logprob: -9.413414001464844
    5. 'part' → logprob: -9.663414001464844
    6. '_cells' → logprob: -11.038414001464844
    7. '_line' → logprob: -11.538414001464844
    8. '
' → logprob: -11.913414001464844
    9. '```' → logprob: -12.163414001464844
    10. '_primary' → logprob: -12.788414001464844

Token 1431: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7260345220565796
    2. '=' → logprob: -0.9760345220565796
    3. ' =' → logprob: -2.851034641265869
    4. '+=' → logprob: -3.976034641265869
    5. ' +=' → logprob: -3.976034641265869
    6. '[row' → logprob: -4.101034641265869
    7. '[line' → logprob: -5.476034641265869
    8. '=row' → logprob: -5.726034641265869
    9. '           ' → logprob: -5.851034641265869
    10. '[' → logprob: -5.851034641265869

Token 1432: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5779985785484314
    2. ' lines' → logprob: -0.8279985785484314
    3. '(lines' → logprob: -6.202998638153076
    4. 'line' → logprob: -10.577998161315918
    5. ' line' → logprob: -12.702998161315918
    6. '	lines' → logprob: -12.952998161315918
    7. '   ' → logprob: -14.452998161315918
    8. '(line' → logprob: -14.452998161315918
    9. '(' → logprob: -14.952998161315918
    10. ' ' → logprob: -14.952998161315918

Token 1433: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0005230080569162965
    2. '[' → logprob: -7.750523090362549
    3. '[line' → logprob: -10.50052261352539
    4. ' [' → logprob: -10.62552261352539
    5. '[l' → logprob: -11.87552261352539
    6. '[r' → logprob: -11.87552261352539
    7. '[
' → logprob: -12.00052261352539
    8. ')[' → logprob: -12.12552261352539
    9. 'row' → logprob: -12.50052261352539
    10. ')' → logprob: -12.87552261352539

Token 1434: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06289442628622055
    2. '[l' → logprob: -2.812894344329834
    3. '[' → logprob: -7.812894344329834
    4. ']' → logprob: -8.937894821166992
    5. '   ' → logprob: -8.937894821166992
    6. '       ' → logprob: -9.687894821166992
    7. '           ' → logprob: -10.062894821166992
    8. ' [' → logprob: -10.687894821166992
    9. '])' → logprob: -10.937894821166992
    10. ' ][' → logprob: -10.937894821166992

Token 1435: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.362307223957032e-05
    2. ' l' → logprob: -9.625073432922363
    3. '   ' → logprob: -12.125073432922363
    4. '       ' → logprob: -14.750073432922363
    5. '           ' → logprob: -14.875073432922363
    6. 'r' → logprob: -15.375073432922363
    7. '```' → logprob: -15.625073432922363
    8. ':l' → logprob: -15.875073432922363
    9. ' ' → logprob: -16.00007438659668
    10. ']' → logprob: -16.37507438659668

Token 1436: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.0008634611731395125
    2. ':' → logprob: -7.125863552093506
    3. ' :' → logprob: -10.250863075256348
    4. 'r' → logprob: -10.875863075256348
    5. ':
' → logprob: -13.250863075256348
    6. '   ' → logprob: -13.875863075256348
    7. '
' → logprob: -14.125863075256348
    8. '       ' → logprob: -14.750863075256348
    9. '	r' → logprob: -16.000864028930664
    10. ':l' → logprob: -16.250864028930664

Token 1437: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.054500666621607e-06
    2. ' +' → logprob: -13.12500286102295
    3. '[' → logprob: -15.25000286102295
    4. ']+' → logprob: -15.62500286102295
    5. '+
' → logprob: -15.87500286102295
    6. '1' → logprob: -16.000003814697266
    7. '+[' → logprob: -16.250003814697266
    8. '```' → logprob: -16.500003814697266
    9. '+]' → logprob: -17.125003814697266
    10. '+)' → logprob: -17.750003814697266

Token 1438: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931698322296143
    2. '1' → logprob: -0.6931698322296143
    3. ']+' → logprob: -11.443169593811035
    4. '```' → logprob: -12.693169593811035
    5. ']' → logprob: -13.068169593811035
    6. 'r' → logprob: -13.443169593811035
    7. '   ' → logprob: -13.818169593811035
    8. '+
' → logprob: -13.818169593811035
    9. '[' → logprob: -14.693169593811035
    10. '
' → logprob: -14.943169593811035

Token 1439: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.038073740899562836
    2. '])
' → logprob: -3.288073778152466
    3. '])
' → logprob: -11.413073539733887
    4. ']' → logprob: -12.288073539733887
    5. '           ' → logprob: -12.413073539733887
    6. '                   ' → logprob: -13.163073539733887
    7. '])

' → logprob: -13.163073539733887
    8. ')' → logprob: -13.288073539733887
    9. ''])' → logprob: -13.538073539733887
    10. '       ' → logprob: -13.913073539733887

Token 1440: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3342311382293701
    2. '                   ' → logprob: -1.4592311382293701
    3. '           ' → logprob: -3.08423113822937
    4. '                       ' → logprob: -6.334231376647949
    5. 'else' → logprob: -6.584231376647949
    6. '
' → logprob: -6.709231376647949
    7. ')' → logprob: -7.584231376647949
    8. '       ' → logprob: -8.33423137664795
    9. '   ' → logprob: -8.83423137664795
    10. ' else' → logprob: -8.95923137664795

Token 1441: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01316894218325615
    2. '           ' → logprob: -4.763168811798096
    3. '                   ' → logprob: -5.638168811798096
    4. '   ' → logprob: -8.263169288635254
    5. 'else' (adapté à ' else') → logprob: -8.263169288635254
    6. ' else' → logprob: -8.888169288635254
    7. '       ' → logprob: -9.388169288635254
    8. 'continue' → logprob: -9.638169288635254
    9. '
' → logprob: -10.013169288635254
    10. '                       ' → logprob: -10.763169288635254

Token 1442: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07709137350320816
    2. ':
' → logprob: -3.4520914554595947
    3. ':' → logprob: -4.077091217041016
    4. '                   ' → logprob: -4.952091217041016
    5. '                        
' → logprob: -4.952091217041016
    6. '               ' → logprob: -5.577091217041016
    7. '                           ' → logprob: -5.702091217041016
    8. '                               ' → logprob: -7.452091217041016
    9. '           ' → logprob: -7.577091217041016
    10. '       ' → logprob: -7.702091217041016

Token 1443: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06877738237380981
    2. '               ' → logprob: -3.818777322769165
    3. '                   ' → logprob: -3.818777322769165
    4. '           ' → logprob: -4.818777561187744
    5. 'primary' → logprob: -5.943777561187744
    6. ' primary' → logprob: -6.068777561187744
    7. '                        
' → logprob: -6.193777561187744
    8. ' continue' → logprob: -6.318777561187744
    9. 'continue' → logprob: -6.318777561187744
    10. '       ' → logprob: -6.443777561187744

Token 1444: ' primary' (ID: 9107)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' (adapté à ' primary') → logprob: -0.0015073629328981042
    2. ' primary' → logprob: -7.00150728225708
    3. 'break' → logprob: -7.62650728225708
    4. '                       ' → logprob: -10.376507759094238
    5. '           ' → logprob: -10.626507759094238
    6. '                   ' → logprob: -11.501507759094238
    7. 'continue' → logprob: -11.626507759094238
    8. '               ' → logprob: -11.876507759094238
    9. 'pass' → logprob: -12.251507759094238
    10. '(primary' → logprob: -12.501507759094238

Token 1445: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0002680112374946475
    2. 'Lines' → logprob: -8.25026798248291
    3. '.append' → logprob: -13.50026798248291
    4. '   ' → logprob: -14.12526798248291
    5. '[' → logprob: -14.37526798248291
    6. '
' → logprob: -14.62526798248291
    7. '           ' → logprob: -14.87526798248291
    8. '_LINES' → logprob: -14.87526798248291
    9. 'lines' → logprob: -15.00026798248291
    10. ' Lines' → logprob: -15.25026798248291

Token 1446: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001818097778595984
    2. 'append' → logprob: -6.7518181800842285
    3. '.' → logprob: -8.12681770324707
    4. '=' → logprob: -8.75181770324707
    5. '           ' → logprob: -9.62681770324707
    6. ':' → logprob: -10.37681770324707
    7. '+=' → logprob: -10.50181770324707
    8. '                       ' → logprob: -10.62681770324707
    9. '                           ' → logprob: -11.37681770324707
    10. ':
' → logprob: -12.12681770324707

Token 1447: '('.' (ID: 7925)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.10363580286502838
    2. '''' → logprob: -2.853635787963867
    3. ''.' → logprob: -3.853635787963867
    4. '(lines' → logprob: -5.103635787963867
    5. ''' → logprob: -5.228635787963867
    6. ' lines' → logprob: -5.728635787963867
    7. '('' → logprob: -6.978635787963867
    8. '('.')' → logprob: -6.978635787963867
    9. '''.' → logprob: -7.103635787963867
    10. 'line' → logprob: -7.228635787963867

Token 1448: ''' (ID: 6)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.230636864900589
    2. ''' → logprob: -1.8556368350982666
    3. ''.' → logprob: -4.230637073516846
    4. '*' → logprob: -4.480637073516846
    5. '*l' → logprob: -4.605637073516846
    6. ' *' → logprob: -5.980637073516846
    7. ''*' → logprob: -5.980637073516846
    8. '(l' → logprob: -6.480637073516846
    9. '.'' → logprob: -6.480637073516846
    10. '.' → logprob: -6.980637073516846

Token 1449: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.011452141217887402
    2. '*' → logprob: -5.0114521980285645
    3. '*l' → logprob: -6.1364521980285645
    4. ' *' → logprob: -6.3864521980285645
    5. ''' → logprob: -8.511451721191406
    6. '*[' → logprob: -8.886451721191406
    7. '*r' → logprob: -9.136451721191406
    8. '.' → logprob: -9.261451721191406
    9. '[l' → logprob: -9.511451721191406
    10. '*((' → logprob: -9.511451721191406

Token 1450: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0027063232846558094
    2. '(r' → logprob: -6.002706527709961
    3. ' r' → logprob: -8.502706527709961
    4. '   ' → logprob: -11.502706527709961
    5. 'l' → logprob: -12.127706527709961
    6. ' (' → logprob: -12.627706527709961
    7. '(' → logprob: -13.002706527709961
    8. ' ' → logprob: -13.377706527709961
    9. 'len' → logprob: -13.627706527709961
    10. '(l' → logprob: -14.252706527709961

Token 1451: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.6430307030677795
    2. '+' → logprob: -1.3930306434631348
    3. ' -' → logprob: -2.1430306434631348
    4. '-' → logprob: -2.5180306434631348
    5. 'l' → logprob: -3.8930306434631348
    6. '1' → logprob: -5.018030643463135
    7. '+l' → logprob: -8.393031120300293
    8. ' +' → logprob: -8.643031120300293
    9. '   ' → logprob: -9.143031120300293
    10. 'r' → logprob: -9.268031120300293

Token 1452: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.166338137816638e-05
    2. '1' → logprob: -11.250031471252441
    3. ' +' → logprob: -11.375031471252441
    4. ')+' → logprob: -12.000031471252441
    5. '+)' → logprob: -15.000031471252441
    6. ')' → logprob: -15.250031471252441
    7. '```' → logprob: -16.125032424926758
    8. ']+' → logprob: -16.500032424926758
    9. '+
' → logprob: -17.375032424926758
    10. '+l' → logprob: -17.625032424926758

Token 1453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -15.50000286102295
    4. '2' → logprob: -16.625003814697266
    5. '+' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.750003814697266
    7. ')' → logprob: -17.750003814697266
    8. '
' → logprob: -18.625003814697266
    9. '7' → logprob: -19.625003814697266
    10. '``' → logprob: -19.812503814697266

Token 1454: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5363926291465759
    2. '))' → logprob: -1.0363926887512207
    3. '))
' → logprob: -3.1613926887512207
    4. ')
' → logprob: -4.036392688751221
    5. ')))' → logprob: -9.286392211914062
    6. ')')
' → logprob: -9.286392211914062
    7. '           ' → logprob: -9.536392211914062
    8. '')' → logprob: -10.786392211914062
    9. '                   ' → logprob: -10.911392211914062
    10. '+' → logprob: -11.411392211914062

Token 1455: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22905296087265015
    2. '           ' → logprob: -2.229053020477295
    3. '                   ' → logprob: -2.979053020477295
    4. '<|end|>' → logprob: -3.229053020477295
    5. ')' → logprob: -5.729053020477295
    6. '       ' → logprob: -6.604053020477295
    7. '                       ' → logprob: -7.604053020477295
    8. '<|end|>' → logprob: -7.854053020477295
    9. '```' → logprob: -8.354052543640137
    10. '.' → logprob: -9.104052543640137

Token 1456: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.63016676902771
    2. '               ' → logprob: -0.88016676902771
    3. '
' → logprob: -4.630167007446289
    4. ')' → logprob: -4.630167007446289
    5. '<|end|>' → logprob: -4.630167007446289
    6. ' else' → logprob: -4.880167007446289
    7. '       ' → logprob: -5.505167007446289
    8. ' continue' → logprob: -5.880167007446289
    9. '                   ' → logprob: -6.130167007446289
    10. 'else' (adapté à ' else') → logprob: -6.255167007446289

Token 1457: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08219286799430847
    2. ':' → logprob: -3.207192897796631
    3. ':
' → logprob: -3.832192897796631
    4. '                       ' → logprob: -4.957192897796631
    5. '               ' → logprob: -5.082192897796631
    6. '           ' → logprob: -6.457192897796631
    7. '   ' → logprob: -8.457192420959473
    8. '.' → logprob: -8.457192420959473
    9. ' continue' → logprob: -8.707192420959473
    10. ' =' → logprob: -8.707192420959473

Token 1458: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08112422376871109
    2. '               ' → logprob: -3.2061243057250977
    3. ' continue' → logprob: -3.9561243057250977
    4. '           ' → logprob: -5.331124305725098
    5. '                       ' → logprob: -5.331124305725098
    6. 'continue' → logprob: -5.706124305725098
    7. '   ' → logprob: -6.331124305725098
    8. '       ' → logprob: -6.831124305725098
    9. '	               ' → logprob: -8.206124305725098
    10. ' ' → logprob: -8.331124305725098

Token 1459: ' primary' (ID: 9107)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22981084883213043
    2. ' primary' → logprob: -2.354810953140259
    3. 'primary' (adapté à ' primary') → logprob: -3.104810953140259
    4. '.' → logprob: -3.479810953140259
    5. '               ' → logprob: -4.22981071472168
    6. '           ' → logprob: -4.97981071472168
    7. '                    
' → logprob: -5.72981071472168
    8. '                       ' → logprob: -5.72981071472168
    9. ' ' → logprob: -6.35481071472168
    10. '.
' → logprob: -6.97981071472168

Token 1460: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0003687053394969553
    2. '_' → logprob: -8.00036907196045
    3. 'Lines' → logprob: -11.87536907196045
    4. '_LINES' → logprob: -12.25036907196045
    5. '_
' → logprob: -12.37536907196045
    6. '```' → logprob: -12.87536907196045
    7. ' _' → logprob: -13.25036907196045
    8. '_line' → logprob: -13.62536907196045
    9. '[' → logprob: -13.62536907196045
    10. ')' → logprob: -14.00036907196045

Token 1461: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007196604739874601
    2. '.' → logprob: -5.007196426391602
    3. '           ' → logprob: -8.382196426391602
    4. '                   ' → logprob: -9.132196426391602
    5. 'append' → logprob: -9.882196426391602
    6. '               ' → logprob: -10.382196426391602
    7. '+=' → logprob: -11.632196426391602
    8. ' +=' → logprob: -11.882196426391602
    9. '          ' → logprob: -12.007196426391602
    10. '=' → logprob: -12.007196426391602

Token 1462: '('.' (ID: 7925)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0003721622342709452
    2. '('.' → logprob: -8.125371932983398
    3. ' '.'' → logprob: -9.750371932983398
    4. '['' → logprob: -11.625371932983398
    5. ''' → logprob: -12.375371932983398
    6. '''' → logprob: -13.625371932983398
    7. '''.' → logprob: -13.875371932983398
    8. '.' → logprob: -14.125371932983398
    9. '('.')' → logprob: -14.750371932983398
    10. '   ' → logprob: -15.125371932983398

Token 1463: ''' (ID: 6)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00038932388997636735
    2. '*' → logprob: -8.375389099121094
    3. ''' → logprob: -8.875389099121094
    4. '*[' → logprob: -12.125389099121094
    5. '"' → logprob: -12.875389099121094
    6. '(l' → logprob: -13.250389099121094
    7. '[' → logprob: -13.375389099121094
    8. '**' → logprob: -13.500389099121094
    9. ')*(' → logprob: -13.750389099121094
    10. ' *(' → logprob: -14.000389099121094

Token 1464: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.0009145628428086638
    2. '*' → logprob: -7.000914573669434
    3. ' *' → logprob: -13.500914573669434
    4. '*((' → logprob: -13.875914573669434
    5. '**' → logprob: -15.000914573669434
    6. '*l' → logprob: -15.250914573669434
    7. ' *(' → logprob: -15.750914573669434
    8. ')*(' → logprob: -16.750913619995117
    9. '*[' → logprob: -17.500913619995117
    10. ']*(' → logprob: -18.125913619995117

Token 1465: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002399793826043606
    2. '(r' → logprob: -6.127399921417236
    3. ' r' → logprob: -8.502399444580078
    4. ' (' → logprob: -12.002399444580078
    5. '   ' → logprob: -13.752399444580078
    6. '(' → logprob: -13.877399444580078
    7. 'len' → logprob: -14.377399444580078
    8. '```' → logprob: -14.627399444580078
    9. 'l' → logprob: -14.752399444580078
    10. ')' → logprob: -15.002399444580078

Token 1466: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.031869061291217804
    2. '+' → logprob: -4.031868934631348
    3. '-r' → logprob: -4.781868934631348
    4. ' -' → logprob: -5.781868934631348
    5. 'l' → logprob: -7.031868934631348
    6. 'r' → logprob: -7.156868934631348
    7. '-' → logprob: -7.906868934631348
    8. '+l' → logprob: -9.656868934631348
    9. '[' → logprob: -11.781868934631348
    10. '-b' → logprob: -12.156868934631348

Token 1467: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.723352049040841e-06
    2. ' +' → logprob: -12.375004768371582
    3. ')+' → logprob: -15.500004768371582
    4. '+
' → logprob: -16.250003814697266
    5. '1' → logprob: -16.500003814697266
    6. '+)' → logprob: -17.125003814697266
    7. '```' → logprob: -17.500003814697266
    8. ']+' → logprob: -18.000003814697266
    9. '[' → logprob: -18.125003814697266
    10. ')' → logprob: -18.625003814697266

Token 1468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002682496269699186
    2. 'r' → logprob: -8.87526798248291
    3. '+' → logprob: -9.12526798248291
    4. '(r' → logprob: -11.50026798248291
    5. ' ' → logprob: -12.50026798248291
    6. '+r' → logprob: -13.00026798248291
    7. ' r' → logprob: -14.00026798248291
    8. '2' → logprob: -14.25026798248291
    9. '(' → logprob: -14.75026798248291
    10. '```' → logprob: -14.87526798248291

Token 1469: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029798392206430435
    2. '))' → logprob: -3.6547985076904297
    3. ')
' → logprob: -6.27979850769043
    4. '))
' → logprob: -6.65479850769043
    5. '           ' → logprob: -8.90479850769043
    6. '               ' → logprob: -9.52979850769043
    7. '')' → logprob: -9.90479850769043
    8. ')')
' → logprob: -11.27979850769043
    9. '       ' → logprob: -11.40479850769043
    10. ')))' → logprob: -11.40479850769043

Token 1470: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1471: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05422644317150116
    2. '<|end|>' → logprob: -3.8042263984680176
    3. ' continue' → logprob: -5.054226398468018
    4. 'continue' → logprob: -5.179226398468018
    5. '       ' → logprob: -5.804226398468018
    6. '                   ' → logprob: -5.929226398468018
    7. '		' → logprob: -6.179226398468018
    8. ')' → logprob: -6.179226398468018
    9. '               ' → logprob: -6.304226398468018
    10. '	       ' → logprob: -7.054226398468018

Token 1472: ' they' (ID: 1023)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4444744288921356
    2. ' continue' → logprob: -2.444474458694458
    3. '<|end|>' → logprob: -2.694474458694458
    4. ')' → logprob: -2.819474458694458
    5. 'continue' → logprob: -3.694474458694458
    6. '...' → logprob: -3.944474458694458
    7. '            ' → logprob: -4.194474220275879
    8. '               ' → logprob: -4.194474220275879
    9. ' ' → logprob: -4.694474220275879
    10. '[' → logprob: -5.069474220275879

Token 1473: ' are' (ID: 553)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.657429039478302
    2. ')' → logprob: -2.0324289798736572
    3. '[' → logprob: -2.2824289798736572
    4. '<|end|>' → logprob: -3.1574289798736572
    5. '.' → logprob: -3.2824289798736572
    6. '=' → logprob: -3.2824289798736572
    7. ' =' → logprob: -3.4074289798736572
    8. ':' → logprob: -3.9074289798736572
    9. ' continue' → logprob: -4.282429218292236
    10. '[
' → logprob: -4.782429218292236

Token 1474: ' left' (ID: 3561)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.07043273746967316
    2. '           ' → logprob: -4.320432662963867
    3. ' trimmed' → logprob: -4.320432662963867
    4. 'not' → logprob: -4.445432662963867
    5. 'primary' → logprob: -4.570432662963867
    6. '[' → logprob: -5.445432662963867
    7. ' primary' → logprob: -5.695432662963867
    8. ' not' → logprob: -6.320432662963867
    9. '   ' → logprob: -6.445432662963867
    10. '...' → logprob: -6.820432662963867

Token 1475: ' aligned' (ID: 48224)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5828509330749512
    2. '=' → logprob: -1.7078509330749512
    3. '+=' → logprob: -2.207850933074951
    4. ']' → logprob: -2.332850933074951
    5. ':' → logprob: -2.832850933074951
    6. ' +=' → logprob: -3.082850933074951
    7. ')' → logprob: -3.457850933074951
    8. 'over' → logprob: -3.457850933074951
    9. '           ' → logprob: -3.707850933074951
    10. '[' → logprob: -3.707850933074951

Token 1476: ' --' (ID: 2230)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1477: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3862214982509613
    2. ' continue' → logprob: -2.136221408843994
    3. '<|end|>' → logprob: -3.386221408843994
    4. ')' → logprob: -3.511221408843994
    5. '...' → logprob: -3.636221408843994
    6. '               ' → logprob: -3.761221408843994
    7. 'continue' → logprob: -3.761221408843994
    8. '       ' → logprob: -4.761221408843994
    9. '
' → logprob: -4.761221408843994
    10. ' if' → logprob: -5.261221408843994

Token 1478: ' just' (ID: 1327)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.9830489158630371
    2. ' primary' → logprob: -1.483048915863037
    3. ' continue' → logprob: -1.983048915863037
    4. 'continue' → logprob: -2.233048915863037
    5. '           ' → logprob: -2.608048915863037
    6. 'trim' → logprob: -4.483048915863037
    7. 'pass' → logprob: -4.733048915863037
    8. ' for' → logprob: -4.858048915863037
    9. '#' → logprob: -5.233048915863037
    10. 'for' → logprob: -5.233048915863037

Token 1479: ' trim' (ID: 19334)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'primary' → logprob: -1.2857340574264526
    2. 'continue' → logprob: -1.7857340574264526
    3. ' primary' → logprob: -1.7857340574264526
    4. ' continue' → logprob: -1.9107340574264526
    5. 'trim' → logprob: -3.410734176635742
    6. '.append' → logprob: -3.535734176635742
    7. 'pass' → logprob: -3.535734176635742
    8. ' lines' → logprob: -3.660734176635742
    9. '           ' → logprob: -4.035734176635742
    10. 'append' → logprob: -4.160734176635742

Token 1480: ' the' (ID: 290)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.7017868757247925
    2. '(primary' → logprob: -0.7017868757247925
    3. ' primary' → logprob: -5.326786994934082
    4. '           ' → logprob: -6.076786994934082
    5. '<|end|>' → logprob: -8.201786994934082
    6. '
' → logprob: -8.576786994934082
    7. '   ' → logprob: -8.701786994934082
    8. '.primary' → logprob: -9.201786994934082
    9. '_primary' → logprob: -9.326786994934082
    10. '<|end|>' → logprob: -9.451786994934082

Token 1481: ' block' (ID: 4355)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.009224599227309227
    2. ' primary' → logprob: -4.7592244148254395
    3. 'lines' → logprob: -8.384224891662598
    4. '
' → logprob: -9.009224891662598
    5. '(primary' → logprob: -10.259224891662598
    6. 'cell' → logprob: -10.634224891662598
    7. ' lines' → logprob: -10.634224891662598
    8. '.' → logprob: -10.759224891662598
    9. 'for' → logprob: -11.009224891662598
    10. '[' → logprob: -11.259224891662598

Token 1482: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1901718378067017
    2. '<|end|>' → logprob: -1.3151718378067017
    3. '(primary' → logprob: -1.4401718378067017
    4. 'primary' → logprob: -3.065171718597412
    5. '<|end|>' → logprob: -3.315171718597412
    6. '
' → logprob: -3.565171718597412
    7. '            
' → logprob: -3.940171718597412
    8. ',' → logprob: -4.690171718597412
    9. ')' → logprob: -4.690171718597412
    10. ' primary' → logprob: -4.815171718597412

Token 1483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047227874398231506
    2. '<|end|>' → logprob: -3.1722278594970703
    3. '<|end|>' → logprob: -6.04722785949707
    4. '   ' → logprob: -7.42222785949707
    5. '
' → logprob: -7.92222785949707
    6. ',' → logprob: -8.54722785949707
    7. '       ' → logprob: -9.17222785949707
    8. ')' → logprob: -9.17222785949707
    9. ' and' → logprob: -9.54722785949707
    10. '            
' → logprob: -9.79722785949707

Token 1484: ' primary' (ID: 9107)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02801559679210186
    2. 'primary' (adapté à ' primary') → logprob: -4.153015613555908
    3. ' primary' → logprob: -5.278015613555908
    4. '
' → logprob: -6.153015613555908
    5. '            
' → logprob: -7.278015613555908
    6. '   ' → logprob: -7.528015613555908
    7. ' lines' → logprob: -7.653015613555908
    8. '       ' → logprob: -7.653015613555908
    9. '               ' → logprob: -7.778015613555908
    10. ',' → logprob: -8.40301513671875

Token 1485: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00011367550177965313
    2. '   ' → logprob: -10.000113487243652
    3. '_part' → logprob: -10.625113487243652
    4. ' =' → logprob: -11.500113487243652
    5. '_data' → logprob: -11.750113487243652
    6. '=' → logprob: -12.125113487243652
    7. 'lines' → logprob: -12.250113487243652
    8. '_cells' → logprob: -12.625113487243652
    9. '_parts' → logprob: -13.000113487243652
    10. '_block' → logprob: -13.000113487243652

Token 1486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061969365924596786
    2. ' =' → logprob: -2.81196928024292
    3. '   ' → logprob: -14.311969757080078
    4. '=
' → logprob: -14.811969757080078
    5. '[' → logprob: -15.436969757080078
    6. ')' → logprob: -15.686969757080078
    7. '           ' → logprob: -16.186969757080078
    8. '[:]' → logprob: -16.936969757080078
    9. '    ' → logprob: -17.061969757080078
    10. '       ' → logprob: -17.561969757080078

Token 1487: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.0019626514986157417
    2. ' trim' → logprob: -6.251962661743164
    3. '[' → logprob: -10.376962661743164
    4. '(trim' → logprob: -13.876962661743164
    5. '   ' → logprob: -14.251962661743164
    6. ' [' → logprob: -14.251962661743164
    7. 'strip' → logprob: -15.626962661743164
    8. '[
' → logprob: -15.876962661743164
    9. '.trim' → logprob: -16.376962661743164
    10. 'tr' → logprob: -16.626962661743164

Token 1488: '(primary' (ID: 136333)
  Prédit: '(primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(primary' → logprob: -6.873571692267433e-05
    2. 'primary' → logprob: -9.875068664550781
    3. '(' → logprob: -11.500068664550781
    4. '(
' → logprob: -12.375068664550781
    5. '([' → logprob: -13.875068664550781
    6. ' (' → logprob: -14.750068664550781
    7. ' primary' → logprob: -14.875068664550781
    8. '(lines' → logprob: -14.875068664550781
    9. '([
' → logprob: -15.625068664550781
    10. '((' → logprob: -15.750068664550781

Token 1489: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.003079671412706375
    2. 'primary' → logprob: -6.128079891204834
    3. '(primary' → logprob: -7.628079891204834
    4. 'lines' → logprob: -8.878079414367676
    5. ')' → logprob: -9.753079414367676
    6. '_primary' → logprob: -9.878079414367676
    7. 'Lines' → logprob: -10.628079414367676
    8. '[
' → logprob: -10.753079414367676
    9. 'ines' → logprob: -10.753079414367676
    10. '[' → logprob: -10.753079414367676

Token 1490: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869498670101166
    2. ')
' → logprob: -1.136949896812439
    3. '   ' → logprob: -9.51194953918457
    4. ')
' → logprob: -13.13694953918457
    5. ')

' → logprob: -14.01194953918457
    6. '
' → logprob: -14.76194953918457
    7. ')`
' → logprob: -15.13694953918457
    8. '       ' → logprob: -15.26194953918457
    9. ')return' → logprob: -15.26194953918457
    10. ' )' → logprob: -15.38694953918457

Token 1491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04422791302204132
    2. '<|end|>' → logprob: -3.1692278385162354
    3. '<|end|>' → logprob: -7.7942280769348145
    4. '
' → logprob: -8.294227600097656
    5. '       ' → logprob: -8.419227600097656
    6. '   ' → logprob: -9.044227600097656
    7. '               ' → logprob: -10.169227600097656
    8. ')' → logprob: -10.419227600097656
    9. '		' → logprob: -10.419227600097656
    10. 'continue' → logprob: -10.794227600097656

Token 1492: ' primary' (ID: 9107)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010047047398984432
    2. '<|end|>' → logprob: -7.501004695892334
    3. 'if' → logprob: -9.251005172729492
    4. '       ' → logprob: -9.501005172729492
    5. '
' → logprob: -10.126005172729492
    6. '               ' → logprob: -10.251005172729492
    7. 'continue' → logprob: -10.376005172729492
    8. 'return' → logprob: -10.376005172729492
    9. '   ' → logprob: -10.626005172729492
    10. ' if' → logprob: -10.751005172729492

Token 1493: '_cell' (ID: 39197)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.008678747341036797
    2. '_parts' → logprob: -5.883678913116455
    3. '_tokens' → logprob: -6.383678913116455
    4. '_' → logprob: -6.758678913116455
    5. '_cells' → logprob: -7.258678913116455
    6. '_part' → logprob: -7.383678913116455
    7. '_token' → logprob: -7.883678913116455
    8. '<|end|>' → logprob: -8.008678436279297
    9. '_val' → logprob: -8.133678436279297
    10. '_cell' → logprob: -9.383678436279297

Token 1494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01206030324101448
    2. '=' → logprob: -5.137060165405273
    3. ' =' → logprob: -5.762060165405273
    4. '<|end|>' → logprob: -7.262060165405273
    5. ',
' → logprob: -7.387060165405273
    6. ')' → logprob: -7.762060165405273
    7. '.append' → logprob: -8.137060165405273
    8. '   ' → logprob: -8.762060165405273
    9. '[' → logprob: -9.012060165405273
    10. ' ,' → logprob: -9.387060165405273

Token 1495: ' primary' (ID: 9107)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.41211947798728943
    2. ' primary' → logprob: -1.7871195077896118
    3. 'None' → logprob: -2.1621193885803223
    4. ' None' → logprob: -3.0371193885803223
    5. '_' → logprob: -5.412119388580322
    6. '_primary' → logprob: -6.787119388580322
    7. ''' → logprob: -8.16211986541748
    8. '(None' → logprob: -8.16211986541748
    9. ' _' → logprob: -8.41211986541748
    10. ''_' → logprob: -8.53711986541748

Token 1496: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0014901040121912956
    2. '_cell' → logprob: -7.251490116119385
    3. '_lines' → logprob: -7.751490116119385
    4. 'val' → logprob: -8.251489639282227
    5. '_token' → logprob: -10.751489639282227
    6. 'cell' → logprob: -11.376489639282227
    7. '_part' → logprob: -11.501489639282227
    8. '_' → logprob: -11.876489639282227
    9. '_value' → logprob: -12.001489639282227
    10. '_cells' → logprob: -12.001489639282227

Token 1497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055019378662109375
    2. ',' → logprob: -3.1800193786621094
    3. ' =' → logprob: -4.430019378662109
    4. ')' → logprob: -11.80501937866211
    5. '=
' → logprob: -11.80501937866211
    6. '   ' → logprob: -12.05501937866211
    7. '[' → logprob: -12.18001937866211
    8. ' ,' → logprob: -13.30501937866211
    9. '=None' → logprob: -13.55501937866211
    10. '           ' → logprob: -14.43001937866211

Token 1498: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.03804252669215202
    2. ' parse' → logprob: -3.2880425453186035
    3. '(parse' → logprob: -14.288042068481445
    4. '	parse' → logprob: -15.788042068481445
    5. '=parse' → logprob: -16.413042068481445
    6. '           ' → logprob: -16.413042068481445
    7. '   ' → logprob: -16.788042068481445
    8. '.parse' → logprob: -17.038042068481445
    9. '_parse' → logprob: -17.538042068481445
    10. '```' → logprob: -19.163042068481445

Token 1499: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.00833040103316307
    2. '_cells' → logprob: -5.258330345153809
    3. 'cell' → logprob: -6.258330345153809
    4. 'primary' → logprob: -8.133330345153809
    5. '(lines' → logprob: -8.258330345153809
    6. 'lines' → logprob: -8.383330345153809
    7. 'cells' → logprob: -8.758330345153809
    8. '_lines' → logprob: -8.883330345153809
    9. '(primary' → logprob: -10.508330345153809
    10. 'Cell' → logprob: -10.758330345153809

Token 1500: '(primary' (ID: 136333)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.11593008786439896
    2. '(primary' → logprob: -2.2409300804138184
    3. 'primary' → logprob: -6.115930080413818
    4. 'lines' → logprob: -7.115930080413818
    5. '(' → logprob: -9.990930557250977
    6. '(line' → logprob: -11.365930557250977
    7. '(
' → logprob: -11.740930557250977
    8. ' primary' → logprob: -12.490930557250977
    9. '(top' → logprob: -12.990930557250977
    10. ' lines' → logprob: -13.115930557250977

Token 1501: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.630610641877865e-06
    2. '           ' → logprob: -13.375006675720215
    3. '(lines' → logprob: -13.625006675720215
    4. '_cells' → logprob: -14.375006675720215
    5. '(primary' → logprob: -14.500006675720215
    6. 's' → logprob: -14.625006675720215
    7. 'Lines' → logprob: -14.875006675720215
    8. 'lines' → logprob: -14.875006675720215
    9. '```' → logprob: -15.000006675720215
    10. 'primary' → logprob: -15.500006675720215

Token 1502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010075619211420417
    2. ',line' → logprob: -7.001007556915283
    3. '           ' → logprob: -10.126008033752441
    4. '       ' → logprob: -11.376008033752441
    5. '(lines' → logprob: -11.876008033752441
    6. ',
' → logprob: -12.001008033752441
    7. '(line' → logprob: -12.251008033752441
    8. ')' → logprob: -12.251008033752441
    9. '               ' → logprob: -12.251008033752441
    10. ' ,' → logprob: -12.376008033752441

Token 1503: ' base' (ID: 3611)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.33016279339790344
    2. 'base' → logprob: -1.330162763595581
    3. '0' → logprob: -4.20516300201416
    4. 'primary' → logprob: -7.08016300201416
    5. ' len' → logprob: -7.95516300201416
    6. 'max' → logprob: -7.95516300201416
    7. ' base' → logprob: -8.70516300201416
    8. '-' → logprob: -10.58016300201416
    9. '   ' → logprob: -11.33016300201416
    10. ' ' → logprob: -11.33016300201416

Token 1504: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.816093228830141e-06
    2. 'Line' → logprob: -13.12500286102295
    3. '-' → logprob: -15.00000286102295
    4. 'line' → logprob: -15.25000286102295
    5. '   ' → logprob: -16.875001907348633
    6. '```' → logprob: -17.000001907348633
    7. '+' → logprob: -17.125001907348633
    8. '_LINE' → logprob: -17.625001907348633
    9. '           ' → logprob: -18.375001907348633
    10. '_Line' → logprob: -18.625001907348633

Token 1505: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04906351491808891
    2. ' -' → logprob: -3.0490634441375732
    3. ')' → logprob: -8.549063682556152
    4. '+' → logprob: -8.674063682556152
    5. '   ' → logprob: -9.799063682556152
    6. '       ' → logprob: -10.299063682556152
    7. '           ' → logprob: -11.674063682556152
    8. ' +' → logprob: -12.424063682556152
    9. '[' → logprob: -13.174063682556152
    10. ')
' → logprob: -13.174063682556152

Token 1506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04949585720896721
    2. '<|end|>' → logprob: -3.2994959354400635
    3. '       ' → logprob: -5.174495697021484
    4. '   ' → logprob: -6.049495697021484
    5. ')' → logprob: -6.549495697021484
    6. '<|end|>' → logprob: -7.049495697021484
    7. '               ' → logprob: -7.924495697021484
    8. '
' → logprob: -8.549495697021484
    9. '		' → logprob: -8.924495697021484
    10. '                   ' → logprob: -9.049495697021484

Token 1507: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001290454383706674
    2. 'if' (adapté à ' if') → logprob: -10.000128746032715
    3. '<|end|>' → logprob: -10.625128746032715
    4. 'return' → logprob: -11.000128746032715
    5. '                   ' → logprob: -11.250128746032715
    6. '               ' → logprob: -11.500128746032715
    7. '       ' → logprob: -11.750128746032715
    8. ' if' → logprob: -12.750128746032715
    9. '		' → logprob: -12.875128746032715
    10. '<|end|>' → logprob: -13.250128746032715

Token 1508: ' primary' (ID: 9107)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.3940381705760956
    2. ' primary' → logprob: -1.144038200378418
    3. ' idx' → logprob: -6.019038200378418
    4. 'idx' → logprob: -7.019038200378418
    5. 'True' → logprob: -7.894038200378418
    6. '   ' → logprob: -8.019038200378418
    7. ' l' → logprob: -8.144038200378418
    8. 'l' → logprob: -8.144038200378418
    9. ' not' → logprob: -8.144038200378418
    10. ' lines' → logprob: -8.394038200378418

Token 1509: '_cell' (ID: 39197)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.4264974296092987
    2. '_lines' → logprob: -1.176497459411621
    3. '_part' → logprob: -4.051497459411621
    4. '_' → logprob: -4.551497459411621
    5. '_parts' → logprob: -5.051497459411621
    6. '_cells' → logprob: -6.176497459411621
    7. '_cell' → logprob: -7.051497459411621
    8. ')' → logprob: -8.051497459411621
    9. ')_' → logprob: -8.051497459411621
    10. ''_' → logprob: -8.676497459411621

Token 1510: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06692787259817123
    2. ':' → logprob: -2.941927909851074
    3. '<|end|>' → logprob: -5.316927909851074
    4. ',' → logprob: -6.816927909851074
    5. '               ' → logprob: -7.066927909851074
    6. '           ' → logprob: -7.066927909851074
    7. '<|end|>' → logprob: -7.566927909851074
    8. '            ' → logprob: -7.941927909851074
    9. ')' → logprob: -8.066927909851074
    10. '.' → logprob: -8.066927909851074

Token 1511: ' None' (ID: 4662)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5641856789588928
    2. 'not' → logprob: -0.9391856789588928
    3. 'None' → logprob: -3.439185619354248
    4. ' None' → logprob: -4.814185619354248
    5. 'Not' → logprob: -11.064186096191406
    6. '   ' → logprob: -12.689186096191406
    7. '...' → logprob: -13.439186096191406
    8. 'none' → logprob: -13.439186096191406
    9. '=None' → logprob: -13.814186096191406
    10. ' ' → logprob: -14.189186096191406

Token 1512: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21975624561309814
    2. '               ' → logprob: -1.8447562456130981
    3. ':
' → logprob: -3.3447561264038086
    4. '                       ' → logprob: -6.469756126403809
    5. '           ' → logprob: -6.844756126403809
    6. ' or' → logprob: -7.969756126403809
    7. ':return' → logprob: -8.219756126403809
    8. ',' → logprob: -8.469756126403809
    9. '                               ' → logprob: -9.094756126403809
    10. '                   ' → logprob: -9.219756126403809

Token 1513: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019201948307454586
    2. ':' → logprob: -7.501920223236084
    3. ' continue' → logprob: -7.876920223236084
    4. '                               ' → logprob: -8.001919746398926
    5. 'continue' → logprob: -8.376919746398926
    6. '                       ' → logprob: -8.626919746398926
    7. '                   ' → logprob: -9.501919746398926
    8. '           ' → logprob: -9.626919746398926
    9. '                           ' → logprob: -10.501919746398926
    10. ':
' → logprob: -11.376919746398926

Token 1514: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2728475034236908
    2. '               ' → logprob: -1.5228475332260132
    3. ' continue' → logprob: -4.022847652435303
    4. '                   ' → logprob: -6.397847652435303
    5. '           ' → logprob: -7.522847652435303
    6. 'return' → logprob: -8.522847175598145
    7. '	continue' → logprob: -8.647847175598145
    8. '                       ' → logprob: -9.022847175598145
    9. '   ' → logprob: -10.522847175598145
    10. '       ' → logprob: -10.647847175598145

Token 1515: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2800805866718292
    2. ':' → logprob: -2.155080556869507
    3. '               ' → logprob: -2.530080556869507
    4. '       ' → logprob: -3.780080556869507
    5. ')' → logprob: -4.905080795288086
    6. '.' → logprob: -5.405080795288086
    7. '<|end|>' → logprob: -6.155080795288086
    8. '                   ' → logprob: -6.280080795288086
    9. '   ' → logprob: -6.405080795288086
    10. ',' → logprob: -6.780080795288086

Token 1516: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08965659141540527
    2. '<|end|>' → logprob: -3.7146565914154053
    3. ')' → logprob: -4.214656829833984
    4. '       ' → logprob: -4.964656829833984
    5. '           ' → logprob: -5.089656829833984
    6. ' ' → logprob: -5.214656829833984
    7. '.' → logprob: -5.214656829833984
    8. '               ' → logprob: -5.714656829833984
    9. '                           ' → logprob: -6.214656829833984
    10. '                       ' → logprob: -6.339656829833984

Token 1517: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004135868512094021
    2. '               ' → logprob: -5.879136085510254
    3. 'if' → logprob: -7.504136085510254
    4. ' if' → logprob: -7.754136085510254
    5. '#' (adapté à ' #') → logprob: -8.754136085510254
    6. '       ' → logprob: -9.129136085510254
    7. 'return' → logprob: -10.879136085510254
    8. '                   ' → logprob: -11.254136085510254
    9. 'next' → logprob: -11.379136085510254
    10. '                       ' → logprob: -11.879136085510254

Token 1518: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0410751104354858
    2. 'digit' → logprob: -1.0410751104354858
    3. 'if' → logprob: -1.4160751104354858
    4. 'above' → logprob: -4.541075229644775
    5. 'pow' → logprob: -4.666075229644775
    6. '       ' → logprob: -5.041075229644775
    7. 'up' → logprob: -5.416075229644775
    8. '#' → logprob: -5.541075229644775
    9. 'sup' → logprob: -5.541075229644775
    10. 'adj' → logprob: -5.666075229644775

Token 1519: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9613381028175354
    2. ' base' → logprob: -0.9613381028175354
    3. 'if' → logprob: -1.8363380432128906
    4. 'base' → logprob: -3.2113380432128906
    5. ' for' → logprob: -4.461338043212891
    6. 'for' → logprob: -5.086338043212891
    7. '   ' → logprob: -5.336338043212891
    8. 'idx' → logprob: -6.086338043212891
    9. ' primary' → logprob: -6.211338043212891
    10. ' line' → logprob: -6.336338043212891

Token 1520: ' line' (ID: 2543)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4747024178504944
    2. ' base' → logprob: -0.9747024178504944
    3. '(base' → logprob: -8.349702835083008
    4. 'primary' → logprob: -8.599702835083008
    5. ' primary' → logprob: -9.099702835083008
    6. ' (' → logprob: -10.349702835083008
    7. '   ' → logprob: -10.974702835083008
    8. ' ' → logprob: -11.224702835083008
    9. ' idx' → logprob: -11.474702835083008
    10. 'idx' → logprob: -11.974702835083008

Token 1521: ' above' (ID: 5151)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.019871892407536507
    2. 'above' → logprob: -4.769871711730957
    3. '_base' → logprob: -5.894871711730957
    4. 's' → logprob: -6.019871711730957
    5. '   ' → logprob: -7.144871711730957
    6. 'base' → logprob: -7.269871711730957
    7. '_b' → logprob: -7.644871711730957
    8. '_idx' → logprob: -7.644871711730957
    9. 'ab' → logprob: -7.644871711730957
    10. '_index' → logprob: -7.769871711730957

Token 1522: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.3320446014404297
    2. ' base' → logprob: -2.2070446014404297
    3. '(base' → logprob: -2.3320446014404297
    4. '           ' → logprob: -3.8320446014404297
    5. '=' → logprob: -4.45704460144043
    6. ' =' → logprob: -4.58204460144043
    7. '==' → logprob: -4.58204460144043
    8. ' ==' → logprob: -5.20704460144043
    9. '_base' → logprob: -5.33204460144043
    10. ' (' → logprob: -6.33204460144043

Token 1523: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.176947600673884e-05
    2. 'line' → logprob: -11.250021934509277
    3. '           ' → logprob: -13.125021934509277
    4. '_base' → logprob: -13.375021934509277
    5. '   ' → logprob: -13.625021934509277
    6. '[line' → logprob: -14.375021934509277
    7. '_' → logprob: -14.500021934509277
    8. '[' → logprob: -14.500021934509277
    9. '+' → logprob: -14.750021934509277
    10. '       ' → logprob: -15.375021934509277

Token 1524: ' has' (ID: 853)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.3205453157424927
    2. '[' → logprob: -1.5705453157424927
    3. ' and' → logprob: -1.6955453157424927
    4. '[line' → logprob: -2.070545196533203
    5. ' ==' → logprob: -2.320545196533203
    6. '           ' → logprob: -3.070545196533203
    7. ' is' → logprob: -4.445545196533203
    8. ',' → logprob: -4.945545196533203
    9. 'and' → logprob: -5.070545196533203
    10. '```' → logprob: -5.320545196533203

Token 1525: ' a' (ID: 261)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9506857991218567
    2. 'cells' → logprob: -1.450685739517212
    3. 'lines' → logprob: -1.950685739517212
    4. 'line' → logprob: -2.825685739517212
    5. ''.' → logprob: -3.075685739517212
    6. 'r' → logprob: -3.325685739517212
    7. 'primary' → logprob: -3.450685739517212
    8. 'l' → logprob: -4.200685977935791
    9. '')' → logprob: -4.825685977935791
    10. 'digits' → logprob: -4.950685977935791

Token 1526: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.13113458454608917
    2. 'cell' → logprob: -3.131134510040283
    3. 'line' → logprob: -3.506134510040283
    4. 'cells' → logprob: -4.006134510040283
    5. 'non' → logprob: -4.881134510040283
    6. 'lines' → logprob: -5.131134510040283
    7. 'primary' → logprob: -5.131134510040283
    8. 'digits' → logprob: -6.131134510040283
    9. 'char' → logprob: -6.506134510040283
    10. 'if' → logprob: -6.881134510040283

Token 1527: ' cell' (ID: 4206)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6717515587806702
    2. ' at' → logprob: -1.5467514991760254
    3. 'and' → logprob: -1.9217514991760254
    4. '(line' → logprob: -3.0467514991760254
    5. '           ' → logprob: -3.2967514991760254
    6. 'at' → logprob: -3.5467514991760254
    7. '               ' → logprob: -5.546751499176025
    8. ' line' → logprob: -5.671751499176025
    9. ' in' → logprob: -6.296751499176025
    10. '[line' → logprob: -6.796751499176025

Token 1528: ' right' (ID: 1849)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6767781972885132
    2. '               ' → logprob: -1.8017781972885132
    3. '           ' → logprob: -2.0517783164978027
    4. ' and' → logprob: -2.5517783164978027
    5. ':' → logprob: -2.6767783164978027
    6. ',' → logprob: -4.926778316497803
    7. ' with' → logprob: -5.051778316497803
    8. ' in' → logprob: -5.051778316497803
    9. 'at' → logprob: -5.301778316497803
    10. 'and' → logprob: -5.301778316497803

Token 1529: ' adjacent' (ID: 39069)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.2094358205795288
    2. ' of' → logprob: -1.7094358205795288
    3. ' adjacent' → logprob: -1.7094358205795288
    4. ' to' → logprob: -2.2094359397888184
    5. ' at' → logprob: -2.4594359397888184
    6. 'of' → logprob: -3.2094359397888184
    7. 'adj' → logprob: -3.7094359397888184
    8. ' after' → logprob: -4.084435939788818
    9. '   ' → logprob: -4.209435939788818
    10. '           ' → logprob: -4.584435939788818

Token 1530: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6067350506782532
    2. ' (' → logprob: -2.1067349910736084
    3. ' at' → logprob: -2.2317349910736084
    4. '(line' → logprob: -2.6067349910736084
    5. 'to' → logprob: -3.1067349910736084
    6. '           ' → logprob: -3.1067349910736084
    7. '(' → logprob: -4.2317352294921875
    8. ' line' → logprob: -4.2317352294921875
    9. '               ' → logprob: -4.6067352294921875
    10. ' if' → logprob: -5.1067352294921875

Token 1531: ' primary' (ID: 9107)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.19591352343559265
    2. '(r' → logprob: -1.820913553237915
    3. 'primary' → logprob: -4.445913314819336
    4. 'cells' → logprob: -6.445913314819336
    5. ' (' → logprob: -7.195913314819336
    6. '(primary' → logprob: -7.320913314819336
    7. '(' → logprob: -7.445913314819336
    8. ' r' → logprob: -7.695913314819336
    9. ' primary' → logprob: -8.695913314819336
    10. '(l' → logprob: -9.945913314819336

Token 1532: ' cell' (ID: 4206)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8457732200622559
    2. '[' → logprob: -1.9707732200622559
    3. ',' → logprob: -2.345773220062256
    4. '(' → logprob: -2.470773220062256
    5. '+' → logprob: -2.470773220062256
    6. '(line' → logprob: -2.970773220062256
    7. ' (' → logprob: -3.095773220062256
    8. ' at' → logprob: -3.220773220062256
    9. ' to' → logprob: -3.220773220062256
    10. 'to' → logprob: -3.345773220062256

Token 1533: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07423355430364609
    2. '               ' → logprob: -3.5742335319519043
    3. ' and' → logprob: -3.6992335319519043
    4. ':' → logprob: -5.324233531951904
    5. ' at' → logprob: -5.324233531951904
    6. ' if' → logprob: -5.824233531951904
    7. ',' → logprob: -6.324233531951904
    8. ':
' → logprob: -7.074233531951904
    9. ' (' → logprob: -7.449233531951904
    10. ' with' → logprob: -7.824233531951904

Token 1534: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6415807008743286
    2. '           ' → logprob: -0.7665807008743286
    3. ' at' → logprob: -6.391580581665039
    4. ',' → logprob: -6.391580581665039
    5. ':' → logprob: -6.766580581665039
    6. '                   ' → logprob: -7.516580581665039
    7. ' and' → logprob: -7.641580581665039
    8. '       ' → logprob: -7.766580581665039
    9. '            
' → logprob: -7.891580581665039
    10. '<|end|>' → logprob: -8.016580581665039

Token 1535: ' above' (ID: 5151)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.017156958580017
    2. '           ' → logprob: -1.517156958580017
    3. 'line' → logprob: -1.767156958580017
    4. ' line' → logprob: -1.767156958580017
    5. 'if' → logprob: -2.6421570777893066
    6. '               ' → logprob: -6.892157077789307
    7. 'adj' → logprob: -6.892157077789307
    8. 'top' → logprob: -7.517157077789307
    9. 'above' (adapté à ' above') → logprob: -7.517157077789307
    10. 'upper' → logprob: -7.642157077789307

Token 1536: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0011933216592296958
    2. 'line' → logprob: -7.126193523406982
    3. '_lines' → logprob: -9.001193046569824
    4. ' =' → logprob: -9.001193046569824
    5. '=' → logprob: -9.501193046569824
    6. '_' → logprob: -11.251193046569824
    7. '=line' → logprob: -11.501193046569824
    8. '>' → logprob: -11.751193046569824
    9. '_cells' → logprob: -11.751193046569824
    10. '   ' → logprob: -12.126193046569824

Token 1537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932419538497925
    2. ' =' → logprob: -0.6932419538497925
    3. '=line' → logprob: -9.443242073059082
    4. '=sys' → logprob: -11.943242073059082
    5. '_lines' → logprob: -12.443242073059082
    6. '   ' → logprob: -13.318242073059082
    7. '_idx' → logprob: -14.318242073059082
    8. '[line' → logprob: -14.693242073059082
    9. 's' → logprob: -14.693242073059082
    10. '_line' → logprob: -15.068242073059082

Token 1538: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.043273553252220154
    2. ' lines' → logprob: -3.168273448944092
    3. '   ' → logprob: -9.16827392578125
    4. 'base' → logprob: -9.41827392578125
    5. 'line' → logprob: -9.66827392578125
    6. ' ' → logprob: -11.91827392578125
    7. ' base' → logprob: -12.04327392578125
    8. '	lines' → logprob: -12.29327392578125
    9. '(lines' → logprob: -12.41827392578125
    10. '       ' → logprob: -14.35577392578125

Token 1539: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010787796927616
    2. 'base' → logprob: -6.8760786056518555
    3. '=' → logprob: -10.876078605651855
    4. '[
' → logprob: -11.501078605651855
    5. '   ' → logprob: -12.001078605651855
    6. '_base' → logprob: -12.501078605651855
    7. '
' → logprob: -12.501078605651855
    8. '(base' → logprob: -14.251078605651855
    9. 's' → logprob: -14.376078605651855
    10. '```' → logprob: -14.626078605651855

Token 1540: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -7.465036105713807e-06
    2. ' base' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.500007629394531
    4. '(base' → logprob: -15.500007629394531
    5. 'Base' → logprob: -17.87500762939453
    6. '	base' → logprob: -18.25000762939453
    7. '_base' → logprob: -18.62500762939453
    8. 'b' → logprob: -19.00000762939453
    9. '[' → logprob: -19.37500762939453
    10. '>' → logprob: -19.62500762939453

Token 1541: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.816093228830141e-06
    2. 'Line' → logprob: -13.25000286102295
    3. 'line' → logprob: -14.00000286102295
    4. '_base' → logprob: -15.62500286102295
    5. '_LINE' → logprob: -17.000001907348633
    6. '_layer' → logprob: -17.875001907348633
    7. ' Line' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '_' → logprob: -18.875001907348633
    10. '_Line' → logprob: -19.000001907348633

Token 1542: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.061970822513103485
    2. ' -' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.436970710754395
    4. '```' → logprob: -14.561970710754395
    5. ' ' → logprob: -14.686970710754395
    6. ']' → logprob: -14.936970710754395
    7. '1' → logprob: -15.686970710754395
    8. ' ' → logprob: -16.31197166442871
    9. '	' → logprob: -16.93697166442871
    10. '−' → logprob: -16.99947166442871

Token 1543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.125007629394531
    3. '```' → logprob: -13.750007629394531
    4. '0' → logprob: -15.750007629394531
    5. '
' → logprob: -15.937507629394531
    6. '   ' → logprob: -16.12500762939453
    7. '-' → logprob: -17.00000762939453
    8. '``' → logprob: -17.06250762939453
    9. '2' → logprob: -17.68750762939453
    10. ')' → logprob: -17.81250762939453

Token 1544: ']' (ID: 60)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07974651455879211
    2. ']' → logprob: -2.5797464847564697
    3. '][' → logprob: -7.454746723175049
    4. '           ' → logprob: -9.20474624633789
    5. '       ' → logprob: -9.32974624633789
    6. ']
' → logprob: -10.07974624633789
    7. '[r' → logprob: -11.20474624633789
    8. ']

' → logprob: -11.45474624633789
    9. ' ]
' → logprob: -12.20474624633789
    10. '[l' → logprob: -12.70474624633789

Token 1545: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4522358775138855
    2. '[' → logprob: -1.3272359371185303
    3. '[l' → logprob: -3.5772359371185303
    4. '[line' → logprob: -4.077235698699951
    5. '[next' → logprob: -4.827235698699951
    6. '               ' → logprob: -5.077235698699951
    7. '       ' → logprob: -5.327235698699951
    8. '[len' → logprob: -5.452235698699951
    9. '```' → logprob: -5.577235698699951
    10. ',' → logprob: -5.702235698699951

Token 1546: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0008997925906442106
    2. ' base' → logprob: -7.625899791717529
    3. 'len' → logprob: -7.875899791717529
    4. 'above' → logprob: -11.500900268554688
    5. '(base' → logprob: -11.500900268554688
    6. 'line' → logprob: -11.625900268554688
    7. 'lines' → logprob: -14.125900268554688
    8. ' ' → logprob: -14.250900268554688
    9. '   ' → logprob: -14.625900268554688
    10. 'length' → logprob: -15.375900268554688

Token 1547: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0002585978072602302
    2. 'Line' → logprob: -9.250258445739746
    3. '<' → logprob: -10.125258445739746
    4. '>' → logprob: -10.125258445739746
    5. '_LINE' → logprob: -10.750258445739746
    6. '_' → logprob: -11.000258445739746
    7. '_base' → logprob: -11.625258445739746
    8. '   ' → logprob: -11.875258445739746
    9. '_length' → logprob: -12.250258445739746
    10. ' is' → logprob: -12.625258445739746

Token 1548: '-' (ID: 12)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1213526576757431
    2. ' >' → logprob: -2.7463526725769043
    3. '-' → logprob: -2.9963526725769043
    4. '>=' → logprob: -9.496352195739746
    5. ' -' → logprob: -10.246352195739746
    6. ' >=' → logprob: -11.371352195739746
    7. '>-' → logprob: -12.371352195739746
    8. '   ' → logprob: -12.621352195739746
    9. '<' → logprob: -12.621352195739746
    10. ' <' → logprob: -12.746352195739746

Token 1549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028279969468712807
    2. '0' → logprob: -4.153279781341553
    3. '-' → logprob: -5.028279781341553
    4. ' ' → logprob: -5.403279781341553
    5. '>' → logprob: -7.028279781341553
    6. '```' → logprob: -8.528280258178711
    7. '``' → logprob: -10.903280258178711
    8. '   ' → logprob: -12.278280258178711
    9. '=' → logprob: -12.528280258178711
    10. ' -' → logprob: -13.403280258178711

Token 1550: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.875481903553009
    2. '>=' → logprob: -1.0004818439483643
    3. ' >=' → logprob: -2.2504818439483643
    4. ' in' → logprob: -3.6254818439483643
    5. ' is' → logprob: -3.7504818439483643
    6. '<len' → logprob: -4.000482082366943
    7. ' <' → logprob: -4.250482082366943
    8. ' >' → logprob: -4.500482082366943
    9. '<' → logprob: -6.125482082366943
    10. ':' → logprob: -6.375482082366943

Token 1551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023560250701848418
    2. ' ' → logprob: -8.375235557556152
    3. 'base' → logprob: -12.750235557556152
    4. '
' → logprob: -14.625235557556152
    5. ' base' → logprob: -14.750235557556152
    6. '(base' → logprob: -15.187735557556152
    7. '   ' → logprob: -15.250235557556152
    8. '1' → logprob: -15.812735557556152
    9. '>' → logprob: -16.43773651123047
    10. '=' → logprob: -16.50023651123047

Token 1552: ' else' (ID: 1203)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4302077293395996
    2. 'and' → logprob: -2.3052077293395996
    3. '           ' → logprob: -2.5552077293395996
    4. ' is' → logprob: -3.1802077293395996
    5. ':
' → logprob: -3.3052077293395996
    6. '[' → logprob: -3.3052077293395996
    7. ' else' → logprob: -3.9302077293395996
    8. 'else' → logprob: -4.6802077293396
    9. '               ' → logprob: -5.1802077293396
    10. ':' → logprob: -5.3052077293396

Token 1553: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.024837551638484
    2. ''.' → logprob: -4.524837493896484
    3. '""' → logprob: -4.774837493896484
    4. 'None' → logprob: -5.774837493896484
    5. '''.' → logprob: -6.774837493896484
    6. ''' → logprob: -8.024837493896484
    7. '''
' → logprob: -8.024837493896484
    8. '"' → logprob: -8.399837493896484
    9. ' ''' → logprob: -9.399837493896484
    10. ' None' → logprob: -11.524837493896484

Token 1554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002533452119678259
    2. ' if' → logprob: -6.377533435821533
    3. ' for' → logprob: -8.502533912658691
    4. '               ' → logprob: -8.877533912658691
    5. '
' → logprob: -9.502533912658691
    6. '```' → logprob: -10.002533912658691
    7. '            
' → logprob: -10.002533912658691
    8. ',' → logprob: -10.252533912658691
    9. 'if' → logprob: -10.252533912658691
    10. ' and' → logprob: -10.252533912658691

Token 1555: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5567708015441895
    2. ' if' → logprob: -1.0567708015441895
    3. 'if' (adapté à ' if') → logprob: -2.5567708015441895
    4. '               ' → logprob: -7.0567708015441895
    5. ' for' → logprob: -8.681770324707031
    6. 'pos' → logprob: -8.931770324707031
    7. 'adj' → logprob: -9.056770324707031
    8. ' next' → logprob: -9.556770324707031
    9. 'next' → logprob: -9.556770324707031
    10. 'for' → logprob: -9.681770324707031

Token 1556: ' above' (ID: 5151)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7366765141487122
    2. 'l' → logprob: -1.3616764545440674
    3. 'r' → logprob: -2.2366764545440674
    4. 'base' → logprob: -2.6116764545440674
    5. 'above' → logprob: -2.6116764545440674
    6. 'primary' → logprob: -5.7366766929626465
    7. ' above' → logprob: -6.3616766929626465
    8. ' len' → logprob: -6.6116766929626465
    9. '(r' → logprob: -6.8616766929626465
    10. ' base' → logprob: -7.3616766929626465

Token 1557: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0009015733376145363
    2. 'line' → logprob: -8.375901222229004
    3. 'len' → logprob: -9.125901222229004
    4. '>' → logprob: -9.250901222229004
    5. '_base' → logprob: -9.250901222229004
    6. '_' → logprob: -10.250901222229004
    7. 'base' → logprob: -10.250901222229004
    8. ' line' → logprob: -10.375901222229004
    9. ' <' → logprob: -10.375901222229004
    10. '_len' → logprob: -10.625901222229004

Token 1558: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09669476002454758
    2. '[r' → logprob: -3.0966947078704834
    3. 'and' → logprob: -4.0966949462890625
    4. '>' → logprob: -5.2216949462890625
    5. '.startswith' → logprob: -5.4716949462890625
    6. ' !=' → logprob: -5.8466949462890625
    7. '>=' → logprob: -5.9716949462890625
    8. 'r' → logprob: -6.0966949462890625
    9. '   ' → logprob: -6.3466949462890625
    10. '!=' → logprob: -6.7216949462890625

Token 1559: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09101307392120361
    2. 'len' → logprob: -3.091012954711914
    3. 'l' → logprob: -3.341012954711914
    4. ' r' → logprob: -6.216012954711914
    5. 'above' → logprob: -6.591012954711914
    6. '(r' → logprob: -6.716012954711914
    7. 'lines' → logprob: -7.591012954711914
    8. ' len' → logprob: -7.841012954711914
    9. 'primary' → logprob: -8.966012954711914
    10. '(' → logprob: -9.216012954711914

Token 1560: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014178554527461529
    2. ' +' → logprob: -4.26417875289917
    3. '<' → logprob: -12.514178276062012
    4. '==' → logprob: -13.139178276062012
    5. '+
' → logprob: -13.264178276062012
    6. ' <' → logprob: -13.639178276062012
    7. '=' → logprob: -14.264178276062012
    8. '>=' → logprob: -14.639178276062012
    9. ' +
' → logprob: -14.764178276062012
    10. '1' → logprob: -14.764178276062012

Token 1561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '
' → logprob: -16.7500057220459
    4. '=' → logprob: -16.7500057220459
    5. '```' → logprob: -16.8750057220459
    6. '0' → logprob: -17.5000057220459
    7. '+' → logprob: -17.7500057220459
    8. '[' → logprob: -18.2500057220459
    9. '   ' → logprob: -18.3750057220459
    10. '2' → logprob: -18.6250057220459

Token 1562: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.39629077911376953
    2. ' <' → logprob: -1.1462907791137695
    3. '<len' → logprob: -4.7712907791137695
    4. ']' → logprob: -8.39629077911377
    5. '<n' → logprob: -8.89629077911377
    6. ']<' → logprob: -8.89629077911377
    7. '<size' → logprob: -9.27129077911377
    8. '<=' → logprob: -9.52129077911377
    9. '+' → logprob: -9.52129077911377
    10. '<int' → logprob: -10.77129077911377

Token 1563: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.320199877838604e-07
    2. ' len' → logprob: -15.625
    3. '=len' → logprob: -16.5
    4. '(len' → logprob: -18.0
    5. 'line' → logprob: -19.375
    6. '=' → logprob: -20.625
    7. '	len' → logprob: -20.75
    8. 'length' → logprob: -20.875
    9. '   ' → logprob: -20.875
    10. 'lines' → logprob: -21.625

Token 1564: '(' (ID: 7)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.12751896679401398
    2. '(' → logprob: -2.127518892288208
    3. 'lines' → logprob: -7.627519130706787
    4. '(lines' → logprob: -9.502518653869629
    5. ' above' → logprob: -10.502518653869629
    6. '   ' → logprob: -14.002518653869629
    7. '=' → logprob: -15.877518653869629
    8. 'ab' → logprob: -15.877518653869629
    9. 'Above' → logprob: -16.002519607543945
    10. ' lines' → logprob: -16.252519607543945

Token 1565: 'above' (ID: 89414)
  Prédit: 'above'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.003273491282016039
    2. 'lines' → logprob: -5.7532734870910645
    3. ' above' → logprob: -9.378273963928223
    4. 'line' → logprob: -11.628273963928223
    5. ' lines' → logprob: -13.253273963928223
    6. '   ' → logprob: -16.503273010253906
    7. 'Above' → logprob: -16.628273010253906
    8. '`' → logprob: -16.878273010253906
    9. '(lines' → logprob: -17.003273010253906
    10. '```' → logprob: -17.378273010253906

Token 1566: '_line' (ID: 14418)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.22969231009483337
    2. 'lines' → logprob: -1.6046923398971558
    3. '(lines' → logprob: -5.979692459106445
    4. '_lines' → logprob: -7.604692459106445
    5. 'line' → logprob: -7.854692459106445
    6. '_line' → logprob: -8.604692459106445
    7. ' lines' → logprob: -8.979692459106445
    8. ' above' → logprob: -8.979692459106445
    9. ']' → logprob: -9.229692459106445
    10. ')' → logprob: -9.604692459106445

Token 1567: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009198847226798534
    2. 'and' → logprob: -5.7591986656188965
    3. '):
' → logprob: -5.7591986656188965
    4. ' and' → logprob: -5.8841986656188965
    5. '):' → logprob: -10.509199142456055
    6. ' )' → logprob: -11.259199142456055
    7. '')' → logprob: -11.384199142456055
    8. ']' → logprob: -12.259199142456055
    9. '           ' → logprob: -12.759199142456055
    10. '")' → logprob: -13.634199142456055

Token 1568: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004378378391265869
    2. ' and' → logprob: -5.504378318786621
    3. ' if' → logprob: -8.379378318786621
    4. '	           ' → logprob: -11.379378318786621
    5. 'and' → logprob: -11.754378318786621
    6. ',' → logprob: -11.879378318786621
    7. '              ' → logprob: -12.129378318786621
    8. '```' → logprob: -12.379378318786621
    9. '                   ' → logprob: -12.629378318786621
    10. 'if' → logprob: -12.754378318786621

Token 1569: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7207149863243103
    2. ' if' → logprob: -1.220715045928955
    3. '                   ' → logprob: -1.845715045928955
    4. 'ch' → logprob: -2.970715045928955
    5. 'c' → logprob: -5.470715045928955
    6. ' c' → logprob: -6.095715045928955
    7. ' ch' → logprob: -6.470715045928955
    8. '                       ' → logprob: -6.970715045928955
    9. 'token' → logprob: -9.095714569091797
    10. 'next' → logprob: -9.720714569091797

Token 1570: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.7256016135215759
    2. ''' → logprob: -0.9756016135215759
    3. ''ab' → logprob: -1.9756016731262207
    4. ' above' → logprob: -9.100601196289062
    5. ''a' → logprob: -9.850601196289062
    6. ''al' → logprob: -10.475601196289062
    7. ' '' → logprob: -10.850601196289062
    8. ''ob' → logprob: -10.850601196289062
    9. ''ex' → logprob: -11.850601196289062
    10. '   ' → logprob: -11.850601196289062

Token 1571: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -8.895480277715251e-06
    2. '_' → logprob: -13.000008583068848
    3. 'line' → logprob: -13.250008583068848
    4. '_ab' → logprob: -13.875008583068848
    5. '_LINE' → logprob: -14.375008583068848
    6. '[line' → logprob: -14.750008583068848
    7. '_lines' → logprob: -15.000008583068848
    8. '   ' → logprob: -15.125008583068848
    9. 'above' → logprob: -15.125008583068848
    10. '==' → logprob: -15.125008583068848

Token 1572: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.13388703338569e-06
    2. ' [' → logprob: -12.625009536743164
    3. '   ' → logprob: -13.375009536743164
    4. '[' → logprob: -13.500009536743164
    5. 'r' → logprob: -13.750009536743164
    6. ' ==' → logprob: -14.750009536743164
    7. '==' → logprob: -15.625009536743164
    8. '           ' → logprob: -15.750009536743164
    9. '[j' → logprob: -15.750009536743164
    10. '       ' → logprob: -15.750009536743164

Token 1573: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043187472969293594
    2. ''+' → logprob: -3.293187379837036
    3. '']' → logprob: -5.793187618255615
    4. ']' → logprob: -6.543187618255615
    5. 'r' → logprob: -8.168187141418457
    6. ''' → logprob: -8.543187141418457
    7. ' +' → logprob: -10.543187141418457
    8. ']+' → logprob: -10.668187141418457
    9. '1' → logprob: -10.918187141418457
    10. '+r' → logprob: -10.918187141418457

Token 1574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021509946964215487
    2. ' ' → logprob: -9.000215530395508
    3. '+' → logprob: -9.875215530395508
    4. '0' → logprob: -11.500215530395508
    5. '2' → logprob: -12.000215530395508
    6. ']' → logprob: -12.437715530395508
    7. '=' → logprob: -12.625215530395508
    8. '   ' → logprob: -12.687715530395508
    9. '```' → logprob: -12.875215530395508
    10. ')' → logprob: -14.000215530395508

Token 1575: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.46752867102622986
    2. ']' → logprob: -1.7175287008285522
    3. 'isdigit' → logprob: -1.8425287008285522
    4. ''].' → logprob: -3.4675285816192627
    5. '']' → logprob: -6.592528820037842
    6. '.is' → logprob: -6.717528820037842
    7. ':].' → logprob: -7.592528820037842
    8. 'in' → logprob: -8.092528343200684
    9. ' in' → logprob: -8.342528343200684
    10. '>' → logprob: -8.842528343200684

Token 1576: ' in' (ID: 306)
  Prédit: 'isdigit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.2860349416732788
    2. '.is' → logprob: -1.9110349416732788
    3. ' in' → logprob: -2.4110350608825684
    4. '>=' → logprob: -5.286035060882568
    5. '.' → logprob: -5.786035060882568
    6. 'in' → logprob: -6.661035060882568
    7. '>' → logprob: -6.661035060882568
    8. ' >=' → logprob: -8.53603458404541
    9. '```' → logprob: -9.78603458404541
    10. '   ' → logprob: -10.78603458404541

Token 1577: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010962257510982454
    2. '"' → logprob: -9.125109672546387
    3. ' '' → logprob: -15.375109672546387
    4. ''+' → logprob: -16.00010871887207
    5. '012' → logprob: -16.50010871887207
    6. '('' → logprob: -16.75010871887207
    7. ''*' → logprob: -18.75010871887207
    8. ''-' → logprob: -18.87510871887207
    9. ''"' → logprob: -19.12510871887207
    10. '
' → logprob: -19.25010871887207

Token 1578: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -3.650518920039758e-06
    2. ''' → logprob: -13.250003814697266
    3. '123' → logprob: -13.375003814697266
    4. '0' → logprob: -16.000003814697266
    5. '"' → logprob: -16.375003814697266
    6. '234' → logprob: -18.250003814697266
    7. '01' → logprob: -18.375003814697266
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.625003814697266
    9. '`' → logprob: -19.875003814697266
    10. '\'' → logprob: -20.000003814697266

Token 1579: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -1.9361264946837764e-07
    2. '3' → logprob: -16.375
    3. '789' → logprob: -19.0
    4. '012' → logprob: -19.125
    5. '9' → logprob: -19.25
    6. '456' → logprob: -19.5
    7. '34' → logprob: -20.0
    8. '346' → logprob: -20.125
    9. '356' → logprob: -20.25
    10. '349' → logprob: -20.75

Token 1580: '678' (ID: 30833)
  Prédit: '345'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -0.0001673061487963423
    2. '789' → logprob: -9.250166893005371
    3. '678' → logprob: -9.625166893005371
    4. '9' → logprob: -12.625166893005371
    5. '567' → logprob: -15.000166893005371
    6. '3' → logprob: -15.250166893005371
    7. '   ' → logprob: -15.250166893005371
    8. '456' → logprob: -15.625166893005371
    9. '012' → logprob: -15.750166893005371
    10. '"""' → logprob: -16.125167846679688

Token 1581: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '９' → logprob: -19.0
    3. '۹' → logprob: -20.125
    4. '90' → logprob: -20.75
    5. '789' → logprob: -21.875
    6. '```' → logprob: -22.125
    7. '59' → logprob: -22.5
    8. '``' → logprob: -22.625
    9. '९' → logprob: -23.125
    10. '987' → logprob: -23.125

Token 1582: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2770242393016815
    2. ''):
' → logprob: -2.152024269104004
    3. '':' → logprob: -2.277024269104004
    4. ''):' → logprob: -4.777024269104004
    5. '):
' → logprob: -5.652024269104004
    6. '):' → logprob: -5.902024269104004
    7. '012' → logprob: -6.402024269104004
    8. ''' → logprob: -6.527024269104004
    9. '+-' → logprob: -6.652024269104004
    10. '^' → logprob: -7.152024269104004

Token 1583: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23830437660217285
    2. ':
' → logprob: -1.8633043766021729
    3. ':' → logprob: -2.988304376602173
    4. '                       ' → logprob: -5.488304138183594
    5. '                           ' → logprob: -8.113304138183594
    6. ' :
' → logprob: -8.238304138183594
    7. '):
' → logprob: -8.363304138183594
    8. ' :' → logprob: -8.488304138183594
    9. ':return' → logprob: -8.613304138183594
    10. '                    ' → logprob: -8.738304138183594

Token 1584: ' pow' (ID: 9779)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.26823511719703674
    2. ':
' → logprob: -1.7682350873947144
    3. '                   ' → logprob: -3.768235206604004
    4. '
' → logprob: -4.643235206604004
    5. ' :
' → logprob: -5.018235206604004
    6. '):
' → logprob: -5.268235206604004
    7. '#' → logprob: -5.893235206604004
    8. 'digit' → logprob: -6.143235206604004
    9. ':' → logprob: -6.268235206604004
    10. '^' → logprob: -6.893235206604004

Token 1585: '_digit' (ID: 119592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.148937463760376
    2. '_expr' → logprob: -1.273937463760376
    3. '_cell' → logprob: -1.773937463760376
    4. 'expr' → logprob: -2.398937463760376
    5. '_val' → logprob: -3.273937463760376
    6. '(
' → logprob: -3.773937463760376
    7. '_cells' → logprob: -4.273937225341797
    8. '_' → logprob: -4.398937225341797
    9. 'cell' → logprob: -4.523937225341797
    10. 'ex' → logprob: -5.148937225341797

Token 1586: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327231526374817
    2. '=' → logprob: -0.7577231526374817
    3. '_cell' → logprob: -9.882722854614258
    4. '   ' → logprob: -11.132722854614258
    5. 'cell' → logprob: -11.507722854614258
    6. ')' → logprob: -11.632722854614258
    7. '_char' → logprob: -12.007722854614258
    8. '_val' → logprob: -12.132722854614258
    9. ',' → logprob: -12.507722854614258
    10. ' ' → logprob: -13.007722854614258

Token 1587: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.004189994651824236
    2. ' above' → logprob: -6.129189968109131
    3. 'int' → logprob: -6.254189968109131
    4. 'lines' → logprob: -10.129190444946289
    5. ' int' → logprob: -11.254190444946289
    6. '   ' → logprob: -11.629190444946289
    7. '(' → logprob: -12.754190444946289
    8. 'ab' → logprob: -13.004190444946289
    9. ' lines' → logprob: -13.129190444946289
    10. ' ' → logprob: -13.254190444946289

Token 1588: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.007985608652234077
    2. '(' → logprob: -6.757985591888428
    3. 'line' → logprob: -7.007985591888428
    4. '_' → logprob: -7.007985591888428
    5. '('' → logprob: -7.382985591888428
    6. '_lines' → logprob: -7.507985591888428
    7. '()' → logprob: -7.632985591888428
    8. '_ab' → logprob: -8.007986068725586
    9. ''' → logprob: -8.132986068725586
    10. ')' → logprob: -8.257986068725586

Token 1589: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.512236498361744e-07
    2. 'r' → logprob: -15.625000953674316
    3. '   ' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.5
    5. '[' → logprob: -16.75
    6. ',r' → logprob: -17.125
    7. '(r' → logprob: -17.5
    8. '[l' → logprob: -18.0
    9. '       ' → logprob: -18.375
    10. ' r' → logprob: -18.5

Token 1590: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012422556756064296
    2. '1' → logprob: -6.751242160797119
    3. ' +' → logprob: -10.626242637634277
    4. '<|end|>' → logprob: -11.126242637634277
    5. '+
' → logprob: -11.251242637634277
    6. '[' → logprob: -12.251242637634277
    7. '<|end|>' → logprob: -12.376242637634277
    8. '2' → logprob: -13.376242637634277
    9. ''+' → logprob: -13.751242637634277
    10. 'Next' → logprob: -13.751242637634277

Token 1591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018878262490034103
    2. '2' → logprob: -6.376887798309326
    3. '+' → logprob: -8.751888275146484
    4. ' ' → logprob: -10.876888275146484
    5. '```' → logprob: -12.126888275146484
    6. '   ' → logprob: -14.126888275146484
    7. ''+' → logprob: -15.251888275146484
    8. ''s' → logprob: -15.439388275146484
    9. '0' → logprob: -15.439388275146484
    10. ''' → logprob: -15.564388275146484

Token 1592: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10908447951078415
    2. '']' → logprob: -2.484084367752075
    3. '<|end|>' → logprob: -4.359084606170654
    4. ')' → logprob: -5.734084606170654
    5. '<|end|>' → logprob: -6.859084606170654
    6. ')]' → logprob: -6.984084606170654
    7. '])' → logprob: -7.859084606170654
    8. ']
' → logprob: -7.984084606170654
    9. '')' → logprob: -8.359084129333496
    10. '"]' → logprob: -8.484084129333496

Token 1593: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003802215214818716
    2. '                       ' → logprob: -6.253802299499512
    3. ':' → logprob: -7.003802299499512
    4. '               ' → logprob: -7.878802299499512
    5. '.' → logprob: -8.503802299499512
    6. '                    ' → logprob: -9.503802299499512
    7. ':
' → logprob: -9.878802299499512
    8. '#' → logprob: -10.253802299499512
    9. '                    
' → logprob: -10.503802299499512
    10. ')' → logprob: -10.628802299499512

Token 1594: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34637874364852905
    2. '                       ' → logprob: -1.8463788032531738
    3. ':
' → logprob: -2.971378803253174
    4. ':' → logprob: -3.721378803253174
    5. 'return' → logprob: -4.346378803253174
    6. '
' → logprob: -4.846378803253174
    7. ' return' → logprob: -5.471378803253174
    8. '#' (adapté à ' #') → logprob: -5.471378803253174
    9. '):' → logprob: -5.721378803253174
    10. '):
' → logprob: -5.721378803253174

Token 1595: ' Make' (ID: 9393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6971443295478821
    2. '                   ' → logprob: -1.3221442699432373
    3. 'class' → logprob: -2.5721442699432373
    4. '                       ' → logprob: -3.1971442699432373
    5. ' return' → logprob: -3.5721442699432373
    6. '#' → logprob: -3.8221442699432373
    7. 'cell' → logprob: -4.322144508361816
    8. 'pow' → logprob: -4.322144508361816
    9. '               ' → logprob: -4.822144508361816
    10. '
' → logprob: -5.322144508361816

Token 1596: ' pow' (ID: 9779)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -1.0093306303024292
    2. 'pow' → logprob: -1.8843306303024292
    3. ' Fraction' → logprob: -2.1343307495117188
    4. 'def' → logprob: -2.3843307495117188
    5. ' pow' → logprob: -2.7593307495117188
    6. 'class' → logprob: -3.0093307495117188
    7. ' fraction' → logprob: -3.5093307495117188
    8. ' class' → logprob: -4.009330749511719
    9. 'Cell' → logprob: -4.009330749511719
    10. ' def' → logprob: -4.259330749511719

Token 1597: 'expr' (ID: 21343)
  Prédit: '_cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.26164156198501587
    2. '_digit' → logprob: -2.761641502380371
    3. '_expr' → logprob: -3.386641502380371
    4. '_Cell' → logprob: -3.636641502380371
    5. '(
' → logprob: -4.011641502380371
    6. ')' → logprob: -4.136641502380371
    7. '(' → logprob: -4.511641502380371
    8. '_' → logprob: -4.636641502380371
    9. 'Cell' → logprob: -5.011641502380371
    10. '<Cell' → logprob: -5.136641502380371

Token 1598: ' cell' (ID: 4206)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24481810629367828
    2. '
' → logprob: -1.994818091392517
    3. ',' → logprob: -3.3698182106018066
    4. '                       ' → logprob: -4.119818210601807
    5. ':
' → logprob: -4.744818210601807
    6. ' =' → logprob: -5.494818210601807
    7. '                    
' → logprob: -5.494818210601807
    8. ',
' → logprob: -6.369818210601807
    9. '                        
' → logprob: -6.494818210601807
    10. '               ' → logprob: -6.619818210601807

Token 1599: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025830034166574478
    2. '
' → logprob: -4.650830268859863
    3. 'class' → logprob: -5.025830268859863
    4. '                       ' → logprob: -5.525830268859863
    5. ',' → logprob: -6.525830268859863
    6. '                    
' → logprob: -6.775830268859863
    7. ' =' → logprob: -7.650830268859863
    8. ':
' → logprob: -7.650830268859863
    9. ':' → logprob: -8.150830268859863
    10. '               ' → logprob: -8.650830268859863

Token 1600: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030607083812355995
    2. '                       ' → logprob: -3.905606985092163
    3. ' =' → logprob: -5.405607223510742
    4. ':' → logprob: -5.905607223510742
    5. ':
' → logprob: -7.530607223510742
    6. ',' → logprob: -7.655607223510742
    7. '               ' → logprob: -7.780607223510742
    8. '(
' → logprob: -8.155607223510742
    9. '                    ' → logprob: -8.530607223510742
    10. '                           ' → logprob: -8.780607223510742

Token 1601: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' (adapté à ' class') → logprob: -0.49733853340148926
    2. ' class' → logprob: -1.7473385334014893
    3. '                   ' → logprob: -1.8723385334014893
    4. '                       ' → logprob: -2.8723385334014893
    5. 'return' → logprob: -6.37233829498291
    6. '
' → logprob: -6.62233829498291
    7. ' return' → logprob: -6.62233829498291
    8. '               ' → logprob: -6.99733829498291
    9. 'pow' → logprob: -7.87233829498291
    10. '                    ' → logprob: -8.24733829498291

Token 1602: ' Pow' (ID: 33663)
  Prédit: ' Pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pow' → logprob: -0.17470833659172058
    2. 'Pow' → logprob: -1.924708366394043
    3. ' Power' → logprob: -4.424708366394043
    4. 'Power' → logprob: -6.049708366394043
    5. '_pow' → logprob: -11.174708366394043
    6. ' Powder' → logprob: -11.674708366394043
    7. 'Exponent' → logprob: -11.799708366394043
    8. '_P' → logprob: -11.924708366394043
    9. 'pow' → logprob: -12.549708366394043
    10. ' pow' → logprob: -14.674708366394043

Token 1603: 'Expr' (ID: 21037)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.010010345838963985
    2. 'C' → logprob: -4.635010242462158
    3. '(Cell' → logprob: -9.510010719299316
    4. 'e' → logprob: -9.635010719299316
    5. '_Cell' → logprob: -10.635010719299316
    6. '(C' → logprob: -10.635010719299316
    7. '<Cell' → logprob: -10.635010719299316
    8. '_cell' → logprob: -11.635010719299316
    9. 'E' → logprob: -11.885010719299316
    10. '_C' → logprob: -12.385010719299316

Token 1604: 'Cell' (ID: 5346)
  Prédit: 'Cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.04542948678135872
    2. '(Cell' → logprob: -3.2954294681549072
    3. '(' → logprob: -5.045429706573486
    4. ':' → logprob: -7.795429706573486
    5. '(C' → logprob: -8.295429229736328
    6. 'Cel' → logprob: -9.420429229736328
    7. '<Cell' → logprob: -9.670429229736328
    8. '(
' → logprob: -10.420429229736328
    9. 'C' → logprob: -10.920429229736328
    10. '_Cell' → logprob: -11.170429229736328

Token 1605: '(Cell' (ID: 150981)
  Prédit: '(Cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Cell' → logprob: -8.685467764735222e-05
    2. '(' → logprob: -9.875086784362793
    3. ':' → logprob: -11.125086784362793
    4. '<Cell' → logprob: -12.250086784362793
    5. '(cell' → logprob: -12.375086784362793
    6. ' (' → logprob: -12.500086784362793
    7. 'Cell' → logprob: -12.750086784362793
    8. '(P' → logprob: -13.000086784362793
    9. '(C' → logprob: -14.250086784362793
    10. ' Cell' → logprob: -15.250086784362793

Token 1606: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5413638949394226
    2. '):' → logprob: -0.9163638949394226
    3. ':' → logprob: -4.916363716125488
    4. ':
' → logprob: -5.416363716125488
    5. '   ' → logprob: -6.041363716125488
    6. '):
' → logprob: -6.416363716125488
    7. '       ' → logprob: -6.916363716125488
    8. '(Cell' → logprob: -7.541363716125488
    9. ',' → logprob: -8.166363716125488
    10. '<Cell' → logprob: -8.666363716125488

Token 1607: '                       ' (ID: 968)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18292991816997528
    2. '           ' → logprob: -3.4329299926757812
    3. '	       ' → logprob: -3.5579299926757812
    4. '   ' → logprob: -3.8079299926757812
    5. '	' → logprob: -3.9329299926757812
    6. '               ' → logprob: -4.057929992675781
    7. '	                   ' → logprob: -4.682929992675781
    8. '	   ' → logprob: -5.307929992675781
    9. '	           ' → logprob: -5.557929992675781
    10. '                       ' → logprob: -5.682929992675781

Token 1608: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.1694759577512741
    2. ' __' → logprob: -3.16947603225708
    3. '   ' → logprob: -3.66947603225708
    4. '                       ' → logprob: -3.91947603225708
    5. '	' → logprob: -4.04447603225708
    6. '                           ' → logprob: -4.79447603225708
    7. '           ' → logprob: -4.91947603225708
    8. 'def' → logprob: -5.29447603225708
    9. '                               ' → logprob: -5.66947603225708
    10. '                   ' → logprob: -6.04447603225708

Token 1609: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: 0.0
    2. '_slots' → logprob: -18.0
    3. ' slots' → logprob: -18.75
    4. 'slot' → logprob: -19.375
    5. 'tokens' → logprob: -21.125
    6. 'class' → logprob: -21.25
    7. '```' → logprob: -21.25
    8. 'sl' → logprob: -21.25
    9. '
' → logprob: -21.5
    10. 'spots' → logprob: -22.25

Token 1610: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023355303332209587
    2. ' =' → logprob: -3.89835524559021
    3. '__' → logprob: -6.523355484008789
    4. '=['' → logprob: -6.648355484008789
    5. '['' → logprob: -11.398355484008789
    6. '[]' → logprob: -12.148355484008789
    7. '<|end|>' → logprob: -12.523355484008789
    8. ':' → logprob: -12.773355484008789
    9. '+=' → logprob: -13.023355484008789
    10. '____' → logprob: -13.148355484008789

Token 1611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009148012613877654
    2. '=['' → logprob: -7.125914573669434
    3. ' =' → logprob: -9.375914573669434
    4. '['' → logprob: -10.625914573669434
    5. '+=' → logprob: -14.125914573669434
    6. '=["' → logprob: -16.37591552734375
    7. '(['' → logprob: -16.75091552734375
    8. '__' → logprob: -16.75091552734375
    9. '=
' → logprob: -16.75091552734375
    10. '=[]' → logprob: -17.25091552734375

Token 1612: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -5.319370302458992e-06
    2. ' ['' → logprob: -13.000005722045898
    3. '('' → logprob: -14.000005722045898
    4. ''d' → logprob: -14.000005722045898
    5. ''' → logprob: -14.500005722045898
    6. '[' → logprob: -14.750005722045898
    7. '["' → logprob: -15.500005722045898
    8. '['_' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.5000057220459
    10. ''s' → logprob: -17.2500057220459

Token 1613: 'primary' (ID: 11289)
  Prédit: 'primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.5256545543670654
    2. 'base' → logprob: -0.9006545543670654
    3. 'pow' → logprob: -6.6506547927856445
    4. 'power' → logprob: -7.1506547927856445
    5. 'child' → logprob: -8.650654792785645
    6. 'exp' → logprob: -9.650654792785645
    7. 'ex' → logprob: -10.275654792785645
    8. 'expr' → logprob: -10.650654792785645
    9. 'parent' → logprob: -11.025654792785645
    10. 'cell' → logprob: -11.150654792785645

Token 1614: '',' (ID: 787)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.030078010633587837
    2. '',' → logprob: -3.5300779342651367
    3. '']' → logprob: -8.530077934265137
    4. ','' → logprob: -10.030077934265137
    5. ',' → logprob: -10.780077934265137
    6. '',
' → logprob: -11.280077934265137
    7. ''' → logprob: -11.655077934265137
    8. '',"' → logprob: -11.780077934265137
    9. '']
' → logprob: -12.280077934265137
    10. ' ','' → logprob: -12.655077934265137

Token 1615: ' '' (ID: 461)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.8551831245422363
    2. ''' → logprob: -1.4801831245422363
    3. 'pow' → logprob: -1.6051831245422363
    4. ''s' → logprob: -2.9801831245422363
    5. ''d' → logprob: -3.1051831245422363
    6. ''exp' → logprob: -4.230183124542236
    7. ' '' → logprob: -4.605183124542236
    8. 'power' → logprob: -5.480183124542236
    9. ''t' → logprob: -5.480183124542236
    10. ''value' → logprob: -5.730183124542236

Token 1616: 'digit' (ID: 78327)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1588847041130066
    2. 'ex' → logprob: -2.2838847637176514
    3. 'power' → logprob: -3.7838847637176514
    4. 'exp' → logprob: -3.9088847637176514
    5. 'digit' → logprob: -6.408884525299072
    6. 'expo' → logprob: -7.658884525299072
    7. 'sup' → logprob: -10.53388500213623
    8. '_pow' → logprob: -10.78388500213623
    9. ' pow' → logprob: -11.53388500213623
    10. ' exponent' → logprob: -12.15888500213623

Token 1617: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.43105626106262207
    2. '']
' → logprob: -1.056056261062622
    3. '',' → logprob: -6.681056022644043
    4. '']:
' → logprob: -7.931056022644043
    5. '','' → logprob: -8.806056022644043
    6. ']' → logprob: -8.931056022644043
    7. '   ' → logprob: -9.056056022644043
    8. '']

' → logprob: -9.306056022644043
    9. '']
' → logprob: -10.181056022644043
    10. ''' → logprob: -10.431056022644043

Token 1618: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12173374742269516
    2. '                           ' → logprob: -2.6217336654663086
    3. '                        
' → logprob: -3.9967336654663086
    4. '                        ' → logprob: -4.246733665466309
    5. '                            
' → logprob: -6.621733665466309
    6. '                               ' → logprob: -6.746733665466309
    7. '                   ' → logprob: -6.996733665466309
    8. '	                       ' → logprob: -7.121733665466309
    9. ',' → logprob: -7.246733665466309
    10. '                            ' → logprob: -7.371733665466309

Token 1619: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.36106276512145996
    2. 'def' (adapté à ' def') → logprob: -1.98606276512146
    3. '                       ' → logprob: -2.61106276512146
    4. '   ' → logprob: -3.23606276512146
    5. '                           ' → logprob: -3.86106276512146
    6. '                        ' → logprob: -4.736063003540039
    7. '[' → logprob: -5.986063003540039
    8. '       ' → logprob: -6.111063003540039
    9. '           ' → logprob: -6.236063003540039
    10. '                   ' → logprob: -6.361063003540039

Token 1620: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.160626620054245
    2. ' __' → logprob: -1.9106266498565674
    3. '_init' → logprob: -8.035626411437988
    4. 'init' → logprob: -9.535626411437988
    5. '```' → logprob: -12.660626411437988
    6. '___' → logprob: -13.285626411437988
    7. ' init' → logprob: -14.410626411437988
    8. '____' → logprob: -14.910626411437988
    9. '   ' → logprob: -16.035627365112305
    10. 'def' → logprob: -16.160627365112305

Token 1621: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'slots' → logprob: -18.875
    3. ' init' → logprob: -19.0
    4. '_init' → logprob: -19.75
    5. 'repr' → logprob: -20.75
    6. 'def' → logprob: -22.25
    7. '.init' → logprob: -23.0
    8. '__' → logprob: -23.25
    9. '```' → logprob: -23.25
    10. '	init' → logprob: -24.0

Token 1622: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04358994960784912
    2. '(self' → logprob: -3.1685900688171387
    3. '__' → logprob: -8.66858959197998
    4. '(' → logprob: -8.91858959197998
    5. ',' → logprob: -9.16858959197998
    6. 'self' → logprob: -9.41858959197998
    7. '_(' → logprob: -9.79358959197998
    8. '__(
' → logprob: -11.04358959197998
    9. '__((' → logprob: -11.41858959197998
    10. ' (' → logprob: -11.91858959197998

Token 1623: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.282920129597187e-05
    2. ' self' → logprob: -11.625012397766113
    3. '(self' → logprob: -13.250012397766113
    4. ',' → logprob: -13.625012397766113
    5. '           ' → logprob: -14.750012397766113
    6. '       ' → logprob: -15.250012397766113
    7. ',self' → logprob: -15.875012397766113
    8. '               ' → logprob: -16.37501335144043
    9. 'primary' → logprob: -16.87501335144043
    10. '                   ' → logprob: -17.75001335144043

Token 1624: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02884763665497303
    2. ',' → logprob: -3.7788476943969727
    3. '(' → logprob: -5.278847694396973
    4. ' (' → logprob: -8.153847694396973
    5. '__(' → logprob: -9.153847694396973
    6. 'self' → logprob: -9.778847694396973
    7. ',self' → logprob: -10.278847694396973
    8. ',(' → logprob: -13.778847694396973
    9. '__,' → logprob: -14.278847694396973
    10. '__' → logprob: -15.028847694396973

Token 1625: ' primary' (ID: 9107)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.001995250815525651
    2. ' primary' → logprob: -6.251995086669922
    3. 'self' → logprob: -9.626995086669922
    4. 'prim' → logprob: -15.126995086669922
    5. '(primary' → logprob: -16.001995086669922
    6. '.primary' → logprob: -16.626995086669922
    7. ' self' → logprob: -16.876995086669922
    8. 'parent' → logprob: -17.501995086669922
    9. '           ' → logprob: -17.751995086669922
    10. 'principal' → logprob: -17.876995086669922

Token 1626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044783088378608227
    2. ' ,' → logprob: -8.250448226928711
    3. ',d' → logprob: -9.250448226928711
    4. ',self' → logprob: -10.375448226928711
    5. ',p' → logprob: -10.875448226928711
    6. '(primary' → logprob: -11.500448226928711
    7. 'self' → logprob: -12.250448226928711
    8. ',
' → logprob: -12.375448226928711
    9. 'primary' → logprob: -12.625448226928711
    10. ',data' → logprob: -12.875448226928711

Token 1627: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.3494243919849396
    2. ' digit' → logprob: -1.2244243621826172
    3. 'pow' → logprob: -7.349424362182617
    4. '                           ' → logprob: -9.849424362182617
    5. '                        ' → logprob: -9.849424362182617
    6. '                            ' → logprob: -10.224424362182617
    7. ' pow' → logprob: -10.224424362182617
    8. '                    ' → logprob: -10.349424362182617
    9. '                       ' → logprob: -10.474424362182617
    10. '_digit' → logprob: -10.974424362182617

Token 1628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046498957090079784
    2. '):
' → logprob: -5.504650115966797
    3. ',d' → logprob: -8.254650115966797
    4. '                           ' → logprob: -9.004650115966797
    5. ' ,' → logprob: -9.504650115966797
    6. '):' → logprob: -10.004650115966797
    7. ',
' → logprob: -11.629650115966797
    8. ',self' → logprob: -11.879650115966797
    9. '                       ' → logprob: -12.129650115966797
    10. ',p' → logprob: -12.129650115966797

Token 1629: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5231773257255554
    2. 'base' → logprob: -0.8981773257255554
    3. 'primary' → logprob: -11.023177146911621
    4. '           ' → logprob: -11.398177146911621
    5. ' ' → logprob: -12.273177146911621
    6. '       ' → logprob: -12.648177146911621
    7. 'parent' → logprob: -13.023177146911621
    8. '   ' → logprob: -13.273177146911621
    9. '               ' → logprob: -13.273177146911621
    10. '     ' → logprob: -13.398177146911621

Token 1630: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5272029638290405
    2. '_line' → logprob: -1.0272029638290405
    3. '):' → logprob: -3.02720308303833
    4. '_' → logprob: -6.02720308303833
    5. '=' → logprob: -7.90220308303833
    6. '):
' → logprob: -8.777202606201172
    7. 'line' → logprob: -10.277202606201172
    8. '_Line' → logprob: -10.277202606201172
    9. 'Line' → logprob: -10.402202606201172
    10. '```' → logprob: -10.527202606201172

Token 1631: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.012271931394934654
    2. '                            ' → logprob: -5.387271881103516
    3. ',' → logprob: -5.637271881103516
    4. '                               ' → logprob: -6.387271881103516
    5. '           ' → logprob: -7.512271881103516
    6. '                        ' → logprob: -8.512271881103516
    7. 'self' → logprob: -8.637271881103516
    8. ' ' → logprob: -8.637271881103516
    9. '                            
' → logprob: -8.637271881103516
    10. '```' → logprob: -8.637271881103516

Token 1632: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10624765604734421
    2. ' self' → logprob: -2.356247663497925
    3. '	self' → logprob: -5.231247425079346
    4. '                               ' → logprob: -8.481247901916504
    5. ' ' → logprob: -9.481247901916504
    6. '           ' → logprob: -9.606247901916504
    7. ' ' → logprob: -9.856247901916504
    8. '                           ' → logprob: -9.856247901916504
    9. '   ' → logprob: -10.106247901916504
    10. '               ' → logprob: -10.356247901916504

Token 1633: '.primary' (ID: 60603)
  Prédit: ' primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primary' → logprob: -0.08091645687818527
    2. 'primary' → logprob: -2.580916404724121
    3. '.primary' → logprob: -6.205916404724121
    4. ' base' → logprob: -13.080916404724121
    5. '_primary' → logprob: -13.080916404724121
    6. ' data' → logprob: -13.830916404724121
    7. '.' → logprob: -14.955916404724121
    8. '(primary' → logprob: -15.080916404724121
    9. 'base' → logprob: -15.455916404724121
    10. ' ' → logprob: -15.455916404724121

Token 1634: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31338369846343994
    2. ' =' → logprob: -1.31338369846344
    3. ',' → logprob: -10.438384056091309
    4. '<|end|>' → logprob: -10.563384056091309
    5. ' ' → logprob: -10.938384056091309
    6. '.' → logprob: -11.063384056091309
    7. ')' → logprob: -11.313384056091309
    8. '_' → logprob: -11.563384056091309
    9. '    ' → logprob: -13.063384056091309
    10. '   ' → logprob: -13.813384056091309

Token 1635: ' primary' (ID: 9107)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.00861456897109747
    2. ' primary' → logprob: -4.758614540100098
    3. 'secondary' → logprob: -17.383615493774414
    4. '(primary' → logprob: -17.758615493774414
    5. '.primary' → logprob: -19.383615493774414
    6. '_primary' → logprob: -21.008615493774414
    7. ' ' → logprob: -21.633615493774414
    8. ' ' → logprob: -21.758615493774414
    9. 'principal' → logprob: -21.883615493774414
    10. 'prim' → logprob: -22.008615493774414

Token 1636: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.024748703464865685
    2. '<|end|>' → logprob: -4.524748802185059
    3. '
' → logprob: -5.399748802185059
    4. '           ' → logprob: -5.899748802185059
    5. '                            ' → logprob: -6.274748802185059
    6. '                               ' → logprob: -6.774748802185059
    7. ',' → logprob: -7.399748802185059
    8. '                            
' → logprob: -7.524748802185059
    9. 'self' → logprob: -7.899748802185059
    10. '                       ' → logprob: -8.024748802185059

Token 1637: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007800506893545389
    2. '                            ' → logprob: -5.007800579071045
    3. '                               ' → logprob: -8.007800102233887
    4. '                            
' → logprob: -8.132800102233887
    5. '<|end|>' → logprob: -9.132800102233887
    6. '           ' → logprob: -9.632800102233887
    7. '                             ' → logprob: -10.007800102233887
    8. '                       ' → logprob: -10.132800102233887
    9. ',' → logprob: -10.507800102233887
    10. '                        ' → logprob: -10.507800102233887

Token 1638: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01169488113373518
    2. '                           ' → logprob: -4.51169490814209
    3. ' self' → logprob: -8.01169490814209
    4. '           ' → logprob: -8.63669490814209
    5. '                               ' → logprob: -9.51169490814209
    6. '                       ' → logprob: -11.01169490814209
    7. '   ' → logprob: -11.26169490814209
    8. '       ' → logprob: -11.51169490814209
    9. 'base' → logprob: -12.01169490814209
    10. '                   ' → logprob: -12.26169490814209

Token 1639: '.d' (ID: 1380)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.14527177810668945
    2. '.base' → logprob: -2.1452717781066895
    3. ' base' → logprob: -4.0202717781066895
    4. '	base' → logprob: -9.145271301269531
    5. '_base' → logprob: -9.145271301269531
    6. ' ' → logprob: -12.145271301269531
    7. '(base' → logprob: -12.895271301269531
    8. ';base' → logprob: -13.145271301269531
    9. '.' → logprob: -13.395271301269531
    10. '   ' → logprob: -13.645271301269531

Token 1640: 'igit' (ID: 16673)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.08657034486532211
    2. 'igit' → logprob: -3.3365702629089355
    3. 'ata' → logprob: -3.9615702629089355
    4. '_base' → logprob: -3.9615702629089355
    5. 'ef' → logprob: -5.5865702629089355
    6. '   ' → logprob: -6.9615702629089355
    7. 'igits' → logprob: -7.3365702629089355
    8. 'ase' → logprob: -7.4615702629089355
    9. 'abase' → logprob: -8.086570739746094
    10. '(base' → logprob: -8.086570739746094

Token 1641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22039362788200378
    2. '<|end|>' → logprob: -2.345393657684326
    3. ' =' → logprob: -2.970393657684326
    4. '                           ' → logprob: -3.595393657684326
    5. ',' → logprob: -4.595393657684326
    6. ')' → logprob: -5.220393657684326
    7. '<|end|>' → logprob: -6.220393657684326
    8. '.' → logprob: -7.345393657684326
    9. '                            ' → logprob: -7.595393657684326
    10. '                       ' → logprob: -7.595393657684326

Token 1642: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.004844003822654486
    2. ' digit' → logprob: -5.3798441886901855
    3. 'pow' → logprob: -8.504843711853027
    4. 'int' → logprob: -11.004843711853027
    5. '   ' → logprob: -13.254843711853027
    6. ' ' → logprob: -14.504843711853027
    7. ' int' → logprob: -14.879843711853027
    8. ' pow' → logprob: -14.879843711853027
    9. 'digits' → logprob: -15.379843711853027
    10. '     ' → logprob: -15.379843711853027

Token 1643: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1644: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.20868216454982758
    2. '<|end|>' → logprob: -2.208682060241699
    3. '                            
' → logprob: -3.583682060241699
    4. '
' → logprob: -3.833682060241699
    5. '           ' → logprob: -5.083682060241699
    6. ' 
' → logprob: -5.583682060241699
    7. '                        
' → logprob: -5.708682060241699
    8. '                            ' → logprob: -6.083682060241699
    9. ')' → logprob: -6.083682060241699
    10. '\' → logprob: -6.208682060241699

Token 1645: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16476866602897644
    2. '                           ' → logprob: -2.039768695831299
    3. ' self' → logprob: -4.039768695831299
    4. '           ' → logprob: -5.914768695831299
    5. '                               ' → logprob: -6.664768695831299
    6. '   ' → logprob: -9.66476821899414
    7. '                   ' → logprob: -10.16476821899414
    8. '               ' → logprob: -10.41476821899414
    9. '                       ' → logprob: -10.66476821899414
    10. '                                   ' → logprob: -10.66476821899414

Token 1646: '.base' (ID: 15523)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.1350875347852707
    2. ' base' → logprob: -2.260087490081787
    3. '.base' → logprob: -5.010087490081787
    4. ' =' → logprob: -5.385087490081787
    5. '_base' → logprob: -5.760087490081787
    6. '<|end|>' → logprob: -6.260087490081787
    7. '	base' → logprob: -6.760087490081787
    8. ')' → logprob: -6.885087490081787
    9. '=' → logprob: -6.885087490081787
    10. ' ' → logprob: -7.260087490081787

Token 1647: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.09026038646698
    2. '=' → logprob: -1.09026038646698
    3. ')' → logprob: -1.96526038646698
    4. ' +' → logprob: -2.5902605056762695
    5. '_line' → logprob: -2.9652605056762695
    6. ' =' → logprob: -3.2152605056762695
    7. '<|end|>' → logprob: -4.7152605056762695
    8. '_' → logprob: -5.4652605056762695
    9. '=line' → logprob: -6.2152605056762695
    10. 'line' → logprob: -6.8402605056762695

Token 1648: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.38703981041908264
    2. ' base' → logprob: -1.1370397806167603
    3. 'primary' → logprob: -8.887040138244629
    4. ' primary' → logprob: -10.637040138244629
    5. '(base' → logprob: -13.137040138244629
    6. 'self' → logprob: -14.012040138244629
    7. '	base' → logprob: -14.262040138244629
    8. '                               ' → logprob: -14.637040138244629
    9. '                           ' → logprob: -14.762040138244629
    10. '_base' → logprob: -14.887040138244629

Token 1649: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1650: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.02276434190571308
    2. '           ' → logprob: -4.647764205932617
    3. '
' → logprob: -5.022764205932617
    4. '                            
' → logprob: -6.147764205932617
    5. 'return' → logprob: -7.147764205932617
    6. '                               ' → logprob: -7.147764205932617
    7. '                   ' → logprob: -7.897764205932617
    8. '                       ' → logprob: -7.897764205932617
    9. ' 
' → logprob: -8.147764205932617
    10. '               ' → logprob: -8.397764205932617

Token 1651: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.8022912740707397
    2. '                           ' → logprob: -2.0522913932800293
    3. '               ' → logprob: -2.1772913932800293
    4. '           ' → logprob: -2.1772913932800293
    5. '                       ' → logprob: -2.4272913932800293
    6. '                   ' → logprob: -2.8022913932800293
    7. ' def' → logprob: -4.177291393280029
    8. '       ' → logprob: -4.302291393280029
    9. '   ' → logprob: -4.677291393280029
    10. '
' → logprob: -6.052291393280029

Token 1652: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004882550332695246
    2. ' __' → logprob: -5.504882335662842
    3. 'repr' → logprob: -7.254882335662842
    4. '_repr' → logprob: -9.2548828125
    5. ' repr' → logprob: -13.5048828125
    6. '_rep' → logprob: -16.5048828125
    7. '.__' → logprob: -17.3798828125
    8. '___' → logprob: -17.7548828125
    9. ' ' → logprob: -17.8798828125
    10. '_re' → logprob: -18.6298828125

Token 1653: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: 0.0
    2. 'str' → logprob: -18.5
    3. '_repr' → logprob: -19.375
    4. 'rep' → logprob: -19.625
    5. ' repr' → logprob: -21.875
    6. 'init' → logprob: -23.5
    7. 'class' → logprob: -24.0
    8. '...' → logprob: -24.375
    9. '```' → logprob: -25.125
    10. 'module' → logprob: -25.125

Token 1654: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038464635610580444
    2. '__' → logprob: -3.6634645462036133
    3. '(self' → logprob: -4.538464546203613
    4. '__(
' → logprob: -6.788464546203613
    5. '(' → logprob: -8.663464546203613
    6. '__("' → logprob: -9.913464546203613
    7. '__('' → logprob: -10.538464546203613
    8. '__((' → logprob: -11.538464546203613
    9. '__[' → logprob: -11.913464546203613
    10. 'self' → logprob: -13.538464546203613

Token 1655: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029760558158159256
    2. 'f' → logprob: -3.5297605991363525
    3. ' self' → logprob: -12.029760360717773
    4. ')' → logprob: -13.279760360717773
    5. ' f' → logprob: -14.029760360717773
    6. '(self' → logprob: -15.029760360717773
    7. '           ' → logprob: -15.154760360717773
    8. 's' → logprob: -15.279760360717773
    9. 'lambda' → logprob: -15.279760360717773
    10. '       ' → logprob: -15.654760360717773

Token 1656: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.7437746524810791
    2. '__' → logprob: -1.243774652481079
    3. '(self' → logprob: -1.493774652481079
    4. 'self' → logprob: -5.2437744140625
    5. '__(
' → logprob: -6.3687744140625
    6. '               ' → logprob: -6.4937744140625
    7. '):
' → logprob: -7.2437744140625
    8. '__("' → logprob: -7.3687744140625
    9. '(' → logprob: -7.4937744140625
    10. '           ' → logprob: -8.2437744140625

Token 1657: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3956625461578369
    2. 'return' → logprob: -2.145662546157837
    3. ' return' → logprob: -2.520662546157837
    4. '                       ' → logprob: -3.145662546157837
    5. ' f' → logprob: -4.020662307739258
    6. '           ' → logprob: -4.020662307739258
    7. 'f' → logprob: -4.395662307739258
    8. '(f' → logprob: -4.645662307739258
    9. '                               ' → logprob: -4.645662307739258
    10. '                   ' → logprob: -5.395662307739258

Token 1658: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06274934113025665
    2. 'f' → logprob: -2.8127493858337402
    3. ' return' → logprob: -7.56274938583374
    4. ' f' → logprob: -8.312748908996582
    5. '                           ' → logprob: -11.812748908996582
    6. '           ' → logprob: -12.562748908996582
    7. '                       ' → logprob: -13.062748908996582
    8. '                               ' → logprob: -13.812748908996582
    9. '                   ' → logprob: -14.312748908996582
    10. '   ' → logprob: -14.562748908996582

Token 1659: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.575941264629364
    2. ' f' → logprob: -0.825941264629364
    3. 'F' → logprob: -13.32594108581543
    4. '(f' → logprob: -15.95094108581543
    5. '	f' → logprob: -17.07594108581543
    6. ' F' → logprob: -17.07594108581543
    7. 'self' → logprob: -17.57594108581543
    8. '           ' → logprob: -17.95094108581543
    9. '"' → logprob: -18.20094108581543
    10. ' ' → logprob: -18.45094108581543

Token 1660: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10306476056575775
    2. 'Pow' → logprob: -2.603064775466919
    3. '"' → logprob: -3.978064775466919
    4. '(f' → logprob: -5.47806453704834
    5. '(P' → logprob: -8.35306453704834
    6. ' Pow' → logprob: -8.72806453704834
    7. 'F' → logprob: -8.72806453704834
    8. ' f' → logprob: -8.85306453704834
    9. '"(' → logprob: -9.72806453704834
    10. '"P' → logprob: -9.97806453704834

Token 1661: 'Pow' (ID: 84632)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5777190923690796
    2. 'Pow' → logprob: -0.8277190923690796
    3. 'pow' → logprob: -6.702719211578369
    4. 'F' → logprob: -8.952718734741211
    5. ' f' → logprob: -9.452718734741211
    6. 'Power' → logprob: -9.577718734741211
    7. ' Pow' → logprob: -9.702718734741211
    8. 'Po' → logprob: -10.327718734741211
    9. '"' → logprob: -10.327718734741211
    10. '{' → logprob: -10.577718734741211

Token 1662: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -13.125007629394531
    3. 'Express' → logprob: -13.625007629394531
    4. '('' → logprob: -13.875007629394531
    5. 'E' → logprob: -14.125007629394531
    6. '"' → logprob: -14.125007629394531
    7. '("' → logprob: -14.625007629394531
    8. '_expr' → logprob: -15.250007629394531
    9. ' Expr' → logprob: -15.250007629394531
    10. 'Exp' → logprob: -15.625007629394531

Token 1663: '({' (ID: 3972)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.0002613358374219388
    2. 'Cel' → logprob: -9.250261306762695
    3. '(' → logprob: -9.375261306762695
    4. '"' → logprob: -10.750261306762695
    5. '("' → logprob: -11.000261306762695
    6. 'C' → logprob: -11.750261306762695
    7. '(Cell' → logprob: -11.875261306762695
    8. '('' → logprob: -12.000261306762695
    9. '(self' → logprob: -12.375261306762695
    10. 'Ce' → logprob: -13.250261306762695

Token 1664: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0280383548888494e-06
    2. ' self' → logprob: -14.500000953674316
    3. '(self' → logprob: -15.625000953674316
    4. '{' → logprob: -15.750000953674316
    5. 'f' → logprob: -16.000001907348633
    6. ''s' → logprob: -17.250001907348633
    7. '           ' → logprob: -17.250001907348633
    8. 'repr' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.000001907348633
    10. 's' → logprob: -18.250001907348633

Token 1665: '.primary' (ID: 60603)
  Prédit: '.primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.primary' → logprob: -2.2127087504486553e-05
    2. 'primary' → logprob: -10.750021934509277
    3. '.' → logprob: -15.625021934509277
    4. ' .' → logprob: -16.250022888183594
    5. '.p' → logprob: -16.625022888183594
    6. '.power' → logprob: -17.500022888183594
    7. '
' → logprob: -17.500022888183594
    8. ').' → logprob: -17.875022888183594
    9. '   ' → logprob: -18.125022888183594
    10. '.pow' → logprob: -18.375022888183594

Token 1666: '},{' (ID: 34684)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02211925946176052
    2. ')' → logprob: -4.772119045257568
    3. ',d' → logprob: -5.397119045257568
    4. '),' → logprob: -5.522119045257568
    5. ',self' → logprob: -6.147119045257568
    6. ' ,' → logprob: -7.272119045257568
    7. ',"' → logprob: -7.772119045257568
    8. ',
' → logprob: -8.147119522094727
    9. ',f' → logprob: -8.272119522094727
    10. ',.' → logprob: -8.647119522094727

Token 1667: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009151478880085051
    2. ' self' → logprob: -7.000915050506592
    3. '           ' → logprob: -13.25091552734375
    4. '       ' → logprob: -15.00091552734375
    5. '   ' → logprob: -15.12591552734375
    6. 'repr' → logprob: -15.12591552734375
    7. 'pow' → logprob: -15.50091552734375
    8. ' ' → logprob: -15.62591552734375
    9. ''' → logprob: -16.37591552734375
    10. 'digit' → logprob: -16.37591552734375

Token 1668: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.0004977479111403227
    2. 'digit' → logprob: -7.625497817993164
    3. '.' → logprob: -13.000497817993164
    4. ''.' → logprob: -13.375497817993164
    5. '   ' → logprob: -13.500497817993164
    6. '	d' → logprob: -13.750497817993164
    7. '}.' → logprob: -14.000497817993164
    8. 'd' → logprob: -14.625497817993164
    9. '`.' → logprob: -15.000497817993164
    10. '".' → logprob: -15.250497817993164

Token 1669: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.0012864251621067524
    2. '}' → logprob: -7.376286506652832
    3. '})' → logprob: -8.501286506652832
    4. ')' → logprob: -9.126286506652832
    5. 'i' → logprob: -9.126286506652832
    6. 'ig' → logprob: -9.501286506652832
    7. 'igital' → logprob: -10.626286506652832
    8. 'igi' → logprob: -10.626286506652832
    9. '}}' → logprob: -11.251286506652832
    10. 'ight' → logprob: -11.876286506652832

Token 1670: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7515981197357178
    2. ')"' → logprob: -1.0015981197357178
    3. '})' → logprob: -1.8765981197357178
    4. ')}' → logprob: -5.001598358154297
    5. ')")' → logprob: -8.001598358154297
    6. ')">' → logprob: -8.126598358154297
    7. ')`' → logprob: -8.876598358154297
    8. '))' → logprob: -9.001598358154297
    9. '}"' → logprob: -9.376598358154297
    10. ')**' → logprob: -9.751598358154297

Token 1671: '"
' (ID: 1092)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1672: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.51258385181427
    2. '           ' → logprob: -2.0125837326049805
    3. '                   ' → logprob: -2.2625837326049805
    4. '               ' → logprob: -2.2625837326049805
    5. '       ' → logprob: -3.8875837326049805
    6. '                       ' → logprob: -5.1375837326049805
    7. '```' → logprob: -5.1375837326049805
    8. ')' → logprob: -5.6375837326049805
    9. '                        
' → logprob: -5.8875837326049805
    10. '<|end|>' → logprob: -6.0125837326049805

Token 1673: ' pow' (ID: 9779)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04212810471653938
    2. 'return' → logprob: -3.667128086090088
    3. ' return' → logprob: -4.917128086090088
    4. '                       ' → logprob: -5.917128086090088
    5. 'pow' (adapté à ' pow') → logprob: -6.167128086090088
    6. '               ' → logprob: -6.292128086090088
    7. '                           ' → logprob: -7.792128086090088
    8. '           ' → logprob: -8.042128562927246
    9. '                    ' → logprob: -8.417128562927246
    10. '                               ' → logprob: -8.667128562927246

Token 1674: '_cell' (ID: 39197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4164305329322815
    2. 'Expr' → logprob: -1.7914304733276367
    3. '_expr' → logprob: -1.7914304733276367
    4. '_digit' → logprob: -6.166430473327637
    5. ')' → logprob: -6.541430473327637
    6. '_EXPR' → logprob: -7.291430473327637
    7. 'Digit' → logprob: -7.541430473327637
    8. '```' → logprob: -7.666430473327637
    9. ' _' → logprob: -8.291430473327637
    10. '   ' → logprob: -8.541430473327637

Token 1675: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025843977928162
    2. '=' → logprob: -2.3502583503723145
    3. ',' → logprob: -10.850258827209473
    4. '                   ' → logprob: -11.350258827209473
    5. ')' → logprob: -12.225258827209473
    6. '                       ' → logprob: -12.475258827209473
    7. '.' → logprob: -13.350258827209473
    8. '                    ' → logprob: -13.475258827209473
    9. '               ' → logprob: -13.600258827209473
    10. '           ' → logprob: -13.600258827209473

Token 1676: ' Pow' (ID: 33663)
  Prédit: 'Pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pow' → logprob: -0.2520042359828949
    2. ' Pow' → logprob: -1.5020042657852173
    3. '                   ' → logprob: -9.877004623413086
    4. '               ' → logprob: -12.377004623413086
    5. '                    ' → logprob: -12.877004623413086
    6. '           ' → logprob: -12.877004623413086
    7. '.Pow' → logprob: -13.127004623413086
    8. '                       ' → logprob: -13.127004623413086
    9. ' Powder' → logprob: -13.377004623413086
    10. '            ' → logprob: -13.627004623413086

Token 1677: 'Expr' (ID: 21037)
  Prédit: 'Expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expr' → logprob: -0.0017810913268476725
    2. '_expr' → logprob: -6.501780986785889
    3. 'E' → logprob: -9.251781463623047
    4. '_' → logprob: -9.876781463623047
    5. 'Cell' → logprob: -10.501781463623047
    6. 'Express' → logprob: -11.001781463623047
    7. '_cell' → logprob: -11.376781463623047
    8. '   ' → logprob: -11.626781463623047
    9. 'r' → logprob: -11.751781463623047
    10. ')' → logprob: -11.876781463623047

Token 1678: 'Cell' (ID: 5346)
  Prédit: 'Cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -1.3306015716807451e-05
    2. 'Cel' → logprob: -11.87501335144043
    3. '<Cell' → logprob: -13.25001335144043
    4. 'Cells' → logprob: -13.75001335144043
    5. '_Cell' → logprob: -14.12501335144043
    6. 'C' → logprob: -14.25001335144043
    7. '(Cell' → logprob: -14.25001335144043
    8. '_cell' → logprob: -14.37501335144043
    9. 'cell' → logprob: -15.50001335144043
    10. 'Expr' → logprob: -16.00001335144043

Token 1679: '(primary' (ID: 136333)
  Prédit: '(primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(primary' → logprob: -0.0057529183104634285
    2. '(' → logprob: -5.380753040313721
    3. 'primary' → logprob: -7.005753040313721
    4. '(
' → logprob: -8.505752563476562
    5. ' (' → logprob: -11.880752563476562
    6. '   ' → logprob: -12.005752563476562
    7. ' primary' → logprob: -12.130752563476562
    8. '           ' → logprob: -14.005752563476562
    9. '(parent' → logprob: -14.380752563476562
    10. ' ' → logprob: -14.880752563476562

Token 1680: '_cell' (ID: 39197)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3626691699028015
    2. '_cell' → logprob: -1.2376692295074463
    3. ',r' → logprob: -4.737668991088867
    4. '.primary' → logprob: -6.362668991088867
    5. '.cell' → logprob: -6.987668991088867
    6. '   ' → logprob: -7.112668991088867
    7. ')' → logprob: -8.362668991088867
    8. '.r' → logprob: -8.362668991088867
    9. ',
' → logprob: -8.612668991088867
    10. ',_' → logprob: -9.112668991088867

Token 1681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.061676347395405e-05
    2. ' ,' → logprob: -10.62505054473877
    3. '                   ' → logprob: -11.12505054473877
    4. '   ' → logprob: -13.25005054473877
    5. ',
' → logprob: -13.50005054473877
    6. '           ' → logprob: -13.50005054473877
    7. '<|end|>' → logprob: -13.87505054473877
    8. ',p' → logprob: -14.00005054473877
    9. '               ' → logprob: -14.12505054473877
    10. ')' → logprob: -14.62505054473877

Token 1682: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0011813003802672029
    2. ' pow' → logprob: -6.751181125640869
    3. '           ' → logprob: -13.376181602478027
    4. '(pow' → logprob: -13.376181602478027
    5. 'int' → logprob: -13.626181602478027
    6. '                   ' → logprob: -13.751181602478027
    7. '               ' → logprob: -14.251181602478027
    8. 'p' → logprob: -14.251181602478027
    9. '                               ' → logprob: -14.751181602478027
    10. '            ' → logprob: -14.876181602478027

Token 1683: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -1.9385402993066236e-05
    2. 'digit' → logprob: -11.250019073486328
    3. 'Digit' → logprob: -12.875019073486328
    4. '_' → logprob: -13.750019073486328
    5. '_digits' → logprob: -13.875019073486328
    6. '_cell' → logprob: -14.875019073486328
    7. '_DIG' → logprob: -15.250019073486328
    8. '```' → logprob: -15.875019073486328
    9. '_digest' → logprob: -16.125019073486328
    10. '-digit' → logprob: -16.125019073486328

Token 1684: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013011827832087874
    2. ',' → logprob: -9.250129699707031
    3. ')
' → logprob: -10.875129699707031
    4. '   ' → logprob: -12.375129699707031
    5. '                   ' → logprob: -12.625129699707031
    6. ' )' → logprob: -13.250129699707031
    7. '               ' → logprob: -13.500129699707031
    8. '           ' → logprob: -13.625129699707031
    9. '       ' → logprob: -14.125129699707031
    10. ',)' → logprob: -14.125129699707031

Token 1685: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.054896384477615356
    2. ' base' → logprob: -2.929896354675293
    3. '   ' → logprob: -11.679896354675293
    4. '           ' → logprob: -13.304896354675293
    5. ' ' → logprob: -13.929896354675293
    6. '       ' → logprob: -14.554896354675293
    7. '     ' → logprob: -14.679896354675293
    8. '         ' → logprob: -15.179896354675293
    9. 'primary' → logprob: -15.429896354675293
    10. '	base' → logprob: -15.554896354675293

Token 1686: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.704273118884885e-07
    2. 'line' → logprob: -14.625000953674316
    3. 'Line' → logprob: -15.875000953674316
    4. '_LINE' → logprob: -17.75
    5. '-line' → logprob: -17.875
    6. ')' → logprob: -18.125
    7. ' line' → logprob: -18.125
    8. '	line' → logprob: -18.5
    9. '   ' → logprob: -19.375
    10. '_Line' → logprob: -20.5

Token 1687: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018542143516242504
    2. ')
' → logprob: -8.625185012817383
    3. '                   ' → logprob: -13.000185012817383
    4. '           ' → logprob: -13.625185012817383
    5. '   ' → logprob: -14.000185012817383
    6. '       ' → logprob: -14.375185012817383
    7. '               ' → logprob: -14.500185012817383
    8. ' )' → logprob: -15.375185012817383
    9. ')return' → logprob: -16.625185012817383
    10. '.' → logprob: -17.125185012817383

Token 1688: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002263046189909801
    2. 'return' → logprob: -9.625226020812988
    3. '               ' → logprob: -10.125226020812988
    4. '				' → logprob: -10.500226020812988
    5. '
' → logprob: -10.875226020812988
    6. '		           ' → logprob: -11.125226020812988
    7. '           ' → logprob: -11.500226020812988
    8. '       ' → logprob: -11.625226020812988
    9. '                    
' → logprob: -11.625226020812988
    10. '	               ' → logprob: -11.625226020812988

Token 1689: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06262752413749695
    2. 'return' (adapté à ' return') → logprob: -2.8126275539398193
    3. '               ' → logprob: -8.562627792358398
    4. '                       ' → logprob: -8.812627792358398
    5. '           ' → logprob: -8.812627792358398
    6. '       ' → logprob: -9.562627792358398
    7. ' return' → logprob: -9.562627792358398
    8. '   ' → logprob: -10.937627792358398
    9. '                           ' → logprob: -12.187627792358398
    10. '                               ' → logprob: -12.687627792358398

Token 1690: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0003384422743692994
    2. ' pow' → logprob: -8.000338554382324
    3. '           ' → logprob: -13.125338554382324
    4. '   ' → logprob: -15.000338554382324
    5. '               ' → logprob: -15.000338554382324
    6. '       ' → logprob: -15.875338554382324
    7. '(pow' → logprob: -16.500337600708008
    8. '                   ' → logprob: -17.125337600708008
    9. '            ' → logprob: -17.500337600708008
    10. '```' → logprob: -17.625337600708008

Token 1691: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0008598887361586094
    2. '_' → logprob: -7.25085973739624
    3. '_Cell' → logprob: -9.125860214233398
    4. '_CELL' → logprob: -11.500860214233398
    5. '_expr' → logprob: -11.750860214233398
    6. '<Cell' → logprob: -12.375860214233398
    7. '_pow' → logprob: -12.625860214233398
    8. '_cells' → logprob: -12.875860214233398
    9. '_c' → logprob: -13.125860214233398
    10. 'Cell' → logprob: -13.250860214233398

Token 1692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008062710054218769
    2. '<|end|>' → logprob: -4.883062839508057
    3. ')' → logprob: -9.258062362670898
    4. '.' → logprob: -9.883062362670898
    5. '<|end|>' → logprob: -9.883062362670898
    6. ',None' → logprob: -9.883062362670898
    7. ',
' → logprob: -10.008062362670898
    8. '   ' → logprob: -10.258062362670898
    9. '           ' → logprob: -10.633062362670898
    10. '       ' → logprob: -10.633062362670898

Token 1693: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009819366969168186
    2. ' ('' → logprob: -4.759819507598877
    3. 'pow' → logprob: -7.884819507598877
    4. '('*' → logprob: -8.009819030761719
    5. ''' → logprob: -8.634819030761719
    6. '('+' → logprob: -9.134819030761719
    7. '(pow' → logprob: -9.884819030761719
    8. '(' → logprob: -10.634819030761719
    9. ''s' → logprob: -10.759819030761719
    10. '   ' → logprob: -10.884819030761719

Token 1694: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.016214193776249886
    2. 'power' → logprob: -4.141214370727539
    3. '^' → logprob: -9.141214370727539
    4. 'ex' → logprob: -11.516214370727539
    5. '**' → logprob: -11.516214370727539
    6. 'exp' → logprob: -12.141214370727539
    7. 'mod' → logprob: -12.141214370727539
    8. 'primary' → logprob: -12.516214370727539
    9. 'powered' → logprob: -12.641214370727539
    10. '_pow' → logprob: -12.641214370727539

Token 1695: 'expr' (ID: 21343)
  Prédit: 'expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.10077720135450363
    2. '_expr' → logprob: -2.6007771492004395
    3. '',' → logprob: -3.9757771492004395
    4. '','' → logprob: -6.4757771492004395
    5. ',' → logprob: -7.1007771492004395
    6. 'express' → logprob: -8.850777626037598
    7. '(expr' → logprob: -9.600777626037598
    8. '')' → logprob: -10.100777626037598
    9. ''' → logprob: -10.100777626037598
    10. 'Expr' → logprob: -10.475777626037598

Token 1696: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24155910313129425
    2. '',' → logprob: -1.6165591478347778
    3. ')' → logprob: -4.991559028625488
    4. '','' → logprob: -5.366559028625488
    5. ' ,' → logprob: -6.366559028625488
    6. ',p' → logprob: -8.116559028625488
    7. '(',',' → logprob: -8.366559028625488
    8. ',)' → logprob: -8.616559028625488
    9. '(',' → logprob: -8.741559028625488
    10. ','' → logprob: -8.741559028625488

Token 1697: ' primary' (ID: 9107)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.04859680309891701
    2. ' primary' → logprob: -3.0485968589782715
    3. '                   ' → logprob: -12.048596382141113
    4. '   ' → logprob: -14.298596382141113
    5. ' ' → logprob: -15.048596382141113
    6. 'principal' → logprob: -15.048596382141113
    7. '(primary' → logprob: -15.173596382141113
    8. '_primary' → logprob: -15.298596382141113
    9. '.primary' → logprob: -15.423596382141113
    10. '               ' → logprob: -15.548596382141113

Token 1698: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.007746698334813118
    2. '_cell' → logprob: -4.882746696472168
    3. ''_' → logprob: -9.632746696472168
    4. '[' → logprob: -10.257746696472168
    5. ',' → logprob: -11.132746696472168
    6. 'val' → logprob: -11.882746696472168
    7. ')' → logprob: -12.507746696472168
    8. 'cell' → logprob: -13.257746696472168
    9. '
' → logprob: -13.382746696472168
    10. ',_' → logprob: -13.632746696472168

Token 1699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018228584667667747
    2. ')' → logprob: -7.0018229484558105
    3. ' ,' → logprob: -7.5018229484558105
    4. ',p' → logprob: -9.251822471618652
    5. '                   ' → logprob: -10.251822471618652
    6. '[' → logprob: -10.376822471618652
    7. ',
' → logprob: -10.376822471618652
    8. '           ' → logprob: -10.876822471618652
    9. ',)' → logprob: -10.876822471618652
    10. '<|end|>' → logprob: -10.876822471618652

Token 1700: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00862627848982811
    2. ' pow' → logprob: -4.758626461029053
    3. '                   ' → logprob: -12.133625984191895
    4. '           ' → logprob: -13.758625984191895
    5. '                    ' → logprob: -13.883625984191895
    6. '               ' → logprob: -13.883625984191895
    7. '(pow' → logprob: -14.383625984191895
    8. '            ' → logprob: -14.633625984191895
    9. '                               ' → logprob: -15.258625984191895
    10. ' ' → logprob: -15.383625984191895

Token 1701: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.0006349971517920494
    2. 'digit' → logprob: -7.375635147094727
    3. 'igit' → logprob: -12.500635147094727
    4. 'Digit' → logprob: -13.000635147094727
    5. '_cell' → logprob: -14.125635147094727
    6. '-digit' → logprob: -14.500635147094727
    7. 'isdigit' → logprob: -14.875635147094727
    8. ')' → logprob: -15.000635147094727
    9. ' digit' → logprob: -16.750635147094727
    10. '_digits' → logprob: -16.750635147094727

Token 1702: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014728360110893846
    2. '                   ' → logprob: -9.875146865844727
    3. ')
' → logprob: -10.375146865844727
    4. '               ' → logprob: -10.750146865844727
    5. '       ' → logprob: -11.000146865844727
    6. '           ' → logprob: -11.125146865844727
    7. '   ' → logprob: -11.750146865844727
    8. ' )' → logprob: -13.625146865844727
    9. '')' → logprob: -14.000146865844727
    10. '                       ' → logprob: -14.875146865844727

Token 1703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43580737709999084
    2. '<|end|>' → logprob: -1.1858073472976685
    3. '#' → logprob: -3.935807466506958
    4. '       ' → logprob: -4.560807228088379
    5. '...' → logprob: -5.310807228088379
    6. ')' → logprob: -5.810807228088379
    7. 'return' → logprob: -6.310807228088379
    8. '    
' → logprob: -6.310807228088379
    9. '
' → logprob: -6.560807228088379
    10. '<|end|>' → logprob: -7.185807228088379

Token 1704: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35879677534103394
    2. 'return' → logprob: -1.2337968349456787
    3. '#' (adapté à ' #') → logprob: -4.9837965965271
    4. '
' → logprob: -6.6087965965271
    5. ' return' → logprob: -7.3587965965271
    6. '    
' → logprob: -7.3587965965271
    7. 'def' → logprob: -8.233797073364258
    8. '       ' → logprob: -8.483797073364258
    9. 'raise' → logprob: -9.358797073364258
    10. '	return' → logprob: -9.733797073364258

Token 1705: ' parse' (ID: 8420)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2403629571199417
    2. '#' → logprob: -1.7403630018234253
    3. 'cell' → logprob: -4.365363121032715
    4. 'cells' → logprob: -4.490363121032715
    5. 'lines' → logprob: -5.365363121032715
    6. '   ' → logprob: -6.615363121032715
    7. 'term' → logprob: -6.740363121032715
    8. 'for' → logprob: -6.865363121032715
    9. 'tokens' → logprob: -6.865363121032715
    10. 'children' → logprob: -6.990363121032715

Token 1706: ' digits' (ID: 37806)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7268711924552917
    2. '_cell' → logprob: -1.7268712520599365
    3. 'Cell' → logprob: -1.8518712520599365
    4. 'None' → logprob: -2.7268712520599365
    5. 'def' → logprob: -3.2268712520599365
    6. 'lines' → logprob: -4.226871013641357
    7. 'cell' → logprob: -4.476871013641357
    8. '#' → logprob: -4.726871013641357
    9. ' Cell' → logprob: -5.101871013641357
    10. '
' → logprob: -5.351871013641357

Token 1707: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07150263339281082
    2. 'for' → logprob: -3.446502685546875
    3. 'digits' → logprob: -4.196502685546875
    4. 'line' → logprob: -4.946502685546875
    5. 'i' → logprob: -5.321502685546875
    6. 'pos' → logprob: -5.821502685546875
    7. 'idx' → logprob: -5.946502685546875
    8. 'val' → logprob: -7.071502685546875
    9. 'def' → logprob: -7.446502685546875
    10. 'if' → logprob: -7.571502685546875

Token 1708: ' terminals' (ID: 87033)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2956107556819916
    2. '   ' → logprob: -2.0456106662750244
    3. 'def' → logprob: -3.2956106662750244
    4. 'if' → logprob: -3.6706106662750244
    5. 'line' → logprob: -3.7956106662750244
    6. 'i' → logprob: -4.9206109046936035
    7. 'digits' → logprob: -5.0456109046936035
    8. 'pos' → logprob: -5.2956109046936035
    9. 'idx' → logprob: -5.4206109046936035
    10. ' for' → logprob: -5.7956109046936035

Token 1709: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008620012551546097
    2. 'for' → logprob: -5.133619785308838
    3. 'def' → logprob: -7.008619785308838
    4. '
' → logprob: -7.383619785308838
    5. ' for' → logprob: -8.008620262145996
    6. ',' → logprob: -8.758620262145996
    7. '       ' → logprob: -9.258620262145996
    8. '#' → logprob: -9.633620262145996
    9. '...' → logprob: -9.633620262145996
    10. ':' → logprob: -9.758620262145996

Token 1710: 'single' (ID: 29765)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.2818872928619385
    2. '   ' → logprob: -1.5318872928619385
    3. 'def' → logprob: -2.2818872928619385
    4. '       ' → logprob: -3.1568872928619385
    5. 'for' → logprob: -3.1568872928619385
    6. 'return' → logprob: -3.1568872928619385
    7. ')' → logprob: -3.2818872928619385
    8. '.
' → logprob: -3.6568872928619385
    9. '.' → logprob: -4.031887054443359
    10. 'None' → logprob: -4.031887054443359

Token 1711: ' char' (ID: 1826)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07885541021823883
    2. 'char' → logprob: -3.578855514526367
    3. 'character' → logprob: -3.578855514526367
    4. ')
' → logprob: -4.828855514526367
    5. ' character' → logprob: -5.703855514526367
    6. '   ' → logprob: -6.703855514526367
    7. 'characters' → logprob: -7.203855514526367
    8. ' char' → logprob: -7.328855514526367
    9. '_char' → logprob: -7.453855514526367
    10. ' characters' → logprob: -7.703855514526367

Token 1712: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6066896319389343
    2. '):
' → logprob: -1.856689691543579
    3. '   ' → logprob: -1.981689691543579
    4. ')
' → logprob: -2.731689691543579
    5. '):' → logprob: -3.231689691543579
    6. ',' → logprob: -4.231689453125
    7. '       ' → logprob: -4.606689453125
    8. 'if' → logprob: -4.981689453125
    9. 's' → logprob: -5.231689453125
    10. '=' → logprob: -5.481689453125

Token 1713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042066131718456745
    2. '       ' → logprob: -6.004206657409668
    3. ' for' → logprob: -7.754206657409668
    4. 'def' → logprob: -8.129206657409668
    5. 'for' → logprob: -8.504206657409668
    6. '
' → logprob: -8.754206657409668
    7. ' if' → logprob: -9.129206657409668
    8. '#' → logprob: -9.129206657409668
    9. '<|end|>' → logprob: -9.254206657409668
    10. 'if' → logprob: -10.254206657409668

Token 1714: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1898234486579895
    2. 'if' → logprob: -2.8148233890533447
    3. '   ' → logprob: -2.9398233890533447
    4. 'ch' → logprob: -3.9398233890533447
    5. 'digits' → logprob: -4.314823627471924
    6. 'line' → logprob: -5.064823627471924
    7. '#' (adapté à ' #') → logprob: -5.564823627471924
    8. 'first' → logprob: -5.689823627471924
    9. 'return' → logprob: -5.939823627471924
    10. 'digit' → logprob: -6.314823627471924

Token 1715: ' parent' (ID: 5980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03581057861447334
    2. 'digits' → logprob: -4.285810470581055
    3. 'line' → logprob: -4.410810470581055
    4. 'if' → logprob: -5.285810470581055
    5. '   ' → logprob: -5.910810470581055
    6. 'first' → logprob: -7.660810470581055
    7. '#' → logprob: -8.160810470581055
    8. 'digit' → logprob: -8.785810470581055
    9. 'cells' → logprob: -8.785810470581055
    10. 'chars' → logprob: -9.535810470581055

Token 1716: 'hesis' (ID: 101333)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.47655728459358215
    2. 'def' → logprob: -1.6015572547912598
    3. 'hesis' → logprob: -3.1015572547912598
    4. 'return' → logprob: -3.4765572547912598
    5. 'if' → logprob: -3.6015572547912598
    6. ':' → logprob: -3.8515572547912598
    7. ' =' → logprob: -3.8515572547912598
    8. 'h' → logprob: -4.72655725479126
    9. '=' → logprob: -5.10155725479126
    10. 'class' → logprob: -5.35155725479126

Token 1717: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17865271866321564
    2. ' if' → logprob: -2.803652763366699
    3. '       ' → logprob: -3.678652763366699
    4. ':' → logprob: -3.803652763366699
    5. '...' → logprob: -4.303652763366699
    6. ':
' → logprob: -4.553652763366699
    7. 'if' → logprob: -4.678652763366699
    8. '<|end|>' → logprob: -5.428652763366699
    9. ',' → logprob: -5.553652763366699
    10. 'def' → logprob: -5.678652763366699

Token 1718: ' expressions' (ID: 43578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.350915789604187
    2. ''+' → logprob: -1.850915789604187
    3. '')' → logprob: -1.975915789604187
    4. ''' → logprob: -2.4759159088134766
    5. 'digit' → logprob: -2.4759159088134766
    6. 'digits' → logprob: -3.1009159088134766
    7. 'ch' → logprob: -3.2259159088134766
    8. ')' → logprob: -3.8509159088134766
    9. ''.' → logprob: -4.100915908813477
    10. '   ' → logprob: -4.100915908813477

Token 1719: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03087208792567253
    2. '       ' → logprob: -4.030871868133545
    3. '...' → logprob: -5.280871868133545
    4. ':' → logprob: -5.405871868133545
    5. '<|end|>' → logprob: -6.530871868133545
    6. '.' → logprob: -7.905871868133545
    7. ',' → logprob: -8.405872344970703
    8. ' if' → logprob: -8.530872344970703
    9. 'def' → logprob: -8.780872344970703
    10. ')' → logprob: -9.280872344970703

Token 1720: ' terms' (ID: 5941)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1092381477355957
    2. ''+' → logprob: -1.8592381477355957
    3. ''' → logprob: -1.9842381477355957
    4. '+' → logprob: -2.7342381477355957
    5. '()' → logprob: -3.1092381477355957
    6. '()+' → logprob: -3.1092381477355957
    7. 'digits' → logprob: -3.3592381477355957
    8. '+-' → logprob: -3.9842381477355957
    9. 'w' → logprob: -4.109238147735596
    10. 'lines' → logprob: -4.234238147735596

Token 1721: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07509546726942062
    2. 'if' → logprob: -3.3250954151153564
    3. 'for' → logprob: -3.5750954151153564
    4. ' if' → logprob: -6.3250956535339355
    5. '...' → logprob: -6.4500956535339355
    6. 'def' → logprob: -6.5750956535339355
    7. ' for' → logprob: -6.7000956535339355
    8. '#' → logprob: -7.2000956535339355
    9. '       ' → logprob: -8.200095176696777
    10. 'return' → logprob: -8.825095176696777

Token 1722: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029542652890086174
    2. 'def' → logprob: -3.9045426845550537
    3. 'operators' → logprob: -4.904542446136475
    4. ' factors' → logprob: -8.154542922973633
    5. 'return' → logprob: -8.279542922973633
    6. 'factor' → logprob: -8.404542922973633
    7. 'cells' → logprob: -8.529542922973633
    8. '   ' → logprob: -9.279542922973633
    9. 'ops' → logprob: -9.404542922973633
    10. 'oper' → logprob: -9.404542922973633

Token 1723: ' separated' (ID: 33930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12191557884216309
    2. '...' → logprob: -2.621915578842163
    3. '<|end|>' → logprob: -3.996915578842163
    4. '       ' → logprob: -4.746915817260742
    5. '#' → logprob: -5.371915817260742
    6. '.' → logprob: -5.746915817260742
    7. ')' → logprob: -6.121915817260742
    8. 'return' → logprob: -6.496915817260742
    9. ' ' → logprob: -7.246915817260742
    10. 'def' → logprob: -7.746915817260742

Token 1724: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9576241374015808
    2. '=' → logprob: -1.3326241970062256
    3. '   ' → logprob: -1.4576241970062256
    4. 'def' → logprob: -3.0826241970062256
    5. ',' → logprob: -3.5826241970062256
    6. ' =' → logprob: -4.0826239585876465
    7. ' by' → logprob: -5.3326239585876465
    8. 'return' → logprob: -5.4576239585876465
    9. '.' → logprob: -5.9576239585876465
    10. ')' → logprob: -6.3326239585876465

Token 1725: ' +' (ID: 659)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.03936896100640297
    2. ' spaces' → logprob: -3.7893688678741455
    3. ''' → logprob: -4.414369106292725
    4. ''+' → logprob: -6.289369106292725
    5. 'space' → logprob: -7.414369106292725
    6. ''s' → logprob: -8.789368629455566
    7. 'operators' → logprob: -8.789368629455566
    8. 'def' → logprob: -9.039368629455566
    9. 'return' → logprob: -9.164368629455566
    10. ' '+'' → logprob: -9.164368629455566

Token 1726: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41867756843566895
    2. '<|end|>' → logprob: -2.543677568435669
    3. 'def' → logprob: -2.543677568435669
    4. ',' → logprob: -2.918677568435669
    5. '...' → logprob: -2.918677568435669
    6. ' ' → logprob: -3.043677568435669
    7. ' or' → logprob: -5.41867733001709
    8. ' and' → logprob: -5.91867733001709
    9. '    ' → logprob: -6.04367733001709
    10. '.' → logprob: -6.04367733001709

Token 1727: ' *

' (ID: 40558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05806220695376396
    2. '<|end|>' → logprob: -4.1830620765686035
    3. '...' → logprob: -4.6830620765686035
    4. ' ' → logprob: -4.8080620765686035
    5. '       ' → logprob: -5.4330620765686035
    6. 'def' → logprob: -5.8080620765686035
    7. ')' → logprob: -5.8080620765686035
    8. ' 
' → logprob: -5.9330620765686035
    9. '#' → logprob: -6.1830620765686035
    10. '    ' → logprob: -6.3080620765686035

Token 1728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058123160153627396
    2. ':' → logprob: -3.8081231117248535
    3. '<|end|>' → logprob: -3.9331231117248535
    4. '...' → logprob: -5.5581231117248535
    5. ' ' → logprob: -6.1831231117248535
    6. ':
' → logprob: -6.3081231117248535
    7. '       ' → logprob: -6.5581231117248535
    8. ')' → logprob: -7.1831231117248535
    9. 'def' → logprob: -7.1831231117248535
    10. ',' → logprob: -7.3081231117248535

Token 1729: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1808653473854065
    2. '#' (adapté à ' #') → logprob: -2.4308652877807617
    3. '   ' → logprob: -2.9308652877807617
    4. 'if' → logprob: -4.805865287780762
    5. 'def' → logprob: -5.180865287780762
    6. 'tokens' → logprob: -5.555865287780762
    7. 'digits' → logprob: -6.930865287780762
    8. 'token' → logprob: -7.180865287780762
    9. 'for' → logprob: -7.180865287780762
    10. '...' → logprob: -7.305865287780762

Token 1730: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9456466436386108
    2. '#' → logprob: -1.0706466436386108
    3. 'def' → logprob: -2.0706467628479004
    4. '   ' → logprob: -2.4456467628479004
    5. 'import' → logprob: -4.3206467628479
    6. '...' → logprob: -4.3206467628479
    7. 'for' → logprob: -4.4456467628479
    8. 'w' → logprob: -6.1956467628479
    9. 'tokens' → logprob: -6.1956467628479
    10. 'line' → logprob: -6.3206467628479

Token 1731: ' entire' (ID: 6508)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.5467047095298767
    2. ' w' → logprob: -1.6717047691345215
    3. 'w' → logprob: -2.2967047691345215
    4. 'lines' → logprob: -3.6717047691345215
    5. ' h' → logprob: -3.7967047691345215
    6. ' not' → logprob: -3.9217047691345215
    7. ' base' → logprob: -4.1717047691345215
    8. ' len' → logprob: -4.1717047691345215
    9. ' line' → logprob: -4.9217047691345215
    10. 'len' → logprob: -4.9217047691345215

Token 1732: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.33383601903915405
    2. 'def' → logprob: -2.208836078643799
    3. 'line' → logprob: -2.833836078643799
    4. ' lines' → logprob: -2.958836078643799
    5. '(lines' → logprob: -4.458836078643799
    6. ' line' → logprob: -4.708836078643799
    7. ')' → logprob: -4.708836078643799
    8. '
' → logprob: -5.083836078643799
    9. 'data' → logprob: -5.333836078643799
    10. 'for' → logprob: -6.083836078643799

Token 1733: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9923579692840576
    2. ' and' → logprob: -1.4923579692840576
    3. '[' → logprob: -1.7423579692840576
    4. 'and' → logprob: -2.2423579692840576
    5. ' ==' → logprob: -2.4923579692840576
    6. ':' → logprob: -3.7423579692840576
    7. ':
' → logprob: -5.117358207702637
    8. '=' → logprob: -5.992358207702637
    9. 'def' → logprob: -6.367358207702637
    10. '```' → logprob: -6.617358207702637

Token 1734: ' single' (ID: 4590)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -1.1485884189605713
    2. 'lines' → logprob: -1.2735884189605713
    3. '''' → logprob: -1.3985884189605713
    4. '''.' → logprob: -2.7735884189605713
    5. ' lines' → logprob: -3.0235884189605713
    6. 'line' → logprob: -4.148588180541992
    7. 'trim' → logprob: -5.148588180541992
    8. 'all' → logprob: -5.523588180541992
    9. ' line' → logprob: -6.148588180541992
    10. '...' → logprob: -6.148588180541992

Token 1735: ' line' (ID: 2543)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.8067762851715088
    2. ')' → logprob: -2.056776285171509
    3. ' lines' → logprob: -2.056776285171509
    4. 'lines' → logprob: -2.056776285171509
    5. 'if' → logprob: -2.181776285171509
    6. ' line' → logprob: -2.931776285171509
    7. 'cell' → logprob: -3.056776285171509
    8. ' cell' → logprob: -3.181776285171509
    9. ''' → logprob: -3.306776285171509
    10. 'def' → logprob: -3.806776285171509

Token 1736: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11513920873403549
    2. 'and' → logprob: -2.2401392459869385
    3. ':' → logprob: -7.115139007568359
    4. '   ' → logprob: -7.240139007568359
    5. ':
' → logprob: -8.24013900756836
    6. '=' → logprob: -8.49013900756836
    7. ' =' → logprob: -9.11513900756836
    8. ',' → logprob: -9.24013900756836
    9. '[' → logprob: -10.49013900756836
    10. '==' → logprob: -10.61513900756836

Token 1737: ' single' (ID: 4590)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8089815378189087
    2. 'lines' → logprob: -0.8089815378189087
    3. ' lines' → logprob: -2.558981418609619
    4. ' all' → logprob: -4.808981418609619
    5. 'w' → logprob: -4.933981418609619
    6. 'all' → logprob: -4.933981418609619
    7. ' len' → logprob: -5.183981418609619
    8. 'line' → logprob: -7.183981418609619
    9. ' not' → logprob: -7.433981418609619
    10. '(' → logprob: -7.683981418609619

Token 1738: ' digit' (ID: 19181)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.927436113357544
    2. 'char' → logprob: -1.927436113357544
    3. ')' → logprob: -2.427436113357544
    4. 'cell' → logprob: -2.552436113357544
    5. '=' → logprob: -2.677436113357544
    6. 'def' → logprob: -2.927436113357544
    7. '(' → logprob: -2.927436113357544
    8. ' =' → logprob: -3.177436113357544
    9. ' character' → logprob: -3.302436113357544
    10. 'line' → logprob: -3.302436113357544

Token 1739: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5790435075759888
    2. ':' → logprob: -1.2040435075759888
    3. '   ' → logprob: -2.704043388366699
    4. '[' → logprob: -3.579043388366699
    5. ':
' → logprob: -3.579043388366699
    6. 'and' → logprob: -4.954043388366699
    7. ',' → logprob: -5.829043388366699
    8. '       ' → logprob: -6.079043388366699
    9. ' if' → logprob: -6.829043388366699
    10. ' ' → logprob: -7.579043388366699

Token 1740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.678381085395813
    2. ' and' → logprob: -1.053381085395813
    3. '       ' → logprob: -2.9283809661865234
    4. ':
' → logprob: -2.9283809661865234
    5. ':' → logprob: -4.053380966186523
    6. '[' → logprob: -4.428380966186523
    7. 'and' → logprob: -5.803380966186523
    8. ',' → logprob: -6.928380966186523
    9. ' if' → logprob: -7.053380966186523
    10. ' ' → logprob: -7.178380966186523

Token 1741: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8290544748306274
    2. ':' → logprob: -1.9540544748306274
    3. ':
' → logprob: -2.204054355621338
    4. '\n' → logprob: -3.204054355621338
    5. '(' → logprob: -3.329054355621338
    6. ' lines' → logprob: -3.454054355621338
    7. ' 
' → logprob: -3.579054355621338
    8. '(lines' → logprob: -3.704054355621338
    9. '[' → logprob: -3.829054355621338
    10. '       ' → logprob: -3.954054355621338

Token 1742: ' h' (ID: 312)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.059298038482666
    2. 'w' → logprob: -1.434298038482666
    3. ' w' → logprob: -1.809298038482666
    4. ' len' → logprob: -2.184298038482666
    5. 'len' → logprob: -2.559298038482666
    6. 'lines' → logprob: -2.809298038482666
    7. 'h' → logprob: -7.559298038482666
    8. ' h' → logprob: -8.059297561645508
    9. '(lines' → logprob: -9.809297561645508
    10. ' ' → logprob: -9.934297561645508

Token 1743: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741024076938629
    2. '==' → logprob: -0.9741023778915405
    3. '=' → logprob: -11.474102020263672
    4. '[' → logprob: -12.224102020263672
    5. '==
' → logprob: -12.474102020263672
    6. '1' → logprob: -13.474102020263672
    7. 'def' → logprob: -14.099102020263672
    8. '()==' → logprob: -14.349102020263672
    9. '```' → logprob: -14.474102020263672
    10. ' ' → logprob: -14.474102020263672

Token 1744: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011439072113716975
    2. ' ' → logprob: -9.125114440917969
    3. '   ' → logprob: -13.250114440917969
    4. '
' → logprob: -13.812614440917969
    5. '```' → logprob: -13.875114440917969
    6. 'import' → logprob: -15.250114440917969
    7. '2' → logprob: -15.687614440917969
    8. '...' → logprob: -15.687614440917969
    9. '  ' → logprob: -15.937614440917969
    10. '=' → logprob: -16.31261444091797

Token 1745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.375040054321289
    3. '   ' → logprob: -12.375040054321289
    4. '```' → logprob: -13.750040054321289
    5. '  ' → logprob: -14.375040054321289
    6. '=' → logprob: -14.562540054321289
    7. '0' → logprob: -14.875040054321289
    8. '2' → logprob: -15.062540054321289
    9. '
' → logprob: -15.687540054321289
    10. '`' → logprob: -15.875040054321289

Token 1746: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20153534412384033
    2. 'and' → logprob: -1.7015353441238403
    3. '   ' → logprob: -9.57653522491455
    4. '       ' → logprob: -10.95153522491455
    5. '[' → logprob: -11.20153522491455
    6. '==' → logprob: -12.32653522491455
    7. ':
' → logprob: -12.70153522491455
    8. ',' → logprob: -12.70153522491455
    9. '```' → logprob: -12.70153522491455
    10. ':' → logprob: -13.45153522491455

Token 1747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06841152161359787
    2. '   ' → logprob: -2.8184115886688232
    3. ' and' → logprob: -6.068411350250244
    4. '[' → logprob: -7.068411350250244
    5. ' if' → logprob: -7.318411350250244
    6. ':' → logprob: -7.818411350250244
    7. ':
' → logprob: -7.943411350250244
    8. ',' → logprob: -8.068411827087402
    9. ' return' → logprob: -8.318411827087402
    10. ' ' → logprob: -8.568411827087402

Token 1748: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0193614959716797
    2. 'if' → logprob: -1.5193614959716797
    3. 'line' → logprob: -1.7693614959716797
    4. ' if' → logprob: -2.3943614959716797
    5. 'ch' → logprob: -2.8943614959716797
    6. ' line' → logprob: -3.1443614959716797
    7. 'return' → logprob: -3.6443614959716797
    8. 'for' → logprob: -4.64436149597168
    9. ' for' → logprob: -5.01936149597168
    10. ' ch' → logprob: -5.14436149597168

Token 1749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2906857430934906
    2. '=' → logprob: -2.1656856536865234
    3. '   ' → logprob: -2.7906856536865234
    4. '[' → logprob: -3.0406856536865234
    5. ' ==' → logprob: -4.665685653686523
    6. ',' → logprob: -5.790685653686523
    7. '==' → logprob: -5.915685653686523
    8. ' ' → logprob: -6.165685653686523
    9. 'trip' → logprob: -6.165685653686523
    10. ':' → logprob: -6.915685653686523

Token 1750: ' ''.' (ID: 105941)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.18261030316352844
    2. '0' → logprob: -1.807610273361206
    3. ' lines' → logprob: -6.932610511779785
    4. 'len' → logprob: -7.057610511779785
    5. 'line' → logprob: -7.307610511779785
    6. ' ' → logprob: -8.932610511779785
    7. '(lines' → logprob: -9.807610511779785
    8. 'int' → logprob: -10.057610511779785
    9. '1' → logprob: -10.682610511779785
    10. 'trim' → logprob: -11.182610511779785

Token 1751: 'join' (ID: 10891)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1610742211341858
    2. 'join' → logprob: -1.911074161529541
    3. 'lines' → logprob: -7.161074161529541
    4. 'replace' → logprob: -10.9110746383667
    5. 'rstrip' → logprob: -11.0360746383667
    6. ' join' → logprob: -11.6610746383667
    7. ' strip' → logprob: -11.7860746383667
    8. 'line' → logprob: -11.7860746383667
    9. 'trim' → logprob: -13.0360746383667
    10. '.' → logprob: -13.1610746383667

Token 1752: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.003412490012124181
    2. '(lines' → logprob: -5.75341272354126
    3. 'c' → logprob: -9.378412246704102
    4. '[c' → logprob: -9.753412246704102
    5. 'line' → logprob: -10.003412246704102
    6. '[line' → logprob: -10.753412246704102
    7. ' lines' → logprob: -12.378412246704102
    8. '[' → logprob: -12.503412246704102
    9. '([' → logprob: -12.878412246704102
    10. '(line' → logprob: -13.003412246704102

Token 1753: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007420860230922699
    2. ')' → logprob: -5.382421016693115
    3. ')
' → logprob: -5.882421016693115
    4. ').' → logprob: -12.632420539855957
    5. '   ' → logprob: -12.757420539855957
    6. ')

' → logprob: -15.007420539855957
    7. ' )' → logprob: -15.257420539855957
    8. ' )
' → logprob: -15.257420539855957
    9. '0' → logprob: -15.507420539855957
    10. ')[' → logprob: -15.632420539855957

Token 1754: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007854487630538642
    2. '[' → logprob: -8.000785827636719
    3. ')' → logprob: -9.125785827636719
    4. 'lines' → logprob: -9.375785827636719
    5. 's' → logprob: -9.875785827636719
    6. ' ' → logprob: -10.000785827636719
    7. 'range' → logprob: -10.000785827636719
    8. ':' → logprob: -10.875785827636719
    9. ').' → logprob: -10.875785827636719
    10. '])' → logprob: -11.000785827636719

Token 1755: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033720046281814575
    2. ').' → logprob: -3.408720016479492
    3. ')
' → logprob: -10.408720016479492
    4. '   ' → logprob: -11.658720016479492
    5. ')return' → logprob: -12.158720016479492
    6. '<|end|>' → logprob: -12.283720016479492
    7. '])' → logprob: -12.533720016479492
    8. ')s' → logprob: -12.658720016479492
    9. '[' → logprob: -13.033720016479492
    10. '))' → logprob: -13.283720016479492

Token 1756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6878588199615479
    2. 'if' → logprob: -1.9378588199615479
    3. '==' → logprob: -2.187858819961548
    4. ' if' → logprob: -2.437858819961548
    5. '[' → logprob: -2.562858819961548
    6. '   ' → logprob: -3.437858819961548
    7. 'return' → logprob: -5.062858581542969
    8. ' ==' → logprob: -5.312858581542969
    9. '```' → logprob: -5.562858581542969
    10. '[token' → logprob: -6.187858581542969

Token 1757: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8985663652420044
    2. 'if' (adapté à ' if') → logprob: -1.0235663652420044
    3. ' if' → logprob: -1.6485663652420044
    4. ' return' → logprob: -3.273566246032715
    5. '       ' → logprob: -5.898566246032715
    6. '   ' → logprob: -8.523566246032715
    7. '           ' → logprob: -9.023566246032715
    8. ':return' → logprob: -9.648566246032715
    9. ' s' → logprob: -10.523566246032715
    10. '
' → logprob: -10.523566246032715

Token 1758: ' len' (ID: 4631)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006897979183122516
    2. ' s' → logprob: -7.50068998336792
    3. 'len' → logprob: -9.000689506530762
    4. 'lines' → logprob: -11.750689506530762
    5. ' all' → logprob: -13.375689506530762
    6. 'all' → logprob: -13.875689506530762
    7. '(s' → logprob: -14.000689506530762
    8. ' len' → logprob: -14.125689506530762
    9. ' lines' → logprob: -14.375689506530762
    10. ''s' → logprob: -14.500689506530762

Token 1759: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06201137602329254
    2. 's' → logprob: -2.812011480331421
    3. '(lines' → logprob: -10.56201171875
    4. ' s' → logprob: -11.68701171875
    5. 'lines' → logprob: -11.81201171875
    6. '(' → logprob: -14.06201171875
    7. '>' → logprob: -14.68701171875
    8. '{s' → logprob: -15.56201171875
    9. '(
' → logprob: -16.18701171875
    10. '>s' → logprob: -16.18701171875

Token 1760: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0840742290019989
    2. ' ==' → logprob: -2.5840742588043213
    3. ')' → logprob: -5.584074020385742
    4. ')==' → logprob: -6.584074020385742
    5. ' )' → logprob: -11.459074020385742
    6. '<=' → logprob: -12.084074020385742
    7. '()==' → logprob: -12.334074020385742
    8. '1' → logprob: -12.584074020385742
    9. ']==' → logprob: -13.334074020385742
    10. '===' → logprob: -13.959074020385742

Token 1761: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02365037053823471
    2. ' ==' → logprob: -3.7736504077911377
    3. '<=' → logprob: -8.023650169372559
    4. '1' → logprob: -10.273650169372559
    5. ')==' → logprob: -10.898650169372559
    6. '==
' → logprob: -12.148650169372559
    7. ' <=' → logprob: -12.398650169372559
    8. '=' → logprob: -12.398650169372559
    9. 'and' → logprob: -13.023650169372559
    10. '()==' → logprob: -13.148650169372559

Token 1762: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.6087021473795176e-05
    2. '0' → logprob: -10.750045776367188
    3. ' ' → logprob: -11.250045776367188
    4. '
' → logprob: -12.000045776367188
    5. '2' → logprob: -12.625045776367188
    6. '   ' → logprob: -13.625045776367188
    7. '```' → logprob: -15.125045776367188
    8. '3' → logprob: -16.125045776367188
    9. '
' → logprob: -16.187545776367188
    10. '`' → logprob: -17.125045776367188

Token 1763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4272752852994017e-05
    2. ' ' → logprob: -11.37502384185791
    3. '
' → logprob: -12.37502384185791
    4. '```' → logprob: -13.12502384185791
    5. '0' → logprob: -13.37502384185791
    6. '2' → logprob: -13.68752384185791
    7. '3' → logprob: -14.31252384185791
    8. '   ' → logprob: -14.37502384185791
    9. '>' → logprob: -14.62502384185791
    10. '`' → logprob: -14.81252384185791

Token 1764: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11648588627576828
    2. 'and' → logprob: -2.866485834121704
    3. '           ' → logprob: -3.616485834121704
    4. ':
' → logprob: -3.991485834121704
    5. ':' → logprob: -5.116486072540283
    6. ':return' → logprob: -6.866486072540283
    7. '       ' → logprob: -7.991486072540283
    8. '   ' → logprob: -9.741485595703125
    9. 'return' → logprob: -9.866485595703125
    10. '          ' → logprob: -10.116485595703125

Token 1765: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00029852005536668
    2. ' s' → logprob: -9.125298500061035
    3. '(s' → logprob: -9.250298500061035
    4. 'lines' → logprob: -9.750298500061035
    5. ''s' → logprob: -11.000298500061035
    6. '('' → logprob: -11.875298500061035
    7. '(' → logprob: -12.125298500061035
    8. ''' → logprob: -12.500298500061035
    9. ' lines' → logprob: -14.500298500061035
    10. 'ch' → logprob: -14.625298500061035

Token 1766: '[' (ID: 58)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4666275978088379
    2. ' in' → logprob: -1.091627597808838
    3. '[' → logprob: -3.341627597808838
    4. '.is' → logprob: -6.716627597808838
    5. 's' → logprob: -8.09162712097168
    6. '.' → logprob: -9.34162712097168
    7. 'not' → logprob: -9.59162712097168
    8. ' not' → logprob: -10.09162712097168
    9. 'is' → logprob: -10.21662712097168
    10. '   ' → logprob: -11.09162712097168

Token 1767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016630393220111728
    2. ''' → logprob: -6.5016632080078125
    3. 's' → logprob: -9.751663208007812
    4. 'isdigit' → logprob: -10.876663208007812
    5. '012' → logprob: -10.876663208007812
    6. ''s' → logprob: -11.876663208007812
    7. ' ' → logprob: -11.876663208007812
    8. '"' → logprob: -11.876663208007812
    9. '1' → logprob: -12.126663208007812
    10. 'r' → logprob: -12.501663208007812

Token 1768: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020959896966814995
    2. 'in' → logprob: -4.145959854125977
    3. ')' → logprob: -6.645959854125977
    4. ' !=' → logprob: -6.895959854125977
    5. ']' → logprob: -7.145959854125977
    6. '!=' → logprob: -7.520959854125977
    7. '.is' → logprob: -7.520959854125977
    8. ' not' → logprob: -8.270959854125977
    9. 'isdigit' → logprob: -8.395959854125977
    10. '!='' → logprob: -9.395959854125977

Token 1769: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26607581973075867
    2. 'in' → logprob: -1.516075849533081
    3. ' not' → logprob: -4.891075611114502
    4. 'isdigit' → logprob: -6.016075611114502
    5. '!=' → logprob: -6.266075611114502
    6. '.is' → logprob: -6.891075611114502
    7. 'not' → logprob: -7.641075611114502
    8. ' !=' → logprob: -8.14107608795166
    9. '!='' → logprob: -8.39107608795166
    10. '.' → logprob: -9.64107608795166

Token 1770: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.659005157416686e-05
    2. ''+' → logprob: -10.375066757202148
    3. ' '' → logprob: -10.625066757202148
    4. '"' → logprob: -12.000066757202148
    5. '012' → logprob: -13.250066757202148
    6. ''-' → logprob: -13.625066757202148
    7. '('' → logprob: -14.125066757202148
    8. '
' → logprob: -14.875066757202148
    9. '')' → logprob: -15.000066757202148
    10. ''.' → logprob: -15.500066757202148

Token 1771: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.0002901757834479213
    2. ''' → logprob: -8.375289916992188
    3. '"' → logprob: -10.750289916992188
    4. ''+' → logprob: -11.250289916992188
    5. '+-' → logprob: -11.875289916992188
    6. ')' → logprob: -11.875289916992188
    7. '123' → logprob: -12.500289916992188
    8. '')' → logprob: -13.500289916992188
    9. '0' → logprob: -13.875289916992188
    10. '()' → logprob: -14.000289916992188

Token 1772: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -5.512236498361744e-07
    2. '012' → logprob: -14.875000953674316
    3. '3' → logprob: -16.5
    4. '789' → logprob: -19.25
    5. '34' → logprob: -19.5
    6. '9' → logprob: -19.875
    7. '
' → logprob: -20.125
    8. '349' → logprob: -20.125
    9. '346' → logprob: -20.375
    10. '356' → logprob: -20.625

Token 1773: '678' (ID: 30833)
  Prédit: '678'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '678' → logprob: -0.0005053732893429697
    2. '9' → logprob: -8.125505447387695
    3. '789' → logprob: -8.500505447387695
    4. '679' → logprob: -12.500505447387695
    5. '69' → logprob: -14.250505447387695
    6. '689' → logprob: -14.625505447387695
    7. '345' → logprob: -14.750505447387695
    8. '567' → logprob: -15.125505447387695
    9. ''''' → logprob: -16.625505447387695
    10. '67' → logprob: -16.625505447387695

Token 1774: '9' (ID: 24)
  Prédit: '678'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '678' → logprob: -0.2016662210226059
    2. '9' → logprob: -1.701666235923767
    3. '789' → logprob: -9.076665878295898
    4. '679' → logprob: -9.201665878295898
    5. '69' → logprob: -10.451665878295898
    6. '689' → logprob: -12.701665878295898
    7. '67' → logprob: -12.951665878295898
    8. ''' → logprob: -13.951665878295898
    9. '567' → logprob: -14.326665878295898
    10. '89' → logprob: -14.826665878295898

Token 1775: '+-' (ID: 44764)
  Prédit: '+-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+-' → logprob: -0.5165749788284302
    2. '':
' → logprob: -1.0165749788284302
    3. '012' → logprob: -3.8915748596191406
    4. ')' → logprob: -4.141574859619141
    5. '):
' → logprob: -6.266574859619141
    6. '':' → logprob: -7.141574859619141
    7. '+' → logprob: -7.641574859619141
    8. ''' → logprob: -8.14157485961914
    9. ''):
' → logprob: -8.26657485961914
    10. ')+' → logprob: -8.26657485961914

Token 1776: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.639265239238739
    2. '*/' → logprob: -1.5142652988433838
    3. '()' → logprob: -2.514265298843384
    4. ')' → logprob: -2.889265298843384
    5. '().' → logprob: -3.264265298843384
    6. '*.' → logprob: -4.014265060424805
    7. '':
' → logprob: -4.389265060424805
    8. '.' → logprob: -4.514265060424805
    9. '*)' → logprob: -4.639265060424805
    10. '()*' → logprob: -5.389265060424805

Token 1777: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.26828688383102417
    2. '()' → logprob: -2.018286943435669
    3. '().'' → logprob: -2.393286943435669
    4. ').' → logprob: -5.76828670501709
    5. ')' → logprob: -5.76828670501709
    6. '.' → logprob: -6.14328670501709
    7. ').'' → logprob: -6.89328670501709
    8. '()/' → logprob: -7.89328670501709
    9. '.)' → logprob: -8.26828670501709
    10. '/' → logprob: -8.39328670501709

Token 1778: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.00390967633575201
    2. ')' → logprob: -5.753909587860107
    3. '):
' → logprob: -8.878910064697266
    4. ''' → logprob: -8.878910064697266
    5. ''):
' → logprob: -8.878910064697266
    6. ' '' → logprob: -9.003910064697266
    7. '012' → logprob: -9.753910064697266
    8. '':' → logprob: -9.753910064697266
    9. ':
' → logprob: -11.253910064697266
    10. ']' → logprob: -11.503910064697266

Token 1779: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28427985310554504
    2. '       ' → logprob: -1.4092798233032227
    3. ':
' → logprob: -5.909279823303223
    4. '   ' → logprob: -8.909279823303223
    5. 'return' → logprob: -9.159279823303223
    6. ':' → logprob: -9.784279823303223
    7. ' return' → logprob: -10.159279823303223
    8. '               ' → logprob: -10.784279823303223
    9. ':return' → logprob: -11.409279823303223
    10. ',' → logprob: -11.659279823303223

Token 1780: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007826411165297031
    2. '           ' → logprob: -5.257826328277588
    3. ' return' → logprob: -6.507826328277588
    4. '       ' → logprob: -7.007826328277588
    5. '   ' → logprob: -8.632826805114746
    6. '               ' → logprob: -11.757826805114746
    7. '	return' → logprob: -12.757826805114746
    8. '
' → logprob: -13.007826805114746
    9. ':return' → logprob: -14.257826805114746
    10. ' ' → logprob: -15.257826805114746

Token 1781: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.0011708177626132965
    2. ' Cell' → logprob: -6.751170635223389
    3. 'None' → logprob: -15.251171112060547
    4. '   ' → logprob: -15.376171112060547
    5. '(Cell' → logprob: -15.751171112060547
    6. '_Cell' → logprob: -19.251171112060547
    7. '<Cell' → logprob: -19.751171112060547
    8. ' ' → logprob: -19.876171112060547
    9. '       ' → logprob: -20.001171112060547
    10. ' None' → logprob: -21.001171112060547

Token 1782: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0007252985378727317
    2. '(' → logprob: -7.750725269317627
    3. '([' → logprob: -8.875725746154785
    4. '(
' → logprob: -9.750725746154785
    5. 'lines' → logprob: -10.375725746154785
    6. '(s' → logprob: -10.875725746154785
    7. '([]' → logprob: -11.125725746154785
    8. '(data' → logprob: -11.500725746154785
    9. '((' → logprob: -12.625725746154785
    10. '([(' → logprob: -12.625725746154785

Token 1783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014479756355285645
    2. '),' → logprob: -7.001448154449463
    3. ',s' → logprob: -8.376447677612305
    4. '[' → logprob: -8.876447677612305
    5. ' ,' → logprob: -10.251447677612305
    6. ',),' → logprob: -10.251447677612305
    7. '   ' → logprob: -10.501447677612305
    8. ',line' → logprob: -10.626447677612305
    9. ',[' → logprob: -10.876447677612305
    10. '       ' → logprob: -11.251447677612305

Token 1784: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.09801722317934036
    2. ' base' → logprob: -2.7230172157287598
    3. '0' → logprob: -3.5980172157287598
    4. ' ' → logprob: -8.223017692565918
    5. '   ' → logprob: -11.473017692565918
    6. '(base' → logprob: -11.723017692565918
    7. '	base' → logprob: -12.223017692565918
    8. '_base' → logprob: -12.723017692565918
    9. 'Base' → logprob: -13.098017692565918
    10. '1' → logprob: -13.223017692565918

Token 1785: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00145297113340348
    2. '[' → logprob: -6.751452922821045
    3. ')' → logprob: -8.501453399658203
    4. 'line' → logprob: -10.876453399658203
    5. '   ' → logprob: -11.001453399658203
    6. ')
' → logprob: -11.001453399658203
    7. '```' → logprob: -11.876453399658203
    8. '),' → logprob: -12.376453399658203
    9. '[line' → logprob: -12.501453399658203
    10. '       ' → logprob: -12.876453399658203

Token 1786: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0003933768020942807
    2. ',' → logprob: -8.37539291381836
    3. ' ),' → logprob: -9.50039291381836
    4. 's' → logprob: -10.25039291381836
    5. '   ' → logprob: -11.00039291381836
    6. '       ' → logprob: -11.37539291381836
    7. ')' → logprob: -11.75039291381836
    8. ',),' → logprob: -11.87539291381836
    9. '[' → logprob: -12.62539291381836
    10. ',s' → logprob: -13.25039291381836

Token 1787: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.203409844194539e-05
    2. ' s' → logprob: -10.125041961669922
    3. 'lines' → logprob: -13.375041961669922
    4. ' lines' → logprob: -15.375041961669922
    5. '   ' → logprob: -16.750041961669922
    6. '(s' → logprob: -17.125041961669922
    7. '`s' → logprob: -18.500041961669922
    8. ' ' → logprob: -18.500041961669922
    9. '(' → logprob: -18.625041961669922
    10. '	s' → logprob: -18.625041961669922

Token 1788: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1789: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.000003814697266
    4. ')' → logprob: -16.875003814697266
    5. ']' → logprob: -17.875003814697266
    6. '])' → logprob: -18.500003814697266
    7. '1' → logprob: -18.750003814697266
    8. '   ' → logprob: -18.750003814697266
    9. '۰' → logprob: -18.750003814697266
    10. '(' → logprob: -19.500003814697266

Token 1790: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009814172983169556
    2. '<|end|>' → logprob: -4.759814262390137
    3. ']' → logprob: -7.009814262390137
    4. '   ' → logprob: -9.134814262390137
    5. '}' → logprob: -10.009814262390137
    6. '       ' → logprob: -10.134814262390137
    7. ')
' → logprob: -10.384814262390137
    8. '<|end|>' → logprob: -10.759814262390137
    9. ')return' → logprob: -11.134814262390137
    10. '')' → logprob: -11.259814262390137

Token 1791: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12223391234874725
    2. '
' → logprob: -2.9972338676452637
    3. '<|end|>' → logprob: -2.9972338676452637
    4. '    
' → logprob: -5.622233867645264
    5. '...' → logprob: -6.122233867645264
    6. '       ' → logprob: -6.122233867645264
    7. ' ' → logprob: -6.372233867645264
    8. ')' → logprob: -7.247233867645264
    9. '.' → logprob: -7.372233867645264
    10. 'return' → logprob: -7.497233867645264

Token 1792: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.47010502219200134
    2. 'return' → logprob: -1.2201050519943237
    3. '   ' → logprob: -2.595104932785034
    4. 'def' → logprob: -6.095105171203613
    5. 'if' → logprob: -7.345105171203613
    6. '
' → logprob: -7.345105171203613
    7. 'else' → logprob: -8.095105171203613
    8. '    
' → logprob: -8.095105171203613
    9. ' #' → logprob: -8.220105171203613
    10. 'raise' → logprob: -8.220105171203613

Token 1793: ' Remove' (ID: 18141)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36099743843078613
    2. 'return' → logprob: -1.2359974384307861
    3. 'def' → logprob: -4.985997200012207
    4. 'tokens' → logprob: -6.485997200012207
    5. 'class' → logprob: -6.860997200012207
    6. 'from' → logprob: -7.110997200012207
    7. 'expr' → logprob: -7.610997200012207
    8. 'import' → logprob: -7.735997200012207
    9. '   ' → logprob: -7.860997200012207
    10. 'for' → logprob: -8.610997200012207

Token 1794: ' external' (ID: 12229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.768877387046814
    2. 'def' → logprob: -1.893877387046814
    3. 'data' → logprob: -2.5188775062561035
    4. ' lines' → logprob: -2.5188775062561035
    5. '.' → logprob: -3.5188775062561035
    6. 'lines' → logprob: -3.7688775062561035
    7. '       ' → logprob: -3.8938775062561035
    8. 'import' → logprob: -3.8938775062561035
    9. 'if' → logprob: -4.0188775062561035
    10. '```' → logprob: -4.6438775062561035

Token 1795: ' parentheses' (ID: 180602)
  Prédit: ' spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spaces' → logprob: -1.1782358884811401
    2. ''' → logprob: -1.6782358884811401
    3. 'def' → logprob: -2.4282360076904297
    4. '_' → logprob: -2.5532360076904297
    5. ' ' → logprob: -2.6782360076904297
    6. '_spaces' → logprob: -3.0532360076904297
    7. 'spaces' → logprob: -3.1782360076904297
    8. '.' → logprob: -3.8032360076904297
    9. ' parentheses' → logprob: -4.05323600769043
    10. 'trim' → logprob: -4.30323600769043

Token 1796: ' wrapping' (ID: 69235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06186728924512863
    2. '
' → logprob: -2.9368672370910645
    3. ' if' → logprob: -6.1868672370910645
    4. '    
' → logprob: -6.6868672370910645
    5. 'if' → logprob: -6.8118672370910645
    6. '(lines' → logprob: -6.9368672370910645
    7. ')
' → logprob: -8.436867713928223
    8. '(' → logprob: -8.561867713928223
    9. '(
' → logprob: -8.561867713928223
    10. '()
' → logprob: -8.811867713928223

Token 1797: ' all' (ID: 722)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2971552610397339
    2. '   ' → logprob: -1.6721552610397339
    3. ' if' → logprob: -2.9221553802490234
    4. '(
' → logprob: -5.297155380249023
    5. 'lines' → logprob: -6.172155380249023
    6. 'for' → logprob: -6.422155380249023
    7. '(lines' → logprob: -6.547155380249023
    8. 'while' → logprob: -6.922155380249023
    9. '(' → logprob: -7.172155380249023
    10. ' lines' → logprob: -7.422155380249023

Token 1798: ' if' (ID: 538)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.5749905109405518
    2. 'if' → logprob: -1.6999905109405518
    3. ' if' → logprob: -2.4499905109405518
    4. '(' → logprob: -2.6999905109405518
    5. '   ' → logprob: -2.6999905109405518
    6. ' lines' → logprob: -4.324990272521973
    7. ' (' → logprob: -5.324990272521973
    8. 'lines' → logprob: -5.449990272521973
    9. '(lines' → logprob: -6.324990272521973
    10. ' and' → logprob: -6.574990272521973

Token 1799: ' any' (ID: 1062)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.5154623985290527
    2. ' len' → logprob: -1.6404623985290527
    3. 'len' → logprob: -1.8904623985290527
    4. ' h' → logprob: -1.8904623985290527
    5. ' lines' → logprob: -2.1404623985290527
    6. ' s' → logprob: -2.7654623985290527
    7. ' (' → logprob: -4.015462398529053
    8. '(' → logprob: -4.265462398529053
    9. '(len' → logprob: -4.265462398529053
    10. 'lines' → logprob: -4.390462398529053

Token 1800: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3243049681186676
    2. 'if' → logprob: -1.3243049383163452
    3. ' if' → logprob: -5.199305057525635
    4. 'for' → logprob: -6.199305057525635
    5. 'while' → logprob: -6.699305057525635
    6. '(
' → logprob: -7.949305057525635
    7. 'lines' → logprob: -8.074304580688477
    8. 'i' → logprob: -8.324304580688477
    9. '
' → logprob: -8.574304580688477
    10. '(' → logprob: -8.699304580688477

Token 1801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027255123481154442
    2. ' if' → logprob: -3.777255058288574
    3. 'if' → logprob: -5.777255058288574
    4. ' while' → logprob: -7.777255058288574
    5. '
' → logprob: -8.402255058288574
    6. 'while' → logprob: -8.902255058288574
    7. ' for' → logprob: -10.652255058288574
    8. 'for' → logprob: -11.027255058288574
    9. 'def' → logprob: -11.152255058288574
    10. '    
' → logprob: -11.652255058288574

Token 1802: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0472346544265747
    2. 'if' → logprob: -1.0472346544265747
    3. ' if' → logprob: -1.6722346544265747
    4. ' while' → logprob: -2.922234535217285
    5. 'while' → logprob: -3.797234535217285
    6. ' i' → logprob: -4.297234535217285
    7. 'i' → logprob: -4.797234535217285
    8. '(
' → logprob: -6.297234535217285
    9. 'for' → logprob: -6.422234535217285
    10. '
' → logprob: -6.422234535217285

Token 1803: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.388188898563385
    2. 'while' → logprob: -1.1381888389587402
    3. '   ' → logprob: -6.88818883895874
    4. 'i' → logprob: -9.888189315795898
    5. ' while' → logprob: -9.888189315795898
    6. '#' → logprob: -10.013189315795898
    7. 'l' → logprob: -10.638189315795898
    8. ' if' → logprob: -10.638189315795898
    9. 'first' → logprob: -10.638189315795898
    10. 'start' → logprob: -10.888189315795898

Token 1804: ' if' (ID: 538)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5359527468681335
    2. ' lines' → logprob: -1.4109528064727783
    3. 'if' → logprob: -1.9109528064727783
    4. ' if' → logprob: -4.410952568054199
    5. 'len' → logprob: -5.035952568054199
    6. 'h' → logprob: -6.285952568054199
    7. ' h' → logprob: -7.535952568054199
    8. 'w' → logprob: -7.535952568054199
    9. '(lines' → logprob: -7.535952568054199
    10. '   ' → logprob: -8.2859525680542

Token 1805: ' first' (ID: 1577)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.14474399387836456
    2. ' lines' → logprob: -2.5197439193725586
    3. 'len' → logprob: -3.1447439193725586
    4. 'h' → logprob: -5.394743919372559
    5. '(' → logprob: -6.394743919372559
    6. '(lines' → logprob: -6.644743919372559
    7. ' len' → logprob: -6.644743919372559
    8. ' h' → logprob: -7.269743919372559
    9. ' (' → logprob: -7.394743919372559
    10. 's' → logprob: -8.019743919372559

Token 1806: ' char' (ID: 1826)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0237356424331665
    2. ' and' → logprob: -1.6487356424331665
    3. ' line' → logprob: -1.8987356424331665
    4. '[' → logprob: -2.148735523223877
    5. 'and' → logprob: -2.273735523223877
    6. 'if' → logprob: -3.648735523223877
    7. ' ==' → logprob: -4.273735523223877
    8. 'char' → logprob: -4.648735523223877
    9. '==' → logprob: -5.148735523223877
    10. '(' → logprob: -5.273735523223877

Token 1807: ' '('' (ID: 87284)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7654658555984497
    2. '[' → logprob: -0.8904658555984497
    3. ' and' → logprob: -3.01546573638916
    4. 'if' → logprob: -3.89046573638916
    5. '(' → logprob: -4.14046573638916
    6. '==' → logprob: -4.39046573638916
    7. 'and' → logprob: -5.39046573638916
    8. ' if' → logprob: -5.64046573638916
    9. '   ' → logprob: -5.76546573638916
    10. 'def' → logprob: -6.26546573638916

Token 1808: ' last' (ID: 2174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8315790891647339
    2. ' and' → logprob: -0.9565790891647339
    3. 'if' → logprob: -2.4565792083740234
    4. 'and' → logprob: -2.5815792083740234
    5. ' if' → logprob: -4.081579208374023
    6. ':
' → logprob: -7.706579208374023
    7. '[' → logprob: -7.831579208374023
    8. '
' → logprob: -8.581579208374023
    9. ' ==' → logprob: -8.581579208374023
    10. ')' → logprob: -8.831579208374023

Token 1809: ' char' (ID: 1826)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3194636106491089
    2. ')' → logprob: -1.4444636106491089
    3. ' ==' → logprob: -1.6944636106491089
    4. '==' → logprob: -2.3194637298583984
    5. '=' → logprob: -2.8194637298583984
    6. ' and' → logprob: -3.4444637298583984
    7. ']' → logprob: -3.5694637298583984
    8. ' !=' → logprob: -4.569463729858398
    9. ':
' → logprob: -4.569463729858398
    10. ' =' → logprob: -4.819463729858398

Token 1810: ' ')'' (ID: 198756)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14851626753807068
    2. '==' → logprob: -2.3985161781311035
    3. ' and' → logprob: -3.6485161781311035
    4. ')' → logprob: -5.1485161781311035
    5. '[' → logprob: -5.5235161781311035
    6. ' in' → logprob: -5.8985161781311035
    7. ' !=' → logprob: -6.3985161781311035
    8. '=='' → logprob: -6.5235161781311035
    9. 'and' → logprob: -7.0235161781311035
    10. '```' → logprob: -7.0235161781311035

Token 1811: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060542598366737366
    2. ' if' → logprob: -3.560542583465576
    3. ' and' → logprob: -3.935542583465576
    4. 'if' → logprob: -5.185542583465576
    5. ':
' → logprob: -6.060542583465576
    6. 'and' → logprob: -6.560542583465576
    7. '
' → logprob: -7.310542583465576
    8. ':' → logprob: -8.310543060302734
    9. ' ' → logprob: -9.560543060302734
    10. '[' → logprob: -9.810543060302734

Token 1812: ' entire' (ID: 6508)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.186542809009552
    2. ' h' → logprob: -2.9365427494049072
    3. 'lines' → logprob: -3.3115427494049072
    4. 'all' → logprob: -3.6865427494049072
    5. ' all' → logprob: -3.8115427494049072
    6. 'len' → logprob: -3.9365427494049072
    7. ' lines' → logprob: -4.686542987823486
    8. ' len' → logprob: -6.436542987823486
    9. ' ' → logprob: -7.686542987823486
    10. 's' → logprob: -7.811542987823486

Token 1813: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.1300833523273468
    2. ' lines' → logprob: -2.5050833225250244
    3. '(lines' → logprob: -3.3800833225250244
    4. 'if' → logprob: -6.1300835609436035
    5. 'line' → logprob: -7.0050835609436035
    6. '
' → logprob: -7.3800835609436035
    7. '   ' → logprob: -7.8800835609436035
    8. ' if' → logprob: -7.8800835609436035
    9. ' and' → logprob: -8.005083084106445
    10. 'and' → logprob: -8.255083084106445

Token 1814: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11324391514062881
    2. ' and' → logprob: -2.488243818283081
    3. 'and' → logprob: -4.36324405670166
    4. ':
' → logprob: -4.86324405670166
    5. ' if' → logprob: -6.73824405670166
    6. ':' → logprob: -7.23824405670166
    7. 'if' → logprob: -7.48824405670166
    8. '
' → logprob: -7.73824405670166
    9. '[' → logprob: -8.98824405670166
    10. ' ' → logprob: -9.48824405670166

Token 1815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10115327686071396
    2. ' and' → logprob: -2.4761533737182617
    3. 'and' → logprob: -4.601153373718262
    4. ':
' → logprob: -6.976153373718262
    5. ' if' → logprob: -7.226153373718262
    6. ':' → logprob: -8.851153373718262
    7. 'if' → logprob: -9.226153373718262
    8. ',' → logprob: -9.976153373718262
    9. '[' → logprob: -10.726153373718262
    10. '```' → logprob: -10.851153373718262

Token 1816: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4099046587944031
    2. '   ' → logprob: -1.1599047183990479
    3. ' if' → logprob: -3.784904718399048
    4. 'first' → logprob: -10.534904479980469
    5. 'while' → logprob: -11.284904479980469
    6. '
' → logprob: -12.159904479980469
    7. 'for' → logprob: -12.409904479980469
    8. '```' → logprob: -12.534904479980469
    9. ' first' → logprob: -13.284904479980469
    10. 'line' → logprob: -13.534904479980469

Token 1817: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3854037821292877
    2. ' lines' → logprob: -1.3854037523269653
    3. 'len' → logprob: -3.385403871536255
    4. 'h' → logprob: -4.260403633117676
    5. ' len' → logprob: -4.260403633117676
    6. ' h' → logprob: -5.260403633117676
    7. ' all' → logprob: -6.885403633117676
    8. '(lines' → logprob: -7.135403633117676
    9. 'all' → logprob: -8.010403633117676
    10. ' (' → logprob: -10.135403633117676

Token 1818: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003035939997062087
    2. ' and' → logprob: -6.378036022186279
    3. 'and' → logprob: -6.628036022186279
    4. '   ' → logprob: -12.003035545349121
    5. '```' → logprob: -13.378035545349121
    6. '0' → logprob: -14.128035545349121
    7. ' [' → logprob: -14.753035545349121
    8. '=' → logprob: -15.378035545349121
    9. '
' → logprob: -15.753035545349121
    10. ' ' → logprob: -15.753035545349121

Token 1819: 'base' (ID: 5423)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019018957391381264
    2. ' ' → logprob: -9.000189781188965
    3. '[' → logprob: -9.875189781188965
    4. '   ' → logprob: -11.750189781188965
    5. '
' → logprob: -13.125189781188965
    6. '```' → logprob: -13.875189781188965
    7. '-' → logprob: -14.250189781188965
    8. '#' → logprob: -14.375189781188965
    9. '][' → logprob: -14.500189781188965
    10. 'def' → logprob: -14.750189781188965

Token 1820: '_line' (ID: 14418)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009929739870131016
    2. '[' → logprob: -5.009929656982422
    3. '][' → logprob: -6.634929656982422
    4. '_line' → logprob: -7.009929656982422
    5. '   ' → logprob: -8.009929656982422
    6. ' ' → logprob: -8.259929656982422
    7. '=' → logprob: -9.509929656982422
    8. ']' → logprob: -10.009929656982422
    9. '```' → logprob: -10.134929656982422
    10. 'Line' → logprob: -10.134929656982422

Token 1821: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5319335460662842
    2. '][' → logprob: -0.9069335460662842
    3. ']' → logprob: -5.531933784484863
    4. ' and' → logprob: -6.031933784484863
    5. '   ' → logprob: -7.406933784484863
    6. 'and' → logprob: -7.656933784484863
    7. '0' → logprob: -8.031933784484863
    8. ')[' → logprob: -8.156933784484863
    9. '].' → logprob: -9.406933784484863
    10. ''][' → logprob: -9.406933784484863

Token 1822: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013619766104966402
    2. ' ' → logprob: -9.125136375427246
    3. '(' → logprob: -11.500136375427246
    4. '==' → logprob: -12.750136375427246
    5. '[' → logprob: -12.750136375427246
    6. '-' → logprob: -13.000136375427246
    7. '   ' → logprob: -13.375136375427246
    8. ']' → logprob: -13.500136375427246
    9. '```' → logprob: -14.125136375427246
    10. '#' → logprob: -14.375136375427246

Token 1823: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00634288415312767
    2. '==' → logprob: -5.131342887878418
    3. ')' → logprob: -8.381342887878418
    4. '=='' → logprob: -9.631342887878418
    5. ')==' → logprob: -10.756342887878418
    6. '(' → logprob: -10.756342887878418
    7. ']' → logprob: -10.756342887878418
    8. '()' → logprob: -11.381342887878418
    9. ']==' → logprob: -11.506342887878418
    10. '[' → logprob: -11.881342887878418

Token 1824: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2531313896179199
    2. '==' → logprob: -1.50313138961792
    3. '=='' → logprob: -7.00313138961792
    4. '[' → logprob: -9.503131866455078
    5. ')' → logprob: -10.003131866455078
    6. ')==' → logprob: -10.003131866455078
    7. '=' → logprob: -10.378131866455078
    8. '(' → logprob: -10.753131866455078
    9. '==
' → logprob: -10.753131866455078
    10. '()==' → logprob: -11.003131866455078

Token 1825: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007597190560773015
    2. ' '('' → logprob: -7.250759601593018
    3. ''(' → logprob: -10.375760078430176
    4. '(' → logprob: -11.000760078430176
    5. '"' → logprob: -13.625760078430176
    6. '('' → logprob: -14.750760078430176
    7. '(
' → logprob: -15.250760078430176
    8. '')' → logprob: -17.25075912475586
    9. ' ' → logprob: -17.75075912475586
    10. ' '' → logprob: -18.00075912475586

Token 1826: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04880616441369057
    2. 'and' → logprob: -3.0488061904907227
    3. ')' → logprob: -9.048806190490723
    4. '   ' → logprob: -9.423806190490723
    5. ':
' → logprob: -11.173806190490723
    6. ' ' → logprob: -13.048806190490723
    7. '       ' → logprob: -13.923806190490723
    8. ':' → logprob: -14.173806190490723
    9. '):
' → logprob: -14.298806190490723
    10. '	and' → logprob: -14.673806190490723

Token 1827: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.018164457753300667
    2. ' lines' → logprob: -4.01816463470459
    3. '   ' → logprob: -11.26816463470459
    4. '(lines' → logprob: -13.76816463470459
    5. '	lines' → logprob: -15.01816463470459
    6. '
' → logprob: -16.268163681030273
    7. ' ' → logprob: -16.643163681030273
    8. '    ' → logprob: -17.018163681030273
    9. '       ' → logprob: -17.018163681030273
    10. '  ' → logprob: -17.268163681030273

Token 1828: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2546524107456207
    2. 'base' → logprob: -1.5046523809432983
    3. '][' → logprob: -7.504652500152588
    4. '   ' → logprob: -7.629652500152588
    5. '[-' → logprob: -8.00465202331543
    6. '(base' → logprob: -8.37965202331543
    7. '
' → logprob: -8.62965202331543
    8. 'len' → logprob: -8.62965202331543
    9. 'lines' → logprob: -9.25465202331543
    10. '=' → logprob: -9.50465202331543

Token 1829: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.05299883335828781
    2. 'len' → logprob: -3.6779987812042236
    3. '-' → logprob: -4.677999019622803
    4. '0' → logprob: -5.177999019622803
    5. 'line' → logprob: -5.927999019622803
    6. 'lines' → logprob: -6.177999019622803
    7. '[' → logprob: -6.302999019622803
    8. '(base' → logprob: -6.552999019622803
    9. ' base' → logprob: -7.302999019622803
    10. ']' → logprob: -7.427999019622803

Token 1830: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0001817297888919711
    2. 'line' → logprob: -8.875182151794434
    3. 'Line' → logprob: -10.125182151794434
    4. '_LINE' → logprob: -14.625182151794434
    5. '_layer' → logprob: -15.375182151794434
    6. ']' → logprob: -15.500182151794434
    7. '   ' → logprob: -15.625182151794434
    8. '[line' → logprob: -15.750182151794434
    9. '```' → logprob: -16.125181198120117
    10. '[' → logprob: -16.500181198120117

Token 1831: '][-' (ID: 162298)
  Prédit: '][-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][-' → logprob: -0.1787624955177307
    2. '][' → logprob: -2.303762435913086
    3. ']' → logprob: -3.178762435913086
    4. '[-' → logprob: -3.928762435913086
    5. '[len' → logprob: -7.303762435913086
    6. '].' → logprob: -7.553762435913086
    7. '   ' → logprob: -8.803762435913086
    8. ']
' → logprob: -8.803762435913086
    9. ')[' → logprob: -9.178762435913086
    10. '[' → logprob: -9.178762435913086

Token 1832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019185843120794743
    2. ')' → logprob: -8.875191688537598
    3. ')]' → logprob: -10.125191688537598
    4. ']' → logprob: -11.500191688537598
    5. ' ' → logprob: -13.875191688537598
    6. '')' → logprob: -14.625191688537598
    7. '']' → logprob: -16.750192642211914
    8. ')]
' → logprob: -16.875192642211914
    9. '])' → logprob: -17.125192642211914
    10. '```' → logprob: -17.375192642211914

Token 1833: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034574063029140234
    2. ']==' → logprob: -6.253457546234131
    3. ')' → logprob: -6.753457546234131
    4. '']' → logprob: -8.378457069396973
    5. ')]' → logprob: -10.378457069396973
    6. ' ]' → logprob: -10.628457069396973
    7. '==' → logprob: -10.753457069396973
    8. ' ==' → logprob: -10.753457069396973
    9. ')==' → logprob: -11.253457069396973
    10. ']=='' → logprob: -12.628457069396973

Token 1834: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6998547315597534
    2. ')' → logprob: -1.1998547315597534
    3. '==' → logprob: -1.8248547315597534
    4. ')==' → logprob: -4.199854850769043
    5. ']' → logprob: -4.324854850769043
    6. ']==' → logprob: -4.574854850769043
    7. '):' → logprob: -7.199854850769043
    8. '):
' → logprob: -7.824854850769043
    9. ':' → logprob: -8.074854850769043
    10. ')]' → logprob: -8.074854850769043

Token 1835: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0010434092255309224
    2. ')' → logprob: -6.876043319702148
    3. ' ')'' → logprob: -12.126043319702148
    4. ''' → logprob: -12.251043319702148
    5. '']' → logprob: -15.876043319702148
    6. ')'' → logprob: -16.00104331970215
    7. '")' → logprob: -16.25104331970215
    8. ' ')' → logprob: -16.62604331970215
    9. '')"' → logprob: -17.62604331970215
    10. ''):' → logprob: -18.00104331970215

Token 1836: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07501207292079926
    2. ':
' → logprob: -2.950011968612671
    3. '   ' → logprob: -4.45001220703125
    4. ' and' → logprob: -5.57501220703125
    5. '       ' → logprob: -5.82501220703125
    6. '):' → logprob: -6.70001220703125
    7. ')' → logprob: -9.57501220703125
    8. '):
' → logprob: -9.70001220703125
    9. ':return' → logprob: -10.07501220703125
    10. ' :' → logprob: -10.57501220703125

Token 1837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03022097982466221
    2. '   ' → logprob: -3.5302209854125977
    3. ':' → logprob: -8.530220985412598
    4. ' and' → logprob: -8.780220985412598
    5. ':
' → logprob: -10.280220985412598
    6. ')' → logprob: -11.155220985412598
    7. '<|end|>' → logprob: -11.405220985412598
    8. '[' → logprob: -11.530220985412598
    9. '    ' → logprob: -11.780220985412598
    10. '):
' → logprob: -12.155220985412598

Token 1838: ' #' (ID: 1069)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7018918991088867
    2. 'lines' → logprob: -0.9518918991088867
    3. '       ' → logprob: -2.2018918991088867
    4. 'return' → logprob: -5.951891899108887
    5. '   ' → logprob: -6.326891899108887
    6. ' return' → logprob: -6.826891899108887
    7. 'new' → logprob: -7.326891899108887
    8. ' new' → logprob: -7.451891899108887
    9. '#' (adapté à ' #') → logprob: -8.326891899108887
    10. '	lines' → logprob: -8.326891899108887

Token 1839: ' check' (ID: 2371)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3152529001235962
    2. '       ' → logprob: -1.8152529001235962
    3. ' lines' → logprob: -3.1902527809143066
    4. 'if' → logprob: -3.8152527809143066
    5. 'inner' → logprob: -4.065252780914307
    6. 'new' → logprob: -4.940252780914307
    7. '#' → logprob: -4.940252780914307
    8. '   ' → logprob: -4.940252780914307
    9. ' inner' → logprob: -6.565252780914307
    10. ' if' → logprob: -6.815252780914307

Token 1840: ' if' (ID: 538)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.39976832270622253
    2. 'all' → logprob: -1.899768352508545
    3. ' lines' → logprob: -2.524768352508545
    4. ' if' → logprob: -3.024768352508545
    5. 'if' → logprob: -3.774768352508545
    6. '   ' → logprob: -4.149768352508545
    7. 'lines' → logprob: -4.649768352508545
    8. '
' → logprob: -6.899768352508545
    9. '#' → logprob: -7.399768352508545
    10. 'len' → logprob: -7.774768352508545

Token 1841: ' matching' (ID: 20238)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.29832273721694946
    2. 'lines' → logprob: -2.1733226776123047
    3. 'len' → logprob: -2.7983226776123047
    4. ' all' → logprob: -2.7983226776123047
    5. ' lines' → logprob: -4.798322677612305
    6. '#' → logprob: -5.548322677612305
    7. 'True' → logprob: -6.423322677612305
    8. '(' → logprob: -6.673322677612305
    9. ')' → logprob: -6.798322677612305
    10. '')' → logprob: -7.298322677612305

Token 1842: ' parentheses' (ID: 180602)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5212420225143433
    2. 'paren' → logprob: -1.0212420225143433
    3. 'idx' → logprob: -5.146242141723633
    4. '_pos' → logprob: -5.396242141723633
    5. 'par' → logprob: -5.521242141723633
    6. 'for' → logprob: -5.521242141723633
    7. 'parent' → logprob: -5.771242141723633
    8. 'lines' → logprob: -5.771242141723633
    9. ' parentheses' → logprob: -5.771242141723633
    10. 'count' → logprob: -6.021242141723633

Token 1843: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21004220843315125
    2. ':
' → logprob: -2.2100422382354736
    3. '       ' → logprob: -3.7100422382354736
    4. ':' → logprob: -4.5850419998168945
    5. 'count' → logprob: -4.5850419998168945
    6. 'def' → logprob: -5.2100419998168945
    7. ' for' → logprob: -5.4600419998168945
    8. '(
' → logprob: -5.8350419998168945
    9. ')' → logprob: -5.8350419998168945
    10. ')
' → logprob: -6.3350419998168945

Token 1844: ' naive' (ID: 105687)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -1.7979034185409546
    2. '#' → logprob: -2.172903537750244
    3. '   ' → logprob: -2.172903537750244
    4. 'pos' → logprob: -2.422903537750244
    5. ' pos' → logprob: -2.547903537750244
    6. 'def' → logprob: -2.797903537750244
    7. ')' → logprob: -2.922903537750244
    8. 'i' → logprob: -3.047903537750244
    9. 'stack' → logprob: -3.047903537750244
    10. 'count' → logprob: -3.297903537750244

Token 1845: ' since' (ID: 3630)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4844032526016235
    2. ' for' → logprob: -1.6094032526016235
    3. ' count' → logprob: -1.6094032526016235
    4. '   ' → logprob: -2.984403133392334
    5. 'if' → logprob: -3.109403133392334
    6. 'pos' → logprob: -3.484403133392334
    7. ' if' → logprob: -3.484403133392334
    8. ')' → logprob: -3.484403133392334
    9. 'i' → logprob: -3.609403133392334
    10. 'for' → logprob: -3.859403133392334

Token 1846: ' B' (ID: 418)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.13591589033603668
    2. ' lines' → logprob: -3.010915994644165
    3. 'all' → logprob: -3.635915994644165
    4. 'len' → logprob: -3.885915994644165
    5. 'sum' → logprob: -4.510915756225586
    6. ' all' → logprob: -5.010915756225586
    7. '#' → logprob: -5.010915756225586
    8. '')' → logprob: -6.510915756225586
    9. ')' → logprob: -7.010915756225586
    10. 'not' → logprob: -7.510915756225586

Token 1847: 'NF' (ID: 64104)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46047574281692505
    2. ')' → logprob: -1.0854756832122803
    3. 'al' → logprob: -4.210475921630859
    4. '')' → logprob: -4.835475921630859
    5. 'alance' → logprob: -6.210475921630859
    6. 'race' → logprob: -6.960475921630859
    7. ']' → logprob: -7.585475921630859
    8. '[' → logprob: -7.710475921630859
    9. 'rack' → logprob: -7.710475921630859
    10. 'ase' → logprob: -7.960475921630859

Token 1848: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5247323513031006
    2. ':
' → logprob: -1.3997323513031006
    3. '       ' → logprob: -2.1497323513031006
    4. '):
' → logprob: -4.27473258972168
    5. ':' → logprob: -5.02473258972168
    6. '
' → logprob: -5.02473258972168
    7. ' and' → logprob: -5.64973258972168
    8. ')' → logprob: -5.77473258972168
    9. '           ' → logprob: -5.89973258972168
    10. ')
' → logprob: -6.39973258972168

Token 1849: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0745701864361763
    2. '   ' → logprob: -2.6995701789855957
    3. ' for' → logprob: -6.574570178985596
    4. '           ' → logprob: -7.449570178985596
    5. ' if' → logprob: -7.699570178985596
    6. ')' → logprob: -7.824570178985596
    7. 'count' → logprob: -7.949570178985596
    8. ' count' → logprob: -8.449570655822754
    9. '#' → logprob: -8.574570655822754
    10. '
' → logprob: -9.199570655822754

Token 1850: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5755901336669922
    2. '       ' → logprob: -1.2005901336669922
    3. 'stack' → logprob: -3.200590133666992
    4. 'depth' → logprob: -3.200590133666992
    5. 'cnt' → logprob: -3.950590133666992
    6. 'balance' → logprob: -4.700590133666992
    7. 'open' → logprob: -5.075590133666992
    8. '   ' → logprob: -5.075590133666992
    9. 'pos' → logprob: -5.200590133666992
    10. 'paren' → logprob: -6.075590133666992

Token 1851: ' Just' (ID: 6214)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.8629180192947388
    2. 'count' → logprob: -1.1129180192947388
    3. 'depth' → logprob: -1.6129180192947388
    4. 'cnt' → logprob: -3.862917900085449
    5. 'balance' → logprob: -4.112917900085449
    6. 'level' → logprob: -5.362917900085449
    7. 'counter' → logprob: -5.987917900085449
    8. 'open' → logprob: -6.112917900085449
    9. '   ' → logprob: -6.612917900085449
    10. 'paren' → logprob: -7.487917900085449

Token 1852: ' remove' (ID: 6234)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.26498138904571533
    2. 'stack' → logprob: -2.264981269836426
    3. 'depth' → logprob: -3.139981269836426
    4. '#' → logprob: -4.639981269836426
    5. 'balance' → logprob: -4.639981269836426
    6. 'def' → logprob: -4.764981269836426
    7. 'pass' → logprob: -5.014981269836426
    8. 'i' → logprob: -5.139981269836426
    9. ' count' → logprob: -5.264981269836426
    10. '   ' → logprob: -5.389981269836426

Token 1853: ' them' (ID: 1373)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7154213786125183
    2. 'lines' → logprob: -0.7154213786125183
    3. '(lines' → logprob: -4.840421199798584
    4. ' the' → logprob: -5.715421199798584
    5. ' outer' → logprob: -5.965421199798584
    6. 'outer' → logprob: -5.965421199798584
    7. '_lines' → logprob: -5.965421199798584
    8. 'the' → logprob: -7.465421199798584
    9. '(
' → logprob: -7.715421199798584
    10. '
' → logprob: -7.715421199798584

Token 1854: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2591441869735718
    2. ' lines' → logprob: -1.2591441869735718
    3. '(lines' → logprob: -2.6341443061828613
    4. '   ' → logprob: -2.7591443061828613
    5. '       ' → logprob: -2.8841443061828613
    6. '[' → logprob: -2.8841443061828613
    7. ':
' → logprob: -3.3841443061828613
    8. ')
' → logprob: -3.5091443061828613
    9. 'lines' → logprob: -4.009144306182861
    10. ')' → logprob: -4.134144306182861

Token 1855: ' parse' (ID: 8420)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.10855705291032791
    2. ' lines' → logprob: -2.3585569858551025
    3. 'return' → logprob: -5.733557224273682
    4. '       ' → logprob: -5.858557224273682
    5. '   ' → logprob: -7.608557224273682
    6. 'def' → logprob: -7.733557224273682
    7. 'parse' → logprob: -7.858557224273682
    8. '
' → logprob: -7.858557224273682
    9. ' return' → logprob: -8.983556747436523
    10. '           ' → logprob: -9.483556747436523

Token 1856: ' inside' (ID: 6772)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2941284775733948
    2. ' lines' → logprob: -2.04412841796875
    3. '       ' → logprob: -2.16912841796875
    4. '   ' → logprob: -5.29412841796875
    5. '(lines' → logprob: -5.66912841796875
    6. 'new' → logprob: -7.66912841796875
    7. '	lines' → logprob: -7.66912841796875
    8. 'inner' → logprob: -8.16912841796875
    9. '
' → logprob: -8.41912841796875
    10. '_lines' → logprob: -8.66912841796875

Token 1857: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09498216956853867
    2. '   ' → logprob: -3.094982147216797
    3. ' lines' → logprob: -3.344982147216797
    4. 'lines' → logprob: -5.844982147216797
    5. '(lines' → logprob: -6.094982147216797
    6. '
' → logprob: -6.719982147216797
    7. ',' → logprob: -7.594982147216797
    8. '           ' → logprob: -8.094982147216797
    9. '(
' → logprob: -8.094982147216797
    10. ')' → logprob: -8.219982147216797

Token 1858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5790755748748779
    2. '   ' → logprob: -0.8290755748748779
    3. '
' → logprob: -6.329075813293457
    4. ':
' → logprob: -8.079075813293457
    5. ')' → logprob: -8.454075813293457
    6. '```' → logprob: -8.704075813293457
    7. '):
' → logprob: -9.079075813293457
    8. ' and' → logprob: -9.454075813293457
    9. '           ' → logprob: -9.454075813293457
    10. ':' → logprob: -9.454075813293457

Token 1859: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41676825284957886
    2. 'lines' → logprob: -1.6667683124542236
    3. 'inner' → logprob: -2.9167683124542236
    4. ' lines' → logprob: -3.1667683124542236
    5. '   ' → logprob: -3.9167683124542236
    6. ' inner' → logprob: -4.0417680740356445
    7. 'new' (adapté à ' new') → logprob: -4.4167680740356445
    8. ' new' → logprob: -5.9167680740356445
    9. 'inside' → logprob: -6.6667680740356445
    10. 'return' → logprob: -7.5417680740356445

Token 1860: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.09491755068302155
    2. 'lines' → logprob: -2.8449175357818604
    3. '_data' → logprob: -3.8449175357818604
    4. ' =' → logprob: -5.5949177742004395
    5. '_line' → logprob: -6.0949177742004395
    6. '_' → logprob: -6.5949177742004395
    7. 'data' → logprob: -6.5949177742004395
    8. 's' → logprob: -7.3449177742004395
    9. ' lines' → logprob: -7.5949177742004395
    10. '=' → logprob: -7.9699177742004395

Token 1861: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890333980321884
    2. ' =' → logprob: -2.5789034366607666
    3. '=line' → logprob: -12.453903198242188
    4. '=
' → logprob: -13.078903198242188
    5. '(lines' → logprob: -13.453903198242188
    6. '   ' → logprob: -13.453903198242188
    7. '[' → logprob: -13.578903198242188
    8. '=[' → logprob: -13.828903198242188
    9. '=[]' → logprob: -14.453903198242188
    10. '=[
' → logprob: -14.953903198242188

Token 1862: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18495038151741028
    2. '[line' → logprob: -1.809950351715088
    3. 'lines' → logprob: -6.434950351715088
    4. ' [' → logprob: -6.809950351715088
    5. '[l' → logprob: -8.059950828552246
    6. '[row' → logprob: -8.309950828552246
    7. '[s' → logprob: -8.309950828552246
    8. '[
' → logprob: -8.809950828552246
    9. '[left' → logprob: -8.809950828552246
    10. '   ' → logprob: -8.809950828552246

Token 1863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4228515923023224
    2. 'for' → logprob: -1.5478515625
    3. ' for' → logprob: -2.0478515625
    4. '   ' → logprob: -6.5478515625
    5. ' lines' → logprob: -7.4228515625
    6. '```' → logprob: -8.1728515625
    7. '           ' → logprob: -8.2978515625
    8. '	for' → logprob: -8.6728515625
    9. '(lines' → logprob: -8.9228515625
    10. 'lines' → logprob: -9.2978515625

Token 1864: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07949475198984146
    2. ' for' → logprob: -2.8294947147369385
    3. '       ' → logprob: -4.454494953155518
    4. 'indent' → logprob: -6.329494953155518
    5. '   ' → logprob: -6.829494953155518
    6. 'i' → logprob: -6.954494953155518
    7. ' indent' → logprob: -7.454494953155518
    8. 'count' → logprob: -7.704494953155518
    9. 'depth' → logprob: -8.32949447631836
    10. 'start' → logprob: -9.20449447631836

Token 1865: ' row' (ID: 5225)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8556848764419556
    2. 'line' → logprob: -1.1056848764419556
    3. 'row' → logprob: -1.6056848764419556
    4. '_line' → logprob: -3.980684757232666
    5. 'j' → logprob: -4.605684757232666
    6. 'l' → logprob: -5.480684757232666
    7. '_i' → logprob: -6.105684757232666
    8. '_' → logprob: -6.355684757232666
    9. '_row' → logprob: -6.480684757232666
    10. 'c' → logprob: -6.730684757232666

Token 1866: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789533481001854
    2. 'in' → logprob: -2.578953266143799
    3. ',' → logprob: -10.828953742980957
    4. '	in' → logprob: -11.828953742980957
    5. 'i' → logprob: -11.953953742980957
    6. ',line' → logprob: -12.078953742980957
    7. '   ' → logprob: -12.203953742980957
    8. ',row' → logprob: -12.453953742980957
    9. ' ' → logprob: -12.953953742980957
    10. '[line' → logprob: -13.453953742980957

Token 1867: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10476967692375183
    2. 'lines' → logprob: -2.354769706726074
    3. ' range' → logprob: -5.479769706726074
    4. '[' → logprob: -8.229769706726074
    5. ' lines' → logprob: -9.479769706726074
    6. 'line' → logprob: -11.854769706726074
    7. '(range' → logprob: -12.479769706726074
    8. '0' → logprob: -12.604769706726074
    9. 'len' → logprob: -12.604769706726074
    10. '[
' → logprob: -12.854769706726074

Token 1868: '(h' (ID: 8120)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.18284940719604492
    2. '1' → logprob: -1.807849407196045
    3. 'len' → logprob: -6.307849407196045
    4. 'range' → logprob: -7.557849407196045
    5. '0' → logprob: -8.057849884033203
    6. '(base' → logprob: -8.432849884033203
    7. ' base' → logprob: -9.182849884033203
    8. '(' → logprob: -9.557849884033203
    9. '   ' → logprob: -10.932849884033203
    10. 'row' → logprob: -11.432849884033203

Token 1869: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02945295348763466
    2. '):' → logprob: -3.7794530391693115
    3. '+' → logprob: -5.654452800750732
    4. '   ' → logprob: -6.279452800750732
    5. '[' → logprob: -8.02945327758789
    6. '       ' → logprob: -9.02945327758789
    7. ')' → logprob: -9.40445327758789
    8. ':' → logprob: -9.90445327758789
    9. ',' → logprob: -10.02945327758789
    10. ' +' → logprob: -10.52945327758789

Token 1870: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07491254061460495
    2. '   ' → logprob: -2.9499125480651855
    3. '       ' → logprob: -4.5749125480651855
    4. ' new' → logprob: -5.1999125480651855
    5. ' lines' → logprob: -5.9499125480651855
    6. '```' → logprob: -7.8249125480651855
    7. ' if' → logprob: -7.9499125480651855
    8. 'new' → logprob: -8.074912071228027
    9. '...' → logprob: -9.574912071228027
    10. '	   ' → logprob: -10.074912071228027

Token 1871: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.2730454206466675
    2. ' new' → logprob: -1.5230454206466675
    3. '       ' → logprob: -5.398045539855957
    4. '           ' → logprob: -5.398045539855957
    5. '   ' → logprob: -5.523045539855957
    6. 'line' → logprob: -5.773045539855957
    7. 'if' → logprob: -6.648045539855957
    8. 'row' → logprob: -6.773045539855957
    9. ' if' → logprob: -6.898045539855957
    10. ' line' → logprob: -7.523045539855957

Token 1872: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.14550060033798218
    2. 'lines' → logprob: -2.270500659942627
    3. '   ' → logprob: -4.520500659942627
    4. ' lines' → logprob: -5.020500659942627
    5. ' =' → logprob: -5.895500659942627
    6. '=' → logprob: -6.395500659942627
    7. '_line' → logprob: -6.645500659942627
    8. '       ' → logprob: -6.770500659942627
    9. '[' → logprob: -7.020500659942627
    10. 'line' → logprob: -7.145500659942627

Token 1873: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1568434089422226
    2. '.append' → logprob: -2.781843423843384
    3. ' =' → logprob: -3.156843423843384
    4. '+=' → logprob: -3.906843423843384
    5. ' +=' → logprob: -4.781843185424805
    6. '   ' → logprob: -5.531843185424805
    7. '[' → logprob: -5.906843185424805
    8. '       ' → logprob: -7.031843185424805
    9. ' lines' → logprob: -7.156843185424805
    10. 'lines' → logprob: -7.406843185424805

Token 1874: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.20173072814941406
    2. ' lines' → logprob: -1.701730728149414
    3. '(lines' → logprob: -8.076730728149414
    4. '	lines' → logprob: -12.951730728149414
    5. 'line' → logprob: -13.826730728149414
    6. '.lines' → logprob: -13.826730728149414
    7. '   ' → logprob: -14.201730728149414
    8. ''' → logprob: -14.701730728149414
    9. ' ' → logprob: -15.326730728149414
    10. '[' → logprob: -15.701730728149414

Token 1875: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.00010103991371579468
    2. 'row' → logprob: -9.750101089477539
    3. '[' → logprob: -11.375101089477539
    4. '(row' → logprob: -12.250101089477539
    5. '[
' → logprob: -12.375101089477539
    6. ' [' → logprob: -12.375101089477539
    7. '   ' → logprob: -12.625101089477539
    8. '=row' → logprob: -12.875101089477539
    9. '       ' → logprob: -13.625101089477539
    10. '][' → logprob: -13.625101089477539

Token 1876: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005507678724825382
    2. '   ' → logprob: -8.500551223754883
    3. ' [' → logprob: -9.250551223754883
    4. '][' → logprob: -9.500551223754883
    5. '           ' → logprob: -9.750551223754883
    6. ')[' → logprob: -10.125551223754883
    7. '1' → logprob: -10.375551223754883
    8. '       ' → logprob: -10.750551223754883
    9. ' ' → logprob: -12.375551223754883
    10. '=' → logprob: -12.875551223754883

Token 1877: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '
' → logprob: -15.625001907348633
    5. '       ' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '           ' → logprob: -18.000001907348633
    8. '...' → logprob: -18.500001907348633
    9. '  ' → logprob: -18.500001907348633
    10. '１' → logprob: -19.250001907348633

Token 1878: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.0005558936391025782
    2. ':' → logprob: -7.500555992126465
    3. ' :' → logprob: -13.875555992126465
    4. ':]' → logprob: -13.875555992126465
    5. ' :-' → logprob: -14.625555992126465
    6. ':r' → logprob: -16.00055503845215
    7. '[:-' → logprob: -16.62555503845215
    8. ':
' → logprob: -16.62555503845215
    9. ':])
' → logprob: -17.00055503845215
    10. '   ' → logprob: -17.12555503845215

Token 1879: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -21.375
    3. 'len' → logprob: -21.625
    4. ' ' → logprob: -21.75
    5. '
' → logprob: -21.875
    6. '])' → logprob: -22.0
    7. '   ' → logprob: -22.75
    8. '2' → logprob: -22.875
    9. '１' → logprob: -23.125
    10. '```' → logprob: -23.125

Token 1880: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004277719184756279
    2. '])
' → logprob: -5.50427770614624
    3. '       ' → logprob: -9.254278182983398
    4. ']' → logprob: -9.379278182983398
    5. ')' → logprob: -12.004278182983398
    6. '           ' → logprob: -12.254278182983398
    7. '   ' → logprob: -12.254278182983398
    8. ']
' → logprob: -14.004278182983398
    9. ' ])' → logprob: -14.129278182983398
    10. '])

' → logprob: -15.254278182983398

Token 1881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026708604767918587
    2. '<|end|>' → logprob: -4.151708602905273
    3. '
' → logprob: -5.151708602905273
    4. '   ' → logprob: -6.026708602905273
    5. '```' → logprob: -7.401708602905273
    6. ')' → logprob: -7.526708602905273
    7. '           ' → logprob: -8.526708602905273
    8. ' for' → logprob: -8.776708602905273
    9. ',' → logprob: -9.276708602905273
    10. 'return' → logprob: -9.401708602905273

Token 1882: ' new' (ID: 620)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16670915484428406
    2. 'return' → logprob: -2.6667091846466064
    3. '       ' → logprob: -2.9167091846466064
    4. ' lines' → logprob: -4.291708946228027
    5. 'lines' → logprob: -4.416708946228027
    6. ' return' → logprob: -5.666708946228027
    7. '	lines' → logprob: -7.791708946228027
    8. '	return' → logprob: -8.666708946228027
    9. '(lines' → logprob: -9.791708946228027
    10. '
' → logprob: -10.166708946228027

Token 1883: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00048179292934946716
    2. 'lines' → logprob: -7.750481605529785
    3. 'data' → logprob: -11.000481605529785
    4. '_data' → logprob: -11.375481605529785
    5. 'return' → logprob: -11.625481605529785
    6. 'def' → logprob: -12.000481605529785
    7. 'Lines' → logprob: -12.875481605529785
    8. 'new' → logprob: -13.875481605529785
    9. '_line' → logprob: -14.000481605529785
    10. 's' → logprob: -14.500481605529785

Token 1884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1285906434059143
    2. ' =' → logprob: -2.1285905838012695
    3. ',' → logprob: -7.2535905838012695
    4. '=
' → logprob: -8.12859058380127
    5. '<|end|>' → logprob: -8.12859058380127
    6. ')' → logprob: -9.12859058380127
    7. '=[]' → logprob: -10.12859058380127
    8. '   ' → logprob: -10.12859058380127
    9. ' =
' → logprob: -10.12859058380127
    10. '[:]' → logprob: -10.75359058380127

Token 1885: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.003755544312298298
    2. '[' → logprob: -5.878755569458008
    3. '[new' → logprob: -7.503755569458008
    4. ' trim' → logprob: -8.378755569458008
    5. 'new' → logprob: -9.628755569458008
    6. ' [' → logprob: -9.628755569458008
    7. '[
' → logprob: -11.253755569458008
    8. '(trim' → logprob: -12.378755569458008
    9. 'list' → logprob: -13.253755569458008
    10. '.trim' → logprob: -13.378755569458008

Token 1886: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.5213274309644476e-05
    2. 'new' → logprob: -11.375015258789062
    3. '[new' → logprob: -13.250015258789062
    4. '(' → logprob: -14.125015258789062
    5. '(lines' → logprob: -15.250015258789062
    6. '([' → logprob: -15.375015258789062
    7. '(
' → logprob: -15.375015258789062
    8. '([
' → logprob: -15.750015258789062
    9. ',new' → logprob: -16.750015258789062
    10. '```' → logprob: -16.750015258789062

Token 1887: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0024335705675184727
    2. 'lines' → logprob: -6.252433776855469
    3. 'new' → logprob: -7.627433776855469
    4. '[new' → logprob: -11.877433776855469
    5. 'Lines' → logprob: -12.502433776855469
    6. '(lines' → logprob: -12.877433776855469
    7. '(new' → logprob: -13.002433776855469
    8. ' lines' → logprob: -14.627433776855469
    9. '```' → logprob: -15.127433776855469
    10. '_cells' → logprob: -15.502433776855469

Token 1888: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3249422609806061
    2. ')
' → logprob: -1.8249422311782837
    3. '   ' → logprob: -2.1999423503875732
    4. '
' → logprob: -5.324942111968994
    5. '<|end|>' → logprob: -8.949942588806152
    6. '       ' → logprob: -9.074942588806152
    7. '    
' → logprob: -9.199942588806152
    8. ')return' → logprob: -9.824942588806152
    9. '[' → logprob: -10.949942588806152
    10. ',' → logprob: -11.199942588806152

Token 1889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006223005708307028
    2. '   ' → logprob: -5.131223201751709
    3. ' return' → logprob: -9.25622272491455
    4. 'return' → logprob: -9.63122272491455
    5. '
' → logprob: -10.00622272491455
    6. '<|end|>' → logprob: -10.25622272491455
    7. '	return' → logprob: -11.00622272491455
    8. '           ' → logprob: -11.63122272491455
    9. '	' → logprob: -11.75622272491455
    10. '        
' → logprob: -12.50622272491455

Token 1890: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0017507458105683327
    2. 'cell' → logprob: -6.751750946044922
    3. '   ' → logprob: -8.126750946044922
    4. '       ' → logprob: -8.251750946044922
    5. ' return' → logprob: -11.001750946044922
    6. 'result' → logprob: -12.376750946044922
    7. 'res' (adapté à ' res') → logprob: -14.126750946044922
    8. 'parsed' → logprob: -14.251750946044922
    9. '	return' → logprob: -14.376750946044922
    10. 'ret' → logprob: -14.876750946044922

Token 1891: '_cell' (ID: 39197)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7005512714385986
    2. ',' → logprob: -0.8255512714385986
    3. ' =' → logprob: -2.8255512714385986
    4. 'urn' → logprob: -6.2005510330200195
    5. 'ult' → logprob: -6.9505510330200195
    6. 'eturn' → logprob: -7.5755510330200195
    7. '   ' → logprob: -7.7005510330200195
    8. 'turn' → logprob: -7.7005510330200195
    9. '=res' → logprob: -7.7005510330200195
    10. 'return' → logprob: -8.70055103302002

Token 1892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04479172080755234
    2. '=' → logprob: -3.2947916984558105
    3. ',res' → logprob: -5.2947916984558105
    4. ' =' → logprob: -6.7947916984558105
    5. '=res' → logprob: -8.169792175292969
    6. ' ,' → logprob: -8.794792175292969
    7. ',re' → logprob: -10.419792175292969
    8. ',new' → logprob: -10.919792175292969
    9. ',p' → logprob: -11.169792175292969
    10. '   ' → logprob: -11.294792175292969

Token 1893: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2508764266967773
    2. 'parse' → logprob: -1.5008764266967773
    3. 'new' → logprob: -2.2508764266967773
    4. ' res' → logprob: -2.5008764266967773
    5. ' parse' → logprob: -2.5008764266967773
    6. ' new' → logprob: -2.7508764266967773
    7. ' =' → logprob: -3.2508764266967773
    8. 'val' → logprob: -3.3758764266967773
    9. ' base' → logprob: -3.5008764266967773
    10. 'base' → logprob: -4.125876426696777

Token 1894: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.023654093965888023
    2. '_cell' → logprob: -3.773653984069824
    3. 'val' → logprob: -8.773653984069824
    4. '_' → logprob: -8.898653984069824
    5. '_value' → logprob: -9.898653984069824
    6. '_data' → logprob: -10.148653984069824
    7. ' =' → logprob: -12.148653984069824
    8. '_cells' → logprob: -12.148653984069824
    9. '_lines' → logprob: -12.273653984069824
    10. '_vals' → logprob: -12.773653984069824

Token 1895: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023167727049440145
    2. ' =' → logprob: -6.252316951751709
    3. ',' → logprob: -7.877316951751709
    4. '   ' → logprob: -12.62731647491455
    5. '=
' → logprob: -12.75231647491455
    6. '       ' → logprob: -13.12731647491455
    7. '	' → logprob: -16.627317428588867
    8. ')' → logprob: -16.752317428588867
    9. '           ' → logprob: -16.752317428588867
    10. '=line' → logprob: -16.877317428588867

Token 1896: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0015024791937321424
    2. ' parse' → logprob: -6.501502513885498
    3. '(parse' → logprob: -16.626502990722656
    4. '   ' → logprob: -17.001502990722656
    5. '	parse' → logprob: -17.626502990722656
    6. '=parse' → logprob: -17.751502990722656
    7. '
' → logprob: -19.501502990722656
    8. 'return' → logprob: -20.251502990722656
    9. '```' → logprob: -20.251502990722656
    10. '.parse' → logprob: -20.751502990722656

Token 1897: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.005830560345202684
    2. 'new' → logprob: -5.755830764770508
    3. 'cell' → logprob: -6.255830764770508
    4. '(new' → logprob: -7.505830764770508
    5. '_cells' → logprob: -8.880830764770508
    6. 'Cell' → logprob: -11.630830764770508
    7. '```' → logprob: -11.880830764770508
    8. '
' → logprob: -12.380830764770508
    9. '   ' → logprob: -12.630830764770508
    10. '_lines' → logprob: -12.755830764770508

Token 1898: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -9.996708104154095e-05
    2. 'new' → logprob: -9.250100135803223
    3. '(lines' → logprob: -13.125100135803223
    4. '[new' → logprob: -14.375100135803223
    5. '```' → logprob: -14.625100135803223
    6. '(' → logprob: -15.250100135803223
    7. ',new' → logprob: -15.375100135803223
    8. '(
' → logprob: -15.875100135803223
    9. ' new' → logprob: -15.875100135803223
    10. ')new' → logprob: -17.000099182128906

Token 1899: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00031055594445206225
    2. '(new' → logprob: -8.875310897827148
    3. 'new' → logprob: -9.000310897827148
    4. '_cells' → logprob: -10.875310897827148
    5. '(lines' → logprob: -10.875310897827148
    6. '```' → logprob: -12.875310897827148
    7. '
' → logprob: -13.625310897827148
    8. 'Lines' → logprob: -13.875310897827148
    9. 's' → logprob: -14.125310897827148
    10. '[new' → logprob: -14.500310897827148

Token 1900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004793226718902588
    2. ',new' → logprob: -5.629793167114258
    3. ',res' → logprob: -6.754793167114258
    4. 'new' → logprob: -11.504793167114258
    5. ' ,' → logprob: -11.754793167114258
    6. '   ' → logprob: -12.754793167114258
    7. '       ' → logprob: -13.004793167114258
    8. ',line' → logprob: -13.629793167114258
    9. ',n' → logprob: -14.879793167114258
    10. 'res' → logprob: -14.879793167114258

Token 1901: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.002213657833635807
    2. '0' → logprob: -6.627213478088379
    3. ' base' → logprob: -7.627213478088379
    4. 'len' → logprob: -7.877213478088379
    5. '
' → logprob: -12.127213478088379
    6. 'res' → logprob: -12.252213478088379
    7. 'max' → logprob: -12.377213478088379
    8. '1' → logprob: -13.252213478088379
    9. '   ' → logprob: -13.502213478088379
    10. ' ' → logprob: -14.127213478088379

Token 1902: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0002353640884393826
    2. 'line' → logprob: -8.500235557556152
    3. 'Line' → logprob: -10.375235557556152
    4. '   ' → logprob: -16.000234603881836
    5. '-line' → logprob: -16.625234603881836
    6. 'len' → logprob: -16.625234603881836
    7. '_cell' → logprob: -16.750234603881836
    8. '1' → logprob: -17.125234603881836
    9. 'def' → logprob: -17.125234603881836
    10. '_len' → logprob: -17.750234603881836

Token 1903: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026087139267474413
    2. ')
' → logprob: -6.127608776092529
    3. '   ' → logprob: -8.252608299255371
    4. '       ' → logprob: -8.752608299255371
    5. '+' → logprob: -13.377608299255371
    6. '-' → logprob: -14.002608299255371
    7. '[' → logprob: -15.002608299255371
    8. ')return' → logprob: -15.002608299255371
    9. ' )' → logprob: -15.377608299255371
    10. '           ' → logprob: -15.627608299255371

Token 1904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47737476229667664
    2. '   ' → logprob: -0.977374792098999
    3. 'return' → logprob: -5.97737455368042
    4. '	return' → logprob: -7.97737455368042
    5. ' return' → logprob: -8.602375030517578
    6. '{return' → logprob: -9.977375030517578
    7. '<|end|>' → logprob: -9.977375030517578
    8. '```' → logprob: -10.227375030517578
    9. ')return' → logprob: -10.727375030517578
    10. '	' → logprob: -11.102375030517578

Token 1905: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051027778536081314
    2. 'return' → logprob: -3.051027774810791
    3. 'if' (adapté à ' if') → logprob: -6.176027774810791
    4. ' return' → logprob: -8.80102825164795
    5. ' if' → logprob: -9.05102825164795
    6. '	' → logprob: -10.17602825164795
    7. '   ' → logprob: -10.42602825164795
    8. '	return' → logprob: -11.30102825164795
    9. '           ' → logprob: -12.55102825164795
    10. '	   ' → logprob: -12.92602825164795

Token 1906: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.038068003952503204
    2. ' res' → logprob: -3.2880680561065674
    3. '   ' → logprob: -11.663067817687988
    4. 'not' → logprob: -11.913067817687988
    5. '       ' → logprob: -12.163067817687988
    6. ' not' → logprob: -12.538067817687988
    7. '           ' → logprob: -14.163067817687988
    8. '    ' → logprob: -14.663067817687988
    9. '     ' → logprob: -15.163067817687988
    10. '	res' → logprob: -15.288067817687988

Token 1907: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.005292457528412342
    2. '_val' → logprob: -5.2552924156188965
    3. '_res' → logprob: -10.255292892456055
    4. 'res' → logprob: -11.255292892456055
    5. 'val' → logprob: -12.255292892456055
    6. 'cell' → logprob: -13.380292892456055
    7. '_' → logprob: -14.130292892456055
    8. '_Cell' → logprob: -14.130292892456055
    9. '_cells' → logprob: -14.880292892456055
    10. 'Cell' → logprob: -15.130292892456055

Token 1908: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08189063519239426
    2. '           ' → logprob: -3.08189058303833
    3. 'is' → logprob: -3.70689058303833
    4. ':' → logprob: -5.33189058303833
    5. '!=' → logprob: -6.45689058303833
    6. '       ' → logprob: -7.83189058303833
    7. ':return' → logprob: -7.83189058303833
    8. ':
' → logprob: -8.456891059875488
    9. '          ' → logprob: -8.581891059875488
    10. '   ' → logprob: -9.206891059875488

Token 1909: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07894564419984818
    2. ' not' → logprob: -2.5789456367492676
    3. 'None' → logprob: -10.328946113586426
    4. '   ' → logprob: -11.203946113586426
    5. 'res' → logprob: -11.703946113586426
    6. 'Not' → logprob: -14.453946113586426
    7. ' None' → logprob: -15.328946113586426
    8. ' ' → logprob: -15.453946113586426
    9. '    ' → logprob: -16.70394515991211
    10. '
' → logprob: -16.70394515991211

Token 1910: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.200166469876422e-06
    2. ' None' → logprob: -12.250004768371582
    3. 'not' → logprob: -16.2500057220459
    4. '(None' → logprob: -16.6250057220459
    5. '_None' → logprob: -16.7500057220459
    6. 'none' → logprob: -16.8750057220459
    7. '```' → logprob: -17.3750057220459
    8. '   ' → logprob: -17.5000057220459
    9. '...' → logprob: -18.6250057220459
    10. '_none' → logprob: -19.0000057220459

Token 1911: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7576000690460205
    2. ':
' → logprob: -1.0076000690460205
    3. ':' → logprob: -2.2576000690460205
    4. '       ' → logprob: -3.6326000690460205
    5. ' and' → logprob: -3.6326000690460205
    6. ':return' → logprob: -5.007599830627441
    7. '	       ' → logprob: -7.882599830627441
    8. '		' → logprob: -8.007599830627441
    9. ',' → logprob: -8.257599830627441
    10. '               ' → logprob: -8.382599830627441

Token 1912: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000739707553293556
    2. '       ' → logprob: -7.375739574432373
    3. '	       ' → logprob: -9.875740051269531
    4. 'return' → logprob: -10.375740051269531
    5. '		' → logprob: -11.125740051269531
    6. '
' → logprob: -12.125740051269531
    7. '               ' → logprob: -13.125740051269531
    8. ' return' → logprob: -13.250740051269531
    9. '```' → logprob: -13.250740051269531
    10. '   ' → logprob: -14.000740051269531

Token 1913: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25339531898498535
    2. 'return' (adapté à ' return') → logprob: -1.5033953189849854
    3. '               ' → logprob: -7.003395080566406
    4. '       ' → logprob: -8.378395080566406
    5. ' return' → logprob: -8.878395080566406
    6. '	       ' → logprob: -9.503395080566406
    7. '   ' → logprob: -10.003395080566406
    8. '		' → logprob: -10.253395080566406
    9. '	return' → logprob: -10.753395080566406
    10. '          ' → logprob: -13.503395080566406

Token 1914: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1602262556552887
    2. ' res' → logprob: -1.9102262258529663
    3. '   ' → logprob: -13.285225868225098
    4. '	res' → logprob: -15.410225868225098
    5. '(res' → logprob: -16.660226821899414
    6. ' ' → logprob: -17.160226821899414
    7. '
' → logprob: -17.785226821899414
    8. ' ' → logprob: -18.285226821899414
    9. '_res' → logprob: -19.285226821899414
    10. '  ' → logprob: -19.285226821899414

Token 1915: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -6.825890159234405e-05
    2. '_val' → logprob: -9.625068664550781
    3. '_Cell' → logprob: -14.250068664550781
    4. '<Cell' → logprob: -14.625068664550781
    5. '_CELL' → logprob: -15.500068664550781
    6. '_cells' → logprob: -15.625068664550781
    7. 'el' → logprob: -16.75006866455078
    8. 'Cell' → logprob: -16.87506866455078
    9. '(_' → logprob: -16.87506866455078
    10. '_col' → logprob: -17.00006866455078

Token 1916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20359645783901215
    2. ',res' → logprob: -1.7035964727401733
    3. 'res' → logprob: -6.203596591949463
    4. ' res' → logprob: -10.453596115112305
    5. ' ,' → logprob: -10.578596115112305
    6. '(res' → logprob: -11.078596115112305
    7. ',None' → logprob: -11.203596115112305
    8. ',new' → logprob: -11.328596115112305
    9. '
' → logprob: -11.453596115112305
    10. ',
' → logprob: -11.578596115112305

Token 1917: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.048631083220243454
    2. ' res' → logprob: -3.048631191253662
    3. '('' → logprob: -10.298630714416504
    4. '(res' → logprob: -12.548630714416504
    5. ' ('' → logprob: -13.173630714416504
    6. ''' → logprob: -14.048630714416504
    7. '   ' → logprob: -14.173630714416504
    8. '('',' → logprob: -14.298630714416504
    9. '           ' → logprob: -14.423630714416504
    10. '            ' → logprob: -15.173630714416504

Token 1918: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.5358694731257856e-05
    2. '_cell' → logprob: -10.375035285949707
    3. 'val' → logprob: -12.625035285949707
    4. 'al' → logprob: -14.375035285949707
    5. '_' → logprob: -16.625036239624023
    6. '\' → logprob: -17.500036239624023
    7. '_VAL' → logprob: -17.875036239624023
    8. ' _' → logprob: -18.125036239624023
    9. 'Val' → logprob: -18.250036239624023
    10. '_vals' → logprob: -18.250036239624023

Token 1919: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0831654742360115
    2. '<|end|>' → logprob: -2.958165407180786
    3. '
' → logprob: -4.083165645599365
    4. '       ' → logprob: -4.708165645599365
    5. '    
' → logprob: -6.958165645599365
    6. ')' → logprob: -8.583165168762207
    7. '...' → logprob: -8.708165168762207
    8. '        
' → logprob: -9.583165168762207
    9. '.' → logprob: -9.833165168762207
    10. '	return' → logprob: -9.833165168762207

Token 1920: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003501834347844124
    2. 'return' → logprob: -5.878501892089844
    3. '#' → logprob: -8.253501892089844
    4. '
' → logprob: -8.878501892089844
    5. '<|end|>' → logprob: -9.253501892089844
    6. 'raise' → logprob: -9.753501892089844
    7. '```' → logprob: -9.753501892089844
    8. '    
' → logprob: -10.503501892089844
    9. 'def' → logprob: -11.253501892089844
    10. 'else' → logprob: -11.878501892089844

Token 1921: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5751115083694458
    2. '#' (adapté à ' #') → logprob: -1.4501115083694458
    3. 'return' → logprob: -1.7001115083694458
    4. 'if' → logprob: -4.575111389160156
    5. '
' → logprob: -5.075111389160156
    6. 'else' → logprob: -7.075111389160156
    7. '    
' → logprob: -7.075111389160156
    8. 'for' → logprob: -7.700111389160156
    9. ' return' → logprob: -8.075111389160156
    10. '```' → logprob: -8.075111389160156

Token 1922: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.733015775680542
    2. 'return' → logprob: -0.733015775680542
    3. '   ' → logprob: -3.983015775680542
    4. 'import' → logprob: -5.108016014099121
    5. 'tokens' → logprob: -5.483016014099121
    6. 'def' → logprob: -6.233016014099121
    7. 'for' → logprob: -6.233016014099121
    8. 'expr' → logprob: -6.858016014099121
    9. 'from' → logprob: -6.983016014099121
    10. 'ops' → logprob: -7.233016014099121

Token 1923: ' split' (ID: 12648)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9035003781318665
    2. '   ' → logprob: -1.1535003185272217
    3. 'for' → logprob: -1.5285003185272217
    4. 'return' → logprob: -3.4035003185272217
    5. 'cells' → logprob: -4.653500556945801
    6. 'tokens' → logprob: -5.153500556945801
    7. 'rows' → logprob: -5.778500556945801
    8. '       ' → logprob: -6.028500556945801
    9. 'from' → logprob: -6.278500556945801
    10. 'import' → logprob: -6.653500556945801

Token 1924: ' by' (ID: 656)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.42240598797798157
    2. 'lines' → logprob: -2.172405958175659
    3. '   ' → logprob: -2.547405958175659
    4. 'cells' → logprob: -2.672405958175659
    5. '_cells' → logprob: -3.047405958175659
    6. ' line' → logprob: -4.547406196594238
    7. '_line' → logprob: -4.672406196594238
    8. '=' → logprob: -5.922406196594238
    9. '_lines' → logprob: -6.047406196594238
    10. '(line' → logprob: -6.422406196594238

Token 1925: ' top' (ID: 2344)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8332180380821228
    2. ''+' → logprob: -0.9582180380821228
    3. 'for' → logprob: -2.4582180976867676
    4. 'spaces' → logprob: -3.2082180976867676
    5. 'line' → logprob: -4.083218097686768
    6. 'cells' → logprob: -5.333218097686768
    7. '['' → logprob: -5.458218097686768
    8. '   ' → logprob: -5.708218097686768
    9. 'def' → logprob: -5.833218097686768
    10. '+' → logprob: -5.958218097686768

Token 1926: '-level' (ID: 19231)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6776394844055176
    2. '_line' → logprob: -0.8026394844055176
    3. '   ' → logprob: -4.677639484405518
    4. 'lines' → logprob: -5.177639484405518
    5. '```' → logprob: -5.302639484405518
    6. ' line' → logprob: -5.677639484405518
    7. '=' → logprob: -5.802639484405518
    8. '_' → logprob: -5.927639484405518
    9. '_lines' → logprob: -6.052639484405518
    10. ')' → logprob: -6.677639484405518

Token 1927: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0578727722167969
    2. 'spaces' → logprob: -1.9328727722167969
    3. ' spaces' → logprob: -2.307872772216797
    4. ' for' → logprob: -2.307872772216797
    5. ' line' → logprob: -2.432872772216797
    6. 'for' → logprob: -2.557872772216797
    7. 'line' → logprob: -4.307872772216797
    8. 'tokens' → logprob: -4.307872772216797
    9. ''' → logprob: -4.307872772216797
    10. ' lines' → logprob: -4.432872772216797

Token 1928: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08265174180269241
    2. ' or' → logprob: -3.7076518535614014
    3. ' and' → logprob: -4.707651615142822
    4. ''' → logprob: -4.707651615142822
    5. ',' → logprob: -4.832651615142822
    6. ' line' → logprob: -4.832651615142822
    7. '    ' → logprob: -6.082651615142822
    8. '
' → logprob: -6.082651615142822
    9. '    
' → logprob: -6.207651615142822
    10. ' ' → logprob: -6.457651615142822

Token 1929: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02963257022202015
    2. '-
' → logprob: -4.654632568359375
    3. ' ' → logprob: -5.154632568359375
    4. ' -' → logprob: -5.529632568359375
    5. ' for' → logprob: -6.029632568359375
    6. 'for' → logprob: -6.154632568359375
    7. ''-' → logprob: -6.529632568359375
    8. '   ' → logprob: -7.029632568359375
    9. '=' → logprob: -7.779632568359375
    10. ''' → logprob: -7.904632568359375

Token 1930: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03792235255241394
    2. ' for' → logprob: -3.7879223823547363
    3. 'for' → logprob: -4.537922382354736
    4. 'def' → logprob: -6.162922382354736
    5. ' lines' → logprob: -7.787922382354736
    6. ' line' → logprob: -8.412921905517578
    7. 'pos' → logprob: -8.787921905517578
    8. ',' → logprob: -8.912921905517578
    9. ':
' → logprob: -9.412921905517578
    10. '(
' → logprob: -9.412921905517578

Token 1931: 'not' (ID: 2878)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22011597454547882
    2. 'for' → logprob: -2.345115900039673
    3. ')' → logprob: -2.970115900039673
    4. 'pos' → logprob: -4.345116138458252
    5. ')
' → logprob: -4.720116138458252
    6. '
' → logprob: -5.220116138458252
    7. ' for' → logprob: -5.345116138458252
    8. 'level' → logprob: -5.595116138458252
    9. 'def' → logprob: -5.970116138458252
    10. 'line' → logprob: -6.220116138458252

Token 1932: ' counting' (ID: 43276)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1007899045944214
    2. ' in' → logprob: -1.1007899045944214
    3. 'inside' → logprob: -1.4757899045944214
    4. ' inside' → logprob: -2.600790023803711
    5. ')' → logprob: -4.600790023803711
    6. '   ' → logprob: -5.350790023803711
    7. 'def' → logprob: -5.475790023803711
    8. 'nested' → logprob: -6.350790023803711
    9. 'within' → logprob: -6.600790023803711
    10. '
' → logprob: -6.600790023803711

Token 1933: ' inside' (ID: 6772)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7125817537307739
    2. 'parent' → logprob: -1.587581753730774
    3. ' parentheses' → logprob: -2.2125816345214844
    4. 'paren' → logprob: -2.7125816345214844
    5. '')' → logprob: -3.7125816345214844
    6. ' '('' → logprob: -3.9625816345214844
    7. ''*' → logprob: -3.9625816345214844
    8. ')' → logprob: -4.587581634521484
    9. ' ' → logprob: -4.712581634521484
    10. '()' → logprob: -5.087581634521484

Token 1934: ' parentheses' (ID: 180602)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.02736915461719036
    2. ' parentheses' → logprob: -4.902369022369385
    3. 'paren' → logprob: -5.402369022369385
    4. ')' → logprob: -5.777369022369385
    5. '()' → logprob: -6.027369022369385
    6. '_parent' → logprob: -6.277369022369385
    7. '()
' → logprob: -6.402369022369385
    8. '(' → logprob: -6.402369022369385
    9. 'par' → logprob: -7.277369022369385
    10. ')
' → logprob: -7.652369022369385

Token 1935: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00460386136546731
    2. '
' → logprob: -6.254603862762451
    3. ',' → logprob: -7.379603862762451
    4. ')' → logprob: -7.504603862762451
    5. ')
' → logprob: -7.754603862762451
    6. 'def' → logprob: -7.754603862762451
    7. '(
' → logprob: -9.629603385925293
    8. 'for' → logprob: -9.629603385925293
    9. ':
' → logprob: -9.754603385925293
    10. ',
' → logprob: -9.754603385925293

Token 1936: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09077087789773941
    2. 'depth' → logprob: -2.840770959854126
    3. 'level' → logprob: -3.840770959854126
    4. 'count' → logprob: -5.465770721435547
    5. 'pos' → logprob: -6.965770721435547
    6. '
' → logprob: -7.465770721435547
    7. '    
' → logprob: -7.840770721435547
    8. 'balance' → logprob: -8.590770721435547
    9. 'nest' → logprob: -8.715770721435547
    10. 'paren' → logprob: -9.465770721435547

Token 1937: ' #' (ID: 1069)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.6936514973640442
    2. '   ' → logprob: -1.3186514377593994
    3. 'level' → logprob: -1.8186514377593994
    4. ' depth' → logprob: -3.9436514377593994
    5. ' level' → logprob: -4.1936516761779785
    6. 'pos' → logprob: -4.9436516761779785
    7. 'paren' → logprob: -4.9436516761779785
    8. '
' → logprob: -5.0686516761779785
    9. 'count' → logprob: -5.3186516761779785
    10. ' nesting' → logprob: -5.9436516761779785

Token 1938: ' Also' (ID: 8820)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.17542369663715363
    2. 'level' → logprob: -2.8004236221313477
    3. 'nest' → logprob: -3.4254236221313477
    4. 'paren' → logprob: -3.6754236221313477
    5. 'stack' → logprob: -4.675423622131348
    6. '   ' → logprob: -4.675423622131348
    7. 'count' → logprob: -4.800423622131348
    8. 'balance' → logprob: -4.925423622131348
    9. 'pos' → logprob: -5.300423622131348
    10. 'lvl' → logprob: -6.925423622131348

Token 1939: ' support' (ID: 2498)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.743082582950592
    2. '   ' → logprob: -1.4930825233459473
    3. ' depth' → logprob: -1.9930825233459473
    4. 'level' → logprob: -3.3680825233459473
    5. ' level' → logprob: -3.4930825233459473
    6. 'paren' → logprob: -3.6180825233459473
    7. 'def' → logprob: -3.9930825233459473
    8. ' nesting' → logprob: -4.243082523345947
    9. ' stack' → logprob: -5.243082523345947
    10. ' open' → logprob: -5.618082523345947

Token 1940: ' *' (ID: 425)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.166646122932434
    2. '   ' → logprob: -1.416646122932434
    3. 'def' → logprob: -2.4166460037231445
    4. 'w' → logprob: -2.6666460037231445
    5. ' for' → logprob: -2.7916460037231445
    6. '*' → logprob: -2.7916460037231445
    7. 'for' → logprob: -3.2916460037231445
    8. ''' → logprob: -3.7916460037231445
    9. ' w' → logprob: -3.9166460037231445
    10. '('*' → logprob: -4.4166460037231445

Token 1941: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0597715862095356
    2. 'def' → logprob: -3.8097715377807617
    3. 'pos' → logprob: -4.434771537780762
    4. '
' → logprob: -4.684771537780762
    5. 'if' → logprob: -5.684771537780762
    6. ',' → logprob: -6.059771537780762
    7. 'depth' → logprob: -6.309771537780762
    8. ' =' → logprob: -7.559771537780762
    9. ' if' → logprob: -7.559771537780762
    10. 'i' → logprob: -7.559771537780762

Token 1942: ' higher' (ID: 7266)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paren' → logprob: -1.1612790822982788
    2. 'def' → logprob: -2.0362792015075684
    3. 'parent' → logprob: -2.1612792015075684
    4. 'depth' → logprob: -2.4112792015075684
    5. ' parentheses' → logprob: -2.5362792015075684
    6. 'preced' → logprob: -2.9112792015075684
    7. '0' → logprob: -3.0362792015075684
    8. 'nest' → logprob: -4.036279201507568
    9. 'par' → logprob: -4.286279201507568
    10. 'count' → logprob: -4.286279201507568

Token 1943: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.14979475736618042
    2. 'level' → logprob: -2.149794816970825
    3. 'priority' → logprob: -4.899794578552246
    4. ' precedence' → logprob: -4.899794578552246
    5. 'prec' → logprob: -5.024794578552246
    6. '   ' → logprob: -8.149794578552246
    7. 'depth' → logprob: -8.274794578552246
    8. '_prec' → logprob: -8.899794578552246
    9. '-level' → logprob: -9.024794578552246
    10. '_level' → logprob: -10.024794578552246

Token 1944: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12837299704551697
    2. 'depth' → logprob: -3.25337290763855
    3. 'level' → logprob: -3.75337290763855
    4. 'pos' → logprob: -4.128373146057129
    5. '
' → logprob: -4.128373146057129
    6. 'def' → logprob: -4.503373146057129
    7. 'count' → logprob: -5.878373146057129
    8. '    
' → logprob: -6.378373146057129
    9. 'paren' → logprob: -6.378373146057129
    10. 'stack' → logprob: -6.628373146057129

Token 1945: '   ' (ID: 271)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.3230153024196625
    2. 'level' → logprob: -1.8230153322219849
    3. '   ' → logprob: -2.8230152130126953
    4. 'stack' → logprob: -3.6980152130126953
    5. 'pos' → logprob: -5.198015213012695
    6. 'def' → logprob: -5.198015213012695
    7. 'nest' → logprob: -5.323015213012695
    8. 'paren' → logprob: -5.448015213012695
    9. 'count' → logprob: -5.823015213012695
    10. '#' → logprob: -5.948015213012695

Token 1946: ' #' (ID: 1069)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.5198100209236145
    2. '   ' → logprob: -1.3948099613189697
    3. 'level' → logprob: -2.3948099613189697
    4. 'stack' → logprob: -3.5198099613189697
    5. 'paren' → logprob: -4.394810199737549
    6. 'def' → logprob: -5.394810199737549
    7. 'pos' → logprob: -5.519810199737549
    8. 'ops' → logprob: -5.644810199737549
    9. ' depth' → logprob: -5.894810199737549
    10. 'count' → logprob: -6.519810199737549

Token 1947: ' Build' (ID: 10885)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.8179910778999329
    2. 'depth' → logprob: -1.192991018295288
    3. '   ' → logprob: -2.442991018295288
    4. 'nest' → logprob: -3.567991018295288
    5. 'level' → logprob: -3.567991018295288
    6. 'stack' → logprob: -3.692991018295288
    7. '#' → logprob: -3.692991018295288
    8. 'pos' → logprob: -3.942991018295288
    9. 'paren' → logprob: -4.317991256713867
    10. 'def' → logprob: -4.442991256713867

Token 1948: ' string' (ID: 1621)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7787666916847229
    2. 'depth' → logprob: -1.6537666320800781
    3. 'ops' → logprob: -2.028766632080078
    4. '   ' → logprob: -2.528766632080078
    5. 'paren' → logprob: -3.028766632080078
    6. 'nest' → logprob: -3.278766632080078
    7. 'level' → logprob: -3.778766632080078
    8. 'def' → logprob: -4.778766632080078
    9. 'op' → logprob: -5.903766632080078
    10. 'pos' → logprob: -6.028766632080078

Token 1949: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46817508339881897
    2. ' =' → logprob: -1.2181750535964966
    3. 's' → logprob: -2.843175172805786
    4. 'expr' → logprob: -4.718174934387207
    5. 'line' → logprob: -6.718174934387207
    6. ' s' → logprob: -6.718174934387207
    7. '   ' → logprob: -6.843174934387207
    8. '
' → logprob: -7.093174934387207
    9. 'code' → logprob: -7.218174934387207
    10. 'lines' → logprob: -7.343174934387207

Token 1950: ' parse' (ID: 8420)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.8581892251968384
    2. 'stack' → logprob: -1.7331892251968384
    3. 'pos' → logprob: -1.9831892251968384
    4. 'depth' → logprob: -2.358189105987549
    5. '   ' → logprob: -2.858189105987549
    6. ' stack' → logprob: -3.233189105987549
    7. 'nest' → logprob: -3.858189105987549
    8. ' depth' → logprob: -4.858189105987549
    9. 'level' → logprob: -4.858189105987549
    10. 'tokens' → logprob: -5.108189105987549

Token 1951: ' with' (ID: 483)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.035191021859645844
    2. 's' → logprob: -4.035191059112549
    3. 'expression' → logprob: -5.160191059112549
    4. 'code' → logprob: -5.535191059112549
    5. ' expr' → logprob: -6.410191059112549
    6. '   ' → logprob: -6.910191059112549
    7. 'line' → logprob: -7.160191059112549
    8. 'tokens' → logprob: -7.535191059112549
    9. '```' → logprob: -7.660191059112549
    10. '''' → logprob: -7.910191059112549

Token 1952: ' minimal' (ID: 19957)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paren' → logprob: -1.1166419982910156
    2. 'def' → logprob: -1.2416419982910156
    3. 'stack' → logprob: -1.7416419982910156
    4. 'parent' → logprob: -2.8666419982910156
    5. 'depth' → logprob: -3.4916419982910156
    6. 'tokens' → logprob: -3.8666419982910156
    7. '0' → logprob: -4.241641998291016
    8. 'par' → logprob: -4.616641998291016
    9. 'level' → logprob: -4.616641998291016
    10. ')' → logprob: -4.991641998291016

Token 1953: ' precedence' (ID: 120000)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.636968731880188
    2. ' stack' → logprob: -1.761968731880188
    3. ' depth' → logprob: -2.1369686126708984
    4. ' i' → logprob: -2.1369686126708984
    5. ' pos' → logprob: -2.7619686126708984
    6. ' def' → logprob: -3.2619686126708984
    7. 'depth' → logprob: -3.2619686126708984
    8. 'def' → logprob: -3.6369686126708984
    9. 'token' → logprob: -3.7619686126708984
    10. ' token' → logprob: -3.8869686126708984

Token 1954: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2881672382354736
    2. ' =' → logprob: -1.5381672382354736
    3. ''' → logprob: -2.6631672382354736
    4. '
' → logprob: -2.7881672382354736
    5. 'def' → logprob: -2.7881672382354736
    6. ' 
' → logprob: -3.2881672382354736
    7. ',' → logprob: -3.2881672382354736
    8. '(' → logprob: -3.4131672382354736
    9. '=' → logprob: -3.5381672382354736
    10. ')' → logprob: -3.7881672382354736

Token 1955: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1956: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07559937238693237
    2. ''-' → logprob: -3.325599431991577
    3. '=' → logprob: -4.325599193572998
    4. ' ' → logprob: -4.950599193572998
    5. '   ' → logprob: -5.200599193572998
    6. ' -' → logprob: -5.950599193572998
    7. '-
' → logprob: -6.075599193572998
    8. ''' → logprob: -7.075599193572998
    9. ' =' → logprob: -7.325599193572998
    10. ' and' → logprob: -7.450599193572998

Token 1957: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8517065048217773
    2. '
' → logprob: -0.9767065048217773
    3. '\n' → logprob: -3.2267065048217773
    4. '\' → logprob: -4.101706504821777
    5. 'def' → logprob: -4.101706504821777
    6. ' ' → logprob: -4.226706504821777
    7. '+' → logprob: -4.476706504821777
    8. '    
' → logprob: -4.476706504821777
    9. ' 
' → logprob: -4.476706504821777
    10. '+
' → logprob: -4.601706504821777

Token 1958: ' top' (ID: 2344)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.25713062286376953
    2. '0' → logprob: -1.5071306228637695
    3. 'line' → logprob: -7.1321306228637695
    4. 'lowest' → logprob: -7.2571306228637695
    5. '1' → logprob: -7.7571306228637695
    6. ' base' → logprob: -8.00713062286377
    7. 'highest' → logprob: -8.13213062286377
    8. 'len' → logprob: -8.13213062286377
    9. '   ' → logprob: -8.25713062286377
    10. ' ' → logprob: -8.25713062286377

Token 1959: '-level' (ID: 19231)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32470062375068665
    2. '
' → logprob: -1.8247005939483643
    3. 'def' → logprob: -3.9497005939483643
    4. ' =' → logprob: -4.449700832366943
    5. '```' → logprob: -5.074700832366943
    6. '  
' → logprob: -5.199700832366943
    7. ' 
' → logprob: -5.199700832366943
    8. '+' → logprob: -5.199700832366943
    9. ' ' → logprob: -5.324700832366943
    10. '    
' → logprob: -5.449700832366943

Token 1960: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7351652979850769
    2. ' ' → logprob: -2.1101653575897217
    3. '
' → logprob: -2.4851653575897217
    4. ' 
' → logprob: -2.8601653575897217
    5. '+' → logprob: -2.9851653575897217
    6. '    ' → logprob: -3.7351653575897217
    7. 'def' → logprob: -3.9851653575897217
    8. ':' → logprob: -4.360165119171143
    9. '    
' → logprob: -4.360165119171143
    10. ''' → logprob: -4.485165119171143

Token 1961: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1927378624677658
    2. '
' → logprob: -3.1927378177642822
    3. '+' → logprob: -4.192738056182861
    4. ' ' → logprob: -4.442738056182861
    5. ' 
' → logprob: -4.567738056182861
    6. 'def' → logprob: -4.567738056182861
    7. ' line' → logprob: -4.567738056182861
    8. ' =' → logprob: -4.692738056182861
    9. '+
' → logprob: -5.067738056182861
    10. '  
' → logprob: -5.192738056182861

Token 1962: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7773607969284058
    2. '   ' → logprob: -1.7773607969284058
    3. ' 
' → logprob: -1.9023607969284058
    4. '    ' → logprob: -3.1523609161376953
    5. ')' → logprob: -3.5273609161376953
    6. '
' → logprob: -3.7773609161376953
    7. '(' → logprob: -3.9023609161376953
    8. ' (' → logprob: -4.402360916137695
    9. '+' → logprob: -4.527360916137695
    10. '#' (adapté à ' #') → logprob: -4.527360916137695

Token 1963: ' Construct' (ID: 36230)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2081855535507202
    2. '   ' → logprob: -1.5831855535507202
    3. 'expr' → logprob: -1.7081855535507202
    4. 'depth' → logprob: -2.0831856727600098
    5. 'stack' → logprob: -2.2081856727600098
    6. 'level' → logprob: -3.4581856727600098
    7. 'def' → logprob: -4.45818567276001
    8. 'ops' → logprob: -4.95818567276001
    9. 'op' → logprob: -5.08318567276001
    10. 'i' → logprob: -5.08318567276001

Token 1964: ' a' (ID: 261)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.006906356196850538
    2. 'stack' → logprob: -5.381906509399414
    3. 'code' → logprob: -7.256906509399414
    4. ' expr' → logprob: -7.631906509399414
    5. '   ' → logprob: -8.256906509399414
    6. 's' → logprob: -8.506906509399414
    7. 'expression' → logprob: -8.631906509399414
    8. 'def' → logprob: -8.756906509399414
    9. 'tokens' → logprob: -9.131906509399414
    10. '```' → logprob: -10.381906509399414

Token 1965: ' string' (ID: 1621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8530911803245544
    2. ')' → logprob: -1.8530912399291992
    3. 'stack' → logprob: -1.8530912399291992
    4. 'pos' → logprob: -2.603091239929199
    5. 'token' → logprob: -3.228091239929199
    6. 'depth' → logprob: -3.603091239929199
    7. 'tokens' → logprob: -3.728091239929199
    8. 'paren' → logprob: -4.353091239929199
    9. 'result' → logprob: -4.853091239929199
    10. '(
' → logprob: -5.353091239929199

Token 1966: ' per' (ID: 777)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2204220294952393
    2. '=' → logprob: -1.5954220294952393
    3. 'expr' → logprob: -1.7204220294952393
    4. 'code' → logprob: -2.4704220294952393
    5. 's' → logprob: -2.4704220294952393
    6. '_expr' → logprob: -4.22042179107666
    7. 'builder' → logprob: -4.59542179107666
    8. 'lines' → logprob: -4.59542179107666
    9. 'token' → logprob: -4.59542179107666
    10. 'tokens' → logprob: -4.59542179107666

Token 1967: ' col' (ID: 996)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.286510944366455
    2. 'def' → logprob: -1.536510944366455
    3. 'row' → logprob: -2.286510944366455
    4. 'line' → logprob: -2.911510944366455
    5. '
' → logprob: -3.036510944366455
    6. '   ' → logprob: -3.161510944366455
    7. 'for' → logprob: -3.411510944366455
    8. ' =' → logprob: -3.661510944366455
    9. 'i' → logprob: -3.911510944366455
    10. '=' → logprob: -4.036510944366455

Token 1968: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6898026466369629
    2. '
' → logprob: -1.814802646636963
    3. ' 
' → logprob: -2.064802646636963
    4. '   ' → logprob: -3.439802646636963
    5. ')' → logprob: -4.064802646636963
    6. '[' → logprob: -4.064802646636963
    7. 's' → logprob: -4.439802646636963
    8. ' =' → logprob: -4.564802646636963
    9. '<|end|>' → logprob: -4.564802646636963
    10. ',' → logprob: -4.689802646636963

Token 1969: ' base' (ID: 3611)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.8596153259277344
    2. '['' → logprob: -1.8596153259277344
    3. 'range' → logprob: -1.8596153259277344
    4. '0' → logprob: -1.9846153259277344
    5. '''.' → logprob: -3.1096153259277344
    6. '[' → logprob: -3.8596153259277344
    7. '[
' → logprob: -4.359615325927734
    8. ' lines' → logprob: -4.609615325927734
    9. 'line' → logprob: -4.734615325927734
    10. '[]
' → logprob: -5.859615325927734

Token 1970: ' line' (ID: 2543)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36086007952690125
    2. '_line' → logprob: -2.1108601093292236
    3. '   ' → logprob: -3.4858601093292236
    4. '_
' → logprob: -3.7358601093292236
    5. '_lines' → logprob: -3.9858601093292236
    6. '[' → logprob: -4.1108598709106445
    7. ')' → logprob: -4.4858598709106445
    8. '`' → logprob: -4.4858598709106445
    9. '0' → logprob: -4.8608598709106445
    10. 'base' → logprob: -4.9858598709106445

Token 1971: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9486181735992432
    2. '
' → logprob: -1.6986181735992432
    3. ' 
' → logprob: -3.073618173599243
    4. ' ' → logprob: -3.198618173599243
    5. ',' → logprob: -3.448618173599243
    6. ' =' → logprob: -3.448618173599243
    7. '    
' → logprob: -3.448618173599243
    8. ''' → logprob: -3.573618173599243
    9. '#' → logprob: -4.073617935180664
    10. ')' → logprob: -4.073617935180664

Token 1972: ' do' (ID: 621)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5411430597305298
    2. ' lines' → logprob: -2.4161429405212402
    3. 'lines' → logprob: -2.5411429405212402
    4. 'h' → logprob: -3.0411429405212402
    5. 'len' → logprob: -3.2911429405212402
    6. 'rows' → logprob: -3.9161429405212402
    7. 'def' → logprob: -3.9161429405212402
    8. ' ' → logprob: -3.9161429405212402
    9. 'range' → logprob: -4.54114294052124
    10. '''.' → logprob: -4.54114294052124

Token 1973: ' token' (ID: 6602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8006307482719421
    2. ' for' → logprob: -1.300630807876587
    3. '   ' → logprob: -2.800630807876587
    4. ''' → logprob: -3.175630807876587
    5. '
' → logprob: -3.550630807876587
    6. ' ' → logprob: -3.550630807876587
    7. 'def' → logprob: -4.050630569458008
    8. '```' → logprob: -4.425630569458008
    9. ' range' → logprob: -4.800630569458008
    10. '       ' → logprob: -5.050630569458008

Token 1974: ' scan' (ID: 14659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1669046878814697
    2. ' ' → logprob: -1.5419046878814697
    3. 's' → logprob: -2.1669046878814697
    4. ' =' → logprob: -2.5419046878814697
    5. '=' → logprob: -2.6669046878814697
    6. ')' → logprob: -2.9169046878814697
    7. '_' → logprob: -3.0419046878814697
    8. '   ' → logprob: -3.9169046878814697
    9. ' '' → logprob: -4.416904449462891
    10. '[' → logprob: -4.541904449462891

Token 1975: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21174725890159607
    2. 'expr' → logprob: -2.336747169494629
    3. 's' → logprob: -3.836747169494629
    4. 'tokens' → logprob: -4.211747169494629
    5. 'pos' → logprob: -4.586747169494629
    6. 'code' → logprob: -4.836747169494629
    7. '
' → logprob: -5.211747169494629
    8. 'token' → logprob: -5.336747169494629
    9. '`' → logprob: -5.586747169494629
    10. 'line' → logprob: -5.711747169494629

Token 1976: ' operators' (ID: 29893)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2974318861961365
    2. 'col' → logprob: -2.0474319458007812
    3. 'pos' → logprob: -3.6724319458007812
    4. 'c' → logprob: -4.172431945800781
    5. ' col' → logprob: -4.422431945800781
    6. ' i' → logprob: -4.672431945800781
    7. ')' → logprob: -5.047431945800781
    8. 'cols' → logprob: -5.047431945800781
    9. '```' → logprob: -5.172431945800781
    10. 'j' → logprob: -5.172431945800781

Token 1977: ' outside' (ID: 7539)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30575263500213623
    2. 'expr' → logprob: -2.680752754211426
    3. '
' → logprob: -3.180752754211426
    4. 's' → logprob: -3.430752754211426
    5. 'tokens' → logprob: -3.805752754211426
    6. 'pos' → logprob: -4.055752754211426
    7. 'line' → logprob: -4.430752754211426
    8. 'op' → logprob: -4.555752754211426
    9. '`' → logprob: -4.555752754211426
    10. '```' → logprob: -5.055752754211426

Token 1978: ' parentheses' (ID: 180602)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3529915511608124
    2. ''' → logprob: -2.6029915809631348
    3. ' lines' → logprob: -2.6029915809631348
    4. 'range' → logprob: -2.7279915809631348
    5. '   ' → logprob: -3.9779915809631348
    6. ')' → logprob: -4.727991580963135
    7. 'for' → logprob: -4.727991580963135
    8. '(lines' → logprob: -4.852991580963135
    9. 'def' → logprob: -5.102991580963135
    10. 'the' → logprob: -5.477991580963135

Token 1979: '

' (ID: 279)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.15279516577720642
    2. '   ' → logprob: -3.1527950763702393
    3. '
' → logprob: -3.6527950763702393
    4. 's' → logprob: -3.6527950763702393
    5. 'op' → logprob: -4.777795314788818
    6. 'code' → logprob: -5.027795314788818
    7. 'pos' → logprob: -5.277795314788818
    8. '```' → logprob: -5.402795314788818
    9. 'expression' → logprob: -5.402795314788818
    10. 'tokens' → logprob: -5.527795314788818

Token 1980: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2037444114685059
    2. ''' → logprob: -2.203744411468506
    3. '
' → logprob: -2.328744411468506
    4. '[' → logprob: -2.578744411468506
    5. ' 
' → logprob: -2.953744411468506
    6. '[
' → logprob: -2.953744411468506
    7. '(' → logprob: -3.328744411468506
    8. '`' → logprob: -3.328744411468506
    9. 'tokens' → logprob: -3.703744411468506
    10. '\n' → logprob: -3.953744411468506

Token 1981: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7690611481666565
    2. 'pos' → logprob: -1.2690610885620117
    3. 'expr' → logprob: -3.0190610885620117
    4. 'tokens' → logprob: -3.1440610885620117
    5. '
' → logprob: -3.3940610885620117
    6. 'line' → logprob: -3.7690610885620117
    7. '    
' → logprob: -4.644061088562012
    8. ' pos' → logprob: -5.019061088562012
    9. 'col' → logprob: -5.144061088562012
    10. ' 
' → logprob: -5.144061088562012

Token 1982: ' to' (ID: 316)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.5649571418762207
    2. ' tokenize' → logprob: -2.1899571418762207
    3. ' parse' → logprob: -2.5649571418762207
    4. 'token' → logprob: -3.0649571418762207
    5. 'find' → logprob: -3.1899571418762207
    6. 'expr' → logprob: -3.4399571418762207
    7. ' find' → logprob: -3.5649571418762207
    8. 'is' → logprob: -4.814957141876221
    9. '_expr' → logprob: -4.939957141876221
    10. 'to' → logprob: -4.939957141876221

Token 1983: '_str' (ID: 6182)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.3118823766708374
    2. '_string' → logprob: -1.8118823766708374
    3. 'lines' → logprob: -3.436882495880127
    4. '_lines' → logprob: -3.686882495880127
    5. 'ken' → logprob: -4.186882495880127
    6. 'str' → logprob: -4.311882495880127
    7. '_str' → logprob: -4.936882495880127
    8. 'parse' → logprob: -5.811882495880127
    9. 'k' → logprob: -6.311882495880127
    10. 'strings' → logprob: -6.311882495880127

Token 1984: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.11218974739313126
    2. '(' → logprob: -2.362189769744873
    3. '(line' → logprob: -5.862189769744873
    4. ':' → logprob: -6.487189769744873
    5. '[' → logprob: -6.487189769744873
    6. '_lines' → logprob: -6.612189769744873
    7. '(
' → logprob: -6.737189769744873
    8. '   ' → logprob: -6.987189769744873
    9. '):' → logprob: -7.362189769744873
    10. '('' → logprob: -7.612189769744873

Token 1985: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13087232410907745
    2. '):
' → logprob: -2.5058722496032715
    3. '[' → logprob: -3.7558722496032715
    4. ')' → logprob: -4.5058722496032715
    5. '   ' → logprob: -6.3808722496032715
    6. ',' → logprob: -6.3808722496032715
    7. ')[' → logprob: -7.0058722496032715
    8. '[line' → logprob: -7.1308722496032715
    9. '[
' → logprob: -7.3808722496032715
    10. '[token' → logprob: -8.75587272644043

Token 1986: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5162010788917542
    2. '       ' → logprob: -1.3912010192871094
    3. ' lines' → logprob: -2.2662010192871094
    4. '(lines' → logprob: -3.2662010192871094
    5. '    ' → logprob: -5.391201019287109
    6. '[' → logprob: -5.391201019287109
    7. ' =' → logprob: -6.891201019287109
    8. 'lines' → logprob: -7.641201019287109
    9. '	lines' → logprob: -7.891201019287109
    10. '=' → logprob: -8.14120101928711

Token 1987: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.078182339668274
    2. 'return' (adapté à ' return') → logprob: -1.578182339668274
    3. ' return' → logprob: -1.703182339668274
    4. '   ' → logprob: -2.4531822204589844
    5. ' lines' → logprob: -2.7031822204589844
    6. '```' → logprob: -3.2031822204589844
    7. 'def' → logprob: -3.5781822204589844
    8. '    ' → logprob: -4.453182220458984
    9. ' ' → logprob: -4.828182220458984
    10. ' s' → logprob: -4.953182220458984

Token 1988: ' ['' (ID: 5140)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.19970190525054932
    2. '''.' → logprob: -1.8247019052505493
    3. '"\' → logprob: -4.44970178604126
    4. ''' → logprob: -5.44970178604126
    5. '"' → logprob: -5.82470178604126
    6. ' '\' → logprob: -7.57470178604126
    7. ' ''.' → logprob: -8.824702262878418
    8. '''' → logprob: -10.199702262878418
    9. ' ' → logprob: -10.199702262878418
    10. '('\' → logprob: -10.574702262878418

Token 1989: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.021528368815779686
    2. ''' → logprob: -4.146528244018555
    3. '''.' → logprob: -5.896528244018555
    4. '']' → logprob: -6.771528244018555
    5. ''+' → logprob: -7.021528244018555
    6. ''].' → logprob: -8.521528244018555
    7. ' ''.' → logprob: -9.396528244018555
    8. '".' → logprob: -9.646528244018555
    9. '',' → logprob: -9.771528244018555
    10. '"' → logprob: -9.896528244018555

Token 1990: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.117345684382599e-05
    2. ' join' → logprob: -11.250020980834961
    3. '''.' → logprob: -12.125020980834961
    4. ' ' → logprob: -13.750020980834961
    5. 'strip' → logprob: -14.125020980834961
    6. '   ' → logprob: -15.125020980834961
    7. 'rstrip' → logprob: -15.375020980834961
    8. ''.' → logprob: -16.25002098083496
    9. '```' → logprob: -16.75002098083496
    10. '  ' → logprob: -17.00002098083496

Token 1991: '(row' (ID: 15945)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5774146318435669
    2. '(lines' → logprob: -1.702414631843567
    3. '(line' → logprob: -1.952414631843567
    4. 'line' → logprob: -2.2024145126342773
    5. 'row' → logprob: -6.077414512634277
    6. '(row' → logprob: -6.452414512634277
    7. ' lines' → logprob: -10.952414512634277
    8. '([' → logprob: -11.827414512634277
    9. '	lines' → logprob: -11.952414512634277
    10. '[line' → logprob: -11.952414512634277

Token 1992: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007626864593476057
    2. 'for' → logprob: -5.632627010345459
    3. ' for' → logprob: -6.757627010345459
    4. ').' → logprob: -6.882627010345459
    5. '(lines' → logprob: -7.007627010345459
    6. '[i' → logprob: -8.2576265335083
    7. '[line' → logprob: -8.6326265335083
    8. '(line' → logprob: -9.0076265335083
    9. ')]' → logprob: -9.1326265335083
    10. '(row' → logprob: -9.6326265335083

Token 1993: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8992769122123718
    2. 'for' → logprob: -1.0242769718170166
    3. ')' → logprob: -2.5242769718170166
    4. '(lines' → logprob: -2.6492769718170166
    5. '[line' → logprob: -3.6492769718170166
    6. '(line' → logprob: -4.3992767333984375
    7. '[i' → logprob: -4.6492767333984375
    8. '       ' → logprob: -4.8992767333984375
    9. '[' → logprob: -5.1492767333984375
    10. '(row' → logprob: -5.2742767333984375

Token 1994: ' row' (ID: 5225)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.025642169639468193
    2. 'row' → logprob: -3.775642156600952
    3. ' lines' → logprob: -6.275642395019531
    4. 'line' → logprob: -8.025642395019531
    5. 'rows' → logprob: -9.150642395019531
    6. ' row' → logprob: -9.525642395019531
    7. '	lines' → logprob: -12.525642395019531
    8. '(lines' → logprob: -14.275642395019531
    9. ' ' → logprob: -14.775642395019531
    10. '   ' → logprob: -15.025642395019531

Token 1995: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47422829270362854
    2. 'in' → logprob: -0.9742282629013062
    3. 'lines' → logprob: -9.349227905273438
    4. '(lines' → logprob: -10.349227905273438
    5. '_lines' → logprob: -11.349227905273438
    6. '   ' → logprob: -11.974227905273438
    7. ' lines' → logprob: -12.349227905273438
    8. ')' → logprob: -12.974227905273438
    9. ']' → logprob: -12.974227905273438
    10. 'ines' → logprob: -14.099227905273438

Token 1996: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -3.166338137816638e-05
    2. ' lines' → logprob: -10.375031471252441
    3. '(lines' → logprob: -16.125032424926758
    4. 'line' → logprob: -16.375032424926758
    5. 'rows' → logprob: -16.375032424926758
    6. '
' → logprob: -16.875032424926758
    7. 'range' → logprob: -17.250032424926758
    8. 'data' → logprob: -17.375032424926758
    9. '   ' → logprob: -17.375032424926758
    10. '	lines' → logprob: -17.750032424926758

Token 1997: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017499439418315887
    2. '   ' → logprob: -4.5174994468688965
    3. '<|end|>' → logprob: -6.2674994468688965
    4. ']
' → logprob: -6.6424994468688965
    5. '       ' → logprob: -7.0174994468688965
    6. '
' → logprob: -7.1424994468688965
    7. '(lines' → logprob: -7.5174994468688965
    8. ')' → logprob: -8.767498970031738
    9. 'def' → logprob: -9.142498970031738
    10. '<|end|>' → logprob: -9.142498970031738

Token 1998: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14302392303943634
    2. 'def' → logprob: -2.14302396774292
    3. '
' → logprob: -4.64302396774292
    4. '```' → logprob: -5.39302396774292
    5. ' lines' → logprob: -7.76802396774292
    6. '    
' → logprob: -7.89302396774292
    7. ' def' → logprob: -8.393023490905762
    8. '       ' → logprob: -8.518023490905762
    9. 'tokens' → logprob: -9.643023490905762
    10. ')' → logprob: -9.768023490905762

Token 1999: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2402428686618805
    2. 'def' → logprob: -1.740242838859558
    3. '```' → logprob: -3.9902429580688477
    4. 'tokens' → logprob: -5.240242958068848
    5. '
' → logprob: -6.240242958068848
    6. ' lines' → logprob: -6.365242958068848
    7. '       ' → logprob: -6.490242958068848
    8. 'lines' → logprob: -6.740242958068848
    9. 'op' → logprob: -7.115242958068848
    10. ')' → logprob: -7.115242958068848

Token 2000: '_lines' (ID: 42980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3930531144142151
    2. ' =' → logprob: -1.1430530548095703
    3. '_lines' → logprob: -5.89305305480957
    4. '_' → logprob: -6.51805305480957
    5. 's' → logprob: -7.01805305480957
    6. '   ' → logprob: -7.51805305480957
    7. '=[]' → logprob: -9.14305305480957
    8. ',' → logprob: -9.26805305480957
    9. 'ines' → logprob: -9.64305305480957
    10. '[' → logprob: -10.14305305480957

Token 2001: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0630362406373024
    2. '=' → logprob: -2.8130362033843994
    3. 's' → logprob: -8.18803596496582
    4. '=s' → logprob: -8.56303596496582
    5. '[' → logprob: -9.06303596496582
    6. '=[]' → logprob: -9.68803596496582
    7. '[s' → logprob: -9.68803596496582
    8. '<|end|>' → logprob: -9.68803596496582
    9. ')' → logprob: -9.93803596496582
    10. ',' → logprob: -10.18803596496582

Token 2002: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.006353669334203005
    2. ' to' → logprob: -5.631353855133057
    3. '[to' → logprob: -6.006353855133057
    4. '[' → logprob: -8.631353378295898
    5. '['' → logprob: -9.631353378295898
    6. ' [' → logprob: -10.756353378295898
    7. '[s' → logprob: -11.756353378295898
    8. 'lines' → logprob: -12.381353378295898
    9. ' ['' → logprob: -13.131353378295898
    10. '["' → logprob: -13.506353378295898

Token 2003: '_str' (ID: 6182)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.014721150510013103
    2. '(lines' → logprob: -4.264720916748047
    3. '_lines' → logprob: -8.139720916748047
    4. ' lines' → logprob: -8.389720916748047
    5. '	lines' → logprob: -11.389720916748047
    6. '[' → logprob: -11.889720916748047
    7. '[line' → logprob: -12.264720916748047
    8. '   ' → logprob: -12.764720916748047
    9. 's' → logprob: -13.139720916748047
    10. '.lines' → logprob: -13.514720916748047

Token 2004: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.875007629394531
    3. '(
' → logprob: -13.125007629394531
    4. 'lines' → logprob: -13.875007629394531
    5. '(line' → logprob: -14.250007629394531
    6. '_lines' → logprob: -14.750007629394531
    7. '	lines' → logprob: -15.375007629394531
    8. ' lines' → logprob: -15.625007629394531
    9. '([' → logprob: -15.625007629394531
    10. ' (' → logprob: -15.875007629394531

Token 2005: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11710849404335022
    2. ')
' → logprob: -2.3671085834503174
    3. ')[' → logprob: -4.117108345031738
    4. '   ' → logprob: -7.867108345031738
    5. '[' → logprob: -10.242108345031738
    6. ')

' → logprob: -10.367108345031738
    7. ')#' → logprob: -12.367108345031738
    8. ')
' → logprob: -12.742108345031738
    9. ' )' → logprob: -12.992108345031738
    10. '  ' → logprob: -13.867108345031738

Token 2006: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28129488229751587
    2. '
' → logprob: -1.531294822692871
    3. '```' → logprob: -4.531294822692871
    4. '    
' → logprob: -5.156294822692871
    5. 'def' → logprob: -5.781294822692871
    6. '[' → logprob: -6.031294822692871
    7. 'tokens' → logprob: -6.906294822692871
    8. ',' → logprob: -7.406294822692871
    9. 's' → logprob: -7.406294822692871
    10. ' 
' → logprob: -7.656294822692871

Token 2007: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5004711747169495
    2. 'pos' → logprob: -2.2504711151123047
    3. 'ops' → logprob: -2.2504711151123047
    4. 'stack' → logprob: -3.1254711151123047
    5. 'depth' → logprob: -3.5004711151123047
    6. 'def' → logprob: -3.8754711151123047
    7. 'level' → logprob: -4.000471115112305
    8. 'paren' → logprob: -4.125471115112305
    9. 'op' → logprob: -4.750471115112305
    10. 'expr' → logprob: -4.875471115112305

Token 2008: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058197297155857086
    2. ' =' → logprob: -2.933197259902954
    3. 's' → logprob: -6.683197498321533
    4. '_base' → logprob: -7.183197498321533
    5. '_line' → logprob: -7.683197498321533
    6. '_lines' → logprob: -8.183197021484375
    7. '=line' → logprob: -9.183197021484375
    8. 'base' → logprob: -9.558197021484375
    9. '_' → logprob: -9.808197021484375
    10. '_=' → logprob: -9.808197021484375

Token 2009: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014088282361626625
    2. ' s' → logprob: -4.639088153839111
    3. '''.' → logprob: -5.514088153839111
    4. ' ''.' → logprob: -9.26408863067627
    5. ''\' → logprob: -9.51408863067627
    6. '''' → logprob: -9.63908863067627
    7. '''
' → logprob: -10.88908863067627
    8. '"\' → logprob: -12.01408863067627
    9. '"' → logprob: -12.13908863067627
    10. ''s' → logprob: -12.26408863067627

Token 2010: '_lines' (ID: 42980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007824686472304165
    2. '+' → logprob: -8.125782012939453
    3. '[s' → logprob: -9.125782012939453
    4. ' +' → logprob: -9.250782012939453
    5. 'base' → logprob: -9.500782012939453
    6. '
' → logprob: -10.125782012939453
    7. '[
' → logprob: -10.875782012939453
    8. '   ' → logprob: -11.000782012939453
    9. '=' → logprob: -11.125782012939453
    10. 'def' → logprob: -11.250782012939453

Token 2011: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4259644558478612e-05
    2. '[self' → logprob: -12.250014305114746
    3. 'def' → logprob: -12.875014305114746
    4. '=' → logprob: -13.875014305114746
    5. '[-' → logprob: -13.875014305114746
    6. '[
' → logprob: -14.000014305114746
    7. 'base' → logprob: -14.250014305114746
    8. '   ' → logprob: -14.375014305114746
    9. '[cell' → logprob: -14.875014305114746
    10. ' [' → logprob: -15.000014305114746

Token 2012: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.006002621725201607
    2. '0' → logprob: -5.256002426147461
    3. ' base' → logprob: -7.881002426147461
    4. '[' → logprob: -8.256002426147461
    5. '(base' → logprob: -10.256002426147461
    6. 'def' → logprob: -10.631002426147461
    7. '
' → logprob: -11.131002426147461
    8. 'cell' → logprob: -11.256002426147461
    9. '   ' → logprob: -11.381002426147461
    10. '_base' → logprob: -12.006002426147461

Token 2013: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0006674022297374904
    2. '[' → logprob: -8.000667572021484
    3. 'line' → logprob: -8.750667572021484
    4. '_base' → logprob: -9.500667572021484
    5. 'Line' → logprob: -10.125667572021484
    6. 'base' → logprob: -11.125667572021484
    7. '   ' → logprob: -11.375667572021484
    8. '0' → logprob: -11.875667572021484
    9. '```' → logprob: -12.375667572021484
    10. ']' → logprob: -12.500667572021484

Token 2014: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05329465493559837
    2. '[' → logprob: -3.9282946586608887
    3. ')' → logprob: -4.678294658660889
    4. '])' → logprob: -5.053294658660889
    5. '][' → logprob: -5.428294658660889
    6. '+' → logprob: -5.428294658660889
    7. ']+' → logprob: -5.678294658660889
    8. '].' → logprob: -6.678294658660889
    9. ' +' → logprob: -7.303294658660889
    10. ')]' → logprob: -7.803294658660889

Token 2015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038084976375103
    2. '
' → logprob: -4.288084983825684
    3. 'i' → logprob: -5.163084983825684
    4. 'pos' → logprob: -5.163084983825684
    5. 'for' → logprob: -5.663084983825684
    6. '```' → logprob: -5.788084983825684
    7. ' for' → logprob: -6.288084983825684
    8. ' i' → logprob: -7.288084983825684
    9. 'def' → logprob: -7.288084983825684
    10. 'tokens' → logprob: -7.663084983825684

Token 2016: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3137253224849701
    2. 'i' → logprob: -2.938725233078003
    3. 'paren' → logprob: -3.063725233078003
    4. 'ops' → logprob: -3.188725233078003
    5. 'stack' → logprob: -3.438725233078003
    6. '   ' → logprob: -3.563725233078003
    7. 'for' → logprob: -3.938725233078003
    8. 'depth' → logprob: -4.563725471496582
    9. 'op' → logprob: -4.563725471496582
    10. 'open' → logprob: -5.188725471496582

Token 2017: ' find' (ID: 1646)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6749042868614197
    2. 'ops' → logprob: -1.6749043464660645
    3. 'op' → logprob: -1.9249043464660645
    4. '   ' → logprob: -3.0499043464660645
    5. 'i' → logprob: -3.4249043464660645
    6. 'paren' → logprob: -3.5499043464660645
    7. '#' → logprob: -4.6749043464660645
    8. 'level' → logprob: -4.7999043464660645
    9. 'depth' → logprob: -4.9249043464660645
    10. 'idx' → logprob: -5.0499043464660645

Token 2018: ' plus' (ID: 2932)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5397088527679443
    2. 'i' → logprob: -2.5397088527679443
    3. ' for' → logprob: -2.7897088527679443
    4. ' pos' → logprob: -2.7897088527679443
    5. ' i' → logprob: -3.0397088527679443
    6. ' op' → logprob: -3.7897088527679443
    7. 'op' → logprob: -3.7897088527679443
    8. 'paren' → logprob: -3.9147088527679443
    9. 'idx' → logprob: -4.039709091186523
    10. 'for' → logprob: -4.164709091186523

Token 2019: ' or' (ID: 503)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.30336347222328186
    2. '_idx' → logprob: -2.178363561630249
    3. 'pos' → logprob: -2.803363561630249
    4. '_index' → logprob: -3.303363561630249
    5. '_' → logprob: -3.678363561630249
    6. ' =' → logprob: -5.55336332321167
    7. '_or' → logprob: -5.55336332321167
    8. ',' → logprob: -5.67836332321167
    9. 'idx' → logprob: -5.80336332321167
    10. '=' → logprob: -6.30336332321167

Token 2020: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.01347394660115242
    2. '-' → logprob: -4.388473987579346
    3. 'min' → logprob: -7.763473987579346
    4. '_minus' → logprob: -8.513473510742188
    5. ' minus' → logprob: -8.513473510742188
    6. '-minus' → logprob: -9.763473510742188
    7. ' ' → logprob: -10.888473510742188
    8. '-
' → logprob: -10.888473510742188
    9. ' -' → logprob: -11.513473510742188
    10. ''-' → logprob: -11.638473510742188

Token 2021: ' at' (ID: 540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6926864981651306
    2. 'for' → logprob: -1.5676865577697754
    3. 'pos' → logprob: -2.1926865577697754
    4. '_pos' → logprob: -3.0676865577697754
    5. ',' → logprob: -3.9426865577697754
    6. '_positions' → logprob: -4.067686557769775
    7. ' or' → logprob: -4.442686557769775
    8. ' i' → logprob: -4.442686557769775
    9. 'i' → logprob: -4.692686557769775
    10. '   ' → logprob: -4.817686557769775

Token 2022: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.1164443492889404
    2. ' top' → logprob: -1.7414443492889404
    3. ' base' → logprob: -1.7414443492889404
    4. 'i' → logprob: -2.1164443492889404
    5. 'top' → logprob: -2.3664443492889404
    6. ' i' → logprob: -3.7414443492889404
    7. 'pos' → logprob: -4.1164445877075195
    8. '[' → logprob: -4.8664445877075195
    9. '[i' → logprob: -4.8664445877075195
    10. 'positions' → logprob: -4.9914445877075195

Token 2023: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0015349778113886714
    2. 'line' → logprob: -6.626534938812256
    3. '   ' → logprob: -9.876535415649414
    4. '_' → logprob: -10.001535415649414
    5. 'Line' → logprob: -10.626535415649414
    6. 'e' → logprob: -10.751535415649414
    7. 'eline' → logprob: -11.001535415649414
    8. '
' → logprob: -11.501535415649414
    9. '_
' → logprob: -12.001535415649414
    10. '_LINE' → logprob: -12.001535415649414

Token 2024: ' line' (ID: 2543)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19428744912147522
    2. '   ' → logprob: -2.8192875385284424
    3. 'for' → logprob: -2.9442875385284424
    4. ' i' → logprob: -3.4442875385284424
    5. ' =' → logprob: -5.319287300109863
    6. ',' → logprob: -5.319287300109863
    7. '
' → logprob: -5.819287300109863
    8. ' in' → logprob: -6.194287300109863
    9. '_pos' → logprob: -6.194287300109863
    10. 'pos' → logprob: -6.569287300109863

Token 2025: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6904457807540894
    2. 'for' → logprob: -0.8154457807540894
    3. ' for' → logprob: -3.690445899963379
    4. 'pos' → logprob: -3.940445899963379
    5. 'i' → logprob: -4.940445899963379
    6. 'paren' → logprob: -5.815445899963379
    7. '
' → logprob: -7.815445899963379
    8. 'idx' → logprob: -8.065445899963379
    9. ' i' → logprob: -8.190445899963379
    10. '```' → logprob: -8.815445899963379

Token 2026: ' not' (ID: 625)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.0515703484416008
    2. 'i' → logprob: -4.676570415496826
    3. ' i' → logprob: -5.176570415496826
    4. ' not' → logprob: -5.301570415496826
    5. 'depth' → logprob: -5.551570415496826
    6. 'not' → logprob: -5.551570415496826
    7. ' par' → logprob: -5.801570415496826
    8. 'nest' → logprob: -6.051570415496826
    9. '   ' → logprob: -6.176570415496826
    10. ' parentheses' → logprob: -6.551570415496826

Token 2027: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7336193323135376
    2. 'inside' → logprob: -0.7336193323135376
    3. ' in' → logprob: -3.858619213104248
    4. ' inside' → logprob: -4.483619213104248
    5. '(' → logprob: -6.233619213104248
    6. '(
' → logprob: -6.733619213104248
    7. 'within' → logprob: -6.983619213104248
    8. ' (' → logprob: -7.233619213104248
    9. 'paren' → logprob: -7.358619213104248
    10. 's' → logprob: -7.608619213104248

Token 2028: ' parentheses' (ID: 180602)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.333861231803894
    2. '()' → logprob: -1.583861231803894
    3. '('' → logprob: -1.958861231803894
    4. '(' → logprob: -2.0838613510131836
    5. 'parent' → logprob: -2.4588613510131836
    6. 'paren' → logprob: -2.5838613510131836
    7. ' (' → logprob: -3.9588613510131836
    8. ' parentheses' → logprob: -4.458861351013184
    9. '(
' → logprob: -4.583861351013184
    10. ' ()' → logprob: -4.833861351013184

Token 2029: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.239253282546997
    2. ' =' → logprob: -1.614253282546997
    3. ' (' → logprob: -2.489253282546997
    4. ',' → logprob: -2.739253282546997
    5. '(' → logprob: -2.989253282546997
    6. 'count' → logprob: -3.239253282546997
    7. '(
' → logprob: -3.239253282546997
    8. '=' → logprob: -3.614253282546997
    9. 'depth' → logprob: -3.614253282546997
    10. 'paren' → logprob: -3.864253282546997

Token 2030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11631409823894501
    2. 'paren' → logprob: -3.366314172744751
    3. 'depth' → logprob: -3.616314172744751
    4. 'stack' → logprob: -4.241313934326172
    5. 'level' → logprob: -4.366313934326172
    6. 'pos' → logprob: -5.116313934326172
    7. 'count' → logprob: -5.866313934326172
    8. 'par' → logprob: -5.991313934326172
    9. '```' → logprob: -6.241313934326172
    10. 'open' → logprob: -6.241313934326172

Token 2031: ' def' (ID: 1056)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.2585504651069641
    2. 'pos' → logprob: -2.8835504055023193
    3. 'depth' → logprob: -3.1335504055023193
    4. 'stack' → logprob: -3.1335504055023193
    5. 'level' → logprob: -3.5085504055023193
    6. 'par' → logprob: -4.258550643920898
    7. '   ' → logprob: -4.758550643920898
    8. 'open' → logprob: -5.258550643920898
    9. '(' → logprob: -5.258550643920898
    10. '(
' → logprob: -5.508550643920898

Token 2032: ' find' (ID: 1646)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6933615207672119
    2. 'find' → logprob: -1.068361520767212
    3. 'is' → logprob: -2.568361520767212
    4. 'next' → logprob: -3.568361520767212
    5. 'paren' → logprob: -4.318361282348633
    6. ' in' → logprob: -4.693361282348633
    7. ' find' → logprob: -4.818361282348633
    8. 'parse' → logprob: -4.943361282348633
    9. 'inside' → logprob: -6.443361282348633
    10. 'check' → logprob: -6.568361282348633

Token 2033: '_op' (ID: 20111)
  Prédit: '_operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -0.215916246175766
    2. '_token' → logprob: -2.340916156768799
    3. '_next' → logprob: -3.090916156768799
    4. '_op' → logprob: -3.340916156768799
    5. '_top' → logprob: -4.715916156768799
    6. '_' → logprob: -5.340916156768799
    7. 'operator' → logprob: -6.590916156768799
    8. '_pos' → logprob: -7.590916156768799
    9. '('_' → logprob: -7.840916156768799
    10. 'op' → logprob: -9.340916633605957

Token 2034: '_out' (ID: 12171)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6039586067199707
    2. '(s' → logprob: -1.2289586067199707
    3. 'en' → logprob: -2.3539586067199707
    4. '_pos' → logprob: -4.228958606719971
    5. 's' → logprob: -4.853958606719971
    6. 'pos' → logprob: -4.853958606719971
    7. '(pos' → logprob: -5.103958606719971
    8. '(en' → logprob: -5.603958606719971
    9. '('' → logprob: -5.728958606719971
    10. '(_' → logprob: -6.103958606719971

Token 2035: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.001485939254052937
    2. '=' → logprob: -8.001485824584961
    3. '_par' → logprob: -8.501485824584961
    4. '_parent' → logprob: -8.501485824584961
    5. '_of' → logprob: -8.501485824584961
    6. 'line' → logprob: -8.751485824584961
    7. '_side' → logprob: -8.876485824584961
    8. '_' → logprob: -10.001485824584961
    9. '_tokens' → logprob: -10.001485824584961
    10. 'paren' → logprob: -10.751485824584961

Token 2036: '_par' (ID: 31329)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.3447544276714325
    2. '_par' → logprob: -2.094754457473755
    3. '_parent' → logprob: -2.094754457473755
    4. 'parent' → logprob: -3.844754457473755
    5. 'par' → logprob: -4.594754219055176
    6. '(paren' → logprob: -4.969754219055176
    7. '(' → logprob: -5.844754219055176
    8. '('' → logprob: -6.719754219055176
    9. ' parentheses' → logprob: -7.344754219055176
    10. '(s' → logprob: -7.594754219055176

Token 2037: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.008999554440379143
    2. 'ens' → logprob: -4.758999347686768
    3. 'ent' → logprob: -8.008999824523926
    4. 'e' → logprob: -10.633999824523926
    5. '```' → logprob: -12.008999824523926
    6. 'an' → logprob: -12.133999824523926
    7. 'enses' → logprob: -12.633999824523926
    8. '('' → logprob: -13.258999824523926
    9. '[' → logprob: -13.883999824523926
    10. 'env' → logprob: -14.008999824523926

Token 2038: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.30212175846099854
    2. 's' → logprob: -2.052121639251709
    3. '('' → logprob: -2.052121639251709
    4. '(' → logprob: -6.677121639251709
    5. '(paren' → logprob: -6.677121639251709
    6. '(':' → logprob: -8.552122116088867
    7. '("("' → logprob: -8.552122116088867
    8. '(
' → logprob: -8.927122116088867
    9. '('_' → logprob: -9.677122116088867
    10. '(expr' → logprob: -9.677122116088867

Token 2039: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8750891089439392
    2. ',' → logprob: -1.625089168548584
    3. '):
' → logprob: -2.000089168548584
    4. '(idx' → logprob: -2.500089168548584
    5. '):' → logprob: -2.750089168548584
    6. '(pos' → logprob: -3.375089168548584
    7. '(s' → logprob: -3.875089168548584
    8. '(index' → logprob: -4.250089168548584
    9. ',i' → logprob: -4.500089168548584
    10. ',pos' → logprob: -5.000089168548584

Token 2040: ' ops' (ID: 26973)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.8199363946914673
    2. '   ' → logprob: -2.0699362754821777
    3. ''' → logprob: -2.3199362754821777
    4. '):
' → logprob: -2.3199362754821777
    5. ')' → logprob: -2.5699362754821777
    6. 'target' → logprob: -2.9449362754821777
    7. 'paren' → logprob: -2.9449362754821777
    8. 'level' → logprob: -3.0699362754821777
    9. 'op' → logprob: -3.4449362754821777
    10. 'ops' → logprob: -3.5699362754821777

Token 2041: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03910589963197708
    2. '):' → logprob: -3.4141058921813965
    3. ',' → logprob: -5.4141058921813965
    4. '=' → logprob: -8.414106369018555
    5. '=[]' → logprob: -8.414106369018555
    6. '   ' → logprob: -9.289106369018555
    7. ':' → logprob: -9.664106369018555
    8. 's' → logprob: -9.914106369018555
    9. '):
' → logprob: -9.914106369018555
    10. 'osition' → logprob: -10.414106369018555

Token 2042: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17803464829921722
    2. '```' → logprob: -2.928034543991089
    3. ' =' → logprob: -3.553034543991089
    4. '       ' → logprob: -3.928034543991089
    5. '(' → logprob: -4.553034782409668
    6. ' pos' → logprob: -4.928034782409668
    7. '    ' → logprob: -5.053034782409668
    8. ' (' → logprob: -5.428034782409668
    9. '``' → logprob: -5.428034782409668
    10. 'pos' → logprob: -5.678034782409668

Token 2043: ' res' (ID: 694)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.4325260519981384
    2. 'pos' → logprob: -1.5575261116027832
    3. ' i' → logprob: -3.182526111602783
    4. 'depth' → logprob: -3.432526111602783
    5. ' depth' → logprob: -3.557526111602783
    6. '   ' → logprob: -5.182526111602783
    7. ' idx' → logprob: -5.182526111602783
    8. 'i' → logprob: -5.307526111602783
    9. ' stack' → logprob: -6.182526111602783
    10. 'paren' → logprob: -6.182526111602783

Token 2044: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3882422149181366
    2. ' =' → logprob: -1.138242244720459
    3. '=[]
' → logprob: -7.263242244720459
    4. '=[]' → logprob: -8.0132417678833
    5. ',' → logprob: -9.2632417678833
    6. '_' → logprob: -9.5132417678833
    7. '=
' → logprob: -9.8882417678833
    8. '   ' → logprob: -10.5132417678833
    9. '[' → logprob: -11.2632417678833
    10. ' =
' → logprob: -12.0132417678833

Token 2045: ' []
' (ID: 8911)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.067922830581665
    2. 'None' → logprob: -1.317922830581665
    3. '[]' → logprob: -1.567922830581665
    4. '[]
' → logprob: -1.817922830581665
    5. ' None' → logprob: -5.067922592163086
    6. ' -' → logprob: -5.817922592163086
    7. '0' → logprob: -6.192922592163086
    8. '[' → logprob: -6.442922592163086
    9. '[-' → logprob: -6.442922592163086
    10. ' []' → logprob: -6.567922592163086

Token 2046: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18265339732170105
    2. '       ' → logprob: -2.1826534271240234
    3. 'depth' → logprob: -4.307653427124023
    4. ' depth' → logprob: -4.932653427124023
    5. '           ' → logprob: -5.307653427124023
    6. 'count' → logprob: -5.682653427124023
    7. 'pos' → logprob: -5.807653427124023
    8. ' pos' → logprob: -5.807653427124023
    9. ' count' → logprob: -5.807653427124023
    10. ' =' → logprob: -6.057653427124023

Token 2047: ' depth' (ID: 13636)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6935681700706482
    2. ' stack' → logprob: -1.818568229675293
    3. 'depth' (adapté à ' depth') → logprob: -1.943568229675293
    4. 'paren' → logprob: -2.693568229675293
    5. 'par' → logprob: -2.943568229675293
    6. 'level' → logprob: -3.693568229675293
    7. 'p' → logprob: -4.443568229675293
    8. 'pos' → logprob: -4.693568229675293
    9. ' par' → logprob: -5.193568229675293
    10. 'count' → logprob: -5.318568229675293

Token 2048: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5238945484161377
    2. ' =' → logprob: -0.8988945484161377
    3. ' +=' → logprob: -7.523894309997559
    4. '+=' → logprob: -8.898894309997559
    5. ' ' → logprob: -10.523894309997559
    6. '_tokens' → logprob: -10.648894309997559
    7. ',' → logprob: -11.898894309997559
    8. '=[]' → logprob: -12.023894309997559
    9. 'tokens' → logprob: -12.398894309997559
    10. 's' → logprob: -12.773894309997559

Token 2049: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '[' → logprob: -19.125045776367188
    4. '1' → logprob: -20.000045776367188
    5. '   ' → logprob: -20.500045776367188
    6. '۰' → logprob: -20.875045776367188
    7. ' ' → logprob: -21.000045776367188
    8. '=' → logprob: -21.250045776367188
    9. '```' → logprob: -21.250045776367188
    10. '000' → logprob: -21.250045776367188

Token 2050: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4801149070262909
    2. 'for' → logprob: -0.9801149368286133
    3. '   ' → logprob: -6.855114936828613
    4. ')' → logprob: -7.105114936828613
    5. ' =' → logprob: -7.355114936828613
    6. '=' → logprob: -7.355114936828613
    7. ' ' → logprob: -7.605114936828613
    8. ':' → logprob: -7.855114936828613
    9. '[' → logprob: -8.355114936828613
    10. '
' → logprob: -8.355114936828613

Token 2051: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5765856504440308
    2. 'for' → logprob: -0.8265856504440308
    3. '       ' → logprob: -8.07658576965332
    4. '	for' → logprob: -8.70158576965332
    5. '   ' → logprob: -9.45158576965332
    6. ' ' → logprob: -10.95158576965332
    7. ':' → logprob: -11.32658576965332
    8. '```' → logprob: -11.57658576965332
    9. '
' → logprob: -12.07658576965332
    10. ' =' → logprob: -12.20158576965332

Token 2052: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001989897806197405
    2. ' for' → logprob: -6.626989841461182
    3. 'i' → logprob: -7.376989841461182
    4. '
' → logprob: -10.87699031829834
    5. '   ' → logprob: -11.75199031829834
    6. ' i' → logprob: -12.25199031829834
    7. '```' → logprob: -12.87699031829834
    8. '       ' → logprob: -12.87699031829834
    9. '	for' → logprob: -14.37699031829834
    10. 'idx' → logprob: -15.50199031829834

Token 2053: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0032163304276764393
    2. ' i' → logprob: -5.75321626663208
    3. 'c' → logprob: -10.253216743469238
    4. 'ch' → logprob: -12.753216743469238
    5. 'idx' → logprob: -15.628216743469238
    6. 'pos' → logprob: -16.253215789794922
    7. ' c' → logprob: -16.628215789794922
    8. '	i' → logprob: -17.128215789794922
    9. ' ' → logprob: -17.878215789794922
    10. '   ' → logprob: -18.003215789794922

Token 2054: ',ch' (ID: 165575)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5778332352638245
    2. ' in' → logprob: -0.9528332352638245
    3. ',' → logprob: -2.9528331756591797
    4. ' ,' → logprob: -7.20283317565918
    5. ' ' → logprob: -8.95283317565918
    6. ',in' → logprob: -9.57783317565918
    7. 'i' → logprob: -10.57783317565918
    8. 'n' → logprob: -10.70283317565918
    9. ',c' → logprob: -11.20283317565918
    10. 'c' → logprob: -11.57783317565918

Token 2055: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11287257075309753
    2. 'in' → logprob: -2.23787260055542
    3. ',' → logprob: -11.362872123718262
    4. 'n' → logprob: -11.362872123718262
    5. ' ' → logprob: -11.612872123718262
    6. 's' → logprob: -12.237872123718262
    7. '```' → logprob: -12.237872123718262
    8. 'i' → logprob: -13.237872123718262
    9. ' 
' → logprob: -13.987872123718262
    10. ' ,' → logprob: -14.362872123718262

Token 2056: ' enumerate' (ID: 29671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4223933517932892
    2. 'range' → logprob: -1.6723933219909668
    3. 'enumer' → logprob: -1.9223933219909668
    4. ' enumerate' → logprob: -5.047393321990967
    5. ' s' → logprob: -5.922393321990967
    6. ' range' → logprob: -6.672393321990967
    7. ' ' → logprob: -11.172393798828125
    8. '"' → logprob: -11.172393798828125
    9. '(s' → logprob: -11.547393798828125
    10. 're' → logprob: -11.672393798828125

Token 2057: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02984686940908432
    2. ' s' → logprob: -3.5298469066619873
    3. '(s' → logprob: -10.404847145080566
    4. ' ' → logprob: -10.529847145080566
    5. '   ' → logprob: -10.779847145080566
    6. ')' → logprob: -12.529847145080566
    7. ''' → logprob: -13.279847145080566
    8. ' (' → logprob: -13.279847145080566
    9. '       ' → logprob: -13.654847145080566
    10. '"' → logprob: -13.779847145080566

Token 2058: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16320280730724335
    2. ':
' → logprob: -2.6632027626037598
    3. '           ' → logprob: -3.0382027626037598
    4. '):' → logprob: -4.53820276260376
    5. ':' → logprob: -4.66320276260376
    6. '       ' → logprob: -5.28820276260376
    7. '   ' → logprob: -5.91320276260376
    8. ' ):
' → logprob: -6.78820276260376
    9. '():
' → logprob: -7.41320276260376
    10. '        ' → logprob: -8.038203239440918

Token 2059: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005827829707413912
    2. '       ' → logprob: -5.255827903747559
    3. '   ' → logprob: -7.880827903747559
    4. '	       ' → logprob: -9.755827903747559
    5. '```' → logprob: -9.880827903747559
    6. '               ' → logprob: -10.505827903747559
    7. '        ' → logprob: -11.130827903747559
    8. '          ' → logprob: -11.380827903747559
    9. ' if' → logprob: -11.880827903747559
    10. '	   ' → logprob: -12.005827903747559

Token 2060: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37580952048301697
    2. ' if' → logprob: -1.8758095502853394
    3. 'if' (adapté à ' if') → logprob: -1.8758095502853394
    4. '               ' → logprob: -5.375809669494629
    5. '   ' → logprob: -6.875809669494629
    6. '       ' → logprob: -7.000809669494629
    7. '            ' → logprob: -9.375809669494629
    8. ' ' → logprob: -10.375809669494629
    9. '```' → logprob: -10.500809669494629
    10. '        ' → logprob: -10.875809669494629

Token 2061: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.5760021805763245
    2. 'ch' → logprob: -0.8260021805763245
    3. '(ch' → logprob: -9.82600212097168
    4. '	ch' → logprob: -12.82600212097168
    5. '(' → logprob: -13.20100212097168
    6. ' (' → logprob: -13.57600212097168
    7. 'c' → logprob: -14.07600212097168
    8. '_ch' → logprob: -14.57600212097168
    9. ' ' → logprob: -14.57600212097168
    10. '   ' → logprob: -14.82600212097168

Token 2062: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18565915524959564
    2. '==' → logprob: -2.435659170150757
    3. '=='' → logprob: -2.685659170150757
    4. ' in' → logprob: -5.060658931732178
    5. ' =='' → logprob: -6.060658931732178
    6. 'in' → logprob: -6.185658931732178
    7. '(' → logprob: -6.685658931732178
    8. '=="' → logprob: -7.560658931732178
    9. ''' → logprob: -7.935658931732178
    10. ' (' → logprob: -8.060659408569336

Token 2063: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01133887842297554
    2. '(' → logprob: -4.636338710784912
    3. '('' → logprob: -6.636338710784912
    4. ' '('' → logprob: -8.63633918762207
    5. ''(' → logprob: -10.01133918762207
    6. '"' → logprob: -10.13633918762207
    7. '')' → logprob: -12.76133918762207
    8. '(
' → logprob: -12.76133918762207
    9. '("("' → logprob: -14.51133918762207
    10. ' '' → logprob: -15.01133918762207

Token 2064: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.478182315826416
    2. ' and' → logprob: -2.103182315826416
    3. ':
' → logprob: -2.853182315826416
    4. ':' → logprob: -3.103182315826416
    5. '               ' → logprob: -3.478182315826416
    6. ')' → logprob: -3.603182315826416
    7. '==' → logprob: -3.728182315826416
    8. 'and' → logprob: -4.103182315826416
    9. ' ==' → logprob: -4.103182315826416
    10. '=' → logprob: -4.603182315826416

Token 2065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11538045853376389
    2. 'depth' → logprob: -2.2403805255889893
    3. ' depth' → logprob: -6.86538028717041
    4. '           ' → logprob: -6.99038028717041
    5. '(depth' → logprob: -7.99038028717041
    6. '   ' → logprob: -9.74038028717041
    7. '```' → logprob: -10.11538028717041
    8. '              ' → logprob: -10.11538028717041
    9. '                   ' → logprob: -10.49038028717041
    10. '                ' → logprob: -11.11538028717041

Token 2066: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' (adapté à ' depth') → logprob: -0.023257939144968987
    2. ' depth' → logprob: -3.7732579708099365
    3. '               ' → logprob: -12.273258209228516
    4. '(depth' → logprob: -12.273258209228516
    5. '           ' → logprob: -12.898258209228516
    6. '   ' → logprob: -15.398258209228516
    7. '                   ' → logprob: -15.773258209228516
    8. '_depth' → logprob: -15.898258209228516
    9. '.depth' → logprob: -16.148258209228516
    10. '       ' → logprob: -17.773258209228516

Token 2067: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005728095420636237
    2. ' +=' → logprob: -7.500572681427002
    3. '=' → logprob: -10.87557315826416
    4. ']+=' → logprob: -14.75057315826416
    5. '+' → logprob: -15.62557315826416
    6. '>' → logprob: -16.125572204589844
    7. '-=' → logprob: -16.125572204589844
    8. '[' → logprob: -17.125572204589844
    9. '+='' → logprob: -17.375572204589844
    10. '+=(' → logprob: -17.500572204589844

Token 2068: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. ')' → logprob: -20.250011444091797
    4. '<|end|>' → logprob: -20.500011444091797
    5. '```' → logprob: -20.500011444091797
    6. '+' → logprob: -20.750011444091797
    7. '   ' → logprob: -20.750011444091797
    8. '0' → logprob: -21.125011444091797
    9. '
' → logprob: -21.375011444091797
    10. '۱' → logprob: -22.375011444091797

Token 2069: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006530511658638716
    2. 'elif' → logprob: -5.131530284881592
    3. ' elif' → logprob: -7.506530284881592
    4. '               ' → logprob: -10.63153076171875
    5. '       ' → logprob: -11.38153076171875
    6. '
' → logprob: -11.50653076171875
    7. '		' → logprob: -13.50653076171875
    8. ')' → logprob: -13.75653076171875
    9. '```' → logprob: -13.75653076171875
    10. '	elif' → logprob: -14.00653076171875

Token 2070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6949716210365295
    2. 'elif' → logprob: -0.6949716210365295
    3. ' elif' → logprob: -6.444971561431885
    4. '               ' → logprob: -8.569972038269043
    5. 'continue' → logprob: -10.444972038269043
    6. '```' → logprob: -11.694972038269043
    7. '       ' → logprob: -13.069972038269043
    8. '	elif' → logprob: -13.944972038269043
    9. 'else' → logprob: -13.944972038269043
    10. ' continue' → logprob: -14.069972038269043

Token 2071: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.031154993921518326
    2. '           ' → logprob: -3.5311551094055176
    3. ' elif' → logprob: -6.656155109405518
    4. '       ' → logprob: -9.15615463256836
    5. 'if' → logprob: -12.15615463256836
    6. '	elif' → logprob: -12.65615463256836
    7. '   ' → logprob: -13.15615463256836
    8. '               ' → logprob: -14.40615463256836
    9. '		' → logprob: -15.28115463256836
    10. 'el' → logprob: -15.65615463256836

Token 2072: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.018150296062231064
    2. ' ch' → logprob: -4.018150329589844
    3. '	ch' → logprob: -15.143150329589844
    4. '(ch' → logprob: -17.393150329589844
    5. '   ' → logprob: -18.018150329589844
    6. '_ch' → logprob: -18.268150329589844
    7. '[ch' → logprob: -18.518150329589844
    8. 'Ch' → logprob: -18.518150329589844
    9. ''ch' → logprob: -18.518150329589844
    10. '.ch' → logprob: -18.768150329589844

Token 2073: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868875801563263
    2. '==' → logprob: -1.136887550354004
    3. '=='' → logprob: -12.011887550354004
    4. '=' → logprob: -12.636887550354004
    5. ')' → logprob: -13.011887550354004
    6. ')==' → logprob: -13.886887550354004
    7. ' in' → logprob: -14.261887550354004
    8. '[' → logprob: -14.261887550354004
    9. ' ' → logprob: -14.636887550354004
    10. ' =='' → logprob: -14.886887550354004

Token 2074: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008671184070408344
    2. ')' → logprob: -4.758671283721924
    3. '1' → logprob: -9.883670806884766
    4. ' ')' → logprob: -12.758670806884766
    5. '0' → logprob: -13.383670806884766
    6. ' ')'' → logprob: -15.008670806884766
    7. '")' → logprob: -15.383670806884766
    8. '   ' → logprob: -15.883670806884766
    9. ')'' → logprob: -16.008670806884766
    10. '')"' → logprob: -16.133670806884766

Token 2075: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5392613410949707
    2. '               ' → logprob: -0.9142613410949707
    3. ':' → logprob: -4.414261341094971
    4. '           ' → logprob: -6.414261341094971
    5. '==' → logprob: -7.039261341094971
    6. '=' → logprob: -7.664261341094971
    7. ' and' → logprob: -8.539260864257812
    8. '                   ' → logprob: -8.914260864257812
    9. ' ==' → logprob: -9.414260864257812
    10. '              ' → logprob: -9.789260864257812

Token 2076: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009066660888493061
    2. 'depth' → logprob: -4.759066581726074
    3. '(depth' → logprob: -8.009066581726074
    4. '0' → logprob: -10.384066581726074
    5. '           ' → logprob: -10.509066581726074
    6. ' depth' → logprob: -11.009066581726074
    7. '   ' → logprob: -11.634066581726074
    8. '```' → logprob: -11.759066581726074
    9. '                   ' → logprob: -11.884066581726074
    10. '{
' → logprob: -12.134066581726074

Token 2077: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' (adapté à ' depth') → logprob: -0.049749620258808136
    2. ' depth' → logprob: -3.0497496128082275
    3. '               ' → logprob: -6.799749851226807
    4. '(depth' → logprob: -10.799749374389648
    5. '                   ' → logprob: -10.924749374389648
    6. '            ' → logprob: -12.549749374389648
    7. '                ' → logprob: -13.174749374389648
    8. '           ' → logprob: -13.799749374389648
    9. '.depth' → logprob: -13.924749374389648
    10. '1' → logprob: -15.049749374389648

Token 2078: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -6.0868278524139896e-05
    2. ' -=' → logprob: -10.50006103515625
    3. '-' → logprob: -10.87506103515625
    4. '>' → logprob: -11.75006103515625
    5. '+=' → logprob: -12.50006103515625
    6. '=' → logprob: -13.00006103515625
    7. '   ' → logprob: -15.62506103515625
    8. '!=' → logprob: -16.37506103515625
    9. '```' → logprob: -16.50006103515625
    10. '           ' → logprob: -16.62506103515625

Token 2079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -18.625001907348633
    4. '```' → logprob: -19.250001907348633
    5. '-' → logprob: -19.750001907348633
    6. '
' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.250001907348633
    8. ')' → logprob: -20.812501907348633
    9. '=' → logprob: -21.062501907348633
    10. '+' → logprob: -21.437501907348633

Token 2080: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023115957155823708
    2. '               ' → logprob: -4.398116111755371
    3. '
' → logprob: -5.023116111755371
    4. ':
' → logprob: -6.273116111755371
    5. '		' → logprob: -7.273116111755371
    6. '```' → logprob: -8.398116111755371
    7. '       ' → logprob: -8.648116111755371
    8. '\n' → logprob: -8.773116111755371
    9. ',
' → logprob: -8.898116111755371
    10. ',' → logprob: -9.398116111755371

Token 2081: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025937308091670275
    2. '               ' → logprob: -6.127593517303467
    3. '       ' → logprob: -8.377593994140625
    4. '
' → logprob: -9.502593994140625
    5. '		' → logprob: -10.627593994140625
    6. ',' → logprob: -10.752593994140625
    7. '```' → logprob: -11.252593994140625
    8. '                   ' → logprob: -12.127593994140625
    9. '          ' → logprob: -12.252593994140625
    10. '   ' → logprob: -12.502593994140625

Token 2082: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.227601557970047
    2. 'elif' (adapté à ' elif') → logprob: -2.3526015281677246
    3. ' elif' → logprob: -2.4776015281677246
    4. '       ' → logprob: -4.227601528167725
    5. ' if' → logprob: -5.727601528167725
    6. '               ' → logprob: -6.477601528167725
    7. 'if' → logprob: -6.602601528167725
    8. 'else' → logprob: -6.977601528167725
    9. '		' → logprob: -7.602601528167725
    10. '   ' → logprob: -7.852601528167725

Token 2083: ' depth' (ID: 13636)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.20144666731357574
    2. ' ch' → logprob: -1.7014466524124146
    3. '(ch' → logprob: -10.451446533203125
    4. '	ch' → logprob: -13.576446533203125
    5. ' ' → logprob: -13.951446533203125
    6. ' (' → logprob: -14.576446533203125
    7. 'c' → logprob: -15.201446533203125
    8. 'i' → logprob: -15.201446533203125
    9. '_ch' → logprob: -15.326446533203125
    10. '[ch' → logprob: -15.576446533203125

Token 2084: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18801526725292206
    2. '==' → logprob: -1.8130152225494385
    3. ' >' → logprob: -5.063015460968018
    4. '>' → logprob: -6.813015460968018
    5. ' <' → logprob: -7.688015460968018
    6. ' !=' → logprob: -8.43801498413086
    7. ' in' → logprob: -10.43801498413086
    8. '0' → logprob: -10.68801498413086
    9. ' <=' → logprob: -10.68801498413086
    10. '!=' → logprob: -11.18801498413086

Token 2085: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '۰' → logprob: -20.250001907348633
    5. '1' → logprob: -20.500001907348633
    6. '
' → logprob: -20.625001907348633
    7. '=' → logprob: -21.375001907348633
    8. '000' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.500001907348633
    10. '０' → logprob: -21.562501907348633

Token 2086: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -15.62500286102295
    4. '   ' → logprob: -18.000003814697266
    5. '2' → logprob: -19.437503814697266
    6. '000' → logprob: -19.625003814697266
    7. '=' → logprob: -19.625003814697266
    8. '
' → logprob: -19.750003814697266
    9. '```' → logprob: -19.812503814697266
    10. '...' → logprob: -20.375003814697266

Token 2087: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0026187049224972725
    2. 'and' → logprob: -6.002618789672852
    3. '               ' → logprob: -9.127618789672852
    4. '           ' → logprob: -10.752618789672852
    5. '            ' → logprob: -11.877618789672852
    6. '	and' → logprob: -13.002618789672852
    7. ' ' → logprob: -13.627618789672852
    8. '             ' → logprob: -15.002618789672852
    9. ' ' → logprob: -15.252618789672852
    10. '   ' → logprob: -15.377618789672852

Token 2088: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.11310053616762161
    2. ' ch' → logprob: -2.238100528717041
    3. '(ch' → logprob: -8.2381010055542
    4. ' (' → logprob: -11.7381010055542
    5. 'c' → logprob: -13.6131010055542
    6. '	ch' → logprob: -13.9881010055542
    7. 'i' → logprob: -14.1131010055542
    8. '(' → logprob: -14.4881010055542
    9. '_ch' → logprob: -15.3006010055542
    10. '   ' → logprob: -15.3006010055542

Token 2089: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002040698891505599
    2. 'in' → logprob: -6.252040863037109
    3. ' ' → logprob: -9.87704086303711
    4. ' ==' → logprob: -9.87704086303711
    5. '==' → logprob: -12.50204086303711
    6. ' ' → logprob: -12.62704086303711
    7. ' '' → logprob: -15.25204086303711
    8. ' 
' → logprob: -15.37704086303711
    9. 'space' → logprob: -15.50204086303711
    10. ' =='' → logprob: -15.50204086303711

Token 2090: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00011391390580683947
    2. ''+' → logprob: -9.625113487243652
    3. ''' → logprob: -10.375113487243652
    4. ' ops' → logprob: -11.250113487243652
    5. '['' → logprob: -13.375113487243652
    6. '{'' → logprob: -14.250113487243652
    7. '('' → logprob: -14.750113487243652
    8. 'op' → logprob: -15.125113487243652
    9. '_ops' → logprob: -15.750113487243652
    10. ''op' → logprob: -15.875113487243652

Token 2091: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2940409183502197
    2. ':' → logprob: -1.5440409183502197
    3. '               ' → logprob: -3.4190409183502197
    4. ' and' → logprob: -5.294040679931641
    5. '           ' → logprob: -6.044040679931641
    6. '):
' → logprob: -8.41904067993164
    7. '=' → logprob: -8.79404067993164
    8. ':return' → logprob: -8.91904067993164
    9. '[' → logprob: -9.04404067993164
    10. 'and' → logprob: -9.66904067993164

Token 2092: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03696237877011299
    2. ':
' → logprob: -4.036962509155273
    3. ' and' → logprob: -4.786962509155273
    4. ':' → logprob: -5.286962509155273
    5. '           ' → logprob: -5.911962509155273
    6. ',' → logprob: -7.786962509155273
    7. '[' → logprob: -7.786962509155273
    8. ' return' → logprob: -7.911962509155273
    9. 'return' → logprob: -8.786962509155273
    10. ':return' → logprob: -8.786962509155273

Token 2093: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15075437724590302
    2. ' return' → logprob: -2.275754451751709
    3. '                   ' → logprob: -3.400754451751709
    4. '               ' → logprob: -6.525754451751709
    5. 'res' (adapté à ' res') → logprob: -6.650754451751709
    6. 'yield' → logprob: -7.775754451751709
    7. ' res' → logprob: -8.40075397491455
    8. '
' → logprob: -8.77575397491455
    9. '                       ' → logprob: -9.02575397491455
    10. '           ' → logprob: -10.02575397491455

Token 2094: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010669894982129335
    2. '.' → logprob: -6.876067161560059
    3. 'append' → logprob: -10.751067161560059
    4. '.app' → logprob: -11.876067161560059
    5. ' .' → logprob: -12.376067161560059
    6. ',' → logprob: -15.001067161560059
    7. 'Append' → logprob: -15.126067161560059
    8. ' append' → logprob: -15.751067161560059
    9. '.add' → logprob: -16.001066207885742
    10. '.insert' → logprob: -16.001066207885742

Token 2095: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11709354817867279
    2. 'i' → logprob: -2.242093563079834
    3. ' (' → logprob: -5.992093563079834
    4. '(' → logprob: -6.492093563079834
    5. ' i' → logprob: -8.867093086242676
    6. '((' → logprob: -9.867093086242676
    7. '   ' → logprob: -10.242093086242676
    8. '[i' → logprob: -11.742093086242676
    9. ' ' → logprob: -12.742093086242676
    10. ',i' → logprob: -13.492093086242676

Token 2096: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002491807099431753
    2. ' i' → logprob: -8.375248908996582
    3. '   ' → logprob: -12.500248908996582
    4. ')' → logprob: -12.625248908996582
    5. ''i' → logprob: -12.625248908996582
    6. '(i' → logprob: -13.250248908996582
    7. ''' → logprob: -13.500248908996582
    8. ' ' → logprob: -13.875248908996582
    9. '1' → logprob: -14.250248908996582
    10. ')i' → logprob: -14.375248908996582

Token 2097: ',ch' (ID: 165575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2545108199119568
    2. ',ch' → logprob: -1.5045108795166016
    3. ')' → logprob: -6.504510879516602
    4. ',
' → logprob: -8.254510879516602
    5. ',c' → logprob: -8.379510879516602
    6. ' ,' → logprob: -9.004510879516602
    7. ',)' → logprob: -9.504510879516602
    8. '
' → logprob: -9.879510879516602
    9. ','' → logprob: -10.004510879516602
    10. '))' → logprob: -10.129510879516602

Token 2098: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008761348202824593
    2. '))
' → logprob: -5.008761405944824
    3. ',' → logprob: -6.508761405944824
    4. ')' → logprob: -8.008761405944824
    5. ',))
' → logprob: -9.383761405944824
    6. ' ))' → logprob: -10.633761405944824
    7. '               ' → logprob: -10.758761405944824
    8. '));' → logprob: -10.883761405944824
    9. ','' → logprob: -11.383761405944824
    10. '       ' → logprob: -11.633761405944824

Token 2099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33400359749794006
    2. '               ' → logprob: -1.4590035676956177
    3. '           ' → logprob: -3.3340036869049072
    4. ',' → logprob: -5.084003448486328
    5. '<|end|>' → logprob: -5.584003448486328
    6. '```' → logprob: -6.209003448486328
    7. ')' → logprob: -6.709003448486328
    8. '   ' → logprob: -7.334003448486328
    9. '[' → logprob: -7.834003448486328
    10. '                   ' → logprob: -8.709003448486328

Token 2100: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07598327100276947
    2. '   ' → logprob: -3.3259832859039307
    3. ':
' → logprob: -5.075983047485352
    4. ':' → logprob: -5.200983047485352
    5. ')' → logprob: -5.450983047485352
    6. '
' → logprob: -5.575983047485352
    7. '           ' → logprob: -5.825983047485352
    8. ' ' → logprob: -5.950983047485352
    9. '<|end|>' → logprob: -5.950983047485352
    10. '[' → logprob: -6.825983047485352

Token 2101: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00035274302354082465
    2. '[]' → logprob: -8.00035285949707
    3. ' res' → logprob: -11.00035285949707
    4. '[' → logprob: -14.87535285949707
    5. '[]}' → logprob: -16.62535285949707
    6. '(res' → logprob: -16.87535285949707
    7. '$res' → logprob: -16.87535285949707
    8. '	res' → logprob: -17.00035285949707
    9. ' []' → logprob: -17.25035285949707
    10. '[])' → logprob: -17.75035285949707

Token 2102: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0426132678985596
    2. '<|end|>' → logprob: -1.1676132678985596
    3. '
' → logprob: -2.0426132678985596
    4. ':' → logprob: -3.0426132678985596
    5. 'def' → logprob: -3.2926132678985596
    6. '       ' → logprob: -3.9176132678985596
    7. '```' → logprob: -3.9176132678985596
    8. ')' → logprob: -4.0426130294799805
    9. '_tokens' → logprob: -4.1676130294799805
    10. ':
' → logprob: -5.0426130294799805

Token 2103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36114776134490967
    2. 'def' → logprob: -1.9861477613449097
    3. 'if' → logprob: -2.361147880554199
    4. '[]' → logprob: -4.361147880554199
    5. 'ops' → logprob: -4.611147880554199
    6. 'op' → logprob: -4.736147880554199
    7. '       ' → logprob: -5.111147880554199
    8. ' if' → logprob: -5.111147880554199
    9. 'tokens' → logprob: -5.361147880554199
    10. 'return' → logprob: -5.486147880554199

Token 2104: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.5176558494567871
    2. '   ' → logprob: -1.017655849456787
    3. 'op' → logprob: -3.767655849456787
    4. 'if' → logprob: -5.142655849456787
    5. 'pos' → logprob: -5.767655849456787
    6. 'def' → logprob: -6.017655849456787
    7. '_ops' → logprob: -6.517655849456787
    8. 'for' → logprob: -6.767655849456787
    9. 'operators' → logprob: -6.767655849456787
    10. 'indices' → logprob: -6.892655849456787

Token 2105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47953012585639954
    2. '=' → logprob: -0.9795300960540771
    3. '.append' → logprob: -6.104530334472656
    4. ',' → logprob: -6.354530334472656
    5. '=['' → logprob: -7.479530334472656
    6. '[' → logprob: -8.104530334472656
    7. '=[' → logprob: -8.979530334472656
    8. '=[]' → logprob: -9.479530334472656
    9. '<|end|>' → logprob: -9.604530334472656
    10. ')' → logprob: -9.729530334472656

Token 2106: ' find' (ID: 1646)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.03827132657170296
    2. ''+' → logprob: -3.288271427154541
    3. ''' → logprob: -9.538270950317383
    4. ' ['' → logprob: -9.913270950317383
    5. '[' → logprob: -10.288270950317383
    6. '"+' → logprob: -10.538270950317383
    7. '["+' → logprob: -10.913270950317383
    8. '{'' → logprob: -11.538270950317383
    9. '{' → logprob: -11.538270950317383
    10. 'set' → logprob: -12.163270950317383

Token 2107: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.010112904012203217
    2. '_out' → logprob: -5.635112762451172
    3. '('_' → logprob: -6.135112762451172
    4. '(['' → logprob: -6.260112762451172
    5. 'op' → logprob: -7.510112762451172
    6. '('' → logprob: -7.760112762451172
    7. '+' → logprob: -8.135112762451172
    8. '_' → logprob: -8.260112762451172
    9. '_ops' → logprob: -8.635112762451172
    10. '['' → logprob: -8.885112762451172

Token 2108: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -0.00033677343162707984
    2. '_' → logprob: -8.875336647033691
    3. 'outside' → logprob: -9.375336647033691
    4. '_op' → logprob: -9.750336647033691
    5. 'Outside' → logprob: -11.250336647033691
    6. 's' → logprob: -12.000336647033691
    7. '_(' → logprob: -12.500336647033691
    8. ''_' → logprob: -12.750336647033691
    9. '_positions' → logprob: -12.875336647033691
    10. '(' → logprob: -12.875336647033691

Token 2109: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.006960808299481869
    2. '(side' → logprob: -5.631960868835449
    3. 'ide' → logprob: -6.131960868835449
    4. '(s' → logprob: -8.13196086883545
    5. '(' → logprob: -8.63196086883545
    6. 'outside' → logprob: -8.88196086883545
    7. '[' → logprob: -9.00696086883545
    8. '('' → logprob: -9.13196086883545
    9. 's' → logprob: -10.00696086883545
    10. 'site' → logprob: -10.50696086883545

Token 2110: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.03826237842440605
    2. 'par' → logprob: -3.663262367248535
    3. 'paren' → logprob: -4.663262367248535
    4. '('' → logprob: -6.538262367248535
    5. '['' → logprob: -7.288262367248535
    6. '_' → logprob: -8.413262367248535
    7. ''' → logprob: -10.288262367248535
    8. '{'' → logprob: -10.913262367248535
    9. '(paren' → logprob: -11.288262367248535
    10. '[' → logprob: -12.288262367248535

Token 2111: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.13360528647899628
    2. 'ar' → logprob: -2.5086052417755127
    3. 'aren' → logprob: -3.2586052417755127
    4. '('' → logprob: -6.508605480194092
    5. '(s' → logprob: -7.008605480194092
    6. 's' → logprob: -7.633605480194092
    7. '
' → logprob: -7.883605480194092
    8. '   ' → logprob: -8.133605003356934
    9. '['' → logprob: -8.883605003356934
    10. '(' → logprob: -9.008605003356934

Token 2112: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00019746100588236004
    2. 's' → logprob: -9.625197410583496
    3. '(['' → logprob: -9.875197410583496
    4. '('' → logprob: -10.250197410583496
    5. '   ' → logprob: -11.125197410583496
    6. '(' → logprob: -11.125197410583496
    7. ' (' → logprob: -12.000197410583496
    8. '('+' → logprob: -13.000197410583496
    9. '("' → logprob: -13.500197410583496
    10. ' ' → logprob: -13.750197410583496

Token 2113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5361328125
    2. '(s' → logprob: -1.0361328125
    3. ',['' → logprob: -3.5361328125
    4. '(['' → logprob: -3.9111328125
    5. '('' → logprob: -4.9111328125
    6. ',s' → logprob: -6.2861328125
    7. ','' → logprob: -7.1611328125
    8. 's' → logprob: -7.6611328125
    9. '['' → logprob: -9.2861328125
    10. '   ' → logprob: -9.5361328125

Token 2114: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.20148546993732452
    2. '['' → logprob: -1.701485514640808
    3. '"+' → logprob: -9.951485633850098
    4. ''' → logprob: -11.201485633850098
    5. '{'' → logprob: -12.201485633850098
    6. '('' → logprob: -13.326485633850098
    7. '{' → logprob: -13.326485633850098
    8. 'set' → logprob: -13.701485633850098
    9. '('+' → logprob: -14.701485633850098
    10. ' ['' → logprob: -15.201485633850098

Token 2115: '-' (ID: 12)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.06250534951686859
    2. '-' → logprob: -3.5625052452087402
    3. ''+' → logprob: -4.06250524520874
    4. '['' → logprob: -5.06250524520874
    5. ''' → logprob: -5.56250524520874
    6. '+-' → logprob: -6.31250524520874
    7. ' '-')' → logprob: -7.18750524520874
    8. '+'' → logprob: -7.56250524520874
    9. '+' → logprob: -8.187505722045898
    10. ' ' → logprob: -8.562505722045898

Token 2116: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.15318094193935394
    2. ')' → logprob: -2.0281808376312256
    3. '')
' → logprob: -5.153181076049805
    4. ')')
' → logprob: -6.403181076049805
    5. '+')' → logprob: -7.153181076049805
    6. ')
' → logprob: -7.528181076049805
    7. '+' → logprob: -8.153181076049805
    8. '[]' → logprob: -8.153181076049805
    9. ')]' → logprob: -8.653181076049805
    10. '   ' → logprob: -8.653181076049805

Token 2117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32562941312789917
    2. 'if' → logprob: -1.450629472732544
    3. ' if' → logprob: -3.575629472732544
    4. 'for' → logprob: -4.825629234313965
    5. ' for' → logprob: -5.825629234313965
    6. '
' → logprob: -6.325629234313965
    7. '```' → logprob: -6.825629234313965
    8. ',' → logprob: -8.575629234313965
    9. '<|end|>' → logprob: -8.700629234313965
    10. ':' → logprob: -8.700629234313965

Token 2118: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008910824544727802
    2. '   ' → logprob: -4.758910655975342
    3. ' if' → logprob: -8.3839111328125
    4. 'for' → logprob: -10.1339111328125
    5. '```' → logprob: -10.6339111328125
    6. '
' → logprob: -13.5089111328125
    7. '#' (adapté à ' #') → logprob: -14.2589111328125
    8. 'If' → logprob: -14.5089111328125
    9. '	if' → logprob: -14.5089111328125
    10. 'return' → logprob: -15.6339111328125

Token 2119: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025729250628501177
    2. '   ' → logprob: -6.002573013305664
    3. ' if' → logprob: -9.252573013305664
    4. 'for' → logprob: -13.877573013305664
    5. '
' → logprob: -15.627573013305664
    6. 'If' → logprob: -15.877573013305664
    7. '```' → logprob: -16.127573013305664
    8. '#' → logprob: -16.627573013305664
    9. 'while' → logprob: -18.502573013305664
    10. 'return' → logprob: -18.752573013305664

Token 2120: ' +' (ID: 659)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.02026822790503502
    2. ' ops' → logprob: -4.645268440246582
    3. ' not' → logprob: -5.645268440246582
    4. 'not' → logprob: -5.645268440246582
    5. 'len' → logprob: -5.770268440246582
    6. ' len' → logprob: -8.395268440246582
    7. '   ' → logprob: -10.645268440246582
    8. '
' → logprob: -12.520268440246582
    9. 'op' → logprob: -12.645268440246582
    10. '.ops' → logprob: -13.270268440246582

Token 2121: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.1576553583145142
    2. 'ops' → logprob: -1.1576553583145142
    3. ':' → logprob: -1.4076553583145142
    4. ':
' → logprob: -3.0326552391052246
    5. 'or' → logprob: -3.4076552391052246
    6. '_ops' → logprob: -3.6576552391052246
    7. ' ops' → logprob: -4.782655239105225
    8. '==' → logprob: -5.782655239105225
    9. '=' → logprob: -5.907655239105225
    10. 's' → logprob: -6.032655239105225

Token 2122: ' -' (ID: 533)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.23983703553676605
    2. '-' → logprob: -1.6148370504379272
    3. 'len' → logprob: -4.614837169647217
    4. ' ops' → logprob: -5.614837169647217
    5. 'op' → logprob: -8.614836692810059
    6. '(' → logprob: -8.989836692810059
    7. '=' → logprob: -9.864836692810059
    8. '(len' → logprob: -10.114836692810059
    9. ''-' → logprob: -10.239836692810059
    10. 'not' → logprob: -10.364836692810059

Token 2123: ' found' (ID: 2491)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932966709136963
    2. ':
' → logprob: -0.6932966709136963
    3. '!=' → logprob: -10.193296432495117
    4. '==' → logprob: -10.443296432495117
    5. '   ' → logprob: -10.568296432495117
    6. '=' → logprob: -11.068296432495117
    7. 'and' → logprob: -11.318296432495117
    8. ':=' → logprob: -12.068296432495117
    9. ',' → logprob: -12.693296432495117
    10. ' and' → logprob: -12.693296432495117

Token 2124: ' at' (ID: 540)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3037404716014862
    2. ':' → logprob: -1.8037405014038086
    3. '   ' → logprob: -2.5537405014038086
    4. ' and' → logprob: -4.428740501403809
    5. 'if' → logprob: -6.053740501403809
    6. 'and' → logprob: -6.178740501403809
    7. ' if' → logprob: -6.803740501403809
    8. '[' → logprob: -7.178740501403809
    9. '       ' → logprob: -7.803740501403809
    10. ',' → logprob: -8.303740501403809

Token 2125: ' top' (ID: 2344)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.44221746921539307
    2. '0' → logprob: -1.692217469215393
    3. 'len' → logprob: -1.942217469215393
    4. ' base' → logprob: -3.8172173500061035
    5. '1' → logprob: -5.5672173500061035
    6. '[' → logprob: -6.6922173500061035
    7. ' len' → logprob: -7.1922173500061035
    8. ' ' → logprob: -7.3172173500061035
    9. '[(' → logprob: -8.067217826843262
    10. '[
' → logprob: -8.567217826843262

Token 2126: ' level' (ID: 3211)
  Prédit: '-level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-level' → logprob: -0.6084025502204895
    2. ':
' → logprob: -1.6084024906158447
    3. 'ops' → logprob: -2.4834024906158447
    4. '_level' → logprob: -2.9834024906158447
    5. '_ops' → logprob: -3.2334024906158447
    6. '_' → logprob: -3.3584024906158447
    7. ':' → logprob: -4.358402729034424
    8. 'op' → logprob: -5.108402729034424
    9. '_levels' → logprob: -5.608402729034424
    10. 'level' → logprob: -5.858402729034424

Token 2127: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.677301287651062
    2. ':' → logprob: -0.802301287651062
    3. '   ' → logprob: -3.3023014068603516
    4. ' and' → logprob: -5.052301406860352
    5. 'and' → logprob: -8.427301406860352
    6. ',' → logprob: -9.427301406860352
    7. '==' → logprob: -10.052301406860352
    8. ' if' → logprob: -10.427301406860352
    9. 'if' → logprob: -10.552301406860352
    10. '[' → logprob: -10.677301406860352

Token 2128: ' split' (ID: 12648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7367509007453918
    2. ' for' → logprob: -1.611750841140747
    3. ' if' → logprob: -2.361750841140747
    4. '       ' → logprob: -2.611750841140747
    5. 'if' → logprob: -2.736750841140747
    6. 'for' → logprob: -2.861750841140747
    7. 'pos' → logprob: -4.986751079559326
    8. ' idx' → logprob: -5.361751079559326
    9. ':
' → logprob: -5.486751079559326
    10. ' index' → logprob: -5.611751079559326

Token 2129: ' expression' (ID: 12973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5797426104545593
    2. ':
' → logprob: -1.829742670059204
    3. ':' → logprob: -2.454742670059204
    4. '       ' → logprob: -2.704742670059204
    5. ' at' → logprob: -3.079742670059204
    6. ' if' → logprob: -4.079742431640625
    7. ' for' → logprob: -4.579742431640625
    8. ',' → logprob: -4.704742431640625
    9. 'for' → logprob: -4.704742431640625
    10. 'if' → logprob: -4.829742431640625

Token 2130: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6845991611480713
    2. 'if' → logprob: -1.1845991611480713
    3. ' if' → logprob: -2.3095991611480713
    4. ':
' → logprob: -3.5595991611480713
    5. '       ' → logprob: -3.9345991611480713
    6. 'for' → logprob: -5.059598922729492
    7. ':' → logprob: -5.184598922729492
    8. 'pos' → logprob: -5.559598922729492
    9. '[' → logprob: -5.684598922729492
    10. ' for' → logprob: -5.684598922729492

Token 2131: ' these' (ID: 1879)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.012479047290980816
    2. '
' → logprob: -5.262478828430176
    3. '[' → logprob: -6.387478828430176
    4. 'op' → logprob: -6.637478828430176
    5. 'each' → logprob: -6.637478828430176
    6. ' ops' → logprob: -7.512478828430176
    7. 'those' → logprob: -7.762478828430176
    8. 'the' → logprob: -8.012478828430176
    9. 'positions' → logprob: -8.387478828430176
    10. 'them' → logprob: -8.512478828430176

Token 2132: ' ops' (ID: 26973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1201943159103394
    2. 'if' → logprob: -1.3701943159103394
    3. ':
' → logprob: -1.6201943159103394
    4. ':' → logprob: -1.8701943159103394
    5. 'for' → logprob: -3.995194435119629
    6. ' if' → logprob: -4.495194435119629
    7. ',' → logprob: -4.995194435119629
    8. 'pos' → logprob: -5.120194435119629
    9. '_positions' → logprob: -5.620194435119629
    10. ',
' → logprob: -5.995194435119629

Token 2133: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10605157911777496
    2. 'if' → logprob: -2.6060516834259033
    3. ':
' → logprob: -4.231051445007324
    4. ' if' → logprob: -4.856051445007324
    5. ':' → logprob: -6.106051445007324
    6. 'for' → logprob: -7.356051445007324
    7. ',' → logprob: -7.606051445007324
    8. '       ' → logprob: -8.356051445007324
    9. '```' → logprob: -8.731051445007324
    10. ' for' → logprob: -8.731051445007324

Token 2134: ' parse' (ID: 8420)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8233839869499207
    2. 'for' → logprob: -1.0733840465545654
    3. ' return' → logprob: -2.8233840465545654
    4. '   ' → logprob: -2.8233840465545654
    5. ' for' → logprob: -2.9483840465545654
    6. 'def' → logprob: -3.8233840465545654
    7. '
' → logprob: -4.198383808135986
    8. '       ' → logprob: -5.573383808135986
    9. 'if' → logprob: -5.948383808135986
    10. '           ' → logprob: -6.573383808135986

Token 2135: ' parts' (ID: 7881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0515146255493164
    2. 'if' → logprob: -1.1765146255493164
    3. 'for' → logprob: -1.4265146255493164
    4. ' for' → logprob: -3.6765146255493164
    5. 'def' → logprob: -4.301514625549316
    6. ' if' → logprob: -4.676514625549316
    7. '[
' → logprob: -4.926514625549316
    8. 'i' → logprob: -4.926514625549316
    9. '       ' → logprob: -5.176514625549316
    10. ',' → logprob: -5.426514625549316

Token 2136: ' recursively' (ID: 130266)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5107836127281189
    2. ':' → logprob: -1.2607836723327637
    3. ':
' → logprob: -3.1357836723327637
    4. 'if' → logprob: -3.2607836723327637
    5. ' if' → logprob: -4.010783672332764
    6. ',' → logprob: -5.885783672332764
    7. '[' → logprob: -6.135783672332764
    8. 'for' → logprob: -6.510783672332764
    9. '
' → logprob: -6.635783672332764
    10. ')' → logprob: -6.760783672332764

Token 2137: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05451175197958946
    2. 'if' → logprob: -3.179511785507202
    3. '
' → logprob: -5.054511547088623
    4. ' if' → logprob: -5.929511547088623
    5. 'for' → logprob: -6.429511547088623
    6. 'def' → logprob: -8.804512023925781
    7. ' for' → logprob: -8.804512023925781
    8. '```' → logprob: -8.804512023925781
    9. '    
' → logprob: -9.429512023925781
    10. '       ' → logprob: -9.929512023925781

Token 2138: 'left' (ID: 4530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.105526089668274
    2. ')' → logprob: -1.480526089668274
    3. 'for' → logprob: -1.480526089668274
    4. ':
' → logprob: -3.2305259704589844
    5. '
' → logprob: -3.8555259704589844
    6. ' for' → logprob: -3.8555259704589844
    7. ':' → logprob: -3.8555259704589844
    8. '):
' → logprob: -4.105525970458984
    9. ')
' → logprob: -4.105525970458984
    10. '):' → logprob: -4.105525970458984

Token 2139: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0583209991455078
    2. ' =' → logprob: -1.3083209991455078
    3. ')' → logprob: -2.308320999145508
    4. '_tokens' → logprob: -3.058320999145508
    5. ' +=' → logprob: -3.683320999145508
    6. '+' → logprob: -3.683320999145508
    7. 'tokens' → logprob: -4.058320999145508
    8. '   ' → logprob: -4.058320999145508
    9. '+=' → logprob: -4.183320999145508
    10. ',right' → logprob: -4.308320999145508

Token 2140: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0004900033236481249
    2. ' right' → logprob: -7.625490188598633
    3. '	right' → logprob: -14.250490188598633
    4. '_right' → logprob: -14.500490188598633
    5. ')' → logprob: -15.375490188598633
    6. 'Right' → logprob: -16.000490188598633
    7. ',right' → logprob: -16.000490188598633
    8. 'rights' → logprob: -16.125490188598633
    9. '
' → logprob: -16.250490188598633
    10. 'r' → logprob: -16.875490188598633

Token 2141: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6303669810295105
    2. ')' → logprob: -1.6303670406341553
    3. ':' → logprob: -2.6303670406341553
    4. ',' → logprob: -2.8803670406341553
    5. '):' → logprob: -3.1303670406341553
    6. '):
' → logprob: -3.6303670406341553
    7. ':
' → logprob: -3.7553670406341553
    8. 'for' → logprob: -4.255366802215576
    9. '       ' → logprob: -4.755366802215576
    10. '```' → logprob: -5.005366802215576

Token 2142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05247682332992554
    2. 'if' → logprob: -3.4274768829345703
    3. ' if' → logprob: -5.05247688293457
    4. 'for' → logprob: -5.05247688293457
    5. ' for' → logprob: -6.55247688293457
    6. '       ' → logprob: -6.67747688293457
    7. '
' → logprob: -6.80247688293457
    8. '```' → logprob: -7.67747688293457
    9. 'idx' → logprob: -7.80247688293457
    10. 'i' → logprob: -7.92747688293457

Token 2143: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07366873323917389
    2. '   ' → logprob: -2.6986687183380127
    3. 'for' → logprob: -6.198668956756592
    4. ' if' → logprob: -6.948668956756592
    5. '
' → logprob: -8.323668479919434
    6. 'i' → logprob: -8.823668479919434
    7. 'pos' → logprob: -9.073668479919434
    8. 'idx' → logprob: -9.198668479919434
    9. '```' → logprob: -10.198668479919434
    10. 'index' → logprob: -10.448668479919434

Token 2144: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.10780877619981766
    2. ' ops' → logprob: -2.357808828353882
    3. 'len' → logprob: -5.357808589935303
    4. ' len' → logprob: -5.857808589935303
    5. '   ' → logprob: -13.482809066772461
    6. ' ' → logprob: -14.357809066772461
    7. '(len' → logprob: -14.482809066772461
    8. '_ops' → logprob: -14.607809066772461
    9. 'op' → logprob: -14.982809066772461
    10. '.ops' → logprob: -15.107809066772461

Token 2145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24303284287452698
    2. ':
' → logprob: -1.7430328130722046
    3. '[' → logprob: -3.368032932281494
    4. '==' → logprob: -6.118032932281494
    5. '!=' → logprob: -6.743032932281494
    6. ' and' → logprob: -7.243032932281494
    7. '=' → logprob: -7.743032932281494
    8. '   ' → logprob: -7.743032932281494
    9. ' !=' → logprob: -8.368032455444336
    10. 'and' → logprob: -8.868032455444336

Token 2146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026889877393841743
    2. ':' → logprob: -3.9018898010253906
    3. ':
' → logprob: -6.276889801025391
    4. '   ' → logprob: -6.776889801025391
    5. '```' → logprob: -7.151889801025391
    6. ',' → logprob: -7.276889801025391
    7. 'i' → logprob: -8.52688980102539
    8. '+' → logprob: -8.52688980102539
    9. '[' → logprob: -8.65188980102539
    10. 'idx' → logprob: -8.77688980102539

Token 2147: ' cells' (ID: 11242)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8092201948165894
    2. 'op' → logprob: -1.3092201948165894
    3. '       ' → logprob: -1.9342201948165894
    4. 'i' → logprob: -2.434220314025879
    5. 'idx' → logprob: -3.184220314025879
    6. 'left' → logprob: -5.684220314025879
    7. 'index' → logprob: -5.809220314025879
    8. '   ' → logprob: -6.059220314025879
    9. 'for' → logprob: -7.809220314025879
    10. 'l' → logprob: -7.934220314025879

Token 2148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7469613552093506
    2. ' =' → logprob: -0.9969613552093506
    3. ',' → logprob: -2.4969613552093506
    4. '=[]' → logprob: -3.4969613552093506
    5. '_start' → logprob: -4.87196159362793
    6. 's' → logprob: -4.99696159362793
    7. '_tokens' → logprob: -5.37196159362793
    8. '=[]
' → logprob: -5.62196159362793
    9. '_idx' → logprob: -5.74696159362793
    10. '_' → logprob: -5.87196159362793

Token 2149: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10548652708530426
    2. '[]
' → logprob: -2.3554866313934326
    3. 'split' → logprob: -5.4804863929748535
    4. '[' → logprob: -6.9804863929748535
    5. ' []' → logprob: -9.355486869812012
    6. ' []
' → logprob: -10.730486869812012
    7. '[]

' → logprob: -11.230486869812012
    8. '[
' → logprob: -11.605486869812012
    9. '[],' → logprob: -11.980486869812012
    10. 'line' → logprob: -12.105486869812012

Token 2150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.087524175643921
    2. 'prev' → logprob: -1.087524175643921
    3. 'start' → logprob: -2.462524175643921
    4. ',' → logprob: -2.462524175643921
    5. '           ' → logprob: -2.837524175643921
    6. 'pos' → logprob: -3.337524175643921
    7. 'last' → logprob: -4.8375244140625
    8. 'for' → logprob: -4.8375244140625
    9. '```' → logprob: -4.8375244140625
    10. ' prev' → logprob: -5.2125244140625

Token 2151: ' vals' (ID: 58985)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.3345477879047394
    2. 'prev' → logprob: -1.334547758102417
    3. 'start' → logprob: -4.084547996520996
    4. 'pos' → logprob: -5.584547996520996
    5. '   ' → logprob: -9.334547996520996
    6. 'split' → logprob: -9.459547996520996
    7. 'cur' → logprob: -9.584547996520996
    8. 'l' → logprob: -9.584547996520996
    9. ' last' → logprob: -9.584547996520996
    10. 'parts' → logprob: -10.459547996520996

Token 2152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09106314182281494
    2. ' =' → logprob: -2.8410630226135254
    3. ',' → logprob: -4.466063022613525
    4. '=[]' → logprob: -4.466063022613525
    5. '.append' → logprob: -5.716063022613525
    6. '=[]
' → logprob: -6.341063022613525
    7. '.' → logprob: -9.091063499450684
    8. '=
' → logprob: -9.341063499450684
    9. '_tokens' → logprob: -9.716063499450684
    10. 'tokens' → logprob: -10.091063499450684

Token 2153: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.07907352596521378
    2. '[]' → logprob: -2.579073429107666
    3. ' []
' → logprob: -9.329073905944824
    4. '[' → logprob: -10.079073905944824
    5. '[],' → logprob: -10.329073905944824
    6. ' []' → logprob: -12.204073905944824
    7. '[]

' → logprob: -12.204073905944824
    8. '[],
' → logprob: -12.329073905944824
    9. '   ' → logprob: -13.454073905944824
    10. '[];
' → logprob: -14.079073905944824

Token 2154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6660872101783752
    2. 'prev' → logprob: -1.4160871505737305
    3. ',' → logprob: -1.7910871505737305
    4. '           ' → logprob: -4.4160871505737305
    5. '```' → logprob: -4.4160871505737305
    6. 'pos' → logprob: -4.6660871505737305
    7. ' prev' → logprob: -4.7910871505737305
    8. ',
' → logprob: -4.9160871505737305
    9. 'last' → logprob: -5.0410871505737305
    10. 'start' → logprob: -5.0410871505737305

Token 2155: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.7066136002540588
    2. 'prev' → logprob: -0.7066136002540588
    3. 'start' → logprob: -4.706613540649414
    4. 'pos' → logprob: -5.456613540649414
    5. 'l' → logprob: -10.831613540649414
    6. '   ' → logprob: -11.081613540649414
    7. 'cur' → logprob: -11.206613540649414
    8. 'pre' → logprob: -12.706613540649414
    9. ' last' → logprob: -12.706613540649414
    10. ' prev' → logprob: -12.706613540649414

Token 2156: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6175276041030884
    2. '_token' → logprob: -1.4925276041030884
    3. ' =' → logprob: -2.492527484893799
    4. '_pos' → logprob: -2.742527484893799
    5. '=' → logprob: -3.242527484893799
    6. '_tokens' → logprob: -4.117527484893799
    7. '_idx' → logprob: -4.242527484893799
    8. '_index' → logprob: -6.242527484893799
    9. '+' → logprob: -6.242527484893799
    10. '_end' → logprob: -6.492527484893799

Token 2157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020807012333534658
    2. ' ' → logprob: -8.500207901000977
    3. '-' → logprob: -12.500207901000977
    4. ' -' → logprob: -14.750207901000977
    5. '
' → logprob: -16.375207901000977
    6. '(' → logprob: -16.562707901000977
    7. '   ' → logprob: -16.687707901000977
    8. '  ' → logprob: -17.187707901000977
    9. '    ' → logprob: -17.812707901000977
    10. 's' → logprob: -18.187707901000977

Token 2158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003030475229024887
    2. '-' → logprob: -5.878030300140381
    3. 'ops' → logprob: -8.503030776977539
    4. ' ' → logprob: -12.003030776977539
    5. '(' → logprob: -12.503030776977539
    6. ' -' → logprob: -12.878030776977539
    7. 'op' → logprob: -13.128030776977539
    8. ' ops' → logprob: -13.503030776977539
    9. 'None' → logprob: -14.565530776977539
    10. '[' → logprob: -14.628030776977539

Token 2159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017537161707878113
    2. 'for' → logprob: -5.1425371170043945
    3. ' for' → logprob: -5.6425371170043945
    4. '
' → logprob: -5.7675371170043945
    5. '           ' → logprob: -6.7675371170043945
    6. ',' → logprob: -6.8925371170043945
    7. '        
' → logprob: -7.2675371170043945
    8. '   ' → logprob: -7.7675371170043945
    9. '```' → logprob: -8.267537117004395
    10. ',
' → logprob: -8.892537117004395

Token 2160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0479922741651535
    2. 'for' → logprob: -3.92299222946167
    3. ' for' → logprob: -4.67299222946167
    4. '           ' → logprob: -4.92299222946167
    5. '
' → logprob: -5.92299222946167
    6. '   ' → logprob: -6.17299222946167
    7. ',' → logprob: -6.42299222946167
    8. ':
' → logprob: -6.79799222946167
    9. '               ' → logprob: -7.29799222946167
    10. '```' → logprob: -7.67299222946167

Token 2161: ' last' (ID: 2174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011133065447211266
    2. '       ' → logprob: -4.636133193969727
    3. ' for' → logprob: -6.636133193969727
    4. '           ' → logprob: -10.636133193969727
    5. '
' → logprob: -11.011133193969727
    6. '   ' → logprob: -11.761133193969727
    7. '	for' → logprob: -12.386133193969727
    8. 'while' → logprob: -13.011133193969727
    9. '```' → logprob: -13.136133193969727
    10. 'prev' → logprob: -13.511133193969727

Token 2162: '_op' (ID: 20111)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1981319785118103
    2. ',' → logprob: -2.448132038116455
    3. ' =' → logprob: -3.823132038116455
    4. 'for' → logprob: -4.573132038116455
    5. ' ,' → logprob: -4.698132038116455
    6. ' +=' → logprob: -4.823132038116455
    7. '_token' → logprob: -4.948132038116455
    8. '+=' → logprob: -5.073132038116455
    9. '_tokens' → logprob: -5.448132038116455
    10. 'tokens' → logprob: -5.573132038116455

Token 2163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23223908245563507
    2. ',' → logprob: -2.232239007949829
    3. ' =' → logprob: -2.607239007949829
    4. '_' → logprob: -3.857239007949829
    5. '_idx' → logprob: -6.982239246368408
    6. '[' → logprob: -7.357239246368408
    7. ')' → logprob: -7.482239246368408
    8. ':' → logprob: -7.732239246368408
    9. '_,' → logprob: -8.23223876953125
    10. '_index' → logprob: -8.23223876953125

Token 2164: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1933375895023346
    2. 'ops' → logprob: -1.8183375597000122
    3. 'None' → logprob: -4.693337440490723
    4. ' ' → logprob: -6.318337440490723
    5. '-' → logprob: -6.568337440490723
    6. ' None' → logprob: -7.943337440490723
    7. '(' → logprob: -8.818337440490723
    8. ' ops' → logprob: -9.193337440490723
    9. ''' → logprob: -9.880837440490723
    10. 'len' → logprob: -10.130837440490723

Token 2165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6072527766227722
    2. 'for' → logprob: -1.982252836227417
    3. '
' → logprob: -2.232252836227417
    4. ' for' → logprob: -2.607252836227417
    5. ',' → logprob: -2.982252836227417
    6. '   ' → logprob: -4.482252597808838
    7. ':
' → logprob: -4.857252597808838
    8. '```' → logprob: -4.857252597808838
    9. '<|end|>' → logprob: -4.982252597808838
    10. ',
' → logprob: -4.982252597808838

Token 2166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015872234478592873
    2. ' for' → logprob: -4.765872001647949
    3. '   ' → logprob: -5.890872001647949
    4. 'for' → logprob: -6.390872001647949
    5. '           ' → logprob: -7.390872001647949
    6. '<|end|>' → logprob: -7.890872001647949
    7. ',' → logprob: -8.14087200164795
    8. ':' → logprob: -8.39087200164795
    9. ')' → logprob: -8.39087200164795
    10. ':
' → logprob: -8.64087200164795

Token 2167: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.244840607047081
    2. ' for' → logprob: -1.6198406219482422
    3. '       ' → logprob: -3.994840621948242
    4. '	for' → logprob: -8.369840621948242
    5. '           ' → logprob: -8.494840621948242
    6. '
' → logprob: -8.994840621948242
    7. '   ' → logprob: -9.369840621948242
    8. 'i' → logprob: -9.869840621948242
    9. '```' → logprob: -10.869840621948242
    10. '	' → logprob: -10.994840621948242

Token 2168: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.036384232342243195
    2. 'i' → logprob: -4.036384105682373
    3. 'idx' → logprob: -4.036384105682373
    4. 'index' → logprob: -8.161384582519531
    5. 'op' → logprob: -9.536384582519531
    6. '(i' → logprob: -11.161384582519531
    7. '(pos' → logprob: -11.286384582519531
    8. ' pos' → logprob: -11.411384582519531
    9. 'start' → logprob: -11.911384582519531
    10. '(op' → logprob: -13.661384582519531

Token 2169: ',ch' (ID: 165575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1177268996834755
    2. ',' → logprob: -2.4927268028259277
    3. 'in' → logprob: -4.492726802825928
    4. ' ,' → logprob: -4.742726802825928
    5. '=' → logprob: -5.242726802825928
    6. ' =' → logprob: -7.367726802825928
    7. ',pos' → logprob: -7.617726802825928
    8. ' ' → logprob: -7.742726802825928
    9. '+' → logprob: -7.742726802825928
    10. ',
' → logprob: -8.867727279663086

Token 2170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10842549800872803
    2. 'in' → logprob: -2.3584256172180176
    3. '=' → logprob: -5.358425617218018
    4. ' =' → logprob: -6.358425617218018
    5. ',' → logprob: -6.983425617218018
    6. '+=' → logprob: -8.98342514038086
    7. ' +=' → logprob: -9.23342514038086
    8. ':' → logprob: -9.23342514038086
    9. ',last' → logprob: -9.48342514038086
    10. '   ' → logprob: -9.85842514038086

Token 2171: ' ops' (ID: 26973)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07592504471540451
    2. ' range' → logprob: -3.20092511177063
    3. 'ops' → logprob: -3.82592511177063
    4. 'pos' → logprob: -5.325924873352051
    5. 'enumer' → logprob: -5.700924873352051
    6. 'op' → logprob: -7.575924873352051
    7. '(range' → logprob: -8.07592487335205
    8. '[' → logprob: -8.32592487335205
    9. '   ' → logprob: -8.70092487335205
    10. ' ops' → logprob: -8.95092487335205

Token 2172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6854890584945679
    2. ':
' → logprob: -0.9354890584945679
    3. '+' → logprob: -2.8104891777038574
    4. ',' → logprob: -3.5604891777038574
    5. '           ' → logprob: -5.685489177703857
    6. '       ' → logprob: -6.060489177703857
    7. ' +' → logprob: -6.685489177703857
    8. '=' → logprob: -6.685489177703857
    9. ' in' → logprob: -6.810489177703857
    10. ' =' → logprob: -6.810489177703857

Token 2173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009932922199368477
    2. '       ' → logprob: -5.384932994842529
    3. '```' → logprob: -6.009932994842529
    4. ',' → logprob: -6.884932994842529
    5. ':' → logprob: -7.634932994842529
    6. '               ' → logprob: -8.134932518005371
    7. '   ' → logprob: -8.384932518005371
    8. ':
' → logprob: -8.634932518005371
    9. ' if' → logprob: -9.009932518005371
    10. '
' → logprob: -9.384932518005371

Token 2174: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8920709490776062
    2. 'part' → logprob: -1.142071008682251
    3. 'cell' → logprob: -2.142071008682251
    4. 'cells' → logprob: -2.892071008682251
    5. ' part' → logprob: -3.267071008682251
    6. 'parts' → logprob: -4.142070770263672
    7. 'val' → logprob: -4.642070770263672
    8. 'sub' → logprob: -4.767070770263672
    9. 'left' → logprob: -5.142070770263672
    10. 'expr' → logprob: -5.892070770263672

Token 2175: ' parse' (ID: 8420)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.043579570949077606
    2. 'sub' → logprob: -3.793579578399658
    3. 'segment' → logprob: -5.168579578399658
    4. '           ' → logprob: -5.418579578399658
    5. 'cell' → logprob: -5.918579578399658
    6. 'left' → logprob: -6.043579578399658
    7. ' part' → logprob: -6.793579578399658
    8. 'cells' → logprob: -6.793579578399658
    9. 'parts' → logprob: -7.168579578399658
    10. 'expr' → logprob: -7.418579578399658

Token 2176: ' substring' (ID: 89494)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4053514003753662
    2. 'part' → logprob: -1.7803514003753662
    3. 'cell' → logprob: -3.405351400375366
    4. 'parts' → logprob: -3.655351400375366
    5. '_cell' → logprob: -3.780351400375366
    6. '_part' → logprob: -4.030351638793945
    7. '(lines' → logprob: -4.030351638793945
    8. 'sub' → logprob: -4.280351638793945
    9. 'cells' → logprob: -5.030351638793945
    10. '_lines' → logprob: -5.030351638793945

Token 2177: ' lines' (ID: 8698)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3299397230148315
    2. '=' → logprob: -1.4549397230148315
    3. '(last' → logprob: -1.7049397230148315
    4. ',' → logprob: -2.829939842224121
    5. '[last' → logprob: -2.954939842224121
    6. '[' → logprob: -3.079939842224121
    7. 'lines' → logprob: -3.204939842224121
    8. '(lines' → logprob: -3.204939842224121
    9. '           ' → logprob: -3.579939842224121
    10. 's' → logprob: -4.079939842224121

Token 2178: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0220571756362915
    2. ' =' → logprob: -1.3970571756362915
    3. '(lines' → logprob: -2.397057056427002
    4. '[
' → logprob: -2.647057056427002
    5. '[' → logprob: -3.022057056427002
    6. 'lines' → logprob: -3.772057056427002
    7. '[line' → logprob: -3.897057056427002
    8. '[last' → logprob: -3.897057056427002
    9. '           ' → logprob: -4.272057056427002
    10. '(last' → logprob: -4.272057056427002

Token 2179: ' region' (ID: 7967)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2986549437046051
    2. '[line' → logprob: -1.9236549139022827
    3. 'range' → logprob: -3.6736550331115723
    4. 'line' → logprob: -4.048655033111572
    5. ' lines' → logprob: -4.298655033111572
    6. '[row' → logprob: -4.423655033111572
    7. '[' → logprob: -4.548655033111572
    8. '[
' → logprob: -4.673655033111572
    9. '(lines' → logprob: -5.048655033111572
    10. '[start' → logprob: -5.798655033111572

Token 2180: ' last' (ID: 2174)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3809963464736938
    2. '=' → logprob: -1.5059963464736938
    3. '           ' → logprob: -2.1309962272644043
    4. 'lines' → logprob: -3.0059962272644043
    5. 'for' → logprob: -3.0059962272644043
    6. 'from' → logprob: -3.1309962272644043
    7. '[
' → logprob: -3.5059962272644043
    8. ',' → logprob: -3.7559962272644043
    9. 'last' → logprob: -3.8809962272644043
    10. '(last' → logprob: -3.8809962272644043

Token 2181: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058678194880485535
    2. 'pos' → logprob: -3.683678150177002
    3. ',pos' → logprob: -4.558678150177002
    4. '[pos' → logprob: -4.558678150177002
    5. ':last' → logprob: -5.058678150177002
    6. '(pos' → logprob: -6.683678150177002
    7. ':
' → logprob: -7.183678150177002
    8. ',' → logprob: -7.433678150177002
    9. '```' → logprob: -7.558678150177002
    10. ' :' → logprob: -8.30867862701416

Token 2182: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0011905835708603263
    2. ' pos' → logprob: -7.001190662384033
    3. 'last' → logprob: -8.251190185546875
    4. ' last' → logprob: -12.251190185546875
    5. '(pos' → logprob: -12.501190185546875
    6. '           ' → logprob: -13.126190185546875
    7. 'prev' → logprob: -13.751190185546875
    8. '0' → logprob: -14.001190185546875
    9. 'position' → logprob: -14.001190185546875
    10. '	pos' → logprob: -14.001190185546875

Token 2183: '-' (ID: 12)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6269730925559998
    2. '       ' → logprob: -1.2519731521606445
    3. '```' → logprob: -3.2519731521606445
    4. 'new' → logprob: -3.5019731521606445
    5. ',' → logprob: -3.8769731521606445
    6. 'lines' → logprob: -4.3769731521606445
    7. ' lines' → logprob: -4.5019731521606445
    8. '   ' → logprob: -5.0019731521606445
    9. 'sub' → logprob: -5.0019731521606445
    10. '_lines' → logprob: -5.0019731521606445

Token 2184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01713307574391365
    2. '+' → logprob: -4.2671332359313965
    3. '```' → logprob: -6.7671332359313965
    4. ' +' → logprob: -7.3921332359313965
    5. ' ' → logprob: -7.5171332359313965
    6. ')' → logprob: -8.517132759094238
    7. '
' → logprob: -9.642132759094238
    8. ',' → logprob: -10.017132759094238
    9. ']' → logprob: -10.017132759094238
    10. '``' → logprob: -10.392132759094238

Token 2185: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6901236176490784
    2. '           ' → logprob: -1.0651235580444336
    3. 'new' → logprob: -3.3151235580444336
    4. '```' → logprob: -3.5651235580444336
    5. ',' → logprob: -3.8151235580444336
    6. 'lines' → logprob: -4.315123558044434
    7. ' lines' → logprob: -4.815123558044434
    8. '   ' → logprob: -5.065123558044434
    9. '_lines' → logprob: -5.190123558044434
    10. '               ' → logprob: -5.565123558044434

Token 2186: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37658417224884033
    2. '           ' → logprob: -1.5015841722488403
    3. ':' → logprob: -4.001584053039551
    4. '   ' → logprob: -4.126584053039551
    5. ',' → logprob: -4.501584053039551
    6. '```' → logprob: -4.501584053039551
    7. '[' → logprob: -4.626584053039551
    8. '               ' → logprob: -5.001584053039551
    9. ' lines' → logprob: -5.126584053039551
    10. ':
' → logprob: -5.626584053039551

Token 2187: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.17687246203422546
    2. '       ' → logprob: -2.176872491836548
    3. '           ' → logprob: -4.176872253417969
    4. 'substr' → logprob: -4.176872253417969
    5. 'part' → logprob: -4.926872253417969
    6. 'region' → logprob: -6.176872253417969
    7. ' sub' → logprob: -6.176872253417969
    8. 'new' → logprob: -6.551872253417969
    9. 'substring' → logprob: -6.801872253417969
    10. 'subset' → logprob: -6.801872253417969

Token 2188: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0044893426820635796
    2. '_' → logprob: -6.754489421844482
    3. ' =' → logprob: -7.004489421844482
    4. '_line' → logprob: -7.129489421844482
    5. '_data' → logprob: -7.629489421844482
    6. '```' → logprob: -8.504488945007324
    7. '
' → logprob: -8.754488945007324
    8. '   ' → logprob: -9.129488945007324
    9. '=' → logprob: -9.129488945007324
    10. '_cells' → logprob: -9.379488945007324

Token 2189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018268169835209846
    2. ' =' → logprob: -4.01826810836792
    3. '   ' → logprob: -10.143268585205078
    4. '=line' → logprob: -10.643268585205078
    5. '=
' → logprob: -10.893268585205078
    6. '=[' → logprob: -11.143268585205078
    7. '           ' → logprob: -12.018268585205078
    8. '       ' → logprob: -12.893268585205078
    9. '[' → logprob: -13.018268585205078
    10. '_lines' → logprob: -13.143268585205078

Token 2190: ' []
' (ID: 8911)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.20547418296337128
    2. '[row' → logprob: -1.9554741382598877
    3. '[' → logprob: -3.2054741382598877
    4. '[data' → logprob: -6.705474376678467
    5. '[cell' → logprob: -7.080474376678467
    6. '[i' → logprob: -7.580474376678467
    7. '[l' → logprob: -8.330473899841309
    8. '[new' → logprob: -8.580473899841309
    9. '[s' → logprob: -8.580473899841309
    10. '[
' → logprob: -9.830473899841309

Token 2191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33281686902046204
    2. 'for' → logprob: -1.8328168392181396
    3. ' for' → logprob: -2.9578168392181396
    4. '[' → logprob: -3.5828168392181396
    5. '               ' → logprob: -4.207817077636719
    6. '       ' → logprob: -4.707817077636719
    7. '[line' → logprob: -5.082817077636719
    8. '   ' → logprob: -5.457817077636719
    9. '[
' → logprob: -6.207817077636719
    10. ' [' → logprob: -6.332817077636719

Token 2192: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4699800908565521
    2. ' for' → logprob: -1.2199801206588745
    3. '           ' → logprob: -2.594980001449585
    4. '       ' → logprob: -5.969980239868164
    5. '   ' → logprob: -6.594980239868164
    6. '               ' → logprob: -6.969980239868164
    7. '	for' → logprob: -9.469980239868164
    8. '                   ' → logprob: -9.719980239868164
    9. '```' → logprob: -10.719980239868164
    10. ' ' → logprob: -10.844980239868164

Token 2193: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.001589131192304194
    2. ' row' → logprob: -7.001589298248291
    3. 'r' → logprob: -8.251588821411133
    4. '_row' → logprob: -8.501588821411133
    5. 'line' → logprob: -9.126588821411133
    6. '_' → logprob: -10.001588821411133
    7. 'idx' → logprob: -11.126588821411133
    8. 'i' → logprob: -11.376588821411133
    9. '   ' → logprob: -11.626588821411133
    10. 'k' → logprob: -12.751588821411133

Token 2194: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31377366185188293
    2. ' in' → logprob: -1.3137736320495605
    3. '[last' → logprob: -8.063774108886719
    4. 'last' → logprob: -9.813774108886719
    5. '(last' → logprob: -10.563774108886719
    6. ' last' → logprob: -10.688774108886719
    7. ',' → logprob: -11.313774108886719
    8. ',last' → logprob: -11.438774108886719
    9. '           ' → logprob: -11.813774108886719
    10. '               ' → logprob: -12.063774108886719

Token 2195: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011845153057947755
    2. ' range' → logprob: -7.376184463500977
    3. 'lines' → logprob: -7.501184463500977
    4. 'row' → logprob: -13.376184463500977
    5. '(range' → logprob: -13.501184463500977
    6. 'line' → logprob: -14.251184463500977
    7. 'rows' → logprob: -14.376184463500977
    8. ' lines' → logprob: -15.001184463500977
    9. '   ' → logprob: -15.376184463500977
    10. 'last' → logprob: -16.001184463500977

Token 2196: '(h' (ID: 8120)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1745377480983734
    2. 'base' → logprob: -2.0495376586914062
    3. 'len' → logprob: -3.5495376586914062
    4. '0' → logprob: -6.799537658691406
    5. 'row' → logprob: -6.924537658691406
    6. ' last' → logprob: -8.299537658691406
    7. ' base' → logprob: -9.424537658691406
    8. '(last' → logprob: -10.174537658691406
    9. 'line' → logprob: -10.299537658691406
    10. '
' → logprob: -10.299537658691406

Token 2197: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006674289703369141
    2. '):' → logprob: -6.131674289703369
    3. '[last' → logprob: -6.506674289703369
    4. '               ' → logprob: -7.256674289703369
    5. '           ' → logprob: -7.631674289703369
    6. ',' → logprob: -7.881674289703369
    7. '       ' → logprob: -8.131673812866211
    8. '[' → logprob: -8.381673812866211
    9. ',last' → logprob: -8.506673812866211
    10. '(last' → logprob: -8.631673812866211

Token 2198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00132976402528584
    2. 'sub' → logprob: -7.2513298988342285
    3. '       ' → logprob: -8.62632942199707
    4. '   ' → logprob: -8.87632942199707
    5. '[sub' → logprob: -9.25132942199707
    6. '           ' → logprob: -9.87632942199707
    7. ' sub' → logprob: -10.12632942199707
    8. '(sub' → logprob: -10.25132942199707
    9. '                   ' → logprob: -11.37632942199707
    10. ' ' → logprob: -11.62632942199707

Token 2199: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.42908212542533875
    2. ' sub' → logprob: -1.6790821552276611
    3. '   ' → logprob: -3.054082155227661
    4. '               ' → logprob: -3.179082155227661
    5. '	sub' → logprob: -3.804082155227661
    6. '[sub' → logprob: -4.054081916809082
    7. '[' → logprob: -4.679081916809082
    8. '                   ' → logprob: -4.804081916809082
    9. '       ' → logprob: -5.054081916809082
    10. ' ' → logprob: -6.554081916809082

Token 2200: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.005784804932773113
    2. '[' → logprob: -6.25578498840332
    3. ' =' → logprob: -7.13078498840332
    4. '   ' → logprob: -7.13078498840332
    5. '               ' → logprob: -7.75578498840332
    6. '           ' → logprob: -8.00578498840332
    7. '[line' → logprob: -8.25578498840332
    8. '_line' → logprob: -8.50578498840332
    9. 'Lines' → logprob: -9.00578498840332
    10. '[row' → logprob: -9.25578498840332

Token 2201: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005397395696491003
    2. '=' → logprob: -5.630397319793701
    3. 'append' → logprob: -8.00539779663086
    4. '[' → logprob: -8.13039779663086
    5. '.' → logprob: -8.38039779663086
    6. '               ' → logprob: -8.50539779663086
    7. ' =' → logprob: -8.50539779663086
    8. ' lines' → logprob: -9.25539779663086
    9. '+=' → logprob: -9.75539779663086
    10. '                   ' → logprob: -10.13039779663086

Token 2202: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.18018345534801483
    2. ' lines' → logprob: -1.8051834106445312
    3. '(lines' → logprob: -8.305183410644531
    4. 's' → logprob: -9.055183410644531
    5. ' s' → logprob: -10.430183410644531
    6. 'line' → logprob: -11.430183410644531
    7. '   ' → logprob: -11.680183410644531
    8. 'rows' → logprob: -11.930183410644531
    9. ' ' → logprob: -12.555183410644531
    10. '[' → logprob: -12.555183410644531

Token 2203: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.03430987149477005
    2. '[last' → logprob: -3.4093098640441895
    3. '[' → logprob: -7.7843098640441895
    4. ')[' → logprob: -9.034310340881348
    5. 'row' → logprob: -10.284310340881348
    6. '[line' → logprob: -10.534310340881348
    7. '][' → logprob: -11.534310340881348
    8. 'last' → logprob: -11.659310340881348
    9. '[
' → logprob: -11.659310340881348
    10. ' [' → logprob: -11.909310340881348

Token 2204: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.14416219294071198
    2. '][' → logprob: -2.019162178039551
    3. '[' → logprob: -8.01916217803955
    4. ')[' → logprob: -8.14416217803955
    5. '           ' → logprob: -8.89416217803955
    6. '   ' → logprob: -9.14416217803955
    7. ']' → logprob: -9.51916217803955
    8. '
' → logprob: -9.64416217803955
    9. '```' → logprob: -9.64416217803955
    10. '(last' → logprob: -9.76916217803955

Token 2205: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -3.79811754100956e-05
    2. ' last' → logprob: -10.375038146972656
    3. ':last' → logprob: -12.875038146972656
    4. '[last' → logprob: -13.000038146972656
    5. '(last' → logprob: -13.625038146972656
    6. '0' → logprob: -15.375038146972656
    7. '
' → logprob: -15.750038146972656
    8. ',last' → logprob: -16.500038146972656
    9. '               ' → logprob: -17.000038146972656
    10. '	last' → logprob: -17.125038146972656

Token 2206: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9623810658231378e-05
    2. ' :' → logprob: -11.125020027160645
    3. 'pos' → logprob: -13.250020027160645
    4. ':
' → logprob: -14.125020027160645
    5. '   ' → logprob: -14.250020027160645
    6. '           ' → logprob: -15.125020027160645
    7. ' ' → logprob: -15.125020027160645
    8. '[pos' → logprob: -15.625020027160645
    9. '
' → logprob: -15.750020027160645
    10. '       ' → logprob: -16.000019073486328

Token 2207: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.320199877838604e-07
    2. ' pos' → logprob: -15.0
    3. '	pos' → logprob: -18.25
    4. '   ' → logprob: -18.625
    5. '_pos' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. 'p' → logprob: -18.875
    8. ',pos' → logprob: -19.375
    9. 'position' → logprob: -19.5
    10. '
' → logprob: -19.75

Token 2208: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04093717038631439
    2. '])
' → logprob: -3.4159371852874756
    3. '+' → logprob: -5.2909369468688965
    4. ']' → logprob: -6.7909369468688965
    5. 'last' → logprob: -7.7909369468688965
    6. '(last' → logprob: -9.165937423706055
    7. '           ' → logprob: -9.165937423706055
    8. ']+' → logprob: -9.415937423706055
    9. '   ' → logprob: -10.165937423706055
    10. ']);' → logprob: -10.165937423706055

Token 2209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040850888937711716
    2. '               ' → logprob: -3.790850877761841
    3. ')' → logprob: -4.29085111618042
    4. '```' → logprob: -6.54085111618042
    5. '       ' → logprob: -7.04085111618042
    6. ')
' → logprob: -7.29085111618042
    7. '<|end|>' → logprob: -8.790850639343262
    8. '                   ' → logprob: -9.290850639343262
    9. '):
' → logprob: -9.915850639343262
    10. '[]' → logprob: -10.040850639343262

Token 2210: ' sub' (ID: 1543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030907683074474335
    2. '       ' → logprob: -4.53090763092041
    3. 'last' → logprob: -4.78090763092041
    4. '               ' → logprob: -5.40590763092041
    5. ' last' → logprob: -5.65590763092041
    6. '
' → logprob: -6.40590763092041
    7. ')' → logprob: -7.90590763092041
    8. '   ' → logprob: -9.03090763092041
    9. '            
' → logprob: -9.15590763092041
    10. ',' → logprob: -9.15590763092041

Token 2211: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.0126840758603066e-05
    2. '_' → logprob: -11.000040054321289
    3. '_cells' → logprob: -12.000040054321289
    4. '_LINES' → logprob: -12.750040054321289
    5. '```' → logprob: -12.875040054321289
    6. '   ' → logprob: -12.875040054321289
    7. 'Lines' → logprob: -13.125040054321289
    8. '_
' → logprob: -13.375040054321289
    9. 's' → logprob: -13.750040054321289
    10. ')' → logprob: -14.000040054321289

Token 2212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16219893097877502
    2. ' =' → logprob: -1.9121989011764526
    3. '.append' → logprob: -7.037199020385742
    4. '=
' → logprob: -7.537199020385742
    5. ')' → logprob: -8.662199020385742
    6. '=[]' → logprob: -9.662199020385742
    7. '   ' → logprob: -9.912199020385742
    8. ' =
' → logprob: -10.162199020385742
    9. '=[]
' → logprob: -10.412199020385742
    10. '=[' → logprob: -10.412199020385742

Token 2213: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.00011987409379798919
    2. ' trim' → logprob: -9.250120162963867
    3. '[' → logprob: -10.750120162963867
    4. '   ' → logprob: -13.750120162963867
    5. '(trim' → logprob: -14.625120162963867
    6. 'strip' → logprob: -15.500120162963867
    7. '.trim' → logprob: -15.875120162963867
    8. ' [' → logprob: -16.500120162963867
    9. 'list' → logprob: -16.625120162963867
    10. '_trim' → logprob: -17.000120162963867

Token 2214: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -2.0219828002154827e-05
    2. '(' → logprob: -11.375020027160645
    3. 'sub' → logprob: -12.375020027160645
    4. '(
' → logprob: -12.625020027160645
    5. '[sub' → logprob: -14.000020027160645
    6. '=sub' → logprob: -15.875020027160645
    7. ' (' → logprob: -16.37502098083496
    8. '([' → logprob: -17.12502098083496
    9. '([
' → logprob: -17.25002098083496
    10. '```' → logprob: -17.62502098083496

Token 2215: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.04510250687599182
    2. 'sub' → logprob: -3.670102596282959
    3. '(sub' → logprob: -4.045102596282959
    4. '[sub' → logprob: -7.295102596282959
    5. '_cells' → logprob: -9.0451021194458
    6. ' sub' → logprob: -9.4201021194458
    7. '_sub' → logprob: -9.5451021194458
    8. 'ub' → logprob: -10.5451021194458
    9. '```' → logprob: -10.7951021194458
    10. 'lines' → logprob: -10.9201021194458

Token 2216: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011109007522463799
    2. ')' → logprob: -4.511108875274658
    3. ')
' → logprob: -11.011109352111816
    4. '       ' → logprob: -11.136109352111816
    5. '   ' → logprob: -11.136109352111816
    6. '           ' → logprob: -11.261109352111816
    7. ')

' → logprob: -14.261109352111816
    8. ',' → logprob: -15.011109352111816
    9. ')`
' → logprob: -15.511109352111816
    10. '):
' → logprob: -15.636109352111816

Token 2217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.159660890465602e-05
    2. '       ' → logprob: -10.75007152557373
    3. 'last' → logprob: -11.62507152557373
    4. '               ' → logprob: -11.75007152557373
    5. '
' → logprob: -11.87507152557373
    6. 'sub' → logprob: -12.12507152557373
    7. '```' → logprob: -12.50007152557373
    8. ',' → logprob: -12.62507152557373
    9. '   ' → logprob: -12.87507152557373
    10. '            
' → logprob: -13.12507152557373

Token 2218: ' c' (ID: 274)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.1576257199048996
    2. '           ' → logprob: -2.157625675201416
    3. 'cell' → logprob: -3.657625675201416
    4. 'part' → logprob: -6.032625675201416
    5. 'res' → logprob: -6.907625675201416
    6. 'child' → logprob: -8.907626152038574
    7. '               ' → logprob: -8.907626152038574
    8. '_sub' → logprob: -9.032626152038574
    9. 'left' → logprob: -9.157626152038574
    10. ' sub' → logprob: -9.157626152038574

Token 2219: ',v' (ID: 30680)
  Prédit: 'ell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.013669169507920742
    2. '_cell' → logprob: -4.763669013977051
    3. ',' → logprob: -5.388669013977051
    4. '_,' → logprob: -8.51366901397705
    5. 'ells' → logprob: -9.63866901397705
    6. '_' → logprob: -9.63866901397705
    7. 'cell' → logprob: -9.76366901397705
    8. 'el' → logprob: -10.13866901397705
    9. ',_' → logprob: -11.38866901397705
    10. '   ' → logprob: -12.13866901397705

Token 2220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3509356379508972
    2. ',' → logprob: -1.975935697555542
    3. 'ells' → logprob: -2.350935697555542
    4. ' =' → logprob: -2.850935697555542
    5. '   ' → logprob: -6.225935459136963
    6. ',c' → logprob: -7.100935459136963
    7. 'ell' → logprob: -7.475935459136963
    8. '=c' → logprob: -7.975935459136963
    9. '=
' → logprob: -9.475935935974121
    10. '  ' → logprob: -9.475935935974121

Token 2221: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -2.15310683415737e-05
    2. ' parse' → logprob: -10.750021934509277
    3. '(parse' → logprob: -18.50002098083496
    4. '           ' → logprob: -18.75002098083496
    5. '	parse' → logprob: -20.25002098083496
    6. '_parse' → logprob: -21.37502098083496
    7. '   ' → logprob: -21.62502098083496
    8. '=parse' → logprob: -21.87502098083496
    9. '.parse' → logprob: -22.75002098083496
    10. '```' → logprob: -24.12502098083496

Token 2222: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.004799515008926392
    2. '(sub' → logprob: -5.8797993659973145
    3. 'cell' → logprob: -6.6297993659973145
    4. '_cells' → logprob: -7.5047993659973145
    5. 'sub' → logprob: -9.504799842834473
    6. '_lines' → logprob: -10.879799842834473
    7. '(_' → logprob: -11.504799842834473
    8. '_sub' → logprob: -11.879799842834473
    9. '```' → logprob: -12.629799842834473
    10. '(cell' → logprob: -13.379799842834473

Token 2223: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -2.5776860184123507e-06
    2. '(
' → logprob: -13.62500286102295
    3. '(' → logprob: -14.12500286102295
    4. ' (' → logprob: -14.87500286102295
    5. 'sub' → logprob: -15.87500286102295
    6. '```' → logprob: -17.250001907348633
    7. '=sub' → logprob: -17.750001907348633
    8. '[sub' → logprob: -18.375001907348633
    9. '(substr' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.375001907348633

Token 2224: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.006082137580960989
    2. '(sub' → logprob: -6.006082057952881
    3. '[sub' → logprob: -6.881082057952881
    4. 'sub' → logprob: -7.381082057952881
    5. 'Lines' → logprob: -7.756082057952881
    6. '   ' → logprob: -8.506082534790039
    7. '[last' → logprob: -8.756082534790039
    8. '(last' → logprob: -9.131082534790039
    9. '```' → logprob: -9.131082534790039
    10. '       ' → logprob: -9.256082534790039

Token 2225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011135423555970192
    2. ',last' → logprob: -4.636135578155518
    3. ',line' → logprob: -7.386135578155518
    4. '           ' → logprob: -7.511135578155518
    5. '               ' → logprob: -10.13613510131836
    6. ',c' → logprob: -10.26113510131836
    7. ',current' → logprob: -10.76113510131836
    8. ',(' → logprob: -11.13613510131836
    9. ',next' → logprob: -11.38613510131836
    10. ' ,' → logprob: -11.38613510131836

Token 2226: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.008249779231846333
    2. '0' → logprob: -4.883249759674072
    3. 'len' → logprob: -7.758249759674072
    4. ' base' → logprob: -9.00825023651123
    5. 'last' → logprob: -10.25825023651123
    6. 'h' → logprob: -10.63325023651123
    7. 'c' → logprob: -11.88325023651123
    8. '(base' → logprob: -12.38325023651123
    9. 'v' → logprob: -12.75825023651123
    10. 'row' → logprob: -12.75825023651123

Token 2227: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00026968008023686707
    2. 'Line' → logprob: -8.250269889831543
    3. 'line' → logprob: -12.250269889831543
    4. '           ' → logprob: -13.625269889831543
    5. '_LINE' → logprob: -14.250269889831543
    6. '```' → logprob: -14.500269889831543
    7. '_Line' → logprob: -15.375269889831543
    8. '1' → logprob: -15.625269889831543
    9. '   ' → logprob: -16.250268936157227
    10. '_row' → logprob: -16.250268936157227

Token 2228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932789087295532
    2. ')
' → logprob: -0.6932789087295532
    3. '           ' → logprob: -9.443279266357422
    4. ')
' → logprob: -10.193279266357422
    5. '       ' → logprob: -11.693279266357422
    6. '   ' → logprob: -12.693279266357422
    7. ')`
' → logprob: -13.193279266357422
    8. '               ' → logprob: -14.693279266357422
    9. '          ' → logprob: -15.568279266357422
    10. ')

' → logprob: -15.693279266357422

Token 2229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046606172691099346
    2. 'last' → logprob: -9.000466346740723
    3. ',' → logprob: -9.250466346740723
    4. '               ' → logprob: -9.500466346740723
    5. '```' → logprob: -9.625466346740723
    6. ' last' → logprob: -10.750466346740723
    7. '       ' → logprob: -10.875466346740723
    8. ',last' → logprob: -11.000466346740723
    9. '(last' → logprob: -11.250466346740723
    10. '<|end|>' → logprob: -11.875466346740723

Token 2230: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03512496128678322
    2. 'if' (adapté à ' if') → logprob: -3.4101250171661377
    3. '       ' → logprob: -7.660124778747559
    4. ' if' → logprob: -7.785124778747559
    5. 'cells' → logprob: -8.285124778747559
    6. 'last' → logprob: -8.535124778747559
    7. '
' → logprob: -10.285124778747559
    8. '               ' → logprob: -10.535124778747559
    9. '```' → logprob: -10.660124778747559
    10. 'tokens' → logprob: -11.160124778747559

Token 2231: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01761048287153244
    2. ' c' → logprob: -4.142610549926758
    3. 'v' → logprob: -6.517610549926758
    4. ' v' → logprob: -10.267610549926758
    5. 'None' → logprob: -10.642610549926758
    6. '   ' → logprob: -11.142610549926758
    7. ' not' → logprob: -11.892610549926758
    8. ' ' → logprob: -12.267610549926758
    9. 'not' → logprob: -12.642610549926758
    10. ' None' → logprob: -12.892610549926758

Token 2232: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08904710412025452
    2. ':' → logprob: -3.3390471935272217
    3. ',' → logprob: -4.089046955108643
    4. ')' → logprob: -4.339046955108643
    5. '=' → logprob: -4.839046955108643
    6. '<|end|>' → logprob: -5.714046955108643
    7. 'is' → logprob: -6.089046955108643
    8. '=None' → logprob: -6.714046955108643
    9. '==' → logprob: -7.089046955108643
    10. ',
' → logprob: -7.214046955108643

Token 2233: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3361857831478119
    2. 'not' → logprob: -1.5861858129501343
    3. ' not' → logprob: -2.5861856937408447
    4. ' None' → logprob: -5.211185932159424
    5. 'Not' → logprob: -10.711185455322266
    6. '=None' → logprob: -11.336185455322266
    7. '_None' → logprob: -12.836185455322266
    8. '(None' → logprob: -13.586185455322266
    9. 'none' → logprob: -13.836185455322266
    10. '_not' → logprob: -14.211185455322266

Token 2234: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.684674859046936
    2. ',' → logprob: -1.184674859046936
    3. ':' → logprob: -1.809674859046936
    4. ':
' → logprob: -4.0596747398376465
    5. '           ' → logprob: -5.9346747398376465
    6. '<|end|>' → logprob: -6.3096747398376465
    7. ')' → logprob: -6.9346747398376465
    8. '):
' → logprob: -7.0596747398376465
    9. ' or' → logprob: -7.4346747398376465
    10. ',
' → logprob: -7.5596747398376465

Token 2235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009639846975915134
    2. 'continue' → logprob: -8.250964164733887
    3. '           ' → logprob: -8.500964164733887
    4. ' continue' → logprob: -8.875964164733887
    5. '```' → logprob: -9.000964164733887
    6. ',' → logprob: -9.375964164733887
    7. '<|end|>' → logprob: -9.625964164733887
    8. 'return' → logprob: -10.625964164733887
    9. '                   ' → logprob: -11.000964164733887
    10. '	           ' → logprob: -11.750964164733887

Token 2236: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5181804299354553
    2. 'return' → logprob: -1.5181803703308105
    3. 'continue' (adapté à ' continue') → logprob: -1.7681803703308105
    4. '           ' → logprob: -4.7681803703308105
    5. 'break' → logprob: -5.6431803703308105
    6. '                   ' → logprob: -7.0181803703308105
    7. ' return' → logprob: -7.2681803703308105
    8. ' continue' → logprob: -7.7681803703308105
    9. '   ' → logprob: -7.8931803703308105
    10. '```' → logprob: -9.393180847167969

Token 2237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002708819229155779
    2. '
' → logprob: -6.002708911895752
    3. '            
' → logprob: -9.377708435058594
    4. '<|end|>' → logprob: -9.877708435058594
    5. 'last' → logprob: -10.002708435058594
    6. ',' → logprob: -11.377708435058594
    7. '               ' → logprob: -11.377708435058594
    8. ',
' → logprob: -11.877708435058594
    9. ' last' → logprob: -12.002708435058594
    10. '       ' → logprob: -12.627708435058594

Token 2238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001987163443118334
    2. '
' → logprob: -6.251986980438232
    3. 'last' → logprob: -10.25198745727539
    4. '            
' → logprob: -11.75198745727539
    5. '               ' → logprob: -11.87698745727539
    6. '       ' → logprob: -12.37698745727539
    7. '   ' → logprob: -14.00198745727539
    8. '
' → logprob: -14.12698745727539
    9. ' last' → logprob: -14.62698745727539
    10. '<|end|>' → logprob: -14.62698745727539

Token 2239: ' cells' (ID: 11242)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6554553508758545
    2. 'last' → logprob: -0.9054553508758545
    3. 'vals' → logprob: -3.1554553508758545
    4. 'cells' (adapté à ' cells') → logprob: -4.155455589294434
    5. ' last' → logprob: -4.530455589294434
    6. '       ' → logprob: -5.405455589294434
    7. 'val' → logprob: -7.155455589294434
    8. '   ' → logprob: -7.405455589294434
    9. ' vals' → logprob: -7.655455589294434
    10. '
' → logprob: -8.405455589294434

Token 2240: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.021043365821242332
    2. ',' → logprob: -3.896043300628662
    3. '.' → logprob: -8.14604377746582
    4. ',
' → logprob: -8.89604377746582
    5. '           ' → logprob: -9.77104377746582
    6. 'append' → logprob: -13.14604377746582
    7. '       ' → logprob: -13.64604377746582
    8. ' ,' → logprob: -13.77104377746582
    9. '   ' → logprob: -13.77104377746582
    10. ',c' → logprob: -13.77104377746582

Token 2241: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.07183496654033661
    2. 'c' → logprob: -2.6968350410461426
    3. ',c' → logprob: -6.696835041046143
    4. ',' → logprob: -7.696835041046143
    5. ' c' → logprob: -9.071834564208984
    6. ')c' → logprob: -10.196834564208984
    7. ' (' → logprob: -11.196834564208984
    8. '(' → logprob: -11.446834564208984
    9. '((' → logprob: -11.446834564208984
    10. '	c' → logprob: -12.696834564208984

Token 2242: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06061609089374542
    2. 'v' → logprob: -3.1856160163879395
    3. 'last' → logprob: -4.1856160163879395
    4. 'ch' → logprob: -6.8106160163879395
    5. 'pos' → logprob: -7.6856160163879395
    6. 'len' → logprob: -8.185616493225098
    7. '(c' → logprob: -9.435616493225098
    8. ' c' → logprob: -9.435616493225098
    9. 'None' → logprob: -9.435616493225098
    10. ' last' → logprob: -10.560616493225098

Token 2243: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19674555957317352
    2. ',v' → logprob: -1.94674551486969
    3. ')' → logprob: -4.6967453956604
    4. ',ch' → logprob: -4.6967453956604
    5. ',)' → logprob: -5.1967453956604
    6. ',
' → logprob: -5.6967453956604
    7. ',last' → logprob: -5.9467453956604
    8. ',val' → logprob: -5.9467453956604
    9. ',pos' → logprob: -6.6967453956604
    10. ',c' → logprob: -8.196745872497559

Token 2244: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10344040393829346
    2. ')
' → logprob: -2.853440284729004
    3. ',' → logprob: -3.353440284729004
    4. '           ' → logprob: -5.603440284729004
    5. ',)' → logprob: -6.603440284729004
    6. '),' → logprob: -8.728440284729004
    7. ',)
' → logprob: -8.728440284729004
    8. '       ' → logprob: -9.103440284729004
    9. ',
' → logprob: -9.353440284729004
    10. '               ' → logprob: -10.728440284729004

Token 2245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6947994232177734
    2. 'last' → logprob: -1.5697994232177734
    3. '```' → logprob: -1.6947994232177734
    4. ' last' → logprob: -3.4447994232177734
    5. ',' → logprob: -3.4447994232177734
    6. '       ' → logprob: -4.194799423217773
    7. '<|end|>' → logprob: -5.194799423217773
    8. '               ' → logprob: -5.569799423217773
    9. '``' → logprob: -5.944799423217773
    10. ',last' → logprob: -6.069799423217773

Token 2246: ' vals' (ID: 58985)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00881133135408163
    2. '           ' → logprob: -4.7588114738464355
    3. ' last' → logprob: -8.758810997009277
    4. '       ' → logprob: -10.383810997009277
    5. '   ' → logprob: -12.008810997009277
    6. '
' → logprob: -14.133810997009277
    7. '	last' → logprob: -14.258810997009277
    8. '               ' → logprob: -14.758810997009277
    9. '```' → logprob: -15.883810997009277
    10. ' ' → logprob: -16.133811950683594

Token 2247: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.14823539555072784
    2. ',' → logprob: -2.023235321044922
    3. '<|end|>' → logprob: -6.148235321044922
    4. ',
' → logprob: -7.023235321044922
    5. '.' → logprob: -7.398235321044922
    6. '=' → logprob: -8.273235321044922
    7. ')' → logprob: -8.523235321044922
    8. ' ,' → logprob: -8.648235321044922
    9. ' =' → logprob: -8.773235321044922
    10. ' +=' → logprob: -9.023235321044922

Token 2248: '(v' (ID: 6932)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.584071159362793
    2. 'ch' → logprob: -1.709071159362793
    3. '(last' → logprob: -1.834071159362793
    4. '(ch' → logprob: -2.834071159362793
    5. '(' → logprob: -3.834071159362793
    6. '((' → logprob: -5.334071159362793
    7. ' last' → logprob: -5.334071159362793
    8. '(v' → logprob: -5.459071159362793
    9. ' (' → logprob: -5.709071159362793
    10. 'v' → logprob: -6.584071159362793

Token 2249: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.814811646938324
    2. '           ' → logprob: -1.0648117065429688
    3. ')' → logprob: -2.0648117065429688
    4. '
' → logprob: -2.8148117065429688
    5. 'last' → logprob: -4.814811706542969
    6. ',' → logprob: -5.439811706542969
    7. '_last' → logprob: -6.439811706542969
    8. '<|end|>' → logprob: -6.689811706542969
    9. '),' → logprob: -6.939811706542969
    10. ' last' → logprob: -7.064811706542969

Token 2250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5272694826126099
    2. 'last' → logprob: -1.0272694826126099
    3. ' last' → logprob: -3.9022693634033203
    4. '```' → logprob: -4.77726936340332
    5. '            
' → logprob: -4.90226936340332
    6. '
' → logprob: -5.15226936340332
    7. '        
' → logprob: -6.02726936340332
    8. '    
' → logprob: -6.15226936340332
    9. ' 
' → logprob: -6.65226936340332
    10. '       ' → logprob: -6.77726936340332

Token 2251: ' cells' (ID: 11242)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.014129536226391792
    2. '           ' → logprob: -4.514129638671875
    3. ' last' → logprob: -5.889129638671875
    4. '
' → logprob: -8.889129638671875
    5. '       ' → logprob: -9.514129638671875
    6. '   ' → logprob: -10.389129638671875
    7. '```' → logprob: -10.764129638671875
    8. '            
' → logprob: -11.639129638671875
    9. '	last' → logprob: -11.764129638671875
    10. '               ' → logprob: -11.889129638671875

Token 2252: '.append' (ID: 3709)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32651829719543457
    2. '.append' → logprob: -1.4515182971954346
    3. '[-' → logprob: -4.0765180587768555
    4. '.' → logprob: -4.7015180587768555
    5. '=' → logprob: -5.3265180587768555
    6. '.pop' → logprob: -5.4515180587768555
    7. ',
' → logprob: -5.8265180587768555
    8. '[' → logprob: -6.3265180587768555
    9. '<|end|>' → logprob: -6.3265180587768555
    10. 'append' → logprob: -7.3265180587768555

Token 2253: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.2006732076406479
    2. '((' → logprob: -2.7006731033325195
    3. '(' → logprob: -3.3256731033325195
    4. '(None' → logprob: -3.5756731033325195
    5. 'ch' → logprob: -3.8256731033325195
    6. '(('' → logprob: -4.9506731033325195
    7. '(op' → logprob: -5.4506731033325195
    8. '=' → logprob: -5.7006731033325195
    9. '(pos' → logprob: -6.3256731033325195
    10. '
' → logprob: -6.5756731033325195

Token 2254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0062842522747814655
    2. '<|end|>' → logprob: -5.506284236907959
    3. ')
' → logprob: -6.256284236907959
    4. ' )' → logprob: -9.006284713745117
    5. ',' → logprob: -9.881284713745117
    6. '<|end|>' → logprob: -10.006284713745117
    7. '),' → logprob: -11.256284713745117
    8. ')c' → logprob: -11.756284713745117
    9. ')#' → logprob: -11.881284713745117
    10. ',)' → logprob: -11.881284713745117

Token 2255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005404150113463402
    2. 'last' → logprob: -6.255403995513916
    3. '<|end|>' → logprob: -6.630403995513916
    4. '       ' → logprob: -7.630403995513916
    5. ' last' → logprob: -7.755403995513916
    6. '(last' → logprob: -8.630404472351074
    7. '            
' → logprob: -8.630404472351074
    8. '[last' → logprob: -8.880404472351074
    9. '<|end|>' → logprob: -9.255404472351074
    10. '
' → logprob: -9.630404472351074

Token 2256: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.25276482105255127
    2. 'last' (adapté à ' last') → logprob: -1.5027648210525513
    3. '           ' → logprob: -7.627764701843262
    4. ' 
' → logprob: -8.252764701843262
    5. '            
' → logprob: -10.752764701843262
    6. '        
' → logprob: -11.627764701843262
    7. '     
' → logprob: -11.627764701843262
    8. '
' → logprob: -12.002764701843262
    9. '       ' → logprob: -12.127764701843262
    10. '(last' → logprob: -12.127764701843262

Token 2257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0232466422021389
    2. ' =' → logprob: -3.7732465267181396
    3. '=
' → logprob: -13.898246765136719
    4. ' =
' → logprob: -15.898246765136719
    5. ' ' → logprob: -16.14824676513672
    6. ',' → logprob: -17.77324676513672
    7. '_' → logprob: -17.89824676513672
    8. '=

' → logprob: -18.02324676513672
    9. '＝' → logprob: -18.64824676513672
    10. ')' → logprob: -19.02324676513672

Token 2258: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -7.493430894101039e-05
    2. ' pos' → logprob: -9.500075340270996
    3. '(pos' → logprob: -17.12507438659668
    4. '[pos' → logprob: -18.75007438659668
    5. '	pos' → logprob: -19.00007438659668
    6. '```' → logprob: -19.12507438659668
    7. 'position' → logprob: -19.87507438659668
    8. 'post' → logprob: -20.12507438659668
    9. '_pos' → logprob: -20.50007438659668
    10. '`' → logprob: -21.62507438659668

Token 2259: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04514762759208679
    2. ' +' → logprob: -3.545147657394409
    3. '<|end|>' → logprob: -4.29514741897583
    4. '<|end|>' → logprob: -6.67014741897583
    5. '```' → logprob: -8.295147895812988
    6. '+
' → logprob: -10.045147895812988
    7. ',' → logprob: -10.670147895812988
    8. ' ' → logprob: -11.545147895812988
    9. '=' → logprob: -11.795147895812988
    10. ' 
' → logprob: -11.920147895812988

Token 2260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. '0' → logprob: -11.750020980834961
    3. ' ' → logprob: -12.000020980834961
    4. '```' → logprob: -12.000020980834961
    5. '   ' → logprob: -15.625020980834961
    6. '2' → logprob: -15.875020980834961
    7. '``' → logprob: -16.50002098083496
    8. '           ' → logprob: -16.87502098083496
    9. '
' → logprob: -17.25002098083496
    10. '`' → logprob: -17.62502098083496

Token 2261: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2262: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.22305093705654144
    2. '<|end|>' → logprob: -2.098050832748413
    3. ')' → logprob: -3.223050832748413
    4. ',' → logprob: -4.598051071166992
    5. 'for' → logprob: -5.098051071166992
    6. '       ' → logprob: -5.473051071166992
    7. '[' → logprob: -5.723051071166992
    8. '#' → logprob: -6.348051071166992
    9. '...' → logprob: -6.473051071166992
    10. '   ' → logprob: -6.473051071166992

Token 2263: ' #' (ID: 1069)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0008477445808239281
    2. '       ' → logprob: -7.625847816467285
    3. '           ' → logprob: -8.875847816467285
    4. '_sub' → logprob: -9.375847816467285
    5. '#' (adapté à ' #') → logprob: -9.500847816467285
    6. '   ' → logprob: -10.750847816467285
    7. ' sub' → logprob: -11.125847816467285
    8. '
' → logprob: -11.500847816467285
    9. '```' → logprob: -11.750847816467285
    10. '	sub' → logprob: -12.500847816467285

Token 2264: ' last' (ID: 2174)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0007274442468769848
    2. '#' → logprob: -7.500727653503418
    3. '       ' → logprob: -9.250727653503418
    4. '           ' → logprob: -9.750727653503418
    5. 'if' → logprob: -11.375727653503418
    6. '   ' → logprob: -12.625727653503418
    7. 'for' → logprob: -12.875727653503418
    8. ' sub' → logprob: -13.375727653503418
    9. '(sub' → logprob: -15.250727653503418
    10. '```' → logprob: -15.250727653503418

Token 2265: ' segment' (ID: 14806)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5491012930870056
    2. '_sub' → logprob: -0.9241012930870056
    3. 'sub' → logprob: -5.04910135269165
    4. '_pos' → logprob: -5.17410135269165
    5. '_cells' → logprob: -5.79910135269165
    6. '=' → logprob: -6.17410135269165
    7. '_' → logprob: -6.29910135269165
    8. ':' → logprob: -6.67410135269165
    9. '_tokens' → logprob: -7.04910135269165
    10. '```' → logprob: -7.17410135269165

Token 2266: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6951459646224976
    2. 'sub' → logprob: -1.6951459646224976
    3. '_lines' → logprob: -2.195146083831787
    4. ' =' → logprob: -2.570146083831787
    5. '       ' → logprob: -3.195146083831787
    6. '   ' → logprob: -4.070146083831787
    7. '```' → logprob: -4.070146083831787
    8. 'for' → logprob: -4.195146083831787
    9. '_sub' → logprob: -4.445146083831787
    10. '           ' → logprob: -4.820146083831787

Token 2267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03762229159474373
    2. '   ' → logprob: -4.287622451782227
    3. '_lines' → logprob: -4.412622451782227
    4. '```' → logprob: -5.162622451782227
    5. '=' → logprob: -5.537622451782227
    6. ' =' → logprob: -7.662622451782227
    7. '_sub' → logprob: -8.537622451782227
    8. 'lines' → logprob: -8.662622451782227
    9. 'sub' → logprob: -9.162622451782227
    10. ':' → logprob: -9.787622451782227

Token 2268: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.2728046774864197
    2. '       ' → logprob: -1.5228047370910645
    3. 'for' → logprob: -4.2728047370910645
    4. '   ' → logprob: -5.6478047370910645
    5. ' sub' → logprob: -6.3978047370910645
    6. '```' → logprob: -7.2728047370910645
    7. '           ' → logprob: -8.397804260253906
    8. ' for' → logprob: -8.772804260253906
    9. '{
' → logprob: -9.022804260253906
    10. '``' → logprob: -9.647804260253906

Token 2269: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.4378848391061183e-05
    2. '```' → logprob: -11.875014305114746
    3. '_line' → logprob: -13.125014305114746
    4. '   ' → logprob: -13.125014305114746
    5. '_' → logprob: -14.000014305114746
    6. '
' → logprob: -14.500014305114746
    7. '``' → logprob: -14.875014305114746
    8. 'Lines' → logprob: -15.375014305114746
    9. '_LINES' → logprob: -15.750014305114746
    10. 'def' → logprob: -15.875014305114746

Token 2270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07910370826721191
    2. ' =' → logprob: -2.579103708267212
    3. '=[]' → logprob: -9.704103469848633
    4. '   ' → logprob: -9.954103469848633
    5. '```' → logprob: -10.204103469848633
    6. '=[]
' → logprob: -10.454103469848633
    7. '       ' → logprob: -10.454103469848633
    8. '=
' → logprob: -12.329103469848633
    9. '=[' → logprob: -13.454103469848633
    10. '``' → logprob: -14.079103469848633

Token 2271: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.26948025822639465
    2. '[' → logprob: -1.6444802284240723
    3. '[]' → logprob: -3.6444802284240723
    4. '[
' → logprob: -4.769480228424072
    5. '[line' → logprob: -5.019480228424072
    6. 'lines' → logprob: -7.644480228424072
    7. ' []
' → logprob: -7.894480228424072
    8. '   ' → logprob: -8.64448070526123
    9. '       ' → logprob: -8.76948070526123
    10. ' [' → logprob: -9.14448070526123

Token 2272: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2522520422935486
    2. '       ' → logprob: -1.5022521018981934
    3. ' for' → logprob: -8.877251625061035
    4. '```' → logprob: -9.627251625061035
    5. '   ' → logprob: -9.752251625061035
    6. '           ' → logprob: -10.002251625061035
    7. '	for' → logprob: -12.127251625061035
    8. '[' → logprob: -12.627251625061035
    9. '     ' → logprob: -13.752251625061035
    10. '	' → logprob: -14.002251625061035

Token 2273: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.372294698550832e-06
    2. ' for' → logprob: -12.250009536743164
    3. '```' → logprob: -12.875009536743164
    4. '       ' → logprob: -13.500009536743164
    5. '           ' → logprob: -14.750009536743164
    6. '[' → logprob: -17.375009536743164
    7. '	for' → logprob: -17.500009536743164
    8. '
' → logprob: -17.750009536743164
    9. '``' → logprob: -18.250009536743164
    10. '   ' → logprob: -18.250009536743164

Token 2274: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -5.300083648762666e-05
    2. ' row' → logprob: -9.875053405761719
    3. '(row' → logprob: -14.625053405761719
    4. 'range' → logprob: -14.750053405761719
    5. '	row' → logprob: -15.750053405761719
    6. '[row' → logprob: -16.00005340576172
    7. '   ' → logprob: -16.37505340576172
    8. '```' → logprob: -16.50005340576172
    9. '$row' → logprob: -16.62505340576172
    10. ' ' → logprob: -17.37505340576172

Token 2275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38707026839256287
    2. 'in' → logprob: -1.1370702981948853
    3. '       ' → logprob: -9.262070655822754
    4. '   ' → logprob: -10.262070655822754
    5. '           ' → logprob: -10.762070655822754
    6. ' ' → logprob: -11.262070655822754
    7. 'for' → logprob: -11.762070655822754
    8. '[' → logprob: -11.887070655822754
    9. '```' → logprob: -12.637070655822754
    10. '
' → logprob: -13.137070655822754

Token 2276: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861729308962822
    2. ' range' → logprob: -4.758617401123047
    3. 'in' → logprob: -14.008617401123047
    4. '
' → logprob: -14.383617401123047
    5. ' in' → logprob: -14.508617401123047
    6. '(range' → logprob: -14.758617401123047
    7. '0' → logprob: -15.383617401123047
    8. 'row' → logprob: -16.383617401123047
    9. ' ' → logprob: -16.633617401123047
    10. '[' → logprob: -17.508617401123047

Token 2277: '(h' (ID: 8120)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5320209860801697
    2. 'last' → logprob: -1.5320210456848145
    3. 'h' → logprob: -1.6570210456848145
    4. '0' → logprob: -6.5320210456848145
    5. '(last' → logprob: -6.6570210456848145
    6. ' range' → logprob: -6.7820210456848145
    7. '(h' → logprob: -7.2820210456848145
    8. 'lines' → logprob: -7.5320210456848145
    9. '(range' → logprob: -8.657020568847656
    10. ' last' → logprob: -9.532020568847656

Token 2278: '):
' (ID: 1883)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.956881582736969
    2. '       ' → logprob: -1.0818815231323242
    3. '):
' → logprob: -2.206881523132324
    4. '[last' → logprob: -2.706881523132324
    5. '   ' → logprob: -3.706881523132324
    6. '               ' → logprob: -4.581881523132324
    7. 'in' → logprob: -4.706881523132324
    8. ':last' → logprob: -4.706881523132324
    9. 'last' → logprob: -5.081881523132324
    10. ' in' → logprob: -5.081881523132324

Token 2279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019921794533729553
    2. '```' → logprob: -4.394921779632568
    3. 'sub' → logprob: -5.019921779632568
    4. '               ' → logprob: -8.144922256469727
    5. ' sub' → logprob: -8.769922256469727
    6. '[sub' → logprob: -9.519922256469727
    7. '   ' → logprob: -9.644922256469727
    8. '(sub' → logprob: -10.269922256469727
    9. '`' → logprob: -10.644922256469727
    10. '{sub' → logprob: -10.644922256469727

Token 2280: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.27815866470336914
    2. '           ' → logprob: -1.5281586647033691
    3. '               ' → logprob: -4.528158664703369
    4. ' sub' → logprob: -4.653158664703369
    5. '       ' → logprob: -5.403158664703369
    6. '   ' → logprob: -7.903158664703369
    7. '	sub' → logprob: -8.028158187866211
    8. '(sub' → logprob: -9.028158187866211
    9. '.sub' → logprob: -9.903158187866211
    10. '[sub' → logprob: -9.903158187866211

Token 2281: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.176947600673884e-05
    2. '```' → logprob: -11.375021934509277
    3. '[' → logprob: -13.125021934509277
    4. 'Lines' → logprob: -13.250021934509277
    5. '   ' → logprob: -13.500021934509277
    6. '
' → logprob: -13.875021934509277
    7. '       ' → logprob: -14.750021934509277
    8. '_' → logprob: -14.750021934509277
    9. '[
' → logprob: -14.750021934509277
    10. '_rows' → logprob: -14.875021934509277

Token 2282: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014003770425915718
    2. '           ' → logprob: -4.639003753662109
    3. '=' → logprob: -5.889003753662109
    4. '=row' → logprob: -7.639003753662109
    5. '[row' → logprob: -7.639003753662109
    6. 'append' → logprob: -8.88900375366211
    7. ' =' → logprob: -9.51400375366211
    8. '```' → logprob: -9.63900375366211
    9. '+=' → logprob: -10.01400375366211
    10. '       ' → logprob: -10.63900375366211

Token 2283: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.02086755819618702
    2. '(lines' → logprob: -4.520867347717285
    3. ' lines' → logprob: -4.645867347717285
    4. 'rows' → logprob: -9.270867347717285
    5. '[row' → logprob: -10.395867347717285
    6. '[' → logprob: -10.770867347717285
    7. '[line' → logprob: -12.145867347717285
    8. 'row' → logprob: -12.395867347717285
    9. '(rows' → logprob: -12.770867347717285
    10. '.lines' → logprob: -12.895867347717285

Token 2284: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0015877006808295846
    2. '[last' → logprob: -6.626587867736816
    3. '           ' → logprob: -8.751587867736816
    4. '[' → logprob: -10.126587867736816
    5. '       ' → logprob: -10.751587867736816
    6. ')[' → logprob: -11.001587867736816
    7. '   ' → logprob: -11.376587867736816
    8. '][' → logprob: -12.751587867736816
    9. '[line' → logprob: -12.751587867736816
    10. '[
' → logprob: -13.501587867736816

Token 2285: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.03579999506473541
    2. '][' → logprob: -3.785799980163574
    3. ')[' → logprob: -4.660799980163574
    4. '[' → logprob: -6.660799980163574
    5. '[row' → logprob: -7.410799980163574
    6. '           ' → logprob: -7.785799980163574
    7. '   ' → logprob: -8.285799980163574
    8. '       ' → logprob: -8.910799980163574
    9. '[left' → logprob: -9.535799980163574
    10. '[start' → logprob: -10.035799980163574

Token 2286: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -6.384836888173595e-05
    2. '[last' → logprob: -10.1250638961792
    3. ' last' → logprob: -10.8750638961792
    4. '(last' → logprob: -12.5000638961792
    5. ':last' → logprob: -15.1250638961792
    6. '	last' → logprob: -15.5000638961792
    7. '
' → logprob: -15.8750638961792
    8. '   ' → logprob: -16.125062942504883
    9. 'Last' → logprob: -16.875062942504883
    10. ',last' → logprob: -16.875062942504883

Token 2287: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037486525252461433
    2. ':last' → logprob: -5.753748416900635
    3. '][' → logprob: -8.253748893737793
    4. ':])
' → logprob: -9.003748893737793
    5. ':]' → logprob: -9.253748893737793
    6. ' :' → logprob: -10.378748893737793
    7. '])' → logprob: -11.003748893737793
    8. ']' → logprob: -11.503748893737793
    9. '   ' → logprob: -12.128748893737793
    10. ':semicolon' → logprob: -12.628748893737793

Token 2288: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09727075695991516
    2. '       ' → logprob: -3.4722707271575928
    3. ' =' → logprob: -3.9722707271575928
    4. '           ' → logprob: -4.097270965576172
    5. '```' → logprob: -4.472270965576172
    6. '=' → logprob: -5.097270965576172
    7. '
' → logprob: -5.472270965576172
    8. 'c' → logprob: -6.097270965576172
    9. 'trim' → logprob: -7.597270965576172
    10. 'sub' → logprob: -8.097270965576172

Token 2289: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.0959087386727333
    2. '   ' → logprob: -2.7209086418151855
    3. ' sub' → logprob: -4.3459086418151855
    4. '       ' → logprob: -5.3459086418151855
    5. '_sub' → logprob: -5.5959086418151855
    6. '           ' → logprob: -6.4709086418151855
    7. '```' → logprob: -6.8459086418151855
    8. '    ' → logprob: -8.095909118652344
    9. 'trim' → logprob: -8.220909118652344
    10. '_trim' → logprob: -8.345909118652344

Token 2290: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.60414821645827e-06
    2. '_cells' → logprob: -13.000004768371582
    3. '```' → logprob: -13.500004768371582
    4. 'Lines' → logprob: -15.250004768371582
    5. '_' → logprob: -15.875004768371582
    6. '   ' → logprob: -16.125003814697266
    7. '
' → logprob: -16.500003814697266
    8. '``' → logprob: -16.625003814697266
    9. '_LINES' → logprob: -16.750003814697266
    10. '_lengths' → logprob: -17.000003814697266

Token 2291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142823457717896
    2. ' =' → logprob: -1.7014281749725342
    3. '   ' → logprob: -11.201428413391113
    4. '    ' → logprob: -15.451428413391113
    5. '_trim' → logprob: -15.576428413391113
    6. '=
' → logprob: -16.076427459716797
    7. '  ' → logprob: -16.201427459716797
    8. ' ' → logprob: -16.326427459716797
    9. '=[]' → logprob: -16.451427459716797
    10. '=cut' → logprob: -16.701427459716797

Token 2292: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.006717863027006388
    2. ' trim' → logprob: -5.006717681884766
    3. '   ' → logprob: -13.381717681884766
    4. '(trim' → logprob: -14.256717681884766
    5. '.trim' → logprob: -16.381717681884766
    6. '_trim' → logprob: -16.756717681884766
    7. 'strip' → logprob: -17.256717681884766
    8. 'Trim' → logprob: -17.881717681884766
    9. ' ' → logprob: -18.256717681884766
    10. '           ' → logprob: -18.381717681884766

Token 2293: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.0004715450922958553
    2. 'sub' → logprob: -7.750471591949463
    3. '[sub' → logprob: -10.250471115112305
    4. '```' → logprob: -12.875471115112305
    5. '{sub' → logprob: -13.250471115112305
    6. '=sub' → logprob: -14.500471115112305
    7. '
' → logprob: -15.500471115112305
    8. '(
' → logprob: -15.750471115112305
    9. '(new' → logprob: -16.125471115112305
    10. '       ' → logprob: -16.625471115112305

Token 2294: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.008077612146735191
    2. 'sub' → logprob: -5.133077621459961
    3. '(sub' → logprob: -6.258077621459961
    4. '[sub' → logprob: -8.758077621459961
    5. '_sub' → logprob: -10.008077621459961
    6. ' sub' → logprob: -11.383077621459961
    7. '_cells' → logprob: -11.633077621459961
    8. '```' → logprob: -12.633077621459961
    9. '{sub' → logprob: -13.633077621459961
    10. '_layers' → logprob: -14.133077621459961

Token 2295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7054791450500488
    2. ')
' → logprob: -0.7054791450500488
    3. ',' → logprob: -5.080479145050049
    4. '       ' → logprob: -6.080479145050049
    5. '),' → logprob: -6.330479145050049
    6. ')c' → logprob: -7.330479145050049
    7. '   ' → logprob: -7.705479145050049
    8. '<|end|>' → logprob: -8.58047866821289
    9. '[' → logprob: -8.70547866821289
    10. ',c' → logprob: -8.83047866821289

Token 2296: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003500407561659813
    2. '   ' → logprob: -5.878500461578369
    3. '       ' → logprob: -7.878500461578369
    4. ' c' → logprob: -8.628499984741211
    5. '           ' → logprob: -9.503499984741211
    6. '```' → logprob: -9.878499984741211
    7. '
' → logprob: -13.128499984741211
    8. '	c' → logprob: -13.128499984741211
    9. ',c' → logprob: -13.378499984741211
    10. ',' → logprob: -13.753499984741211

Token 2297: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -2.1008713702030946e-06
    2. '(c' → logprob: -13.875001907348633
    3. ' c' → logprob: -14.125001907348633
    4. '```' → logprob: -15.250001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ')c' → logprob: -17.375001907348633
    7. '       ' → logprob: -18.125001907348633
    8. '	c' → logprob: -18.250001907348633
    9. '
' → logprob: -18.625001907348633
    10. '           ' → logprob: -19.000001907348633

Token 2298: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.020959431305527687
    2. ',' → logprob: -3.8959593772888184
    3. ',c' → logprob: -7.895959377288818
    4. ',val' → logprob: -11.020959854125977
    5. ' ,' → logprob: -11.895959854125977
    6. ',value' → logprob: -12.520959854125977
    7. ',n' → logprob: -13.020959854125977
    8. ',s' → logprob: -13.270959854125977
    9. ',
' → logprob: -13.395959854125977
    10. ',p' → logprob: -13.520959854125977

Token 2299: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2169252187013626
    2. '=' → logprob: -1.8419252634048462
    3. ',c' → logprob: -3.4669251441955566
    4. ' =' → logprob: -5.341925144195557
    5. '   ' → logprob: -9.091925621032715
    6. ',v' → logprob: -9.466925621032715
    7. '           ' → logprob: -9.966925621032715
    8. '=c' → logprob: -9.966925621032715
    9. ' ,' → logprob: -10.216925621032715
    10. '=sub' → logprob: -10.466925621032715

Token 2300: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00263118464499712
    2. ' parse' → logprob: -6.002631187438965
    3. '(parse' → logprob: -9.127631187438965
    4. 'c' → logprob: -10.252631187438965
    5. '(c' → logprob: -11.627631187438965
    6. ' c' → logprob: -13.627631187438965
    7. '	parse' → logprob: -15.002631187438965
    8. '_parse' → logprob: -15.502631187438965
    9. '.parse' → logprob: -15.502631187438965
    10. '```' → logprob: -15.502631187438965

Token 2301: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0008779930067248642
    2. 'cell' → logprob: -8.00087833404541
    3. 'sub' → logprob: -8.25087833404541
    4. '_cells' → logprob: -8.62587833404541
    5. '(sub' → logprob: -9.87587833404541
    6. 'c' → logprob: -10.87587833404541
    7. '(c' → logprob: -12.12587833404541
    8. '_sub' → logprob: -12.37587833404541
    9. '[sub' → logprob: -12.62587833404541
    10. 'parse' → logprob: -12.62587833404541

Token 2302: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -5.633853652398102e-05
    2. 'sub' → logprob: -10.500056266784668
    3. '[sub' → logprob: -10.500056266784668
    4. '{sub' → logprob: -14.250056266784668
    5. '```' → logprob: -15.125056266784668
    6. '=sub' → logprob: -16.000057220458984
    7. '	sub' → logprob: -16.750057220458984
    8. '_sub' → logprob: -17.000057220458984
    9. '       ' → logprob: -17.375057220458984
    10. ' sub' → logprob: -17.375057220458984

Token 2303: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.001382497837767005
    2. 'sub' → logprob: -7.251382350921631
    3. '_rows' → logprob: -7.501382350921631
    4. '[sub' → logprob: -10.001382827758789
    5. '_cells' → logprob: -10.751382827758789
    6. '(sub' → logprob: -10.751382827758789
    7. '```' → logprob: -11.376382827758789
    8. '_sub' → logprob: -11.876382827758789
    9. 'Lines' → logprob: -12.376382827758789
    10. 'row' → logprob: -13.251382827758789

Token 2304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034235394559800625
    2. ',row' → logprob: -6.503423690795898
    3. ',[' → logprob: -7.503423690795898
    4. '       ' → logprob: -7.503423690795898
    5. ',c' → logprob: -7.878423690795898
    6. ',
' → logprob: -8.753423690795898
    7. '[' → logprob: -9.378423690795898
    8. ' ,' → logprob: -10.378423690795898
    9. '[row' → logprob: -10.503423690795898
    10. '(rows' → logprob: -10.628423690795898

Token 2305: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.014186662621796131
    2. ' base' → logprob: -4.264186859130859
    3. '0' → logprob: -11.01418685913086
    4. '(base' → logprob: -12.88918685913086
    5. '_base' → logprob: -13.26418685913086
    6. 'c' → logprob: -14.01418685913086
    7. '```' → logprob: -14.88918685913086
    8. '	base' → logprob: -15.26418685913086
    9. 'v' → logprob: -15.76418685913086
    10. 'None' → logprob: -15.88918685913086

Token 2306: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0007785348570905626
    2. '       ' → logprob: -8.750778198242188
    3. 'Line' → logprob: -8.875778198242188
    4. 'line' → logprob: -9.250778198242188
    5. '   ' → logprob: -9.500778198242188
    6. '           ' → logprob: -9.750778198242188
    7. '```' → logprob: -9.750778198242188
    8. '0' → logprob: -9.875778198242188
    9. 'last' → logprob: -10.250778198242188
    10. '[' → logprob: -10.500778198242188

Token 2307: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6350938081741333
    2. ')' → logprob: -1.1350938081741333
    3. ',' → logprob: -2.3850936889648438
    4. ')
' → logprob: -3.0100936889648438
    5. '),' → logprob: -5.885093688964844
    6. '<|end|>' → logprob: -6.635093688964844
    7. '           ' → logprob: -7.260093688964844
    8. '[' → logprob: -7.385093688964844
    9. '):
' → logprob: -7.635093688964844
    10. ',
' → logprob: -8.385093688964844

Token 2308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005404045223258436
    2. '           ' → logprob: -8.125540733337402
    3. '```' → logprob: -9.125540733337402
    4. 'if' → logprob: -10.000540733337402
    5. ',' → logprob: -10.375540733337402
    6. ' if' → logprob: -10.750540733337402
    7. '   ' → logprob: -10.875540733337402
    8. ')' → logprob: -12.750540733337402
    9. '<|end|>' → logprob: -12.875540733337402
    10. '[' → logprob: -12.875540733337402

Token 2309: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5894707441329956
    2. '       ' → logprob: -0.8394707441329956
    3. ' if' → logprob: -4.339470863342285
    4. '   ' → logprob: -8.589470863342285
    5. '           ' → logprob: -9.214470863342285
    6. '```' → logprob: -9.839470863342285
    7. '	if' → logprob: -10.964470863342285
    8. 'If' → logprob: -11.339470863342285
    9. ')' → logprob: -12.339470863342285
    10. '[' → logprob: -12.464470863342285

Token 2310: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141996443271637
    2. ' c' → logprob: -1.7014199495315552
    3. 'None' → logprob: -12.076419830322266
    4. ' None' → logprob: -14.076419830322266
    5. ' not' → logprob: -16.451419830322266
    6. '_c' → logprob: -16.576419830322266
    7. '(c' → logprob: -17.201419830322266
    8. '	c' → logprob: -17.451419830322266
    9. 'not' → logprob: -17.451419830322266
    10. ')c' → logprob: -17.701419830322266

Token 2311: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5271497368812561
    2. 'is' → logprob: -0.9021497368812561
    3. 'None' → logprob: -6.152149677276611
    4. '[' → logprob: -7.277149677276611
    5. '=None' → logprob: -7.777149677276611
    6. '           ' → logprob: -8.77715015411377
    7. ' None' → logprob: -9.02715015411377
    8. '_is' → logprob: -9.15215015411377
    9. ':' → logprob: -9.65215015411377
    10. '```' → logprob: -9.77715015411377

Token 2312: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2871944308280945
    2. ' not' → logprob: -1.7871944904327393
    3. 'None' → logprob: -2.5371944904327393
    4. ' None' → logprob: -5.78719425201416
    5. 'Not' → logprob: -10.28719425201416
    6. '(None' → logprob: -12.78719425201416
    7. '
' → logprob: -12.91219425201416
    8. '   ' → logprob: -13.03719425201416
    9. 'none' → logprob: -13.16219425201416
    10. '=None' → logprob: -13.16219425201416

Token 2313: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2164609432220459
    2. 'None' → logprob: -1.716460943222046
    3. ' not' → logprob: -4.216461181640625
    4. ' None' → logprob: -9.341461181640625
    5. 'Not' → logprob: -9.841461181640625
    6. '0' → logprob: -10.591461181640625
    7. '```' → logprob: -12.591461181640625
    8. '...' → logprob: -12.716461181640625
    9. '_not' → logprob: -12.716461181640625
    10. 'none' → logprob: -13.091461181640625

Token 2314: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010429601185023785
    2. ',' → logprob: -5.135429382324219
    3. ':' → logprob: -6.385429382324219
    4. ':
' → logprob: -6.510429382324219
    5. ',c' → logprob: -7.135429382324219
    6. '       ' → logprob: -8.885429382324219
    7. '```' → logprob: -9.260429382324219
    8. '               ' → logprob: -9.510429382324219
    9. '):
' → logprob: -10.010429382324219
    10. '<|end|>' → logprob: -10.135429382324219

Token 2315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003752615302801132
    2. '```' → logprob: -8.875374794006348
    3. '               ' → logprob: -9.625374794006348
    4. '       ' → logprob: -10.125374794006348
    5. '          ' → logprob: -10.125374794006348
    6. ',' → logprob: -10.750374794006348
    7. '	       ' → logprob: -11.250374794006348
    8. '         ' → logprob: -11.500374794006348
    9. '   ' → logprob: -11.750374794006348
    10. 'cells' → logprob: -12.000374794006348

Token 2316: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.06480904668569565
    2. '           ' → logprob: -2.8148090839385986
    3. ' cells' → logprob: -6.6898088455200195
    4. '       ' → logprob: -7.4398088455200195
    5. '               ' → logprob: -7.6898088455200195
    6. 'c' → logprob: -8.43980884552002
    7. '   ' → logprob: -8.81480884552002
    8. '```' → logprob: -9.18980884552002
    9. '	c' → logprob: -11.43980884552002
    10. '.cells' → logprob: -11.81480884552002

Token 2317: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0029047278221696615
    2. ',' → logprob: -6.627904891967773
    3. '.' → logprob: -6.627904891967773
    4. 'append' → logprob: -9.127904891967773
    5. '           ' → logprob: -9.627904891967773
    6. '```' → logprob: -10.377904891967773
    7. ' .' → logprob: -11.627904891967773
    8. ').' → logprob: -12.002904891967773
    9. 'Append' → logprob: -12.252904891967773
    10. '.app' → logprob: -12.627904891967773

Token 2318: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005387072917073965
    2. '(' → logprob: -5.255387306213379
    3. ' (' → logprob: -9.005387306213379
    4. '((' → logprob: -10.630387306213379
    5. '(C' → logprob: -12.630387306213379
    6. '(
' → logprob: -13.505387306213379
    7. '(com' → logprob: -14.130387306213379
    8. ',' → logprob: -15.380387306213379
    9. '(',',' → logprob: -15.630387306213379
    10. '(i' → logprob: -16.630386352539062

Token 2319: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.896309739408025e-07
    2. ' c' → logprob: -14.250000953674316
    3. ')c' → logprob: -16.125
    4. '   ' → logprob: -18.375
    5. '	c' → logprob: -18.75
    6. '```' → logprob: -19.125
    7. '
' → logprob: -19.375
    8. 'cdecl' → logprob: -19.875
    9. ')' → logprob: -20.125
    10. '<|end|>' → logprob: -20.5

Token 2320: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.02329590730369091
    2. ',' → logprob: -3.7732958793640137
    3. ',
' → logprob: -11.023296356201172
    4. ',val' → logprob: -11.148296356201172
    5. ' ,' → logprob: -11.148296356201172
    6. '
' → logprob: -13.648296356201172
    7. '   ' → logprob: -14.648296356201172
    8. ',value' → logprob: -14.773296356201172
    9. ',c' → logprob: -15.023296356201172
    10. '```' → logprob: -15.273296356201172

Token 2321: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49730196595191956
    2. ',' → logprob: -0.9973019361495972
    3. ',ch' → logprob: -4.247302055358887
    4. ',)' → logprob: -5.122302055358887
    5. '),' → logprob: -6.747302055358887
    6. ',c' → logprob: -7.497302055358887
    7. '           ' → logprob: -7.622302055358887
    8. ')
' → logprob: -9.122302055358887
    9. ',
' → logprob: -9.622302055358887
    10. ')c' → logprob: -10.372302055358887

Token 2322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2574981451034546
    2. ',' → logprob: -1.6324981451034546
    3. ')' → logprob: -3.882498264312744
    4. '       ' → logprob: -6.132498264312744
    5. '```' → logprob: -6.257498264312744
    6. '[' → logprob: -6.882498264312744
    7. '               ' → logprob: -7.132498264312744
    8. '),' → logprob: -7.132498264312744
    9. '.append' → logprob: -7.257498264312744
    10. '   ' → logprob: -7.257498264312744

Token 2323: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' (adapté à ' vals') → logprob: -0.3177889287471771
    2. ' vals' → logprob: -2.44278883934021
    3. ' last' → logprob: -2.56778883934021
    4. 'last' → logprob: -3.06778883934021
    5. ')' → logprob: -3.69278883934021
    6. '           ' → logprob: -4.692789077758789
    7. 'v' → logprob: -5.942789077758789
    8. 'val' → logprob: -5.942789077758789
    9. 'cells' → logprob: -5.942789077758789
    10. '```' → logprob: -6.067789077758789

Token 2324: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009537404985167086
    2. '.' → logprob: -7.125953674316406
    3. '.pop' → logprob: -10.000953674316406
    4. '<|end|>' → logprob: -10.125953674316406
    5. 'append' → logprob: -10.875953674316406
    6. '.extend' → logprob: -11.625953674316406
    7. '.
' → logprob: -11.750953674316406
    8. ')' → logprob: -11.875953674316406
    9. '.push' → logprob: -12.750953674316406
    10. '.remove' → logprob: -12.875953674316406

Token 2325: '(v' (ID: 6932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.201504185795784
    2. '(v' → logprob: -1.7015042304992676
    3. '(' → logprob: -10.20150375366211
    4. ')v' → logprob: -10.32650375366211
    5. '(c' → logprob: -11.70150375366211
    6. ',v' → logprob: -12.57650375366211
    7. ')' → logprob: -12.70150375366211
    8. '[v' → logprob: -13.45150375366211
    9. 'c' → logprob: -13.45150375366211
    10. ' v' → logprob: -13.82650375366211

Token 2326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00465013412758708
    2. '           ' → logprob: -6.254650115966797
    3. ')
' → logprob: -6.629650115966797
    4. '       ' → logprob: -7.254650115966797
    5. '[' → logprob: -8.629650115966797
    6. '<|end|>' → logprob: -8.629650115966797
    7. '+' → logprob: -9.379650115966797
    8. '   ' → logprob: -9.504650115966797
    9. ']' → logprob: -10.379650115966797
    10. '<|end|>' → logprob: -11.254650115966797

Token 2327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3574463129043579
    2. '   ' → logprob: -1.232446312904358
    3. ')' → logprob: -5.357446193695068
    4. 'return' → logprob: -6.732446193695068
    5. ')
' → logprob: -7.357446193695068
    6. '           ' → logprob: -7.482446193695068
    7. '
' → logprob: -7.607446193695068
    8. ',' → logprob: -7.857446193695068
    9. '<|end|>' → logprob: -8.357446670532227
    10. '        
' → logprob: -8.982446670532227

Token 2328: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3177860379219055
    2. '       ' → logprob: -1.4427859783172607
    3. '#' (adapté à ' #') → logprob: -4.06778621673584
    4. '   ' → logprob: -4.69278621673584
    5. 'if' → logprob: -5.56778621673584
    6. 'def' → logprob: -6.06778621673584
    7. 'expr' → logprob: -6.56778621673584
    8. 'op' → logprob: -7.94278621673584
    9. 'result' → logprob: -8.06778621673584
    10. 'class' → logprob: -8.31778621673584

Token 2329: ' Evaluate' (ID: 95819)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022624608129262924
    2. '#' → logprob: -4.647624492645264
    3. 'def' → logprob: -5.147624492645264
    4. '   ' → logprob: -5.647624492645264
    5. '       ' → logprob: -6.397624492645264
    6. 'class' → logprob: -6.897624492645264
    7. 'from' → logprob: -7.647624492645264
    8. 'if' → logprob: -8.897624969482422
    9. '           ' → logprob: -9.897624969482422
    10. 'expr' → logprob: -10.147624969482422

Token 2330: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3839857578277588
    2. 'result' → logprob: -1.8839857578277588
    3. 'expr' → logprob: -1.8839857578277588
    4. 'res' → logprob: -2.008985757827759
    5. '#' → logprob: -2.133985757827759
    6. '       ' → logprob: -2.758985757827759
    7. 'op' → logprob: -3.008985757827759
    8. 'val' → logprob: -3.633985757827759
    9. 'ops' → logprob: -4.13398551940918
    10. 'value' → logprob: -4.50898551940918

Token 2331: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.294141173362732
    2. '=' → logprob: -1.419141173362732
    3. 'most' → logprob: -2.1691412925720215
    4. '   ' → logprob: -2.6691412925720215
    5. '_cells' → logprob: -2.9191412925720215
    6. 'cells' → logprob: -3.1691412925720215
    7. 'to' → logprob: -3.2941412925720215
    8. '[' → logprob: -3.6691412925720215
    9. ' to' → logprob: -3.7941412925720215
    10. '_to' → logprob: -4.2941412925720215

Token 2332: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00013238313840702176
    2. ' right' → logprob: -9.62513256072998
    3. 'ight' → logprob: -10.00013256072998
    4. 'left' → logprob: -10.87513256072998
    5. ' ' → logprob: -14.75013256072998
    6. '_right' → logprob: -15.12513256072998
    7. '
' → logprob: -15.12513256072998
    8. '   ' → logprob: -15.50013256072998
    9. ',right' → logprob: -15.50013256072998
    10. '	right' → logprob: -15.62513256072998

Token 2333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7868565917015076
    2. 'op' → logprob: -1.2868566513061523
    3. 'result' → logprob: -1.9118566513061523
    4. 'res' → logprob: -3.7868566513061523
    5. '
' → logprob: -4.036856651306152
    6. '       ' → logprob: -4.036856651306152
    7. 'acc' → logprob: -4.161856651306152
    8. 'val' → logprob: -4.661856651306152
    9. 'operator' → logprob: -5.286856651306152
    10. 'expr' → logprob: -5.411856651306152

Token 2334: ' +' (ID: 659)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.14289113879203796
    2. 'i' → logprob: -2.8928911685943604
    3. 'vals' → logprob: -3.0178911685943604
    4. 'tokens' → logprob: -5.392890930175781
    5. '_cells' → logprob: -5.767890930175781
    6. 'val' → logprob: -5.767890930175781
    7. 'ops' → logprob: -6.017890930175781
    8. '(' → logprob: -6.267890930175781
    9. '(i' → logprob: -6.392890930175781
    10. '_' → logprob: -6.392890930175781

Token 2335: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4509078562259674
    2. ' and' → logprob: -1.450907826423645
    3. ',' → logprob: -2.8259079456329346
    4. ' ' → logprob: -4.2009077072143555
    5. 'for' → logprob: -4.7009077072143555
    6. ',
' → logprob: -4.9509077072143555
    7. '   ' → logprob: -5.0759077072143555
    8. '
' → logprob: -5.2009077072143555
    9. ' or' → logprob: -5.5759077072143555
    10. 'or' → logprob: -6.0759077072143555

Token 2336: ' -
' (ID: 27418)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015970319509506226
    2. '-
' → logprob: -4.640970230102539
    3. ''-' → logprob: -6.015970230102539
    4. ' -' → logprob: -6.390970230102539
    5. 'ch' → logprob: -7.765970230102539
    6. '```' → logprob: -7.765970230102539
    7. '`' → logprob: -8.140970230102539
    8. '-=' → logprob: -8.515970230102539
    9. ' ' → logprob: -8.890970230102539
    10. '
' → logprob: -9.390970230102539

Token 2337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4318978190422058
    2. 'for' → logprob: -1.5568978786468506
    3. 'op' → logprob: -3.1818978786468506
    4. ' for' → logprob: -3.6818978786468506
    5. 'i' → logprob: -3.8068978786468506
    6. '           ' → logprob: -4.5568976402282715
    7. 'result' → logprob: -4.6818976402282715
    8. '```' → logprob: -5.0568976402282715
    9. '   ' → logprob: -5.3068976402282715
    10. 'operator' → logprob: -5.4318976402282715

Token 2338: ' def' (ID: 1056)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7354419827461243
    2. 'res' → logprob: -0.8604419827461243
    3. 'acc' → logprob: -2.8604419231414795
    4. 'val' → logprob: -4.360442161560059
    5. '       ' → logprob: -4.860442161560059
    6. 'expr' → logprob: -5.360442161560059
    7. 'value' → logprob: -5.485442161560059
    8. '   ' → logprob: -5.735442161560059
    9. 'cur' → logprob: -6.610442161560059
    10. 'left' → logprob: -6.735442161560059

Token 2339: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.43327784538269043
    2. 'evaluate' → logprob: -1.0582778453826904
    3. '_eval' → logprob: -6.0582780838012695
    4. 'e' → logprob: -7.4332780838012695
    5. 'left' → logprob: -7.9332780838012695
    6. '_e' → logprob: -8.55827808380127
    7. 'expr' → logprob: -8.68327808380127
    8. 'ev' → logprob: -8.80827808380127
    9. ' eval' → logprob: -9.05827808380127
    10. 'def' → logprob: -9.05827808380127

Token 2340: '_nodes' (ID: 34593)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -1.227492332458496
    2. '(
' → logprob: -1.602492332458496
    3. 'cells' → logprob: -1.977492332458496
    4. '(' → logprob: -1.977492332458496
    5. '_expr' → logprob: -2.602492332458496
    6. '_expression' → logprob: -4.102492332458496
    7. '_' → logprob: -4.102492332458496
    8. 'def' → logprob: -4.102492332458496
    9. '_tokens' → logprob: -4.477492332458496
    10. '_cell' → logprob: -4.477492332458496

Token 2341: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.5697726011276245
    2. '(c' → logprob: -1.5697726011276245
    3. '(' → logprob: -1.8197726011276245
    4. '(node' → logprob: -3.569772720336914
    5. '((' → logprob: -4.569772720336914
    6. '(
' → logprob: -4.694772720336914
    7. '(self' → logprob: -5.569772720336914
    8. '_nodes' → logprob: -5.694772720336914
    9. '(_' → logprob: -6.819772720336914
    10. '_' → logprob: -6.819772720336914

Token 2342: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12496037036180496
    2. '[
' → logprob: -3.624960422515869
    3. ':' → logprob: -4.124960422515869
    4. '[token' → logprob: -4.374960422515869
    5. '[i' → logprob: -4.499960422515869
    6. '[index' → logprob: -4.749960422515869
    7. ',' → logprob: -4.999960422515869
    8. '[idx' → logprob: -5.124960422515869
    9. '):
' → logprob: -5.249960422515869
    10. '   ' → logprob: -5.624960422515869

Token 2343: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8069390058517456
    2. '           ' → logprob: -1.8069390058517456
    3. '[' → logprob: -2.181939125061035
    4. '(' → logprob: -2.431939125061035
    5. ' 
' → logprob: -3.056939125061035
    6. ' (' → logprob: -3.556939125061035
    7. '   ' → logprob: -3.556939125061035
    8. '               ' → logprob: -4.181939125061035
    9. '```' → logprob: -4.556939125061035
    10. '        ' → logprob: -4.931939125061035

Token 2344: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43766507506370544
    2. ' i' → logprob: -2.8126649856567383
    3. ' (' → logprob: -2.9376649856567383
    4. '   ' → logprob: -3.4376649856567383
    5. '           ' → logprob: -3.5626649856567383
    6. '(' → logprob: -3.8126649856567383
    7. 'i' → logprob: -3.8126649856567383
    8. '```' → logprob: -4.187664985656738
    9. ' 
' → logprob: -4.312664985656738
    10. ' for' → logprob: -4.437664985656738

Token 2345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45021840929985046
    2. ' =' → logprob: -1.2002184391021729
    3. '[' → logprob: -3.700218439102173
    4. ',' → logprob: -4.450218200683594
    5. '_' → logprob: -5.450218200683594
    6. 's' → logprob: -5.575218200683594
    7. '   ' → logprob: -5.950218200683594
    8. ' ' → logprob: -6.200218200683594
    9. '[
' → logprob: -6.575218200683594
    10. '
' → logprob: -6.700218200683594

Token 2346: ' eval' (ID: 29383)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.03383921459317207
    2. 'nodes' → logprob: -4.033839225769043
    3. 'None' → logprob: -4.408839225769043
    4. '0' → logprob: -6.033839225769043
    5. 'values' → logprob: -8.408839225769043
    6. 'val' → logprob: -8.533839225769043
    7. ' vals' → logprob: -8.783839225769043
    8. '(vals' → logprob: -9.533839225769043
    9. 'eval' → logprob: -9.658839225769043
    10. ' None' → logprob: -9.908839225769043

Token 2347: '_expr' (ID: 53654)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.876727819442749
    2. '(nodes' → logprob: -1.501727819442749
    3. 'nodes' → logprob: -1.751727819442749
    4. '(' → logprob: -2.001727819442749
    5. '_' → logprob: -4.376728057861328
    6. '(
' → logprob: -4.751728057861328
    7. '(c' → logprob: -5.126728057861328
    8. 'val' → logprob: -5.876728057861328
    9. '(vals' → logprob: -6.001728057861328
    10. '[' → logprob: -6.126728057861328

Token 2348: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.5414018034934998
    2. '(' → logprob: -1.7914018630981445
    3. '[' → logprob: -2.2914018630981445
    4. '_nodes' → logprob: -2.4164018630981445
    5. '(val' → logprob: -3.9164018630981445
    6. '[val' → logprob: -4.6664018630981445
    7. '_' → logprob: -4.9164018630981445
    8. 's' → logprob: -5.9164018630981445
    9. 'nodes' → logprob: -6.0414018630981445
    10. '[
' → logprob: -6.0414018630981445

Token 2349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008564340882003307
    2. '[val' → logprob: -5.508564472198486
    3. '[
' → logprob: -5.883564472198486
    4. ')' → logprob: -7.008564472198486
    5. ',' → logprob: -8.633563995361328
    6. '   ' → logprob: -9.008563995361328
    7. 'def' → logprob: -9.133563995361328
    8. ')[' → logprob: -10.133563995361328
    9. '[next' → logprob: -10.258563995361328
    10. '[++' → logprob: -10.383563995361328

Token 2350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1313919574022293
    2. '[' → logprob: -2.131392002105713
    3. '1' → logprob: -5.506392002105713
    4. '][' → logprob: -9.756391525268555
    5. '[val' → logprob: -9.756391525268555
    6. ')' → logprob: -9.881391525268555
    7. '   ' → logprob: -10.256391525268555
    8. '```' → logprob: -10.506391525268555
    9. ' [' → logprob: -10.631391525268555
    10. 'val' → logprob: -10.881391525268555

Token 2351: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3638615310192108
    2. ')' → logprob: -1.3638615608215332
    3. ' )' → logprob: -4.238861560821533
    4. ')[' → logprob: -4.488861560821533
    5. '][' → logprob: -4.988861560821533
    6. ')
' → logprob: -5.738861560821533
    7. '   ' → logprob: -6.488861560821533
    8. '+' → logprob: -6.488861560821533
    9. '
' → logprob: -6.863861560821533
    10. ' )[' → logprob: -6.863861560821533

Token 2352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26242318749427795
    2. '0' → logprob: -1.8874231576919556
    3. '])' → logprob: -3.762423276901245
    4. '[' → logprob: -4.012423038482666
    5. '][' → logprob: -4.137423038482666
    6. 'val' → logprob: -5.387423038482666
    7. '])[' → logprob: -6.012423038482666
    8. ')' → logprob: -6.137423038482666
    9. ')][' → logprob: -6.137423038482666
    10. ':' → logprob: -6.262423038482666

Token 2353: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3152370750904083
    2. '[' → logprob: -1.940237045288086
    3. '])' → logprob: -2.690237045288086
    4. ']' → logprob: -3.940237045288086
    5. '][' → logprob: -4.315237045288086
    6. ' )' → logprob: -5.190237045288086
    7. ')[' → logprob: -5.440237045288086
    8. '   ' → logprob: -5.815237045288086
    9. ')
' → logprob: -5.815237045288086
    10. '
' → logprob: -6.315237045288086

Token 2354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8108144998550415
    2. '[' → logprob: -0.9358144998550415
    3. '       ' → logprob: -2.185814380645752
    4. '
' → logprob: -4.185814380645752
    5. '               ' → logprob: -4.560814380645752
    6. '[
' → logprob: -4.935814380645752
    7. ')' → logprob: -5.685814380645752
    8. '   ' → logprob: -5.810814380645752
    9. ')
' → logprob: -6.060814380645752
    10. '                   ' → logprob: -6.560814380645752

Token 2355: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.33331298828125
    2. ')' → logprob: -1.45831298828125
    3. '[' → logprob: -1.70831298828125
    4. '(' → logprob: -2.70831298828125
    5. '   ' → logprob: -2.83331298828125
    6. '       ' → logprob: -3.08331298828125
    7. ' ' → logprob: -3.95831298828125
    8. '
' → logprob: -4.20831298828125
    9. '               ' → logprob: -4.20831298828125
    10. ')
' → logprob: -4.33331298828125

Token 2356: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12367866188287735
    2. '+=' → logprob: -2.873678684234619
    3. ' +=' → logprob: -2.998678684234619
    4. ' +' → logprob: -4.623678684234619
    5. '+
' → logprob: -9.623678207397461
    6. '=' → logprob: -9.623678207397461
    7. ' =' → logprob: -12.123678207397461
    8. ' +
' → logprob: -12.373678207397461
    9. ']+=' → logprob: -12.748678207397461
    10. '<|end|>' → logprob: -12.873678207397461

Token 2357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04908064007759094
    2. '2' → logprob: -3.0490806102752686
    3. ' ' → logprob: -8.299080848693848
    4. '0' → logprob: -8.424080848693848
    5. '+' → logprob: -11.299080848693848
    6. '3' → logprob: -12.424080848693848
    7. '   ' → logprob: -12.674080848693848
    8. '```' → logprob: -13.174080848693848
    9. 'i' → logprob: -13.424080848693848
    10. '  ' → logprob: -15.049080848693848

Token 2358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009541921317577362
    2. '2' → logprob: -4.759541988372803
    3. '0' → logprob: -7.259541988372803
    4. '+' → logprob: -8.509541511535645
    5. 'i' → logprob: -11.759541511535645
    6. ' ' → logprob: -12.134541511535645
    7. '   ' → logprob: -12.884541511535645
    8. '3' → logprob: -13.134541511535645
    9. '```' → logprob: -13.759541511535645
    10. '+=' → logprob: -13.884541511535645

Token 2359: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9911925792694092
    2. '<|end|>' → logprob: -1.3661925792694092
    3. 'while' → logprob: -2.616192579269409
    4. '
' → logprob: -2.991192579269409
    5. ' ' → logprob: -3.116192579269409
    6. ',' → logprob: -3.241192579269409
    7. '           ' → logprob: -3.241192579269409
    8. ' +' → logprob: -3.866192579269409
    9. '   ' → logprob: -4.116192817687988
    10. ' while' → logprob: -4.366192817687988

Token 2360: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5617729425430298
    2. 'while' → logprob: -1.6867729425430298
    3. '+' → logprob: -2.0617728233337402
    4. '           ' → logprob: -3.1867728233337402
    5. 'def' → logprob: -4.06177282333374
    6. ' while' → logprob: -4.31177282333374
    7. '       ' → logprob: -4.43677282333374
    8. '   ' → logprob: -4.68677282333374
    9. ' +' → logprob: -5.43677282333374
    10. '<|end|>' → logprob: -5.56177282333374

Token 2361: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16749992966651917
    2. ' while' → logprob: -2.0425000190734863
    3. '           ' → logprob: -4.667500019073486
    4. '
' → logprob: -5.417500019073486
    5. '       ' → logprob: -5.917500019073486
    6. '   ' → logprob: -6.417500019073486
    7. '+' → logprob: -6.417500019073486
    8. ' ' → logprob: -7.042500019073486
    9. '               ' → logprob: -7.542500019073486
    10. '          ' → logprob: -7.917500019073486

Token 2362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023247340694069862
    2. ' i' → logprob: -3.773247241973877
    3. ' ' → logprob: -13.898247718811035
    4. '	i' → logprob: -14.648247718811035
    5. '  ' → logprob: -15.898247718811035
    6. '   ' → logprob: -16.02324676513672
    7. '
' → logprob: -16.39824676513672
    8. '(i' → logprob: -16.52324676513672
    9. ' ' → logprob: -17.39824676513672
    10. '```' → logprob: -17.52324676513672

Token 2363: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5142700672149658
    2. ' <' → logprob: -1.2642700672149658
    3. '<len' → logprob: -2.139270067214966
    4. '<i' → logprob: -7.264269828796387
    5. '<=' → logprob: -7.764269828796387
    6. '+=' → logprob: -8.264269828796387
    7. '<n' → logprob: -8.639269828796387
    8. ' +=' → logprob: -9.514269828796387
    9. ' <=' → logprob: -10.139269828796387
    10. '+' → logprob: -10.514269828796387

Token 2364: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015908108616713434
    2. ' len' → logprob: -8.75015926361084
    3. '(len' → logprob: -15.62515926361084
    4. '   ' → logprob: -15.87515926361084
    5. '	len' → logprob: -15.87515926361084
    6. ' ' → logprob: -16.000158309936523
    7. 'val' → logprob: -17.000158309936523
    8. '<len' → logprob: -18.375158309936523
    9. '[len' → logprob: -19.125158309936523
    10. '=len' → logprob: -19.250158309936523

Token 2365: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.006872137077152729
    2. 'nodes' → logprob: -5.006872177124023
    3. ' nodes' → logprob: -9.381872177124023
    4. '	nodes' → logprob: -10.006872177124023
    5. '(tokens' → logprob: -11.006872177124023
    6. 'val' → logprob: -12.131872177124023
    7. '(' → logprob: -13.256872177124023
    8. '.nodes' → logprob: -14.131872177124023
    9. 'tokens' → logprob: -14.381872177124023
    10. '_nodes' → logprob: -14.506872177124023

Token 2366: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19973324239253998
    2. 'and' → logprob: -2.074733257293701
    3. ':
' → logprob: -3.949733257293701
    4. '   ' → logprob: -4.824733257293701
    5. '       ' → logprob: -5.199733257293701
    6. '):
' → logprob: -5.324733257293701
    7. '           ' → logprob: -5.699733257293701
    8. ' ' → logprob: -5.824733257293701
    9. ',' → logprob: -5.824733257293701
    10. '[' → logprob: -6.074733257293701

Token 2367: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1228251457214355
    2. '               ' → logprob: -1.1228251457214355
    3. '           ' → logprob: -1.6228251457214355
    4. ':
' → logprob: -2.6228251457214355
    5. ' if' → logprob: -4.2478251457214355
    6. 'and' → logprob: -4.3728251457214355
    7. ':' → logprob: -4.6228251457214355
    8. ',' → logprob: -4.7478251457214355
    9. '```' → logprob: -4.9978251457214355
    10. '{
' → logprob: -5.6228251457214355

Token 2368: ' op' (ID: 991)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1941414624452591
    2. 'if' → logprob: -2.194141387939453
    3. '               ' → logprob: -3.069141387939453
    4. ' op' → logprob: -4.944141387939453
    5. '           ' → logprob: -5.194141387939453
    6. 'operator' → logprob: -6.819141387939453
    7. ' ' → logprob: -7.194141387939453
    8. ' operator' → logprob: -7.319141387939453
    9. 'op' (adapté à ' op') → logprob: -7.944141387939453
    10. 'token' → logprob: -7.944141387939453

Token 2369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08233647793531418
    2. '=' → logprob: -2.70733642578125
    3. ',' → logprob: -4.70733642578125
    4. '   ' → logprob: -6.70733642578125
    5. ' ' → logprob: -7.83233642578125
    6. '_token' → logprob: -7.95733642578125
    7. 'i' → logprob: -8.58233642578125
    8. '=i' → logprob: -8.58233642578125
    9. '_val' → logprob: -9.08233642578125
    10. '_' → logprob: -9.08233642578125

Token 2370: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5255354642868042
    2. ' nodes' → logprob: -0.9005354642868042
    3. ''' → logprob: -6.275535583496094
    4. '(nodes' → logprob: -8.150535583496094
    5. ' '' → logprob: -9.400535583496094
    6. 'tokens' → logprob: -9.900535583496094
    7. '	nodes' → logprob: -9.900535583496094
    8. '.nodes' → logprob: -11.525535583496094
    9. ' ' → logprob: -11.650535583496094
    10. '`' → logprob: -11.900535583496094

Token 2371: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016992862219922245
    2. 'i' → logprob: -8.87516975402832
    3. '[
' → logprob: -11.12516975402832
    4. '```' → logprob: -11.50016975402832
    5. '[' → logprob: -12.87516975402832
    6. ' i' → logprob: -14.50016975402832
    7. '
' → logprob: -14.87516975402832
    8. '+i' → logprob: -15.12516975402832
    9. '(i' → logprob: -15.37516975402832
    10. '``' → logprob: -15.37516975402832

Token 2372: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05291946232318878
    2. ' +' → logprob: -3.302919387817383
    3. '[i' → logprob: -5.302919387817383
    4. '+i' → logprob: -5.302919387817383
    5. ']' → logprob: -6.427919387817383
    6. '[' → logprob: -7.177919387817383
    7. '```' → logprob: -7.427919387817383
    8. '<|end|>' → logprob: -7.677919387817383
    9. ']
' → logprob: -8.427919387817383
    10. 'i' → logprob: -8.677919387817383

Token 2373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21835501492023468
    2. '```' → logprob: -1.9683550596237183
    3. '           ' → logprob: -3.9683549404144287
    4. ' i' → logprob: -5.343355178833008
    5. ':' → logprob: -5.843355178833008
    6. '=' → logprob: -5.843355178833008
    7. ',' → logprob: -5.843355178833008
    8. '                   ' → logprob: -6.093355178833008
    9. 'val' → logprob: -6.218355178833008
    10. 'i' → logprob: -6.343355178833008

Token 2374: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8315219879150391
    2. 'i' → logprob: -1.581521987915039
    3. 'val' → logprob: -2.206521987915039
    4. ''' → logprob: -2.956521987915039
    5. ' val' → logprob: -2.956521987915039
    6. '               ' → logprob: -3.081521987915039
    7. 'nodes' → logprob: -3.956521987915039
    8. ' nodes' → logprob: -4.331521987915039
    9. 'tokens' → logprob: -4.456521987915039
    10. ' ' → logprob: -4.581521987915039

Token 2375: '2' (ID: 17)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7992166876792908
    2. ' =' → logprob: -0.9242166876792908
    3. '=' → logprob: -1.9242167472839355
    4. 'alue' → logprob: -6.1742167472839355
    5. 'alu' → logprob: -6.6742167472839355
    6. 'a' → logprob: -6.9242167472839355
    7. '   ' → logprob: -7.4242167472839355
    8. '=i' → logprob: -7.4242167472839355
    9. 'alid' → logprob: -7.5492167472839355
    10. '=
' → logprob: -8.299216270446777

Token 2376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326227188110352
    2. '=' → logprob: -0.7576227188110352
    3. '=
' → logprob: -12.382622718811035
    4. ',' → logprob: -12.882622718811035
    5. '=i' → logprob: -13.257622718811035
    6. 'okens' → logprob: -13.257622718811035
    7. ')' → logprob: -13.257622718811035
    8. ' ' → logprob: -13.382622718811035
    9. 'tokens' → logprob: -13.382622718811035
    10. '   ' → logprob: -13.507622718811035

Token 2377: ' eval' (ID: 29383)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.03882499039173126
    2. ' nodes' → logprob: -3.288825035095215
    3. '(nodes' → logprob: -7.288825035095215
    4. 'eval' → logprob: -9.288825035095215
    5. '	nodes' → logprob: -12.288825035095215
    6. '.nodes' → logprob: -13.788825035095215
    7. ' eval' → logprob: -14.163825035095215
    8. 'cells' → logprob: -14.913825035095215
    9. 'tokens' → logprob: -15.413825035095215
    10. '(eval' → logprob: -15.788825035095215

Token 2378: '_expr' (ID: 53654)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.7529881000518799
    2. '_expr' → logprob: -0.7529881000518799
    3. 'nodes' → logprob: -3.00298810005188
    4. '(nodes' → logprob: -5.502987861633301
    5. 'expr' → logprob: -6.127987861633301
    6. '(' → logprob: -8.3779878616333
    7. '_cells' → logprob: -8.3779878616333
    8. 'val' → logprob: -8.5029878616333
    9. 'v' → logprob: -8.7529878616333
    10. 's' → logprob: -9.0029878616333

Token 2379: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.00012725738633889705
    2. 'nodes' → logprob: -9.000126838684082
    3. '(' → logprob: -13.250126838684082
    4. '(tokens' → logprob: -13.625126838684082
    5. '	nodes' → logprob: -15.500126838684082
    6. ' (' → logprob: -15.750126838684082
    7. '(
' → logprob: -16.0001277923584
    8. ' nodes' → logprob: -16.0001277923584
    9. '((' → logprob: -16.0001277923584
    10. '(n' → logprob: -17.0001277923584

Token 2380: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.15310683415737e-05
    2. 'i' → logprob: -11.000021934509277
    3. '[
' → logprob: -13.750021934509277
    4. '[++' → logprob: -13.750021934509277
    5. '```' → logprob: -13.875021934509277
    6. '
' → logprob: -14.625021934509277
    7. '(i' → logprob: -15.125021934509277
    8. '[(' → logprob: -15.375021934509277
    9. '{i' → logprob: -15.500021934509277
    10. '[' → logprob: -15.625021934509277

Token 2381: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.1080467781284824e-05
    2. ' +' → logprob: -10.250041007995605
    3. '+
' → logprob: -12.375041007995605
    4. '[' → logprob: -13.625041007995605
    5. '+[' → logprob: -16.125041961669922
    6. '＋' → logprob: -17.000041961669922
    7. '1' → logprob: -17.250041961669922
    8. '
' → logprob: -18.000041961669922
    9. '][' → logprob: -18.250041961669922
    10. '+

' → logprob: -18.500041961669922

Token 2382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741004407405853
    2. '2' → logprob: -0.9741004705429077
    3. ' ' → logprob: -11.349100112915039
    4. '+' → logprob: -11.599100112915039
    5. '3' → logprob: -13.724100112915039
    6. '0' → logprob: -14.849100112915039
    7. '   ' → logprob: -15.349100112915039
    8. '<|end|>' → logprob: -15.724100112915039
    9. 'i' → logprob: -15.849100112915039
    10. '```' → logprob: -16.09910011291504

Token 2383: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02567458152770996
    2. ')[' → logprob: -3.77567458152771
    3. ')' → logprob: -6.650674819946289
    4. '][' → logprob: -7.150674819946289
    5. '[i' → logprob: -9.150674819946289
    6. '```' → logprob: -9.775674819946289
    7. ')
' → logprob: -9.900674819946289
    8. '   ' → logprob: -10.275674819946289
    9. ' [' → logprob: -10.525674819946289
    10. '()[' → logprob: -11.400674819946289

Token 2384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -11.250029563903809
    3. '[' → logprob: -11.875029563903809
    4. '<|end|>' → logprob: -12.250029563903809
    5. '2' → logprob: -13.625029563903809
    6. ')' → logprob: -14.375029563903809
    7. '<|end|>' → logprob: -14.375029563903809
    8. '```' → logprob: -14.500029563903809
    9. '
' → logprob: -15.000029563903809
    10. '   ' → logprob: -15.125029563903809

Token 2385: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008505010046064854
    2. ')
' → logprob: -4.883504867553711
    3. '):
' → logprob: -8.133504867553711
    4. '               ' → logprob: -8.258504867553711
    5. '])' → logprob: -8.258504867553711
    6. ')])' → logprob: -11.383504867553711
    7. ')return' → logprob: -11.383504867553711
    8. '                   ' → logprob: -11.508504867553711
    9. ')]' → logprob: -11.883504867553711
    10. '           ' → logprob: -12.008504867553711

Token 2386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010551339946687222
    2. '                   ' → logprob: -5.385551452636719
    3. '```' → logprob: -5.760551452636719
    4. '           ' → logprob: -7.135551452636719
    5. ')' → logprob: -7.760551452636719
    6. ':
' → logprob: -8.385551452636719
    7. '                ' → logprob: -8.885551452636719
    8. ':' → logprob: -9.010551452636719
    9. '                       ' → logprob: -9.135551452636719
    10. ',' → logprob: -9.260551452636719

Token 2387: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.792219877243042
    2. ' if' → logprob: -1.167219877243042
    3. '               ' → logprob: -1.667219877243042
    4. ' i' → logprob: -4.042220115661621
    5. 'i' → logprob: -4.417220115661621
    6. '                   ' → logprob: -4.917220115661621
    7. 'val' → logprob: -5.417220115661621
    8. ' val' → logprob: -5.917220115661621
    9. '{
' → logprob: -7.292220115661621
    10. '
' → logprob: -7.667220115661621

Token 2388: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.47413334250450134
    2. ' op' → logprob: -0.9741333723068237
    3. 'val' → logprob: -10.724133491516113
    4. '(op' → logprob: -10.974133491516113
    5. ' ' → logprob: -12.349133491516113
    6. '	op' → logprob: -12.599133491516113
    7. 'i' → logprob: -12.849133491516113
    8. ' val' → logprob: -13.349133491516113
    9. '```' → logprob: -13.974133491516113
    10. 'v' → logprob: -14.599133491516113

Token 2389: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28602609038352966
    2. '==' → logprob: -1.411026120185852
    3. ' in' → logprob: -6.0360260009765625
    4. '[' → logprob: -6.6610260009765625
    5. '=='' → logprob: -7.0360260009765625
    6. ' =='' → logprob: -9.161026000976562
    7. ' ' → logprob: -10.036026000976562
    8. ''' → logprob: -10.286026000976562
    9. ')' → logprob: -10.536026000976562
    10. '```' → logprob: -10.786026000976562

Token 2390: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31585243344306946
    2. ''+' → logprob: -1.315852403640747
    3. ' '+' → logprob: -6.690852642059326
    4. ' '' → logprob: -7.190852642059326
    5. ' '+'' → logprob: -7.690852642059326
    6. '+' → logprob: -10.065852165222168
    7. ''-' → logprob: -10.440852165222168
    8. '"' → logprob: -10.690852165222168
    9. '"+"' → logprob: -11.190852165222168
    10. '"+' → logprob: -11.565852165222168

Token 2391: '':
' (ID: 7669)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6146356463432312
    2. '':
' → logprob: -0.9896356463432312
    3. ''' → logprob: -3.114635705947876
    4. ' or' → logprob: -4.364635467529297
    5. '':' → logprob: -4.489635467529297
    6. ':
' → logprob: -4.489635467529297
    7. '               ' → logprob: -5.739635467529297
    8. ''):
' → logprob: -6.614635467529297
    9. ':' → logprob: -7.364635467529297
    10. '                   ' → logprob: -7.739635467529297

Token 2392: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03209824487566948
    2. ' val' → logprob: -4.157098293304443
    3. '                       ' → logprob: -5.157098293304443
    4. 'val' → logprob: -5.782098293304443
    5. ''' → logprob: -6.407098293304443
    6. '                    ' → logprob: -6.407098293304443
    7. '               ' → logprob: -6.532098293304443
    8. ' return' → logprob: -7.532098293304443
    9. '```' → logprob: -7.907098293304443
    10. '                ' → logprob: -8.532097816467285

Token 2393: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.05498112738132477
    2. 'val' (adapté à ' val') → logprob: -2.929981231689453
    3. '                   ' → logprob: -10.054981231689453
    4. '_val' → logprob: -10.804981231689453
    5. 'v' → logprob: -12.304981231689453
    6. '```' → logprob: -12.429981231689453
    7. ' =' → logprob: -12.929981231689453
    8. ' v' → logprob: -13.054981231689453
    9. '           ' → logprob: -13.179981231689453
    10. '               ' → logprob: -13.179981231689453

Token 2394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8867496848106384
    2. ' +=' → logprob: -0.8867496848106384
    3. '+=' → logprob: -2.261749744415283
    4. '=' → logprob: -2.636749744415283
    5. '+' → logprob: -8.761749267578125
    6. ' +' → logprob: -9.511749267578125
    7. '```' → logprob: -11.886749267578125
    8. '*=' → logprob: -12.261749267578125
    9. '   ' → logprob: -12.511749267578125
    10. ' *=' → logprob: -13.261749267578125

Token 2395: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.016986005008220673
    2. ' (' → logprob: -4.516985893249512
    3. '(' → logprob: -5.141985893249512
    4. '(f' → logprob: -10.766985893249512
    5. '(mod' → logprob: -11.016985893249512
    6. 'val' → logprob: -12.141985893249512
    7. '((' → logprob: -12.391985893249512
    8. '[val' → logprob: -12.391985893249512
    9. '(vals' → logprob: -12.641985893249512
    10. '(str' → logprob: -12.641985893249512

Token 2396: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.012075142934918404
    2. '(val' → logprob: -4.512074947357178
    3. ' val' → logprob: -6.887074947357178
    4. ' (' → logprob: -12.512075424194336
    5. '[val' → logprob: -13.762075424194336
    6. '(' → logprob: -15.012075424194336
    7. ',val' → logprob: -15.012075424194336
    8. '	val' → logprob: -15.637075424194336
    9. '_val' → logprob: -15.762075424194336
    10. '   ' → logprob: -15.887075424194336

Token 2397: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141489803791046
    2. '+' → logprob: -1.701414942741394
    3. '*' → logprob: -14.576415061950684
    4. '+i' → logprob: -14.951415061950684
    5. '```' → logprob: -15.451415061950684
    6. ' ' → logprob: -15.576415061950684
    7. '+
' → logprob: -16.201414108276367
    8. ' +
' → logprob: -16.451414108276367
    9. ' *' → logprob: -16.576414108276367
    10. ' ' → logprob: -16.826414108276367

Token 2398: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10020990669727325
    2. ' v' → logprob: -2.350209951400757
    3. '	v' → logprob: -14.225210189819336
    4. 'eval' → logprob: -14.225210189819336
    5. ' ' → logprob: -14.475210189819336
    6. 'val' → logprob: -14.475210189819336
    7. '_v' → logprob: -15.225210189819336
    8. ' eval' → logprob: -15.850210189819336
    9. ')v' → logprob: -15.975210189819336
    10. '(v' → logprob: -15.975210189819336

Token 2399: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014639121945947409
    2. ')' → logprob: -6.626463890075684
    3. '   ' → logprob: -10.001463890075684
    4. '[i' → logprob: -10.251463890075684
    5. ' ' → logprob: -10.626463890075684
    6. 'i' → logprob: -11.876463890075684
    7. ' i' → logprob: -12.751463890075684
    8. '_' → logprob: -12.876463890075684
    9. ')%' → logprob: -12.876463890075684
    10. '(i' → logprob: -13.126463890075684

Token 2400: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010393599513918161
    2. ')%' → logprob: -6.876039505004883
    3. '                   ' → logprob: -13.001039505004883
    4. ' )' → logprob: -13.001039505004883
    5. ')&' → logprob: -14.376039505004883
    6. ')
' → logprob: -14.626039505004883
    7. '*' → logprob: -15.251039505004883
    8. '               ' → logprob: -15.376039505004883
    9. '')' → logprob: -15.876039505004883
    10. '       ' → logprob: -16.001039505004883

Token 2401: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.486372172832489
    2. ')' → logprob: -1.3613722324371338
    3. ' %' → logprob: -2.736372232437134
    4. '                   ' → logprob: -3.861372232437134
    5. ')%' → logprob: -3.861372232437134
    6. '               ' → logprob: -4.111371994018555
    7. '```' → logprob: -6.361371994018555
    8. '<|end|>' → logprob: -6.861371994018555
    9. '
' → logprob: -7.361371994018555
    10. '           ' → logprob: -7.486371994018555

Token 2402: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04865129664540291
    2. ' MOD' → logprob: -3.0486512184143066
    3. '201' → logprob: -9.798651695251465
    4. '`' → logprob: -13.048651695251465
    5. '_MOD' → logprob: -13.298651695251465
    6. '```' → logprob: -13.423651695251465
    7. ' ' → logprob: -13.923651695251465
    8. '(M' → logprob: -14.298651695251465
    9. '.MOD' → logprob: -14.673651695251465
    10. ' ' → logprob: -15.298651695251465

Token 2403: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02080065757036209
    2. '                   ' → logprob: -4.145800590515137
    3. '
' → logprob: -6.145800590515137
    4. '           ' → logprob: -6.645800590515137
    5. '```' → logprob: -7.270800590515137
    6. '       ' → logprob: -9.270800590515137
    7. '``' → logprob: -9.895800590515137
    8. '                       ' → logprob: -9.895800590515137
    9. ')' → logprob: -10.020800590515137
    10. '                ' → logprob: -10.145800590515137

Token 2404: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10550551116466522
    2. '                   ' → logprob: -2.7305054664611816
    3. '```' → logprob: -4.605505466461182
    4. ' 
' → logprob: -5.480505466461182
    5. ' ' → logprob: -5.855505466461182
    6. '`' → logprob: -5.855505466461182
    7. '           ' → logprob: -6.230505466461182
    8. ')' → logprob: -6.480505466461182
    9. '
' → logprob: -6.605505466461182
    10. '  
' → logprob: -6.855505466461182

Token 2405: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16643474996089935
    2. 'else' → logprob: -2.6664347648620605
    3. '```' → logprob: -3.0414347648620605
    4. '                   ' → logprob: -3.7914347648620605
    5. 'elif' (adapté à ' elif') → logprob: -5.1664347648620605
    6. ' else' → logprob: -6.1664347648620605
    7. '
' → logprob: -6.2914347648620605
    8. 'i' → logprob: -7.0414347648620605
    9. '           ' → logprob: -7.1664347648620605
    10. '{
' → logprob: -7.6664347648620605

Token 2406: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.3133135437965393
    2. 'op' → logprob: -1.3133134841918945
    3. '(op' → logprob: -10.438313484191895
    4. '                   ' → logprob: -11.438313484191895
    5. ''op' → logprob: -11.938313484191895
    6. '               ' → logprob: -12.688313484191895
    7. '	op' → logprob: -14.188313484191895
    8. ''' → logprob: -15.063313484191895
    9. '                ' → logprob: -15.313313484191895
    10. '                    ' → logprob: -15.438313484191895

Token 2407: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16032801568508148
    2. '==' → logprob: -1.9103280305862427
    3. '=='' → logprob: -9.785327911376953
    4. '=' → logprob: -10.410327911376953
    5. '[' → logprob: -12.160327911376953
    6. ' =' → logprob: -12.285327911376953
    7. '===' → logprob: -13.785327911376953
    8. ')' → logprob: -13.785327911376953
    9. ' =='' → logprob: -13.910327911376953
    10. '=="' → logprob: -14.410327911376953

Token 2408: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -7.135819760151207e-05
    2. '-' → logprob: -9.87507152557373
    3. ' '-'' → logprob: -11.25007152557373
    4. ''' → logprob: -13.12507152557373
    5. ' '-' → logprob: -13.50007152557373
    6. '('-' → logprob: -13.87507152557373
    7. ''*' → logprob: -14.25007152557373
    8. ''+' → logprob: -14.75007152557373
    9. ' ' → logprob: -14.75007152557373
    10. '"-' → logprob: -14.87507152557373

Token 2409: '':
' (ID: 7669)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0973442792892456
    2. ':
' → logprob: -1.0973442792892456
    3. ':' → logprob: -1.3473442792892456
    4. ' =' → logprob: -4.347344398498535
    5. '==' → logprob: -4.347344398498535
    6. '                   ' → logprob: -4.597344398498535
    7. ' ==' → logprob: -4.972344398498535
    8. '               ' → logprob: -5.597344398498535
    9. ' :' → logprob: -5.972344398498535
    10. '':' → logprob: -5.972344398498535

Token 2410: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004121142439544201
    2. '                       ' → logprob: -6.50412130355835
    3. ' val' → logprob: -6.75412130355835
    4. 'val' → logprob: -8.129120826721191
    5. '               ' → logprob: -8.129120826721191
    6. '{
' → logprob: -8.254120826721191
    7. ':
' → logprob: -8.879120826721191
    8. '```' → logprob: -9.004120826721191
    9. '(val' → logprob: -9.504120826721191
    10. '(' → logprob: -9.754120826721191

Token 2411: ' val' (ID: 1459)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0182053092867136
    2. ' val' → logprob: -4.643205165863037
    3. '(' → logprob: -4.893205165863037
    4. '                   ' → logprob: -7.643205165863037
    5. '(val' → logprob: -8.393205642700195
    6. 'val' (adapté à ' val') → logprob: -8.768205642700195
    7. ' =' → logprob: -11.518205642700195
    8. ' (
' → logprob: -11.518205642700195
    9. '                    ' → logprob: -11.643205642700195
    10. '               ' → logprob: -12.268205642700195

Token 2412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759574174880981
    2. ' =' → logprob: -0.8259574174880981
    3. ' ==' → logprob: -12.575957298278809
    4. '   ' → logprob: -12.700957298278809
    5. '==' → logprob: -12.825957298278809
    6. ')' → logprob: -13.200957298278809
    7. '```' → logprob: -13.200957298278809
    8. ' ' → logprob: -13.325957298278809
    9. ' ' → logprob: -14.450957298278809
    10. ':' → logprob: -14.950957298278809

Token 2413: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09206987917423248
    2. '(val' → logprob: -2.5920698642730713
    3. '(' → logprob: -4.34207010269165
    4. '(v' → logprob: -9.842069625854492
    5. '(vals' → logprob: -11.592069625854492
    6. '(ans' → logprob: -12.467069625854492
    7. '   ' → logprob: -12.717069625854492
    8. '(max' → logprob: -13.092069625854492
    9. '(abs' → logprob: -13.592069625854492
    10. '(int' → logprob: -13.717069625854492

Token 2414: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.027988819405436516
    2. ' val' → logprob: -4.027988910675049
    3. '(val' → logprob: -4.652988910675049
    4. ' (' → logprob: -8.52798843383789
    5. '[val' → logprob: -10.15298843383789
    6. '(' → logprob: -12.02798843383789
    7. '	val' → logprob: -12.15298843383789
    8. 'vall' → logprob: -12.40298843383789
    9. ',val' → logprob: -12.90298843383789
    10. 'v' → logprob: -14.15298843383789

Token 2415: ' -' (ID: 533)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.5700718760490417
    2. '+' → logprob: -1.9450719356536865
    3. ' (' → logprob: -2.0700719356536865
    4. 'val' → logprob: -2.8200719356536865
    5. ' val' → logprob: -2.9450719356536865
    6. '(' → logprob: -3.1950719356536865
    7. ' +' → logprob: -4.945071697235107
    8. '[val' → logprob: -5.570071697235107
    9. ')' → logprob: -7.570071697235107
    10. ' ' → logprob: -8.195072174072266

Token 2416: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16023357212543488
    2. ' v' → logprob: -1.9102336168289185
    3. 'i' → logprob: -11.910233497619629
    4. ' i' → logprob: -13.535233497619629
    5. '	v' → logprob: -14.035233497619629
    6. '1' → logprob: -15.785233497619629
    7. '(v' → logprob: -15.910233497619629
    8. ')v' → logprob: -15.910233497619629
    9. ' ' → logprob: -16.035234451293945
    10. '   ' → logprob: -17.035234451293945

Token 2417: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. 'v' → logprob: -15.750380516052246
    4. '```' → logprob: -17.00037956237793
    5. ')' → logprob: -17.37537956237793
    6. '   ' → logprob: -17.62537956237793
    7. ' v' → logprob: -17.87537956237793
    8. '1' → logprob: -19.50037956237793
    9. '``' → logprob: -19.50037956237793
    10. '  ' → logprob: -20.25037956237793

Token 2418: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0076578580774366856
    2. ')%' → logprob: -5.632658004760742
    3. '+' → logprob: -5.757658004760742
    4. ' +' → logprob: -7.132658004760742
    5. '```' → logprob: -10.382658004760742
    6. '%' → logprob: -11.257658004760742
    7. '')' → logprob: -11.507658004760742
    8. '``' → logprob: -12.007658004760742
    9. ' )' → logprob: -12.007658004760742
    10. '[i' → logprob: -12.132658004760742

Token 2419: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6120790243148804
    2. '%' → logprob: -0.8620790243148804
    3. ')' → logprob: -3.48707914352417
    4. ')%' → logprob: -5.36207914352417
    5. '%i' → logprob: -9.362078666687012
    6. ' %=' → logprob: -9.737078666687012
    7. '```' → logprob: -11.362078666687012
    8. ',' → logprob: -11.862078666687012
    9. ' ' → logprob: -11.862078666687012
    10. '%c' → logprob: -11.862078666687012

Token 2420: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.836499985889532e-05
    2. ' MOD' → logprob: -9.7500581741333
    3. '_MOD' → logprob: -18.125059127807617
    4. '.MOD' → logprob: -19.250059127807617
    5. '   ' → logprob: -19.500059127807617
    6. '201' → logprob: -19.625059127807617
    7. ' ' → logprob: -20.625059127807617
    8. '```' → logprob: -20.625059127807617
    9. '`' → logprob: -20.875059127807617
    10. ' ' → logprob: -21.625059127807617

Token 2421: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02271457202732563
    2. 'i' → logprob: -4.897714614868164
    3. '                   ' → logprob: -4.897714614868164
    4. '
' → logprob: -6.522714614868164
    5. ' i' → logprob: -6.647714614868164
    6. '(i' → logprob: -6.647714614868164
    7. '           ' → logprob: -6.897714614868164
    8. '```' → logprob: -7.147714614868164
    9. '(' → logprob: -8.022714614868164
    10. '   ' → logprob: -8.397714614868164

Token 2422: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02606966719031334
    2. '```' → logprob: -4.401069641113281
    3. '                   ' → logprob: -5.151069641113281
    4. 'i' → logprob: -6.526069641113281
    5. '           ' → logprob: -6.776069641113281
    6. '
' → logprob: -6.901069641113281
    7. '``' → logprob: -7.026069641113281
    8. ' i' → logprob: -7.151069641113281
    9. '   ' → logprob: -7.401069641113281
    10. ' ' → logprob: -7.901069641113281

Token 2423: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5782148838043213
    2. 'i' (adapté à ' i') → logprob: -2.4532148838043213
    3. '           ' → logprob: -2.4532148838043213
    4. '                   ' → logprob: -2.8282148838043213
    5. '   ' → logprob: -2.9532148838043213
    6. ' ' → logprob: -2.9532148838043213
    7. '       ' → logprob: -3.4532148838043213
    8. '```' → logprob: -3.8282148838043213
    9. '{
' → logprob: -4.453214645385742
    10. ' i' → logprob: -4.828214645385742

Token 2424: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.024098509922623634
    2. ' +=' → logprob: -4.0240983963012695
    3. '=' → logprob: -5.5240983963012695
    4. '+' → logprob: -6.2740983963012695
    5. '```' → logprob: -10.02409839630127
    6. '+
' → logprob: -12.52409839630127
    7. ' +' → logprob: -13.02409839630127
    8. '[' → logprob: -13.27409839630127
    9. ' =' → logprob: -13.39909839630127
    10. ']+=' → logprob: -13.64909839630127

Token 2425: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.782141569303349e-05
    2. ' ' → logprob: -9.25009822845459
    3. '1' → logprob: -13.50009822845459
    4. '3' → logprob: -16.125097274780273
    5. '   ' → logprob: -16.625097274780273
    6. '```' → logprob: -16.625097274780273
    7. '
' → logprob: -17.375097274780273
    8. '4' → logprob: -20.125097274780273
    9. '۲' → logprob: -20.250097274780273
    10. '  ' → logprob: -20.500097274780273

Token 2426: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '3' → logprob: -16.250001907348633
    4. '1' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '4' → logprob: -17.875001907348633
    7. '```' → logprob: -18.625001907348633
    8. '
' → logprob: -18.875001907348633
    9. '۲' → logprob: -19.000001907348633
    10. '２' → logprob: -19.000001907348633

Token 2427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030926406383514404
    2. '
' → logprob: -4.15592622756958
    3. '               ' → logprob: -4.65592622756958
    4. '           ' → logprob: -5.90592622756958
    5. '<|end|>' → logprob: -7.03092622756958
    6. 'return' → logprob: -7.15592622756958
    7. '```' → logprob: -9.030926704406738
    8. '   ' → logprob: -9.030926704406738
    9. ' return' → logprob: -9.280926704406738
    10. '        
' → logprob: -9.530926704406738

Token 2428: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6649373769760132
    2. '
' → logprob: -1.0399373769760132
    3. '               ' → logprob: -2.1649374961853027
    4. '           ' → logprob: -4.289937496185303
    5. '                   ' → logprob: -7.039937496185303
    6. '   ' → logprob: -7.039937496185303
    7. '```' → logprob: -7.914937496185303
    8. 'return' → logprob: -8.039937019348145
    9. ':
' → logprob: -8.789937019348145
    10. '    
' → logprob: -8.914937019348145

Token 2429: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044549476355314255
    2. 'return' (adapté à ' return') → logprob: -3.6695494651794434
    3. '
' → logprob: -4.544549465179443
    4. '   ' → logprob: -5.669549465179443
    5. '           ' → logprob: -5.794549465179443
    6. ' return' → logprob: -7.294549465179443
    7. '               ' → logprob: -9.419549942016602
    8. '	return' → logprob: -9.919549942016602
    9. '	' → logprob: -10.544549942016602
    10. '                   ' → logprob: -11.044549942016602

Token 2430: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0005530327325686812
    2. ' val' → logprob: -7.500553131103516
    3. '	val' → logprob: -17.500553131103516
    4. '(val' → logprob: -17.875553131103516
    5. '   ' → logprob: -18.500553131103516
    6. '_val' → logprob: -19.000553131103516
    7. '
' → logprob: -19.500553131103516
    8. ' ' → logprob: -20.500553131103516
    9. '[val' → logprob: -20.875553131103516
    10. '```' → logprob: -21.000553131103516

Token 2431: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7458111643791199
    2. '<|end|>' → logprob: -0.7458111643791199
    3. '
' → logprob: -3.6208112239837646
    4. '   ' → logprob: -5.2458109855651855
    5. '```' → logprob: -5.6208109855651855
    6. ')' → logprob: -5.7458109855651855
    7. ' ' → logprob: -6.1208109855651855
    8. '<|end|>' → logprob: -6.7458109855651855
    9. '	' → logprob: -6.8708109855651855
    10. '           ' → logprob: -7.1208109855651855

Token 2432: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029526792466640472
    2. ')' → logprob: -4.904526710510254
    3. '       ' → logprob: -4.904526710510254
    4. '
' → logprob: -5.404526710510254
    5. '    
' → logprob: -5.779526710510254
    6. 'def' → logprob: -6.404526710510254
    7. '<|end|>' → logprob: -6.529526710510254
    8. '```' → logprob: -7.154526710510254
    9. ')
' → logprob: -7.279526710510254
    10. '(
' → logprob: -7.904526710510254

Token 2433: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7616413831710815
    2. '   ' → logprob: -0.8866413831710815
    3. '       ' → logprob: -2.261641502380371
    4. 'return' → logprob: -4.386641502380371
    5. '```' → logprob: -5.761641502380371
    6. ')' → logprob: -7.261641502380371
    7. '
' → logprob: -8.886641502380371
    8. '``' → logprob: -9.261641502380371
    9. ' return' → logprob: -9.636641502380371
    10. ')
' → logprob: -10.136641502380371

Token 2434: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33023932576179504
    2. 'def' → logprob: -1.5802392959594727
    3. 'val' → logprob: -2.7052392959594727
    4. '   ' → logprob: -6.205239295959473
    5. '       ' → logprob: -6.455239295959473
    6. 'if' → logprob: -6.705239295959473
    7. 'result' → logprob: -6.830239295959473
    8. 'for' → logprob: -7.455239295959473
    9. 'eval' → logprob: -7.705239295959473
    10. ' return' → logprob: -7.955239295959473

Token 2435: ' evaluation' (ID: 21407)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.4858342409133911
    2. 'cells' → logprob: -1.4858342409133911
    3. 'i' → logprob: -2.2358341217041016
    4. 'c' → logprob: -2.3608341217041016
    5. 'eval' → logprob: -2.6108341217041016
    6. 'cell' → logprob: -2.7358341217041016
    7. 'return' → logprob: -3.1108341217041016
    8. 'vals' → logprob: -3.1108341217041016
    9. 'len' → logprob: -3.3608341217041016
    10. 'def' → logprob: -3.6108341217041016

Token 2436: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17675261199474335
    2. 'return' → logprob: -2.5517525672912598
    3. 'def' → logprob: -3.3017525672912598
    4. 'val' → logprob: -4.05175256729126
    5. 'result' → logprob: -4.55175256729126
    6. '   ' → logprob: -4.80175256729126
    7. '
' → logprob: -5.42675256729126
    8. '```' → logprob: -5.92675256729126
    9. '           ' → logprob: -6.67675256729126
    10. 'value' → logprob: -7.30175256729126

Token 2437: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07455269247293472
    2. 'def' → logprob: -3.1995527744293213
    3. 'return' → logprob: -3.6995527744293213
    4. '   ' → logprob: -5.199552536010742
    5. '<|end|>' → logprob: -8.574552536010742
    6. ' return' → logprob: -8.949552536010742
    7. 'import' → logprob: -9.324552536010742
    8. '
' → logprob: -9.324552536010742
    9. '```' → logprob: -9.824552536010742
    10. '           ' → logprob: -9.824552536010742

Token 2438: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5706931352615356
    2. '       ' → logprob: -0.9456931352615356
    3. 'def' → logprob: -3.570693016052246
    4. '   ' → logprob: -4.945693016052246
    5. 'val' → logprob: -5.195693016052246
    6. '```' → logprob: -6.070693016052246
    7. ' return' → logprob: -6.820693016052246
    8. '
' → logprob: -7.570693016052246
    9. 'if' → logprob: -7.945693016052246
    10. 'result' → logprob: -8.070693016052246

Token 2439: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.48864880204200745
    2. 'def' → logprob: -1.238648772239685
    3. '   ' → logprob: -2.8636488914489746
    4. '       ' → logprob: -3.3636488914489746
    5. 'val' → logprob: -5.988648891448975
    6. ' return' → logprob: -6.988648891448975
    7. '
' → logprob: -7.363648891448975
    8. '```' → logprob: -8.113648414611816
    9. 'result' → logprob: -8.863648414611816
    10. ')' → logprob: -9.238648414611816

Token 2440: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.8140236735343933
    2. 'cells' → logprob: -1.189023733139038
    3. 'None' → logprob: -1.439023733139038
    4. 'lambda' → logprob: -5.189023494720459
    5. '(None' → logprob: -6.314023494720459
    6. '(Cell' → logprob: -6.314023494720459
    7. '(lambda' → logprob: -6.814023494720459
    8. 'eval' → logprob: -7.064023494720459
    9. ' cells' → logprob: -7.064023494720459
    10. ' None' → logprob: -7.689023494720459

Token 2441: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0009655343601480126
    2. 'lines' → logprob: -8.500965118408203
    3. '(
' → logprob: -8.625965118408203
    4. ',' → logprob: -9.250965118408203
    5. '(' → logprob: -9.250965118408203
    6. '([],' → logprob: -9.500965118408203
    7. '(None' → logprob: -9.625965118408203
    8. '(),' → logprob: -10.125965118408203
    9. '((' → logprob: -10.625965118408203
    10. '([' → logprob: -10.750965118408203

Token 2442: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6532080173492432
    2. ',' → logprob: -0.9032080173492432
    3. ',c' → logprob: -2.653208017349243
    4. '   ' → logprob: -6.403207778930664
    5. '(c' → logprob: -7.528207778930664
    6. ',val' → logprob: -7.653207778930664
    7. ',),' → logprob: -8.278207778930664
    8. ' ,' → logprob: -8.403207778930664
    9. ',None' → logprob: -8.653207778930664
    10. ' ' → logprob: -8.903207778930664

Token 2443: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.002391110174357891
    2. ' base' → logprob: -6.502391338348389
    3. 'eval' → logprob: -8.00239086151123
    4. 'None' → logprob: -8.37739086151123
    5. 'MOD' → logprob: -9.00239086151123
    6. '0' → logprob: -9.87739086151123
    7. '(base' → logprob: -10.62739086151123
    8. 'val' → logprob: -10.62739086151123
    9. 'mod' → logprob: -10.75239086151123
    10. '   ' → logprob: -10.87739086151123

Token 2444: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.5048530030981055e-06
    2. 'line' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.750001907348633
    4. 'Line' → logprob: -15.750001907348633
    5. ')' → logprob: -17.375001907348633
    6. '_LINE' → logprob: -17.500001907348633
    7. '```' → logprob: -18.500001907348633
    8. ''_' → logprob: -18.500001907348633
    9. '-line' → logprob: -18.750001907348633
    10. '_base' → logprob: -19.250001907348633

Token 2445: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2105230689048767
    2. ',' → logprob: -1.7105231285095215
    3. ',val' → logprob: -4.8355231285095215
    4. ',),' → logprob: -7.4605231285095215
    5. '   ' → logprob: -7.8355231285095215
    6. ' ,' → logprob: -9.460522651672363
    7. ',None' → logprob: -10.710522651672363
    8. ' ),' → logprob: -10.835522651672363
    9. '),(' → logprob: -11.960522651672363
    10. ')' → logprob: -12.085522651672363

Token 2446: ' ('' (ID: 9906)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.00023929782037157565
    2. '(eval' → logprob: -8.875239372253418
    3. 'lambda' → logprob: -9.875239372253418
    4. ' eval' → logprob: -10.250239372253418
    5. '(lambda' → logprob: -12.625239372253418
    6. 'str' → logprob: -13.000239372253418
    7. 'None' → logprob: -13.500239372253418
    8. 'int' → logprob: -13.625239372253418
    9. '(' → logprob: -13.750239372253418
    10. 'val' → logprob: -13.750239372253418

Token 2447: 'expr' (ID: 21343)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.8546580076217651
    2. ''+' → logprob: -1.8546580076217651
    3. ''' → logprob: -2.4796581268310547
    4. 'add' → logprob: -2.4796581268310547
    5. 'op' → logprob: -2.7296581268310547
    6. 'expr' → logprob: -2.9796581268310547
    7. 'lambda' → logprob: -3.1046581268310547
    8. '('' → logprob: -3.9796581268310547
    9. 'plus' → logprob: -4.104658126831055
    10. '('+' → logprob: -4.604658126831055

Token 2448: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.03123067505657673
    2. '_nodes' → logprob: -4.281230449676514
    3. '',[' → logprob: -5.531230449676514
    4. ',' → logprob: -6.031230449676514
    5. '',(' → logprob: -6.281230449676514
    6. '','' → logprob: -6.781230449676514
    7. '_eval' → logprob: -6.906230449676514
    8. 'eval' → logprob: -7.406230449676514
    9. 'def' → logprob: -7.531230449676514
    10. '')' → logprob: -7.781230449676514

Token 2449: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.5524081587791443
    2. 'vals' → logprob: -1.302408218383789
    3. 'eval' → logprob: -2.052408218383789
    4. 'ops' → logprob: -4.177408218383789
    5. '('' → logprob: -6.177408218383789
    6. '[' → logprob: -6.552408218383789
    7. 'values' → logprob: -7.177408218383789
    8. '['' → logprob: -7.552408218383789
    9. ''' → logprob: -7.552408218383789
    10. 'lambda' → logprob: -8.427408218383789

Token 2450: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11099471896886826
    2. ',' → logprob: -2.360994815826416
    3. '[' → logprob: -5.110994815826416
    4. '<|end|>' → logprob: -6.110994815826416
    5. '   ' → logprob: -7.235994815826416
    6. ',)' → logprob: -8.235994338989258
    7. '[next' → logprob: -8.235994338989258
    8. ')[' → logprob: -8.485994338989258
    9. '<|end|>' → logprob: -8.485994338989258
    10. ')]' → logprob: -9.360994338989258

Token 2451: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002952858805656433
    2. '
' → logprob: -6.002953052520752
    3. '```' → logprob: -9.377952575683594
    4. '   ' → logprob: -9.377952575683594
    5. ')' → logprob: -9.502952575683594
    6. '<|end|>' → logprob: -9.502952575683594
    7. ':def' → logprob: -10.377952575683594
    8. '    
' → logprob: -10.502952575683594
    9. '#' → logprob: -10.627952575683594
    10. ':' → logprob: -10.877952575683594

Token 2452: ' #' (ID: 1069)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.2665056884288788
    2. '   ' → logprob: -2.391505718231201
    3. '#' (adapté à ' #') → logprob: -2.516505718231201
    4. 'if' → logprob: -3.016505718231201
    5. 'def' → logprob: -4.766505718231201
    6. 'elif' → logprob: -6.266505718231201
    7. '```' → logprob: -6.766505718231201
    8. 'cells' → logprob: -8.266505241394043
    9. 'else' → logprob: -8.766505241394043
    10. '
' → logprob: -9.016505241394043

Token 2453: ' Else' (ID: 42978)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.03675879165530205
    2. '   ' → logprob: -3.5367588996887207
    3. '#' → logprob: -5.161758899688721
    4. 'def' → logprob: -6.786758899688721
    5. 'multip' → logprob: -11.161758422851562
    6. 'op' → logprob: -11.411758422851562
    7. 'operators' → logprob: -11.536758422851562
    8. '       ' → logprob: -11.661758422851562
    9. ' ops' → logprob: -11.661758422851562
    10. 'class' → logprob: -11.786758422851562

Token 2454: ' split' (ID: 12648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31348103284835815
    2. '#' → logprob: -1.813481092453003
    3. 'ops' → logprob: -2.313481092453003
    4. 'cells' → logprob: -6.063480854034424
    5. ' ops' → logprob: -6.188480854034424
    6. 'if' → logprob: -7.188480854034424
    7. '
' → logprob: -7.563480854034424
    8. '       ' → logprob: -8.063481330871582
    9. ' #' → logprob: -8.063481330871582
    10. ' cells' → logprob: -9.313481330871582

Token 2455: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.05075541138648987
    2. '   ' → logprob: -4.300755500793457
    3. 'cells' → logprob: -4.550755500793457
    4. ' by' → logprob: -4.800755500793457
    5. 'lines' → logprob: -5.425755500793457
    6. 'def' → logprob: -6.175755500793457
    7. '#' → logprob: -6.175755500793457
    8. 'for' → logprob: -6.300755500793457
    9. 'bys' → logprob: -6.425755500793457
    10. '_cells' → logprob: -6.550755500793457

Token 2456: ' *' (ID: 425)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.04677373170852661
    2. 'find' → logprob: -3.296773672103882
    3. '['' → logprob: -5.296773910522461
    4. ' find' → logprob: -7.421773910522461
    5. ' '*'' → logprob: -7.421773910522461
    6. '('*' → logprob: -7.671773910522461
    7. ' '*' → logprob: -7.796773910522461
    8. ''' → logprob: -7.921773910522461
    9. 'def' → logprob: -7.921773910522461
    10. ''s' → logprob: -8.546773910522461

Token 2457: ' operators' (ID: 29893)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.15593980252742767
    2. '   ' → logprob: -2.780939817428589
    3. '=' → logprob: -3.030939817428589
    4. ' =' → logprob: -4.03093957901001
    5. '_ops' → logprob: -5.78093957901001
    6. 'find' → logprob: -5.90593957901001
    7. '=
' → logprob: -6.40593957901001
    8. 's' → logprob: -6.65593957901001
    9. '.ops' → logprob: -6.90593957901001
    10. '```' → logprob: -7.03093957901001

Token 2458: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018008405342698097
    2. 'ops' → logprob: -4.268008232116699
    3. '
' → logprob: -5.893008232116699
    4. '```' → logprob: -7.518008232116699
    5. '    
' → logprob: -8.2680082321167
    6. '.ops' → logprob: -10.0180082321167
    7. '(' → logprob: -10.5180082321167
    8. '``' → logprob: -10.6430082321167
    9. '       ' → logprob: -10.7680082321167
    10. ' =' → logprob: -10.7680082321167

Token 2459: 'higher' (ID: 186811)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.31177783012390137
    2. 'ops' → logprob: -1.5617778301239014
    3. '   ' → logprob: -3.5617778301239014
    4. '
' → logprob: -4.8117780685424805
    5. ' find' → logprob: -5.1867780685424805
    6. 'def' → logprob: -5.3117780685424805
    7. '[' → logprob: -6.0617780685424805
    8. '#' → logprob: -7.1867780685424805
    9. '['' → logprob: -7.1867780685424805
    10. '.find' → logprob: -7.4367780685424805

Token 2460: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.03947531431913376
    2. 'level' → logprob: -4.289475440979004
    3. '-pre' → logprob: -4.664475440979004
    4. 'prec' → logprob: -5.414475440979004
    5. 'pre' → logprob: -5.914475440979004
    6. ' precedence' → logprob: -6.039475440979004
    7. '-
' → logprob: -6.289475440979004
    8. '   ' → logprob: -6.289475440979004
    9. '-level' → logprob: -6.539475440979004
    10. 'priority' → logprob: -7.789475440979004

Token 2461: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07324207574129105
    2. ',' → logprob: -3.4482421875
    3. ':
' → logprob: -4.5732421875
    4. ':' → logprob: -5.0732421875
    5. ' at' → logprob: -5.5732421875
    6. ')' → logprob: -5.9482421875
    7. ',
' → logprob: -6.1982421875
    8. '):
' → logprob: -6.1982421875
    9. 'if' → logprob: -6.3232421875
    10. ')
' → logprob: -6.6982421875

Token 2462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2273143082857132
    2. 'ops' → logprob: -1.6023143529891968
    3. '```' → logprob: -6.977314472198486
    4. '`' → logprob: -8.602313995361328
    5. '``' → logprob: -8.977313995361328
    6. '{
' → logprob: -9.602313995361328
    7. ' ops' → logprob: -9.602313995361328
    8. 'operators' → logprob: -9.727313995361328
    9. '    
' → logprob: -9.852313995361328
    10. '_ops' → logprob: -10.102313995361328

Token 2463: ' ops' (ID: 26973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35119596123695374
    2. 'ops' (adapté à ' ops') → logprob: -1.2261959314346313
    3. '```' → logprob: -6.351195812225342
    4. '`' → logprob: -7.976195812225342
    5. '``' → logprob: -8.9761962890625
    6. '
' → logprob: -9.4761962890625
    7. 'import' → logprob: -10.1011962890625
    8. '    
' → logprob: -10.1011962890625
    9. ' ops' → logprob: -10.2261962890625
    10. 'def' → logprob: -10.3511962890625

Token 2464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869023621082306
    2. ' =' → logprob: -1.1369023323059082
    3. '=find' → logprob: -10.386902809143066
    4. 's' → logprob: -15.636902809143066
    5. '=f' → logprob: -16.01190185546875
    6. ' ' → logprob: -17.26190185546875
    7. ':' → logprob: -17.38690185546875
    8. 'find' → logprob: -17.51190185546875
    9. '=
' → logprob: -17.63690185546875
    10. ',' → logprob: -17.63690185546875

Token 2465: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -4.632542913896032e-05
    2. ' find' → logprob: -10.000046730041504
    3. '[(' → logprob: -14.625046730041504
    4. '[' → logprob: -15.625046730041504
    5. '(find' → logprob: -15.750046730041504
    6. '	find' → logprob: -17.000045776367188
    7. '=find' → logprob: -17.500045776367188
    8. '.find' → logprob: -17.750045776367188
    9. '   ' → logprob: -18.875045776367188
    10. 'list' → logprob: -19.000045776367188

Token 2466: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.0008195152622647583
    2. '_out' → logprob: -7.250819683074951
    3. '_ops' → logprob: -10.375819206237793
    4. '('_' → logprob: -10.875819206237793
    5. '(s' → logprob: -10.875819206237793
    6. 's' → logprob: -11.625819206237793
    7. 'op' → logprob: -12.375819206237793
    8. '(op' → logprob: -12.625819206237793
    9. '(' → logprob: -12.750819206237793
    10. '_' → logprob: -12.750819206237793

Token 2467: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -9.372294698550832e-06
    2. '```' → logprob: -12.125009536743164
    3. 's' → logprob: -13.500009536743164
    4. 'outside' → logprob: -13.750009536743164
    5. 'Outside' → logprob: -15.000009536743164
    6. '_' → logprob: -15.125009536743164
    7. '`' → logprob: -15.625009536743164
    8. '_outer' → logprob: -16.000009536743164
    9. '_s' → logprob: -16.375009536743164
    10. '\' → logprob: -16.375009536743164

Token 2468: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.04332423955202103
    2. 'outside' → logprob: -3.2933242321014404
    3. 'ide' → logprob: -5.6683244705200195
    4. 'Outside' → logprob: -7.2933244705200195
    5. 's' → logprob: -7.6683244705200195
    6. '_out' → logprob: -8.66832447052002
    7. '('' → logprob: -9.54332447052002
    8. '```' → logprob: -9.66832447052002
    9. '(s' → logprob: -10.04332447052002
    10. '_side' → logprob: -10.29332447052002

Token 2469: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.12855541706085205
    2. 'paren' → logprob: -2.1285552978515625
    3. 'par' → logprob: -6.5035552978515625
    4. '(paren' → logprob: -9.253555297851562
    5. '_out' → logprob: -11.628555297851562
    6. 'parent' → logprob: -11.753555297851562
    7. '(par' → logprob: -12.503555297851562
    8. '(s' → logprob: -12.628555297851562
    9. 'out' → logprob: -13.378555297851562
    10. '_parent' → logprob: -13.878555297851562

Token 2470: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.001169152557849884
    2. 'an' → logprob: -7.876169204711914
    3. 'ar' → logprob: -8.876169204711914
    4. 's' → logprob: -8.876169204711914
    5. '(s' → logprob: -8.876169204711914
    6. '('' → logprob: -9.626169204711914
    7. 'e' → logprob: -9.876169204711914
    8. 'enen' → logprob: -10.376169204711914
    9. 'paren' → logprob: -10.501169204711914
    10. 'es' → logprob: -10.876169204711914

Token 2471: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002072357019642368
    2. 's' → logprob: -8.50020694732666
    3. '(' → logprob: -13.12520694732666
    4. '```' → logprob: -13.75020694732666
    5. ' (' → logprob: -15.25020694732666
    6. '('' → logprob: -15.62520694732666
    7. ''s' → logprob: -16.875207901000977
    8. '   ' → logprob: -17.000207901000977
    9. '`s' → logprob: -17.000207901000977
    10. ')' → logprob: -17.500207901000977

Token 2472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06555400043725967
    2. '(s' → logprob: -2.815553903579712
    3. ',s' → logprob: -6.065554141998291
    4. '   ' → logprob: -7.065554141998291
    5. 's' → logprob: -8.690553665161133
    6. ',['' → logprob: -9.315553665161133
    7. ','' → logprob: -9.815553665161133
    8. ' ,' → logprob: -10.565553665161133
    9. '('' → logprob: -10.690553665161133
    10. '(' → logprob: -11.565553665161133

Token 2473: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.014355415478348732
    2. '['' → logprob: -4.264355182647705
    3. '{'' → logprob: -9.014355659484863
    4. '('*' → logprob: -9.764355659484863
    5. ' '*' → logprob: -11.514355659484863
    6. ' '*'' → logprob: -13.764355659484863
    7. '"*' → logprob: -14.264355659484863
    8. ' ['' → logprob: -14.889355659484863
    9. ''' → logprob: -15.389355659484863
    10. '*' → logprob: -15.889355659484863

Token 2474: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2534286379814148
    2. ')
' → logprob: -1.7534286975860596
    3. '')' → logprob: -3.7534286975860596
    4. ''*' → logprob: -4.3784284591674805
    5. '['' → logprob: -4.7534284591674805
    6. '')
' → logprob: -6.3784284591674805
    7. '*' → logprob: -6.7534284591674805
    8. ''' → logprob: -7.1284284591674805
    9. '+' → logprob: -7.7534284591674805
    10. ''-' → logprob: -8.00342845916748

Token 2475: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0225612074136734
    2. '   ' → logprob: -4.272561073303223
    3. 'res' → logprob: -5.647561073303223
    4. ' if' → logprob: -5.897561073303223
    5. '```' → logprob: -6.522561073303223
    6. 'for' → logprob: -8.522561073303223
    7. '
' → logprob: -8.522561073303223
    8. '``' → logprob: -9.647561073303223
    9. '`' → logprob: -10.772561073303223
    10. '#' → logprob: -10.897561073303223

Token 2476: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00010115911572938785
    2. '   ' → logprob: -9.500101089477539
    3. ' if' → logprob: -10.750101089477539
    4. '```' → logprob: -12.500101089477539
    5. '#' → logprob: -14.375101089477539
    6. 'If' → logprob: -14.750101089477539
    7. '
' → logprob: -16.37510108947754
    8. '``' → logprob: -17.37510108947754
    9. '	if' → logprob: -18.37510108947754
    10. '{
' → logprob: -18.37510108947754

Token 2477: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -3.5716304410016164e-05
    2. ' ops' → logprob: -10.250035285949707
    3. 'len' → logprob: -16.125036239624023
    4. '   ' → logprob: -16.625036239624023
    5. 'opts' → logprob: -17.000036239624023
    6. '.ops' → logprob: -17.500036239624023
    7. '
' → logprob: -17.875036239624023
    8. 'op' → logprob: -18.500036239624023
    9. '```' → logprob: -18.875036239624023
    10. '_ops' → logprob: -19.125036239624023

Token 2478: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007534817326813936
    2. ':
' → logprob: -5.007534980773926
    3. '==' → logprob: -8.007534980773926
    4. '=' → logprob: -8.007534980773926
    5. '[' → logprob: -10.007534980773926
    6. '   ' → logprob: -10.507534980773926
    7. ' =' → logprob: -10.757534980773926
    8. ' and' → logprob: -11.257534980773926
    9. '!=' → logprob: -11.382534980773926
    10. 'and' → logprob: -12.007534980773926

Token 2479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012373719364404678
    2. 'cells' → logprob: -7.501237392425537
    3. '```' → logprob: -7.751237392425537
    4. '   ' → logprob: -8.501236915588379
    5. '{
' → logprob: -11.001236915588379
    6. '
' → logprob: -11.376236915588379
    7. ' cells' → logprob: -11.626236915588379
    8. '``' → logprob: -11.751236915588379
    9. '           ' → logprob: -13.376236915588379
    10. 'c' → logprob: -13.751236915588379

Token 2480: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.03079833835363388
    2. '       ' → logprob: -3.5307984352111816
    3. '   ' → logprob: -6.905798435211182
    4. '```' → logprob: -10.655797958374023
    5. ' cells' → logprob: -11.405797958374023
    6. '``' → logprob: -13.155797958374023
    7. '
' → logprob: -13.280797958374023
    8. '           ' → logprob: -13.530797958374023
    9. '{
' → logprob: -13.780797958374023
    10. 'nodes' → logprob: -14.155797958374023

Token 2481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3560183644294739
    2. '=' → logprob: -1.231018304824829
    3. '=[]' → logprob: -5.106018543243408
    4. '=[]
' → logprob: -6.731018543243408
    5. 's' → logprob: -9.23101806640625
    6. 'cells' → logprob: -10.10601806640625
    7. '   ' → logprob: -10.10601806640625
    8. '[]' → logprob: -10.85601806640625
    9. '.append' → logprob: -10.85601806640625
    10. '_cells' → logprob: -11.23101806640625

Token 2482: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0031796174589544535
    2. '[]' → logprob: -5.753179550170898
    3. ' []
' → logprob: -13.503179550170898
    4. '[(' → logprob: -15.128179550170898
    5. '[]

' → logprob: -15.878179550170898
    6. '[' → logprob: -16.3781795501709
    7. '[])
' → logprob: -17.3781795501709
    8. '[
' → logprob: -18.1281795501709
    9. '([])
' → logprob: -18.6281795501709
    10. '['' → logprob: -18.8781795501709

Token 2483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002785384887829423
    2. '```' → logprob: -6.7527852058410645
    3. '           ' → logprob: -6.8777852058410645
    4. 'def' → logprob: -8.627785682678223
    5. '{
' → logprob: -8.877785682678223
    6. 'last' → logprob: -9.252785682678223
    7. '``' → logprob: -9.877785682678223
    8. 'for' → logprob: -10.002785682678223
    9. '   ' → logprob: -11.127785682678223
    10. '[' → logprob: -11.502785682678223

Token 2484: ' vals' (ID: 58985)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.002820685738697648
    2. 'val' → logprob: -6.2528204917907715
    3. '       ' → logprob: -7.6278204917907715
    4. 'def' → logprob: -8.25282096862793
    5. 'vals' (adapté à ' vals') → logprob: -9.00282096862793
    6. '
' → logprob: -11.87782096862793
    7. ' last' → logprob: -12.00282096862793
    8. 'pos' → logprob: -12.75282096862793
    9. '{
' → logprob: -13.50282096862793
    10. 'values' → logprob: -14.00282096862793

Token 2485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16060419380664825
    2. '=' → logprob: -1.9106042385101318
    3. '=[]' → logprob: -8.410604476928711
    4. '.append' → logprob: -9.535604476928711
    5. '=[]
' → logprob: -10.910604476928711
    6. '   ' → logprob: -11.160604476928711
    7. '<|end|>' → logprob: -11.160604476928711
    8. ',' → logprob: -12.535604476928711
    9. 's' → logprob: -12.535604476928711
    10. ')' → logprob: -12.660604476928711

Token 2486: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.023873891681432724
    2. '[]' → logprob: -3.773873805999756
    3. ' []
' → logprob: -7.398873805999756
    4. 'find' → logprob: -11.773874282836914
    5. ' []' → logprob: -12.148874282836914
    6. '[]

' → logprob: -13.773874282836914
    7. '[])
' → logprob: -14.523874282836914
    8. '=[]
' → logprob: -14.773874282836914
    9. '([])
' → logprob: -15.148874282836914
    10. '[' → logprob: -15.398874282836914

Token 2487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016349549405276775
    2. '           ' → logprob: -6.8766350746154785
    3. 'last' → logprob: -8.50163459777832
    4. 'def' → logprob: -9.12663459777832
    5. 'for' → logprob: -9.50163459777832
    6. '```' → logprob: -9.50163459777832
    7. '{
' → logprob: -9.87663459777832
    8. '   ' → logprob: -10.50163459777832
    9. 'next' → logprob: -11.00163459777832
    10. '``' → logprob: -11.37663459777832

Token 2488: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.00023488728038500994
    2. '       ' → logprob: -8.375234603881836
    3. ' last' → logprob: -12.750234603881836
    4. '
' → logprob: -14.125234603881836
    5. '   ' → logprob: -15.125234603881836
    6. 'def' → logprob: -15.750234603881836
    7. 'start' → logprob: -16.375234603881836
    8. '           ' → logprob: -16.875234603881836
    9. '```' → logprob: -16.875234603881836
    10. 'pos' → logprob: -17.750234603881836

Token 2489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011052886955440044
    2. ' =' → logprob: -4.511053085327148
    3. '0' → logprob: -12.261053085327148
    4. '```' → logprob: -15.011053085327148
    5. '=
' → logprob: -17.76105308532715
    6. 'for' → logprob: -17.76105308532715
    7. ' ' → logprob: -18.01105308532715
    8. 'def' → logprob: -18.13605308532715
    9. '[' → logprob: -18.38605308532715
    10. '_=' → logprob: -18.38605308532715

Token 2490: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -16.50010871887207
    4. '       ' → logprob: -16.62510871887207
    5. 'last' → logprob: -17.12510871887207
    6. '           ' → logprob: -17.62510871887207
    7. '=' → logprob: -18.18760871887207
    8. 'pos' → logprob: -18.25010871887207
    9. '```' → logprob: -18.56260871887207
    10. '۰' → logprob: -18.75010871887207

Token 2491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.750001907348633
    3. 'pos' → logprob: -14.000001907348633
    4. 'ops' → logprob: -15.250001907348633
    5. 'last' → logprob: -17.000001907348633
    6. 'op' → logprob: -17.750001907348633
    7. 'len' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '(' → logprob: -18.500001907348633
    10. '```' → logprob: -18.750001907348633

Token 2492: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2286709100008011
    2. 'for' → logprob: -1.6036709547042847
    3. '```' → logprob: -6.353671073913574
    4. '   ' → logprob: -7.228671073913574
    5. ' for' → logprob: -7.603671073913574
    6. '           ' → logprob: -8.353671073913574
    7. '``' → logprob: -11.103671073913574
    8. '<|end|>' → logprob: -11.478671073913574
    9. '
' → logprob: -12.353671073913574
    10. '	for' → logprob: -12.478671073913574

Token 2493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049490973353385925
    2. 'for' → logprob: -3.0494909286499023
    3. '           ' → logprob: -7.424490928649902
    4. '```' → logprob: -8.299490928649902
    5. '   ' → logprob: -10.049490928649902
    6. ' for' → logprob: -11.799490928649902
    7. '               ' → logprob: -12.299490928649902
    8. '``' → logprob: -14.299490928649902
    9. ' ' → logprob: -14.674490928649902
    10. '	for' → logprob: -15.049490928649902

Token 2494: ' last' (ID: 2174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006334475474432111
    2. '       ' → logprob: -7.375633239746094
    3. '```' → logprob: -12.375633239746094
    4. ' for' → logprob: -13.875633239746094
    5. '   ' → logprob: -14.125633239746094
    6. '           ' → logprob: -14.375633239746094
    7. '
' → logprob: -15.250633239746094
    8. '``' → logprob: -16.500633239746094
    9. 'For' → logprob: -17.375633239746094
    10. '	for' → logprob: -17.750633239746094

Token 2495: '_op' (ID: 20111)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05054236948490143
    2. ' =' → logprob: -3.0505423545837402
    3. '+=' → logprob: -7.05054235458374
    4. ',' → logprob: -8.300542831420898
    5. 'for' → logprob: -8.300542831420898
    6. ' +=' → logprob: -8.300542831420898
    7. '```' → logprob: -9.550542831420898
    8. '_pos' → logprob: -9.800542831420898
    9. 'pos' → logprob: -10.175542831420898
    10. '=
' → logprob: -10.550542831420898

Token 2496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759572386741638
    2. '=' → logprob: -0.8259572386741638
    3. ' +=' → logprob: -11.700957298278809
    4. '+=' → logprob: -12.075957298278809
    5. '```' → logprob: -13.700957298278809
    6. '   ' → logprob: -14.325957298278809
    7. ' =
' → logprob: -14.950957298278809
    8. '=
' → logprob: -14.950957298278809
    9. ',' → logprob: -15.700957298278809
    10. '    ' → logprob: -15.700957298278809

Token 2497: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5964478254318237
    2. ' None' → logprob: -0.8464478254318237
    3. 'pos' → logprob: -4.346447944641113
    4. '0' → logprob: -5.471447944641113
    5. ' pos' → logprob: -5.846447944641113
    6. ' ' → logprob: -9.596447944641113
    7. '1' → logprob: -10.096447944641113
    8. ' 
' → logprob: -10.096447944641113
    9. 'Pos' → logprob: -10.971447944641113
    10. ''' → logprob: -11.346447944641113

Token 2498: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20202910900115967
    2. 'for' → logprob: -1.7020291090011597
    3. '   ' → logprob: -8.20202922821045
    4. '```' → logprob: -8.70202922821045
    5. '           ' → logprob: -9.20202922821045
    6. ' for' → logprob: -9.57702922821045
    7. '``' → logprob: -13.45202922821045
    8. '	for' → logprob: -13.95202922821045
    9. '{
' → logprob: -14.32702922821045
    10. '               ' → logprob: -14.57702922821045

Token 2499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16244570910930634
    2. 'for' → logprob: -1.9124456644058228
    3. '```' → logprob: -6.787445545196533
    4. '           ' → logprob: -7.162445545196533
    5. ' for' → logprob: -8.662446022033691
    6. '   ' → logprob: -9.162446022033691
    7. '	for' → logprob: -11.537446022033691
    8. '               ' → logprob: -11.787446022033691
    9. '``' → logprob: -11.787446022033691
    10. '<|end|>' → logprob: -12.287446022033691

Token 2500: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015141464537009597
    2. '       ' → logprob: -6.501513957977295
    3. ' for' → logprob: -11.751514434814453
    4. '           ' → logprob: -13.376514434814453
    5. '```' → logprob: -13.626514434814453
    6. '   ' → logprob: -13.876514434814453
    7. '	for' → logprob: -15.626514434814453
    8. '``' → logprob: -17.376514434814453
    9. '               ' → logprob: -18.126514434814453
    10. '
' → logprob: -18.501514434814453

Token 2501: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.000558512459974736
    2. ' pos' → logprob: -7.500558376312256
    3. '(pos' → logprob: -12.125558853149414
    4. '   ' → logprob: -17.000558853149414
    5. '       ' → logprob: -18.000558853149414
    6. '	pos' → logprob: -18.375558853149414
    7. '           ' → logprob: -18.750558853149414
    8. 'position' → logprob: -19.125558853149414
    9. '[pos' → logprob: -19.750558853149414
    10. 'op' → logprob: -20.375558853149414

Token 2502: ',ch' (ID: 165575)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.624309778213501
    2. ',' → logprob: -0.999309778213501
    3. ' in' → logprob: -2.499309778213501
    4. '           ' → logprob: -4.749309539794922
    5. ',in' → logprob: -6.499309539794922
    6. ':
' → logprob: -7.499309539794922
    7. '=' → logprob: -7.749309539794922
    8. ' ,' → logprob: -7.999309539794922
    9. '   ' → logprob: -8.124309539794922
    10. '       ' → logprob: -8.124309539794922

Token 2503: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6952098608016968
    2. ' in' → logprob: -0.6952098608016968
    3. '           ' → logprob: -7.070209980010986
    4. ':' → logprob: -7.570209980010986
    5. ':
' → logprob: -8.320209503173828
    6. '=' → logprob: -8.945209503173828
    7. ' =' → logprob: -9.445209503173828
    8. '   ' → logprob: -9.695209503173828
    9. '       ' → logprob: -10.320209503173828
    10. '```' → logprob: -10.320209503173828

Token 2504: ' ops' (ID: 26973)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.035298388451337814
    2. 'range' → logprob: -4.4102983474731445
    3. ' last' → logprob: -4.5352983474731445
    4. '(last' → logprob: -5.0352983474731445
    5. 'pos' → logprob: -6.1602983474731445
    6. ' range' → logprob: -6.6602983474731445
    7. '[last' → logprob: -7.0352983474731445
    8. ' in' → logprob: -8.285298347473145
    9. '0' → logprob: -8.410298347473145
    10. 'in' → logprob: -8.785298347473145

Token 2505: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7480066418647766
    2. '           ' → logprob: -1.1230065822601318
    3. ':
' → logprob: -1.6230065822601318
    4. '   ' → logprob: -5.998006820678711
    5. '       ' → logprob: -7.373006820678711
    6. ',' → logprob: -8.373006820678711
    7. '=' → logprob: -8.623006820678711
    8. '):
' → logprob: -8.998006820678711
    9. '[' → logprob: -9.123006820678711
    10. '```' → logprob: -9.373006820678711

Token 2506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023398506455123425
    2. '```' → logprob: -6.502339839935303
    3. '{
' → logprob: -8.252340316772461
    4. '       ' → logprob: -8.502340316772461
    5. 'sub' → logprob: -8.627340316772461
    6. '   ' → logprob: -9.502340316772461
    7. '               ' → logprob: -9.877340316772461
    8. '#' → logprob: -10.627340316772461
    9. '
' → logprob: -11.127340316772461
    10. '[' → logprob: -12.252340316772461

Token 2507: ' sub' (ID: 1543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48243892192840576
    2. 'sub' (adapté à ' sub') → logprob: -0.9824389219284058
    3. '       ' → logprob: -5.482439041137695
    4. '               ' → logprob: -6.107439041137695
    5. '```' → logprob: -7.107439041137695
    6. '   ' → logprob: -7.982439041137695
    7. ' sub' → logprob: -8.357439041137695
    8. '
' → logprob: -8.857439041137695
    9. '_sub' → logprob: -8.982439041137695
    10. '#' → logprob: -9.107439041137695

Token 2508: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -13.12500286102295
    3. '_line' → logprob: -14.50000286102295
    4. '_cells' → logprob: -16.250003814697266
    5. '_LINES' → logprob: -16.250003814697266
    6. '
' → logprob: -16.625003814697266
    7. 'Lines' → logprob: -16.750003814697266
    8. '``' → logprob: -16.875003814697266
    9. '_tokens' → logprob: -17.000003814697266
    10. '_' → logprob: -17.000003814697266

Token 2509: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04677623510360718
    2. ' =' → logprob: -3.171776294708252
    3. '           ' → logprob: -5.671776294708252
    4. '```' → logprob: -9.046775817871094
    5. '.append' → logprob: -9.796775817871094
    6. '[' → logprob: -10.546775817871094
    7. '       ' → logprob: -11.046775817871094
    8. '=sub' → logprob: -11.171775817871094
    9. '=line' → logprob: -11.171775817871094
    10. '=[]' → logprob: -11.171775817871094

Token 2510: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.049246225506067276
    2. '[]' → logprob: -3.049246311187744
    3. ' []
' → logprob: -8.049245834350586
    4. '[' → logprob: -8.174245834350586
    5. '   ' → logprob: -10.674245834350586
    6. '       ' → logprob: -11.299245834350586
    7. '[
' → logprob: -11.924245834350586
    8. ' []' → logprob: -12.674245834350586
    9. '[line' → logprob: -13.299245834350586
    10. '[]

' → logprob: -13.549245834350586

Token 2511: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25271278619766235
    2. 'for' → logprob: -1.5027127265930176
    3. '               ' → logprob: -7.377712726593018
    4. '```' → logprob: -9.252713203430176
    5. ' for' → logprob: -10.002713203430176
    6. '       ' → logprob: -11.627713203430176
    7. '   ' → logprob: -11.877713203430176
    8. '[' → logprob: -14.877713203430176
    9. '	for' → logprob: -15.377713203430176
    10. '``' → logprob: -15.752713203430176

Token 2512: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002993035828694701
    2. '           ' → logprob: -6.002993106842041
    3. '               ' → logprob: -8.002992630004883
    4. ' for' → logprob: -8.627992630004883
    5. '   ' → logprob: -13.252992630004883
    6. '       ' → logprob: -14.002992630004883
    7. '```' → logprob: -14.502992630004883
    8. '                   ' → logprob: -14.877992630004883
    9. '	for' → logprob: -16.002992630004883
    10. 'For' → logprob: -17.252992630004883

Token 2513: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -2.165027217415627e-05
    2. ' row' → logprob: -11.000021934509277
    3. 'range' → logprob: -12.250021934509277
    4. '	row' → logprob: -17.50002098083496
    5. '(row' → logprob: -18.00002098083496
    6. '$row' → logprob: -18.50002098083496
    7. '[row' → logprob: -19.87502098083496
    8. ' ' → logprob: -20.12502098083496
    9. '   ' → logprob: -20.50002098083496
    10. ',row' → logprob: -21.00002098083496

Token 2514: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22548340260982513
    2. ' in' → logprob: -1.6004834175109863
    3. '           ' → logprob: -9.725482940673828
    4. '               ' → logprob: -13.225482940673828
    5. '       ' → logprob: -13.350482940673828
    6. '```' → logprob: -13.350482940673828
    7. 'range' → logprob: -14.100482940673828
    8. ' ' → logprob: -14.100482940673828
    9. '[' → logprob: -14.475482940673828
    10. '   ' → logprob: -14.475482940673828

Token 2515: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002043748099822551
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -14.125204086303711
    4. 'row' → logprob: -17.00020408630371
    5. '   ' → logprob: -17.87520408630371
    6. '
' → logprob: -17.87520408630371
    7. ' ' → logprob: -19.37520408630371
    8. '       ' → logprob: -19.37520408630371
    9. '```' → logprob: -19.50020408630371
    10. 'in' → logprob: -19.62520408630371

Token 2516: '(h' (ID: 8120)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05119745433330536
    2. ' range' → logprob: -3.0511975288391113
    3. 'h' → logprob: -6.176197528839111
    4. '(h' → logprob: -7.676197528839111
    5. '(range' → logprob: -10.176197052001953
    6. 'row' → logprob: -11.801197052001953
    7. ' h' → logprob: -11.926197052001953
    8. '0' → logprob: -11.926197052001953
    9. '[h' → logprob: -13.676197052001953
    10. '(' → logprob: -14.051197052001953

Token 2517: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6007688641548157
    2. '):
' → logprob: -0.9757688641548157
    3. '           ' → logprob: -2.725768804550171
    4. ':
' → logprob: -5.72576904296875
    5. '[row' → logprob: -6.60076904296875
    6. '       ' → logprob: -6.97576904296875
    7. ':' → logprob: -7.10076904296875
    8. '):' → logprob: -7.47576904296875
    9. '   ' → logprob: -7.97576904296875
    10. '                   ' → logprob: -7.97576904296875

Token 2518: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04057620093226433
    2. 'sub' → logprob: -3.290576219558716
    3. '```' → logprob: -6.540575981140137
    4. '           ' → logprob: -6.915575981140137
    5. '[sub' → logprob: -10.540575981140137
    6. '   ' → logprob: -10.915575981140137
    7. '(sub' → logprob: -10.915575981140137
    8. ' sub' → logprob: -11.540575981140137
    9. '_sub' → logprob: -12.165575981140137
    10. '.sub' → logprob: -12.415575981140137

Token 2519: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.02911306358873844
    2. '               ' → logprob: -3.6541130542755127
    3. '           ' → logprob: -6.029113292694092
    4. '```' → logprob: -8.654112815856934
    5. ' sub' → logprob: -9.529112815856934
    6. '   ' → logprob: -9.904112815856934
    7. '	sub' → logprob: -9.904112815856934
    8. '(sub' → logprob: -10.779112815856934
    9. '.sub' → logprob: -11.529112815856934
    10. '[sub' → logprob: -11.904112815856934

Token 2520: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.452426608419046e-05
    2. '```' → logprob: -10.50003433227539
    3. '           ' → logprob: -13.37503433227539
    4. 'Lines' → logprob: -13.50003433227539
    5. '[' → logprob: -14.00003433227539
    6. '   ' → logprob: -14.62503433227539
    7. '       ' → logprob: -14.75003433227539
    8. 'def' → logprob: -15.12503433227539
    9. '_rows' → logprob: -15.37503433227539
    10. '_LINES' → logprob: -15.37503433227539

Token 2521: '.append' (ID: 3709)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06968096643686295
    2. '.append' → logprob: -3.06968092918396
    3. '[row' → logprob: -4.819681167602539
    4. '           ' → logprob: -4.819681167602539
    5. '```' → logprob: -6.694681167602539
    6. ':' → logprob: -7.694681167602539
    7. '[last' → logprob: -7.694681167602539
    8. 'append' → logprob: -7.694681167602539
    9. '][' → logprob: -7.944681167602539
    10. ')' → logprob: -8.069681167602539

Token 2522: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.005035336595028639
    2. '(lines' → logprob: -6.005035400390625
    3. ' lines' → logprob: -6.005035400390625
    4. 'rows' → logprob: -9.380035400390625
    5. '	lines' → logprob: -12.755035400390625
    6. '.lines' → logprob: -13.880035400390625
    7. 's' → logprob: -14.505035400390625
    8. '           ' → logprob: -14.755035400390625
    9. '(rows' → logprob: -15.005035400390625
    10. '               ' → logprob: -16.130035400390625

Token 2523: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.62500286102295
    3. '           ' → logprob: -13.87500286102295
    4. '(row' → logprob: -16.000003814697266
    5. ',row' → logprob: -16.125003814697266
    6. '       ' → logprob: -16.250003814697266
    7. '[
' → logprob: -16.500003814697266
    8. '[line' → logprob: -16.500003814697266
    9. '```' → logprob: -16.500003814697266
    10. 'row' → logprob: -16.625003814697266

Token 2524: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.0008845492266118526
    2. '[row' → logprob: -7.250884532928467
    3. '[' → logprob: -9.250885009765625
    4. ')[' → logprob: -10.625885009765625
    5. '][' → logprob: -10.750885009765625
    6. '[left' → logprob: -11.250885009765625
    7. '[line' → logprob: -12.250885009765625
    8. '   ' → logprob: -12.375885009765625
    9. '[current' → logprob: -12.875885009765625
    10. '           ' → logprob: -12.875885009765625

Token 2525: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -4.35837464465294e-05
    2. '[last' → logprob: -10.250043869018555
    3. ' last' → logprob: -11.750043869018555
    4. '(last' → logprob: -15.125043869018555
    5. ',last' → logprob: -18.625043869018555
    6. '
' → logprob: -18.625043869018555
    7. '	last' → logprob: -19.625043869018555
    8. 'Last' → logprob: -19.625043869018555
    9. ':last' → logprob: -19.625043869018555
    10. '_last' → logprob: -20.625043869018555

Token 2526: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.79811754100956e-05
    2. '           ' → logprob: -11.375038146972656
    3. ' :' → logprob: -12.125038146972656
    4. '   ' → logprob: -12.250038146972656
    5. '[pos' → logprob: -12.375038146972656
    6. '                   ' → logprob: -12.875038146972656
    7. '               ' → logprob: -13.000038146972656
    8. '       ' → logprob: -13.250038146972656
    9. 'pos' → logprob: -13.875038146972656
    10. '```' → logprob: -14.125038146972656

Token 2527: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.9361264946837764e-07
    2. ' pos' → logprob: -15.625
    3. '	pos' → logprob: -20.625
    4. '   ' → logprob: -21.625
    5. '(pos' → logprob: -21.75
    6. '
' → logprob: -22.0
    7. ',pos' → logprob: -22.25
    8. 'position' → logprob: -22.375
    9. 'p' → logprob: -22.5
    10. '           ' → logprob: -22.75

Token 2528: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.16071553528308868
    2. '])
' → logprob: -1.9107155799865723
    3. '+' → logprob: -7.660715579986572
    4. ']' → logprob: -11.785715103149414
    5. '])
' → logprob: -12.035715103149414
    6. '       ' → logprob: -13.785715103149414
    7. ']);' → logprob: -13.785715103149414
    8. '])

' → logprob: -14.285715103149414
    9. ')' → logprob: -14.535715103149414
    10. ']+' → logprob: -14.660715103149414

Token 2529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0063623166643083096
    2. '       ' → logprob: -5.381362438201904
    3. '```' → logprob: -7.256362438201904
    4. '               ' → logprob: -7.381362438201904
    5. ')' → logprob: -8.131361961364746
    6. '[' → logprob: -10.131361961364746
    7. '   ' → logprob: -11.256361961364746
    8. '+' → logprob: -11.881361961364746
    9. '<|end|>' → logprob: -11.881361961364746
    10. '                   ' → logprob: -11.881361961364746

Token 2530: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.9148058295249939
    2. '```' → logprob: -1.7898058891296387
    3. 'tokens' → logprob: -2.0398058891296387
    4. ' sub' → logprob: -2.1648058891296387
    5. '           ' → logprob: -2.7898058891296387
    6. '[' → logprob: -4.039805889129639
    7. 'lines' → logprob: -4.164805889129639
    8. '_tokens' → logprob: -4.289805889129639
    9. 'last' → logprob: -4.414805889129639
    10. ' last' → logprob: -4.789805889129639

Token 2531: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.1875571544806007e-05
    2. '```' → logprob: -11.750011444091797
    3. 'Lines' → logprob: -13.125011444091797
    4. '_LINES' → logprob: -13.750011444091797
    5. '_' → logprob: -16.375011444091797
    6. '``' → logprob: -16.375011444091797
    7. '_rows' → logprob: -16.500011444091797
    8. '+' → logprob: -16.625011444091797
    9. '   ' → logprob: -16.750011444091797
    10. '...' → logprob: -16.875011444091797

Token 2532: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759462714195251
    2. ' =' → logprob: -0.8259462714195251
    3. '_' → logprob: -13.075945854187012
    4. '.append' → logprob: -13.700945854187012
    5. '[' → logprob: -14.450945854187012
    6. '   ' → logprob: -14.575945854187012
    7. '    ' → logprob: -14.575945854187012
    8. '        ' → logprob: -15.075945854187012
    9. ')' → logprob: -15.200945854187012
    10. '       ' → logprob: -15.325945854187012

Token 2533: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.1602269560098648
    2. ' trim' → logprob: -1.9102269411087036
    3. '_trim' → logprob: -13.785226821899414
    4. '(trim' → logprob: -14.160226821899414
    5. '.trim' → logprob: -14.285226821899414
    6. 'strip' → logprob: -15.035226821899414
    7. 'Trim' → logprob: -16.910226821899414
    8. '```' → logprob: -17.160226821899414
    9. ' strip' → logprob: -18.410226821899414
    10. '[' → logprob: -18.660226821899414

Token 2534: '(sub' (ID: 19764)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.10067760944366455
    2. '(sub' → logprob: -2.350677490234375
    3. '           ' → logprob: -8.475677490234375
    4. '[sub' → logprob: -8.850677490234375
    5. '	sub' → logprob: -10.600677490234375
    6. '_sub' → logprob: -10.850677490234375
    7. '.sub' → logprob: -10.850677490234375
    8. '               ' → logprob: -11.350677490234375
    9. '{sub' → logprob: -11.350677490234375
    10. ' sub' → logprob: -11.350677490234375

Token 2535: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.06821779161691666
    2. '(sub' → logprob: -2.8182177543640137
    3. '[sub' → logprob: -5.568217754364014
    4. 'sub' → logprob: -6.193217754364014
    5. '_sub' → logprob: -8.443218231201172
    6. '_rows' → logprob: -9.318218231201172
    7. '```' → logprob: -10.943218231201172
    8. '(lines' → logprob: -11.568218231201172
    9. '{sub' → logprob: -11.693218231201172
    10. ' sub' → logprob: -12.443218231201172

Token 2536: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014740299433469772
    2. ')
' → logprob: -5.264740467071533
    3. '<|end|>' → logprob: -5.264740467071533
    4. '       ' → logprob: -6.264740467071533
    5. '<|end|>' → logprob: -6.889740467071533
    6. '[' → logprob: -8.264739990234375
    7. '           ' → logprob: -8.264739990234375
    8. '   ' → logprob: -8.264739990234375
    9. '```' → logprob: -8.889739990234375
    10. ',' → logprob: -9.139739990234375

Token 2537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015909546986222267
    2. '       ' → logprob: -4.265909671783447
    3. 'c' → logprob: -7.390909671783447
    4. '   ' → logprob: -7.640909671783447
    5. ' c' → logprob: -7.890909671783447
    6. '```' → logprob: -9.890909194946289
    7. '               ' → logprob: -10.265909194946289
    8. '          ' → logprob: -10.265909194946289
    9. '         ' → logprob: -10.890909194946289
    10. ' ' → logprob: -11.265909194946289

Token 2538: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -2.641841820150148e-05
    2. '           ' → logprob: -10.62502670288086
    3. ' c' → logprob: -13.12502670288086
    4. '       ' → logprob: -17.75002670288086
    5. '               ' → logprob: -17.75002670288086
    6. '	c' → logprob: -17.87502670288086
    7. '```' → logprob: -18.00002670288086
    8. ')c' → logprob: -18.50002670288086
    9. '   ' → logprob: -18.75002670288086
    10. '_c' → logprob: -19.75002670288086

Token 2539: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.0005580356228165329
    2. ',' → logprob: -7.500557899475098
    3. ',val' → logprob: -12.625557899475098
    4. ',c' → logprob: -13.750557899475098
    5. ' ,' → logprob: -14.750557899475098
    6. ',value' → logprob: -16.000558853149414
    7. '	v' → logprob: -18.375558853149414
    8. ',w' → logprob: -18.375558853149414
    9. ',k' → logprob: -18.500558853149414
    10. '           ' → logprob: -18.625558853149414

Token 2540: ' =' (ID: 314)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.3155169188976288
    2. ',' → logprob: -1.3155169486999512
    3. ',c' → logprob: -6.315516948699951
    4. '=' → logprob: -7.940516948699951
    5. ',val' → logprob: -11.065516471862793
    6. ',k' → logprob: -11.690516471862793
    7. ' ,' → logprob: -11.940516471862793
    8. '           ' → logprob: -12.065516471862793
    9. ',value' → logprob: -12.065516471862793
    10. ',u' → logprob: -12.190516471862793

Token 2541: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.006715370807796717
    2. ' parse' → logprob: -5.006715297698975
    3. '(parse' → logprob: -17.756715774536133
    4. '	parse' → logprob: -18.256715774536133
    5. '_parse' → logprob: -19.631715774536133
    6. '.parse' → logprob: -20.756715774536133
    7. '=parse' → logprob: -20.881715774536133
    8. '```' → logprob: -21.256715774536133
    9. 'parser' → logprob: -21.881715774536133
    10. 'par' → logprob: -22.006715774536133

Token 2542: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0012224898673593998
    2. 'cell' → logprob: -7.251222610473633
    3. '_cells' → logprob: -8.376222610473633
    4. 'c' → logprob: -9.251222610473633
    5. 'cells' → logprob: -9.376222610473633
    6. 'sub' → logprob: -10.001222610473633
    7. '(c' → logprob: -10.251222610473633
    8. '(sub' → logprob: -11.376222610473633
    9. '_sub' → logprob: -13.376222610473633
    10. 'Cell' → logprob: -13.376222610473633

Token 2543: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.039255157113075256
    2. 'sub' → logprob: -3.289255142211914
    3. '[sub' → logprob: -6.789255142211914
    4. '{sub' → logprob: -9.914255142211914
    5. '	sub' → logprob: -11.789255142211914
    6. '_sub' → logprob: -11.914255142211914
    7. '=sub' → logprob: -12.039255142211914
    8. '```' → logprob: -12.039255142211914
    9. '           ' → logprob: -12.789255142211914
    10. ' sub' → logprob: -13.039255142211914

Token 2544: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0012827336322516203
    2. 'sub' → logprob: -7.001282691955566
    3. '(sub' → logprob: -8.501282691955566
    4. '_rows' → logprob: -9.251282691955566
    5. '[sub' → logprob: -10.251282691955566
    6. '_cells' → logprob: -11.376282691955566
    7. '_sub' → logprob: -11.626282691955566
    8. '```' → logprob: -12.626282691955566
    9. 'lines' → logprob: -13.001282691955566
    10. 's' → logprob: -13.751282691955566

Token 2545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009839815320447087
    2. ',c' → logprob: -7.500984191894531
    3. ',last' → logprob: -8.250984191894531
    4. ',row' → logprob: -10.000984191894531
    5. ',line' → logprob: -10.500984191894531
    6. '           ' → logprob: -10.500984191894531
    7. '(lines' → logprob: -10.750984191894531
    8. ',v' → logprob: -11.500984191894531
    9. ',current' → logprob: -12.000984191894531
    10. ' ,' → logprob: -12.250984191894531

Token 2546: ' base' (ID: 3611)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0056935385800898075
    2. 'base' → logprob: -6.130693435668945
    3. ' lines' → logprob: -6.255693435668945
    4. 'rows' → logprob: -7.130693435668945
    5. 'c' → logprob: -7.880693435668945
    6. 'primary' → logprob: -9.130693435668945
    7. 'last' → logprob: -9.255693435668945
    8. '(lines' → logprob: -9.255693435668945
    9. 'cells' → logprob: -9.755693435668945
    10. 'v' → logprob: -10.630693435668945

Token 2547: '_line' (ID: 14418)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.01064192783087492
    2. '_line' → logprob: -5.885642051696777
    3. '_rows' → logprob: -6.385642051696777
    4. ')' → logprob: -6.510642051696777
    5. '[' → logprob: -7.135642051696777
    6. '[line' → logprob: -7.135642051696777
    7. '```' → logprob: -8.135642051696777
    8. '[pos' → logprob: -8.260642051696777
    9. '   ' → logprob: -8.260642051696777
    10. '[last' → logprob: -8.510642051696777

Token 2548: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6358057856559753
    2. '           ' → logprob: -0.7608057856559753
    3. ')' → logprob: -5.885805606842041
    4. '),' → logprob: -8.2608060836792
    5. ',
' → logprob: -9.5108060836792
    6. '       ' → logprob: -10.6358060836792
    7. '               ' → logprob: -11.1358060836792
    8. ')
' → logprob: -11.2608060836792
    9. ',)' → logprob: -12.0108060836792
    10. ',None' → logprob: -12.2608060836792

Token 2549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018887832993641496
    2. '<|end|>' → logprob: -9.750188827514648
    3. '               ' → logprob: -10.000188827514648
    4. '       ' → logprob: -10.125188827514648
    5. '          ' → logprob: -10.625188827514648
    6. ',' → logprob: -11.875188827514648
    7. '         ' → logprob: -13.000188827514648
    8. '   ' → logprob: -13.250188827514648
    9. '```' → logprob: -13.375188827514648
    10. '                   ' → logprob: -13.875188827514648

Token 2550: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004967966582626104
    2. 'if' (adapté à ' if') → logprob: -5.379968166351318
    3. '               ' → logprob: -8.75496768951416
    4. ' if' → logprob: -9.00496768951416
    5. '       ' → logprob: -10.87996768951416
    6. 'return' → logprob: -11.37996768951416
    7. '0' → logprob: -11.50496768951416
    8. 'None' → logprob: -11.75496768951416
    9. '   ' → logprob: -12.25496768951416
    10. 'If' → logprob: -12.37996768951416

Token 2551: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008046258008107543
    2. ' c' → logprob: -7.125804424285889
    3. 'None' → logprob: -15.750804901123047
    4. '	c' → logprob: -17.875804901123047
    5. '(c' → logprob: -18.625804901123047
    6. ')c' → logprob: -18.875804901123047
    7. '   ' → logprob: -19.000804901123047
    8. '           ' → logprob: -19.750804901123047
    9. '$c' → logprob: -19.875804901123047
    10. '_c' → logprob: -20.375804901123047

Token 2552: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3887159526348114
    2. 'is' → logprob: -1.1387159824371338
    3. 'None' → logprob: -6.888715744018555
    4. '=None' → logprob: -8.888715744018555
    5. '           ' → logprob: -9.013715744018555
    6. '[' → logprob: -9.138715744018555
    7. ')is' → logprob: -9.138715744018555
    8. ' None' → logprob: -9.513715744018555
    9. '==' → logprob: -9.638715744018555
    10. ')' → logprob: -9.638715744018555

Token 2553: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3225920796394348
    2. ' None' → logprob: -1.32259202003479
    3. ' not' → logprob: -4.822592258453369
    4. 'not' → logprob: -6.697592258453369
    5. '_None' → logprob: -12.947591781616211
    6. '=None' → logprob: -13.072591781616211
    7. 'Not' → logprob: -13.697591781616211
    8. '(None' → logprob: -13.947591781616211
    9. 'none' → logprob: -15.572591781616211
    10. '_none' → logprob: -15.572591781616211

Token 2554: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1657114028930664
    2. ':' → logprob: -2.0407114028930664
    3. '           ' → logprob: -4.290711402893066
    4. ',' → logprob: -5.665711402893066
    5. ':
' → logprob: -6.415711402893066
    6. '.' → logprob: -7.040711402893066
    7. ')' → logprob: -7.540711402893066
    8. '                   ' → logprob: -7.915711402893066
    9. '                       ' → logprob: -8.415711402893066
    10. '	           ' → logprob: -8.415711402893066

Token 2555: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029107891023159027
    2. 'continue' → logprob: -5.877910614013672
    3. ' continue' → logprob: -10.377910614013672
    4. '                   ' → logprob: -10.877910614013672
    5. '```' → logprob: -10.877910614013672
    6. '           ' → logprob: -11.377910614013672
    7. '                       ' → logprob: -12.127910614013672
    8. '	continue' → logprob: -12.627910614013672
    9. '_continue' → logprob: -12.752910614013672
    10. '	           ' → logprob: -13.002910614013672

Token 2556: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16712065041065216
    2. 'continue' (adapté à ' continue') → logprob: -1.9171206951141357
    3. ' continue' → logprob: -5.042120456695557
    4. '           ' → logprob: -8.167120933532715
    5. '	continue' → logprob: -9.917120933532715
    6. '_continue' → logprob: -10.667120933532715
    7. '                   ' → logprob: -10.792120933532715
    8. '	           ' → logprob: -10.917120933532715
    9. '   ' → logprob: -12.542120933532715
    10. '	       ' → logprob: -12.792120933532715

Token 2557: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045379105722531676
    2. '               ' → logprob: -7.875453948974609
    3. '       ' → logprob: -10.37545394897461
    4. '		' → logprob: -11.00045394897461
    5. '```' → logprob: -11.75045394897461
    6. '<|end|>' → logprob: -11.75045394897461
    7. '	       ' → logprob: -12.50045394897461
    8. '   ' → logprob: -13.62545394897461
    9. '                   ' → logprob: -14.00045394897461
    10. '
' → logprob: -14.50045394897461

Token 2558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030049216002225876
    2. '               ' → logprob: -3.5300493240356445
    3. 'cells' → logprob: -8.280049324035645
    4. '```' → logprob: -10.405049324035645
    5. '       ' → logprob: -11.780049324035645
    6. ' cells' → logprob: -12.780049324035645
    7. 'tokens' → logprob: -13.780049324035645
    8. '                   ' → logprob: -13.905049324035645
    9. '   ' → logprob: -15.155049324035645
    10. '``' → logprob: -15.405049324035645

Token 2559: ' cells' (ID: 11242)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012774028815329075
    2. 'cells' (adapté à ' cells') → logprob: -4.3877739906311035
    3. '               ' → logprob: -8.512774467468262
    4. '       ' → logprob: -10.512774467468262
    5. '```' → logprob: -10.512774467468262
    6. ' cells' → logprob: -12.137774467468262
    7. '   ' → logprob: -13.387774467468262
    8. '          ' → logprob: -14.637774467468262
    9. '``' → logprob: -14.887774467468262
    10. '                   ' → logprob: -15.262774467468262

Token 2560: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0025926579255610704
    2. '.' → logprob: -6.00259256362915
    3. '           ' → logprob: -9.252593040466309
    4. '.app' → logprob: -11.252593040466309
    5. '.add' → logprob: -13.002593040466309
    6. '.push' → logprob: -13.627593040466309
    7. ' .' → logprob: -14.002593040466309
    8. '       ' → logprob: -14.252593040466309
    9. '.insert' → logprob: -14.377593040466309
    10. '.pop' → logprob: -14.877593040466309

Token 2561: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.007740193046629429
    2. '((' → logprob: -5.007740020751953
    3. ' (' → logprob: -7.007740020751953
    4. '(C' → logprob: -9.132740020751953
    5. '(' → logprob: -12.007740020751953
    6. '   ' → logprob: -13.007740020751953
    7. ' ' → logprob: -14.132740020751953
    8. ',' → logprob: -14.257740020751953
    9. '
' → logprob: -14.382740020751953
    10. '`' → logprob: -15.007740020751953

Token 2562: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.704273118884885e-07
    2. ' c' → logprob: -14.750000953674316
    3. '(c' → logprob: -15.375000953674316
    4. ')c' → logprob: -17.375
    5. '	c' → logprob: -19.125
    6. '   ' → logprob: -19.5
    7. '
' → logprob: -19.625
    8. '$c' → logprob: -19.75
    9. '[c' → logprob: -20.125
    10. '```' → logprob: -20.375

Token 2563: ',v' (ID: 30680)
  Prédit: ',ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',ch' → logprob: -0.2584545314311981
    2. ',' → logprob: -1.5084545612335205
    3. ',v' → logprob: -5.383454322814941
    4. ',c' → logprob: -6.633454322814941
    5. ',val' → logprob: -8.383454322814941
    6. ',
' → logprob: -8.758454322814941
    7. ')' → logprob: -9.383454322814941
    8. ',char' → logprob: -9.633454322814941
    9. '[ch' → logprob: -12.008454322814941
    10. 'ch' → logprob: -12.008454322814941

Token 2564: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09251555055379868
    2. '           ' → logprob: -2.717515468597412
    3. ')
' → logprob: -3.967515468597412
    4. ',' → logprob: -6.092515468597412
    5. '       ' → logprob: -7.717515468597412
    6. '               ' → logprob: -8.09251594543457
    7. ')c' → logprob: -8.59251594543457
    8. '),' → logprob: -9.71751594543457
    9. ',c' → logprob: -10.46751594543457
    10. '                   ' → logprob: -10.71751594543457

Token 2565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002879880368709564
    2. 'cells' → logprob: -6.002880096435547
    3. '       ' → logprob: -8.127880096435547
    4. '               ' → logprob: -10.502880096435547
    5. '```' → logprob: -10.502880096435547
    6. ' cells' → logprob: -10.627880096435547
    7. '   ' → logprob: -11.627880096435547
    8. '          ' → logprob: -12.377880096435547
    9. '            
' → logprob: -12.877880096435547
    10. '[' → logprob: -12.877880096435547

Token 2566: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -6.158350151963532e-05
    2. ' cells' → logprob: -9.875061988830566
    3. 'vals' → logprob: -12.000061988830566
    4. '           ' → logprob: -13.500061988830566
    5. 'c' → logprob: -13.750061988830566
    6. '.cells' → logprob: -14.125061988830566
    7. '   ' → logprob: -15.625061988830566
    8. '
' → logprob: -15.875061988830566
    9. '       ' → logprob: -16.12506103515625
    10. 'codes' → logprob: -16.37506103515625

Token 2567: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0035113340709358454
    2. 'append' → logprob: -5.753511428833008
    3. '.' → logprob: -8.628511428833008
    4. '           ' → logprob: -10.378511428833008
    5. '_append' → logprob: -10.753511428833008
    6. 'Append' → logprob: -10.878511428833008
    7. '.
' → logprob: -11.128511428833008
    8. '.app' → logprob: -11.253511428833008
    9. '+=' → logprob: -11.628511428833008
    10. '
' → logprob: -11.628511428833008

Token 2568: '(ch' (ID: 15574)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.11336260288953781
    2. ''*' → logprob: -2.4883625507354736
    3. '(ch' → logprob: -3.9883625507354736
    4. '('*' → logprob: -6.238362789154053
    5. ''ch' → logprob: -6.238362789154053
    6. '(' → logprob: -7.113362789154053
    7. ' ch' → logprob: -7.738362789154053
    8. '`' → logprob: -8.988362312316895
    9. ''' → logprob: -9.238362312316895
    10. ' '*'' → logprob: -9.738362312316895

Token 2569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19682535529136658
    2. '<|end|>' → logprob: -2.5718252658843994
    3. '           ' → logprob: -2.6968252658843994
    4. ',' → logprob: -4.0718255043029785
    5. '       ' → logprob: -5.3218255043029785
    6. '<|end|>' → logprob: -5.9468255043029785
    7. '[' → logprob: -6.5718255043029785
    8. ''' → logprob: -6.9468255043029785
    9. '	       ' → logprob: -6.9468255043029785
    10. ' ' → logprob: -7.0718255043029785

Token 2570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14542081952095032
    2. '       ' → logprob: -3.020420789718628
    3. '<|end|>' → logprob: -3.020420789718628
    4. '[' → logprob: -3.895420789718628
    5. '[
' → logprob: -5.770421028137207
    6. '		' → logprob: -5.770421028137207
    7. '   ' → logprob: -6.520421028137207
    8. '	       ' → logprob: -6.895421028137207
    9. '[last' → logprob: -7.145421028137207
    10. ' ' → logprob: -7.270421028137207

Token 2571: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.055715177208185196
    2. '           ' → logprob: -3.0557150840759277
    3. ' last' → logprob: -5.055715084075928
    4. '       ' → logprob: -8.180715560913086
    5. '               ' → logprob: -9.055715560913086
    6. '	last' → logprob: -9.180715560913086
    7. '[last' → logprob: -9.555715560913086
    8. '(last' → logprob: -9.555715560913086
    9. '```' → logprob: -10.805715560913086
    10. '                   ' → logprob: -11.180715560913086

Token 2572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004385252017527819
    2. ' =' → logprob: -5.504385471343994
    3. '+=' → logprob: -8.754384994506836
    4. '+' → logprob: -8.879384994506836
    5. ' +=' → logprob: -11.879384994506836
    6. '=
' → logprob: -14.004384994506836
    7. '   ' → logprob: -14.254384994506836
    8. ')' → logprob: -14.504384994506836
    9. ' ' → logprob: -15.629384994506836
    10. ' +' → logprob: -16.129384994506836

Token 2573: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00091217877343297
    2. ' pos' → logprob: -7.000912189483643
    3. 'position' → logprob: -14.750911712646484
    4. 'post' → logprob: -16.125911712646484
    5. '	pos' → logprob: -16.500911712646484
    6. '_pos' → logprob: -17.500911712646484
    7. 'npos' → logprob: -17.750911712646484
    8. '(pos' → logprob: -17.750911712646484
    9. 'p' → logprob: -18.375911712646484
    10. '[pos' → logprob: -18.625911712646484

Token 2574: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005574395763687789
    2. '+
' → logprob: -7.5005574226379395
    3. ' +' → logprob: -13.250557899475098
    4. '```' → logprob: -13.750557899475098
    5. '1' → logprob: -14.000557899475098
    6. '+#' → logprob: -15.625557899475098
    7. '#+' → logprob: -15.625557899475098
    8. '+=' → logprob: -16.12555694580078
    9. '+)' → logprob: -16.75055694580078
    10. '+++' → logprob: -16.87555694580078

Token 2575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.75
    3. ' ' → logprob: -16.375
    4. '+' → logprob: -19.75
    5. '``' → logprob: -20.5
    6. '0' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. '`' → logprob: -20.75
    9. '<|end|>' → logprob: -20.75
    10. '           ' → logprob: -21.0

Token 2576: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008626633323729038
    2. '```' → logprob: -5.008626461029053
    3. '   ' → logprob: -6.883626461029053
    4. '
' → logprob: -8.008626937866211
    5. '<|end|>' → logprob: -8.008626937866211
    6. '#' → logprob: -9.133626937866211
    7. '	' → logprob: -10.758626937866211
    8. '           ' → logprob: -10.883626937866211
    9. '``' → logprob: -11.133626937866211
    10. '<|end|>' → logprob: -11.883626937866211

Token 2577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029815060552209616
    2. '```' → logprob: -5.877981662750244
    3. '   ' → logprob: -9.127981185913086
    4. '#' → logprob: -10.127981185913086
    5. '
' → logprob: -11.127981185913086
    6. '           ' → logprob: -12.252981185913086
    7. '<|end|>' → logprob: -12.752981185913086
    8. '``' → logprob: -13.002981185913086
    9. 'continue' → logprob: -13.752981185913086
    10. '[' → logprob: -14.752981185913086

Token 2578: ' sub' (ID: 1543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003186863148584962
    2. 'sub' (adapté à ' sub') → logprob: -6.3781867027282715
    3. '#' → logprob: -7.0031867027282715
    4. '```' → logprob: -7.6281867027282715
    5. '   ' → logprob: -9.50318717956543
    6. '``' → logprob: -12.37818717956543
    7. '
' → logprob: -12.75318717956543
    8. '_sub' → logprob: -12.75318717956543
    9. '           ' → logprob: -13.00318717956543
    10. '`' → logprob: -15.00318717956543

Token 2579: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.0280383548888494e-06
    2. '_tokens' → logprob: -15.250000953674316
    3. '```' → logprob: -16.000001907348633
    4. '_LINES' → logprob: -16.125001907348633
    5. '_cells' → logprob: -16.250001907348633
    6. 'Lines' → logprob: -16.250001907348633
    7. '_parts' → logprob: -16.625001907348633
    8. '_line' → logprob: -17.125001907348633
    9. '_rows' → logprob: -17.250001907348633
    10. 'def' → logprob: -17.250001907348633

Token 2580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07147788256406784
    2. ' =' → logprob: -2.6964778900146484
    3. '.append' → logprob: -6.946477890014648
    4. '       ' → logprob: -8.196477890014648
    5. '=[]' → logprob: -9.071477890014648
    6. '   ' → logprob: -9.446477890014648
    7. '=[]
' → logprob: -9.821477890014648
    8. '```' → logprob: -10.946477890014648
    9. '[]' → logprob: -11.571477890014648
    10. '[' → logprob: -12.321477890014648

Token 2581: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.0005537479883059859
    2. '[]' → logprob: -7.500553607940674
    3. '[' → logprob: -14.250554084777832
    4. ' []
' → logprob: -16.375553131103516
    5. '[
' → logprob: -17.500553131103516
    6. '=[]
' → logprob: -17.750553131103516
    7. '[]

' → logprob: -18.000553131103516
    8. '[])
' → logprob: -18.875553131103516
    9. '[],
' → logprob: -19.375553131103516
    10. '       ' → logprob: -19.750553131103516

Token 2582: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16269050538539886
    2. '       ' → logprob: -1.91269052028656
    3. ' for' → logprob: -7.03769063949585
    4. '```' → logprob: -7.03769063949585
    5. '   ' → logprob: -7.91269063949585
    6. '[' → logprob: -8.412690162658691
    7. '           ' → logprob: -9.537690162658691
    8. '``' → logprob: -11.537690162658691
    9. '	for' → logprob: -11.787690162658691
    10. 'For' → logprob: -11.787690162658691

Token 2583: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.7729658540920354e-05
    2. '       ' → logprob: -11.250027656555176
    3. ' for' → logprob: -11.250027656555176
    4. '[' → logprob: -14.625027656555176
    5. '	for' → logprob: -14.625027656555176
    6. '```' → logprob: -14.875027656555176
    7. '   ' → logprob: -15.750027656555176
    8. 'For' → logprob: -15.750027656555176
    9. '           ' → logprob: -16.875028610229492
    10. '[row' → logprob: -17.750028610229492

Token 2584: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.006718571297824383
    2. ' row' → logprob: -5.006718635559082
    3. '[row' → logprob: -13.756718635559082
    4. '(row' → logprob: -14.131718635559082
    5. '	row' → logprob: -14.381718635559082
    6. 'range' → logprob: -14.631718635559082
    7. '$row' → logprob: -15.506718635559082
    8. ',row' → logprob: -16.631717681884766
    9. '=row' → logprob: -17.631717681884766
    10. '_row' → logprob: -17.756717681884766

Token 2585: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741288721561432
    2. 'in' → logprob: -0.9741288423538208
    3. '[' → logprob: -10.849128723144531
    4. '       ' → logprob: -11.349128723144531
    5. '```' → logprob: -12.099128723144531
    6. '[in' → logprob: -12.224128723144531
    7. '...' → logprob: -13.224128723144531
    8. ' ' → logprob: -13.599128723144531
    9. '[row' → logprob: -13.849128723144531
    10. '        ' → logprob: -13.974128723144531

Token 2586: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013953534653410316
    2. ' range' → logprob: -6.751395225524902
    3. 'row' → logprob: -9.126395225524902
    4. '(range' → logprob: -9.626395225524902
    5. 'in' → logprob: -10.126395225524902
    6. ' in' → logprob: -12.376395225524902
    7. 'rows' → logprob: -13.251395225524902
    8. 'lines' → logprob: -13.376395225524902
    9. 'h' → logprob: -14.126395225524902
    10. 'len' → logprob: -15.001395225524902

Token 2587: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.07343913614749908
    2. 'h' → logprob: -2.948439121246338
    3. 'range' → logprob: -4.198439121246338
    4. '0' → logprob: -6.948439121246338
    5. '[h' → logprob: -7.198439121246338
    6. 'row' → logprob: -7.948439121246338
    7. '(len' → logprob: -8.073439598083496
    8. 'len' → logprob: -8.698439598083496
    9. '(range' → logprob: -8.698439598083496
    10. '       ' → logprob: -8.698439598083496

Token 2588: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5296249985694885
    2. ':
' → logprob: -1.6546249389648438
    3. '           ' → logprob: -2.0296249389648438
    4. '       ' → logprob: -3.2796249389648438
    5. ':' → logprob: -3.6546249389648438
    6. '[row' → logprob: -4.654624938964844
    7. '   ' → logprob: -5.654624938964844
    8. '):' → logprob: -5.654624938964844
    9. '               ' → logprob: -6.154624938964844
    10. '         ' → logprob: -7.154624938964844

Token 2589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14559221267700195
    2. 'sub' → logprob: -2.645592212677002
    3. '```' → logprob: -2.770592212677002
    4. '(sub' → logprob: -8.020591735839844
    5. '[sub' → logprob: -8.020591735839844
    6. '{sub' → logprob: -8.145591735839844
    7. '.sub' → logprob: -8.770591735839844
    8. '.append' → logprob: -9.020591735839844
    9. 'row' → logprob: -9.395591735839844
    10. '	sub' → logprob: -9.520591735839844

Token 2590: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.030118273571133614
    2. '           ' → logprob: -3.780118227005005
    3. ' sub' → logprob: -5.530118465423584
    4. '	sub' → logprob: -6.280118465423584
    5. '.sub' → logprob: -8.405117988586426
    6. '               ' → logprob: -8.530117988586426
    7. '_sub' → logprob: -8.780117988586426
    8. '(sub' → logprob: -9.030117988586426
    9. '       ' → logprob: -9.405117988586426
    10. '   ' → logprob: -10.030117988586426

Token 2591: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.1756367712223437e-05
    2. '_rows' → logprob: -12.125011444091797
    3. '```' → logprob: -12.625011444091797
    4. 'Lines' → logprob: -14.250011444091797
    5. '_line' → logprob: -15.000011444091797
    6. '   ' → logprob: -15.250011444091797
    7. '[_' → logprob: -15.625011444091797
    8. '           ' → logprob: -15.625011444091797
    9. '_' → logprob: -15.750011444091797
    10. '.append' → logprob: -15.750011444091797

Token 2592: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02495475858449936
    2. '[row' → logprob: -3.7749547958374023
    3. '           ' → logprob: -6.899954795837402
    4. 'append' → logprob: -7.774954795837402
    5. '```' → logprob: -9.024954795837402
    6. '[sub' → logprob: -9.649954795837402
    7. '[-' → logprob: -10.149954795837402
    8. '       ' → logprob: -11.399954795837402
    9. '_append' → logprob: -12.024954795837402
    10. 'sub' → logprob: -12.149954795837402

Token 2593: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.06345588713884354
    2. '(lines' → logprob: -2.813455820083618
    3. ' lines' → logprob: -6.813456058502197
    4. 'rows' → logprob: -8.188455581665039
    5. '(rows' → logprob: -10.438455581665039
    6. '[row' → logprob: -10.688455581665039
    7. '[' → logprob: -10.938455581665039
    8. '.lines' → logprob: -11.063455581665039
    9. '[line' → logprob: -11.188455581665039
    10. '	lines' → logprob: -12.313455581665039

Token 2594: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.1472419600977446e-06
    2. 'row' → logprob: -14.750000953674316
    3. '(row' → logprob: -15.875000953674316
    4. '           ' → logprob: -15.875000953674316
    5. '       ' → logprob: -16.000001907348633
    6. '[
' → logprob: -16.250001907348633
    7. '[' → logprob: -16.750001907348633
    8. ',row' → logprob: -17.125001907348633
    9. '```' → logprob: -17.250001907348633
    10. '
' → logprob: -17.750001907348633

Token 2595: '][' (ID: 2696)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.035670824348926544
    2. '[last' → logprob: -3.535670757293701
    3. '           ' → logprob: -5.160670757293701
    4. '       ' → logprob: -9.41067123413086
    5. '[' → logprob: -10.78567123413086
    6. '               ' → logprob: -10.91067123413086
    7. '[left' → logprob: -11.78567123413086
    8. '[start' → logprob: -12.03567123413086
    9. ')[' → logprob: -12.16067123413086
    10. '][' → logprob: -12.16067123413086

Token 2596: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -7.839121826691553e-05
    2. '[last' → logprob: -9.500078201293945
    3. '(last' → logprob: -12.875078201293945
    4. ' last' → logprob: -14.125078201293945
    5. 'row' → logprob: -17.000078201293945
    6. '
' → logprob: -17.125078201293945
    7. ':last' → logprob: -17.625078201293945
    8. 'start' → logprob: -17.875078201293945
    9. '	last' → logprob: -18.000078201293945
    10. '_last' → logprob: -18.125078201293945

Token 2597: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18620285391807556
    2. ':])
' → logprob: -1.811202883720398
    3. ':last' → logprob: -5.1862030029296875
    4. ':]' → logprob: -7.8112030029296875
    5. ':)' → logprob: -8.311203002929688
    6. '[row' → logprob: -9.686203002929688
    7. '(row' → logprob: -10.686203002929688
    8. '])' → logprob: -10.811203002929688
    9. ':]
' → logprob: -11.436203002929688
    10. '+' → logprob: -11.436203002929688

Token 2598: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0452040433883667
    2. 'sub' → logprob: -1.0452040433883667
    3. '=sub' → logprob: -2.2952041625976562
    4. '       ' → logprob: -2.5452041625976562
    5. '```' → logprob: -3.7952041625976562
    6. '=' → logprob: -3.9202041625976562
    7. '[sub' → logprob: -4.170204162597656
    8. 'trim' → logprob: -4.295204162597656
    9. '_sub' → logprob: -4.295204162597656
    10. ' =' → logprob: -4.545204162597656

Token 2599: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.07877884805202484
    2. '```' → logprob: -3.4537787437438965
    3. '           ' → logprob: -3.5787787437438965
    4. '       ' → logprob: -4.8287787437438965
    5. '_sub' → logprob: -5.3287787437438965
    6. '	sub' → logprob: -7.3287787437438965
    7. '   ' → logprob: -7.4537787437438965
    8. ' sub' → logprob: -7.5787787437438965
    9. '[sub' → logprob: -7.5787787437438965
    10. '=sub' → logprob: -8.453779220581055

Token 2600: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.2664456789934775e-06
    2. '_cells' → logprob: -14.750000953674316
    3. '_rows' → logprob: -15.000000953674316
    4. 'Lines' → logprob: -15.250000953674316
    5. '```' → logprob: -15.750000953674316
    6. '_' → logprob: -17.375001907348633
    7. '_LINES' → logprob: -17.500001907348633
    8. 'lines' → logprob: -19.000001907348633
    9. '_line' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.625001907348633

Token 2601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42549529671669006
    2. ' =' → logprob: -1.1754952669143677
    3. '   ' → logprob: -3.8004953861236572
    4. '=sub' → logprob: -4.175495147705078
    5. '       ' → logprob: -9.050495147705078
    6. '_sub' → logprob: -11.800495147705078
    7. '[sub' → logprob: -11.925495147705078
    8. '    ' → logprob: -12.050495147705078
    9. '=subprocess' → logprob: -12.425495147705078
    10. '  ' → logprob: -12.425495147705078

Token 2602: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.02630889043211937
    2. ' trim' → logprob: -3.90130877494812
    3. '[' → logprob: -5.401309013366699
    4. ' [' → logprob: -7.651309013366699
    5. '[row' → logprob: -8.4013090133667
    6. '[
' → logprob: -8.7763090133667
    7. '   ' → logprob: -8.9013090133667
    8. '(trim' → logprob: -10.0263090133667
    9. '[line' → logprob: -10.5263090133667
    10. '[t' → logprob: -10.6513090133667

Token 2603: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.3350207507610321
    2. '[sub' → logprob: -1.8350207805633545
    3. 'sub' → logprob: -2.0850207805633545
    4. '{sub' → logprob: -7.585020542144775
    5. '       ' → logprob: -8.710021018981934
    6. '=sub' → logprob: -10.085021018981934
    7. '```' → logprob: -11.085021018981934
    8. '_sub' → logprob: -11.335021018981934
    9. '	sub' → logprob: -11.460021018981934
    10. '.sub' → logprob: -12.710021018981934

Token 2604: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00019579214858822525
    2. '_rows' → logprob: -8.750195503234863
    3. 'sub' → logprob: -11.000195503234863
    4. '(sub' → logprob: -11.125195503234863
    5. '_cells' → logprob: -13.125195503234863
    6. '_sub' → logprob: -13.750195503234863
    7. '```' → logprob: -14.000195503234863
    8. '[sub' → logprob: -15.000195503234863
    9. '(lines' → logprob: -15.250195503234863
    10. 'Lines' → logprob: -15.500195503234863

Token 2605: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10641905665397644
    2. '[sub' → logprob: -3.231419086456299
    3. ')' → logprob: -4.231419086456299
    4. ')
' → logprob: -4.481419086456299
    5. '[' → logprob: -4.481419086456299
    6. '(sub' → logprob: -5.231419086456299
    7. '           ' → logprob: -5.356419086456299
    8. '[row' → logprob: -5.731419086456299
    9. '   ' → logprob: -6.231419086456299
    10. '
' → logprob: -6.481419086456299

Token 2606: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0017287296941503882
    2. '           ' → logprob: -6.876728534698486
    3. ' c' → logprob: -7.501728534698486
    4. '       ' → logprob: -9.001729011535645
    5. '```' → logprob: -11.376729011535645
    6. '_c' → logprob: -13.126729011535645
    7. '[' → logprob: -13.376729011535645
    8. '   ' → logprob: -13.501729011535645
    9. '               ' → logprob: -14.001729011535645
    10. '
' → logprob: -14.251729011535645

Token 2607: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -2.045823566731997e-05
    2. '           ' → logprob: -11.125020027160645
    3. ' c' → logprob: -12.875020027160645
    4. '       ' → logprob: -13.125020027160645
    5. '   ' → logprob: -14.625020027160645
    6. '	c' → logprob: -14.625020027160645
    7. '_c' → logprob: -16.87502098083496
    8. ')c' → logprob: -17.25002098083496
    9. '```' → logprob: -17.37502098083496
    10. '               ' → logprob: -18.25002098083496

Token 2608: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.0018012002110481262
    2. ',c' → logprob: -6.501801013946533
    3. ',' → logprob: -8.376801490783691
    4. '.append' → logprob: -10.251801490783691
    5. ',val' → logprob: -11.001801490783691
    6. ' ,' → logprob: -11.876801490783691
    7. ',value' → logprob: -13.251801490783691
    8. ',(' → logprob: -13.876801490783691
    9. '(v' → logprob: -14.001801490783691
    10. '   ' → logprob: -14.001801490783691

Token 2609: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4373627305030823
    2. ',v' → logprob: -1.3123626708984375
    3. ',c' → logprob: -2.5623626708984375
    4. '       ' → logprob: -5.6873626708984375
    5. '           ' → logprob: -6.9373626708984375
    6. '.append' → logprob: -6.9373626708984375
    7. ',(' → logprob: -7.5623626708984375
    8. '(c' → logprob: -7.9373626708984375
    9. '[' → logprob: -8.187362670898438
    10. ' ,' → logprob: -8.437362670898438

Token 2610: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.16338635981082916
    2. 'c' → logprob: -1.913386344909668
    3. ' parse' → logprob: -6.788386344909668
    4. '(parse' → logprob: -6.913386344909668
    5. '(c' → logprob: -7.413386344909668
    6. ' c' → logprob: -7.788386344909668
    7. '(' → logprob: -12.663386344909668
    8. '=parse' → logprob: -13.038386344909668
    9. '.parse' → logprob: -13.538386344909668
    10. 'Cell' → logprob: -13.663386344909668

Token 2611: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.00016885579680092633
    2. '_cells' → logprob: -9.500168800354004
    3. 'cell' → logprob: -9.625168800354004
    4. '_sub' → logprob: -10.750168800354004
    5. 'sub' → logprob: -12.750168800354004
    6. '(sub' → logprob: -13.375168800354004
    7. '[sub' → logprob: -14.500168800354004
    8. '(cell' → logprob: -14.875168800354004
    9. '[cell' → logprob: -15.750168800354004
    10. '
' → logprob: -15.875168800354004

Token 2612: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.00010330478107789531
    2. 'sub' → logprob: -9.500102996826172
    3. '[sub' → logprob: -10.875102996826172
    4. ' sub' → logprob: -12.375102996826172
    5. '{sub' → logprob: -13.000102996826172
    6. '=sub' → logprob: -13.000102996826172
    7. '_sub' → logprob: -14.875102996826172
    8. '(s' → logprob: -16.000102996826172
    9. '	sub' → logprob: -16.500102996826172
    10. 's' → logprob: -16.875102996826172

Token 2613: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0020414141472429037
    2. '_rows' → logprob: -6.752041339874268
    3. 'sub' → logprob: -8.627041816711426
    4. '_sub' → logprob: -8.627041816711426
    5. '[row' → logprob: -8.752041816711426
    6. '[sub' → logprob: -9.127041816711426
    7. '(sub' → logprob: -9.377041816711426
    8. '_cells' → logprob: -10.502041816711426
    9. '```' → logprob: -11.002041816711426
    10. '(row' → logprob: -11.002041816711426

Token 2614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3710068166255951
    2. '[row' → logprob: -1.3710068464279175
    3. ',row' → logprob: -3.246006727218628
    4. '[' → logprob: -5.121006965637207
    5. '(rows' → logprob: -5.371006965637207
    6. '       ' → logprob: -6.121006965637207
    7. ',c' → logprob: -6.246006965637207
    8. ',[' → logprob: -7.246006965637207
    9. '[c' → logprob: -7.871006965637207
    10. '(lines' → logprob: -8.371006965637207

Token 2615: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.011048882268369198
    2. ' base' → logprob: -4.511048793792725
    3. '(base' → logprob: -15.136049270629883
    4. 'row' → logprob: -15.511049270629883
    5. '       ' → logprob: -16.011049270629883
    6. '0' → logprob: -16.011049270629883
    7. '           ' → logprob: -16.136049270629883
    8. '         ' → logprob: -16.636049270629883
    9. '	base' → logprob: -16.886049270629883
    10. '```' → logprob: -17.636049270629883

Token 2616: '_line' (ID: 14418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006621700245887041
    2. '+' → logprob: -6.131621837615967
    3. 'pos' → logprob: -6.256621837615967
    4. 'row' → logprob: -6.631621837615967
    5. 'last' → logprob: -7.506621837615967
    6. ')' → logprob: -9.381621360778809
    7. '-' → logprob: -9.631621360778809
    8. '```' → logprob: -9.756621360778809
    9. '_row' → logprob: -9.881621360778809
    10. '       ' → logprob: -10.256621360778809

Token 2617: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011515287915244699
    2. ',c' → logprob: -7.2511515617370605
    3. '       ' → logprob: -8.126151084899902
    4. '           ' → logprob: -10.001151084899902
    5. '0' → logprob: -10.626151084899902
    6. ',len' → logprob: -10.751151084899902
    7. '[' → logprob: -11.126151084899902
    8. ' ,' → logprob: -11.626151084899902
    9. ',v' → logprob: -12.251151084899902
    10. ',row' → logprob: -12.251151084899902

Token 2618: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038193196058273315
    2. '       ' → logprob: -3.4131932258605957
    3. ')' → logprob: -6.538193225860596
    4. '           ' → logprob: -6.663193225860596
    5. '),' → logprob: -7.413193225860596
    6. ',c' → logprob: -7.913193225860596
    7. '[' → logprob: -8.038192749023438
    8. ',v' → logprob: -9.288192749023438
    9. ',None' → logprob: -9.413192749023438
    10. '   ' → logprob: -9.663192749023438

Token 2619: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45580658316612244
    2. 'if' (adapté à ' if') → logprob: -1.2058066129684448
    3. ' if' → logprob: -3.3308064937591553
    4. 'cells' → logprob: -3.7058064937591553
    5. 'c' → logprob: -5.830806732177734
    6. ' cells' → logprob: -6.455806732177734
    7. '           ' → logprob: -7.330806732177734
    8. '```' → logprob: -8.080806732177734
    9. ')c' → logprob: -8.705806732177734
    10. ')' → logprob: -8.705806732177734

Token 2620: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.026353945955634117
    2. 'c' → logprob: -3.6513538360595703
    3. 'None' → logprob: -10.02635383605957
    4. '(c' → logprob: -12.40135383605957
    5. ' None' → logprob: -13.40135383605957
    6. '_c' → logprob: -14.02635383605957
    7. 'not' → logprob: -14.40135383605957
    8. '```' → logprob: -14.52635383605957
    9. ')c' → logprob: -14.90135383605957
    10. '	c' → logprob: -15.02635383605957

Token 2621: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1604532152414322
    2. 'is' → logprob: -1.910453200340271
    3. '[' → logprob: -9.285452842712402
    4. '           ' → logprob: -9.660452842712402
    5. '       ' → logprob: -10.785452842712402
    6. ')' → logprob: -11.035452842712402
    7. '	is' → logprob: -11.535452842712402
    8. '        ' → logprob: -12.285452842712402
    9. 'if' → logprob: -12.410452842712402
    10. '   ' → logprob: -12.535452842712402

Token 2622: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1609620898962021
    2. 'not' → logprob: -1.9109621047973633
    3. 'None' → logprob: -7.535962104797363
    4. ' None' → logprob: -8.785962104797363
    5. 'Not' → logprob: -10.035962104797363
    6. '_not' → logprob: -12.285962104797363
    7. '```' → logprob: -14.285962104797363
    8. ' ' → logprob: -14.660962104797363
    9. ' c' → logprob: -14.785962104797363
    10. '   ' → logprob: -15.160962104797363

Token 2623: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1502130776643753
    2. ' not' → logprob: -2.0252130031585693
    3. 'None' → logprob: -5.025213241577148
    4. 'Not' → logprob: -7.275213241577148
    5. '0' → logprob: -9.775213241577148
    6. '
' → logprob: -10.150213241577148
    7. '1' → logprob: -10.775213241577148
    8. ' ' → logprob: -11.025213241577148
    9. '...' → logprob: -11.400213241577148
    10. '   ' → logprob: -11.400213241577148

Token 2624: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008619115105830133
    2. ':
' → logprob: -7.750862121582031
    3. ':' → logprob: -8.500862121582031
    4. ',' → logprob: -9.875862121582031
    5. '):
' → logprob: -10.000862121582031
    6. '          ' → logprob: -10.500862121582031
    7. '               ' → logprob: -10.500862121582031
    8. '       ' → logprob: -10.750862121582031
    9. ',c' → logprob: -11.125862121582031
    10. ')' → logprob: -11.500862121582031

Token 2625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011892046313732862
    2. '          ' → logprob: -10.25011920928955
    3. '	       ' → logprob: -10.62511920928955
    4. '```' → logprob: -11.12511920928955
    5. 'cells' → logprob: -11.25011920928955
    6. '               ' → logprob: -11.25011920928955
    7. '       ' → logprob: -12.37511920928955
    8. '   ' → logprob: -12.50011920928955
    9. '         ' → logprob: -12.62511920928955
    10. '            ' → logprob: -13.25011920928955

Token 2626: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.008512092754244804
    2. ' cells' → logprob: -5.383512020111084
    3. '           ' → logprob: -5.883512020111084
    4. '               ' → logprob: -7.008512020111084
    5. '.cells' → logprob: -9.258512496948242
    6. '```' → logprob: -10.133512496948242
    7. 'c' → logprob: -10.758512496948242
    8. '   ' → logprob: -11.008512496948242
    9. '_cells' → logprob: -11.758512496948242
    10. '	c' → logprob: -12.758512496948242

Token 2627: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010032468708232045
    2. 'append' → logprob: -9.875100135803223
    3. '.app' → logprob: -10.625100135803223
    4. '           ' → logprob: -11.375100135803223
    5. '.' → logprob: -12.250100135803223
    6. ' .' → logprob: -13.000100135803223
    7. 'app' → logprob: -13.500100135803223
    8. 's' → logprob: -14.250100135803223
    9. '<|end|>' → logprob: -14.250100135803223
    10. '@app' → logprob: -14.375100135803223

Token 2628: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0037099348846822977
    2. '(c' → logprob: -5.62870979309082
    3. ' ((' → logprob: -9.62870979309082
    4. ' (' → logprob: -10.12870979309082
    5. '(C' → logprob: -13.50370979309082
    6. '   ' → logprob: -14.00370979309082
    7. '`' → logprob: -15.00370979309082
    8. '(
' → logprob: -15.12870979309082
    9. '(' → logprob: -15.25370979309082
    10. ' ' → logprob: -15.37870979309082

Token 2629: 'c' (ID: 66)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0004362718027550727
    2. 'c' → logprob: -7.750436305999756
    3. ' (' → logprob: -12.125435829162598
    4. '   ' → logprob: -17.000436782836914
    5. '[c' → logprob: -17.000436782836914
    6. '	c' → logprob: -17.750436782836914
    7. '
' → logprob: -18.000436782836914
    8. '((' → logprob: -18.000436782836914
    9. '(C' → logprob: -18.125436782836914
    10. ' c' → logprob: -18.250436782836914

Token 2630: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -9.93710636976175e-05
    2. ',' → logprob: -9.625099182128906
    3. '[v' → logprob: -11.000099182128906
    4. '(v' → logprob: -12.000099182128906
    5. ',(' → logprob: -12.625099182128906
    6. '[' → logprob: -12.875099182128906
    7. ' ,' → logprob: -13.250099182128906
    8. '(' → logprob: -13.625099182128906
    9. ',[' → logprob: -15.000099182128906
    10. ',
' → logprob: -15.000099182128906

Token 2631: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07721485942602158
    2. '           ' → logprob: -2.8272149562835693
    3. ',' → logprob: -4.70221471786499
    4. ')
' → logprob: -5.45221471786499
    5. '),' → logprob: -7.57721471786499
    6. '       ' → logprob: -8.202215194702148
    7. '   ' → logprob: -8.577215194702148
    8. '               ' → logprob: -8.827215194702148
    9. ')c' → logprob: -9.077215194702148
    10. ',)' → logprob: -9.452215194702148

Token 2632: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028336746618151665
    2. '.append' → logprob: -3.903336763381958
    3. '.' → logprob: -5.528336524963379
    4. '```' → logprob: -6.778336524963379
    5. ',' → logprob: -6.903336524963379
    6. '       ' → logprob: -7.528336524963379
    7. ')' → logprob: -7.778336524963379
    8. '               ' → logprob: -8.278336524963379
    9. '   ' → logprob: -9.153336524963379
    10. '<|end|>' → logprob: -9.278336524963379

Token 2633: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07410648465156555
    2. '           ' → logprob: -3.324106454849243
    3. '   ' → logprob: -3.449106454849243
    4. 'return' (adapté à ' return') → logprob: -5.949106693267822
    5. '               ' → logprob: -7.449106693267822
    6. '
' → logprob: -9.074106216430664
    7. ' return' → logprob: -9.324106216430664
    8. ')' → logprob: -10.324106216430664
    9. '                   ' → logprob: -10.324106216430664
    10. '```' → logprob: -10.449106216430664

Token 2634: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -1.688212614681106e-05
    2. ' Cell' → logprob: -11.500017166137695
    3. 'cells' → logprob: -12.000017166137695
    4. 'Cells' → logprob: -15.375017166137695
    5. '(Cell' → logprob: -15.625017166137695
    6. ' cells' → logprob: -16.125017166137695
    7. '_Cell' → logprob: -17.000017166137695
    8. '<Cell' → logprob: -17.125017166137695
    9. '_cell' → logprob: -18.125017166137695
    10. 'lines' → logprob: -18.375017166137695

Token 2635: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0030795522034168243
    2. '(' → logprob: -6.503079414367676
    3. '(
' → logprob: -7.128079414367676
    4. '(c' → logprob: -7.503079414367676
    5. ',' → logprob: -9.003079414367676
    6. 'lines' → logprob: -10.378079414367676
    7. '(data' → logprob: -11.378079414367676
    8. '([' → logprob: -11.503079414367676
    9. '_lines' → logprob: -12.378079414367676
    10. '[' → logprob: -12.628079414367676

Token 2636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010809217346832156
    2. '   ' → logprob: -7.6260809898376465
    3. '[' → logprob: -8.501080513000488
    4. ',[' → logprob: -8.751080513000488
    5. '	' → logprob: -9.751080513000488
    6. '       ' → logprob: -10.001080513000488
    7. ',
' → logprob: -10.251080513000488
    8. ' ,' → logprob: -10.626080513000488
    9. ',line' → logprob: -11.126080513000488
    10. '           ' → logprob: -11.626080513000488

Token 2637: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -2.816093228830141e-06
    2. ' base' → logprob: -13.50000286102295
    3. '(base' → logprob: -13.50000286102295
    4. '   ' → logprob: -20.000001907348633
    5. '(' → logprob: -20.625001907348633
    6. '	base' → logprob: -21.500001907348633
    7. 'last' → logprob: -21.875001907348633
    8. 'Base' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.000001907348633
    10. '0' → logprob: -22.000001907348633

Token 2638: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5892890095710754
    2. 'base' → logprob: -0.8392890095710754
    3. '_base' → logprob: -4.58928918838501
    4. 'Line' → logprob: -6.58928918838501
    5. '(base' → logprob: -7.21428918838501
    6. 'line' → logprob: -7.33928918838501
    7. '[' → logprob: -8.214288711547852
    8. ' base' → logprob: -11.089288711547852
    9. ')' → logprob: -11.339288711547852
    10. '```' → logprob: -11.464288711547852

Token 2639: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005229017697274685
    2. '),' → logprob: -5.3802289962768555
    3. ',),' → logprob: -8.130228996276855
    4. '   ' → logprob: -9.130228996276855
    5. ',c' → logprob: -9.255228996276855
    6. ' ,' → logprob: -9.630228996276855
    7. ',None' → logprob: -11.005228996276855
    8. '       ' → logprob: -12.130228996276855
    9. ',val' → logprob: -12.755228996276855
    10. ',(' → logprob: -12.880228996276855

Token 2640: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0009122979827225208
    2. ' ('' → logprob: -7.000912189483643
    3. ' ' → logprob: -14.8759126663208
    4. '   ' → logprob: -15.6259126663208
    5. '(('' → logprob: -16.375911712646484
    6. '('__' → logprob: -16.875911712646484
    7. '  ' → logprob: -17.125911712646484
    8. '    ' → logprob: -17.625911712646484
    9. '      ' → logprob: -17.875911712646484
    10. '     ' → logprob: -18.125911712646484

Token 2641: 'term' (ID: 8044)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.46696725487709045
    2. ''ex' → logprob: -1.466967225074768
    3. 'expr' → logprob: -1.966967225074768
    4. '"' → logprob: -6.4669671058654785
    5. ''m' → logprob: -8.341967582702637
    6. ''e' → logprob: -8.341967582702637
    7. ''exp' → logprob: -8.466967582702637
    8. 'pexpr' → logprob: -9.591967582702637
    9. '   ' → logprob: -9.966967582702637
    10. ''s' → logprob: -9.966967582702637

Token 2642: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00911390595138073
    2. ',' → logprob: -4.759113788604736
    3. '','' → logprob: -8.634114265441895
    4. ''' → logprob: -9.884114265441895
    5. '',(' → logprob: -9.884114265441895
    6. '',
' → logprob: -10.509114265441895
    7. '(',' → logprob: -10.634114265441895
    8. '",' → logprob: -10.759114265441895
    9. 'expr' → logprob: -10.884114265441895
    10. ' ,' → logprob: -10.884114265441895

Token 2643: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.11668703705072403
    2. ' cells' → logprob: -3.241687059402466
    3. '[' → logprob: -3.616687059402466
    4. 'c' → logprob: -4.741686820983887
    5. '[(' → logprob: -4.991686820983887
    6. '[]' → logprob: -5.366686820983887
    7. ' [' → logprob: -5.741686820983887
    8. '[c' → logprob: -5.741686820983887
    9. '(c' → logprob: -5.741686820983887
    10. ')' → logprob: -5.866686820983887

Token 2644: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. '   ' → logprob: -12.375015258789062
    3. '<|end|>' → logprob: -12.500015258789062
    4. '[' → logprob: -12.750015258789062
    5. ')
' → logprob: -13.000015258789062
    6. ' )' → logprob: -14.125015258789062
    7. '<|end|>' → logprob: -14.625015258789062
    8. ']' → logprob: -16.125015258789062
    9. '[])' → logprob: -16.125015258789062
    10. '')' → logprob: -16.125015258789062

Token 2645: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05207541584968567
    2. '<|end|>' → logprob: -3.0520753860473633
    3. '
' → logprob: -6.302075386047363
    4. ')' → logprob: -7.177075386047363
    5. '<|end|>' → logprob: -7.177075386047363
    6. '   ' → logprob: -10.677075386047363
    7. '```' → logprob: -10.802075386047363
    8. '#' → logprob: -11.052075386047363
    9. '    
' → logprob: -11.552075386047363
    10. '  
' → logprob: -11.927075386047363

Token 2646: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0008496518130414188
    2. '#' (adapté à ' #') → logprob: -7.500849723815918
    3. '   ' → logprob: -8.375849723815918
    4. '```' → logprob: -10.000849723815918
    5. 'def' → logprob: -11.750849723815918
    6. ' return' → logprob: -12.125849723815918
    7. '       ' → logprob: -12.625849723815918
    8. 'raise' → logprob: -12.875849723815918
    9. 'if' → logprob: -14.875849723815918
    10. '
' → logprob: -15.125849723815918

Token 2647: ' unary' (ID: 185293)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003179975086823106
    2. '#' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.503179550170898
    4. ' return' → logprob: -14.378179550170898
    5. '       ' → logprob: -16.1281795501709
    6. 'def' → logprob: -16.5031795501709
    7. '```' → logprob: -17.2531795501709
    8. 'raise' → logprob: -17.6281795501709
    9. '
' → logprob: -17.7531795501709
    10. 'for' → logprob: -17.8781795501709

Token 2648: ' minus' (ID: 40335)
  Prédit: '_ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ops' → logprob: -0.6138643026351929
    2. '   ' → logprob: -1.8638643026351929
    3. ' =' → logprob: -1.9888643026351929
    4. ' if' → logprob: -2.6138644218444824
    5. 'def' → logprob: -3.4888644218444824
    6. 'if' → logprob: -3.6138644218444824
    7. 'ops' → logprob: -4.988864421844482
    8. ' ops' → logprob: -5.113864421844482
    9. ' ' → logprob: -5.488864421844482
    10. '_' → logprob: -5.738864421844482

Token 2649: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5109577775001526
    2. '   ' → logprob: -1.1359577178955078
    3. ' if' → logprob: -2.760957717895508
    4. '#' → logprob: -5.510957717895508
    5. ':' → logprob: -5.760957717895508
    6. '       ' → logprob: -6.260957717895508
    7. '(' → logprob: -6.635957717895508
    8. '
' → logprob: -7.260957717895508
    9. '(
' → logprob: -7.385957717895508
    10. ':
' → logprob: -7.510957717895508

Token 2650: ' plus' (ID: 2932)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5629719495773315
    2. ' if' → logprob: -1.3129719495773315
    3. 'def' → logprob: -2.562972068786621
    4. '+' → logprob: -4.312972068786621
    5. ' not' → logprob: -4.437972068786621
    6. 'plus' → logprob: -4.437972068786621
    7. '#' → logprob: -4.562972068786621
    8. 'not' → logprob: -4.687972068786621
    9. ' plus' → logprob: -4.812972068786621
    10. '(' → logprob: -5.062972068786621

Token 2651: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21925987303256989
    2. ' if' → logprob: -2.0942599773406982
    3. 'if' → logprob: -3.2192599773406982
    4. ':' → logprob: -3.8442599773406982
    5. ':
' → logprob: -5.594259738922119
    6. '(' → logprob: -6.469259738922119
    7. '
' → logprob: -6.469259738922119
    8. '       ' → logprob: -6.594259738922119
    9. ',' → logprob: -7.219259738922119
    10. '(
' → logprob: -7.344259738922119

Token 2652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3055056929588318
    2. 'if' → logprob: -1.9305057525634766
    3. ' if' → logprob: -2.3055057525634766
    4. ':' → logprob: -4.430505752563477
    5. '       ' → logprob: -5.680505752563477
    6. '
' → logprob: -7.555505752563477
    7. '#' → logprob: -7.805505752563477
    8. ':
' → logprob: -8.055505752563477
    9. '(' → logprob: -8.180505752563477
    10. '    
' → logprob: -8.805505752563477

Token 2653: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013490653596818447
    2. '   ' → logprob: -4.638490676879883
    3. 'line' → logprob: -5.763490676879883
    4. ' if' → logprob: -8.388490676879883
    5. 'ch' → logprob: -8.763490676879883
    6. 'first' → logprob: -9.388490676879883
    7. '#' → logprob: -9.888490676879883
    8. 's' → logprob: -10.388490676879883
    9. 'for' → logprob: -11.513490676879883
    10. '       ' → logprob: -11.888490676879883

Token 2654: ' s' (ID: 265)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6085892915725708
    2. 'lines' → logprob: -0.9835892915725708
    3. ' s' → logprob: -3.4835891723632812
    4. 's' → logprob: -3.9835891723632812
    5. 'len' → logprob: -4.233589172363281
    6. ' base' → logprob: -4.733589172363281
    7. ' len' → logprob: -4.983589172363281
    8. 'base' → logprob: -6.608589172363281
    9. 'h' → logprob: -8.108589172363281
    10. '(lines' → logprob: -8.233589172363281

Token 2655: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.327856630785391e-05
    2. '.startswith' → logprob: -9.625082969665527
    3. 'and' → logprob: -12.375082969665527
    4. '   ' → logprob: -12.375082969665527
    5. ' and' → logprob: -12.500082969665527
    6. '=' → logprob: -13.125082969665527
    7. ' [' → logprob: -13.500082969665527
    8. '[
' → logprob: -14.375082969665527
    9. 'startswith' → logprob: -15.250082969665527
    10. '[:' → logprob: -15.375082969665527

Token 2656: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06711628288030624
    2. ' s' → logprob: -2.9421162605285645
    3. '(s' → logprob: -4.5671162605285645
    4. ' (' → logprob: -6.6921162605285645
    5. '(' → logprob: -7.6921162605285645
    6. '   ' → logprob: -10.442116737365723
    7. ' ' → logprob: -10.942116737365723
    8. 'len' → logprob: -11.817116737365723
    9. '  ' → logprob: -12.192116737365723
    10. '(len' → logprob: -12.692116737365723

Token 2657: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '[
' → logprob: -14.00000286102295
    3. '.startswith' → logprob: -14.00000286102295
    4. '0' → logprob: -14.87500286102295
    5. '```' → logprob: -15.25000286102295
    6. '==' → logprob: -15.50000286102295
    7. '   ' → logprob: -16.125003814697266
    8. ' [' → logprob: -16.625003814697266
    9. '=' → logprob: -16.625003814697266
    10. '[-' → logprob: -17.125003814697266

Token 2658: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025064588990062475
    2. '[' → logprob: -6.002506256103516
    3. ' ' → logprob: -10.502506256103516
    4. '1' → logprob: -13.752506256103516
    5. '(' → logprob: -14.377506256103516
    6. '   ' → logprob: -14.627506256103516
    7. '=' → logprob: -15.502506256103516
    8. '#' → logprob: -15.752506256103516
    9. ' [' → logprob: -15.752506256103516
    10. '==' → logprob: -16.127506256103516

Token 2659: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7438234686851501
    2. ' ==' → logprob: -0.8688234686851501
    3. '[' → logprob: -2.618823528289795
    4. '=='' → logprob: -3.618823528289795
    5. ' in' → logprob: -6.118823528289795
    6. 'in' → logprob: -7.243823528289795
    7. '()' → logprob: -7.243823528289795
    8. '=' → logprob: -8.368823051452637
    9. '()==' → logprob: -8.368823051452637
    10. '   ' → logprob: -8.493823051452637

Token 2660: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3146495521068573
    2. 'in' → logprob: -1.6896495819091797
    3. '=='' → logprob: -2.9396495819091797
    4. ' in' → logprob: -3.9396495819091797
    5. ' ==' → logprob: -4.43964958190918
    6. '[' → logprob: -7.31464958190918
    7. '   ' → logprob: -8.68964958190918
    8. '=' → logprob: -9.81464958190918
    9. '==
' → logprob: -10.06464958190918
    10. ''' → logprob: -10.18964958190918

Token 2661: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.018096325919032097
    2. ''' → logprob: -4.643096446990967
    3. ''-' → logprob: -4.893096446990967
    4. '['' → logprob: -8.143095970153809
    5. ' '+' → logprob: -8.268095970153809
    6. '('' → logprob: -9.018095970153809
    7. '+-' → logprob: -9.393095970153809
    8. '('+' → logprob: -10.643095970153809
    9. '('-' → logprob: -11.268095970153809
    10. '"+' → logprob: -11.518095970153809

Token 2662: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005735263228416443
    2. ''-' → logprob: -5.255735397338867
    3. '+-' → logprob: -8.505735397338867
    4. ' ' → logprob: -9.630735397338867
    5. '   ' → logprob: -9.630735397338867
    6. ' -' → logprob: -10.380735397338867
    7. '-
' → logprob: -10.755735397338867
    8. '-'' → logprob: -11.005735397338867
    9. 's' → logprob: -11.130735397338867
    10. '-'+' → logprob: -11.380735397338867

Token 2663: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5699092745780945
    2. ':' → logprob: -1.1949093341827393
    3. '':
' → logprob: -2.3199093341827393
    4. ' and' → logprob: -4.56990909576416
    5. '   ' → logprob: -5.06990909576416
    6. '':' → logprob: -5.19490909576416
    7. ''' → logprob: -5.81990909576416
    8. '-' → logprob: -5.94490909576416
    9. '):
' → logprob: -6.56990909576416
    10. '+' → logprob: -6.69490909576416

Token 2664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021969303488731384
    2. ':' → logprob: -4.146969318389893
    3. '   ' → logprob: -5.521969318389893
    4. '[' → logprob: -7.521969318389893
    5. ':
' → logprob: -7.521969318389893
    6. ',' → logprob: -8.771968841552734
    7. ' :' → logprob: -9.396968841552734
    8. '        
' → logprob: -9.396968841552734
    9. '    ' → logprob: -9.521968841552734
    10. ' if' → logprob: -10.146968841552734

Token 2665: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036031730473041534
    2. 'sub' → logprob: -3.536031723022461
    3. '   ' → logprob: -6.036031723022461
    4. ' sub' → logprob: -6.536031723022461
    5. ' lines' → logprob: -7.536031723022461
    6. 'rest' → logprob: -8.036031723022461
    7. 'lines' → logprob: -8.036031723022461
    8. '           ' → logprob: -8.786031723022461
    9. '```' → logprob: -8.786031723022461
    10. '#' (adapté à ' #') → logprob: -8.911031723022461

Token 2666: ' parse' (ID: 8420)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.1545485109090805
    2. '       ' → logprob: -2.029548406600952
    3. '   ' → logprob: -5.654548645019531
    4. 'rest' → logprob: -5.904548645019531
    5. ' sub' → logprob: -5.904548645019531
    6. 'if' → logprob: -7.029548645019531
    7. 'pos' → logprob: -7.654548645019531
    8. '#' → logprob: -7.904548645019531
    9. ' rest' → logprob: -8.404548645019531
    10. 's' → logprob: -9.154548645019531

Token 2667: ' unary' (ID: 185293)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.7675313949584961
    2. 'lines' → logprob: -1.517531394958496
    3. '       ' → logprob: -2.017531394958496
    4. ' lines' → logprob: -2.642531394958496
    5. 's' → logprob: -3.142531394958496
    6. '_lines' → logprob: -3.767531394958496
    7. '   ' → logprob: -4.517531394958496
    8. ' sub' → logprob: -5.142531394958496
    9. '=' → logprob: -5.517531394958496
    10. '           ' → logprob: -5.642531394958496

Token 2668: ' op' (ID: 991)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.020007915794849396
    2. 'sub' → logprob: -4.895008087158203
    3. '       ' → logprob: -5.520008087158203
    4. 'lines' → logprob: -5.520008087158203
    5. '   ' → logprob: -6.520008087158203
    6. '_sub' → logprob: -7.145008087158203
    7. '_cells' → logprob: -7.145008087158203
    8. 's' → logprob: -8.020008087158203
    9. '=' → logprob: -8.395008087158203
    10. ' lines' → logprob: -9.270008087158203

Token 2669: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18821054697036743
    2. '_lines' → logprob: -2.6882104873657227
    3. 'sub' → logprob: -3.5632104873657227
    4. '_sub' → logprob: -4.063210487365723
    5. '   ' → logprob: -4.188210487365723
    6. ',' → logprob: -4.688210487365723
    7. '=' → logprob: -5.063210487365723
    8. ' lines' → logprob: -5.188210487365723
    9. ' =' → logprob: -5.313210487365723
    10. '           ' → logprob: -6.063210487365723

Token 2670: ' operand' (ID: 63895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9165236949920654
    2. ' s' → logprob: -2.5415236949920654
    3. ',' → logprob: -2.6665236949920654
    4. ' if' → logprob: -2.9165236949920654
    5. ' lines' → logprob: -3.0415236949920654
    6. '=' → logprob: -3.2915236949920654
    7. '[' → logprob: -3.2915236949920654
    8. '   ' → logprob: -3.4165236949920654
    9. 's' → logprob: -3.5415236949920654
    10. ':
' → logprob: -3.7915236949920654

Token 2671: ' recursively' (ID: 130266)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.387029230594635
    2. '_lines' → logprob: -2.1370291709899902
    3. '   ' → logprob: -3.0120291709899902
    4. '=' → logprob: -3.3870291709899902
    5. ' =' → logprob: -4.01202917098999
    6. ':' → logprob: -4.01202917098999
    7. 'sub' → logprob: -4.13702917098999
    8. ':
' → logprob: -4.26202917098999
    9. '[' → logprob: -4.38702917098999
    10. '_sub' → logprob: -4.76202917098999

Token 2672: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029908940196037292
    2. 'sub' → logprob: -6.50299072265625
    3. '   ' → logprob: -7.00299072265625
    4. '           ' → logprob: -8.87799072265625
    5. ',' → logprob: -9.37799072265625
    6. '```' → logprob: -9.87799072265625
    7. '
' → logprob: -10.00299072265625
    8. '(sub' → logprob: -10.12799072265625
    9. '_sub' → logprob: -10.50299072265625
    10. '[' → logprob: -11.00299072265625

Token 2673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005970984697341919
    2. '   ' → logprob: -5.2559709548950195
    3. '```' → logprob: -8.75597095489502
    4. '           ' → logprob: -9.00597095489502
    5. ' lines' → logprob: -9.00597095489502
    6. ':' → logprob: -9.63097095489502
    7. '[' → logprob: -9.88097095489502
    8. ',' → logprob: -10.13097095489502
    9. '(' → logprob: -10.88097095489502
    10. ' sub' → logprob: -11.13097095489502

Token 2674: ' sign' (ID: 2232)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49980559945106506
    2. 'sub' → logprob: -1.2498055696487427
    3. ' sub' → logprob: -2.6248056888580322
    4. '   ' → logprob: -4.249805450439453
    5. '
' → logprob: -4.374805450439453
    6. ' rest' → logprob: -6.249805450439453
    7. '           ' → logprob: -6.874805450439453
    8. 'rest' → logprob: -7.124805450439453
    9. '	sub' → logprob: -7.124805450439453
    10. 'pos' → logprob: -7.624805450439453

Token 2675: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2261810451745987
    2. '=' → logprob: -1.6011810302734375
    3. '=s' → logprob: -8.226181030273438
    4. 's' → logprob: -8.976181030273438
    5. '_lines' → logprob: -8.976181030273438
    6. '   ' → logprob: -8.976181030273438
    7. ',' → logprob: -9.226181030273438
    8. '='' → logprob: -12.851181030273438
    9. 'lines' → logprob: -13.351181030273438
    10. '=line' → logprob: -13.351181030273438

Token 2676: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003799488302320242
    2. '1' → logprob: -5.6287994384765625
    3. ' s' → logprob: -9.378799438476562
    4. ''-' → logprob: -9.753799438476562
    5. '-' → logprob: -11.378799438476562
    6. '+' → logprob: -11.378799438476562
    7. '   ' → logprob: -11.878799438476562
    8. 'lines' → logprob: -12.003799438476562
    9. ' ' → logprob: -12.253799438476562
    10. ''s' → logprob: -12.378799438476562

Token 2677: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.870950215263292e-05
    2. '=' → logprob: -10.750048637390137
    3. '0' → logprob: -11.750048637390137
    4. '1' → logprob: -12.875048637390137
    5. 's' → logprob: -12.875048637390137
    6. '[
' → logprob: -13.000048637390137
    7. '   ' → logprob: -13.375048637390137
    8. ''' → logprob: -13.500048637390137
    9. ' =' → logprob: -13.625048637390137
    10. ' ' → logprob: -13.625048637390137

Token 2678: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15858596563339233
    2. '1' → logprob: -2.033586025238037
    3. '[' → logprob: -4.158586025238037
    4. ' ' → logprob: -9.033585548400879
    5. '```' → logprob: -11.783585548400879
    6. '   ' → logprob: -11.908585548400879
    7. ''' → logprob: -12.033585548400879
    8. '`' → logprob: -12.283585548400879
    9. ':' → logprob: -12.283585548400879
    10. ''[' → logprob: -13.908585548400879

Token 2679: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08295373618602753
    2. ',
' → logprob: -3.332953691482544
    3. '
' → logprob: -4.332953929901123
    4. '       ' → logprob: -4.707953929901123
    5. 'def' → logprob: -5.582953929901123
    6. '           ' → logprob: -5.582953929901123
    7. '[' → logprob: -5.832953929901123
    8. '=' → logprob: -5.832953929901123
    9. ' ,' → logprob: -6.082953929901123
    10. ')' → logprob: -6.957953929901123

Token 2680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008499100804328918
    2. ',' → logprob: -5.7584991455078125
    3. '
' → logprob: -6.3834991455078125
    4. '   ' → logprob: -6.6334991455078125
    5. 'sub' → logprob: -7.6334991455078125
    6. 'rest' → logprob: -8.008499145507812
    7. '```' → logprob: -8.383499145507812
    8. ' lines' → logprob: -8.508499145507812
    9. '_sub' → logprob: -8.633499145507812
    10. ',
' → logprob: -8.758499145507812

Token 2681: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.12174715101718903
    2. '       ' → logprob: -2.2467472553253174
    3. 'rest' → logprob: -4.871747016906738
    4. 'new' → logprob: -7.496747016906738
    5. 'lines' → logprob: -8.121747016906738
    6. '   ' → logprob: -8.746747016906738
    7. 'remaining' → logprob: -9.746747016906738
    8. '	sub' → logprob: -10.121747016906738
    9. ' sub' → logprob: -10.746747016906738
    10. '           ' → logprob: -11.246747016906738

Token 2682: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.704273118884885e-07
    2. '_line' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.375
    4. '```' → logprob: -17.0
    5. ' =' → logprob: -17.125
    6. '_' → logprob: -17.125
    7. '_LINES' → logprob: -17.5
    8. '_cells' → logprob: -17.625
    9. '_len' → logprob: -18.125
    10. 'Lines' → logprob: -18.875

Token 2683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005296958144754171
    2. ' =' → logprob: -5.2552971839904785
    3. '[' → logprob: -10.38029670715332
    4. '=[' → logprob: -10.88029670715332
    5. '=[]' → logprob: -12.25529670715332
    6. '=[]
' → logprob: -12.75529670715332
    7. '   ' → logprob: -13.13029670715332
    8. '=
' → logprob: -13.63029670715332
    9. '```' → logprob: -14.38029670715332
    10. 'for' → logprob: -14.88029670715332

Token 2684: ' []
' (ID: 8911)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.931281566619873
    2. '[line' → logprob: -0.931281566619873
    3. '[' → logprob: -1.931281566619873
    4. '[]
' → logprob: -2.931281566619873
    5. '[s' → logprob: -5.056281566619873
    6. '[]' → logprob: -5.681281566619873
    7. '[sub' → logprob: -6.931281566619873
    8. '[new' → logprob: -7.306281566619873
    9. '[list' → logprob: -9.056282043457031
    10. '[str' → logprob: -9.056282043457031

Token 2685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03911518678069115
    2. 'for' → logprob: -3.4141151905059814
    3. '   ' → logprob: -5.289114952087402
    4. ' for' → logprob: -7.914114952087402
    5. '	for' → logprob: -10.914114952087402
    6. '           ' → logprob: -11.289114952087402
    7. '[' → logprob: -12.539114952087402
    8. ' ' → logprob: -12.914114952087402
    9. '	' → logprob: -13.414114952087402
    10. '	       ' → logprob: -14.039114952087402

Token 2686: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006386925233528018
    2. ' for' → logprob: -7.375638484954834
    3. '       ' → logprob: -11.875638961791992
    4. '	for' → logprob: -12.500638961791992
    5. '[' → logprob: -14.375638961791992
    6. '   ' → logprob: -14.625638961791992
    7. '           ' → logprob: -15.500638961791992
    8. '```' → logprob: -15.875638961791992
    9. 'from' → logprob: -17.250638961791992
    10. ' ' → logprob: -17.750638961791992

Token 2687: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.7120533811976202e-05
    2. ' row' → logprob: -11.000017166137695
    3. 'range' → logprob: -15.125017166137695
    4. '(row' → logprob: -17.375017166137695
    5. '   ' → logprob: -18.250017166137695
    6. '	row' → logprob: -18.250017166137695
    7. '[row' → logprob: -18.625017166137695
    8. ' ' → logprob: -18.750017166137695
    9. '_row' → logprob: -19.000017166137695
    10. 'i' → logprob: -19.000017166137695

Token 2688: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008868645876646042
    2. 'in' → logprob: -4.75886869430542
    3. '   ' → logprob: -9.633868217468262
    4. '[' → logprob: -9.633868217468262
    5. '       ' → logprob: -10.633868217468262
    6. '<|end|>' → logprob: -10.633868217468262
    7. '<|end|>' → logprob: -11.633868217468262
    8. 'n' → logprob: -11.633868217468262
    9. ' ' → logprob: -11.883868217468262
    10. 'import' → logprob: -12.008868217468262

Token 2689: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012346376897767186
    2. ' range' → logprob: -6.751234531402588
    3. 'lines' → logprob: -9.876235008239746
    4. 'rows' → logprob: -11.751235008239746
    5. 'row' → logprob: -12.626235008239746
    6. '(range' → logprob: -14.501235008239746
    7. '[' → logprob: -14.751235008239746
    8. 's' → logprob: -15.501235008239746
    9. '0' → logprob: -16.12623405456543
    10. '   ' → logprob: -16.12623405456543

Token 2690: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.23609383404254913
    2. 'range' → logprob: -2.236093759536743
    3. 'lines' → logprob: -3.236093759536743
    4. '(h' → logprob: -3.361093759536743
    5. 'rows' → logprob: -4.486093997955322
    6. 'len' → logprob: -5.361093997955322
    7. '[h' → logprob: -5.486093997955322
    8. '1' → logprob: -6.611093997955322
    9. 'row' → logprob: -6.736093997955322
    10. ' range' → logprob: -6.861093997955322

Token 2691: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.050646744668483734
    2. '[' → logprob: -3.4256467819213867
    3. ':
' → logprob: -5.175646781921387
    4. '       ' → logprob: -5.675646781921387
    5. '           ' → logprob: -5.675646781921387
    6. ':' → logprob: -6.800646781921387
    7. '):' → logprob: -6.925646781921387
    8. ')[' → logprob: -7.050646781921387
    9. ']:
' → logprob: -8.175646781921387
    10. '=' → logprob: -8.550646781921387

Token 2692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025315487291663885
    2. 'sub' → logprob: -6.6275315284729
    3. '       ' → logprob: -7.5025315284729
    4. '   ' → logprob: -7.8775315284729
    5. ' sub' → logprob: -8.752532005310059
    6. '	       ' → logprob: -10.377532005310059
    7. '               ' → logprob: -11.002532005310059
    8. ' ' → logprob: -11.377532005310059
    9. '[sub' → logprob: -11.377532005310059
    10. '[' → logprob: -11.627532005310059

Token 2693: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.01429643016308546
    2. ' sub' → logprob: -5.014296531677246
    3. '           ' → logprob: -5.139296531677246
    4. '[sub' → logprob: -7.514296531677246
    5. 'row' → logprob: -8.514296531677246
    6. '   ' → logprob: -8.514296531677246
    7. '.sub' → logprob: -8.639296531677246
    8. '       ' → logprob: -9.014296531677246
    9. '=sub' → logprob: -9.389296531677246
    10. '	sub' → logprob: -9.764296531677246

Token 2694: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.055570729076862335
    2. '           ' → logprob: -3.5555708408355713
    3. '[' → logprob: -4.430570602416992
    4. '       ' → logprob: -5.680570602416992
    5. '.append' → logprob: -6.180570602416992
    6. '```' → logprob: -6.305570602416992
    7. 'Lines' → logprob: -6.430570602416992
    8. '   ' → logprob: -7.055570602416992
    9. '         ' → logprob: -7.680570602416992
    10. '               ' → logprob: -7.680570602416992

Token 2695: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03337663412094116
    2. '=' → logprob: -3.908376693725586
    3. 'append' → logprob: -4.658376693725586
    4. '           ' → logprob: -6.408376693725586
    5. ' =' → logprob: -7.158376693725586
    6. '=sub' → logprob: -8.783376693725586
    7. '+=' → logprob: -8.908376693725586
    8. '[' → logprob: -9.533376693725586
    9. 'def' → logprob: -9.908376693725586
    10. '       ' → logprob: -10.158376693725586

Token 2696: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0565844401717186
    2. ' lines' → logprob: -2.931584358215332
    3. '(lines' → logprob: -6.931584358215332
    4. 's' → logprob: -7.556584358215332
    5. 'rows' → logprob: -8.806584358215332
    6. ' s' → logprob: -10.681584358215332
    7. '	lines' → logprob: -11.431584358215332
    8. '.lines' → logprob: -11.806584358215332
    9. 'line' → logprob: -12.181584358215332
    10. '           ' → logprob: -14.181584358215332

Token 2697: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.014552687294781208
    2. '[' → logprob: -4.264552593231201
    3. 'row' → logprob: -8.26455307006836
    4. '(row' → logprob: -10.13955307006836
    5. '           ' → logprob: -10.38955307006836
    6. '=row' → logprob: -10.88955307006836
    7. ')[' → logprob: -11.38955307006836
    8. '       ' → logprob: -11.76455307006836
    9. '][' → logprob: -12.13955307006836
    10. '[line' → logprob: -12.51455307006836

Token 2698: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16478677093982697
    2. '][' → logprob: -1.9147868156433105
    3. ')[' → logprob: -5.7897868156433105
    4. '       ' → logprob: -7.4147868156433105
    5. '           ' → logprob: -7.9147868156433105
    6. '   ' → logprob: -8.664786338806152
    7. ' [' → logprob: -9.414786338806152
    8. '1' → logprob: -9.664786338806152
    9. '>[' → logprob: -9.914786338806152
    10. '[start' → logprob: -10.414786338806152

Token 2699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. '   ' → logprob: -11.375016212463379
    3. ' ' → logprob: -12.625016212463379
    4. '
' → logprob: -15.375016212463379
    5. '           ' → logprob: -15.500016212463379
    6. '１' → logprob: -15.625016212463379
    7. '```' → logprob: -16.125015258789062
    8. '       ' → logprob: -16.250015258789062
    9. '  ' → logprob: -16.250015258789062
    10. '[' → logprob: -16.250015258789062

Token 2700: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0301019549369812
    2. ':])
' → logprob: -3.530102014541626
    3. ':]' → logprob: -8.280101776123047
    4. '])' → logprob: -10.530101776123047
    5. '][' → logprob: -11.030101776123047
    6. ':)' → logprob: -11.030101776123047
    7. ':].' → logprob: -11.155101776123047
    8. ':]
' → logprob: -12.155101776123047
    9. ':],' → logprob: -12.155101776123047
    10. '   ' → logprob: -12.280101776123047

Token 2701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08472929149866104
    2. '   ' → logprob: -3.2097291946411133
    3. '
' → logprob: -3.8347291946411133
    4. 'sub' → logprob: -4.209729194641113
    5. '           ' → logprob: -6.209729194641113
    6. '	sub' → logprob: -7.584729194641113
    7. '```' → logprob: -7.834729194641113
    8. '<|end|>' → logprob: -7.959729194641113
    9. 'trim' → logprob: -8.834729194641113
    10. '<|end|>' → logprob: -9.209729194641113

Token 2702: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' (adapté à ' sub') → logprob: -0.11365249007940292
    2. ' sub' → logprob: -2.613652467727661
    3. '
' → logprob: -3.488652467727661
    4. '       ' → logprob: -6.73865270614624
    5. '	sub' → logprob: -7.11365270614624
    6. '_sub' → logprob: -7.23865270614624
    7. '.sub' → logprob: -7.86365270614624
    8. '=sub' → logprob: -8.738652229309082
    9. '[sub' → logprob: -8.863652229309082
    10. '   ' → logprob: -10.238652229309082

Token 2703: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.320199877838604e-07
    2. '_cells' → logprob: -15.75
    3. '```' → logprob: -16.75
    4. '_LINES' → logprob: -17.5
    5. 'Lines' → logprob: -17.875
    6. 'lines' → logprob: -18.125
    7. '
' → logprob: -18.625
    8. '   ' → logprob: -19.0
    9. 'def' → logprob: -19.125
    10. '       ' → logprob: -19.5

Token 2704: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=sub' → logprob: -17.061967849731445
    4. '   ' → logprob: -17.186967849731445
    5. '=
' → logprob: -17.811967849731445
    6. '[' → logprob: -18.561967849731445
    7. '＝' → logprob: -18.811967849731445
    8. '    ' → logprob: -19.186967849731445
    9. '=cut' → logprob: -19.311967849731445
    10. '```' → logprob: -19.311967849731445

Token 2705: ' trim' (ID: 19334)
  Prédit: 'trim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trim' → logprob: -0.03804837539792061
    2. ' trim' → logprob: -3.288048267364502
    3. 'strip' → logprob: -12.16304874420166
    4. '(trim' → logprob: -13.91304874420166
    5. '_trim' → logprob: -14.41304874420166
    6. '.trim' → logprob: -15.53804874420166
    7. ' strip' → logprob: -17.038047790527344
    8. 'rstrip' → logprob: -17.913047790527344
    9. 'Trim' → logprob: -18.288047790527344
    10. '[' → logprob: -18.413047790527344

Token 2706: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -1.580929347255733e-05
    2. '=sub' → logprob: -12.000016212463379
    3. '[sub' → logprob: -12.250016212463379
    4. 'sub' → logprob: -12.375016212463379
    5. '{sub' → logprob: -15.625016212463379
    6. '(
' → logprob: -16.125015258789062
    7. '(' → logprob: -16.500015258789062
    8. '       ' → logprob: -17.000015258789062
    9. '```' → logprob: -17.250015258789062
    10. ' (' → logprob: -17.500015258789062

Token 2707: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0010450744302943349
    2. '(sub' → logprob: -7.001045227050781
    3. 'sub' → logprob: -9.376045227050781
    4. '(lines' → logprob: -10.751045227050781
    5. '[sub' → logprob: -11.501045227050781
    6. '_sub' → logprob: -12.001045227050781
    7. 'lines' → logprob: -12.376045227050781
    8. '[' → logprob: -13.001045227050781
    9. 'Lines' → logprob: -13.126045227050781
    10. '```' → logprob: -14.251045227050781

Token 2708: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7787687182426453
    2. ')
' → logprob: -0.7787687182426453
    3. '   ' → logprob: -2.52876877784729
    4. '       ' → logprob: -6.653768539428711
    5. '
' → logprob: -7.278768539428711
    6. ',' → logprob: -8.278768539428711
    7. ' ' → logprob: -11.153768539428711
    8. ')c' → logprob: -11.278768539428711
    9. '  ' → logprob: -11.403768539428711
    10. '),' → logprob: -11.903768539428711

Token 2709: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3678196668624878
    2. '       ' → logprob: -1.3678196668624878
    3. 'res' → logprob: -3.1178197860717773
    4. '   ' → logprob: -5.617819786071777
    5. 'return' → logprob: -5.617819786071777
    6. 'sub' → logprob: -7.492819786071777
    7. 'cell' → logprob: -7.742819786071777
    8. '```' → logprob: -8.742819786071777
    9. '           ' → logprob: -8.867819786071777
    10. ' c' → logprob: -9.367819786071777

Token 2710: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.44710636138916016
    2. 'sub' → logprob: -1.5721063613891602
    3. 'res' → logprob: -1.9471063613891602
    4. 'cell' → logprob: -4.82210636138916
    5. '       ' → logprob: -6.32210636138916
    6. '   ' → logprob: -8.19710636138916
    7. 'child' → logprob: -10.69710636138916
    8. 'rec' → logprob: -11.07210636138916
    9. '           ' → logprob: -11.32210636138916
    10. 'sc' → logprob: -11.44710636138916

Token 2711: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.048737701028585434
    2. ',' → logprob: -3.0487377643585205
    3. ',val' → logprob: -9.423737525939941
    4. ',c' → logprob: -10.048737525939941
    5. ',s' → logprob: -11.673737525939941
    6. ',p' → logprob: -12.048737525939941
    7. 'v' → logprob: -13.423737525939941
    8. ',e' → logprob: -13.798737525939941
    9. ',u' → logprob: -13.798737525939941
    10. ',d' → logprob: -13.923737525939941

Token 2712: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029692860320210457
    2. '=' → logprob: -3.7796928882598877
    3. ',v' → logprob: -5.654692649841309
    4. ',c' → logprob: -5.904692649841309
    5. ' =' → logprob: -10.404692649841309
    6. ',p' → logprob: -10.404692649841309
    7. ' ,' → logprob: -10.904692649841309
    8. ',_' → logprob: -11.404692649841309
    9. ',e' → logprob: -11.529692649841309
    10. ',s' → logprob: -11.654692649841309

Token 2713: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0024758970830589533
    2. ' parse' → logprob: -6.002475738525391
    3. '(parse' → logprob: -16.00247573852539
    4. '	parse' → logprob: -17.25247573852539
    5. '=parse' → logprob: -18.00247573852539
    6. '   ' → logprob: -18.75247573852539
    7. '_parse' → logprob: -18.75247573852539
    8. '.parse' → logprob: -19.62747573852539
    9. '```' → logprob: -20.00247573852539
    10. 'parser' → logprob: -20.12747573852539

Token 2714: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0005749551928602159
    2. 'parse' → logprob: -7.750575065612793
    3. 'cell' → logprob: -9.000575065612793
    4. 'sub' → logprob: -11.625575065612793
    5. '(parse' → logprob: -12.250575065612793
    6. '```' → logprob: -13.125575065612793
    7. '_cells' → logprob: -13.375575065612793
    8. '(sub' → logprob: -13.750575065612793
    9. '(cell' → logprob: -14.875575065612793
    10. '_sub' → logprob: -14.875575065612793

Token 2715: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -3.128163257315464e-07
    2. 'sub' → logprob: -16.125
    3. '=sub' → logprob: -16.375
    4. ' (' → logprob: -16.875
    5. '[sub' → logprob: -17.0
    6. '(Sub' → logprob: -19.25
    7. '(substr' → logprob: -19.25
    8. '{sub' → logprob: -19.375
    9. '```' → logprob: -19.875
    10. '   ' → logprob: -20.5

Token 2716: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00044353955308906734
    2. '(sub' → logprob: -7.875443458557129
    3. '_cells' → logprob: -11.125443458557129
    4. '[sub' → logprob: -11.125443458557129
    5. 'Lines' → logprob: -11.875443458557129
    6. '(lines' → logprob: -12.125443458557129
    7. 's' → logprob: -12.500443458557129
    8. 'lines' → logprob: -12.875443458557129
    9. 'sub' → logprob: -13.000443458557129
    10. '[' → logprob: -13.000443458557129

Token 2717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00549177173525095
    2. ',c' → logprob: -5.255491733551025
    3. '(sub' → logprob: -8.380492210388184
    4. ',s' → logprob: -12.005492210388184
    5. ',(' → logprob: -12.630492210388184
    6. ' ,' → logprob: -12.755492210388184
    7. '       ' → logprob: -12.755492210388184
    8. ',v' → logprob: -12.755492210388184
    9. ',
' → logprob: -13.380492210388184
    10. ',[' → logprob: -13.630492210388184

Token 2718: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -9.615255839889869e-05
    2. ' base' → logprob: -9.250096321105957
    3. '0' → logprob: -18.37509536743164
    4. '(base' → logprob: -18.75009536743164
    5. '_base' → logprob: -21.25009536743164
    6. 'Base' → logprob: -21.37509536743164
    7. '
' → logprob: -21.75009536743164
    8. ',' → logprob: -22.25009536743164
    9. '   ' → logprob: -22.50009536743164
    10. 'baseline' → logprob: -22.62509536743164

Token 2719: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00027921271976083517
    2. '1' → logprob: -9.500279426574707
    3. 'Line' → logprob: -9.500279426574707
    4. 'line' → logprob: -9.750279426574707
    5. '0' → logprob: -10.500279426574707
    6. '_base' → logprob: -10.750279426574707
    7. 'base' → logprob: -11.125279426574707
    8. '_cell' → logprob: -13.125279426574707
    9. '_lines' → logprob: -14.000279426574707
    10. '```' → logprob: -14.250279426574707

Token 2720: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48583266139030457
    2. ')' → logprob: -1.360832691192627
    3. '   ' → logprob: -2.235832691192627
    4. '       ' → logprob: -4.235832691192627
    5. ')
' → logprob: -5.110832691192627
    6. ',
' → logprob: -8.235832214355469
    7. ')return' → logprob: -8.485832214355469
    8. '),' → logprob: -9.110832214355469
    9. 'return' → logprob: -9.610832214355469
    10. ',)' → logprob: -10.235832214355469

Token 2721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001398929744027555
    2. '   ' → logprob: -9.125140190124512
    3. ',' → logprob: -11.625140190124512
    4. ' if' → logprob: -11.625140190124512
    5. '           ' → logprob: -12.375140190124512
    6. '<|end|>' → logprob: -13.000140190124512
    7. '	   ' → logprob: -13.250140190124512
    8. '	' → logprob: -13.375140190124512
    9. 'if' → logprob: -14.125140190124512
    10. '	if' → logprob: -14.750140190124512

Token 2722: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031255971640348434
    2. 'if' (adapté à ' if') → logprob: -3.5312559604644775
    3. ' if' → logprob: -6.656256198883057
    4. '   ' → logprob: -9.156255722045898
    5. '```' → logprob: -10.031255722045898
    6. '           ' → logprob: -10.156255722045898
    7. 'return' → logprob: -10.531255722045898
    8. '	if' → logprob: -13.281255722045898
    9. '``' → logprob: -15.281255722045898
    10. ' ' → logprob: -15.281255722045898

Token 2723: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0032252485398203135
    2. ' c' → logprob: -5.753225326538086
    3. 'sign' → logprob: -10.378225326538086
    4. '   ' → logprob: -11.503225326538086
    5. '    ' → logprob: -13.253225326538086
    6. 'v' → logprob: -13.503225326538086
    7. '     ' → logprob: -13.878225326538086
    8. '       ' → logprob: -13.878225326538086
    9. '```' → logprob: -15.503225326538086
    10. '	c' → logprob: -15.503225326538086

Token 2724: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014236963354051113
    2. 'is' → logprob: -4.264236927032471
    3. '	is' → logprob: -10.139237403869629
    4. ':' → logprob: -11.889237403869629
    5. '<|end|>' → logprob: -12.264237403869629
    6. '=None' → logprob: -12.389237403869629
    7. '```' → logprob: -12.764237403869629
    8. ')' → logprob: -12.764237403869629
    9. '   ' → logprob: -13.014237403869629
    10. 's' → logprob: -13.389237403869629

Token 2725: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.12982259690761566
    2. 'None' → logprob: -2.1298224925994873
    3. ' not' → logprob: -5.879822731018066
    4. ' None' → logprob: -9.379822731018066
    5. '   ' → logprob: -12.004822731018066
    6. 'Not' → logprob: -12.504822731018066
    7. 'none' → logprob: -14.379822731018066
    8. '(None' → logprob: -16.25482177734375
    9. '_not' → logprob: -16.37982177734375
    10. '	not' → logprob: -16.37982177734375

Token 2726: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0025128775741904974
    2. 'not' → logprob: -6.0025129318237305
    3. ' None' → logprob: -10.25251293182373
    4. ' not' → logprob: -13.62751293182373
    5. 'none' → logprob: -14.50251293182373
    6. '   ' → logprob: -16.627511978149414
    7. 'Not' → logprob: -16.627511978149414
    8. '_None' → logprob: -17.627511978149414
    9. '(None' → logprob: -18.002511978149414
    10. '_none' → logprob: -19.127511978149414

Token 2727: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12672196328639984
    2. ':
' → logprob: -2.6267218589782715
    3. ':' → logprob: -3.5017218589782715
    4. ',' → logprob: -4.3767218589782715
    5. ':return' → logprob: -5.8767218589782715
    6. '	       ' → logprob: -7.6267218589782715
    7. ' and' → logprob: -9.00172233581543
    8. '		' → logprob: -9.25172233581543
    9. '```' → logprob: -9.37672233581543
    10. '       ' → logprob: -9.62672233581543

Token 2728: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007067138212732971
    2. 'return' → logprob: -7.500706672668457
    3. ' return' → logprob: -9.250706672668457
    4. '	       ' → logprob: -11.000706672668457
    5. '```' → logprob: -11.500706672668457
    6. '               ' → logprob: -12.000706672668457
    7. '		' → logprob: -12.375706672668457
    8. '       ' → logprob: -12.375706672668457
    9. '   ' → logprob: -12.375706672668457
    10. ' ' → logprob: -12.625706672668457

Token 2729: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3730585277080536
    2. 'return' (adapté à ' return') → logprob: -1.373058557510376
    3. '           ' → logprob: -2.873058557510376
    4. ' if' → logprob: -6.623058319091797
    5. ' return' → logprob: -9.998058319091797
    6. '   ' → logprob: -9.998058319091797
    7. '               ' → logprob: -10.248058319091797
    8. '       ' → logprob: -10.623058319091797
    9. '	       ' → logprob: -11.873058319091797
    10. '	if' → logprob: -12.123058319091797

Token 2730: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.015186551958322525
    2. 'c' → logprob: -4.265186786651611
    3. ' Cell' → logprob: -7.015186786651611
    4. '(Cell' → logprob: -9.765186309814453
    5. ' c' → logprob: -10.015186309814453
    6. '   ' → logprob: -12.265186309814453
    7. 'None' → logprob: -12.765186309814453
    8. '(c' → logprob: -12.890186309814453
    9. '
' → logprob: -13.265186309814453
    10. '(' → logprob: -13.515186309814453

Token 2731: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.051423948258161545
    2. '(sub' → logprob: -3.176424026489258
    3. '(' → logprob: -5.051424026489258
    4. '(
' → logprob: -6.676424026489258
    5. '(s' → logprob: -7.801424026489258
    6. ' (' → logprob: -9.426424026489258
    7. '(None' → logprob: -10.051424026489258
    8. 'sub' → logprob: -10.176424026489258
    9. 'lines' → logprob: -10.301424026489258
    10. '(v' → logprob: -10.551424026489258

Token 2732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002741158241406083
    2. ',c' → logprob: -6.25274133682251
    3. '       ' → logprob: -8.252740859985352
    4. ',None' → logprob: -8.627740859985352
    5. '   ' → logprob: -9.252740859985352
    6. ',v' → logprob: -9.752740859985352
    7. ',line' → logprob: -10.002740859985352
    8. '           ' → logprob: -10.002740859985352
    9. ' ,' → logprob: -10.377740859985352
    10. ',self' → logprob: -11.752740859985352

Token 2733: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -5.44312788406387e-05
    2. ' base' → logprob: -9.875054359436035
    3. '(base' → logprob: -13.000054359436035
    4. 'c' → logprob: -15.500054359436035
    5. '   ' → logprob: -15.625054359436035
    6. 'v' → logprob: -16.00005531311035
    7. ' ' → logprob: -16.87505531311035
    8. '
' → logprob: -18.50005531311035
    9. '  ' → logprob: -18.62505531311035
    10. '	base' → logprob: -18.87505531311035

Token 2734: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00025287605240009725
    2. '_base' → logprob: -8.625252723693848
    3. 'line' → logprob: -10.625252723693848
    4. 'base' → logprob: -10.875252723693848
    5. 'Line' → logprob: -11.625252723693848
    6. '1' → logprob: -11.750252723693848
    7. '0' → logprob: -11.875252723693848
    8. '   ' → logprob: -13.125252723693848
    9. '```' → logprob: -13.250252723693848
    10. '(base' → logprob: -14.625252723693848

Token 2735: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019885902293026447
    2. '   ' → logprob: -6.626988410949707
    3. ' ,' → logprob: -8.751988410949707
    4. '),' → logprob: -8.876988410949707
    5. '           ' → logprob: -9.501988410949707
    6. '       ' → logprob: -9.751988410949707
    7. '',' → logprob: -10.001988410949707
    8. ',None' → logprob: -10.001988410949707
    9. ',
' → logprob: -10.376988410949707
    10. ',(' → logprob: -11.126988410949707

Token 2736: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.24417640268802643
    2. '(sign' → logprob: -1.6191763877868652
    3. '('-',' → logprob: -4.619176387786865
    4. '(' → logprob: -5.244176387786865
    5. ' ('' → logprob: -6.869176387786865
    6. '('-' → logprob: -7.369176387786865
    7. '('+' → logprob: -7.619176387786865
    8. ' (' → logprob: -7.619176387786865
    9. '   ' → logprob: -8.994176864624023
    10. '(('' → logprob: -9.244176864624023

Token 2737: 'factor' (ID: 73174)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.9662059545516968
    2. 'sign' → logprob: -1.5912059545516968
    3. '(sign' → logprob: -2.0912060737609863
    4. ''s' → logprob: -2.3412060737609863
    5. '('' → logprob: -2.5912060737609863
    6. ''' → logprob: -2.9662060737609863
    7. 'un' → logprob: -4.216206073760986
    8. ''op' → logprob: -4.466206073760986
    9. ''ex' → logprob: -4.591206073760986
    10. 'expr' → logprob: -5.216206073760986

Token 2738: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00011212585377506912
    2. '',(' → logprob: -9.250112533569336
    3. '',
' → logprob: -12.500112533569336
    4. ',' → logprob: -12.500112533569336
    5. '(',' → logprob: -12.625112533569336
    6. ''' → logprob: -13.250112533569336
    7. '',[' → logprob: -14.000112533569336
    8. '(' → logprob: -14.750112533569336
    9. '','' → logprob: -14.750112533569336
    10. '",' → logprob: -15.000112533569336

Token 2739: ' [' (ID: 723)
  Prédit: '(sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sign' → logprob: -0.1975364238023758
    2. 'sign' → logprob: -2.1975364685058594
    3. '[' → logprob: -3.3225364685058594
    4. '(' → logprob: -4.072536468505859
    5. 'v' → logprob: -5.822536468505859
    6. '(v' → logprob: -6.072536468505859
    7. '('-',' → logprob: -6.197536468505859
    8. '('' → logprob: -6.197536468505859
    9. 'c' → logprob: -6.572536468505859
    10. '(c' → logprob: -6.572536468505859

Token 2740: 'sign' (ID: 14677)
  Prédit: 'sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.3156081438064575
    2. '(sign' → logprob: -1.3156081438064575
    3. '(' → logprob: -6.565608024597168
    4. '(s' → logprob: -8.815608024597168
    5. '   ' → logprob: -8.940608024597168
    6. '[' → logprob: -9.315608024597168
    7. '('-',' → logprob: -9.315608024597168
    8. ' (' → logprob: -9.315608024597168
    9. '('' → logprob: -9.440608024597168
    10. '
' → logprob: -9.815608024597168

Token 2741: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1619056612253189
    2. ',v' → logprob: -1.9119056463241577
    3. ',c' → logprob: -7.286905765533447
    4. ' ,' → logprob: -7.661905765533447
    5. ',
' → logprob: -7.911905765533447
    6. '',' → logprob: -10.661905288696289
    7. 'v' → logprob: -11.036905288696289
    8. '           ' → logprob: -11.161905288696289
    9. '+' → logprob: -11.661905288696289
    10. '   ' → logprob: -11.911905288696289

Token 2742: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.049270063638687134
    2. ',' → logprob: -3.0492701530456543
    3. ')' → logprob: -8.674269676208496
    4. '])
' → logprob: -8.924269676208496
    5. ']' → logprob: -9.549269676208496
    6. '[' → logprob: -9.674269676208496
    7. '       ' → logprob: -10.049269676208496
    8. '           ' → logprob: -10.174269676208496
    9. ''])' → logprob: -10.174269676208496
    10. '   ' → logprob: -10.549269676208496

Token 2743: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39151808619499207
    2. '   ' → logprob: -1.1415181159973145
    3. ')' → logprob: -6.6415181159973145
    4. '```' → logprob: -6.7665181159973145
    5. 'return' → logprob: -7.0165181159973145
    6. '           ' → logprob: -8.266517639160156
    7. '<|end|>' → logprob: -8.266517639160156
    8. '`' → logprob: -9.391517639160156
    9. ' ' → logprob: -9.391517639160156
    10. '...' → logprob: -9.641517639160156

Token 2744: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4927194118499756
    2. 'return' → logprob: -0.9927194118499756
    3. '#' (adapté à ' #') → logprob: -4.617719650268555
    4. '
' → logprob: -5.117719650268555
    5. '       ' → logprob: -7.117719650268555
    6. 'if' → logprob: -7.117719650268555
    7. ' return' → logprob: -7.742719650268555
    8. '    
' → logprob: -8.492719650268555
    9. 'else' → logprob: -9.617719650268555
    10. '```' → logprob: -9.867719650268555

Token 2745: ' digits' (ID: 37806)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09477400779724121
    2. '#' → logprob: -3.219774007797241
    3. 'if' → logprob: -3.719774007797241
    4. '       ' → logprob: -3.844774007797241
    5. '   ' → logprob: -5.46977424621582
    6. 'c' → logprob: -8.46977424621582
    7. 'def' → logprob: -8.71977424621582
    8. '           ' → logprob: -9.84477424621582
    9. '```' → logprob: -9.96977424621582
    10. ' return' → logprob: -10.34477424621582

Token 2746: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1619919538497925
    2. ':' → logprob: -1.4119919538497925
    3. '.' → logprob: -2.286992073059082
    4. '...' → logprob: -2.411992073059082
    5. '<|end|>' → logprob: -2.536992073059082
    6. '       ' → logprob: -3.411992073059082
    7. ')' → logprob: -3.786992073059082
    8. '#' → logprob: -4.036992073059082
    9. ' and' → logprob: -4.286992073059082
    10. '[' → logprob: -4.411992073059082

Token 2747: ' parentheses' (ID: 180602)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.6619058847427368
    2. ''.' → logprob: -1.0369058847427368
    3. '('.' → logprob: -3.4119057655334473
    4. 'chars' → logprob: -3.9119057655334473
    5. '.' → logprob: -4.411905765533447
    6. ''' → logprob: -4.536905765533447
    7. '(' → logprob: -4.786905765533447
    8. '')' → logprob: -5.161905765533447
    9. '('' → logprob: -5.286905765533447
    10. '('.')' → logprob: -5.286905765533447

Token 2748: ' just' (ID: 1327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1773582100868225
    2. '       ' → logprob: -2.0523581504821777
    3. 'if' → logprob: -3.9273581504821777
    4. ' if' → logprob: -4.927358150482178
    5. '<|end|>' → logprob: -5.552358150482178
    6. '...' → logprob: -6.927358150482178
    7. '```' → logprob: -7.927358150482178
    8. '#' → logprob: -8.052358627319336
    9. '           ' → logprob: -8.052358627319336
    10. 'return' → logprob: -8.302358627319336

Token 2749: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.026856234297156334
    2. 'if' → logprob: -4.526856422424316
    3. '       ' → logprob: -5.026856422424316
    4. ' return' → logprob: -5.026856422424316
    5. '           ' → logprob: -7.026856422424316
    6. '   ' → logprob: -7.901856422424316
    7. 's' → logprob: -8.026856422424316
    8. ' if' → logprob: -8.026856422424316
    9. 'try' → logprob: -8.901856422424316
    10. 'pass' → logprob: -9.276856422424316

Token 2750: '
' (ID: 198)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.6853362321853638
    2. '   ' → logprob: -1.1853362321853638
    3. '       ' → logprob: -2.685336112976074
    4. 'return' → logprob: -2.810336112976074
    5. ' Cell' → logprob: -3.560336112976074
    6. '(Cell' → logprob: -4.685336112976074
    7. '('' → logprob: -4.810336112976074
    8. '(' → logprob: -5.810336112976074
    9. 'None' → logprob: -6.060336112976074
    10. ' return' → logprob: -6.310336112976074

Token 2751: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027780253440141678
    2. 'return' → logprob: -3.902780294418335
    3. '   ' → logprob: -5.152780055999756
    4. '           ' → logprob: -7.402780055999756
    5. '```' → logprob: -7.527780055999756
    6. ' return' → logprob: -9.152780532836914
    7. '               ' → logprob: -10.277780532836914
    8. '
' → logprob: -10.402780532836914
    9. ':return' → logprob: -10.527780532836914
    10. 'if' → logprob: -10.527780532836914

Token 2752: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1526108682155609
    2. '       ' → logprob: -2.2776107788085938
    3. 'if' (adapté à ' if') → logprob: -3.6526107788085938
    4. '   ' → logprob: -4.527610778808594
    5. ' return' → logprob: -6.777610778808594
    6. '           ' → logprob: -7.777610778808594
    7. ' if' → logprob: -7.902610778808594
    8. '```' → logprob: -8.402610778808594
    9. '               ' → logprob: -11.277610778808594
    10. '
' → logprob: -11.277610778808594

Token 2753: ' h' (ID: 312)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5315932631492615
    2. 'len' → logprob: -1.4065933227539062
    3. 's' → logprob: -2.0315933227539062
    4. ' s' → logprob: -4.656593322753906
    5. 'all' → logprob: -4.781593322753906
    6. ' lines' → logprob: -5.281593322753906
    7. 'h' → logprob: -5.281593322753906
    8. ' all' → logprob: -5.406593322753906
    9. ' len' → logprob: -5.781593322753906
    10. 'any' → logprob: -8.156593322753906

Token 2754: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5905464291572571
    2. '==' → logprob: -0.8405464291572571
    3. '>' → logprob: -4.965546607971191
    4. ' >' → logprob: -4.965546607971191
    5. '   ' → logprob: -8.090546607971191
    6. ' and' → logprob: -9.090546607971191
    7. '[' → logprob: -10.215546607971191
    8. ' !=' → logprob: -10.215546607971191
    9. 'and' → logprob: -11.215546607971191
    10. '>=' → logprob: -11.590546607971191

Token 2755: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004350797680672258
    2. ' ' → logprob: -7.750434875488281
    3. '   ' → logprob: -12.875434875488281
    4. '=' → logprob: -14.000434875488281
    5. '0' → logprob: -14.375434875488281
    6. 'import' → logprob: -15.875434875488281
    7. '  ' → logprob: -16.00043487548828
    8. '```' → logprob: -16.62543487548828
    9. '
' → logprob: -17.00043487548828
    10. '    ' → logprob: -17.37543487548828

Token 2756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.625011444091797
    3. '0' → logprob: -13.750011444091797
    4. '   ' → logprob: -14.500011444091797
    5. '```' → logprob: -15.125011444091797
    6. '=' → logprob: -15.625011444091797
    7. '>' → logprob: -16.250011444091797
    8. '...' → logprob: -16.250011444091797
    9. '
' → logprob: -17.125011444091797
    10. '[' → logprob: -17.750011444091797

Token 2757: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13563145697116852
    2. 'and' → logprob: -2.135631561279297
    3. '   ' → logprob: -5.135631561279297
    4. '       ' → logprob: -6.010631561279297
    5. '[' → logprob: -9.135631561279297
    6. ':
' → logprob: -9.135631561279297
    7. ':' → logprob: -10.135631561279297
    8. '           ' → logprob: -10.510631561279297
    9. '	and' → logprob: -11.135631561279297
    10. ',' → logprob: -12.135631561279297

Token 2758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014728414826095104
    2. ' and' → logprob: -7.2514729499816895
    3. '   ' → logprob: -7.5014729499816895
    4. '           ' → logprob: -9.126472473144531
    5. '```' → logprob: -10.126472473144531
    6. 'and' → logprob: -10.376472473144531
    7. '               ' → logprob: -12.126472473144531
    8. '[' → logprob: -12.251472473144531
    9. '      ' → logprob: -12.251472473144531
    10. '`' → logprob: -13.001472473144531

Token 2759: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010929794982075691
    2. '           ' → logprob: -4.885929584503174
    3. 'return' → logprob: -6.260929584503174
    4. '   ' → logprob: -7.760929584503174
    5. ' return' → logprob: -7.885929584503174
    6. ' if' → logprob: -8.260930061340332
    7. 'if' → logprob: -8.510930061340332
    8. '```' → logprob: -9.885930061340332
    9. '               ' → logprob: -10.760930061340332
    10. '	return' → logprob: -11.635930061340332

Token 2760: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9264035820960999
    2. ' =' → logprob: -0.9264035820960999
    3. '[' → logprob: -2.176403522491455
    4. '       ' → logprob: -3.301403522491455
    5. '[len' → logprob: -4.176403522491455
    6. ')' → logprob: -5.301403522491455
    7. '==' → logprob: -5.426403522491455
    8. '   ' → logprob: -5.551403522491455
    9. 'def' → logprob: -5.801403522491455
    10. ',' → logprob: -6.051403522491455

Token 2761: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1004614606499672
    2. 'lines' → logprob: -2.475461483001709
    3. '''.' → logprob: -4.850461483001709
    4. ' s' → logprob: -6.725461483001709
    5. 'int' → logprob: -6.975461483001709
    6. ' lines' → logprob: -7.350461483001709
    7. ' ' → logprob: -8.72546100616455
    8. ' ''.' → logprob: -8.85046100616455
    9. '   ' → logprob: -9.22546100616455
    10. '(s' → logprob: -9.35046100616455

Token 2762: '.strip' (ID: 40613)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0065026781521737576
    2. '[val' → logprob: -5.256502628326416
    3. '+' → logprob: -8.006503105163574
    4. '[
' → logprob: -8.631503105163574
    5. '[:]' → logprob: -8.756503105163574
    6. '[len' → logprob: -9.756503105163574
    7. '
' → logprob: -9.881503105163574
    8. ' +' → logprob: -9.881503105163574
    9. '[-' → logprob: -10.131503105163574
    10. '<|end|>' → logprob: -10.256503105163574

Token 2763: '('.' (ID: 7925)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37573274970054626
    2. '[' → logprob: -1.2507327795028687
    3. '()[' → logprob: -3.750732660293579
    4. '()
' → logprob: -5.875732898712158
    5. '   ' → logprob: -8.250732421875
    6. '       ' → logprob: -9.375732421875
    7. 'def' → logprob: -10.250732421875
    8. ')' → logprob: -10.250732421875
    9. '```' → logprob: -10.250732421875
    10. '()==' → logprob: -10.500732421875

Token 2764: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0006316900253296
    2. '')' → logprob: -1.1256316900253296
    3. '()' → logprob: -1.8756316900253296
    4. '0' → logprob: -2.250631809234619
    5. '())' → logprob: -4.125631809234619
    6. ')
' → logprob: -4.625631809234619
    7. '')
' → logprob: -5.250631809234619
    8. '[' → logprob: -5.500631809234619
    9. '())
' → logprob: -5.625631809234619
    10. '()[' → logprob: -5.875631809234619

Token 2765: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3809654414653778
    2. ':
' → logprob: -2.0059654712677
    3. ':' → logprob: -3.0059654712677
    4. '       ' → logprob: -3.6309654712677
    5. ':return' → logprob: -3.8809654712677
    6. '   ' → logprob: -4.005965232849121
    7. ' and' → logprob: -4.005965232849121
    8. '
' → logprob: -4.255965232849121
    9. '```' → logprob: -4.505965232849121
    10. ' if' → logprob: -5.005965232849121

Token 2766: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05632372200489044
    2. 'return' → logprob: -3.431323766708374
    3. '       ' → logprob: -3.931323766708374
    4. ' if' → logprob: -6.056323528289795
    5. '           ' → logprob: -8.306324005126953
    6. '   ' → logprob: -8.681324005126953
    7. '```' → logprob: -10.556324005126953
    8. ' return' → logprob: -11.556324005126953
    9. '	if' → logprob: -12.431324005126953
    10. '               ' → logprob: -13.556324005126953

Token 2767: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0012836871901527047
    2. ' val' → logprob: -7.001283645629883
    3. 'len' → logprob: -8.001283645629883
    4. 'all' → logprob: -10.251283645629883
    5. ' all' → logprob: -13.376283645629883
    6. ' len' → logprob: -15.626283645629883
    7. '(val' → logprob: -17.126283645629883
    8. '   ' → logprob: -17.751283645629883
    9. ' ' → logprob: -18.251283645629883
    10. '  ' → logprob: -18.876283645629883

Token 2768: '.is' (ID: 3109)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6197494268417358
    2. ' and' → logprob: -0.8697494268417358
    3. '==' → logprob: -3.7447495460510254
    4. '[' → logprob: -5.119749546051025
    5. '!=' → logprob: -5.119749546051025
    6. 'in' → logprob: -5.869749546051025
    7. '.is' → logprob: -6.994749546051025
    8. ' in' → logprob: -7.119749546051025
    9. 'not' → logprob: -7.369749546051025
    10. ':' → logprob: -8.119749069213867

Token 2769: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0001593195047462359
    2. 'decimal' → logprob: -8.75015926361084
    3. 'numeric' → logprob: -14.00015926361084
    4. 'alpha' → logprob: -18.250160217285156
    5. '_digit' → logprob: -18.500160217285156
    6. 'digital' → logprob: -18.625160217285156
    7. 'digits' → logprob: -19.000160217285156
    8. 'al' → logprob: -19.375160217285156
    9. 'Digit' → logprob: -19.625160217285156
    10. ' digit' → logprob: -19.750160217285156

Token 2770: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.7455634474754333
    2. '()' → logprob: -0.8705634474754333
    3. '():' → logprob: -2.245563507080078
    4. '()):
' → logprob: -7.370563507080078
    5. '())' → logprob: -9.495563507080078
    6. '()==' → logprob: -9.745563507080078
    7. '(' → logprob: -10.495563507080078
    8. ':' → logprob: -10.745563507080078
    9. '()>' → logprob: -10.995563507080078
    10. '():
' → logprob: -10.995563507080078

Token 2771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006349049974232912
    2. ' and' → logprob: -6.006349086761475
    3. '       ' → logprob: -6.506349086761475
    4. ':
' → logprob: -6.881349086761475
    5. ':' → logprob: -7.006349086761475
    6. ' or' → logprob: -8.381348609924316
    7. '               ' → logprob: -9.131348609924316
    8. '```' → logprob: -10.881348609924316
    9. ':return' → logprob: -11.006348609924316
    10. ',' → logprob: -11.131348609924316

Token 2772: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21429343521595
    2. '           ' → logprob: -1.7142934799194336
    3. ' return' → logprob: -4.714293479919434
    4. '   ' → logprob: -5.714293479919434
    5. '       ' → logprob: -7.714293479919434
    6. '
' → logprob: -10.464293479919434
    7. '               ' → logprob: -10.839293479919434
    8. '	return' → logprob: -10.964293479919434
    9. '```' → logprob: -11.964293479919434
    10. ' ' → logprob: -12.714293479919434

Token 2773: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.0001238004770129919
    2. ' Cell' → logprob: -9.000123977661133
    3. '(Cell' → logprob: -15.625123977661133
    4. 'None' → logprob: -15.750123977661133
    5. '   ' → logprob: -17.000123977661133
    6. '_Cell' → logprob: -18.625123977661133
    7. '<Cell' → logprob: -18.875123977661133
    8. ' ' → logprob: -19.500123977661133
    9. 'Cel' → logprob: -20.375123977661133
    10. '.Cell' → logprob: -21.500123977661133

Token 2774: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: 0.0
    2. 'lines' → logprob: -17.25
    3. '([],' → logprob: -18.125
    4. '([' → logprob: -18.875
    5. '(rows' → logprob: -19.125
    6. '```' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. '	lines' → logprob: -20.125
    9. ' (' → logprob: -20.375
    10. '(' → logprob: -20.875

Token 2775: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.02639399841427803
    2. ',' → logprob: -3.6513938903808594
    3. ',val' → logprob: -10.52639389038086
    4. 'lines' → logprob: -11.02639389038086
    5. '(' → logprob: -11.52639389038086
    6. '   ' → logprob: -11.77639389038086
    7. 'val' → logprob: -12.02639389038086
    8. ' ,' → logprob: -12.15139389038086
    9. '(val' → logprob: -12.15139389038086
    10. '[' → logprob: -12.90139389038086

Token 2776: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -3.128163257315464e-07
    2. ' base' → logprob: -15.25
    3. '1' → logprob: -17.375
    4. '(base' → logprob: -18.625
    5. '0' → logprob: -19.375
    6. '	base' → logprob: -21.5
    7. '   ' → logprob: -21.75
    8. '```' → logprob: -22.375
    9. '
' → logprob: -23.0
    10. 'baseline' → logprob: -23.125

Token 2777: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00045200303429737687
    2. 'line' → logprob: -8.125452041625977
    3. 'Line' → logprob: -9.000452041625977
    4. '1' → logprob: -10.875452041625977
    5. 'base' → logprob: -11.875452041625977
    6. '0' → logprob: -13.750452041625977
    7. 'LINE' → logprob: -13.875452041625977
    8. '-line' → logprob: -13.875452041625977
    9. '_LINE' → logprob: -14.000452041625977
    10. ' ' → logprob: -14.125452041625977

Token 2778: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3069823086261749
    2. '),' → logprob: -1.6819822788238525
    3. ',val' → logprob: -2.5569822788238525
    4. '           ' → logprob: -8.056982040405273
    5. ' ,' → logprob: -8.556982040405273
    6. ',),' → logprob: -9.181982040405273
    7. ',len' → logprob: -10.306982040405273
    8. ',v' → logprob: -10.306982040405273
    9. '       ' → logprob: -10.681982040405273
    10. '   ' → logprob: -10.931982040405273

Token 2779: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8217402100563049
    2. 'int' → logprob: -1.1967401504516602
    3. '(int' → logprob: -1.4467401504516602
    4. '(val' → logprob: -4.19674015045166
    5. '('' → logprob: -4.94674015045166
    6. '('',' → logprob: -8.07174015045166
    7. '(' → logprob: -9.07174015045166
    8. ' (' → logprob: -9.69674015045166
    9. ' val' → logprob: -9.94674015045166
    10. ' int' → logprob: -10.32174015045166

Token 2780: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008001930080354214
    2. '
' → logprob: -5.883001804351807
    3. '<|end|>' → logprob: -6.133001804351807
    4. '       ' → logprob: -6.258001804351807
    5. ')' → logprob: -8.008002281188965
    6. 'return' → logprob: -8.508002281188965
    7. '.' → logprob: -8.883002281188965
    8. '...' → logprob: -8.883002281188965
    9. '```' → logprob: -9.258002281188965
    10. '#' → logprob: -10.258002281188965

Token 2781: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04153259098529816
    2. '
' → logprob: -3.291532516479492
    3. 'return' → logprob: -6.416532516479492
    4. '       ' → logprob: -6.666532516479492
    5. '```' → logprob: -9.291532516479492
    6. '    
' → logprob: -9.416532516479492
    7. '<|end|>' → logprob: -9.416532516479492
    8. ' ' → logprob: -9.541532516479492
    9. ')' → logprob: -9.666532516479492
    10. '#' → logprob: -10.791532516479492

Token 2782: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04817575216293335
    2. 'return' → logprob: -3.423175811767578
    3. '
' → logprob: -4.423175811767578
    4. '#' (adapté à ' #') → logprob: -6.673175811767578
    5. 'if' → logprob: -7.798175811767578
    6. '    
' → logprob: -8.298175811767578
    7. 'else' → logprob: -8.423175811767578
    8. '       ' → logprob: -9.048175811767578
    9. ' return' → logprob: -10.048175811767578
    10. 'elif' → logprob: -10.173175811767578

Token 2783: ' just' (ID: 1327)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003463225206360221
    2. '   ' → logprob: -6.503463268280029
    3. '#' → logprob: -7.003463268280029
    4. 'if' → logprob: -7.253463268280029
    5. '       ' → logprob: -8.253462791442871
    6. ' return' → logprob: -10.003462791442871
    7. 'else' → logprob: -10.753462791442871
    8. '```' → logprob: -11.878462791442871
    9. '
' → logprob: -12.878462791442871
    10. 'for' → logprob: -13.378462791442871

Token 2784: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001988471020013094
    2. ' return' → logprob: -6.501988410949707
    3. '       ' → logprob: -8.376988410949707
    4. '           ' → logprob: -8.501988410949707
    5. '   ' → logprob: -10.001988410949707
    6. '```' → logprob: -12.376988410949707
    7. '               ' → logprob: -14.501988410949707
    8. 'pass' → logprob: -14.876988410949707
    9. ':return' → logprob: -14.876988410949707
    10. '          ' → logprob: -15.001988410949707

Token 2785: '
' (ID: 198)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.017888043075799942
    2. ' Cell' → logprob: -4.267888069152832
    3. 'None' → logprob: -5.892888069152832
    4. 'return' → logprob: -7.642888069152832
    5. '   ' → logprob: -8.767888069152832
    6. ' None' → logprob: -8.767888069152832
    7. '(Cell' → logprob: -9.517888069152832
    8. ' return' → logprob: -10.017888069152832
    9. '       ' → logprob: -11.392888069152832
    10. ' ' → logprob: -11.392888069152832

Token 2786: '       ' (ID: 309)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.29456135630607605
    2. 'Cell' → logprob: -2.2945613861083984
    3. ' None' → logprob: -3.1695613861083984
    4. '       ' → logprob: -3.2945613861083984
    5. '   ' → logprob: -3.7945613861083984
    6. '(None' → logprob: -4.044561386108398
    7. '           ' → logprob: -4.294561386108398
    8. ',' → logprob: -5.044561386108398
    9. 'return' → logprob: -5.669561386108398
    10. ' lines' → logprob: -6.294561386108398

Token 2787: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.028601838275790215
    2. ' return' → logprob: -4.02860164642334
    3. '       ' → logprob: -4.77860164642334
    4. '           ' → logprob: -6.40360164642334
    5. '   ' → logprob: -8.02860164642334
    6. '	return' → logprob: -13.02860164642334
    7. '               ' → logprob: -13.27860164642334
    8. ' ' → logprob: -13.40360164642334
    9. '        ' → logprob: -14.65360164642334
    10. '         ' → logprob: -14.65360164642334

Token 2788: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.0023398506455123425
    2. ' Cell' → logprob: -6.127339839935303
    3. 'None' → logprob: -9.002340316772461
    4. '(Cell' → logprob: -10.502340316772461
    5. ' None' → logprob: -12.877340316772461
    6. '(None' → logprob: -14.627340316772461
    7. '(' → logprob: -14.877340316772461
    8. '_Cell' → logprob: -15.127340316772461
    9. ' ' → logprob: -16.00234031677246
    10. '   ' → logprob: -16.37734031677246

Token 2789: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -1.7432603272027336e-06
    2. 'lines' → logprob: -14.250001907348633
    3. '(
' → logprob: -14.750001907348633
    4. '(' → logprob: -15.000001907348633
    5. '```' → logprob: -16.250001907348633
    6. '(data' → logprob: -16.375001907348633
    7. '(rows' → logprob: -17.625001907348633
    8. '	lines' → logprob: -18.250001907348633
    9. ' (' → logprob: -18.500001907348633
    10. '(line' → logprob: -18.875001907348633

Token 2790: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.11325818300247192
    2. ',' → logprob: -2.363258123397827
    3. '[' → logprob: -4.363258361816406
    4. 'lines' → logprob: -9.363258361816406
    5. ',
' → logprob: -9.863258361816406
    6. ')' → logprob: -10.863258361816406
    7. '),' → logprob: -11.238258361816406
    8. '   ' → logprob: -11.488258361816406
    9. ',line' → logprob: -11.613258361816406
    10. ',[' → logprob: -11.863258361816406

Token 2791: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -1.9361264946837764e-07
    2. ' base' → logprob: -16.0
    3. '0' → logprob: -17.25
    4. '(base' → logprob: -17.875
    5. '	base' → logprob: -21.125
    6. '   ' → logprob: -21.5
    7. '
' → logprob: -23.375
    8. '[' → logprob: -23.5
    9. ' ' → logprob: -23.5
    10. 'line' → logprob: -23.5

Token 2792: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.009213493205606937
    2. 'base' → logprob: -5.259213447570801
    3. '[' → logprob: -5.884213447570801
    4. '_base' → logprob: -7.509213447570801
    5. '(base' → logprob: -7.634213447570801
    6. 'line' → logprob: -9.0092134475708
    7. '   ' → logprob: -11.6342134475708
    8. '```' → logprob: -12.0092134475708
    9. '_lines' → logprob: -12.7592134475708
    10. '0' → logprob: -13.0092134475708

Token 2793: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.007335895672440529
    2. ')' → logprob: -5.007335662841797
    3. ',' → logprob: -8.882335662841797
    4. '   ' → logprob: -9.007335662841797
    5. '),
' → logprob: -9.007335662841797
    6. '[' → logprob: -9.882335662841797
    7. '(lines' → logprob: -9.882335662841797
    8. ')
' → logprob: -10.257335662841797
    9. ',),' → logprob: -10.382335662841797
    10. ')[' → logprob: -10.757335662841797

Token 2794: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04366480931639671
    2. 'val' → logprob: -4.168664932250977
    3. ' s' → logprob: -4.418664932250977
    4. 'None' → logprob: -5.168664932250977
    5. '''.' → logprob: -5.168664932250977
    6. 'lines' → logprob: -6.793664932250977
    7. ' val' → logprob: -7.543664932250977
    8. '('' → logprob: -7.793664932250977
    9. ' None' → logprob: -7.793664932250977
    10. ' ''.' → logprob: -8.418664932250977

Token 2795: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48399806022644043
    2. '<|end|>' → logprob: -1.1089980602264404
    3. '[
' → logprob: -4.1089982986450195
    4. '
' → logprob: -4.4839982986450195
    5. ')' → logprob: -4.8589982986450195
    6. '[:' → logprob: -5.4839982986450195
    7. '[:]' → logprob: -5.8589982986450195
    8. ':' → logprob: -5.9839982986450195
    9. '   ' → logprob: -6.4839982986450195
    10. '#' → logprob: -6.4839982986450195

Token 2796: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07003268599510193
    2. ':' → logprob: -4.195032596588135
    3. '   ' → logprob: -4.195032596588135
    4. ')' → logprob: -4.445032596588135
    5. '<|end|>' → logprob: -4.820032596588135
    6. '
' → logprob: -5.320032596588135
    7. '\n' → logprob: -5.695032596588135
    8. '```' → logprob: -6.070032596588135
    9. '\' → logprob: -6.195032596588135
    10. 'return' → logprob: -6.570032596588135

Token 2797: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12085870653390884
    2. 'return' → logprob: -2.245858669281006
    3. ')' → logprob: -5.495858669281006
    4. 'None' → logprob: -6.995858669281006
    5. 'raise' → logprob: -7.495858669281006
    6. 'def' → logprob: -7.620858669281006
    7. ' return' → logprob: -7.745858669281006
    8. '```' → logprob: -7.870858669281006
    9. '<|end|>' → logprob: -8.245859146118164
    10. '#' (adapté à ' #') → logprob: -8.245859146118164

Token 2798: ' default' (ID: 2787)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004139668308198452
    2. '   ' → logprob: -5.6291399002075195
    3. ' return' → logprob: -8.25413990020752
    4. '#' → logprob: -9.00413990020752
    5. '       ' → logprob: -9.87913990020752
    6. 'raise' → logprob: -10.75413990020752
    7. '
' → logprob: -10.87913990020752
    8. 'None' → logprob: -11.12913990020752
    9. ':return' → logprob: -11.37913990020752
    10. '{return' → logprob: -11.75413990020752

Token 2799: ' return' (ID: 622)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5483078360557556
    2. '   ' → logprob: -1.2983078956604004
    3. 'return' → logprob: -2.0483078956604004
    4. ',' → logprob: -4.2983078956604
    5. ',None' → logprob: -5.5483078956604
    6. ' None' → logprob: -6.6733078956604
    7. ' return' → logprob: -7.1733078956604
    8. 'Cell' → logprob: -8.048307418823242
    9. '```' → logprob: -8.923307418823242
    10. '(None' → logprob: -9.298307418823242

Token 2800: ' as' (ID: 472)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.0012797608505934477
    2. ' Cell' → logprob: -7.501279830932617
    3. '   ' → logprob: -8.251279830932617
    4. 'None' → logprob: -8.251279830932617
    5. 'return' → logprob: -8.501279830932617
    6. '(Cell' → logprob: -14.251279830932617
    7. ' return' → logprob: -14.626279830932617
    8. ' None' → logprob: -15.501279830932617
    9. '       ' → logprob: -16.626279830932617
    10. '```' → logprob: -17.376279830932617

Token 2801: ' is' (ID: 382)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.00017028623551595956
    2. ' Cell' → logprob: -9.250170707702637
    3. 'None' → logprob: -9.625170707702637
    4. '(Cell' → logprob: -11.750170707702637
    5. '   ' → logprob: -16.25016975402832
    6. ' None' → logprob: -17.25016975402832
    7. '<Cell' → logprob: -17.25016975402832
    8. '_Cell' → logprob: -18.00016975402832
    9. '```' → logprob: -18.12516975402832
    10. 'cell' → logprob: -18.12516975402832

Token 2802: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4632241725921631
    2. 'Cell' → logprob: -1.088224172592163
    3. '   ' → logprob: -3.963224172592163
    4. ' Cell' → logprob: -4.838224411010742
    5. ',None' → logprob: -5.713224411010742
    6. ' ,' → logprob: -6.213224411010742
    7. 'None' → logprob: -6.838224411010742
    8. '(Cell' → logprob: -8.463224411010742
    9. ' None' → logprob: -8.963224411010742
    10. '<Cell' → logprob: -9.713224411010742

Token 2803: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15802855789661407
    2. '   ' → logprob: -2.0330286026000977
    3. ',None' → logprob: -4.658028602600098
    4. ',
' → logprob: -5.783028602600098
    5. ' ,' → logprob: -7.158028602600098
    6. 'return' → logprob: -7.408028602600098
    7. ':return' → logprob: -7.908028602600098
    8. ' return' → logprob: -7.908028602600098
    9. 'None' → logprob: -8.658028602600098
    10. '       ' → logprob: -9.033028602600098

Token 2804: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0032929708249866962
    2. '   ' → logprob: -5.753293037414551
    3. ' return' → logprob: -9.25329303741455
    4. '       ' → logprob: -11.12829303741455
    5. 'Cell' → logprob: -12.50329303741455
    6. '```' → logprob: -14.87829303741455
    7. '	return' → logprob: -15.37829303741455
    8. 'None' → logprob: -15.62829303741455
    9. ':return' → logprob: -15.62829303741455
    10. '
' → logprob: -16.253292083740234

Token 2805: ' Cell' (ID: 23050)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.0001860174525063485
    2. 'None' → logprob: -8.7501859664917
    3. ' Cell' → logprob: -10.5001859664917
    4. '(Cell' → logprob: -17.875186920166016
    5. ' None' → logprob: -18.125186920166016
    6. '   ' → logprob: -18.625186920166016
    7. '_Cell' → logprob: -19.000186920166016
    8. 'cell' → logprob: -19.875186920166016
    9. '<Cell' → logprob: -20.125186920166016
    10. 'Cel' → logprob: -20.625186920166016

Token 2806: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00013607845176011324
    2. '(' → logprob: -9.375136375427246
    3. '(data' → logprob: -10.500136375427246
    4. '(
' → logprob: -10.875136375427246
    5. ')' → logprob: -13.750136375427246
    6. 'lines' → logprob: -14.000136375427246
    7. ',' → logprob: -14.500136375427246
    8. ' lines' → logprob: -14.875136375427246
    9. ' (' → logprob: -15.000136375427246
    10. '	lines' → logprob: -15.125136375427246

Token 2807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013901159400120378
    2. ')' → logprob: -7.751389980316162
    3. ',
' → logprob: -8.50139045715332
    4. ',None' → logprob: -8.50139045715332
    5. '   ' → logprob: -8.62639045715332
    6. ' ,' → logprob: -9.62639045715332
    7. ',)' → logprob: -9.75139045715332
    8. '(lines' → logprob: -9.87639045715332
    9. ',line' → logprob: -10.12639045715332
    10. ',data' → logprob: -10.50139045715332

Token 2808: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -4.320199877838604e-07
    2. ' base' → logprob: -15.0
    3. '(base' → logprob: -20.75
    4. '   ' → logprob: -22.5
    5. '
' → logprob: -22.625
    6. 'None' → logprob: -23.25
    7. '	base' → logprob: -23.625
    8. '0' → logprob: -23.875
    9. ' ' → logprob: -24.75
    10. '_base' → logprob: -25.375

Token 2809: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.1054253011243418e-05
    2. 'Line' → logprob: -11.250020980834961
    3. 'line' → logprob: -12.500020980834961
    4. '   ' → logprob: -13.125020980834961
    5. ')' → logprob: -13.750020980834961
    6. '```' → logprob: -14.750020980834961
    7. '[' → logprob: -15.750020980834961
    8. '_LINE' → logprob: -16.25002098083496
    9. ')_' → logprob: -16.25002098083496
    10. ',' → logprob: -16.75002098083496

Token 2810: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004683357197791338
    2. '),' → logprob: -5.504683494567871
    3. ',' → logprob: -7.504683494567871
    4. ',)' → logprob: -10.754683494567871
    5. ')
' → logprob: -11.254683494567871
    6. '   ' → logprob: -11.504683494567871
    7. ')#' → logprob: -13.129683494567871
    8. ' )' → logprob: -13.629683494567871
    9. ')return' → logprob: -14.004683494567871
    10. ').' → logprob: -14.129683494567871

Token 2811: ' s' (ID: 265)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1402035504579544
    2. 'lines' → logprob: -3.2652034759521484
    3. '''' → logprob: -3.3902034759521484
    4. '''.' → logprob: -3.6402034759521484
    5. 's' → logprob: -3.7652034759521484
    6. '(None' → logprob: -5.140203475952148
    7. ' None' → logprob: -6.140203475952148
    8. '('' → logprob: -7.265203475952148
    9. ''s' → logprob: -8.890203475952148
    10. 'val' → logprob: -9.265203475952148

Token 2812: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1515130996704102
    2. '<|end|>' → logprob: -1.2765130996704102
    3. ':' → logprob: -1.9015130996704102
    4. 'def' → logprob: -2.15151309967041
    5. ')' → logprob: -2.40151309967041
    6. '#' → logprob: -4.52651309967041
    7. '\n' → logprob: -4.65151309967041
    8. ' def' → logprob: -5.02651309967041
    9. '```' → logprob: -5.52651309967041
    10. '(' → logprob: -5.65151309967041

Token 2813: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5134286880493164
    2. ':' → logprob: -1.7634286880493164
    3. 'def' → logprob: -1.7634286880493164
    4. '
' → logprob: -1.7634286880493164
    5. '\' → logprob: -2.5134286880493164
    6. '<|end|>' → logprob: -2.5134286880493164
    7. ')' → logprob: -3.2634286880493164
    8. '#' → logprob: -3.8884286880493164
    9. ' def' → logprob: -4.888428688049316
    10. '(' → logprob: -4.888428688049316

Token 2814: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.017229637131094933
    2. ' eval' → logprob: -4.1422295570373535
    3. 'evaluate' → logprob: -7.0172295570373535
    4. '_eval' → logprob: -9.517230033874512
    5. 'parse' → logprob: -9.642230033874512
    6. 'def' → logprob: -10.142230033874512
    7. 'val' → logprob: -10.267230033874512
    8. ' evaluate' → logprob: -10.517230033874512
    9. 'e' → logprob: -11.392230033874512
    10. 'mod' → logprob: -11.767230033874512

Token 2815: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.000835716025903821
    2. '_' → logprob: -7.75083589553833
    3. '_cell' → logprob: -7.87583589553833
    4. '(expr' → logprob: -11.750835418701172
    5. '_expression' → logprob: -12.125835418701172
    6. '_EXPR' → logprob: -12.625835418701172
    7. '```' → logprob: -13.250835418701172
    8. '_node' → logprob: -13.625835418701172
    9. '_val' → logprob: -14.000835418701172
    10. '(' → logprob: -14.125835418701172

Token 2816: '(ast' (ID: 118219)
  Prédit: '(expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.018148886039853096
    2. '(' → logprob: -4.893148899078369
    3. '(node' → logprob: -5.518148899078369
    4. '(expression' → logprob: -6.143148899078369
    5. '(ast' → logprob: -7.143148899078369
    6. '(val' → logprob: -7.143148899078369
    7. '(args' → logprob: -8.143148422241211
    8. '(tree' → logprob: -8.143148422241211
    9. '(_' → logprob: -8.268148422241211
    10. '(cell' → logprob: -8.393148422241211

Token 2817: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1839840412139893
    2. '(ast' → logprob: -1.1839840412139893
    3. '):
' → logprob: -1.6839840412139893
    4. '(node' → logprob: -1.9339840412139893
    5. ',' → logprob: -3.6839840412139893
    6. '(' → logprob: -4.93398380279541
    7. '(expr' → logprob: -5.05898380279541
    8. '   ' → logprob: -5.18398380279541
    9. '(_' → logprob: -5.43398380279541
    10. '_ast' → logprob: -5.55898380279541

Token 2818: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07996433228254318
    2. 'if' → logprob: -2.8299643993377686
    3. '   ' → logprob: -4.0799641609191895
    4. 'None' → logprob: -7.9549641609191895
    5. 't' → logprob: -8.829964637756348
    6. ' if' → logprob: -9.329964637756348
    7. 'node' → logprob: -9.829964637756348
    8. 'val' → logprob: -9.954964637756348
    9. '('' → logprob: -10.079964637756348
    10. 'ast' → logprob: -10.329964637756348

Token 2819: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05702659487724304
    2. 't' → logprob: -3.4320266246795654
    3. '   ' → logprob: -4.307026386260986
    4. 'def' → logprob: -5.807026386260986
    5. 'type' → logprob: -5.932026386260986
    6. '('' → logprob: -6.557026386260986
    7. 'node' → logprob: -7.807026386260986
    8. 'c' → logprob: -7.932026386260986
    9. 'match' → logprob: -8.057026863098145
    10. 'typ' → logprob: -8.307026863098145

Token 2820: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5720531940460205
    2. 'ast' → logprob: -1.5720531940460205
    3. ' isinstance' → logprob: -2.0720531940460205
    4. 'type' → logprob: -2.8220531940460205
    5. ' ast' → logprob: -3.1970531940460205
    6. ' type' → logprob: -6.697052955627441
    7. '   ' → logprob: -8.072052955627441
    8. 'not' → logprob: -9.822052955627441
    9. '(ast' → logprob: -10.197052955627441
    10. '  ' → logprob: -10.197052955627441

Token 2821: '(ast' (ID: 118219)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.04757280647754669
    2. 'ast' → logprob: -3.5475728511810303
    3. 'str' → logprob: -4.172572612762451
    4. 'Cell' → logprob: -6.297572612762451
    5. 'type' → logprob: -8.29757308959961
    6. ' tuple' → logprob: -9.92257308959961
    7. '(ast' → logprob: -10.29757308959961
    8. 'dict' → logprob: -10.67257308959961
    9. '(tuple' → logprob: -10.92257308959961
    10. ' ast' → logprob: -11.54757308959961

Token 2822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007021840428933501
    2. '==' → logprob: -8.000701904296875
    3. ',str' → logprob: -8.625701904296875
    4. 'if' → logprob: -9.750701904296875
    5. ' ,' → logprob: -10.625701904296875
    6. '(' → logprob: -11.000701904296875
    7. ')' → logprob: -11.125701904296875
    8. '[' → logprob: -11.125701904296875
    9. ' ==' → logprob: -11.250701904296875
    10. ',(' → logprob: -11.750701904296875

Token 2823: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1605135202407837
    2. 'tuple' → logprob: -1.9105135202407837
    3. 'int' → logprob: -8.660513877868652
    4. 'Cell' → logprob: -9.410513877868652
    5. ' tuple' → logprob: -10.660513877868652
    6. ' str' → logprob: -11.535513877868652
    7. ' Cell' → logprob: -14.785513877868652
    8. '(str' → logprob: -15.660513877868652
    9. 'tu' → logprob: -16.035512924194336
    10. '(tuple' → logprob: -16.285512924194336

Token 2824: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39782774448394775
    2. ')' → logprob: -2.147827625274658
    3. '):' → logprob: -2.522827625274658
    4. '[' → logprob: -3.147827625274658
    5. ' and' → logprob: -3.522827625274658
    6. '   ' → logprob: -3.647827625274658
    7. ':' → logprob: -4.522827625274658
    8. ',' → logprob: -5.022827625274658
    9. 'and' → logprob: -5.522827625274658
    10. ''' → logprob: -5.772827625274658

Token 2825: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2256452441215515
    2. ' if' → logprob: -1.7256453037261963
    3. 'if' → logprob: -4.475645065307617
    4. ':' → logprob: -5.350645065307617
    5. ':
' → logprob: -5.600645065307617
    6. '       ' → logprob: -5.600645065307617
    7. '```' → logprob: -8.975645065307617
    8. ' :' → logprob: -9.100645065307617
    9. '    ' → logprob: -10.350645065307617
    10. '
' → logprob: -10.350645065307617

Token 2826: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2829292416572571
    2. 'if' (adapté à ' if') → logprob: -1.4079291820526123
    3. '   ' → logprob: -7.157929420471191
    4. ' return' → logprob: -7.407929420471191
    5. 'return' → logprob: -8.032929420471191
    6. ':' → logprob: -10.657929420471191
    7. '       ' → logprob: -11.532929420471191
    8. '```' → logprob: -11.907929420471191
    9. ' :' → logprob: -12.157929420471191
    10. ' c' → logprob: -12.282929420471191

Token 2827: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.06198393553495407
    2. ' ast' → logprob: -2.811983823776245
    3. '(ast' → logprob: -11.061984062194824
    4. ' ' → logprob: -15.186984062194824
    5. 'astr' → logprob: -15.686984062194824
    6. '.ast' → logprob: -16.061983108520508
    7. '_ast' → logprob: -17.186983108520508
    8. 'aster' → logprob: -17.436983108520508
    9. '   ' → logprob: -18.311983108520508
    10. 'astro' → logprob: -18.436983108520508

Token 2828: '.is' (ID: 3109)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0790561437606812
    2. ' ==' → logprob: -1.3290561437606812
    3. '[' → logprob: -1.5790561437606812
    4. '==' → logprob: -1.7040561437606812
    5. 'in' → logprob: -5.454056262969971
    6. '=='' → logprob: -6.329056262969971
    7. 'isdigit' → logprob: -8.079055786132812
    8. '.startswith' → logprob: -8.829055786132812
    9. '[
' → logprob: -9.204055786132812
    10. '.' → logprob: -9.329055786132812

Token 2829: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -7.73183855926618e-05
    2. 'decimal' → logprob: -9.500077247619629
    3. 'numeric' → logprob: -13.000077247619629
    4. 'alpha' → logprob: -16.125078201293945
    5. 'al' → logprob: -17.125078201293945
    6. 'digital' → logprob: -18.125078201293945
    7. '_digit' → logprob: -19.125078201293945
    8. 'digits' → logprob: -19.625078201293945
    9. 'Digit' → logprob: -20.125078201293945
    10. 'ascii' → logprob: -20.250078201293945

Token 2830: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5892167091369629
    2. '():' → logprob: -0.8392167091369629
    3. '():
' → logprob: -4.339216709136963
    4. '()==' → logprob: -10.214216232299805
    5. '(' → logprob: -10.339216232299805
    6. '()[' → logprob: -10.839216232299805
    7. 'and' → logprob: -10.839216232299805
    8. ':' → logprob: -12.089216232299805
    9. '()+' → logprob: -12.089216232299805
    10. '()
' → logprob: -12.589216232299805

Token 2831: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019670547917485237
    2. '           ' → logprob: -7.126966953277588
    3. ':' → logprob: -7.626966953277588
    4. ':
' → logprob: -7.876966953277588
    5. '   ' → logprob: -9.251967430114746
    6. ':return' → logprob: -9.876967430114746
    7. ' and' → logprob: -10.126967430114746
    8. ' return' → logprob: -10.626967430114746
    9. '```' → logprob: -10.751967430114746
    10. '):
' → logprob: -11.126967430114746

Token 2832: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00016909420082811266
    2. ' return' → logprob: -9.375168800354004
    3. '       ' → logprob: -10.125168800354004
    4. '           ' → logprob: -10.250168800354004
    5. '   ' → logprob: -12.000168800354004
    6. '	return' → logprob: -13.625168800354004
    7. '
' → logprob: -13.875168800354004
    8. 'val' → logprob: -15.750168800354004
    9. '```' → logprob: -16.12516975402832
    10. ':return' → logprob: -16.37516975402832

Token 2833: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ' int' → logprob: -15.000000953674316
    3. '(int' → logprob: -15.250000953674316
    4. '<int' → logprob: -19.5
    5. '[int' → logprob: -21.125
    6. 'intval' → logprob: -22.5
    7. '```' → logprob: -22.875
    8. '	int' → logprob: -23.375
    9. '   ' → logprob: -23.5
    10. 'ast' → logprob: -24.0

Token 2834: '(ast' (ID: 118219)
  Prédit: '(ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ast' → logprob: -0.03821900859475136
    2. 'ast' → logprob: -3.2882189750671387
    3. ' ast' → logprob: -8.788219451904297
    4. '(' → logprob: -11.163219451904297
    5. '_ast' → logprob: -11.788219451904297
    6. 'astr' → logprob: -13.413219451904297
    7. '.ast' → logprob: -13.913219451904297
    8. ')' → logprob: -15.663219451904297
    9. 'asts' → logprob: -15.788219451904297
    10. 'astro' → logprob: -16.038219451904297

Token 2835: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009659046307206154
    2. ')
' → logprob: -5.0096588134765625
    3. '[' → logprob: -6.2596588134765625
    4. ')*' → logprob: -7.6346588134765625
    5. ')+' → logprob: -8.509658813476562
    6. '[
' → logprob: -8.634658813476562
    7. '   ' → logprob: -9.759658813476562
    8. '+' → logprob: -10.884658813476562
    9. ')**' → logprob: -11.009658813476562
    10. ' )' → logprob: -11.134658813476562

Token 2836: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19879832863807678
    2. '
' → logprob: -2.448798418045044
    3. '       ' → logprob: -2.573798418045044
    4. '```' → logprob: -5.698798179626465
    5. 'if' → logprob: -5.948798179626465
    6. 'elif' → logprob: -6.323798179626465
    7. '	' → logprob: -6.948798179626465
    8. '\n' → logprob: -7.073798179626465
    9. '`' → logprob: -7.198798179626465
    10. ')' → logprob: -7.198798179626465

Token 2837: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.676292231422849e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '201' → logprob: -18.625017166137695
    4. '_MOD' → logprob: -18.750017166137695
    5. '(M' → logprob: -19.500017166137695
    6. '.MOD' → logprob: -20.750017166137695
    7. 'MO' → logprob: -22.000017166137695
    8. 'MD' → logprob: -22.625017166137695
    9. '(mod' → logprob: -23.750017166137695
    10. 'mod' → logprob: -23.750017166137695

Token 2838: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015218136832118034
    2. '
' → logprob: -4.765218257904053
    3. '       ' → logprob: -5.390218257904053
    4. '    
' → logprob: -7.515218257904053
    5. '```' → logprob: -7.640218257904053
    6. ')' → logprob: -9.015217781066895
    7. 'elif' → logprob: -9.015217781066895
    8. ' if' → logprob: -9.265217781066895
    9. '\n' → logprob: -9.515217781066895
    10. '.' → logprob: -9.640217781066895

Token 2839: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010708324611186981
    2. 'if' → logprob: -4.885708332061768
    3. '```' → logprob: -7.010708332061768
    4. '       ' → logprob: -7.135708332061768
    5. 'elif' → logprob: -7.260708332061768
    6. '_' → logprob: -8.38570785522461
    7. '
' → logprob: -8.38570785522461
    8. '`' → logprob: -9.01070785522461
    9. ' if' → logprob: -9.76070785522461
    10. '    
' → logprob: -12.13570785522461

Token 2840: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04863369092345238
    2. 'elif' → logprob: -3.048633575439453
    3. '   ' → logprob: -10.173633575439453
    4. ' if' → logprob: -12.423633575439453
    5. '       ' → logprob: -12.798633575439453
    6. '
' → logprob: -14.298633575439453
    7. 'try' → logprob: -15.548633575439453
    8. 'return' → logprob: -15.798633575439453
    9. '```' → logprob: -16.173633575439453
    10. 'else' → logprob: -16.548633575439453

Token 2841: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.00033939589047804475
    2. ' ast' → logprob: -8.00033950805664
    3. '(ast' → logprob: -12.50033950805664
    4. '_ast' → logprob: -16.75033950805664
    5. 'astr' → logprob: -17.37533950805664
    6. 'len' → logprob: -17.37533950805664
    7. ' ' → logprob: -17.50033950805664
    8. '.ast' → logprob: -17.75033950805664
    9. '   ' → logprob: -18.62533950805664
    10. 'aster' → logprob: -18.62533950805664

Token 2842: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.755260169506073
    2. '==' → logprob: -1.5052602291107178
    3. '.startswith' → logprob: -1.8802602291107178
    4. '[' → logprob: -2.6302602291107178
    5. ' in' → logprob: -2.6302602291107178
    6. '.' → logprob: -5.380259990692139
    7. '.is' → logprob: -5.755259990692139
    8. '.endswith' → logprob: -6.505259990692139
    9. 'in' → logprob: -7.380259990692139
    10. '[:' → logprob: -7.755259990692139

Token 2843: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.07040607184171677
    2. ''' → logprob: -2.695405960083008
    3. ''-' → logprob: -8.070405960083008
    4. '('' → logprob: -9.445405960083008
    5. '('+' → logprob: -10.320405960083008
    6. '['' → logprob: -10.570405960083008
    7. ' '+' → logprob: -12.070405960083008
    8. '{'' → logprob: -12.695405960083008
    9. '"+' → logprob: -12.695405960083008
    10. '')' → logprob: -13.820405960083008

Token 2844: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005575587856583297
    2. '-'' → logprob: -7.8755574226379395
    3. ''-' → logprob: -8.875557899475098
    4. '-*' → logprob: -11.375557899475098
    5. ' -' → logprob: -11.875557899475098
    6. '()-' → logprob: -12.125557899475098
    7. '-',' → logprob: -12.875557899475098
    8. '-'+' → logprob: -13.125557899475098
    9. '-\' → logprob: -13.250557899475098
    10. '\-' → logprob: -13.375557899475098

Token 2845: '':
' (ID: 7669)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1258564293384552
    2. '*/' → logprob: -3.000856399536133
    3. '':
' → logprob: -3.375856399536133
    4. '1' → logprob: -4.625856399536133
    5. '012' → logprob: -4.625856399536133
    6. '()' → logprob: -5.000856399536133
    7. '0' → logprob: -6.250856399536133
    8. ''' → logprob: -6.375856399536133
    9. ''):
' → logprob: -7.125856399536133
    10. '':' → logprob: -7.125856399536133

Token 2846: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7528373003005981
    2. '           ' → logprob: -1.3778373003005981
    3. ':
' → logprob: -1.5028373003005981
    4. ':' → logprob: -3.1278371810913086
    5. ':return' → logprob: -6.127837181091309
    6. ' or' → logprob: -6.252837181091309
    7. '   ' → logprob: -6.252837181091309
    8. ' :
' → logprob: -7.002837181091309
    9. ' :' → logprob: -7.252837181091309
    10. '        ' → logprob: -7.752837181091309

Token 2847: ' #' (ID: 1069)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11121617257595062
    2. ' None' → logprob: -3.6112160682678223
    3. 'None' → logprob: -3.8612160682678223
    4. 'return' → logprob: -3.9862160682678223
    5. ' ' → logprob: -4.236216068267822
    6. '0' → logprob: -5.236216068267822
    7. ' return' → logprob: -5.361216068267822
    8. ' '' → logprob: -5.486216068267822
    9. '   ' → logprob: -6.361216068267822
    10. '1' → logprob: -6.486216068267822

Token 2848: ' unary' (ID: 185293)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2698981761932373
    2. '0' → logprob: -1.5198981761932373
    3. 'None' → logprob: -4.894898414611816
    4. '1' → logprob: -4.894898414611816
    5. 'ast' → logprob: -7.519898414611816
    6. 'raise' → logprob: -7.644898414611816
    7. ' return' → logprob: -7.894898414611816
    8. '-' → logprob: -8.019898414611816
    9. '+' → logprob: -8.644898414611816
    10. '(' → logprob: -8.894898414611816

Token 2849: ' plus' (ID: 2932)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3217372000217438
    2. ''-' → logprob: -1.5717371702194214
    3. '+' → logprob: -3.446737289428711
    4. '-' → logprob: -4.321737289428711
    5. ' ast' → logprob: -4.946737289428711
    6. ' ' → logprob: -5.946737289428711
    7. ''s' → logprob: -6.321737289428711
    8. ' '' → logprob: -6.321737289428711
    9. ''+' → logprob: -6.446737289428711
    10. 'ast' → logprob: -7.071737289428711

Token 2850: '/min' (ID: 62483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7408071756362915
    2. 'return' → logprob: -1.7408071756362915
    3. ':' → logprob: -1.8658071756362915
    4. ' or' → logprob: -2.365807056427002
    5. ':
' → logprob: -2.865807056427002
    6. '
' → logprob: -2.990807056427002
    7. '   ' → logprob: -2.990807056427002
    8. '       ' → logprob: -3.240807056427002
    9. ':return' → logprob: -3.615807056427002
    10. '+' → logprob: -3.740807056427002

Token 2851: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0011299749603495002
    2. 'def' → logprob: -7.501130104064941
    3. 'uses' → logprob: -8.001130104064941
    4. '   ' → logprob: -9.501130104064941
    5. 'uss' → logprob: -10.126130104064941
    6. 'use' → logprob: -11.001130104064941
    7. 'usr' → logprob: -11.001130104064941
    8. 'if' → logprob: -11.501130104064941
    9. 'f' → logprob: -11.626130104064941
    10. 'user' → logprob: -11.751130104064941

Token 2852: ' without' (ID: 2935)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.789869487285614
    2. 'return' → logprob: -1.1648695468902588
    3. ':return' → logprob: -2.914869546890259
    4. ':' → logprob: -2.914869546890259
    5. '   ' → logprob: -3.164869546890259
    6. ' return' → logprob: -4.03986930847168
    7. '1' → logprob: -4.41486930847168
    8. '       ' → logprob: -4.66486930847168
    9. 'if' → logprob: -4.91486930847168
    10. '=' → logprob: -5.03986930847168

Token 2853: ' number' (ID: 2086)
  Prédit: 'operand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.012942677363753319
    2. ' operand' → logprob: -5.887942790985107
    3. '1' → logprob: -6.387942790985107
    4. 'value' → logprob: -6.512942790985107
    5. 'following' → logprob: -6.637942790985107
    6. 'a' → logprob: -6.887942790985107
    7. 'number' → logprob: -7.262942790985107
    8. 'ast' → logprob: -7.762942790985107
    9. '#' → logprob: -8.01294231414795
    10. 'digit' → logprob: -8.01294231414795

Token 2854: ' return' (ID: 622)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7264103293418884
    2. ':' → logprob: -1.8514103889465332
    3. '           ' → logprob: -2.226410388946533
    4. '       ' → logprob: -2.351410388946533
    5. ':return' → logprob: -2.351410388946533
    6. '   ' → logprob: -3.601410388946533
    7. ' or' → logprob: -4.601410388946533
    8. 'return' → logprob: -5.101410388946533
    9. ',' → logprob: -5.476410388946533
    10. '):
' → logprob: -5.851410388946533

Token 2855: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00933408085256815
    2. ' ' → logprob: -5.259334087371826
    3. 'ast' → logprob: -6.259334087371826
    4. 'None' → logprob: -6.259334087371826
    5. ' ast' → logprob: -9.259333610534668
    6. '1' → logprob: -9.759333610534668
    7. ' None' → logprob: -10.009333610534668
    8. '(ast' → logprob: -10.884333610534668
    9. 'False' → logprob: -11.884333610534668
    10. '(' → logprob: -12.009333610534668

Token 2856: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005124026210978627
    2. 'ast' → logprob: -8.12551212310791
    3. 'None' → logprob: -9.37551212310791
    4. ' ' → logprob: -9.37551212310791
    5. '1' → logprob: -11.12551212310791
    6. '(ast' → logprob: -11.37551212310791
    7. ' ast' → logprob: -11.87551212310791
    8. 'int' → logprob: -12.75051212310791
    9. ''' → logprob: -13.00051212310791
    10. '(' → logprob: -13.50051212310791

Token 2857: ' or' (ID: 503)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9210591316223145
    2. '
' → logprob: -1.4210591316223145
    3. '       ' → logprob: -1.6710591316223145
    4. '   ' → logprob: -3.0460591316223145
    5. '           ' → logprob: -3.1710591316223145
    6. ' return' → logprob: -3.6710591316223145
    7. '0' → logprob: -3.7960591316223145
    8. ':
' → logprob: -4.6710591316223145
    9. '```' → logprob: -4.9210591316223145
    10. ',' → logprob: -5.5460591316223145

Token 2858: ' something' (ID: 3543)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010982741601765156
    2. 'ast' → logprob: -4.885982513427734
    3. '1' → logprob: -6.260982513427734
    4. '(ast' → logprob: -7.510982513427734
    5. '(' → logprob: -7.885982513427734
    6. ' ' → logprob: -8.510982513427734
    7. 'int' → logprob: -9.260982513427734
    8. ' ast' → logprob: -9.510982513427734
    9. '+' → logprob: -10.385982513427734
    10. '-' → logprob: -11.010982513427734

Token 2859: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0514720678329468
    2. '
' → logprob: -1.1764720678329468
    3. ':
' → logprob: -2.1764721870422363
    4. '   ' → logprob: -3.1764721870422363
    5. '           ' → logprob: -3.3014721870422363
    6. '0' → logprob: -3.3014721870422363
    7. ':' → logprob: -3.4264721870422363
    8. ' 
' → logprob: -3.9264721870422363
    9. '        
' → logprob: -4.301472187042236
    10. '    
' → logprob: -4.551472187042236

Token 2860: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.75510573387146
    2. '           ' → logprob: -1.00510573387146
    3. ':
' → logprob: -2.00510573387146
    4. ':' → logprob: -4.755105972290039
    5. '   ' → logprob: -5.005105972290039
    6. ''' → logprob: -5.380105972290039
    7. '               ' → logprob: -5.880105972290039
    8. ' :
' → logprob: -7.130105972290039
    9. ':return' → logprob: -7.380105972290039
    10. 'return' → logprob: -7.380105972290039

Token 2861: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3164850175380707
    2. ' return' → logprob: -1.316485047340393
    3. '           ' → logprob: -6.3164849281311035
    4. '       ' → logprob: -6.9414849281311035
    5. '0' → logprob: -8.816485404968262
    6. '   ' → logprob: -8.816485404968262
    7. '
' → logprob: -9.941485404968262
    8. '```' → logprob: -10.441485404968262
    9. '	return' → logprob: -10.941485404968262
    10. ' 
' → logprob: -11.566485404968262

Token 2862: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '(' → logprob: -15.000003814697266
    4. '1' → logprob: -18.750003814697266
    5. 'int' → logprob: -18.750003814697266
    6. '00' → logprob: -19.250003814697266
    7. '   ' → logprob: -19.250003814697266
    8. '000' → logprob: -19.500003814697266
    9. '۰' → logprob: -20.437503814697266
    10. '
' → logprob: -20.625003814697266

Token 2863: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.000003814697266
    4. 'int' → logprob: -16.625003814697266
    5. '1' → logprob: -18.000003814697266
    6. '000' → logprob: -18.125003814697266
    7. '00' → logprob: -18.125003814697266
    8. '-' → logprob: -19.062503814697266
    9. 'mod' → logprob: -19.187503814697266
    10. '{' → logprob: -19.187503814697266

Token 2864: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14463527500629425
    2. '   ' → logprob: -3.0196352005004883
    3. '       ' → logprob: -3.2696352005004883
    4. 'if' → logprob: -4.144635200500488
    5. '_' → logprob: -4.394635200500488
    6. '_
' → logprob: -4.894635200500488
    7. ' if' → logprob: -5.769635200500488
    8. '    
' → logprob: -6.144635200500488
    9. 'elif' → logprob: -6.519635200500488
    10. '\n' → logprob: -7.019635200500488

Token 2865: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044712960720062256
    2. '       ' → logprob: -3.294713020324707
    3. 'if' → logprob: -6.169713020324707
    4. ' if' → logprob: -6.794713020324707
    5. '
' → logprob: -7.294713020324707
    6. 'elif' → logprob: -7.419713020324707
    7. '```' → logprob: -7.544713020324707
    8. '    
' → logprob: -8.294713020324707
    9. '	' → logprob: -8.669713020324707
    10. '	if' → logprob: -8.794713020324707

Token 2866: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005781496409326792
    2. '   ' → logprob: -5.255781650543213
    3. 'elif' → logprob: -8.130781173706055
    4. '       ' → logprob: -9.130781173706055
    5. ' if' → logprob: -9.380781173706055
    6. '
' → logprob: -10.130781173706055
    7. '#' → logprob: -11.630781173706055
    8. 'return' (adapté à ' return') → logprob: -12.130781173706055
    9. '```' → logprob: -12.380781173706055
    10. 'try' → logprob: -14.380781173706055

Token 2867: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021569548698607832
    2. ' ' → logprob: -9.375215530395508
    3. 'ast' → logprob: -10.250215530395508
    4. '(' → logprob: -10.500215530395508
    5. 'int' → logprob: -11.000215530395508
    6. 'eval' → logprob: -11.000215530395508
    7. 'None' → logprob: -11.000215530395508
    8. 'mod' → logprob: -12.125215530395508
    9. '(ast' → logprob: -12.375215530395508
    10. 'ord' → logprob: -13.375215530395508

Token 2868: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014203863975126296
    2. 'ast' → logprob: -10.125142097473145
    3. 'int' → logprob: -10.625142097473145
    4. 'ord' → logprob: -10.875142097473145
    5. 'None' → logprob: -11.000142097473145
    6. 'eval' → logprob: -11.375142097473145
    7. '(' → logprob: -11.375142097473145
    8. '1' → logprob: -12.375142097473145
    9. 'mod' → logprob: -12.500142097473145
    10. '(ast' → logprob: -13.000142097473145

Token 2869: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08541041612625122
    2. '
' → logprob: -3.0854103565216064
    3. '```' → logprob: -3.9604103565216064
    4. '    
' → logprob: -5.4604105949401855
    5. ' if' → logprob: -5.7104105949401855
    6. 'if' → logprob: -5.9604105949401855
    7. 'elif' → logprob: -5.9604105949401855
    8. '`' → logprob: -7.3354105949401855
    9. '  
' → logprob: -7.7104105949401855
    10. '\n' → logprob: -7.9604105949401855

Token 2870: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01650572381913662
    2. '```' → logprob: -4.766505718231201
    3. '
' → logprob: -5.641505718231201
    4. 'elif' → logprob: -6.391505718231201
    5. ' if' → logprob: -7.766505718231201
    6. '    
' → logprob: -7.766505718231201
    7. 'def' → logprob: -7.766505718231201
    8. 'if' → logprob: -8.01650619506836
    9. ')' → logprob: -8.76650619506836
    10. '`' → logprob: -8.89150619506836

Token 2871: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6886206269264221
    2. '   ' → logprob: -0.8136206269264221
    3. ' if' → logprob: -3.8136205673217773
    4. 'elif' → logprob: -4.063620567321777
    5. 'def' → logprob: -5.063620567321777
    6. '
' → logprob: -5.938620567321777
    7. '```' → logprob: -6.188620567321777
    8. '_' → logprob: -7.063620567321777
    9. '[' → logprob: -7.313620567321777
    10. '`' → logprob: -7.438620567321777

Token 2872: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3945968449115753
    2. 'ast' → logprob: -1.394596815109253
    3. ' isinstance' → logprob: -2.894596815109253
    4. 'type' → logprob: -3.894596815109253
    5. 'not' → logprob: -6.394597053527832
    6. 'len' → logprob: -7.894597053527832
    7. ' ast' → logprob: -8.519597053527832
    8. '   ' → logprob: -8.894597053527832
    9. '(ast' → logprob: -11.019597053527832
    10. ' not' → logprob: -11.519597053527832

Token 2873: '(ast' (ID: 118219)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.002445573452860117
    2. 'type' → logprob: -6.752445697784424
    3. 'tuple' → logprob: -7.002445697784424
    4. ' ast' → logprob: -8.127445220947266
    5. '(ast' → logprob: -9.627445220947266
    6. '   ' → logprob: -13.377445220947266
    7. 'str' → logprob: -14.377445220947266
    8. ' ' → logprob: -14.752445220947266
    9. 'list' → logprob: -15.502445220947266
    10. ' tuple' → logprob: -15.627445220947266

Token 2874: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1120138093829155
    2. '==' → logprob: -2.487013816833496
    3. '[' → logprob: -3.987013816833496
    4. ' ==' → logprob: -5.612013816833496
    5. '   ' → logprob: -8.112013816833496
    6. 'is' → logprob: -9.487013816833496
    7. ',[' → logprob: -9.612013816833496
    8. ')' → logprob: -10.612013816833496
    9. ' ,' → logprob: -10.862013816833496
    10. 'if' → logprob: -10.987013816833496

Token 2875: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -8.41866585687967e-06
    2. ' tuple' → logprob: -12.250008583068848
    3. 'list' → logprob: -12.750008583068848
    4. 'str' → logprob: -14.500008583068848
    5. '(tuple' → logprob: -16.12500762939453
    6. 'type' → logprob: -18.25000762939453
    7. 'tu' → logprob: -18.62500762939453
    8. '   ' → logprob: -19.50000762939453
    9. 'dict' → logprob: -19.62500762939453
    10. '
' → logprob: -21.12500762939453

Token 2876: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1597752422094345
    2. '[' → logprob: -2.4097752571105957
    3. '(' → logprob: -3.7847752571105957
    4. 'and' → logprob: -4.284775257110596
    5. ',
' → logprob: -5.034775257110596
    6. ' and' → logprob: -5.284775257110596
    7. '('' → logprob: -6.284775257110596
    8. ')' → logprob: -6.534775257110596
    9. '   ' → logprob: -6.659775257110596
    10. '[
' → logprob: -7.159775257110596

Token 2877: '       ' (ID: 309)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4713701605796814
    2. '   ' → logprob: -1.4713702201843262
    3. '(',',' → logprob: -3.096370220184326
    4. '('.',' → logprob: -3.846370220184326
    5. ''' → logprob: -4.471370220184326
    6. '(' → logprob: -4.596370220184326
    7. '('_' → logprob: -4.721370220184326
    8. ' ('' → logprob: -4.971370220184326
    9. '('',' → logprob: -5.096370220184326
    10. '       ' → logprob: -5.221370220184326

Token 2878: ' kind' (ID: 3675)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26146775484085083
    2. 'ast' → logprob: -2.636467695236206
    3. ''' → logprob: -3.136467695236206
    4. '('' → logprob: -3.261467695236206
    5. '(ast' → logprob: -3.886467695236206
    6. '   ' → logprob: -4.011467933654785
    7. ' ast' → logprob: -5.511467933654785
    8. ' ' → logprob: -5.636467933654785
    9. '(_,' → logprob: -5.886467933654785
    10. '_,' → logprob: -5.886467933654785

Token 2879: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4772319495677948
    2. '[' → logprob: -1.2272319793701172
    3. '(' → logprob: -3.102231979370117
    4. ',
' → logprob: -4.602231979370117
    5. '[
' → logprob: -4.727231979370117
    6. '   ' → logprob: -5.102231979370117
    7. '=' → logprob: -5.477231979370117
    8. '0' → logprob: -6.602231979370117
    9. '<|end|>' → logprob: -6.852231979370117
    10. ':' → logprob: -6.852231979370117

Token 2880: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.06934700906276703
    2. '0' → logprob: -3.0693469047546387
    3. ' ast' → logprob: -3.9443469047546387
    4. ' ' → logprob: -7.319346904754639
    5. '(ast' → logprob: -8.194347381591797
    6. '_ast' → logprob: -8.569347381591797
    7. '1' → logprob: -10.444347381591797
    8. '.ast' → logprob: -11.569347381591797
    9. 'asts' → logprob: -12.194347381591797
    10. 'astro' → logprob: -13.194347381591797

Token 2881: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03581828624010086
    2. ''' → logprob: -4.535818099975586
    3. '[
' → logprob: -4.785818099975586
    4. '(' → logprob: -5.410818099975586
    5. '('' → logprob: -6.035818099975586
    6. '[len' → logprob: -6.035818099975586
    7. ',' → logprob: -6.535818099975586
    8. '0' → logprob: -6.785818099975586
    9. '('_' → logprob: -6.910818099975586
    10. '['' → logprob: -7.660818099975586

Token 2882: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029756737872958183
    2. '1' → logprob: -3.529756784439087
    3. ' ' → logprob: -12.279756546020508
    4. '   ' → logprob: -13.779756546020508
    5. '[' → logprob: -14.779756546020508
    6. '
' → logprob: -15.154756546020508
    7. '```' → logprob: -18.279756546020508
    8. ',' → logprob: -18.529756546020508
    9. '     ' → logprob: -18.654756546020508
    10. '  ' → logprob: -18.654756546020508

Token 2883: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2066534459590912
    2. ',' → logprob: -2.206653356552124
    3. '[' → logprob: -3.206653356552124
    4. '<|end|>' → logprob: -3.956653356552124
    5. '```' → logprob: -5.456653594970703
    6. ':' → logprob: -6.206653594970703
    7. ']' → logprob: -6.331653594970703
    8. ',
' → logprob: -6.331653594970703
    9. '):
' → logprob: -6.706653594970703
    10. ')_' → logprob: -6.831653594970703

Token 2884: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2676453590393066
    2. ' if' → logprob: -2.1426453590393066
    3. ':' → logprob: -2.2676453590393066
    4. 'if' → logprob: -2.5176453590393066
    5. ',' → logprob: -2.7676453590393066
    6. '
' → logprob: -2.8926453590393066
    7. ''_' → logprob: -2.8926453590393066
    8. ' and' → logprob: -3.1426453590393066
    9. '','' → logprob: -3.5176453590393066
    10. '   ' → logprob: -3.6426453590393066

Token 2885: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26128602027893066
    2. ''' → logprob: -1.7612860202789307
    3. '1' → logprob: -4.011285781860352
    4. ' if' → logprob: -4.386285781860352
    5. 'def' → logprob: -4.886285781860352
    6. '   ' → logprob: -5.386285781860352
    7. '
' → logprob: -5.511285781860352
    8. '       ' → logprob: -5.636285781860352
    9. 'kind' → logprob: -6.136285781860352
    10. '')' → logprob: -7.011285781860352

Token 2886: ' kind' (ID: 3675)
  Prédit: 'kind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kind' → logprob: -0.04118727892637253
    2. ''' → logprob: -3.541187286376953
    3. ' kind' → logprob: -5.541187286376953
    4. '0' → logprob: -5.666187286376953
    5. '1' → logprob: -6.041187286376953
    6. ''s' → logprob: -7.041187286376953
    7. '(kind' → logprob: -8.291187286376953
    8. ' '' → logprob: -9.541187286376953
    9. ''t' → logprob: -9.666187286376953
    10. ' ' → logprob: -10.416187286376953

Token 2887: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6369471549987793
    2. ' ==' → logprob: -0.7619471549987793
    3. '=='' → logprob: -5.636947154998779
    4. '[' → logprob: -8.386947631835938
    5. '==
' → logprob: -8.636947631835938
    6. '=' → logprob: -8.886947631835938
    7. '=="' → logprob: -9.761947631835938
    8. ')' → logprob: -10.011947631835938
    9. ')==' → logprob: -10.886947631835938
    10. ':' → logprob: -11.261947631835938

Token 2888: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16639961302280426
    2. ''ex' → logprob: -1.916399598121643
    3. ''f' → logprob: -5.2913994789123535
    4. ''d' → logprob: -7.1663994789123535
    5. ' '' → logprob: -8.916399955749512
    6. '"' → logprob: -9.916399955749512
    7. ''in' → logprob: -9.916399955749512
    8. ''s' → logprob: -10.791399955749512
    9. ''int' → logprob: -10.791399955749512
    10. ''t' → logprob: -10.791399955749512

Token 2889: 'fraction' (ID: 173249)
  Prédit: 'fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.04706844314932823
    2. 'expr' → logprob: -3.2970683574676514
    3. 'pow' → logprob: -5.1720685958862305
    4. 'factor' → logprob: -6.0470685958862305
    5. 'term' → logprob: -7.6720685958862305
    6. 'number' → logprob: -9.17206859588623
    7. 'frac' → logprob: -9.17206859588623
    8. 'digit' → logprob: -9.42206859588623
    9. 'expression' → logprob: -9.67206859588623
    10. ''' → logprob: -9.79706859588623

Token 2890: '':
' (ID: 7669)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7698543667793274
    2. ',' → logprob: -1.0198543071746826
    3. '','' → logprob: -3.2698543071746826
    4. '':' → logprob: -3.2698543071746826
    5. '':
' → logprob: -4.144854545593262
    6. ':' → logprob: -4.269854545593262
    7. ',
' → logprob: -4.394854545593262
    8. ')' → logprob: -4.394854545593262
    9. '',
' → logprob: -5.144854545593262
    10. ''' → logprob: -5.144854545593262

Token 2891: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035532306879758835
    2. '       ' → logprob: -4.410532474517822
    3. ',' → logprob: -4.785532474517822
    4. '   ' → logprob: -5.160532474517822
    5. '_,' → logprob: -6.285532474517822
    6. '',' → logprob: -6.535532474517822
    7. ''' → logprob: -6.910532474517822
    8. '               ' → logprob: -7.160532474517822
    9. '```' → logprob: -7.285532474517822
    10. ':
' → logprob: -7.660532474517822

Token 2892: ' _,' (ID: 18042)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.7712671160697937
    2. '       ' → logprob: -1.8962671756744385
    3. ' ast' → logprob: -2.0212671756744385
    4. 'return' → logprob: -2.1462671756744385
    5. '   ' → logprob: -2.8962671756744385
    6. 'ast' → logprob: -3.2712671756744385
    7. '           ' → logprob: -4.271266937255859
    8. ''' → logprob: -4.646266937255859
    9. ' dividend' → logprob: -5.396266937255859
    10. ' return' → logprob: -5.771266937255859

Token 2893: ' num' (ID: 2269)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.02239510975778103
    2. ' ast' → logprob: -4.022395133972168
    3. 'div' → logprob: -6.022395133972168
    4. ' dividend' → logprob: -6.897395133972168
    5. '_ast' → logprob: -8.397395133972168
    6. 'frac' → logprob: -9.647395133972168
    7. 'left' → logprob: -9.647395133972168
    8. '_,' → logprob: -9.647395133972168
    9. 'Dividend' → logprob: -9.897395133972168
    10. 'eval' → logprob: -10.022395133972168

Token 2894: '_ast' (ID: 131740)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024516548961400986
    2. '<|end|>' → logprob: -4.149516582489014
    3. ')' → logprob: -5.899516582489014
    4. '[' → logprob: -6.524516582489014
    5. ',_' → logprob: -6.774516582489014
    6. '_,' → logprob: -7.399516582489014
    7. ',
' → logprob: -7.524516582489014
    8. '_token' → logprob: -7.899516582489014
    9. '<|end|>' → logprob: -8.399516105651855
    10. '=' → logprob: -8.649516105651855

Token 2895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18348444998264313
    2. '=' → logprob: -1.808484435081482
    3. ' =' → logprob: -6.6834845542907715
    4. '           ' → logprob: -6.6834845542907715
    5. ',num' → logprob: -8.308484077453613
    6. ' ,' → logprob: -8.433484077453613
    7. '_,' → logprob: -8.433484077453613
    8. '               ' → logprob: -8.683484077453613
    9. '       ' → logprob: -9.058484077453613
    10. ',val' → logprob: -10.308484077453613

Token 2896: ' den' (ID: 1786)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0024651905987411737
    2. 'dem' → logprob: -6.12746524810791
    3. ' den' → logprob: -8.50246524810791
    4. ' denom' → logprob: -9.87746524810791
    5. 'div' → logprob: -11.25246524810791
    6. 'num' → logprob: -11.87746524810791
    7. '_den' → logprob: -13.00246524810791
    8. 'dom' → logprob: -14.00246524810791
    9. 'd' → logprob: -14.37746524810791
    10. ' dem' → logprob: -14.50246524810791

Token 2897: '_ast' (ID: 131740)
  Prédit: '_ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ast' → logprob: -0.0006242761737667024
    2. 'ast' → logprob: -7.500624179840088
    3. '_expr' → logprob: -11.000624656677246
    4. '   ' → logprob: -11.250624656677246
    5. '_AST' → logprob: -11.500624656677246
    6. '_' → logprob: -12.000624656677246
    7. '(ast' → logprob: -12.375624656677246
    8. 'Ast' → logprob: -12.625624656677246
    9. '_val' → logprob: -13.000624656677246
    10. ' ast' → logprob: -13.125624656677246

Token 2898: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6486676335334778
    2. ' =' → logprob: -1.648667573928833
    3. '=' → logprob: -2.398667573928833
    4. ':' → logprob: -2.898667573928833
    5. '               ' → logprob: -3.023667573928833
    6. '       ' → logprob: -3.523667573928833
    7. ',' → logprob: -3.898667573928833
    8. ':
' → logprob: -5.148667812347412
    9. '):' → logprob: -5.398667812347412
    10. ':return' → logprob: -5.398667812347412

Token 2899: ' ast' (ID: 12004)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.006732899229973555
    2. 'ast' → logprob: -6.506732940673828
    3. 'None' → logprob: -6.631732940673828
    4. 'eval' → logprob: -6.881732940673828
    5. ' num' → logprob: -7.381732940673828
    6. '(num' → logprob: -8.006732940673828
    7. 'fraction' → logprob: -8.006732940673828
    8. ' ast' → logprob: -8.256732940673828
    9. '_ast' → logprob: -8.756732940673828
    10. '0' → logprob: -9.381732940673828

Token 2900: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38227784633636475
    2. '           ' → logprob: -1.5072778463363647
    3. '
' → logprob: -3.8822779655456543
    4. '<|end|>' → logprob: -4.007277965545654
    5. '<|end|>' → logprob: -4.132277965545654
    6. '       ' → logprob: -4.507277965545654
    7. '               ' → logprob: -5.007277965545654
    8. ';' → logprob: -5.007277965545654
    9. '[
' → logprob: -5.632277965545654
    10. ',' → logprob: -6.632277965545654

Token 2901: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4567665457725525
    2. '       ' → logprob: -1.7067666053771973
    3. ':
' → logprob: -2.3317666053771973
    4. ':' → logprob: -3.2067666053771973
    5. '               ' → logprob: -3.8317666053771973
    6. ':return' → logprob: -4.706766605377197
    7. '   ' → logprob: -5.831766605377197
    8. '):' → logprob: -6.081766605377197
    9. '):
' → logprob: -6.331766605377197
    10. '[' → logprob: -6.456766605377197

Token 2902: ' x' (ID: 1215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44508543610572815
    2. 'num' → logprob: -1.6950854063034058
    3. '           ' → logprob: -2.3200855255126953
    4. '       ' → logprob: -3.5700855255126953
    5. 'val' → logprob: -3.9450855255126953
    6. 'numer' → logprob: -4.445085525512695
    7. 'res' → logprob: -4.945085525512695
    8. ' return' → logprob: -5.570085525512695
    9. 'n' → logprob: -6.320085525512695
    10. '               ' → logprob: -7.195085525512695

Token 2903: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12935617566108704
    2. ' =' → logprob: -2.1293561458587646
    3. ',' → logprob: -6.504356384277344
    4. '_val' → logprob: -7.379356384277344
    5. '_' → logprob: -9.379356384277344
    6. '   ' → logprob: -9.629356384277344
    7. '1' → logprob: -10.504356384277344
    8. '=
' → logprob: -10.629356384277344
    9. '_token' → logprob: -11.379356384277344
    10. ')' → logprob: -11.504356384277344

Token 2904: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.387577623128891
    2. '(eval' → logprob: -1.1375776529312134
    3. ' eval' → logprob: -7.762577533721924
    4. ' (' → logprob: -9.137578010559082
    5. '(e' → logprob: -9.387578010559082
    6. '(' → logprob: -10.637578010559082
    7. '   ' → logprob: -11.262578010559082
    8. '           ' → logprob: -12.137578010559082
    9. '.eval' → logprob: -12.262578010559082
    10. '1' → logprob: -12.387578010559082

Token 2905: '_expr' (ID: 53654)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3029234707355499
    2. '(num' → logprob: -1.6779234409332275
    3. '_expr' → logprob: -2.6779234409332275
    4. 'expr' → logprob: -5.677923679351807
    5. '_num' → logprob: -6.552923679351807
    6. '[num' → logprob: -7.802923679351807
    7. '_ast' → logprob: -8.177923202514648
    8. ',num' → logprob: -9.177923202514648
    9. ' num' → logprob: -10.177923202514648
    10. '=num' → logprob: -10.552923202514648

Token 2906: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0032774105202406645
    2. 'num' → logprob: -5.75327730178833
    3. '(' → logprob: -9.253277778625488
    4. ',num' → logprob: -14.003277778625488
    5. '[num' → logprob: -14.128277778625488
    6. ' num' → logprob: -14.128277778625488
    7. '(x' → logprob: -14.878277778625488
    8. '(
' → logprob: -15.003277778625488
    9. 'den' → logprob: -15.128277778625488
    10. '<num' → logprob: -15.628277778625488

Token 2907: '_ast' (ID: 131740)
  Prédit: '_ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ast' → logprob: -4.008129963040119e-06
    2. 'ast' → logprob: -13.500003814697266
    3. ',_' → logprob: -13.875003814697266
    4. 'Ast' → logprob: -14.875003814697266
    5. '_ant' → logprob: -14.875003814697266
    6. '_AST' → logprob: -15.875003814697266
    7. ',' → logprob: -16.000003814697266
    8. '_,' → logprob: -16.125003814697266
    9. '[' → logprob: -16.125003814697266
    10. 'AST' → logprob: -16.750003814697266

Token 2908: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07145945727825165
    2. ')' → logprob: -2.6964595317840576
    3. '           ' → logprob: -6.6964592933654785
    4. '       ' → logprob: -9.321459770202637
    5. ',' → logprob: -10.196459770202637
    6. '),' → logprob: -10.446459770202637
    7. '   ' → logprob: -10.571459770202637
    8. '[' → logprob: -10.821459770202637
    9. ')
' → logprob: -10.946459770202637
    10. '
' → logprob: -11.321459770202637

Token 2909: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0063895611092448235
    2. '%' → logprob: -5.381389617919922
    3. 'return' → logprob: -7.631389617919922
    4. '```' → logprob: -7.881389617919922
    5. '       ' → logprob: -8.381389617919922
    6. 'y' → logprob: -8.381389617919922
    7. '
' → logprob: -9.006389617919922
    8. 'mod' → logprob: -9.131389617919922
    9. '   ' → logprob: -10.006389617919922
    10. ' %' → logprob: -10.381389617919922

Token 2910: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.10231595486402512
    2. '           ' → logprob: -3.102315902709961
    3. 'd' → logprob: -3.477315902709961
    4. ' y' → logprob: -4.977315902709961
    5. 'inv' → logprob: -5.227315902709961
    6. 'return' → logprob: -5.352315902709961
    7. 'den' → logprob: -5.977315902709961
    8. 'm' → logprob: -7.477315902709961
    9. 'mod' → logprob: -7.727315902709961
    10. 'v' → logprob: -8.602315902709961

Token 2911: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324605919420719
    2. ' =' → logprob: -3.7732460498809814
    3. '   ' → logprob: -15.023245811462402
    4. '           ' → logprob: -16.39824676513672
    5. '=
' → logprob: -16.64824676513672
    6. ' ' → logprob: -17.14824676513672
    7. ')' → logprob: -17.64824676513672
    8. '       ' → logprob: -18.02324676513672
    9. '=int' → logprob: -18.02324676513672
    10. ',' → logprob: -18.02324676513672

Token 2912: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.0003055493871215731
    2. '(eval' → logprob: -8.25030517578125
    3. ' eval' → logprob: -10.50030517578125
    4. 'y' → logprob: -11.50030517578125
    5. '(y' → logprob: -12.25030517578125
    6. 'x' → logprob: -14.25030517578125
    7. '(' → logprob: -14.37530517578125
    8. 'int' → logprob: -15.87530517578125
    9. '(x' → logprob: -16.00030517578125
    10. '.eval' → logprob: -16.62530517578125

Token 2913: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.00026729601086117327
    2. 'expr' → logprob: -8.250267028808594
    3. 'Expr' → logprob: -12.125267028808594
    4. '_ast' → logprob: -15.000267028808594
    5. '(expr' → logprob: -15.625267028808594
    6. '_EXPR' → logprob: -16.250267028808594
    7. '```' → logprob: -17.500267028808594
    8. ' expr' → logprob: -17.875267028808594
    9. 'x' → logprob: -18.250267028808594
    10. '_repr' → logprob: -18.500267028808594

Token 2914: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25193288922309875
    2. 'den' → logprob: -1.5019328594207764
    3. ' den' → logprob: -12.751933097839355
    4. '_den' → logprob: -14.501933097839355
    5. ' (' → logprob: -16.00193214416504
    6. '.den' → logprob: -16.25193214416504
    7. '```' → logprob: -17.25193214416504
    8. '[' → logprob: -17.37693214416504
    9. '(
' → logprob: -17.50193214416504
    10. '((' → logprob: -18.25193214416504

Token 2915: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -7.107425062713446e-06
    2. ' den' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '(' → logprob: -17.87500762939453
    5. ' ' → logprob: -17.87500762939453
    6. '
' → logprob: -18.00000762939453
    7. '  ' → logprob: -18.25000762939453
    8. ')' → logprob: -18.25000762939453
    9. 'ast' → logprob: -18.50000762939453
    10. '[' → logprob: -18.50000762939453

Token 2916: '_ast' (ID: 131740)
  Prédit: '_ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ast' → logprob: -0.22597119212150574
    2. 'ast' → logprob: -1.6009712219238281
    3. 'st' → logprob: -7.975971221923828
    4. 't' → logprob: -10.350971221923828
    5. '_expr' → logprob: -10.475971221923828
    6. '
' → logprob: -10.600971221923828
    7. ' ast' → logprob: -10.725971221923828
    8. 'Ast' → logprob: -10.850971221923828
    9. 'at' → logprob: -11.475971221923828
    10. 'um' → logprob: -11.600971221923828

Token 2917: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04416439309716225
    2. ')' → logprob: -3.6691644191741943
    3. '           ' → logprob: -4.044164180755615
    4. '       ' → logprob: -9.669164657592773
    5. '   ' → logprob: -10.169164657592773
    6. '
' → logprob: -11.044164657592773
    7. '):
' → logprob: -11.419164657592773
    8. '```' → logprob: -11.419164657592773
    9. ')
' → logprob: -11.544164657592773
    10. '               ' → logprob: -12.419164657592773

Token 2918: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004634588025510311
    2. 'return' → logprob: -5.879634380340576
    3. 'if' → logprob: -6.754634380340576
    4. '       ' → logprob: -8.629634857177734
    5. '%' → logprob: -8.754634857177734
    6. 'mod' → logprob: -9.129634857177734
    7. ' if' → logprob: -9.379634857177734
    8. '   ' → logprob: -10.129634857177734
    9. '
' → logprob: -10.629634857177734
    10. ' return' → logprob: -10.754634857177734

Token 2919: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1790768951177597
    2. 'if' → logprob: -2.179076910018921
    3. '           ' → logprob: -3.679076910018921
    4. 'inv' → logprob: -4.179076671600342
    5. 'z' → logprob: -5.804076671600342
    6. 'y' (adapté à ' y') → logprob: -5.929076671600342
    7. ' return' → logprob: -6.054076671600342
    8. ' if' → logprob: -7.554076671600342
    9. '       ' → logprob: -7.929076671600342
    10. '   ' → logprob: -7.929076671600342

Token 2920: '_inv' (ID: 53427)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.519213855266571
    2. '_inv' → logprob: -2.019213914871216
    3. '!=' → logprob: -2.144213914871216
    4. '==' → logprob: -3.144213914871216
    5. '```' → logprob: -3.144213914871216
    6. '
' → logprob: -3.894213914871216
    7. ' =' → logprob: -4.644213676452637
    8. ' !=' → logprob: -4.894213676452637
    9. '_inverse' → logprob: -4.894213676452637
    10. 'inv' → logprob: -5.144213676452637

Token 2921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28117769956588745
    2. ' =' → logprob: -1.4061777591705322
    3. '   ' → logprob: -11.281177520751953
    4. 'pow' → logprob: -11.906177520751953
    5. ')' → logprob: -13.531177520751953
    6. '*' → logprob: -13.656177520751953
    7. '=
' → logprob: -14.031177520751953
    8. ',' → logprob: -14.031177520751953
    9. '```' → logprob: -14.031177520751953
    10. ' ' → logprob: -14.531177520751953

Token 2922: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.9385402993066236e-05
    2. ' mod' → logprob: -11.000019073486328
    3. 'pow' → logprob: -13.125019073486328
    4. '(mod' → logprob: -14.375019073486328
    5. '	mod' → logprob: -17.000019073486328
    6. '_mod' → logprob: -20.500019073486328
    7. '```' → logprob: -21.500019073486328
    8. 'MOD' → logprob: -21.625019073486328
    9. '   ' → logprob: -22.250019073486328
    10. ' мод' → logprob: -22.250019073486328

Token 2923: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0015744947595521808
    2. '_pow' → logprob: -7.376574516296387
    3. '_' → logprob: -8.001574516296387
    4. ''_' → logprob: -9.251574516296387
    5. '_in' → logprob: -9.376574516296387
    6. ' _' → logprob: -9.626574516296387
    7. '_inverse' → logprob: -10.126574516296387
    8. '_INV' → logprob: -10.251574516296387
    9. '(_' → logprob: -10.251574516296387
    10. '\' → logprob: -10.626574516296387

Token 2924: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.002007268602028489
    2. 'y' → logprob: -6.877007484436035
    3. '(' → logprob: -7.127007484436035
    4. '(
' → logprob: -8.752007484436035
    5. ')' → logprob: -11.502007484436035
    6. ' y' → logprob: -14.002007484436035
    7. ')y' → logprob: -14.377007484436035
    8. ')(' → logprob: -14.877007484436035
    9. ' (' → logprob: -15.752007484436035
    10. '
' → logprob: -16.00200653076172

Token 2925: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5774711966514587
    2. ')
' → logprob: -0.8274711966514587
    3. ',' → logprob: -6.9524712562561035
    4. '           ' → logprob: -8.327470779418945
    5. '   ' → logprob: -9.577470779418945
    6. '       ' → logprob: -9.577470779418945
    7. ')`
' → logprob: -9.577470779418945
    8. ')
' → logprob: -10.327470779418945
    9. ')`' → logprob: -10.827470779418945
    10. '```' → logprob: -11.202470779418945

Token 2926: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001098418957553804
    2. 'return' → logprob: -7.0010986328125
    3. '       ' → logprob: -9.0010986328125
    4. ' return' → logprob: -10.0010986328125
    5. '   ' → logprob: -11.2510986328125
    6. '```' → logprob: -13.3760986328125
    7. '	       ' → logprob: -13.7510986328125
    8. '               ' → logprob: -14.0010986328125
    9. '		' → logprob: -14.1260986328125
    10. '	return' → logprob: -15.1260986328125

Token 2927: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0017476500943303108
    2. '           ' → logprob: -6.8767476081848145
    3. ' return' → logprob: -7.2517476081848145
    4. 'result' → logprob: -13.126748085021973
    5. '	return' → logprob: -13.626748085021973
    6. '   ' → logprob: -13.751748085021973
    7. '       ' → logprob: -13.876748085021973
    8. 'x' → logprob: -15.626748085021973
    9. 'ans' → logprob: -16.501747131347656
    10. '```' → logprob: -16.501747131347656

Token 2928: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0067456853576004505
    2. ' (' → logprob: -5.0067458152771
    3. '(' → logprob: -10.756745338439941
    4. 'x' → logprob: -11.756745338439941
    5. '   ' → logprob: -14.256745338439941
    6. ' x' → logprob: -15.256745338439941
    7. ' ' → logprob: -16.256746292114258
    8. ' ' → logprob: -16.381746292114258
    9. '`' → logprob: -17.256746292114258
    10. '
' → logprob: -17.381746292114258

Token 2929: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002636006975080818
    2. '(x' → logprob: -8.500263214111328
    3. ' x' → logprob: -9.750263214111328
    4. '   ' → logprob: -13.875263214111328
    5. '(' → logprob: -15.250263214111328
    6. ' (' → logprob: -15.250263214111328
    7. ')x' → logprob: -15.375263214111328
    8. '           ' → logprob: -16.875263214111328
    9. '	x' → logprob: -17.000263214111328
    10. ')' → logprob: -17.750263214111328

Token 2930: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2014138251543045
    2. ' *' → logprob: -1.701413869857788
    3. '**' → logprob: -15.451414108276367
    4. '*y' → logprob: -15.451414108276367
    5. '*
' → logprob: -16.326414108276367
    6. '*x' → logprob: -17.201414108276367
    7. '   ' → logprob: -17.201414108276367
    8. ' *
' → logprob: -18.326414108276367
    9. '*object' → logprob: -18.701414108276367
    10. ' ' → logprob: -19.076414108276367

Token 2931: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00017970333283301443
    2. ' y' → logprob: -8.625179290771484
    3. ')y' → logprob: -17.250179290771484
    4. '   ' → logprob: -17.375179290771484
    5. '(y' → logprob: -17.625179290771484
    6. '```' → logprob: -17.750179290771484
    7. '	y' → logprob: -17.875179290771484
    8. 'x' → logprob: -18.375179290771484
    9. '`' → logprob: -18.750179290771484
    10. ')' → logprob: -18.875179290771484

Token 2932: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.029816802591085434
    2. ')' → logprob: -3.6548168659210205
    3. ')%' → logprob: -6.404816627502441
    4. '%' → logprob: -6.779816627502441
    5. '```' → logprob: -8.154816627502441
    6. ' %' → logprob: -9.029816627502441
    7. '_INV' → logprob: -9.279816627502441
    8. '   ' → logprob: -9.904816627502441
    9. '^{-' → logprob: -10.279816627502441
    10. '
' → logprob: -10.779816627502441

Token 2933: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022247217129915953
    2. ')%' → logprob: -6.377224922180176
    3. ' %' → logprob: -8.502224922180176
    4. ' )' → logprob: -8.627224922180176
    5. '%' → logprob: -9.502224922180176
    6. '   ' → logprob: -10.002224922180176
    7. '       ' → logprob: -11.627224922180176
    8. '           ' → logprob: -12.502224922180176
    9. ')
' → logprob: -13.377224922180176
    10. '    ' → logprob: -13.627224922180176

Token 2934: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.056124601513147354
    2. '%' → logprob: -2.931124687194824
    3. ')' → logprob: -6.806124687194824
    4. ')%' → logprob: -9.431124687194824
    5. '       ' → logprob: -11.181124687194824
    6. '   ' → logprob: -11.681124687194824
    7. '           ' → logprob: -11.931124687194824
    8. '```' → logprob: -12.181124687194824
    9. '%x' → logprob: -12.681124687194824
    10. '%n' → logprob: -12.931124687194824

Token 2935: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.857719275401905e-05
    2. ' MOD' → logprob: -10.250038146972656
    3. '201' → logprob: -12.750038146972656
    4. '(M' → logprob: -15.125038146972656
    5. '_MOD' → logprob: -17.125038146972656
    6. '(mod' → logprob: -19.875038146972656
    7. '(Mod' → logprob: -20.250038146972656
    8. '(' → logprob: -20.375038146972656
    9. '.MOD' → logprob: -20.375038146972656
    10. '```' → logprob: -20.375038146972656

Token 2936: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017729965038597584
    2. '   ' → logprob: -7.001772880554199
    3. '<|end|>' → logprob: -7.126772880554199
    4. '```' → logprob: -11.2517728805542
    5. '
' → logprob: -11.7517728805542
    6. ')' → logprob: -12.0017728805542
    7. '.' → logprob: -12.0017728805542
    8. '<|end|>' → logprob: -12.2517728805542
    9. '...' → logprob: -12.3767728805542
    10. 'import' → logprob: -13.2517728805542

Token 2937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006796371191740036
    2. 'elif' → logprob: -6.131796360015869
    3. '```' → logprob: -6.256796360015869
    4. '   ' → logprob: -7.256796360015869
    5. 'if' → logprob: -7.256796360015869
    6. '           ' → logprob: -7.756796360015869
    7. ')' → logprob: -8.006796836853027
    8. ' if' → logprob: -8.631796836853027
    9. '               ' → logprob: -9.756796836853027
    10. '
' → logprob: -9.881796836853027

Token 2938: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48205193877220154
    2. 'if' (adapté à ' if') → logprob: -1.357051968574524
    3. 'elif' → logprob: -2.1070518493652344
    4. ' if' → logprob: -6.482051849365234
    5. '
' → logprob: -6.732051849365234
    6. '   ' → logprob: -7.607051849365234
    7. ' elif' → logprob: -9.607051849365234
    8. '```' → logprob: -10.357051849365234
    9. '           ' → logprob: -10.982051849365234
    10. '_' → logprob: -11.357051849365234

Token 2939: ' kind' (ID: 3675)
  Prédit: 'kind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kind' → logprob: -0.00863111112266779
    2. ' kind' → logprob: -4.758631229400635
    3. '(kind' → logprob: -12.633630752563477
    4. '       ' → logprob: -12.758630752563477
    5. '      ' → logprob: -12.883630752563477
    6. '  ' → logprob: -12.883630752563477
    7. '   ' → logprob: -13.133630752563477
    8. '     ' → logprob: -14.258630752563477
    9. '    ' → logprob: -14.383630752563477
    10. '_kind' → logprob: -14.633630752563477

Token 2940: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07892889529466629
    2. '==' → logprob: -2.5789289474487305
    3. '=='' → logprob: -10.57892894744873
    4. '[' → logprob: -12.57892894744873
    5. '=="' → logprob: -13.57892894744873
    6. '       ' → logprob: -13.95392894744873
    7. '   ' → logprob: -14.32892894744873
    8. ' =='' → logprob: -14.32892894744873
    9. '==
' → logprob: -14.32892894744873
    10. ',' → logprob: -14.57892894744873

Token 2941: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31694209575653076
    2. ''ex' → logprob: -1.3169420957565308
    3. ' '' → logprob: -6.19194221496582
    4. ''t' → logprob: -6.69194221496582
    5. ''s' → logprob: -8.56694221496582
    6. ''exp' → logprob: -10.19194221496582
    7. ''d' → logprob: -10.31694221496582
    8. ''e' → logprob: -10.81694221496582
    9. '('' → logprob: -10.94194221496582
    10. ' ' → logprob: -11.31694221496582

Token 2942: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.044114433228969574
    2. ''' → logprob: -3.169114351272583
    3. 'expr' → logprob: -7.419114589691162
    4. ''ex' → logprob: -8.669114112854004
    5. 'term' → logprob: -8.794114112854004
    6. 'fraction' → logprob: -10.169114112854004
    7. ''p' → logprob: -10.419114112854004
    8. '"' → logprob: -10.544114112854004
    9. ''s' → logprob: -11.044114112854004
    10. 'power' → logprob: -11.294114112854004

Token 2943: 'expr' (ID: 21343)
  Prédit: 'expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.07948385179042816
    2. '('' → logprob: -2.9544837474823
    3. '',' → logprob: -4.454483985900879
    4. ''' → logprob: -5.454483985900879
    5. '','' → logprob: -6.579483985900879
    6. '_expr' → logprob: -6.579483985900879
    7. '(' → logprob: -6.829483985900879
    8. ',' → logprob: -7.204483985900879
    9. ''ex' → logprob: -7.329483985900879
    10. 'express' → logprob: -7.454483985900879

Token 2944: '':
' (ID: 7669)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.4312521815299988
    2. ',' → logprob: -1.1812522411346436
    3. '           ' → logprob: -4.0562520027160645
    4. ',
' → logprob: -5.0562520027160645
    5. '','' → logprob: -5.0562520027160645
    6. '',
' → logprob: -5.6812520027160645
    7. '       ' → logprob: -5.9312520027160645
    8. '[' → logprob: -6.1812520027160645
    9. ':' → logprob: -6.3062520027160645
    10. ':
' → logprob: -6.5562520027160645

Token 2945: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1576334685087204
    2. '       ' → logprob: -3.4076335430145264
    3. 'return' → logprob: -3.5326335430145264
    4. ''' → logprob: -3.7826335430145264
    5. '_,' → logprob: -4.407633304595947
    6. '('' → logprob: -4.782633304595947
    7. '(_,' → logprob: -5.157633304595947
    8. '0' → logprob: -5.282633304595947
    9. '(' → logprob: -5.407633304595947
    10. ' return' → logprob: -5.657633304595947

Token 2946: ' _,' (ID: 18042)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17179207503795624
    2. '_,' (adapté à ' _,') → logprob: -2.7967920303344727
    3. ''ex' → logprob: -3.5467920303344727
    4. '           ' → logprob: -4.296792030334473
    5. ''x' → logprob: -4.546792030334473
    6. ''int' → logprob: -4.796792030334473
    7. '(_,' → logprob: -5.296792030334473
    8. '       ' → logprob: -5.296792030334473
    9. '('' → logprob: -5.421792030334473
    10. ' '' → logprob: -5.921792030334473

Token 2947: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.007262416183948517
    2. 'primary' → logprob: -5.257262229919434
    3. 'left' → logprob: -6.882262229919434
    4. ' base' → logprob: -7.507262229919434
    5. '_base' → logprob: -8.632262229919434
    6. 'x' → logprob: -9.882262229919434
    7. 'b' → logprob: -10.257262229919434
    8. 'ast' → logprob: -10.507262229919434
    9. 'expr' → logprob: -10.507262229919434
    10. 'prim' → logprob: -10.507262229919434

Token 2948: '_ast' (ID: 131740)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.034283265471458435
    2. ',' → logprob: -3.65928316116333
    3. '_ast' → logprob: -5.40928316116333
    4. '_,' → logprob: -6.40928316116333
    5. ',val' → logprob: -7.15928316116333
    6. 'val' → logprob: -8.034283638000488
    7. '',' → logprob: -8.784283638000488
    8. ''_' → logprob: -9.034283638000488
    9. ' ,' → logprob: -9.284283638000488
    10. '_expr' → logprob: -9.284283638000488

Token 2949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007043090183287859
    2. '           ' → logprob: -5.25704288482666
    3. ' ,' → logprob: -6.63204288482666
    4. '[' → logprob: -8.75704288482666
    5. '_,' → logprob: -8.75704288482666
    6. ',
' → logprob: -9.88204288482666
    7. '            ' → logprob: -11.25704288482666
    8. '',' → logprob: -11.38204288482666
    9. '          ' → logprob: -11.50704288482666
    10. '               ' → logprob: -11.63204288482666

Token 2950: ' digit' (ID: 19181)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0908752828836441
    2. 'ex' → logprob: -2.5908753871917725
    3. 'pow' → logprob: -4.590875148773193
    4. ' exp' → logprob: -6.590875148773193
    5. 'expo' → logprob: -9.090875625610352
    6. ' exponent' → logprob: -9.090875625610352
    7. 'digit' → logprob: -9.090875625610352
    8. 'power' → logprob: -10.090875625610352
    9. ' pow' → logprob: -11.215875625610352
    10. ' expo' → logprob: -14.090875625610352

Token 2951: ' =' (ID: 314)
  Prédit: '_ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ast' → logprob: -0.04125248268246651
    2. '=' → logprob: -3.541252374649048
    3. ' =' → logprob: -4.541252613067627
    4. '   ' → logprob: -8.541252136230469
    5. '_AST' → logprob: -8.916252136230469
    6. 'ast' → logprob: -9.416252136230469
    7. ')' → logprob: -9.666252136230469
    8. '           ' → logprob: -9.791252136230469
    9. '_' → logprob: -9.791252136230469
    10. '       ' → logprob: -10.291252136230469

Token 2952: ' ast' (ID: 12004)
  Prédit: ' ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ast' → logprob: -0.9909244775772095
    2. 'base' → logprob: -1.2409244775772095
    3. ' base' → logprob: -1.9909244775772095
    4. 'digit' → logprob: -2.24092435836792
    5. 'ast' → logprob: -2.49092435836792
    6. '_ast' → logprob: -5.49092435836792
    7. ' digit' → logprob: -5.86592435836792
    8. ''' → logprob: -6.11592435836792
    9. 'eval' → logprob: -6.99092435836792
    10. ' ' → logprob: -7.24092435836792

Token 2953: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13229331374168396
    2. '[' → logprob: -2.507293224334717
    3. ',' → logprob: -4.132293224334717
    4. '               ' → logprob: -4.132293224334717
    5. '**' → logprob: -6.007293224334717
    6. '[
' → logprob: -6.507293224334717
    7. '          ' → logprob: -7.507293224334717
    8. '<|end|>' → logprob: -7.507293224334717
    9. '```' → logprob: -7.507293224334717
    10. ':
' → logprob: -7.632293224334717

Token 2954: '           ' (ID: 352)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.46452879905700684
    2. '           ' → logprob: -1.2145287990570068
    3. '[' → logprob: -3.714528799057007
    4. ' **' → logprob: -3.964528799057007
    5. '               ' → logprob: -4.589529037475586
    6. '^' → logprob: -4.839529037475586
    7. '[
' → logprob: -6.089529037475586
    8. '       ' → logprob: -6.464529037475586
    9. '*' → logprob: -6.714529037475586
    10. ':
' → logprob: -6.964529037475586

Token 2955: ' base' (ID: 3611)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5444786548614502
    2. 'pow' → logprob: -1.5444786548614502
    3. 'eval' → logprob: -1.7944786548614502
    4. '           ' → logprob: -4.794478416442871
    5. '(eval' → logprob: -5.169478416442871
    6. 'int' → logprob: -5.294478416442871
    7. '       ' → logprob: -5.419478416442871
    8. ' return' → logprob: -5.794478416442871
    9. '**' → logprob: -6.044478416442871
    10. 'x' → logprob: -6.169478416442871

Token 2956: ' =' (ID: 314)
  Prédit: '_ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ast' → logprob: -0.021443895995616913
    2. ',' → logprob: -4.521443843841553
    3. '_val' → logprob: -5.271443843841553
    4. '**' → logprob: -6.771443843841553
    5. ')' → logprob: -6.896443843841553
    6. ' =' → logprob: -7.771443843841553
    7. '_,' → logprob: -8.271444320678711
    8. '=' → logprob: -8.396444320678711
    9. '_AST' → logprob: -8.396444320678711
    10. '_pow' → logprob: -8.521444320678711

Token 2957: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.00015062130114529282
    2. ' eval' → logprob: -9.250150680541992
    3. '(eval' → logprob: -9.875150680541992
    4. 'pow' → logprob: -13.750150680541992
    5. 'int' → logprob: -14.125150680541992
    6. 'base' → logprob: -14.875150680541992
    7. 'ast' → logprob: -14.875150680541992
    8. '`' → logprob: -16.000150680541992
    9. '(' → logprob: -16.625150680541992
    10. '10' → logprob: -17.000150680541992

Token 2958: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0037472255062311888
    2. '(base' → logprob: -5.753747463226318
    3. '_ast' → logprob: -7.628747463226318
    4. 'expr' → logprob: -10.37874698638916
    5. 'Expr' → logprob: -10.62874698638916
    6. 'base' → logprob: -11.00374698638916
    7. '(ast' → logprob: -12.87874698638916
    8. '(expr' → logprob: -13.87874698638916
    9. '_' → logprob: -14.00374698638916
    10. '_EXPR' → logprob: -14.00374698638916

Token 2959: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.0005861566751264036
    2. 'base' → logprob: -7.750586032867432
    3. '(' → logprob: -8.87558650970459
    4. '(ast' → logprob: -12.00058650970459
    5. '(
' → logprob: -12.37558650970459
    6. ' (' → logprob: -14.00058650970459
    7. ' base' → logprob: -14.00058650970459
    8. '```' → logprob: -14.25058650970459
    9. '`' → logprob: -14.37558650970459
    10. '_ast' → logprob: -14.75058650970459

Token 2960: '_ast' (ID: 131740)
  Prédit: '_ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ast' → logprob: -0.00029148702742531896
    2. '(ast' → logprob: -8.62529182434082
    3. '(base' → logprob: -9.62529182434082
    4. 'ast' → logprob: -10.37529182434082
    5. ',' → logprob: -12.62529182434082
    6. '_AST' → logprob: -13.12529182434082
    7. 'Ast' → logprob: -13.50029182434082
    8. '[' → logprob: -13.50029182434082
    9. ')' → logprob: -13.75029182434082
    10. '(_' → logprob: -14.00029182434082

Token 2961: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.325719952583313
    2. ')' → logprob: -1.575719952583313
    3. '           ' → logprob: -3.2007198333740234
    4. '**' → logprob: -4.200719833374023
    5. '[' → logprob: -5.450719833374023
    6. '),' → logprob: -5.575719833374023
    7. '               ' → logprob: -6.450719833374023
    8. ',
' → logprob: -6.700719833374023
    9. ' ,' → logprob: -7.450719833374023
    10. '```' → logprob: -7.825719833374023

Token 2962: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1050458550453186
    2. '**' → logprob: -2.855045795440674
    3. 'pow' → logprob: -4.355045795440674
    4. ' **' → logprob: -4.730045795440674
    5. '
' → logprob: -4.855045795440674
    6. '[' → logprob: -5.855045795440674
    7. '`' → logprob: -7.105045795440674
    8. '       ' → logprob: -7.105045795440674
    9. '[
' → logprob: -7.355045795440674
    10. '               ' → logprob: -7.355045795440674

Token 2963: ' e' (ID: 319)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.166761115193367
    2. '           ' → logprob: -3.0417611598968506
    3. 'int' → logprob: -3.2917611598968506
    4. 'return' → logprob: -3.5417611598968506
    5. '**' → logprob: -3.6667611598968506
    6. 'result' → logprob: -5.5417609214782715
    7. ' pow' → logprob: -6.2917609214782715
    8. '       ' → logprob: -7.1667609214782715
    9. 'digit' → logprob: -7.2917609214782715
    10. 'val' → logprob: -7.5417609214782715

Token 2964: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2002907246351242
    2. '=' → logprob: -3.4502906799316406
    3. '[' → logprob: -3.5752906799316406
    4. '**' → logprob: -3.7002906799316406
    5. '^' → logprob: -3.9502906799316406
    6. ' =' → logprob: -4.200290679931641
    7. '_' → logprob: -4.825290679931641
    8. '```' → logprob: -5.075290679931641
    9. 'd' → logprob: -5.200290679931641
    10. ',' → logprob: -5.200290679931641

Token 2965: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.847109812544659e-05
    2. 'eval' → logprob: -10.250048637390137
    3. ' int' → logprob: -11.500048637390137
    4. '(int' → logprob: -13.625048637390137
    5. 'digit' → logprob: -13.750048637390137
    6. 'ord' → logprob: -15.500048637390137
    7. ''int' → logprob: -16.25004768371582
    8. 'e' → logprob: -16.62504768371582
    9. '<int' → logprob: -16.87504768371582
    10. '           ' → logprob: -17.25004768371582

Token 2966: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0019697926472872496
    2. 'digit' → logprob: -6.251969814300537
    3. 'd' → logprob: -10.251969337463379
    4. '(' → logprob: -12.501969337463379
    5. '(
' → logprob: -13.501969337463379
    6. '(pow' → logprob: -15.876969337463379
    7. '	d' → logprob: -16.001970291137695
    8. '[d' → logprob: -16.501970291137695
    9. '
' → logprob: -16.751970291137695
    10. '   ' → logprob: -16.876970291137695

Token 2967: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.0038392639253288507
    2. '(d' → logprob: -6.378839492797852
    3. 'digit' → logprob: -6.753839492797852
    4. '(' → logprob: -8.253839492797852
    5. 'igt' → logprob: -8.503839492797852
    6. '[' → logprob: -9.503839492797852
    7. ')' → logprob: -9.628839492797852
    8. 'git' → logprob: -9.878839492797852
    9. '{' → logprob: -10.378839492797852
    10. 'ast' → logprob: -10.503839492797852

Token 2968: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007802753709256649
    2. '**' → logprob: -5.257802963256836
    3. ')
' → logprob: -7.132802963256836
    4. ')**' → logprob: -7.882802963256836
    5. ',' → logprob: -8.007802963256836
    6. '<|end|>' → logprob: -8.382802963256836
    7. '+' → logprob: -9.132802963256836
    8. '   ' → logprob: -9.132802963256836
    9. '[' → logprob: -9.257802963256836
    10. '<|end|>' → logprob: -9.257802963256836

Token 2969: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19773432612419128
    2. '**' → logprob: -1.9477343559265137
    3. 'return' → logprob: -4.572734355926514
    4. '
' → logprob: -5.197734355926514
    5. 'pow' → logprob: -5.447734355926514
    6. ' **' → logprob: -5.572734355926514
    7. '```' → logprob: -5.947734355926514
    8. ')' → logprob: -5.947734355926514
    9. '       ' → logprob: -6.947734355926514
    10. '%' → logprob: -7.072734355926514

Token 2970: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2279394119977951
    2. '           ' → logprob: -1.7279393672943115
    3. ' return' → logprob: -3.7279393672943115
    4. '       ' → logprob: -7.477939605712891
    5. '   ' → logprob: -7.477939605712891
    6. ' ' → logprob: -8.72793960571289
    7. 'pow' → logprob: -8.72793960571289
    8. '`' → logprob: -9.22793960571289
    9. '**' → logprob: -9.60293960571289
    10. '               ' → logprob: -9.85293960571289

Token 2971: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08995908498764038
    2. ' e' → logprob: -2.964959144592285
    3. 'base' → logprob: -3.964959144592285
    4. ' base' → logprob: -4.964959144592285
    5. 'digit' → logprob: -5.589959144592285
    6. 'ch' → logprob: -6.464959144592285
    7. ' ast' → logprob: -6.839959144592285
    8. 'pow' → logprob: -7.714959144592285
    9. ' digit' → logprob: -7.839959144592285
    10. '   ' → logprob: -8.589959144592285

Token 2972: ' ==' (ID: 951)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.028167963027954
    2. ' ==' → logprob: -1.028167963027954
    3. '==' → logprob: -2.778167963027954
    4. ')' → logprob: -2.778167963027954
    5. ' **' → logprob: -3.153167963027954
    6. ' >' → logprob: -3.403167963027954
    7. '>' → logprob: -4.278167724609375
    8. ' +' → logprob: -4.653167724609375
    9. '):
' → logprob: -4.903167724609375
    10. '[' → logprob: -5.153167724609375

Token 2973: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001239752396941185
    2. ' ' → logprob: -6.876239776611328
    3. '1' → logprob: -9.001239776611328
    4. '2' → logprob: -9.626239776611328
    5. '
' → logprob: -12.376239776611328
    6. '-' → logprob: -12.876239776611328
    7. '(' → logprob: -13.001239776611328
    8. ' -' → logprob: -13.376239776611328
    9. ')' → logprob: -13.626239776611328
    10. '10' → logprob: -13.751239776611328

Token 2974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030424181022681296
    2. ' ' → logprob: -8.500304222106934
    3. '1' → logprob: -9.375304222106934
    4. '2' → logprob: -11.750304222106934
    5. '(' → logprob: -12.625304222106934
    6. '-' → logprob: -12.750304222106934
    7. '```' → logprob: -14.750304222106934
    8. ')' → logprob: -15.437804222106934
    9. ''' → logprob: -16.00030517578125
    10. ' -' → logprob: -16.31280517578125

Token 2975: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10796824097633362
    2. '               ' → logprob: -2.357968330383301
    3. ':' → logprob: -5.107968330383301
    4. ':return' → logprob: -6.857968330383301
    5. '           ' → logprob: -8.2329683303833
    6. '):
' → logprob: -9.2329683303833
    7. ' :
' → logprob: -9.9829683303833
    8. '**' → logprob: -10.3579683303833
    9. ' or' → logprob: -10.6079683303833
    10. ',' → logprob: -10.6079683303833

Token 2976: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025071855634450912
    2. '           ' → logprob: -3.900071859359741
    3. '       ' → logprob: -5.650071620941162
    4. ':
' → logprob: -7.400071620941162
    5. '                   ' → logprob: -8.40007209777832
    6. '                       ' → logprob: -9.40007209777832
    7. '```' → logprob: -11.02507209777832
    8. ':' → logprob: -11.52507209777832
    9. ' return' → logprob: -11.77507209777832
    10. 'return' → logprob: -11.90007209777832

Token 2977: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33303162455558777
    2. '               ' → logprob: -1.3330316543579102
    3. ' return' → logprob: -3.95803165435791
    4. '           ' → logprob: -8.83303165435791
    5. '                   ' → logprob: -9.08303165435791
    6. '                       ' → logprob: -9.20803165435791
    7. '   ' → logprob: -10.33303165435791
    8. '```' → logprob: -10.83303165435791
    9. '{return' → logprob: -11.08303165435791
    10. ':return' → logprob: -11.08303165435791

Token 2978: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059304554015398026
    2. ' ' → logprob: -5.130930423736572
    3. '   ' → logprob: -14.75593090057373
    4. '(' → logprob: -14.88093090057373
    5. 'pow' → logprob: -15.00593090057373
    6. '
' → logprob: -15.63093090057373
    7. ' (' → logprob: -15.75593090057373
    8. '`' → logprob: -16.005929946899414
    9. ' ' → logprob: -16.755929946899414
    10. ' 
' → logprob: -16.755929946899414

Token 2979: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.375005722045898
    3. 'pow' → logprob: -14.125005722045898
    4. '(' → logprob: -15.750005722045898
    5. '   ' → logprob: -16.0000057220459
    6. '"' → logprob: -17.0000057220459
    7. ''' → logprob: -17.1250057220459
    8. '`' → logprob: -17.7500057220459
    9. '
' → logprob: -17.7500057220459
    10. '0' → logprob: -17.7500057220459

Token 2980: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06214537471532822
    2. '**' → logprob: -3.312145471572876
    3. '
' → logprob: -4.187145233154297
    4. '       ' → logprob: -5.187145233154297
    5. '               ' → logprob: -6.812145233154297
    6. '^' → logprob: -7.812145233154297
    7. '   ' → logprob: -7.937145233154297
    8. '`' → logprob: -9.187145233154297
    9. '*' → logprob: -9.187145233154297
    10. '```' → logprob: -9.187145233154297

Token 2981: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006109386216849089
    2. '
' → logprob: -6.256109237670898
    3. '               ' → logprob: -6.381109237670898
    4. '       ' → logprob: -6.631109237670898
    5. '**' → logprob: -7.256109237670898
    6. '                   ' → logprob: -9.131109237670898
    7. '   ' → logprob: -9.881109237670898
    8. '		' → logprob: -10.381109237670898
    9. 'else' → logprob: -10.381109237670898
    10. ' **' → logprob: -10.506109237670898

Token 2982: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25216174125671387
    2. '**' → logprob: -1.8771617412567139
    3. '       ' → logprob: -4.002161979675293
    4. ' **' → logprob: -4.502161979675293
    5. '               ' → logprob: -4.627161979675293
    6. '
' → logprob: -4.627161979675293
    7. '^' → logprob: -5.252161979675293
    8. 'return' (adapté à ' return') → logprob: -5.752161979675293
    9. '*' → logprob: -5.877161979675293
    10. '   ' → logprob: -6.252161979675293

Token 2983: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.06265787035226822
    2. ' pow' → logprob: -3.4376578330993652
    3. '(pow' → logprob: -3.8126578330993652
    4. '(base' → logprob: -5.437657833099365
    5. ' (' → logprob: -6.312657833099365
    6. 'base' → logprob: -8.562658309936523
    7. '(' → logprob: -9.187658309936523
    8. ' base' → logprob: -10.312658309936523
    9. '   ' → logprob: -12.562658309936523
    10. '(power' → logprob: -12.812658309936523

Token 2984: '(base' (ID: 25314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3142399191856384
    2. '(base' → logprob: -1.3142399787902832
    3. '(
' → logprob: -6.939239978790283
    4. 'base' → logprob: -11.814239501953125
    5. ' (' → logprob: -14.439239501953125
    6. '(

' → logprob: -14.939239501953125
    7. '(
' → logprob: -15.689239501953125
    8. '(b' → logprob: -16.439239501953125
    9. ' base' → logprob: -16.564239501953125
    10. '(BASE' → logprob: -17.064239501953125

Token 2985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15897224843502045
    2. ',e' → logprob: -2.4089722633361816
    3. '(' → logprob: -3.0339722633361816
    4. '(e' → logprob: -4.783972263336182
    5. '(
' → logprob: -8.033971786499023
    6. ',
' → logprob: -8.908971786499023
    7. '           ' → logprob: -10.533971786499023
    8. 'e' → logprob: -10.908971786499023
    9. ' ,' → logprob: -10.908971786499023
    10. '```' → logprob: -11.283971786499023

Token 2986: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.001502598519437015
    2. ' e' → logprob: -6.501502513885498
    3. '
' → logprob: -16.501502990722656
    4. ')e' → logprob: -16.626502990722656
    5. '           ' → logprob: -16.751502990722656
    6. '(e' → logprob: -17.251502990722656
    7. '               ' → logprob: -18.001502990722656
    8. '	e' → logprob: -19.376502990722656
    9. '%e' → logprob: -19.501502990722656
    10. '   ' → logprob: -19.501502990722656

Token 2987: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062409382313489914
    2. ')' → logprob: -2.9374094009399414
    3. '           ' → logprob: -5.312409400939941
    4. '               ' → logprob: -7.312409400939941
    5. ')
' → logprob: -7.812409400939941
    6. ',
' → logprob: -7.937409400939941
    7. '       ' → logprob: -8.187409400939941
    8. ',e' → logprob: -8.187409400939941
    9. ' ,' → logprob: -8.437409400939941
    10. '   ' → logprob: -8.937409400939941

Token 2988: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002624086628202349
    2. ' MOD' → logprob: -8.250262260437012
    3. '201' → logprob: -13.750262260437012
    4. '   ' → logprob: -17.500263214111328
    5. '
' → logprob: -18.875263214111328
    6. '_MOD' → logprob: -19.125263214111328
    7. ' ' → logprob: -20.000263214111328
    8. '.MOD' → logprob: -20.125263214111328
    9. 'MODULE' → logprob: -21.000263214111328
    10. 'MO' → logprob: -21.125263214111328

Token 2989: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032283025211654603
    2. ')
' → logprob: -8.250323295593262
    3. '           ' → logprob: -10.250323295593262
    4. '       ' → logprob: -11.375323295593262
    5. '   ' → logprob: -11.500323295593262
    6. '               ' → logprob: -13.250323295593262
    7. '**' → logprob: -14.750323295593262
    8. ' )' → logprob: -14.750323295593262
    9. ')**' → logprob: -15.500323295593262
    10. ')+' → logprob: -15.625323295593262

Token 2990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004010015167295933
    2. '   ' → logprob: -6.629010200500488
    3. '```' → logprob: -7.129010200500488
    4. '	' → logprob: -7.879010200500488
    5. '
' → logprob: -8.254010200500488
    6. 'elif' → logprob: -8.504010200500488
    7. ')' → logprob: -8.879010200500488
    8. '           ' → logprob: -8.879010200500488
    9. '_' → logprob: -9.129010200500488
    10. '`' → logprob: -9.254010200500488

Token 2991: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0040173763409256935
    2. 'if' (adapté à ' if') → logprob: -5.629017353057861
    3. '   ' → logprob: -8.62901782989502
    4. 'elif' → logprob: -9.50401782989502
    5. ' if' → logprob: -9.87901782989502
    6. '
' → logprob: -10.00401782989502
    7. '           ' → logprob: -10.62901782989502
    8. 'return' → logprob: -11.12901782989502
    9. '```' → logprob: -11.12901782989502
    10. '`' → logprob: -13.37901782989502

Token 2992: ' kind' (ID: 3675)
  Prédit: 'kind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kind' → logprob: -0.04768385365605354
    2. ' kind' → logprob: -3.7976839542388916
    3. 'ast' → logprob: -4.1726837158203125
    4. ' ast' → logprob: -4.9226837158203125
    5. 'len' → logprob: -7.0476837158203125
    6. ' len' → logprob: -8.797683715820312
    7. ' ' → logprob: -9.047683715820312
    8. '   ' → logprob: -9.422683715820312
    9. '  ' → logprob: -9.672683715820312
    10. '(kind' → logprob: -9.922683715820312

Token 2993: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6886011362075806
    2. ' ==' → logprob: -0.8136011362075806
    3. '[' → logprob: -2.938601016998291
    4. '       ' → logprob: -7.688601016998291
    5. ',' → logprob: -7.813601016998291
    6. '=' → logprob: -8.81360149383545
    7. '        ' → logprob: -9.68860149383545
    8. ' =' → logprob: -9.81360149383545
    9. '    ' → logprob: -9.93860149383545
    10. '   ' → logprob: -9.93860149383545

Token 2994: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6987858414649963
    2. ''ex' → logprob: -0.6987858414649963
    3. ' '' → logprob: -5.573785781860352
    4. ''t' → logprob: -7.323785781860352
    5. ''s' → logprob: -7.573785781860352
    6. '('' → logprob: -8.073785781860352
    7. ' ' → logprob: -9.448785781860352
    8. ''d' → logprob: -10.073785781860352
    9. '   ' → logprob: -10.198785781860352
    10. ''exp' → logprob: -10.323785781860352

Token 2995: 'expr' (ID: 21343)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08380436152219772
    2. ''ex' → logprob: -2.5838043689727783
    3. ''t' → logprob: -5.833804130554199
    4. 'expr' → logprob: -6.458804130554199
    5. '"' → logprob: -8.2088041305542
    6. 'term' → logprob: -10.4588041305542
    7. ''re' → logprob: -10.4588041305542
    8. ''s' → logprob: -10.8338041305542
    9. ''e' → logprob: -11.2088041305542
    10. '`' → logprob: -12.2088041305542

Token 2996: '':
' (ID: 7669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010114200413227081
    2. '',' → logprob: -5.2601141929626465
    3. '[' → logprob: -6.2601141929626465
    4. '           ' → logprob: -6.3851141929626465
    5. '       ' → logprob: -7.1351141929626465
    6. '   ' → logprob: -9.010114669799805
    7. ' ,' → logprob: -9.635114669799805
    8. ',
' → logprob: -9.635114669799805
    9. ','' → logprob: -10.135114669799805
    10. '','' → logprob: -10.260114669799805

Token 2997: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28842437267303467
    2. '       ' → logprob: -3.163424491882324
    3. '   ' → logprob: -3.288424491882324
    4. '[' → logprob: -3.413424491882324
    5. '(' → logprob: -3.538424491882324
    6. ',' → logprob: -3.788424491882324
    7. '(None' → logprob: -3.913424491882324
    8. ' (' → logprob: -4.163424491882324
    9. '(ast' → logprob: -4.913424491882324
    10. '('' → logprob: -4.913424491882324

Token 2998: ' nodes' (ID: 15749)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3754608929157257
    2. '   ' → logprob: -2.5004608631134033
    3. '_,' → logprob: -2.6254608631134033
    4. '       ' → logprob: -3.0004608631134033
    5. 'val' → logprob: -3.5004608631134033
    6. ' ast' → logprob: -4.625461101531982
    7. 'ast' → logprob: -4.625461101531982
    8. '('' → logprob: -5.000461101531982
    9. ''' → logprob: -5.125461101531982
    10. '(_,' → logprob: -5.125461101531982

Token 2999: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08782447129487991
    2. '=' → logprob: -3.337824583053589
    3. '[' → logprob: -3.337824583053589
    4. '[i' → logprob: -4.71282434463501
    5. '=[' → logprob: -6.83782434463501
    6. '   ' → logprob: -6.83782434463501
    7. '       ' → logprob: -7.83782434463501
    8. ',' → logprob: -8.212824821472168
    9. '           ' → logprob: -8.337824821472168
    10. ',i' → logprob: -8.712824821472168

Token 3000: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.003988165874034166
    2. '(ast' → logprob: -6.003988265991211
    3. ' ast' → logprob: -6.503988265991211
    4. '(' → logprob: -11.628988265991211
    5. '_ast' → logprob: -13.503988265991211
    6. '   ' → logprob: -13.878988265991211
    7. 'astr' → logprob: -14.128988265991211
    8. '.ast' → logprob: -14.503988265991211
    9. 'asts' → logprob: -14.878988265991211
    10. 'astar' → logprob: -15.128988265991211

Token 3001: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019719837233424187
    2. ',' → logprob: -5.51971960067749
    3. '   ' → logprob: -5.51971960067749
    4. '           ' → logprob: -5.89471960067749
    5. '[i' → logprob: -6.01971960067749
    6. '       ' → logprob: -6.14471960067749
    7. '```' → logprob: -7.26971960067749
    8. '               ' → logprob: -7.51971960067749
    9. '[
' → logprob: -7.64471960067749
    10. '
' → logprob: -7.89471960067749

Token 3002: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -12.00001335144043
    3. '2' → logprob: -12.12501335144043
    4. '   ' → logprob: -14.37501335144043
    5. '(' → logprob: -14.75001335144043
    6. ' ' → logprob: -14.87501335144043
    7. '][' → logprob: -16.50001335144043
    8. '```' → logprob: -16.75001335144043
    9. '0' → logprob: -17.37501335144043
    10. '3' → logprob: -17.50001335144043

Token 3003: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02508706972002983
    2. '][' → logprob: -4.775086879730225
    3. '[i' → logprob: -5.275086879730225
    4. '   ' → logprob: -5.275086879730225
    5. '       ' → logprob: -6.150086879730225
    6. ')[' → logprob: -6.400086879730225
    7. '           ' → logprob: -7.150086879730225
    8. '[
' → logprob: -8.025087356567383
    9. '```' → logprob: -8.025087356567383
    10. '
' → logprob: -8.900087356567383

Token 3004: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058252621442079544
    2. '       ' → logprob: -3.8082525730133057
    3. '```' → logprob: -4.808252811431885
    4. '
' → logprob: -5.308252811431885
    5. 'val' → logprob: -5.433252811431885
    6. '               ' → logprob: -5.558252811431885
    7. '{
' → logprob: -6.058252811431885
    8. '(' → logprob: -6.433252811431885
    9. '[' → logprob: -6.683252811431885
    10. ' =' → logprob: -6.808252811431885

Token 3005: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.004207802005112171
    2. '           ' → logprob: -5.629207611083984
    3. ' val' → logprob: -8.004207611083984
    4. '       ' → logprob: -8.379207611083984
    5. 'i' → logprob: -11.379207611083984
    6. 'if' → logprob: -11.379207611083984
    7. '   ' → logprob: -11.879207611083984
    8. '```' → logprob: -12.379207611083984
    9. '               ' → logprob: -13.004207611083984
    10. 'v' → logprob: -13.129207611083984

Token 3006: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3487020432949066
    2. ' =' → logprob: -1.223702073097229
    3. ' i' → logprob: -9.973702430725098
    4. '```' → logprob: -9.973702430725098
    5. '   ' → logprob: -10.223702430725098
    6. 'i' → logprob: -10.723702430725098
    7. '[' → logprob: -10.723702430725098
    8. '=i' → logprob: -10.973702430725098
    9. ' ' → logprob: -11.723702430725098
    10. ',' → logprob: -11.723702430725098

Token 3007: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.023506229743361473
    2. '(eval' → logprob: -4.148506164550781
    3. '0' → logprob: -5.523506164550781
    4. ' eval' → logprob: -6.398506164550781
    5. 'val' → logprob: -6.398506164550781
    6. '(' → logprob: -9.648506164550781
    7. 'nodes' → logprob: -11.148506164550781
    8. ' (' → logprob: -11.648506164550781
    9. ' val' → logprob: -11.898506164550781
    10. ' ' → logprob: -12.148506164550781

Token 3008: '_expr' (ID: 53654)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.34757542610168457
    2. '(nodes' → logprob: -1.8475754261016846
    3. ' nodes' → logprob: -2.9725754261016846
    4. '_expr' → logprob: -3.4725754261016846
    5. '_nodes' → logprob: -3.9725754261016846
    6. '(' → logprob: -4.4725751876831055
    7. 'val' → logprob: -4.8475751876831055
    8. '0' → logprob: -5.5975751876831055
    9. ' (' → logprob: -6.0975751876831055
    10. 'expr' → logprob: -6.3475751876831055

Token 3009: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0001182052365038544
    2. 'nodes' → logprob: -9.250118255615234
    3. '(' → logprob: -11.500118255615234
    4. '(n' → logprob: -12.000118255615234
    5. ' (' → logprob: -12.500118255615234
    6. '((' → logprob: -13.625118255615234
    7. '(
' → logprob: -15.125118255615234
    8. ' nodes' → logprob: -15.375118255615234
    9. '(tokens' → logprob: -15.625118255615234
    10. '(node' → logprob: -16.375118255615234

Token 3010: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '           ' → logprob: -14.875000953674316
    3. '0' → logprob: -15.250000953674316
    4. '(' → logprob: -15.500000953674316
    5. '```' → logprob: -15.500000953674316
    6. ' [' → logprob: -15.875000953674316
    7. '   ' → logprob: -16.750001907348633
    8. '       ' → logprob: -17.625001907348633
    9. ')[' → logprob: -17.625001907348633
    10. '[i' → logprob: -17.750001907348633

Token 3011: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.249780638725497e-05
    2. '[' → logprob: -11.000032424926758
    3. '(' → logprob: -11.250032424926758
    4. ' ' → logprob: -13.125032424926758
    5. '   ' → logprob: -15.000032424926758
    6. '1' → logprob: -16.250032424926758
    7. '
' → logprob: -16.875032424926758
    8. '  ' → logprob: -17.375032424926758
    9. '][' → logprob: -17.500032424926758
    10. '2' → logprob: -17.625032424926758

Token 3012: '][' (ID: 2696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07258300483226776
    2. ')
' → logprob: -2.947582960128784
    3. '[' → logprob: -4.072583198547363
    4. '       ' → logprob: -8.572583198547363
    5. '   ' → logprob: -8.822583198547363
    6. ')[' → logprob: -9.822583198547363
    7. ')#' → logprob: -10.572583198547363
    8. '           ' → logprob: -10.697583198547363
    9. ' )' → logprob: -11.822583198547363
    10. ')`' → logprob: -11.947583198547363

Token 3013: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '
' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '][' → logprob: -15.375003814697266
    5. ' ' → logprob: -15.750003814697266
    6. '[' → logprob: -16.375003814697266
    7. '```' → logprob: -16.625003814697266
    8. ']' → logprob: -16.625003814697266
    9. '' → logprob: -17.125003814697266
    10. '<|end|>' → logprob: -17.625003814697266

Token 3014: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026495708152651787
    2. ')
' → logprob: -3.6514956951141357
    3. '           ' → logprob: -8.776495933532715
    4. '       ' → logprob: -11.401495933532715
    5. ')\
' → logprob: -11.901495933532715
    6. ')return' → logprob: -12.151495933532715
    7. ')#' → logprob: -12.776495933532715
    8. ')`' → logprob: -13.026495933532715
    9. '):
' → logprob: -13.151495933532715
    10. '   ' → logprob: -13.276495933532715

Token 3015: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8098949193954468
    2. '```' → logprob: -1.0598949193954468
    3. '       ' → logprob: -2.6848950386047363
    4. ' +' → logprob: -3.0598950386047363
    5. '   ' → logprob: -4.059895038604736
    6. '               ' → logprob: -4.309895038604736
    7. ' i' → logprob: -4.684895038604736
    8. '
' → logprob: -4.684895038604736
    9. ' ' → logprob: -4.809895038604736
    10. '+' → logprob: -4.809895038604736

Token 3016: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16106641292572021
    2. 'i' (adapté à ' i') → logprob: -2.2860665321350098
    3. '       ' → logprob: -3.9110665321350098
    4. '               ' → logprob: -4.41106653213501
    5. ' i' → logprob: -4.53606653213501
    6. '
' → logprob: -6.66106653213501
    7. '   ' → logprob: -6.78606653213501
    8. '	i' → logprob: -7.28606653213501
    9. '		' → logprob: -7.91106653213501
    10. '                   ' → logprob: -8.161066055297852

Token 3017: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5800485014915466
    2. '+=' → logprob: -0.8300485014915466
    3. '+' → logprob: -5.830048561096191
    4. '=' → logprob: -6.955048561096191
    5. '```' → logprob: -9.080048561096191
    6. ' =' → logprob: -9.705048561096191
    7. ' +' → logprob: -10.955048561096191
    8. '   ' → logprob: -11.830048561096191
    9. '       ' → logprob: -13.205048561096191
    10. '++' → logprob: -13.455048561096191

Token 3018: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030296392738819122
    2. '2' → logprob: -3.5302963256835938
    3. ' ' → logprob: -7.530296325683594
    4. '           ' → logprob: -12.155296325683594
    5. '   ' → logprob: -13.280296325683594
    6. '```' → logprob: -14.280296325683594
    7. '+' → logprob: -14.780296325683594
    8. '            ' → logprob: -15.155296325683594
    9. '    ' → logprob: -16.030296325683594
    10. '       ' → logprob: -16.155296325683594

Token 3019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20146313309669495
    2. '2' → logprob: -1.7014631032943726
    3. ' ' → logprob: -10.326462745666504
    4. '3' → logprob: -11.201462745666504
    5. '```' → logprob: -13.951462745666504
    6. 'i' → logprob: -14.201462745666504
    7. '   ' → logprob: -14.201462745666504
    8. '0' → logprob: -14.201462745666504
    9. '+' → logprob: -15.451462745666504
    10. '           ' → logprob: -15.826462745666504

Token 3020: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6553389430046082
    2. ' +' → logprob: -2.030339002609253
    3. '           ' → logprob: -2.280339002609253
    4. '               ' → logprob: -2.405339002609253
    5. '```' → logprob: -2.530339002609253
    6. ' ' → logprob: -3.780339002609253
    7. '       ' → logprob: -4.280338764190674
    8. '
' → logprob: -4.655338764190674
    9. '+
' → logprob: -5.030338764190674
    10. '   ' → logprob: -5.155338764190674

Token 3021: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8503225445747375
    2. '           ' → logprob: -1.2253224849700928
    3. '+' → logprob: -2.1003224849700928
    4. '               ' → logprob: -2.4753224849700928
    5. '       ' → logprob: -3.6003224849700928
    6. '
' → logprob: -4.350322723388672
    7. 'def' → logprob: -4.475322723388672
    8. ' +' → logprob: -5.725322723388672
    9. '``' → logprob: -6.100322723388672
    10. ':
' → logprob: -6.100322723388672

Token 3022: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.14780083298683167
    2. '           ' → logprob: -3.147800922393799
    3. '
' → logprob: -3.772800922393799
    4. '       ' → logprob: -4.022800922393799
    5. 'if' → logprob: -4.022800922393799
    6. ' while' → logprob: -4.397800922393799
    7. '```' → logprob: -4.772800922393799
    8. ' ' → logprob: -5.522800922393799
    9. '   ' → logprob: -5.522800922393799
    10. '               ' → logprob: -5.897800922393799

Token 3023: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16023264825344086
    2. ' i' → logprob: -1.910232663154602
    3. ' ' → logprob: -12.285232543945312
    4. '   ' → logprob: -13.160232543945312
    5. '  ' → logprob: -13.910232543945312
    6. '<' → logprob: -15.410232543945312
    7. '	i' → logprob: -15.535232543945312
    8. '(i' → logprob: -15.785232543945312
    9. '    ' → logprob: -16.160232543945312
    10. 'True' → logprob: -16.410232543945312

Token 3024: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.43403199315071106
    2. ' <' → logprob: -1.0590319633483887
    3. '<len' → logprob: -5.684031963348389
    4. '+' → logprob: -6.559031963348389
    5. '```' → logprob: -8.934032440185547
    6. '<n' → logprob: -9.184032440185547
    7. ' +=' → logprob: -10.059032440185547
    8. ' +' → logprob: -10.309032440185547
    9. '+=' → logprob: -10.434032440185547
    10. '<size' → logprob: -11.184032440185547

Token 3025: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002625278721097857
    2. ' len' → logprob: -8.250262260437012
    3. '(len' → logprob: -13.750262260437012
    4. 'val' → logprob: -17.375263214111328
    5. '<len' → logprob: -17.500263214111328
    6. '
' → logprob: -17.625263214111328
    7. '[len' → logprob: -18.000263214111328
    8. '	len' → logprob: -18.250263214111328
    9. ',len' → logprob: -18.375263214111328
    10. '=len' → logprob: -18.750263214111328

Token 3026: '(nodes' (ID: 86139)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.006777422968298197
    2. '(nodes' → logprob: -5.006777286529541
    3. ' nodes' → logprob: -9.7567777633667
    4. 'len' → logprob: -12.7567777633667
    5. '	nodes' → logprob: -14.2567777633667
    6. 'ast' → logprob: -15.3817777633667
    7. '.nodes' → logprob: -16.006776809692383
    8. '```' → logprob: -16.881776809692383
    9. '(ast' → logprob: -17.006776809692383
    10. '_nodes' → logprob: -17.131776809692383

Token 3027: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26072168350219727
    2. ' +' → logprob: -2.5107216835021973
    3. '[' → logprob: -3.3857216835021973
    4. ':
' → logprob: -3.6357216835021973
    5. '   ' → logprob: -4.260721683502197
    6. '):
' → logprob: -4.260721683502197
    7. '<|end|>' → logprob: -4.885721683502197
    8. ',' → logprob: -5.010721683502197
    9. ':' → logprob: -5.010721683502197
    10. ')' → logprob: -5.010721683502197

Token 3028: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0368913896381855
    2. '           ' → logprob: -3.911891460418701
    3. ':
' → logprob: -4.286891460418701
    4. '```' → logprob: -7.411891460418701
    5. '{
' → logprob: -7.911891460418701
    6. ':' → logprob: -8.286890983581543
    7. ' op' → logprob: -8.536890983581543
    8. ' if' → logprob: -8.786890983581543
    9. 'operator' → logprob: -9.536890983581543
    10. '       ' → logprob: -9.536890983581543

Token 3029: ' op' (ID: 991)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7627258896827698
    2. ' op' → logprob: -0.8877258896827698
    3. 'op' (adapté à ' op') → logprob: -2.262725830078125
    4. '           ' → logprob: -4.512725830078125
    5. '                   ' → logprob: -5.637725830078125
    6. '
' → logprob: -6.637725830078125
    7. 'operator' → logprob: -7.262725830078125
    8. '(op' → logprob: -8.012725830078125
    9. ' operator' → logprob: -8.262725830078125
    10. 'if' → logprob: -8.387725830078125

Token 3030: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9464444518089294
    2. '```' → logprob: -1.3214445114135742
    3. '=' → logprob: -2.071444511413574
    4. ' ==' → logprob: -2.321444511413574
    5. '==' → logprob: -2.696444511413574
    6. ',' → logprob: -4.946444511413574
    7. ')' → logprob: -5.196444511413574
    8. ' ' → logprob: -5.446444511413574
    9. ' +=' → logprob: -5.571444511413574
    10. '   ' → logprob: -5.571444511413574

Token 3031: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.47454407811164856
    2. 'nodes' → logprob: -0.9745440483093262
    3. '(nodes' → logprob: -8.224544525146484
    4. ''' → logprob: -9.474544525146484
    5. '	nodes' → logprob: -10.224544525146484
    6. ' '' → logprob: -10.599544525146484
    7. ' ' → logprob: -11.474544525146484
    8. ' ' → logprob: -11.599544525146484
    9. 'val' → logprob: -12.099544525146484
    10. 'tokens' → logprob: -12.099544525146484

Token 3032: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007178967818617821
    2. 'i' → logprob: -5.132178783416748
    3. '```' → logprob: -7.757178783416748
    4. '   ' → logprob: -8.007179260253906
    5. '[
' → logprob: -9.382179260253906
    6. '`' → logprob: -9.382179260253906
    7. '[' → logprob: -9.382179260253906
    8. '``' → logprob: -9.882179260253906
    9. ' i' → logprob: -9.882179260253906
    10. ' ' → logprob: -10.507179260253906

Token 3033: ']
' (ID: 1592)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6034125089645386
    2. '               ' → logprob: -0.9784125089645386
    3. '<|end|>' → logprob: -3.728412628173828
    4. '[' → logprob: -4.603412628173828
    5. '           ' → logprob: -4.728412628173828
    6. '<|end|>' → logprob: -4.853412628173828
    7. '``' → logprob: -5.728412628173828
    8. ')' → logprob: -5.728412628173828
    9. '                   ' → logprob: -5.853412628173828
    10. '+' → logprob: -6.603412628173828

Token 3034: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4634634256362915
    2. '                   ' → logprob: -2.088463306427002
    3. '```' → logprob: -2.213463306427002
    4. '{
' → logprob: -3.338463306427002
    5. ' if' → logprob: -3.463463306427002
    6. 'if' → logprob: -3.838463306427002
    7. '                ' → logprob: -4.963463306427002
    8. 'val' → logprob: -5.088463306427002
    9. ' ' → logprob: -5.588463306427002
    10. '`' → logprob: -5.588463306427002

Token 3035: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1019102334976196
    2. 'if' → logprob: -1.6019102334976196
    3. 'val' → logprob: -1.6019102334976196
    4. ' i' → logprob: -2.47691011428833
    5. ' val' → logprob: -2.97691011428833
    6. ' if' → logprob: -2.97691011428833
    7. '               ' → logprob: -3.22691011428833
    8. '1' → logprob: -5.10191011428833
    9. '           ' → logprob: -5.10191011428833
    10. '
' → logprob: -5.22691011428833

Token 3036: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10771052539348602
    2. ' =' → logprob: -2.357710599899292
    3. '+=' → logprob: -5.982710361480713
    4. 'al' → logprob: -6.732710361480713
    5. '+' → logprob: -6.982710361480713
    6. '   ' → logprob: -7.107710361480713
    7. ' +=' → logprob: -7.857710361480713
    8. '```' → logprob: -8.107710838317871
    9. '2' → logprob: -8.232710838317871
    10. 'i' → logprob: -8.482710838317871

Token 3037: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133859634399414
    2. '=' → logprob: -1.3133859634399414
    3. '```' → logprob: -9.563385963439941
    4. '   ' → logprob: -11.313385963439941
    5. '           ' → logprob: -11.438385963439941
    6. '               ' → logprob: -12.188385963439941
    7. '=
' → logprob: -12.563385963439941
    8. ' ' → logprob: -12.563385963439941
    9. ')' → logprob: -12.813385963439941
    10. '       ' → logprob: -12.813385963439941

Token 3038: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.030290953814983368
    2. ' eval' → logprob: -3.6552908420562744
    3. '(eval' → logprob: -5.5302910804748535
    4. 'val' → logprob: -11.280290603637695
    5. ' (' → logprob: -13.155290603637695
    6. '.eval' → logprob: -13.405290603637695
    7. '_eval' → logprob: -13.905290603637695
    8. '(' → logprob: -15.405290603637695
    9. ' val' → logprob: -15.780290603637695
    10. 'evaluate' → logprob: -16.280290603637695

Token 3039: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -1.1756367712223437e-05
    2. 'expr' → logprob: -11.625011444091797
    3. 'Expr' → logprob: -13.625011444091797
    4. '(expr' → logprob: -13.875011444091797
    5. '_eval' → logprob: -15.250011444091797
    6. '_EXPR' → logprob: -15.875011444091797
    7. ' expr' → logprob: -16.375011444091797
    8. ' Expr' → logprob: -16.875011444091797
    9. '_ast' → logprob: -17.625011444091797
    10. 'eval' → logprob: -18.000011444091797

Token 3040: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0002787359117064625
    2. '(' → logprob: -8.62527847290039
    3. ' (' → logprob: -10.00027847290039
    4. '(tokens' → logprob: -10.75027847290039
    5. '(
' → logprob: -11.25027847290039
    6. '(ast' → logprob: -11.87527847290039
    7. '(n' → logprob: -12.25027847290039
    8. 'nodes' → logprob: -12.50027847290039
    9. '((' → logprob: -13.37527847290039
    10. '
' → logprob: -14.62527847290039

Token 3041: '[i' (ID: 1768)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.2568674087524414
    2. '[i' → logprob: -2.0068674087524414
    3. '[n' → logprob: -2.7568674087524414
    4. '[' → logprob: -3.7568674087524414
    5. 'nodes' → logprob: -5.381867408752441
    6. '(i' → logprob: -8.506867408752441
    7. '
' → logprob: -8.881867408752441
    8. ')[' → logprob: -9.756867408752441
    9. '	nodes' → logprob: -9.881867408752441
    10. '(n' → logprob: -9.881867408752441

Token 3042: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.173704271830502e-06
    2. ' +' → logprob: -13.12500286102295
    3. '[' → logprob: -14.12500286102295
    4. '```' → logprob: -15.87500286102295
    5. '+[' → logprob: -16.000003814697266
    6. '+
' → logprob: -17.125003814697266
    7. '++' → logprob: -17.500003814697266
    8. '＋' → logprob: -18.000003814697266
    9. '+i' → logprob: -18.500003814697266
    10. '+++' → logprob: -18.750003814697266

Token 3043: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011271213879808784
    2. '2' → logprob: -7.376127243041992
    3. '+' → logprob: -7.626127243041992
    4. '3' → logprob: -12.501127243041992
    5. '```' → logprob: -12.501127243041992
    6. ' ' → logprob: -13.376127243041992
    7. '   ' → logprob: -13.751127243041992
    8. '{
' → logprob: -14.251127243041992
    9. '
' → logprob: -14.751127243041992
    10. '{' → logprob: -14.751127243041992

Token 3044: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1702205091714859
    2. '][' → logprob: -1.9202204942703247
    3. ''[' → logprob: -4.920220375061035
    4. ')[' → logprob: -6.420220375061035
    5. ''][' → logprob: -7.670220375061035
    6. '>[' → logprob: -9.295220375061035
    7. '           ' → logprob: -9.420220375061035
    8. '```' → logprob: -9.795220375061035
    9. ']' → logprob: -9.920220375061035
    10. '               ' → logprob: -10.045220375061035

Token 3045: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16026850044727325
    2. '[' → logprob: -1.9102685451507568
    3. ''[' → logprob: -10.535268783569336
    4. '][' → logprob: -12.035268783569336
    5. ''' → logprob: -12.285268783569336
    6. ''s' → logprob: -13.660268783569336
    7. '```' → logprob: -13.660268783569336
    8. ')[' → logprob: -14.035268783569336
    9. '
' → logprob: -14.160268783569336
    10. ' [' → logprob: -14.535268783569336

Token 3046: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035871878266334534
    2. ')
' → logprob: -3.535871982574463
    3. '               ' → logprob: -5.285871982574463
    4. '):
' → logprob: -7.035871982574463
    5. '           ' → logprob: -9.660871505737305
    6. '```' → logprob: -10.660871505737305
    7. '                   ' → logprob: -11.035871505737305
    8. ')`' → logprob: -11.285871505737305
    9. ')`
' → logprob: -11.535871505737305
    10. ')return' → logprob: -12.160871505737305

Token 3047: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011790784075856209
    2. '```' → logprob: -4.511790752410889
    3. '``' → logprob: -8.511791229248047
    4. '                   ' → logprob: -8.636791229248047
    5. '           ' → logprob: -8.761791229248047
    6. ' if' → logprob: -9.636791229248047
    7. 'if' → logprob: -9.886791229248047
    8. '(' → logprob: -11.136791229248047
    9. '{
' → logprob: -11.136791229248047
    10. '       ' → logprob: -11.761791229248047

Token 3048: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029311269521713257
    2. ' if' → logprob: -4.279311180114746
    3. 'if' (adapté à ' if') → logprob: -4.654311180114746
    4. '```' → logprob: -5.529311180114746
    5. '                   ' → logprob: -6.654311180114746
    6. '{
' → logprob: -9.529311180114746
    7. '``' → logprob: -9.529311180114746
    8. '                ' → logprob: -10.779311180114746
    9. '           ' → logprob: -10.779311180114746
    10. '
' → logprob: -11.029311180114746

Token 3049: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.20142339169979095
    2. ' op' → logprob: -1.7014234066009521
    3. '(op' → logprob: -11.576423645019531
    4. '	op' → logprob: -15.326423645019531
    5. '   ' → logprob: -16.32642364501953
    6. '           ' → logprob: -16.32642364501953
    7. '               ' → logprob: -16.45142364501953
    8. 'opcode' → logprob: -16.70142364501953
    9. ' ' → logprob: -17.20142364501953
    10. '       ' → logprob: -17.57642364501953

Token 3050: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1129523292183876
    2. '==' → logprob: -2.23795223236084
    3. '```' → logprob: -10.23795223236084
    4. '[' → logprob: -10.48795223236084
    5. '=' → logprob: -10.86295223236084
    6. '=='' → logprob: -11.36295223236084
    7. ')' → logprob: -11.98795223236084
    8. '               ' → logprob: -12.23795223236084
    9. ' =='' → logprob: -12.61295223236084
    10. ' ' → logprob: -13.11295223236084

Token 3051: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4297146797180176
    2. ''+' → logprob: -1.0547146797180176
    3. ' '+' → logprob: -7.304714679718018
    4. ' '+'' → logprob: -8.92971420288086
    5. ' '' → logprob: -9.30471420288086
    6. '+' → logprob: -9.92971420288086
    7. '('+' → logprob: -11.17971420288086
    8. ''-' → logprob: -11.17971420288086
    9. ' ' → logprob: -11.67971420288086
    10. ''*' → logprob: -11.80471420288086

Token 3052: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.7997047305107117
    2. '               ' → logprob: -1.0497047901153564
    3. '                   ' → logprob: -2.2997047901153564
    4. '1' → logprob: -2.9247047901153564
    5. ' '' → logprob: -4.174704551696777
    6. ''' → logprob: -4.299704551696777
    7. '':' → logprob: -5.799704551696777
    8. ':
' → logprob: -5.924704551696777
    9. '           ' → logprob: -6.049704551696777
    10. ' ' → logprob: -6.049704551696777

Token 3053: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030922740697860718
    2. '{
' → logprob: -6.503092288970947
    3. '                       ' → logprob: -7.128092288970947
    4. '               ' → logprob: -8.128091812133789
    5. ':
' → logprob: -8.128091812133789
    6. '```' → logprob: -10.128091812133789
    7. '                    ' → logprob: -10.128091812133789
    8. '                  ' → logprob: -10.628091812133789
    9. ':' → logprob: -11.253091812133789
    10. ' (' → logprob: -11.628091812133789

Token 3054: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.17210566997528076
    2. ' val' → logprob: -2.2971057891845703
    3. '                   ' → logprob: -3.1721057891845703
    4. '                       ' → logprob: -4.17210578918457
    5. 'return' → logprob: -9.67210578918457
    6. '(val' → logprob: -10.17210578918457
    7. 'v' → logprob: -10.67210578918457
    8. '(' → logprob: -11.17210578918457
    9. '```' → logprob: -11.17210578918457
    10. '                    ' → logprob: -11.29710578918457

Token 3055: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741264283657074
    2. '=' → logprob: -0.9741264581680298
    3. '```' → logprob: -10.599126815795898
    4. ' +=' → logprob: -11.474126815795898
    5. '+=' → logprob: -12.724126815795898
    6. ' ' → logprob: -12.724126815795898
    7. '                   ' → logprob: -13.099126815795898
    8. '                    ' → logprob: -13.474126815795898
    9. ')' → logprob: -14.474126815795898
    10. '                       ' → logprob: -14.724126815795898

Token 3056: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31763559579849243
    2. '(val' → logprob: -1.3176355361938477
    3. '(' → logprob: -5.442635536193848
    4. ' val' → logprob: -10.817635536193848
    5. '[val' → logprob: -11.817635536193848
    6. '(vals' → logprob: -12.942635536193848
    7. '```' → logprob: -13.567635536193848
    8. '(v' → logprob: -13.817635536193848
    9. 'val' → logprob: -14.317635536193848
    10. '`' → logprob: -14.567635536193848

Token 3057: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0003850325592793524
    2. '(val' → logprob: -8.250385284423828
    3. ' val' → logprob: -9.000385284423828
    4. '[val' → logprob: -15.125385284423828
    5. '	val' → logprob: -16.375385284423828
    6. '_val' → logprob: -17.125385284423828
    7. ',val' → logprob: -18.125385284423828
    8. '.val' → logprob: -18.375385284423828
    9. ' (' → logprob: -18.375385284423828
    10. 'v' → logprob: -19.375385284423828

Token 3058: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39782094955444336
    2. '+' → logprob: -1.1478209495544434
    3. ' val' → logprob: -4.647820949554443
    4. 'val' → logprob: -6.647820949554443
    5. '_val' → logprob: -12.147821426391602
    6. ' ' → logprob: -13.272821426391602
    7. '(val' → logprob: -13.647821426391602
    8. '[val' → logprob: -13.897821426391602
    9. '
' → logprob: -14.272821426391602
    10. ' ' → logprob: -15.522821426391602

Token 3059: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10020774602890015
    2. ' v' → logprob: -2.350207805633545
    3. ')v' → logprob: -14.725207328796387
    4. '(v' → logprob: -15.225207328796387
    5. '	v' → logprob: -15.350207328796387
    6. '_v' → logprob: -16.475208282470703
    7. ')' → logprob: -17.225208282470703
    8. '2' → logprob: -17.975208282470703
    9. '1' → logprob: -18.100208282470703
    10. '.v' → logprob: -18.475208282470703

Token 3060: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. 'v' → logprob: -12.750003814697266
    3. 'nodes' → logprob: -15.125003814697266
    4. '_nodes' → logprob: -15.375003814697266
    5. '_expr' → logprob: -16.125003814697266
    6. '```' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.500003814697266
    8. 'expr' → logprob: -16.625003814697266
    9. ' ' → logprob: -16.750003814697266
    10. '
' → logprob: -17.125003814697266

Token 3061: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012541614705696702
    2. ' )' → logprob: -7.251254081726074
    3. '                   ' → logprob: -8.376254081726074
    4. ')%' → logprob: -8.376254081726074
    5. '```' → logprob: -10.626254081726074
    6. '')' → logprob: -10.751254081726074
    7. '               ' → logprob: -11.001254081726074
    8. '       ' → logprob: -12.126254081726074
    9. '           ' → logprob: -12.876254081726074
    10. '``' → logprob: -12.876254081726074

Token 3062: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11392143368721008
    2. '%' → logprob: -2.6139214038848877
    3. ')' → logprob: -3.4889214038848877
    4. '                   ' → logprob: -6.613921642303467
    5. '```' → logprob: -6.988921642303467
    6. ')%' → logprob: -7.113921642303467
    7. '               ' → logprob: -7.863921642303467
    8. ' )' → logprob: -8.863921165466309
    9. '           ' → logprob: -10.113921165466309
    10. ' ' → logprob: -10.113921165466309

Token 3063: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.44654712080955505
    2. ' MOD' → logprob: -1.0715471506118774
    3. '201' → logprob: -4.071547031402588
    4. ' ' → logprob: -7.821547031402588
    5. '```' → logprob: -9.071547508239746
    6. '`' → logprob: -10.321547508239746
    7. ' ' → logprob: -10.571547508239746
    8. '``' → logprob: -10.946547508239746
    9. '_MOD' → logprob: -11.071547508239746
    10. '   ' → logprob: -12.071547508239746

Token 3064: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009375179186463356
    2. '
' → logprob: -5.259375095367432
    3. '```' → logprob: -6.259375095367432
    4. '                   ' → logprob: -7.009375095367432
    5. '           ' → logprob: -8.00937557220459
    6. '                
' → logprob: -8.63437557220459
    7. '  
' → logprob: -8.88437557220459
    8. '                    
' → logprob: -8.88437557220459
    9. '``' → logprob: -8.88437557220459
    10. '**' → logprob: -10.00937557220459

Token 3065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018604497890919447
    2. '```' → logprob: -6.626860618591309
    3. '                   ' → logprob: -8.251860618591309
    4. '``' → logprob: -9.626860618591309
    5. '           ' → logprob: -10.001860618591309
    6. '
' → logprob: -10.251860618591309
    7. ' ' → logprob: -10.501860618591309
    8. '                ' → logprob: -10.626860618591309
    9. '              ' → logprob: -11.251860618591309
    10. '       ' → logprob: -11.876860618591309

Token 3066: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004495989065617323
    2. ' ' → logprob: -6.754496097564697
    3. '                   ' → logprob: -7.254496097564697
    4. ' 
' → logprob: -7.254496097564697
    5. '                ' → logprob: -7.754496097564697
    6. '
' → logprob: -8.004495620727539
    7. '```' → logprob: -8.004495620727539
    8. '           ' → logprob: -8.379495620727539
    9. '              ' → logprob: -9.004495620727539
    10. '                
' → logprob: -9.504495620727539

Token 3067: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.20157422125339508
    2. 'op' → logprob: -1.7015742063522339
    3. '(op' → logprob: -8.951574325561523
    4. '               ' → logprob: -11.201574325561523
    5. '                   ' → logprob: -11.701574325561523
    6. ''op' → logprob: -12.951574325561523
    7. '	op' → logprob: -13.451574325561523
    8. 'opcode' → logprob: -13.951574325561523
    9. '_op' → logprob: -14.451574325561523
    10. ' ' → logprob: -14.826574325561523

Token 3068: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6333370804786682
    2. ' ==' → logprob: -0.7583370804786682
    3. '[i' → logprob: -8.008337020874023
    4. 'i' → logprob: -9.133337020874023
    5. '               ' → logprob: -9.133337020874023
    6. '=' → logprob: -9.883337020874023
    7. '                   ' → logprob: -10.508337020874023
    8. '[' → logprob: -10.883337020874023
    9. '=='' → logprob: -11.008337020874023
    10. '```' → logprob: -11.008337020874023

Token 3069: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.02723969705402851
    2. ''' → logprob: -3.6522397994995117
    3. ' '-' → logprob: -7.277239799499512
    4. ''s' → logprob: -9.277239799499512
    5. '-' → logprob: -9.902239799499512
    6. ' '-'' → logprob: -10.277239799499512
    7. ' '' → logprob: -10.777239799499512
    8. ' ' → logprob: -10.777239799499512
    9. '('-' → logprob: -11.277239799499512
    10. '(' → logprob: -12.402239799499512

Token 3070: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.046921152621507645
    2. ':
' → logprob: -3.2969212532043457
    3. ':' → logprob: -5.046921253204346
    4. '               ' → logprob: -6.546921253204346
    5. '=' → logprob: -8.921920776367188
    6. '                  ' → logprob: -9.171920776367188
    7. '                 ' → logprob: -9.296920776367188
    8. '           ' → logprob: -9.296920776367188
    9. '```' → logprob: -9.421920776367188
    10. ',' → logprob: -9.421920776367188

Token 3071: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004737226292490959
    2. ' (' → logprob: -5.754737377166748
    3. '               ' → logprob: -7.379737377166748
    4. '(' → logprob: -8.37973690032959
    5. '```' → logprob: -8.50473690032959
    6. '                       ' → logprob: -8.75473690032959
    7. ':
' → logprob: -9.37973690032959
    8. '           ' → logprob: -9.62973690032959
    9. '{
' → logprob: -9.75473690032959
    10. '                    ' → logprob: -10.37973690032959

Token 3072: ' val' (ID: 1459)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7931768298149109
    2. 'val' (adapté à ' val') → logprob: -0.7931768298149109
    3. ' val' → logprob: -2.4181768894195557
    4. '(val' → logprob: -5.418176651000977
    5. '(' → logprob: -7.168176651000977
    6. '                       ' → logprob: -8.168176651000977
    7. ' (' → logprob: -8.668176651000977
    8. '{
' → logprob: -9.293176651000977
    9. '```' → logprob: -9.293176651000977
    10. '                    ' → logprob: -9.293176651000977

Token 3073: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029163956642151
    2. '=' → logprob: -2.3502917289733887
    3. '                   ' → logprob: -9.47529125213623
    4. '               ' → logprob: -12.72529125213623
    5. '           ' → logprob: -13.72529125213623
    6. '                       ' → logprob: -14.35029125213623
    7. '       ' → logprob: -14.35029125213623
    8. '```' → logprob: -14.35029125213623
    9. '                    ' → logprob: -14.85029125213623
    10. '   ' → logprob: -14.97529125213623

Token 3074: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.01914520189166069
    2. ' (' → logprob: -4.0191450119018555
    3. '(v' → logprob: -7.2691450119018555
    4. '(' → logprob: -8.144145011901855
    5. '(vals' → logprob: -12.394145011901855
    6. '                   ' → logprob: -13.144145011901855
    7. '[val' → logprob: -14.394145011901855
    8. '   ' → logprob: -14.894145011901855
    9. '(valor' → logprob: -15.894145011901855
    10. '               ' → logprob: -16.019145965576172

Token 3075: 'val' (ID: 1105)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.13748741149902344
    2. '(v' → logprob: -2.2624874114990234
    3. ' v' → logprob: -4.012487411499023
    4. ' (' → logprob: -5.137487411499023
    5. 'val' → logprob: -8.262487411499023
    6. '(' → logprob: -9.762487411499023
    7. '   ' → logprob: -11.262487411499023
    8. ' val' → logprob: -11.387487411499023
    9. '(val' → logprob: -11.512487411499023
    10. ')v' → logprob: -11.637487411499023

Token 3076: ' -' (ID: 533)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.21492250263690948
    2. '%' → logprob: -1.714922547340393
    3. '                   ' → logprob: -4.9649224281311035
    4. ' *' → logprob: -6.3399224281311035
    5. ',' → logprob: -6.4649224281311035
    6. ')' → logprob: -7.2149224281311035
    7. ':' → logprob: -8.214922904968262
    8. ' (' → logprob: -8.214922904968262
    9. ' ' → logprob: -8.214922904968262
    10. ' +' → logprob: -8.589922904968262

Token 3077: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5759404897689819
    2. 'v' → logprob: -0.8259404897689819
    3. '	v' → logprob: -15.075940132141113
    4. '(v' → logprob: -15.325940132141113
    5. ')v' → logprob: -15.575940132141113
    6. '2' → logprob: -15.825940132141113
    7. ' ' → logprob: -16.57594108581543
    8. '1' → logprob: -16.70094108581543
    9. ')' → logprob: -16.95094108581543
    10. '_v' → logprob: -17.45094108581543

Token 3078: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.750001907348633
    3. ')' → logprob: -15.000001907348633
    4. 'v' → logprob: -15.500001907348633
    5. ' ' → logprob: -16.375001907348633
    6. '₂' → logprob: -16.500001907348633
    7. '```' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.625001907348633
    9. '_val' → logprob: -16.875001907348633
    10. ' val' → logprob: -17.000001907348633

Token 3079: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002599557163193822
    2. ')%' → logprob: -6.002599716186523
    3. '%' → logprob: -9.252599716186523
    4. ' )' → logprob: -10.877599716186523
    5. '       ' → logprob: -12.752599716186523
    6. ' %' → logprob: -13.877599716186523
    7. '   ' → logprob: -14.002599716186523
    8. '```' → logprob: -14.252599716186523
    9. '           ' → logprob: -14.377599716186523
    10. '%)' → logprob: -14.627599716186523

Token 3080: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759661793708801
    2. ' %' → logprob: -0.8259661793708801
    3. ')%' → logprob: -11.325965881347656
    4. ')' → logprob: -11.700965881347656
    5. '```' → logprob: -13.075965881347656
    6. ' ' → logprob: -13.825965881347656
    7. ' ' → logprob: -14.325965881347656
    8. '()%' → logprob: -14.950965881347656
    9. '%s' → logprob: -15.325965881347656
    10. '%i' → logprob: -15.450965881347656

Token 3081: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.012981735169887543
    2. 'v' → logprob: -4.51298189163208
    3. ' MOD' → logprob: -6.26298189163208
    4. ' v' → logprob: -11.012981414794922
    5. '_MOD' → logprob: -12.012981414794922
    6. '(v' → logprob: -13.012981414794922
    7. 'MODE' → logprob: -14.512981414794922
    8. 'Mod' → logprob: -14.762981414794922
    9. ' ' → logprob: -15.512981414794922
    10. '2' → logprob: -16.137981414794922

Token 3082: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005803157109767199
    2. '           ' → logprob: -8.500580787658691
    3. 'return' → logprob: -8.750580787658691
    4. '                   ' → logprob: -9.750580787658691
    5. '       ' → logprob: -10.125580787658691
    6. ')' → logprob: -10.750580787658691
    7. '
' → logprob: -10.875580787658691
    8. '```' → logprob: -11.250580787658691
    9. ' return' → logprob: -11.375580787658691
    10. '              ' → logprob: -11.500580787658691

Token 3083: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09735318273305893
    2. '```' → logprob: -2.847353219985962
    3. '                   ' → logprob: -3.597353219985962
    4. '``' → logprob: -5.847352981567383
    5. ' ' → logprob: -6.722352981567383
    6. '                       ' → logprob: -7.097352981567383
    7. '           ' → logprob: -7.347352981567383
    8. '              ' → logprob: -7.972352981567383
    9. '             ' → logprob: -8.097352981567383
    10. '       ' → logprob: -8.472352981567383

Token 3084: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01154971681535244
    2. '           ' → logprob: -5.386549949645996
    3. '                   ' → logprob: -5.761549949645996
    4. '       ' → logprob: -6.261549949645996
    5. 'return' → logprob: -7.511549949645996
    6. '```' → logprob: -7.886549949645996
    7. '              ' → logprob: -8.761549949645996
    8. ' ' → logprob: -8.761549949645996
    9. ' return' → logprob: -9.011549949645996
    10. '   ' → logprob: -9.386549949645996

Token 3085: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4751330614089966
    2. '+=' → logprob: -0.9751330614089966
    3. '+' → logprob: -6.975132942199707
    4. ' +' → logprob: -10.350132942199707
    5. '=' → logprob: -10.475132942199707
    6. ' ' → logprob: -11.475132942199707
    7. '       ' → logprob: -11.475132942199707
    8. '   ' → logprob: -11.975132942199707
    9. '```' → logprob: -12.100132942199707
    10. '           ' → logprob: -12.100132942199707

Token 3086: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011708177626132965
    2. ' ' → logprob: -6.751170635223389
    3. '```' → logprob: -14.626171112060547
    4. '   ' → logprob: -16.001171112060547
    5. '
' → logprob: -17.876171112060547
    6. '۲' → logprob: -18.251171112060547
    7. '２' → logprob: -19.251171112060547
    8. '           ' → logprob: -19.251171112060547
    9. '	' → logprob: -19.501171112060547
    10. '`' → logprob: -19.501171112060547

Token 3087: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -15.750024795532227
    4. '   ' → logprob: -17.437524795532227
    5. '
' → logprob: -17.875024795532227
    6. '۲' → logprob: -17.937524795532227
    7. '3' → logprob: -18.250024795532227
    8. '２' → logprob: -18.937524795532227
    9. '  ' → logprob: -19.500024795532227
    10. '22' → logprob: -19.625024795532227

Token 3088: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05742287263274193
    2. '       ' → logprob: -3.0574228763580322
    3. 'return' → logprob: -4.932422637939453
    4. '
' → logprob: -6.682422637939453
    5. '               ' → logprob: -8.432422637939453
    6. ' return' → logprob: -9.307422637939453
    7. '   ' → logprob: -11.432422637939453
    8. '```' → logprob: -11.807422637939453
    9. '                   ' → logprob: -13.807422637939453
    10. ',' → logprob: -13.807422637939453

Token 3089: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08616992831230164
    2. '```' → logprob: -2.836169958114624
    3. '       ' → logprob: -4.461169719696045
    4. '           ' → logprob: -4.836169719696045
    5. '                   ' → logprob: -6.086169719696045
    6. '``' → logprob: -7.086169719696045
    7. '                       ' → logprob: -8.211170196533203
    8. 'return' → logprob: -8.211170196533203
    9. ' ' → logprob: -9.086170196533203
    10. '   ' → logprob: -9.211170196533203

Token 3090: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39695000648498535
    2. 'return' (adapté à ' return') → logprob: -1.1469500064849854
    3. '           ' → logprob: -4.771949768066406
    4. '
' → logprob: -6.896949768066406
    5. ' return' → logprob: -8.271949768066406
    6. '   ' → logprob: -8.396949768066406
    7. '               ' → logprob: -11.021949768066406
    8. '{return' → logprob: -11.396949768066406
    9. '	return' → logprob: -11.646949768066406
    10. '```' → logprob: -11.896949768066406

Token 3091: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03804171830415726
    2. ' val' → logprob: -3.288041830062866
    3. '(val' → logprob: -15.288042068481445
    4. '	val' → logprob: -17.788042068481445
    5. '_val' → logprob: -18.788042068481445
    6. '[val' → logprob: -19.038042068481445
    7. '
' → logprob: -19.288042068481445
    8. ',val' → logprob: -19.413042068481445
    9. ' ' → logprob: -20.038042068481445
    10. 'v' → logprob: -20.663042068481445

Token 3092: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03250059485435486
    2. '               ' → logprob: -3.5325005054473877
    3. '```' → logprob: -7.157500743865967
    4. 'if' → logprob: -7.407500743865967
    5. '           ' → logprob: -7.532500743865967
    6. '   ' → logprob: -7.907500743865967
    7. 'elif' → logprob: -8.782500267028809
    8. '<|end|>' → logprob: -8.907500267028809
    9. '
' → logprob: -9.407500267028809
    10. ' if' → logprob: -10.532500267028809

Token 3093: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037430718075484037
    2. 'if' → logprob: -6.0037431716918945
    3. '```' → logprob: -7.2537431716918945
    4. '   ' → logprob: -7.8787431716918945
    5. '
' → logprob: -9.878743171691895
    6. '           ' → logprob: -10.128743171691895
    7. '               ' → logprob: -10.378743171691895
    8. 'elif' → logprob: -10.503743171691895
    9. ' if' → logprob: -11.628743171691895
    10. '``' → logprob: -11.628743171691895

Token 3094: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04923965036869049
    2. 'if' (adapté à ' if') → logprob: -3.0492396354675293
    3. '   ' → logprob: -7.924239635467529
    4. 'elif' → logprob: -8.924240112304688
    5. ' if' → logprob: -9.924240112304688
    6. '```' → logprob: -10.174240112304688
    7. '
' → logprob: -10.299240112304688
    8. '           ' → logprob: -10.674240112304688
    9. '     ' → logprob: -12.424240112304688
    10. '               ' → logprob: -12.799240112304688

Token 3095: ' kind' (ID: 3675)
  Prédit: 'kind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kind' → logprob: -0.021446814760565758
    2. ' kind' → logprob: -3.896446704864502
    3. '(kind' → logprob: -7.521446704864502
    4. ' isinstance' → logprob: -9.27144718170166
    5. ' ast' → logprob: -9.52144718170166
    6. 'ast' → logprob: -9.77144718170166
    7. '_kind' → logprob: -10.14644718170166
    8. '.kind' → logprob: -10.77144718170166
    9. '  ' → logprob: -10.89644718170166
    10. 'type' → logprob: -11.14644718170166

Token 3096: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931985020637512
    2. ' ==' → logprob: -0.6931985020637512
    3. '=='' → logprob: -10.443198204040527
    4. '       ' → logprob: -11.693198204040527
    5. '[' → logprob: -12.443198204040527
    6. '   ' → logprob: -13.193198204040527
    7. '        ' → logprob: -13.693198204040527
    8. '    ' → logprob: -13.818198204040527
    9. '      ' → logprob: -13.943198204040527
    10. ':' → logprob: -14.068198204040527

Token 3097: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.9795445849886164e-05
    2. ''t' → logprob: -10.500060081481934
    3. ' '' → logprob: -10.750060081481934
    4. ''ex' → logprob: -11.500060081481934
    5. '('' → logprob: -15.500060081481934
    6. ' ' → logprob: -16.000059127807617
    7. ''value' → logprob: -16.500059127807617
    8. '   ' → logprob: -16.750059127807617
    9. ''s' → logprob: -17.125059127807617
    10. '`' → logprob: -17.125059127807617

Token 3098: 'term' (ID: 8044)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3133138120174408
    2. 'term' → logprob: -1.3133138418197632
    3. ''t' → logprob: -10.438313484191895
    4. ' term' → logprob: -11.063313484191895
    5. '('' → logprob: -12.938313484191895
    6. '(term' → logprob: -12.938313484191895
    7. '`' → logprob: -14.563313484191895
    8. ' '' → logprob: -14.813313484191895
    9. ''ex' → logprob: -14.813313484191895
    10. '"' → logprob: -14.813313484191895

Token 3099: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25513216853141785
    2. ':
' → logprob: -3.0051321983337402
    3. '[' → logprob: -3.1301321983337402
    4. '',' → logprob: -3.1301321983337402
    5. '       ' → logprob: -3.3801321983337402
    6. ',' → logprob: -3.3801321983337402
    7. '':
' → logprob: -4.88013219833374
    8. '   ' → logprob: -5.38013219833374
    9. ':' → logprob: -5.63013219833374
    10. '               ' → logprob: -7.13013219833374

Token 3100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03431610018014908
    2. '       ' → logprob: -3.409316062927246
    3. '   ' → logprob: -8.034316062927246
    4. '```' → logprob: -9.659316062927246
    5. '               ' → logprob: -9.784316062927246
    6. '[' → logprob: -10.034316062927246
    7. 'val' → logprob: -10.659316062927246
    8. '         ' → logprob: -10.909316062927246
    9. '_,' → logprob: -10.909316062927246
    10. '          ' → logprob: -11.034316062927246

Token 3101: ' nodes' (ID: 15749)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.6679386496543884
    2. '           ' → logprob: -1.1679387092590332
    3. '       ' → logprob: -2.667938709259033
    4. '   ' → logprob: -4.167938709259033
    5. ' _,' → logprob: -4.292938709259033
    6. ''' → logprob: -4.417938709259033
    7. 'val' → logprob: -4.542938709259033
    8. 'nodes' (adapté à ' nodes') → logprob: -4.542938709259033
    9. ' ast' → logprob: -4.792938709259033
    10. ''_' → logprob: -5.167938709259033

Token 3102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313353031873703
    2. ' =' → logprob: -1.3133530616760254
    3. '   ' → logprob: -9.688352584838867
    4. '           ' → logprob: -11.313352584838867
    5. '[' → logprob: -11.688352584838867
    6. '       ' → logprob: -12.188352584838867
    7. '=[' → logprob: -14.063352584838867
    8. '    ' → logprob: -14.563352584838867
    9. ' ' → logprob: -15.188352584838867
    10. '        ' → logprob: -15.438352584838867

Token 3103: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.005268499720841646
    2. ' ast' → logprob: -5.255268573760986
    3. '(ast' → logprob: -10.630268096923828
    4. ''' → logprob: -12.255268096923828
    5. '('' → logprob: -12.755268096923828
    6. '   ' → logprob: -14.255268096923828
    7. '       ' → logprob: -14.380268096923828
    8. '         ' → logprob: -15.130268096923828
    9. '           ' → logprob: -15.255268096923828
    10. '(' → logprob: -15.380268096923828

Token 3104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '   ' → logprob: -13.750001907348633
    3. '           ' → logprob: -15.000001907348633
    4. '       ' → logprob: -15.250001907348633
    5. ' [' → logprob: -15.625001907348633
    6. '```' → logprob: -17.000001907348633
    7. ')[' → logprob: -17.125001907348633
    8. '#' → logprob: -17.625001907348633
    9. '=' → logprob: -18.000001907348633
    10. '(' → logprob: -18.500001907348633

Token 3105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014919086243025959
    2. '[' → logprob: -8.87514877319336
    3. '   ' → logprob: -12.12514877319336
    4. ' ' → logprob: -12.87514877319336
    5. '(' → logprob: -14.50014877319336
    6. '       ' → logprob: -15.37514877319336
    7. '           ' → logprob: -15.87514877319336
    8. '     ' → logprob: -16.62514877319336
    9. '    ' → logprob: -17.12514877319336
    10. '  ' → logprob: -17.37514877319336

Token 3106: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4718727171421051
    2. '[' → logprob: -1.2218726873397827
    3. ']
' → logprob: -3.4718728065490723
    4. '       ' → logprob: -3.8468728065490723
    5. ']' → logprob: -4.221872806549072
    6. '
' → logprob: -4.846872806549072
    7. '[
' → logprob: -6.471872806549072
    8. 'def' → logprob: -6.721872806549072
    9. '][' → logprob: -6.721872806549072
    10. '   ' → logprob: -7.096872806549072

Token 3107: '           ' (ID: 352)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.09639612585306168
    2. '           ' → logprob: -2.7213962078094482
    3. ' val' → logprob: -3.9713962078094482
    4. '       ' → logprob: -4.971395969390869
    5. '   ' → logprob: -8.846396446228027
    6. 'def' → logprob: -10.221396446228027
    7. '	val' → logprob: -10.346396446228027
    8. '```' → logprob: -10.471396446228027
    9. '_val' → logprob: -10.596396446228027
    10. ',val' → logprob: -10.721396446228027

Token 3108: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.011308464221656322
    2. ' val' → logprob: -4.511308670043945
    3. '           ' → logprob: -8.511308670043945
    4. '       ' → logprob: -10.636308670043945
    5. 'def' → logprob: -11.136308670043945
    6. '```' → logprob: -11.761308670043945
    7. '``' → logprob: -12.636308670043945
    8. '   ' → logprob: -12.761308670043945
    9. '_val' → logprob: -12.886308670043945
    10. 'v' → logprob: -13.886308670043945

Token 3109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142512023448944
    2. '=' → logprob: -1.7014250755310059
    3. '           ' → logprob: -11.826425552368164
    4. '   ' → logprob: -13.326425552368164
    5. '       ' → logprob: -13.701425552368164
    6. '        ' → logprob: -14.326425552368164
    7. '    ' → logprob: -14.576425552368164
    8. '            ' → logprob: -15.076425552368164
    9. '```' → logprob: -15.576425552368164
    10. ' ' → logprob: -16.076425552368164

Token 3110: ' ' (ID: 220)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.00026896485360339284
    2. ' eval' → logprob: -8.750268936157227
    3. '(eval' → logprob: -9.125268936157227
    4. '           ' → logprob: -14.250268936157227
    5. 'val' → logprob: -14.500268936157227
    6. '0' → logprob: -15.500268936157227
    7. '.eval' → logprob: -16.125268936157227
    8. 'evaluate' → logprob: -16.500268936157227
    9. '   ' → logprob: -17.625268936157227
    10. '1' → logprob: -17.625268936157227

Token 3111: '1' (ID: 16)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.0001612267515156418
    2. '1' → logprob: -8.750161170959473
    3. '(eval' → logprob: -13.125161170959473
    4. ' eval' → logprob: -14.250161170959473
    5. '.eval' → logprob: -17.25016212463379
    6. 'int' → logprob: -17.37516212463379
    7. 'exec' → logprob: -17.50016212463379
    8. '0' → logprob: -17.62516212463379
    9. 'evaluate' → logprob: -18.00016212463379
    10. 'expr' → logprob: -18.00016212463379

Token 3112: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037310835905373096
    2. '       ' → logprob: -6.0037312507629395
    3. '
' → logprob: -7.2537312507629395
    4. '   ' → logprob: -8.878730773925781
    5. '		' → logprob: -9.128730773925781
    6. '               ' → logprob: -9.503730773925781
    7. ' =' → logprob: -10.753730773925781
    8. '          ' → logprob: -10.878730773925781
    9. '	       ' → logprob: -11.003730773925781
    10. 'def' → logprob: -11.128730773925781

Token 3113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033398889005184174
    2. '               ' → logprob: -4.1583991050720215
    3. '       ' → logprob: -4.5333991050720215
    4. '
' → logprob: -6.0333991050720215
    5. 'def' → logprob: -6.5333991050720215
    6. '                   ' → logprob: -8.033398628234863
    7. '{
' → logprob: -8.408398628234863
    8. 'i' → logprob: -8.533398628234863
    9. '          ' → logprob: -8.658398628234863
    10. '#' → logprob: -8.908398628234863

Token 3114: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24539607763290405
    2. '           ' → logprob: -2.245396137237549
    3. 'for' (adapté à ' for') → logprob: -2.245396137237549
    4. '               ' → logprob: -5.745396137237549
    5. 'idx' → logprob: -6.495396137237549
    6. 'index' → logprob: -7.995396137237549
    7. '0' → logprob: -8.62039566040039
    8. ' i' → logprob: -8.62039566040039
    9. ' for' → logprob: -8.99539566040039
    10. '       ' → logprob: -9.49539566040039

Token 3115: ' node' (ID: 4596)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29217058420181274
    2. 'node' → logprob: -1.417170524597168
    3. 'item' → logprob: -5.417170524597168
    4. 'x' → logprob: -5.792170524597168
    5. ' node' → logprob: -7.417170524597168
    6. ' i' → logprob: -7.417170524597168
    7. 'idx' → logprob: -7.417170524597168
    8. 'j' → logprob: -7.667170524597168
    9. 'token' → logprob: -7.667170524597168
    10. 'tok' → logprob: -8.792170524597168

Token 3116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12179654091596603
    2. 'in' → logprob: -2.9967966079711914
    3. '[i' → logprob: -3.3717966079711914
    4. '[' → logprob: -3.7467966079711914
    5. ' i' → logprob: -6.621796607971191
    6. 'i' → logprob: -6.621796607971191
    7. '   ' → logprob: -7.121796607971191
    8. ',' → logprob: -7.371796607971191
    9. '[in' → logprob: -7.621796607971191
    10. ' ' → logprob: -8.121796607971191

Token 3117: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.005682756658643484
    2. '(nodes' → logprob: -5.255682945251465
    3. ' nodes' → logprob: -8.380682945251465
    4. '(' → logprob: -8.880682945251465
    5. '[' → logprob: -10.505682945251465
    6. 'node' → logprob: -11.255682945251465
    7. '   ' → logprob: -11.630682945251465
    8. '((' → logprob: -12.130682945251465
    9. '	nodes' → logprob: -12.755682945251465
    10. ' ' → logprob: -12.755682945251465

Token 3118: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6827419400215149
    2. ':' → logprob: -1.8077418804168701
    3. ':
' → logprob: -1.8077418804168701
    4. 'if' → logprob: -2.43274188041687
    5. '[' → logprob: -3.43274188041687
    6. '               ' → logprob: -4.307742118835449
    7. '       ' → logprob: -4.682742118835449
    8. '           ' → logprob: -4.682742118835449
    9. '<|end|>' → logprob: -4.807742118835449
    10. '):
' → logprob: -6.807742118835449

Token 3119: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3511498272418976
    2. 'if' → logprob: -2.226149797439575
    3. '               ' → logprob: -2.601149797439575
    4. ':
' → logprob: -2.976149797439575
    5. '[' → logprob: -3.476149797439575
    6. '           ' → logprob: -4.101150035858154
    7. ':' → logprob: -4.851150035858154
    8. '[
' → logprob: -6.101150035858154
    9. ' in' → logprob: -6.976150035858154
    10. '{
' → logprob: -7.476150035858154

Token 3120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3968803286552429
    2. 'if' (adapté à ' if') → logprob: -1.1468803882598877
    3. '                   ' → logprob: -5.896880149841309
    4. '           ' → logprob: -6.021880149841309
    5. '               ' → logprob: -6.021880149841309
    6. ' ' → logprob: -6.896880149841309
    7. '   ' → logprob: -7.146880149841309
    8. '	if' → logprob: -8.896880149841309
    9. '[' → logprob: -9.396880149841309
    10. '                       ' → logprob: -10.271880149841309

Token 3121: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.8590275049209595
    2. 'node' → logprob: -1.2340275049209595
    3. 'is' → logprob: -1.3590275049209595
    4. 'type' → logprob: -3.85902738571167
    5. ' node' → logprob: -5.10902738571167
    6. 'not' → logprob: -8.109027862548828
    7. ' type' → logprob: -8.109027862548828
    8. '(node' → logprob: -8.734027862548828
    9. '   ' → logprob: -8.734027862548828
    10. ' ' → logprob: -9.234027862548828

Token 3122: '(node' (ID: 13356)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0022199610248208046
    2. 'type' → logprob: -6.752220153808594
    3. '(tuple' → logprob: -7.252220153808594
    4. 'node' → logprob: -8.752220153808594
    5. ' tuple' → logprob: -8.752220153808594
    6. 'tu' → logprob: -12.002220153808594
    7. 'token' → logprob: -12.627220153808594
    8. '(' → logprob: -12.627220153808594
    9. 'str' → logprob: -12.752220153808594
    10. ' ' → logprob: -12.752220153808594

Token 3123: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34755784273147583
    2. ' ==' → logprob: -1.347557783126831
    3. 'if' → logprob: -4.22255802154541
    4. ',' → logprob: -4.84755802154541
    5. ' if' → logprob: -5.34755802154541
    6. '           ' → logprob: -6.59755802154541
    7. '==
' → logprob: -6.59755802154541
    8. '!=' → logprob: -6.72255802154541
    9. '[' → logprob: -7.84755802154541
    10. '=='' → logprob: -7.97255802154541

Token 3124: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -5.3954463510308415e-05
    2. '(tuple' → logprob: -10.500054359436035
    3. ' tuple' → logprob: -10.750054359436035
    4. 'str' → logprob: -12.250054359436035
    5. 'tu' → logprob: -15.625054359436035
    6. '   ' → logprob: -18.87505340576172
    7. '(' → logprob: -19.87505340576172
    8. 'Tuple' → logprob: -20.12505340576172
    9. '
' → logprob: -20.12505340576172
    10. ' ' → logprob: -20.25005340576172

Token 3125: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1970590353012085
    2. ' and' → logprob: -2.822059154510498
    3. '[' → logprob: -2.947059154510498
    4. 'and' → logprob: -3.447059154510498
    5. ',
' → logprob: -4.447059154510498
    6. '                   ' → logprob: -5.322059154510498
    7. '               ' → logprob: -5.447059154510498
    8. ':
' → logprob: -5.697059154510498
    9. ':' → logprob: -6.072059154510498
    10. '(' → logprob: -6.572059154510498

Token 3126: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011612175032496452
    2. ':
' → logprob: -5.2616119384765625
    3. ':' → logprob: -6.3866119384765625
    4. ' =' → logprob: -6.6366119384765625
    5. 'val' → logprob: -7.2616119384765625
    6. ',' → logprob: -7.6366119384765625
    7. ' val' → logprob: -7.8866119384765625
    8. '               ' → logprob: -7.8866119384765625
    9. '                       ' → logprob: -8.136611938476562
    10. ' if' → logprob: -8.386611938476562

Token 3127: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.05078747868537903
    2. '                   ' → logprob: -3.0507874488830566
    3. ' val' → logprob: -6.675787448883057
    4. 'return' → logprob: -7.800787448883057
    5. '                       ' → logprob: -8.925787925720215
    6. '[val' → logprob: -9.550787925720215
    7. '               ' → logprob: -9.925787925720215
    8. '```' → logprob: -10.050787925720215
    9. '                  ' → logprob: -10.425787925720215
    10. ',val' → logprob: -10.425787925720215

Token 3128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07892470806837082
    2. ' =' → logprob: -2.5789246559143066
    3. '*=' → logprob: -10.703925132751465
    4. ' *=' → logprob: -11.828925132751465
    5. '   ' → logprob: -13.078925132751465
    6. '                   ' → logprob: -13.828925132751465
    7. '=(' → logprob: -14.453925132751465
    8. ' ' → logprob: -15.078925132751465
    9. '                    ' → logprob: -15.578925132751465
    10. '    ' → logprob: -15.703925132751465

Token 3129: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0006463141762651503
    2. ' (' → logprob: -7.500646114349365
    3. 'val' → logprob: -9.500646591186523
    4. '[val' → logprob: -12.250646591186523
    5. '(eval' → logprob: -12.625646591186523
    6. '(' → logprob: -12.625646591186523
    7. ' val' → logprob: -12.750646591186523
    8. '   ' → logprob: -14.000646591186523
    9. ',val' → logprob: -14.125646591186523
    10. '(vals' → logprob: -14.250646591186523

Token 3130: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0068342480808496475
    2. 'eval' → logprob: -5.006834030151367
    3. '(val' → logprob: -9.756834030151367
    4. ' val' → logprob: -10.131834030151367
    5. '(eval' → logprob: -11.006834030151367
    6. '(' → logprob: -12.881834030151367
    7. '   ' → logprob: -14.631834030151367
    8. ' eval' → logprob: -14.756834030151367
    9. ' (' → logprob: -15.006834030151367
    10. '  ' → logprob: -15.881834030151367

Token 3131: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931732296943665
    2. ' *' → logprob: -0.6931732296943665
    3. '(node' → logprob: -10.9431734085083
    4. '*(' → logprob: -12.5681734085083
    5. '[node' → logprob: -13.4431734085083
    6. ' ' → logprob: -14.6931734085083
    7. ' (' → logprob: -14.6931734085083
    8. '(' → logprob: -14.9431734085083
    9. ' ' → logprob: -15.4431734085083
    10. 'node' → logprob: -15.5681734085083

Token 3132: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -3.9650025428272784e-05
    2. ' eval' → logprob: -10.250040054321289
    3. '(eval' → logprob: -12.375040054321289
    4. 'val' → logprob: -17.75004005432129
    5. '.eval' → logprob: -18.62504005432129
    6. 'int' → logprob: -19.12504005432129
    7. 'ev' → logprob: -19.75004005432129
    8. 'evaluate' → logprob: -19.87504005432129
    9. '(' → logprob: -20.12504005432129
    10. '_eval' → logprob: -20.12504005432129

Token 3133: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0035982904955744743
    2. 'expr' → logprob: -5.878598213195801
    3. 'node' → logprob: -7.628598213195801
    4. '(node' → logprob: -8.1285982131958
    5. 'Expr' → logprob: -11.5035982131958
    6. '_EXPR' → logprob: -14.3785982131958
    7. '(expr' → logprob: -14.6285982131958
    8. '(' → logprob: -15.2535982131958
    9. 'express' → logprob: -16.128599166870117
    10. '[node' → logprob: -16.378599166870117

Token 3134: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00040528984391130507
    2. '(' → logprob: -8.125405311584473
    3. 'node' → logprob: -9.750405311584473
    4. ' (' → logprob: -10.000405311584473
    5. '((' → logprob: -13.625405311584473
    6. '(token' → logprob: -13.625405311584473
    7. '[node' → logprob: -13.875405311584473
    8. '(n' → logprob: -14.250405311584473
    9. '(
' → logprob: -14.375405311584473
    10. ' node' → logprob: -15.250405311584473

Token 3135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005082341376692057
    2. ')' → logprob: -7.6255083084106445
    3. '(' → logprob: -11.875508308410645
    4. '
' → logprob: -12.750508308410645
    5. ')+' → logprob: -13.125508308410645
    6. '   ' → logprob: -14.000508308410645
    7. '```' → logprob: -14.000508308410645
    8. '[node' → logprob: -14.125508308410645
    9. '[
' → logprob: -14.500508308410645
    10. '1' → logprob: -15.000508308410645

Token 3136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00151081255171448
    2. '[' → logprob: -6.5015106201171875
    3. '   ' → logprob: -12.376510620117188
    4. ' ' → logprob: -12.751510620117188
    5. '
' → logprob: -14.751510620117188
    6. '(' → logprob: -15.126510620117188
    7. '][' → logprob: -16.126510620117188
    8. '<|end|>' → logprob: -16.626510620117188
    9. '  ' → logprob: -16.876510620117188
    10. ' [' → logprob: -16.876510620117188

Token 3137: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00767536461353302
    2. ')' → logprob: -4.8826751708984375
    3. '])' → logprob: -10.132675170898438
    4. ')
' → logprob: -11.507675170898438
    5. '       ' → logprob: -12.257675170898438
    6. '   ' → logprob: -12.382675170898438
    7. ' ))' → logprob: -12.632675170898438
    8. '[' → logprob: -13.257675170898438
    9. '    ' → logprob: -14.132675170898438
    10. '           ' → logprob: -14.132675170898438

Token 3138: ' %' (ID: 1851)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9856292009353638
    2. '               ' → logprob: -1.1106292009353638
    3. '%' → logprob: -1.6106292009353638
    4. '           ' → logprob: -3.610629081726074
    5. ')' → logprob: -4.110629081726074
    6. ' %' → logprob: -4.360629081726074
    7. '       ' → logprob: -4.735629081726074
    8. '                       ' → logprob: -4.860629081726074
    9. '```' → logprob: -5.110629081726074
    10. '<|end|>' → logprob: -5.360629081726074

Token 3139: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0009146820520982146
    2. ' MOD' → logprob: -7.000914573669434
    3. '201' → logprob: -13.250914573669434
    4. ' ' → logprob: -14.500914573669434
    5. '   ' → logprob: -14.750914573669434
    6. '.MOD' → logprob: -15.500914573669434
    7. '_MOD' → logprob: -16.62591552734375
    8. 'MO' → logprob: -17.25091552734375
    9. '  ' → logprob: -17.75091552734375
    10. '
' → logprob: -17.75091552734375

Token 3140: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011893275193870068
    2. '           ' → logprob: -4.511893272399902
    3. '                   ' → logprob: -7.386893272399902
    4. '       ' → logprob: -9.761893272399902
    5. '```' → logprob: -10.511893272399902
    6. '                       ' → logprob: -10.761893272399902
    7. '			' → logprob: -11.011893272399902
    8. 'continue' → logprob: -11.136893272399902
    9. '<|end|>' → logprob: -11.136893272399902
    10. ')' → logprob: -11.386893272399902

Token 3141: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030435470398515463
    2. '           ' → logprob: -6.0030436515808105
    3. '			' → logprob: -9.003043174743652
    4. '                   ' → logprob: -9.253043174743652
    5. 'continue' → logprob: -9.503043174743652
    6. '<|end|>' → logprob: -9.753043174743652
    7. '		       ' → logprob: -10.128043174743652
    8. '       ' → logprob: -10.253043174743652
    9. '```' → logprob: -10.878043174743652
    10. '		' → logprob: -11.003043174743652

Token 3142: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2173694372177124
    2. '           ' → logprob: -1.9673694372177124
    3. ' return' → logprob: -3.217369556427002
    4. '       ' → logprob: -4.592369556427002
    5. '               ' → logprob: -5.717369556427002
    6. '   ' → logprob: -6.592369556427002
    7. '	return' → logprob: -8.467369079589844
    8. '                   ' → logprob: -9.342369079589844
    9. '
' → logprob: -9.842369079589844
    10. '          ' → logprob: -10.092369079589844

Token 3143: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1002078503370285
    2. ' val' → logprob: -2.350207805633545
    3. '(val' → logprob: -14.475208282470703
    4. '	val' → logprob: -15.100208282470703
    5. '_val' → logprob: -15.725208282470703
    6. 'v' → logprob: -16.975208282470703
    7. '[val' → logprob: -17.475208282470703
    8. ' ' → logprob: -17.725208282470703
    9. ' ' → logprob: -17.725208282470703
    10. 'int' → logprob: -17.975208282470703

Token 3144: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3145: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3146: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044949972652830184
    2. '   ' → logprob: -7.7504496574401855
    3. '<|end|>' → logprob: -12.125449180603027
    4. '           ' → logprob: -12.500449180603027
    5. '[' → logprob: -12.875449180603027
    6. '
' → logprob: -13.625449180603027
    7. ')' → logprob: -14.000449180603027
    8. 'return' → logprob: -14.250449180603027
    9. ' if' → logprob: -14.250449180603027
    10. '      ' → logprob: -14.375449180603027

Token 3147: ' kind' (ID: 3675)
  Prédit: 'kind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kind' → logprob: -0.005571560002863407
    2. ' kind' → logprob: -5.505571365356445
    3. ''' → logprob: -6.755571365356445
    4. '(kind' → logprob: -8.755571365356445
    5. 'ast' → logprob: -10.005571365356445
    6. ' ' → logprob: -10.130571365356445
    7. '   ' → logprob: -11.005571365356445
    8. ' ast' → logprob: -11.005571365356445
    9. '_kind' → logprob: -11.255571365356445
    10. '  ' → logprob: -11.755571365356445

Token 3148: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08895964920520782
    2. '==' → logprob: -2.4639596939086914
    3. '[' → logprob: -11.088959693908691
    4. ':' → logprob: -14.213959693908691
    5. '       ' → logprob: -14.213959693908691
    6. '=='' → logprob: -14.463959693908691
    7. '==
' → logprob: -14.713959693908691
    8. '==(' → logprob: -15.213959693908691
    9. '   ' → logprob: -15.463959693908691
    10. '=' → logprob: -15.588959693908691

Token 3149: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1536974161863327
    2. ''ex' → logprob: -2.2786974906921387
    3. ' '' → logprob: -3.2786974906921387
    4. ''s' → logprob: -6.528697490692139
    5. ''f' → logprob: -7.653697490692139
    6. ''d' → logprob: -9.52869701385498
    7. ''exp' → logprob: -9.65369701385498
    8. ''t' → logprob: -9.90369701385498
    9. '('' → logprob: -10.15369701385498
    10. ''in' → logprob: -10.77869701385498

Token 3150: 'factor' (ID: 73174)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2522073984146118
    2. 'factor' → logprob: -1.5022073984146118
    3. 'fraction' → logprob: -9.50220775604248
    4. ''ex' → logprob: -9.87720775604248
    5. ''f' → logprob: -9.87720775604248
    6. ''s' → logprob: -10.87720775604248
    7. '('' → logprob: -11.50220775604248
    8. ''value' → logprob: -11.75220775604248
    9. '"' → logprob: -12.00220775604248
    10. '
' → logprob: -12.12720775604248

Token 3151: '':
' (ID: 7669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5410788655281067
    2. '',' → logprob: -1.791078805923462
    3. '[' → logprob: -1.916078805923462
    4. '           ' → logprob: -3.041078805923462
    5. ':
' → logprob: -3.541078805923462
    6. ',
' → logprob: -4.916079044342041
    7. '       ' → logprob: -5.166079044342041
    8. ':' → logprob: -5.541079044342041
    9. '':
' → logprob: -6.041079044342041
    10. '':' → logprob: -6.666079044342041

Token 3152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10884159803390503
    2. '   ' → logprob: -2.73384165763855
    3. '       ' → logprob: -3.48384165763855
    4. '          ' → logprob: -6.108841419219971
    5. '               ' → logprob: -6.608841419219971
    6. '         ' → logprob: -6.983841419219971
    7. '[' → logprob: -7.483841419219971
    8. '('_' → logprob: -8.108841896057129
    9. '        ' → logprob: -8.233841896057129
    10. '            ' → logprob: -8.483841896057129

Token 3153: ' sign' (ID: 2232)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3832011818885803
    2. ''' → logprob: -2.2582011222839355
    3. ''_' → logprob: -3.1332011222839355
    4. '[' → logprob: -3.2582011222839355
    5. '_,' → logprob: -3.5082011222839355
    6. '       ' → logprob: -3.5082011222839355
    7. '('_' → logprob: -4.0082011222839355
    8. '   ' → logprob: -4.7582011222839355
    9. ''[' → logprob: -4.8832011222839355
    10. 'ast' → logprob: -5.2582011222839355

Token 3154: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6351797580718994
    2. '=' → logprob: -0.7601797580718994
    3. ',' → logprob: -6.01017951965332
    4. '[' → logprob: -10.26017951965332
    5. '   ' → logprob: -10.76017951965332
    6. ')' → logprob: -11.13517951965332
    7. '='' → logprob: -11.38517951965332
    8. ' ,' → logprob: -11.76017951965332
    9. ' ' → logprob: -12.26017951965332
    10. '_' → logprob: -12.51017951965332

Token 3155: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2161317765712738
    2. 'expr' → logprob: -2.3411316871643066
    3. 'ast' → logprob: -3.2161316871643066
    4. 'v' → logprob: -3.5911316871643066
    5. 'vals' → logprob: -4.091131687164307
    6. 'value' → logprob: -5.591131687164307
    7. 'node' → logprob: -6.216131687164307
    8. 'args' → logprob: -6.341131687164307
    9. 'arg' → logprob: -6.341131687164307
    10. 'nodes' → logprob: -6.966131687164307

Token 3156: '_ast' (ID: 131740)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7646278142929077
    2. ',' → logprob: -1.2646278142929077
    3. ' =' → logprob: -1.3896278142929077
    4. '   ' → logprob: -6.514627933502197
    5. '           ' → logprob: -7.264627933502197
    6. '       ' → logprob: -8.014627456665039
    7. ' ,' → logprob: -8.389627456665039
    8. '               ' → logprob: -9.889627456665039
    9. '_,' → logprob: -9.889627456665039
    10. '    ' → logprob: -10.639627456665039

Token 3157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17104659974575043
    2. ' =' → logprob: -1.9210466146469116
    3. ',' → logprob: -4.546046733856201
    4. '   ' → logprob: -9.546046257019043
    5. ',val' → logprob: -9.546046257019043
    6. '       ' → logprob: -12.796046257019043
    7. '           ' → logprob: -12.921046257019043
    8. ' ' → logprob: -13.296046257019043
    9. ' ,' → logprob: -13.796046257019043
    10. '    ' → logprob: -13.796046257019043

Token 3158: ' ast' (ID: 12004)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.008182968012988567
    2. 'ast' → logprob: -4.883183002471924
    3. 'val' → logprob: -8.508182525634766
    4. '(sign' → logprob: -9.508182525634766
    5. ' ast' → logprob: -9.633182525634766
    6. ' sign' → logprob: -9.758182525634766
    7. ''+' → logprob: -9.883182525634766
    8. '   ' → logprob: -10.258182525634766
    9. ''' → logprob: -11.258182525634766
    10. '_ast' → logprob: -11.508182525634766

Token 3159: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521851658821106
    2. '[' → logprob: -2.252185106277466
    3. ' =' → logprob: -2.377185106277466
    4. ',' → logprob: -4.127185344696045
    5. '           ' → logprob: -5.002185344696045
    6. '   ' → logprob: -7.752185344696045
    7. '               ' → logprob: -7.877185344696045
    8. '=
' → logprob: -7.877185344696045
    9. '       ' → logprob: -8.502184867858887
    10. ')' → logprob: -8.752184867858887

Token 3160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.431207682704553e-05
    2. '[' → logprob: -9.875054359436035
    3. ''' → logprob: -13.500054359436035
    4. '(' → logprob: -14.750054359436035
    5. '0' → logprob: -15.375054359436035
    6. ''[' → logprob: -15.750054359436035
    7. ''s' → logprob: -15.750054359436035
    8. '   ' → logprob: -16.25005340576172
    9. '[
' → logprob: -16.50005340576172
    10. '
' → logprob: -16.62505340576172

Token 3161: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028298037126660347
    2. '=' → logprob: -4.5282979011535645
    3. ')' → logprob: -4.7782979011535645
    4. ',' → logprob: -5.9032979011535645
    5. ']' → logprob: -6.7782979011535645
    6. ' =' → logprob: -6.7782979011535645
    7. '<|end|>' → logprob: -7.2782979011535645
    8. '
' → logprob: -7.5282979011535645
    9. '[
' → logprob: -7.7782979011535645
    10. '           ' → logprob: -7.9032979011535645

Token 3162: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005020394455641508
    2. '           ' → logprob: -5.880020618438721
    3. '   ' → logprob: -6.505020618438721
    4. ',' → logprob: -8.630020141601562
    5. ' if' → logprob: -9.130020141601562
    6. '	' → logprob: -9.380020141601562
    7. '	   ' → logprob: -9.380020141601562
    8. '
' → logprob: -10.005020141601562
    9. '	       ' → logprob: -10.255020141601562
    10. ':
' → logprob: -10.630020141601562

Token 3163: ' val' (ID: 1459)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.34461870789527893
    2. 'if' → logprob: -1.3446186780929565
    3. '           ' → logprob: -4.344618797302246
    4. 'val' (adapté à ' val') → logprob: -4.469618797302246
    5. 'res' → logprob: -5.219618797302246
    6. ' if' → logprob: -8.844618797302246
    7. 'sign' → logprob: -8.844618797302246
    8. 'value' → logprob: -9.344618797302246
    9. 'inner' → logprob: -9.594618797302246
    10. 'r' → logprob: -9.594618797302246

Token 3164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0297523383051157
    2. ' =' → logprob: -3.529752254486084
    3. '   ' → logprob: -13.904752731323242
    4. '           ' → logprob: -15.029752731323242
    5. '=
' → logprob: -15.529752731323242
    6. 'if' → logprob: -15.779752731323242
    7. '_val' → logprob: -16.529752731323242
    8. '_' → logprob: -16.904752731323242
    9. ',' → logprob: -17.154752731323242
    10. '```' → logprob: -17.154752731323242

Token 3165: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.06305717676877975
    2. '(eval' → logprob: -2.9380571842193604
    3. '(' → logprob: -5.313056945800781
    4. '(-' → logprob: -6.563056945800781
    5. ' eval' → logprob: -7.063056945800781
    6. '0' → logprob: -7.813056945800781
    7. ' (' → logprob: -8.438056945800781
    8. '-' → logprob: -9.188056945800781
    9. '-e' → logprob: -9.688056945800781
    10. 'val' → logprob: -10.563056945800781

Token 3166: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -2.47495681833243e-05
    2. 'expr' → logprob: -11.250024795532227
    3. 'Expr' → logprob: -11.625024795532227
    4. '_ast' → logprob: -14.000024795532227
    5. '(expr' → logprob: -14.750024795532227
    6. '```' → logprob: -15.000024795532227
    7. '_EXPR' → logprob: -15.250024795532227
    8. '_val' → logprob: -15.375024795532227
    9. 'val' → logprob: -15.500024795532227
    10. '(' → logprob: -16.000024795532227

Token 3167: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.10023105144500732
    2. 'val' → logprob: -2.350231170654297
    3. '(' → logprob: -11.725231170654297
    4. ' val' → logprob: -11.725231170654297
    5. '[val' → logprob: -11.975231170654297
    6. ',val' → logprob: -13.475231170654297
    7. '	val' → logprob: -15.475231170654297
    8. '```' → logprob: -15.600231170654297
    9. ' (' → logprob: -16.225231170654297
    10. '_val' → logprob: -16.975231170654297

Token 3168: '_ast' (ID: 131740)
  Prédit: '_ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ast' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. '```' → logprob: -17.0
    4. '_AST' → logprob: -17.625
    5. '[_' → logprob: -17.75
    6. 'ast' → logprob: -18.125
    7. '(ast' → logprob: -18.25
    8. '_' → logprob: -19.25
    9. '_a' → logprob: -19.625
    10. '.ast' → logprob: -20.0

Token 3169: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47642263770103455
    2. ')' → logprob: -0.9764226675033569
    3. '           ' → logprob: -6.1014227867126465
    4. '       ' → logprob: -10.476422309875488
    5. '   ' → logprob: -10.976422309875488
    6. ')
' → logprob: -11.101422309875488
    7. ' )
' → logprob: -11.226422309875488
    8. '               ' → logprob: -11.851422309875488
    9. ')*' → logprob: -12.351422309875488
    10. 'if' → logprob: -12.476422309875488

Token 3170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5774580240249634
    2. '       ' → logprob: -0.9524580240249634
    3. '   ' → logprob: -3.077457904815674
    4. ' if' → logprob: -5.702457904815674
    5. '               ' → logprob: -7.327457904815674
    6. '	if' → logprob: -7.577457904815674
    7. '	       ' → logprob: -7.577457904815674
    8. '    ' → logprob: -8.077458381652832
    9. '	   ' → logprob: -8.077458381652832
    10. '<|end|>' → logprob: -8.577458381652832

Token 3171: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0949520394206047
    2. '           ' → logprob: -2.84495210647583
    3. ' if' → logprob: -3.59495210647583
    4. '       ' → logprob: -5.96995210647583
    5. '   ' → logprob: -6.09495210647583
    6. '	if' → logprob: -9.469951629638672
    7. 'return' → logprob: -9.594951629638672
    8. 'If' → logprob: -12.344951629638672
    9. '    ' → logprob: -12.844951629638672
    10. '
' → logprob: -12.969951629638672

Token 3172: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.0015035520773380995
    2. ' sign' → logprob: -6.5015034675598145
    3. '(sign' → logprob: -14.001503944396973
    4. '           ' → logprob: -15.376503944396973
    5. '	sign' → logprob: -16.001502990722656
    6. '   ' → logprob: -16.876502990722656
    7. '_sign' → logprob: -17.876502990722656
    8. '.sign' → logprob: -18.251502990722656
    9. '```' → logprob: -18.501502990722656
    10. '-sign' → logprob: -19.501502990722656

Token 3173: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14326103031635284
    2. ' ==' → logprob: -2.018260955810547
    3. '=' → logprob: -8.143260955810547
    4. '=='' → logprob: -8.518260955810547
    5. '==
' → logprob: -9.768260955810547
    6. '==-' → logprob: -11.143260955810547
    7. '	' → logprob: -11.643260955810547
    8. '[' → logprob: -12.893260955810547
    9. ')==' → logprob: -12.893260955810547
    10. '===' → logprob: -13.268260955810547

Token 3174: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00015395533409900963
    2. ' '-'' → logprob: -9.625153541564941
    3. '-' → logprob: -10.250153541564941
    4. ''+' → logprob: -10.625153541564941
    5. ''' → logprob: -11.125153541564941
    6. ' '-' → logprob: -11.750153541564941
    7. '('-' → logprob: -13.250153541564941
    8. '   ' → logprob: -13.625153541564941
    9. '"-' → logprob: -14.375153541564941
    10. ' ' → logprob: -14.875153541564941

Token 3175: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5904486775398254
    2. ':' → logprob: -1.2154486179351807
    3. ' val' → logprob: -1.9654486179351807
    4. 'val' → logprob: -4.96544885635376
    5. '):
' → logprob: -7.34044885635376
    6. ' :
' → logprob: -7.46544885635376
    7. ' :' → logprob: -8.340448379516602
    8. '   ' → logprob: -8.590448379516602
    9. '1' → logprob: -9.090448379516602
    10. '):' → logprob: -9.465448379516602

Token 3176: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7709088921546936
    2. '           ' → logprob: -1.1459088325500488
    3. ' return' → logprob: -1.7709088325500488
    4. '               ' → logprob: -3.020908832550049
    5. 'val' → logprob: -8.395909309387207
    6. ' val' → logprob: -9.145909309387207
    7. '   ' → logprob: -9.895909309387207
    8. ':return' → logprob: -10.020909309387207
    9. '	return' → logprob: -10.895909309387207
    10. '                   ' → logprob: -11.145909309387207

Token 3177: ' val' (ID: 1459)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10051288455724716
    2. ' return' → logprob: -2.350512981414795
    3. ' val' → logprob: -8.850512504577637
    4. 'val' (adapté à ' val') → logprob: -8.975512504577637
    5. '           ' → logprob: -11.350512504577637
    6. '                   ' → logprob: -11.725512504577637
    7. '               ' → logprob: -11.850512504577637
    8. '0' → logprob: -12.600512504577637
    9. ':return' → logprob: -13.475512504577637
    10. '	return' → logprob: -14.225512504577637

Token 3178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178306156769395
    2. ' =' → logprob: -5.753178119659424
    3. '*=' → logprob: -15.503178596496582
    4. 'return' → logprob: -15.753178596496582
    5. '=
' → logprob: -16.128177642822266
    6. '%=' → logprob: -16.753177642822266
    7. '=(-' → logprob: -16.878177642822266
    8. ')' → logprob: -17.753177642822266
    9. '=(' → logprob: -18.628177642822266
    10. '   ' → logprob: -18.628177642822266

Token 3179: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.016549812629818916
    2. '(' → logprob: -4.391549587249756
    3. '(M' → logprob: -5.766549587249756
    4. ' (-' → logprob: -7.266549587249756
    5. ' (' → logprob: -8.766550064086914
    6. '((-' → logprob: -11.141550064086914
    7. '(Mod' → logprob: -11.266550064086914
    8. '-M' → logprob: -12.266550064086914
    9. '(val' → logprob: -12.266550064086914
    10. '(mod' → logprob: -12.391550064086914

Token 3180: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.7697225252486533e-06
    2. ' val' → logprob: -12.500003814697266
    3. 'v' → logprob: -18.125003814697266
    4. 'va' → logprob: -18.750003814697266
    5. '(val' → logprob: -19.125003814697266
    6. '   ' → logprob: -19.625003814697266
    7. '
' → logprob: -19.750003814697266
    8. '1' → logprob: -19.875003814697266
    9. '	val' → logprob: -19.875003814697266
    10. 'vall' → logprob: -20.000003814697266

Token 3181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002849687123671174
    2. ')%' → logprob: -5.877849578857422
    3. ' )' → logprob: -10.752849578857422
    4. '%' → logprob: -10.752849578857422
    5. ' %' → logprob: -14.002849578857422
    6. ')
' → logprob: -14.002849578857422
    7. '+' → logprob: -15.752849578857422
    8. '%)' → logprob: -17.002849578857422
    9. ' +' → logprob: -17.502849578857422
    10. '[' → logprob: -18.002849578857422

Token 3182: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16025246679782867
    2. ' %' → logprob: -1.9102524518966675
    3. ')' → logprob: -11.535252571105957
    4. ')%' → logprob: -12.660252571105957
    5. '%c' → logprob: -12.785252571105957
    6. '%n' → logprob: -13.285252571105957
    7. '%A' → logprob: -13.285252571105957
    8. '%i' → logprob: -13.285252571105957
    9. '%e' → logprob: -13.410252571105957
    10. '%s' → logprob: -13.535252571105957

Token 3183: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002613358374219388
    2. ' MOD' → logprob: -8.250261306762695
    3. '201' → logprob: -17.375261306762695
    4. '_MOD' → logprob: -19.375261306762695
    5. '.MOD' → logprob: -20.375261306762695
    6. '   ' → logprob: -21.000261306762695
    7. '```' → logprob: -21.125261306762695
    8. ' ' → logprob: -22.875261306762695
    9. '`' → logprob: -23.375261306762695
    10. '           ' → logprob: -24.125261306762695

Token 3184: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002712738234549761
    2. 'return' → logprob: -6.252712726593018
    3. ' return' → logprob: -7.627712726593018
    4. '       ' → logprob: -9.002713203430176
    5. '
' → logprob: -9.627713203430176
    6. '		' → logprob: -9.877713203430176
    7. '               ' → logprob: -10.627713203430176
    8. '   ' → logprob: -12.252713203430176
    9. ')' → logprob: -12.252713203430176
    10. '	return' → logprob: -12.627713203430176

Token 3185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007900341413915157
    2. 'return' → logprob: -5.382900238037109
    3. '       ' → logprob: -6.132900238037109
    4. ' return' → logprob: -7.132900238037109
    5. '               ' → logprob: -8.75790023803711
    6. '		' → logprob: -9.88290023803711
    7. '   ' → logprob: -10.38290023803711
    8. '	return' → logprob: -10.75790023803711
    9. '	       ' → logprob: -11.00790023803711
    10. '
' → logprob: -12.13290023803711

Token 3186: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004573003854602575
    2. 'return' (adapté à ' return') → logprob: -5.504572868347168
    3. 'else' → logprob: -8.379572868347168
    4. ' return' → logprob: -8.879572868347168
    5. '       ' → logprob: -9.754572868347168
    6. '               ' → logprob: -10.004572868347168
    7. ' else' → logprob: -11.004572868347168
    8. '   ' → logprob: -13.504572868347168
    9. '	       ' → logprob: -13.754572868347168
    10. '		' → logprob: -13.879572868347168

Token 3187: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06199009716510773
    2. ' val' → logprob: -2.8119900226593018
    3. '(val' → logprob: -10.811989784240723
    4. '	val' → logprob: -13.936989784240723
    5. '_val' → logprob: -14.561989784240723
    6. '(' → logprob: -14.561989784240723
    7. ' (' → logprob: -15.936989784240723
    8. ' ' → logprob: -16.93699073791504
    9. '-val' → logprob: -16.93699073791504
    10. 'valu' → logprob: -17.31199073791504

Token 3188: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02662920020520687
    2. '       ' → logprob: -3.6516292095184326
    3. 'return' → logprob: -8.776629447937012
    4. '<|end|>' → logprob: -9.276629447937012
    5. '           ' → logprob: -10.276629447937012
    6. ')' → logprob: -11.401629447937012
    7. '.' → logprob: -12.151629447937012
    8. '	return' → logprob: -12.151629447937012
    9. '
' → logprob: -12.526629447937012
    10. ' return' → logprob: -12.651629447937012

Token 3189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1443147212266922
    2. '<|end|>' → logprob: -2.519314765930176
    3. '       ' → logprob: -3.394314765930176
    4. 'return' → logprob: -4.894314765930176
    5. '	return' → logprob: -6.019314765930176
    6. '
' → logprob: -6.269314765930176
    7. ')' → logprob: -6.394314765930176
    8. '    ' → logprob: -6.769314765930176
    9. ' return' → logprob: -6.769314765930176
    10. '           ' → logprob: -7.144314765930176

Token 3190: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39185741543769836
    2. 'return' → logprob: -1.141857385635376
    3. ' return' → logprob: -6.141857624053955
    4. ')' → logprob: -7.266857624053955
    5. '
' → logprob: -7.766857624053955
    6. 'raise' → logprob: -7.766857624053955
    7. '(' → logprob: -8.266857147216797
    8. ' ' → logprob: -8.391857147216797
    9. '#' → logprob: -8.641857147216797
    10. '```' → logprob: -8.891857147216797

Token 3191: ' isinstance' (ID: 25889)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.43509089946746826
    2. 'is' → logprob: -1.1850908994674683
    3. ' isinstance' → logprob: -3.185091018676758
    4. ' ast' → logprob: -5.685091018676758
    5. 'has' → logprob: -6.310091018676758
    6. ' hasattr' → logprob: -8.185091018676758
    7. 'type' → logprob: -8.935091018676758
    8. '(ast' → logprob: -10.560091018676758
    9. '   ' → logprob: -10.935091018676758
    10. 'None' → logprob: -12.060091018676758

Token 3192: '(ast' (ID: 118219)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.6501631736755371
    2. 'ast' → logprob: -1.400163173675537
    3. ' ast' → logprob: -1.900163173675537
    4. '(ast' → logprob: -2.900163173675537
    5. ' Cell' → logprob: -4.275163173675537
    6. '(Cell' → logprob: -4.900163173675537
    7. 'type' → logprob: -6.275163173675537
    8. 'int' → logprob: -6.900163173675537
    9. 'list' → logprob: -7.025163173675537
    10. 'str' → logprob: -7.400163173675537

Token 3193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015151552855968475
    2. ' is' → logprob: -5.515151500701904
    3. '.__' → logprob: -5.640151500701904
    4. '(Cell' → logprob: -6.515151500701904
    5. ' ,' → logprob: -7.015151500701904
    6. 'is' → logprob: -7.015151500701904
    7. ',val' → logprob: -7.390151500701904
    8. 'Cell' → logprob: -7.515151500701904
    9. '   ' → logprob: -7.765151500701904
    10. ').__' → logprob: -7.890151500701904

Token 3194: ' list' (ID: 1562)
  Prédit: 'Cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cell' → logprob: -0.5147911310195923
    2. 'tuple' → logprob: -1.3897911310195923
    3. 'int' → logprob: -2.0147910118103027
    4. 'str' → logprob: -4.014791011810303
    5. 'list' → logprob: -6.389791011810303
    6. ' tuple' → logprob: -9.764791488647461
    7. ' Cell' → logprob: -10.389791488647461
    8. 'float' → logprob: -11.139791488647461
    9. 'Tuple' → logprob: -11.264791488647461
    10. '(Cell' → logprob: -11.514791488647461

Token 3195: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3670056164264679
    2. '   ' → logprob: -2.2420055866241455
    3. ',' → logprob: -2.3670055866241455
    4. '):' → logprob: -3.1170055866241455
    5. '):
' → logprob: -3.2420055866241455
    6. '       ' → logprob: -4.742005825042725
    7. ':' → logprob: -4.867005825042725
    8. 'and' → logprob: -5.742005825042725
    9. ':
' → logprob: -6.492005825042725
    10. ' and' → logprob: -7.367005825042725

Token 3196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05207620561122894
    2. 'val' → logprob: -3.6770761013031006
    3. ' val' → logprob: -4.80207633972168
    4. 'return' → logprob: -4.92707633972168
    5. 'v' → logprob: -5.05207633972168
    6. '   ' → logprob: -6.30207633972168
    7. ' return' → logprob: -7.42707633972168
    8. 'i' → logprob: -8.30207633972168
    9. ' v' → logprob: -9.05207633972168
    10. 'for' → logprob: -9.05207633972168

Token 3197: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0063267904333770275
    2. ' val' → logprob: -5.506326675415039
    3. 'return' → logprob: -6.631326675415039
    4. 'v' → logprob: -7.381326675415039
    5. '       ' → logprob: -9.381326675415039
    6. 'result' → logprob: -9.756326675415039
    7. 'if' → logprob: -9.881326675415039
    8. 'res' → logprob: -10.006326675415039
    9. '   ' → logprob: -10.881326675415039
    10. ' return' → logprob: -11.881326675415039

Token 3198: ' product' (ID: 1888)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.45976313948631287
    2. 'return' → logprob: -1.0847631692886353
    3. 'for' → logprob: -4.334763050079346
    4. 'if' → logprob: -4.459763050079346
    5. 'v' → logprob: -5.584763050079346
    6. 'result' → logprob: -7.334763050079346
    7. 'res' → logprob: -7.834763050079346
    8. '   ' → logprob: -8.084763526916504
    9. 'i' → logprob: -8.709763526916504
    10. '       ' → logprob: -8.959763526916504

Token 3199: ' or' (ID: 503)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6833668351173401
    2. ' =' → logprob: -1.6833667755126953
    3. '   ' → logprob: -2.6833667755126953
    4. '*' → logprob: -3.4333667755126953
    5. ' *=' → logprob: -3.4333667755126953
    6. '*=' → logprob: -3.4333667755126953
    7. ':' → logprob: -3.6833667755126953
    8. ' ' → logprob: -3.9333667755126953
    9. ',' → logprob: -4.058366775512695
    10. '[' → logprob: -4.308366775512695

Token 3200: ' sum' (ID: 4215)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.21522928774356842
    2. 'Cell' → logprob: -2.7152292728424072
    3. 'sum' → logprob: -3.2152292728424072
    4. 'val' → logprob: -4.090229511260986
    5. 'factor' → logprob: -4.090229511260986
    6. ' Cell' → logprob: -4.215229511260986
    7. '(ast' → logprob: -4.715229511260986
    8. 'int' → logprob: -5.215229511260986
    9. 'expr' → logprob: -5.840229511260986
    10. '#' → logprob: -6.215229511260986

Token 3201: ' list' (ID: 1562)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7331370115280151
    2. '       ' → logprob: -0.8581370115280151
    3. '   ' → logprob: -3.2331371307373047
    4. 'v' → logprob: -4.108137130737305
    5. ':
' → logprob: -4.858137130737305
    6. '           ' → logprob: -5.233137130737305
    7. 'return' → logprob: -5.608137130737305
    8. 'result' → logprob: -5.608137130737305
    9. 'for' → logprob: -5.983137130737305
    10. 'value' → logprob: -5.983137130737305

Token 3202: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6841299533843994
    2. '   ' → logprob: -1.6841299533843994
    3. 'val' → logprob: -2.1841299533843994
    4. 'return' → logprob: -3.0591299533843994
    5. ':
' → logprob: -3.4341299533843994
    6. 'for' → logprob: -3.8091299533843994
    7. 'value' → logprob: -3.9341299533843994
    8. ':' → logprob: -4.05912971496582
    9. '{
' → logprob: -4.68412971496582
    10. 'v' → logprob: -4.68412971496582

Token 3203: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0451974868774414
    2. ':
' → logprob: -1.5451974868774414
    3. '   ' → logprob: -2.5451974868774414
    4. ':' → logprob: -2.5451974868774414
    5. '       ' → logprob: -2.5451974868774414
    6. '[
' → logprob: -2.7951974868774414
    7. ' val' → logprob: -3.6701974868774414
    8. ' for' → logprob: -4.045197486877441
    9. 'val' → logprob: -4.170197486877441
    10. '(
' → logprob: -4.420197486877441

Token 3204: ' val' (ID: 1459)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1882861852645874
    2. 'val' (adapté à ' val') → logprob: -1.8132861852645874
    3. 'i' → logprob: -5.563286304473877
    4. '   ' → logprob: -6.938286304473877
    5. 'return' → logprob: -7.063286304473877
    6. 'if' → logprob: -7.313286304473877
    7. ' val' → logprob: -7.688286304473877
    8. '(
' → logprob: -7.938286304473877
    9. '*' → logprob: -8.688285827636719
    10. 'for' → logprob: -8.688285827636719

Token 3205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889066636562347
    2. ' =' → logprob: -2.578890562057495
    3. '   ' → logprob: -15.203890800476074
    4. ' ' → logprob: -15.828890800476074
    5. '=
' → logprob: -16.203889846801758
    6. ',' → logprob: -16.203889846801758
    7. '*=' → logprob: -16.203889846801758
    8. '
' → logprob: -16.953889846801758
    9. ')' → logprob: -17.078889846801758
    10. '=len' → logprob: -17.203889846801758

Token 3206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043039269745349884
    2. '0' → logprob: -3.168039321899414
    3. ' ' → logprob: -10.293039321899414
    4. 'eval' → logprob: -13.043039321899414
    5. '(' → logprob: -13.543039321899414
    6. '   ' → logprob: -14.043039321899414
    7. 'val' → logprob: -14.168039321899414
    8. 'int' → logprob: -14.793039321899414
    9. '(eval' → logprob: -15.168039321899414
    10. '```' → logprob: -16.168039321899414

Token 3207: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016054192557930946
    2. '0' → logprob: -4.141054153442383
    3. ' ' → logprob: -11.266054153442383
    4. '(' → logprob: -13.391054153442383
    5. 'int' → logprob: -13.641054153442383
    6. '   ' → logprob: -13.891054153442383
    7. 'eval' → logprob: -14.391054153442383
    8. 'val' → logprob: -14.641054153442383
    9. 'ans' → logprob: -15.266054153442383
    10. '```' → logprob: -15.578554153442383

Token 3208: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5144309401512146
    2. '<|end|>' → logprob: -1.5144309997558594
    3. '   ' → logprob: -2.7644309997558594
    4. ' for' → logprob: -2.7644309997558594
    5. 'for' → logprob: -3.0144309997558594
    6. '       ' → logprob: -6.639430999755859
    7. ')' → logprob: -6.889430999755859
    8. ' ' → logprob: -7.389430999755859
    9. '<|end|>' → logprob: -7.639430999755859
    10. '	for' → logprob: -7.889430999755859

Token 3209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2232576310634613
    2. '   ' → logprob: -2.223257541656494
    3. 'for' → logprob: -2.973257541656494
    4. ' for' → logprob: -4.348257541656494
    5. '
' → logprob: -4.723257541656494
    6. '<|end|>' → logprob: -4.848257541656494
    7. '           ' → logprob: -5.973257541656494
    8. ')' → logprob: -6.598257541656494
    9. ',' → logprob: -6.973257541656494
    10. ' ' → logprob: -6.973257541656494

Token 3210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.034592388459714e-06
    2. ' for' → logprob: -12.625005722045898
    3. '       ' → logprob: -13.125005722045898
    4. '   ' → logprob: -14.625005722045898
    5. 'i' → logprob: -16.3750057220459
    6. '
' → logprob: -16.3750057220459
    7. '	for' → logprob: -16.6250057220459
    8. '```' → logprob: -17.6250057220459
    9. '           ' → logprob: -17.7500057220459
    10. 'if' → logprob: -20.0000057220459

Token 3211: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6971343755722046
    2. 'node' → logprob: -1.4471343755722046
    3. 'item' → logprob: -1.6971343755722046
    4. 'v' → logprob: -2.697134494781494
    5. 'elem' → logprob: -4.447134494781494
    6. 'expr' → logprob: -6.447134494781494
    7. 'part' → logprob: -6.697134494781494
    8. 'e' → logprob: -7.322134494781494
    9. 'sub' → logprob: -7.822134494781494
    10. 'el' → logprob: -8.197134017944336

Token 3212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5761953592300415
    2. 'in' → logprob: -0.8261953592300415
    3. '[' → logprob: -9.32619571685791
    4. 'a' → logprob: -10.20119571685791
    5. '_in' → logprob: -10.20119571685791
    6. '   ' → logprob: -11.20119571685791
    7. '	in' → logprob: -11.45119571685791
    8. 'i' → logprob: -11.70119571685791
    9. ')' → logprob: -11.70119571685791
    10. 'val' → logprob: -11.82619571685791

Token 3213: ' ast' (ID: 12004)
  Prédit: 'ast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ast' → logprob: -0.00112735980655998
    2. 'a' → logprob: -7.251127243041992
    3. ' ast' → logprob: -7.876127243041992
    4. 'eval' → logprob: -10.501127243041992
    5. '(ast' → logprob: -12.251127243041992
    6. '[' → logprob: -13.126127243041992
    7. 'astar' → logprob: -14.126127243041992
    8. '[a' → logprob: -14.376127243041992
    9. 'astr' → logprob: -14.501127243041992
    10. 'aster' → logprob: -14.751127243041992

Token 3214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.050905466079712
    2. ':
' → logprob: -1.300905466079712
    3. '[' → logprob: -1.550905466079712
    4. '+' → logprob: -2.050905466079712
    5. '           ' → logprob: -3.675905466079712
    6. '       ' → logprob: -6.050905227661133
    7. ' +' → logprob: -6.425905227661133
    8. '):
' → logprob: -6.550905227661133
    9. ',' → logprob: -6.675905227661133
    10. '+=' → logprob: -7.050905227661133

Token 3215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14590266346931458
    2. '       ' → logprob: -3.020902633666992
    3. 'if' → logprob: -3.270902633666992
    4. ' if' → logprob: -3.395902633666992
    5. 'val' → logprob: -5.395902633666992
    6. ' val' → logprob: -5.645902633666992
    7. '	       ' → logprob: -6.645902633666992
    8. '+' → logprob: -6.770902633666992
    9. ':
' → logprob: -7.645902633666992
    10. '=' → logprob: -7.770902633666992

Token 3216: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3000169098377228
    2. 'val' (adapté à ' val') → logprob: -1.4250168800354004
    3. '           ' → logprob: -4.4250168800354
    4. ' if' → logprob: -5.6750168800354
    5. 'if' → logprob: -6.1750168800354
    6. '               ' → logprob: -7.4250168800354
    7. 'return' → logprob: -9.050017356872559
    8. '(val' → logprob: -9.425017356872559
    9. '            ' → logprob: -9.550017356872559
    10. '   ' → logprob: -9.550017356872559

Token 3217: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02596060186624527
    2. '+=' → logprob: -4.150960445404053
    3. ' =' → logprob: -4.650960445404053
    4. ' +=' → logprob: -8.275960922241211
    5. '   ' → logprob: -10.400960922241211
    6. '=(' → logprob: -11.525960922241211
    7. '+=(' → logprob: -12.150960922241211
    8. '=
' → logprob: -12.900960922241211
    9. 'import' → logprob: -12.900960922241211
    10. '%=' → logprob: -13.275960922241211

Token 3218: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.028335237875580788
    2. ' eval' → logprob: -4.028335094451904
    3. 'a' → logprob: -4.653335094451904
    4. ' a' → logprob: -7.778335094451904
    5. '(eval' → logprob: -8.653335571289062
    6. '(a' → logprob: -12.403335571289062
    7. 'int' → logprob: -13.528335571289062
    8. ' (' → logprob: -13.653335571289062
    9. ' ' → logprob: -13.903335571289062
    10. 'evaluate' → logprob: -14.153335571289062

Token 3219: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0012627330143004656
    2. 'a' → logprob: -7.626262664794922
    3. '(a' → logprob: -7.876262664794922
    4. '_a' → logprob: -8.501262664794922
    5. 'expr' → logprob: -9.251262664794922
    6. '_ast' → logprob: -10.001262664794922
    7. 'Expr' → logprob: -10.626262664794922
    8. '_' → logprob: -11.626262664794922
    9. '_EXPR' → logprob: -12.251262664794922
    10. ''_' → logprob: -12.751262664794922

Token 3220: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08349242806434631
    2. 'a' → logprob: -2.9584925174713135
    3. '(' → logprob: -3.5834925174713135
    4. '('' → logprob: -8.583492279052734
    5. ' a' → logprob: -9.333492279052734
    6. ' (' → logprob: -9.458492279052734
    7. '(
' → logprob: -10.458492279052734
    8. ''' → logprob: -10.708492279052734
    9. ' ' → logprob: -11.708492279052734
    10. '
' → logprob: -12.333492279052734

Token 3221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029227565973997116
    2. ')%' → logprob: -4.2792277336120605
    3. ' %' → logprob: -5.1542277336120605
    4. '%' → logprob: -5.1542277336120605
    5. '[' → logprob: -6.5292277336120605
    6. ' )' → logprob: -6.6542277336120605
    7. ')
' → logprob: -7.7792277336120605
    8. '   ' → logprob: -8.904227256774902
    9. '           ' → logprob: -10.654227256774902
    10. '       ' → logprob: -11.029227256774902

Token 3222: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38896751403808594
    2. ' %' → logprob: -1.263967514038086
    3. '           ' → logprob: -3.388967514038086
    4. '       ' → logprob: -6.138967514038086
    5. ')' → logprob: -6.888967514038086
    6. '```' → logprob: -7.138967514038086
    7. '   ' → logprob: -7.263967514038086
    8. ')%' → logprob: -8.263967514038086
    9. '
' → logprob: -8.513967514038086
    10. ' %=' → logprob: -9.138967514038086

Token 3223: ' return' (ID: 622)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6514005064964294
    2. ' %' → logprob: -0.7764005064964294
    3. '
' → logprob: -4.651400566101074
    4. ' val' → logprob: -6.151400566101074
    5. ')' → logprob: -6.276400566101074
    6. '```' → logprob: -6.401400566101074
    7. 'val' → logprob: -6.651400566101074
    8. ' %=' → logprob: -7.526400566101074
    9. '   ' → logprob: -7.526400566101074
    10. ')%' → logprob: -8.901400566101074

Token 3224: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.31328558921813965
    2. ' val' → logprob: -1.3132855892181396
    3. '(val' → logprob: -10.688285827636719
    4. ' (' → logprob: -14.188285827636719
    5. '0' → logprob: -15.688285827636719
    6. '(' → logprob: -15.938285827636719
    7. '_val' → logprob: -17.31328582763672
    8. '	val' → logprob: -18.06328582763672
    9. ' ' → logprob: -18.43828582763672
    10. '[val' → logprob: -18.56328582763672

Token 3225: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.045673564076423645
    2. '
' → logprob: -3.5456736087799072
    3. ' %' → logprob: -4.920673370361328
    4. ')' → logprob: -5.545673370361328
    5. '<|end|>' → logprob: -5.670673370361328
    6. '   ' → logprob: -8.295673370361328
    7. '\n' → logprob: -8.420673370361328
    8. '%
' → logprob: -8.795673370361328
    9. '```' → logprob: -8.920673370361328
    10. '<|end|>' → logprob: -9.795673370361328

Token 3226: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.04858805239200592
    2. ' MOD' → logprob: -3.0485880374908447
    3. '_MOD' → logprob: -15.048587799072266
    4. '201' → logprob: -15.423587799072266
    5. '.MOD' → logprob: -16.173587799072266
    6. ' ' → logprob: -16.673587799072266
    7. '(M' → logprob: -17.548587799072266
    8. 'MO' → logprob: -19.298587799072266
    9. 'MD' → logprob: -19.923587799072266
    10. ' (' → logprob: -19.923587799072266

Token 3227: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3228: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5329245924949646
    2. '<|end|>' → logprob: -1.4079246520996094
    3. '```' → logprob: -3.0329246520996094
    4. '
' → logprob: -3.0329246520996094
    5. 'def' → logprob: -3.5329246520996094
    6. '#' → logprob: -4.032924652099609
    7. ':' → logprob: -4.907924652099609
    8. '   ' → logprob: -5.907924652099609
    9. '%' → logprob: -6.407924652099609
    10. '\n' → logprob: -6.532924652099609

Token 3229: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2060108184814453
    2. '<|end|>' → logprob: -2.4560108184814453
    3. ':' → logprob: -3.7060108184814453
    4. '```' → logprob: -3.8310108184814453
    5. 'def' → logprob: -3.9560108184814453
    6. '#' (adapté à ' #') → logprob: -4.706010818481445
    7. '
' → logprob: -4.831010818481445
    8. '   ' → logprob: -5.206010818481445
    9. ':return' → logprob: -5.956010818481445
    10. 'return' → logprob: -6.706010818481445

Token 3230: ' else' (ID: 1203)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.18938013911247253
    2. 'return' → logprob: -2.689380168914795
    3. ')' → logprob: -2.939380168914795
    4. 'Cell' → logprob: -3.939380168914795
    5. 'def' → logprob: -4.814380168914795
    6. '   ' → logprob: -5.064380168914795
    7. 'val' → logprob: -5.689380168914795
    8. '```' → logprob: -5.689380168914795
    9. ':return' → logprob: -6.689380168914795
    10. ' None' → logprob: -6.814380168914795

Token 3231: ' default' (ID: 2787)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023958850651979446
    2. '   ' → logprob: -4.023958683013916
    3. '       ' → logprob: -5.523958683013916
    4. ' return' → logprob: -6.398958683013916
    5. 'None' → logprob: -9.648959159851074
    6. '0' → logprob: -9.898959159851074
    7. '           ' → logprob: -11.648959159851074
    8. '
' → logprob: -12.523959159851074
    9. '```' → logprob: -13.148959159851074
    10. '     ' → logprob: -13.398959159851074

Token 3232: ' fallback' (ID: 66264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009459976106882095
    2. 'None' → logprob: -5.634459972381592
    3. '   ' → logprob: -5.884459972381592
    4. ' return' → logprob: -6.134459972381592
    5. ':return' → logprob: -7.384459972381592
    6. '0' → logprob: -9.00946044921875
    7. ' None' → logprob: -9.25946044921875
    8. '
' → logprob: -11.63446044921875
    9. '```' → logprob: -11.63446044921875
    10. ':' → logprob: -11.75946044921875

Token 3233: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4849178194999695
    2. 'return' → logprob: -1.3599178791046143
    3. 'None' → logprob: -2.6099178791046143
    4. '
' → logprob: -4.109917640686035
    5. '0' → logprob: -4.484917640686035
    6. ' return' → logprob: -4.859917640686035
    7. ':return' → logprob: -5.109917640686035
    8. ':' → logprob: -5.734917640686035
    9. ':
' → logprob: -6.109917640686035
    10. ' None' → logprob: -6.234917640686035

Token 3234: '   ' (ID: 271)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0180448293685913
    2. ':' → logprob: -1.2680448293685913
    3. ':return' → logprob: -2.018044948577881
    4. 'return' → logprob: -2.143044948577881
    5. '   ' → logprob: -3.518044948577881
    6. 'def' → logprob: -3.643044948577881
    7. ':
' → logprob: -4.143044948577881
    8. '(None' → logprob: -5.018044948577881
    9. '```' → logprob: -5.018044948577881
    10. ' None' → logprob: -5.393044948577881

Token 3235: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0045346771366894245
    2. '   ' → logprob: -5.504534721374512
    3. ' return' → logprob: -7.754534721374512
    4. '0' → logprob: -11.379534721374512
    5. ':return' → logprob: -11.879534721374512
    6. '       ' → logprob: -12.379534721374512
    7. 'None' → logprob: -13.504534721374512
    8. '	return' → logprob: -14.004534721374512
    9. '
' → logprob: -14.129534721374512
    10. '```' → logprob: -14.504534721374512

Token 3236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.274932143744081e-05
    2. ' ' → logprob: -10.125042915344238
    3. 'ast' → logprob: -13.625042915344238
    4. 'None' → logprob: -13.750042915344238
    5. ' ast' → logprob: -16.250041961669922
    6. '(ast' → logprob: -16.375041961669922
    7. '(' → logprob: -16.500041961669922
    8. 'eval' → logprob: -17.750041961669922
    9. ' None' → logprob: -18.375041961669922
    10. 'val' → logprob: -18.500041961669922

Token 3237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.968312951968983e-06
    2. 'ast' → logprob: -11.875009536743164
    3. 'None' → logprob: -12.875009536743164
    4. ' ' → logprob: -15.750009536743164
    5. '(ast' → logprob: -16.125009536743164
    6. 'int' → logprob: -16.875009536743164
    7. '(' → logprob: -17.750009536743164
    8. 'eval' → logprob: -17.875009536743164
    9. ' ast' → logprob: -18.250009536743164
    10. 'AST' → logprob: -18.875009536743164

Token 3238: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9720640182495117
    2. '<|end|>' → logprob: -0.9720640182495117
    3. '#' → logprob: -1.8470640182495117
    4. '
' → logprob: -2.8470640182495117
    5. 'def' → logprob: -4.347064018249512
    6. '```' → logprob: -5.722064018249512
    7. '\n' → logprob: -5.972064018249512
    8. ':' → logprob: -6.097064018249512
    9. '.' → logprob: -6.347064018249512
    10. '<|end|>' → logprob: -7.097064018249512

Token 3239: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9977946281433105
    2. ')' → logprob: -1.6227946281433105
    3. '#' → logprob: -1.8727946281433105
    4. ':' → logprob: -2.1227946281433105
    5. '<|end|>' → logprob: -2.4977946281433105
    6. '\n' → logprob: -3.3727946281433105
    7. '(' → logprob: -4.6227946281433105
    8. 'def' → logprob: -4.7477946281433105
    9. '\' → logprob: -5.2477946281433105
    10. '[' → logprob: -5.4977946281433105

Token 3240: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.26134952902793884
    2. ' main' → logprob: -2.1363494396209717
    3. 'eval' → logprob: -3.0113494396209717
    4. 'evaluate' → logprob: -3.2613494396209717
    5. 'parse' → logprob: -4.011349678039551
    6. 'solve' → logprob: -6.011349678039551
    7. ' eval' → logprob: -6.261349678039551
    8. ' evaluate' → logprob: -7.386349678039551
    9. ' parse' → logprob: -7.636349678039551
    10. 'read' → logprob: -8.13634967803955

Token 3241: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.023310933262109756
    2. '():
' → logprob: -3.773310899734497
    3. '()' → logprob: -10.148310661315918
    4. '(argv' → logprob: -11.898310661315918
    5. '(' → logprob: -12.273310661315918
    6. ' ():' → logprob: -12.398310661315918
    7. '(args' → logprob: -12.648310661315918
    8. 'def' → logprob: -13.273310661315918
    9. '():
' → logprob: -13.773310661315918
    10. ':' → logprob: -14.023310661315918

Token 3242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013681987300515175
    2. '```' → logprob: -4.763681888580322
    3. 'import' → logprob: -5.763681888580322
    4. ' lines' → logprob: -7.263681888580322
    5. '	lines' → logprob: -7.263681888580322
    6. 'lines' → logprob: -8.51368236541748
    7. 'n' → logprob: -9.88868236541748
    8. '	import' → logprob: -10.26368236541748
    9. '``' → logprob: -10.26368236541748
    10. 'input' → logprob: -10.38868236541748

Token 3243: ' lines' (ID: 8698)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28408634662628174
    2. '   ' → logprob: -1.9090863466262817
    3. 'import' → logprob: -2.409086227416992
    4. ' n' → logprob: -5.034086227416992
    5. 'N' → logprob: -6.784086227416992
    6. 'lines' (adapté à ' lines') → logprob: -7.159086227416992
    7. ' import' → logprob: -8.409086227416992
    8. ' lines' → logprob: -8.909086227416992
    9. '```' → logprob: -9.159086227416992
    10. '	n' → logprob: -9.284086227416992

Token 3244: '_iter' (ID: 27043)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3471605181694031
    2. ' =' → logprob: -1.3471605777740479
    3. '   ' → logprob: -3.597160577774048
    4. '=[]
' → logprob: -5.847160339355469
    5. '=[]' → logprob: -5.972160339355469
    6. 'import' → logprob: -9.222160339355469
    7. '=
' → logprob: -9.347160339355469
    8. '[]' → logprob: -9.597160339355469
    9. '()' → logprob: -9.847160339355469
    10. '=[
' → logprob: -10.722160339355469

Token 3245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07101963460445404
    2. ' =' → logprob: -2.6960196495056152
    3. '   ' → logprob: -7.071019649505615
    4. '=
' → logprob: -9.071019172668457
    5. '=line' → logprob: -10.196019172668457
    6. '()' → logprob: -10.446019172668457
    7. '=sys' → logprob: -11.321019172668457
    8. '=input' → logprob: -11.821019172668457
    9. '```' → logprob: -12.321019172668457
    10. 'import' → logprob: -12.571019172668457

Token 3246: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.2349613457918167
    2. 'sys' → logprob: -1.7349613904953003
    3. '(iter' → logprob: -3.7349612712860107
    4. ' iter' → logprob: -5.35996150970459
    5. '(sys' → logprob: -5.48496150970459
    6. '=sys' → logprob: -9.35996150970459
    7. 'range' → logprob: -9.73496150970459
    8. ' sys' → logprob: -10.73496150970459
    9. '[int' → logprob: -10.98496150970459
    10. 'lambda' → logprob: -11.35996150970459

Token 3247: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0007625799626111984
    2. '(input' → logprob: -7.375762462615967
    3. 'sys' → logprob: -9.000762939453125
    4. '(stdin' → logprob: -12.125762939453125
    5. 'input' → logprob: -13.125762939453125
    6. '([' → logprob: -13.375762939453125
    7. '(range' → logprob: -14.125762939453125
    8. '(open' → logprob: -14.250762939453125
    9. '```' → logprob: -14.375762939453125
    10. '(iter' → logprob: -14.875762939453125

Token 3248: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.416665640543215e-05
    2. '().' → logprob: -10.75003433227539
    3. '.' → logprob: -12.37503433227539
    4. '.argv' → logprob: -12.75003433227539
    5. 'stdin' → logprob: -13.00003433227539
    6. '(stdin' → logprob: -13.50003433227539
    7. '.stdout' → logprob: -13.62503433227539
    8. '.readline' → logprob: -15.25003433227539
    9. ').' → logprob: -15.75003433227539
    10. ' .' → logprob: -16.12503433227539

Token 3249: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.10692112892866135
    2. ')' → logprob: -3.3569211959838867
    3. ')
' → logprob: -3.3569211959838867
    4. '.readlines' → logprob: -4.106921195983887
    5. '())
' → logprob: -4.481921195983887
    6. '())' → logprob: -5.606921195983887
    7. '().' → logprob: -8.606921195983887
    8. '   ' → logprob: -10.356921195983887
    9. '()' → logprob: -10.606921195983887
    10. '()
' → logprob: -10.731921195983887

Token 3250: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004022003151476383
    2. '()' → logprob: -5.879022121429443
    3. '())' → logprob: -7.004022121429443
    4. '())
' → logprob: -8.629021644592285
    5. '()
' → logprob: -9.504021644592285
    6. '('\' → logprob: -10.754021644592285
    7. '()\' → logprob: -10.879021644592285
    8. 'lines' → logprob: -11.754021644592285
    9. '(' → logprob: -13.129021644592285
    10. '()).' → logprob: -13.879021644592285

Token 3251: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.040776848793029785
    2. 'strip' → logprob: -3.7907767295837402
    3. 'lines' → logprob: -4.54077672958374
    4. 'read' → logprob: -5.04077672958374
    5. 'rstrip' → logprob: -8.790777206420898
    6. 'decode' → logprob: -9.415777206420898
    7. '(split' → logprob: -12.790777206420898
    8. '_lines' → logprob: -13.415777206420898
    9. '().' → logprob: -13.790777206420898
    10. 'line' → logprob: -13.790777206420898

Token 3252: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.008827523328363895
    2. '().' → logprob: -4.7588276863098145
    3. '())' → logprob: -9.758827209472656
    4. ''\' → logprob: -9.883827209472656
    5. '()' → logprob: -10.133827209472656
    6. '())
' → logprob: -10.383827209472656
    7. '()
' → logprob: -10.883827209472656
    8. '()\' → logprob: -12.008827209472656
    9. '("\' → logprob: -12.758827209472656
    10. '()).' → logprob: -13.008827209472656

Token 3253: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.32392441527918e-05
    2. '\n' → logprob: -9.875053405761719
    3. '
' → logprob: -14.000053405761719
    4. ''\' → logprob: -14.750053405761719
    5. 'ndef' → logprob: -16.12505340576172
    6. 't' → logprob: -17.00005340576172
    7. '''' → logprob: -17.00005340576172
    8. '"\' → logprob: -17.12505340576172
    9. 'x' → logprob: -17.37505340576172
    10. ''n' → logprob: -17.75005340576172

Token 3254: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.46250924468040466
    2. ''))' → logprob: -1.837509274482727
    3. ').' → logprob: -2.7125091552734375
    4. '))' → logprob: -2.9625091552734375
    5. ')' → logprob: -2.9625091552734375
    6. '')' → logprob: -3.8375091552734375
    7. '\n' → logprob: -4.9625091552734375
    8. ')').' → logprob: -6.2125091552734375
    9. ')\' → logprob: -6.4625091552734375
    10. '()' → logprob: -6.4625091552734375

Token 3255: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.75
    3. 'strip' → logprob: -17.375
    4. 'lines' → logprob: -19.25
    5. '(split' → logprob: -19.25
    6. 'spl' → logprob: -19.875
    7. 'rstrip' → logprob: -20.625
    8. '.split' → logprob: -21.375
    9. ')' → logprob: -21.625
    10. '```' → logprob: -22.5

Token 3256: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.03804344683885574
    2. 'lines' → logprob: -3.28804349899292
    3. '("\' → logprob: -13.913043022155762
    4. '()' → logprob: -14.288043022155762
    5. ''\' → logprob: -14.788043022155762
    6. '())' → logprob: -16.038043975830078
    7. '='\' → logprob: -17.288043975830078
    8. '('' → logprob: -18.038043975830078
    9. '()\' → logprob: -18.288043975830078
    10. ')' → logprob: -18.913043975830078

Token 3257: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.782141569303349e-05
    2. '\n' → logprob: -9.25009822845459
    3. '
' → logprob: -13.75009822845459
    4. '```' → logprob: -15.12509822845459
    5. 'ndef' → logprob: -15.75009822845459
    6. 'newline' → logprob: -16.625097274780273
    7. 'nt' → logprob: -18.375097274780273
    8. '``' → logprob: -18.375097274780273
    9. '[n' → logprob: -18.500097274780273
    10. ' n' → logprob: -18.500097274780273

Token 3258: ''))
' (ID: 15277)
  Prédit: ''))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))
' → logprob: -0.031115474179387093
    2. ''))' → logprob: -3.5311155319213867
    3. ')' → logprob: -7.781115531921387
    4. '))
' → logprob: -8.031115531921387
    5. '')' → logprob: -8.281115531921387
    6. '   ' → logprob: -8.531115531921387
    7. '))' → logprob: -9.656115531921387
    8. ''))
' → logprob: -10.406115531921387
    9. ''))

' → logprob: -10.531115531921387
    10. '')
' → logprob: -11.031115531921387

Token 3259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05557218939065933
    2. 'n' → logprob: -3.055572271347046
    3. '```' → logprob: -5.305572032928467
    4. 'while' → logprob: -7.180572032928467
    5. ' n' → logprob: -7.930572032928467
    6. 'try' → logprob: -8.430572509765625
    7. 'for' → logprob: -8.555572509765625
    8. 'N' → logprob: -9.180572509765625
    9. 'num' → logprob: -9.555572509765625
    10. '``' → logprob: -9.555572509765625

Token 3260: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3681389093399048
    2. '   ' → logprob: -1.2431389093399048
    3. 'while' (adapté à ' while') → logprob: -4.618138790130615
    4. 'try' → logprob: -5.118138790130615
    5. 'N' → logprob: -5.868138790130615
    6. 'for' → logprob: -8.743139266967773
    7. 'num' → logprob: -8.868139266967773
    8. 'lines' → logprob: -8.993139266967773
    9. 'def' → logprob: -9.618139266967773
    10. ' n' → logprob: -9.868139266967773

Token 3261: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004088373854756355
    2. ' True' → logprob: -5.504088401794434
    3. '(True' → logprob: -12.004088401794434
    4. '1' → logprob: -13.504088401794434
    5. '   ' → logprob: -13.504088401794434
    6. '
' → logprob: -14.129088401794434
    7. '=True' → logprob: -16.379087448120117
    8. 'true' → logprob: -16.379087448120117
    9. ' ' → logprob: -17.129087448120117
    10. '  ' → logprob: -17.754087448120117

Token 3262: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3957250118255615
    2. '   ' → logprob: -1.1457250118255615
    3. ':' → logprob: -4.895725250244141
    4. ':
' → logprob: -7.020725250244141
    5. 'try' → logprob: -8.27072525024414
    6. ',' → logprob: -9.77072525024414
    7. ' try' → logprob: -10.27072525024414
    8. '	try' → logprob: -10.52072525024414
    9. '	' → logprob: -11.52072525024414
    10. '=' → logprob: -11.52072525024414

Token 3263: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16062022745609283
    2. 'try' → logprob: -1.9106202125549316
    3. 'line' → logprob: -8.28562068939209
    4. '       ' → logprob: -9.78562068939209
    5. ' try' → logprob: -9.78562068939209
    6. '```' → logprob: -11.53562068939209
    7. '	try' → logprob: -11.66062068939209
    8. '   ' → logprob: -11.66062068939209
    9. ' line' → logprob: -12.66062068939209
    10. ' ' → logprob: -14.91062068939209

Token 3264: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.009753373451530933
    2. 'line' → logprob: -5.509753227233887
    3. 'n' → logprob: -5.759753227233887
    4. '   ' → logprob: -6.009753227233887
    5. 'N' → logprob: -10.634753227233887
    6. ' try' → logprob: -11.259753227233887
    7. '       ' → logprob: -11.759753227233887
    8. '```' → logprob: -13.009753227233887
    9. 'length' → logprob: -13.884753227233887
    10. '	try' → logprob: -14.009753227233887

Token 3265: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4063228368759155
    2. ':' → logprob: -1.7813228368759155
    3. ':
' → logprob: -2.531322956085205
    4. ' line' → logprob: -2.781322956085205
    5. '_line' → logprob: -4.781322956085205
    6. 'line' → logprob: -5.406322956085205
    7. '       ' → logprob: -6.531322956085205
    8. ' :' → logprob: -6.781322956085205
    9. '   ' → logprob: -6.906322956085205
    10. '():' → logprob: -6.906322956085205

Token 3266: '           ' (ID: 352)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5544089078903198
    2. '           ' → logprob: -1.1794089078903198
    3. '       ' → logprob: -2.4294090270996094
    4. ' line' → logprob: -3.8044090270996094
    5. '   ' → logprob: -5.304409027099609
    6. '```' → logprob: -6.804409027099609
    7. '	line' → logprob: -7.429409027099609
    8. '#line' → logprob: -7.804409027099609
    9. 'lines' → logprob: -8.17940902709961
    10. 'n' → logprob: -9.05440902709961

Token 3267: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.07070700824260712
    2. 'line' → logprob: -2.820707082748413
    3. 'N' → logprob: -5.320706844329834
    4. '       ' → logprob: -6.570706844329834
    5. '           ' → logprob: -6.820706844329834
    6. '   ' → logprob: -7.195706844329834
    7. 'l' → logprob: -8.445707321166992
    8. 'ln' → logprob: -9.195707321166992
    9. 'num' → logprob: -9.445707321166992
    10. ' n' → logprob: -9.695707321166992

Token 3268: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09125151485204697
    2. '=' → logprob: -2.4662516117095947
    3. '   ' → logprob: -6.591251373291016
    4. '_' → logprob: -8.216251373291016
    5. ' ' → logprob: -8.216251373291016
    6. ')' → logprob: -8.591251373291016
    7. '    ' → logprob: -9.966251373291016
    8. '       ' → logprob: -9.966251373291016
    9. ',' → logprob: -11.091251373291016
    10. '  ' → logprob: -11.216251373291016

Token 3269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6395974159240723
    2. ' =' → logprob: -0.7645974159240723
    3. 's' → logprob: -5.139597415924072
    4. '   ' → logprob: -7.264597415924072
    5. '       ' → logprob: -8.264596939086914
    6. ')' → logprob: -10.139596939086914
    7. '_' → logprob: -10.389596939086914
    8. '=line' → logprob: -10.764596939086914
    9. '=int' → logprob: -10.889596939086914
    10. '    ' → logprob: -12.514596939086914

Token 3270: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00041744497139006853
    2. ' next' → logprob: -8.000417709350586
    3. 'int' → logprob: -9.625417709350586
    4. '(next' → logprob: -11.500417709350586
    5. 'input' → logprob: -12.750417709350586
    6. 'lines' → logprob: -13.625417709350586
    7. 'n' → logprob: -14.125417709350586
    8. '.next' → logprob: -14.625417709350586
    9. '	next' → logprob: -15.750417709350586
    10. '[next' → logprob: -15.875417709350586

Token 3271: '(lines' (ID: 73839)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5986255407333374
    2. '(lines' → logprob: -0.8486255407333374
    3. ' lines' → logprob: -4.098625659942627
    4. '_lines' → logprob: -5.973625659942627
    5. ')' → logprob: -6.598625659942627
    6. ')
' → logprob: -7.348625659942627
    7. '	lines' → logprob: -7.848625659942627
    8. '(
' → logprob: -8.348625183105469
    9. 'n' → logprob: -9.098625183105469
    10. '
' → logprob: -9.473625183105469

Token 3272: '_iter' (ID: 27043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2671228349208832
    2. ')
' → logprob: -2.392122745513916
    3. '_' → logprob: -3.142122745513916
    4. '_token' → logprob: -4.017122745513916
    5. '()
' → logprob: -4.142122745513916
    6. '   ' → logprob: -4.267122745513916
    7. '_tokens' → logprob: -4.267122745513916
    8. '()' → logprob: -4.517122745513916
    9. '_
' → logprob: -5.142122745513916
    10. '(
' → logprob: -5.892122745513916

Token 3273: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05712466686964035
    2. ').' → logprob: -3.807124614715576
    3. '()
' → logprob: -3.932124614715576
    4. ')' → logprob: -4.807124614715576
    5. '       ' → logprob: -6.182124614715576
    6. '())
' → logprob: -6.307124614715576
    7. '()' → logprob: -7.182124614715576
    8. '           ' → logprob: -7.557124614715576
    9. '               ' → logprob: -8.807125091552734
    10. '`)
' → logprob: -10.307125091552734

Token 3274: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23518043756484985
    2. '       ' → logprob: -1.735180377960205
    3. 'if' → logprob: -3.610180377960205
    4. ' if' → logprob: -5.360180377960205
    5. 'n' → logprob: -6.735180377960205
    6. '```' → logprob: -9.360180854797363
    7. '   ' → logprob: -9.735180854797363
    8. ' n' → logprob: -10.110180854797363
    9. '		' → logprob: -10.610180854797363
    10. '               ' → logprob: -11.485180854797363

Token 3275: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8960669040679932
    2. 'if' → logprob: -1.2710669040679932
    3. '           ' → logprob: -1.3960669040679932
    4. ' if' → logprob: -2.771066904067993
    5. 'n' → logprob: -7.646066665649414
    6. 'while' → logprob: -9.021066665649414
    7. '
' → logprob: -9.646066665649414
    8. ' n' → logprob: -9.771066665649414
    9. '		' → logprob: -9.771066665649414
    10. '=' → logprob: -10.021066665649414

Token 3276: ' Stop' (ID: 22535)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.41734546422958374
    2. 'EOF' → logprob: -1.4173455238342285
    3. ' EOF' → logprob: -3.2923455238342285
    4. 'n' → logprob: -4.1673455238342285
    5. ' n' → logprob: -4.2923455238342285
    6. 'Exception' → logprob: -4.4173455238342285
    7. ' None' → logprob: -5.1673455238342285
    8. ':
' → logprob: -5.4173455238342285
    9. 'Stop' → logprob: -5.9173455238342285
    10. 'Whitespace' → logprob: -6.7923455238342285

Token 3277: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -7.584239938296378e-06
    2. 'Iterator' → logprob: -13.000007629394531
    3. 'Async' → logprob: -13.125007629394531
    4. 'iteration' → logprob: -13.250007629394531
    5. 'Iter' → logprob: -14.375007629394531
    6. 'Token' → logprob: -15.750007629394531
    7. '```' → logprob: -15.750007629394531
    8. '
' → logprob: -16.12500762939453
    9. 'I' → logprob: -16.25000762939453
    10. 'Error' → logprob: -16.37500762939453

Token 3278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6839340925216675
    2. ':
' → logprob: -1.3089340925216675
    3. '           ' → logprob: -1.9339340925216675
    4. '       ' → logprob: -2.558934211730957
    5. '               ' → logprob: -7.058934211730957
    6. '   ' → logprob: -8.058934211730957
    7. ' =' → logprob: -8.308934211730957
    8. '=' → logprob: -8.433934211730957
    9. '        
' → logprob: -8.808934211730957
    10. '		' → logprob: -8.933934211730957

Token 3279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10089359432458878
    2. '       ' → logprob: -2.350893497467041
    3. 'if' → logprob: -8.4758939743042
    4. ' if' → logprob: -8.6008939743042
    5. '   ' → logprob: -8.8508939743042
    6. '		' → logprob: -10.1008939743042
    7. '               ' → logprob: -10.1008939743042
    8. 'continue' → logprob: -10.4758939743042
    9. ' continue' → logprob: -11.4758939743042
    10. 'break' → logprob: -11.8508939743042

Token 3280: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46703478693962097
    2. '       ' → logprob: -1.4670348167419434
    3. 'break' (adapté à ' break') → logprob: -1.9670348167419434
    4. '   ' → logprob: -6.342034816741943
    5. ' break' → logprob: -7.467034816741943
    6. '               ' → logprob: -8.842034339904785
    7. '	break' → logprob: -10.217034339904785
    8. 'return' → logprob: -10.217034339904785
    9. '
' → logprob: -10.342034339904785
    10. '```' → logprob: -10.717034339904785

Token 3281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002894975244998932
    2. 'n' → logprob: -6.127894878387451
    3. 'if' → logprob: -8.25289535522461
    4. ' n' → logprob: -9.25289535522461
    5. ' if' → logprob: -9.37789535522461
    6. '   ' → logprob: -9.50289535522461
    7. '```' → logprob: -9.62789535522461
    8. '           ' → logprob: -9.87789535522461
    9. '
' → logprob: -10.00289535522461
    10. '        
' → logprob: -11.75289535522461

Token 3282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007737740525044501
    2. 'n' → logprob: -8.125773429870605
    3. ' if' → logprob: -8.625773429870605
    4. 'if' → logprob: -8.875773429870605
    5. '   ' → logprob: -9.750773429870605
    6. '```' → logprob: -10.375773429870605
    7. ' n' → logprob: -10.625773429870605
    8. '	' → logprob: -10.875773429870605
    9. '           ' → logprob: -11.375773429870605
    10. '        
' → logprob: -11.875773429870605

Token 3283: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20603595674037933
    2. 'if' (adapté à ' if') → logprob: -1.7060359716415405
    3. '       ' → logprob: -5.45603609085083
    4. 'try' → logprob: -8.956035614013672
    5. ' if' → logprob: -9.081035614013672
    6. '   ' → logprob: -9.706035614013672
    7. ' n' → logprob: -11.081035614013672
    8. '```' → logprob: -11.206035614013672
    9. 'num' → logprob: -12.206035614013672
    10. 'while' → logprob: -13.706035614013672

Token 3284: ' n' (ID: 297)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.204046830534935
    2. ' not' → logprob: -1.7040468454360962
    3. 'n' → logprob: -5.954046726226807
    4. ' n' → logprob: -10.954047203063965
    5. '   ' → logprob: -11.079047203063965
    6. '
' → logprob: -13.579047203063965
    7. 'n't' → logprob: -15.579047203063965
    8. '(not' → logprob: -16.20404624938965
    9. 'int' → logprob: -16.45404624938965
    10. '       ' → logprob: -17.20404624938965

Token 3285: '_line' (ID: 14418)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1557648777961731
    2. ' =' → logprob: -2.7807648181915283
    3. '==' → logprob: -3.1557648181915283
    4. ' <=' → logprob: -3.7807648181915283
    5. '_line' → logprob: -5.280765056610107
    6. '=' → logprob: -5.530765056610107
    7. '_' → logprob: -6.030765056610107
    8. '<=' → logprob: -6.155765056610107
    9. '_lines' → logprob: -6.780765056610107
    10. ' <' → logprob: -7.030765056610107

Token 3286: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.570216953754425
    2. '==' → logprob: -0.945216953754425
    3. '.strip' → logprob: -3.1952168941497803
    4. '.' → logprob: -5.570217132568359
    5. ' =' → logprob: -8.19521713256836
    6. '=' → logprob: -8.44521713256836
    7. '<=' → logprob: -8.94521713256836
    8. '```' → logprob: -9.07021713256836
    9. 'strip' → logprob: -9.44521713256836
    10. '==
' → logprob: -9.82021713256836

Token 3287: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.062827929854393
    2. ''' → logprob: -2.8128278255462646
    3. '0' → logprob: -8.312828063964844
    4. '''
' → logprob: -8.562828063964844
    5. ''\' → logprob: -8.812828063964844
    6. ' '':
' → logprob: -8.937828063964844
    7. '""' → logprob: -9.062828063964844
    8. '"' → logprob: -12.187828063964844
    9. ''''' → logprob: -12.562828063964844
    10. ''t' → logprob: -12.812828063964844

Token 3288: '0' (ID: 15)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.7373239398002625
    2. '\n' → logprob: -0.8623239398002625
    3. '':' → logprob: -3.4873239994049072
    4. ''' → logprob: -3.8623239994049072
    5. ''):
' → logprob: -3.8623239994049072
    6. '0' → logprob: -5.237323760986328
    7. ':
' → logprob: -5.237323760986328
    8. '''' → logprob: -5.737323760986328
    9. '\r' → logprob: -6.612323760986328
    10. '```' → logprob: -6.612323760986328

Token 3289: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.0257169958204031
    2. '':' → logprob: -3.77571702003479
    3. ':
' → logprob: -6.775716781616211
    4. '\n' → logprob: -7.025716781616211
    5. ':' → logprob: -8.650716781616211
    6. ''' → logprob: -9.525716781616211
    7. ''):
' → logprob: -9.650716781616211
    8. '':
' → logprob: -9.900716781616211
    9. '       ' → logprob: -10.025716781616211
    10. '):
' → logprob: -11.650716781616211

Token 3290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028023868799209595
    2. 'continue' → logprob: -6.37780237197876
    3. '		' → logprob: -7.75280237197876
    4. '       ' → logprob: -8.127802848815918
    5. ' continue' → logprob: -8.752802848815918
    6. ':
' → logprob: -9.502802848815918
    7. '   ' → logprob: -10.002802848815918
    8. '	continue' → logprob: -10.502802848815918
    9. '	       ' → logprob: -10.752802848815918
    10. '               ' → logprob: -10.877802848815918

Token 3291: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.17914405465126038
    2. '           ' → logprob: -2.4291441440582275
    3. '       ' → logprob: -2.9291441440582275
    4. 'return' → logprob: -4.179143905639648
    5. ' break' → logprob: -5.429143905639648
    6. '		' → logprob: -6.429143905639648
    7. '	break' → logprob: -7.804143905639648
    8. '   ' → logprob: -8.179143905639648
    9. '               ' → logprob: -8.554143905639648
    10. '	' → logprob: -8.554143905639648

Token 3292: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002913288539275527
    2. 'n' → logprob: -6.002913475036621
    3. '```' → logprob: -7.877913475036621
    4. '
' → logprob: -11.752913475036621
    5. '        
' → logprob: -11.752913475036621
    6. '   ' → logprob: -11.752913475036621
    7. '	' → logprob: -12.002913475036621
    8. ' n' → logprob: -12.002913475036621
    9. '(n' → logprob: -12.502913475036621
    10. '           ' → logprob: -12.502913475036621

Token 3293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25688445568084717
    2. 'n' → logprob: -1.5068844556808472
    3. '```' → logprob: -5.381884574890137
    4. '   ' → logprob: -9.006884574890137
    5. ' n' → logprob: -9.256884574890137
    6. '``' → logprob: -10.131884574890137
    7. 'num' → logprob: -10.506884574890137
    8. '`' → logprob: -11.006884574890137
    9. '	n' → logprob: -11.381884574890137
    10. '           ' → logprob: -12.006884574890137

Token 3294: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002223529852926731
    2. '       ' → logprob: -6.127223491668701
    3. ' n' → logprob: -11.50222396850586
    4. '   ' → logprob: -11.62722396850586
    5. '```' → logprob: -11.87722396850586
    6. 'N' → logprob: -12.25222396850586
    7. 'num' → logprob: -12.50222396850586
    8. '	n' → logprob: -13.50222396850586
    9. '``' → logprob: -14.12722396850586
    10. 'try' → logprob: -14.25222396850586

Token 3295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1279166042804718
    2. '=' → logprob: -2.2529165744781494
    3. '_' → logprob: -5.0029168128967285
    4. '=int' → logprob: -5.3779168128967285
    5. '_line' → logprob: -6.2529168128967285
    6. '_lines' → logprob: -6.8779168128967285
    7. ')' → logprob: -8.62791633605957
    8. ',' → logprob: -9.37791633605957
    9. '_=' → logprob: -9.62791633605957
    10. '   ' → logprob: -10.00291633605957

Token 3296: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020354038861114532
    2. ' int' → logprob: -8.500203132629395
    3. 'n' → logprob: -18.00020408630371
    4. '[int' → logprob: -18.62520408630371
    5. '(int' → logprob: -19.62520408630371
    6. '
' → logprob: -20.12520408630371
    7. '   ' → logprob: -20.37520408630371
    8. '=int' → logprob: -20.75020408630371
    9. '	int' → logprob: -21.12520408630371
    10. '```' → logprob: -21.12520408630371

Token 3297: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005933297798037529
    2. 'n' → logprob: -5.1309332847595215
    3. '(' → logprob: -13.00593376159668
    4. 'next' → logprob: -14.63093376159668
    5. '(
' → logprob: -14.75593376159668
    6. ' n' → logprob: -15.25593376159668
    7. '	n' → logprob: -15.38093376159668
    8. '
' → logprob: -15.50593376159668
    9. '`' → logprob: -15.63093376159668
    10. ')n' → logprob: -15.75593376159668

Token 3298: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.008093930780887604
    2. '(n' → logprob: -5.13309383392334
    3. '_n' → logprob: -6.38309383392334
    4. 'line' → logprob: -8.25809383392334
    5. 'n' → logprob: -9.00809383392334
    6. ')' → logprob: -10.63309383392334
    7. ')
' → logprob: -10.88309383392334
    8. 'Line' → logprob: -11.25809383392334
    9. ')n' → logprob: -11.63309383392334
    10. '
' → logprob: -12.00809383392334

Token 3299: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.059240102767944336
    2. ')' → logprob: -3.0592401027679443
    3. '       ' → logprob: -4.559240341186523
    4. ')
' → logprob: -9.434240341186523
    5. '   ' → logprob: -10.809240341186523
    6. ')`
' → logprob: -12.434240341186523
    7. '```' → logprob: -12.684240341186523
    8. '
' → logprob: -13.059240341186523
    9. ' )
' → logprob: -13.184240341186523
    10. '           ' → logprob: -13.434240341186523

Token 3300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010937928222119808
    2. 'lines' → logprob: -5.760937690734863
    3. '```' → logprob: -5.760937690734863
    4. ' lines' → logprob: -5.885937690734863
    5. '   ' → logprob: -6.885937690734863
    6. '	lines' → logprob: -7.635937690734863
    7. '``' → logprob: -9.135937690734863
    8. '(lines' → logprob: -9.385937690734863
    9. 'line' → logprob: -11.010937690734863
    10. '        
' → logprob: -11.635937690734863

Token 3301: ' data' (ID: 1238)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2811688780784607
    2. 'expr' → logprob: -1.7811689376831055
    3. 'grid' → logprob: -3.0311689376831055
    4. '       ' → logprob: -4.9061689376831055
    5. 'data' (adapté à ' data') → logprob: -4.9061689376831055
    6. 'raw' → logprob: -5.5311689376831055
    7. 'input' → logprob: -5.5311689376831055
    8. 'cells' → logprob: -6.0311689376831055
    9. 'expression' → logprob: -6.6561689376831055
    10. 'rows' → logprob: -7.6561689376831055

Token 3302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05873395502567291
    2. ' =' → logprob: -2.9337339401245117
    3. '   ' → logprob: -5.683733940124512
    4. '_lines' → logprob: -9.558733940124512
    5. '       ' → logprob: -9.558733940124512
    6. '=
' → logprob: -9.933733940124512
    7. '=[]
' → logprob: -10.058733940124512
    8. '    ' → logprob: -10.308733940124512
    9. '_' → logprob: -10.558733940124512
    10. '[]' → logprob: -10.683733940124512

Token 3303: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0883672758936882
    2. '[]
' → logprob: -3.338367223739624
    3. '[data' → logprob: -3.838367223739624
    4. '[next' → logprob: -4.088367462158203
    5. '[n' → logprob: -5.088367462158203
    6. '[line' → logprob: -7.213367462158203
    7. '[]' → logprob: -7.338367462158203
    8. '[t' → logprob: -7.713367462158203
    9. '[list' → logprob: -7.963367462158203
    10. '[new' → logprob: -7.963367462158203

Token 3304: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -2.1008713702030946e-06
    2. '(next' → logprob: -13.625001907348633
    3. ' next' → logprob: -14.000001907348633
    4. '[next' → logprob: -17.000001907348633
    5. '
' → logprob: -17.250001907348633
    6. '.next' → logprob: -18.500001907348633
    7. '	next' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.000001907348633
    9. 'n' → logprob: -19.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 3305: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.47453945875167847
    2. 'lines' → logprob: -0.9745394587516785
    3. ' lines' → logprob: -7.724539279937744
    4. '	lines' → logprob: -10.849539756774902
    5. '   ' → logprob: -14.849539756774902
    6. '.lines' → logprob: -15.349539756774902
    7. '_lines' → logprob: -15.849539756774902
    8. '       ' → logprob: -16.224538803100586
    9. ')' → logprob: -16.599538803100586
    10. '
' → logprob: -16.974538803100586

Token 3306: '_iter' (ID: 27043)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -1.0058940649032593
    2. '       ' → logprob: -1.1308940649032593
    3. ')' → logprob: -2.255894184112549
    4. ')]' → logprob: -2.755894184112549
    5. '_iter' → logprob: -2.755894184112549
    6. '           ' → logprob: -4.380894184112549
    7. '[' → logprob: -4.880894184112549
    8. '(data' → logprob: -4.880894184112549
    9. '   ' → logprob: -5.130894184112549
    10. '(n' → logprob: -5.255894184112549

Token 3307: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058626819401979446
    2. '()' → logprob: -3.308626890182495
    3. ').' → logprob: -4.183626651763916
    4. '())' → logprob: -5.808626651763916
    5. 'for' → logprob: -7.558626651763916
    6. '       ' → logprob: -7.808626651763916
    7. '(n' → logprob: -7.933626651763916
    8. '   ' → logprob: -8.183627128601074
    9. '()).' → logprob: -9.058627128601074
    10. ')]' → logprob: -9.183627128601074

Token 3308: 'replace' (ID: 15208)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.03804252669215202
    2. 'strip' → logprob: -3.2880425453186035
    3. 'r' → logprob: -14.038042068481445
    4. '.rstrip' → logprob: -15.038042068481445
    5. '(strip' → logprob: -18.163042068481445
    6. '_strip' → logprob: -18.288042068481445
    7. '
' → logprob: -19.038042068481445
    8. 'replace' → logprob: -19.788042068481445
    9. ' strip' → logprob: -19.913042068481445
    10. '.strip' → logprob: -21.038042068481445

Token 3309: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.22649522125720978
    2. '('.',' → logprob: -1.7264952659606934
    3. '('.' → logprob: -3.7264952659606934
    4. ''' → logprob: -8.476494789123535
    5. '('\' → logprob: -8.726494789123535
    6. '('',' → logprob: -9.476494789123535
    7. '(' → logprob: -9.851494789123535
    8. '("' → logprob: -10.476494789123535
    9. ''.' → logprob: -10.601494789123535
    10. '('_' → logprob: -10.726494789123535

Token 3310: ' ',' (ID: 14089)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.7370243072509766
    2. ''' → logprob: -0.8620243072509766
    3. '('.',' → logprob: -2.7370243072509766
    4. '('' → logprob: -4.112024307250977
    5. '('.' → logprob: -5.112024307250977
    6. ''#' → logprob: -6.362024307250977
    7. ''\' → logprob: -6.487024307250977
    8. '('\' → logprob: -6.487024307250977
    9. '.' → logprob: -6.612024307250977
    10. '   ' → logprob: -6.737024307250977

Token 3311: ' '.')' (ID: 176453)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.7272213101387024
    2. ''' → logprob: -0.9772213101387024
    3. '''' → logprob: -1.9772212505340576
    4. ' '')' → logprob: -6.977221488952637
    5. '''.' → logprob: -7.477221488952637
    6. ')' → logprob: -8.477221488952637
    7. ' '.')' → logprob: -9.477221488952637
    8. '''
' → logprob: -9.852221488952637
    9. ''''' → logprob: -10.477221488952637
    10. ''_' → logprob: -10.727221488952637

Token 3312: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5250787138938904
    2. ' for' → logprob: -1.1500787734985352
    3. '       ' → logprob: -2.400078773498535
    4. ')' → logprob: -7.775078773498535
    5. '           ' → logprob: -8.025078773498535
    6. '   ' → logprob: -8.900078773498535
    7. '               ' → logprob: -10.150078773498535
    8. ']' → logprob: -10.275078773498535
    9. '	for' → logprob: -10.400078773498535
    10. ' ' → logprob: -10.525078773498535

Token 3313: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005507678724825382
    2. '_data' → logprob: -8.500551223754883
    3. '_range' → logprob: -9.625551223754883
    4. '_line' → logprob: -9.750551223754883
    5. 'i' → logprob: -9.875551223754883
    6. '_
' → logprob: -9.875551223754883
    7. '_lines' → logprob: -10.000551223754883
    8. '_i' → logprob: -10.125551223754883
    9. '_in' → logprob: -10.875551223754883
    10. '_=' → logprob: -11.875551223754883

Token 3314: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009973756037652493
    2. 'range' → logprob: -4.759973526000977
    3. 'in' → logprob: -7.634973526000977
    4. 'i' → logprob: -8.009973526000977
    5. ' range' → logprob: -8.259973526000977
    6. ' in' → logprob: -8.634973526000977
    7. '_range' → logprob: -9.509973526000977
    8. '0' → logprob: -11.759973526000977
    9. ' _' → logprob: -12.009973526000977
    10. '_]' → logprob: -12.259973526000977

Token 3315: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '
' → logprob: -18.250003814697266
    4. '(range' → logprob: -18.750003814697266
    5. 'data' → logprob: -19.250003814697266
    6. '_range' → logprob: -20.125003814697266
    7. '_' → logprob: -20.375003814697266
    8. '   ' → logprob: -21.000003814697266
    9. '	range' → logprob: -21.500003814697266
    10. '```' → logprob: -22.625003814697266

Token 3316: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. '(n' → logprob: -14.875000953674316
    3. ' n' → logprob: -15.875000953674316
    4. '_n' → logprob: -17.75
    5. '$n' → logprob: -19.375
    6. ')n' → logprob: -19.875
    7. '	n' → logprob: -20.125
    8. '
' → logprob: -20.75
    9. '[n' → logprob: -21.75
    10. '       ' → logprob: -21.875

Token 3317: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005925900186412036
    2. '       ' → logprob: -7.8755927085876465
    3. ')' → logprob: -8.875592231750488
    4. ')]
' → logprob: -9.875592231750488
    5. ']' → logprob: -11.500592231750488
    6. '   ' → logprob: -12.000592231750488
    7. '')]' → logprob: -13.375592231750488
    8. ')])' → logprob: -14.250592231750488
    9. ')
' → logprob: -14.375592231750488
    10. ')],' → logprob: -14.875592231750488

Token 3318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12982290983200073
    2. '   ' → logprob: -2.1298229694366455
    3. 'cells' → logprob: -6.754822731018066
    4. '
' → logprob: -7.879822731018066
    5. 'lines' → logprob: -8.504822731018066
    6. 'expr' → logprob: -8.629822731018066
    7. 'cell' → logprob: -8.754822731018066
    8. 'data' → logprob: -9.004822731018066
    9. '#' → logprob: -9.504822731018066
    10. 'base' → logprob: -9.504822731018066

Token 3319: ' #' (ID: 1069)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.26713407039642334
    2. '   ' → logprob: -1.8921340703964233
    3. 'root' → logprob: -2.767134189605713
    4. 'cells' → logprob: -4.517134189605713
    5. '       ' → logprob: -5.392134189605713
    6. 'data' → logprob: -6.142134189605713
    7. 'lines' → logprob: -6.392134189605713
    8. 'parsed' → logprob: -7.767134189605713
    9. 'expr' → logprob: -8.017133712768555
    10. 'res' → logprob: -8.767133712768555

Token 3320: ' parse' (ID: 8420)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.36048799753189087
    2. 'cells' → logprob: -1.985487937927246
    3. 'root' → logprob: -2.110487937927246
    4. 'data' → logprob: -3.985487937927246
    5. 'lines' → logprob: -4.985487937927246
    6. '       ' → logprob: -5.485487937927246
    7. 'top' → logprob: -5.735487937927246
    8. 'base' → logprob: -5.860487937927246
    9. '   ' → logprob: -5.860487937927246
    10. 'expr' → logprob: -6.235487937927246

Token 3321: ' root' (ID: 6577)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.02359728328883648
    2. 'root' → logprob: -3.898597240447998
    3. 'expr' → logprob: -6.648597240447998
    4. '   ' → logprob: -7.398597240447998
    5. '       ' → logprob: -7.398597240447998
    6. 'cells' → logprob: -8.398597717285156
    7. 'tree' → logprob: -8.773597717285156
    8. ' cell' → logprob: -9.648597717285156
    9. 'parsed' → logprob: -11.148597717285156
    10. 'ast' → logprob: -11.148597717285156

Token 3322: ' cell' (ID: 4206)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6507996916770935
    2. 'cell' → logprob: -1.0257997512817383
    3. '       ' → logprob: -2.9007997512817383
    4. ',' → logprob: -3.4007997512817383
    5. '   ' → logprob: -4.150799751281738
    6. '(root' → logprob: -5.775799751281738
    7. '_cell' → logprob: -5.900799751281738
    8. '(cell' → logprob: -6.025799751281738
    9. ' cell' → logprob: -6.650799751281738
    10. '
' → logprob: -6.900799751281738

Token 3323: ',' (ID: 11)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.02582329325377941
    2. '       ' → logprob: -3.7758233547210693
    3. ',' → logprob: -6.77582311630249
    4. 'cell' → logprob: -7.40082311630249
    5. '   ' → logprob: -7.77582311630249
    6. ' root' → logprob: -8.150823593139648
    7. '
' → logprob: -10.525823593139648
    8. '```' → logprob: -10.525823593139648
    9. '_root' → logprob: -11.025823593139648
    10. '_,' → logprob: -11.900823593139648

Token 3324: ' baseline' (ID: 51356)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3438597321510315
    2. 'cell' → logprob: -2.0938596725463867
    3. 'res' → logprob: -2.8438596725463867
    4. ' root' → logprob: -3.0938596725463867
    5. 'base' → logprob: -3.7188596725463867
    6. '       ' → logprob: -4.343859672546387
    7. '0' → logprob: -4.968859672546387
    8. ' res' → logprob: -5.093859672546387
    9. ' cell' → logprob: -5.218859672546387
    10. ' base' → logprob: -5.843859672546387

Token 3325: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8807068467140198
    2. ',' → logprob: -1.130706787109375
    3. 'root' → logprob: -1.630706787109375
    4. 'cell' → logprob: -3.130706787109375
    5. '_,' → logprob: -5.005706787109375
    6. 'result' → logprob: -5.630706787109375
    7. '(root' → logprob: -5.755706787109375
    8. 'res' → logprob: -6.255706787109375
    9. ' =' → logprob: -6.380706787109375
    10. '0' → logprob: -7.005706787109375

Token 3326: ' set' (ID: 920)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024993713945150375
    2. '0' → logprob: -3.774993658065796
    3. 'len' → logprob: -6.399993896484375
    4. ' n' → logprob: -9.649993896484375
    5. '(n' → logprob: -11.899993896484375
    6. '
' → logprob: -12.774993896484375
    7. '   ' → logprob: -13.399993896484375
    8. '```' → logprob: -13.774993896484375
    9. 'data' → logprob: -13.899993896484375
    10. '1' → logprob: -13.899993896484375

Token 3327: ' to' (ID: 316)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0232068058103323
    2. 'n' → logprob: -4.02320671081543
    3. '(n' → logprob: -6.39820671081543
    4. '=' → logprob: -6.89820671081543
    5. '       ' → logprob: -7.02320671081543
    6. ',' → logprob: -7.39820671081543
    7. 'data' → logprob: -8.39820671081543
    8. 'def' → logprob: -8.77320671081543
    9. '(' → logprob: -9.27320671081543
    10. ' =' → logprob: -9.52320671081543

Token 3328: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04748072847723961
    2. 'len' → logprob: -3.547480821609497
    3. '0' → logprob: -4.047480583190918
    4. ' n' → logprob: -9.797480583190918
    5. '
' → logprob: -11.047480583190918
    6. '(n' → logprob: -11.172480583190918
    7. '1' → logprob: -12.547480583190918
    8. ' len' → logprob: -12.672480583190918
    9. 'base' → logprob: -12.922480583190918
    10. '(len' → logprob: -13.172480583190918

Token 3329: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4988083839416504
    2. 'len' → logprob: -0.9988083839416504
    3. '0' → logprob: -3.8738083839416504
    4. 'last' → logprob: -5.99880838394165
    5. 'base' → logprob: -8.498807907104492
    6. 'length' → logprob: -8.623807907104492
    7. ' n' → logprob: -8.748807907104492
    8. 'data' → logprob: -8.873807907104492
    9. '(n' → logprob: -9.623807907104492
    10. ' len' → logprob: -9.873807907104492

Token 3330: ' containing' (ID: 15683)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14843221008777618
    2. 'n' → logprob: -2.7734322547912598
    3. '       ' → logprob: -3.1484322547912598
    4. '=' → logprob: -3.8984322547912598
    5. '[n' → logprob: -6.02343225479126
    6. '
' → logprob: -6.27343225479126
    7. ' =' → logprob: -6.89843225479126
    8. '[' → logprob: -6.89843225479126
    9. 'len' → logprob: -7.02343225479126
    10. '(n' → logprob: -7.14843225479126

Token 3331: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2856312394142151
    2. '0' → logprob: -1.4106311798095703
    3. 'data' → logprob: -5.78563117980957
    4. 'base' → logprob: -7.53563117980957
    5. 'the' → logprob: -8.41063117980957
    6. 'len' → logprob: -8.53563117980957
    7. '(n' → logprob: -9.16063117980957
    8. ' n' → logprob: -9.41063117980957
    9. 'def' → logprob: -10.28563117980957
    10. '#' → logprob: -10.28563117980957

Token 3332: ' main' (ID: 2758)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.017627935856580734
    2. 'fraction' → logprob: -4.267627716064453
    3. 'main' → logprob: -6.892627716064453
    4. 'data' → logprob: -7.642627716064453
    5. 'expression' → logprob: -8.017627716064453
    6. '0' → logprob: -8.017627716064453
    7. 'vin' → logprob: -8.892627716064453
    8. 'base' → logprob: -9.017627716064453
    9. 'last' → logprob: -9.017627716064453
    10. 'first' → logprob: -9.142627716064453

Token 3333: ' line' (ID: 2543)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.20096345245838165
    2. 'cell' → logprob: -2.3259634971618652
    3. 'root' → logprob: -3.4509634971618652
    4. 'data' → logprob: -3.8259634971618652
    5. 'formula' → logprob: -5.200963497161865
    6. '
' → logprob: -5.450963497161865
    7. 'def' → logprob: -5.450963497161865
    8. 'expr' → logprob: -5.950963497161865
    9. 'operator' → logprob: -5.950963497161865
    10. 'code' → logprob: -6.325963497161865

Token 3334: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06997822970151901
    2. 'root' → logprob: -2.9449782371520996
    3. 'base' → logprob: -5.1949782371521
    4. '
' → logprob: -5.9449782371521
    5. 'cell' → logprob: -6.8199782371521
    6. '   ' → logprob: -6.9449782371521
    7. 'for' → logprob: -7.0699782371521
    8. '```' → logprob: -7.4449782371521
    9. ',' → logprob: -7.5699782371521
    10. '#' → logprob: -7.5699782371521

Token 3335: 'heur' (ID: 56347)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14370964467525482
    2. '0' → logprob: -2.018709659576416
    3. 'len' → logprob: -7.393709659576416
    4. ' n' → logprob: -9.393709182739258
    5. '
' → logprob: -9.643709182739258
    6. 'base' → logprob: -9.643709182739258
    7. '#' → logprob: -9.893709182739258
    8. '(n' → logprob: -10.393709182739258
    9. '   ' → logprob: -11.143709182739258
    10. '``' → logprob: -11.268709182739258

Token 3336: 'istic' (ID: 6207)
  Prédit: 'istic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istic' → logprob: -0.04996974393725395
    2. 'istics' → logprob: -3.1749696731567383
    3. '   ' → logprob: -5.549969673156738
    4. 'istique' → logprob: -7.424969673156738
    5. 'def' → logprob: -7.549969673156738
    6. '       ' → logprob: -7.924969673156738
    7. 'on' → logprob: -8.299969673156738
    8. 'st' → logprob: -8.424969673156738
    9. 'istically' → logprob: -8.424969673156738
    10. '```' → logprob: -9.049969673156738

Token 3337: ')
' (ID: 446)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2343558073043823
    2. ')
' → logprob: -1.4843558073043823
    3. '       ' → logprob: -1.7343558073043823
    4. ',' → logprob: -1.8593558073043823
    5. '=' → logprob: -2.359355926513672
    6. ')' → logprob: -3.984355926513672
    7. '#' → logprob: -5.109355926513672
    8. 'for' → logprob: -5.234355926513672
    9. 'n' → logprob: -5.359355926513672
    10. '(n' → logprob: -5.859355926513672

Token 3338: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6406876444816589
    2. '       ' → logprob: -0.7656876444816589
    3. ' root' → logprob: -5.390687465667725
    4. '   ' → logprob: -6.390687465667725
    5. 'cell' → logprob: -7.140687465667725
    6. '
' → logprob: -8.390687942504883
    7. 'res' → logprob: -8.765687942504883
    8. 'result' → logprob: -8.765687942504883
    9. 'parsed' → logprob: -9.140687942504883
    10. '```' → logprob: -9.265687942504883

Token 3339: ' base' (ID: 3611)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.14054687321186066
    2. 'base' (adapté à ' base') → logprob: -2.1405467987060547
    3. 'cell' → logprob: -4.765546798706055
    4. '       ' → logprob: -5.515546798706055
    5. 'baseline' → logprob: -8.265546798706055
    6. 'cells' → logprob: -8.890546798706055
    7. '   ' → logprob: -9.140546798706055
    8. 'lines' → logprob: -9.265546798706055
    9. 'res' → logprob: -9.515546798706055
    10. '#' → logprob: -9.890546798706055

Token 3340: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.1557283111615106e-05
    2. 'Line' → logprob: -10.875041961669922
    3. '_LINE' → logprob: -12.125041961669922
    4. '_lines' → logprob: -12.125041961669922
    5. '_' → logprob: -12.875041961669922
    6. '=_' → logprob: -13.125041961669922
    7. '```' → logprob: -13.375041961669922
    8. '_lineno' → logprob: -13.500041961669922
    9. '_Line' → logprob: -13.625041961669922
    10. '
' → logprob: -14.250041961669922

Token 3341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28119543194770813
    2. ' =' → logprob: -1.4061954021453857
    3. '   ' → logprob: -11.031195640563965
    4. '       ' → logprob: -12.031195640563965
    5. ',' → logprob: -12.031195640563965
    6. '=
' → logprob: -12.156195640563965
    7. '=len' → logprob: -13.656195640563965
    8. '_idx' → logprob: -13.781195640563965
    9. ')' → logprob: -13.906195640563965
    10. '=index' → logprob: -13.906195640563965

Token 3342: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5475292205810547
    2. '0' → logprob: -0.9225292205810547
    3. 'next' → logprob: -4.422529220581055
    4. 'len' → logprob: -5.047529220581055
    5. 'data' → logprob: -6.297529220581055
    6. '[n' → logprob: -6.797529220581055
    7. '[' → logprob: -7.297529220581055
    8. ' n' → logprob: -7.672529220581055
    9. '1' → logprob: -7.672529220581055
    10. 'max' → logprob: -8.047529220581055

Token 3343: '//' (ID: 393)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23241020739078522
    2. ' -' → logprob: -1.732410192489624
    3. '       ' → logprob: -3.732410192489624
    4. '
' → logprob: -5.482410430908203
    5. '   ' → logprob: -6.732410430908203
    6. '[' → logprob: -7.357410430908203
    7. '[n' → logprob: -9.482410430908203
    8. 'def' → logprob: -9.732410430908203
    9. ')' → logprob: -9.732410430908203
    10. ' ' → logprob: -9.982410430908203

Token 3344: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -15.875001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '```' → logprob: -18.000001907348633
    6. '3' → logprob: -18.375001907348633
    7. '
' → logprob: -18.625001907348633
    8. '0' → logprob: -18.875001907348633
    9. '    ' → logprob: -19.625001907348633
    10. '\
' → logprob: -20.125001907348633

Token 3345: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043138445471413434
    2. '
' → logprob: -8.000431060791016
    3. '   ' → logprob: -10.625431060791016
    4. '        
' → logprob: -11.125431060791016
    5. ',' → logprob: -11.250431060791016
    6. '<|end|>' → logprob: -11.500431060791016
    7. ')' → logprob: -12.375431060791016
    8. '#' → logprob: -12.375431060791016
    9. '+' → logprob: -12.500431060791016
    10. ' lines' → logprob: -13.000431060791016

Token 3346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010215920396149158
    2. '   ' → logprob: -4.635215759277344
    3. 'root' → logprob: -8.885215759277344
    4. 'parsed' → logprob: -9.135215759277344
    5. 'cell' → logprob: -9.385215759277344
    6. '
' → logprob: -10.760215759277344
    7. ',' → logprob: -10.885215759277344
    8. '```' → logprob: -11.135215759277344
    9. 'result' → logprob: -11.385215759277344
    10. ' cell' → logprob: -11.385215759277344

Token 3347: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.007006267085671425
    2. 'cell' → logprob: -5.0070061683654785
    3. '   ' → logprob: -8.257006645202637
    4. '       ' → logprob: -10.757006645202637
    5. ' root' → logprob: -11.757006645202637
    6. '```' → logprob: -14.257006645202637
    7. ' cell' → logprob: -15.132006645202637
    8. '
' → logprob: -15.132006645202637
    9. 'ast' → logprob: -15.382006645202637
    10. 'tree' → logprob: -15.507006645202637

Token 3348: '_cell' (ID: 39197)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21072310209274292
    2. '=' → logprob: -1.9607231616973877
    3. '_' → logprob: -4.210722923278809
    4. '_cell' → logprob: -4.710722923278809
    5. ',' → logprob: -4.835722923278809
    6. '<|end|>' → logprob: -5.835722923278809
    7. '.' → logprob: -6.210722923278809
    8. ' _' → logprob: -6.460722923278809
    9. '<|end|>' → logprob: -6.460722923278809
    10. '   ' → logprob: -6.710722923278809

Token 3349: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08252079039812088
    2. ' =' → logprob: -2.5825207233428955
    3. ',' → logprob: -6.082520961761475
    4. '=root' → logprob: -6.832520961761475
    5. '=
' → logprob: -9.082520484924316
    6. '   ' → logprob: -10.707520484924316
    7. '=sys' → logprob: -10.957520484924316
    8. '(root' → logprob: -10.957520484924316
    9. '<|end|>' → logprob: -11.082520484924316
    10. ')' → logprob: -11.332520484924316

Token 3350: ' ast' (ID: 12004)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.027385158464312553
    2. ' root' → logprob: -3.6523852348327637
    3. 'val' → logprob: -7.152385234832764
    4. '_' → logprob: -9.652384757995605
    5. '_root' → logprob: -9.652384757995605
    6. '(root' → logprob: -9.902384757995605
    7. 'res' → logprob: -10.402384757995605
    8. ' val' → logprob: -10.527384757995605
    9. '_val' → logprob: -11.277384757995605
    10. ' _' → logprob: -11.527384757995605

Token 3351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02077147178351879
    2. ' =' → logprob: -4.270771503448486
    3. ',' → logprob: -5.145771503448486
    4. '_' → logprob: -7.770771503448486
    5. '<|end|>' → logprob: -9.270771026611328
    6. '=
' → logprob: -9.645771026611328
    7. '_=' → logprob: -10.020771026611328
    8. '_token' → logprob: -10.270771026611328
    9. ')' → logprob: -10.770771026611328
    10. '=None' → logprob: -11.520771026611328

Token 3352: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.575943112373352
    2. 'parse' → logprob: -0.825943112373352
    3. '(parse' → logprob: -13.200942993164062
    4. '=parse' → logprob: -13.700942993164062
    5. '	parse' → logprob: -15.075942993164062
    6. '_parse' → logprob: -15.200942993164062
    7. '.parse' → logprob: -16.825942993164062
    8. '   ' → logprob: -16.950942993164062
    9. ' ' → logprob: -18.700942993164062
    10. ' ' → logprob: -19.325942993164062

Token 3353: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0007373234839178622
    2. 'cell' → logprob: -7.625737190246582
    3. '(lines' → logprob: -9.875737190246582
    4. 'root' → logprob: -10.000737190246582
    5. '(root' → logprob: -10.000737190246582
    6. '_cells' → logprob: -10.125737190246582
    7. '_root' → logprob: -11.500737190246582
    8. '(cell' → logprob: -11.750737190246582
    9. '(data' → logprob: -11.875737190246582
    10. '(' → logprob: -12.000737190246582

Token 3354: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0234653502702713
    2. '(lines' → logprob: -3.773465394973755
    3. 'data' → logprob: -8.898465156555176
    4. '(
' → logprob: -9.648465156555176
    5. '(' → logprob: -11.273465156555176
    6. 'lines' → logprob: -13.648465156555176
    7. '   ' → logprob: -13.898465156555176
    8. '[data' → logprob: -13.898465156555176
    9. ' lines' → logprob: -14.273465156555176
    10. ' (' → logprob: -14.898465156555176

Token 3355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011793931480497122
    2. ',data' → logprob: -6.751179218292236
    3. ' ,' → logprob: -12.376179695129395
    4. ',line' → logprob: -13.126179695129395
    5. '   ' → logprob: -14.251179695129395
    6. '(root' → logprob: -14.626179695129395
    7. ',n' → logprob: -15.001179695129395
    8. ',d' → logprob: -15.126179695129395
    9. ',
' → logprob: -16.001178741455078
    10. '```' → logprob: -16.251178741455078

Token 3356: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -8.180258191714529e-06
    2. ' base' → logprob: -11.750008583068848
    3. '
' → logprob: -15.375008583068848
    4. '(base' → logprob: -18.62500762939453
    5. '   ' → logprob: -18.75000762939453
    6. '	base' → logprob: -19.00000762939453
    7. '```' → logprob: -20.25000762939453
    8. ')' → logprob: -21.12500762939453
    9. 'root' → logprob: -21.25000762939453
    10. '_base' → logprob: -21.25000762939453

Token 3357: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.696889623621246e-06
    2. 'line' → logprob: -13.12500286102295
    3. 'Line' → logprob: -14.50000286102295
    4. '_LINE' → logprob: -16.750001907348633
    5. '```' → logprob: -16.750001907348633
    6. ')' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '_' → logprob: -18.500001907348633
    9. '-line' → logprob: -19.000001907348633
    10. '_lines' → logprob: -19.125001907348633

Token 3358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013596400385722518
    2. ')
' → logprob: -7.126359462738037
    3. '       ' → logprob: -8.001359939575195
    4. '   ' → logprob: -8.501359939575195
    5. '<|end|>' → logprob: -12.126359939575195
    6. '           ' → logprob: -13.251359939575195
    7. ' )' → logprob: -13.876359939575195
    8. '[' → logprob: -13.876359939575195
    9. '               ' → logprob: -14.126359939575195
    10. '')' → logprob: -14.626359939575195

Token 3359: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002981624274980277
    2. '
' → logprob: -9.125298500061035
    3. '       ' → logprob: -9.500298500061035
    4. '    
' → logprob: -10.125298500061035
    5. 'if' → logprob: -10.375298500061035
    6. 'val' → logprob: -11.375298500061035
    7. 'value' → logprob: -11.500298500061035
    8. '<|end|>' → logprob: -11.875298500061035
    9. ',' → logprob: -12.750298500061035
    10. ' if' → logprob: -12.875298500061035

Token 3360: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.626573920249939
    2. 'val' → logprob: -0.876573920249939
    3. 'result' → logprob: -3.6265740394592285
    4. 'res' (adapté à ' res') → logprob: -4.6265740394592285
    5. '       ' → logprob: -4.7515740394592285
    6. '   ' → logprob: -6.1265740394592285
    7. 'v' → logprob: -7.0015740394592285
    8. 'value' → logprob: -7.5015740394592285
    9. ' val' → logprob: -7.8765740394592285
    10. 'ans' → logprob: -9.12657356262207

Token 3361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25605079531669617
    2. '=' → logprob: -1.5060508251190186
    3. '   ' → logprob: -6.0060505867004395
    4. '=res' → logprob: -7.6310505867004395
    5. 'ult' → logprob: -8.256051063537598
    6. '_' → logprob: -8.256051063537598
    7. ' ' → logprob: -8.881051063537598
    8. '_val' → logprob: -9.381051063537598
    9. '=_' → logprob: -9.381051063537598
    10. ' _' → logprob: -10.131051063537598

Token 3362: ' eval' (ID: 29383)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.0032446200493723154
    2. ' eval' → logprob: -5.753244400024414
    3. '(eval' → logprob: -9.628244400024414
    4. '0' → logprob: -14.128244400024414
    5. '   ' → logprob: -15.878244400024414
    6. '.eval' → logprob: -16.878244400024414
    7. '(' → logprob: -17.128244400024414
    8. 'int' → logprob: -18.003244400024414
    9. 'None' → logprob: -18.503244400024414
    10. '  ' → logprob: -18.503244400024414

Token 3363: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -3.082895273109898e-05
    2. 'expr' → logprob: -10.625030517578125
    3. 'Expr' → logprob: -12.500030517578125
    4. '_ast' → logprob: -13.625030517578125
    5. '(expr' → logprob: -14.125030517578125
    6. 'root' → logprob: -15.625030517578125
    7. 'res' → logprob: -16.000030517578125
    8. '(_' → logprob: -16.000030517578125
    9. '_EXPR' → logprob: -16.125030517578125
    10. '
' → logprob: -16.125030517578125

Token 3364: '(ast' (ID: 118219)
  Prédit: '(ast'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ast' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -11.375012397766113
    3. '(
' → logprob: -14.375012397766113
    4. '(ans' → logprob: -15.875012397766113
    5. '(AST' → logprob: -16.12501335144043
    6. ' ast' → logprob: -16.75001335144043
    7. ' (' → logprob: -17.50001335144043
    8. '((' → logprob: -18.25001335144043
    9. '_ast' → logprob: -18.25001335144043
    10. '(eval' → logprob: -18.25001335144043

Token 3365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3147982656955719
    2. ')
' → logprob: -1.3147982358932495
    3. '%' → logprob: -7.439798355102539
    4. '   ' → logprob: -7.564798355102539
    5. ')%' → logprob: -8.564798355102539
    6. '
' → logprob: -9.689798355102539
    7. '       ' → logprob: -10.064798355102539
    8. ')return' → logprob: -10.439798355102539
    9. ' %' → logprob: -11.064798355102539
    10. '()' → logprob: -11.314798355102539

Token 3366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2035515308380127
    2. 'print' → logprob: -1.7035515308380127
    3. '```' → logprob: -6.328551292419434
    4. '   ' → logprob: -8.203551292419434
    5. ' print' → logprob: -10.328551292419434
    6. '``' → logprob: -10.328551292419434
    7. '`' → logprob: -12.078551292419434
    8. '
' → logprob: -13.203551292419434
    9. '	print' → logprob: -13.828551292419434
    10. '           ' → logprob: -14.203551292419434

Token 3367: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.500000953674316
    3. ' print' → logprob: -16.5
    4. '``' → logprob: -17.75
    5. '       ' → logprob: -17.875
    6. '
' → logprob: -20.625
    7. '#print' → logprob: -21.375
    8. '   ' → logprob: -21.5
    9. '	print' → logprob: -22.25
    10. 'printf' → logprob: -23.0

Token 3368: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0003377270477358252
    2. 'res' → logprob: -8.000337600708008
    3. '(f' → logprob: -13.000337600708008
    4. '(' → logprob: -17.000337600708008
    5. '```' → logprob: -17.125337600708008
    6. ' res' → logprob: -17.875337600708008
    7. '$res' → logprob: -18.375337600708008
    8. '	res' → logprob: -18.875337600708008
    9. '`' → logprob: -19.375337600708008
    10. '(
' → logprob: -19.750337600708008

Token 3369: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. '()' → logprob: -12.000018119812012
    3. '   ' → logprob: -12.000018119812012
    4. '())' → logprob: -13.125018119812012
    5. ')
' → logprob: -13.500018119812012
    6. ')`' → logprob: -13.500018119812012
    7. '`)' → logprob: -14.375018119812012
    8. ' )' → logprob: -15.250018119812012
    9. '')' → logprob: -15.625018119812012
    10. '))' → logprob: -16.375019073486328

Token 3370: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00039385363925248384
    2. ' MOD' → logprob: -8.000393867492676
    3. '201' → logprob: -9.750393867492676
    4. '(M' → logprob: -15.750393867492676
    5. '.MOD' → logprob: -17.00039291381836
    6. '_MOD' → logprob: -17.62539291381836
    7. '(mod' → logprob: -17.87539291381836
    8. '   ' → logprob: -18.62539291381836
    9. '
' → logprob: -18.87539291381836
    10. '```' → logprob: -18.87539291381836

Token 3371: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001214237418025732
    2. ')
' → logprob: -9.750121116638184
    3. '```' → logprob: -10.625121116638184
    4. '())' → logprob: -11.500121116638184
    5. '<|end|>' → logprob: -12.000121116638184
    6. '   ' → logprob: -12.125121116638184
    7. '()' → logprob: -12.250121116638184
    8. '
' → logprob: -12.250121116638184
    9. '`)' → logprob: -13.375121116638184
    10. ' )' → logprob: -13.875121116638184

Token 3372: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3373: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06196858361363411
    2. '__' → logprob: -2.8119685649871826
    3. '```' → logprob: -15.186968803405762
    4. '___' → logprob: -15.561968803405762
    5. '_' → logprob: -15.686968803405762
    6. '_name' → logprob: -15.936968803405762
    7. ' _' → logprob: -15.936968803405762
    8. '__
' → logprob: -16.686967849731445
    9. ' ___' → logprob: -16.811967849731445
    10. '____' → logprob: -16.936967849731445

Token 3374: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04868513345718384
    2. '```' → logprob: -3.923685073852539
    3. '==' → logprob: -4.173685073852539
    4. 'if' → logprob: -4.673685073852539
    5. ' ==' → logprob: -6.798685073852539
    6. '.__' → logprob: -7.548685073852539
    7. '__.__' → logprob: -7.798685073852539
    8. '**' → logprob: -9.048685073852539
    9. '[' → logprob: -9.423685073852539
    10. '`' → logprob: -9.548685073852539

Token 3375: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0020094106439501047
    2. '==' → logprob: -6.627009391784668
    3. '__.__' → logprob: -7.877009391784668
    4. '```' → logprob: -9.252009391784668
    5. ' ==' → logprob: -10.127009391784668
    6. '__.' → logprob: -10.252009391784668
    7. '=="' → logprob: -10.627009391784668
    8. '__
' → logprob: -11.002009391784668
    9. '__":
' → logprob: -11.127009391784668
    10. '__["' → logprob: -11.252009391784668

Token 3376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28161218762397766
    2. '__' → logprob: -1.5316121578216553
    3. '```' → logprob: -4.281612396240234
    4. ' ==' → logprob: -4.906612396240234
    5. '=='' → logprob: -5.531612396240234
    6. '=="' → logprob: -6.031612396240234
    7. '==
' → logprob: -7.281612396240234
    8. '**' → logprob: -8.656612396240234
    9. '__.__' → logprob: -9.156612396240234
    10. '[' → logprob: -9.281612396240234

Token 3377: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20168901979923248
    2. '"' → logprob: -1.7016890048980713
    3. '__' → logprob: -8.201688766479492
    4. '`' → logprob: -14.326688766479492
    5. ' '__' → logprob: -15.326688766479492
    6. ''_' → logprob: -15.576688766479492
    7. ' "__' → logprob: -15.826688766479492
    8. '('__' → logprob: -16.701688766479492
    9. '```' → logprob: -16.701688766479492
    10. ''import' → logprob: -17.576688766479492

Token 3378: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000945172505453229
    2. '__' → logprob: -7.000945091247559
    3. '"' → logprob: -10.500945091247559
    4. ''' → logprob: -12.375945091247559
    5. ' main' → logprob: -14.125945091247559
    6. 'name' → logprob: -14.375945091247559
    7. '_main' → logprob: -14.750945091247559
    8. '(main' → logprob: -16.875946044921875
    9. '	main' → logprob: -17.125946044921875
    10. 'built' → logprob: -17.375946044921875

Token 3379: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.18096603453159332
    2. '__' → logprob: -2.0559661388397217
    3. '__":
' → logprob: -3.4309661388397217
    4. ':' → logprob: -6.305965900421143
    5. ':
' → logprob: -7.430965900421143
    6. '():
' → logprob: -7.930965900421143
    7. '__:' → logprob: -8.0559663772583
    8. '==' → logprob: -8.1809663772583
    9. '```' → logprob: -8.4309663772583
    10. '('__' → logprob: -8.5559663772583

Token 3380: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03763469308614731
    2. '   ' → logprob: -3.7876346111297607
    3. '	main' → logprob: -4.41263484954834
    4. ' main' → logprob: -7.28763484954834
    5. '```' → logprob: -7.41263484954834
    6. '_main' → logprob: -7.66263484954834
    7. '
' → logprob: -9.28763484954834
    8. '(main' → logprob: -9.28763484954834
    9. '``' → logprob: -10.03763484954834
    10. '__' → logprob: -10.16263484954834

Token 3381: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.375
    3. '	main' → logprob: -16.25
    4. '   ' → logprob: -17.625
    5. '_main' → logprob: -18.0
    6. '(main' → logprob: -19.75
    7. '```' → logprob: -20.625
    8. '
' → logprob: -20.75
    9. '__' → logprob: -21.125
    10. 'import' → logprob: -22.375

Token 3382: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3380
Tokens correctement prédits (1ère position, stricte): 1160
Tokens correctement prédits (1ère position, avec adaptation): 1291
Tokens correctement prédits (top 10): 2556
Précision stricte (1ère position): 34.32%
Précision adaptée (1ère position): 38.20%
Précision (top 10): 75.62%
================================================================================
