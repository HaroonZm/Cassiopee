================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break
    totals = [0]*n
    for _ in range(m):
        scores = list(map(int, input().split()))
        for i in range(n):
            totals[i] += scores[i]
    print(max(totals))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.61203932762146
    2. '    ' → logprob: -2.23703932762146
    3. '    
' → logprob: -2.61203932762146
    4. '\' → logprob: -2.86203932762146
    5. '\n' → logprob: -2.86203932762146
    6. '```' → logprob: -3.23703932762146
    7. ' ' → logprob: -3.36203932762146
    8. ' 
' → logprob: -3.61203932762146
    9. '  
' → logprob: -4.112039566040039
    10. '     
' → logprob: -4.237039566040039

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0897926092147827
    2. ' ' → logprob: -1.2147926092147827
    3. '=' → logprob: -2.3397927284240723
    4. 'o' → logprob: -2.3397927284240723
    5. '+' → logprob: -2.9647927284240723
    6. '   ' → logprob: -3.2147927284240723
    7. '_' → logprob: -4.339792728424072
    8. '.' → logprob: -4.339792728424072
    9. 'e' → logprob: -4.839792728424072
    10. '%' → logprob: -4.964792728424072

Token 6: ' m' (ID: 284)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.22054986655712128
    2. 'input' → logprob: -1.8455498218536377
    3. ' ' → logprob: -4.595550060272217
    4. ' s' → logprob: -4.595550060272217
    5. ' m' → logprob: -4.720550060272217
    6. 's' → logprob: -6.095550060272217
    7. '"' → logprob: -6.220550060272217
    8. 'm' → logprob: -6.345550060272217
    9. ' data' → logprob: -7.595550060272217
    10. ' n' → logprob: -7.720550060272217

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5897903442382812
    2. ' =' → logprob: -0.8397903442382812
    3. ',' → logprob: -4.339790344238281
    4. ' ,' → logprob: -7.714790344238281
    5. ' ' → logprob: -8.964790344238281
    6. ')' → logprob: -9.339790344238281
    7. '<|end|>' → logprob: -11.214790344238281
    8. ' =
' → logprob: -11.464790344238281
    9. '```' → logprob: -12.339790344238281
    10. '   ' → logprob: -12.464790344238281

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3779926300048828
    2. ' input' → logprob: -2.002992630004883
    3. 'map' → logprob: -2.002992630004883
    4. 'input' → logprob: -3.127992630004883
    5. ' int' → logprob: -7.877992630004883
    6. ' ' → logprob: -8.127992630004883
    7. 'int' → logprob: -8.502992630004883
    8. '0' → logprob: -8.752992630004883
    9. ' list' → logprob: -10.877992630004883
    10. 'list' → logprob: -12.002992630004883

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030157022178173065
    2. '(' → logprob: -3.5301570892333984
    3. '(input' → logprob: -8.405157089233398
    4. '(str' → logprob: -8.655157089233398
    5. 'int' → logprob: -12.530157089233398
    6. '(lambda' → logprob: -13.155157089233398
    7. '(list' → logprob: -13.905157089233398
    8. '(
' → logprob: -14.405157089233398
    9. '(eval' → logprob: -15.280157089233398
    10. '(in' → logprob: -15.405157089233398

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07856716960668564
    2. 'input' → logprob: -2.8285672664642334
    3. '(' → logprob: -4.953567028045654
    4. ')' → logprob: -5.203567028045654
    5. ' input' → logprob: -5.828567028045654
    6. ',input' → logprob: -7.328567028045654
    7. ',' → logprob: -8.953567504882812
    8. '=input' → logprob: -9.828567504882812
    9. '<input' → logprob: -10.703567504882812
    10. '[input' → logprob: -11.328567504882812

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20144745707511902
    2. ' input' → logprob: -1.7014474868774414
    3. ')' → logprob: -10.451447486877441
    4. '(input' → logprob: -12.701447486877441
    5. ' )' → logprob: -14.451447486877441
    6. '=input' → logprob: -14.701447486877441
    7. ' ' → logprob: -14.701447486877441
    8. '	input' → logprob: -15.451447486877441
    9. ',input' → logprob: -15.701447486877441
    10. '```' → logprob: -15.826447486877441

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5373679995536804
    2. '())' → logprob: -1.1623680591583252
    3. '().' → logprob: -2.287368059158325
    4. '());' → logprob: -7.537367820739746
    5. '()))' → logprob: -8.037367820739746
    6. '('' → logprob: -8.912367820739746
    7. ')' → logprob: -9.412367820739746
    8. '(' → logprob: -9.662367820739746
    9. '()),' → logprob: -9.787367820739746
    10. '()));' → logprob: -10.287367820739746

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00034356804098933935
    2. 'strip' → logprob: -8.000343322753906
    3. 'rstrip' → logprob: -12.000343322753906
    4. ' split' → logprob: -13.375343322753906
    5. '(split' → logprob: -14.875343322753906
    6. ')' → logprob: -17.375343322753906
    7. 'spl' → logprob: -17.500343322753906
    8. 'replace' → logprob: -17.500343322753906
    9. 'read' → logprob: -18.250343322753906
    10. '```' → logprob: -19.000343322753906

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5358927845954895
    2. '())' → logprob: -1.1608927249908447
    3. '))' → logprob: -2.4108927249908447
    4. '()))' → logprob: -4.910892963409424
    5. '()' → logprob: -5.410892963409424
    6. '())
' → logprob: -10.910892486572266
    7. ')))' → logprob: -11.410892486572266
    8. '),' → logprob: -11.785892486572266
    9. '')' → logprob: -12.285892486572266
    10. '(' → logprob: -12.535892486572266

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1611362099647522
    2. '   ' → logprob: -2.5361361503601074
    3. ')' → logprob: -3.9111361503601074
    4. '):' → logprob: -4.286136150360107
    5. '<|end|>' → logprob: -4.411136150360107
    6. ' if' → logprob: -5.036136150360107
    7. ',' → logprob: -5.286136150360107
    8. ' ' → logprob: -6.036136150360107
    9. ':
' → logprob: -6.161136150360107
    10. '       ' → logprob: -6.411136150360107

Token 16: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5173447132110596
    2. '   ' → logprob: -1.1423447132110596
    3. 'if' (adapté à ' if') → logprob: -3.7673447132110596
    4. '```' → logprob: -4.1423444747924805
    5. ' ' → logprob: -4.2673444747924805
    6. '    ' → logprob: -4.2673444747924805
    7. '       ' → logprob: -5.0173444747924805
    8. '    
' → logprob: -6.6423444747924805
    9. ')' → logprob: -6.6423444747924805
    10. 'i' → logprob: -6.8923444747924805

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.025270048528909683
    2. ' not' → logprob: -3.7752699851989746
    3. 'n' → logprob: -6.900269985198975
    4. ' m' → logprob: -7.025269985198975
    5. 'not' → logprob: -9.275270462036133
    6. 'm' → logprob: -11.025270462036133
    7. ' ' → logprob: -11.525270462036133
    8. ' ' → logprob: -12.650270462036133
    9. '(n' → logprob: -13.775270462036133
    10. ' (' → logprob: -15.025270462036133

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2817747890949249
    2. '==' → logprob: -2.1567747592926025
    3. ' <=' → logprob: -2.5317747592926025
    4. ' <' → logprob: -3.6567747592926025
    5. ' >' → logprob: -5.406774997711182
    6. '>' → logprob: -5.531774997711182
    7. '<' → logprob: -5.656774997711182
    8. '<=' → logprob: -5.656774997711182
    9. ' ' → logprob: -5.781774997711182
    10. ' >=' → logprob: -6.531774997711182

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28136324882507324
    2. '0' → logprob: -1.4063632488250732
    3. ' m' → logprob: -9.156363487243652
    4. 'm' → logprob: -9.406363487243652
    5. ' -' → logprob: -11.281363487243652
    6. '-' → logprob: -12.281363487243652
    7. '  ' → logprob: -13.093863487243652
    8. '1' → logprob: -13.718863487243652
    9. '   ' → logprob: -13.781363487243652
    10. '    ' → logprob: -14.281363487243652

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001129602751461789
    2. ' ' → logprob: -9.875112533569336
    3. 'm' → logprob: -9.875112533569336
    4. '-' → logprob: -11.875112533569336
    5. '```' → logprob: -14.375112533569336
    6. '1' → logprob: -14.687612533569336
    7. ' m' → logprob: -14.687612533569336
    8. 'and' → logprob: -15.437612533569336
    9. '   ' → logprob: -15.500112533569336
    10. ' -' → logprob: -15.562612533569336

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13072557747364044
    2. ':' → logprob: -2.130725622177124
    3. 'and' → logprob: -5.630725383758545
    4. ' ' → logprob: -9.255725860595703
    5. ' or' → logprob: -9.505725860595703
    6. ' :' → logprob: -11.505725860595703
    7. ' a' → logprob: -11.505725860595703
    8. '   ' → logprob: -12.130725860595703
    9. ' an' → logprob: -13.255725860595703
    10. ',' → logprob: -13.380725860595703

Token 22: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2519320547580719
    2. 'm' → logprob: -1.5019320249557495
    3. ' ' → logprob: -13.251932144165039
    4. '	m' → logprob: -14.626932144165039
    5. '    ' → logprob: -15.126932144165039
    6. '   ' → logprob: -15.126932144165039
    7. ' ' → logprob: -16.12693214416504
    8. '  ' → logprob: -16.25193214416504
    9. '<|end|>' → logprob: -17.87693214416504
    10. '&m' → logprob: -18.25193214416504

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09509240835905075
    2. '==' → logprob: -2.470092296600342
    3. '<|end|>' → logprob: -6.220092296600342
    4. ' ' → logprob: -6.470092296600342
    5. '=' → logprob: -7.095092296600342
    6. ' ' → logprob: -7.220092296600342
    7. ')' → logprob: -7.845092296600342
    8. '<|end|>' → logprob: -8.4700927734375
    9. '```' → logprob: -9.0950927734375
    10. '  ' → logprob: -9.5950927734375

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931474208831787
    2. ' ' → logprob: -0.6931474208831787
    3. ' ' → logprob: -15.693147659301758
    4. '  ' → logprob: -16.318147659301758
    5. '۰' → logprob: -17.568147659301758
    6. '<|end|>' → logprob: -17.880647659301758
    7. '<|end|>' → logprob: -18.005647659301758
    8. '   ' → logprob: -18.568147659301758
    9. '=' → logprob: -19.130647659301758
    10. ')' → logprob: -19.130647659301758

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929982289671898
    2. ' ' → logprob: -5.130929946899414
    3. '  ' → logprob: -14.568429946899414
    4. '   ' → logprob: -15.443429946899414
    5. ' ' → logprob: -15.880929946899414
    6. '۰' → logprob: -16.068429946899414
    7. '1' → logprob: -16.193429946899414
    8. '```' → logprob: -16.693429946899414
    9. '    ' → logprob: -17.443429946899414
    10. ')' → logprob: -17.755929946899414

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002525184245314449
    2. '       ' → logprob: -8.750252723693848
    3. ':
' → logprob: -9.625252723693848
    4. '   ' → logprob: -10.625252723693848
    5. '):' → logprob: -13.500252723693848
    6. ' :' → logprob: -14.250252723693848
    7. ':return' → logprob: -14.375252723693848
    8. '    ' → logprob: -15.750252723693848
    9. ':\' → logprob: -15.875252723693848
    10. ',' → logprob: -16.00025177001953

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013445195509120822
    2. '   ' → logprob: -7.376344680786133
    3. ' break' → logprob: -7.376344680786133
    4. '	break' → logprob: -10.126344680786133
    5. '\n' → logprob: -10.626344680786133
    6. ':' → logprob: -11.501344680786133
    7. 'break' → logprob: -12.126344680786133
    8. '<|end|>' → logprob: -13.251344680786133
    9. '      ' → logprob: -13.626344680786133
    10. '	' → logprob: -13.876344680786133

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.21810995042324066
    2. 'break' (adapté à ' break') → logprob: -2.2181098461151123
    3. '       ' → logprob: -2.4681098461151123
    4. '   ' → logprob: -6.218110084533691
    5. '	break' → logprob: -7.843110084533691
    6. '           ' → logprob: -11.843110084533691
    7. '_break' → logprob: -12.468110084533691
    8. '```' → logprob: -13.218110084533691
    9. '-break' → logprob: -13.718110084533691
    10. ' ' → logprob: -13.718110084533691

Token 29: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9135249257087708
    2. '   ' → logprob: -0.9135249257087708
    3. '\n' → logprob: -1.913524866104126
    4. ')' → logprob: -4.163525104522705
    5. '    
' → logprob: -4.538525104522705
    6. '\' → logprob: -4.913525104522705
    7. ' ' → logprob: -6.038525104522705
    8. '<|end|>' → logprob: -6.038525104522705
    9. '       ' → logprob: -6.163525104522705
    10. '#' → logprob: -6.413525104522705

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06731623411178589
    2. '    
' → logprob: -2.9423162937164307
    3. '\n' → logprob: -5.567316055297852
    4. '```' → logprob: -5.567316055297852
    5. '\' → logprob: -6.817316055297852
    6. '       ' → logprob: -7.317316055297852
    7. ')' → logprob: -7.567316055297852
    8. '#' → logprob: -7.942316055297852
    9. '
' → logprob: -7.942316055297852
    10. 'n' → logprob: -8.192316055297852

Token 31: ' totals' (ID: 92279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10597267746925354
    2. ' ' → logprob: -3.7309727668762207
    3. '    ' → logprob: -3.8559727668762207
    4. '       ' → logprob: -4.605972766876221
    5. '    
' → logprob: -4.980972766876221
    6. '\n' → logprob: -5.105972766876221
    7. ')' → logprob: -5.230972766876221
    8. '[' → logprob: -5.605972766876221
    9. 'print' → logprob: -5.605972766876221
    10. '\' → logprob: -5.980972766876221

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24183696508407593
    2. '=' → logprob: -2.2418370246887207
    3. '_' → logprob: -2.3668370246887207
    4. ' +=' → logprob: -4.991837024688721
    5. '[' → logprob: -6.241837024688721
    6. '   ' → logprob: -6.491837024688721
    7. '_counts' → logprob: -6.741837024688721
    8. ' ' → logprob: -7.241837024688721
    9. '_count' → logprob: -7.491837024688721
    10. '_sum' → logprob: -7.991837024688721

Token 33: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8530438542366028
    2. '0' → logprob: -2.103043794631958
    3. ' n' → logprob: -2.228043794631958
    4. '[]' → logprob: -2.603043794631958
    5. '[' → logprob: -2.853043794631958
    6. '{}' → logprob: -2.978043794631958
    7. 'n' → logprob: -3.228043794631958
    8. ' []' → logprob: -3.353043794631958
    9. ' ' → logprob: -3.478043794631958
    10. ' {}' → logprob: -3.728043794631958

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014325011288747191
    2. ' ' → logprob: -6.751432418823242
    3. ']' → logprob: -8.626432418823242
    4. 'int' → logprob: -9.876432418823242
    5. ' int' → logprob: -11.876432418823242
    6. '   ' → logprob: -12.126432418823242
    7. ')' → logprob: -12.376432418823242
    8. ' ]' → logprob: -12.376432418823242
    9. '[]' → logprob: -13.251432418823242
    10. 'n' → logprob: -13.751432418823242

Token 35: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04131345450878143
    2. ' for' → logprob: -3.666313409805298
    3. ' ]' → logprob: -4.666313648223877
    4. ']*' → logprob: -5.916313648223877
    5. ',' → logprob: -6.166313648223877
    6. 'for' → logprob: -7.416313648223877
    7. ')' → logprob: -10.416313171386719
    8. '   ' → logprob: -11.166313171386719
    9. ')]' → logprob: -11.291313171386719
    10. ']*(' → logprob: -11.416313171386719

Token 36: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12613557279109955
    2. 'n' → logprob: -3.0011355876922607
    3. '(m' → logprob: -3.5011355876922607
    4. '(n' → logprob: -3.6261355876922607
    5. '3' → logprob: -5.751135349273682
    6. '(' → logprob: -6.251135349273682
    7. '10' → logprob: -6.251135349273682
    8. '9' → logprob: -6.876135349273682
    9. '100' → logprob: -7.126135349273682
    10. '101' → logprob: -7.126135349273682

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7015081644058228
    2. '<|end|>' → logprob: -1.0765081644058228
    3. '
' → logprob: -2.326508045196533
    4. ' for' → logprob: -4.326508045196533
    5. '    
' → logprob: -4.326508045196533
    6. ' 
' → logprob: -4.701508045196533
    7. 'for' → logprob: -5.201508045196533
    8. ' ' → logprob: -5.576508045196533
    9. '\n' → logprob: -5.701508045196533
    10. '[' → logprob: -5.701508045196533

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7557070851325989
    2. '<|end|>' → logprob: -1.005707025527954
    3. '
' → logprob: -2.880707025527954
    4. ' for' → logprob: -3.130707025527954
    5. 'for' → logprob: -3.630707025527954
    6. '\n' → logprob: -4.255707263946533
    7. ' ' → logprob: -5.005707263946533
    8. '    
' → logprob: -5.130707263946533
    9. '<|end|>' → logprob: -5.630707263946533
    10. '	for' → logprob: -6.380707263946533

Token 39: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22007617354393005
    2. ' for' → logprob: -2.220076084136963
    3. '   ' → logprob: -3.095076084136963
    4. '<|end|>' → logprob: -3.345076084136963
    5. '	for' → logprob: -6.095076084136963
    6. ' ' → logprob: -6.345076084136963
    7. '\n' → logprob: -6.970076084136963
    8. '    ' → logprob: -7.470076084136963
    9. '<|end|>' → logprob: -7.470076084136963
    10. '
' → logprob: -8.095076560974121

Token 40: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1535957008600235
    2. '_' → logprob: -2.1535956859588623
    3. ' i' → logprob: -3.6535956859588623
    4. ' ' → logprob: -8.653595924377441
    5. ' range' → logprob: -8.903595924377441
    6. '_i' → logprob: -10.028595924377441
    7. 'i' → logprob: -10.528595924377441
    8. ' j' → logprob: -10.903595924377441
    9. ' ' → logprob: -12.528595924377441
    10. '_range' → logprob: -13.028595924377441

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023380812257528305
    2. 'in' → logprob: -3.773380756378174
    3. ' ' → logprob: -10.273381233215332
    4. 'm' → logprob: -10.773381233215332
    5. 'n' → logprob: -11.023381233215332
    6. 'i' → logprob: -11.148381233215332
    7. ' i' → logprob: -11.148381233215332
    8. '	in' → logprob: -11.273381233215332
    9. '  ' → logprob: -11.648381233215332
    10. '   ' → logprob: -12.648381233215332

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026338616386055946
    2. ' range' → logprob: -3.651338577270508
    3. 'm' → logprob: -10.276338577270508
    4. ' ' → logprob: -14.026338577270508
    5. '(range' → logprob: -14.026338577270508
    6. '[' → logprob: -14.401338577270508
    7. '	range' → logprob: -14.526338577270508
    8. ' m' → logprob: -14.651338577270508
    9. '  ' → logprob: -15.526338577270508
    10. ')' → logprob: -16.526338577270508

Token 43: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.24089114367961884
    2. ' (' → logprob: -1.8658910989761353
    3. '(' → logprob: -2.990891218185425
    4. ' m' → logprob: -4.740890979766846
    5. 'm' → logprob: -8.365891456604004
    6. ' ' → logprob: -9.865891456604004
    7. '(n' → logprob: -10.865891456604004
    8. '	m' → logprob: -11.865891456604004
    9. '<|end|>' → logprob: -12.115891456604004
    10. '   ' → logprob: -12.365891456604004

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021790148690342903
    2. ')' → logprob: -4.021790027618408
    3. ' ):' → logprob: -6.146790027618408
    4. ':' → logprob: -6.646790027618408
    5. ' )' → logprob: -9.021790504455566
    6. ',' → logprob: -10.646790504455566
    7. '):
' → logprob: -10.771790504455566
    8. '   ' → logprob: -11.271790504455566
    9. ' :' → logprob: -12.521790504455566
    10. ']:' → logprob: -13.021790504455566

Token 45: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6137592196464539
    2. '   ' → logprob: -1.1137592792510986
    3. '       ' → logprob: -2.8637592792510986
    4. ' ' → logprob: -2.9887592792510986
    5. ',' → logprob: -5.2387590408325195
    6. '<|end|>' → logprob: -5.6137590408325195
    7. ' ,' → logprob: -5.9887590408325195
    8. '     ' → logprob: -6.2387590408325195
    9. '  ' → logprob: -6.4887590408325195
    10. ' s' → logprob: -6.7387590408325195

Token 46: ' scores' (ID: 18923)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0400997400283813
    2. 'a' → logprob: -1.1650997400283813
    3. ' i' → logprob: -3.040099620819092
    4. ' player' → logprob: -3.040099620819092
    5. ' u' → logprob: -3.665099620819092
    6. ' x' → logprob: -3.790099620819092
    7. ' s' → logprob: -3.915099620819092
    8. 's' → logprob: -4.415099620819092
    9. 'u' → logprob: -4.415099620819092
    10. ' p' → logprob: -4.665099620819092

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023265745490789413
    2. '=' → logprob: -3.773265838623047
    3. ',' → logprob: -12.398265838623047
    4. ' ' → logprob: -12.523265838623047
    5. '   ' → logprob: -12.773265838623047
    6. '    ' → logprob: -13.273265838623047
    7. ' +=' → logprob: -13.398265838623047
    8. '[' → logprob: -13.523265838623047
    9. '[:]' → logprob: -13.648265838623047
    10. '.' → logprob: -14.148265838623047

Token 48: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07003080099821091
    2. 'list' → logprob: -2.695030689239502
    3. ' map' → logprob: -9.69503116607666
    4. 'map' → logprob: -11.07003116607666
    5. '[' → logprob: -12.07003116607666
    6. ' [' → logprob: -12.07003116607666
    7. ' ' → logprob: -13.32003116607666
    8. '   ' → logprob: -13.44503116607666
    9. '	list' → logprob: -13.94503116607666
    10. '=list' → logprob: -15.32003116607666

Token 49: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47619715332984924
    2. '(map' → logprob: -0.9761971235275269
    3. '(int' → logprob: -6.351197242736816
    4. '(input' → logprob: -8.476197242736816
    5. '()' → logprob: -9.226197242736816
    6. '(range' → logprob: -11.226197242736816
    7. ' (' → logprob: -11.476197242736816
    8. '(eval' → logprob: -12.476197242736816
    9. '   ' → logprob: -12.601197242736816
    10. '(
' → logprob: -12.601197242736816

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018298601731657982
    2. '(' → logprob: -4.018298625946045
    3. '<int' → logprob: -9.518298149108887
    4. '<|end|>' → logprob: -10.518298149108887
    5. ')' → logprob: -11.393298149108887
    6. ']int' → logprob: -11.768298149108887
    7. ',int' → logprob: -12.018298149108887
    8. '[int' → logprob: -12.143298149108887
    9. '=int' → logprob: -12.393298149108887
    10. 'int' → logprob: -13.143298149108887

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2558702826499939
    2. ',input' → logprob: -1.5058703422546387
    3. '(' → logprob: -6.130870342254639
    4. '(input' → logprob: -6.380870342254639
    5. ' ,' → logprob: -10.00586986541748
    6. 'input' → logprob: -11.50586986541748
    7. ',int' → logprob: -13.00586986541748
    8. '   ' → logprob: -13.25586986541748
    9. '```' → logprob: -13.75586986541748
    10. '(),' → logprob: -13.88086986541748

Token 52: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740792512893677
    2. ' input' → logprob: -0.9740792512893677
    3. '	input' → logprob: -13.974079132080078
    4. ',input' → logprob: -14.974079132080078
    5. ')' → logprob: -15.099079132080078
    6. '=input' → logprob: -15.474079132080078
    7. ' ' → logprob: -15.724079132080078
    8. '(input' → logprob: -15.849079132080078
    9. '<input' → logprob: -16.474079132080078
    10. '_input' → logprob: -17.099079132080078

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -13.00000286102295
    3. ' ().' → logprob: -15.00000286102295
    4. '.' → logprob: -15.87500286102295
    5. '(' → logprob: -17.375001907348633
    6. '   ' → logprob: -19.000001907348633
    7. ')' → logprob: -19.000001907348633
    8. ' .' → logprob: -19.875001907348633
    9. '.split' → logprob: -20.000001907348633
    10. '().__' → logprob: -20.125001907348633

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.465036105713807e-06
    2. ' split' → logprob: -12.250007629394531
    3. 'strip' → logprob: -13.375007629394531
    4. '(split' → logprob: -14.875007629394531
    5. 'rstrip' → logprob: -15.000007629394531
    6. 'plit' → logprob: -15.875007629394531
    7. 's' → logprob: -16.37500762939453
    8. 'spl' → logprob: -16.37500762939453
    9. ' ' → logprob: -16.75000762939453
    10. ')' → logprob: -17.25000762939453

Token 55: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006241364870220423
    2. '()' → logprob: -5.756241321563721
    3. '())' → logprob: -6.381241321563721
    4. '))' → logprob: -7.131241321563721
    5. '()))
' → logprob: -8.131241798400879
    6. '(' → logprob: -8.381241798400879
    7. '())))' → logprob: -11.631241798400879
    8. '()));' → logprob: -11.631241798400879
    9. '()))

' → logprob: -11.756241798400879
    10. '()))
' → logprob: -12.256241798400879

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20186233520507812
    2. ' for' → logprob: -1.9518623352050781
    3. '<|end|>' → logprob: -4.076862335205078
    4. '
' → logprob: -4.701862335205078
    5. 'for' → logprob: -5.076862335205078
    6. ' ' → logprob: -5.451862335205078
    7. '       ' → logprob: -6.826862335205078
    8. '    ' → logprob: -7.451862335205078
    9. '    
' → logprob: -7.451862335205078
    10. '  ' → logprob: -7.576862335205078

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4104897975921631
    2. 'for' (adapté à ' for') → logprob: -1.535489797592163
    3. '   ' → logprob: -2.160489797592163
    4. '       ' → logprob: -5.535490036010742
    5. ' ' → logprob: -7.035490036010742
    6. '	for' → logprob: -7.660490036010742
    7. '    ' → logprob: -8.035490036010742
    8. '  ' → logprob: -8.785490036010742
    9. '```' → logprob: -9.785490036010742
    10. '
' → logprob: -10.160490036010742

Token 58: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0002843384863808751
    2. ' j' → logprob: -8.375284194946289
    3. 'i' → logprob: -10.125284194946289
    4. ' ' → logprob: -11.375284194946289
    5. 'j' → logprob: -13.500284194946289
    6. ' idx' → logprob: -14.500284194946289
    7. '	i' → logprob: -15.625284194946289
    8. ' range' → logprob: -15.750284194946289
    9. ' ' → logprob: -17.12528419494629
    10. ' index' → logprob: -17.25028419494629

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031000610440969467
    2. 'in' → logprob: -3.5310006141662598
    3. ' ' → logprob: -7.78100061416626
    4. '  ' → logprob: -8.031000137329102
    5. ',' → logprob: -8.406000137329102
    6. '	in' → logprob: -9.406000137329102
    7. '<|end|>' → logprob: -9.656000137329102
    8. '   ' → logprob: -10.031000137329102
    9. ' i' → logprob: -10.906000137329102
    10. '    ' → logprob: -11.031000137329102

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020828247070312
    2. 'range' → logprob: -2.350208282470703
    3. '(range' → logprob: -14.350208282470703
    4. ' ' → logprob: -14.350208282470703
    5. '	range' → logprob: -14.975208282470703
    6. ' xrange' → logprob: -16.225208282470703
    7. '  ' → logprob: -17.600208282470703
    8. '   ' → logprob: -17.725208282470703
    9. '```' → logprob: -18.725208282470703
    10. '_range' → logprob: -19.100208282470703

Token 61: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007350924424827099
    2. '(' → logprob: -5.132350921630859
    3. '(len' → logprob: -6.632350921630859
    4. ' (' → logprob: -9.25735092163086
    5. ' n' → logprob: -11.75735092163086
    6. ' ' → logprob: -15.25735092163086
    7. 'n' → logprob: -15.75735092163086
    8. '(m' → logprob: -15.88235092163086
    9. ' len' → logprob: -16.25735092163086
    10. '(s' → logprob: -16.38235092163086

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005221736500971019
    2. ' ):' → logprob: -8.12552261352539
    3. '):
' → logprob: -8.62552261352539
    4. ':' → logprob: -10.50052261352539
    5. ')' → logprob: -11.12552261352539
    6. '       ' → logprob: -13.87552261352539
    7. '   ' → logprob: -14.12552261352539
    8. '+' → logprob: -14.75052261352539
    9. '):
' → logprob: -14.75052261352539
    10. ' ' → logprob: -14.87552261352539

Token 63: '           ' (ID: 352)
  Prédit: ' totals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.7208202481269836
    2. '           ' → logprob: -0.9708202481269836
    3. '       ' → logprob: -2.095820188522339
    4. '<|end|>' → logprob: -4.970820426940918
    5. '+' → logprob: -6.470820426940918
    6. ':' → logprob: -6.720820426940918
    7. '               ' → logprob: -7.845820426940918
    8. '   ' → logprob: -8.220820426940918
    9. 'Totals' → logprob: -8.720820426940918
    10. ')' → logprob: -8.720820426940918

Token 64: ' totals' (ID: 92279)
  Prédit: ' totals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totals' → logprob: -0.00045962471631355584
    2. '           ' → logprob: -8.250459671020508
    3. '               ' → logprob: -9.875459671020508
    4. 'Totals' → logprob: -10.000459671020508
    5. 'tot' → logprob: -10.375459671020508
    6. ' scores' → logprob: -10.500459671020508
    7. 'scores' → logprob: -10.625459671020508
    8. '+' → logprob: -12.500459671020508
    9. '_tot' → logprob: -13.250459671020508
    10. '                   ' → logprob: -13.375459671020508

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013369088992476463
    2. '[' → logprob: -6.626337051391602
    3. ' +=' → logprob: -12.251337051391602
    4. '+=' → logprob: -13.126337051391602
    5. '[I' → logprob: -13.626337051391602
    6. ' [' → logprob: -13.751337051391602
    7. ']+=' → logprob: -14.626337051391602
    8. '```' → logprob: -14.626337051391602
    9. '[j' → logprob: -15.126337051391602
    10. '[
' → logprob: -16.5013370513916

Token 66: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14149129390716553
    2. '+=' → logprob: -2.141491413116455
    3. ']+=' → logprob: -4.516491413116455
    4. ')' → logprob: -6.516491413116455
    5. '+' → logprob: -6.516491413116455
    6. ']' → logprob: -7.891491413116455
    7. ' )' → logprob: -9.266490936279297
    8. ' ]' → logprob: -10.266490936279297
    9. ' +' → logprob: -10.391490936279297
    10. ')+' → logprob: -10.766490936279297

Token 67: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3136936128139496
    2. ' +=' → logprob: -1.313693642616272
    3. '+' → logprob: -7.813693523406982
    4. ']+=' → logprob: -10.81369400024414
    5. '=' → logprob: -12.43869400024414
    6. '+='' → logprob: -13.93869400024414
    7. '+=(' → logprob: -13.93869400024414
    8. ' +' → logprob: -14.06369400024414
    9. '<|end|>' → logprob: -14.93869400024414
    10. '+="' → logprob: -15.43869400024414

Token 68: ' scores' (ID: 18923)
  Prédit: ' scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.22544458508491516
    2. 'scores' → logprob: -1.6004445552825928
    3. '(scores' → logprob: -11.225444793701172
    4. 's' → logprob: -12.100444793701172
    5. 'score' → logprob: -12.225444793701172
    6. ' ' → logprob: -12.225444793701172
    7. ' score' → logprob: -13.475444793701172
    8. '_scores' → logprob: -14.350444793701172
    9. 'cores' → logprob: -15.350444793701172
    10. 'Scores' → logprob: -15.725444793701172

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000181372175575234
    2. '[' → logprob: -8.625181198120117
    3. ' [' → logprob: -13.500181198120117
    4. 'i' → logprob: -16.125181198120117
    5. ' i' → logprob: -16.625181198120117
    6. '[
' → logprob: -17.250181198120117
    7. '[j' → logprob: -17.250181198120117
    8. '[I' → logprob: -17.250181198120117
    9. ' ' → logprob: -17.750181198120117
    10. '[int' → logprob: -18.125181198120117

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.292095299111679e-05
    2. ' )' → logprob: -9.625082969665527
    3. ')
' → logprob: -11.125082969665527
    4. '<|end|>' → logprob: -14.250082969665527
    5. ']' → logprob: -14.875082969665527
    6. '   ' → logprob: -15.250082969665527
    7. ')

' → logprob: -16.00008201599121
    8. '))' → logprob: -16.50008201599121
    9. ' ' → logprob: -16.50008201599121
    10. '}' → logprob: -16.62508201599121

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2637847363948822
    2. '
' → logprob: -1.7637847661972046
    3. 'print' → logprob: -3.263784646987915
    4. '<|end|>' → logprob: -4.763784885406494
    5. '\n' → logprob: -5.138784885406494
    6. '    
' → logprob: -5.263784885406494
    7. '```' → logprob: -7.513784885406494
    8. ' print' → logprob: -8.138784408569336
    9. '[' → logprob: -8.263784408569336
    10. '       ' → logprob: -8.513784408569336

Token 72: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31653931736946106
    2. ' print' → logprob: -2.3165392875671387
    3. '   ' → logprob: -2.8165392875671387
    4. '
' → logprob: -2.8165392875671387
    5. '    
' → logprob: -4.066539287567139
    6. ' totals' → logprob: -4.316539287567139
    7. 'max' → logprob: -5.816539287567139
    8. ' 
' → logprob: -6.066539287567139
    9. '```' → logprob: -6.066539287567139
    10. '\n' → logprob: -6.316539287567139

Token 73: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038530245423316956
    2. '(sum' → logprob: -3.5385303497314453
    3. '(max' → logprob: -4.913530349731445
    4. '(t' → logprob: -7.538530349731445
    5. '('' → logprob: -7.913530349731445
    6. '(min' → logprob: -8.663530349731445
    7. '()' → logprob: -8.913530349731445
    8. '("' → logprob: -9.788530349731445
    9. '(sorted' → logprob: -10.288530349731445
    10. ' (' → logprob: -10.663530349731445

Token 74: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.001329287188127637
    2. '(' → logprob: -6.62632942199707
    3. ' (' → logprob: -13.37632942199707
    4. ')' → logprob: -13.62632942199707
    5. '(total' → logprob: -15.50132942199707
    6. '(s' → logprob: -16.50132942199707
    7. '(scores' → logprob: -16.87632942199707
    8. '(max' → logprob: -17.25132942199707
    9. '()' → logprob: -17.75132942199707
    10. ')(' → logprob: -18.00132942199707

Token 75: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -4.842555426876061e-06
    2. 'o' → logprob: -12.750004768371582
    3. 'otal' → logprob: -14.375004768371582
    4. 'ota' → logprob: -14.875004768371582
    5. 'tot' → logprob: -15.375004768371582
    6. 'als' → logprob: -15.625004768371582
    7. 'otas' → logprob: -15.875004768371582
    8. '-' → logprob: -16.5000057220459
    9. '[' → logprob: -16.6250057220459
    10. 'Totals' → logprob: -16.7500057220459

Token 76: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -3.953082341467962e-05
    2. 'al' → logprob: -10.250039100646973
    3. ' als' → logprob: -13.625039100646973
    4. '[' → logprob: -14.250039100646973
    5. '   ' → logprob: -14.500039100646973
    6. ')' → logprob: -14.625039100646973
    7. 'a' → logprob: -15.500039100646973
    8. '(' → logprob: -15.625039100646973
    9. 'ols' → logprob: -16.00004005432129
    10. '{' → logprob: -16.37504005432129

Token 77: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08922156691551208
    2. '))' → logprob: -2.464221477508545
    3. ' )' → logprob: -9.089221954345703
    4. ')))' → logprob: -9.214221954345703
    5. ',' → logprob: -10.839221954345703
    6. '())' → logprob: -11.339221954345703
    7. '})' → logprob: -11.714221954345703
    8. ' ))' → logprob: -11.964221954345703
    9. '])' → logprob: -12.089221954345703
    10. ')}' → logprob: -13.089221954345703


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 56.00%
Précision adaptée (1ère position): 58.67%
Précision (top 10): 92.00%
================================================================================
