================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    houses = list(map(int, input().split()))
    if k >= n:
        print(0)
        continue
    distances = []
    for i in range(n-1):
        distances.append(houses[i+1] - houses[i])
    distances.sort(reverse=True)
    # Remove the k-1 largest gaps to form k segments
    answer = sum(distances[k-1:])
    print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006619225605390966
    2. '.' → logprob: -8.125661849975586
    3. '(
' → logprob: -8.750661849975586
    4. '()' → logprob: -9.500661849975586
    5. ')' → logprob: -10.375661849975586
    6. ' (' → logprob: -10.500661849975586
    7. '('' → logprob: -11.250661849975586
    8. ''' → logprob: -11.375661849975586
    9. '(

' → logprob: -11.375661849975586
    10. '```' → logprob: -12.000661849975586

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00014013137842994183
    2. '[' → logprob: -10.000140190124512
    3. '.readline' → logprob: -10.625140190124512
    4. ' .' → logprob: -10.875140190124512
    5. '.
' → logprob: -11.750140190124512
    6. '.import' → logprob: -12.625140190124512
    7. '.[' → logprob: -12.750140190124512
    8. '.`' → logprob: -12.750140190124512
    9. '.stdin' → logprob: -12.875140190124512
    10. '.)' → logprob: -13.000140190124512

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3011370599269867
    2. '.' → logprob: -1.426137089729309
    3. '.read' → logprob: -3.9261369705200195
    4. '.readlines' → logprob: -10.42613697052002
    5. '```' → logprob: -11.42613697052002
    6. '.Read' → logprob: -11.92613697052002
    7. '.buffer' → logprob: -12.67613697052002
    8. 'read' → logprob: -12.92613697052002
    9. '.write' → logprob: -13.05113697052002
    10. ' .' → logprob: -13.67613697052002

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 't' (ID: 83)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3520616292953491
    2. '(' → logprob: -1.2270616292953491
    3. 'def' → logprob: -6.602061748504639
    4. '(n' → logprob: -6.977061748504639
    5. '(
' → logprob: -8.35206127166748
    6. 'for' → logprob: -8.47706127166748
    7. '().' → logprob: -8.47706127166748
    8. '()
' → logprob: -8.85206127166748
    9. '()\' → logprob: -9.60206127166748
    10. '()

' → logprob: -9.85206127166748

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29604625701904297
    2. '=' → logprob: -1.671046257019043
    3. ' ' → logprob: -2.796046257019043
    4. 's' → logprob: -5.671046257019043
    5. '  ' → logprob: -6.921046257019043
    6. '.' → logprob: -6.921046257019043
    7. '(' → logprob: -7.671046257019043
    8. '[' → logprob: -7.921046257019043
    9. ')' → logprob: -8.171046257019043
    10. '_' → logprob: -9.171046257019043

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005393245257437229
    2. 'int' → logprob: -5.255393028259277
    3. ' ' → logprob: -8.755393028259277
    4. '=int' → logprob: -13.755393028259277
    5. ' input' → logprob: -15.630393028259277
    6. '[int' → logprob: -15.880393028259277
    7. '	int' → logprob: -16.130393981933594
    8. '  ' → logprob: -16.630393981933594
    9. ' ' → logprob: -16.755393981933594
    10. '<int' → logprob: -16.880393981933594

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004803624760825187
    2. '(input' → logprob: -7.7504801750183105
    3. '('' → logprob: -10.875480651855469
    4. '(t' → logprob: -11.375480651855469
    5. '(sys' → logprob: -12.500480651855469
    6. '(`' → logprob: -12.625480651855469
    7. '()' → logprob: -13.375480651855469
    8. '(open' → logprob: -13.500480651855469
    9. '("("' → logprob: -13.875480651855469
    10. ' (' → logprob: -14.000480651855469

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16377991437911987
    2. '()' → logprob: -2.4137799739837646
    3. ')' → logprob: -2.7887799739837646
    4. '(' → logprob: -9.663780212402344
    5. ' ())' → logprob: -11.163780212402344
    6. '().' → logprob: -12.538780212402344
    7. '()))' → logprob: -12.663780212402344
    8. '())
' → logprob: -12.788780212402344
    9. ' )' → logprob: -13.163780212402344
    10. '))' → logprob: -13.288780212402344

Token 14: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.062002744525671005
    2. '
' → logprob: -3.812002658843994
    3. 'for' → logprob: -3.937002658843994
    4. '\' → logprob: -4.562002658843994
    5. '\r' → logprob: -5.562002658843994
    6. '' → logprob: -6.437002658843994
    7. ' for' → logprob: -6.812002658843994
    8. ' 
' → logprob: -7.687002658843994
    9. '  
' → logprob: -8.187003135681152
    10. '"\' → logprob: -8.812003135681152

Token 15: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00143083231523633
    2. ' i' → logprob: -7.501430988311768
    3. '  ' → logprob: -7.751430988311768
    4. ' t' → logprob: -8.00143051147461
    5. ' ' → logprob: -10.12643051147461
    6. ' space' → logprob: -10.75143051147461
    7. ' )' → logprob: -11.62643051147461
    8. ' a' → logprob: -12.12643051147461
    9. ' ▁' → logprob: -12.12643051147461
    10. ' ‌' → logprob: -12.75143051147461

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031584981828927994
    2. 'in' → logprob: -3.5315849781036377
    3. 'n' → logprob: -7.156585216522217
    4. ' ' → logprob: -7.281585216522217
    5. '_' → logprob: -9.281584739685059
    6. ' i' → logprob: -9.406584739685059
    7. ' _' → logprob: -10.031584739685059
    8. ' n' → logprob: -10.156584739685059
    9. '  ' → logprob: -10.406584739685059
    10. '	in' → logprob: -10.531584739685059

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004641353618353605
    2. ' range' → logprob: -5.379641532897949
    3. '_' → logprob: -11.00464153289795
    4. '_range' → logprob: -12.87964153289795
    5. 't' → logprob: -14.25464153289795
    6. '(range' → logprob: -14.37964153289795
    7. '	range' → logprob: -15.00464153289795
    8. ' ' → logprob: -16.004640579223633
    9. '(' → logprob: -16.629640579223633
    10. ' xrange' → logprob: -16.879640579223633

Token 18: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2074795365333557
    2. ' (' → logprob: -1.707479476928711
    3. ' t' → logprob: -6.082479476928711
    4. ' ' → logprob: -6.707479476928711
    5. ' range' → logprob: -7.082479476928711
    6. ' )' → logprob: -7.457479476928711
    7. '(t' → logprob: -8.207479476928711
    8. '(range' → logprob: -8.332479476928711
    9. ')' → logprob: -8.832479476928711
    10. ' ()' → logprob: -9.332479476928711

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001478796184528619
    2. ':' → logprob: -9.125147819519043
    3. ')' → logprob: -10.750147819519043
    4. '):
' → logprob: -11.000147819519043
    5. ' ):' → logprob: -15.000147819519043
    6. '():' → logprob: -15.625147819519043
    7. ''):' → logprob: -17.25014877319336
    8. ':**' → logprob: -17.25014877319336
    9. '):
' → logprob: -17.50014877319336
    10. '"):' → logprob: -17.50014877319336

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012464095838367939
    2. ':' → logprob: -5.1374640464782715
    3. 'a' → logprob: -5.6374640464782715
    4. 'n' → logprob: -7.2624640464782715
    5. '    ' → logprob: -7.7624640464782715
    6. '    
' → logprob: -7.8874640464782715
    7. ' a' → logprob: -8.38746452331543
    8. ' n' → logprob: -8.76246452331543
    9. ')' → logprob: -9.26246452331543
    10. 'input' → logprob: -9.26246452331543

Token 21: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5848058462142944
    2. ' n' → logprob: -0.8348058462142944
    3. '   ' → logprob: -5.584805965423584
    4. 'data' → logprob: -6.709805965423584
    5. 'a' → logprob: -7.209805965423584
    6. ' data' → logprob: -7.334805965423584
    7. 'num' → logprob: -7.834805965423584
    8. ' a' → logprob: -8.084805488586426
    9. ' number' → logprob: -8.334805488586426
    10. 'x' → logprob: -8.334805488586426

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026628153398633003
    2. '=' → logprob: -3.776628255844116
    3. ' ' → logprob: -6.026628017425537
    4. ',' → logprob: -7.651628017425537
    5. ' ,' → logprob: -8.401628494262695
    6. ')' → logprob: -9.401628494262695
    7. ' +=' → logprob: -10.276628494262695
    8. ' >' → logprob: -10.526628494262695
    9. '=int' → logprob: -11.151628494262695
    10. ' =)' → logprob: -11.151628494262695

Token 23: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8035649061203003
    2. ' k' → logprob: -1.3035649061203003
    3. 'k' → logprob: -1.9285649061203003
    4. ' m' → logprob: -2.05356502532959
    5. ' ' → logprob: -5.05356502532959
    6. 'x' → logprob: -8.80356502532959
    7. ' =' → logprob: -9.55356502532959
    8. ' x' → logprob: -9.67856502532959
    9. 'space' → logprob: -9.92856502532959
    10. 'a' → logprob: -10.42856502532959

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868733048439026
    2. '=' → logprob: -1.1368732452392578
    3. ' ' → logprob: -13.761873245239258
    4. '=input' → logprob: -14.511873245239258
    5. ')' → logprob: -15.386873245239258
    6. '=int' → logprob: -15.886873245239258
    7. '   ' → logprob: -16.261873245239258
    8. ',' → logprob: -16.386873245239258
    9. '=line' → logprob: -16.886873245239258
    10. '    ' → logprob: -17.136873245239258

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.048589639365673065
    2. 'map' → logprob: -3.0485897064208984
    3. ' ' → logprob: -14.298589706420898
    4. ' input' → logprob: -14.548589706420898
    5. 'input' → logprob: -15.298589706420898
    6. ' list' → logprob: -15.298589706420898
    7. '	map' → logprob: -15.423589706420898
    8. '   ' → logprob: -15.673589706420898
    9. 'm' → logprob: -16.6735897064209
    10. '(map' → logprob: -16.6735897064209

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021276673302054405
    2. '(' → logprob: -4.146276473999023
    3. '(str' → logprob: -5.396276473999023
    4. '(lambda' → logprob: -8.146276473999023
    5. '(input' → logprob: -8.146276473999023
    6. '(list' → logprob: -11.021276473999023
    7. 'int' → logprob: -11.146276473999023
    8. '<int' → logprob: -11.146276473999023
    9. 'list' → logprob: -11.271276473999023
    10. '[int' → logprob: -11.771276473999023

Token 27: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5007797479629517
    2. ',' → logprob: -1.0007797479629517
    3. '(input' → logprob: -3.750779628753662
    4. '(' → logprob: -6.000779628753662
    5. ' ,' → logprob: -9.25078010559082
    6. ')' → logprob: -9.25078010559082
    7. ',int' → logprob: -9.75078010559082
    8. ',(' → logprob: -10.12578010559082
    9. 'input' → logprob: -10.25078010559082
    10. '),' → logprob: -11.25078010559082

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519296407699585
    2. ' input' → logprob: -1.5019296407699585
    3. ')' → logprob: -15.12692928314209
    4. ',input' → logprob: -15.75192928314209
    5. '(input' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '	input' → logprob: -17.126930236816406
    8. '<input' → logprob: -17.251930236816406
    9. '=input' → logprob: -17.501930236816406
    10. '[input' → logprob: -18.001930236816406

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1756367712223437e-05
    2. '()' → logprob: -11.375011444091797
    3. '.split' → logprob: -16.250011444091797
    4. ' ().' → logprob: -16.625011444091797
    5. '())' → logprob: -16.875011444091797
    6. ')' → logprob: -17.375011444091797
    7. '(' → logprob: -17.625011444091797
    8. 'split' → logprob: -17.875011444091797
    9. '()
' → logprob: -18.250011444091797
    10. '   ' → logprob: -19.125011444091797

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002040583174675703
    2. 'strip' → logprob: -6.252040386199951
    3. 'rstrip' → logprob: -9.12704086303711
    4. ')' → logprob: -13.87704086303711
    5. ' split' → logprob: -13.87704086303711
    6. '(split' → logprob: -14.00204086303711
    7. 'spl' → logprob: -15.12704086303711
    8. 'rs' → logprob: -15.75204086303711
    9. '_split' → logprob: -16.75204086303711
    10. 'sp' → logprob: -17.62704086303711

Token 31: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006296366918832064
    2. '))' → logprob: -7.375629425048828
    3. '()' → logprob: -13.625629425048828
    4. ')
' → logprob: -14.250629425048828
    5. '())' → logprob: -15.000629425048828
    6. ')`' → logprob: -15.500629425048828
    7. ')))' → logprob: -15.750629425048828
    8. '`)' → logprob: -16.125629425048828
    9. '),' → logprob: -16.375629425048828
    10. ')")' → logprob: -16.500629425048828

Token 32: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4868447184562683
    2. '
' → logprob: -1.486844778060913
    3. '\' → logprob: -2.736844778060913
    4. ' 
' → logprob: -3.486844778060913
    5. '   ' → logprob: -3.861844778060913
    6. '    
' → logprob: -4.611844539642334
    7. '  
' → logprob: -5.236844539642334
    8. '```' → logprob: -5.486844539642334
    9. ' ' → logprob: -5.611844539642334
    10. ''\' → logprob: -5.861844539642334

Token 33: ' houses' (ID: 20327)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7608654499053955
    2. ' 
' → logprob: -1.8858654499053955
    3. ' ' → logprob: -2.1358654499053955
    4. '\n' → logprob: -2.7608654499053955
    5. '
' → logprob: -3.2608654499053955
    6. ')' → logprob: -3.2608654499053955
    7. 'n' → logprob: -3.5108654499053955
    8. '\' → logprob: -4.135865211486816
    9. 'r' → logprob: -4.260865211486816
    10. 'print' → logprob: -4.510865211486816

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017903853207826614
    2. '=' → logprob: -4.142903804779053
    3. '_' → logprob: -7.392903804779053
    4. ')' → logprob: -7.892903804779053
    5. '[' → logprob: -8.392904281616211
    6. '.' → logprob: -8.517904281616211
    7. ' ' → logprob: -9.142904281616211
    8. '=[]' → logprob: -9.392904281616211
    9. '   ' → logprob: -10.017904281616211
    10. '[:]' → logprob: -10.142904281616211

Token 35: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.321246862411499
    2. 'list' → logprob: -1.321246862411499
    3. '[]' → logprob: -5.696247100830078
    4. ' []' → logprob: -6.071247100830078
    5. '[' → logprob: -6.446247100830078
    6. ' [' → logprob: -7.821247100830078
    7. '[list' → logprob: -8.196247100830078
    8. '=list' → logprob: -11.946247100830078
    9. ' ' → logprob: -12.196247100830078
    10. '	list' → logprob: -12.696247100830078

Token 36: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014864159747958183
    2. '(range' → logprob: -7.251486301422119
    3. '()' → logprob: -8.751486778259277
    4. '(map' → logprob: -9.001486778259277
    5. '(int' → logprob: -9.251486778259277
    6. '(input' → logprob: -9.251486778259277
    7. '(
' → logprob: -10.126486778259277
    8. '<|end|>' → logprob: -10.501486778259277
    9. '(

' → logprob: -10.876486778259277
    10. '((' → logprob: -11.001486778259277

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006791393738240004
    2. '(' → logprob: -5.006791591644287
    3. '<int' → logprob: -10.381791114807129
    4. '[int' → logprob: -11.506791114807129
    5. ')' → logprob: -11.631791114807129
    6. '(str' → logprob: -12.006791114807129
    7. '(lambda' → logprob: -12.131791114807129
    8. 'int' → logprob: -12.381791114807129
    9. '<|end|>' → logprob: -13.006791114807129
    10. '```' → logprob: -13.381791114807129

Token 38: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6419355273246765
    2. '(' → logprob: -1.7669355869293213
    3. ',' → logprob: -1.8919355869293213
    4. ',input' → logprob: -1.8919355869293213
    5. '(),' → logprob: -7.766935348510742
    6. '(int' → logprob: -7.891935348510742
    7. ')' → logprob: -8.766935348510742
    8. ' ,' → logprob: -8.891935348510742
    9. ',int' → logprob: -9.391935348510742
    10. 'input' → logprob: -9.891935348510742

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38687679171562195
    2. ' input' → logprob: -1.1368768215179443
    3. '(input' → logprob: -12.636877059936523
    4. ',input' → logprob: -14.386877059936523
    5. '	input' → logprob: -14.511877059936523
    6. ')' → logprob: -14.636877059936523
    7. '<input' → logprob: -15.011877059936523
    8. '=input' → logprob: -15.011877059936523
    9. '))' → logprob: -16.386877059936523
    10. ' ' → logprob: -16.636877059936523

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. '()' → logprob: -12.250005722045898
    3. '.' → logprob: -15.000005722045898
    4. ' ().' → logprob: -16.6250057220459
    5. '.readline' → logprob: -16.6250057220459
    6. '.split' → logprob: -17.7500057220459
    7. '(' → logprob: -17.8750057220459
    8. ')' → logprob: -18.5000057220459
    9. ' .' → logprob: -19.3750057220459
    10. '>().' → logprob: -19.5000057220459

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2842308680992573e-05
    2. 'strip' → logprob: -10.750022888183594
    3. 'rstrip' → logprob: -13.750022888183594
    4. ' split' → logprob: -16.125022888183594
    5. '(split' → logprob: -17.125022888183594
    6. 'spl' → logprob: -17.375022888183594
    7. '_split' → logprob: -19.875022888183594
    8. ')' → logprob: -20.125022888183594
    9. 'read' → logprob: -20.125022888183594
    10. '.split' → logprob: -20.750022888183594

Token 42: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08744519203901291
    2. '))' → logprob: -2.5874452590942383
    3. '())' → logprob: -5.087445259094238
    4. '()' → logprob: -6.337445259094238
    5. ')' → logprob: -8.087445259094238
    6. '(' → logprob: -8.337445259094238
    7. '()))
' → logprob: -10.837445259094238
    8. '()));' → logprob: -12.837445259094238
    9. ' ))' → logprob: -13.587445259094238
    10. '())))' → logprob: -14.087445259094238

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10882609337568283
    2. ')' → logprob: -3.108826160430908
    3. '\n' → logprob: -4.608826160430908
    4. ' 
' → logprob: -4.608826160430908
    5. '<|end|>' → logprob: -4.608826160430908
    6. '.' → logprob: -5.358826160430908
    7. '   ' → logprob: -5.733826160430908
    8. '[' → logprob: -5.858826160430908
    9. '\' → logprob: -5.858826160430908
    10. ' ' → logprob: -5.983826160430908

Token 44: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.0182504653930664
    2. 'houses' → logprob: -2.0182504653930664
    3. 'h' → logprob: -2.3932504653930664
    4. 'count' → logprob: -2.6432504653930664
    5. '   ' → logprob: -2.6432504653930664
    6. 'd' → logprob: -2.7682504653930664
    7. ')' → logprob: -2.8932504653930664
    8. 's' → logprob: -3.2682504653930664
    9. 'result' → logprob: -3.6432504653930664
    10. 'm' → logprob: -3.6432504653930664

Token 45: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.500256359577179
    2. ' k' → logprob: -1.2502562999725342
    3. ' houses' → logprob: -2.625256299972534
    4. 'k' → logprob: -4.250256538391113
    5. ' n' → logprob: -4.625256538391113
    6. ' not' → logprob: -5.000256538391113
    7. 'n' → logprob: -6.500256538391113
    8. ' any' → logprob: -8.000256538391113
    9. 'houses' → logprob: -8.125256538391113
    10. ' (' → logprob: -8.125256538391113

Token 46: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8674433827400208
    2. ' >=' → logprob: -1.492443323135376
    3. '==' → logprob: -1.992443323135376
    4. ' >' → logprob: -2.492443323135376
    5. '>=' → logprob: -3.367443323135376
    6. ' <=' → logprob: -3.492443323135376
    7. '>' → logprob: -3.742443323135376
    8. ' ' → logprob: -4.367443561553955
    9. ' <' → logprob: -4.492443561553955
    10. '%' → logprob: -4.617443561553955

Token 47: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3184199035167694
    2. ' n' → logprob: -1.3184199333190918
    3. ' ' → logprob: -6.193419933319092
    4. ' max' → logprob: -7.318419933319092
    5. 'max' → logprob: -7.443419933319092
    6. ' houses' → logprob: -7.568419933319092
    7. 'len' → logprob: -7.818419933319092
    8. ' len' → logprob: -8.068419456481934
    9. 'houses' → logprob: -9.068419456481934
    10. '	n' → logprob: -9.193419456481934

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001111639547161758
    2. ':
' → logprob: -6.8761115074157715
    3. '   ' → logprob: -10.37611198425293
    4. '-' → logprob: -10.75111198425293
    5. ' :' → logprob: -11.87611198425293
    6. '       ' → logprob: -11.87611198425293
    7. ':return' → logprob: -12.12611198425293
    8. ' or' → logprob: -13.62611198425293
    9. '):' → logprob: -13.75111198425293
    10. ' and' → logprob: -14.25111198425293

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5124173760414124
    2. '       ' → logprob: -1.0124173164367676
    3. '   ' → logprob: -3.6374173164367676
    4. ':
' → logprob: -4.637417316436768
    5. 'print' → logprob: -7.262417316436768
    6. '\n' → logprob: -8.262417793273926
    7. ' print' → logprob: -8.887417793273926
    8. ' :' → logprob: -9.012417793273926
    9. ':\' → logprob: -10.137417793273926
    10. '.' → logprob: -10.262417793273926

Token 50: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.23503974080085754
    2. '   ' → logprob: -2.110039710998535
    3. ' print' → logprob: -2.485039710998535
    4. '       ' → logprob: -5.360039710998535
    5. '    ' → logprob: -9.985039710998535
    6. ' ' → logprob: -10.610039710998535
    7. 'for' → logprob: -10.735039710998535
    8. '  ' → logprob: -11.360039710998535
    9. 'pr' → logprob: -11.485039710998535
    10. '0' → logprob: -11.485039710998535

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1718544363975525
    2. '(n' → logprob: -2.1718544960021973
    3. '(h' → logprob: -4.546854496002197
    4. '(max' → logprob: -4.671854496002197
    5. '(sum' → logprob: -4.796854496002197
    6. '("' → logprob: -5.421854496002197
    7. '()' → logprob: -5.671854496002197
    8. '(k' → logprob: -5.796854496002197
    9. '('' → logprob: -5.921854496002197
    10. '(-' → logprob: -7.296854496002197

Token 52: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7191073894500732
    2. 'max' → logprob: -0.9691073894500732
    3. '0' → logprob: -2.7191073894500732
    4. 'n' → logprob: -3.9691073894500732
    5. 'houses' → logprob: -4.219107627868652
    6. '1' → logprob: -4.594107627868652
    7. '-' → logprob: -4.719107627868652
    8. 'min' → logprob: -5.469107627868652
    9. ' max' → logprob: -6.469107627868652
    10. 'k' → logprob: -6.719107627868652

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011390270665287971
    2. ')
' → logprob: -6.876139163970947
    3. ' )' → logprob: -9.251138687133789
    4. '   ' → logprob: -12.376138687133789
    5. 'else' → logprob: -13.626138687133789
    6. '))' → logprob: -13.626138687133789
    7. ')
' → logprob: -13.751138687133789
    8. '')' → logprob: -14.501138687133789
    9. ' )
' → logprob: -15.376138687133789
    10. '`)' → logprob: -15.376138687133789

Token 54: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020085031166672707
    2. 'else' → logprob: -4.020084857940674
    3. '       ' → logprob: -6.520084857940674
    4. ' else' → logprob: -8.395085334777832
    5. 'continue' → logprob: -9.270085334777832
    6. '    
' → logprob: -9.520085334777832
    7. 'elif' → logprob: -10.895085334777832
    8. ')' → logprob: -11.020085334777832
    9. '	continue' → logprob: -11.770085334777832
    10. '	else' → logprob: -12.270085334777832

Token 55: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5860887765884399
    2. 'continue' (adapté à ' continue') → logprob: -0.8360887765884399
    3. 'else' → logprob: -5.08608865737915
    4. ' continue' → logprob: -6.08608865737915
    5. '       ' → logprob: -6.71108865737915
    6. '	continue' → logprob: -8.086089134216309
    7. 'contin' → logprob: -9.961089134216309
    8. ' else' → logprob: -10.586089134216309
    9. ' ' → logprob: -11.211089134216309
    10. '    
' → logprob: -11.836089134216309

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3526609241962433
    2. '    
' → logprob: -1.727660894393921
    3. '
' → logprob: -2.602660894393921
    4. '<|end|>' → logprob: -3.727660894393921
    5. 'else' → logprob: -4.8526611328125
    6. '  
' → logprob: -5.9776611328125
    7. '  ' → logprob: -6.1026611328125
    8. '\n' → logprob: -6.4776611328125
    9. '   
' → logprob: -6.6026611328125
    10. ' 
' → logprob: -6.7276611328125

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1541433334350586
    2. '    
' → logprob: -2.2791433334350586
    3. '
' → logprob: -4.779143333435059
    4. '  
' → logprob: -5.154143333435059
    5. 'else' → logprob: -5.279143333435059
    6. 'n' → logprob: -5.404143333435059
    7. ' 
' → logprob: -5.529143333435059
    8. '```' → logprob: -6.029143333435059
    9. '   
' → logprob: -6.279143333435059
    10. '  ' → logprob: -6.529143333435059

Token 58: ' distances' (ID: 48294)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8603566288948059
    2. '    
' → logprob: -1.3603565692901611
    3. ' 
' → logprob: -2.360356569290161
    4. 'houses' → logprob: -2.610356569290161
    5. '   ' → logprob: -3.235356569290161
    6. ' houses' → logprob: -4.23535680770874
    7. 'max' → logprob: -4.36035680770874
    8. 'h' → logprob: -4.98535680770874
    9. 'result' → logprob: -4.98535680770874
    10. '\n' → logprob: -5.11035680770874

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008633950725197792
    2. '=' → logprob: -4.758634090423584
    3. ' ' → logprob: -12.008633613586426
    4. '[' → logprob: -12.008633613586426
    5. '_' → logprob: -12.758633613586426
    6. '[:]' → logprob: -13.383633613586426
    7. '[]' → logprob: -14.383633613586426
    8. '.' → logprob: -14.508633613586426
    9. ',' → logprob: -14.758633613586426
    10. ' =[' → logprob: -14.883633613586426

Token 60: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6156361103057861
    2. '[' → logprob: -0.8656361103057861
    3. ' []' → logprob: -3.865636110305786
    4. ' [' → logprob: -4.365635871887207
    5. '[n' → logprob: -6.615635871887207
    6. '[h' → logprob: -6.615635871887207
    7. '[len' → logprob: -6.865635871887207
    8. '[list' → logprob: -8.115635871887207
    9. '[max' → logprob: -8.365635871887207
    10. '[int' → logprob: -8.865635871887207

Token 61: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0764315202832222
    2. ' for' → logprob: -2.9514315128326416
    3. '   ' → logprob: -4.451431751251221
    4. ' ' → logprob: -4.951431751251221
    5. '[' → logprob: -7.326431751251221
    6. ')' → logprob: -8.076431274414062
    7. '\n' → logprob: -8.576431274414062
    8. '\' → logprob: -8.701431274414062
    9. '\t' → logprob: -8.701431274414062
    10. ' 
' → logprob: -8.826431274414062

Token 62: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002337235491722822
    2. ' for' → logprob: -6.127337455749512
    3. ')' → logprob: -9.002337455749512
    4. 'houses' → logprob: -11.377337455749512
    5. '_' → logprob: -12.627337455749512
    6. '[' → logprob: -12.877337455749512
    7. '   ' → logprob: -13.002337455749512
    8. ']' → logprob: -13.252337455749512
    9. ' houses' → logprob: -13.502337455749512
    10. '-' → logprob: -14.252337455749512

Token 63: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030017519369721413
    2. 'i' → logprob: -3.530017614364624
    3. ' ' → logprob: -9.280017852783203
    4. '_' → logprob: -9.530017852783203
    5. ' _' → logprob: -9.530017852783203
    6. '	i' → logprob: -11.280017852783203
    7. '_i' → logprob: -11.405017852783203
    8. '   ' → logprob: -13.655017852783203
    9. '```' → logprob: -14.530017852783203
    10. '  ' → logprob: -14.655017852783203

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027353841811418533
    2. 'in' → logprob: -3.7773537635803223
    3. ' ' → logprob: -5.652353763580322
    4. '+' → logprob: -9.02735424041748
    5. '  ' → logprob: -9.02735424041748
    6. '	in' → logprob: -9.15235424041748
    7. '   ' → logprob: -9.40235424041748
    8. ',' → logprob: -9.90235424041748
    9. 'n' → logprob: -10.65235424041748
    10. '```' → logprob: -11.52735424041748

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759686827659607
    2. ' range' → logprob: -0.8259686827659607
    3. ' ' → logprob: -10.700968742370605
    4. '  ' → logprob: -13.200968742370605
    5. '	range' → logprob: -13.200968742370605
    6. '   ' → logprob: -13.325968742370605
    7. '(range' → logprob: -14.825968742370605
    8. 'r' → logprob: -15.700968742370605
    9. ' xrange' → logprob: -15.700968742370605
    10. '    ' → logprob: -15.950968742370605

Token 66: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026944192126393318
    2. '(n' → logprob: -3.651944160461426
    3. '(k' → logprob: -7.401944160461426
    4. '(len' → logprob: -10.401944160461426
    5. '(
' → logprob: -13.651944160461426
    6. ' (' → logprob: -14.276944160461426
    7. ' ' → logprob: -15.151944160461426
    8. '1' → logprob: -15.151944160461426
    9. '(

' → logprob: -15.401944160461426
    10. '()' → logprob: -15.776944160461426

Token 67: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14339469373226166
    2. ' -' → logprob: -2.018394708633423
    3. ' ' → logprob: -7.893394470214844
    4. ')' → logprob: -8.643394470214844
    5. '1' → logprob: -9.768394470214844
    6. '):' → logprob: -9.893394470214844
    7. '):
' → logprob: -10.518394470214844
    8. '   ' → logprob: -11.018394470214844
    9. ' )' → logprob: -11.893394470214844
    10. ' ):' → logprob: -12.643394470214844

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003936152206733823
    2. ' ' → logprob: -7.875393390655518
    3. '2' → logprob: -12.250393867492676
    4. ')' → logprob: -12.500393867492676
    5. '<|end|>' → logprob: -13.125393867492676
    6. 'k' → logprob: -13.375393867492676
    7. '-' → logprob: -14.500393867492676
    8. '```' → logprob: -15.625393867492676
    9. ' k' → logprob: -15.750393867492676
    10. '<|end|>' → logprob: -16.06289291381836

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026753442944027483
    2. ' ):' → logprob: -8.62526798248291
    3. '):
' → logprob: -9.75026798248291
    4. ')' → logprob: -11.50026798248291
    5. ':' → logprob: -11.62526798248291
    6. ',' → logprob: -12.12526798248291
    7. '-' → logprob: -13.75026798248291
    8. '):
' → logprob: -14.25026798248291
    9. '():' → logprob: -14.37526798248291
    10. ']:' → logprob: -14.50026798248291

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018065532203763723
    2. '<|end|>' → logprob: -7.126806735992432
    3. '   ' → logprob: -7.626806735992432
    4. '    ' → logprob: -8.751806259155273
    5. ' ' → logprob: -8.876806259155273
    6. ' distances' → logprob: -9.626806259155273
    7. ',' → logprob: -10.376806259155273
    8. ')' → logprob: -10.751806259155273
    9. '	   ' → logprob: -10.751806259155273
    10. '      ' → logprob: -11.501806259155273

Token 71: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3652665913105011
    2. ' distances' → logprob: -1.3652665615081787
    3. '   ' → logprob: -3.1152665615081787
    4. ' dist' → logprob: -5.365266799926758
    5. 'd' → logprob: -7.490266799926758
    6. '       ' → logprob: -7.615266799926758
    7. '	dist' → logprob: -8.115266799926758
    8. '```' → logprob: -9.115266799926758
    9. '_dist' → logprob: -10.240266799926758
    10. '    ' → logprob: -10.365266799926758

Token 72: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5833603143692017
    2. '.append' → logprob: -0.8333603143692017
    3. '=' → logprob: -5.083360195159912
    4. '.=' → logprob: -7.458360195159912
    5. ' =' → logprob: -8.08336067199707
    6. ' .' → logprob: -8.58336067199707
    7. ' ' → logprob: -10.45836067199707
    8. ' +=' → logprob: -10.70836067199707
    9. ' .=' → logprob: -11.20836067199707
    10. '.push' → logprob: -11.33336067199707

Token 73: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.007369037717580795
    2. '(' → logprob: -5.007369041442871
    3. '(abs' → logprob: -7.382369041442871
    4. '((' → logprob: -10.632369041442871
    5. ' houses' → logprob: -13.507369041442871
    6. '(n' → logprob: -13.507369041442871
    7. ' (' → logprob: -13.632369041442871
    8. 'houses' → logprob: -14.382369041442871
    9. ')' → logprob: -14.507369041442871
    10. '(H' → logprob: -14.757369041442871

Token 74: 'ouses' (ID: 26940)
  Prédit: 'ouses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouses' → logprob: -0.0005323022487573326
    2. '[' → logprob: -8.125532150268555
    3. '[i' → logprob: -9.625532150268555
    4. ']' → logprob: -10.625532150268555
    5. 'ouse' → logprob: -10.875532150268555
    6. '(' → logprob: -10.875532150268555
    7. '-' → logprob: -11.125532150268555
    8. '   ' → logprob: -11.125532150268555
    9. ')' → logprob: -11.250532150268555
    10. 'abs' → logprob: -11.625532150268555

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004895264864899218
    2. '[' → logprob: -7.625489711761475
    3. ')' → logprob: -14.500489234924316
    4. '[
' → logprob: -14.875489234924316
    5. ' [' → logprob: -15.250489234924316
    6. ')[' → logprob: -15.750489234924316
    7. '[j' → logprob: -16.750490188598633
    8. ']' → logprob: -16.875490188598633
    9. '[I' → logprob: -17.125490188598633
    10. '```' → logprob: -17.375490188598633

Token 76: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002825323725119233
    2. ']' → logprob: -6.3778252601623535
    3. ')' → logprob: -7.2528252601623535
    4. '+]' → logprob: -8.752825736999512
    5. ' +' → logprob: -9.252825736999512
    6. '+)' → logprob: -9.502825736999512
    7. '[' → logprob: -9.752825736999512
    8. ']-' → logprob: -11.627825736999512
    9. '])' → logprob: -12.502825736999512
    10. '-' → logprob: -13.002825736999512

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1283639669418335
    2. ']' → logprob: -2.253364086151123
    3. '-' → logprob: -4.378364086151123
    4. '0' → logprob: -6.503364086151123
    5. ' -' → logprob: -7.128364086151123
    6. ' ' → logprob: -8.003363609313965
    7. ']-' → logprob: -9.628363609313965
    8. ')' → logprob: -10.003363609313965
    9. ' ]' → logprob: -10.253363609313965
    10. '])' → logprob: -11.003363609313965

Token 78: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3926943242549896
    2. '-' → logprob: -1.142694354057312
    3. ')' → logprob: -5.267694473266602
    4. ' ' → logprob: -7.767694473266602
    5. ' )' → logprob: -8.892694473266602
    6. '    ' → logprob: -10.892694473266602
    7. '	' → logprob: -10.892694473266602
    8. '   ' → logprob: -11.392694473266602
    9. '-)' → logprob: -11.642694473266602
    10. ')-' → logprob: -11.767694473266602

Token 79: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.252093642950058
    2. ' -' → logprob: -1.5020936727523804
    3. '-h' → logprob: -9.502093315124512
    4. ')' → logprob: -10.002093315124512
    5. ' ' → logprob: -10.502093315124512
    6. '	' → logprob: -12.377093315124512
    7. '   ' → logprob: -13.002093315124512
    8. ' ' → logprob: -13.127093315124512
    9. '-)' → logprob: -13.377093315124512
    10. '```' → logprob: -13.502093315124512

Token 80: ' houses' (ID: 20327)
  Prédit: 'houses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'houses' → logprob: -0.023308370262384415
    2. ' houses' → logprob: -3.773308277130127
    3. 'house' → logprob: -10.023308753967285
    4. 'h' → logprob: -12.273308753967285
    5. ' ' → logprob: -12.898308753967285
    6. 'homes' → logprob: -13.273308753967285
    7. ')' → logprob: -13.398308753967285
    8. 'hou' → logprob: -13.398308753967285
    9. '	h' → logprob: -14.023308753967285
    10. '   ' → logprob: -14.148308753967285

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004941754741594195
    2. '[' → logprob: -7.625494003295898
    3. ']' → logprob: -13.125494003295898
    4. ' [' → logprob: -13.500494003295898
    5. '[
' → logprob: -14.125494003295898
    6. 'i' → logprob: -14.625494003295898
    7. '][' → logprob: -14.750494003295898
    8. '[I' → logprob: -15.000494003295898
    9. ')' → logprob: -15.500494003295898
    10. '```' → logprob: -15.625494003295898

Token 82: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001657565007917583
    2. '))' → logprob: -8.750165939331055
    3. ')
' → logprob: -12.500165939331055
    4. ' )' → logprob: -13.250165939331055
    5. ')))' → logprob: -14.750165939331055
    6. '`)' → logprob: -15.500165939331055
    7. '   ' → logprob: -15.875165939331055
    8. ')

' → logprob: -16.125165939331055
    9. '])' → logprob: -16.125165939331055
    10. '),' → logprob: -16.250165939331055

Token 83: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2561149299144745
    2. ')' → logprob: -2.881114959716797
    3. 'dist' → logprob: -3.006114959716797
    4. '```' → logprob: -3.631114959716797
    5. '\n' → logprob: -3.881114959716797
    6. '    
' → logprob: -4.631114959716797
    7. '#' → logprob: -5.006114959716797
    8. ' 
' → logprob: -5.006114959716797
    9. 'd' → logprob: -5.256114959716797
    10. ')
' → logprob: -5.506114959716797

Token 84: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0013964263489469886
    2. ' distances' → logprob: -6.876396656036377
    3. ' dist' → logprob: -9.001396179199219
    4. '.dist' → logprob: -9.626396179199219
    5. '   ' → logprob: -10.001396179199219
    6. 'distance' → logprob: -10.876396179199219
    7. 'sorted' → logprob: -11.251396179199219
    8. '-dist' → logprob: -11.251396179199219
    9. '_dist' → logprob: -11.376396179199219
    10. ',' → logprob: -11.751396179199219

Token 85: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5759426951408386
    2. '.' → logprob: -0.8259426951408386
    3. '.s' → logprob: -14.075942993164062
    4. '=' → logprob: -14.450942993164062
    5. ' .' → logprob: -14.950942993164062
    6. '<|end|>' → logprob: -15.200942993164062
    7. '.sorted' → logprob: -15.450942993164062
    8. '.reverse' → logprob: -15.700942993164062
    9. 'sort' → logprob: -15.700942993164062
    10. ').' → logprob: -15.950942993164062

Token 86: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21059690415859222
    2. '(reverse' → logprob: -1.7105969190597534
    3. '(' → logprob: -4.710597038269043
    4. 'reverse' → logprob: -8.960597038269043
    5. '()
' → logprob: -11.835597038269043
    6. '(re' → logprob: -13.960597038269043
    7. '();' → logprob: -14.335597038269043
    8. '()(' → logprob: -14.460597038269043
    9. ' ()' → logprob: -14.585597038269043
    10. '.reverse' → logprob: -14.710597038269043

Token 87: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24679140746593475
    2. '())' → logprob: -1.7467913627624512
    3. '()' → logprob: -3.121791362762451
    4. '(' → logprob: -9.24679183959961
    5. '=True' → logprob: -9.99679183959961
    6. '(True' → logprob: -10.24679183959961
    7. '))' → logprob: -10.49679183959961
    8. ' ())' → logprob: -11.24679183959961
    9. '())
' → logprob: -11.62179183959961
    10. ' )' → logprob: -11.74679183959961

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006712094182148576
    2. ')
' → logprob: -7.50067138671875
    3. '
' → logprob: -9.50067138671875
    4. '<|end|>' → logprob: -11.25067138671875
    5. ' )' → logprob: -11.75067138671875
    6. '   ' → logprob: -12.12567138671875
    7. ',' → logprob: -12.12567138671875
    8. ']' → logprob: -12.87567138671875
    9. '),' → logprob: -13.87567138671875
    10. '' → logprob: -14.00067138671875

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7541257739067078
    2. 'total' → logprob: -2.1291258335113525
    3. '+' → logprob: -2.3791258335113525
    4. 'print' → logprob: -3.0041258335113525
    5. '    
' → logprob: -3.2541258335113525
    6. '<|end|>' → logprob: -3.3791258335113525
    7. 'k' → logprob: -3.5041258335113525
    8. 'sum' → logprob: -3.6291258335113525
    9. '
' → logprob: -3.6291258335113525
    10. ')' → logprob: -4.129125595092773

Token 90: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9468922019004822
    2. 'answer' → logprob: -1.196892261505127
    3. 'result' → logprob: -1.571892261505127
    4. 'total' → logprob: -2.696892261505127
    5. 'sum' → logprob: -4.071892261505127
    6. 'ans' → logprob: -4.321892261505127
    7. 'res' → logprob: -6.071892261505127
    8. 'diff' → logprob: -7.571892261505127
    9. '   ' → logprob: -8.196891784667969
    10. 'cut' → logprob: -8.446891784667969

Token 91: ' Remove' (ID: 18141)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8292591571807861
    2. 'result' → logprob: -1.9542591571807861
    3. ' print' → logprob: -1.9542591571807861
    4. 'answer' → logprob: -1.9542591571807861
    5. ' answer' → logprob: -2.704259157180786
    6. ' result' → logprob: -2.829259157180786
    7. ' ans' → logprob: -5.329258918762207
    8. 'ans' → logprob: -5.954258918762207
    9. ' total' → logprob: -6.329258918762207
    10. 'total' → logprob: -6.454258918762207

Token 92: ' the' (ID: 290)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9171155095100403
    2. 'k' → logprob: -1.0421154499053955
    3. 'the' → logprob: -1.7921154499053955
    4. ' the' → logprob: -2.5421154499053955
    5. '(k' → logprob: -6.792115688323975
    6. 'largest' → logprob: -7.542115688323975
    7. ' distances' → logprob: -8.792115211486816
    8. '[k' → logprob: -9.667115211486816
    9. ' largest' → logprob: -10.167115211486816
    10. '`' → logprob: -10.167115211486816

Token 93: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4090980887413025
    2. 'k' → logprob: -1.1590981483459473
    3. 'largest' → logprob: -4.284098148345947
    4. ' largest' → logprob: -5.409098148345947
    5. ' top' → logprob: -6.284098148345947
    6. 'top' → logprob: -7.534098148345947
    7. '(k' → logprob: -7.659098148345947
    8. ' (' → logprob: -7.909098148345947
    9. 'first' → logprob: -8.909097671508789
    10. ' first' → logprob: -8.909097671508789

Token 94: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6368042826652527
    2. '-' → logprob: -0.7618042826652527
    3. ' largest' → logprob: -6.636804103851318
    4. 'largest' → logprob: -6.636804103851318
    5. '<|end|>' → logprob: -7.011804103851318
    6. ' ' → logprob: -7.761804103851318
    7. '1' → logprob: -9.761804580688477
    8. ' most' → logprob: -10.636804580688477
    9. 'minus' → logprob: -11.136804580688477
    10. ' top' → logprob: -11.136804580688477

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021152703266125172
    2. ' ' → logprob: -8.500211715698242
    3. 'largest' → logprob: -12.250211715698242
    4. '-' → logprob: -13.250211715698242
    5. '<|end|>' → logprob: -15.250211715698242
    6. '```' → logprob: -15.500211715698242
    7. '2' → logprob: -15.625211715698242
    8. ' -' → logprob: -15.750211715698242
    9. ' largest' → logprob: -16.000211715698242
    10. ' ones' → logprob: -16.125211715698242

Token 96: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.12701651453971863
    2. 'largest' → logprob: -2.127016544342041
    3. ' longest' → logprob: -10.002016067504883
    4. 'Largest' → logprob: -10.502016067504883
    5. '-largest' → logprob: -11.627016067504883
    6. ' biggest' → logprob: -13.002016067504883
    7. '```' → logprob: -14.002016067504883
    8. ' distances' → logprob: -14.252016067504883
    9. ' larg' → logprob: -14.877016067504883
    10. ' ' → logprob: -15.252016067504883

Token 97: ' gaps' (ID: 52008)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4292829930782318
    2. ' distances' → logprob: -1.0542830228805542
    3. ' dist' → logprob: -8.929283142089844
    4. 'distance' → logprob: -9.054283142089844
    5. ' gaps' → logprob: -9.554283142089844
    6. 'dif' → logprob: -9.679283142089844
    7. '_dist' → logprob: -9.804283142089844
    8. '<|end|>' → logprob: -10.054283142089844
    9. 'diff' → logprob: -10.804283142089844
    10. ' ' → logprob: -10.804283142089844

Token 98: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3581993281841278
    2. 'for' → logprob: -1.6081993579864502
    3. '   ' → logprob: -2.35819935798645
    4. '<|end|>' → logprob: -5.233199119567871
    5. ',' → logprob: -8.858199119567871
    6. '    ' → logprob: -8.983199119567871
    7. ')' → logprob: -9.233199119567871
    8. ' ' → logprob: -9.608199119567871
    9. '```' → logprob: -9.733199119567871
    10. '<|end|>' → logprob: -9.858199119567871

Token 99: ' form' (ID: 1625)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.006961639039218426
    2. ' split' → logprob: -5.881961822509766
    3. ' create' → logprob: -6.256961822509766
    4. ' get' → logprob: -7.506961822509766
    5. ' partition' → logprob: -7.756961822509766
    6. ' form' → logprob: -8.131961822509766
    7. ' reduce' → logprob: -8.381961822509766
    8. 'min' → logprob: -8.381961822509766
    9. 'split' → logprob: -9.256961822509766
    10. 'partition' → logprob: -9.631961822509766

Token 100: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.47335177659988403
    2. 'k' → logprob: -1.0983517169952393
    3. ' clusters' → logprob: -3.7233517169952393
    4. 'clusters' → logprob: -3.9733517169952393
    5. '<|end|>' → logprob: -8.47335147857666
    6. ' a' → logprob: -9.34835147857666
    7. 'groups' → logprob: -9.72335147857666
    8. ' the' → logprob: -9.72335147857666
    9. 'segments' → logprob: -9.97335147857666
    10. ' groups' → logprob: -10.22335147857666

Token 101: ' segments' (ID: 33749)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3302934169769287
    2. 'segments' → logprob: -1.4552934169769287
    3. ' segments' → logprob: -1.5802934169769287
    4. ' clusters' → logprob: -1.9552934169769287
    5. 'clusters' → logprob: -2.3302934169769287
    6. ' -' → logprob: -4.080293655395508
    7. 'sections' → logprob: -4.580293655395508
    8. '<|end|>' → logprob: -4.580293655395508
    9. 'groups' → logprob: -5.330293655395508
    10. ' groups' → logprob: -5.580293655395508

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06074565276503563
    2. 'total' → logprob: -3.4357457160949707
    3. '    
' → logprob: -5.185745716094971
    4. 'sum' → logprob: -5.560745716094971
    5. ' for' → logprob: -5.685745716094971
    6. 'for' → logprob: -5.810745716094971
    7. ' total' → logprob: -6.310745716094971
    8. 'answer' → logprob: -6.685745716094971
    9. 'distance' → logprob: -6.685745716094971
    10. 'result' → logprob: -6.810745716094971

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07741270214319229
    2. 'print' → logprob: -3.2024126052856445
    3. 'total' → logprob: -3.7024126052856445
    4. 'answer' → logprob: -5.9524126052856445
    5. 'result' → logprob: -6.4524126052856445
    6. '
' → logprob: -6.4524126052856445
    7. ' print' → logprob: -7.0774126052856445
    8. ' total' → logprob: -7.2024126052856445
    9. '    
' → logprob: -7.5774126052856445
    10. 'sum' → logprob: -7.8274126052856445

Token 104: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.032342713326215744
    2. 'answer' (adapté à ' answer') → logprob: -4.032342910766602
    3. ' print' → logprob: -5.032342910766602
    4. 'result' → logprob: -5.157342910766602
    5. '   ' → logprob: -7.407342910766602
    6. 'total' → logprob: -7.532342910766602
    7. 'ans' → logprob: -7.782342910766602
    8. ' answer' → logprob: -8.907342910766602
    9. ' result' → logprob: -10.407342910766602
    10. '    
' → logprob: -10.407342910766602

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003513125702738762
    2. '=' → logprob: -8.000350952148438
    3. ' +=' → logprob: -11.625350952148438
    4. ' ' → logprob: -12.500350952148438
    5. ' -=' → logprob: -12.750350952148438
    6. ' =
' → logprob: -16.375350952148438
    7. 's' → logprob: -17.000350952148438
    8. ' =)' → logprob: -17.125350952148438
    9. ' ' → logprob: -17.375350952148438
    10. ' =
' → logprob: -17.500350952148438

Token 106: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12715120613574982
    2. ' sum' → logprob: -2.8771512508392334
    3. 'dist' → logprob: -3.1271512508392334
    4. 'houses' → logprob: -4.502151012420654
    5. ' distances' → logprob: -5.127151012420654
    6. ' houses' → logprob: -6.877151012420654
    7. ' dist' → logprob: -7.377151012420654
    8. '(sum' → logprob: -8.502151489257812
    9. '(dist' → logprob: -9.502151489257812
    10. 'distance' → logprob: -9.627151489257812

Token 107: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.664371848164592e-05
    2. '(' → logprob: -11.375016212463379
    3. 'dist' → logprob: -12.750016212463379
    4. '(distance' → logprob: -13.375016212463379
    5. '(d' → logprob: -14.875016212463379
    6. '(div' → logprob: -15.875016212463379
    7. ' distances' → logprob: -17.375017166137695
    8. '(diff' → logprob: -17.500017166137695
    9. '	dist' → logprob: -17.500017166137695
    10. ' (' → logprob: -18.500017166137695

Token 108: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -3.8889261304575484e-06
    2. 'aces' → logprob: -13.375003814697266
    3. '   ' → logprob: -14.375003814697266
    4. '```' → logprob: -14.375003814697266
    5. '(' → logprob: -15.125003814697266
    6. 'ences' → logprob: -15.875003814697266
    7. 'ANCES' → logprob: -16.125003814697266
    8. '[' → logprob: -16.250003814697266
    9. 'n' → logprob: -16.375003814697266
    10. 'anc' → logprob: -16.500003814697266

Token 109: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5287461280822754
    2. ')' → logprob: -0.9037461280822754
    3. '[n' → logprob: -5.778746128082275
    4. '[' → logprob: -6.528746128082275
    5. '[:' → logprob: -7.653746128082275
    6. '[(' → logprob: -9.028745651245117
    7. '[:-' → logprob: -9.278745651245117
    8. ' )' → logprob: -9.278745651245117
    9. '[len' → logprob: -9.903745651245117
    10. '[m' → logprob: -10.153745651245117

Token 110: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002777822664938867
    2. '-' → logprob: -9.125277519226074
    3. ':]' → logprob: -9.250277519226074
    4. ':])
' → logprob: -10.125277519226074
    5. '+' → logprob: -11.750277519226074
    6. '+:' → logprob: -11.875277519226074
    7. ':].' → logprob: -11.875277519226074
    8. ':],' → logprob: -12.125277519226074
    9. ':)' → logprob: -13.625277519226074
    10. ':-' → logprob: -13.625277519226074

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4418171455617994e-05
    2. ' ' → logprob: -10.125044822692871
    3. '])' → logprob: -13.125044822692871
    4. ')' → logprob: -14.000044822692871
    5. '   ' → logprob: -15.000044822692871
    6. ':' → logprob: -15.750044822692871
    7. '  ' → logprob: -15.875044822692871
    8. '```' → logprob: -15.937544822692871
    9. '...' → logprob: -16.000043869018555
    10. '<|end|>' → logprob: -16.062543869018555

Token 112: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032235344406217337
    2. '])' → logprob: -8.625322341918945
    3. '+' → logprob: -10.000322341918945
    4. ':)' → logprob: -10.125322341918945
    5. ':])
' → logprob: -10.125322341918945
    6. '...' → logprob: -12.125322341918945
    7. ':]' → logprob: -12.250322341918945
    8. ')' → logprob: -12.750322341918945
    9. ':],' → logprob: -13.875322341918945
    10. ' :' → logprob: -13.875322341918945

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011512246914207935
    2. 'print' → logprob: -4.511512279510498
    3. '    
' → logprob: -8.38651180267334
    4. '
' → logprob: -8.63651180267334
    5. '```' → logprob: -10.63651180267334
    6. ' print' → logprob: -10.88651180267334
    7. ')' → logprob: -11.88651180267334
    8. '<|end|>' → logprob: -12.76151180267334
    9. '\n' → logprob: -13.51151180267334
    10. '	print' → logprob: -13.63651180267334

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31343433260917664
    2. '   ' → logprob: -1.313434362411499
    3. ' print' → logprob: -9.188434600830078
    4. '    
' → logprob: -10.438434600830078
    5. '```' → logprob: -10.688434600830078
    6. ')' → logprob: -11.688434600830078
    7. '
' → logprob: -12.063434600830078
    8. '	print' → logprob: -13.688434600830078
    9. '<|end|>' → logprob: -14.563434600830078
    10. '\n' → logprob: -14.688434600830078

Token 115: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.004192844033241272
    2. '(' → logprob: -5.50419282913208
    3. '()' → logprob: -9.379193305969238
    4. '(ans' → logprob: -10.504193305969238
    5. 'answer' → logprob: -14.129193305969238
    6. ' (' → logprob: -14.254193305969238
    7. '((' → logprob: -14.879193305969238
    8. '(abs' → logprob: -15.129193305969238
    9. '(sum' → logprob: -16.504192352294922
    10. '(int' → logprob: -16.754192352294922

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -17.125
    3. ')
' → logprob: -17.25
    4. ')`' → logprob: -17.5
    5. '))' → logprob: -18.0
    6. '`)' → logprob: -19.0
    7. '）' → logprob: -21.375
    8. '),' → logprob: -21.375
    9. '```' → logprob: -21.625
    10. '')' → logprob: -21.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 114
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 39.47%
Précision adaptée (1ère position): 42.98%
Précision (top 10): 85.09%
================================================================================
