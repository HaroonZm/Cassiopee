================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, W = map(int, input().split())
weights = [int(input()) for _ in range(N)]

MOD = 1000000007

dp = [0] * (W + 1)
dp[0] = 1  # 空の組み合わせ

for w in weights:
    for j in range(W, w - 1, -1):
        dp[j] = (dp[j] + dp[j - w]) % MOD

result = sum(dp) % MOD
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019255947321653366
    2. ',' → logprob: -4.269256114959717
    3. ' =' → logprob: -5.644256114959717
    4. '[' → logprob: -7.644256114959717
    5. '*' → logprob: -8.519255638122559
    6. ':' → logprob: -8.644255638122559
    7. '+' → logprob: -9.019255638122559
    8. '.' → logprob: -9.019255638122559
    9. '_' → logprob: -9.144255638122559
    10. ')' → logprob: -9.269255638122559

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.14273788034915924
    2. 'map' → logprob: -2.267737865447998
    3. ' ' → logprob: -4.142737865447998
    4. '10' → logprob: -5.017737865447998
    5. ' input' → logprob: -6.267737865447998
    6. 'input' → logprob: -6.767737865447998
    7. ' [' → logprob: -7.517737865447998
    8. '20' → logprob: -7.642737865447998
    9. 'int' → logprob: -7.892737865447998
    10. '0' → logprob: -7.892737865447998

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030980149284005165
    2. '(lambda' → logprob: -3.655980110168457
    3. '(int' → logprob: -5.905980110168457
    4. '```' → logprob: -7.530980110168457
    5. '<|end|>' → logprob: -7.780980110168457
    6. '(str' → logprob: -8.155980110168457
    7. ')' → logprob: -8.780980110168457
    8. '[int' → logprob: -9.905980110168457
    9. '(user' → logprob: -10.155980110168457
    10. ' (' → logprob: -10.280980110168457

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.970112681388855
    2. '(input' → logprob: -0.970112681388855
    3. ')' → logprob: -1.470112681388855
    4. '(user' → logprob: -5.9701128005981445
    5. '(int' → logprob: -6.7201128005981445
    6. '```' → logprob: -7.0951128005981445
    7. '(data' → logprob: -7.2201128005981445
    8. '())' → logprob: -7.3451128005981445
    9. '`)' → logprob: -7.3451128005981445
    10. '(token' → logprob: -7.4701128005981445

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02324908785521984
    2. ' input' → logprob: -3.7732491493225098
    3. ')' → logprob: -13.398248672485352
    4. ',input' → logprob: -14.023248672485352
    5. '(input' → logprob: -14.148248672485352
    6. ' ' → logprob: -15.648248672485352
    7. '	input' → logprob: -16.27324867248535
    8. '=input' → logprob: -16.52324867248535
    9. '```' → logprob: -16.64824867248535
    10. '<input' → logprob: -16.64824867248535

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26410701870918274
    2. '()' → logprob: -1.5141069889068604
    3. ')' → logprob: -5.1391072273254395
    4. '().' → logprob: -6.2641072273254395
    5. '('' → logprob: -6.6391072273254395
    6. '(' → logprob: -7.3891072273254395
    7. '(()' → logprob: -7.7641072273254395
    8. '());' → logprob: -7.7641072273254395
    9. '`()' → logprob: -7.7641072273254395
    10. '();)' → logprob: -8.264106750488281

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01471269316971302
    2. 'strip' → logprob: -4.264712810516357
    3. 'rstrip' → logprob: -7.889712810516357
    4. 'read' → logprob: -8.7647123336792
    5. ')' → logprob: -11.5147123336792
    6. ' split' → logprob: -11.8897123336792
    7. 'startswith' → logprob: -15.0147123336792
    8. '(split' → logprob: -15.1397123336792
    9. 'replace' → logprob: -15.3897123336792
    10. ' readline' → logprob: -15.3897123336792

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0078064193949103355
    2. '())' → logprob: -5.132806301116943
    3. '))' → logprob: -7.257806301116943
    4. '()' → logprob: -7.632806301116943
    5. '(' → logprob: -7.632806301116943
    6. '`)' → logprob: -8.757806777954102
    7. ' )' → logprob: -12.007806777954102
    8. '('' → logprob: -12.007806777954102
    9. '')' → logprob: -12.132806777954102
    10. '(
' → logprob: -12.257806777954102

Token 11: 'weights' (ID: 29630)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10149183869361877
    2. 'for' → logprob: -3.851491928100586
    3. 'x' → logprob: -4.101491928100586
    4. 'A' → logprob: -4.226491928100586
    5. 'arr' → logprob: -4.851491928100586
    6. 'data' → logprob: -4.851491928100586
    7. 'd' → logprob: -5.226491928100586
    8. 's' → logprob: -5.851491928100586
    9. 'dp' → logprob: -5.976491928100586
    10. 'array' → logprob: -6.101491928100586

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00041994822095148265
    2. '\[' → logprob: -9.000419616699219
    3. ')' → logprob: -9.750419616699219
    4. '[]' → logprob: -10.250419616699219
    5. '[w' → logprob: -10.375419616699219
    6. '[N' → logprob: -11.250419616699219
    7. '```' → logprob: -11.250419616699219
    8. '[i' → logprob: -11.250419616699219
    9. '[...]' → logprob: -11.375419616699219
    10. '<|end|>' → logprob: -11.375419616699219

Token 13: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4627351760864258
    2. 'list' → logprob: -1.3377351760864258
    3. '[' → logprob: -2.462735176086426
    4. '[list' → logprob: -4.337735176086426
    5. ' []' → logprob: -5.462735176086426
    6. ' list' → logprob: -5.587735176086426
    7. '[input' → logprob: -7.337735176086426
    8. ' [' → logprob: -7.337735176086426
    9. '[int' → logprob: -8.337735176086426
    10. 'weights' → logprob: -10.337735176086426

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003174621844664216
    2. ')' → logprob: -6.628174781799316
    3. ']int' → logprob: -7.378174781799316
    4. 'map' → logprob: -7.628174781799316
    5. '0' → logprob: -8.003174781799316
    6. ' int' → logprob: -8.378174781799316
    7. ']' → logprob: -9.128174781799316
    8. ')]' → logprob: -11.128174781799316
    9. '(int' → logprob: -11.128174781799316
    10. '<int' → logprob: -12.003174781799316

Token 15: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25469204783439636
    2. '(' → logprob: -1.5046920776367188
    3. '(x' → logprob: -6.004692077636719
    4. '()' → logprob: -9.629692077636719
    5. ' (' → logprob: -9.879692077636719
    6. '(i' → logprob: -10.129692077636719
    7. '(
' → logprob: -10.129692077636719
    8. ']' → logprob: -11.004692077636719
    9. ')' → logprob: -11.004692077636719
    10. 'input' → logprob: -11.129692077636719

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002087853499688208
    2. '()' → logprob: -9.000208854675293
    3. '()]' → logprob: -9.500208854675293
    4. '()),' → logprob: -12.750208854675293
    5. '()))' → logprob: -13.000208854675293
    6. ')' → logprob: -13.375208854675293
    7. '())
' → logprob: -13.500208854675293
    8. ' ())' → logprob: -14.125208854675293
    9. ')]' → logprob: -14.750208854675293
    10. '())

' → logprob: -15.375208854675293

Token 17: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0799778625369072
    2. '())' → logprob: -3.0799777507781982
    3. '()' → logprob: -3.8299777507781982
    4. ')]' → logprob: -4.954977989196777
    5. '()]' → logprob: -6.454977989196777
    6. '(' → logprob: -7.954977989196777
    7. ' )' → logprob: -9.704977989196777
    8. ']' → logprob: -10.079977989196777
    9. 'for' → logprob: -10.204977989196777
    10. ')])' → logprob: -10.579977989196777

Token 18: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007512333802878857
    2. '_' → logprob: -5.13251256942749
    3. ' _' → logprob: -7.50751256942749
    4. ' ' → logprob: -7.50751256942749
    5. '_range' → logprob: -8.632512092590332
    6. 'range' → logprob: -8.632512092590332
    7. '(range' → logprob: -9.882512092590332
    8. '(' → logprob: -10.507512092590332
    9. ' i' → logprob: -10.757512092590332
    10. ' in' → logprob: -10.882512092590332

Token 19: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.32909101247787476
    2. ' range' → logprob: -1.3290910720825195
    3. ' in' → logprob: -4.2040910720825195
    4. 'in' → logprob: -7.3290910720825195
    5. '(range' → logprob: -9.82909107208252
    6. '	range' → logprob: -10.57909107208252
    7. '_' → logprob: -10.95409107208252
    8. ' xrange' → logprob: -12.57909107208252
    9. '_range' → logprob: -12.70409107208252
    10. 'ange' → logprob: -12.70409107208252

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '(range' → logprob: -16.628177642822266
    4. '	range' → logprob: -16.753177642822266
    5. ' ' → logprob: -18.753177642822266
    6. '```' → logprob: -19.003177642822266
    7. '.range' → logprob: -19.378177642822266
    8. '  ' → logprob: -19.878177642822266
    9. '_range' → logprob: -20.128177642822266
    10. 'rang' → logprob: -20.253177642822266

Token 21: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.014171851798892021
    2. '(' → logprob: -4.264172077178955
    3. '(n' → logprob: -11.889171600341797
    4. ' (' → logprob: -15.139171600341797
    5. '(
' → logprob: -15.639171600341797
    6. '(W' → logprob: -15.639171600341797
    7. '(

' → logprob: -15.889171600341797
    8. 'N' → logprob: -16.014171600341797
    9. ')' → logprob: -16.264171600341797
    10. '(range' → logprob: -16.389171600341797

Token 22: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00044663884909823537
    2. ']' → logprob: -8.000446319580078
    3. ')' → logprob: -9.125446319580078
    4. '])]' → logprob: -14.000446319580078
    5. ')])' → logprob: -14.625446319580078
    6. '')]' → logprob: -15.125446319580078
    7. '])' → logprob: -15.625446319580078
    8. ')],' → logprob: -15.750446319580078
    9. '))' → logprob: -16.625446319580078
    10. ')]
' → logprob: -16.750446319580078

Token 23: 'MOD' (ID: 52135)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.45449551939964294
    2. 'weights' → logprob: -1.3294955492019653
    3. 'total' → logprob: -3.704495429992676
    4. 'count' → logprob: -4.329495429992676
    5. 'result' → logprob: -4.454495429992676
    6. 'sorted' → logprob: -4.704495429992676
    7. 'DP' → logprob: -5.079495429992676
    8. 'max' → logprob: -5.329495429992676
    9. 'counts' → logprob: -5.329495429992676
    10. 'valid' → logprob: -5.954495429992676

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04365887492895126
    2. '=' → logprob: -3.168658971786499
    3. ')' → logprob: -7.66865873336792
    4. ' )' → logprob: -9.293659210205078
    5. ' ' → logprob: -10.168659210205078
    6. '_' → logprob: -10.668659210205078
    7. '<|end|>' → logprob: -11.668659210205078
    8. ' =)' → logprob: -11.793659210205078
    9. ',' → logprob: -12.168659210205078
    10. ' =
' → logprob: -12.293659210205078

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4027581214904785
    2. '10' → logprob: -1.1527581214904785
    3. '100' → logprob: -4.1527581214904785
    4. '1' → logprob: -10.27775764465332
    5. ' (' → logprob: -13.27775764465332
    6. '(' → logprob: -13.52775764465332
    7. '998' → logprob: -13.52775764465332
    8. ' ' → logprob: -14.27775764465332
    9. '109' → logprob: -15.40275764465332
    10. '101' → logprob: -15.90275764465332

Token 26: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25226926803588867
    2. '100' → logprob: -1.5022692680358887
    3. ' ' → logprob: -9.127269744873047
    4. '998' → logprob: -9.127269744873047
    5. '1' → logprob: -9.252269744873047
    6. '(' → logprob: -10.627269744873047
    7. '123' → logprob: -14.502269744873047
    8. '2' → logprob: -14.877269744873047
    9. 'int' → logprob: -15.002269744873047
    10. '101' → logprob: -15.127269744873047

Token 27: '000' (ID: 1302)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3517475128173828
    2. '\' → logprob: -2.851747512817383
    3. '0' → logprob: -3.101747512817383
    4. '**' → logprob: -3.476747512817383
    5. '*' → logprob: -3.601747512817383
    6. ' ' → logprob: -3.726747512817383
    7. '\n' → logprob: -3.851747512817383
    8. '10' → logprob: -4.101747512817383
    9. '```' → logprob: -4.726747512817383
    10. 'dp' → logprob: -4.851747512817383

Token 28: '000' (ID: 1302)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1579866111278534
    2. '0' → logprob: -3.032986640930176
    3. '=' → logprob: -3.532986640930176
    4. ' =' → logprob: -4.032986640930176
    5. ' +' → logprob: -4.157986640930176
    6. ' ' → logprob: -4.907986640930176
    7. '\' → logprob: -5.907986640930176
    8. '```' → logprob: -5.907986640930176
    9. ']' → logprob: -6.032986640930176
    10. '*' → logprob: -6.282986640930176

Token 29: '7' (ID: 22)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06926582008600235
    2. '\' → logprob: -3.944265842437744
    3. '0' → logprob: -4.444265842437744
    4. '\n' → logprob: -4.444265842437744
    5. ' +' → logprob: -5.569265842437744
    6. '10' → logprob: -5.819265842437744
    7. '=' → logprob: -5.819265842437744
    8. ')' → logprob: -5.944265842437744
    9. ' ' → logprob: -6.319265842437744
    10. '7' → logprob: -6.319265842437744

Token 30: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15796993672847748
    2. '
' → logprob: -2.0329699516296387
    3. ' dp' → logprob: -5.032969951629639
    4. 'result' → logprob: -6.407969951629639
    5. '
' → logprob: -6.782969951629639
    6. '' → logprob: -6.782969951629639
    7. 'DP' → logprob: -7.032969951629639
    8. ' 
' → logprob: -7.282969951629639
    9. 'weights' → logprob: -7.282969951629639
    10. '_dp' → logprob: -7.907969951629639

Token 31: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.277553620748222e-05
    2. 'DP' → logprob: -11.125062942504883
    3. ' dp' → logprob: -11.375062942504883
    4. 'max' → logprob: -11.875062942504883
    5. 'prefix' → logprob: -12.000062942504883
    6. 'dist' → logprob: -12.250062942504883
    7. 'result' → logprob: -12.500062942504883
    8. 'count' → logprob: -12.750062942504883
    9. 'ways' → logprob: -13.250062942504883
    10. 'sum' → logprob: -13.500062942504883

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005131765268743038
    2. '=' → logprob: -5.380131721496582
    3. '[' → logprob: -7.755131721496582
    4. ' ' → logprob: -10.005131721496582
    5. ' =[' → logprob: -10.505131721496582
    6. '=[' → logprob: -12.630131721496582
    7. '_' → logprob: -12.880131721496582
    8. '```' → logprob: -14.255131721496582
    9. ']' → logprob: -14.380131721496582
    10. '[:]' → logprob: -14.880131721496582

Token 33: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4755418300628662
    2. ' [' → logprob: -0.9755418300628662
    3. ' [[' → logprob: -7.225542068481445
    4. '[[' → logprob: -7.225542068481445
    5. '[-' → logprob: -12.975542068481445
    6. '[n' → logprob: -13.475542068481445
    7. '[len' → logprob: -14.100542068481445
    8. '[int' → logprob: -14.225542068481445
    9. ' [[]' → logprob: -14.600542068481445
    10. '[a' → logprob: -15.225542068481445

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010834212880581617
    2. '1' → logprob: -6.8760833740234375
    3. '[' → logprob: -11.001083374023438
    4. 'False' → logprob: -11.126083374023438
    5. ' ' → logprob: -11.251083374023438
    6. ']' → logprob: -12.626083374023438
    7. 'True' → logprob: -13.876083374023438
    8. '(' → logprob: -14.626083374023438
    9. '{' → logprob: -14.626083374023438
    10. '-' → logprob: -15.126083374023438

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002617274411022663
    2. ' ]' → logprob: -6.502617359161377
    3. ']*(' → logprob: -7.877617359161377
    4. ' for' → logprob: -7.877617359161377
    5. ']*' → logprob: -8.002616882324219
    6. ',' → logprob: -11.502616882324219
    7. 'for' → logprob: -12.002616882324219
    8. ']+' → logprob: -13.127616882324219
    9. '[' → logprob: -13.877616882324219
    10. ')' → logprob: -14.377616882324219

Token 36: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1347202062606812
    2. '+' → logprob: -1.5097202062606812
    3. '[' → logprob: -1.7597202062606812
    4. ' *' → logprob: -1.7597202062606812
    5. ' +' → logprob: -3.6347203254699707
    6. ',' → logprob: -4.134720325469971
    7. '(' → logprob: -4.259720325469971
    8. ' (' → logprob: -4.509720325469971
    9. ' ' → logprob: -4.634720325469971
    10. '*(' → logprob: -4.759720325469971

Token 37: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -3.523948907968588e-05
    2. '(' → logprob: -11.125035285949707
    3. ' (' → logprob: -11.750035285949707
    4. 'W' → logprob: -12.000035285949707
    5. '(w' → logprob: -12.625035285949707
    6. '(N' → logprob: -13.875035285949707
    7. '(weights' → logprob: -14.000035285949707
    8. '((' → logprob: -15.000035285949707
    9. '(max' → logprob: -15.125035285949707
    10. '(sum' → logprob: -15.750035285949707

Token 38: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0008092674543149769
    2. '(W' → logprob: -7.375809192657471
    3. ' W' → logprob: -8.875809669494629
    4. '100' → logprob: -11.375809669494629
    5. 'sum' → logprob: -12.250809669494629
    6. '(' → logprob: -12.250809669494629
    7. '500' → logprob: -12.875809669494629
    8. ')' → logprob: -13.125809669494629
    9. '10' → logprob: -13.250809669494629
    10. ' ' → logprob: -13.500809669494629

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019287518225610256
    2. ' +' → logprob: -6.251928806304932
    3. '+
' → logprob: -16.251928329467773
    4. '＋' → logprob: -18.251928329467773
    5. ' +
' → logprob: -19.626928329467773
    6. '1' → logprob: -19.626928329467773
    7. '```' → logprob: -20.001928329467773
    8. ' ' → logprob: -20.126928329467773
    9. ' plus' → logprob: -20.876928329467773
    10. '+

' → logprob: -21.126928329467773

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.876326560974121
    4. '  ' → logprob: -16.751325607299805
    5. '```' → logprob: -17.501325607299805
    6. '１' → logprob: -18.188825607299805
    7. '2' → logprob: -18.251325607299805
    8. ' ' → logprob: -18.313825607299805
    9. '۱' → logprob: -18.501325607299805
    10. '

' → logprob: -18.751325607299805

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '１' → logprob: -17.87500762939453
    4. '2' → logprob: -18.00000762939453
    5. '   ' → logprob: -18.37500762939453
    6. '۱' → logprob: -18.37500762939453
    7. '```' → logprob: -19.31250762939453
    8. '

' → logprob: -19.37500762939453
    9. '  ' → logprob: -19.68750762939453
    10. '১' → logprob: -19.87500762939453

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. ')
' → logprob: -11.500015258789062
    3. ' )' → logprob: -12.500015258789062
    4. ')

' → logprob: -14.875015258789062
    5. ']' → logprob: -14.875015258789062
    6. '）' → logprob: -16.000015258789062
    7. '`)' → logprob: -16.375015258789062
    8. '```' → logprob: -16.375015258789062
    9. '),' → logprob: -16.500015258789062
    10. ')`' → logprob: -16.625015258789062

Token 43: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006320207612589002
    2. '
' → logprob: -7.875631809234619
    3. ' dp' → logprob: -9.250632286071777
    4. '\' → logprob: -9.875632286071777
    5. '\n' → logprob: -10.250632286071777
    6. '```' → logprob: -11.000632286071777
    7. '(dp' → logprob: -11.375632286071777
    8. ' 
' → logprob: -11.625632286071777
    9. '  
' → logprob: -11.750632286071777
    10. '	dp' → logprob: -12.000632286071777

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '<|end|>' → logprob: -14.125001907348633
    3. '[
' → logprob: -14.875001907348633
    4. '0' → logprob: -15.125001907348633
    5. '\[' → logprob: -15.500001907348633
    6. '=' → logprob: -15.625001907348633
    7. '```' → logprob: -15.625001907348633
    8. ' [' → logprob: -16.250001907348633
    9. ' =' → logprob: -16.250001907348633
    10. ' ' → logprob: -17.625001907348633

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '[' → logprob: -17.5
    4. '۰' → logprob: -17.75
    5. '000' → logprob: -18.4375
    6. '０' → logprob: -18.6875
    7. ']' → logprob: -18.875
    8. '```' → logprob: -19.0
    9. '०' → logprob: -19.125
    10. '00' → logprob: -19.5

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3425219549390022e-05
    2. ' ]' → logprob: -11.50001335144043
    3. ']=' → logprob: -12.75001335144043
    4. '=' → logprob: -15.12501335144043
    5. ')' → logprob: -16.50001335144043
    6. ' =' → logprob: -18.00001335144043
    7. ']
' → logprob: -18.75001335144043
    8. '`]' → logprob: -18.75001335144043
    9. '']' → logprob: -18.87501335144043
    10. '[' → logprob: -19.12501335144043

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326213479042053
    2. ' =' → logprob: -1.3132621049880981
    3. '＝' → logprob: -16.688262939453125
    4. '=True' → logprob: -16.813262939453125
    5. ' ' → logprob: -16.938262939453125
    6. ' +=' → logprob: -17.063262939453125
    7. '1' → logprob: -17.313262939453125
    8. ' |=' → logprob: -17.813262939453125
    9. '=int' → logprob: -17.938262939453125
    10. ' =)' → logprob: -17.938262939453125

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '0' → logprob: -18.62500762939453
    4. '```' → logprob: -19.31250762939453
    5. '１' → logprob: -19.62500762939453
    6. '۱' → logprob: -19.93750762939453
    7. '১' → logprob: -20.68750762939453
    8. '`' → logprob: -21.00000762939453
    9. '   ' → logprob: -21.12500762939453
    10. '१' → logprob: -21.18750762939453

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -16.5
    4. 'True' → logprob: -18.625
    5. '```' → logprob: -19.1875
    6. '۱' → logprob: -19.25
    7. '１' → logprob: -19.3125
    8. '১' → logprob: -20.3125
    9. '   ' → logprob: -20.625
    10. '१' → logprob: -20.6875

Token 50: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5735796093940735
    2. '\n' → logprob: -1.5735795497894287
    3. 'for' → logprob: -2.0735795497894287
    4. ' for' → logprob: -2.4485795497894287
    5. '```' → logprob: -5.073579788208008
    6. '<|end|>' → logprob: -5.823579788208008
    7. ' 
' → logprob: -6.073579788208008
    8. '  
' → logprob: -6.198579788208008
    9. '' → logprob: -6.573579788208008
    10. '\' → logprob: -7.448579788208008

Token 51: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08355043828487396
    2. '\n' → logprob: -3.083550453186035
    3. ' for' → logprob: -4.458550453186035
    4. 'for' → logprob: -4.958550453186035
    5. ' 
' → logprob: -5.208550453186035
    6. '  
' → logprob: -5.708550453186035
    7. '<|end|>' → logprob: -5.833550453186035
    8. '
' → logprob: -5.958550453186035
    9. '```' → logprob: -7.458550453186035
    10. '' → logprob: -7.708550453186035

Token 52: ' 空' (ID: 159302)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32668960094451904
    2. ' #' → logprob: -2.2016897201538086
    3. ' number' → logprob: -2.7016897201538086
    4. ' ' → logprob: -3.8266897201538086
    5. 'number' → logprob: -4.326689720153809
    6. 'There' → logprob: -4.451689720153809
    7. 'Number' → logprob: -4.576689720153809
    8. 'possible' → logprob: -5.451689720153809
    9. 'count' → logprob: -5.826689720153809
    10. ' There' → logprob: -5.826689720153809

Token 53: 'の' (ID: 3385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '組' (ID: 62886)
  Prédit: '集合'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '集合' → logprob: -0.3828824758529663
    2. '部分' → logprob: -1.6328824758529663
    3. 'subset' → logprob: -2.507882595062256
    4. '組' → logprob: -3.632882595062256
    5. '選' → logprob: -4.757882595062256
    6. ' subset' → logprob: -6.632882595062256
    7. 'リ' → logprob: -7.007882595062256
    8. 'set' → logprob: -7.007882595062256
    9. '集' → logprob: -7.132882595062256
    10. 'セット' → logprob: -7.257882595062256

Token 55: 'み' (ID: 17897)
  Prédit: 'み'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'み' → logprob: -0.0010236396919935942
    2. '合' → logprob: -7.501023769378662
    3. '합' → logprob: -8.251023292541504
    4. '```' → logprob: -9.251023292541504
    5. '合わせ' → logprob: -10.626023292541504
    6. '

' → logprob: -10.876023292541504
    7. '' → logprob: -11.376023292541504
    8. '\' → logprob: -11.876023292541504
    9. '{' → logprob: -12.251023292541504
    10. '-' → logprob: -12.251023292541504

Token 56: '合わせ' (ID: 92253)
  Prédit: 'み'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'み' → logprob: -0.005051590967923403
    2. '合わせ' → logprob: -6.130051612854004
    3. '合' → logprob: -6.755051612854004
    4. '합' → logprob: -7.755051612854004
    5. '```' → logprob: -7.880051612854004
    6. '

' → logprob: -8.380051612854004
    7. 'わせ' → logprob: -8.630051612854004
    8. '{' → logprob: -8.880051612854004
    9. '\' → logprob: -9.505051612854004
    10. '-' → logprob: -10.380051612854004

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8657897710800171
    2. ' for' → logprob: -1.115789771080017
    3. 'for' → logprob: -1.740789771080017
    4. '<|end|>' → logprob: -3.3657898902893066
    5. '\n' → logprob: -3.4907898902893066
    6. '```' → logprob: -4.865789890289307
    7. '<|end|>' → logprob: -6.740789890289307
    8. '
' → logprob: -7.240789890289307
    9. 'newline' → logprob: -7.990789890289307
    10. '  
' → logprob: -7.990789890289307

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023395836353302002
    2. ' for' → logprob: -4.023396015167236
    3. '
' → logprob: -5.273396015167236
    4. '\n' → logprob: -9.648395538330078
    5. '```' → logprob: -10.898395538330078
    6. '<|end|>' → logprob: -11.273395538330078
    7. '\' → logprob: -12.773395538330078
    8. '	for' → logprob: -13.273395538330078
    9. '' → logprob: -14.023395538330078
    10. '<|end|>' → logprob: -14.023395538330078

Token 59: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.1749347448348999
    2. 'w' → logprob: -2.1749348640441895
    3. ' weight' → logprob: -3.2999348640441895
    4. ' i' → logprob: -5.5499348640441895
    5. 'weight' → logprob: -5.5499348640441895
    6. ' _' → logprob: -6.7999348640441895
    7. '_' → logprob: -7.6749348640441895
    8. 'i' → logprob: -7.9249348640441895
    9. '_weight' → logprob: -9.799934387207031
    10. '_w' → logprob: -9.924934387207031

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007681515067815781
    2. 'in' → logprob: -4.882681369781494
    3. ' ' → logprob: -9.757681846618652
    4. ' i' → logprob: -12.257681846618652
    5. ',' → logprob: -13.007681846618652
    6. '	in' → logprob: -13.007681846618652
    7. 'i' → logprob: -13.132681846618652
    8. 'n' → logprob: -13.382681846618652
    9. 's' → logprob: -14.132681846618652
    10. 'w' → logprob: -14.132681846618652

Token 61: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.031245457008481026
    2. 'range' → logprob: -3.656245470046997
    3. ' weights' → logprob: -5.531245231628418
    4. ' range' → logprob: -7.156245231628418
    5. 'weight' → logprob: -8.906245231628418
    6. 'weig' → logprob: -11.406245231628418
    7. '(weights' → logprob: -11.531245231628418
    8. '.weights' → logprob: -12.156245231628418
    9. '_weights' → logprob: -12.156245231628418
    10. 'w' → logprob: -12.531245231628418

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.822646693966817e-06
    2. ':
' → logprob: -12.125007629394531
    3. ' :' → logprob: -13.625007629394531
    4. ',' → logprob: -15.000007629394531
    5. '):' → logprob: -15.250007629394531
    6. ':**' → logprob: -15.375007629394531
    7. '：' → logprob: -15.750007629394531
    8. ':

' → logprob: -16.50000762939453
    9. '=' → logprob: -17.12500762939453
    10. ':
' → logprob: -17.75000762939453

Token 63: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009744282811880112
    2. 'for' → logprob: -5.259744167327881
    3. '   ' → logprob: -5.509744167327881
    4. '```' → logprob: -8.884744644165039
    5. ' range' → logprob: -9.259744644165039
    6. ' ' → logprob: -9.509744644165039
    7. ' dp' → logprob: -9.634744644165039
    8. 'range' → logprob: -11.259744644165039
    9. '    ' → logprob: -11.259744644165039
    10. 'dp' → logprob: -11.384744644165039

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12716013193130493
    2. 'for' (adapté à ' for') → logprob: -2.12716007232666
    3. '   ' → logprob: -8.37716007232666
    4. '	for' → logprob: -14.12716007232666
    5. ' ' → logprob: -14.62716007232666
    6. ' dp' → logprob: -15.50216007232666
    7. 'dp' → logprob: -15.75216007232666
    8. '    ' → logprob: -16.252161026000977
    9. ' if' → logprob: -16.377161026000977
    10. '```' → logprob: -16.502161026000977

Token 65: ' j' (ID: 441)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.572016179561615
    2. 'weight' → logprob: -1.4470162391662598
    3. ' i' → logprob: -2.3220162391662598
    4. ' j' → logprob: -3.1970162391662598
    5. 'j' → logprob: -3.5720162391662598
    6. 'i' → logprob: -4.19701623916626
    7. ' w' → logprob: -5.19701623916626
    8. ' capacity' → logprob: -5.69701623916626
    9. 'w' → logprob: -5.94701623916626
    10. ' cap' → logprob: -6.57201623916626

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004645742010325193
    2. 'in' → logprob: -5.379645824432373
    3. ' ' → logprob: -11.504645347595215
    4. ' i' → logprob: -11.629645347595215
    5. 'range' → logprob: -13.004645347595215
    6. '   ' → logprob: -13.879645347595215
    7. '	in' → logprob: -13.879645347595215
    8. 'n' → logprob: -14.629645347595215
    9. '  ' → logprob: -14.629645347595215
    10. ' range' → logprob: -15.379645347595215

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692978978157043
    2. 'range' → logprob: -2.126929759979248
    3. 'r' → logprob: -14.501930236816406
    4. '   ' → logprob: -15.251930236816406
    5. '	range' → logprob: -15.251930236816406
    6. ' ' → logprob: -15.376930236816406
    7. '(range' → logprob: -15.751930236816406
    8. ' reversed' → logprob: -15.751930236816406
    9. 'rang' → logprob: -16.376930236816406
    10. 're' → logprob: -16.626930236816406

Token 68: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.1603577584028244
    2. '(w' → logprob: -1.9103577136993408
    3. '(j' → logprob: -9.410357475280762
    4. '(' → logprob: -10.160357475280762
    5. 'W' → logprob: -11.660357475280762
    6. 'w' → logprob: -12.785357475280762
    7. '(J' → logprob: -15.160357475280762
    8. '(len' → logprob: -15.535357475280762
    9. '(N' → logprob: -15.785357475280762
    10. '(weight' → logprob: -16.035358428955078

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4196949005126953
    2. ' -' → logprob: -1.5446949005126953
    3. '+' → logprob: -2.6696949005126953
    4. '-w' → logprob: -3.2946949005126953
    5. ' +' → logprob: -4.044694900512695
    6. ' ,' → logprob: -6.294694900512695
    7. ',w' → logprob: -6.419694900512695
    8. '-' → logprob: -6.544694900512695
    9. 'w' → logprob: -7.669694900512695
    10. '+w' → logprob: -9.669694900512695

Token 70: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12693093717098236
    2. ' w' → logprob: -2.1269309520721436
    3. 'j' → logprob: -13.626931190490723
    4. '-w' → logprob: -14.751931190490723
    5. '	w' → logprob: -14.876931190490723
    6. ' -' → logprob: -15.876931190490723
    7. '   ' → logprob: -15.876931190490723
    8. '<w' → logprob: -16.001930236816406
    9. ' ' → logprob: -16.251930236816406
    10. 'wj' → logprob: -16.251930236816406

Token 71: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023245712742209435
    2. ' -' → logprob: -3.7732458114624023
    3. '−' → logprob: -15.898245811462402
    4. '1' → logprob: -16.023244857788086
    5. ' ' → logprob: -17.273244857788086
    6. '```' → logprob: -18.273244857788086
    7. '   ' → logprob: -18.523244857788086
    8. '0' → logprob: -18.773244857788086
    9. '－' → logprob: -18.773244857788086
    10. '19' → logprob: -18.898244857788086

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.312512397766113
    4. '１' → logprob: -15.750012397766113
    5. '   ' → logprob: -17.062511444091797
    6. '...' → logprob: -17.375011444091797
    7. '}' → logprob: -17.500011444091797
    8. ')' → logprob: -17.500011444091797
    9. '

' → logprob: -17.500011444091797
    10. '`' → logprob: -17.562511444091797

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.750009536743164
    3. '```' → logprob: -14.625009536743164
    4. '１' → logprob: -15.750009536743164
    5. '   ' → logprob: -15.937509536743164
    6. '

' → logprob: -16.625009536743164
    7. ')' → logprob: -16.625009536743164
    8. '-' → logprob: -16.812509536743164
    9. '' → logprob: -16.812509536743164
    10. '...' → logprob: -17.062509536743164

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12085437029600143
    2. '-' → logprob: -2.370854377746582
    3. ',-' → logprob: -4.120854377746582
    4. ' -' → logprob: -5.745854377746582
    5. ' ,' → logprob: -7.120854377746582
    6. '   ' → logprob: -9.370854377746582
    7. '```' → logprob: -10.245854377746582
    8. ' ,-' → logprob: -10.245854377746582
    9. '-,' → logprob: -11.245854377746582
    10. ' ' → logprob: -11.370854377746582

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06994665414094925
    2. ' -' → logprob: -2.694946765899658
    3. ' ' → logprob: -11.8199462890625
    4. '   ' → logprob: -13.4449462890625
    5. '```' → logprob: -14.4449462890625
    6. '	' → logprob: -14.8199462890625
    7. '  ' → logprob: -15.1949462890625
    8. '−' → logprob: -16.4449462890625
    9. '    ' → logprob: -16.6949462890625
    10. '-w' → logprob: -16.8199462890625

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. ')' → logprob: -15.250004768371582
    4. '```' → logprob: -15.500004768371582
    5. '１' → logprob: -16.375003814697266
    6. '   ' → logprob: -17.187503814697266
    7. '):
' → logprob: -17.500003814697266
    8. '2' → logprob: -18.250003814697266
    9. '):

' → logprob: -18.437503814697266
    10. '
' → logprob: -18.562503814697266

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20578552782535553
    2. '):
' → logprob: -1.7057855129241943
    3. '-' → logprob: -5.830785751342773
    4. '):
' → logprob: -7.705785751342773
    5. '   ' → logprob: -7.830785751342773
    6. ')' → logprob: -8.830785751342773
    7. ':' → logprob: -8.955785751342773
    8. ' ):' → logprob: -8.955785751342773
    9. ' -' → logprob: -9.455785751342773
    10. '1' → logprob: -10.580785751342773

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00534523231908679
    2. ' dp' → logprob: -5.630345344543457
    3. 'dp' → logprob: -6.380345344543457
    4. '	dp' → logprob: -10.880345344543457
    5. '   ' → logprob: -11.005345344543457
    6. '(dp' → logprob: -12.630345344543457
    7. '           ' → logprob: -12.880345344543457
    8. '```' → logprob: -13.255345344543457
    9. '      ' → logprob: -13.380345344543457
    10. '	   ' → logprob: -13.630345344543457

Token 79: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.22683848440647125
    2. ' dp' → logprob: -1.60183846950531
    3. '       ' → logprob: -6.8518385887146
    4. '           ' → logprob: -8.476838111877441
    5. '   ' → logprob: -9.351838111877441
    6. '	dp' → logprob: -9.726838111877441
    7. '(dp' → logprob: -11.851838111877441
    8. '_dp' → logprob: -13.476838111877441
    9. '```' → logprob: -13.726838111877441
    10. ' ' → logprob: -14.351838111877441

Token 80: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00014060820103622973
    2. '[' → logprob: -8.875140190124512
    3. 'j' → logprob: -14.625140190124512
    4. '```' → logprob: -16.000141143798828
    5. '[js' → logprob: -16.250141143798828
    6. '[
' → logprob: -16.875141143798828
    7. ' [' → logprob: -17.000141143798828
    8. '[i' → logprob: -17.625141143798828
    9. '	j' → logprob: -19.125141143798828
    10. '[...]' → logprob: -19.250141143798828

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035608073812909424
    2. ']+=' → logprob: -8.00035572052002
    3. ' ]' → logprob: -10.87535572052002
    4. ']=' → logprob: -14.25035572052002
    5. '[' → logprob: -15.50035572052002
    6. '+' → logprob: -15.75035572052002
    7. ']+' → logprob: -15.75035572052002
    8. '```' → logprob: -16.500356674194336
    9. '=' → logprob: -16.625356674194336
    10. ')' → logprob: -16.750356674194336

Token 82: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.39231741428375244
    2. '=' → logprob: -1.1423174142837524
    3. ' +=' → logprob: -5.392317295074463
    4. ' =' → logprob: -7.767317295074463
    5. '+' → logprob: -8.017317771911621
    6. '(' → logprob: -9.892317771911621
    7. ']+=' → logprob: -10.767317771911621
    8. '=(' → logprob: -10.767317771911621
    9. '+=(' → logprob: -11.017317771911621
    10. '|' → logprob: -11.767317771911621

Token 83: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0014102356508374214
    2. '(' → logprob: -6.626410007476807
    3. ' (' → logprob: -9.501410484313965
    4. '(max' → logprob: -12.501410484313965
    5. '(df' → logprob: -13.251410484313965
    6. '(D' → logprob: -14.251410484313965
    7. 'dp' → logprob: -15.001410484313965
    8. '(dx' → logprob: -15.126410484313965
    9. '(dd' → logprob: -15.126410484313965
    10. '(dc' → logprob: -15.251410484313965

Token 84: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.76628842484206e-05
    2. ' dp' → logprob: -9.750067710876465
    3. '(dp' → logprob: -11.625067710876465
    4. '	dp' → logprob: -15.375067710876465
    5. 'd' → logprob: -17.00006675720215
    6. '_dp' → logprob: -17.50006675720215
    7. '   ' → logprob: -18.87506675720215
    8. '```' → logprob: -19.00006675720215
    9. '.dp' → logprob: -19.37506675720215
    10. '(' → logprob: -19.50006675720215

Token 85: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. 'j' → logprob: -16.000001907348633
    4. '```' → logprob: -18.500001907348633
    5. ' [' → logprob: -18.750001907348633
    6. '[js' → logprob: -19.125001907348633
    7. ')[' → logprob: -19.250001907348633
    8. '[w' → logprob: -19.500001907348633
    9. '[i' → logprob: -19.625001907348633
    10. '	j' → logprob: -19.625001907348633

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012715430930256844
    2. '[j' → logprob: -6.751271724700928
    3. ']+' → logprob: -9.50127124786377
    4. '[' → logprob: -11.62627124786377
    5. 'j' → logprob: -12.12627124786377
    6. '-' → logprob: -12.37627124786377
    7. ']-' → logprob: -13.50127124786377
    8. ' ]' → logprob: -13.50127124786377
    9. '-j' → logprob: -13.87627124786377
    10. 'w' → logprob: -14.00127124786377

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141851902008057
    2. ' +' → logprob: -1.7014185190200806
    3. '[' → logprob: -13.20141887664795
    4. '+j' → logprob: -14.07641887664795
    5. '＋' → logprob: -14.82641887664795
    6. '```' → logprob: -14.82641887664795
    7. '0' → logprob: -14.95141887664795
    8. ' ' → logprob: -15.45141887664795
    9. '+p' → logprob: -15.57641887664795
    10. '-' → logprob: -16.076417922973633

Token 88: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.16022615134716034
    2. 'dp' → logprob: -1.9102261066436768
    3. '	dp' → logprob: -13.160225868225098
    4. '_dp' → logprob: -16.660226821899414
    5. '(dp' → logprob: -17.285226821899414
    6. '   ' → logprob: -17.660226821899414
    7. ' ' → logprob: -17.785226821899414
    8. ' ' → logprob: -18.285226821899414
    9. '.dp' → logprob: -18.660226821899414
    10. '    ' → logprob: -19.660226821899414

Token 89: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. 'j' → logprob: -17.375
    4. ' [' → logprob: -18.875
    5. '[js' → logprob: -19.625
    6. '   ' → logprob: -20.0
    7. '```' → logprob: -20.375
    8. '[
' → logprob: -20.375
    9. '	j' → logprob: -21.5
    10. '
' → logprob: -21.875

Token 90: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16317760944366455
    2. '-' → logprob: -2.163177490234375
    3. '-j' → logprob: -3.788177490234375
    4. '[j' → logprob: -4.788177490234375
    5. '[' → logprob: -5.413177490234375
    6. 'j' → logprob: -9.663177490234375
    7. ' j' → logprob: -10.038177490234375
    8. ' ' → logprob: -10.163177490234375
    9. '-w' → logprob: -11.163177490234375
    10. ']' → logprob: -12.413177490234375

Token 91: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.494741632603109e-05
    2. ' w' → logprob: -9.37508487701416
    3. '	w' → logprob: -17.500085830688477
    4. ''w' → logprob: -18.000085830688477
    5. 'ｗ' → logprob: -19.125085830688477
    6. 'j' → logprob: -19.375085830688477
    7. '   ' → logprob: -19.500085830688477
    8. '_w' → logprob: -19.500085830688477
    9. ' ' → logprob: -19.750085830688477
    10. '<w' → logprob: -20.125085830688477

Token 92: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.3676733690081164e-05
    2. ')' → logprob: -11.25002384185791
    3. ']' → logprob: -12.00002384185791
    4. ' ])' → logprob: -12.62502384185791
    5. '))' → logprob: -15.00002384185791
    6. '   ' → logprob: -15.00002384185791
    7. ''])' → logprob: -15.87502384185791
    8. '）' → logprob: -16.125022888183594
    9. '})' → logprob: -16.750022888183594
    10. '       ' → logprob: -17.250022888183594

Token 93: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3138062357902527
    2. ' %' → logprob: -1.3138062953948975
    3. ')' → logprob: -7.563806056976318
    4. ')%' → logprob: -10.813806533813477
    5. ' ' → logprob: -12.938806533813477
    6. ' ' → logprob: -14.063806533813477
    7. '`' → logprob: -14.938806533813477
    8. ' %=' → logprob: -15.688806533813477
    9. '％' → logprob: -15.688806533813477
    10. '%A' → logprob: -15.813806533813477

Token 94: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007101670489646494
    2. ' MOD' → logprob: -7.2507100105285645
    3. ' ' → logprob: -16.250709533691406
    4. '_MOD' → logprob: -16.750709533691406
    5. 'MO' → logprob: -18.125709533691406
    6. 'M' → logprob: -18.125709533691406
    7. '.MOD' → logprob: -18.250709533691406
    8. '100' → logprob: -18.375709533691406
    9. '```' → logprob: -19.125709533691406
    10. '(M' → logprob: -20.250709533691406

Token 95: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9195265173912048
    2. '<|end|>' → logprob: -0.9195265173912048
    3. 'print' → logprob: -2.5445265769958496
    4. '
' → logprob: -2.6695265769958496
    5. '```' → logprob: -3.6695265769958496
    6. ')' → logprob: -4.16952657699585
    7. '\' → logprob: -6.16952657699585
    8. '  
' → logprob: -6.29452657699585
    9. '#' → logprob: -6.29452657699585
    10. 'newline' → logprob: -6.41952657699585

Token 96: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007600766839459538
    2. 'p' → logprob: -8.375760078430176
    3. '#' → logprob: -8.750760078430176
    4. 'pr' → logprob: -9.375760078430176
    5. ')' → logprob: -9.875760078430176
    6. '\n' → logprob: -10.000760078430176
    7. '
' → logprob: -10.375760078430176
    8. '#print' → logprob: -10.625760078430176
    9. '<|end|>' → logprob: -10.750760078430176
    10. '```' → logprob: -10.875760078430176

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6397110223770142
    2. '=' → logprob: -0.7647110223770142
    3. '_' → logprob: -5.389710903167725
    4. ' ' → logprob: -6.514710903167725
    5. 's' → logprob: -7.639710903167725
    6. ')' → logprob: -8.639711380004883
    7. '<|end|>' → logprob: -9.389711380004883
    8. '[' → logprob: -9.514711380004883
    9. '[:]' → logprob: -9.514711380004883
    10. '```' → logprob: -10.639711380004883

Token 98: ' sum' (ID: 4215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12695425748825073
    2. ' dp' → logprob: -2.1269543170928955
    3. '(dp' → logprob: -10.626954078674316
    4. 'sum' → logprob: -14.126954078674316
    5. '	dp' → logprob: -14.501954078674316
    6. ' sum' → logprob: -15.251954078674316
    7. '_dp' → logprob: -16.251955032348633
    8. ' ' → logprob: -16.501955032348633
    9. '```' → logprob: -16.626955032348633
    10. 'str' → logprob: -16.876955032348633

Token 99: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0067501855082809925
    2. '(' → logprob: -5.006750106811523
    3. '([' → logprob: -10.881750106811523
    4. 'dp' → logprob: -11.256750106811523
    5. '(
' → logprob: -14.131750106811523
    6. '(`' → logprob: -14.506750106811523
    7. '(d' → logprob: -14.631750106811523
    8. '((' → logprob: -14.756750106811523
    9. '	dp' → logprob: -15.506750106811523
    10. ' (' → logprob: -15.631750106811523

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10836506634950638
    2. '[' → logprob: -2.483365058898926
    3. ')%' → logprob: -3.983365058898926
    4. '[:' → logprob: -7.733365058898926
    5. '%' → logprob: -9.108365058898926
    6. '[j' → logprob: -10.858365058898926
    7. '[:-' → logprob: -11.483365058898926
    8. '[%' → logprob: -11.733365058898926
    9. ' )' → logprob: -12.233365058898926
    10. '(' → logprob: -12.358365058898926

Token 101: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02324792370200157
    2. ' %' → logprob: -3.7732479572296143
    3. ')' → logprob: -13.523247718811035
    4. '
' → logprob: -14.773247718811035
    5. '```' → logprob: -15.273247718811035
    6. 'print' → logprob: -15.398247718811035
    7. ')%' → logprob: -16.77324867248535
    8. '%n' → logprob: -17.02324867248535
    9. '%D' → logprob: -17.14824867248535
    10. ' ' → logprob: -17.14824867248535

Token 102: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.003177952254191041
    2. ' MOD' → logprob: -5.753178119659424
    3. '_MOD' → logprob: -15.878177642822266
    4. ' ' → logprob: -16.378177642822266
    5. 'MO' → logprob: -16.753177642822266
    6. '.MOD' → logprob: -17.253177642822266
    7. 'M' → logprob: -18.253177642822266
    8. 'MD' → logprob: -19.378177642822266
    9. 'MODULE' → logprob: -20.753177642822266
    10. '100' → logprob: -21.253177642822266

Token 103: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16009452939033508
    2. '<|end|>' → logprob: -2.1600944995880127
    3. '
' → logprob: -3.5350944995880127
    4. ' print' → logprob: -6.285094738006592
    5. '\n' → logprob: -6.660094738006592
    6. '```' → logprob: -9.535094261169434
    7. ')' → logprob: -9.660094261169434
    8. '#print' → logprob: -10.160094261169434
    9. '<|end|>' → logprob: -10.160094261169434
    10. '#' → logprob: -10.410094261169434

Token 104: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018125296628568321
    2. '
' → logprob: -9.375181198120117
    3. '<|end|>' → logprob: -10.000181198120117
    4. '```' → logprob: -11.000181198120117
    5. ' print' → logprob: -11.125181198120117
    6. '\n' → logprob: -11.750181198120117
    7. '\' → logprob: -12.625181198120117
    8. '#print' → logprob: -13.375181198120117
    9. ')' → logprob: -13.375181198120117
    10. '#' → logprob: -13.625181198120117

Token 105: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12915442883968353
    2. '(result' → logprob: -2.1291544437408447
    3. '(dp' → logprob: -6.129154205322266
    4. '()' → logprob: -11.629154205322266
    5. '(res' → logprob: -12.004154205322266
    6. 'result' → logprob: -12.129154205322266
    7. '("("' → logprob: -12.379154205322266
    8. '(results' → logprob: -12.754154205322266
    9. '(`' → logprob: -12.754154205322266
    10. '(
' → logprob: -12.754154205322266

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -16.625
    4. '))' → logprob: -16.875
    5. ')`' → logprob: -18.0
    6. '）' → logprob: -18.25
    7. '()' → logprob: -19.25
    8. '(' → logprob: -19.75
    9. ')**' → logprob: -19.75
    10. '')' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 104
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 44.23%
Précision adaptée (1ère position): 45.19%
Précision (top 10): 83.65%
================================================================================
