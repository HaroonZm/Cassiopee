================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    try:
        line = input()
        cards_str = line.split(",")
        cards = [int(c) for c in cards_str]

        counts = {}
        for c in cards:
            if c in counts:
                counts[c] += 1
            else:
                counts[c] = 1

        values = sorted(counts.values(), reverse=True)

        # 判定用にカードの数字をソート
        sorted_cards = sorted(cards)

        # ストレート判定関数
        def is_straight(cards):
            # 普通に並んでいるか
            cards_sorted = sorted(set(cards))
            if len(cards_sorted) != 5:
                return False
            # 例えば 1 2 3 4 5 の判定
            normal_straight = True
            for i in range(4):
                if cards_sorted[i+1] - cards_sorted[i] != 1:
                    normal_straight = False
                    break
            if normal_straight:
                return True
            # A を 14 として最後にする場合（10 J Q K A）
            # J=11,Q=12,K=13,A=1 のため、A=1は特殊な扱いで、10,11,12,13,1はストレート扱い
            # なので、A を 14 とみなしてチェックしてみる
            ace_as_14 = [14 if x==1 else x for x in cards]
            ace_cards_sorted = sorted(set(ace_as_14))
            if len(ace_cards_sorted) != 5:
                return False
            for i in range(4):
                if ace_cards_sorted[i+1] - ace_cards_sorted[i] != 1:
                    return False
            return True

        # 役判定
        if 4 in values:
            print("four card")
        elif 3 in values and 2 in values:
            print("full house")
        elif is_straight(cards):
            print("straight")
        elif 3 in values:
            print("three card")
        elif values.count(2) == 2:
            print("two pair")
        elif 2 in values:
            print("one pair")
        else:
            print("null")

    except EOFError:
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005376627668738365
    2. ' :' → logprob: -7.625537872314453
    3. ':
' → logprob: -11.125537872314453
    4. '   ' → logprob: -11.250537872314453
    5. '       ' → logprob: -11.625537872314453
    6. '):' → logprob: -12.625537872314453
    7. '    ' → logprob: -12.875537872314453
    8. '():' → logprob: -13.125537872314453
    9. '':' → logprob: -14.375537872314453
    10. ' ' → logprob: -14.875537872314453

Token 6: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029804764315485954
    2. ':' → logprob: -3.7798047065734863
    3. '   ' → logprob: -5.154804706573486
    4. '    ' → logprob: -8.279805183410645
    5. ' :' → logprob: -8.279805183410645
    6. ':
' → logprob: -9.904805183410645
    7. ' ' → logprob: -9.904805183410645
    8. '      ' → logprob: -10.529805183410645
    9. '     ' → logprob: -10.779805183410645
    10. '        ' → logprob: -11.029805183410645

Token 7: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048394642770290375
    2. 'input' → logprob: -4.298394680023193
    3. '       ' → logprob: -4.673394680023193
    4. '   ' → logprob: -5.048394680023193
    5. 'response' → logprob: -5.423394680023193
    6. 'data' → logprob: -6.173394680023193
    7. 'print' → logprob: -6.298394680023193
    8. '               ' → logprob: -6.298394680023193
    9. 'value' → logprob: -6.548394680023193
    10. ' ' → logprob: -7.673394680023193

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36380308866500854
    2. '=' → logprob: -1.4888031482696533
    3. '.' → logprob: -3.3638031482696533
    4. '       ' → logprob: -4.488802909851074
    5. ')' → logprob: -4.863802909851074
    6. '.readline' → logprob: -4.988802909851074
    7. ':' → logprob: -5.488802909851074
    8. '[' → logprob: -5.613802909851074
    9. '[:]' → logprob: -5.738802909851074
    10. '           ' → logprob: -6.363802909851074

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5760473608970642
    2. 'input' → logprob: -0.8260473608970642
    3. ' f' → logprob: -10.57604694366455
    4. 'file' → logprob: -10.82604694366455
    5. ' file' → logprob: -10.95104694366455
    6. 'sys' → logprob: -11.95104694366455
    7. ' raw' → logprob: -12.32604694366455
    8. ' ' → logprob: -12.57604694366455
    9. ' sys' → logprob: -12.57604694366455
    10. 'raw' → logprob: -12.70104694366455

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006675116717815399
    2. '()' → logprob: -5.1316752433776855
    3. '('' → logprob: -7.5066752433776855
    4. ')' → logprob: -10.006674766540527
    5. '("("' → logprob: -10.131674766540527
    6. '(
' → logprob: -10.506674766540527
    7. ''' → logprob: -10.881674766540527
    8. '("")' → logprob: -11.506674766540527
    9. '```' → logprob: -11.631674766540527
    10. ' (' → logprob: -12.006674766540527

Token 11: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8323628306388855
    2. '       ' → logprob: -1.0823628902435303
    3. '   ' → logprob: -2.4573628902435303
    4. '    ' → logprob: -3.7073628902435303
    5. ' ' → logprob: -3.7073628902435303
    6. ' if' → logprob: -4.832362651824951
    7. '.' → logprob: -4.832362651824951
    8. '\n' → logprob: -4.957362651824951
    9. '```' → logprob: -4.957362651824951
    10. ':' → logprob: -5.082362651824951

Token 12: ' cards' (ID: 10541)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04338450729846954
    2. ' if' → logprob: -3.418384552001953
    3. '           ' → logprob: -5.168384552001953
    4. 'if' → logprob: -6.168384552001953
    5. '.' → logprob: -7.668384552001953
    6. '   ' → logprob: -7.918384552001953
    7. ' except' → logprob: -8.668384552001953
    8. 'except' → logprob: -8.793384552001953
    9. '        ' → logprob: -8.918384552001953
    10. '```' → logprob: -9.168384552001953

Token 13: '_str' (ID: 6182)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5879879593849182
    2. '[' → logprob: -0.8379879593849182
    3. '[:]' → logprob: -6.337987899780273
    4. '_' → logprob: -6.462987899780273
    5. '.append' → logprob: -6.462987899780273
    6. 's' → logprob: -6.712987899780273
    7. '=' → logprob: -7.337987899780273
    8. '.split' → logprob: -7.462987899780273
    9. ' =' → logprob: -7.587987899780273
    10. '[count' → logprob: -7.712987899780273

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22682149708271027
    2. '=' → logprob: -1.6018215417861938
    3. '[' → logprob: -7.226821422576904
    4. 's' → logprob: -8.601821899414062
    5. '.split' → logprob: -8.726821899414062
    6. ' +=' → logprob: -9.726821899414062
    7. '[:]' → logprob: -9.851821899414062
    8. '.' → logprob: -10.101821899414062
    9. '   ' → logprob: -10.476821899414062
    10. ')' → logprob: -10.726821899414062

Token 15: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03980884328484535
    2. 'line' → logprob: -3.414808750152588
    3. ' cards' → logprob: -5.414808750152588
    4. ' input' → logprob: -6.664808750152588
    5. 'input' → logprob: -8.664809226989746
    6. ' lines' → logprob: -9.414809226989746
    7. 'cards' → logprob: -9.664809226989746
    8. ' ' → logprob: -9.914809226989746
    9. ' card' → logprob: -11.539809226989746
    10. 'lines' → logprob: -11.914809226989746

Token 16: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.13990789651870728
    2. '.strip' → logprob: -2.6399078369140625
    3. '.' → logprob: -2.8899078369140625
    4. '.rstrip' → logprob: -6.3899078369140625
    5. '.replace' → logprob: -6.8899078369140625
    6. '+' → logprob: -7.3899078369140625
    7. '.readline' → logprob: -8.889907836914062
    8. ' .' → logprob: -10.264907836914062
    9. ' +' → logprob: -10.389907836914062
    10. '.startswith' → logprob: -10.764907836914062

Token 17: '(",' (ID: 23824)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.022251823917031288
    2. '(' → logprob: -4.397251605987549
    3. '("("' → logprob: -4.772251605987549
    4. ''' → logprob: -6.897251605987549
    5. '()' → logprob: -8.897252082824707
    6. '('.')' → logprob: -10.147252082824707
    7. '"' → logprob: -11.272252082824707
    8. '```' → logprob: -12.397252082824707
    9. '('(' → logprob: -12.397252082824707
    10. '("' → logprob: -12.522252082824707

Token 18: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.38922086358070374
    2. ' ")' → logprob: -1.1392208337783813
    3. '"' → logprob: -6.764220714569092
    4. ')' → logprob: -7.014220714569092
    5. '')' → logprob: -9.63922119140625
    6. ' )' → logprob: -9.88922119140625
    7. ' ')' → logprob: -9.88922119140625
    8. ' ")
' → logprob: -10.13922119140625
    9. ' "' → logprob: -10.76422119140625
    10. '")
' → logprob: -10.76422119140625

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44118672609329224
    2. '[' → logprob: -1.6911866664886475
    3. ' ' → logprob: -2.4411866664886475
    4. 's' → logprob: -2.9411866664886475
    5. '   ' → logprob: -4.316186904907227
    6. '    ' → logprob: -5.066186904907227
    7. '        ' → logprob: -5.191186904907227
    8. '<|end|>' → logprob: -5.941186904907227
    9. '  ' → logprob: -7.066186904907227
    10. '[]' → logprob: -7.191186904907227

Token 20: ' cards' (ID: 10541)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23037900030612946
    2. ' cards' → logprob: -2.605379104614258
    3. '[' → logprob: -2.980379104614258
    4. 'cards' (adapté à ' cards') → logprob: -3.105379104614258
    5. '   ' → logprob: -4.230379104614258
    6. ' ' → logprob: -5.355379104614258
    7. 'c' → logprob: -5.355379104614258
    8. '        ' → logprob: -5.855379104614258
    9. '    ' → logprob: -6.480379104614258
    10. ' c' → logprob: -6.605379104614258

Token 21: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3698771595954895
    2. '_str' → logprob: -1.2448770999908447
    3. ' =' → logprob: -4.619877338409424
    4. '_tokens' → logprob: -6.119877338409424
    5. '_list' → logprob: -6.244877338409424
    6. '_ids' → logprob: -6.994877338409424
    7. '_counts' → logprob: -7.119877338409424
    8. '_s' → logprob: -7.369877338409424
    9. '[' → logprob: -7.494877338409424
    10. '=' → logprob: -7.619877338409424

Token 22: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.020600629970431328
    2. ' list' → logprob: -4.52060079574585
    3. '[list' → logprob: -5.27060079574585
    4. '[' → logprob: -6.02060079574585
    5. 'list' → logprob: -7.14560079574585
    6. '[int' → logprob: -7.52060079574585
    7. ' []' → logprob: -7.64560079574585
    8. '[line' → logprob: -10.270600318908691
    9. '[List' → logprob: -11.145600318908691
    10. ' ' → logprob: -11.145600318908691

Token 23: 'int' (ID: 491)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.054824959486722946
    2. 'int' → logprob: -3.3048250675201416
    3. ' card' → logprob: -4.3048248291015625
    4. 'c' → logprob: -6.3048248291015625
    5. 'x' → logprob: -7.8048248291015625
    6. 'str' → logprob: -8.054824829101562
    7. 's' → logprob: -8.554824829101562
    8. ' int' → logprob: -9.054824829101562
    9. 'cards' → logprob: -9.054824829101562
    10. 'strip' → logprob: -10.054824829101562

Token 24: '(c' (ID: 2410)
  Prédit: '(card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.022060373798012733
    2. '(' → logprob: -4.147060394287109
    3. '(c' → logprob: -5.647060394287109
    4. '(x' → logprob: -6.647060394287109
    5. '(token' → logprob: -7.397060394287109
    6. '(s' → logprob: -8.27206039428711
    7. '(cards' → logprob: -8.64706039428711
    8. '(i' → logprob: -9.02206039428711
    9. '(code' → logprob: -13.02206039428711
    10. '(item' → logprob: -13.14706039428711

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029838306829333305
    2. '.strip' → logprob: -3.5298383235931396
    3. ')]' → logprob: -10.029838562011719
    4. 'strip' → logprob: -11.529838562011719
    5. '.rstrip' → logprob: -11.779838562011719
    6. ' )' → logprob: -11.904838562011719
    7. '")' → logprob: -12.779838562011719
    8. '))' → logprob: -12.904838562011719
    9. ')`' → logprob: -12.904838562011719
    10. 'r' → logprob: -13.029838562011719

Token 26: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006133671849966049
    2. '.strip' → logprob: -5.131133556365967
    3. 'strip' → logprob: -9.506134033203125
    4. ')]' → logprob: -10.006134033203125
    5. ' )' → logprob: -10.631134033203125
    6. ' for' → logprob: -11.506134033203125
    7. 'for' → logprob: -11.756134033203125
    8. '   ' → logprob: -12.131134033203125
    9. ' ' → logprob: -12.131134033203125
    10. '.rstrip' → logprob: -12.256134033203125

Token 27: ' c' (ID: 274)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.04454582929611206
    2. ' c' → logprob: -3.169545888900757
    3. 'c' → logprob: -7.044545650482178
    4. 'cards' → logprob: -7.419545650482178
    5. ' ' → logprob: -10.419546127319336
    6. ' card' → logprob: -10.544546127319336
    7. '(cards' → logprob: -11.919546127319336
    8. '	c' → logprob: -12.294546127319336
    9. '_cards' → logprob: -12.419546127319336
    10. '.cards' → logprob: -14.544546127319336

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01387422252446413
    2. 'in' → logprob: -4.638874053955078
    3. ' ' → logprob: -6.013874053955078
    4. 's' → logprob: -7.388874053955078
    5. 'c' → logprob: -7.763874053955078
    6. '  ' → logprob: -8.888874053955078
    7. '   ' → logprob: -9.263874053955078
    8. '_' → logprob: -9.388874053955078
    9. 'n' → logprob: -9.638874053955078
    10. 'ards' → logprob: -10.138874053955078

Token 29: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.3133179843425751
    2. 'cards' → logprob: -1.3133180141448975
    3. '(cards' → logprob: -9.938318252563477
    4. 'c' → logprob: -12.688318252563477
    5. '.cards' → logprob: -13.188318252563477
    6. ' ' → logprob: -13.813318252563477
    7. 'card' → logprob: -13.813318252563477
    8. '_cards' → logprob: -15.063318252563477
    9. '/cards' → logprob: -15.813318252563477
    10. ' card' → logprob: -16.188318252563477

Token 30: '_str' (ID: 6182)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0709930881857872
    2. ')]' → logprob: -2.695993185043335
    3. '])' → logprob: -7.445992946624756
    4. ')' → logprob: -9.070993423461914
    5. ' ]' → logprob: -9.320993423461914
    6. '])]' → logprob: -9.320993423461914
    7. ']]' → logprob: -10.070993423461914
    8. 's' → logprob: -10.195993423461914
    9. ']}' → logprob: -11.070993423461914
    10. 'if' → logprob: -11.320993423461914

Token 31: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002932298928499222
    2. ')]' → logprob: -6.002932071685791
    3. ')' → logprob: -8.37793254852295
    4. ' ]' → logprob: -8.50293254852295
    5. '])' → logprob: -11.62793254852295
    6. '       ' → logprob: -11.87793254852295
    7. ']
' → logprob: -12.75293254852295
    8. '   ' → logprob: -12.75293254852295
    9. '()]' → logprob: -14.75293254852295
    10. '`]' → logprob: -14.87793254852295

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0206151120364666
    2. '<|end|>' → logprob: -5.020615100860596
    3. ' except' → logprob: -5.270615100860596
    4. ')' → logprob: -6.020615100860596
    5. 'except' → logprob: -6.020615100860596
    6. '   ' → logprob: -6.645615100860596
    7. ',' → logprob: -7.645615100860596
    8. '        
' → logprob: -7.770615100860596
    9. '           ' → logprob: -8.520615577697754
    10. '    ' → logprob: -8.520615577697754

Token 33: ' counts' (ID: 28991)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.252755045890808
    2. 'if' → logprob: -1.252755045890808
    3. ' if' → logprob: -1.877755045890808
    4. 'max' → logprob: -3.7527551651000977
    5. 'result' → logprob: -3.7527551651000977
    6. 'deck' → logprob: -3.8777551651000977
    7. 'count' → logprob: -4.252755165100098
    8. 'for' → logprob: -4.252755165100098
    9. 'n' → logprob: -4.252755165100098
    10. 'total' → logprob: -4.377755165100098

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.003041386604309
    2. ' =' → logprob: -1.253041386604309
    3. '_' → logprob: -1.378041386604309
    4. '[' → logprob: -2.7530412673950195
    5. '(' → logprob: -3.6280412673950195
    6. ')' → logprob: -5.7530412673950195
    7. 's' → logprob: -7.5030412673950195
    8. ']' → logprob: -8.50304126739502
    9. '_counts' → logprob: -8.50304126739502
    10. '.setdefault' → logprob: -8.62804126739502

Token 35: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.06252506375312805
    2. ' {}' → logprob: -2.8125250339508057
    3. '{' → logprob: -8.062524795532227
    4. '[' → logprob: -9.437524795532227
    5. ' Counter' → logprob: -9.562524795532227
    6. ' [' → logprob: -9.937524795532227
    7. ' {' → logprob: -11.812524795532227
    8. 'Counter' → logprob: -12.062524795532227
    9. ' defaultdict' → logprob: -12.187524795532227
    10. 'collections' → logprob: -12.312524795532227

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25128811597824097
    2. ' for' → logprob: -1.7512881755828857
    3. 'for' → logprob: -3.1262881755828857
    4. ' ' → logprob: -5.626287937164307
    5. '   ' → logprob: -7.876287937164307
    6. '        
' → logprob: -8.001288414001465
    7. '        ' → logprob: -9.501288414001465
    8. ' 
' → logprob: -9.876288414001465
    9. '    ' → logprob: -10.126288414001465
    10. '<|end|>' → logprob: -10.126288414001465

Token 37: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03690987825393677
    2. ' for' → logprob: -3.411909818649292
    3. '       ' → logprob: -5.786910057067871
    4. '   ' → logprob: -9.286910057067871
    5. ' ' → logprob: -9.661910057067871
    6. 'f' → logprob: -10.661910057067871
    7. '
' → logprob: -13.161910057067871
    8. '	for' → logprob: -13.161910057067871
    9. '```' → logprob: -13.786910057067871
    10. ' ' → logprob: -13.911910057067871

Token 38: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5508280396461487
    2. ' card' → logprob: -1.050827980041504
    3. 'c' → logprob: -2.925827980041504
    4. 'card' → logprob: -3.925827980041504
    5. ' ' → logprob: -8.175827980041504
    6. '	card' → logprob: -10.050827980041504
    7. ' i' → logprob: -10.863327980041504
    8. '   ' → logprob: -11.300827980041504
    9. '```' → logprob: -11.613327980041504
    10. '	c' → logprob: -11.675827980041504

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00958986021578312
    2. 'in' → logprob: -5.259589672088623
    3. ' ' → logprob: -5.509589672088623
    4. ' i' → logprob: -9.134590148925781
    5. '  ' → logprob: -9.509590148925781
    6. 's' → logprob: -10.384590148925781
    7. 'i' → logprob: -10.509590148925781
    8. '	in' → logprob: -11.134590148925781
    9. '   ' → logprob: -11.509590148925781
    10. 'n' → logprob: -12.009590148925781

Token 40: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.5231847167015076
    2. 'cards' → logprob: -0.8981847167015076
    3. '(cards' → logprob: -10.023184776306152
    4. '.cards' → logprob: -11.898184776306152
    5. 'card' → logprob: -12.773184776306152
    6. ' ' → logprob: -13.273184776306152
    7. '_cards' → logprob: -13.523184776306152
    8. 'c' → logprob: -13.898184776306152
    9. 'ards' → logprob: -13.898184776306152
    10. '   ' → logprob: -14.523184776306152

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005253921262919903
    2. ':
' → logprob: -7.75052547454834
    3. ' :' → logprob: -10.00052547454834
    4. '       ' → logprob: -11.00052547454834
    5. '   ' → logprob: -11.37552547454834
    6. '):' → logprob: -12.00052547454834
    7. '           ' → logprob: -12.62552547454834
    8. ' in' → logprob: -13.12552547454834
    9. '=' → logprob: -13.62552547454834
    10. ',' → logprob: -14.00052547454834

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017693404108285904
    2. '            ' → logprob: -4.517693519592285
    3. '        ' → logprob: -6.142693519592285
    4. ' counts' → logprob: -6.267693519592285
    5. '       ' → logprob: -6.392693519592285
    6. ' if' → logprob: -8.642693519592285
    7. ' ' → logprob: -8.767693519592285
    8. '    ' → logprob: -9.142693519592285
    9. '```' → logprob: -9.267693519592285
    10. ' ```' → logprob: -9.517693519592285

Token 43: ' if' (ID: 538)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.03458454832434654
    2. ' if' → logprob: -3.7845845222473145
    3. 'counts' → logprob: -4.5345845222473145
    4. '       ' → logprob: -8.409584999084473
    5. 'if' (adapté à ' if') → logprob: -8.909584999084473
    6. '           ' → logprob: -9.659584999084473
    7. '   ' → logprob: -10.409584999084473
    8. '_counts' → logprob: -10.534584999084473
    9. '    ' → logprob: -10.659584999084473
    10. '               ' → logprob: -11.409584999084473

Token 44: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0006272526225075126
    2. 'c' → logprob: -7.375627040863037
    3. ' ' → logprob: -14.375627517700195
    4. ' ' → logprob: -16.000627517700195
    5. ' not' → logprob: -18.625627517700195
    6. '	c' → logprob: -19.875627517700195
    7. ' (' → logprob: -21.313127517700195
    8. '```' → logprob: -21.438127517700195
    9. ' a' → logprob: -21.563127517700195
    10. '_c' → logprob: -21.875627517700195

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05633623152971268
    2. ' not' → logprob: -2.9313361644744873
    3. 'in' → logprob: -7.431336402893066
    4. ' ' → logprob: -7.556336402893066
    5. 'not' → logprob: -8.181336402893066
    6. ' no' → logprob: -10.306336402893066
    7. ' i' → logprob: -11.806336402893066
    8. ' n' → logprob: -12.056336402893066
    9. 'n' → logprob: -13.056336402893066
    10. ' is' → logprob: -13.556336402893066

Token 46: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.20142298936843872
    2. 'counts' → logprob: -1.701422929763794
    3. 'count' → logprob: -11.576422691345215
    4. '_counts' → logprob: -15.951422691345215
    5. ' count' → logprob: -15.951422691345215
    6. 'c' → logprob: -19.32642364501953
    7. ' ' → logprob: -19.70142364501953
    8. 'Counts' → logprob: -19.82642364501953
    9. 'ount' → logprob: -20.32642364501953
    10. ' cards' → logprob: -20.57642364501953

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016316171968355775
    2. ':
' → logprob: -7.001631736755371
    3. ' :' → logprob: -7.876631736755371
    4. '           ' → logprob: -8.501631736755371
    5. '               ' → logprob: -9.876631736755371
    6. '=' → logprob: -10.126631736755371
    7. ' =' → logprob: -11.876631736755371
    8. '            ' → logprob: -12.001631736755371
    9. ' :
' → logprob: -12.751631736755371
    10. '):' → logprob: -12.876631736755371

Token 48: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05121399089694023
    2. ' counts' → logprob: -3.0512139797210693
    3. 'counts' → logprob: -6.051214218139648
    4. '_counts' → logprob: -8.676214218139648
    5. '           ' → logprob: -10.301214218139648
    6. '```' → logprob: -10.926214218139648
    7. '                ' → logprob: -11.801214218139648
    8. '            ' → logprob: -12.051214218139648
    9. 'count' → logprob: -12.676214218139648
    10. ' counters' → logprob: -12.676214218139648

Token 49: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.038388803601264954
    2. 'counts' (adapté à ' counts') → logprob: -3.288388729095459
    3. '               ' → logprob: -8.038389205932617
    4. '_counts' → logprob: -11.288389205932617
    5. '           ' → logprob: -11.788389205932617
    6. 'count' → logprob: -13.163389205932617
    7. '                   ' → logprob: -14.913389205932617
    8. 'Counts' → logprob: -14.913389205932617
    9. '   ' → logprob: -15.038389205932617
    10. ' ' → logprob: -15.288389205932617

Token 50: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. 'c' → logprob: -16.000001907348633
    4. ' [' → logprob: -17.000001907348633
    5. ']' → logprob: -17.750001907348633
    6. ' c' → logprob: -18.000001907348633
    7. '	c' → logprob: -18.500001907348633
    8. '           ' → logprob: -19.250001907348633
    9. ' +=' → logprob: -19.250001907348633
    10. '```' → logprob: -19.625001907348633

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02996303327381611
    2. ']+=' → logprob: -3.5299630165100098
    3. ' ]' → logprob: -8.529963493347168
    4. '+=' → logprob: -11.779963493347168
    5. ' +=' → logprob: -13.029963493347168
    6. '']' → logprob: -13.154963493347168
    7. ']+' → logprob: -13.529963493347168
    8. ']=' → logprob: -13.904963493347168
    9. ')' → logprob: -15.154963493347168
    10. '"]' → logprob: -15.404963493347168

Token 52: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16712509095668793
    2. '+=' → logprob: -1.9171251058578491
    3. ']+=' → logprob: -5.417125225067139
    4. '=' → logprob: -6.792125225067139
    5. ']' → logprob: -6.792125225067139
    6. ' =' → logprob: -9.04212474822998
    7. '+' → logprob: -10.04212474822998
    8. ' ]' → logprob: -11.41712474822998
    9. '[' → logprob: -12.54212474822998
    10. '    ' → logprob: -12.66712474822998

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.785223960876465
    4. '   ' → logprob: -15.910223960876465
    5. '```' → logprob: -19.03522491455078
    6. '           ' → logprob: -19.22272491455078
    7. '2' → logprob: -19.41022491455078
    8. '    ' → logprob: -19.53522491455078
    9. '  ' → logprob: -19.53522491455078
    10. '<|end|>' → logprob: -19.84772491455078

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.00023078918457
    4. '```' → logprob: -19.37523078918457
    5. '  ' → logprob: -19.50023078918457
    6. ' ' → logprob: -19.62523078918457
    7. '2' → logprob: -20.00023078918457
    8. '           ' → logprob: -20.62523078918457
    9. '0' → logprob: -20.75023078918457
    10. '       ' → logprob: -20.87523078918457

Token 55: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009320028126239777
    2. ' else' → logprob: -5.259320259094238
    3. 'else' → logprob: -5.509320259094238
    4. '               ' → logprob: -10.884320259094238
    5. '```' → logprob: -12.509320259094238
    6. '       ' → logprob: -13.259320259094238
    7. '<|end|>' → logprob: -13.384320259094238
    8. '          ' → logprob: -13.509320259094238
    9. ' ' → logprob: -15.009320259094238
    10. '   ' → logprob: -15.134320259094238

Token 56: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019632525742053986
    2. 'else' → logprob: -4.019632339477539
    3. ' else' → logprob: -6.519632339477539
    4. '```' → logprob: -12.394632339477539
    5. '               ' → logprob: -12.894632339477539
    6. '          ' → logprob: -15.269632339477539
    7. '       ' → logprob: -15.519632339477539
    8. '   ' → logprob: -16.89463233947754
    9. '            
' → logprob: -17.14463233947754
    10. '`' → logprob: -17.51963233947754

Token 57: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6210761070251465
    2. 'else' (adapté à ' else') → logprob: -0.8710761070251465
    3. '           ' → logprob: -3.1210761070251465
    4. '       ' → logprob: -11.246076583862305
    5. '               ' → logprob: -12.621076583862305
    6. '```' → logprob: -12.871076583862305
    7. ' ' → logprob: -13.871076583862305
    8. '   ' → logprob: -14.121076583862305
    9. '          ' → logprob: -14.246076583862305
    10. ' ' → logprob: -14.371076583862305

Token 58: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014763793908059597
    2. ':' → logprob: -4.514763832092285
    3. ':
' → logprob: -5.764763832092285
    4. '           ' → logprob: -7.764763832092285
    5. ' counts' → logprob: -9.639763832092285
    6. ' :' → logprob: -10.264763832092285
    7. ' :
' → logprob: -11.014763832092285
    8. '              ' → logprob: -11.889763832092285
    9. '   ' → logprob: -12.514763832092285
    10. '                   ' → logprob: -12.764763832092285

Token 59: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33475199341773987
    2. ' counts' → logprob: -1.4597519636154175
    3. 'counts' → logprob: -2.959752082824707
    4. '           ' → logprob: -9.084752082824707
    5. '0' → logprob: -9.334752082824707
    6. '1' → logprob: -9.459752082824707
    7. '   ' → logprob: -10.709752082824707
    8. ' ' → logprob: -10.709752082824707
    9. 'count' → logprob: -10.709752082824707
    10. '_counts' → logprob: -12.584752082824707

Token 60: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.47418147325515747
    2. ' counts' → logprob: -0.9741814732551575
    3. '               ' → logprob: -9.349181175231934
    4. ' ' → logprob: -11.974181175231934
    5. 'count' → logprob: -12.349181175231934
    6. '           ' → logprob: -12.974181175231934
    7. '_counts' → logprob: -13.099181175231934
    8. '   ' → logprob: -13.724181175231934
    9. '1' → logprob: -14.224181175231934
    10. '0' → logprob: -14.349181175231934

Token 61: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.035078227519989014
    2. '[' → logprob: -3.410078287124634
    3. ']' → logprob: -6.660078048706055
    4. '=' → logprob: -9.910078048706055
    5. '][' → logprob: -10.285078048706055
    6. ' [' → logprob: -10.410078048706055
    7. '[
' → logprob: -11.785078048706055
    8. ' =' → logprob: -12.535078048706055
    9. '   ' → logprob: -12.785078048706055
    10. '[:]' → logprob: -12.910078048706055

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.423219696851447e-05
    2. ']=' → logprob: -9.625083923339844
    3. ' ]' → logprob: -11.625083923339844
    4. '=' → logprob: -11.750083923339844
    5. ' =' → logprob: -13.750083923339844
    6. ':' → logprob: -15.875083923339844
    7. '']' → logprob: -16.625083923339844
    8. ')' → logprob: -17.125083923339844
    9. '"]' → logprob: -17.750083923339844
    10. ']:' → logprob: -18.000083923339844

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. ']' → logprob: -16.376928329467773
    4. ' =
' → logprob: -17.626928329467773
    5. ')' → logprob: -18.001928329467773
    6. '=
' → logprob: -18.251928329467773
    7. ' ' → logprob: -18.501928329467773
    8. ']=' → logprob: -18.501928329467773
    9. '＝' → logprob: -18.626928329467773
    10. '1' → logprob: -19.626928329467773

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015031944494694471
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.751502990722656
    4. '0' → logprob: -14.876502990722656
    5. ' ' → logprob: -18.251502990722656
    6. '  ' → logprob: -18.626502990722656
    7. '	' → logprob: -19.001502990722656
    8. '           ' → logprob: -19.376502990722656
    9. '       ' → logprob: -19.501502990722656
    10. '```' → logprob: -19.626502990722656

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -15.000004768371582
    4. '   ' → logprob: -17.250003814697266
    5. '```' → logprob: -19.812503814697266
    6. '2' → logprob: -20.687503814697266
    7. '  ' → logprob: -20.937503814697266
    8. '`' → logprob: -21.062503814697266
    9. '' → logprob: -21.187503814697266
    10. '       ' → logprob: -21.250003814697266

Token 66: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0352238193154335
    2. '
' → logprob: -4.035223960876465
    3. '<|end|>' → logprob: -4.910223960876465
    4. '        
' → logprob: -6.160223960876465
    5. ',' → logprob: -6.785223960876465
    6. '\n' → logprob: -7.035223960876465
    7. '    
' → logprob: -7.035223960876465
    8. '' → logprob: -7.785223960876465
    9. '    ' → logprob: -7.785223960876465
    10. '   ' → logprob: -7.785223960876465

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004593772813677788
    2. '        
' → logprob: -6.004593849182129
    3. '   ' → logprob: -7.629593849182129
    4. '
' → logprob: -7.754593849182129
    5. '           ' → logprob: -7.879593849182129
    6. '    ' → logprob: -8.629593849182129
    7. '    
' → logprob: -9.004593849182129
    8. '        ' → logprob: -9.629593849182129
    9. '            
' → logprob: -9.629593849182129
    10. '' → logprob: -9.942093849182129

Token 68: ' values' (ID: 4824)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.6826701760292053
    2. 'max' → logprob: -0.9326701760292053
    3. 'unique' → logprob: -4.1826701164245605
    4. '       ' → logprob: -4.9326701164245605
    5. 'duplicates' → logprob: -4.9326701164245605
    6. '   ' → logprob: -4.9326701164245605
    7. 'found' → logprob: -5.0576701164245605
    8. 'pair' → logprob: -5.1826701164245605
    9. ' pairs' → logprob: -5.1826701164245605
    10. 'if' → logprob: -5.1826701164245605

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012228479608893394
    2. '=' → logprob: -5.387228488922119
    3. '_' → logprob: -5.637228488922119
    4. '_counts' → logprob: -6.387228488922119
    5. '(' → logprob: -6.762228488922119
    6. '()' → logprob: -8.262228012084961
    7. ' ' → logprob: -8.387228012084961
    8. '_count' → logprob: -8.637228012084961
    9. ',' → logprob: -8.762228012084961
    10. '.' → logprob: -9.262228012084961

Token 70: ' sorted' (ID: 20099)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.25924423336982727
    2. 'list' → logprob: -2.009244203567505
    3. ' counts' → logprob: -3.384244203567505
    4. ' sorted' → logprob: -3.509244203567505
    5. 'counts' → logprob: -5.009244441986084
    6. ' []' → logprob: -5.384244441986084
    7. 'sorted' → logprob: -5.384244441986084
    8. ' [' → logprob: -5.509244441986084
    9. '[]' → logprob: -5.509244441986084
    10. '[count' → logprob: -5.759244441986084

Token 71: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0036480571143329144
    2. '(' → logprob: -5.753648281097412
    3. '(list' → logprob: -7.878648281097412
    4. '(cards' → logprob: -9.878647804260254
    5. '(values' → logprob: -11.128647804260254
    6. '([' → logprob: -11.628647804260254
    7. '((' → logprob: -11.628647804260254
    8. '(set' → logprob: -12.753647804260254
    9. '(card' → logprob: -13.378647804260254
    10. ' (' → logprob: -14.003647804260254

Token 72: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18419809639453888
    2. '(count' → logprob: -2.5591981410980225
    3. '(values' → logprob: -2.6841981410980225
    4. '(' → logprob: -4.309197902679443
    5. 'values' → logprob: -5.559197902679443
    6. '(cards' → logprob: -6.059197902679443
    7. '.values' → logprob: -6.559197902679443
    8. '(s' → logprob: -7.684197902679443
    9. '()' → logprob: -8.184198379516602
    10. ')' → logprob: -8.559198379516602

Token 73: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.20764487981796265
    2. '.' → logprob: -1.7076449394226074
    3. '().' → logprob: -5.832644939422607
    4. ')' → logprob: -6.957644939422607
    5. 'values' → logprob: -6.957644939422607
    6. '.items' → logprob: -7.332644939422607
    7. '()' → logprob: -7.957644939422607
    8. '.keys' → logprob: -8.45764446258545
    9. ').' → logprob: -10.08264446258545
    10. ' .' → logprob: -10.58264446258545

Token 74: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.2818649113178253
    2. '())' → logprob: -1.531864881515503
    3. '()' → logprob: -3.531864881515503
    4. ')' → logprob: -8.656865119934082
    5. ' ())' → logprob: -10.656865119934082
    6. '(),
' → logprob: -11.656865119934082
    7. ' (),' → logprob: -11.656865119934082
    8. '(' → logprob: -12.281865119934082
    9. '()]' → logprob: -12.531865119934082
    10. ' ()' → logprob: -12.656865119934082

Token 75: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.3868766129016876
    2. ' reverse' → logprob: -1.1368765830993652
    3. '(reverse' → logprob: -12.261877059936523
    4. '   ' → logprob: -15.136877059936523
    5. ' ' → logprob: -15.761877059936523
    6. '.reverse' → logprob: -15.886877059936523
    7. 're' → logprob: -16.011877059936523
    8. ' key' → logprob: -16.636877059936523
    9. '```' → logprob: -16.886877059936523
    10. 'Reverse' → logprob: -17.136877059936523

Token 76: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1210291385650635
    2. '())' → logprob: -1.3710291385650635
    3. '()' → logprob: -1.4960291385650635
    4. '(' → logprob: -2.1210291385650635
    5. '=True' → logprob: -2.7460291385650635
    6. '=' → logprob: -5.496028900146484
    7. '(True' → logprob: -5.871028900146484
    8. '(),' → logprob: -6.246028900146484
    9. '()==' → logprob: -7.621028900146484
    10. '()]' → logprob: -7.871028900146484

Token 77: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034118397161364555
    2. '       ' → logprob: -8.500341415405273
    3. ',' → logprob: -9.625341415405273
    4. ' )' → logprob: -10.125341415405273
    5. ')
' → logprob: -10.750341415405273
    6. '[' → logprob: -12.750341415405273
    7. ']' → logprob: -13.125341415405273
    8. '   ' → logprob: -13.250341415405273
    9. '))' → logprob: -14.125341415405273
    10. '           ' → logprob: -14.625341415405273

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006644918117672205
    2. '   ' → logprob: -5.7566447257995605
    3. ',' → logprob: -6.7566447257995605
    4. '<|end|>' → logprob: -7.0066447257995605
    5. ' if' → logprob: -8.256645202636719
    6. '        
' → logprob: -8.506645202636719
    7. '[' → logprob: -8.631645202636719
    8. ' ' → logprob: -9.006645202636719
    9. ':' → logprob: -9.131645202636719
    10. ')' → logprob: -9.256645202636719

Token 79: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01633194088935852
    2. ' if' → logprob: -4.266332149505615
    3. '       ' → logprob: -6.141332149505615
    4. 'print' → logprob: -12.516331672668457
    5. 'for' → logprob: -12.766331672668457
    6. '        
' → logprob: -13.141331672668457
    7. 'i' → logprob: -13.516331672668457
    8. '```' → logprob: -13.891331672668457
    9. '   ' → logprob: -14.016331672668457
    10. 'result' → logprob: -15.266331672668457

Token 80: ' 判' (ID: 178825)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14311711490154266
    2. 'if' → logprob: -2.0181171894073486
    3. '       ' → logprob: -8.89311695098877
    4. ' for' → logprob: -9.26811695098877
    5. 'If' → logprob: -9.39311695098877
    6. ' If' → logprob: -10.39311695098877
    7. '   ' → logprob: -11.14311695098877
    8. '#' → logprob: -11.26811695098877
    9. ' values' → logprob: -11.39311695098877
    10. 'for' → logprob: -11.51811695098877

Token 81: '定' (ID: 8745)
  Prédit: '断'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '断' → logprob: -0.060664769262075424
    2. '定' → logprob: -3.185664653778076
    3. '\xe6\x96' → logprob: -4.060664653778076
    4. ' ' → logprob: -9.685665130615234
    5. '别' → logprob: -9.810665130615234
    6. '段' → logprob: -9.935665130615234
    7. '#' → logprob: -10.685665130615234
    8. '明' → logprob: -11.935665130615234
    9. 'break' → logprob: -11.935665130615234
    10. ' #' → logprob: -12.060665130615234

Token 82: '用' (ID: 5615)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4008846580982208
    2. '<|end|>' → logprob: -1.2758846282958984
    3. ' if' → logprob: -3.1508846282958984
    4. '<|end|>' → logprob: -5.775884628295898
    5. ' ' → logprob: -6.650884628295898
    6. 'if' → logprob: -6.900884628295898
    7. '        ' → logprob: -7.275884628295898
    8. '        
' → logprob: -7.525884628295898
    9. ':' → logprob: -7.775884628295898
    10. '   ' → logprob: -8.150884628295898

Token 83: 'に' (ID: 5280)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: 'カード' (ID: 144583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4075500965118408
    2. ' if' → logprob: -1.5325500965118408
    3. '       ' → logprob: -3.657550096511841
    4. 'result' → logprob: -4.157549858093262
    5. 'hand' → logprob: -4.407549858093262
    6. 'counts' → logprob: -4.407549858093262
    7. 'rank' → logprob: -4.532549858093262
    8. ' hand' → logprob: -5.157549858093262
    9. 'count' → logprob: -5.407549858093262
    10. '   ' → logprob: -5.407549858093262

Token 85: 'の' (ID: 3385)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1055327653884888
    2. 'の' → logprob: -1.1055327653884888
    3. '_counts' → logprob: -2.605532646179199
    4. 'counts' → logprob: -2.980532646179199
    5. ' counts' → logprob: -3.355532646179199
    6. 'count' → logprob: -3.730532646179199
    7. 'values' → logprob: -3.855532646179199
    8. 'が' → logprob: -3.980532646179199
    9. 'を' → logprob: -3.980532646179199
    10. '数' → logprob: -3.980532646179199

Token 86: '数字' (ID: 58226)
  Prédit: '枚'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '枚' → logprob: -0.6819688081741333
    2. '数' → logprob: -1.5569688081741333
    3. '種類' → logprob: -2.3069686889648438
    4. 'values' → logprob: -2.6819686889648438
    5. 'list' → logprob: -3.1819686889648438
    6. 'count' → logprob: -4.181968688964844
    7. 'counts' → logprob: -4.806968688964844
    8. 'value' → logprob: -4.931968688964844
    9. '値' → logprob: -4.931968688964844
    10. 's' → logprob: -5.306968688964844

Token 87: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -1.2536604404449463
    2. ',' → logprob: -2.0036604404449463
    3. 'の' → logprob: -2.1286604404449463
    4. 'counts' → logprob: -2.1286604404449463
    5. 's' → logprob: -2.2536604404449463
    6. '_counts' → logprob: -2.8786604404449463
    7. ' counts' → logprob: -3.5036604404449463
    8. 'が' → logprob: -3.7536604404449463
    9. ' in' → logprob: -4.253660202026367
    10. 'count' → logprob: -4.503660202026367

Token 88: 'ソ' (ID: 41675)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.7042461633682251
    2. 'values' → logprob: -1.829246163368225
    3. ' sorted' → logprob: -1.954246163368225
    4. 'counts' → logprob: -2.8292460441589355
    5. 'set' → logprob: -3.7042460441589355
    6. 'list' → logprob: -3.9542460441589355
    7. 'まとめ' → logprob: -4.4542460441589355
    8. 'count' → logprob: -4.4542460441589355
    9. ' counts' → logprob: -4.7042460441589355
    10. ' values' → logprob: -4.9542460441589355

Token 89: 'ート' (ID: 34471)
  Prédit: 'ート'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ート' → logprob: -0.2875143587589264
    2. 'ー' → logprob: -1.537514328956604
    3. 'rt' → logprob: -3.4125144481658936
    4. 'と' → logprob: -7.4125142097473145
    5. '```' → logprob: -7.9125142097473145
    6. '``' → logprob: -8.662514686584473
    7. 'ード' → logprob: -8.787514686584473
    8. 'r' → logprob: -8.912514686584473
    9. 'orted' → logprob: -9.412514686584473
    10. '―' → logprob: -10.162514686584473

Token 90: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.70463627576828
    2. '       ' → logprob: -1.5796363353729248
    3. '<|end|>' → logprob: -1.8296363353729248
    4. ')' → logprob: -3.579636335372925
    5. '(cards' → logprob: -3.579636335372925
    6. '<|end|>' → logprob: -3.704636335372925
    7. ' cards' → logprob: -3.704636335372925
    8. 'cards' → logprob: -4.579636096954346
    9. '_cards' → logprob: -5.579636096954346
    10. ',
' → logprob: -5.704636096954346

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02960953302681446
    2. ',' → logprob: -3.779609441757202
    3. '<|end|>' → logprob: -5.654609680175781
    4. 'cards' → logprob: -7.279609680175781
    5. '(cards' → logprob: -7.779609680175781
    6. ')' → logprob: -7.779609680175781
    7. ' cards' → logprob: -8.029609680175781
    8. '      ' → logprob: -8.404609680175781
    9. '        ' → logprob: -9.029609680175781
    10. ' ' → logprob: -9.029609680175781

Token 92: ' sorted' (ID: 20099)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.030047597363591194
    2. 'cards' → logprob: -4.155047416687012
    3. ' sorted' → logprob: -4.655047416687012
    4. ' card' → logprob: -6.155047416687012
    5. ' values' → logprob: -7.030047416687012
    6. ' numbers' → logprob: -7.405047416687012
    7. 'sorted' (adapté à ' sorted') → logprob: -8.155047416687012
    8. '       ' → logprob: -9.405047416687012
    9. ' unique' → logprob: -9.530047416687012
    10. 'card' → logprob: -10.030047416687012

Token 93: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.027756372466683388
    2. '(cards' → logprob: -3.902756452560425
    3. 'cards' → logprob: -5.652756214141846
    4. '(' → logprob: -6.402756214141846
    5. '_' → logprob: -6.527756214141846
    6. 's' → logprob: -7.902756214141846
    7. ' cards' → logprob: -9.277756690979004
    8. '_values' → logprob: -10.527756690979004
    9. '_card' → logprob: -11.152756690979004
    10. '_c' → logprob: -11.652756690979004

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19737125933170319
    2. ' =' → logprob: -2.322371244430542
    3. '(' → logprob: -3.072371244430542
    4. '()' → logprob: -3.447371244430542
    5. ')' → logprob: -6.447371482849121
    6. ',' → logprob: -8.197371482849121
    7. 's' → logprob: -8.697371482849121
    8. '.sort' → logprob: -8.822371482849121
    9. '_' → logprob: -8.947371482849121
    10. '.' → logprob: -9.072371482849121

Token 95: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.008632649667561054
    2. 'sorted' → logprob: -4.758632659912109
    3. ' cards' → logprob: -11.25863265991211
    4. ' sort' → logprob: -13.13363265991211
    5. '(sorted' → logprob: -13.75863265991211
    6. ' ' → logprob: -14.13363265991211
    7. 'cards' → logprob: -15.50863265991211
    8. 's' → logprob: -15.50863265991211
    9. 'sort' → logprob: -15.63363265991211
    10. '.sorted' → logprob: -15.63363265991211

Token 96: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -2.7252845029579476e-05
    2. '(' → logprob: -10.625027656555176
    3. '(card' → logprob: -13.250027656555176
    4. 'cards' → logprob: -14.125027656555176
    5. ' (' → logprob: -15.875027656555176
    6. ' cards' → logprob: -16.00002670288086
    7. '/cards' → logprob: -17.00002670288086
    8. '(
' → logprob: -17.25002670288086
    9. '(deck' → logprob: -18.12502670288086
    10. '(c' → logprob: -18.25002670288086

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009432652732357383
    2. ',' → logprob: -7.250943183898926
    3. '())' → logprob: -9.250943183898926
    4. ' )' → logprob: -10.000943183898926
    5. '()' → logprob: -10.125943183898926
    6. '))' → logprob: -11.375943183898926
    7. ')
' → logprob: -11.500943183898926
    8. '）' → logprob: -11.500943183898926
    9. '(),' → logprob: -12.375943183898926
    10. '   ' → logprob: -12.500943183898926

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08605694770812988
    2. '<|end|>' → logprob: -3.08605694770813
    3. '
' → logprob: -3.46105694770813
    4. '        
' → logprob: -5.586056709289551
    5. '<|end|>' → logprob: -7.086056709289551
    6. ' if' → logprob: -8.21105670928955
    7. 'if' → logprob: -9.08605670928955
    8. '```' → logprob: -9.33605670928955
    9. '        ' → logprob: -9.58605670928955
    10. '    
' → logprob: -10.46105670928955

Token 99: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21693885326385498
    2. '       ' → logprob: -1.841938853263855
    3. ' if' → logprob: -3.7169389724731445
    4. 'n' → logprob: -5.4669389724731445
    5. 'rank' → logprob: -5.9669389724731445
    6. 'hand' → logprob: -6.8419389724731445
    7. 'flush' → logprob: -6.9669389724731445
    8. 'counts' → logprob: -7.0919389724731445
    9. '#' (adapté à ' #') → logprob: -7.5919389724731445
    10. 'from' → logprob: -8.591938972473145

Token 100: ' ス' (ID: 35372)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3273247480392456
    2. ' if' → logprob: -1.8273247480392456
    3. 'rank' → logprob: -3.702324867248535
    4. '   ' → logprob: -3.827324867248535
    5. '#' → logprob: -4.077324867248535
    6. 'num' → logprob: -4.702324867248535
    7. 'def' → logprob: -5.202324867248535
    8. 'n' → logprob: -5.577324867248535
    9. 'is' → logprob: -5.702324867248535
    10. 'counts' → logprob: -5.702324867248535

Token 101: 'ト' (ID: 5662)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1576483249664307
    2. 'ート' → logprob: -2.0326483249664307
    3. '       ' → logprob: -2.1576483249664307
    4. 'if' → logprob: -2.5326483249664307
    5. 'ト' → logprob: -2.7826483249664307
    6. 'て' → logprob: -3.0326483249664307
    7. 'テ' → logprob: -3.0326483249664307
    8. 't' → logprob: -3.6576483249664307
    9. 'ペ' → logprob: -3.6576483249664307
    10. 'ター' → logprob: -4.407648086547852

Token 102: 'レ' (ID: 12016)
  Prédit: 'ート'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ート' → logprob: -1.5881608724594116
    2. 'ップ' → logprob: -1.7131608724594116
    3. '       ' → logprob: -1.9631608724594116
    4. 'レ' → logprob: -2.588160991668701
    5. '   ' → logprob: -3.088160991668701
    6. 'ー' → logprob: -3.213160991668701
    7. 'て' → logprob: -3.213160991668701
    8. 'れ' → logprob: -3.713160991668701
    9. 'ージ' → logprob: -3.713160991668701
    10. '#' → logprob: -4.088160991668701

Token 103: 'ート' (ID: 34471)
  Prédit: 'ート'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ート' → logprob: -0.48598548769950867
    2. 'ム' → logprob: -1.860985517501831
    3. 'ト' → logprob: -2.110985517501831
    4. 'ー' → logprob: -3.110985517501831
    5. 'ク' → logprob: -3.985985517501831
    6. 'ーク' → logprob: -4.735985279083252
    7. 'ン' → logprob: -4.985985279083252
    8. 'クト' → logprob: -5.485985279083252
    9. 'プ' → logprob: -5.610985279083252
    10. 'ップ' → logprob: -5.610985279083252

Token 104: '判' (ID: 47257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0708286240696907
    2. ' =' → logprob: -2.820828676223755
    3. '_possible' → logprob: -6.195828437805176
    4. 'if' → logprob: -6.445828437805176
    5. 'possible' → logprob: -6.445828437805176
    6. 'def' → logprob: -7.445828437805176
    7. '_check' → logprob: -8.195828437805176
    8. 'の' → logprob: -8.195828437805176
    9. '＝' → logprob: -8.320828437805176
    10. '=True' → logprob: -8.320828437805176

Token 105: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -0.11529217660427094
    2. '断' → logprob: -2.2402920722961426
    3. '\xe6\x96' → logprob: -6.490292072296143
    4. '   ' → logprob: -7.490292072296143
    5. '別' → logprob: -9.9902925491333
    6. '       ' → logprob: -9.9902925491333
    7. 'def' → logprob: -10.1152925491333
    8. 'break' → logprob: -10.3652925491333
    9. '#' → logprob: -10.6152925491333
    10. ' =' → logprob: -10.6152925491333

Token 106: '関' (ID: 42366)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017596544697880745
    2. ' if' → logprob: -5.01759672164917
    3. 'if' → logprob: -5.14259672164917
    4. ':' → logprob: -6.76759672164917
    5. ' is' → logprob: -7.14259672164917
    6. '   ' → logprob: -7.64259672164917
    7. 'def' → logprob: -7.76759672164917
    8. 'n' → logprob: -7.89259672164917
    9. '
' → logprob: -8.267596244812012
    10. ':
' → logprob: -8.767596244812012

Token 107: '数' (ID: 7135)
  Prédit: '数'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.04152950644493103
    2. '```' → logprob: -3.791529417037964
    3. 'け' → logprob: -5.291529655456543
    4. 'じ' → logprob: -6.291529655456543
    5. 'して' → logprob: -6.666529655456543
    6. '続' → logprob: -6.916529655456543
    7. '``' → logprob: -6.916529655456543
    8. 'ction' → logprob: -7.041529655456543
    9. 'if' → logprob: -7.166529655456543
    10. 'to' → logprob: -7.291529655456543

Token 108: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04832672327756882
    2. ' def' → logprob: -3.2983267307281494
    3. '
' → logprob: -4.67332649230957
    4. ':def' → logprob: -7.79832649230957
    5. '```' → logprob: -9.29832649230957
    6. ':' → logprob: -9.42332649230957
    7. ' 
' → logprob: -9.92332649230957
    8. '	def' → logprob: -10.04832649230957
    9. '   ' → logprob: -10.17332649230957
    10. '(
' → logprob: -10.17332649230957

Token 109: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10823165625333786
    2. ' def' → logprob: -2.608231544494629
    3. '   ' → logprob: -4.358231544494629
    4. ' 
' → logprob: -5.108231544494629
    5. '       ' → logprob: -5.733231544494629
    6. '
' → logprob: -5.858231544494629
    7. 'd' → logprob: -6.233231544494629
    8. '    
' → logprob: -7.358231544494629
    9. '        
' → logprob: -7.608231544494629
    10. ':def' → logprob: -8.483231544494629

Token 110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0028458870947360992
    2. ' def' → logprob: -5.877845764160156
    3. '
' → logprob: -10.377845764160156
    4. '   ' → logprob: -12.252845764160156
    5. ' 
' → logprob: -12.752845764160156
    6. 'd' → logprob: -13.752845764160156
    7. '       ' → logprob: -15.252845764160156
    8. '	def' → logprob: -15.377845764160156
    9. 'de' → logprob: -15.877845764160156
    10. '    
' → logprob: -15.877845764160156

Token 111: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.22555029392242432
    2. ' is' → logprob: -1.6005502939224243
    3. 'check' → logprob: -9.475550651550293
    4. ' ' → logprob: -10.850550651550293
    5. ' check' → logprob: -11.475550651550293
    6. '```' → logprob: -11.725550651550293
    7. 'def' → logprob: -11.975550651550293
    8. '   ' → logprob: -12.100550651550293
    9. '	is' → logprob: -13.100550651550293
    10. 'straight' → logprob: -13.600550651550293

Token 112: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -2.2603901015827432e-05
    2. 'straight' → logprob: -11.000022888183594
    3. '_str' → logprob: -12.875022888183594
    4. '_' → logprob: -14.125022888183594
    5. 'Straight' → logprob: -14.125022888183594
    6. '_flush' → logprob: -14.625022888183594
    7. '_sorted' → logprob: -14.750022888183594
    8. '_sequence' → logprob: -15.750022888183594
    9. '_s' → logprob: -16.125022888183594
    10. 'stra' → logprob: -16.500022888183594

Token 113: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.009526568464934826
    2. 'rait' → logprob: -5.38452672958374
    3. 'r' → logprob: -5.50952672958374
    4. 'rai' → logprob: -7.50952672958374
    5. 'rain' → logprob: -9.259526252746582
    6. 'rail' → logprob: -10.509526252746582
    7. '```' → logprob: -10.509526252746582
    8. 'rate' → logprob: -11.009526252746582
    9. 'straight' → logprob: -11.384526252746582
    10. '``' → logprob: -11.509526252746582

Token 114: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -3.941161776310764e-05
    2. '   ' → logprob: -11.750039100646973
    3. 'igh' → logprob: -11.750039100646973
    4. '```' → logprob: -12.125039100646973
    5. 'igt' → logprob: -12.750039100646973
    6. '``' → logprob: -12.750039100646973
    7. ' ' → logprob: -13.125039100646973
    8. 'igth' → logprob: -13.500039100646973
    9. 'ighton' → logprob: -14.250039100646973
    10. '1' → logprob: -14.375039100646973

Token 115: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0420435331761837
    2. '(sorted' → logprob: -3.917043447494507
    3. '(nums' → logprob: -5.042043685913086
    4. '(' → logprob: -5.042043685913086
    5. '(lst' → logprob: -5.792043685913086
    6. '():' → logprob: -6.292043685913086
    7. '(card' → logprob: -6.917043685913086
    8. '(c' → logprob: -7.167043685913086
    9. '(arr' → logprob: -7.292043685913086
    10. '(numbers' → logprob: -8.042043685913086

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003787184541579336
    2. '):
' → logprob: -8.500378608703613
    3. ')' → logprob: -8.750378608703613
    4. ' ):' → logprob: -11.500378608703613
    5. ')：' → logprob: -13.125378608703613
    6. ':' → logprob: -13.625378608703613
    7. '):
' → logprob: -13.875378608703613
    8. ',' → logprob: -14.500378608703613
    9. '[]):' → logprob: -14.750378608703613
    10. '）：' → logprob: -14.875378608703613

Token 117: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03867499157786369
    2. ':' → logprob: -3.91367506980896
    3. '       ' → logprob: -4.538674831390381
    4. '):' → logprob: -5.913674831390381
    5. ' ' → logprob: -7.163674831390381
    6. '(cards' → logprob: -7.288674831390381
    7. '<|end|>' → logprob: -7.538674831390381
    8. '    ' → logprob: -7.663674831390381
    9. '           ' → logprob: -7.663674831390381
    10. '  ' → logprob: -8.538675308227539

Token 118: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30395135283470154
    2. 'for' → logprob: -1.553951382637024
    3. ' if' → logprob: -3.6789512634277344
    4. 'if' → logprob: -4.178951263427734
    5. '   ' → logprob: -4.678951263427734
    6. ' return' → logprob: -8.053951263427734
    7. 'return' → logprob: -8.428951263427734
    8. 'n' → logprob: -8.803951263427734
    9. ' n' → logprob: -9.678951263427734
    10. 'cards' → logprob: -11.053951263427734

Token 119: ' 普' (ID: 106652)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6544806957244873
    2. 'for' → logprob: -0.7794806957244873
    3. 'if' → logprob: -4.529480934143066
    4. ' if' → logprob: -4.779480934143066
    5. '   ' → logprob: -6.904480934143066
    6. 'return' → logprob: -7.654480934143066
    7. 'cards' → logprob: -8.029480934143066
    8. ' return' → logprob: -8.529480934143066
    9. ' cards' → logprob: -9.029480934143066
    10. ' unique' → logprob: -9.904480934143066

Token 120: '通' (ID: 9034)
  Prédit: '通'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '通' → logprob: -0.004807230085134506
    2. '段' → logprob: -5.379806995391846
    3. '及' → logprob: -10.129807472229004
    4. '遍' → logprob: -10.754807472229004
    5. '```' → logprob: -10.879807472229004
    6. '均' → logprob: -11.129807472229004
    7. '素' → logprob: -11.379807472229004
    8. '続' → logprob: -11.504807472229004
    9. '常' → logprob: -11.754807472229004
    10. 't' → logprob: -12.254807472229004

Token 121: 'に' (ID: 5280)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9164862036705017
    2. '(' → logprob: -1.2914862632751465
    3. '():' → logprob: -1.7914862632751465
    4. ')' → logprob: -2.4164862632751465
    5. '   ' → logprob: -3.7914862632751465
    6. ' ' → logprob: -4.1664862632751465
    7. ':' → logprob: -4.6664862632751465
    8. '):' → logprob: -5.5414862632751465
    9. ' (' → logprob: -6.0414862632751465
    10. ' )' → logprob: -6.1664862632751465

Token 122: '並' (ID: 142857)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36026856303215027
    2. ' for' → logprob: -2.3602685928344727
    3. 'cards' → logprob: -2.7352685928344727
    4. 'return' → logprob: -3.3602685928344727
    5. 'if' → logprob: -3.3602685928344727
    6. 'len' → logprob: -3.4852685928344727
    7. 'sorted' → logprob: -4.610268592834473
    8. 'all' → logprob: -4.985268592834473
    9. ' if' → logprob: -5.110268592834473
    10. ' return' → logprob: -5.235268592834473

Token 123: 'ん' (ID: 6676)
  Prédit: 'べ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'べ' → logprob: -0.009391240775585175
    2. 'ん' → logprob: -5.0093913078308105
    3. 'び' → logprob: -6.6343913078308105
    4. ' ' → logprob: -7.8843913078308105
    5. ')' → logprob: -8.384390830993652
    6. 'def' → logprob: -8.759390830993652
    7. '）' → logprob: -8.759390830993652
    8. '   ' → logprob: -9.134390830993652
    9. 'return' → logprob: -10.009390830993652
    10. 'ぶ' → logprob: -10.509390830993652

Token 124: 'で' (ID: 4344)
  Prédit: 'べ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'べ' → logprob: -0.3001135289669037
    2. 'ん' → logprob: -1.675113558769226
    3. 'び' → logprob: -2.6751134395599365
    4. 'ば' → logprob: -6.925113677978516
    5. '```' → logprob: -7.425113677978516
    6. '_' → logprob: -7.675113677978516
    7. '-' → logprob: -7.925113677978516
    8. '   ' → logprob: -8.675113677978516
    9. '替' → logprob: -9.050113677978516
    10. 'ぶ' → logprob: -9.175113677978516

Token 125: 'いる' (ID: 86169)
  Prédit: 'いる'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'いる' → logprob: -0.025916459038853645
    2. 'る' → logprob: -4.025916576385498
    3. 'い' → logprob: -5.150916576385498
    4. 'いて' → logprob: -7.525916576385498
    5. 'います' → logprob: -8.15091609954834
    6. 'len' → logprob: -8.40091609954834
    7. 'return' → logprob: -8.90091609954834
    8. '```' → logprob: -8.90091609954834
    9. 'def' → logprob: -9.02591609954834
    10. 'ある' → logprob: -9.40091609954834

Token 126: 'か' (ID: 7128)
  Prédit: '(cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.04743071272969246
    2. '(' → logprob: -3.9224307537078857
    3. 'cards' → logprob: -4.547430515289307
    4. ' cards' → logprob: -5.672430515289307
    5. 'def' → logprob: -6.047430515289307
    6. '   ' → logprob: -6.297430515289307
    7. 'for' → logprob: -6.797430515289307
    8. ')' → logprob: -6.922430515289307
    9. '(card' → logprob: -7.047430515289307
    10. 'return' → logprob: -7.172430515289307

Token 127: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9755440950393677
    2. ':' → logprob: -1.2255440950393677
    3. '   ' → logprob: -1.9755440950393677
    4. ')' → logprob: -2.725543975830078
    5. ' ' → logprob: -3.725543975830078
    6. ' and' → logprob: -3.850543975830078
    7. '(
' → logprob: -4.475543975830078
    8. ':return' → logprob: -4.600543975830078
    9. 'return' → logprob: -4.975543975830078
    10. '():' → logprob: -4.975543975830078

Token 128: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6424055695533752
    2. ' return' → logprob: -1.8924055099487305
    3. ' ' → logprob: -2.0174055099487305
    4. '           ' → logprob: -2.8924055099487305
    5. '    ' → logprob: -3.7674055099487305
    6. ':' → logprob: -4.2674055099487305
    7. '       ' → logprob: -4.2674055099487305
    8. 'return' → logprob: -4.5174055099487305
    9. ' if' → logprob: -4.7674055099487305
    10. '
' → logprob: -4.8924055099487305

Token 129: ' cards' (ID: 10541)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20437970757484436
    2. 'for' → logprob: -1.704379677772522
    3. '   ' → logprob: -6.829379558563232
    4. ' if' → logprob: -7.204379558563232
    5. ' return' → logprob: -7.579379558563232
    6. 'return' → logprob: -7.954379558563232
    7. 'if' → logprob: -8.57938003540039
    8. 'n' → logprob: -10.82938003540039
    9. '           ' → logprob: -10.95438003540039
    10. '	for' → logprob: -10.95438003540039

Token 130: '_sorted' (ID: 104993)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2300388365983963
    2. '[i' → logprob: -2.10503888130188
    3. '==' → logprob: -3.98003888130188
    4. '_sorted' → logprob: -4.105038642883301
    5. '[-' → logprob: -4.480038642883301
    6. ')' → logprob: -4.855038642883301
    7. 'sorted' → logprob: -5.355038642883301
    8. '=' → logprob: -5.355038642883301
    9. ' =' → logprob: -5.480038642883301
    10. '.sort' → logprob: -6.105038642883301

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038649193942546844
    2. ' =' → logprob: -3.538649082183838
    3. '==' → logprob: -5.288649082183838
    4. '[' → logprob: -6.538649082183838
    5. ')' → logprob: -6.663649082183838
    6. '＝' → logprob: -8.788649559020996
    7. ')==' → logprob: -9.163649559020996
    8. '=[' → logprob: -9.163649559020996
    9. '   ' → logprob: -9.413649559020996
    10. '[:]' → logprob: -9.538649559020996

Token 132: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.029830558225512505
    2. ' sorted' → logprob: -3.5298304557800293
    3. 'cards' → logprob: -9.904830932617188
    4. '   ' → logprob: -11.404830932617188
    5. ' cards' → logprob: -11.779830932617188
    6. ' ' → logprob: -12.279830932617188
    7. '(sorted' → logprob: -13.529830932617188
    8. 'list' → logprob: -13.654830932617188
    9. 's' → logprob: -13.779830932617188
    10. '  ' → logprob: -14.404830932617188

Token 133: '(set' (ID: 25904)
  Prédit: '(cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.00026455431361682713
    2. '(' → logprob: -8.750264167785645
    3. 'cards' → logprob: -9.500264167785645
    4. '_cards' → logprob: -10.750264167785645
    5. '(card' → logprob: -12.000264167785645
    6. ' cards' → logprob: -14.250264167785645
    7. '/cards' → logprob: -14.375264167785645
    8. '(set' → logprob: -14.625264167785645
    9. '(
' → logprob: -15.250264167785645
    10. '(sorted' → logprob: -15.375264167785645

Token 134: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -4.143808109802194e-05
    2. 'cards' → logprob: -10.125041007995605
    3. ' cards' → logprob: -14.250041007995605
    4. '(' → logprob: -15.500041007995605
    5. ')' → logprob: -15.875041007995605
    6. '/cards' → logprob: -16.000041961669922
    7. '(card' → logprob: -16.250041961669922
    8. '.cards' → logprob: -17.375041961669922
    9. '_cards' → logprob: -17.625041961669922
    10. ')(' → logprob: -17.750041961669922

Token 135: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3113236129283905
    2. ')' → logprob: -1.686323642730713
    3. '))
' → logprob: -2.561323642730713
    4. ')
' → logprob: -5.436323642730713
    5. '           ' → logprob: -8.186323165893555
    6. ')))' → logprob: -9.061323165893555
    7. ' ))' → logprob: -9.686323165893555
    8. '       ' → logprob: -9.686323165893555
    9. '   ' → logprob: -10.061323165893555
    10. ' )' → logprob: -10.186323165893555

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7300198078155518
    2. '       ' → logprob: -1.2300198078155518
    3. '   ' → logprob: -2.1050198078155518
    4. '
' → logprob: -2.7300198078155518
    5. ')' → logprob: -3.6050198078155518
    6. ')
' → logprob: -6.480019569396973
    7. '    
' → logprob: -6.730019569396973
    8. ':
' → logprob: -6.730019569396973
    9. '):
' → logprob: -6.855019569396973
    10. ',' → logprob: -6.855019569396973

Token 137: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.880136251449585
    2. ' if' → logprob: -1.505136251449585
    3. ' for' → logprob: -2.005136251449585
    4. '
' → logprob: -2.505136251449585
    5. '   ' → logprob: -3.005136251449585
    6. 'if' (adapté à ' if') → logprob: -3.130136251449585
    7. ' return' → logprob: -4.255136489868164
    8. 'for' → logprob: -4.380136489868164
    9. 'return' → logprob: -4.630136489868164
    10. '       ' → logprob: -4.630136489868164

Token 138: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31497621536254883
    2. ' len' → logprob: -1.3149762153625488
    3. ' all' → logprob: -6.564976215362549
    4. 'all' → logprob: -8.68997573852539
    5. ' cards' → logprob: -9.43997573852539
    6. 'cards' → logprob: -10.56497573852539
    7. ' max' → logprob: -11.56497573852539
    8. 'max' → logprob: -11.93997573852539
    9. ' ' → logprob: -12.06497573852539
    10. '(len' → logprob: -12.18997573852539

Token 139: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0001664717128733173
    2. '(' → logprob: -9.125166893005371
    3. ' (' → logprob: -10.625166893005371
    4. ' cards' → logprob: -10.750166893005371
    5. 'cards' → logprob: -12.125166893005371
    6. '(card' → logprob: -12.125166893005371
    7. '/cards' → logprob: -15.750166893005371
    8. ' ' → logprob: -15.875166893005371
    9. '(
' → logprob: -16.000165939331055
    10. '.cards' → logprob: -16.625165939331055

Token 140: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.01948791742324829
    2. ')' → logprob: -4.0194878578186035
    3. '_cards' → logprob: -7.5194878578186035
    4. ')==' → logprob: -8.019488334655762
    5. 'sorted' → logprob: -8.644488334655762
    6. ' )' → logprob: -9.394488334655762
    7. 's' → logprob: -10.269488334655762
    8. ')<' → logprob: -10.519488334655762
    9. '(cards' → logprob: -11.144488334655762
    10. '_)' → logprob: -11.269488334655762

Token 141: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041827257722616196
    2. '==' → logprob: -3.6668272018432617
    3. ' ==' → logprob: -4.916827201843262
    4. ')==' → logprob: -5.166827201843262
    5. ' )' → logprob: -6.416827201843262
    6. ' ' → logprob: -8.166827201843262
    7. ')!=' → logprob: -8.916827201843262
    8. ' !=' → logprob: -9.041827201843262
    9. '!=' → logprob: -9.166827201843262
    10. '）' → logprob: -10.041827201843262

Token 142: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12973622977733612
    2. ' ==' → logprob: -2.1297361850738525
    3. '!=' → logprob: -6.629736423492432
    4. ' !=' → logprob: -7.129736423492432
    5. ')' → logprob: -8.754735946655273
    6. ' ' → logprob: -8.754735946655273
    7. '<' → logprob: -8.879735946655273
    8. '-' → logprob: -9.254735946655273
    9. '=' → logprob: -10.254735946655273
    10. ')==' → logprob: -11.004735946655273

Token 143: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08241432160139084
    2. 'len' → logprob: -2.582414388656616
    3. ' ' → logprob: -5.832414150238037
    4. ' len' → logprob: -7.457414150238037
    5. '   ' → logprob: -12.957414627075195
    6. '	len' → logprob: -13.082414627075195
    7. '(len' → logprob: -13.332414627075195
    8. '1' → logprob: -13.957414627075195
    9. '  ' → logprob: -14.457414627075195
    10. '=len' → logprob: -14.707414627075195

Token 144: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1426887959241867
    2. 'len' → logprob: -2.017688751220703
    3. '５' → logprob: -12.642688751220703
    4. '(len' → logprob: -13.142688751220703
    5. ' len' → logprob: -13.267688751220703
    6. '```' → logprob: -13.267688751220703
    7. '五' → logprob: -14.017688751220703
    8. '1' → logprob: -14.267688751220703
    9. 'length' → logprob: -14.642688751220703
    10. '4' → logprob: -14.767688751220703

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08837459236383438
    2. ' or' → logprob: -2.713374614715576
    3. ':
' → logprob: -4.088374614715576
    4. ':return' → logprob: -6.963374614715576
    5. '):' → logprob: -8.588374137878418
    6. ')' → logprob: -8.713374137878418
    7. '           ' → logprob: -9.838374137878418
    8. ' and' → logprob: -10.088374137878418
    9. '):
' → logprob: -10.838374137878418
    10. '   ' → logprob: -10.838374137878418

Token 146: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016982723027467728
    2. '           ' → logprob: -7.3766984939575195
    3. ' return' → logprob: -8.00169849395752
    4. 'return' → logprob: -8.12669849395752
    5. '
' → logprob: -9.00169849395752
    6. '       ' → logprob: -9.12669849395752
    7. ':
' → logprob: -9.62669849395752
    8. '   ' → logprob: -9.75169849395752
    9. ':return' → logprob: -10.00169849395752
    10. ':' → logprob: -11.37669849395752

Token 147: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42573532462120056
    2. '           ' → logprob: -1.800735354423523
    3. '               ' → logprob: -2.1757352352142334
    4. 'return' (adapté à ' return') → logprob: -2.8007352352142334
    5. '
' → logprob: -5.5507354736328125
    6. '   ' → logprob: -6.0507354736328125
    7. '       ' → logprob: -7.4257354736328125
    8. '                   ' → logprob: -8.925735473632812
    9. '	return' → logprob: -9.300735473632812
    10. '```' → logprob: -9.925735473632812

Token 148: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005536287208087742
    2. ' False' → logprob: -7.500553607940674
    3. 'True' → logprob: -14.375554084777832
    4. '(False' → logprob: -18.500553131103516
    5. 'None' → logprob: -18.750553131103516
    6. '
' → logprob: -20.125553131103516
    7. 'F' → logprob: -21.500553131103516
    8. ' True' → logprob: -21.875553131103516
    9. '0' → logprob: -22.375553131103516
    10. 'false' → logprob: -22.375553131103516

Token 149: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009729759767651558
    2. '
' → logprob: -5.134729862213135
    3. '       ' → logprob: -6.259729862213135
    4. '   ' → logprob: -7.634729862213135
    5. '            
' → logprob: -8.384729385375977
    6. ',' → logprob: -8.634729385375977
    7. '		' → logprob: -8.634729385375977
    8. '    
' → logprob: -8.759729385375977
    9. ')' → logprob: -9.009729385375977
    10. '\n' → logprob: -9.134729385375977

Token 150: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8042828440666199
    2. '           ' → logprob: -0.8042828440666199
    3. '\n' → logprob: -3.3042829036712646
    4. '       ' → logprob: -3.8042829036712646
    5. '            
' → logprob: -4.5542826652526855
    6. '    
' → logprob: -4.8042826652526855
    7. '   ' → logprob: -5.0542826652526855
    8. ' 
' → logprob: -5.8042826652526855
    9. 'n' → logprob: -6.0542826652526855
    10. '        
' → logprob: -6.1792826652526855

Token 151: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23526513576507568
    2. '   ' → logprob: -2.7352652549743652
    3. ' for' → logprob: -2.9852652549743652
    4. '           ' → logprob: -3.4852652549743652
    5. '    
' → logprob: -3.7352652549743652
    6. 'for' → logprob: -3.9852652549743652
    7. '       ' → logprob: -5.235265254974365
    8. ' if' → logprob: -5.485265254974365
    9. '            
' → logprob: -5.735265254974365
    10. '  
' → logprob: -6.235265254974365

Token 152: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18028868734836578
    2. 'all' → logprob: -2.430288791656494
    3. 'cards' → logprob: -3.305288791656494
    4. ' for' → logprob: -3.680288791656494
    5. 'return' → logprob: -4.930288791656494
    6. ' all' → logprob: -5.430288791656494
    7. 'if' → logprob: -6.805288791656494
    8. ' cards' → logprob: -7.180288791656494
    9. '   ' → logprob: -7.305288791656494
    10. 'max' → logprob: -8.055288314819336

Token 153: '例えば' (ID: 172627)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.08849908411502838
    2. 'cards' → logprob: -2.588499069213867
    3. 'for' → logprob: -4.838499069213867
    4. ' all' → logprob: -7.338499069213867
    5. 'max' → logprob: -7.588499069213867
    6. 'return' → logprob: -8.713499069213867
    7. '(cards' → logprob: -8.838499069213867
    8. ' cards' → logprob: -10.088499069213867
    9. '   ' → logprob: -10.088499069213867
    10. '(all' → logprob: -10.713499069213867

Token 154: ' ' (ID: 220)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.07992558926343918
    2. 'all' → logprob: -2.579925537109375
    3. '(cards' → logprob: -7.954925537109375
    4. ' cards' → logprob: -8.204925537109375
    5. 'max' → logprob: -8.704925537109375
    6. 'for' → logprob: -8.829925537109375
    7. ' all' → logprob: -9.704925537109375
    8. '   ' → logprob: -11.204925537109375
    9. 'card' → logprob: -12.704925537109375
    10. 'return' → logprob: -12.954925537109375

Token 155: '1' (ID: 16)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.01464808452874422
    2. 'all' → logprob: -4.389647960662842
    3. ' cards' → logprob: -6.514647960662842
    4. '(cards' → logprob: -8.2646484375
    5. 'max' → logprob: -8.6396484375
    6. ' all' → logprob: -9.3896484375
    7. 'for' → logprob: -9.7646484375
    8. 'if' → logprob: -10.3896484375
    9. '   ' → logprob: -11.2646484375
    10. '#' → logprob: -12.1396484375

Token 156: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38966381549835205
    2. '0' → logprob: -1.889663815498352
    3. '+' → logprob: -3.1396636962890625
    4. ' in' → logprob: -3.3896636962890625
    5. ' +' → logprob: -3.6396636962890625
    6. ' ' → logprob: -3.6396636962890625
    7. ' ,' → logprob: -4.0146636962890625
    8. ')' → logprob: -5.6396636962890625
    9. ' and' → logprob: -5.7646636962890625
    10. '-' → logprob: -6.0146636962890625

Token 157: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27209216356277466
    2. '2' → logprob: -1.8970921039581299
    3. '0' → logprob: -2.64709210395813
    4. ' ' → logprob: -4.897092342376709
    5. 'から' → logprob: -6.397092342376709
    6. '、' → logprob: -6.522092342376709
    7. 'と' → logprob: -6.647092342376709
    8. ',
' → logprob: -6.897092342376709
    9. '+' → logprob: -6.897092342376709
    10. ' ,' → logprob: -7.147092342376709

Token 158: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1686907708644867
    2. ' ' → logprob: -1.918690800666809
    3. ',' → logprob: -4.7936906814575195
    4. ' ,' → logprob: -8.91869068145752
    5. '３' → logprob: -12.54369068145752
    6. ' ' → logprob: -13.35619068145752
    7. '，' → logprob: -13.60619068145752
    8. '、' → logprob: -13.85619068145752
    9. '
' → logprob: -14.04369068145752
    10. ',
' → logprob: -14.23119068145752

Token 159: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000495605927426368
    2. ' ' → logprob: -7.625495433807373
    3. '３' → logprob: -12.250495910644531
    4. ',' → logprob: -13.000495910644531
    5. '
' → logprob: -15.375495910644531
    6. '、' → logprob: -17.06299591064453
    7. '```' → logprob: -17.18799591064453
    8. '4' → logprob: -17.56299591064453
    9. 'elif' → logprob: -18.00049591064453
    10. '1' → logprob: -18.12549591064453

Token 160: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1437760293483734
    2. ' ' → logprob: -2.0187759399414062
    3. ',' → logprob: -6.893775939941406
    4. '3' → logprob: -10.268775939941406
    5. ' ,' → logprob: -11.393775939941406
    6. '46' → logprob: -11.518775939941406
    7. '４' → logprob: -12.018775939941406
    8. '6' → logprob: -12.643775939941406
    9. '45' → logprob: -12.768775939941406
    10. ' ' → logprob: -12.768775939941406

Token 161: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003819332632701844
    2. ' ' → logprob: -7.875381946563721
    3. '４' → logprob: -13.625381469726562
    4. ',' → logprob: -15.250381469726562
    5. '45' → logprob: -16.000381469726562
    6. '46' → logprob: -16.812881469726562
    7. '' → logprob: -17.062881469726562
    8. '3' → logprob: -17.062881469726562
    9. '۴' → logprob: -17.125381469726562
    10. '```' → logprob: -17.125381469726562

Token 162: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.026343729346990585
    2. ' ' → logprob: -3.651343822479248
    3. '6' → logprob: -10.65134334564209
    4. ',' → logprob: -11.90134334564209
    5. '５' → logprob: -12.02634334564209
    6. '56' → logprob: -14.46384334564209
    7. ' ' → logprob: -14.65134334564209
    8. '53' → logprob: -14.71384334564209
    9. ' ,' → logprob: -14.77634334564209
    10. '```' → logprob: -15.21384334564209

Token 163: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.250296592712402
    3. '6' → logprob: -10.375296592712402
    4. '５' → logprob: -12.750296592712402
    5. ',' → logprob: -14.500296592712402
    6. '56' → logprob: -16.375295639038086
    7. '7' → logprob: -16.625295639038086
    8. ' ' → logprob: -17.375295639038086
    9. '53' → logprob: -17.562795639038086
    10. '
' → logprob: -17.875295639038086

Token 164: ' の' (ID: 76364)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0391641855239868
    2. ' if' → logprob: -1.2891641855239868
    3. ' return' → logprob: -1.7891641855239868
    4. '           ' → logprob: -2.2891640663146973
    5. ' or' → logprob: -3.7891640663146973
    6. 'and' → logprob: -3.9141640663146973
    7. 'return' → logprob: -4.164164066314697
    8. '==' → logprob: -4.289164066314697
    9. ' ==' → logprob: -4.914164066314697
    10. 'if' → logprob: -4.914164066314697

Token 165: '判' (ID: 47257)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -1.153342604637146
    2. 'all' → logprob: -1.403342604637146
    3. 'len' → logprob: -2.2783427238464355
    4. 'if' → logprob: -2.2783427238464355
    5. 'return' → logprob: -2.6533427238464355
    6. '差' → logprob: -3.9033427238464355
    7. 'elif' → logprob: -4.0283427238464355
    8. 'difference' → logprob: -4.2783427238464355
    9. 'for' → logprob: -4.4033427238464355
    10. 'よう' → logprob: -4.5283427238464355

Token 166: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -0.04356620833277702
    2. '断' → logprob: -3.1685662269592285
    3. '\xe6\x96' → logprob: -7.7935662269592285
    4. 'def' → logprob: -10.16856575012207
    5. '#' → logprob: -11.04356575012207
    6. '   ' → logprob: -11.29356575012207
    7. '別' → logprob: -11.41856575012207
    8. '```' → logprob: -11.41856575012207
    9. '段' → logprob: -11.54356575012207
    10. '
' → logprob: -11.79356575012207

Token 167: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16855372488498688
    2. ' for' → logprob: -2.7935538291931152
    3. '       ' → logprob: -3.2935538291931152
    4. '
' → logprob: -3.6685538291931152
    5. ' if' → logprob: -4.168553829193115
    6. '   ' → logprob: -5.043553829193115
    7. ',' → logprob: -6.043553829193115
    8. ' and' → logprob: -6.418553829193115
    9. ' return' → logprob: -6.918553829193115
    10. 'for' → logprob: -7.043553829193115

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11099600046873093
    2. '       ' → logprob: -2.8609960079193115
    3. '   ' → logprob: -3.6109960079193115
    4. ' if' → logprob: -4.860995769500732
    5. ' return' → logprob: -5.485995769500732
    6. ' for' → logprob: -5.985995769500732
    7. ',' → logprob: -6.235995769500732
    8. ' and' → logprob: -7.110995769500732
    9. '
' → logprob: -7.610995769500732
    10. 'return' → logprob: -7.860995769500732

Token 169: ' normal' (ID: 6078)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29794466495513916
    2. 'for' → logprob: -2.0479445457458496
    3. ' if' → logprob: -2.6729445457458496
    4. 'if' → logprob: -3.4229445457458496
    5. ' return' → logprob: -4.67294454574585
    6. '           ' → logprob: -5.17294454574585
    7. '   ' → logprob: -5.17294454574585
    8. '
' → logprob: -5.79794454574585
    9. 'return' → logprob: -5.79794454574585
    10. '       ' → logprob: -9.922945022583008

Token 170: '_st' (ID: 2518)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.665850043296814
    2. '=' → logprob: -1.915850043296814
    3. '==' → logprob: -1.915850043296814
    4. ' and' → logprob: -2.0408501625061035
    5. '_cards' → logprob: -2.1658501625061035
    6. ' =' → logprob: -3.2908501625061035
    7. '[' → logprob: -3.5408501625061035
    8. ')' → logprob: -3.9158501625061035
    9. '_range' → logprob: -3.9158501625061035
    10. '_' → logprob: -4.2908501625061035

Token 171: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.000561373308300972
    2. 'rait' → logprob: -7.875561237335205
    3. 'r' → logprob: -9.500561714172363
    4. 'rain' → logprob: -10.750561714172363
    5. 'reak' → logprob: -10.875561714172363
    6. 'ream' → logprob: -11.000561714172363
    7. 'rai' → logprob: -11.250561714172363
    8. 'rail' → logprob: -12.250561714172363
    9. 'ray' → logprob: -12.375561714172363
    10. 'raid' → logprob: -13.000561714172363

Token 172: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.0001830410328693688
    2. 'ght' → logprob: -9.87518310546875
    3. '```' → logprob: -10.12518310546875
    4. 'igh' → logprob: -10.87518310546875
    5. 'igt' → logprob: -10.87518310546875
    6. 'ights' → logprob: -11.62518310546875
    7. 'ught' → logprob: -12.00018310546875
    8. '``' → logprob: -12.50018310546875
    9. 'ig' → logprob: -12.75018310546875
    10. 'int' → logprob: -12.87518310546875

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029894428327679634
    2. ' =' → logprob: -3.5298943519592285
    3. '＝' → logprob: -9.779894828796387
    4. 's' → logprob: -10.654894828796387
    5. '=True' → logprob: -11.279894828796387
    6. '==' → logprob: -11.904894828796387
    7. '   ' → logprob: -12.029894828796387
    8. '=[]' → logprob: -12.029894828796387
    9. '=[' → logprob: -12.404894828796387
    10. '_cards' → logprob: -12.779894828796387

Token 174: ' True' (ID: 6432)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.13832086324691772
    2. 'cards' → logprob: -2.5133209228515625
    3. ' all' → logprob: -3.2633209228515625
    4. '(cards' → logprob: -5.6383209228515625
    5. ' cards' → logprob: -5.7633209228515625
    6. '(all' → logprob: -5.8883209228515625
    7. 'max' → logprob: -8.763320922851562
    8. 'len' → logprob: -9.388320922851562
    9. '   ' → logprob: -9.638320922851562
    10. '(' → logprob: -10.638320922851562

Token 175: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05149868503212929
    2. '       ' → logprob: -3.9264986515045166
    3. ' for' → logprob: -4.176498889923096
    4. 'for' → logprob: -4.676498889923096
    5. '
' → logprob: -5.801498889923096
    6. '   ' → logprob: -6.551498889923096
    7. '               ' → logprob: -8.676498413085938
    8. ',' → logprob: -8.676498413085938
    9. '    
' → logprob: -8.801498413085938
    10. ')' → logprob: -9.426498413085938

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18780189752578735
    2. '       ' → logprob: -2.3128018379211426
    3. ' for' → logprob: -3.0628018379211426
    4. 'for' → logprob: -4.312801837921143
    5. '   ' → logprob: -4.812801837921143
    6. '
' → logprob: -6.562801837921143
    7. '    ' → logprob: -7.437801837921143
    8. '    
' → logprob: -8.4378023147583
    9. '               ' → logprob: -8.4378023147583
    10. ' 
' → logprob: -8.6878023147583

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021186931058764458
    2. ' for' → logprob: -3.8961868286132812
    3. '   ' → logprob: -7.396186828613281
    4. '       ' → logprob: -10.771186828613281
    5. '	for' → logprob: -12.396186828613281
    6. '           ' → logprob: -12.521186828613281
    7. ' ' → logprob: -14.521186828613281
    8. '```' → logprob: -14.521186828613281
    9. '``' → logprob: -14.521186828613281
    10. '
' → logprob: -15.396186828613281

Token 178: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740792512893677
    2. 'i' → logprob: -0.9740792512893677
    3. '	i' → logprob: -13.224079132080078
    4. ' ' → logprob: -15.724079132080078
    5. 'index' → logprob: -16.474079132080078
    6. 'idx' → logprob: -16.974079132080078
    7. '   ' → logprob: -17.099079132080078
    8. ' ' → logprob: -17.599079132080078
    9. ' idx' → logprob: -17.599079132080078
    10. ' in' → logprob: -17.974079132080078

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03431079536676407
    2. 'in' → logprob: -3.409310817718506
    3. ' ' → logprob: -7.534310817718506
    4. '	in' → logprob: -9.659310340881348
    5. ',' → logprob: -10.534310340881348
    6. ' i' → logprob: -11.159310340881348
    7. '　' → logprob: -11.409310340881348
    8. 'i' → logprob: -13.159310340881348
    9. '  ' → logprob: -13.284310340881348
    10. '	' → logprob: -13.284310340881348

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048592709004879
    2. ' range' → logprob: -3.0485928058624268
    3. ' ' → logprob: -12.923592567443848
    4. '	range' → logprob: -13.173592567443848
    5. '   ' → logprob: -14.298592567443848
    6. '  ' → logprob: -14.923592567443848
    7. '(range' → logprob: -16.298593521118164
    8. '
' → logprob: -18.423593521118164
    9. '    ' → logprob: -18.798593521118164
    10. '```' → logprob: -19.423593521118164

Token 181: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034282929264009
    2. '(len' → logprob: -6.0034284591674805
    3. '1' → logprob: -7.1284284591674805
    4. '4' → logprob: -9.00342845916748
    5. 'len' → logprob: -11.00342845916748
    6. ' (' → logprob: -11.75342845916748
    7. ' len' → logprob: -13.75342845916748
    8. '(
' → logprob: -14.12842845916748
    9. '   ' → logprob: -14.50342845916748
    10. ' ' → logprob: -15.37842845916748

Token 182: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20536215603351593
    2. '1' → logprob: -1.7053622007369995
    3. 'len' → logprob: -5.580362319946289
    4. ' ' → logprob: -8.955362319946289
    5. ' len' → logprob: -10.330362319946289
    6. '5' → logprob: -12.580362319946289
    7. '(len' → logprob: -13.330362319946289
    8. '   ' → logprob: -13.580362319946289
    9. '(' → logprob: -14.580362319946289
    10. '0' → logprob: -15.267862319946289

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012932784855365753
    2. '):
' → logprob: -4.387932777404785
    3. ' ):' → logprob: -8.262932777404785
    4. ')' → logprob: -9.262932777404785
    5. ',' → logprob: -10.637932777404785
    6. ':' → logprob: -10.762932777404785
    7. '   ' → logprob: -11.762932777404785
    8. ')：' → logprob: -12.637932777404785
    9. ' ' → logprob: -12.887932777404785
    10. '1' → logprob: -12.887932777404785

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01271047629415989
    2. '           ' → logprob: -5.0127105712890625
    3. ' if' → logprob: -6.0127105712890625
    4. '       ' → logprob: -6.7627105712890625
    5. ',' → logprob: -7.3877105712890625
    6. '<|end|>' → logprob: -8.012710571289062
    7. '                
' → logprob: -8.637710571289062
    8. '   ' → logprob: -8.637710571289062
    9. ':' → logprob: -8.887710571289062
    10. '            
' → logprob: -9.012710571289062

Token 185: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5284314751625061
    2. ' if' → logprob: -0.9034314751625061
    3. 'if' (adapté à ' if') → logprob: -5.403431415557861
    4. '           ' → logprob: -8.15343189239502
    5. '   ' → logprob: -9.27843189239502
    6. '                
' → logprob: -9.65343189239502
    7. ',' → logprob: -9.90343189239502
    8. '<|end|>' → logprob: -9.90343189239502
    9. ' 
' → logprob: -10.02843189239502
    10. ' ' → logprob: -10.40343189239502

Token 186: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.20162248611450195
    2. ' cards' → logprob: -1.701622486114502
    3. '(cards' → logprob: -8.701622009277344
    4. '   ' → logprob: -10.451622009277344
    5. '.cards' → logprob: -12.076622009277344
    6. '               ' → logprob: -12.701622009277344
    7. '_cards' → logprob: -13.451622009277344
    8. '           ' → logprob: -13.951622009277344
    9. 'Cards' → logprob: -14.076622009277344
    10. '/cards' → logprob: -14.701622009277344

Token 187: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.3902033970225602e-05
    2. '[i' → logprob: -11.625014305114746
    3. 'sorted' → logprob: -12.875014305114746
    4. '[' → logprob: -13.750014305114746
    5. '```' → logprob: -15.000014305114746
    6. 'Sorted' → logprob: -15.250014305114746
    7. '   ' → logprob: -15.625014305114746
    8. 's' → logprob: -16.50001335144043
    9. ' ' → logprob: -16.87501335144043
    10. '.sorted' → logprob: -17.00001335144043

Token 188: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.623244553338736e-05
    2. '[' → logprob: -9.625065803527832
    3. 'i' → logprob: -16.75006675720215
    4. ' [' → logprob: -17.25006675720215
    5. '[
' → logprob: -17.75006675720215
    6. '
' → logprob: -18.12506675720215
    7. '[j' → logprob: -18.50006675720215
    8. ' i' → logprob: -19.00006675720215
    9. '][' → logprob: -19.37506675720215
    10. ' ' → logprob: -20.12506675720215

Token 189: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028530355542898178
    2. ' +' → logprob: -4.153530120849609
    3. ']' → logprob: -4.778530120849609
    4. ']+' → logprob: -5.528530120849609
    5. '＋' → logprob: -11.40353012084961
    6. ' ' → logprob: -11.77853012084961
    7. ' ]' → logprob: -12.02853012084961
    8. '-' → logprob: -13.15353012084961
    9. '```' → logprob: -13.40353012084961
    10. ')+' → logprob: -13.52853012084961

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00469913799315691
    2. ']' → logprob: -5.379699230194092
    3. ' ' → logprob: -9.879698753356934
    4. ']-' → logprob: -10.879698753356934
    5. '１' → logprob: -13.254698753356934
    6. ']==' → logprob: -13.504698753356934
    7. ' ]' → logprob: -13.754698753356934
    8. '-' → logprob: -13.879698753356934
    9. '```' → logprob: -13.879698753356934
    10. ' -' → logprob: -14.629698753356934

Token 191: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2031947374343872
    2. ' -' → logprob: -1.9531947374343872
    3. '!=' → logprob: -3.2031946182250977
    4. ' !=' → logprob: -6.953194618225098
    5. ']!=' → logprob: -7.953194618225098
    6. ')!=' → logprob: -9.953194618225098
    7. '!==' → logprob: -10.828194618225098
    8. ']' → logprob: -10.953194618225098
    9. '!=-' → logprob: -11.328194618225098
    10. '!=(' → logprob: -12.203194618225098

Token 192: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33078351616859436
    2. '!=' → logprob: -1.705783486366272
    3. ' -' → logprob: -2.3307836055755615
    4. ' !=' → logprob: -5.955783367156982
    5. '!==' → logprob: -9.83078384399414
    6. ')!=' → logprob: -9.95578384399414
    7. ']!=' → logprob: -10.20578384399414
    8. '!=-' → logprob: -10.33078384399414
    9. '()!=' → logprob: -11.83078384399414
    10. '!=(' → logprob: -11.83078384399414

Token 193: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.2519502341747284
    2. ' cards' → logprob: -1.5019502639770508
    3. '1' → logprob: -11.62695026397705
    4. '(cards' → logprob: -12.25195026397705
    5. '   ' → logprob: -13.00195026397705
    6. '.cards' → logprob: -13.12695026397705
    7. ' ' → logprob: -13.75195026397705
    8. 'card' → logprob: -14.00195026397705
    9. '_cards' → logprob: -15.50195026397705
    10. 'c' → logprob: -15.50195026397705

Token 194: '_sorted' (ID: 104993)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.40567857027053833
    2. '_sorted' → logprob: -1.1556785106658936
    3. 'sorted' → logprob: -4.405678749084473
    4. '[' → logprob: -5.905678749084473
    5. '_cards' → logprob: -6.530678749084473
    6. 'i' → logprob: -7.655678749084473
    7. 's' → logprob: -8.030678749084473
    8. '```' → logprob: -8.030678749084473
    9. '[
' → logprob: -8.280678749084473
    10. '_' → logprob: -9.030678749084473

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1160349458805285e-05
    2. 'i' → logprob: -12.000011444091797
    3. '[' → logprob: -12.250011444091797
    4. '[
' → logprob: -15.875011444091797
    5. '```' → logprob: -17.500011444091797
    6. ' i' → logprob: -18.000011444091797
    7. '	i' → logprob: -18.500011444091797
    8. ' [' → logprob: -19.000011444091797
    9. ' ' → logprob: -19.125011444091797
    10. '(i' → logprob: -19.125011444091797

Token 196: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11318783462047577
    2. '!=' → logprob: -2.238187789916992
    3. ')!=' → logprob: -9.113187789916992
    4. ']!=' → logprob: -9.488187789916992
    5. ' ' → logprob: -10.113187789916992
    6. ')' → logprob: -10.238187789916992
    7. '>' → logprob: -10.488187789916992
    8. ']' → logprob: -10.863187789916992
    9. '}' → logprob: -11.488187789916992
    10. '()!=' → logprob: -11.613187789916992

Token 197: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.428737074136734
    2. ' !=' → logprob: -1.0537370443344116
    3. ')!=' → logprob: -11.178736686706543
    4. '()!=' → logprob: -11.928736686706543
    5. '>' → logprob: -12.678736686706543
    6. '!==' → logprob: -13.053736686706543
    7. '!=(' → logprob: -13.053736686706543
    8. ']!=' → logprob: -13.303736686706543
    9. '```' → logprob: -13.553736686706543
    10. '1' → logprob: -13.928736686706543

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0485873706638813
    2. ' ' → logprob: -3.0485873222351074
    3. ' ' → logprob: -16.798587799072266
    4. '```' → logprob: -17.423587799072266
    5. '１' → logprob: -17.798587799072266
    6. '
' → logprob: -18.673587799072266
    7. '   ' → logprob: -19.298587799072266
    8. '  ' → logprob: -19.611087799072266
    9. '<|end|>' → logprob: -19.611087799072266
    10. ' 
' → logprob: -20.173587799072266

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -17.25002098083496
    4. '１' → logprob: -18.00002098083496
    5. '
' → logprob: -18.68752098083496
    6. '۱' → logprob: -19.62502098083496
    7. '   ' → logprob: -19.87502098083496
    8. '<|end|>' → logprob: -20.18752098083496
    9. '१' → logprob: -20.56252098083496
    10. ' ' → logprob: -20.68752098083496

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011846630834043026
    2. ':
' → logprob: -4.511846542358398
    3. '               ' → logprob: -7.761846542358398
    4. '           ' → logprob: -8.886846542358398
    5. ':return' → logprob: -9.011846542358398
    6. ')' → logprob: -10.761846542358398
    7. '：' → logprob: -11.011846542358398
    8. '):' → logprob: -11.261846542358398
    9. '       ' → logprob: -11.386846542358398
    10. ' and' → logprob: -11.761846542358398

Token 201: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005910431034862995
    2. '                   ' → logprob: -6.255910396575928
    3. ':
' → logprob: -6.380910396575928
    4. ':' → logprob: -6.505910396575928
    5. '           ' → logprob: -7.880910396575928
    6. '       ' → logprob: -8.880910873413086
    7. '                       ' → logprob: -9.255910873413086
    8. '                ' → logprob: -10.005910873413086
    9. ':return' → logprob: -10.630910873413086
    10. '              ' → logprob: -11.005910873413086

Token 202: ' normal' (ID: 6078)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8877981901168823
    2. ' normal' → logprob: -1.1377981901168823
    3. ' return' → logprob: -1.8877981901168823
    4. 'normal' (adapté à ' normal') → logprob: -2.762798309326172
    5. ' break' → logprob: -3.512798309326172
    6. 'return' → logprob: -4.512798309326172
    7. '                   ' → logprob: -4.762798309326172
    8. 'break' → logprob: -5.762798309326172
    9. '           ' → logprob: -8.012798309326172
    10. '   ' → logprob: -8.637798309326172

Token 203: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -3.881560041918419e-05
    2. 'straight' → logprob: -10.875039100646973
    3. '_' → logprob: -11.000039100646973
    4. '_str' → logprob: -13.625039100646973
    5. '_sta' → logprob: -14.625039100646973
    6. '_s' → logprob: -15.250039100646973
    7. 'Straight' → logprob: -15.625039100646973
    8. ' straight' → logprob: -16.000038146972656
    9. 'スト' → logprob: -16.125038146972656
    10. ':' → logprob: -16.375038146972656

Token 204: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.00403280695900321
    2. 'ight' → logprob: -6.004032611846924
    3. 'rait' → logprob: -7.004032611846924
    4. 'right' → logprob: -8.629033088684082
    5. 'straight' → logprob: -8.754033088684082
    6. '```' → logprob: -9.254033088684082
    7. '_ra' → logprob: -9.879033088684082
    8. 'rai' → logprob: -10.629033088684082
    9. 'eight' → logprob: -10.754033088684082
    10. 'tra' → logprob: -11.004033088684082

Token 205: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.00020008347928524017
    2. 'ght' → logprob: -9.000200271606445
    3. '```' → logprob: -10.875200271606445
    4. 'int' → logprob: -11.125200271606445
    5. 'igt' → logprob: -12.250200271606445
    6. 'igh' → logprob: -12.375200271606445
    7. 'ught' → logprob: -12.625200271606445
    8. '   ' → logprob: -12.875200271606445
    9. '``' → logprob: -12.875200271606445
    10. '[' → logprob: -13.125200271606445

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2731568217277527
    2. ' =' → logprob: -1.6481568813323975
    3. '=False' → logprob: -3.5231568813323975
    4. '               ' → logprob: -4.398156642913818
    5. '                       ' → logprob: -6.148156642913818
    6. 'False' → logprob: -7.023156642913818
    7. '                   ' → logprob: -7.773156642913818
    8. ':' → logprob: -7.898156642913818
    9. '==' → logprob: -7.898156642913818
    10. '=True' → logprob: -8.898157119750977

Token 207: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015023599844425917
    2. ' False' → logprob: -6.501502513885498
    3. 'F' → logprob: -17.126502990722656
    4. '(False' → logprob: -19.251502990722656
    5. 'false' → logprob: -19.626502990722656
    6. '=False' → logprob: -19.876502990722656
    7. '_false' → logprob: -21.501502990722656
    8. '   ' → logprob: -21.501502990722656
    9. '
' → logprob: -21.751502990722656
    10. '0' → logprob: -22.126502990722656

Token 208: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34599944949150085
    2. '           ' → logprob: -1.3459994792938232
    3. '       ' → logprob: -3.9709994792938232
    4. '
' → logprob: -5.220999240875244
    5. '               ' → logprob: -5.220999240875244
    6. ',' → logprob: -7.720999240875244
    7. '   ' → logprob: -7.970999240875244
    8. '		' → logprob: -8.095999717712402
    9. '                       ' → logprob: -8.470999717712402
    10. '<|end|>' → logprob: -8.970999717712402

Token 209: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0473727285861969
    2. '           ' → logprob: -3.172372817993164
    3. '               ' → logprob: -6.047372817993164
    4. '       ' → logprob: -6.547372817993164
    5. '                       ' → logprob: -8.797372817993164
    6. '				' → logprob: -9.547372817993164
    7. '		' → logprob: -9.672372817993164
    8. '   ' → logprob: -9.922372817993164
    9. ',' → logprob: -10.047372817993164
    10. '                    ' → logprob: -10.672372817993164

Token 210: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4661836624145508
    2. '                   ' → logprob: -1.4661836624145508
    3. 'break' (adapté à ' break') → logprob: -2.216183662414551
    4. '               ' → logprob: -4.216183662414551
    5. '           ' → logprob: -4.341183662414551
    6. '	break' → logprob: -5.716183662414551
    7. '       ' → logprob: -8.21618366241455
    8. ' return' → logprob: -8.46618366241455
    9. ' ' → logprob: -8.46618366241455
    10. '```' → logprob: -8.46618366241455

Token 211: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4004534184932709
    2. '       ' → logprob: -1.4004534482955933
    3. '
' → logprob: -2.6504533290863037
    4. '	' → logprob: -6.525453567504883
    5. 'return' → logprob: -6.525453567504883
    6. '		' → logprob: -6.650453567504883
    7. '   ' → logprob: -6.900453567504883
    8. 'n' → logprob: -7.025453567504883
    9. ',' → logprob: -7.275453567504883
    10. '	return' → logprob: -7.400453567504883

Token 212: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36092859506607056
    2. '           ' → logprob: -1.2359285354614258
    3. '       ' → logprob: -4.610928535461426
    4. '
' → logprob: -7.235928535461426
    5. '' → logprob: -7.610928535461426
    6. '		' → logprob: -8.235928535461426
    7. '   ' → logprob: -9.360928535461426
    8. '	' → logprob: -9.360928535461426
    9. ' return' → logprob: -9.360928535461426
    10. '            
' → logprob: -9.485928535461426

Token 213: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8669003248214722
    2. '       ' → logprob: -0.9919003248214722
    3. '
' → logprob: -1.6169003248214722
    4. '   ' → logprob: -5.741900444030762
    5. ' return' → logprob: -6.116900444030762
    6. 'return' → logprob: -6.366900444030762
    7. '	' → logprob: -7.741900444030762
    8. '	return' → logprob: -7.866900444030762
    9. '    
' → logprob: -7.866900444030762
    10. ' if' → logprob: -8.241900444030762

Token 214: ' normal' (ID: 6078)
  Prédit: ' normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normal' → logprob: -0.06616038829088211
    2. 'normal' → logprob: -2.8161604404449463
    3. ' not' → logprob: -5.566160202026367
    4. 'not' → logprob: -7.941160202026367
    5. '(normal' → logprob: -13.566160202026367
    6. 'n' → logprob: -14.816160202026367
    7. ' ' → logprob: -15.191160202026367
    8. ' ' → logprob: -15.566160202026367
    9. '_normal' → logprob: -15.566160202026367
    10. ' normales' → logprob: -16.191160202026367

Token 215: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0001613459608051926
    2. '_' → logprob: -9.125161170959473
    3. ':' → logprob: -10.750161170959473
    4. '_str' → logprob: -10.750161170959473
    5. '_s' → logprob: -12.500161170959473
    6. '_:' → logprob: -13.375161170959473
    7. 'else' → logprob: -14.125161170959473
    8. '_else' → logprob: -14.750161170959473
    9. 'straight' → logprob: -14.875161170959473
    10. '):' → logprob: -14.875161170959473

Token 216: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.005943967495113611
    2. 'rait' → logprob: -5.630943775177002
    3. 'ight' → logprob: -6.130943775177002
    4. 'tra' → logprob: -10.13094425201416
    5. '_ra' → logprob: -10.25594425201416
    6. 'right' → logprob: -10.63094425201416
    7. 'rai' → logprob: -10.75594425201416
    8. 'straight' → logprob: -10.88094425201416
    9. '```' → logprob: -11.75594425201416
    10. 'eight' → logprob: -12.88094425201416

Token 217: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -8.482821431243792e-05
    2. 'igh' → logprob: -10.37508487701416
    3. 'ght' → logprob: -11.62508487701416
    4. 'i' → logprob: -11.75008487701416
    5. 'int' → logprob: -12.00008487701416
    6. '```' → logprob: -12.25008487701416
    7. '   ' → logprob: -12.37508487701416
    8. 'い' → logprob: -12.62508487701416
    9. 'igt' → logprob: -13.50008487701416
    10. '#' → logprob: -13.50008487701416

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015249950811266899
    2. ':
' → logprob: -4.265249729156494
    3. ':return' → logprob: -7.515249729156494
    4. '               ' → logprob: -8.265250205993652
    5. '           ' → logprob: -8.765250205993652
    6. ' or' → logprob: -9.640250205993652
    7. '       ' → logprob: -10.390250205993652
    8. ' :' → logprob: -11.515250205993652
    9. ' return' → logprob: -11.890250205993652
    10. '   ' → logprob: -12.390250205993652

Token 219: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002778012305498123
    2. '           ' → logprob: -6.002778053283691
    3. ' return' → logprob: -9.002778053283691
    4. 'return' → logprob: -9.002778053283691
    5. '
' → logprob: -10.002778053283691
    6. '       ' → logprob: -12.877778053283691
    7. '   ' → logprob: -13.627778053283691
    8. '                   ' → logprob: -13.752778053283691
    9. '	           ' → logprob: -13.752778053283691
    10. '            
' → logprob: -14.252778053283691

Token 220: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5668070316314697
    2. '               ' → logprob: -1.3168070316314697
    3. ' return' → logprob: -1.8168070316314697
    4. '           ' → logprob: -6.191806793212891
    5. '
' → logprob: -10.44180679321289
    6. '   ' → logprob: -10.81680679321289
    7. '	return' → logprob: -10.94180679321289
    8. ':return' → logprob: -12.31680679321289
    9. '{return' → logprob: -12.31680679321289
    10. '                   ' → logprob: -12.69180679321289

Token 221: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. '(True' → logprob: -17.514163970947266
    4. 'False' → logprob: -18.889163970947266
    5. '1' → logprob: -19.139163970947266
    6. '=True' → logprob: -19.514163970947266
    7. '   ' → logprob: -20.139163970947266
    8. 'true' → logprob: -20.639163970947266
    9. ' ' → logprob: -22.389163970947266
    10. 'Tr' → logprob: -22.514163970947266

Token 222: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30988627672195435
    2. '
' → logprob: -1.4348862171173096
    3. '       ' → logprob: -3.9348862171173096
    4. '            
' → logprob: -5.684886455535889
    5. '    
' → logprob: -5.809886455535889
    6. '        
' → logprob: -6.809886455535889
    7. 'return' → logprob: -8.68488597869873
    8. ' return' → logprob: -8.93488597869873
    9. '   ' → logprob: -9.05988597869873
    10. ' 
' → logprob: -9.18488597869873

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24039387702941895
    2. '
' → logprob: -1.740393877029419
    3. '            
' → logprob: -3.740393877029419
    4. '       ' → logprob: -5.24039363861084
    5. '    
' → logprob: -5.24039363861084
    6. '        
' → logprob: -5.86539363861084
    7. 'else' → logprob: -8.86539363861084
    8. '

' → logprob: -9.36539363861084
    9. 'return' → logprob: -9.49039363861084
    10. ' return' → logprob: -9.61539363861084

Token 224: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35132482647895813
    2. '           ' → logprob: -1.4763247966766357
    3. '       ' → logprob: -3.4763247966766357
    4. '            
' → logprob: -3.7263247966766357
    5. '    
' → logprob: -5.476325035095215
    6. '        
' → logprob: -5.601325035095215
    7. ' 
' → logprob: -6.351325035095215
    8. '

' → logprob: -7.101325035095215
    9. 'if' → logprob: -7.476325035095215
    10. '   ' → logprob: -7.601325035095215

Token 225: ' A' (ID: 355)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07535673677921295
    2. '   ' → logprob: -3.3253567218780518
    3. ' #' → logprob: -3.5753567218780518
    4. 'if' → logprob: -5.450356960296631
    5. 'low' → logprob: -7.075356960296631
    6. '       ' → logprob: -7.325356960296631
    7. ' ace' → logprob: -7.450356960296631
    8. ' if' → logprob: -7.700356960296631
    9. 'ace' → logprob: -7.700356960296631
    10. '           ' → logprob: -8.200356483459473

Token 226: ' を' (ID: 107105)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8136801719665527
    2. '-' → logprob: -2.0636801719665527
    3. 'll' → logprob: -2.3136801719665527
    4. ' ' → logprob: -2.9386801719665527
    5. '1' → logprob: -3.3136801719665527
    6. '[' → logprob: -3.3136801719665527
    7. 'が' → logprob: -3.3136801719665527
    8. '_' → logprob: -3.4386801719665527
    9. '_low' → logprob: -3.4386801719665527
    10. 'l' → logprob: -3.6886801719665527

Token 227: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.625331699848175
    2. '1' → logprob: -1.5003316402435303
    3. ' ' → logprob: -2.3753316402435303
    4. '14' → logprob: -3.1253316402435303
    5. '4' → logprob: -4.000331878662109
    6. '[' → logprob: -4.250331878662109
    7. '2' → logprob: -4.750331878662109
    8. '```' → logprob: -4.875331878662109
    9. 'cards' → logprob: -5.000331878662109
    10. '16' → logprob: -5.000331878662109

Token 228: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.21034564077854156
    2. '[' → logprob: -1.7103456258773804
    3. ' [' → logprob: -6.21034574508667
    4. '1' → logprob: -6.21034574508667
    5. '[
' → logprob: -6.58534574508667
    6. '13' → logprob: -7.21034574508667
    7. ' ' → logprob: -7.21034574508667
    8. '10' → logprob: -7.71034574508667
    9. '{' → logprob: -7.71034574508667
    10. '[]' → logprob: -7.83534574508667

Token 229: ' と' (ID: 150026)
  Prédit: 'として'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'として' → logprob: -0.002721183467656374
    2. 'に' → logprob: -6.502721309661865
    3. 'と' → logprob: -6.877721309661865
    4. 'で' → logprob: -9.252720832824707
    5. ' と' → logprob: -10.252720832824707
    6. ' に' → logprob: -10.752720832824707
    7. 'の' → logprob: -10.752720832824707
    8. '扱' → logprob: -13.002720832824707
    9. '<|end|>' → logprob: -13.627720832824707
    10. 'を' → logprob: -13.752720832824707

Token 230: 'して' (ID: 22440)
  Prédit: 'して'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'して' → logprob: -0.0036906935274600983
    2. 'み' → logprob: -5.878690719604492
    3. 'する' → logprob: -8.503690719604492
    4. 'いう' → logprob: -8.628690719604492
    5. 'した' → logprob: -8.878690719604492
    6. '```' → logprob: -8.878690719604492
    7. '見' → logprob: -10.128690719604492
    8. '1' → logprob: -10.753690719604492
    9. '置' → logprob: -10.753690719604492
    10. '思' → logprob: -11.003690719604492

Token 231: '最後' (ID: 161045)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.22743037343025208
    2. ' cards' → logprob: -1.6024303436279297
    3. 'if' → logprob: -7.22743034362793
    4. '#' → logprob: -7.47743034362793
    5. 'return' → logprob: -9.35243034362793
    6. '(cards' → logprob: -9.35243034362793
    7. 'card' → logprob: -9.47743034362793
    8. 'converted' → logprob: -9.60243034362793
    9. '_cards' → logprob: -9.72743034362793
    10. 'for' → logprob: -9.97743034362793

Token 232: 'に' (ID: 5280)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.23533779382705688
    2. 'まで' → logprob: -2.360337734222412
    3. 'if' → logprob: -2.860337734222412
    4. 'の' → logprob: -4.110337734222412
    5. 'に' → logprob: -4.860337734222412
    6. '#' → logprob: -5.860337734222412
    7. 'for' → logprob: -5.860337734222412
    8. ' cards' → logprob: -5.985337734222412
    9. '(cards' → logprob: -5.985337734222412
    10. '_cards' → logprob: -6.110337734222412

Token 233: 'する' (ID: 39065)
  Prédit: '扱'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '扱' → logprob: -0.366810142993927
    2. '考' → logprob: -2.4918100833892822
    3. 'append' → logprob: -2.7418100833892822
    4. '追加' → logprob: -3.1168100833892822
    5. 'cards' → logprob: -3.4918100833892822
    6. 'consider' → logprob: -4.116810321807861
    7. 'count' → logprob: -4.116810321807861
    8. '置' → logprob: -4.366810321807861
    9. '判' → logprob: -5.241810321807861
    10. '使' → logprob: -5.491810321807861

Token 234: '場合' (ID: 72486)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5451465845108032
    2. '           ' → logprob: -2.0451464653015137
    3. '   ' → logprob: -2.7951464653015137
    4. '<|end|>' → logprob: -2.7951464653015137
    5. 'return' → logprob: -3.4201464653015137
    6. '       ' → logprob: -3.4201464653015137
    7. ' return' → logprob: -3.6701464653015137
    8. ' 
' → logprob: -4.170146465301514
    9. ' if' → logprob: -4.795146465301514
    10. ' True' → logprob: -5.295146465301514

Token 235: '（' (ID: 3603)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03891855850815773
    2. '       ' → logprob: -3.4139184951782227
    3. '   ' → logprob: -6.413918495178223
    4. ' if' → logprob: -7.538918495178223
    5. '            
' → logprob: -7.663918495178223
    6. ' return' → logprob: -7.788918495178223
    7. '
' → logprob: -7.788918495178223
    8. '    ' → logprob: -8.288918495178223
    9. ' ' → logprob: -8.413918495178223
    10. ',' → logprob: -8.413918495178223

Token 236: '10' (ID: 702)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.05131172761321068
    2. 'cards' → logprob: -4.301311492919922
    3. '           ' → logprob: -4.676311492919922
    4. ')' → logprob: -5.051311492919922
    5. ' return' → logprob: -5.051311492919922
    6. ' if' → logprob: -5.176311492919922
    7. '
' → logprob: -5.676311492919922
    8. '(cards' → logprob: -6.801311492919922
    9. '            ' → logprob: -7.801311492919922
    10. ' A' → logprob: -8.051311492919922

Token 237: ' J' (ID: 643)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29569679498672485
    2. ' ,' → logprob: -1.42069673538208
    3. '、' → logprob: -5.29569673538208
    4. ' ' → logprob: -6.04569673538208
    5. '14' → logprob: -6.42069673538208
    6. ' ==' → logprob: -6.79569673538208
    7. ' 、' → logprob: -7.54569673538208
    8. '10' → logprob: -7.67069673538208
    9. '1' → logprob: -8.170697212219238
    10. '==' → logprob: -8.295697212219238

Token 238: ' Q' (ID: 1486)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6518688797950745
    2. ' ,' → logprob: -1.4018688201904297
    3. ' Q' → logprob: -1.7768688201904297
    4. 'Q' → logprob: -3.2768688201904297
    5. ',Q' → logprob: -4.27686882019043
    6. ' ' → logprob: -5.15186882019043
    7. 'ack' → logprob: -6.15186882019043
    8. '11' → logprob: -7.02686882019043
    9. '、' → logprob: -7.90186882019043
    10. '1' → logprob: -8.02686882019043

Token 239: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.10905198007822037
    2. 'K' → logprob: -2.3590519428253174
    3. ',' → logprob: -5.1090521812438965
    4. ' ' → logprob: -6.1090521812438965
    5. ',K' → logprob: -8.859051704406738
    6. '   ' → logprob: -9.859051704406738
    7. '11' → logprob: -9.859051704406738
    8. ' ,' → logprob: -10.234051704406738
    9. ' J' → logprob: -10.234051704406738
    10. ' A' → logprob: -10.734051704406738

Token 240: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2301618754863739
    2. 'A' → logprob: -1.6051619052886963
    3. ' ' → logprob: -5.855161666870117
    4. '   ' → logprob: -6.730161666870117
    5. ',' → logprob: -8.855161666870117
    6. ')' → logprob: -9.230161666870117
    7. '）' → logprob: -9.355161666870117
    8. '10' → logprob: -9.855161666870117
    9. '14' → logprob: -10.230161666870117
    10. '  ' → logprob: -10.355161666870117

Token 241: '）
' (ID: 18433)
  Prédit: '）'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '）' → logprob: -0.10254180431365967
    2. '）
' → logprob: -2.727541923522949
    3. ')' → logprob: -4.602541923522949
    4. '):
' → logprob: -4.727541923522949
    5. '）：' → logprob: -5.852541923522949
    6. '           ' → logprob: -5.977541923522949
    7. '）の' → logprob: -6.477541923522949
    8. ')
' → logprob: -6.727541923522949
    9. '):' → logprob: -7.102541923522949
    10. 'の場合' → logprob: -7.602541923522949

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058357201516628265
    2. '       ' → logprob: -2.9333572387695312
    3. '   ' → logprob: -6.058357238769531
    4. '
' → logprob: -7.183357238769531
    5. ' return' → logprob: -8.933357238769531
    6. '    
' → logprob: -9.808357238769531
    7. '            
' → logprob: -10.433357238769531
    8. '    ' → logprob: -10.808357238769531
    9. '               ' → logprob: -10.933357238769531
    10. '	   ' → logprob: -11.183357238769531

Token 243: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42570745944976807
    2. '   ' → logprob: -1.550707459449768
    3. ' cards' → logprob: -2.5507073402404785
    4. 'if' → logprob: -3.5507073402404785
    5. ' return' → logprob: -4.8007073402404785
    6. '           ' → logprob: -5.3007073402404785
    7. ' ace' → logprob: -5.3007073402404785
    8. 'cards' → logprob: -5.9257073402404785
    9. ' alt' → logprob: -6.5507073402404785
    10. ' low' → logprob: -6.6757073402404785

Token 244: ' J' (ID: 643)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05052218958735466
    2. 'if' → logprob: -3.6755220890045166
    3. ' return' → logprob: -4.550522327423096
    4. ' cards' → logprob: -5.050522327423096
    5. ' ace' → logprob: -5.675522327423096
    6. '   ' → logprob: -6.425522327423096
    7. ' a' → logprob: -8.050521850585938
    8. ' low' → logprob: -8.175521850585938
    9. ' A' → logprob: -8.175521850585938
    10. 'A' → logprob: -8.550521850585938

Token 245: '=' (ID: 28)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.579056978225708
    2. ',' → logprob: -2.329056978225708
    3. '=' → logprob: -2.329056978225708
    4. ' if' → logprob: -2.454056978225708
    5. '<|end|>' → logprob: -2.829056978225708
    6. ' =' → logprob: -3.079056978225708
    7. 'if' → logprob: -3.204056978225708
    8. '_cards' → logprob: -3.204056978225708
    9. ' return' → logprob: -3.329056978225708
    10. 'apanese' → logprob: -3.329056978225708

Token 246: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.04790636524558067
    2. '10' → logprob: -3.1729063987731934
    3. ' ' → logprob: -5.797906398773193
    4. '1' → logprob: -6.672906398773193
    5. '14' → logprob: -8.797905921936035
    6. '13' → logprob: -9.297905921936035
    7. '```' → logprob: -9.797905921936035
    8. '
' → logprob: -9.985405921936035
    9. '0' → logprob: -10.110405921936035
    10. 'True' → logprob: -10.297905921936035

Token 247: ',Q' (ID: 130136)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2686839997768402
    2. '   ' → logprob: -2.768683910369873
    3. '       ' → logprob: -3.393683910369873
    4. ',' → logprob: -3.518683910369873
    5. '
' → logprob: -3.518683910369873
    6. ' if' → logprob: -3.768683910369873
    7. ' ' → logprob: -4.768683910369873
    8. '    ' → logprob: -4.768683910369873
    9. '            ' → logprob: -4.893683910369873
    10. '               ' → logprob: -5.518683910369873

Token 248: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.376302570104599
    2. ' =' → logprob: -2.376302480697632
    3. '<|end|>' → logprob: -2.501302480697632
    4. '=' → logprob: -2.876302480697632
    5. ',K' → logprob: -3.001302480697632
    6. 'K' → logprob: -4.001302719116211
    7. 'A' → logprob: -5.626302719116211
    8. ',A' → logprob: -6.251302719116211
    9. ' K' → logprob: -6.251302719116211
    10. ' ' → logprob: -6.751302719116211

Token 249: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -13.375004768371582
    3. ' ' → logprob: -13.375004768371582
    4. '```' → logprob: -14.375004768371582
    5. '11' → logprob: -15.000004768371582
    6. '
' → logprob: -15.500004768371582
    7. '10' → logprob: -15.937504768371582
    8. '13' → logprob: -16.1250057220459
    9. '   ' → logprob: -16.5625057220459
    10. '2' → logprob: -16.6875057220459

Token 250: ',K' (ID: 107147)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1185389831662178
    2. ',' → logprob: -2.2435390949249268
    3. '<|end|>' → logprob: -6.368538856506348
    4. ' ,' → logprob: -6.743538856506348
    5. '       ' → logprob: -7.368538856506348
    6. '
' → logprob: -7.743538856506348
    7. ',
' → logprob: -8.493538856506348
    8. ' and' → logprob: -8.493538856506348
    9. ' if' → logprob: -8.493538856506348
    10. '               ' → logprob: -8.993538856506348

Token 251: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2247103452682495
    2. ',' → logprob: -1.8497103452682495
    3. ' =' → logprob: -3.349710464477539
    4. '14' → logprob: -5.349710464477539
    5. ',A' → logprob: -6.724710464477539
    6. ' ' → logprob: -7.224710464477539
    7. ' ,' → logprob: -7.724710464477539
    8. 'A' → logprob: -7.974710464477539
    9. '<|end|>' → logprob: -7.974710464477539
    10. '13' → logprob: -8.349710464477539

Token 252: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.375015258789062
    3. '1' → logprob: -12.625015258789062
    4. '```' → logprob: -15.750015258789062
    5. '3' → logprob: -16.000015258789062
    6. '۱۳' → logprob: -16.875015258789062
    7. '   ' → logprob: -16.937515258789062
    8. '１３' → logprob: -17.000015258789062
    9. '
' → logprob: -17.937515258789062
    10. '' → logprob: -17.937515258789062

Token 253: ',A' (ID: 59196)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018382767215371132
    2. ' if' → logprob: -4.893382549285889
    3. '       ' → logprob: -5.518382549285889
    4. ',' → logprob: -5.643382549285889
    5. '   ' → logprob: -6.768382549285889
    6. '
' → logprob: -7.518382549285889
    7. '<|end|>' → logprob: -8.393383026123047
    8. '14' → logprob: -9.018383026123047
    9. '            
' → logprob: -9.143383026123047
    10. ' return' → logprob: -9.268383026123047

Token 254: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.590679943561554
    2. ' =' → logprob: -0.840679943561554
    3. ' ==' → logprob: -5.340680122375488
    4. '14' → logprob: -5.465680122375488
    5. '==' → logprob: -5.590680122375488
    6. 'return' → logprob: -7.715680122375488
    7. ')' → logprob: -8.340680122375488
    8. 'if' → logprob: -9.090680122375488
    9. ',' → logprob: -9.215680122375488
    10. ' ' → logprob: -9.215680122375488

Token 255: '1' (ID: 16)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -7.684157026233152e-05
    2. '1' → logprob: -9.500077247619629
    3. ' ' → logprob: -13.375077247619629
    4. '13' → logprob: -16.500076293945312
    5. '[' → logprob: -16.750076293945312
    6. '4' → logprob: -16.875076293945312
    7. '１４' → logprob: -17.125076293945312
    8. '```' → logprob: -17.500076293945312
    9. '2' → logprob: -17.875076293945312
    10. '15' → logprob: -18.125076293945312

Token 256: ' の' (ID: 76364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39478176832199097
    2. '
' → logprob: -1.3947818279266357
    3. '       ' → logprob: -3.3947818279266357
    4. '<|end|>' → logprob: -3.7697818279266357
    5. ')' → logprob: -5.519781589508057
    6. '            
' → logprob: -5.769781589508057
    7. ' if' → logprob: -6.019781589508057
    8. ',' → logprob: -6.144781589508057
    9. '   ' → logprob: -6.269781589508057
    10. '<|end|>' → logprob: -6.269781589508057

Token 257: 'ため' (ID: 103912)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.22620253264904022
    2. ' cards' → logprob: -2.1012024879455566
    3. 'if' → logprob: -3.8512024879455566
    4. 'def' → logprob: -3.9762024879455566
    5. 'elif' → logprob: -3.9762024879455566
    6. 'converted' → logprob: -5.101202487945557
    7. 'line' → logprob: -6.226202487945557
    8. 'return' → logprob: -6.351202487945557
    9. ' line' → logprob: -6.726202487945557
    10. ' if' → logprob: -6.851202487945557

Token 258: '、' (ID: 1395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1970018744468689
    2. ' cards' → logprob: -2.6970019340515137
    3. '   ' → logprob: -3.4470019340515137
    4. '           ' → logprob: -3.8220019340515137
    5. ' return' → logprob: -3.8220019340515137
    6. 'if' → logprob: -3.8220019340515137
    7. 'cards' → logprob: -4.697001934051514
    8. 'return' → logprob: -6.322001934051514
    9. '       ' → logprob: -7.072001934051514
    10. ' for' → logprob: -7.322001934051514

Token 259: 'A' (ID: 32)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9174928069114685
    2. 'if' → logprob: -1.2924928665161133
    3. ' return' → logprob: -1.9174928665161133
    4. 'return' → logprob: -2.5424928665161133
    5. ' cards' → logprob: -3.4174928665161133
    6. 'cards' → logprob: -3.4174928665161133
    7. '   ' → logprob: -3.6674928665161133
    8. ' for' → logprob: -6.292492866516113
    9. ' ace' → logprob: -6.542492866516113
    10. '14' → logprob: -7.042492866516113

Token 260: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5097315907478333
    2. ' =' → logprob: -1.7597315311431885
    3. ' in' → logprob: -1.8847315311431885
    4. '==' → logprob: -3.3847315311431885
    5. ' ==' → logprob: -4.759731769561768
    6. 'を' → logprob: -5.009731769561768
    7. 's' → logprob: -5.509731769561768
    8. '＝' → logprob: -5.634731769561768
    9. '_cards' → logprob: -5.759731769561768
    10. ' を' → logprob: -6.259731769561768

Token 261: '1' (ID: 16)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -1.8550976164988242e-05
    2. '1' → logprob: -11.750018119812012
    3. ' ' → logprob: -11.750018119812012
    4. '１４' → logprob: -14.375018119812012
    5. '13' → logprob: -14.625018119812012
    6. '[' → logprob: -14.750018119812012
    7. '
' → logprob: -14.875018119812012
    8. '4' → logprob: -15.875018119812012
    9. '' → logprob: -16.250019073486328
    10. '۱۴' → logprob: -16.375019073486328

Token 262: 'は' (ID: 5205)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6235032677650452
    2. ' and' → logprob: -1.2485032081604004
    3. ' if' → logprob: -3.1235032081604004
    4. 'and' → logprob: -3.7485032081604004
    5. 'と' → logprob: -4.1235032081604
    6. '           ' → logprob: -4.2485032081604
    7. ',' → logprob: -4.4985032081604
    8. 'を' → logprob: -4.4985032081604
    9. ' not' → logprob: -4.8735032081604
    10. ' cards' → logprob: -5.1235032081604

Token 263: '特殊' (ID: 153508)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '14' → logprob: -0.07693961262702942
    2. '1' → logprob: -3.326939582824707
    3. 'True' → logprob: -4.201939582824707
    4. 'False' → logprob: -4.701939582824707
    5. 'cards' → logprob: -5.201939582824707
    6. '[]' → logprob: -6.576939582824707
    7. '```' → logprob: -7.201939582824707
    8. '13' → logprob: -7.326939582824707
    9. ' cards' → logprob: -7.451939582824707
    10. '0' → logprob: -7.576939582824707

Token 264: 'な' (ID: 5784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3880806565284729
    2. 'case' → logprob: -1.8880805969238281
    3. ':
' → logprob: -3.638080596923828
    4. 'return' → logprob: -3.763080596923828
    5. ')
' → logprob: -4.013080596923828
    6. '0' → logprob: -4.263080596923828
    7. ' case' → logprob: -4.638080596923828
    8. '-case' → logprob: -4.763080596923828
    9. ',' → logprob: -5.138080596923828
    10. '   ' → logprob: -5.138080596923828

Token 265: '扱' (ID: 161953)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.19625703990459442
    2. ' case' → logprob: -2.6962571144104004
    3. 'ケース' → logprob: -3.1962571144104004
    4. '1' → logprob: -3.8212571144104004
    5. '処' → logprob: -4.1962571144104
    6. '場合' → logprob: -4.3212571144104
    7. '0' → logprob: -4.6962571144104
    8. '扱' → logprob: -5.5712571144104
    9. 'cases' → logprob: -5.6962571144104
    10. ' cases' → logprob: -7.0712571144104

Token 266: 'い' (ID: 3826)
  Prédit: 'い'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.0006880098371766508
    2. '1' → logprob: -8.000687599182129
    3. '0' → logprob: -9.125687599182129
    4. 'き' → logprob: -9.500687599182129
    5. '```' → logprob: -9.875687599182129
    6. 'し' → logprob: -10.375687599182129
    7. 'case' → logprob: -11.750687599182129
    8. '）' → logprob: -12.125687599182129
    9. '2' → logprob: -12.250687599182129
    10. 'われ' → logprob: -12.500687599182129

Token 267: 'で' (ID: 4344)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6412314772605896
    2. '       ' → logprob: -1.8912315368652344
    3. '   ' → logprob: -2.3912315368652344
    4. ',' → logprob: -2.6412315368652344
    5. ')' → logprob: -3.1412315368652344
    6. '
' → logprob: -3.7662315368652344
    7. ':' → logprob: -3.8912315368652344
    8. '<|end|>' → logprob: -4.266231536865234
    9. '               ' → logprob: -5.141231536865234
    10. '    
' → logprob: -5.266231536865234

Token 268: '、' (ID: 1395)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.6897509694099426
    2. ' cards' → logprob: -1.6897509098052979
    3. '14' → logprob: -1.9397509098052979
    4. 'if' → logprob: -3.064750909805298
    5. 'return' → logprob: -3.439750909805298
    6. '1' → logprob: -3.939750909805298
    7. ' return' → logprob: -4.189751148223877
    8. ' True' → logprob: -4.189751148223877
    9. 'True' → logprob: -4.314751148223877
    10. ' if' → logprob: -4.439751148223877

Token 269: '10' (ID: 702)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9321690201759338
    2. ' if' → logprob: -1.557168960571289
    3. 'return' → logprob: -1.932168960571289
    4. 'cards' → logprob: -2.307168960571289
    5. '14' → logprob: -2.807168960571289
    6. ' return' → logprob: -2.932168960571289
    7. ' cards' → logprob: -3.932168960571289
    8. 'A' → logprob: -5.182168960571289
    9. '   ' → logprob: -5.682168960571289
    10. 'True' → logprob: -6.682168960571289

Token 270: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5404224991798401
    2. ',' → logprob: -1.4154224395751953
    3. ' ,' → logprob: -2.0404224395751953
    4. ' ==' → logprob: -4.665422439575195
    5. ' ' → logprob: -5.040422439575195
    6. ' -' → logprob: -5.165422439575195
    7. '14' → logprob: -6.040422439575195
    8. 'in' → logprob: -6.165422439575195
    9. ',
' → logprob: -6.290422439575195
    10. ' if' → logprob: -6.290422439575195

Token 271: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -7.822646693966817e-06
    2. '1' → logprob: -12.125007629394531
    3. ' ' → logprob: -13.875007629394531
    4. '
' → logprob: -14.000007629394531
    5. 'J' → logprob: -15.375007629394531
    6. '```' → logprob: -16.62500762939453
    7. '10' → logprob: -16.75000762939453
    8. 'j' → logprob: -17.12500762939453
    9. '

' → logprob: -17.12500762939453
    10. 'A' → logprob: -17.75000762939453

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004170645028352737
    2. ' ,' → logprob: -6.0041704177856445
    3. '12' → logprob: -6.5041704177856445
    4. ',
' → logprob: -9.879170417785645
    5. ',None' → logprob: -10.254170417785645
    6. ',c' → logprob: -10.754170417785645
    7. ',Q' → logprob: -10.754170417785645
    8. ',A' → logprob: -11.504170417785645
    9. '2' → logprob: -11.879170417785645
    10. '<|end|>' → logprob: -12.129170417785645

Token 273: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -16.75
    4. '１２' → logprob: -18.75
    5. '1' → logprob: -20.125
    6. '10' → logprob: -20.75
    7. '۱۲' → logprob: -21.125
    8. '	' → logprob: -21.25
    9. '11' → logprob: -21.25
    10. '...' → logprob: -21.875

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012272050604224205
    2. '13' → logprob: -4.887271881103516
    3. ' ,' → logprob: -5.387271881103516
    4. ',
' → logprob: -9.887271881103516
    5. ' ' → logprob: -11.262271881103516
    6. '```' → logprob: -12.262271881103516
    7. '   ' → logprob: -12.637271881103516
    8. '
' → logprob: -13.512271881103516
    9. ',\
' → logprob: -13.637271881103516
    10. ',\' → logprob: -13.637271881103516

Token 275: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -8.77627644513268e-06
    2. '1' → logprob: -12.375008583068848
    3. ' ' → logprob: -12.750008583068848
    4. '```' → logprob: -13.875008583068848
    5. '１３' → logprob: -15.000008583068848
    6. '
' → logprob: -15.625008583068848
    7. '3' → logprob: -17.750009536743164
    8. '0' → logprob: -18.125009536743164
    9. '11' → logprob: -18.250009536743164
    10. '۱۳' → logprob: -18.437509536743164

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015004085376858711
    2. ' ,' → logprob: -4.8900041580200195
    3. '14' → logprob: -5.3900041580200195
    4. ',
' → logprob: -6.5150041580200195
    5. ',A' → logprob: -7.8900041580200195
    6. ' and' → logprob: -8.39000415802002
    7. '1' → logprob: -9.26500415802002
    8. 'and' → logprob: -9.51500415802002
    9. ',line' → logprob: -9.51500415802002
    10. 'A' → logprob: -10.01500415802002

Token 277: '1' (ID: 16)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -1.8789383830153383e-05
    2. '1' → logprob: -11.000019073486328
    3. ' ' → logprob: -13.250019073486328
    4. '13' → logprob: -16.125019073486328
    5. '１４' → logprob: -16.250019073486328
    6. '```' → logprob: -17.875019073486328
    7. '4' → logprob: -18.250019073486328
    8. '
' → logprob: -19.125019073486328
    9. '10' → logprob: -19.125019073486328
    10. 'ace' → logprob: -19.375019073486328

Token 278: 'は' (ID: 5205)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.840113639831543
    2. 'を' → logprob: -1.840113639831543
    3. 'の' → logprob: -2.090113639831543
    4. '）' → logprob: -2.840113639831543
    5. 'が' → logprob: -3.215113639831543
    6. ' in' → logprob: -3.715113639831543
    7. 'の場合' → logprob: -4.090113639831543
    8. ' if' → logprob: -4.215113639831543
    9. ' を' → logprob: -4.215113639831543
    10. ']' → logprob: -4.215113639831543

Token 279: 'スト' (ID: 38236)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20255222916603088
    2. 'True' → logprob: -1.9525521993637085
    3. ' False' → logprob: -3.577552318572998
    4. ' True' → logprob: -4.452552318572998
    5. 'cards' → logprob: -7.202552318572998
    6. ' cards' → logprob: -8.07755184173584
    7. 'not' → logprob: -8.20255184173584
    8. ' not' → logprob: -8.32755184173584
    9. '[]' → logprob: -9.45255184173584
    10. 'len' → logprob: -10.07755184173584

Token 280: 'レ' (ID: 12016)
  Prédit: 'レ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'レ' → logprob: -0.0036534101236611605
    2. 'ー' → logprob: -5.753653526306152
    3. '레' → logprob: -8.753653526306152
    4. '```' → logprob: -8.753653526306152
    5. 'ート' → logprob: -9.753653526306152
    6. '
' → logprob: -11.128653526306152
    7. 'フ' → logprob: -11.503653526306152
    8. '8' → logprob: -11.878653526306152
    9. 'a' → logprob: -12.128653526306152
    10. '' → logprob: -12.253653526306152

Token 281: 'ート' (ID: 34471)
  Prédit: 'ート'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ート' → logprob: -0.018668055534362793
    2. 'ー' → logprob: -4.018668174743652
    3. 'ight' → logprob: -8.018668174743652
    4. 'ト' → logprob: -9.518668174743652
    5. 'イト' → logprob: -9.893668174743652
    6. '```' → logprob: -11.018668174743652
    7. 'ｰ' → logprob: -11.518668174743652
    8. '-' → logprob: -12.268668174743652
    9. 'イ' → logprob: -12.393668174743652
    10. '이트' → logprob: -12.393668174743652

Token 282: '扱' (ID: 161953)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8994078636169434
    2. ' False' → logprob: -0.8994078636169434
    3. 'False' → logprob: -2.7744078636169434
    4. ' True' → logprob: -3.2744078636169434
    5. '   ' → logprob: -3.7744078636169434
    6. '(False' → logprob: -3.7744078636169434
    7. '       ' → logprob: -4.524407863616943
    8. '
' → logprob: -5.024407863616943
    9. '(True' → logprob: -5.399407863616943
    10. '=False' → logprob: -5.649407863616943

Token 283: 'い' (ID: 3826)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.2945014536380768
    2. 'い' → logprob: -1.6695014238357544
    3. 'わ' → logprob: -4.044501304626465
    4. '   ' → logprob: -4.294501304626465
    5. '```' → logprob: -4.919501304626465
    6. 'False' → logprob: -5.169501304626465
    7. 'け' → logprob: -5.294501304626465
    8. '           ' → logprob: -5.669501304626465
    9. '）' → logprob: -5.919501304626465
    10. 'き' → logprob: -6.294501304626465

Token 284: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5342391729354858
    2. '
' → logprob: -1.2842391729354858
    3. '       ' → logprob: -2.2842392921447754
    4. '   ' → logprob: -4.034239292144775
    5. ',' → logprob: -6.159239292144775
    6. ' 
' → logprob: -6.284239292144775
    7. '               ' → logprob: -6.284239292144775
    8. '            
' → logprob: -6.659239292144775
    9. ' return' → logprob: -6.784239292144775
    10. '    
' → logprob: -6.909239292144775

Token 285: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5903449654579163
    2. '           ' → logprob: -0.8403449654579163
    3. '       ' → logprob: -5.2153449058532715
    4. '            
' → logprob: -6.0903449058532715
    5. '    
' → logprob: -6.2153449058532715
    6. '\n' → logprob: -6.3403449058532715
    7. ' 
' → logprob: -7.0903449058532715
    8. '   ' → logprob: -7.4653449058532715
    9. '  
' → logprob: -8.09034538269043
    10. '        
' → logprob: -8.21534538269043

Token 286: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7736075520515442
    2. ' if' → logprob: -1.6486074924468994
    3. ' return' → logprob: -1.8986074924468994
    4. '           ' → logprob: -1.8986074924468994
    5. '       ' → logprob: -4.5236077308654785
    6. 'return' → logprob: -4.5236077308654785
    7. 'if' → logprob: -4.7736077308654785
    8. '
' → logprob: -4.8986077308654785
    9. '    
' → logprob: -5.5236077308654785
    10. ' 
' → logprob: -6.1486077308654785

Token 287: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5158213973045349
    2. ' if' → logprob: -1.2658214569091797
    3. ' return' → logprob: -2.7658214569091797
    4. '           ' → logprob: -3.0158214569091797
    5. '       ' → logprob: -5.64082145690918
    6. 'if' → logprob: -5.89082145690918
    7. 'return' → logprob: -6.64082145690918
    8. ' #' → logprob: -8.01582145690918
    9. '#' → logprob: -8.14082145690918
    10. ' ace' → logprob: -8.14082145690918

Token 288: 'なので' (ID: 145461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6328477263450623
    2. '   ' → logprob: -1.257847785949707
    3. 'if' → logprob: -2.507847785949707
    4. ' return' → logprob: -2.507847785949707
    5. 'return' → logprob: -4.257847785949707
    6. '           ' → logprob: -5.257847785949707
    7. '       ' → logprob: -7.382847785949707
    8. '#' → logprob: -7.507847785949707
    9. ' cards' → logprob: -8.007847785949707
    10. 'cards' → logprob: -8.632847785949707

Token 289: '、' (ID: 1395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6229470372200012
    2. ' if' → logprob: -0.8729470372200012
    3. ' return' → logprob: -4.1229472160339355
    4. 'return' → logprob: -4.2479472160339355
    5. 'cards' → logprob: -4.9979472160339355
    6. ' cards' → logprob: -5.6229472160339355
    7. '   ' → logprob: -6.4979472160339355
    8. '10' → logprob: -6.9979472160339355
    9. ' ace' → logprob: -7.4979472160339355
    10. 'for' → logprob: -7.9979472160339355

Token 290: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40297311544418335
    2. 'cards' → logprob: -1.6529731750488281
    3. 'return' → logprob: -2.152973175048828
    4. 'ace' → logprob: -5.027973175048828
    5. '14' → logprob: -5.152973175048828
    6. ' if' → logprob: -5.902973175048828
    7. 'aces' → logprob: -6.402973175048828
    8. ' cards' → logprob: -6.777973175048828
    9. '   ' → logprob: -6.777973175048828
    10. ' return' → logprob: -7.152973175048828

Token 291: ' を' (ID: 107105)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20790588855743408
    2. '==' → logprob: -2.4579057693481445
    3. ' =' → logprob: -2.5829057693481445
    4. ' ==' → logprob: -4.0829057693481445
    5. '_cards' → logprob: -5.9579057693481445
    6. ')' → logprob: -6.7079057693481445
    7. ' in' → logprob: -7.2079057693481445
    8. ',' → logprob: -7.2079057693481445
    9. 'を' → logprob: -7.4579057693481445
    10. '＝' → logprob: -7.5829057693481445

Token 292: ' ' (ID: 220)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.010907517746090889
    2. '[' → logprob: -4.6359076499938965
    3. ' ' → logprob: -7.3859076499938965
    4. ' [' → logprob: -8.135907173156738
    5. '[max' → logprob: -9.635907173156738
    6. '[
' → logprob: -10.260907173156738
    7. '[]' → logprob: -10.385907173156738
    8. '[]
' → logprob: -10.510907173156738
    9. '```' → logprob: -11.385907173156738
    10. 'cards' → logprob: -11.635907173156738

Token 293: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.00013262155698612332
    2. '[' → logprob: -9.00013256072998
    3. ' ' → logprob: -12.37513256072998
    4. '[]' → logprob: -13.37513256072998
    5. '１４' → logprob: -13.87513256072998
    6. '1' → logprob: -14.75013256072998
    7. '[]
' → logprob: -15.00013256072998
    8. ' [' → logprob: -15.12513256072998
    9. '[
' → logprob: -15.25013256072998
    10. '十四' → logprob: -15.25013256072998

Token 294: ' と' (ID: 150026)
  Prédit: 'として'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'として' → logprob: -0.024669038131833076
    2. 'と' → logprob: -4.649669170379639
    3. 'に' → logprob: -5.149669170379639
    4. ' in' → logprob: -5.649669170379639
    5. ' と' → logprob: -6.774669170379639
    6. '-' → logprob: -6.899669170379639
    7. ' に' → logprob: -7.149669170379639
    8. ' if' → logprob: -7.274669170379639
    9. 'を' → logprob: -8.27466869354248
    10. ' -' → logprob: -8.39966869354248

Token 295: 'み' (ID: 17897)
  Prédit: 'して'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'して' → logprob: -0.19718581438064575
    2. '14' → logprob: -1.822185754776001
    3. '```' → logprob: -5.32218599319458
    4. '1' → logprob: -5.82218599319458
    5. '置' → logprob: -6.44718599319458
    6. 'for' → logprob: -6.82218599319458
    7. 'replace' → logprob: -6.94718599319458
    8. '16' → logprob: -6.94718599319458
    9. '17' → logprob: -7.32218599319458
    10. 'した' → logprob: -7.57218599319458

Token 296: 'な' (ID: 5784)
  Prédit: 'な'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.0008707251981832087
    2. 'なし' → logprob: -7.375870704650879
    3. 'て' → logprob: -8.750870704650879
    4. 'る' → logprob: -9.625870704650879
    5. '```' → logprob: -11.625870704650879
    6. 'た' → logprob: -12.375870704650879
    7. '   ' → logprob: -13.125870704650879
    8. 'なお' → logprob: -13.250870704650879
    9. '{' → logprob: -14.500870704650879
    10. '#' → logprob: -15.125870704650879

Token 297: 'して' (ID: 22440)
  Prédit: 'して'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'して' → logprob: -0.34534701704978943
    2. 'し' → logprob: -1.4703470468521118
    3. 'す' → logprob: -2.8453469276428223
    4. 'した' → logprob: -5.970346927642822
    5. 'さ' → logprob: -7.220346927642822
    6. 'て' → logprob: -8.09534740447998
    7. '```' → logprob: -8.72034740447998
    8. 'せ' → logprob: -9.09534740447998
    9. '_' → logprob: -10.22034740447998
    10. 'た' → logprob: -10.47034740447998

Token 298: 'チェック' (ID: 168248)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.067107081413269
    2. ' new' → logprob: -1.442107081413269
    3. 'cards' → logprob: -2.1921072006225586
    4. 'new' → logprob: -2.5671072006225586
    5. '   ' → logprob: -2.6921072006225586
    6. '       ' → logprob: -4.192107200622559
    7. 'straight' → logprob: -4.192107200622559
    8. ' straight' → logprob: -4.317107200622559
    9. 'converted' → logprob: -4.692107200622559
    10. ' ace' → logprob: -4.692107200622559

Token 299: 'して' (ID: 22440)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5044623613357544
    2. '
' → logprob: -1.2544623613357544
    3. '   ' → logprob: -3.379462242126465
    4. '    
' → logprob: -3.754462242126465
    5. '       ' → logprob: -4.254462242126465
    6. '            
' → logprob: -4.379462242126465
    7. ' 
' → logprob: -5.129462242126465
    8. '\n' → logprob: -5.754462242126465
    9. '  
' → logprob: -5.754462242126465
    10. '    ' → logprob: -6.504462242126465

Token 300: 'み' (ID: 17897)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2550860643386841
    2. ' True' → logprob: -3.1300859451293945
    3. ' cards' → logprob: -3.3800859451293945
    4. '               ' → logprob: -3.5050859451293945
    5. ' return' → logprob: -3.7550859451293945
    6. 'True' → logprob: -4.0050859451293945
    7. ' if' → logprob: -4.3800859451293945
    8. 'cards' → logprob: -4.7550859451293945
    9. '            
' → logprob: -5.1300859451293945
    10. '
' → logprob: -5.2550859451293945

Token 301: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.6108096241950989
    2. 'み' → logprob: -1.110809564590454
    3. 'て' → logprob: -2.735809564590454
    4. 'ま' → logprob: -3.735809564590454
    5. 'よう' → logprob: -3.735809564590454
    6. 'ます' → logprob: -4.360809803009033
    7. 'た' → logprob: -7.860809803009033
    8. 'れば' → logprob: -7.985809803009033
    9. 'ろ' → logprob: -8.110809326171875
    10. 'ら' → logprob: -8.110809326171875

Token 302: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34313884377479553
    2. '   ' → logprob: -2.0931389331817627
    3. '       ' → logprob: -2.5931389331817627
    4. '
' → logprob: -3.4681389331817627
    5. '\n' → logprob: -3.8431389331817627
    6. '    
' → logprob: -4.218138694763184
    7. ' 
' → logprob: -5.218138694763184
    8. '  
' → logprob: -5.718138694763184
    9. '            
' → logprob: -5.718138694763184
    10. ' cards' → logprob: -6.718138694763184

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5233601331710815
    2. '
' → logprob: -2.148360252380371
    3. '       ' → logprob: -2.398360252380371
    4. '    
' → logprob: -2.523360252380371
    5. '   ' → logprob: -2.648360252380371
    6. ' 
' → logprob: -3.523360252380371
    7. 'n' → logprob: -5.523360252380371
    8. '\n' → logprob: -5.523360252380371
    9. '            
' → logprob: -5.648360252380371
    10. '  
' → logprob: -5.773360252380371

Token 304: ' ace' (ID: 19084)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26443880796432495
    2. '   ' → logprob: -2.0144388675689697
    3. '       ' → logprob: -3.1394388675689697
    4. ' cards' → logprob: -4.014438629150391
    5. ' if' → logprob: -4.389438629150391
    6. '    
' → logprob: -5.014438629150391
    7. '
' → logprob: -5.389438629150391
    8. 'cards' → logprob: -5.639438629150391
    9. ' return' → logprob: -6.139438629150391
    10. '    ' → logprob: -6.639438629150391

Token 305: '_as' (ID: 25206)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.7860598564147949
    2. '_as' → logprob: -1.786059856414795
    3. 's' → logprob: -2.161059856414795
    4. ' =' → logprob: -2.411059856414795
    5. '_values' → logprob: -2.786059856414795
    6. '=' → logprob: -3.286059856414795
    7. '_index' → logprob: -3.911059856414795
    8. '_high' → logprob: -4.161059856414795
    9. '_value' → logprob: -4.661059856414795
    10. '_val' → logprob: -5.161059856414795

Token 306: '_' (ID: 62)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.052239589393138885
    2. '_' → logprob: -3.0522396564483643
    3. '_four' → logprob: -5.802239418029785
    4. '_high' → logprob: -8.927239418029785
    5. '=' → logprob: -8.927239418029785
    6. '_f' → logprob: -9.052239418029785
    7. '十四' → logprob: -9.927239418029785
    8. ' ' → logprob: -10.177239418029785
    9. '_val' → logprob: -10.427239418029785
    10. ' fourteen' → logprob: -10.677239418029785

Token 307: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.06247791275382042
    2. 'four' → logprob: -2.8124778270721436
    3. 'value' → logprob: -8.937478065490723
    4. 't' → logprob: -9.562478065490723
    5. 'high' → logprob: -9.812478065490723
    6. 'values' → logprob: -9.812478065490723
    7. 'f' → logprob: -10.437478065490723
    8. '1' → logprob: -10.437478065490723
    9. 'ace' → logprob: -10.687478065490723
    10. ' fourteen' → logprob: -10.812478065490723

Token 308: ' =' (ID: 314)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.5310493111610413
    2. ' =' → logprob: -0.9060493111610413
    3. '=' → logprob: -5.0310492515563965
    4. '_values' → logprob: -7.0310492515563965
    5. '_list' → logprob: -8.656049728393555
    6. '_vals' → logprob: -9.031049728393555
    7. 'cards' → logprob: -9.281049728393555
    8. '   ' → logprob: -11.281049728393555
    9. 's' → logprob: -11.656049728393555
    10. '(cards' → logprob: -11.781049728393555

Token 309: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27993038296699524
    2. '[c' → logprob: -1.5299303531646729
    3. 'cards' → logprob: -4.779930591583252
    4. 'sorted' → logprob: -4.904930591583252
    5. '[s' → logprob: -5.154930591583252
    6. '[]
' → logprob: -6.154930591583252
    7. ' [' → logprob: -7.154930591583252
    8. '[max' → logprob: -7.529930591583252
    9. '[list' → logprob: -7.529930591583252
    10. 'list' → logprob: -8.279930114746094

Token 310: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.0010858053574338555
    2. 'c' → logprob: -7.1260857582092285
    3. 'x' → logprob: -8.376086235046387
    4. 'card' → logprob: -10.001086235046387
    5. '(' → logprob: -13.501086235046387
    6. '1' → logprob: -13.626086235046387
    7. '13' → logprob: -13.876086235046387
    8. ' ' → logprob: -14.501086235046387
    9. '(card' → logprob: -14.626086235046387
    10. 'v' → logprob: -15.126086235046387

Token 311: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47418031096458435
    2. 'if' → logprob: -0.9741803407669067
    3. ']' → logprob: -9.724180221557617
    4. '   ' → logprob: -11.349180221557617
    5. ' ' → logprob: -11.724180221557617
    6. '
' → logprob: -12.474180221557617
    7. '	if' → logprob: -12.724180221557617
    8. ']+' → logprob: -12.974180221557617
    9. '           ' → logprob: -13.349180221557617
    10. '       ' → logprob: -13.474180221557617

Token 312: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31473615765571594
    2. 'c' → logprob: -1.3147361278533936
    3. 'card' → logprob: -6.814736366271973
    4. ' x' → logprob: -8.814736366271973
    5. 'v' → logprob: -8.939736366271973
    6. ' c' → logprob: -9.314736366271973
    7. 'num' → logprob: -12.564736366271973
    8. ' card' → logprob: -13.814736366271973
    9. 'n' → logprob: -14.439736366271973
    10. 'a' → logprob: -15.189736366271973

Token 313: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023247340694069862
    2. ' ==' → logprob: -3.773247241973877
    3. '==
' → logprob: -14.523247718811035
    4. 'x' → logprob: -14.648247718811035
    5. '=' → logprob: -14.773247718811035
    6. ']==' → logprob: -15.523247718811035
    7. ')==' → logprob: -16.39824676513672
    8. '===' → logprob: -16.64824676513672
    9. '()==' → logprob: -17.14824676513672
    10. ' ' → logprob: -17.27324676513672

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.000051498413086
    4. '14' → logprob: -17.125051498413086
    5. '  ' → logprob: -17.625051498413086
    6. 'ace' → logprob: -17.750051498413086
    7. 'Ace' → logprob: -18.000051498413086
    8. '```' → logprob: -18.125051498413086
    9. '
' → logprob: -19.125051498413086
    10. 'a' → logprob: -19.375051498413086

Token 315: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.17976543307304382
    2. ' else' → logprob: -1.8047654628753662
    3. 'in' → logprob: -12.304765701293945
    4. '        ' → logprob: -12.804765701293945
    5. '	else' → logprob: -13.054765701293945
    6. ' ' → logprob: -13.179765701293945
    7. '   ' → logprob: -13.304765701293945
    8. '    ' → logprob: -13.929765701293945
    9. '           ' → logprob: -14.304765701293945
    10. '```' → logprob: -14.304765701293945

Token 316: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004879915213678032
    2. ' x' → logprob: -7.625487804412842
    3. ' ' → logprob: -17.75048828125
    4. '   ' → logprob: -18.50048828125
    5. '	x' → logprob: -19.00048828125
    6. '    ' → logprob: -19.87548828125
    7. '  ' → logprob: -20.12548828125
    8. '0' → logprob: -20.12548828125
    9. '14' → logprob: -20.25048828125
    10. '1' → logprob: -20.37548828125

Token 317: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07892107218503952
    2. 'for' → logprob: -2.57892107963562
    3. '	for' → logprob: -10.8289213180542
    4. ' ' → logprob: -11.8289213180542
    5. ' in' → logprob: -13.5789213180542
    6. '   ' → logprob: -13.8289213180542
    7. ')' → logprob: -14.5789213180542
    8. '    ' → logprob: -15.4539213180542
    9. '           ' → logprob: -15.5789213180542
    10. 'in' → logprob: -15.9539213180542

Token 318: ' x' (ID: 1215)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.00023250321100931615
    2. ' cards' → logprob: -8.375232696533203
    3. '(cards' → logprob: -14.125232696533203
    4. '   ' → logprob: -14.875232696533203
    5. 'sorted' → logprob: -15.625232696533203
    6. '.cards' → logprob: -15.625232696533203
    7. 'cars' → logprob: -16.375232696533203
    8. 'card' → logprob: -16.500232696533203
    9. '_cards' → logprob: -16.875232696533203
    10. 'codes' → logprob: -17.000232696533203

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10247595608234406
    2. ' cards' → logprob: -3.227475881576538
    3. 'in' → logprob: -3.227475881576538
    4. 'cards' → logprob: -4.102476119995117
    5. '(cards' → logprob: -6.727476119995117
    6. '_cards' → logprob: -8.852476119995117
    7. '.cards' → logprob: -9.727476119995117
    8. ' ' → logprob: -10.352476119995117
    9. '/cards' → logprob: -10.852476119995117
    10. 's' → logprob: -11.352476119995117

Token 320: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0019555140752345324
    2. ' cards' → logprob: -6.251955509185791
    3. '(cards' → logprob: -11.62695598602295
    4. 'sorted' → logprob: -11.87695598602295
    5. '   ' → logprob: -12.62695598602295
    6. '.cards' → logprob: -13.37695598602295
    7. 'card' → logprob: -13.62695598602295
    8. '_cards' → logprob: -13.87695598602295
    9. '
' → logprob: -14.25195598602295
    10. ' ' → logprob: -14.37695598602295

Token 321: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010968804126605392
    2. ' ]' → logprob: -7.626096725463867
    3. '])' → logprob: -7.751096725463867
    4. '_sorted' → logprob: -9.876096725463867
    5. ' if' → logprob: -10.376096725463867
    6. ']
' → logprob: -10.376096725463867
    7. 'if' → logprob: -11.251096725463867
    8. ')]' → logprob: -11.501096725463867
    9. ')' → logprob: -11.626096725463867
    10. '_]' → logprob: -12.001096725463867

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3157859444618225
    2. '
' → logprob: -1.3157858848571777
    3. '<|end|>' → logprob: -7.315785884857178
    4. '   ' → logprob: -7.815785884857178
    5. '            
' → logprob: -7.815785884857178
    6. '    
' → logprob: -8.690786361694336
    7. '       ' → logprob: -8.690786361694336
    8. '  
' → logprob: -8.815786361694336
    9. '
' → logprob: -9.315786361694336
    10. ' 
' → logprob: -9.565786361694336

Token 323: ' ace' (ID: 19084)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.28471359610557556
    2. '           ' → logprob: -1.784713625907898
    3. 'ace' (adapté à ' ace') → logprob: -3.4097135066986084
    4. ' cards' → logprob: -3.5347135066986084
    5. ' ace' → logprob: -5.0347137451171875
    6. '   ' → logprob: -5.4097137451171875
    7. '
' → logprob: -5.7847137451171875
    8. 'aces' → logprob: -6.9097137451171875
    9. 'return' → logprob: -7.4097137451171875
    10. '.cards' → logprob: -7.5347137451171875

Token 324: '_cards' (ID: 101651)
  Prédit: '_as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.00015359772078227252
    2. '_sorted' → logprob: -9.375153541564941
    3. 'as' → logprob: -10.250153541564941
    4. '_s' → logprob: -12.125153541564941
    5. '_cards' → logprob: -12.125153541564941
    6. 's' → logprob: -12.125153541564941
    7. '_' → logprob: -12.375153541564941
    8. '_for' → logprob: -13.750153541564941
    9. '_ass' → logprob: -13.750153541564941
    10. ' as' → logprob: -13.875153541564941

Token 325: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0001968649885384366
    2. '=' → logprob: -9.00019645690918
    3. ' =' → logprob: -9.62519645690918
    4. 'sorted' → logprob: -12.37519645690918
    5. '_s' → logprob: -13.50019645690918
    6. '_' → logprob: -14.25019645690918
    7. '=_' → logprob: -14.37519645690918
    8. '_sort' → logprob: -16.12519645690918
    9. 's' → logprob: -16.37519645690918
    10. '_=' → logprob: -17.00019645690918

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409921884536743
    2. '=' → logprob: -0.9740992188453674
    3. '.sort' → logprob: -11.599099159240723
    4. ')' → logprob: -12.224099159240723
    5. 'sorted' → logprob: -12.724099159240723
    6. '_sorted' → logprob: -13.224099159240723
    7. ')=' → logprob: -13.724099159240723
    8. '＝' → logprob: -14.849099159240723
    9. '.' → logprob: -14.974099159240723
    10. ' ' → logprob: -15.599099159240723

Token 327: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.6931478977203369
    2. 'sorted' → logprob: -0.6931478977203369
    3. '(sorted' → logprob: -14.568147659301758
    4. '.sorted' → logprob: -15.818147659301758
    5. '_sorted' → logprob: -17.443147659301758
    6. 'Sorted' → logprob: -17.943147659301758
    7. '   ' → logprob: -18.318147659301758
    8. 'sort' → logprob: -18.318147659301758
    9. 's' → logprob: -18.943147659301758
    10. ' ' → logprob: -19.318147659301758

Token 328: '(set' (ID: 25904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003179855877533555
    2. '(set' → logprob: -5.753180027008057
    3. 'set' → logprob: -13.753179550170898
    4. '(list' → logprob: -14.378179550170898
    5. '([' → logprob: -15.878179550170898
    6. 'ace' → logprob: -16.2531795501709
    7. '((' → logprob: -16.3781795501709
    8. ' (' → logprob: -16.7531795501709
    9. '(a' → logprob: -18.5031795501709
    10. '(
' → logprob: -18.5031795501709

Token 329: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. 'ace' → logprob: -14.875
    3. ' (' → logprob: -17.25
    4. '(
' → logprob: -18.25
    5. '(cards' → logprob: -19.75
    6. '((' → logprob: -19.875
    7. ')' → logprob: -19.875
    8. 'Ace' → logprob: -20.0
    9. ' ace' → logprob: -20.25
    10. '(a' → logprob: -20.625

Token 330: 'ace' (ID: 675)
  Prédit: 'ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -0.0007207724265754223
    2. ' ace' → logprob: -7.250720977783203
    3. ')' → logprob: -12.125720977783203
    4. '(' → logprob: -12.625720977783203
    5. '   ' → logprob: -14.750720977783203
    6. '[' → logprob: -15.250720977783203
    7. ')
' → logprob: -15.375720977783203
    8. '
' → logprob: -15.750720977783203
    9. 'aces' → logprob: -16.000720977783203
    10. '```' → logprob: -16.250720977783203

Token 331: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -1.5048530030981055e-06
    2. 'as' → logprob: -13.625001907348633
    3. '_cards' → logprob: -15.875001907348633
    4. ' as' → logprob: -18.125001907348633
    5. 'As' → logprob: -18.375001907348633
    6. '_' → logprob: -19.250001907348633
    7. '-as' → logprob: -19.250001907348633
    8. ''as' → logprob: -19.625001907348633
    9. '	as' → logprob: -19.750001907348633
    10. 's' → logprob: -19.875001907348633

Token 332: '_' (ID: 62)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.00043257648940198123
    2. '_' → logprob: -7.75043249130249
    3. '_cards' → logprob: -14.250432968139648
    4. '4' → logprob: -14.500432968139648
    5. '１４' → logprob: -15.500432968139648
    6. '十四' → logprob: -16.00043296813965
    7. '1' → logprob: -16.25043296813965
    8. ' ' → logprob: -16.62543296813965
    9. ')' → logprob: -17.12543296813965
    10. '[' → logprob: -17.37543296813965

Token 333: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -1.6047699318733066e-05
    2. 'cards' → logprob: -11.500016212463379
    3. '4' → logprob: -12.625016212463379
    4. ' ' → logprob: -14.750016212463379
    5. '   ' → logprob: -15.125016212463379
    6. '1' → logprob: -15.250016212463379
    7. '13' → logprob: -15.375016212463379
    8. 'ace' → logprob: -15.500016212463379
    9. '_cards' → logprob: -16.000015258789062
    10. ')' → logprob: -16.125015258789062

Token 334: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.12730750441551208
    2. '))' → logprob: -2.127307415008545
    3. '           ' → logprob: -9.127307891845703
    4. ')
' → logprob: -9.127307891845703
    5. ')' → logprob: -9.377307891845703
    6. '))

' → logprob: -10.252307891845703
    7. ' ))
' → logprob: -10.752307891845703
    8. '))
' → logprob: -11.502307891845703
    9. '       ' → logprob: -12.127307891845703
    10. ' ))' → logprob: -13.752307891845703

Token 335: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013086906401440501
    2. '<|end|>' → logprob: -7.001308917999268
    3. '
' → logprob: -9.37630844116211
    4. '<|end|>' → logprob: -9.62630844116211
    5. ' if' → logprob: -9.87630844116211
    6. '            
' → logprob: -10.12630844116211
    7. '       ' → logprob: -10.25130844116211
    8. '[' → logprob: -10.37630844116211
    9. ')' → logprob: -11.25130844116211
    10. '		' → logprob: -11.75130844116211

Token 336: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08041675388813019
    2. ' if' → logprob: -2.580416679382324
    3. '
' → logprob: -7.455416679382324
    4. '       ' → logprob: -8.080416679382324
    5. 'if' (adapté à ' if') → logprob: -8.330416679382324
    6. ' for' → logprob: -9.455416679382324
    7. '   ' → logprob: -9.705416679382324
    8. ' 
' → logprob: -9.955416679382324
    9. ' ' → logprob: -10.330416679382324
    10. '[' → logprob: -10.705416679382324

Token 337: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3868922293186188
    2. 'len' → logprob: -1.1368921995162964
    3. '(len' → logprob: -11.386892318725586
    4. ' ace' → logprob: -12.511892318725586
    5. ' ' → logprob: -13.261892318725586
    6. '   ' → logprob: -13.511892318725586
    7. '	len' → logprob: -14.011892318725586
    8. 'ace' → logprob: -14.136892318725586
    9. ' cards' → logprob: -15.261892318725586
    10. ' all' → logprob: -15.511892318725586

Token 338: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.584861744660884e-05
    2. '(cards' → logprob: -10.000045776367188
    3. 'ace' → logprob: -16.000045776367188
    4. 'cards' → logprob: -16.250045776367188
    5. '(card' → logprob: -16.625045776367188
    6. '(
' → logprob: -17.000045776367188
    7. 'Ace' → logprob: -17.375045776367188
    8. ' (' → logprob: -17.375045776367188
    9. '```' → logprob: -18.250045776367188
    10. '(A' → logprob: -19.125045776367188

Token 339: 'ace' (ID: 675)
  Prédit: 'ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ace' → logprob: -0.006673220545053482
    2. '(' → logprob: -5.131673336029053
    3. ' ace' → logprob: -7.256673336029053
    4. 'cards' → logprob: -10.631672859191895
    5. ')' → logprob: -11.506672859191895
    6. 'aces' → logprob: -13.256672859191895
    7. '(cards' → logprob: -14.131672859191895
    8. 'ade' → logprob: -14.631672859191895
    9. '```' → logprob: -15.256672859191895
    10. 'card' → logprob: -15.381672859191895

Token 340: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -3.173704271830502e-06
    2. 'cards' → logprob: -14.50000286102295
    3. '```' → logprob: -14.75000286102295
    4. '_' → logprob: -14.87500286102295
    5. '[' → logprob: -15.37500286102295
    6. '_chars' → logprob: -15.50000286102295
    7. ')' → logprob: -15.75000286102295
    8. '   ' → logprob: -16.125003814697266
    9. '
' → logprob: -16.125003814697266
    10. 's' → logprob: -16.250003814697266

Token 341: '_sorted' (ID: 104993)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5885600447654724
    2. '_sorted' → logprob: -0.8385600447654724
    3. ')!=' → logprob: -4.588560104370117
    4. '   ' → logprob: -7.963560104370117
    5. 'sorted' → logprob: -8.088560104370117
    6. ')==' → logprob: -8.213560104370117
    7. '!=' → logprob: -8.463560104370117
    8. '_)' → logprob: -8.713560104370117
    9. 's' → logprob: -9.213560104370117
    10. ' )' → logprob: -9.213560104370117

Token 342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003640215378254652
    2. ' !=' → logprob: -6.503640174865723
    3. ')!=' → logprob: -7.503640174865723
    4. ' )' → logprob: -7.628640174865723
    5. ')==' → logprob: -8.003640174865723
    6. '==' → logprob: -8.128640174865723
    7. '!=' → logprob: -8.253640174865723
    8. ' ==' → logprob: -8.503640174865723
    9. '```' → logprob: -13.628640174865723
    10. '）' → logprob: -13.628640174865723

Token 343: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.33571192622184753
    2. '!=' → logprob: -1.58571195602417
    3. '==' → logprob: -2.83571195602417
    4. ' ==' → logprob: -3.83571195602417
    5. ')' → logprob: -10.210711479187012
    6. '=' → logprob: -11.210711479187012
    7. '```' → logprob: -11.210711479187012
    8. ' ' → logprob: -11.335711479187012
    9. ')!=' → logprob: -11.335711479187012
    10. '()!=' → logprob: -11.710711479187012

Token 344: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.038044821470975876
    2. ' ' → logprob: -3.2880449295043945
    3. '   ' → logprob: -13.663044929504395
    4. '```' → logprob: -14.163044929504395
    5. '6' → logprob: -15.413044929504395
    6. ' five' → logprob: -15.788044929504395
    7. '  ' → logprob: -15.913044929504395
    8. '５' → logprob: -15.975544929504395
    9. '1' → logprob: -16.038043975830078
    10. ' ' → logprob: -17.100543975830078

Token 345: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.000045776367188
    3. '５' → logprob: -15.250045776367188
    4. '```' → logprob: -16.250045776367188
    5. '५' → logprob: -16.312545776367188
    6. '۵' → logprob: -17.000045776367188
    7. '   ' → logprob: -17.250045776367188
    8. '৫' → logprob: -17.250045776367188
    9. 'five' → logprob: -17.437545776367188
    10. ' five' → logprob: -17.437545776367188

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0503058098256588
    2. ':
' → logprob: -3.0503058433532715
    3. '               ' → logprob: -7.4253058433532715
    4. '           ' → logprob: -7.8003058433532715
    5. '):' → logprob: -8.425305366516113
    6. ' or' → logprob: -8.800305366516113
    7. '):
' → logprob: -9.175305366516113
    8. ':return' → logprob: -9.425305366516113
    9. ' and' → logprob: -9.550305366516113
    10. ')' → logprob: -10.175305366516113

Token 347: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008981237770058215
    2. '           ' → logprob: -7.375898361206055
    3. '       ' → logprob: -8.875898361206055
    4. ' return' → logprob: -9.250898361206055
    5. '   ' → logprob: -10.875898361206055
    6. 'return' → logprob: -12.000898361206055
    7. '
' → logprob: -12.500898361206055
    8. ' ' → logprob: -13.625898361206055
    9. '	           ' → logprob: -13.750898361206055
    10. '	return' → logprob: -14.125898361206055

Token 348: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.690505862236023
    2. '               ' → logprob: -0.815505862236023
    3. 'return' (adapté à ' return') → logprob: -2.9405059814453125
    4. '           ' → logprob: -6.5655059814453125
    5. 'False' → logprob: -6.5655059814453125
    6. ' False' → logprob: -7.9405059814453125
    7. '   ' → logprob: -9.190505981445312
    8. '	return' → logprob: -9.690505981445312
    9. '       ' → logprob: -10.190505981445312
    10. '                   ' → logprob: -11.440505981445312

Token 349: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. 'True' → logprob: -18.25009536743164
    4. 'F' → logprob: -18.50009536743164
    5. '(False' → logprob: -18.62509536743164
    6. '
' → logprob: -20.75009536743164
    7. 'None' → logprob: -20.75009536743164
    8. '=False' → logprob: -20.75009536743164
    9. '_false' → logprob: -20.87509536743164
    10. 'false' → logprob: -21.00009536743164

Token 350: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5740450620651245
    2. '
' → logprob: -1.0740450620651245
    3. '       ' → logprob: -2.699045181274414
    4. '   ' → logprob: -4.449045181274414
    5. '    
' → logprob: -5.199045181274414
    6. '		' → logprob: -6.574045181274414
    7. '	   ' → logprob: -6.574045181274414
    8. '
' → logprob: -6.699045181274414
    9. '\n' → logprob: -6.949045181274414
    10. '        
' → logprob: -7.324045181274414

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2540750503540039
    2. '       ' → logprob: -1.504075050354004
    3. '   ' → logprob: -6.379075050354004
    4. '	' → logprob: -8.879075050354004
    5. '
' → logprob: -9.004075050354004
    6. '	   ' → logprob: -9.629075050354004
    7. '		' → logprob: -10.004075050354004
    8. '    
' → logprob: -11.379075050354004
    9. 'if' → logprob: -12.004075050354004
    10. 'for' → logprob: -12.254075050354004

Token 352: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020181065425276756
    2. '       ' → logprob: -4.395181179046631
    3. '   ' → logprob: -5.645181179046631
    4. ' for' → logprob: -6.395181179046631
    5. '
' → logprob: -7.395181179046631
    6. '    ' → logprob: -7.395181179046631
    7. ')' → logprob: -8.145180702209473
    8. 'for' (adapté à ' for') → logprob: -8.395180702209473
    9. ' if' → logprob: -8.645180702209473
    10. '	' → logprob: -10.020180702209473

Token 353: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868737816810608
    2. 'i' → logprob: -1.136873722076416
    3. '	i' → logprob: -13.511874198913574
    4. ' ' → logprob: -14.386874198913574
    5. '0' → logprob: -15.011874198913574
    6. '_i' → logprob: -15.386874198913574
    7. '   ' → logprob: -16.011873245239258
    8. '4' → logprob: -16.261873245239258
    9. '(i' → logprob: -17.261873245239258
    10. 'I' → logprob: -17.636873245239258

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002201047958806157
    2. 'in' → logprob: -6.127201080322266
    3. ' ' → logprob: -11.127201080322266
    4. ' i' → logprob: -14.877201080322266
    5. '0' → logprob: -15.252201080322266
    6. 'range' → logprob: -15.877201080322266
    7. '	in' → logprob: -16.002201080322266
    8. '1' → logprob: -16.252201080322266
    9. 'In' → logprob: -16.377201080322266
    10. 'n' → logprob: -17.127201080322266

Token 355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.501171112060547
    4. '   ' → logprob: -17.751171112060547
    5. '(range' → logprob: -17.876171112060547
    6. '4' → logprob: -18.501171112060547
    7. '  ' → logprob: -20.126171112060547
    8. '	range' → logprob: -20.251171112060547
    9. '(' → logprob: -20.376171112060547
    10. '
' → logprob: -20.751171112060547

Token 356: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04859520494937897
    2. '(' → logprob: -3.0485951900482178
    3. '   ' → logprob: -12.048595428466797
    4. ' ' → logprob: -14.048595428466797
    5. 'len' → logprob: -14.548595428466797
    6. '```' → logprob: -15.173595428466797
    7. '(len' → logprob: -15.423595428466797
    8. '(
' → logprob: -16.923595428466797
    9. '４' → logprob: -16.923595428466797
    10. '
' → logprob: -17.548595428466797

Token 357: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.5
    4. '(' → logprob: -17.0
    5. 'len' → logprob: -17.375
    6. '```' → logprob: -17.5
    7. '1' → logprob: -18.75
    8. '5' → logprob: -18.75
    9. '４' → logprob: -19.5
    10. '
' → logprob: -19.5625

Token 358: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35483476519584656
    2. '):
' → logprob: -1.604834794998169
    3. ':' → logprob: -2.354834794998169
    4. ':
' → logprob: -5.97983455657959
    5. '   ' → logprob: -9.35483455657959
    6. ' :' → logprob: -9.85483455657959
    7. '       ' → logprob: -10.10483455657959
    8. '():
' → logprob: -10.35483455657959
    9. '():' → logprob: -10.60483455657959
    10. '           ' → logprob: -10.60483455657959

Token 359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025638877414166927
    2. '           ' → logprob: -6.502563953399658
    3. ' if' → logprob: -7.002563953399658
    4. ' ' → logprob: -10.1275634765625
    5. '       ' → logprob: -10.1275634765625
    6. '<|end|>' → logprob: -10.8775634765625
    7. '            ' → logprob: -11.1275634765625
    8. '                ' → logprob: -11.7525634765625
    9. '   ' → logprob: -12.0025634765625
    10. ' ' → logprob: -12.1275634765625

Token 360: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27840107679367065
    2. ' if' → logprob: -1.5284011363983154
    3. '               ' → logprob: -3.6534011363983154
    4. '   ' → logprob: -8.903401374816895
    5. '           ' → logprob: -9.778401374816895
    6. '	if' → logprob: -11.528401374816895
    7. ' ' → logprob: -11.653401374816895
    8. '                   ' → logprob: -12.778401374816895
    9. '       ' → logprob: -13.528401374816895
    10. '              ' → logprob: -13.653401374816895

Token 361: ' ace' (ID: 19084)
  Prédit: ' ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ace' → logprob: -0.0013267839094623923
    2. 'ace' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.501326560974121
    4. 'Ace' → logprob: -15.751326560974121
    5. ' ' → logprob: -15.876326560974121
    6. ' Ace' → logprob: -16.126327514648438
    7. '    ' → logprob: -16.626327514648438
    8. ' ' → logprob: -17.126327514648438
    9. 'aces' → logprob: -17.251327514648438
    10. ' ac' → logprob: -17.376327514648438

Token 362: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -14.125001907348633
    3. '_chars' → logprob: -15.125001907348633
    4. '_' → logprob: -15.125001907348633
    5. '_as' → logprob: -15.750001907348633
    6. '_cells' → logprob: -16.125001907348633
    7. '_courses' → logprob: -16.250001907348633
    8. '`' → logprob: -16.250001907348633
    9. ''_' → logprob: -16.375001907348633
    10. 'cards' → logprob: -16.625001907348633

Token 363: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.250017166137695
    3. 'orted' → logprob: -13.750017166137695
    4. '[i' → logprob: -13.875017166137695
    5. '_as' → logprob: -14.000017166137695
    6. 'sorted' → logprob: -14.250017166137695
    7. 'Sorted' → logprob: -16.375017166137695
    8. '[_' → logprob: -16.500017166137695
    9. '_cards' → logprob: -16.500017166137695
    10. '_' → logprob: -16.500017166137695

Token 364: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.500004768371582
    3. ' [' → logprob: -14.875004768371582
    4. '   ' → logprob: -15.625004768371582
    5. 'i' → logprob: -16.125003814697266
    6. '[
' → logprob: -17.500003814697266
    7. '
' → logprob: -17.875003814697266
    8. ' ' → logprob: -18.125003814697266
    9. '```' → logprob: -18.375003814697266
    10. '[j' → logprob: -18.500003814697266

Token 365: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. ' +' → logprob: -13.250001907348633
    3. ']+' → logprob: -15.875001907348633
    4. '+
' → logprob: -16.000001907348633
    5. '+]' → logprob: -16.625001907348633
    6. '[' → logprob: -17.250001907348633
    7. '+i' → logprob: -17.250001907348633
    8. ']' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '1' → logprob: -18.875001907348633

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.375014305114746
    3. '   ' → logprob: -14.000014305114746
    4. ']' → logprob: -14.375014305114746
    5. '+' → logprob: -14.500014305114746
    6. '
' → logprob: -14.750014305114746
    7. '-' → logprob: -15.562514305114746
    8. '```' → logprob: -16.062515258789062
    9. '14' → logprob: -16.562515258789062
    10. '  ' → logprob: -16.562515258789062

Token 367: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023311631754040718
    2. '-' → logprob: -3.7733116149902344
    3. ' ' → logprob: -9.898311614990234
    4. ']' → logprob: -12.273311614990234
    5. '[' → logprob: -12.648311614990234
    6. ')' → logprob: -13.148311614990234
    7. '```' → logprob: -13.523311614990234
    8. '   ' → logprob: -13.898311614990234
    9. '`' → logprob: -13.898311614990234
    10. ' ' → logprob: -14.773311614990234

Token 368: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011049000546336174
    2. '-' → logprob: -4.511048793792725
    3. ' ' → logprob: -13.886049270629883
    4. ' ' → logprob: -16.636049270629883
    5. ' -
' → logprob: -16.636049270629883
    6. '[' → logprob: -18.011049270629883
    7. '.' → logprob: -19.011049270629883
    8. '   ' → logprob: -19.136049270629883
    9. '```' → logprob: -19.386049270629883
    10. '  ' → logprob: -19.761049270629883

Token 369: ' ace' (ID: 19084)
  Prédit: ' ace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ace' → logprob: -0.3132975101470947
    2. 'ace' → logprob: -1.3132975101470947
    3. '1' → logprob: -10.563297271728516
    4. ' ' → logprob: -12.063297271728516
    5. 'aces' → logprob: -13.813297271728516
    6. 'ade' → logprob: -13.938297271728516
    7. 'Ace' → logprob: -14.688297271728516
    8. ' Ace' → logprob: -15.188297271728516
    9. 'aced' → logprob: -15.313297271728516
    10. 'acer' → logprob: -15.438297271728516

Token 370: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.6656825866666622e-05
    2. 'ace' → logprob: -11.25002670288086
    3. 'Cards' → logprob: -12.75002670288086
    4. '_' → logprob: -12.75002670288086
    5. 'cards' → logprob: -13.12502670288086
    6. '[' → logprob: -14.12502670288086
    7. ' ace' → logprob: -14.12502670288086
    8. '_card' → logprob: -14.62502670288086
    9. '_courses' → logprob: -15.12502670288086
    10. '```' → logprob: -15.37502670288086

Token 371: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.005629874300211668
    2. '_cards' → logprob: -5.255630016326904
    3. 'sorted' → logprob: -8.630629539489746
    4. '_as' → logprob: -9.130629539489746
    5. '_' → logprob: -9.755629539489746
    6. 'orted' → logprob: -11.380629539489746
    7. '[' → logprob: -11.505629539489746
    8. 'as' → logprob: -12.130629539489746
    9. 'Sorted' → logprob: -12.255629539489746
    10. '_s' → logprob: -12.505629539489746

Token 372: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009189624106511474
    2. '[' → logprob: -7.000918865203857
    3. 'i' → logprob: -12.000919342041016
    4. '[
' → logprob: -14.750919342041016
    5. ' [' → logprob: -15.125919342041016
    6. '```' → logprob: -15.750919342041016
    7. ' i' → logprob: -16.000919342041016
    8. 'ace' → logprob: -16.625919342041016
    9. ' ' → logprob: -16.875919342041016
    10. ' ace' → logprob: -17.125919342041016

Token 373: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.029776757583022118
    2. '!=' → logprob: -3.5297768115997314
    3. ')!=' → logprob: -11.029776573181152
    4. '()!=' → logprob: -12.029776573181152
    5. ']!=' → logprob: -13.404776573181152
    6. ' ' → logprob: -13.529776573181152
    7. ')' → logprob: -14.654776573181152
    8. '!=-' → logprob: -14.904776573181152
    9. '```' → logprob: -16.40477752685547
    10. ' !==' → logprob: -16.52977752685547

Token 374: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3868752717971802
    2. '!=' → logprob: -1.1368752717971802
    3. ')!=' → logprob: -13.26187515258789
    4. '()!=' → logprob: -14.01187515258789
    5. '!=-' → logprob: -14.26187515258789
    6. '```' → logprob: -15.38687515258789
    7. ' ' → logprob: -15.63687515258789
    8. '!=(' → logprob: -15.76187515258789
    9. ']!=' → logprob: -16.01187515258789
    10. ' ' → logprob: -16.63687515258789

Token 375: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28115177154541016
    2. ' ' → logprob: -1.4061517715454102
    3. '```' → logprob: -14.03115177154541
    4. ' ' → logprob: -14.78115177154541
    5. '   ' → logprob: -16.343650817871094
    6. '4' → logprob: -16.656150817871094
    7. '１' → logprob: -16.843650817871094
    8. '<|end|>' → logprob: -17.031150817871094
    9. '14' → logprob: -17.406150817871094
    10. 's' → logprob: -18.031150817871094

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.625059127807617
    4. '１' → logprob: -18.875059127807617
    5. '
' → logprob: -19.062559127807617
    6. '   ' → logprob: -19.500059127807617
    7. ' ' → logprob: -19.937559127807617
    8. '14' → logprob: -20.062559127807617
    9. '<|end|>' → logprob: -20.125059127807617
    10. '۱' → logprob: -20.875059127807617

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004259446170181036
    2. ':
' → logprob: -5.6292595863342285
    3. '               ' → logprob: -7.5042595863342285
    4. '           ' → logprob: -10.25425910949707
    5. ')' → logprob: -11.12925910949707
    6. ':return' → logprob: -11.25425910949707
    7. '       ' → logprob: -11.37925910949707
    8. '                   ' → logprob: -11.75425910949707
    9. '):' → logprob: -11.75425910949707
    10. ' :' → logprob: -12.37925910949707

Token 378: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038933036848902702
    2. '                   ' → logprob: -6.1288933753967285
    3. '           ' → logprob: -7.8788933753967285
    4. '                ' → logprob: -8.00389289855957
    5. '       ' → logprob: -8.25389289855957
    6. ':
' → logprob: -8.50389289855957
    7. '   ' → logprob: -9.25389289855957
    8. ' return' → logprob: -9.87889289855957
    9. ' ' → logprob: -9.87889289855957
    10. '                
' → logprob: -9.87889289855957

Token 379: ' return' (ID: 622)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.8145027160644531
    2. 'break' → logprob: -1.0645027160644531
    3. 'return' (adapté à ' return') → logprob: -2.189502716064453
    4. ' return' → logprob: -2.314502716064453
    5. '                   ' → logprob: -8.064502716064453
    6. 'False' → logprob: -8.189502716064453
    7. '   ' → logprob: -8.189502716064453
    8. ' False' → logprob: -9.564502716064453
    9. ' 
' → logprob: -9.564502716064453
    10. 'false' → logprob: -10.064502716064453

Token 380: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'false' → logprob: -22.125009536743164
    4. 'True' → logprob: -22.250009536743164
    5. 'F' → logprob: -24.250009536743164
    6. '_false' → logprob: -24.375009536743164
    7. 'None' → logprob: -24.750009536743164
    8. '(False' → logprob: -24.750009536743164
    9. 'Fal' → logprob: -25.375009536743164
    10. '=False' → logprob: -25.625009536743164

Token 381: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2524995505809784
    2. '       ' → logprob: -1.5024995803833008
    3. '
' → logprob: -7.752499580383301
    4. 'return' → logprob: -9.5024995803833
    5. '   ' → logprob: -10.1274995803833
    6. '		' → logprob: -12.0024995803833
    7. '               ' → logprob: -12.2524995803833
    8. '        
' → logprob: -12.8774995803833
    9. '	   ' → logprob: -13.0024995803833
    10. ' return' → logprob: -13.0024995803833

Token 382: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1807919442653656
    2. '           ' → logprob: -1.805791974067688
    3. 'return' → logprob: -7.305791854858398
    4. '
' → logprob: -8.430791854858398
    5. '   ' → logprob: -9.680791854858398
    6. ' return' → logprob: -11.055791854858398
    7. '	return' → logprob: -11.180791854858398
    8. '	' → logprob: -11.305791854858398
    9. '        
' → logprob: -11.430791854858398
    10. '	   ' → logprob: -11.555791854858398

Token 383: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01633111946284771
    2. 'return' (adapté à ' return') → logprob: -4.641331195831299
    3. '           ' → logprob: -5.641331195831299
    4. '   ' → logprob: -6.141331195831299
    5. ' return' → logprob: -7.266331195831299
    6. '	return' → logprob: -9.14133071899414
    7. '
' → logprob: -11.51633071899414
    8. '	' → logprob: -11.76633071899414
    9. '               ' → logprob: -11.89133071899414
    10. '	   ' → logprob: -12.26633071899414

Token 384: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.306760805164231e-05
    2. ' True' → logprob: -11.25001335144043
    3. 'False' → logprob: -19.50001335144043
    4. '(True' → logprob: -21.75001335144043
    5. '=True' → logprob: -23.12501335144043
    6. 'true' → logprob: -24.12501335144043
    7. '   ' → logprob: -25.87501335144043
    8. 'T' → logprob: -26.50001335144043
    9. ' ' → logprob: -26.50001335144043
    10. '1' → logprob: -26.50001335144043

Token 385: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009832000359892845
    2. '        
' → logprob: -4.88483190536499
    3. '
' → logprob: -6.63483190536499
    4. '<|end|>' → logprob: -7.38483190536499
    5. '    
' → logprob: -9.384832382202148
    6. '            
' → logprob: -10.634832382202148
    7. '<|end|>' → logprob: -10.759832382202148
    8. '   ' → logprob: -10.884832382202148
    9. '```' → logprob: -11.134832382202148
    10. '        

' → logprob: -11.509832382202148

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01532755233347416
    2. '        
' → logprob: -4.265327453613281
    3. '
' → logprob: -7.015327453613281
    4. '```' → logprob: -9.515327453613281
    5. '    
' → logprob: -10.390327453613281
    6. ' if' → logprob: -10.390327453613281
    7. 'if' → logprob: -10.515327453613281
    8. '#' → logprob: -11.015327453613281
    9. '            
' → logprob: -11.140327453613281
    10. '   ' → logprob: -11.515327453613281

Token 387: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0093221515417099
    2. '        
' → logprob: -5.009322166442871
    3. 'if' → logprob: -6.384322166442871
    4. ' if' → logprob: -7.259322166442871
    5. '
' → logprob: -10.134322166442871
    6. 'score' → logprob: -10.384322166442871
    7. 'result' → logprob: -10.634322166442871
    8. '#' (adapté à ' #') → logprob: -11.259322166442871
    9. '       
' → logprob: -11.384322166442871
    10. 'rank' → logprob: -11.509322166442871

Token 388: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3494199216365814
    2. 'hand' → logprob: -2.0994198322296143
    3. 'is' → logprob: -2.4744198322296143
    4. 'rank' → logprob: -2.7244198322296143
    5. 'score' → logprob: -4.849420070648193
    6. 'straight' → logprob: -4.849420070648193
    7. 'result' → logprob: -5.849420070648193
    8. '#' → logprob: -6.099420070648193
    9. 'flush' → logprob: -7.224420070648193
    10. '   ' → logprob: -7.974420070648193

Token 389: '役' (ID: 90933)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.913467288017273
    2. 'hand' → logprob: -1.163467288017273
    3. 'rank' → logprob: -1.538467288017273
    4. 'result' → logprob: -2.9134674072265625
    5. 'straight' → logprob: -5.4134674072265625
    6. 'is' → logprob: -5.5384674072265625
    7. 'score' → logprob: -5.7884674072265625
    8. '#' → logprob: -6.0384674072265625
    9. '   ' → logprob: -6.4134674072265625
    10. 'ranking' → logprob: -7.7884674072265625

Token 390: '判' (ID: 47257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45311862230300903
    2. '=' → logprob: -1.4531185626983643
    3. '_rank' → logprob: -2.3281185626983643
    4. 'rank' → logprob: -4.203118801116943
    5. '       ' → logprob: -4.953118801116943
    6. '   ' → logprob: -5.328118801116943
    7. '_name' → logprob: -6.703118801116943
    8. '        
' → logprob: -7.953118801116943
    9. 'name' → logprob: -8.203118324279785
    10. '判' → logprob: -8.203118324279785

Token 391: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -0.0003337969828862697
    2. '断' → logprob: -8.125333786010742
    3. 'break' → logprob: -11.250333786010742
    4. '\xe6\x96' → logprob: -11.500333786010742
    5. '別' → logprob: -11.625333786010742
    6. '段' → logprob: -13.375333786010742
    7. 'def' → logprob: -13.500333786010742
    8. '```' → logprob: -14.000333786010742
    9. '_' → logprob: -15.250333786010742
    10. ' 定' → logprob: -15.500333786010742

Token 392: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07493399828672409
    2. ' if' → logprob: -3.1999340057373047
    3. 'if' → logprob: -3.8249340057373047
    4. '        
' → logprob: -5.324934005737305
    5. 'rank' → logprob: -6.699934005737305
    6. 'result' → logprob: -7.324934005737305
    7. 'def' → logprob: -7.324934005737305
    8. '
' → logprob: -7.699934005737305
    9. 'score' → logprob: -7.824934005737305
    10. '    
' → logprob: -8.699934005737305

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005428812000900507
    2. ' if' → logprob: -5.505428791046143
    3. 'if' → logprob: -7.005428791046143
    4. 'result' → logprob: -8.5054292678833
    5. 'score' → logprob: -10.0054292678833
    6. 'straight' → logprob: -10.2554292678833
    7. ' result' → logprob: -10.3804292678833
    8. 'rank' → logprob: -10.3804292678833
    9. ' hand' → logprob: -11.0054292678833
    10. ' straight' → logprob: -11.0054292678833

Token 394: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.045135099440813065
    2. 'straight' → logprob: -3.795135021209717
    3. 'hand' → logprob: -4.795135021209717
    4. 'is' → logprob: -4.920135021209717
    5. 'result' → logprob: -6.045135021209717
    6. '       ' → logprob: -6.170135021209717
    7. 'rank' → logprob: -7.170135021209717
    8. 'def' → logprob: -8.420135498046875
    9. ' if' → logprob: -8.670135498046875
    10. 'role' → logprob: -8.670135498046875

Token 395: ' ' (ID: 220)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.22955948114395142
    2. 'values' → logprob: -1.6045594215393066
    3. ' len' → logprob: -6.354559421539307
    4. '4' → logprob: -6.979559421539307
    5. ' ' → logprob: -7.229559421539307
    6. '5' → logprob: -7.604559421539307
    7. 'len' → logprob: -8.979559898376465
    8. '   ' → logprob: -9.854559898376465
    9. '7' → logprob: -10.979559898376465
    10. '	values' → logprob: -11.729559898376465

Token 396: '4' (ID: 19)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.019012343138456345
    2. '5' → logprob: -4.394012451171875
    3. 'len' → logprob: -5.394012451171875
    4. '4' → logprob: -6.519012451171875
    5. ' values' → logprob: -8.144012451171875
    6. 'is' → logprob: -9.144012451171875
    7. '7' → logprob: -11.644012451171875
    8. ' len' → logprob: -11.644012451171875
    9. '(values' → logprob: -11.894012451171875
    10. 'set' → logprob: -12.019012451171875

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08977603167295456
    2. 'in' → logprob: -2.464776039123535
    3. ' ==' → logprob: -7.839776039123535
    4. '==' → logprob: -7.964776039123535
    5. ' ' → logprob: -10.339776039123535
    6. '   ' → logprob: -10.464776039123535
    7. '  ' → logprob: -11.339776039123535
    8. '	in' → logprob: -11.589776039123535
    9. ' not' → logprob: -14.027276039123535
    10. '0' → logprob: -14.027276039123535

Token 398: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.011048528365790844
    2. ' values' → logprob: -4.511048316955566
    3. '	values' → logprob: -14.386048316955566
    4. '(values' → logprob: -16.511049270629883
    5. '.values' → logprob: -17.011049270629883
    6. '   ' → logprob: -17.011049270629883
    7. '_values' → logprob: -18.136049270629883
    8. ' ' → logprob: -18.761049270629883
    9. 'value' → logprob: -19.011049270629883
    10. '-values' → logprob: -20.136049270629883

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008710538037121296
    2. ':
' → logprob: -4.7587103843688965
    3. ' and' → logprob: -9.883710861206055
    4. ' or' → logprob: -10.633710861206055
    5. '==' → logprob: -11.883710861206055
    6. ' :' → logprob: -12.008710861206055
    7. ' ==' → logprob: -12.633710861206055
    8. '   ' → logprob: -13.383710861206055
    9. '       ' → logprob: -13.883710861206055
    10. '=' → logprob: -14.008710861206055

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010620344430208206
    2. ':
' → logprob: -5.1356201171875
    3. '       ' → logprob: -6.1356201171875
    4. ':' → logprob: -6.8856201171875
    5. 'print' → logprob: -7.0106201171875
    6. ' print' → logprob: -7.8856201171875
    7. '
' → logprob: -8.8856201171875
    8. '   ' → logprob: -10.3856201171875
    9. '):
' → logprob: -11.7606201171875
    10. '            
' → logprob: -11.7606201171875

Token 401: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.15597356855869293
    2. '       ' → logprob: -2.1559736728668213
    3. '           ' → logprob: -3.7809736728668213
    4. ' print' → logprob: -5.780973434448242
    5. '   ' → logprob: -5.905973434448242
    6. '               ' → logprob: -12.030973434448242
    7. '	print' → logprob: -12.280973434448242
    8. ' ' → logprob: -13.280973434448242
    9. '
' → logprob: -13.280973434448242
    10. '         ' → logprob: -14.155973434448242

Token 402: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00024500858853571117
    2. '('' → logprob: -8.875245094299316
    3. '(' → logprob: -9.250245094299316
    4. '"' → logprob: -11.750245094299316
    5. ' ("' → logprob: -14.250245094299316
    6. '(("' → logprob: -16.250244140625
    7. '   ' → logprob: -16.375244140625
    8. '("'' → logprob: -16.500244140625
    9. '(
' → logprob: -16.625244140625
    10. '("(' → logprob: -17.125244140625

Token 403: 'four' (ID: 61745)
  Prédit: 'Four'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Four' → logprob: -0.06496892124414444
    2. '"' → logprob: -3.4399688243865967
    3. 'フォ' → logprob: -4.189969062805176
    4. 'four' → logprob: -4.314969062805176
    5. '四' → logprob: -6.689969062805176
    6. '4' → logprob: -7.439969062805176
    7. '「' → logprob: -8.939969062805176
    8. ''' → logprob: -9.814969062805176
    9. ' Four' → logprob: -9.814969062805176
    10. '_four' → logprob: -9.814969062805176

Token 404: ' card' (ID: 4766)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.009322979487478733
    2. '_of' → logprob: -4.7593231201171875
    3. 'of' → logprob: -7.5093231201171875
    4. '-of' → logprob: -9.134323120117188
    5. ' card' → logprob: -11.509323120117188
    6. '	of' → logprob: -11.509323120117188
    7. ' ' → logprob: -11.634323120117188
    8. 'Of' → logprob: -11.884323120117188
    9. '   ' → logprob: -12.259323120117188
    10. '_kind' → logprob: -12.634323120117188

Token 405: '")
' (ID: 1896)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007049257401376963
    2. '")' → logprob: -7.375704765319824
    3. ' s' → logprob: -9.500704765319824
    4. '"' → logprob: -14.250704765319824
    5. '_s' → logprob: -14.375704765319824
    6. '")
' → logprob: -14.375704765319824
    7. '\xef\xbd' → logprob: -14.625704765319824
    8. ' ")' → logprob: -14.875704765319824
    9. '(s' → logprob: -15.125704765319824
    10. '"s' → logprob: -16.25070571899414

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014828738756477833
    2. 'elif' → logprob: -4.264828681945801
    3. ' elif' → logprob: -7.639828681945801
    4. '
' → logprob: -9.1398286819458
    5. ')' → logprob: -10.7648286819458
    6. '")' → logprob: -11.1398286819458
    7. '   ' → logprob: -11.2648286819458
    8. '	elif' → logprob: -12.0148286819458
    9. ',' → logprob: -12.5148286819458
    10. '           ' → logprob: -12.7648286819458

Token 407: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6637225151062012
    2. 'elif' (adapté à ' elif') → logprob: -1.0387225151062012
    3. ' elif' → logprob: -2.038722515106201
    4. '   ' → logprob: -7.288722515106201
    5. '	elif' → logprob: -8.28872299194336
    6. ',' → logprob: -12.03872299194336
    7. '
' → logprob: -12.03872299194336
    8. ' else' → logprob: -12.28872299194336
    9. ')' → logprob: -12.41372299194336
    10. 'else' → logprob: -12.78872299194336

Token 408: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0025961112696677446
    2. '3' → logprob: -6.002595901489258
    3. ' len' → logprob: -9.252595901489258
    4. ' ' → logprob: -11.752595901489258
    5. '4' → logprob: -12.127595901489258
    6. '5' → logprob: -12.252595901489258
    7. 'len' → logprob: -13.002595901489258
    8. ' values' → logprob: -13.377595901489258
    9. '	' → logprob: -14.377595901489258
    10. '   ' → logprob: -15.002595901489258

Token 409: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0019383925246074796
    2. ' ' → logprob: -6.376938343048096
    3. 'values' → logprob: -8.376938819885254
    4. ' values' → logprob: -13.001938819885254
    5. 'len' → logprob: -14.126938819885254
    6. '4' → logprob: -14.251938819885254
    7. '３' → logprob: -14.501938819885254
    8. '   ' → logprob: -14.876938819885254
    9. '5' → logprob: -15.126938819885254
    10. '```' → logprob: -15.126938819885254

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021946365013718605
    2. 'in' → logprob: -6.127194404602051
    3. ' ' → logprob: -11.75219440460205
    4. ' ' → logprob: -14.87719440460205
    5. '	in' → logprob: -14.87719440460205
    6. '[' → logprob: -15.25219440460205
    7. '   ' → logprob: -15.50219440460205
    8. ' в' → logprob: -16.377195358276367
    9. ' not' → logprob: -16.752195358276367
    10. ')' → logprob: -16.877195358276367

Token 411: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.10020871460437775
    2. 'values' → logprob: -2.3502087593078613
    3. '	values' → logprob: -13.850208282470703
    4. '(values' → logprob: -14.225208282470703
    5. '_values' → logprob: -15.225208282470703
    6. '.values' → logprob: -16.350208282470703
    7. 'value' → logprob: -16.725208282470703
    8. 'Values' → logprob: -17.600208282470703
    9. ' ' → logprob: -18.850208282470703
    10. ' value' → logprob: -18.850208282470703

Token 412: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5995228290557861
    2. ':' → logprob: -0.9745228290557861
    3. ':
' → logprob: -2.724522829055786
    4. 'and' → logprob: -4.849522590637207
    5. ' or' → logprob: -10.099522590637207
    6. ' :' → logprob: -10.599522590637207
    7. '   ' → logprob: -10.974522590637207
    8. ',' → logprob: -10.974522590637207
    9. ' :
' → logprob: -11.224522590637207
    10. '==' → logprob: -12.349522590637207

Token 413: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31326526403427124
    2. ' ' → logprob: -1.313265323638916
    3. '(' → logprob: -13.688264846801758
    4. '   ' → logprob: -14.063264846801758
    5. '  ' → logprob: -14.438264846801758
    6. ' (' → logprob: -14.813264846801758
    7. '
' → logprob: -15.438264846801758
    8. 'len' → logprob: -15.688264846801758
    9. '２' → logprob: -16.063264846801758
    10. ' len' → logprob: -16.438264846801758

Token 414: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '(' → logprob: -15.875179290771484
    4. '
' → logprob: -17.250179290771484
    5. 'len' → logprob: -17.875179290771484
    6. '２' → logprob: -18.125179290771484
    7. '   ' → logprob: -19.250179290771484
    8. '

' → logprob: -19.500179290771484
    9. '  ' → logprob: -19.625179290771484
    10. ' (' → logprob: -19.750179290771484

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000841907283756882
    2. 'in' → logprob: -7.125842094421387
    3. ' ' → logprob: -10.375842094421387
    4. ' not' → logprob: -12.125842094421387
    5. ' i' → logprob: -15.500842094421387
    6. ')' → logprob: -16.37584114074707
    7. '   ' → logprob: -16.37584114074707
    8. '	in' → logprob: -16.50084114074707
    9. '[' → logprob: -16.62584114074707
    10. ' ' → logprob: -16.75084114074707

Token 416: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.2519320547580719
    2. ' values' → logprob: -1.5019320249557495
    3. '(values' → logprob: -13.251932144165039
    4. '	values' → logprob: -14.001932144165039
    5. '.values' → logprob: -15.376932144165039
    6. 'value' → logprob: -16.00193214416504
    7. '_values' → logprob: -16.62693214416504
    8. ' ' → logprob: -18.87693214416504
    9. '```' → logprob: -18.87693214416504
    10. '`' → logprob: -19.50193214416504

Token 417: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10022781789302826
    2. ':
' → logprob: -2.3502278327941895
    3. '==' → logprob: -11.975227355957031
    4. '=' → logprob: -12.975227355957031
    5. ':

' → logprob: -12.975227355957031
    6. '):
' → logprob: -13.100227355957031
    7. ' :' → logprob: -13.225227355957031
    8. '   ' → logprob: -13.600227355957031
    9. ' :
' → logprob: -13.725227355957031
    10. ':
' → logprob: -13.975227355957031

Token 418: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3463001847267151
    2. ':' → logprob: -1.4713001251220703
    3. '       ' → logprob: -3.3463001251220703
    4. '           ' → logprob: -3.5963001251220703
    5. '   ' → logprob: -8.34630012512207
    6. ',' → logprob: -9.59630012512207
    7. ' :
' → logprob: -10.34630012512207
    8. '):
' → logprob: -10.72130012512207
    9. '               ' → logprob: -11.22130012512207
    10. '():
' → logprob: -11.34630012512207

Token 419: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16560301184654236
    2. ' print' → logprob: -2.540602922439575
    3. 'print' (adapté à ' print') → logprob: -3.040602922439575
    4. '       ' → logprob: -3.790602922439575
    5. '               ' → logprob: -6.415603160858154
    6. ':
' → logprob: -7.415603160858154
    7. '
' → logprob: -7.415603160858154
    8. '   ' → logprob: -8.415602684020996
    9. '	print' → logprob: -9.790602684020996
    10. ':' → logprob: -10.290602684020996

Token 420: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.183501293184236e-05
    2. '(' → logprob: -9.62507152557373
    3. '("("' → logprob: -12.75007152557373
    4. '("(' → logprob: -13.25007152557373
    5. '"' → logprob: -14.37507152557373
    6. ' ("' → logprob: -14.62507152557373
    7. '('' → logprob: -17.500072479248047
    8. '(("' → logprob: -18.000072479248047
    9. '(
' → logprob: -18.250072479248047
    10. '("\"' → logprob: -18.500072479248047

Token 421: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.023634660989046097
    2. '"' → logprob: -3.773634672164917
    3. ' full' → logprob: -7.898634433746338
    4. 'ful' → logprob: -12.023634910583496
    5. 'Full' → logprob: -12.148634910583496
    6. '	full' → logprob: -13.148634910583496
    7. 'fullname' → logprob: -14.023634910583496
    8. 'three' → logprob: -14.148634910583496
    9. '_full' → logprob: -14.398634910583496
    10. '   ' → logprob: -14.523634910583496

Token 422: ' house' (ID: 4276)
  Prédit: ' house'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' house' → logprob: -0.09072352945804596
    2. 'house' → logprob: -2.4657235145568848
    3. '_house' → logprob: -6.840723514556885
    4. ' card' → logprob: -7.590723514556885
    5. '　' → logprob: -9.590723991394043
    6. '")' → logprob: -10.340723991394043
    7. '-house' → logprob: -10.590723991394043
    8. '```' → logprob: -10.715723991394043
    9. '"' → logprob: -11.215723991394043
    10. ' ' → logprob: -11.215723991394043

Token 423: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2519403100013733
    2. '")
' → logprob: -1.5019402503967285
    3. '")
' → logprob: -11.876940727233887
    4. ')' → logprob: -13.126940727233887
    5. '"' → logprob: -13.376940727233887
    6. ')
' → logprob: -15.751940727233887
    7. '")

' → logprob: -15.876940727233887
    8. ')")' → logprob: -16.50193977355957
    9. ')")
' → logprob: -16.75193977355957
    10. '       ' → logprob: -16.75193977355957

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018411019118502736
    2. 'elif' → logprob: -8.625184059143066
    3. 'else' → logprob: -13.375184059143066
    4. ' elif' → logprob: -13.875184059143066
    5. '<|end|>' → logprob: -14.000184059143066
    6. ')' → logprob: -15.000184059143066
    7. '   ' → logprob: -15.125184059143066
    8. '	elif' → logprob: -15.250184059143066
    9. '```' → logprob: -15.375184059143066
    10. '           ' → logprob: -16.750185012817383

Token 425: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002293471246957779
    2. 'elif' (adapté à ' elif') → logprob: -6.127293586730957
    3. ' elif' → logprob: -9.502293586730957
    4. ')' → logprob: -11.377293586730957
    5. 'else' → logprob: -11.877293586730957
    6. '
' → logprob: -12.002293586730957
    7. '```' → logprob: -13.377293586730957
    8. '<|end|>' → logprob: -13.502293586730957
    9. '	elif' → logprob: -13.627293586730957
    10. ',' → logprob: -14.002293586730957

Token 426: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6334245204925537
    2. ' is' → logprob: -0.7584245204925537
    3. ' ' → logprob: -7.883424758911133
    4. '5' → logprob: -8.633424758911133
    5. 'len' → logprob: -9.383424758911133
    6. ' len' → logprob: -9.508424758911133
    7. '4' → logprob: -10.383424758911133
    8. '   ' → logprob: -10.383424758911133
    9. 'values' → logprob: -10.633424758911133
    10. ' values' → logprob: -12.133424758911133

Token 427: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -2.696889623621246e-06
    2. 'straight' → logprob: -12.87500286102295
    3. '_s' → logprob: -16.625001907348633
    4. '_str' → logprob: -17.125001907348633
    5. 'Straight' → logprob: -18.750001907348633
    6. '_' → logprob: -18.875001907348633
    7. '(st' → logprob: -19.375001907348633
    8. 'st' → logprob: -19.500001907348633
    9. ' _' → logprob: -19.625001907348633
    10. '```' → logprob: -19.625001907348633

Token 428: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0002738522016443312
    2. 'rait' → logprob: -8.625273704528809
    3. 'straight' → logprob: -10.000273704528809
    4. 'ight' → logprob: -10.625273704528809
    5. '_ra' → logprob: -11.500273704528809
    6. 'rai' → logprob: -12.250273704528809
    7. 'right' → logprob: -12.500273704528809
    8. 'raith' → logprob: -14.000273704528809
    9. '```' → logprob: -14.375273704528809
    10. 'eight' → logprob: -14.750273704528809

Token 429: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -5.512236498361744e-07
    2. 'igh' → logprob: -15.500000953674316
    3. '[' → logprob: -17.5
    4. '```' → logprob: -17.75
    5. 'int' → logprob: -17.875
    6. 'i' → logprob: -17.875
    7. '``' → logprob: -17.875
    8. 'ighton' → logprob: -18.0
    9. ')' → logprob: -18.125
    10. '   ' → logprob: -18.125

Token 430: '(cards' (ID: 161529)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0011712945997714996
    2. '(cards' → logprob: -6.751171112060547
    3. '(s' → logprob: -15.001171112060547
    4. 'sorted' → logprob: -15.376171112060547
    5. '(' → logprob: -15.376171112060547
    6. ' (' → logprob: -16.626171112060547
    7. '(filtered' → logprob: -16.751171112060547
    8. '(sort' → logprob: -16.751171112060547
    9. '((' → logprob: -17.501171112060547
    10. '(scores' → logprob: -18.501171112060547

Token 431: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20217697322368622
    2. '):' → logprob: -1.7021769285202026
    3. ')' → logprob: -7.327177047729492
    4. '   ' → logprob: -10.327177047729492
    5. ' ):
' → logprob: -10.702177047729492
    6. '       ' → logprob: -10.827177047729492
    7. '(cards' → logprob: -11.952177047729492
    8. ' ):' → logprob: -12.202177047729492
    9. '):

' → logprob: -12.327177047729492
    10. '):
' → logprob: -12.577177047729492

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004783138167113066
    2. '       ' → logprob: -5.5047831535339355
    3. 'print' → logprob: -7.3797831535339355
    4. '   ' → logprob: -9.504782676696777
    5. ' print' → logprob: -12.504782676696777
    6. '               ' → logprob: -13.379782676696777
    7. '	       ' → logprob: -15.004782676696777
    8. '```' → logprob: -16.004783630371094
    9. ' ' → logprob: -16.254783630371094
    10. '            
' → logprob: -16.254783630371094

Token 433: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10051633417606354
    2. 'print' (adapté à ' print') → logprob: -2.3505163192749023
    3. ' print' → logprob: -8.475516319274902
    4. '       ' → logprob: -9.350516319274902
    5. '               ' → logprob: -11.475516319274902
    6. '   ' → logprob: -12.600516319274902
    7. '		' → logprob: -16.47551727294922
    8. '	print' → logprob: -16.47551727294922
    9. '```' → logprob: -16.47551727294922
    10. '          ' → logprob: -16.60051727294922

Token 434: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005539863486774266
    2. '(' → logprob: -7.500554084777832
    3. ' ("' → logprob: -14.500554084777832
    4. '("("' → logprob: -15.375554084777832
    5. '("(' → logprob: -15.500554084777832
    6. '"' → logprob: -16.125553131103516
    7. '('' → logprob: -17.000553131103516
    8. '(
' → logprob: -17.625553131103516
    9. ' (' → logprob: -19.000553131103516
    10. '(("' → logprob: -19.375553131103516

Token 435: 'straight' (ID: 197685)
  Prédit: 'straight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straight' → logprob: -0.0029097271617501974
    2. '"' → logprob: -5.8779096603393555
    3. 'Straight' → logprob: -10.002909660339355
    4. 'stra' → logprob: -10.127909660339355
    5. ' straight' → logprob: -11.752909660339355
    6. 'STRA' → logprob: -12.502909660339355
    7. 'スト' → logprob: -13.002909660339355
    8. 'st' → logprob: -13.627909660339355
    9. 'str' → logprob: -13.752909660339355
    10. 'street' → logprob: -14.377909660339355

Token 436: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07889650017023087
    2. '")
' → logprob: -2.5788965225219727
    3. '"' → logprob: -12.828896522521973
    4. '")
' → logprob: -13.328896522521973
    5. '       ' → logprob: -13.703896522521973
    6. ')' → logprob: -14.578896522521973
    7. ' ")' → logprob: -14.828896522521973
    8. '")

' → logprob: -16.453895568847656
    9. ')")' → logprob: -16.828895568847656
    10. ')
' → logprob: -17.078895568847656

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003421375877223909
    2. 'elif' → logprob: -8.00034236907959
    3. 'else' → logprob: -13.00034236907959
    4. '<|end|>' → logprob: -13.12534236907959
    5. ' elif' → logprob: -14.00034236907959
    6. '   ' → logprob: -14.50034236907959
    7. '	elif' → logprob: -14.62534236907959
    8. '```' → logprob: -15.00034236907959
    9. '           ' → logprob: -16.250341415405273
    10. ')' → logprob: -16.500341415405273

Token 438: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20155201852321625
    2. 'elif' (adapté à ' elif') → logprob: -1.7015520334243774
    3. ' elif' → logprob: -9.076552391052246
    4. 'else' → logprob: -10.826552391052246
    5. '	elif' → logprob: -12.951552391052246
    6. '   ' → logprob: -14.076552391052246
    7. '```' → logprob: -14.076552391052246
    8. 'el' → logprob: -15.451552391052246
    9. '           ' → logprob: -16.45155143737793
    10. ')' → logprob: -16.70155143737793

Token 439: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1005430743098259
    2. ' ' → logprob: -2.3505430221557617
    3. '2' → logprob: -8.100543022155762
    4. '   ' → logprob: -11.725543022155762
    5. 'values' → logprob: -11.725543022155762
    6. 'len' → logprob: -12.100543022155762
    7. '  ' → logprob: -12.600543022155762
    8. 'set' → logprob: -13.225543022155762
    9. '(' → logprob: -13.850543022155762
    10. ' len' → logprob: -14.100543022155762

Token 440: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07978823035955429
    2. '2' → logprob: -2.5797882080078125
    3. ' ' → logprob: -7.2047882080078125
    4. 'len' → logprob: -9.454788208007812
    5. 'set' → logprob: -10.204788208007812
    6. 'values' → logprob: -10.704788208007812
    7. '1' → logprob: -12.704788208007812
    8. 'counts' → logprob: -12.704788208007812
    9. '5' → logprob: -12.829788208007812
    10. '(' → logprob: -12.954788208007812

Token 441: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02325270138680935
    2. 'in' → logprob: -3.7732527256011963
    3. ' ' → logprob: -12.023252487182617
    4. ' ' → logprob: -14.898252487182617
    5. '   ' → logprob: -15.148252487182617
    6. 'print' → logprob: -15.273252487182617
    7. '	in' → logprob: -15.273252487182617
    8. '  ' → logprob: -17.648252487182617
    9. '[' → logprob: -17.898252487182617
    10. 'import' → logprob: -18.023252487182617

Token 442: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.10020904988050461
    2. ' values' → logprob: -2.3502089977264404
    3. '(values' → logprob: -13.35020923614502
    4. '	values' → logprob: -14.35020923614502
    5. '.values' → logprob: -15.72520923614502
    6. '_values' → logprob: -16.600208282470703
    7. 'value' → logprob: -17.100208282470703
    8. ' ' → logprob: -17.975208282470703
    9. '   ' → logprob: -18.100208282470703
    10. '`' → logprob: -19.600208282470703

Token 443: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4742804765701294
    2. ':' → logprob: -0.9742804765701294
    3. '           ' → logprob: -8.97428035736084
    4. '       ' → logprob: -9.97428035736084
    5. '   ' → logprob: -11.09928035736084
    6. ':
' → logprob: -11.72428035736084
    7. 'print' → logprob: -13.09928035736084
    8. ' :
' → logprob: -13.34928035736084
    9. '==' → logprob: -14.22428035736084
    10. ':

' → logprob: -14.34928035736084

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12203936278820038
    2. '       ' → logprob: -2.872039318084717
    3. 'print' → logprob: -2.872039318084717
    4. ' print' → logprob: -6.622039318084717
    5. '   ' → logprob: -7.872039318084717
    6. '               ' → logprob: -12.747039794921875
    7. '	print' → logprob: -12.997039794921875
    8. '	       ' → logprob: -14.622039794921875
    9. ' ' → logprob: -14.997039794921875
    10. '(print' → logprob: -15.372039794921875

Token 445: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.22473406791687012
    2. ' print' → logprob: -1.9747340679168701
    3. '           ' → logprob: -2.97473406791687
    4. '       ' → logprob: -4.474734306335449
    5. '   ' → logprob: -11.47473430633545
    6. '               ' → logprob: -12.47473430633545
    7. '	print' → logprob: -12.72473430633545
    8. '```' → logprob: -14.34973430633545
    9. ' ' → logprob: -14.72473430633545
    10. '(print' → logprob: -15.72473430633545

Token 446: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.857719275401905e-05
    2. '(' → logprob: -10.375038146972656
    3. '("("' → logprob: -11.875038146972656
    4. '("(' → logprob: -15.000038146972656
    5. ' ("' → logprob: -17.000038146972656
    6. '('' → logprob: -17.250038146972656
    7. '"' → logprob: -17.625038146972656
    8. '("")' → logprob: -18.500038146972656
    9. '(("' → logprob: -19.625038146972656
    10. '("_' → logprob: -20.125038146972656

Token 447: 'three' (ID: 47660)
  Prédit: 'three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.007375781424343586
    2. '"' → logprob: -5.007375717163086
    3. ' three' → logprob: -7.632375717163086
    4. 'print' → logprob: -9.007375717163086
    5. 'tr' → logprob: -10.382375717163086
    6. 'trip' → logprob: -11.632375717163086
    7. 'Three' → logprob: -12.007375717163086
    8. 'set' → logprob: -13.257375717163086
    9. '三' → logprob: -13.382375717163086
    10. '3' → logprob: -13.382375717163086

Token 448: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.003447184106335044
    2. 'card' → logprob: -5.75344705581665
    3. '_card' → logprob: -8.253447532653809
    4. ' ' → logprob: -12.253447532653809
    5. '	card' → logprob: -13.253447532653809
    6. '-card' → logprob: -14.253447532653809
    7. '_' → logprob: -14.378447532653809
    8. '(card' → logprob: -14.628447532653809
    9. ' ' → logprob: -15.753447532653809
    10. ' _' → logprob: -16.128446578979492

Token 449: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.31329628825187683
    2. '")' → logprob: -1.3132963180541992
    3. ')
' → logprob: -11.6882963180542
    4. ' ")
' → logprob: -11.8132963180542
    5. '")
' → logprob: -12.0632963180542
    6. ')' → logprob: -12.1882963180542
    7. '"' → logprob: -12.9382963180542
    8. '   ' → logprob: -13.4382963180542
    9. ' ")' → logprob: -13.4382963180542
    10. '       ' → logprob: -13.9382963180542

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011107249185442924
    2. 'elif' → logprob: -4.511107444763184
    3. ' elif' → logprob: -10.261107444763184
    4. '   ' → logprob: -11.386107444763184
    5. '	elif' → logprob: -12.011107444763184
    6. '<|end|>' → logprob: -12.511107444763184
    7. ' ' → logprob: -13.511107444763184
    8. '```' → logprob: -13.636107444763184
    9. '	' → logprob: -15.511107444763184
    10. '#elif' → logprob: -16.011106491088867

Token 451: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3138149380683899
    2. '       ' → logprob: -1.3138148784637451
    3. ' elif' → logprob: -7.563815116882324
    4. '	elif' → logprob: -10.688815116882324
    5. '   ' → logprob: -12.188815116882324
    6. '```' → logprob: -12.563815116882324
    7. 'else' → logprob: -13.938815116882324
    8. ' ' → logprob: -14.688815116882324
    9. '#elif' → logprob: -15.063815116882324
    10. ')' → logprob: -15.438815116882324

Token 452: ' values' (ID: 4824)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7143874764442444
    2. 'values' → logprob: -0.7143874764442444
    3. ' values' → logprob: -4.2143874168396
    4. ' ' → logprob: -5.0893874168396
    5. 'list' → logprob: -10.464387893676758
    6. '(values' → logprob: -11.214387893676758
    7. '(' → logprob: -11.714387893676758
    8. 'counts' → logprob: -12.089387893676758
    9. '	values' → logprob: -12.339387893676758
    10. 'len' → logprob: -13.464387893676758

Token 453: '.count' (ID: 14019)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22398586571216583
    2. '==' → logprob: -1.7239859104156494
    3. 'and' → logprob: -4.09898567199707
    4. ' and' → logprob: -5.59898567199707
    5. ' ==' → logprob: -6.22398567199707
    6. '=' → logprob: -10.47398567199707
    7. '.' → logprob: -11.72398567199707
    8. ' ' → logprob: -12.72398567199707
    9. '1' → logprob: -13.09898567199707
    10. 'count' → logprob: -14.09898567199707

Token 454: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '2' → logprob: -17.625
    3. ' (' → logprob: -18.125
    4. '(
' → logprob: -18.75
    5. '（' → logprob: -21.125
    6. '1' → logprob: -21.625
    7. '=' → logprob: -23.25
    8. '```' → logprob: -23.375
    9. '
' → logprob: -23.5
    10. '(

' → logprob: -23.5

Token 455: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931511759757996
    2. '2' → logprob: -0.6931511759757996
    3. ' ' → logprob: -12.568151473999023
    4. ' (' → logprob: -15.693151473999023
    5. '=' → logprob: -16.318151473999023
    6. '   ' → logprob: -16.568151473999023
    7. ')' → logprob: -17.443151473999023
    8. '(
' → logprob: -17.443151473999023
    9. '２' → logprob: -17.693151473999023
    10. '
' → logprob: -17.693151473999023

Token 456: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4939883351325989
    2. '==' → logprob: -1.118988275527954
    3. '()' → logprob: -3.618988275527954
    4. ' ==' → logprob: -3.743988275527954
    5. '>=' → logprob: -4.993988513946533
    6. ')==' → logprob: -5.493988513946533
    7. ' >=' → logprob: -7.243988513946533
    8. '()==' → logprob: -7.618988513946533
    9. ')>=' → logprob: -7.868988513946533
    10. ' )' → logprob: -9.243988037109375

Token 457: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12964271008968353
    2. ' >=' → logprob: -2.3796427249908447
    3. '==' → logprob: -3.6296427249908447
    4. '>=' → logprob: -6.629642486572266
    5. '()' → logprob: -7.254642486572266
    6. '()==' → logprob: -8.129642486572266
    7. ' ' → logprob: -9.129642486572266
    8. ')' → logprob: -11.129642486572266
    9. '   ' → logprob: -11.754642486572266
    10. '    ' → logprob: -12.379642486572266

Token 458: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011737978784367442
    2. ' ' → logprob: -6.751173973083496
    3. '1' → logprob: -13.001173973083496
    4. '3' → logprob: -14.501173973083496
    5. '=' → logprob: -16.00117301940918
    6. '4' → logprob: -16.12617301940918
    7. ' ' → logprob: -16.12617301940918
    8. '   ' → logprob: -16.37617301940918
    9. '```' → logprob: -16.93867301940918
    10. '0' → logprob: -17.12617301940918

Token 459: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. '1' → logprob: -12.750007629394531
    3. ' ' → logprob: -12.750007629394531
    4. '3' → logprob: -14.750007629394531
    5. '4' → logprob: -15.000007629394531
    6. '0' → logprob: -15.500007629394531
    7. '=' → logprob: -15.625007629394531
    8. '२' → logprob: -15.750007629394531
    9. '۲' → logprob: -15.812507629394531
    10. '```' → logprob: -16.06250762939453

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5759555697441101
    2. ':
' → logprob: -0.8259555697441101
    3. '       ' → logprob: -11.575955390930176
    4. '   ' → logprob: -12.700955390930176
    5. ':
' → logprob: -13.450955390930176
    6. '           ' → logprob: -14.325955390930176
    7. ' :
' → logprob: -14.450955390930176
    8. '=' → logprob: -15.200955390930176
    9. ':

' → logprob: -15.325955390930176
    10. '):
' → logprob: -15.575955390930176

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2870461344718933
    2. '       ' → logprob: -1.412046194076538
    3. 'print' → logprob: -5.662045955657959
    4. ':
' → logprob: -6.287045955657959
    5. ' print' → logprob: -8.162046432495117
    6. ':' → logprob: -8.787046432495117
    7. '   ' → logprob: -9.537046432495117
    8. '               ' → logprob: -11.912046432495117
    9. '):
' → logprob: -12.162046432495117
    10. '
' → logprob: -12.912046432495117

Token 462: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7443966269493103
    2. 'print' (adapté à ' print') → logprob: -0.9943966269493103
    3. ' print' → logprob: -2.119396686553955
    4. '       ' → logprob: -3.369396686553955
    5. '               ' → logprob: -7.994396686553955
    6. '   ' → logprob: -8.869396209716797
    7. '```' → logprob: -10.994396209716797
    8. '	print' → logprob: -11.869396209716797
    9. ' ' → logprob: -12.619396209716797
    10. '
' → logprob: -12.869396209716797

Token 463: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. '("("' → logprob: -15.625004768371582
    4. '("(' → logprob: -16.8750057220459
    5. '('' → logprob: -17.3750057220459
    6. '"' → logprob: -17.8750057220459
    7. ' ("' → logprob: -19.0000057220459
    8. '("'' → logprob: -21.0000057220459
    9. '("\"' → logprob: -21.1250057220459
    10. '(
' → logprob: -21.2500057220459

Token 464: 'two' (ID: 38397)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3136080503463745
    2. 'two' → logprob: -1.3136080503463745
    3. ' two' → logprob: -8.188608169555664
    4. '(two' → logprob: -10.563608169555664
    5. 'pair' → logprob: -11.188608169555664
    6. '2' → logprob: -11.313608169555664
    7. '_two' → logprob: -12.313608169555664
    8. ''t' → logprob: -13.313608169555664
    9. '``' → logprob: -13.313608169555664
    10. '   ' → logprob: -13.563608169555664

Token 465: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.4911178648471832
    2. ' card' → logprob: -0.9911178350448608
    3. 'pair' → logprob: -4.24111795425415
    4. 'card' → logprob: -6.86611795425415
    5. ' ' → logprob: -6.99111795425415
    6. ' pairs' → logprob: -7.86611795425415
    7. ' cards' → logprob: -9.616117477416992
    8. '_pair' → logprob: -10.241117477416992
    9. 'pairs' → logprob: -10.491117477416992
    10. '　' → logprob: -11.616117477416992

Token 466: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.008702147752046585
    2. '")' → logprob: -4.758702278137207
    3. '")
' → logprob: -9.508702278137207
    4. ')
' → logprob: -11.758702278137207
    5. ')")
' → logprob: -13.008702278137207
    6. ')' → logprob: -13.133702278137207
    7. ' ")
' → logprob: -14.633702278137207
    8. '       ' → logprob: -14.883702278137207
    9. '"' → logprob: -15.633702278137207
    10. '   ' → logprob: -15.758702278137207

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0079120434820652
    2. 'elif' → logprob: -4.8829121589660645
    3. ' elif' → logprob: -8.382911682128906
    4. '   ' → logprob: -10.132911682128906
    5. 'else' → logprob: -10.382911682128906
    6. '	elif' → logprob: -12.382911682128906
    7. ' else' → logprob: -14.007911682128906
    8. ' ' → logprob: -14.882911682128906
    9. '```' → logprob: -15.007911682128906
    10. '<|end|>' → logprob: -15.257911682128906

Token 468: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16233748197555542
    2. 'elif' (adapté à ' elif') → logprob: -1.9123375415802002
    3. ' elif' → logprob: -6.662337303161621
    4. 'else' → logprob: -7.162337303161621
    5. '   ' → logprob: -10.037337303161621
    6. '	elif' → logprob: -11.912337303161621
    7. ' else' → logprob: -12.162337303161621
    8. '```' → logprob: -14.787337303161621
    9. '      ' → logprob: -15.037337303161621
    10. ' ' → logprob: -15.162337303161621

Token 469: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09148509800434113
    2. '2' → logprob: -2.841485023498535
    3. ' values' → logprob: -3.966485023498535
    4. 'values' → logprob: -4.591485023498535
    5. '   ' → logprob: -13.216485023498535
    6. ' len' → logprob: -13.716485023498535
    7. '1' → logprob: -13.966485023498535
    8. '  ' → logprob: -14.216485023498535
    9. ' ' → logprob: -14.216485023498535
    10. '	values' → logprob: -14.216485023498535

Token 470: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038068003952503204
    2. 'values' → logprob: -3.2880680561065674
    3. ' values' → logprob: -10.913067817687988
    4. ' ' → logprob: -12.288067817687988
    5. '1' → logprob: -13.038067817687988
    6. 'counts' → logprob: -14.913067817687988
    7. '(values' → logprob: -15.038067817687988
    8. 'count' → logprob: -15.663067817687988
    9. '	values' → logprob: -15.663067817687988
    10. 'value' → logprob: -15.913067817687988

Token 471: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014169031754136086
    2. 'in' → logprob: -4.264169216156006
    3. ' ' → logprob: -12.889168739318848
    4. '	in' → logprob: -13.764168739318848
    5. ' ' → logprob: -14.764168739318848
    6. '   ' → logprob: -15.389168739318848
    7. '1' → logprob: -15.764168739318848
    8. '[' → logprob: -16.014169692993164
    9. 'import' → logprob: -16.514169692993164
    10. '==' → logprob: -16.514169692993164

Token 472: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5759408473968506
    2. ' values' → logprob: -0.8259408473968506
    3. '	values' → logprob: -13.95094108581543
    4. '(values' → logprob: -15.45094108581543
    5. '.values' → logprob: -15.95094108581543
    6. 'value' → logprob: -15.95094108581543
    7. '_values' → logprob: -17.20094108581543
    8. '   ' → logprob: -19.57594108581543
    9. ' ' → logprob: -19.70094108581543
    10. ' ' → logprob: -19.82594108581543

Token 473: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5761367082595825
    2. ':' → logprob: -0.8261367082595825
    3. '       ' → logprob: -8.701136589050293
    4. '           ' → logprob: -11.201136589050293
    5. '   ' → logprob: -11.701136589050293
    6. ':
' → logprob: -12.451136589050293
    7. '):
' → logprob: -13.701136589050293
    8. ':

' → logprob: -14.076136589050293
    9. 'print' → logprob: -14.451136589050293
    10. ' :
' → logprob: -14.576136589050293

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5408279895782471
    2. '       ' → logprob: -1.040827989578247
    3. 'print' → logprob: -2.790827989578247
    4. ' print' → logprob: -5.790827751159668
    5. '   ' → logprob: -8.915827751159668
    6. '               ' → logprob: -12.540827751159668
    7. '	print' → logprob: -13.040827751159668
    8. ' ' → logprob: -14.290827751159668
    9. '	   ' → logprob: -14.290827751159668
    10. ':
' → logprob: -14.290827751159668

Token 475: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4338257312774658
    2. 'print' (adapté à ' print') → logprob: -1.1838257312774658
    3. '           ' → logprob: -3.433825731277466
    4. '       ' → logprob: -4.308825492858887
    5. '   ' → logprob: -8.933825492858887
    6. '               ' → logprob: -11.558825492858887
    7. '	print' → logprob: -11.933825492858887
    8. ' ' → logprob: -12.683825492858887
    9. ' ' → logprob: -13.183825492858887
    10. '.print' → logprob: -14.308825492858887

Token 476: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.333223139634356e-05
    2. '(' → logprob: -11.000033378601074
    3. '("("' → logprob: -11.125033378601074
    4. '("(' → logprob: -14.125033378601074
    5. '('' → logprob: -15.000033378601074
    6. '("")' → logprob: -15.125033378601074
    7. ' ("' → logprob: -16.125032424926758
    8. '()' → logprob: -16.125032424926758
    9. '"' → logprob: -16.875032424926758
    10. '(("' → logprob: -17.375032424926758

Token 477: 'one' (ID: 690)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.007855272851884365
    2. '"' → logprob: -5.007855415344238
    3. ' pair' → logprob: -7.382855415344238
    4. 'one' → logprob: -7.757855415344238
    5. 'print' → logprob: -9.757855415344238
    6. 'two' → logprob: -11.132855415344238
    7. 'pairs' → logprob: -11.382855415344238
    8. ' one' → logprob: -12.632855415344238
    9. 'paired' → logprob: -13.882855415344238
    10. ' "' → logprob: -15.007855415344238

Token 478: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.07893374562263489
    2. 'pair' → logprob: -2.5789337158203125
    3. '_pair' → logprob: -10.578933715820312
    4. ' card' → logprob: -10.953933715820312
    5. ' ' → logprob: -14.453933715820312
    6. 'card' → logprob: -14.578933715820312
    7. '(pair' → logprob: -17.828933715820312
    8. 'Pair' → logprob: -18.328933715820312
    9. 'p' → logprob: -19.203933715820312
    10. '   ' → logprob: -19.453933715820312

Token 479: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.030197618529200554
    2. '")' → logprob: -3.5301976203918457
    3. ')
' → logprob: -8.405197143554688
    4. ')' → logprob: -9.280197143554688
    5. '"):
' → logprob: -9.780197143554688
    6. ')")
' → logprob: -10.405197143554688
    7. '")
' → logprob: -10.780197143554688
    8. ' ")
' → logprob: -12.155197143554688
    9. '       ' → logprob: -12.530197143554688
    10. '   ' → logprob: -12.655197143554688

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06256929785013199
    2. 'else' → logprob: -2.8125693798065186
    3. ' else' → logprob: -7.4375691413879395
    4. '<|end|>' → logprob: -12.062569618225098
    5. '	else' → logprob: -12.687569618225098
    6. '   ' → logprob: -13.687569618225098
    7. 'elif' → logprob: -13.687569618225098
    8. '```' → logprob: -14.687569618225098
    9. '_else' → logprob: -14.937569618225098
    10. '	' → logprob: -15.812569618225098

Token 481: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08375898003578186
    2. '       ' → logprob: -2.583759069442749
    3. ' else' → logprob: -5.33375883102417
    4. '   ' → logprob: -10.833759307861328
    5. '	else' → logprob: -11.708759307861328
    6. 'elif' → logprob: -13.208759307861328
    7. '```' → logprob: -13.833759307861328
    8. '_else' → logprob: -14.958759307861328
    9. ' ' → logprob: -16.458759307861328
    10. '	' → logprob: -16.458759307861328

Token 482: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7762770652770996
    2. ':' → logprob: -0.9012770652770996
    3. '           ' → logprob: -2.6512770652770996
    4. '       ' → logprob: -2.7762770652770996
    5. '   ' → logprob: -7.2762770652771
    6. 'print' → logprob: -8.276277542114258
    7. '():
' → logprob: -11.651277542114258
    8. '{
' → logprob: -12.026277542114258
    9. ' print' → logprob: -12.151277542114258
    10. '{' → logprob: -12.151277542114258

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5833811163902283
    2. '       ' → logprob: -1.083381175994873
    3. 'print' → logprob: -2.333381175994873
    4. ' print' → logprob: -5.458381175994873
    5. '   ' → logprob: -6.083381175994873
    6. '               ' → logprob: -10.833380699157715
    7. ' ' → logprob: -12.458380699157715
    8. '	print' → logprob: -13.083380699157715
    9. '         ' → logprob: -13.208380699157715
    10. '	       ' → logprob: -13.583380699157715

Token 484: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023618705570697784
    2. ' print' → logprob: -3.773618698120117
    3. '       ' → logprob: -8.023618698120117
    4. '   ' → logprob: -10.523618698120117
    5. '           ' → logprob: -11.023618698120117
    6. '	print' → logprob: -13.398618698120117
    7. ' ' → logprob: -15.023618698120117
    8. '    ' → logprob: -15.773618698120117
    9. '  ' → logprob: -16.398618698120117
    10. '        ' → logprob: -16.398618698120117

Token 485: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0069709899835288525
    2. '(' → logprob: -5.2569708824157715
    3. '("("' → logprob: -6.3819708824157715
    4. '("(' → logprob: -10.75697135925293
    5. '("")' → logprob: -10.88197135925293
    6. '('' → logprob: -13.13197135925293
    7. '()' → logprob: -14.63197135925293
    8. '"' → logprob: -15.25697135925293
    9. '(""' → logprob: -15.38197135925293
    10. '(
' → logprob: -15.63197135925293

Token 486: 'null' (ID: 5398)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.18655654788017273
    2. '"' → logprob: -2.311556577682495
    3. 'no' → logprob: -3.061556577682495
    4. 'highest' → logprob: -4.686556339263916
    5. 'nothing' → logprob: -4.686556339263916
    6. 'flush' → logprob: -6.436556339263916
    7. 'none' → logprob: -6.436556339263916
    8. 'null' → logprob: -7.561556339263916
    9. '"No' → logprob: -8.186556816101074
    10. '".' → logprob: -8.311556816101074

Token 487: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -6.0391463193809614e-05
    2. '")
' → logprob: -9.750060081481934
    3. ')' → logprob: -13.625060081481934
    4. '"' → logprob: -14.375060081481934
    5. ')")' → logprob: -15.750060081481934
    6. '")

' → logprob: -17.25006103515625
    7. '")
' → logprob: -17.50006103515625
    8. '()' → logprob: -18.12506103515625
    9. '')' → logprob: -18.50006103515625
    10. ' ")' → logprob: -18.50006103515625

Token 488: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.5761908292770386
    2. 'except' (adapté à ' except') → logprob: -0.8261908292770386
    3. '   ' → logprob: -8.326190948486328
    4. '	except' → logprob: -11.701190948486328
    5. '       ' → logprob: -15.201190948486328
    6. 'ex' → logprob: -15.326190948486328
    7. 'Except' → logprob: -15.701190948486328
    8. '_except' → logprob: -16.451190948486328
    9. 'break' → logprob: -16.951190948486328
    10. ' Except' → logprob: -17.076190948486328

Token 490: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.002475777640938759
    2. 'EOF' → logprob: -6.002475738525391
    3. ' Exception' → logprob: -16.75247573852539
    4. ' ' → logprob: -17.00247573852539
    5. ' Keyboard' → logprob: -17.25247573852539
    6. ' ' → logprob: -18.12747573852539
    7. ' (' → logprob: -18.25247573852539
    8. '(' → logprob: -18.37747573852539
    9. '(E' → logprob: -18.87747573852539
    10. ' eof' → logprob: -19.37747573852539

Token 491: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -19.375
    3. 'error' → logprob: -19.75
    4. '   ' → logprob: -20.125
    5. 'EOF' → logprob: -20.25
    6. 'E' → logprob: -20.375
    7. ' Error' → logprob: -20.375
    8. 'Er' → logprob: -20.5
    9. 'Erro' → logprob: -21.625
    10. 'Err' → logprob: -22.0

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034089021384716034
    2. ':
' → logprob: -3.4090890884399414
    3. '       ' → logprob: -7.909089088439941
    4. '   ' → logprob: -9.534089088439941
    5. '():
' → logprob: -14.534089088439941
    6. '():' → logprob: -14.784089088439941
    7. ' :' → logprob: -15.159089088439941
    8. '):' → logprob: -15.159089088439941
    9. ' break' → logprob: -15.284089088439941
    10. 'break' → logprob: -15.409089088439941

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013671426568180323
    2. '   ' → logprob: -6.626367092132568
    3. ' break' → logprob: -10.876367568969727
    4. 'break' → logprob: -11.126367568969727
    5. '           ' → logprob: -12.751367568969727
    6. '	break' → logprob: -12.876367568969727
    7. '<|end|>' → logprob: -14.251367568969727
    8. '     ' → logprob: -15.001367568969727
    9. '      ' → logprob: -15.376367568969727
    10. ' ' → logprob: -15.626367568969727

Token 494: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -3.7146746763028204e-05
    2. ' break' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.25003719329834
    4. '	break' → logprob: -16.750036239624023
    5. '       ' → logprob: -18.375036239624023
    6. '    
' → logprob: -20.125036239624023
    7. 'exit' → logprob: -20.875036239624023
    8. 'Break' → logprob: -21.125036239624023
    9. 'b' → logprob: -21.375036239624023
    10. 'breaking' → logprob: -21.875036239624023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 492
Tokens correctement prédits (1ère position, stricte): 224
Tokens correctement prédits (1ère position, avec adaptation): 237
Tokens correctement prédits (top 10): 403
Précision stricte (1ère position): 45.53%
Précision adaptée (1ère position): 48.17%
Précision (top 10): 81.91%
================================================================================
