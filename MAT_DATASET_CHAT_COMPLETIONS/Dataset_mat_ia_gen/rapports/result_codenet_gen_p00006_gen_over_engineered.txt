================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class StringReversalStrategy:
    def reverse(self, s: str) -> str:
        raise NotImplementedError("Subclasses should implement this!")

class SimpleSliceReversalStrategy(StringReversalStrategy):
    def reverse(self, s: str) -> str:
        return s[::-1]

class AbstractStringProcessor:
    def __init__(self, strategy: StringReversalStrategy):
        self._strategy = strategy

    def process(self, input_str: str) -> str:
        preprocessed = self._preprocess(input_str)
        reversed_str = self._strategy.reverse(preprocessed)
        postprocessed = self._postprocess(reversed_str)
        return postprocessed

    def _preprocess(self, s: str) -> str:
        # Placeholder for potential preprocessing steps
        return s.strip()

    def _postprocess(self, s: str) -> str:
        # Placeholder for potential postprocessing steps
        return s

class InputOutputHandler:
    def __init__(self, processor: AbstractStringProcessor):
        self._processor = processor

    def read_input(self) -> str:
        return input()

    def write_output(self, output_str: str):
        print(output_str)

    def execute(self):
        input_str = self.read_input()
        output_str = self._processor.process(input_str)
        self.write_output(output_str)

if __name__ == "__main__":
    strategy = SimpleSliceReversalStrategy()
    processor = AbstractStringProcessor(strategy)
    io_handler = InputOutputHandler(processor)
    io_handler.execute()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' String' (ID: 1189)
  → Token d'amorce (pas de prédiction)

Token 2: 'Re' (ID: 720)
  → Token d'amorce (pas de prédiction)

Token 3: 'versal' (ID: 116984)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.010083276778459549
    2. 'p' → logprob: -5.135083198547363
    3. 'g' → logprob: -6.260083198547363
    4. 's' → logprob: -6.385083198547363
    5. 'F' → logprob: -8.635083198547363
    6. '{' → logprob: -8.885083198547363
    7. 'b' → logprob: -9.760083198547363
    8. 'v' → logprob: -9.760083198547363
    9. 'P' → logprob: -10.760083198547363
    10. ' f' → logprob: -10.885083198547363

Token 4: 'Strategy' (ID: 21488)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.048964183777570724
    2. '(' → logprob: -3.173964262008667
    3. ' {' → logprob: -5.298964023590088
    4. '```' → logprob: -7.673964023590088
    5. '.' → logprob: -8.423964500427246
    6. ':' → logprob: -8.548964500427246
    7. ' ' → logprob: -11.048964500427246
    8. ' (' → logprob: -11.423964500427246
    9. '[' → logprob: -11.923964500427246
    10. '({' → logprob: -12.173964500427246

Token 5: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8018226027488708
    2. '{' → logprob: -1.1768226623535156
    3. ':' → logprob: -1.4268226623535156
    4. '.' → logprob: -5.926822662353516
    5. ' {' → logprob: -8.676822662353516
    6. '```' → logprob: -9.051822662353516
    7. '(:' → logprob: -10.051822662353516
    8. ' ' → logprob: -10.301822662353516
    9. '[' → logprob: -10.426822662353516
    10. '\(' → logprob: -11.426822662353516

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31350767612457275
    2. '(' → logprob: -1.9385076761245728
    3. '   ' → logprob: -2.313507556915283
    4. '```' → logprob: -4.063507556915283
    5. ':
' → logprob: -5.313507556915283
    6. '.' → logprob: -7.188507556915283
    7. '\' → logprob: -7.188507556915283
    8. '(
' → logprob: -7.563507556915283
    9. ' ' → logprob: -8.063508033752441
    10. ''' → logprob: -8.188508033752441

Token 7: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5867971777915955
    2. ' def' → logprob: -1.3367972373962402
    3. '```' → logprob: -2.3367972373962402
    4. 'def' (adapté à ' def') → logprob: -3.4617972373962402
    5. '    ' → logprob: -3.8367972373962402
    6. '\n' → logprob: -4.71179723739624
    7. ' ' → logprob: -5.08679723739624
    8. ' 
' → logprob: -5.46179723739624
    9. '\' → logprob: -5.46179723739624
    10. '    
' → logprob: -5.96179723739624

Token 8: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.6561295986175537
    2. ' ' → logprob: -0.7811295986175537
    3. 'reverse' → logprob: -4.656129837036133
    4. '  ' → logprob: -6.031129837036133
    5. ' __' → logprob: -6.156129837036133
    6. ' calculate' → logprob: -6.281129837036133
    7. ' def' → logprob: -6.281129837036133
    8. ' process' → logprob: -6.531129837036133
    9. ' convert' → logprob: -7.781129837036133
    10. '(reverse' → logprob: -7.906129837036133

Token 9: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3560987710952759
    2. '_' → logprob: -1.9810987710952759
    3. '(self' → logprob: -1.9810987710952759
    4. ' (' → logprob: -4.356098651885986
    5. '_string' → logprob: -5.106098651885986
    6. '_text' → logprob: -6.731098651885986
    7. '(s' → logprob: -7.356098651885986
    8. ' ' → logprob: -7.356098651885986
    9. '_(' → logprob: -7.731098651885986
    10. 's' → logprob: -7.856098651885986

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3639867901802063
    2. '.' → logprob: -2.1139867305755615
    3. ')' → logprob: -2.4889867305755615
    4. 's' → logprob: -3.3639867305755615
    5. ',' → logprob: -3.7389867305755615
    6. 'self' → logprob: -4.613986968994141
    7. 'string' → logprob: -4.738986968994141
    8. 'text' → logprob: -4.738986968994141
    9. '_string' → logprob: -5.988986968994141
    10. '   ' → logprob: -6.238986968994141

Token 11: ' s' (ID: 265)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.13963288068771362
    2. ' s' → logprob: -3.0146329402923584
    3. ' string' → logprob: -3.3896329402923584
    4. ' text' → logprob: -3.5146329402923584
    5. 'self' → logprob: -4.264632701873779
    6. 's' → logprob: -6.514632701873779
    7. 'text' → logprob: -6.764632701873779
    8. 'string' → logprob: -7.639632701873779
    9. ' input' → logprob: -7.764632701873779
    10. ')' → logprob: -9.639633178710938

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16965234279632568
    2. ':' → logprob: -2.0446524620056152
    3. ')' → logprob: -3.6696524620056152
    4. 's' → logprob: -7.169652462005615
    5. '):
' → logprob: -8.919651985168457
    6. '[' → logprob: -9.794651985168457
    7. ' ):' → logprob: -10.169651985168457
    8. ' :' → logprob: -11.169651985168457
    9. ''):' → logprob: -11.294651985168457
    10. '   ' → logprob: -11.294651985168457

Token 13: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0699467658996582
    2. 'str' → logprob: -2.694946765899658
    3. ')' → logprob: -12.1949462890625
    4. 's' → logprob: -13.6949462890625
    5. ' )' → logprob: -14.0699462890625
    6. '[str' → logprob: -14.0699462890625
    7. 'string' → logprob: -14.1949462890625
    8. '	str' → logprob: -15.1949462890625
    9. ':str' → logprob: -15.3199462890625
    10. ' string' → logprob: -15.4449462890625

Token 14: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032962977420538664
    2. '):' → logprob: -5.753296375274658
    3. ')->' → logprob: -9.3782958984375
    4. '   ' → logprob: -11.5032958984375
    5. '`)' → logprob: -11.6282958984375
    6. '):
' → logprob: -12.0032958984375
    7. ' )' → logprob: -12.6282958984375
    8. ':' → logprob: -14.0032958984375
    9. ')>' → logprob: -14.5032958984375
    10. '       ' → logprob: -14.7532958984375

Token 15: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001123668160289526
    2. '):' → logprob: -6.876123905181885
    3. ':return' → logprob: -10.126123428344727
    4. ' :' → logprob: -12.001123428344727
    5. '':' → logprob: -12.251123428344727
    6. ')' → logprob: -12.251123428344727
    7. ':
' → logprob: -12.376123428344727
    8. '->' → logprob: -12.501123428344727
    9. ':**' → logprob: -12.501123428344727
    10. '`:' → logprob: -12.501123428344727

Token 16: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.02057003229856491
    2. 'str' → logprob: -3.8955700397491455
    3. ' ' → logprob: -11.645569801330566
    4. ' ' → logprob: -11.895569801330566
    5. 's' → logprob: -12.645569801330566
    6. ' None' → logprob: -13.270569801330566
    7. '[str' → logprob: -13.520569801330566
    8. ' s' → logprob: -13.645569801330566
    9. '	str' → logprob: -14.020569801330566
    10. '```' → logprob: -14.520569801330566

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.32523515378125e-05
    2. ':
' → logprob: -10.375062942504883
    3. '):' → logprob: -11.875062942504883
    4. '():' → logprob: -12.000062942504883
    5. ':return' → logprob: -12.000062942504883
    6. ' :' → logprob: -12.750062942504883
    7. ':**' → logprob: -13.125062942504883
    8. '':' → logprob: -13.375062942504883
    9. '       ' → logprob: -13.375062942504883
    10. '`:' → logprob: -13.500062942504883

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009120595059357584
    2. '\n' → logprob: -8.125911712646484
    3. '\' → logprob: -8.750911712646484
    4. '   ' → logprob: -9.250911712646484
    5. '```' → logprob: -9.375911712646484
    6. 'return' → logprob: -9.875911712646484
    7. ' return' → logprob: -10.250911712646484
    8. '        
' → logprob: -10.375911712646484
    9. '        ' → logprob: -10.750911712646484
    10. '    ' → logprob: -10.875911712646484

Token 19: ' raise' (ID: 9338)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9431018233299255
    2. '       ' → logprob: -1.0681018829345703
    3. 'return' → logprob: -2.0681018829345703
    4. 's' → logprob: -2.0681018829345703
    5. ' return' → logprob: -4.56810188293457
    6. '        ' → logprob: -6.81810188293457
    7. '```' → logprob: -7.31810188293457
    8. ' s' → logprob: -7.94310188293457
    9. ' r' → logprob: -8.31810188293457
    10. '[::-' → logprob: -8.56810188293457

Token 20: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.02350005693733692
    2. 'Not' → logprob: -3.7734999656677246
    3. ' ' → logprob: -9.273500442504883
    4. '  ' → logprob: -10.023500442504883
    5. '<|end|>' → logprob: -10.398500442504883
    6. '   ' → logprob: -10.773500442504883
    7. ' not' → logprob: -11.148500442504883
    8. ' N' → logprob: -11.898500442504883
    9. '(Not' → logprob: -11.898500442504883
    10. '@Not' → logprob: -12.273500442504883

Token 21: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -1.8908587662735954e-05
    2. 'Found' → logprob: -11.750019073486328
    3. 'implemented' → logprob: -11.750019073486328
    4. 'Implement' → logprob: -13.375019073486328
    5. 'Impl' → logprob: -14.625019073486328
    6. 'Error' → logprob: -14.875019073486328
    7. 'Imp' → logprob: -15.625019073486328
    8. 'Implementation' → logprob: -16.250019073486328
    9. 'Supported' → logprob: -16.250019073486328
    10. 'Im' → logprob: -16.875019073486328

Token 22: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.054500666621607e-06
    2. 'rror' → logprob: -12.75000286102295
    3. 'Erro' → logprob: -16.750003814697266
    4. 'Er' → logprob: -17.125003814697266
    5. '```' → logprob: -17.500003814697266
    6. 'E' → logprob: -17.625003814697266
    7. ' Error' → logprob: -17.625003814697266
    8. 'Err' → logprob: -18.875003814697266
    9. '   ' → logprob: -18.875003814697266
    10. '	Error' → logprob: -19.000003814697266

Token 23: '("' (ID: 568)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12597447633743286
    2. '<|end|>' → logprob: -3.250974416732788
    3. '\n' → logprob: -3.375974416732788
    4. ' 
' → logprob: -4.375974655151367
    5. '

' → logprob: -4.625974655151367
    6. '\' → logprob: -5.375974655151367
    7. '```' → logprob: -5.625974655151367
    8. '' → logprob: -5.875974655151367
    9. '    
' → logprob: -5.875974655151367
    10. '  
' → logprob: -6.000974655151367

Token 24: 'Sub' (ID: 3638)
  Prédit: 'Implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Implement' → logprob: -0.08258258551359177
    2. 'This' → logprob: -3.207582473754883
    3. 'Not' → logprob: -4.207582473754883
    4. '")' → logprob: -5.082582473754883
    5. 'Provide' → logprob: -5.457582473754883
    6. ')' → logprob: -5.582582473754883
    7. 'Reverse' → logprob: -6.332582473754883
    8. 'Method' → logprob: -6.332582473754883
    9. 'Override' → logprob: -6.457582473754883
    10. 'Implemented' → logprob: -7.207582473754883

Token 25: 'classes' (ID: 17233)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002811290556564927
    2. 'classes' → logprob: -6.252811431884766
    3. 'c' → logprob: -7.877811431884766
    4. 'clas' → logprob: -8.627811431884766
    5. 'cla' → logprob: -9.502811431884766
    6. '<class' → logprob: -9.502811431884766
    7. 'cl' → logprob: -9.752811431884766
    8. 'cls' → logprob: -10.127811431884766
    9. 'classe' → logprob: -10.627811431884766
    10. 'lass' → logprob: -11.127811431884766

Token 26: ' should' (ID: 1757)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.28163212537765503
    2. ' should' → logprob: -1.4066321849822998
    3. ' need' → logprob: -8.656632423400879
    4. 'must' → logprob: -8.656632423400879
    5. 'should' → logprob: -9.406632423400879
    6. ' ' → logprob: -10.406632423400879
    7. ' are' → logprob: -12.156632423400879
    8. '<|end|>' → logprob: -12.781632423400879
    9. ' )' → logprob: -13.656632423400879
    10. ' должны' → logprob: -13.656632423400879

Token 27: ' implement' (ID: 6365)
  Prédit: ' implement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implement' → logprob: -0.008831185288727283
    2. ' override' → logprob: -4.883831024169922
    3. 'implement' → logprob: -7.133831024169922
    4. ' provide' → logprob: -8.383831024169922
    5. 'override' → logprob: -9.133831024169922
    6. 'Implement' → logprob: -9.633831024169922
    7. ' ' → logprob: -11.508831024169922
    8. 'Override' → logprob: -12.383831024169922
    9. '   ' → logprob: -13.008831024169922
    10. 'provide' → logprob: -13.133831024169922

Token 28: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.3183940649032593
    2. ' reverse' → logprob: -1.3183940649032593
    3. ' the' → logprob: -5.693394184112549
    4. 'reverse' → logprob: -7.193394184112549
    5. ' their' → logprob: -7.193394184112549
    6. 'this' → logprob: -9.19339370727539
    7. '(reverse' → logprob: -9.94339370727539
    8. '   ' → logprob: -10.44339370727539
    9. '_reverse' → logprob: -10.94339370727539
    10. ' ' → logprob: -11.06839370727539

Token 29: '!")

' (ID: 169327)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3171917796134949
    2. ' method' → logprob: -1.3171918392181396
    3. 'method' → logprob: -5.8171916007995605
    4. ')' → logprob: -8.067192077636719
    5. '.")' → logprob: -8.817192077636719
    6. '\")' → logprob: -9.317192077636719
    7. ')")' → logprob: -9.692192077636719
    8. ' ")' → logprob: -9.942192077636719
    9. '\"' → logprob: -10.192192077636719
    10. '"' → logprob: -10.192192077636719

Token 30: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7983536720275879
    2. 'class' → logprob: -0.7983536720275879
    3. ' 
' → logprob: -3.548353672027588
    4. 'c' → logprob: -4.423353672027588
    5. '

' → logprob: -4.673353672027588
    6. '\n' → logprob: -4.923353672027588
    7. ' ' → logprob: -4.923353672027588
    8. '    
' → logprob: -5.048353672027588
    9. 'n' → logprob: -5.173353672027588
    10. '   ' → logprob: -5.298353672027588

Token 31: ' Simple' (ID: 12295)
  Prédit: ' String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' String' → logprob: -0.023268891498446465
    2. ' ' → logprob: -5.023268699645996
    3. ' Pal' → logprob: -5.148268699645996
    4. ' Reverse' → logprob: -5.273268699645996
    5. ' Space' → logprob: -5.523268699645996
    6. ' List' → logprob: -7.773268699645996
    7. ' Wh' → logprob: -8.148268699645996
    8. ' Char' → logprob: -8.648268699645996
    9. 'String' → logprob: -9.148268699645996
    10. ' Re' → logprob: -9.398268699645996

Token 32: 'Slice' (ID: 32171)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.07828038185834885
    2. 'Re' → logprob: -2.828280448913574
    3. 'Reverse' → logprob: -4.203280448913574
    4. ' String' → logprob: -6.828280448913574
    5. 'Palindrome' → logprob: -9.328280448913574
    6. ' string' → logprob: -10.953280448913574
    7. ' ' → logprob: -11.078280448913574
    8. ' Re' → logprob: -12.328280448913574
    9. '_String' → logprob: -12.453280448913574
    10. 'Str' → logprob: -13.203280448913574

Token 33: 'Re' (ID: 720)
  Prédit: 'Reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reverse' → logprob: -0.8179872035980225
    2. 'r' → logprob: -1.4429872035980225
    3. 'Re' → logprob: -1.4429872035980225
    4. 'd' → logprob: -3.1929872035980225
    5. 'Strategy' → logprob: -3.1929872035980225
    6. 'rs' → logprob: -6.442987442016602
    7. 'String' → logprob: -6.942987442016602
    8. '[::-' → logprob: -8.567987442016602
    9. 're' → logprob: -8.692987442016602
    10. '(' → logprob: -8.942987442016602

Token 34: 'versal' (ID: 116984)
  Prédit: 'versal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versal' → logprob: -0.008860140107572079
    2. 'verse' → logprob: -4.758860111236572
    3. 'vers' → logprob: -8.63386058807373
    4. 've' → logprob: -10.63386058807373
    5. 'v' → logprob: -11.25886058807373
    6. 'veral' → logprob: -11.63386058807373
    7. 'ver' → logprob: -11.63386058807373
    8. ' verse' → logprob: -12.38386058807373
    9. 'Verse' → logprob: -13.13386058807373
    10. 'versa' → logprob: -13.25886058807373

Token 35: 'Strategy' (ID: 21488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6951642632484436
    2. 'Strategy' → logprob: -0.6951642632484436
    3. '(' → logprob: -6.945164203643799
    4. ' Strategy' → logprob: -8.070164680480957
    5. '():' → logprob: -8.445164680480957
    6. '):' → logprob: -8.695164680480957
    7. ' strategy' → logprob: -9.445164680480957
    8. 'Strategies' → logprob: -9.445164680480957
    9. '(strategy' → logprob: -10.070164680480957
    10. '_strategy' → logprob: -10.695164680480957

Token 36: '(String' (ID: 2930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017064384883269668
    2. '(' → logprob: -9.250170707702637
    3. ' :' → logprob: -10.250170707702637
    4. '():' → logprob: -10.625170707702637
    5. '(:' → logprob: -12.500170707702637
    6. ':**' → logprob: -13.000170707702637
    7. '):' → logprob: -13.000170707702637
    8. '   ' → logprob: -13.250170707702637
    9. ':def' → logprob: -14.125170707702637
    10. '```' → logprob: -14.500170707702637

Token 37: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -8.2994620242971e-06
    2. 'R' → logprob: -12.500008583068848
    3. 'Reverse' → logprob: -12.625008583068848
    4. ' reversal' → logprob: -15.000008583068848
    5. ' Re' → logprob: -15.250008583068848
    6. '_re' → logprob: -15.375008583068848
    7. 'Replacement' → logprob: -16.12500762939453
    8. 'S' → logprob: -16.25000762939453
    9. '_Re' → logprob: -16.25000762939453
    10. 'Slice' → logprob: -16.62500762939453

Token 38: 'versal' (ID: 116984)
  Prédit: 'versal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versal' → logprob: -0.0010209017200395465
    2. 'val' → logprob: -7.376020908355713
    3. 'vers' → logprob: -8.376020431518555
    4. 'veral' → logprob: -9.126020431518555
    5. 'ver' → logprob: -11.751020431518555
    6. 'verse' → logprob: -11.751020431518555
    7. 'ers' → logprob: -11.751020431518555
    8. 's' → logprob: -12.251020431518555
    9. 'vation' → logprob: -12.251020431518555
    10. 'var' → logprob: -12.376020431518555

Token 39: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -4.990154047845863e-05
    2. 'S' → logprob: -10.750049591064453
    3. 'Stra' → logprob: -11.375049591064453
    4. 'Strateg' → logprob: -12.125049591064453
    5. 'St' → logprob: -12.250049591064453
    6. ')' → logprob: -13.000049591064453
    7. '_strategy' → logprob: -13.125049591064453
    8. 'Str' → logprob: -13.750049591064453
    9. ' Strategy' → logprob: -14.125049591064453
    10. 'Strategies' → logprob: -15.625049591064453

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011129142512800172
    2. ')' → logprob: -9.75011157989502
    3. ':' → logprob: -10.25011157989502
    4. '):
' → logprob: -11.00011157989502
    5. '   ' → logprob: -14.50011157989502
    6. ' ):' → logprob: -15.50011157989502
    7. '():' → logprob: -16.875110626220703
    8. '):

' → logprob: -17.125110626220703
    9. '):
' → logprob: -17.375110626220703
    10. ' ' → logprob: -17.750110626220703

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24957670271396637
    2. '
' → logprob: -1.7495766878128052
    3. '    
' → logprob: -3.2495768070220947
    4. '    ' → logprob: -5.749576568603516
    5. ' 
' → logprob: -6.124576568603516
    6. ' def' → logprob: -6.874576568603516
    7. 'def' → logprob: -7.624576568603516
    8. '     
' → logprob: -7.749576568603516
    9. '  
' → logprob: -8.749576568603516
    10. '   
' → logprob: -8.874576568603516

Token 42: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.13367849588394165
    2. '   ' → logprob: -2.508678436279297
    3. 'def' (adapté à ' def') → logprob: -3.508678436279297
    4. '    ' → logprob: -4.383678436279297
    5. ' 
' → logprob: -7.633678436279297
    6. '
' → logprob: -8.133678436279297
    7. '    
' → logprob: -8.508678436279297
    8. ' ' → logprob: -8.508678436279297
    9. '       ' → logprob: -10.258678436279297
    10. '     
' → logprob: -10.633678436279297

Token 43: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.0028571782168000937
    2. 'reverse' → logprob: -5.877857208251953
    3. ' ' → logprob: -10.502857208251953
    4. ' def' → logprob: -10.877857208251953
    5. ' r' → logprob: -12.877857208251953
    6. ' revers' → logprob: -14.752857208251953
    7. '_reverse' → logprob: -14.752857208251953
    8. ' rev' → logprob: -14.877857208251953
    9. ' ' → logprob: -15.002857208251953
    10. 'r' → logprob: -15.002857208251953

Token 44: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03034241870045662
    2. '(' → logprob: -3.5303423404693604
    3. '(s' → logprob: -7.5303425788879395
    4. ' (' → logprob: -10.405342102050781
    5. 'self' → logprob: -11.155342102050781
    6. '(
' → logprob: -12.780342102050781
    7. ' ' → logprob: -12.780342102050781
    8. '   ' → logprob: -13.280342102050781
    9. ' self' → logprob: -13.655342102050781
    10. 's' → logprob: -14.530342102050781

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008288058452308178
    2. 'self' → logprob: -7.375828742980957
    3. ' ,' → logprob: -9.125828742980957
    4. 's' → logprob: -10.375828742980957
    5. ',s' → logprob: -10.375828742980957
    6. '   ' → logprob: -11.625828742980957
    7. ',self' → logprob: -11.875828742980957
    8. ' self' → logprob: -12.375828742980957
    9. '       ' → logprob: -12.500828742980957
    10. '(self' → logprob: -13.000828742980957

Token 46: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.011162539944052696
    2. 's' → logprob: -4.511162757873535
    3. ' self' → logprob: -9.636162757873535
    4. 'self' → logprob: -10.261162757873535
    5. ' ' → logprob: -11.261162757873535
    6. ' ' → logprob: -14.386162757873535
    7. ')' → logprob: -14.761162757873535
    8. '	s' → logprob: -15.636162757873535
    9. ')s' → logprob: -16.63616180419922
    10. ',' → logprob: -17.01116180419922

Token 47: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019794299732893705
    2. ' :' → logprob: -6.501979351043701
    3. '):' → logprob: -7.876979351043701
    4. ')' → logprob: -9.62697982788086
    5. ':str' → logprob: -11.12697982788086
    6. ' ):' → logprob: -11.62697982788086
    7. '   ' → logprob: -13.00197982788086
    8. ' )' → logprob: -13.25197982788086
    9. '):
' → logprob: -13.25197982788086
    10. ' ' → logprob: -14.62697982788086

Token 48: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.007623899728059769
    2. 'str' → logprob: -4.882623672485352
    3. ' s' → logprob: -12.257623672485352
    4. ':str' → logprob: -12.507623672485352
    5. 's' → logprob: -12.632623672485352
    6. ' ' → logprob: -13.007623672485352
    7. ')' → logprob: -13.257623672485352
    8. '(str' → logprob: -14.882623672485352
    9. '	str' → logprob: -14.882623672485352
    10. '[str' → logprob: -15.132623672485352

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008734534494578838
    2. '):' → logprob: -4.758734703063965
    3. ' )' → logprob: -9.508734703063965
    4. '   ' → logprob: -10.383734703063965
    5. ' ):' → logprob: -12.133734703063965
    6. '):
' → logprob: -12.383734703063965
    7. ':' → logprob: -13.008734703063965
    8. '       ' → logprob: -13.383734703063965
    9. ' ' → logprob: -14.258734703063965
    10. '[::-' → logprob: -15.508734703063965

Token 50: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002494802698493004
    2. '):' → logprob: -6.252494812011719
    3. ' :' → logprob: -8.252494812011719
    4. ':return' → logprob: -8.877494812011719
    5. ' ->' → logprob: -9.627494812011719
    6. '->' → logprob: -10.752494812011719
    7. ')' → logprob: -10.877494812011719
    8. ':**' → logprob: -11.127494812011719
    9. '       ' → logprob: -11.252494812011719
    10. ')->' → logprob: -11.752494812011719

Token 51: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.004144761245697737
    2. 'str' → logprob: -5.504144668579102
    3. ' s' → logprob: -10.004144668579102
    4. 's' → logprob: -10.879144668579102
    5. ' ' → logprob: -13.129144668579102
    6. '	str' → logprob: -16.0041446685791
    7. '[str' → logprob: -16.2541446685791
    8. ' ' → logprob: -17.5041446685791
    9. '[::-' → logprob: -17.7541446685791
    10. '(str' → logprob: -17.8791446685791

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002158146962756291
    2. '):' → logprob: -9.625215530395508
    3. ':return' → logprob: -9.625215530395508
    4. ':
' → logprob: -9.875215530395508
    5. '       ' → logprob: -10.625215530395508
    6. '():' → logprob: -13.000215530395508
    7. ' :' → logprob: -13.125215530395508
    8. ':**' → logprob: -13.625215530395508
    9. '   ' → logprob: -15.125215530395508
    10. '<|end|>' → logprob: -15.250215530395508

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020711649267468601
    2. 'return' → logprob: -8.87520694732666
    3. ' return' → logprob: -9.62520694732666
    4. '      ' → logprob: -14.87520694732666
    5. '           ' → logprob: -15.00020694732666
    6. '        ' → logprob: -15.75020694732666
    7. '   ' → logprob: -16.375207901000977
    8. '    ' → logprob: -16.750207901000977
    9. '    ' → logprob: -17.000207901000977
    10. '```' → logprob: -17.000207901000977

Token 54: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6492763161659241
    2. 'return' (adapté à ' return') → logprob: -0.8992763161659241
    3. ' return' → logprob: -2.6492762565612793
    4. '   ' → logprob: -11.899276733398438
    5. '```' → logprob: -13.899276733398438
    6. '           ' → logprob: -14.524276733398438
    7. ':return' → logprob: -14.524276733398438
    8. '	return' → logprob: -15.024276733398438
    9. '      ' → logprob: -15.024276733398438
    10. '{return' → logprob: -15.149276733398438

Token 55: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.005234002135694027
    2. 's' → logprob: -5.2552337646484375
    3. '[::-' → logprob: -16.130233764648438
    4. '	s' → logprob: -17.130233764648438
    5. ' ' → logprob: -17.755233764648438
    6. ' ' → logprob: -17.880233764648438
    7. '(s' → logprob: -18.505233764648438
    8. '`s' → logprob: -18.880233764648438
    9. '```' → logprob: -19.005233764648438
    10. '[s' → logprob: -19.505233764648438

Token 56: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.003782381536439061
    2. '[' → logprob: -5.628782272338867
    3. ' [' → logprob: -8.628782272338867
    4. '[:]' → logprob: -13.253782272338867
    5. '[-' → logprob: -15.003782272338867
    6. '   ' → logprob: -15.378782272338867
    7. '```' → logprob: -15.378782272338867
    8. '[start' → logprob: -15.628782272338867
    9. '[
' → logprob: -15.878782272338867
    10. '[:' → logprob: -16.128782272338867

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002308219438418746
    2. ']' → logprob: -6.127308368682861
    3. '-' → logprob: -10.252307891845703
    4. ':' → logprob: -10.877307891845703
    5. '[:]' → logprob: -10.877307891845703
    6. ':]' → logprob: -11.002307891845703
    7. 'slice' → logprob: -11.502307891845703
    8. '```' → logprob: -12.127307891845703
    9. '[::-' → logprob: -13.002307891845703
    10. 'string' → logprob: -13.127307891845703

Token 58: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11287257075309753
    2. ']' → logprob: -2.23787260055542
    3. '）' → logprob: -10.737872123718262
    4. '])' → logprob: -11.487872123718262
    5. '}' → logprob: -11.987872123718262
    6. '<|end|>' → logprob: -12.112872123718262
    7. ')]' → logprob: -13.612872123718262
    8. ')
' → logprob: -13.737872123718262
    9. '       ' → logprob: -14.362872123718262
    10. '[' → logprob: -14.612872123718262

Token 59: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07580139487981796
    2. '
' → logprob: -2.700801372528076
    3. '

' → logprob: -5.450801372528076
    4. '```' → logprob: -6.950801372528076
    5. 'c' → logprob: -7.950801372528076
    6. ' class' → logprob: -9.200801849365234
    7. '\n' → logprob: -9.575801849365234
    8. '


' → logprob: -11.450801849365234
    9. '<class' → logprob: -11.700801849365234
    10. '
' → logprob: -11.700801849365234

Token 60: ' Abstract' (ID: 17413)
  Prédit: ' Reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Reverse' → logprob: -1.4621299505233765
    2. ' Capital' → logprob: -1.5871299505233765
    3. ' Word' → logprob: -1.7121299505233765
    4. ' Upper' → logprob: -2.087130069732666
    5. ' Wh' → logprob: -2.962130069732666
    6. ' Stack' → logprob: -3.212130069732666
    7. ' String' → logprob: -3.587130069732666
    8. ' Conc' → logprob: -3.837130069732666
    9. ' List' → logprob: -3.962130069732666
    10. ' Pal' → logprob: -4.337130069732666

Token 61: 'String' (ID: 916)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.4295100271701813
    2. 'Base' → logprob: -1.5545099973678589
    3. 'String' → logprob: -2.8045101165771484
    4. 'Strategy' → logprob: -3.5545101165771484
    5. 'Stack' → logprob: -4.304510116577148
    6. 'List' → logprob: -4.804510116577148
    7. 'Method' → logprob: -4.804510116577148
    8. 'Reverse' → logprob: -5.304510116577148
    9. 'Palindrome' → logprob: -5.429510116577148
    10. 'Factory' → logprob: -5.804510116577148

Token 62: 'Processor' (ID: 22334)
  Prédit: 'Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -0.0007218453683890402
    2. 'Reverse' → logprob: -8.12572193145752
    3. 'Manip' → logprob: -9.25072193145752
    4. 'Replacement' → logprob: -9.37572193145752
    5. 'Strategy' → logprob: -9.87572193145752
    6. 'Transformation' → logprob: -9.87572193145752
    7. 'Processor' → logprob: -10.00072193145752
    8. ' Re' → logprob: -11.12572193145752
    9. 'Splitter' → logprob: -11.25072193145752
    10. 'Manipulator' → logprob: -11.25072193145752

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002334568416699767
    2. 'Strategy' → logprob: -9.37523365020752
    3. '(' → logprob: -10.00023365020752
    4. ':
' → logprob: -10.12523365020752
    5. '():' → logprob: -11.75023365020752
    6. '):' → logprob: -11.87523365020752
    7. '<|end|>' → logprob: -12.12523365020752
    8. ':**' → logprob: -12.25023365020752
    9. '(Abstract' → logprob: -12.37523365020752
    10. '(S' → logprob: -12.50023365020752

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053378744050860405
    2. ':' → logprob: -6.505337715148926
    3. '
' → logprob: -6.630337715148926
    4. ':
' → logprob: -6.880337715148926
    5. '    
' → logprob: -7.005337715148926
    6. 'def' → logprob: -8.630337715148926
    7. '<|end|>' → logprob: -9.130337715148926
    8. '    ' → logprob: -9.755337715148926
    9. ' def' → logprob: -9.755337715148926
    10. '  
' → logprob: -10.630337715148926

Token 65: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7341004610061646
    2. '   ' → logprob: -0.9841004610061646
    3. 'class' → logprob: -2.734100341796875
    4. 'def' (adapté à ' def') → logprob: -3.234100341796875
    5. '    ' → logprob: -3.359100341796875
    6. '    
' → logprob: -6.109100341796875
    7. ' class' → logprob: -6.359100341796875
    8. '```' → logprob: -6.484100341796875
    9. ' ' → logprob: -7.109100341796875
    10. ' 
' → logprob: -7.609100341796875

Token 66: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09104377776384354
    2. ' process' → logprob: -2.466043710708618
    3. ' reverse' → logprob: -7.091043949127197
    4. 'process' → logprob: -7.341043949127197
    5. '__' → logprob: -7.966043949127197
    6. ' ' → logprob: -8.966043472290039
    7. '_process' → logprob: -10.091043472290039
    8. ' _' → logprob: -10.341043472290039
    9. ' init' → logprob: -10.466043472290039
    10. ' ' → logprob: -11.591043472290039

Token 67: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.676981345459353e-06
    2. 'new' → logprob: -13.375005722045898
    3. 'ini' → logprob: -13.750005722045898
    4. 'nit' → logprob: -14.625005722045898
    5. 'i' → logprob: -14.750005722045898
    6. 'in' → logprob: -14.875005722045898
    7. '	init' → logprob: -15.125005722045898
    8. '   ' → logprob: -15.375005722045898
    9. 'def' → logprob: -15.500005722045898
    10. 'call' → logprob: -15.500005722045898

Token 68: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.010105467401444912
    2. '(self' → logprob: -4.885105609893799
    3. '__' → logprob: -6.385105609893799
    4. '__(
' → logprob: -7.760105609893799
    5. '(' → logprob: -8.63510513305664
    6. ' (' → logprob: -9.63510513305664
    7. '<|end|>' → logprob: -10.13510513305664
    8. 'self' → logprob: -11.01010513305664
    9. '_(' → logprob: -11.13510513305664
    10. ')(' → logprob: -11.13510513305664

Token 69: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010343570029363036
    2. ' self' → logprob: -6.876034259796143
    3. ' ' → logprob: -14.5010347366333
    4. '   ' → logprob: -14.6260347366333
    5. '       ' → logprob: -15.5010347366333
    6. 'strategy' → logprob: -16.126033782958984
    7. '
' → logprob: -16.376033782958984
    8. 's' → logprob: -16.376033782958984
    9. ')' → logprob: -16.626033782958984
    10. '    ' → logprob: -17.501033782958984

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010793719440698624
    2. ' ,' → logprob: -5.135793685913086
    3. 'self' → logprob: -5.385793685913086
    4. ' self' → logprob: -9.135793685913086
    5. '   ' → logprob: -10.260793685913086
    6. ')' → logprob: -10.260793685913086
    7. '(self' → logprob: -10.260793685913086
    8. '_strategy' → logprob: -11.010793685913086
    9. ' ' → logprob: -11.635793685913086
    10. ',self' → logprob: -12.135793685913086

Token 71: ' strategy' (ID: 10772)
  Prédit: ' strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.03531473129987717
    2. 'strategy' → logprob: -4.035314559936523
    3. ' reversal' → logprob: -4.535314559936523
    4. ' reverse' → logprob: -5.410314559936523
    5. ' ' → logprob: -7.035314559936523
    6. ' string' → logprob: -8.285314559936523
    7. 're' → logprob: -8.535314559936523
    8. '   ' → logprob: -8.660314559936523
    9. 'reverse' → logprob: -8.910314559936523
    10. ' )' → logprob: -10.160314559936523

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18066467344760895
    2. '):' → logprob: -1.8056646585464478
    3. ')' → logprob: -7.680664539337158
    4. ' ):' → logprob: -8.055665016174316
    5. ' :' → logprob: -9.430665016174316
    6. '=None' → logprob: -10.305665016174316
    7. '):
' → logprob: -10.930665016174316
    8. ' )' → logprob: -13.180665016174316
    9. ':str' → logprob: -13.555665016174316
    10. '<|end|>' → logprob: -13.555665016174316

Token 73: ' String' (ID: 1189)
  Prédit: ' String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' String' → logprob: -0.03394892066717148
    2. 'String' → logprob: -3.4089488983154297
    3. ' ' → logprob: -8.15894889831543
    4. '	String' → logprob: -12.53394889831543
    5. '  ' → logprob: -12.65894889831543
    6. ')' → logprob: -12.65894889831543
    7. '_String' → logprob: -13.03394889831543
    8. ' )' → logprob: -13.53394889831543
    9. '<|end|>' → logprob: -13.78394889831543
    10. ' ' → logprob: -14.15894889831543

Token 74: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: 0.0
    2. 'Reverse' → logprob: -16.75
    3. ' Re' → logprob: -17.25
    4. 'R' → logprob: -17.75
    5. ' reversal' → logprob: -18.25
    6. 'Replacement' → logprob: -19.5
    7. '_re' → logprob: -19.625
    8. 'Revision' → logprob: -19.625
    9. 'Rev' → logprob: -20.125
    10. '_Re' → logprob: -20.25

Token 75: 'versal' (ID: 116984)
  Prédit: 'versal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versal' → logprob: -0.00019257364328950644
    2. 'veral' → logprob: -9.125192642211914
    3. 'vers' → logprob: -9.750192642211914
    4. 'ers' → logprob: -11.750192642211914
    5. 'val' → logprob: -11.750192642211914
    6. 'e' → logprob: -12.875192642211914
    7. 'ver' → logprob: -13.125192642211914
    8. ' vers' → logprob: -13.375192642211914
    9. 'ves' → logprob: -13.750192642211914
    10. 'erval' → logprob: -15.000192642211914

Token 76: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -1.0280383548888494e-06
    2. 'Strateg' → logprob: -15.125000953674316
    3. ' Strategy' → logprob: -15.125000953674316
    4. 'Stra' → logprob: -16.000001907348633
    5. 'strategy' → logprob: -16.500001907348633
    6. '_strategy' → logprob: -16.625001907348633
    7. ' strategy' → logprob: -16.750001907348633
    8. 'Str' → logprob: -17.375001907348633
    9. ')' → logprob: -18.125001907348633
    10. 'S' → logprob: -18.625001907348633

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015160536859184504
    2. ')' → logprob: -6.626515865325928
    3. '):
' → logprob: -8.626516342163086
    4. '   ' → logprob: -12.251516342163086
    5. ':' → logprob: -13.126516342163086
    6. ' ):' → logprob: -13.251516342163086
    7. ',' → logprob: -14.501516342163086
    8. '):
' → logprob: -14.876516342163086
    9. ')->' → logprob: -15.126516342163086
    10. '=None' → logprob: -15.126516342163086

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002234437270089984
    2. 'self' → logprob: -8.625223159790039
    3. ' self' → logprob: -10.750223159790039
    4. '   ' → logprob: -11.000223159790039
    5. '```' → logprob: -13.125223159790039
    6. ')' → logprob: -14.125223159790039
    7. '<|end|>' → logprob: -14.250223159790039
    8. '      ' → logprob: -14.625223159790039
    9. '     ' → logprob: -15.125223159790039
    10. '	   ' → logprob: -15.250223159790039

Token 79: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.39651891589164734
    2. ' self' → logprob: -1.1465189456939697
    3. '       ' → logprob: -4.646518707275391
    4. '   ' → logprob: -12.64651870727539
    5. ' ' → logprob: -13.27151870727539
    6. '	self' → logprob: -13.77151870727539
    7. ' ' → logprob: -15.27151870727539
    8. '_self' → logprob: -16.64651870727539
    9. 'super' → logprob: -16.89651870727539
    10. '     ' → logprob: -17.39651870727539

Token 80: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6944695115089417
    2. '.strategy' → logprob: -0.6944695115089417
    3. '.str' → logprob: -7.069469451904297
    4. ' .' → logprob: -8.069469451904297
    5. 'strategy' → logprob: -9.569469451904297
    6. ' strategy' → logprob: -9.944469451904297
    7. ' ' → logprob: -11.069469451904297
    8. 'strateg' → logprob: -12.319469451904297
    9. '.s' → logprob: -12.694469451904297
    10. ')' → logprob: -12.694469451904297

Token 81: 'strategy' (ID: 128341)
  Prédit: 'strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -1.8193366486229934e-05
    2. '_strategy' → logprob: -12.000018119812012
    3. ' strategy' → logprob: -12.250018119812012
    4. 'strateg' → logprob: -13.125018119812012
    5. 'string' → logprob: -13.375018119812012
    6. '(strategy' → logprob: -14.125018119812012
    7. 's' → logprob: -14.375018119812012
    8. '.strategy' → logprob: -14.500018119812012
    9. 'str' → logprob: -14.625018119812012
    10. 're' → logprob: -15.250018119812012

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324792370200157
    2. '=' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.273247718811035
    4. '.' → logprob: -15.148247718811035
    5. ')' → logprob: -16.14824867248535
    6. ' =
' → logprob: -16.39824867248535
    7. ' =)' → logprob: -16.39824867248535
    8. '=str' → logprob: -16.64824867248535
    9. '<|end|>' → logprob: -16.89824867248535
    10. '    ' → logprob: -17.14824867248535

Token 83: ' strategy' (ID: 10772)
  Prédit: ' strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strategy' → logprob: -0.0788937583565712
    2. 'strategy' → logprob: -2.5788936614990234
    3. ' ' → logprob: -13.453893661499023
    4. '(strategy' → logprob: -13.828893661499023
    5. 'strateg' → logprob: -13.828893661499023
    6. '_strategy' → logprob: -15.953893661499023
    7. ' ' → logprob: -16.078893661499023
    8. '.strategy' → logprob: -16.203893661499023
    9. 'strategie' → logprob: -16.828893661499023
    10. ' strategi' → logprob: -17.203893661499023

Token 84: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021032968536019325
    2. '<|end|>' → logprob: -4.271032810211182
    3. '

' → logprob: -5.521032810211182
    4. '   ' → logprob: -7.146032810211182
    5. 'def' → logprob: -7.271032810211182
    6. '    
' → logprob: -7.646032810211182
    7. '<|end|>' → logprob: -7.646032810211182
    8. ' def' → logprob: -8.77103328704834
    9. '  
' → logprob: -8.89603328704834
    10. ' 
' → logprob: -10.02103328704834

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15040601789951324
    2. '
' → logprob: -2.1504061222076416
    3. 'def' → logprob: -4.0254058837890625
    4. ' def' → logprob: -6.0254058837890625
    5. '    
' → logprob: -6.1504058837890625
    6. '<|end|>' → logprob: -7.5254058837890625
    7. '```' → logprob: -9.400405883789062
    8. '	def' → logprob: -9.400405883789062
    9. '<|end|>' → logprob: -10.025405883789062
    10. '  
' → logprob: -11.150405883789062

Token 86: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015160536859184504
    2. ' def' → logprob: -6.501515865325928
    3. '   ' → logprob: -11.251516342163086
    4. '	def' → logprob: -14.501516342163086
    5. ' ' → logprob: -16.876516342163086
    6. '```' → logprob: -16.876516342163086
    7. 'de' → logprob: -17.751516342163086
    8. '@property' → logprob: -19.126516342163086
    9. '
' → logprob: -19.626516342163086
    10. '       ' → logprob: -19.751516342163086

Token 87: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.25169312953948975
    2. ' reverse' → logprob: -1.7516931295394897
    3. 'process' → logprob: -3.2516932487487793
    4. '_process' → logprob: -5.376693248748779
    5. ' string' → logprob: -6.126693248748779
    6. ' ' → logprob: -6.501693248748779
    7. 'reverse' → logprob: -7.126693248748779
    8. '_reverse' → logprob: -7.501693248748779
    9. ' def' → logprob: -8.251692771911621
    10. ' proces' → logprob: -9.626692771911621

Token 88: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007622129749506712
    2. '(' → logprob: -5.007622241973877
    3. '_string' → logprob: -7.632622241973877
    4. '(s' → logprob: -7.882622241973877
    5. 'self' → logprob: -11.007621765136719
    6. '_text' → logprob: -11.507621765136719
    7. 'string' → logprob: -12.257621765136719
    8. ' (' → logprob: -12.382621765136719
    9. '(
' → logprob: -13.007621765136719
    10. '_strings' → logprob: -13.507621765136719

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006826670840382576
    2. 's' → logprob: -5.256826877593994
    3. ' ,' → logprob: -6.506826877593994
    4. ')' → logprob: -9.631826400756836
    5. ' s' → logprob: -11.506826400756836
    6. ',s' → logprob: -11.631826400756836
    7. '):' → logprob: -12.256826400756836
    8. 'self' → logprob: -12.631826400756836
    9. 'string' → logprob: -13.631826400756836
    10. ' ' → logprob: -13.756826400756836

Token 90: ' input' (ID: 3422)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.016138415783643723
    2. 's' → logprob: -4.141138553619385
    3. ' text' → logprob: -10.016138076782227
    4. 'text' → logprob: -10.141138076782227
    5. ' string' → logprob: -11.391138076782227
    6. 'string' → logprob: -12.141138076782227
    7. ' ' → logprob: -13.766138076782227
    8. ' input' → logprob: -14.266138076782227
    9. 'input' → logprob: -15.016138076782227
    10. ')' → logprob: -15.141138076782227

Token 91: '_str' (ID: 6182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7139358520507812
    2. '_' → logprob: -0.9639358520507812
    3. '):' → logprob: -2.4639358520507812
    4. ')' → logprob: -3.8389358520507812
    5. '_string' → logprob: -4.213935852050781
    6. '_:' → logprob: -6.213935852050781
    7. ' ):' → logprob: -6.213935852050781
    8. '_str' → logprob: -7.088935852050781
    9. ' )' → logprob: -7.588935852050781
    10. 's' → logprob: -7.713935852050781

Token 92: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022040201351046562
    2. '):' → logprob: -3.8970401287078857
    3. ')' → logprob: -6.772040367126465
    4. ':str' → logprob: -8.147040367126465
    5. ' :' → logprob: -10.022040367126465
    6. ' ):' → logprob: -11.397040367126465
    7. '):
' → logprob: -12.272040367126465
    8. ' )' → logprob: -14.397040367126465
    9. ' ' → logprob: -14.647040367126465
    10. 's' → logprob: -15.147040367126465

Token 93: ' str' (ID: 989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25041720271110535
    2. ' str' → logprob: -2.1254172325134277
    3. 'str' → logprob: -2.5004172325134277
    4. ' )' → logprob: -4.375417232513428
    5. 's' → logprob: -5.250417232513428
    6. ' s' → logprob: -7.125417232513428
    7. '   ' → logprob: -7.250417232513428
    8. ':str' → logprob: -8.50041675567627
    9. ' ' → logprob: -8.75041675567627
    10. '):' → logprob: -8.87541675567627

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06200633570551872
    2. '):' → logprob: -2.8120062351226807
    3. ':' → logprob: -10.562005996704102
    4. '):
' → logprob: -11.562005996704102
    5. ')->' → logprob: -13.187005996704102
    6. ' )' → logprob: -14.312005996704102
    7. '   ' → logprob: -15.187005996704102
    8. ' ):' → logprob: -16.0620059967041
    9. '):

' → logprob: -16.1870059967041
    10. ' ' → logprob: -16.1870059967041

Token 95: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012186899548396468
    2. '):' → logprob: -6.876218795776367
    3. ')' → logprob: -9.501218795776367
    4. ':return' → logprob: -10.251218795776367
    5. ')->' → logprob: -10.626218795776367
    6. ':
' → logprob: -10.626218795776367
    7. ' ->' → logprob: -11.751218795776367
    8. '->' → logprob: -11.876218795776367
    9. ' :' → logprob: -12.376218795776367
    10. '):
' → logprob: -13.126218795776367

Token 96: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.011854995042085648
    2. 'str' → logprob: -4.511855125427246
    3. ' ' → logprob: -8.261855125427246
    4. '"' → logprob: -8.886855125427246
    5. ' self' → logprob: -9.011855125427246
    6. ' "' → logprob: -9.511855125427246
    7. ' '' → logprob: -9.761855125427246
    8. ' ' → logprob: -9.761855125427246
    9. ' s' → logprob: -10.386855125427246
    10. 's' → logprob: -11.136855125427246

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002705145161598921
    2. ':
' → logprob: -8.50027084350586
    3. '):' → logprob: -9.75027084350586
    4. ':return' → logprob: -13.00027084350586
    5. '<|end|>' → logprob: -13.12527084350586
    6. '):
' → logprob: -13.87527084350586
    7. '():' → logprob: -14.00027084350586
    8. '       ' → logprob: -14.12527084350586
    9. ':**' → logprob: -15.12527084350586
    10. ':def' → logprob: -15.25027084350586

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007225605077110231
    2. 'return' → logprob: -7.750722408294678
    3. ' return' → logprob: -8.250722885131836
    4. '
' → logprob: -11.250722885131836
    5. '        
' → logprob: -11.750722885131836
    6. '   ' → logprob: -13.125722885131836
    7. '  
' → logprob: -13.250722885131836
    8. '```' → logprob: -13.500722885131836
    9. '{return' → logprob: -13.875722885131836
    10. '      ' → logprob: -14.250722885131836

Token 99: ' pre' (ID: 876)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2520577907562256
    2. ' return' → logprob: -1.5020577907562256
    3. '       ' → logprob: -9.002058029174805
    4. 'result' → logprob: -12.877058029174805
    5. 'self' → logprob: -13.377058029174805
    6. ' self' → logprob: -15.127058029174805
    7. ' result' → logprob: -15.377058029174805
    8. '
' → logprob: -15.752058029174805
    9. '        ' → logprob: -15.752058029174805
    10. '```' → logprob: -15.752058029174805

Token 100: 'processed' (ID: 65374)
  Prédit: 'processed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.03462497144937515
    2. '_processed' → logprob: -4.784625053405762
    3. ' processed' → logprob: -4.909625053405762
    4. '       ' → logprob: -4.909625053405762
    5. 'process' → logprob: -5.909625053405762
    6. 'rocess' → logprob: -6.409625053405762
    7. 's' → logprob: -7.034625053405762
    8. 'versed' → logprob: -7.284625053405762
    9. 'viously' → logprob: -7.409625053405762
    10. 'cess' → logprob: -7.659625053405762

Token 101: ' =' (ID: 314)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4482088088989258
    2. ' =' → logprob: -1.1982088088989258
    3. '_input' → logprob: -3.573208808898926
    4. '_' → logprob: -3.698208808898926
    5. '=' → logprob: -5.198208808898926
    6. '_string' → logprob: -7.448208808898926
    7. '_result' → logprob: -8.823208808898926
    8. 'ed' → logprob: -9.198208808898926
    9. '_text' → logprob: -9.698208808898926
    10. '_s' → logprob: -9.948208808898926

Token 102: ' self' (ID: 1051)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03766833245754242
    2. 'input' → logprob: -3.537668228149414
    3. ' self' → logprob: -4.912668228149414
    4. 'self' → logprob: -7.537668228149414
    5. '	input' → logprob: -14.662668228149414
    6. ' ' → logprob: -15.662668228149414
    7. '_input' → logprob: -15.787668228149414
    8. '<input' → logprob: -16.787668228149414
    9. '=input' → logprob: -17.037668228149414
    10. '(input' → logprob: -17.162668228149414

Token 103: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001793457195162773
    2. '.' → logprob: -8.875179290771484
    3. '.process' → logprob: -10.625179290771484
    4. ' .' → logprob: -12.625179290771484
    5. ')._' → logprob: -13.000179290771484
    6. ']._' → logprob: -13.250179290771484
    7. '.__' → logprob: -13.250179290771484
    8. '_process' → logprob: -13.500179290771484
    9. '_' → logprob: -13.750179290771484
    10. 'process' → logprob: -14.000179290771484

Token 104: 'pre' (ID: 2235)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -3.3213025744771585e-05
    2. 'process' → logprob: -11.625033378601074
    3. 'strate' → logprob: -12.250033378601074
    4. ' strategy' → logprob: -12.500033378601074
    5. 'strateg' → logprob: -12.625033378601074
    6. 'str' → logprob: -12.625033378601074
    7. 'strategie' → logprob: -12.875033378601074
    8. '.strategy' → logprob: -13.375033378601074
    9. 'pre' → logprob: -13.625033378601074
    10. '(strategy' → logprob: -14.125033378601074

Token 105: 'process' (ID: 9139)
  Prédit: 'process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0030671951826661825
    2. 'rocess' → logprob: -5.8780670166015625
    3. '_process' → logprob: -8.753067016601562
    4. 'processed' → logprob: -9.753067016601562
    5. 'cess' → logprob: -10.628067016601562
    6. ' process' → logprob: -12.128067016601562
    7. 'r' → logprob: -12.503067016601562
    8. 'p' → logprob: -12.753067016601562
    9. '_processed' → logprob: -13.253067016601562
    10. 'rocessing' → logprob: -13.378067016601562

Token 106: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003850325592793524
    2. '(' → logprob: -7.87538480758667
    3. 'input' → logprob: -13.000385284423828
    4. '(
' → logprob: -13.250385284423828
    5. ' (' → logprob: -14.750385284423828
    6. '(in' → logprob: -15.875385284423828
    7. '_input' → logprob: -16.375385284423828
    8. '(inp' → logprob: -16.625385284423828
    9. '(process' → logprob: -17.000385284423828
    10. '=input' → logprob: -17.125385284423828

Token 107: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -11.750014305114746
    3. 'str' → logprob: -12.250014305114746
    4. '_string' → logprob: -14.750014305114746
    5. ')' → logprob: -14.875014305114746
    6. ')_' → logprob: -15.250014305114746
    7. '_s' → logprob: -16.37501335144043
    8. '```' → logprob: -16.62501335144043
    9. '_STR' → logprob: -17.12501335144043
    10. '_st' → logprob: -17.75001335144043

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061977315694093704
    2. ')
' → logprob: -2.8119773864746094
    3. ')

' → logprob: -12.81197738647461
    4. ')
' → logprob: -12.81197738647461
    5. '       ' → logprob: -13.31197738647461
    6. '   ' → logprob: -14.31197738647461
    7. ' ' → logprob: -14.43697738647461
    8. ').' → logprob: -15.06197738647461
    9. ' )' → logprob: -15.43697738647461
    10. ' )
' → logprob: -15.56197738647461

Token 109: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05087698623538017
    2. '       ' → logprob: -3.050877094268799
    3. 'return' → logprob: -6.800877094268799
    4. '        
' → logprob: -7.425877094268799
    5. 'result' → logprob: -8.67587661743164
    6. 'processed' → logprob: -8.80087661743164
    7. '<|end|>' → logprob: -9.17587661743164
    8. ' return' → logprob: -9.80087661743164
    9. '
' → logprob: -10.30087661743164
    10. 'pre' → logprob: -10.92587661743164

Token 110: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.08674415200948715
    2. '       ' → logprob: -2.7117440700531006
    3. ' reversed' → logprob: -4.21174430847168
    4. 'result' → logprob: -6.58674430847168
    5. 'processed' → logprob: -7.96174430847168
    6. 'reverse' → logprob: -10.46174430847168
    7. '
' → logprob: -10.71174430847168
    8. ' result' → logprob: -10.71174430847168
    9. 'return' → logprob: -11.21174430847168
    10. ' processed' → logprob: -11.71174430847168

Token 111: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.28424155712127686
    2. ' =' → logprob: -1.7842415571212769
    3. '=' → logprob: -3.1592416763305664
    4. '_' → logprob: -3.7842416763305664
    5. '_string' → logprob: -4.409241676330566
    6. 'ed' → logprob: -6.534241676330566
    7. '_text' → logprob: -8.784241676330566
    8. 's' → logprob: -9.159241676330566
    9. 'str' → logprob: -9.284241676330566
    10. '_=' → logprob: -9.409241676330566

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364662081003189
    2. '=' → logprob: -3.408646583557129
    3. 's' → logprob: -14.533646583557129
    4. ' ' → logprob: -16.158647537231445
    5. '  ' → logprob: -16.533647537231445
    6. ' =
' → logprob: -16.658647537231445
    7. ')' → logprob: -17.033647537231445
    8. 'ed' → logprob: -17.408647537231445
    9. 'd' → logprob: -17.658647537231445
    10. ',' → logprob: -17.658647537231445

Token 113: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10022047162055969
    2. 'self' → logprob: -2.3502204418182373
    3. '	self' → logprob: -12.475220680236816
    4. '(self' → logprob: -12.725220680236816
    5. ' ' → logprob: -13.100220680236816
    6. ' 
' → logprob: -14.100220680236816
    7. ' ' → logprob: -14.225220680236816
    8. '
' → logprob: -14.350220680236816
    9. '       ' → logprob: -14.350220680236816
    10. '        ' → logprob: -14.725220680236816

Token 114: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -12.250011444091797
    3. '_' → logprob: -12.750011444091797
    4. ' .' → logprob: -14.000011444091797
    5. '   ' → logprob: -14.375011444091797
    6. '._
' → logprob: -14.625011444091797
    7. ')._' → logprob: -14.625011444091797
    8. '       ' → logprob: -15.000011444091797
    9. '
' → logprob: -15.000011444091797
    10. '.
' → logprob: -15.375011444091797

Token 115: 'strategy' (ID: 128341)
  Prédit: 'strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -4.4849443838757e-06
    2. ' strategy' → logprob: -13.125004768371582
    3. '_strategy' → logprob: -13.875004768371582
    4. 'strateg' → logprob: -14.750004768371582
    5. 'process' → logprob: -15.375004768371582
    6. ' ' → logprob: -15.625004768371582
    7. '(strategy' → logprob: -15.625004768371582
    8. '.strategy' → logprob: -15.750004768371582
    9. 'strate' → logprob: -16.000003814697266
    10. 'strategie' → logprob: -16.375003814697266

Token 116: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.011063501238822937
    2. '.' → logprob: -4.511063575744629
    3. ' .' → logprob: -11.386063575744629
    4. 'reverse' → logprob: -13.011063575744629
    5. '.process' → logprob: -14.011063575744629
    6. '.re' → logprob: -15.011063575744629
    7. ').' → logprob: -15.261063575744629
    8. ' reverse' → logprob: -15.636063575744629
    9. '[::-' → logprob: -15.886063575744629
    10. '   ' → logprob: -16.011062622070312

Token 117: '(pre' (ID: 48018)
  Prédit: '(pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pre' → logprob: -0.00026264708139933646
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -13.875262260437012
    4. ' (' → logprob: -15.000262260437012
    5. '(re' → logprob: -17.750263214111328
    6. '(previous' → logprob: -18.000263214111328
    7. '(post' → logprob: -18.250263214111328
    8. '(pref' → logprob: -18.250263214111328
    9. '(

' → logprob: -18.625263214111328
    10. '(process' → logprob: -19.250263214111328

Token 118: 'processed' (ID: 65374)
  Prédit: 'processed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.00026872646412812173
    2. 'process' → logprob: -8.875268936157227
    3. '_processed' → logprob: -10.125268936157227
    4. 'rocess' → logprob: -10.500268936157227
    5. ' processed' → logprob: -10.625268936157227
    6. 'Processed' → logprob: -11.500268936157227
    7. 'pre' → logprob: -11.750268936157227
    8. 'oc' → logprob: -12.250268936157227
    9. 'cess' → logprob: -12.250268936157227
    10. 'pro' → logprob: -12.625268936157227

Token 119: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.251962274312973
    2. ')' → logprob: -1.5019623041152954
    3. ')

' → logprob: -11.126962661743164
    4. '       ' → logprob: -11.626962661743164
    5. ')
' → logprob: -11.751962661743164
    6. ' )
' → logprob: -14.001962661743164
    7. '   ' → logprob: -15.126962661743164
    8. ')return' → logprob: -15.251962661743164
    9. ')`
' → logprob: -16.126962661743164
    10. ' )' → logprob: -16.501962661743164

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004012626595795155
    2. '
' → logprob: -5.754012584686279
    3. 'return' → logprob: -7.504012584686279
    4. '<|end|>' → logprob: -8.504013061523438
    5. ' return' → logprob: -10.004013061523438
    6. '        
' → logprob: -11.129013061523438
    7. '   ' → logprob: -11.504013061523438
    8. '	' → logprob: -13.004013061523438
    9. '  
' → logprob: -13.254013061523438
    10. '```' → logprob: -13.504013061523438

Token 121: ' post' (ID: 1926)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6136972308158875
    2. 'post' (adapté à ' post') → logprob: -0.9886972308158875
    3. '       ' → logprob: -2.6136972904205322
    4. ' post' → logprob: -4.988697052001953
    5. ' return' → logprob: -5.738697052001953
    6. 'processed' → logprob: -6.238697052001953
    7. 'result' → logprob: -6.863697052001953
    8. 'self' → logprob: -9.488697052001953
    9. 'output' → logprob: -9.738697052001953
    10. '
' → logprob: -9.738697052001953

Token 122: 'processed' (ID: 65374)
  Prédit: 'processed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.2064754217863083
    2. '_processed' → logprob: -1.7064753770828247
    3. 'process' → logprob: -5.331475257873535
    4. '_process' → logprob: -9.081475257873535
    5. 'processing' → logprob: -9.831475257873535
    6. 'rocess' → logprob: -11.206475257873535
    7. ' processed' → logprob: -11.706475257873535
    8. '_pro' → logprob: -11.956475257873535
    9. 'proces' → logprob: -12.331475257873535
    10. '_' → logprob: -12.331475257873535

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02977907471358776
    2. '=' → logprob: -3.5297789573669434
    3. ' ' → logprob: -10.654779434204102
    4. ')' → logprob: -13.779779434204102
    5. '_' → logprob: -14.154779434204102
    6. '(' → logprob: -14.404779434204102
    7. '    ' → logprob: -14.404779434204102
    8. '  ' → logprob: -14.529779434204102
    9. '<|end|>' → logprob: -14.904779434204102
    10. 'ed' → logprob: -15.279779434204102

Token 124: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3133086860179901
    2. 'self' → logprob: -1.3133087158203125
    3. '       ' → logprob: -10.188308715820312
    4. '(self' → logprob: -12.813308715820312
    5. '   ' → logprob: -13.188308715820312
    6. '	self' → logprob: -14.063308715820312
    7. '_self' → logprob: -14.063308715820312
    8. ' ' → logprob: -14.188308715820312
    9. ' ' → logprob: -14.188308715820312
    10. '    ' → logprob: -15.188308715820312

Token 125: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.013434205204248428
    2. '_' → logprob: -4.763434410095215
    3. '.' → logprob: -6.013434410095215
    4. '_processed' → logprob: -7.888434410095215
    5. '.__' → logprob: -8.638434410095215
    6. '_re' → logprob: -8.638434410095215
    7. '_process' → logprob: -8.763434410095215
    8. '__' → logprob: -8.888434410095215
    9. '_.' → logprob: -9.263434410095215
    10. '_post' → logprob: -9.638434410095215

Token 126: 'post' (ID: 3786)
  Prédit: 'post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -0.00038145645521581173
    2. 'process' → logprob: -7.8753814697265625
    3. '_post' → logprob: -14.375381469726562
    4. ' post' → logprob: -14.625381469726562
    5. 'Post' → logprob: -15.875381469726562
    6. ''post' → logprob: -16.500381469726562
    7. 'ost' → logprob: -17.000381469726562
    8. '	post' → logprob: -17.375381469726562
    9. '-post' → logprob: -18.000381469726562
    10. 'pre' → logprob: -18.250381469726562

Token 127: 'process' (ID: 9139)
  Prédit: 'process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.062126100063323975
    2. 'rocess' → logprob: -2.8121261596679688
    3. 'processed' → logprob: -9.312126159667969
    4. '_process' → logprob: -9.937126159667969
    5. ' process' → logprob: -11.937126159667969
    6. '(process' → logprob: -12.062126159667969
    7. 'rocessing' → logprob: -12.937126159667969
    8. '.process' → logprob: -13.562126159667969
    9. '	process' → logprob: -14.062126159667969
    10. 'proces' → logprob: -14.437126159667969

Token 128: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.0013541640946641564
    2. '(' → logprob: -6.751354217529297
    3. '(reverse' → logprob: -8.751354217529297
    4. '(post' → logprob: -11.126354217529297
    5. ' (' → logprob: -12.501354217529297
    6. '(return' → logprob: -13.251354217529297
    7. '(
' → logprob: -13.251354217529297
    8. 're' → logprob: -14.126354217529297
    9. '(rest' → logprob: -14.376354217529297
    10. '(res' → logprob: -14.626354217529297

Token 129: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.005498410668224096
    2. 'ers' → logprob: -5.88049840927124
    3. 'ver' → logprob: -7.38049840927124
    4. 'vers' → logprob: -7.75549840927124
    5. 'ursed' → logprob: -7.88049840927124
    6. 't' → logprob: -7.88049840927124
    7. 'verted' → logprob: -9.130498886108398
    8. 'turned' → logprob: -9.130498886108398
    9. 'v' → logprob: -9.755498886108398
    10. 're' → logprob: -9.880498886108398

Token 130: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.05958787351846695
    2. 'str' → logprob: -3.1845879554748535
    3. 'ed' → logprob: -4.1845879554748535
    4. 'processed' → logprob: -7.5595879554748535
    5. 'd' → logprob: -8.934587478637695
    6. ')' → logprob: -9.309587478637695
    7. 's' → logprob: -9.559587478637695
    8. '_' → logprob: -9.934587478637695
    9. 'Str' → logprob: -9.934587478637695
    10. 'string' → logprob: -10.184587478637695

Token 131: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0031174644827842712
    2. ')' → logprob: -5.878117561340332
    3. '       ' → logprob: -8.128117561340332
    4. ')
' → logprob: -11.503117561340332
    5. 'return' → logprob: -12.878117561340332
    6. '   ' → logprob: -13.503117561340332
    7. ')

' → logprob: -13.628117561340332
    8. ' )
' → logprob: -13.753117561340332
    9. ')return' → logprob: -14.128117561340332
    10. '
' → logprob: -15.253117561340332

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014316666638478637
    2. 'return' → logprob: -6.876431465148926
    3. '
' → logprob: -8.251431465148926
    4. ' return' → logprob: -9.251431465148926
    5. '   ' → logprob: -11.001431465148926
    6. '        
' → logprob: -11.376431465148926
    7. '	return' → logprob: -12.501431465148926
    8. '  
' → logprob: -13.251431465148926
    9. '<|end|>' → logprob: -13.376431465148926
    10. '	' → logprob: -13.751431465148926

Token 133: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04601888358592987
    2. '       ' → logprob: -3.7960188388824463
    3. ' return' → logprob: -3.7960188388824463
    4. 'post' → logprob: -10.296018600463867
    5. '
' → logprob: -11.046018600463867
    6. '   ' → logprob: -12.796018600463867
    7. ' post' → logprob: -13.171018600463867
    8. '	return' → logprob: -14.546018600463867
    9. ' ' → logprob: -14.796018600463867
    10. '        
' → logprob: -15.046018600463867

Token 134: ' post' (ID: 1926)
  Prédit: ' post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' post' → logprob: -0.011048054322600365
    2. 'post' → logprob: -4.511047840118408
    3. '(post' → logprob: -16.01104736328125
    4. ' ' → logprob: -17.13604736328125
    5. ' ' → logprob: -17.26104736328125
    6. ''post' → logprob: -17.51104736328125
    7. '	post' → logprob: -17.51104736328125
    8. '_post' → logprob: -19.01104736328125
    9. '$post' → logprob: -19.38604736328125
    10. ' poste' → logprob: -21.01104736328125

Token 135: 'processed' (ID: 65374)
  Prédit: 'processed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.0004724987084046006
    2. '_processed' → logprob: -7.750472545623779
    3. 'process' → logprob: -10.250472068786621
    4. 'rocess' → logprob: -12.625472068786621
    5. ' processed' → logprob: -13.375472068786621
    6. 'proces' → logprob: -14.000472068786621
    7. 'post' → logprob: -15.250472068786621
    8. 'processable' → logprob: -15.750472068786621
    9. 'processing' → logprob: -15.875472068786621
    10. '_process' → logprob: -16.250473022460938

Token 136: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009149820543825626
    2. '   ' → logprob: -5.63415002822876
    3. '<|end|>' → logprob: -5.75915002822876
    4. '    
' → logprob: -6.13415002822876
    5. '  
' → logprob: -9.384149551391602
    6. ' 
' → logprob: -10.134149551391602
    7. '<|end|>' → logprob: -10.759149551391602
    8. 'def' → logprob: -11.134149551391602
    9. '

' → logprob: -11.509149551391602
    10. '   
' → logprob: -11.509149551391602

Token 137: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20599724352359772
    2. '   ' → logprob: -1.7059972286224365
    3. '    
' → logprob: -5.455997467041016
    4. ' 
' → logprob: -9.455997467041016
    5. '<|end|>' → logprob: -9.955997467041016
    6. 'def' → logprob: -10.205997467041016
    7. '  
' → logprob: -10.580997467041016
    8. 'class' → logprob: -10.705997467041016
    9. '   
' → logprob: -10.830997467041016
    10. ' ' → logprob: -10.955997467041016

Token 138: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.42344415187835693
    2. '   ' → logprob: -1.298444151878357
    3. ' def' → logprob: -2.6734442710876465
    4. '
' → logprob: -5.9234442710876465
    5. '    
' → logprob: -8.048443794250488
    6. ' ' → logprob: -9.298443794250488
    7. '  ' → logprob: -9.548443794250488
    8. ' 
' → logprob: -10.048443794250488
    9. '    ' → logprob: -10.798443794250488
    10. '   
' → logprob: -12.798443794250488

Token 139: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01626063510775566
    2. '_pre' → logprob: -4.141260623931885
    3. '_' → logprob: -9.266261100769043
    4. ' ' → logprob: -9.516261100769043
    5. '   ' → logprob: -10.141261100769043
    6. ' def' → logprob: -12.766261100769043
    7. ' ' → logprob: -13.391261100769043
    8. '_post' → logprob: -13.516261100769043
    9. '_pres' → logprob: -13.516261100769043
    10. '_def' → logprob: -13.766261100769043

Token 140: 'pre' (ID: 2235)
  Prédit: 'pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.700132997939363e-05
    2. '_pre' → logprob: -11.000017166137695
    3. 'process' → logprob: -15.125017166137695
    4. 'post' → logprob: -17.375017166137695
    5. ' preprocess' → logprob: -17.375017166137695
    6. '_' → logprob: -19.875017166137695
    7. 'prep' → logprob: -19.875017166137695
    8. '	pre' → logprob: -20.375017166137695
    9. 'pr' → logprob: -20.500017166137695
    10. ' pre' → logprob: -20.625017166137695

Token 141: 'process' (ID: 9139)
  Prédit: 'process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0004330532974563539
    2. '_process' → logprob: -7.750432968139648
    3. 'pre' → logprob: -14.125432968139648
    4. ' process' → logprob: -14.250432968139648
    5. 'rocess' → logprob: -14.250432968139648
    6. 'pro' → logprob: -15.875432968139648
    7. 'def' → logprob: -16.75043296813965
    8. '_pre' → logprob: -17.00043296813965
    9. '_pro' → logprob: -17.12543296813965
    10. '	process' → logprob: -17.25043296813965

Token 142: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005299181793816388
    2. '(' → logprob: -7.875529766082764
    3. 'self' → logprob: -9.000530242919922
    4. '(
' → logprob: -11.500530242919922
    5. '<|end|>' → logprob: -11.625530242919922
    6. ' self' → logprob: -12.375530242919922
    7. '(s' → logprob: -13.375530242919922
    8. ' (' → logprob: -14.000530242919922
    9. '	self' → logprob: -15.125530242919922
    10. ' ' → logprob: -16.125530242919922

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18684348464012146
    2. 'self' → logprob: -1.9368435144424438
    3. '(self' → logprob: -3.8118433952331543
    4. '<|end|>' → logprob: -6.561843395233154
    5. ' self' → logprob: -6.811843395233154
    6. ')' → logprob: -6.811843395233154
    7. ',self' → logprob: -7.936843395233154
    8. ' ,' → logprob: -10.061843872070312
    9. ' ' → logprob: -10.061843872070312
    10. 's' → logprob: -10.311843872070312

Token 144: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5984383821487427
    2. ' self' → logprob: -1.5984383821487427
    3. 'input' → logprob: -2.223438262939453
    4. ' input' → logprob: -2.223438262939453
    5. ' s' → logprob: -4.098438262939453
    6. 's' → logprob: -4.223438262939453
    7. 'string' → logprob: -9.223438262939453
    8. 'str' → logprob: -9.598438262939453
    9. 'text' → logprob: -9.723438262939453
    10. ' string' → logprob: -10.348438262939453

Token 145: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003986144147347659
    2. '):' → logprob: -8.000398635864258
    3. ':str' → logprob: -9.750398635864258
    4. ' :' → logprob: -13.250398635864258
    5. ')' → logprob: -13.500398635864258
    6. '):
' → logprob: -14.000398635864258
    7. ' ):' → logprob: -14.125398635864258
    8. '):

' → logprob: -16.875398635864258
    9. '   ' → logprob: -17.375398635864258
    10. '  ' → logprob: -19.000398635864258

Token 146: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.4741418659687042
    2. 'str' → logprob: -0.9741418361663818
    3. ')' → logprob: -9.974142074584961
    4. 's' → logprob: -11.224142074584961
    5. '   ' → logprob: -13.599142074584961
    6. ' ' → logprob: -13.849142074584961
    7. ':str' → logprob: -14.349142074584961
    8. '	str' → logprob: -14.724142074584961
    9. ' s' → logprob: -15.099142074584961
    10. '):' → logprob: -15.349142074584961

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014287306112237275
    2. '):' → logprob: -8.875143051147461
    3. ')->' → logprob: -13.625143051147461
    4. '):
' → logprob: -14.125143051147461
    5. ' )' → logprob: -14.375143051147461
    6. ':' → logprob: -14.750143051147461
    7. '   ' → logprob: -17.12514305114746
    8. ' ' → logprob: -18.50014305114746
    9. '`)' → logprob: -18.62514305114746
    10. ')
' → logprob: -19.00014305114746

Token 148: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005443989299237728
    2. '):' → logprob: -6.005444049835205
    3. ')' → logprob: -7.130444049835205
    4. ' ->' → logprob: -7.380444049835205
    5. ')->' → logprob: -7.630444049835205
    6. ':
' → logprob: -8.005443572998047
    7. '->' → logprob: -8.005443572998047
    8. '):
' → logprob: -8.380443572998047
    9. ':str' → logprob: -9.005443572998047
    10. ' :' → logprob: -12.130443572998047

Token 149: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.09905629605054855
    2. 'str' → logprob: -2.8490562438964844
    3. ' s' → logprob: -3.4740562438964844
    4. 's' → logprob: -5.224056243896484
    5. '	str' → logprob: -11.349056243896484
    6. ' ' → logprob: -11.974056243896484
    7. ' ' → logprob: -12.724056243896484
    8. '<|end|>' → logprob: -12.911556243896484
    9. '[str' → logprob: -13.036556243896484
    10. '```' → logprob: -13.974056243896484

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035717925056815147
    2. ':
' → logprob: -5.7535719871521
    3. '):' → logprob: -8.003571510314941
    4. '):
' → logprob: -10.253571510314941
    5. '       ' → logprob: -11.878571510314941
    6. '():' → logprob: -12.003571510314941
    7. '():
' → logprob: -12.878571510314941
    8. '   ' → logprob: -13.378571510314941
    9. ',' → logprob: -13.628571510314941
    10. ':return' → logprob: -13.878571510314941

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026927247643470764
    2. 'return' → logprob: -4.151927471160889
    3. ' return' → logprob: -4.526927471160889
    4. 'raise' → logprob: -12.27692699432373
    5. ' s' → logprob: -12.40192699432373
    6. ' raise' → logprob: -13.02692699432373
    7. '   ' → logprob: -13.27692699432373
    8. 's' → logprob: -13.27692699432373
    9. '        
' → logprob: -13.90192699432373
    10. '      ' → logprob: -14.27692699432373

Token 152: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4747977554798126
    2. 'return' → logprob: -0.9747977256774902
    3. ' s' → logprob: -7.59979772567749
    4. 's' → logprob: -8.724798202514648
    5. '       ' → logprob: -10.224798202514648
    6. ' raise' → logprob: -11.474798202514648
    7. 'raise' → logprob: -11.724798202514648
    8. '        
' → logprob: -13.974798202514648
    9. '   ' → logprob: -14.474798202514648
    10. '	return' → logprob: -15.099798202514648

Token 153: ' Placeholder' (ID: 175443)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6982919573783875
    2. 'return' → logprob: -0.6982919573783875
    3. ' raise' → logprob: -5.448291778564453
    4. 'raise' → logprob: -7.823291778564453
    5. '       ' → logprob: -8.198291778564453
    6. ' pass' → logprob: -10.323291778564453
    7. '#' → logprob: -10.448291778564453
    8. '   ' → logprob: -10.823291778564453
    9. 's' → logprob: -10.823291778564453
    10. 'pass' → logprob: -10.948291778564453

Token 154: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17027148604393005
    2. 'return' → logprob: -3.045271396636963
    3. ' return' → logprob: -3.420271396636963
    4. '<|end|>' → logprob: -3.545271396636963
    5. '
' → logprob: -4.170271396636963
    6. '   ' → logprob: -4.295271396636963
    7. ' for' → logprob: -5.545271396636963
    8. ' raise' → logprob: -5.920271396636963
    9. '        
' → logprob: -6.045271396636963
    10. 's' → logprob: -6.170271396636963

Token 155: ' potential' (ID: 6451)
  Prédit: ' preprocessing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' preprocessing' → logprob: -0.3374805152416229
    2. 'pre' → logprob: -1.4624805450439453
    3. ' subclasses' → logprob: -3.7124805450439453
    4. ' any' → logprob: -4.962480545043945
    5. 'sub' → logprob: -5.087480545043945
    6. 'custom' → logprob: -5.462480545043945
    7. ' pre' → logprob: -5.587480545043945
    8. 'additional' → logprob: -6.212480545043945
    9. ' additional' → logprob: -6.337480545043945
    10. ' custom' → logprob: -6.462480545043945

Token 156: ' preprocessing' (ID: 162206)
  Prédit: ' preprocessing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preprocessing' → logprob: -0.009425606578588486
    2. 'pre' → logprob: -5.009425640106201
    3. ' customization' → logprob: -7.134425640106201
    4. ' custom' → logprob: -7.384425640106201
    5. 'custom' → logprob: -7.634425640106201
    6. ' pre' → logprob: -8.259425163269043
    7. ' override' → logprob: -8.759425163269043
    8. ' additional' → logprob: -9.259425163269043
    9. ' preprocess' → logprob: -9.509425163269043
    10. 'override' → logprob: -9.634425163269043

Token 157: ' steps' (ID: 10331)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.1734565496444702
    2. '   ' → logprob: -1.4234565496444702
    3. '
' → logprob: -1.5484565496444702
    4. '       ' → logprob: -2.6734566688537598
    5. '<|end|>' → logprob: -2.7984566688537598
    6. '        
' → logprob: -3.1734566688537598
    7. '  
' → logprob: -4.04845666885376
    8. '\n' → logprob: -4.54845666885376
    9. 's' → logprob: -4.67345666885376
    10. 'return' → logprob: -5.29845666885376

Token 158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003628461854532361
    2. '
' → logprob: -7.003628253936768
    3. ' return' → logprob: -7.003628253936768
    4. 'return' → logprob: -7.003628253936768
    5. '<|end|>' → logprob: -8.003628730773926
    6. '        
' → logprob: -8.128628730773926
    7. '   ' → logprob: -9.253628730773926
    8. '\n' → logprob: -9.753628730773926
    9. '    
' → logprob: -10.628628730773926
    10. '\' → logprob: -10.878628730773926

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008263026247732341
    2. 'return' → logprob: -7.875826358795166
    3. ' return' → logprob: -9.000825881958008
    4. '        
' → logprob: -9.125825881958008
    5. 's' → logprob: -9.625825881958008
    6. '   ' → logprob: -10.125825881958008
    7. '<|end|>' → logprob: -10.125825881958008
    8. '
' → logprob: -10.625825881958008
    9. '    
' → logprob: -11.875825881958008
    10. '\' → logprob: -12.125825881958008

Token 160: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.638188362121582
    2. 'return' (adapté à ' return') → logprob: -1.138188362121582
    3. '       ' → logprob: -1.888188362121582
    4. '   ' → logprob: -12.763188362121582
    5. '        
' → logprob: -13.638188362121582
    6. ' pass' → logprob: -14.263188362121582
    7. ' ' → logprob: -14.263188362121582
    8. '    ' → logprob: -15.388188362121582
    9. '	return' → logprob: -15.388188362121582
    10. '        ' → logprob: -15.888188362121582

Token 161: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04858918860554695
    2. 's' → logprob: -3.0485892295837402
    3. ' ' → logprob: -13.548588752746582
    4. ' ' → logprob: -14.548588752746582
    5. '	s' → logprob: -17.1735897064209
    6. '_s' → logprob: -17.6735897064209
    7. '(s' → logprob: -18.4235897064209
    8. '​' → logprob: -19.1735897064209
    9. '‌' → logprob: -20.3610897064209
    10. ' ' → logprob: -20.5485897064209

Token 162: '.strip' (ID: 40613)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29400530457496643
    2. '   ' → logprob: -1.544005274772644
    3. '    
' → logprob: -3.6690053939819336
    4. '<|end|>' → logprob: -4.794005393981934
    5. '```' → logprob: -6.044005393981934
    6. 'def' → logprob: -6.044005393981934
    7. '  
' → logprob: -6.419005393981934
    8. ' 
' → logprob: -7.669005393981934
    9. '<|end|>' → logprob: -8.919005393981934
    10. '   
' → logprob: -9.294005393981934

Token 163: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3544423381972592e-05
    2. '())' → logprob: -11.62501335144043
    3. '(' → logprob: -13.00001335144043
    4. '()
' → logprob: -14.37501335144043
    5. '()

' → logprob: -14.37501335144043
    6. '()`' → logprob: -15.00001335144043
    7. '()"' → logprob: -15.37501335144043
    8. ' ()' → logprob: -15.87501335144043
    9. '()]' → logprob: -16.50001335144043
    10. '()\' → logprob: -16.50001335144043

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014289969578385353
    2. '
' → logprob: -4.389289855957031
    3. '    
' → logprob: -6.639289855957031
    4. 'def' → logprob: -8.014289855957031
    5. '```' → logprob: -9.639289855957031
    6. '<|end|>' → logprob: -10.514289855957031
    7. '  
' → logprob: -10.764289855957031
    8. '        
' → logprob: -11.514289855957031
    9. ' 
' → logprob: -12.264289855957031
    10. '  ' → logprob: -12.764289855957031

Token 165: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10207993537187576
    2. '   ' → logprob: -2.3520798683166504
    3. ' def' → logprob: -6.35207986831665
    4. '
' → logprob: -9.477080345153809
    5. '	def' → logprob: -10.852080345153809
    6. '    
' → logprob: -10.977080345153809
    7. '```' → logprob: -11.852080345153809
    8. ' ' → logprob: -12.102080345153809
    9. '  ' → logprob: -13.227080345153809
    10. '  
' → logprob: -15.102080345153809

Token 166: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.015892064198851585
    2. '_' → logprob: -4.640892028808594
    3. '_post' → logprob: -5.140892028808594
    4. ' ' → logprob: -8.265892028808594
    5. ' _
' → logprob: -13.015892028808594
    6. ' __' → logprob: -14.140892028808594
    7. ' ' → logprob: -14.265892028808594
    8. '_
' → logprob: -14.265892028808594
    9. ' 
' → logprob: -14.515892028808594
    10. '   ' → logprob: -14.890892028808594

Token 167: 'post' (ID: 3786)
  Prédit: 'post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'post' → logprob: -3.8889261304575484e-06
    2. '_post' → logprob: -12.500003814697266
    3. ' post' → logprob: -17.375003814697266
    4. ''post' → logprob: -19.625003814697266
    5. 'process' → logprob: -20.000003814697266
    6. '$post' → logprob: -20.750003814697266
    7. '	post' → logprob: -21.000003814697266
    8. 'pre' → logprob: -21.250003814697266
    9. '-post' → logprob: -21.500003814697266
    10. 'Post' → logprob: -21.875003814697266

Token 168: 'process' (ID: 9139)
  Prédit: 'process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.005255337804555893
    2. '_process' → logprob: -5.255255222320557
    3. 'rocess' → logprob: -10.880255699157715
    4. '_post' → logprob: -14.255255699157715
    5. 'processing' → logprob: -14.505255699157715
    6. 'post' → logprob: -14.755255699157715
    7. 'pro' → logprob: -15.130255699157715
    8. '_pro' → logprob: -15.380255699157715
    9. 'proces' → logprob: -15.380255699157715
    10. 'processable' → logprob: -15.380255699157715

Token 169: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008996733813546598
    2. '(' → logprob: -7.750899791717529
    3. 'self' → logprob: -7.875899791717529
    4. ' self' → logprob: -9.750899314880371
    5. '   ' → logprob: -11.625899314880371
    6. ' (' → logprob: -11.750899314880371
    7. '(s' → logprob: -11.875899314880371
    8. '(
' → logprob: -13.000899314880371
    9. ' ' → logprob: -13.500899314880371
    10. 'def' → logprob: -13.875899314880371

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5832940936088562
    2. '(self' → logprob: -0.9582940936088562
    3. 'self' → logprob: -2.958294153213501
    4. ' self' → logprob: -5.833293914794922
    5. '<|end|>' → logprob: -6.583293914794922
    6. 's' → logprob: -6.833293914794922
    7. ')' → logprob: -7.833293914794922
    8. '(s' → logprob: -8.833293914794922
    9. ',self' → logprob: -8.833293914794922
    10. '(' → logprob: -9.208293914794922

Token 171: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08103925734758377
    2. ' self' → logprob: -2.9560391902923584
    3. 's' → logprob: -3.7060391902923584
    4. ' s' → logprob: -6.7060394287109375
    5. '   ' → logprob: -12.081039428710938
    6. ' ' → logprob: -12.331039428710938
    7. 'def' → logprob: -12.456039428710938
    8. ',' → logprob: -12.706039428710938
    9. ' def' → logprob: -14.331039428710938
    10. '(self' → logprob: -14.581039428710938

Token 172: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.35706390615087e-05
    2. ':str' → logprob: -10.875033378601074
    3. ' :' → logprob: -11.500033378601074
    4. ')' → logprob: -12.625033378601074
    5. '):' → logprob: -14.125033378601074
    6. '):
' → logprob: -16.25003433227539
    7. ' ' → logprob: -16.25003433227539
    8. '   ' → logprob: -16.37503433227539
    9. ':
' → logprob: -17.75003433227539
    10. '  ' → logprob: -18.00003433227539

Token 173: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.14271225035190582
    2. 'str' → logprob: -2.017712354660034
    3. ')' → logprob: -11.267712593078613
    4. 's' → logprob: -11.517712593078613
    5. ':str' → logprob: -12.017712593078613
    6. ' ' → logprob: -13.142712593078613
    7. '=str' → logprob: -13.517712593078613
    8. '(str' → logprob: -13.642712593078613
    9. '	str' → logprob: -13.767712593078613
    10. ':' → logprob: -14.517712593078613

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.47757811343763e-05
    2. ' )' → logprob: -10.500044822692871
    3. ':' → logprob: -11.625044822692871
    4. '):' → logprob: -12.375044822692871
    5. '   ' → logprob: -13.000044822692871
    6. '):
' → logprob: -14.000044822692871
    7. ')->' → logprob: -14.875044822692871
    8. ' ' → logprob: -14.875044822692871
    9. '       ' → logprob: -16.750043869018555
    10. ':str' → logprob: -17.000043869018555

Token 175: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.24783103168010712
    2. ')' → logprob: -2.122831106185913
    3. '->' → logprob: -2.372831106185913
    4. ')->' → logprob: -5.122830867767334
    5. ':' → logprob: -8.247831344604492
    6. '   ' → logprob: -8.622831344604492
    7. ' )' → logprob: -9.872831344604492
    8. ' ' → logprob: -9.997831344604492
    9. '       ' → logprob: -10.372831344604492
    10. '>' → logprob: -10.872831344604492

Token 176: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.47676563262939453
    2. 'str' → logprob: -0.9767656326293945
    3. 'strip' → logprob: -6.1017656326293945
    4. 's' → logprob: -8.601765632629395
    5. ' strip' → logprob: -9.351765632629395
    6. 'upper' → logprob: -10.226765632629395
    7. ' return' → logprob: -10.226765632629395
    8. ' s' → logprob: -10.226765632629395
    9. 'return' → logprob: -10.476765632629395
    10. ' upper' → logprob: -11.226765632629395

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006901144050061703
    2. ':
' → logprob: -5.506901264190674
    3. '->' → logprob: -6.631901264190674
    4. '):' → logprob: -7.756901264190674
    5. '       ' → logprob: -8.131900787353516
    6. ':return' → logprob: -8.256900787353516
    7. ' ->' → logprob: -8.381900787353516
    8. '   ' → logprob: -9.131900787353516
    9. ')' → logprob: -9.381900787353516
    10. ')->' → logprob: -10.381900787353516

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019606323912739754
    2. ' return' → logprob: -6.376960754394531
    3. 'return' → logprob: -8.376960754394531
    4. '   ' → logprob: -10.626960754394531
    5. ' s' → logprob: -14.126960754394531
    6. '      ' → logprob: -14.251960754394531
    7. '    ' → logprob: -14.626960754394531
    8. '<|end|>' → logprob: -14.876960754394531
    9. '    ' → logprob: -14.876960754394531
    10. '        ' → logprob: -15.376960754394531

Token 179: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11607179790735245
    2. 'return' → logprob: -2.2410717010498047
    3. '       ' → logprob: -5.741071701049805
    4. ' s' → logprob: -10.491071701049805
    5. '	return' → logprob: -13.116071701049805
    6. 's' → logprob: -13.491071701049805
    7. ' ' → logprob: -14.616071701049805
    8. '   ' → logprob: -14.616071701049805
    9. ' ' → logprob: -15.866071701049805
    10. '{return' → logprob: -15.866071701049805

Token 180: ' Placeholder' (ID: 175443)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1069260686635971
    2. 'return' → logprob: -2.6069259643554688
    3. '       ' → logprob: -3.8569259643554688
    4. '#' → logprob: -5.981925964355469
    5. '   ' → logprob: -6.106925964355469
    6. ' Placeholder' → logprob: -7.106925964355469
    7. ' #' → logprob: -7.356925964355469
    8. 'Placeholder' → logprob: -8.606925964355469
    9. ' ' → logprob: -10.481925964355469
    10. ' pass' → logprob: -10.606925964355469

Token 181: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012931144796311855
    2. 'for' → logprob: -4.5129313468933105
    3. '       ' → logprob: -6.3879313468933105
    4. '   ' → logprob: -8.637930870056152
    5. 'return' → logprob: -11.762930870056152
    6. ' return' → logprob: -11.887930870056152
    7. '<|end|>' → logprob: -12.637930870056152
    8. '	for' → logprob: -13.637930870056152
    9. ' ' → logprob: -14.387930870056152
    10. '        
' → logprob: -14.387930870056152

Token 182: ' potential' (ID: 6451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29361945390701294
    2. ' s' → logprob: -1.4186193943023682
    3. 'lambda' → logprob: -5.168619632720947
    4. ' lambda' → logprob: -6.293619632720947
    5. ' the' → logprob: -6.543619632720947
    6. ' potential' → logprob: -6.668619632720947
    7. 'the' → logprob: -7.168619632720947
    8. 'potential' → logprob: -7.293619632720947
    9. ' possible' → logprob: -8.793619155883789
    10. 'possible' → logprob: -8.793619155883789

Token 183: ' post' (ID: 1926)
  Prédit: ' post'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' post' → logprob: -0.3561449348926544
    2. ' processing' → logprob: -1.856144905090332
    3. ' preprocessing' → logprob: -2.356144905090332
    4. 'post' → logprob: -3.106144905090332
    5. 'processing' → logprob: -5.606144905090332
    6. ' additional' → logprob: -9.606144905090332
    7. ' cleanup' → logprob: -11.106144905090332
    8. ' cleaning' → logprob: -12.231144905090332
    9. ' adjustments' → logprob: -12.231144905090332
    10. '_post' → logprob: -12.356144905090332

Token 184: 'processing' (ID: 41376)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0003003081073984504
    2. 'processing' → logprob: -8.250300407409668
    3. '_process' → logprob: -10.500300407409668
    4. 'processed' → logprob: -12.125300407409668
    5. 'pro' → logprob: -13.375300407409668
    6. 'proces' → logprob: -13.500300407409668
    7. ' process' → logprob: -14.250300407409668
    8. 'rocess' → logprob: -14.500300407409668
    9. 'processable' → logprob: -14.625300407409668
    10. '   ' → logprob: -15.125300407409668

Token 185: ' steps' (ID: 10331)
  Prédit: ' steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.019511651247739792
    2. '       ' → logprob: -4.894511699676514
    3. '   ' → logprob: -5.769511699676514
    4. 's' → logprob: -5.769511699676514
    5. ' s' → logprob: -6.769511699676514
    6. '<|end|>' → logprob: -6.769511699676514
    7. ' return' → logprob: -6.894511699676514
    8. 'steps' → logprob: -7.394511699676514
    9. '_steps' → logprob: -7.894511699676514
    10. '        
' → logprob: -8.019511222839355

Token 186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011997995898127556
    2. '<|end|>' → logprob: -5.511998176574707
    3. ' return' → logprob: -5.761998176574707
    4. '
' → logprob: -6.136998176574707
    5. '   ' → logprob: -6.386998176574707
    6. '        
' → logprob: -7.761998176574707
    7. 'return' → logprob: -8.636998176574707
    8. '  
' → logprob: -9.511998176574707
    9. '    
' → logprob: -10.136998176574707
    10. '<|end|>' → logprob: -10.511998176574707

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06318643689155579
    2. ' return' → logprob: -2.9381864070892334
    3. '   ' → logprob: -5.4381866455078125
    4. 'return' → logprob: -5.6881866455078125
    5. '<|end|>' → logprob: -7.6881866455078125
    6. '	return' → logprob: -10.438186645507812
    7. '
' → logprob: -11.563186645507812
    8. '        
' → logprob: -11.688186645507812
    9. ' ' → logprob: -12.313186645507812
    10. '      ' → logprob: -12.688186645507812

Token 188: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5761545300483704
    2. 'return' (adapté à ' return') → logprob: -0.8261545300483704
    3. '       ' → logprob: -8.451154708862305
    4. '	return' → logprob: -14.076154708862305
    5. '   ' → logprob: -15.576154708862305
    6. ':return' → logprob: -16.201154708862305
    7. '{return' → logprob: -16.451154708862305
    8. ' ' → logprob: -16.826154708862305
    9. '        
' → logprob: -16.951154708862305
    10. 'eturn' → logprob: -16.951154708862305

Token 189: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2014141082763672
    2. 's' → logprob: -1.7014141082763672
    3. ' ' → logprob: -14.951414108276367
    4. ' ' → logprob: -15.451414108276367
    5. '	s' → logprob: -15.826414108276367
    6. '(s' → logprob: -16.326414108276367
    7. '_s' → logprob: -16.326414108276367
    8. '​' → logprob: -17.951414108276367
    9. ''s' → logprob: -18.388914108276367
    10. '`' → logprob: -18.451414108276367

Token 190: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.09586118906736374
    2. 'class' → logprob: -2.9708611965179443
    3. '
' → logprob: -3.2208611965179443
    4. '


' → logprob: -9.095861434936523
    5. '<|end|>' → logprob: -9.845861434936523
    6. ' class' → logprob: -10.845861434936523
    7. '
    
' → logprob: -11.720861434936523
    8. '
' → logprob: -11.845861434936523
    9. '\n' → logprob: -11.970861434936523
    10. '<class' → logprob: -12.095861434936523

Token 191: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00030388421146199107
    2. '
' → logprob: -8.500304222106934
    3. '<|end|>' → logprob: -9.375304222106934
    4. '```' → logprob: -11.750304222106934
    5. ' class' → logprob: -12.500304222106934
    6. '<class' → logprob: -13.125304222106934
    7. '"class' → logprob: -14.500304222106934
    8. '<|end|>' → logprob: -14.750304222106934
    9. '

' → logprob: -15.375304222106934
    10. '  
' → logprob: -15.750304222106934

Token 192: ' Input' (ID: 10090)
  Prédit: ' Advanced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Advanced' → logprob: -1.0893200635910034
    2. ' Upper' → logprob: -1.8393200635910034
    3. ' Concrete' → logprob: -2.464320182800293
    4. 'Upper' → logprob: -2.464320182800293
    5. ' Capital' → logprob: -2.464320182800293
    6. ' Custom' → logprob: -2.589320182800293
    7. 'Advanced' → logprob: -2.839320182800293
    8. ' String' → logprob: -3.714320182800293
    9. 'Concrete' → logprob: -3.964320182800293
    10. ' Simple' → logprob: -4.464320182800293

Token 193: 'Output' (ID: 6310)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.5008546710014343
    2. 'String' → logprob: -1.250854730606079
    3. 'Normalizer' → logprob: -2.750854730606079
    4. 'Handler' → logprob: -4.5008544921875
    5. 'Validator' → logprob: -4.5008544921875
    6. 'San' → logprob: -5.2508544921875
    7. 'Output' → logprob: -6.0008544921875
    8. 'Cleaner' → logprob: -6.0008544921875
    9. 'Re' → logprob: -6.6258544921875
    10. 'Transformer' → logprob: -6.6258544921875

Token 194: 'Handler' (ID: 4139)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.023073092103004456
    2. 'Handler' → logprob: -3.898073196411133
    3. 'String' → logprob: -6.773073196411133
    4. 'Manager' → logprob: -6.898073196411133
    5. 'Strategy' → logprob: -8.523073196411133
    6. 'Pair' → logprob: -10.148073196411133
    7. 'Interface' → logprob: -10.773073196411133
    8. 'Transformer' → logprob: -10.898073196411133
    9. 'Wrapper' → logprob: -11.273073196411133
    10. 'Controller' → logprob: -11.773073196411133

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024964531883597374
    2. ':
' → logprob: -3.7749645709991455
    3. '(Abstract' → logprob: -6.399964332580566
    4. ' :' → logprob: -10.149964332580566
    5. '<Abstract' → logprob: -12.399964332580566
    6. ' :
' → logprob: -12.649964332580566
    7. '(' → logprob: -13.024964332580566
    8. ':def' → logprob: -13.524964332580566
    9. ':

' → logprob: -13.649964332580566
    10. '_Abstract' → logprob: -13.899964332580566

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002903897315263748
    2. ' def' → logprob: -5.877903938293457
    3. 'def' → logprob: -9.252903938293457
    4. '	def' → logprob: -13.627903938293457
    5. ':' → logprob: -14.127903938293457
    6. '    
' → logprob: -14.627903938293457
    7. '    ' → logprob: -15.752903938293457
    8. ',' → logprob: -15.752903938293457
    9. 'class' → logprob: -16.00290298461914
    10. '
' → logprob: -16.50290298461914

Token 197: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38707804679870605
    2. 'def' (adapté à ' def') → logprob: -1.137078046798706
    3. '   ' → logprob: -8.512078285217285
    4. 'import' → logprob: -12.887078285217285
    5. 'class' → logprob: -12.887078285217285
    6. 'de' → logprob: -15.387078285217285
    7. ' ' → logprob: -15.762078285217285
    8. '	def' → logprob: -15.762078285217285
    9. ' import' → logprob: -16.13707733154297
    10. ' class' → logprob: -16.26207733154297

Token 198: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.37463685870170593
    2. ' def' → logprob: -1.2496368885040283
    3. ' process' → logprob: -4.124636650085449
    4. ' handle' → logprob: -5.499636650085449
    5. ' init' → logprob: -6.249636650085449
    6. 'def' → logprob: -6.749636650085449
    7. '__' → logprob: -7.124636650085449
    8. ' run' → logprob: -7.874636650085449
    9. ' write' → logprob: -8.37463665008545
    10. ' _' → logprob: -8.49963665008545

Token 199: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.935296834039036e-06
    2. 'in' → logprob: -13.37500286102295
    3. 'ini' → logprob: -14.00000286102295
    4. 'new' → logprob: -16.000003814697266
    5. 'call' → logprob: -16.250003814697266
    6. 'name' → logprob: -16.750003814697266
    7. 'def' → logprob: -16.875003814697266
    8. ' init' → logprob: -17.375003814697266
    9. 'int' → logprob: -17.750003814697266
    10. 'inite' → logprob: -17.750003814697266

Token 200: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012880421243607998
    2. '(self' → logprob: -4.387880325317383
    3. '__' → logprob: -8.637880325317383
    4. '(' → logprob: -9.012880325317383
    5. '__(
' → logprob: -9.762880325317383
    6. ' (' → logprob: -12.012880325317383
    7. '_(' → logprob: -12.637880325317383
    8. 'self' → logprob: -13.387880325317383
    9. '__((' → logprob: -13.512880325317383
    10. ',' → logprob: -14.637880325317383

Token 201: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005624461336992681
    2. ' self' → logprob: -8.25056266784668
    3. ')' → logprob: -8.37556266784668
    4. '):
' → logprob: -9.62556266784668
    5. '
' → logprob: -13.62556266784668
    6. 'strategy' → logprob: -14.00056266784668
    7. '):' → logprob: -14.25056266784668
    8. 'input' → logprob: -14.62556266784668
    9. ',' → logprob: -14.62556266784668
    10. ')(' → logprob: -15.00056266784668

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06288323551416397
    2. '):' → logprob: -2.812883138656616
    3. '):
' → logprob: -7.312883377075195
    4. ')' → logprob: -9.437883377075195
    5. ' ):' → logprob: -9.562883377075195
    6. ' ,' → logprob: -10.687883377075195
    7. ',input' → logprob: -10.687883377075195
    8. 'self' → logprob: -11.312883377075195
    9. ',file' → logprob: -12.062883377075195
    10. '   ' → logprob: -12.187883377075195

Token 203: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.10898806154727936
    2. ' processor' → logprob: -2.358988046646118
    3. 'input' → logprob: -5.233988285064697
    4. 'string' → logprob: -6.483988285064697
    5. 'strategy' → logprob: -7.358988285064697
    6. ' input' → logprob: -7.483988285064697
    7. ' strategy' → logprob: -8.358987808227539
    8. ' string' → logprob: -9.233987808227539
    9. ')' → logprob: -9.358987808227539
    10. 'reader' → logprob: -9.483987808227539

Token 204: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6406404376029968
    2. '):' → logprob: -0.7656404376029968
    3. ' ):' → logprob: -5.3906402587890625
    4. ')' → logprob: -6.3906402587890625
    5. '):
' → logprob: -6.7656402587890625
    6. ' :' → logprob: -7.5156402587890625
    7. ' )' → logprob: -11.265640258789062
    8. ',' → logprob: -11.265640258789062
    9. ' ' → logprob: -11.390640258789062
    10. '=None' → logprob: -11.640640258789062

Token 205: ' Abstract' (ID: 17413)
  Prédit: 'Abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Abstract' → logprob: -0.4740821421146393
    2. ' Abstract' → logprob: -0.9740821123123169
    3. '<Abstract' → logprob: -12.599081993103027
    4. '(Abstract' → logprob: -13.724081993103027
    5. '_Abstract' → logprob: -15.099081993103027
    6. ' ' → logprob: -15.599081993103027
    7. ' abstract' → logprob: -16.224082946777344
    8. '   ' → logprob: -17.349082946777344
    9. 'abstract' → logprob: -17.349082946777344
    10. '  ' → logprob: -17.599082946777344

Token 206: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -2.816093228830141e-06
    2. 'string' → logprob: -13.12500286102295
    3. 'St' → logprob: -15.50000286102295
    4. 'Str' → logprob: -15.87500286102295
    5. ')' → logprob: -16.000001907348633
    6. '_string' → logprob: -16.375001907348633
    7. ' String' → logprob: -16.500001907348633
    8. 'Input' → logprob: -16.750001907348633
    9. '_String' → logprob: -16.750001907348633
    10. 'Strings' → logprob: -17.000001907348633

Token 207: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -4.320199877838604e-07
    2. 'processor' → logprob: -15.375
    3. 'Process' → logprob: -16.375
    4. ' Processor' → logprob: -17.25
    5. ' processor' → logprob: -17.875
    6. '_processor' → logprob: -18.125
    7. 'Proces' → logprob: -20.75
    8. 'rocess' → logprob: -21.0
    9. 'Processing' → logprob: -23.0
    10. 'Processed' → logprob: -23.5

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05502321571111679
    2. '):
' → logprob: -2.930023193359375
    3. ',' → logprob: -9.555023193359375
    4. ')' → logprob: -9.680023193359375
    5. '):
' → logprob: -12.305023193359375
    6. ' ):' → logprob: -13.930023193359375
    7. '   ' → logprob: -14.180023193359375
    8. ':' → logprob: -14.305023193359375
    9. '):

' → logprob: -14.555023193359375
    10. ' ' → logprob: -15.805023193359375

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006621609791181982
    2. 'self' → logprob: -7.750662326812744
    3. ' self' → logprob: -8.625661849975586
    4. '   ' → logprob: -10.000661849975586
    5. ',' → logprob: -13.250661849975586
    6. '	self' → logprob: -13.375661849975586
    7. 'def' → logprob: -14.125661849975586
    8. '<|end|>' → logprob: -14.250661849975586
    9. ' ' → logprob: -14.500661849975586
    10. '):
' → logprob: -15.250661849975586

Token 210: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.038080740720033646
    2. ' self' → logprob: -3.2880806922912598
    3. '       ' → logprob: -10.163081169128418
    4. '   ' → logprob: -14.663081169128418
    5. '	self' → logprob: -15.538081169128418
    6. '(self' → logprob: -17.9130802154541
    7. ' ' → logprob: -18.9130802154541
    8. ' ' → logprob: -18.9130802154541
    9. '[self' → logprob: -19.7880802154541
    10. 'def' → logprob: -20.0380802154541

Token 211: '._' (ID: 2697)
  Prédit: '.processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.processor' → logprob: -0.20057831704616547
    2. '.' → logprob: -2.200578212738037
    3. '._' → logprob: -2.700578212738037
    4. '.process' → logprob: -5.700578212738037
    5. '_processor' → logprob: -8.450578689575195
    6. ' .' → logprob: -9.575578689575195
    7. '.pro' → logprob: -9.825578689575195
    8. 'processor' → logprob: -9.950578689575195
    9. '   ' → logprob: -10.450578689575195
    10. ' processor' → logprob: -10.950578689575195

Token 212: 'processor' (ID: 55600)
  Prédit: 'processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -1.3856492842023727e-06
    2. '_processor' → logprob: -13.875000953674316
    3. 'process' → logprob: -15.250000953674316
    4. '.processor' → logprob: -16.000001907348633
    5. ' processor' → logprob: -16.750001907348633
    6. 'proc' → logprob: -18.375001907348633
    7. 'producer' → logprob: -18.875001907348633
    8. 'printer' → logprob: -19.000001907348633
    9. 'processors' → logprob: -19.250001907348633
    10. 'processing' → logprob: -20.000001907348633

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022492945194244
    2. ' =' → logprob: -1.9102249145507812
    3. ' ' → logprob: -15.160224914550781
    4. ' =
' → logprob: -16.03522491455078
    5. '=
' → logprob: -16.28522491455078
    6. '   ' → logprob: -16.28522491455078
    7. ')' → logprob: -17.03522491455078
    8. '=

' → logprob: -17.16022491455078
    9. '_processor' → logprob: -17.28522491455078
    10. '(process' → logprob: -18.28522491455078

Token 214: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.038043100386857986
    2. ' processor' → logprob: -3.2880430221557617
    3. 'process' → logprob: -14.038043022155762
    4. '.processor' → logprob: -14.663043022155762
    5. '_processor' → logprob: -15.413043022155762
    6. 'producer' → logprob: -15.913043022155762
    7. '(process' → logprob: -17.038043975830078
    8. 'processors' → logprob: -17.538043975830078
    9. '
' → logprob: -18.038043975830078
    10. 'processing' → logprob: -18.413043975830078

Token 215: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1299004852771759
    2. '   ' → logprob: -2.1299004554748535
    3. '    
' → logprob: -6.1299004554748535
    4. '<|end|>' → logprob: -7.5049004554748535
    5. 'def' → logprob: -9.629900932312012
    6. '

' → logprob: -9.754900932312012
    7. '  
' → logprob: -10.254900932312012
    8. '<|end|>' → logprob: -10.754900932312012
    9. ' 
' → logprob: -11.129900932312012
    10. ' def' → logprob: -11.129900932312012

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12386014312505722
    2. 'def' → logprob: -2.2488601207733154
    3. ' def' → logprob: -4.6238603591918945
    4. '
' → logprob: -6.8738603591918945
    5. '    
' → logprob: -9.998860359191895
    6. '	def' → logprob: -10.123860359191895
    7. '<|end|>' → logprob: -11.248860359191895
    8. ' ' → logprob: -11.373860359191895
    9. '```' → logprob: -11.873860359191895
    10. '  ' → logprob: -13.373860359191895

Token 217: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7848862373502925e-05
    2. ' def' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.125027656555176
    4. 'de' → logprob: -17.625028610229492
    5. 'd' → logprob: -18.500028610229492
    6. 'import' → logprob: -20.375028610229492
    7. '	def' → logprob: -20.500028610229492
    8. 'class' → logprob: -20.625028610229492
    9. ' ' → logprob: -21.000028610229492
    10. '
' → logprob: -21.125028610229492

Token 218: ' read' (ID: 1729)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.3941543996334076
    2. ' handle' → logprob: -1.51915442943573
    3. 'process' → logprob: -3.2691543102264404
    4. ' process' → logprob: -3.6441543102264404
    5. 'run' → logprob: -4.1441545486450195
    6. ' run' → logprob: -4.1441545486450195
    7. 'read' → logprob: -4.8941545486450195
    8. ' read' → logprob: -5.7691545486450195
    9. 'def' → logprob: -8.89415454864502
    10. ' get' → logprob: -9.89415454864502

Token 219: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8947102427482605
    2. '_input' → logprob: -1.2697103023529053
    3. '_line' → logprob: -1.2697103023529053
    4. '_' → logprob: -4.269710063934326
    5. '_and' → logprob: -4.894710063934326
    6. '()' → logprob: -5.894710063934326
    7. '(' → logprob: -6.144710063934326
    8. 'self' → logprob: -6.769710063934326
    9. '_string' → logprob: -7.394710063934326
    10. 'line' → logprob: -7.894710063934326

Token 220: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00034297199454158545
    2. '(' → logprob: -8.375343322753906
    3. 'self' → logprob: -9.375343322753906
    4. '()' → logprob: -10.625343322753906
    5. ' (' → logprob: -13.750343322753906
    6. '(s' → logprob: -15.000343322753906
    7. '(
' → logprob: -15.000343322753906
    8. ' self' → logprob: -15.125343322753906
    9. 'and' → logprob: -15.500343322753906
    10. 's' → logprob: -15.875343322753906

Token 221: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19247670471668243
    2. ')' → logprob: -1.942476749420166
    3. '):
' → logprob: -3.942476749420166
    4. ',' → logprob: -4.567476749420166
    5. ' ):' → logprob: -6.942476749420166
    6. 'self' → logprob: -7.317476749420166
    7. ' )' → logprob: -8.942476272583008
    8. '):

' → logprob: -9.567476272583008
    9. '):
' → logprob: -10.317476272583008
    10. '(self' → logprob: -11.067476272583008

Token 222: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001749351795297116
    2. '(' → logprob: -9.375174522399902
    3. 'self' → logprob: -10.000174522399902
    4. '():' → logprob: -10.500174522399902
    5. '()' → logprob: -11.875174522399902
    6. '():
' → logprob: -12.375174522399902
    7. '(
' → logprob: -13.750174522399902
    8. ' ->' → logprob: -13.875174522399902
    9. ' (' → logprob: -14.125174522399902
    10. '->' → logprob: -14.500174522399902

Token 223: ' str' (ID: 989)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20144355297088623
    2. ' input' → logprob: -1.7014435529708862
    3. 'return' → logprob: -10.701443672180176
    4. 'self' → logprob: -12.701443672180176
    5. ' return' → logprob: -13.201443672180176
    6. '(input' → logprob: -14.701443672180176
    7. '=input' → logprob: -14.701443672180176
    8. ' self' → logprob: -14.951443672180176
    9. 'str' → logprob: -15.076443672180176
    10. ' ' → logprob: -15.576443672180176

Token 224: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.963943600654602
    2. '():' → logprob: -1.213943600654602
    3. ':' → logprob: -1.588943600654602
    4. '():
' → logprob: -3.3389434814453125
    5. '()' → logprob: -3.4639434814453125
    6. '       ' → logprob: -4.2139434814453125
    7. ':
' → logprob: -4.5889434814453125
    8. '(' → logprob: -4.5889434814453125
    9. 'self' → logprob: -5.2139434814453125
    10. '   ' → logprob: -5.3389434814453125

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1970270425081253
    2. 'return' → logprob: -2.0720269680023193
    3. ' return' → logprob: -3.1970269680023193
    4. 'input' → logprob: -4.572027206420898
    5. ' input' → logprob: -6.447027206420898
    6. 'user' → logprob: -10.572027206420898
    7. '   ' → logprob: -11.447027206420898
    8. 'try' → logprob: -11.572027206420898
    9. ' user' → logprob: -11.697027206420898
    10. 'text' → logprob: -12.197027206420898

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009902349673211575
    2. 'input' → logprob: -5.009902477264404
    3. ' return' → logprob: -5.759902477264404
    4. ' input' → logprob: -10.509902000427246
    5. 'user' → logprob: -13.134902000427246
    6. 's' → logprob: -15.384902000427246
    7. '   ' → logprob: -15.759902000427246
    8. 'line' → logprob: -15.759902000427246
    9. 'inp' → logprob: -15.759902000427246
    10. 'text' → logprob: -15.884902000427246

Token 227: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007099286303855479
    2. ' input' → logprob: -7.2507100105285645
    3. '(input' → logprob: -19.125709533691406
    4. '	input' → logprob: -20.375709533691406
    5. '<input' → logprob: -20.375709533691406
    6. '=input' → logprob: -20.375709533691406
    7. 'in' → logprob: -21.875709533691406
    8. '```' → logprob: -22.000709533691406
    9. 'inp' → logprob: -22.125709533691406
    10. '
' → logprob: -22.750709533691406

Token 228: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005171707598492503
    2. '(' → logprob: -7.75051736831665
    3. '()
' → logprob: -9.750516891479492
    4. '().' → logprob: -11.750516891479492
    5. '()

' → logprob: -12.000516891479492
    6. '("' → logprob: -12.250516891479492
    7. ' ()' → logprob: -12.250516891479492
    8. '("")' → logprob: -12.875516891479492
    9. '()>' → logprob: -14.250516891479492
    10. '()`' → logprob: -14.875516891479492

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10279730707406998
    2. 'def' → logprob: -2.727797269821167
    3. '<|end|>' → logprob: -3.852797269821167
    4. '
' → logprob: -4.727797508239746
    5. '    
' → logprob: -7.352797508239746
    6. ' def' → logprob: -7.352797508239746
    7. '```' → logprob: -8.102797508239746
    8. '<|end|>' → logprob: -8.227797508239746
    9. ' ' → logprob: -9.102797508239746
    10. '  
' → logprob: -9.227797508239746

Token 230: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.26566198468208313
    2. '   ' → logprob: -1.6406619548797607
    3. '
' → logprob: -3.3906619548797607
    4. ' def' → logprob: -5.64066219329834
    5. '<|end|>' → logprob: -6.76566219329834
    6. '    
' → logprob: -7.76566219329834
    7. '```' → logprob: -7.76566219329834
    8. '	def' → logprob: -9.51566219329834
    9. '

' → logprob: -10.26566219329834
    10. '  
' → logprob: -10.39066219329834

Token 231: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.2997418940067291
    2. ' write' → logprob: -1.9247418642044067
    3. 'process' → logprob: -2.6747419834136963
    4. ' process' → logprob: -3.6747419834136963
    5. 'handle' → logprob: -5.424741744995117
    6. 'run' → logprob: -5.549741744995117
    7. 'display' → logprob: -5.924741744995117
    8. ' output' → logprob: -6.174741744995117
    9. 'output' → logprob: -6.424741744995117
    10. ' display' → logprob: -6.549741744995117

Token 232: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.005470321048051119
    2. '_' → logprob: -5.755470275878906
    3. '(' → logprob: -6.255470275878906
    4. '(output' → logprob: -9.380470275878906
    5. '_input' → logprob: -9.505470275878906
    6. '_out' → logprob: -9.630470275878906
    7. 'output' → logprob: -10.130470275878906
    8. '(_' → logprob: -10.255470275878906
    9. '(self' → logprob: -10.505470275878906
    10. '_response' → logprob: -11.380470275878906

Token 233: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008531087078154087
    2. '(' → logprob: -7.500853061676025
    3. ' (' → logprob: -8.125853538513184
    4. '(s' → logprob: -12.500853538513184
    5. ',' → logprob: -15.000853538513184
    6. '(output' → logprob: -16.375852584838867
    7. '   ' → logprob: -16.500852584838867
    8. '(
' → logprob: -17.500852584838867
    9. ' self' → logprob: -17.500852584838867
    10. 'self' → logprob: -17.625852584838867

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029601677670143545
    2. ')' → logprob: -8.750295639038086
    3. 'self' → logprob: -9.750295639038086
    4. ' ,' → logprob: -10.125295639038086
    5. '(self' → logprob: -10.250295639038086
    6. '   ' → logprob: -13.500295639038086
    7. ',self' → logprob: -13.750295639038086
    8. ' self' → logprob: -15.000295639038086
    9. '       ' → logprob: -15.000295639038086
    10. ',s' → logprob: -15.375295639038086

Token 235: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.06866687536239624
    2. 'output' → logprob: -2.818666934967041
    3. ' s' → logprob: -5.193666934967041
    4. 's' → logprob: -7.443666934967041
    5. ' result' → logprob: -7.693666934967041
    6. 'result' → logprob: -10.443666458129883
    7. ' text' → logprob: -11.068666458129883
    8. ' processed' → logprob: -11.818666458129883
    9. ')' → logprob: -11.943666458129883
    10. '(output' → logprob: -12.068666458129883

Token 236: '_str' (ID: 6182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044853273779153824
    2. '):' → logprob: -3.4198532104492188
    3. ')' → logprob: -5.169853210449219
    4. ':str' → logprob: -5.794853210449219
    5. '   ' → logprob: -6.544853210449219
    6. '):
' → logprob: -8.169853210449219
    7. 'output' → logprob: -8.669853210449219
    8. '_str' → logprob: -8.669853210449219
    9. ',' → logprob: -9.419853210449219
    10. 's' → logprob: -9.794853210449219

Token 237: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29128706455230713
    2. '):' → logprob: -1.9162870645523071
    3. ')' → logprob: -2.2912869453430176
    4. ':str' → logprob: -6.041286945343018
    5. ' ):' → logprob: -6.791286945343018
    6. ' )' → logprob: -7.291286945343018
    7. '):
' → logprob: -8.916287422180176
    8. ' :' → logprob: -9.916287422180176
    9. ',' → logprob: -10.916287422180176
    10. '   ' → logprob: -11.166287422180176

Token 238: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.3460374176502228
    2. 'str' → logprob: -1.4710373878479004
    3. ')' → logprob: -3.4710373878479004
    4. 'self' → logprob: -3.9710373878479004
    5. 'output' → logprob: -5.5960373878479
    6. '   ' → logprob: -5.8460373878479
    7. ' self' → logprob: -6.2210373878479
    8. 's' → logprob: -6.9710373878479
    9. ' output' → logprob: -6.9710373878479
    10. ' )' → logprob: -7.2210373878479

Token 239: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005284038372337818
    2. '):' → logprob: -5.255283832550049
    3. '):
' → logprob: -10.130284309387207
    4. ' )' → logprob: -12.380284309387207
    5. ')->' → logprob: -12.505284309387207
    6. '   ' → logprob: -13.130284309387207
    7. ':' → logprob: -15.505284309387207
    8. ' ):' → logprob: -15.880284309387207
    9. '):
' → logprob: -16.13028335571289
    10. '):

' → logprob: -16.88028335571289

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002829723060131073
    2. ' print' → logprob: -6.502829551696777
    3. 'print' → logprob: -6.627829551696777
    4. '   ' → logprob: -12.752829551696777
    5. '```' → logprob: -15.877829551696777
    6. '      ' → logprob: -16.252830505371094
    7. ',' → logprob: -16.627830505371094
    8. '	print' → logprob: -16.627830505371094
    9. '           ' → logprob: -17.002830505371094
    10. '.print' → logprob: -17.002830505371094

Token 241: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004309076175559312
    2. ' print' → logprob: -7.750431060791016
    3. '       ' → logprob: -15.500431060791016
    4. '   ' → logprob: -16.750431060791016
    5. '```' → logprob: -20.375431060791016
    6. 'pr' → logprob: -21.125431060791016
    7. 'prin' → logprob: -21.750431060791016
    8. '	print' → logprob: -21.875431060791016
    9. 'pass' → logprob: -23.500431060791016
    10. '
' → logprob: -23.625431060791016

Token 242: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.0003550079127307981
    2. '(' → logprob: -8.125354766845703
    3. 'output' → logprob: -9.750354766845703
    4. ' (' → logprob: -15.000354766845703
    5. '(
' → logprob: -15.375354766845703
    6. '()' → logprob: -16.750354766845703
    7. ' output' → logprob: -17.000354766845703
    8. '(f' → logprob: -17.500354766845703
    9. ')' → logprob: -17.625354766845703
    10. '$output' → logprob: -17.875354766845703

Token 243: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.375000953674316
    3. '_' → logprob: -14.750000953674316
    4. 'str' → logprob: -14.875000953674316
    5. '_s' → logprob: -17.125001907348633
    6. '_string' → logprob: -18.125001907348633
    7. '_)' → logprob: -18.500001907348633
    8. '_STR' → logprob: -19.000001907348633
    9. '_Str' → logprob: -19.000001907348633
    10. ')_' → logprob: -19.125001907348633

Token 244: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.500001907348633
    4. '<|end|>' → logprob: -16.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '`)' → logprob: -18.000001907348633
    7. '")' → logprob: -18.125001907348633
    8. '')' → logprob: -18.625001907348633
    9. '))' → logprob: -18.875001907348633
    10. '       ' → logprob: -19.000001907348633

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006765818223357201
    2. 'def' → logprob: -5.131765842437744
    3. '    
' → logprob: -7.881765842437744
    4. 'class' → logprob: -8.381765365600586
    5. '
' → logprob: -8.631765365600586
    6. '<|end|>' → logprob: -10.756765365600586
    7. '```' → logprob: -11.006765365600586
    8. '        
' → logprob: -12.756765365600586
    9. '<|end|>' → logprob: -12.756765365600586
    10. '  
' → logprob: -13.006765365600586

Token 246: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003721576649695635
    2. '   ' → logprob: -5.878721714019775
    3. ' def' → logprob: -7.003721714019775
    4. '
' → logprob: -12.753721237182617
    5. '    
' → logprob: -13.003721237182617
    6. '	def' → logprob: -13.253721237182617
    7. ' ' → logprob: -14.628721237182617
    8. '  
' → logprob: -16.003721237182617
    9. '```' → logprob: -16.003721237182617
    10. 'class' → logprob: -16.253721237182617

Token 247: ' execute' (ID: 15792)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.40533557534217834
    2. 'run' → logprob: -1.280335545539856
    3. ' process' → logprob: -3.5303356647491455
    4. 'process' → logprob: -4.030335426330566
    5. ' def' → logprob: -5.530335426330566
    6. 'def' → logprob: -5.655335426330566
    7. ' handle' → logprob: -8.405335426330566
    8. ' execute' → logprob: -8.530335426330566
    9. 'handle' → logprob: -8.655335426330566
    10. 'execute' → logprob: -8.780335426330566

Token 248: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005364707321859896
    2. '(' → logprob: -7.7505364418029785
    3. '   ' → logprob: -9.875536918640137
    4. 'self' → logprob: -10.000536918640137
    5. 'def' → logprob: -12.875536918640137
    6. '(
' → logprob: -13.250536918640137
    7. '()' → logprob: -13.250536918640137
    8. ' (' → logprob: -14.000536918640137
    9. '       ' → logprob: -14.125536918640137
    10. ' self' → logprob: -14.375536918640137

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020710403099656105
    2. '):
' → logprob: -3.8957104682922363
    3. ')' → logprob: -8.895709991455078
    4. ' ):' → logprob: -10.895709991455078
    5. 'self' → logprob: -11.770709991455078
    6. '):
' → logprob: -13.645709991455078
    7. '   ' → logprob: -13.770709991455078
    8. '():' → logprob: -14.145709991455078
    9. '):

' → logprob: -14.520709991455078
    10. ',' → logprob: -15.145709991455078

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05994921922683716
    2. 'input' → logprob: -2.9349491596221924
    3. ' input' → logprob: -5.3099493980407715
    4. '(input' → logprob: -10.559948921203613
    5. '   ' → logprob: -10.809948921203613
    6. 'user' → logprob: -10.934948921203613
    7. '```' → logprob: -11.434948921203613
    8. 'self' → logprob: -11.934948921203613
    9. ' user' → logprob: -12.059948921203613
    10. '_input' → logprob: -12.684948921203613

Token 251: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.20603099465370178
    2. 'user' → logprob: -1.7060309648513794
    3. ' input' → logprob: -6.08103084564209
    4. ' user' → logprob: -6.20603084564209
    5. 'inp' → logprob: -8.83103084564209
    6. 'raw' → logprob: -9.33103084564209
    7. '       ' → logprob: -10.08103084564209
    8. ' inp' → logprob: -11.08103084564209
    9. 'in' → logprob: -12.20603084564209
    10. 'try' → logprob: -12.95603084564209

Token 252: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00026407750556245446
    2. '_' → logprob: -8.250264167785645
    3. '_string' → logprob: -13.000264167785645
    4. '_s' → logprob: -14.875264167785645
    5. '_text' → logprob: -16.625263214111328
    6. 'str' → logprob: -16.875263214111328
    7. '_data' → logprob: -17.875263214111328
    8. '_line' → logprob: -20.000263214111328
    9. '_STR' → logprob: -20.125263214111328
    10. 's' → logprob: -20.250263214111328

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245826363563538
    2. '=' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.023245811462402
    4. '_' → logprob: -18.14824676513672
    5. ' ' → logprob: -18.14824676513672
    6. ':' → logprob: -18.52324676513672
    7. ')' → logprob: -19.02324676513672
    8. ' =
' → logprob: -19.77324676513672
    9. '   ' → logprob: -19.89824676513672
    10. '	' → logprob: -20.02324676513672

Token 254: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005233763717114925
    2. ' self' → logprob: -5.2552337646484375
    3. '(self' → logprob: -18.380233764648438
    4. '       ' → logprob: -18.505233764648438
    5. '	self' → logprob: -19.380233764648438
    6. 'Self' → logprob: -19.380233764648438
    7. '   ' → logprob: -19.505233764648438
    8. '=self' → logprob: -19.880233764648438
    9. 's' → logprob: -20.380233764648438
    10. 'input' → logprob: -20.505233764648438

Token 255: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.3869973421096802
    2. '._' → logprob: -1.1369973421096802
    3. '.' → logprob: -9.13699722290039
    4. ' .' → logprob: -11.38699722290039
    5. 'read' → logprob: -12.01199722290039
    6. '_read' → logprob: -14.38699722290039
    7. '.readline' → logprob: -15.76199722290039
    8. '_.' → logprob: -16.13699722290039
    9. '.\' → logprob: -16.76199722290039
    10. '.READ' → logprob: -16.88699722290039

Token 256: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -13.000003814697266
    3. ' _' → logprob: -13.875003814697266
    4. '()' → logprob: -15.250003814697266
    5. '_str' → logprob: -15.750003814697266
    6. '_output' → logprob: -16.125003814697266
    7. '_in' → logprob: -16.125003814697266
    8. 'input' → logprob: -16.375003814697266
    9. '```' → logprob: -16.875003814697266
    10. '_line' → logprob: -17.000003814697266

Token 257: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06569410860538483
    2. '()' → logprob: -2.9406940937042236
    3. '()
' → logprob: -5.190694332122803
    4. '<|end|>' → logprob: -5.690694332122803
    5. '
' → logprob: -7.190694332122803
    6. '        
' → logprob: -8.190693855285645
    7. ')' → logprob: -8.315693855285645
    8. '<|end|>' → logprob: -9.065693855285645
    9. 'output' → logprob: -9.190693855285645
    10. 'input' → logprob: -10.190693855285645

Token 258: '       ' (ID: 309)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.3735255002975464
    2. '       ' → logprob: -1.7485255002975464
    3. 'processed' → logprob: -2.248525619506836
    4. ' processed' → logprob: -3.748525619506836
    5. ' output' → logprob: -4.873525619506836
    6. 'result' → logprob: -7.248525619506836
    7. '	output' → logprob: -9.373525619506836
    8. '<|end|>' → logprob: -10.623525619506836
    9. '_processed' → logprob: -11.123525619506836
    10. ' result' → logprob: -11.248525619506836

Token 259: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.07549403607845306
    2. ' output' → logprob: -2.8254940509796143
    3. 'processed' → logprob: -4.575493812561035
    4. 'result' → logprob: -6.325493812561035
    5. ' processed' → logprob: -6.950493812561035
    6. ' result' → logprob: -7.950493812561035
    7. '       ' → logprob: -10.325493812561035
    8. '	output' → logprob: -14.825493812561035
    9. '        
' → logprob: -16.95049476623535
    10. '```' → logprob: -17.07549476623535

Token 260: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00026538874953985214
    2. '_' → logprob: -8.250265121459961
    3. ' =' → logprob: -13.250265121459961
    4. '_s' → logprob: -13.875265121459961
    5. '=_' → logprob: -14.875265121459961
    6. '=' → logprob: -15.500265121459961
    7. ' _' → logprob: -15.625265121459961
    8. '_output' → logprob: -15.875265121459961
    9. '_string' → logprob: -16.00026512145996
    10. '_result' → logprob: -16.00026512145996

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485873706638813
    2. '=' → logprob: -3.0485873222351074
    3. ' ' → logprob: -18.923587799072266
    4. '.' → logprob: -20.048587799072266
    5. ')' → logprob: -20.298587799072266
    6. ' =
' → logprob: -20.298587799072266
    7. ' ' → logprob: -20.548587799072266
    8. 's' → logprob: -20.673587799072266
    9. '_' → logprob: -20.798587799072266
    10. '=self' → logprob: -20.923587799072266

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759403705596924
    2. ' self' → logprob: -0.8259403705596924
    3. '(self' → logprob: -14.575940132141113
    4. '	self' → logprob: -15.700940132141113
    5. '
' → logprob: -16.20094108581543
    6. '       ' → logprob: -16.32594108581543
    7. '=self' → logprob: -16.57594108581543
    8. '[self' → logprob: -17.45094108581543
    9. '_self' → logprob: -17.82594108581543
    10. 'Self' → logprob: -18.20094108581543

Token 263: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.007284780964255333
    2. '_processor' → logprob: -5.007284641265869
    3. '.process' → logprob: -7.882284641265869
    4. '_process' → logprob: -9.632285118103027
    5. '_processed' → logprob: -10.132285118103027
    6. '.' → logprob: -10.382285118103027
    7. '.processor' → logprob: -11.257285118103027
    8. '_' → logprob: -11.632285118103027
    9. ' _' → logprob: -11.757285118103027
    10. ' .' → logprob: -11.882285118103027

Token 264: 'processor' (ID: 55600)
  Prédit: 'processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -1.9361264946837764e-07
    2. '.processor' → logprob: -16.875
    3. '_processor' → logprob: -18.125
    4. 'process' → logprob: -18.125
    5. ' processor' → logprob: -20.125
    6. '_' → logprob: -22.0
    7. 'producer' → logprob: -22.125
    8. 'processing' → logprob: -22.125
    9. 'strategy' → logprob: -22.375
    10. 'processors' → logprob: -22.5

Token 265: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -5.438573680294212e-06
    2. '.' → logprob: -12.250005722045898
    3. 'process' → logprob: -14.375005722045898
    4. ' .' → logprob: -16.3750057220459
    5. '.pro' → logprob: -19.8750057220459
    6. ').' → logprob: -21.0000057220459
    7. ' process' → logprob: -21.0000057220459
    8. '.
' → logprob: -21.5000057220459
    9. '(process' → logprob: -21.5000057220459
    10. '.perform' → logprob: -22.0000057220459

Token 266: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.7014437364414334e-05
    2. '(' → logprob: -10.62502670288086
    3. '(output' → logprob: -13.12502670288086
    4. ' (' → logprob: -14.75002670288086
    5. '(
' → logprob: -15.25002670288086
    6. 'input' → logprob: -18.37502670288086
    7. '(inp' → logprob: -18.50002670288086
    8. ',input' → logprob: -18.62502670288086
    9. '(in' → logprob: -19.87502670288086
    10. '(inputs' → logprob: -20.50002670288086

Token 267: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.8889261304575484e-06
    2. 'str' → logprob: -12.500003814697266
    3. '_' → logprob: -16.125003814697266
    4. 'Str' → logprob: -17.500003814697266
    5. '_STR' → logprob: -18.875003814697266
    6. ')' → logprob: -19.250003814697266
    7. '_string' → logprob: -19.375003814697266
    8. '	str' → logprob: -20.000003814697266
    9. '-str' → logprob: -20.250003814697266
    10. '_Str' → logprob: -20.250003814697266

Token 268: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1269782930612564
    2. ')' → logprob: -2.1269783973693848
    3. '       ' → logprob: -10.001977920532227
    4. ')
' → logprob: -12.376977920532227
    5. ' )
' → logprob: -15.001977920532227
    6. ')

' → logprob: -15.126977920532227
    7. '   ' → logprob: -17.376977920532227
    8. ')`
' → logprob: -17.501977920532227
    9. ' )' → logprob: -17.626977920532227
    10. '),' → logprob: -18.376977920532227

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011284782551229
    2. 'self' → logprob: -4.511284828186035
    3. ' self' → logprob: -8.386284828186035
    4. '
' → logprob: -12.261284828186035
    5. '<|end|>' → logprob: -13.511284828186035
    6. '   ' → logprob: -13.636284828186035
    7. '	self' → logprob: -14.511284828186035
    8. '        
' → logprob: -14.886284828186035
    9. '	' → logprob: -15.261284828186035
    10. '```' → logprob: -15.636284828186035

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007660295814275742
    2. '       ' → logprob: -7.750765800476074
    3. ' self' → logprob: -8.000765800476074
    4. '
' → logprob: -17.25076675415039
    5. '	self' → logprob: -18.00076675415039
    6. '[self' → logprob: -18.75076675415039
    7. '   ' → logprob: -19.25076675415039
    8. '```' → logprob: -19.75076675415039
    9. ' ' → logprob: -20.12576675415039
    10. '(self' → logprob: -20.37576675415039

Token 271: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0007339857402257621
    2. '.' → logprob: -7.250733852386475
    3. '._' → logprob: -11.000734329223633
    4. ' .' → logprob: -12.375734329223633
    5. 'write' → logprob: -13.125734329223633
    6. '_.' → logprob: -14.625734329223633
    7. '.w' → logprob: -15.750734329223633
    8. '_write' → logprob: -15.875734329223633
    9. ' write' → logprob: -16.375734329223633
    10. '​.' → logprob: -16.500734329223633

Token 272: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -3.5120287066092715e-05
    2. '_' → logprob: -10.500035285949707
    3. 'output' → logprob: -12.250035285949707
    4. '(output' → logprob: -13.125035285949707
    5. ' _' → logprob: -14.875035285949707
    6. '_out' → logprob: -16.12503433227539
    7. '(_' → logprob: -16.50003433227539
    8. '_
' → logprob: -17.62503433227539
    9. '_input' → logprob: -17.75003433227539
    10. '_o' → logprob: -17.75003433227539

Token 273: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.0011726059019565582
    2. '(' → logprob: -6.7511725425720215
    3. ' (' → logprob: -13.50117301940918
    4. '(out' → logprob: -14.75117301940918
    5. '(input' → logprob: -14.87617301940918
    6. '(
' → logprob: -15.75117301940918
    7. '(object' → logprob: -16.87617301940918
    8. '(o' → logprob: -17.62617301940918
    9. '(open' → logprob: -17.75117301940918
    10. '(outputs' → logprob: -17.75117301940918

Token 274: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.981667537620524e-06
    2. 'str' → logprob: -13.375001907348633
    3. '_' → logprob: -15.000001907348633
    4. 'Str' → logprob: -17.875001907348633
    5. '__' → logprob: -19.625001907348633
    6. ')' → logprob: -19.750001907348633
    7. '_s' → logprob: -20.250001907348633
    8. '_
' → logprob: -20.250001907348633
    9. '```' → logprob: -20.250001907348633
    10. '_st' → logprob: -20.625001907348633

Token 275: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ')
' → logprob: -11.000020027160645
    3. '<|end|>' → logprob: -13.250020027160645
    4. '()' → logprob: -14.500020027160645
    5. '())' → logprob: -14.500020027160645
    6. ' )' → logprob: -14.750020027160645
    7. '       ' → logprob: -16.25002098083496
    8. '```' → logprob: -16.37502098083496
    9. '
' → logprob: -17.12502098083496
    10. ')

' → logprob: -17.25002098083496

Token 276: 'if' (ID: 366)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01881289854645729
    2. 'if' → logprob: -4.143813133239746
    3. '#' → logprob: -6.018813133239746
    4. 'def' → logprob: -8.393813133239746
    5. 'import' → logprob: -9.518813133239746
    6. 'strategy' → logprob: -11.143813133239746
    7. 'from' → logprob: -11.268813133239746
    8. '```' → logprob: -11.518813133239746
    9. ' if' → logprob: -13.018813133239746
    10. ' class' → logprob: -14.143813133239746

Token 277: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01418301835656166
    2. '__' → logprob: -4.264183044433594
    3. '_name' → logprob: -11.639183044433594
    4. '_' → logprob: -12.014183044433594
    5. 'name' → logprob: -12.639183044433594
    6. ' ' → logprob: -14.264183044433594
    7. ' ' → logprob: -15.139183044433594
    8. ' _' → logprob: -16.014183044433594
    9. 'Name' → logprob: -16.014183044433594
    10. ' name' → logprob: -16.389183044433594

Token 278: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06292520463466644
    2. ' __' → logprob: -2.812925100326538
    3. ' ==' → logprob: -7.062925338745117
    4. 'name' → logprob: -10.312925338745117
    5. '__.__' → logprob: -10.937925338745117
    6. '__.' → logprob: -11.312925338745117
    7. 'if' → logprob: -11.687925338745117
    8. '.__' → logprob: -11.687925338745117
    9. '_' → logprob: -12.062925338745117
    10. '==' → logprob: -12.312925338745117

Token 279: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '__.__' → logprob: -15.250000953674316
    3. 'name' → logprob: -15.750000953674316
    4. '==' → logprob: -16.875
    5. '__.' → logprob: -17.25
    6. '__
' → logprob: -17.375
    7. '```' → logprob: -17.875
    8. '____' → logprob: -18.25
    9. ' ==' → logprob: -18.75
    10. '___' → logprob: -18.875

Token 280: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2646951675415039
    2. ' ==' → logprob: -1.514695167541504
    3. '==' → logprob: -4.389695167541504
    4. '=="' → logprob: -8.389695167541504
    5. '_' → logprob: -10.889695167541504
    6. ' __' → logprob: -11.264695167541504
    7. '__.__' → logprob: -12.264695167541504
    8. '___' → logprob: -12.389695167541504
    9. ' =="' → logprob: -13.264695167541504
    10. ' ' → logprob: -13.264695167541504

Token 281: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017656205454841256
    2. ''' → logprob: -6.501765727996826
    3. ' "__' → logprob: -8.251765251159668
    4. '__' → logprob: -14.251765251159668
    5. ' '__' → logprob: -14.251765251159668
    6. '"name' → logprob: -14.876765251159668
    7. '"_' → logprob: -15.501765251159668
    8. '"class' → logprob: -15.751765251159668
    9. '"user' → logprob: -16.126766204833984
    10. ' "' → logprob: -16.251766204833984

Token 282: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.704273118884885e-07
    2. 'name' → logprob: -15.250000953674316
    3. '__' → logprob: -15.625000953674316
    4. ' main' → logprob: -16.375
    5. '_main' → logprob: -16.5
    6. 'ma' → logprob: -17.875
    7. 'built' → logprob: -18.5
    8. 'py' → logprob: -19.625
    9. 'm' → logprob: -20.625
    10. '-main' → logprob: -20.875

Token 283: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04884328693151474
    2. '__' → logprob: -3.0488433837890625
    3. '__:' → logprob: -8.423843383789062
    4. '__':
' → logprob: -10.423843383789062
    5. '_' → logprob: -12.673843383789062
    6. '":' → logprob: -12.798843383789062
    7. '__["' → logprob: -15.298843383789062
    8. ':' → logprob: -15.798843383789062
    9. '__.' → logprob: -16.298843383789062
    10. '__
' → logprob: -16.423843383789062

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010207825107499957
    2. ' strategy' → logprob: -7.376020908355713
    3. '   ' → logprob: -8.501020431518555
    4. ' processor' → logprob: -9.876020431518555
    5. '    
' → logprob: -10.376020431518555
    6. 'strategy' → logprob: -10.626020431518555
    7. ' from' → logprob: -11.251020431518555
    8. '_strategy' → logprob: -11.251020431518555
    9. ' import' → logprob: -11.376020431518555
    10. '(strategy' → logprob: -11.751020431518555

Token 285: ' strategy' (ID: 10772)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' (adapté à ' strategy') → logprob: -0.7155759334564209
    2. ' strategy' → logprob: -1.590575933456421
    3. 'processor' → logprob: -1.590575933456421
    4. ' processor' → logprob: -2.465575933456421
    5. 'simple' → logprob: -5.090576171875
    6. 'handler' → logprob: -5.215576171875
    7. ' simple' → logprob: -6.340576171875
    8. '   ' → logprob: -6.465576171875
    9. 'import' → logprob: -6.840576171875
    10. ' handler' → logprob: -7.340576171875

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. ' =
' → logprob: -15.261048316955566
    4. ' ' → logprob: -17.76104736328125
    5. ')' → logprob: -17.88604736328125
    6. ' =)' → logprob: -18.01104736328125
    7. '  ' → logprob: -18.51104736328125
    8. ' ' → logprob: -19.01104736328125
    9. '=
' → logprob: -19.13604736328125
    10. 's' → logprob: -19.13604736328125

Token 287: ' Simple' (ID: 12295)
  Prédit: ' Simple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Simple' → logprob: -0.01416350994259119
    2. 'Simple' → logprob: -4.264163494110107
    3. '(Simple' → logprob: -18.764163970947266
    4. '	Simple' → logprob: -18.889163970947266
    5. ' simple' → logprob: -20.514163970947266
    6. ' Simpl' → logprob: -21.889163970947266
    7. '.Simple' → logprob: -22.264163970947266
    8. '_simple' → logprob: -22.389163970947266
    9. 'Simpl' → logprob: -23.014163970947266
    10. ' ' → logprob: -23.639163970947266

Token 288: 'Slice' (ID: 32171)
  Prédit: 'Slice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Slice' → logprob: -1.9361264946837764e-07
    2. 'S' → logprob: -16.5
    3. 'Slide' → logprob: -17.25
    4. 'slice' → logprob: -19.25
    5. '_slice' → logprob: -19.25
    6. ' Slice' → logprob: -19.375
    7. 'Slate' → logprob: -20.5
    8. 'Slash' → logprob: -20.5
    9. 'Slices' → logprob: -21.125
    10. '```' → logprob: -21.625

Token 289: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -3.128163257315464e-07
    2. 'Reverse' → logprob: -16.0
    3. ' Re' → logprob: -16.625
    4. 'R' → logprob: -17.125
    5. 'Strategy' → logprob: -18.5
    6. ' reversal' → logprob: -19.0
    7. '_re' → logprob: -20.5
    8. '_Re' → logprob: -20.5
    9. 're' → logprob: -21.125
    10. 'Revision' → logprob: -21.5

Token 290: 'versal' (ID: 116984)
  Prédit: 'versal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versal' → logprob: -0.00041851779678836465
    2. 'vers' → logprob: -8.375418663024902
    3. 'val' → logprob: -9.125418663024902
    4. 'veral' → logprob: -9.500418663024902
    5. 'valuation' → logprob: -13.750418663024902
    6. 'vation' → logprob: -14.125418663024902
    7. 'vals' → logprob: -14.375418663024902
    8. 'version' → logprob: -14.625418663024902
    9. 'ves' → logprob: -14.875418663024902
    10. 'var' → logprob: -15.375418663024902

Token 291: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -4.320199877838604e-07
    2. 'strategy' → logprob: -15.25
    3. ' strategy' → logprob: -16.875
    4. 'Str' → logprob: -17.125
    5. 'Strateg' → logprob: -17.25
    6. '_strategy' → logprob: -17.5
    7. ' Strategy' → logprob: -18.375
    8. 'St' → logprob: -18.375
    9. '(strategy' → logprob: -19.875
    10. 'Strategies' → logprob: -19.875

Token 292: '()
' (ID: 1234)
  Prédit: '(strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(strategy' → logprob: -0.6268236041069031
    2. ')' → logprob: -2.001823663711548
    3. '   ' → logprob: -2.626823663711548
    4. '()' → logprob: -2.876823663711548
    5. '<|end|>' → logprob: -2.876823663711548
    6. '(' → logprob: -3.126823663711548
    7. '
' → logprob: -3.501823663711548
    8. '(
' → logprob: -3.626823663711548
    9. 'strategy' → logprob: -3.751823663711548
    10. '    
' → logprob: -5.376823425292969

Token 293: '   ' (ID: 271)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.25394725799560547
    2. '
' → logprob: -2.1289472579956055
    3. '   ' → logprob: -2.3789472579956055
    4. ' processor' → logprob: -4.5039472579956055
    5. '    
' → logprob: -6.8789472579956055
    6. '_processor' → logprob: -8.503947257995605
    7. '.processor' → logprob: -8.878947257995605
    8. '  
' → logprob: -9.878947257995605
    9. '<|end|>' → logprob: -10.128947257995605
    10. '(process' → logprob: -11.003947257995605

Token 294: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.0336591862142086
    2. ' processor' → logprob: -3.4086592197418213
    3. '   ' → logprob: -11.658658981323242
    4. '.processor' → logprob: -13.408658981323242
    5. 'process' → logprob: -13.533658981323242
    6. '    
' → logprob: -14.783658981323242
    7. '_processor' → logprob: -15.033658981323242
    8. 'Processor' → logprob: -15.033658981323242
    9. '```' → logprob: -15.283658981323242
    10. '
' → logprob: -16.033658981323242

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. ' =
' → logprob: -17.186967849731445
    4. '(process' → logprob: -17.436967849731445
    5. ')' → logprob: -17.811967849731445
    6. ' ' → logprob: -18.311967849731445
    7. '(Abstract' → logprob: -19.561967849731445
    8. '(' → logprob: -19.561967849731445
    9. '=
' → logprob: -19.686967849731445
    10. '<|end|>' → logprob: -19.686967849731445

Token 296: ' Abstract' (ID: 17413)
  Prédit: ' Abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Abstract' → logprob: -0.0040785204619169235
    2. 'Abstract' → logprob: -5.504078388214111
    3. '(Abstract' → logprob: -16.254077911376953
    4. '<Abstract' → logprob: -17.004077911376953
    5. '_Abstract' → logprob: -18.629077911376953
    6. ' abstract' → logprob: -19.504077911376953
    7. ' ' → logprob: -21.504077911376953
    8. ' ABSTRACT' → logprob: -21.504077911376953
    9. ' Concrete' → logprob: -21.629077911376953
    10. ' ' → logprob: -22.254077911376953

Token 297: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: 0.0
    2. ' String' → logprob: -18.5
    3. '_string' → logprob: -20.875
    4. '_String' → logprob: -21.125
    5. 'string' → logprob: -21.25
    6. '   ' → logprob: -22.25
    7. ' ' → logprob: -22.875
    8. '
' → logprob: -23.25
    9. 'Strings' → logprob: -23.375
    10. '```' → logprob: -23.625

Token 298: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -3.128163257315464e-07
    2. 'processor' → logprob: -15.5
    3. ' Processor' → logprob: -19.375
    4. ' processor' → logprob: -19.375
    5. '_processor' → logprob: -19.75
    6. 'Process' → logprob: -21.5
    7. 'Processed' → logprob: -25.375
    8. 'Processing' → logprob: -25.375
    9. 'Proces' → logprob: -25.75
    10. 'Processors' → logprob: -26.0

Token 299: '(strategy' (ID: 63072)
  Prédit: '(strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(strategy' → logprob: -0.0007321976590901613
    2. '(' → logprob: -7.250732421875
    3. '(
' → logprob: -11.250732421875
    4. 'strategy' → logprob: -12.250732421875
    5. '(str' → logprob: -12.375732421875
    6. ' (' → logprob: -16.500732421875
    7. 'strateg' → logprob: -16.875732421875
    8. '(

' → logprob: -17.000732421875
    9. '(st' → logprob: -17.625732421875
    10. '()' → logprob: -17.875732421875

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47418007254600525
    2. ')
' → logprob: -0.9741801023483276
    3. '   ' → logprob: -9.224180221557617
    4. ')
' → logprob: -12.599180221557617
    5. ')

' → logprob: -14.599180221557617
    6. ' )
' → logprob: -14.974180221557617
    7. ' ' → logprob: -15.974180221557617
    8. ' )' → logprob: -16.349180221557617
    9. ')\
' → logprob: -17.849180221557617
    10. '),' → logprob: -18.224180221557617

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04033074155449867
    2. 'handler' → logprob: -3.290330648422241
    3. 'io' → logprob: -6.29033088684082
    4. ' handler' → logprob: -8.54033088684082
    5. ' ioh' → logprob: -8.66533088684082
    6. '    
' → logprob: -10.66533088684082
    7. ' io' → logprob: -10.91533088684082
    8. '	handler' → logprob: -11.66533088684082
    9. 'input' → logprob: -12.29033088684082
    10. '	io' → logprob: -13.16533088684082

Token 302: ' io' (ID: 9818)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.061997607350349426
    2. 'io' (adapté à ' io') → logprob: -2.811997652053833
    3. ' handler' → logprob: -10.561997413635254
    4. ' ioh' → logprob: -13.561997413635254
    5. '   ' → logprob: -14.061997413635254
    6. ' io' → logprob: -14.311997413635254
    7. '	handler' → logprob: -14.686997413635254
    8. 'input' → logprob: -15.936997413635254
    9. 'controller' → logprob: -16.31199836730957
    10. '```' → logprob: -16.43699836730957

Token 303: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.0012205826351419091
    2. 'Handler' → logprob: -7.251220703125
    3. '_' → logprob: -8.001220703125
    4. ' =' → logprob: -9.626220703125
    5. 'handler' → logprob: -9.626220703125
    6. '_Handler' → logprob: -11.501220703125
    7. ' _' → logprob: -11.876220703125
    8. '_h' → logprob: -12.251220703125
    9. '_HANDLER' → logprob: -12.251220703125
    10. '_handle' → logprob: -12.501220703125

Token 304: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164329506456852
    2. '=' → logprob: -4.264164447784424
    3. '.execute' → logprob: -15.389163970947266
    4. ' ' → logprob: -15.639163970947266
    5. '.' → logprob: -15.764163970947266
    6. '<|end|>' → logprob: -15.764163970947266
    7. ' =
' → logprob: -16.639163970947266
    8. '	' → logprob: -17.139163970947266
    9. ' =)' → logprob: -18.139163970947266
    10. ')' → logprob: -18.139163970947266

Token 305: ' Input' (ID: 10090)
  Prédit: ' Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Input' → logprob: -0.0009115827269852161
    2. 'Input' → logprob: -7.000911712646484
    3. '	Input' → logprob: -17.875911712646484
    4. ' input' → logprob: -18.250911712646484
    5. '_Input' → logprob: -19.250911712646484
    6. '<Input' → logprob: -19.500911712646484
    7. ' In' → logprob: -19.750911712646484
    8. ' Output' → logprob: -20.000911712646484
    9. ' I' → logprob: -20.250911712646484
    10. '\Input' → logprob: -20.250911712646484

Token 306: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'O' → logprob: -17.0
    3. '	Output' → logprob: -18.75
    4. ' Output' → logprob: -19.25
    5. 'Ou' → logprob: -19.875
    6. '_output' → logprob: -20.25
    7. '-output' → logprob: -20.25
    8. 'output' → logprob: -20.25
    9. '_Output' → logprob: -20.25
    10. '/output' → logprob: -20.5

Token 307: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. 'handler' → logprob: -17.875
    3. 'andler' → logprob: -18.25
    4. ' Handler' → logprob: -18.625
    5. 'Handle' → logprob: -18.875
    6. '_Handler' → logprob: -19.625
    7. '_HANDLER' → logprob: -20.0
    8. '_handler' → logprob: -20.625
    9. '.Handler' → logprob: -21.25
    10. 'Hand' → logprob: -21.75

Token 308: '(process' (ID: 39808)
  Prédit: '(process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(process' → logprob: -0.5788029432296753
    2. '(io' → logprob: -0.8288029432296753
    3. '(' → logprob: -5.953803062438965
    4. '(
' → logprob: -9.328803062438965
    5. '   ' → logprob: -9.578803062438965
    6. 'processor' → logprob: -10.078803062438965
    7. '(proc' → logprob: -10.328803062438965
    8. '(IO' → logprob: -10.953803062438965
    9. ' (' → logprob: -12.078803062438965
    10. 'io' → logprob: -12.703803062438965

Token 309: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.000215457082958892
    2. 'er' → logprob: -9.250215530395508
    3. 'rocess' → logprob: -10.000215530395508
    4. 'processor' → logprob: -10.750215530395508
    5. '   ' → logprob: -10.875215530395508
    6. 'essor' → logprob: -11.375215530395508
    7. 'ector' → logprob: -12.250215530395508
    8. '(process' → logprob: -12.750215530395508
    9. '_processor' → logprob: -12.875215530395508
    10. '```' → logprob: -13.375215530395508

Token 310: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2541544735431671
    2. ')' → logprob: -1.5041544437408447
    3. '   ' → logprob: -6.129154682159424
    4. '()' → logprob: -11.504154205322266
    5. ')
' → logprob: -11.504154205322266
    6. ' )
' → logprob: -11.754154205322266
    7. '()
' → logprob: -11.879154205322266
    8. ' ' → logprob: -12.254154205322266
    9. '())
' → logprob: -13.379154205322266
    10. ' )' → logprob: -14.004154205322266

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06541577726602554
    2. 'io' → logprob: -2.815415859222412
    3. '	io' → logprob: -5.690415859222412
    4. ' io' → logprob: -9.940415382385254
    5. '_io' → logprob: -11.690415382385254
    6. '(io' → logprob: -12.940415382385254
    7. '/io' → logprob: -13.940415382385254
    8. '"io' → logprob: -13.940415382385254
    9. '    
' → logprob: -14.065415382385254
    10. '
' → logprob: -14.315415382385254

Token 312: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' (adapté à ' io') → logprob: -3.128163257315464e-07
    2. ' io' → logprob: -15.25
    3. '	io' → logprob: -19.875
    4. '_io' → logprob: -22.875
    5. '   ' → logprob: -23.0
    6. '(io' → logprob: -23.375
    7. '.io' → logprob: -23.75
    8. 'IO' → logprob: -24.75
    9. 'ioa' → logprob: -25.75
    10. '/io' → logprob: -26.25

Token 313: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.5048530030981055e-06
    2. 'handler' → logprob: -13.750001907348633
    3. '_handle' → logprob: -15.250001907348633
    4. 'o' → logprob: -16.250001907348633
    5. 'Handler' → logprob: -17.750001907348633
    6. '_HANDLER' → logprob: -17.750001907348633
    7. '_Handler' → logprob: -18.125001907348633
    8. '   ' → logprob: -19.125001907348633
    9. 'andler' → logprob: -19.125001907348633
    10. 'io' → logprob: -19.125001907348633

Token 314: '.execute' (ID: 13242)
  Prédit: '.execute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execute' → logprob: -0.000158842682139948
    2. '.' → logprob: -8.75015926361084
    3. 'execute' → logprob: -15.50015926361084
    4. ' .' → logprob: -15.87515926361084
    5. '.exec' → logprob: -17.250158309936523
    6. '.run' → logprob: -17.875158309936523
    7. '.exe' → logprob: -18.750158309936523
    8. '.Execute' → logprob: -19.000158309936523
    9. '.
' → logprob: -19.250158309936523
    10. '.execution' → logprob: -19.500158309936523

Token 315: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 313
Tokens correctement prédits (1ère position, stricte): 189
Tokens correctement prédits (1ère position, avec adaptation): 206
Tokens correctement prédits (top 10): 287
Précision stricte (1ère position): 60.38%
Précision adaptée (1ère position): 65.81%
Précision (top 10): 91.69%
================================================================================
