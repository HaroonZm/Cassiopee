================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    hands = [int(input()) for _ in range(5)]
    if hands[0] == 0:
        break
    s = set(hands)
    if len(s) == 1 or len(s) == 3:
        for _ in range(5):
            print(3)
        continue
    if 1 not in s:
        win, lose = 2, 3
    elif 2 not in s:
        win, lose = 3, 1
    else:
        win, lose = 1, 2
    for h in hands:
        print(1 if h == win else 2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' hands' (ID: 8950)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08074041455984116
    2. '[' → logprob: -2.830740451812744
    3. '   ' → logprob: -4.830740451812744
    4. ' .' → logprob: -5.830740451812744
    5. ' =' → logprob: -5.830740451812744
    6. '       ' → logprob: -6.580740451812744
    7. '    ' → logprob: -7.080740451812744
    8. '=' → logprob: -7.580740451812744
    9. '['' → logprob: -7.705740451812744
    10. ',' → logprob: -8.705739974975586

Token 6: ' [' (ID: 723)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.09564009308815002
    2. 'input' → logprob: -2.845640182495117
    3. ' player' → logprob: -4.345640182495117
    4. ' deck' → logprob: -4.845640182495117
    5. ' get' → logprob: -6.845640182495117
    6. ' face' → logprob: -6.845640182495117
    7. ' ' → logprob: -6.970640182495117
    8. '   ' → logprob: -7.220640182495117
    9. ' random' → logprob: -7.595640182495117
    10. 'player' → logprob: -7.595640182495117

Token 7: 'int' (ID: 491)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5938459634780884
    2. '[' → logprob: -1.7188459634780884
    3. 'input' → logprob: -3.218845844268799
    4. ']' → logprob: -3.218845844268799
    5. 'player' → logprob: -3.468845844268799
    6. '   ' → logprob: -3.718845844268799
    7. 'random' → logprob: -3.843845844268799
    8. 'hand' → logprob: -4.218845844268799
    9. 'deck' → logprob: -4.593845844268799
    10. ' []' → logprob: -4.718845844268799

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26270630955696106
    2. '(input' → logprob: -1.5127062797546387
    3. '(x' → logprob: -4.887706279754639
    4. '(i' → logprob: -6.387706279754639
    5. '(item' → logprob: -8.012706756591797
    6. '(s' → logprob: -8.387706756591797
    7. '(user' → logprob: -8.762706756591797
    8. '(
' → logprob: -9.387706756591797
    9. '(token' → logprob: -9.387706756591797
    10. '()]' → logprob: -9.512706756591797

Token 9: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.530168890953064
    2. '()' → logprob: -1.405168890953064
    3. '('' → logprob: -2.2801690101623535
    4. '())' → logprob: -3.6551690101623535
    5. '("("' → logprob: -3.7801690101623535
    6. '()]' → logprob: -5.1551690101623535
    7. '(()' → logprob: -6.0301690101623535
    8. '("' → logprob: -6.5301690101623535
    9. '("")' → logprob: -6.7801690101623535
    10. '(""))' → logprob: -6.7801690101623535

Token 10: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03289736062288284
    2. ')]' → logprob: -3.907897472381592
    3. '),' → logprob: -4.907897472381592
    4. ' for' → logprob: -6.407897472381592
    5. ']' → logprob: -7.032897472381592
    6. ',' → logprob: -7.157897472381592
    7. 'for' → logprob: -7.907897472381592
    8. '   ' → logprob: -7.907897472381592
    9. ' )' → logprob: -8.157896995544434
    10. '[' → logprob: -8.282896995544434

Token 11: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4180164933204651
    2. ' range' → logprob: -1.4180164337158203
    3. '_' → logprob: -2.6680164337158203
    4. ' i' → logprob: -3.9180164337158203
    5. ' ' → logprob: -4.79301643371582
    6. ' in' → logprob: -7.16801643371582
    7. '_range' → logprob: -7.66801643371582
    8. 'range' → logprob: -8.04301643371582
    9. ' hands' → logprob: -8.66801643371582
    10. ')' → logprob: -10.66801643371582

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05493644252419472
    2. 'in' → logprob: -2.929936408996582
    3. ' ' → logprob: -10.179936408996582
    4. 'range' → logprob: -11.804936408996582
    5. 'i' → logprob: -12.929936408996582
    6. '(' → logprob: -13.679936408996582
    7. 's' → logprob: -14.429936408996582
    8. '  ' → logprob: -14.554936408996582
    9. '	in' → logprob: -14.554936408996582
    10. '<|end|>' → logprob: -15.304936408996582

Token 13: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10046437382698059
    2. ' range' → logprob: -2.350464344024658
    3. '[' → logprob: -8.975464820861816
    4. 'hands' → logprob: -9.850464820861816
    5. ' hands' → logprob: -10.850464820861816
    6. '(range' → logprob: -11.725464820861816
    7. '(' → logprob: -11.975464820861816
    8. ' ' → logprob: -12.225464820861816
    9. '	range' → logprob: -12.475464820861816
    10. 'iter' → logprob: -12.600464820861816

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.080963092041202e-06
    2. '4' → logprob: -13.125004768371582
    3. '3' → logprob: -13.375004768371582
    4. ' (' → logprob: -13.750004768371582
    5. '2' → logprob: -15.500004768371582
    6. '6' → logprob: -16.5000057220459
    7. '(len' → logprob: -17.0000057220459
    8. '(n' → logprob: -17.1250057220459
    9. '5' → logprob: -17.6250057220459
    10. '(
' → logprob: -17.7500057220459

Token 15: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6948162317276001
    2. '5' → logprob: -0.9448162317276001
    3. '4' → logprob: -2.4448161125183105
    4. '3' → logprob: -3.9448161125183105
    5. '6' → logprob: -5.6948161125183105
    6. '10' → logprob: -6.5698161125183105
    7. '1' → logprob: -7.9448161125183105
    8. '9' → logprob: -8.194816589355469
    9. '7' → logprob: -8.319816589355469
    10. '8' → logprob: -8.944816589355469

Token 16: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010354319238103926
    2. ')' → logprob: -10.000103950500488
    3. ']' → logprob: -10.000103950500488
    4. ' )' → logprob: -12.125103950500488
    5. ')])' → logprob: -12.625103950500488
    6. '])]' → logprob: -13.375103950500488
    7. '))' → logprob: -14.375103950500488
    8. '   ' → logprob: -15.125103950500488
    9. ')}' → logprob: -15.125103950500488
    10. ' ]' → logprob: -15.500103950500488

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16242483258247375
    2. ' ' → logprob: -2.5374248027801514
    3. ' if' → logprob: -3.2874248027801514
    4. ':' → logprob: -4.2874250411987305
    5. '<|end|>' → logprob: -5.1624250411987305
    6. '    
' → logprob: -5.6624250411987305
    7. ')' → logprob: -6.2874250411987305
    8. '    ' → logprob: -6.4124250411987305
    9. ' 
' → logprob: -6.6624250411987305
    10. '[' → logprob: -6.7874250411987305

Token 18: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27830109000205994
    2. '   ' → logprob: -1.5283011198043823
    3. ' ' → logprob: -5.153301239013672
    4. 'if' (adapté à ' if') → logprob: -5.653301239013672
    5. '    
' → logprob: -5.903301239013672
    6. ':' → logprob: -6.153301239013672
    7. ' 
' → logprob: -6.528301239013672
    8. ')' → logprob: -6.528301239013672
    9. 'sum' → logprob: -6.653301239013672
    10. '```' → logprob: -6.903301239013672

Token 19: ' hands' (ID: 8950)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.9650763273239136
    2. ' all' → logprob: -1.2150763273239136
    3. ' any' → logprob: -2.090076446533203
    4. ' len' → logprob: -2.215076446533203
    5. ' max' → logprob: -3.215076446533203
    6. ' not' → logprob: -3.965076446533203
    7. 'sum' → logprob: -3.965076446533203
    8. 'all' → logprob: -5.215076446533203
    9. ' hands' → logprob: -6.465076446533203
    10. 'len' → logprob: -6.715076446533203

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10960661619901657
    2. ':' → logprob: -3.2346065044403076
    3. '==' → logprob: -3.4846065044403076
    4. ' ==' → logprob: -4.359606742858887
    5. '.count' → logprob: -4.609606742858887
    6. ' and' → logprob: -5.609606742858887
    7. '   ' → logprob: -6.359606742858887
    8. ' !=' → logprob: -6.484606742858887
    9. '!=' → logprob: -6.984606742858887
    10. '[i' → logprob: -7.484606742858887

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007446544244885445
    2. ' ' → logprob: -5.257446765899658
    3. ']' → logprob: -7.007446765899658
    4. 'i' → logprob: -7.257446765899658
    5. '1' → logprob: -8.7574462890625
    6. ' i' → logprob: -9.2574462890625
    7. '4' → logprob: -9.5074462890625
    8. '3' → logprob: -9.5074462890625
    9. '(i' → logprob: -10.1324462890625
    10. '2' → logprob: -10.2574462890625

Token 22: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47007879614830017
    2. ']' → logprob: -2.345078706741333
    3. ' >' → logprob: -2.345078706741333
    4. ' ]' → logprob: -2.845078706741333
    5. ' !=' → logprob: -3.095078706741333
    6. '==' → logprob: -3.595078706741333
    7. ' <' → logprob: -3.720078706741333
    8. '>' → logprob: -4.845078945159912
    9. ')' → logprob: -5.220078945159912
    10. ' %' → logprob: -6.220078945159912

Token 23: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.022435188293457
    2. ' >' → logprob: -1.272435188293457
    3. ' ==' → logprob: -1.522435188293457
    4. '==' → logprob: -2.397435188293457
    5. ' !=' → logprob: -3.897435188293457
    6. '%' → logprob: -4.647435188293457
    7. '<' → logprob: -5.272435188293457
    8. '!=' → logprob: -5.522435188293457
    9. ' >=' → logprob: -5.647435188293457
    10. ' <' → logprob: -5.897435188293457

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41036906838417053
    2. '0' → logprob: -1.1603690385818481
    3. 'hands' → logprob: -4.160368919372559
    4. '-' → logprob: -5.660368919372559
    5. ' hands' → logprob: -6.410368919372559
    6. ' -' → logprob: -7.035368919372559
    7. '1' → logprob: -8.035368919372559
    8. '5' → logprob: -8.535368919372559
    9. '9' → logprob: -8.847868919372559
    10. '7' → logprob: -8.910368919372559

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04100938141345978
    2. '-' → logprob: -3.4160094261169434
    3. ' ' → logprob: -6.041009426116943
    4. 'hands' → logprob: -6.166009426116943
    5. '1' → logprob: -7.166009426116943
    6. '9' → logprob: -7.791009426116943
    7. '5' → logprob: -8.166008949279785
    8. 'h' → logprob: -8.291008949279785
    9. '7' → logprob: -8.791008949279785
    10. '2' → logprob: -8.791008949279785

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012741618556901813
    2. ' and' → logprob: -7.001274108886719
    3. ' :' → logprob: -8.876274108886719
    4. '   ' → logprob: -9.251274108886719
    5. ':
' → logprob: -9.376274108886719
    6. 'and' → logprob: -11.251274108886719
    7. ' ' → logprob: -11.376274108886719
    8. ' break' → logprob: -11.751274108886719
    9. '    ' → logprob: -13.001274108886719
    10. ' or' → logprob: -13.376274108886719

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004950098809786141
    2. '   ' → logprob: -8.000494956970215
    3. ' break' → logprob: -9.000494956970215
    4. '    ' → logprob: -11.500494956970215
    5. '	break' → logprob: -11.625494956970215
    6. '     ' → logprob: -12.500494956970215
    7. '      ' → logprob: -12.750494956970215
    8. 'break' → logprob: -13.125494956970215
    9. '    ' → logprob: -13.625494956970215
    10. '           ' → logprob: -14.000494956970215

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7095324397087097
    2. '       ' → logprob: -0.9595324397087097
    3. 'break' (adapté à ' break') → logprob: -2.0845324993133545
    4. '	break' → logprob: -7.959532260894775
    5. '   ' → logprob: -8.334532737731934
    6. '```' → logprob: -10.209532737731934
    7. '           ' → logprob: -10.334532737731934
    8. '_break' → logprob: -11.834532737731934
    9. '\n' → logprob: -12.584532737731934
    10. ' ' → logprob: -12.584532737731934

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0313071571290493
    2. '<|end|>' → logprob: -4.156307220458984
    3. '    
' → logprob: -4.906307220458984
    4. ' ' → logprob: -5.906307220458984
    5. ')' → logprob: -6.531307220458984
    6. '\n' → logprob: -6.906307220458984
    7. '    ' → logprob: -7.406307220458984
    8. '[' → logprob: -7.656307220458984
    9. ' 
' → logprob: -8.281307220458984
    10. '#' → logprob: -9.031307220458984

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1442951261997223
    2. 'n' → logprob: -3.0192952156066895
    3. ' ' → logprob: -3.7692952156066895
    4. '    
' → logprob: -4.5192952156066895
    5. ' 
' → logprob: -4.6442952156066895
    6. '[' → logprob: -4.8942952156066895
    7. '    ' → logprob: -5.1442952156066895
    8. ')' → logprob: -5.2692952156066895
    9. 'c' → logprob: -6.2692952156066895
    10. 's' → logprob: -6.2692952156066895

Token 31: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2535741329193115
    2. 'p' → logprob: -3.1285741329193115
    3. 'n' → logprob: -4.128574371337891
    4. ' if' → logprob: -4.503574371337891
    5. ' max' → logprob: -4.628574371337891
    6. ' counts' → logprob: -4.753574371337891
    7. 'sum' → logprob: -4.753574371337891
    8. '    ' → logprob: -4.878574371337891
    9. 'c' → logprob: -5.003574371337891
    10. 'count' → logprob: -5.003574371337891

Token 32: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.36188602447509766
    2. 'u' → logprob: -1.4868860244750977
    3. 'core' → logprob: -3.6118860244750977
    4. ' =' → logprob: -3.8618860244750977
    5. '=' → logprob: -4.486886024475098
    6. 'o' → logprob: -5.486886024475098
    7. 'c' → logprob: -5.861886024475098
    8. 'ort' → logprob: -6.236886024475098
    9. 't' → logprob: -6.486886024475098
    10. 'cores' → logprob: -6.736886024475098

Token 33: ' set' (ID: 920)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.27188462018966675
    2. 'sum' → logprob: -1.7718846797943115
    3. ' hands' → logprob: -3.3968846797943115
    4. ' max' → logprob: -4.521884441375732
    5. ' set' → logprob: -4.646884441375732
    6. ' sorted' → logprob: -5.646884441375732
    7. ' ' → logprob: -5.896884441375732
    8. ' len' → logprob: -6.271884441375732
    9. ' min' → logprob: -6.646884441375732
    10. 'set' → logprob: -6.771884441375732

Token 34: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.387563019990921
    2. '(' → logprob: -1.1375629901885986
    3. '()' → logprob: -7.887563228607178
    4. '(hand' → logprob: -8.38756275177002
    5. '(s' → logprob: -10.38756275177002
    6. '([' → logprob: -10.51256275177002
    7. '((' → logprob: -11.63756275177002
    8. ' (' → logprob: -12.01256275177002
    9. '(H' → logprob: -13.13756275177002
    10. '(range' → logprob: -13.38756275177002

Token 35: 'ands' (ID: 3460)
  Prédit: 'ands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ands' → logprob: -0.0006521515315398574
    2. 'and' → logprob: -7.875652313232422
    3. '(' → logprob: -9.250652313232422
    4. 'a' → logprob: -9.500652313232422
    5. 'hands' → logprob: -10.375652313232422
    6. 'an' → logprob: -10.750652313232422
    7. 'ans' → logprob: -11.250652313232422
    8. ')' → logprob: -11.375652313232422
    9. '[' → logprob: -12.250652313232422
    10. '(a' → logprob: -12.375652313232422

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.847109812544659e-05
    2. ' )' → logprob: -11.000048637390137
    3. '())' → logprob: -11.375048637390137
    4. ')
' → logprob: -11.875048637390137
    5. '))' → logprob: -12.375048637390137
    6. '()' → logprob: -13.000048637390137
    7. '(' → logprob: -14.000048637390137
    8. '   ' → logprob: -14.375048637390137
    9. '])' → logprob: -14.625048637390137
    10. ')))' → logprob: -14.750048637390137

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029462052043527365
    2. '    
' → logprob: -6.377946376800537
    3. ' if' → logprob: -7.502946376800537
    4. ')' → logprob: -9.002945899963379
    5. '    ' → logprob: -9.377945899963379
    6. '[' → logprob: -9.377945899963379
    7. 'if' → logprob: -9.627945899963379
    8. '<|end|>' → logprob: -10.002945899963379
    9. ':' → logprob: -10.127945899963379
    10. '
' → logprob: -10.252945899963379

Token 38: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21896742284297943
    2. ' if' → logprob: -2.3439674377441406
    3. 'if' (adapté à ' if') → logprob: -2.3439674377441406
    4. ')' → logprob: -6.968967437744141
    5. '    
' → logprob: -7.468967437744141
    6. 's' → logprob: -7.593967437744141
    7. 'n' → logprob: -7.843967437744141
    8. '    ' → logprob: -7.843967437744141
    9. 'i' → logprob: -7.968967437744141
    10. ' ' → logprob: -8.21896743774414

Token 39: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.001794181764125824
    2. 'len' → logprob: -6.376794338226318
    3. ' ' → logprob: -10.50179386138916
    4. ' max' → logprob: -10.50179386138916
    5. ' s' → logprob: -11.00179386138916
    6. '(len' → logprob: -11.87679386138916
    7. '   ' → logprob: -12.00179386138916
    8. ' '' → logprob: -12.87679386138916
    9. ' l' → logprob: -14.12679386138916
    10. ''' → logprob: -14.37679386138916

Token 40: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0181878749281168
    2. '(' → logprob: -4.018187999725342
    3. 's' → logprob: -10.518187522888184
    4. '(h' → logprob: -12.018187522888184
    5. ' (' → logprob: -13.143187522888184
    6. '(hand' → logprob: -14.143187522888184
    7. '<|end|>' → logprob: -14.643187522888184
    8. '(ss' → logprob: -15.143187522888184
    9. '(space' → logprob: -15.518187522888184
    10. '(set' → logprob: -15.643187522888184

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009581250138580799
    2. ' )' → logprob: -5.134581089019775
    3. ' ==' → logprob: -6.384581089019775
    4. '==' → logprob: -6.884581089019775
    5. ')==' → logprob: -7.009581089019775
    6. ' !=' → logprob: -12.884581565856934
    7. ' <' → logprob: -12.884581565856934
    8. ')!=' → logprob: -13.009581565856934
    9. '>' → logprob: -13.134581565856934
    10. '=' → logprob: -13.134581565856934

Token 42: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5282543301582336
    2. ' ==' → logprob: -0.9032543301582336
    3. ' ' → logprob: -6.403254508972168
    4. '=' → logprob: -6.903254508972168
    5. ' in' → logprob: -7.403254508972168
    6. '<' → logprob: -8.028254508972168
    7. ')' → logprob: -8.153254508972168
    8. '<|end|>' → logprob: -8.153254508972168
    9. ' <' → logprob: -9.028254508972168
    10. ' <=' → logprob: -9.028254508972168

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2340622991323471
    2. '2' → logprob: -1.9840623140335083
    3. '5' → logprob: -3.1090621948242188
    4. ' ' → logprob: -3.8590621948242188
    5. '3' → logprob: -5.484062194824219
    6. '4' → logprob: -6.734062194824219
    7. '   ' → logprob: -10.234062194824219
    8. '```' → logprob: -11.234062194824219
    9. '  ' → logprob: -11.421562194824219
    10. '	' → logprob: -11.546562194824219

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10503865033388138
    2. '2' → logprob: -2.855038642883301
    3. '5' → logprob: -3.230038642883301
    4. '3' → logprob: -6.355038642883301
    5. '4' → logprob: -7.605038642883301
    6. ' ' → logprob: -8.5425386428833
    7. '	' → logprob: -10.6675386428833
    8. '```' → logprob: -10.6675386428833
    9. '   ' → logprob: -10.8550386428833
    10. 'len' → logprob: -11.7925386428833

Token 45: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000645360560156405
    2. ':
' → logprob: -7.750645160675049
    3. '   ' → logprob: -9.125645637512207
    4. '       ' → logprob: -9.750645637512207
    5. ' and' → logprob: -10.750645637512207
    6. '):' → logprob: -11.250645637512207
    7. ' or' → logprob: -11.750645637512207
    8. ' :' → logprob: -13.875645637512207
    9. ')' → logprob: -14.375645637512207
    10. 'and' → logprob: -14.500645637512207

Token 46: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7631900310516357
    2. 'len' → logprob: -1.6381900310516357
    3. ' hands' → logprob: -2.0131900310516357
    4. ' all' → logprob: -2.6381900310516357
    5. ' sorted' → logprob: -3.5131900310516357
    6. ' abs' → logprob: -4.013190269470215
    7. ' sum' → logprob: -4.263190269470215
    8. ' (' → logprob: -4.388190269470215
    9. 'hands' → logprob: -4.513190269470215
    10. ' max' → logprob: -4.763190269470215

Token 47: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0017829985590651631
    2. '(' → logprob: -6.5017828941345215
    3. ' (' → logprob: -8.87678337097168
    4. '(h' → logprob: -9.50178337097168
    5. '<|end|>' → logprob: -9.75178337097168
    6. ' ' → logprob: -13.12678337097168
    7. 's' → logprob: -13.50178337097168
    8. ')' → logprob: -13.87678337097168
    9. '(hand' → logprob: -14.37678337097168
    10. '<|end|>' → logprob: -14.50178337097168

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002852305769920349
    2. '==' → logprob: -6.752852439880371
    3. ' )' → logprob: -7.252852439880371
    4. ')==' → logprob: -7.252852439880371
    5. ' ==' → logprob: -8.502852439880371
    6. '()' → logprob: -11.252852439880371
    7. '）' → logprob: -11.752852439880371
    8. '   ' → logprob: -11.752852439880371
    9. ' ' → logprob: -12.002852439880371
    10. '```' → logprob: -12.377852439880371

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5388129949569702
    2. '==' → logprob: -0.9138129949569702
    3. ' ' → logprob: -4.66381311416626
    4. '2' → logprob: -6.53881311416626
    5. ' in' → logprob: -7.16381311416626
    6. ' <=' → logprob: -7.16381311416626
    7. '   ' → logprob: -7.66381311416626
    8. '0' → logprob: -7.91381311416626
    9. '>' → logprob: -8.163812637329102
    10. '<=' → logprob: -8.288812637329102

Token 50: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3220977485179901
    2. ' ' → logprob: -1.4470977783203125
    3. '5' → logprob: -3.6970977783203125
    4. '4' → logprob: -4.8220977783203125
    5. '3' → logprob: -5.0720977783203125
    6. '0' → logprob: -7.4470977783203125
    7. '1' → logprob: -8.072097778320312
    8. '```' → logprob: -10.884597778320312
    9. '   ' → logprob: -10.947097778320312
    10. '  ' → logprob: -11.072097778320312

Token 51: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01840182952582836
    2. '5' → logprob: -4.643401622772217
    3. '3' → logprob: -5.018401622772217
    4. '4' → logprob: -6.768401622772217
    5. '0' → logprob: -7.393401622772217
    6. ' ' → logprob: -8.955902099609375
    7. '1' → logprob: -10.830902099609375
    8. '   ' → logprob: -11.143402099609375
    9. '```' → logprob: -11.643402099609375
    10. '``' → logprob: -11.893402099609375

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006763351848348975
    2. ' or' → logprob: -7.625676155090332
    3. ' :' → logprob: -9.000676155090332
    4. ' and' → logprob: -10.250676155090332
    5. ':
' → logprob: -11.250676155090332
    6. '   ' → logprob: -12.000676155090332
    7. 'or' → logprob: -12.375676155090332
    8. '):' → logprob: -13.000676155090332
    9. ',' → logprob: -14.375676155090332
    10. '    ' → logprob: -14.500676155090332

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03942018747329712
    2. ':' → logprob: -3.2894201278686523
    3. '   ' → logprob: -7.039420127868652
    4. ' continue' → logprob: -8.164420127868652
    5. 'continue' → logprob: -9.289420127868652
    6. '           ' → logprob: -10.664420127868652
    7. ':
' → logprob: -11.664420127868652
    8. ' or' → logprob: -11.664420127868652
    9. '.' → logprob: -11.789420127868652
    10. '	continue' → logprob: -12.039420127868652

Token 54: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6758707761764526
    2. '   ' → logprob: -0.8008707761764526
    3. ' continue' → logprob: -3.925870895385742
    4. ' print' → logprob: -4.675870895385742
    5. 'print' → logprob: -5.175870895385742
    6. 'continue' → logprob: -5.675870895385742
    7. '    ' → logprob: -6.675870895385742
    8. '```' → logprob: -7.050870895385742
    9. '    
' → logprob: -7.425870895385742
    10. '\n' → logprob: -8.550870895385742

Token 55: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19501720368862152
    2. 'i' → logprob: -3.070017099380493
    3. '_' → logprob: -3.445017099380493
    4. ' _' → logprob: -3.570017099380493
    5. ' h' → logprob: -4.070017337799072
    6. ' hand' → logprob: -4.195017337799072
    7. ' x' → logprob: -4.820017337799072
    8. ' n' → logprob: -5.070017337799072
    9. 'h' → logprob: -5.757517337799072
    10. ' hands' → logprob: -5.882517337799072

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009161042980849743
    2. 'in' → logprob: -4.759160995483398
    3. ' ' → logprob: -8.009160995483398
    4. '_' → logprob: -9.509160995483398
    5. '    ' → logprob: -10.009160995483398
    6. ' _' → logprob: -10.134160995483398
    7. '   ' → logprob: -11.634160995483398
    8. '  ' → logprob: -11.884160995483398
    9. 'range' → logprob: -11.884160995483398
    10. 's' → logprob: -12.384160995483398

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4630320966243744
    2. 'range' → logprob: -1.0880321264266968
    3. ' hands' → logprob: -3.7130320072174072
    4. 'hands' → logprob: -5.213032245635986
    5. 's' → logprob: -6.463032245635986
    6. ' s' → logprob: -6.713032245635986
    7. '_' → logprob: -8.213031768798828
    8. '[' → logprob: -8.588031768798828
    9. ' ' → logprob: -8.963031768798828
    10. ' ran' → logprob: -9.213031768798828

Token 58: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026511257514357567
    2. ' ' → logprob: -4.651511192321777
    3. '3' → logprob: -5.651511192321777
    4. ' (' → logprob: -6.026511192321777
    5. '2' → logprob: -6.151511192321777
    6. ' hands' → logprob: -6.151511192321777
    7. '4' → logprob: -6.276511192321777
    8. '5' → logprob: -7.026511192321777
    9. '(s' → logprob: -7.151511192321777
    10. '10' → logprob: -7.526511192321777

Token 59: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.410978227853775
    2. '2' → logprob: -1.9109781980514526
    3. '4' → logprob: -2.535978317260742
    4. '5' → logprob: -2.910978317260742
    5. '10' → logprob: -4.035978317260742
    6. '1' → logprob: -4.660978317260742
    7. '6' → logprob: -5.160978317260742
    8. 'len' → logprob: -5.285978317260742
    9. '7' → logprob: -5.535978317260742
    10. ' ' → logprob: -5.910978317260742

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05819863826036453
    2. ')' → logprob: -3.0581986904144287
    3. '):
' → logprob: -5.18319845199585
    4. '   ' → logprob: -6.30819845199585
    5. ' ):' → logprob: -6.93319845199585
    6. ':' → logprob: -7.55819845199585
    7. ' )' → logprob: -8.058198928833008
    8. '       ' → logprob: -8.933198928833008
    9. 'print' → logprob: -10.433198928833008
    10. ',' → logprob: -10.808198928833008

Token 61: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.518875002861023
    2. '   ' → logprob: -1.643875002861023
    3. ' print' → logprob: -1.768875002861023
    4. 'print' → logprob: -3.2688751220703125
    5. '    ' → logprob: -6.7688751220703125
    6. '           ' → logprob: -7.3938751220703125
    7. ' _' → logprob: -8.393875122070312
    8. '        ' → logprob: -8.643875122070312
    9. '	print' → logprob: -8.643875122070312
    10. ' hands' → logprob: -8.768875122070312

Token 62: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.380382776260376
    2. '_' → logprob: -1.630382776260376
    3. ' print' → logprob: -3.255382776260376
    4. '   ' → logprob: -3.505382776260376
    5. 'hands' → logprob: -4.005382537841797
    6. ' hands' → logprob: -4.130382537841797
    7. ' _' → logprob: -5.005382537841797
    8. 'input' → logprob: -5.130382537841797
    9. ' input' → logprob: -6.130382537841797
    10. 'int' → logprob: -7.255382537841797

Token 63: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.762657642364502
    2. '(h' → logprob: -1.512657642364502
    3. '('' → logprob: -1.762657642364502
    4. '(' → logprob: -2.387657642364502
    5. '("*' → logprob: -4.012657642364502
    6. '('*' → logprob: -4.387657642364502
    7. '()' → logprob: -5.012657642364502
    8. '"' → logprob: -6.012657642364502
    9. 'hands' → logprob: -6.137657642364502
    10. '(s' → logprob: -6.262657642364502

Token 64: '3' (ID: 18)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6172270178794861
    2. ''' → logprob: -1.3672270774841309
    3. 'hands' → logprob: -3.242227077484131
    4. '"*' → logprob: -3.367227077484131
    5. ''*' → logprob: -3.492227077484131
    6. 's' → logprob: -4.242227077484131
    7. '0' → logprob: -4.867227077484131
    8. 'h' → logprob: -5.242227077484131
    9. 'hand' → logprob: -5.429727077484131
    10. ''O' → logprob: -5.617227077484131

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009455840103328228
    2. ' )' → logprob: -5.259455680847168
    3. ',' → logprob: -6.884455680847168
    4. '*' → logprob: -6.884455680847168
    5. ')
' → logprob: -7.509455680847168
    6. '   ' → logprob: -8.134455680847168
    7. '0' → logprob: -8.259455680847168
    8. '+' → logprob: -8.259455680847168
    9. ' ,' → logprob: -9.384455680847168
    10. ' ' → logprob: -9.509455680847168

Token 66: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003680836409330368
    2. '       ' → logprob: -6.62868070602417
    3. 'elif' → logprob: -6.75368070602417
    4. 'else' → logprob: -7.37868070602417
    5. ' else' → logprob: -8.378681182861328
    6. ' elif' → logprob: -9.378681182861328
    7. ' ' → logprob: -9.503681182861328
    8. '    
' → logprob: -10.378681182861328
    9. '	elif' → logprob: -10.878681182861328
    10. '<|end|>' → logprob: -11.003681182861328

Token 67: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009731597383506596
    2. 'elif' → logprob: -7.625973224639893
    3. '       ' → logprob: -8.875972747802734
    4. '\n' → logprob: -9.250972747802734
    5. 'continue' (adapté à ' continue') → logprob: -9.750972747802734
    6. 'else' → logprob: -9.875972747802734
    7. '    
' → logprob: -10.000972747802734
    8. '
' → logprob: -10.750972747802734
    9. ' continue' → logprob: -11.000972747802734
    10. '	continue' → logprob: -11.125972747802734

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022734612226486206
    2. 'elif' → logprob: -4.647734642028809
    3. '    
' → logprob: -4.772734642028809
    4. 'else' → logprob: -6.647734642028809
    5. '<|end|>' → logprob: -7.272734642028809
    6. 'if' → logprob: -7.772734642028809
    7. 's' → logprob: -7.897734642028809
    8. ' elif' → logprob: -7.897734642028809
    9. '```' → logprob: -8.022734642028809
    10. '
' → logprob: -8.647734642028809

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038811923004686832
    2. '    
' → logprob: -6.003880977630615
    3. 'elif' → logprob: -7.628880977630615
    4. '<|end|>' → logprob: -8.128881454467773
    5. 'if' → logprob: -9.253881454467773
    6. ' elif' → logprob: -9.378881454467773
    7. 'else' → logprob: -9.628881454467773
    8. ' if' → logprob: -9.753881454467773
    9. '```' → logprob: -9.753881454467773
    10. '
' → logprob: -10.128881454467773

Token 70: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.226210117340088
    2. 'else' → logprob: -2.101210117340088
    3. 'elif' → logprob: -2.226210117340088
    4. 'print' → logprob: -2.726210117340088
    5. ' else' → logprob: -2.851210117340088
    6. 's' → logprob: -2.976210117340088
    7. ' elif' → logprob: -2.976210117340088
    8. 'n' → logprob: -3.351210117340088
    9. ' 
' → logprob: -3.351210117340088
    10. 'p' → logprob: -3.601210117340088

Token 71: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06780984252691269
    2. 'len' → logprob: -3.067809820175171
    3. ' hands' → logprob: -4.69281005859375
    4. ' ' → logprob: -5.19281005859375
    5. ' max' → logprob: -6.06781005859375
    6. ' sum' → logprob: -8.06781005859375
    7. 'hands' → logprob: -8.06781005859375
    8. '(len' → logprob: -8.19281005859375
    9. ' s' → logprob: -8.44281005859375
    10. ' all' → logprob: -8.81781005859375

Token 72: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014306291937828064
    2. 'hands' → logprob: -5.26430606842041
    3. ' len' → logprob: -5.38930606842041
    4. 'max' → logprob: -7.01430606842041
    5. '4' → logprob: -7.26430606842041
    6. '5' → logprob: -7.63930606842041
    7. '2' → logprob: -7.76430606842041
    8. '3' → logprob: -7.88930606842041
    9. '0' → logprob: -8.13930606842041
    10. ' ' → logprob: -8.26430606842041

Token 73: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47257569432258606
    2. '0' → logprob: -2.0975756645202637
    3. ' ' → logprob: -2.3475756645202637
    4. '2' → logprob: -3.3475756645202637
    5. ' not' → logprob: -3.4725756645202637
    6. '6' → logprob: -3.7225756645202637
    7. '7' → logprob: -3.9725756645202637
    8. '1' → logprob: -4.722575664520264
    9. ' <' → logprob: -5.097575664520264
    10. 'in' → logprob: -5.347575664520264

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18572458624839783
    2. 'in' → logprob: -1.8107246160507202
    3. 's' → logprob: -5.31072473526001
    4. ' hands' → logprob: -8.435724258422852
    5. 'hands' → logprob: -8.560724258422852
    6. ' s' → logprob: -8.935724258422852
    7. '   ' → logprob: -9.310724258422852
    8. ' ' → logprob: -9.810724258422852
    9. ' not' → logprob: -9.935724258422852
    10. ',' → logprob: -10.310724258422852

Token 75: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19083616137504578
    2. ' s' → logprob: -1.8158361911773682
    3. ' hands' → logprob: -4.940835952758789
    4. 'hands' → logprob: -5.565835952758789
    5. 'h' → logprob: -10.815835952758789
    6. '	s' → logprob: -12.628335952758789
    7. 'Hands' → logprob: -12.690835952758789
    8. '{s' → logprob: -12.690835952758789
    9. ' ' → logprob: -13.065835952758789
    10. ' h' → logprob: -13.128335952758789

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013295166194438934
    2. ' or' → logprob: -4.8882951736450195
    3. ' and' → logprob: -5.2632951736450195
    4. ' :' → logprob: -8.63829517364502
    5. ':
' → logprob: -8.88829517364502
    6. '   ' → logprob: -9.63829517364502
    7. 'and' → logprob: -9.76329517364502
    8. 'or' → logprob: -10.88829517364502
    9. '       ' → logprob: -11.13829517364502
    10. '):' → logprob: -11.63829517364502

Token 77: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02159102074801922
    2. '       ' → logprob: -4.6465911865234375
    3. '   ' → logprob: -4.8965911865234375
    4. ':
' → logprob: -6.1465911865234375
    5. ' or' → logprob: -6.8965911865234375
    6. ' and' → logprob: -7.1465911865234375
    7. ' :' → logprob: -9.646591186523438
    8. ',' → logprob: -9.771591186523438
    9. '):' → logprob: -9.896591186523438
    10. ' ' → logprob: -10.396591186523438

Token 78: ' win' (ID: 4449)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28143900632858276
    2. '   ' → logprob: -2.0314390659332275
    3. 'print' → logprob: -3.2814390659332275
    4. ' print' → logprob: -3.4064390659332275
    5. ' for' → logprob: -3.6564390659332275
    6. '    ' → logprob: -5.156438827514648
    7. 'for' → logprob: -5.406438827514648
    8. ' ' → logprob: -6.531438827514648
    9. '    
' → logprob: -6.656438827514648
    10. '           ' → logprob: -7.156438827514648

Token 79: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7963972091674805
    2. 's' → logprob: -1.1713972091674805
    3. 'ning' → logprob: -2.7963972091674805
    4. 'ner' → logprob: -3.5463972091674805
    5. ':' → logprob: -3.6713972091674805
    6. '()' → logprob: -3.7963972091674805
    7. ' ' → logprob: -4.0463972091674805
    8. '[' → logprob: -4.2963972091674805
    9. '   ' → logprob: -4.5463972091674805
    10. '(' → logprob: -4.9213972091674805

Token 80: ' lose' (ID: 12577)
  Prédit: ' lose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lose' → logprob: -0.6819509267807007
    2. 'lose' → logprob: -1.3069509267807007
    3. ' =' → logprob: -3.3069510459899902
    4. 'loss' → logprob: -3.3069510459899902
    5. 'lo' → logprob: -3.8069510459899902
    6. ' loss' → logprob: -3.9319510459899902
    7. ' lo' → logprob: -4.30695104598999
    8. '=' → logprob: -4.55695104598999
    9. ' ' → logprob: -4.61945104598999
    10. 'los' → logprob: -5.24445104598999

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11299417167901993
    2. '=' → logprob: -2.2379941940307617
    3. ',' → logprob: -8.862994194030762
    4. ' ' → logprob: -11.112994194030762
    5. ')' → logprob: -12.112994194030762
    6. 's' → logprob: -12.362994194030762
    7. ' ,' → logprob: -13.112994194030762
    8. ' =
' → logprob: -13.862994194030762
    9. '_' → logprob: -14.362994194030762
    10. '[' → logprob: -14.612994194030762

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.544201135635376
    2. ' hands' → logprob: -1.419201135635376
    3. '0' → logprob: -3.294201135635376
    4. ' max' → logprob: -3.419201135635376
    5. 'hands' → logprob: -4.044200897216797
    6. ' (' → logprob: -4.169200897216797
    7. ' False' → logprob: -4.544200897216797
    8. '5' → logprob: -5.044200897216797
    9. 'False' → logprob: -5.169200897216797
    10. ' True' → logprob: -5.169200897216797

Token 83: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2328813076019287
    2. '3' → logprob: -1.9828813076019287
    3. '2' → logprob: -2.1078813076019287
    4. 'max' → logprob: -2.3578813076019287
    5. '(' → logprob: -2.4828813076019287
    6. '0' → logprob: -2.7328813076019287
    7. '4' → logprob: -3.1078813076019287
    8. '1' → logprob: -3.3578813076019287
    9. 'hands' → logprob: -3.4828813076019287
    10. 'False' → logprob: -3.6078813076019287

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03093588352203369
    2. ' ,' → logprob: -3.780935764312744
    3. '0' → logprob: -5.530935764312744
    4. ' ' → logprob: -6.780935764312744
    5. '3' → logprob: -7.030935764312744
    6. '7' → logprob: -8.155936241149902
    7. '6' → logprob: -8.155936241149902
    8. '2' → logprob: -8.280936241149902
    9. '4' → logprob: -8.280936241149902
    10. '1' → logprob: -8.405936241149902

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9423764944076538
    2. '4' → logprob: -1.4423764944076538
    3. '5' → logprob: -1.9423764944076538
    4. '3' → logprob: -2.0673766136169434
    5. ' ' → logprob: -2.3173766136169434
    6. '2' → logprob: -5.567376613616943
    7. '0' → logprob: -6.942376613616943
    8. '6' → logprob: -8.067376136779785
    9. '7' → logprob: -9.317376136779785
    10. '9' → logprob: -9.442376136779785

Token 86: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.2201858013868332
    2. '1' → logprob: -1.9701857566833496
    3. '5' → logprob: -3.5951857566833496
    4. '3' → logprob: -3.7201857566833496
    5. '2' → logprob: -5.72018575668335
    6. '0' → logprob: -6.09518575668335
    7. '-' → logprob: -8.095186233520508
    8. ' ' → logprob: -8.095186233520508
    9. '6' → logprob: -9.282686233520508
    10. '7' → logprob: -9.345186233520508

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6922549605369568
    2. '
' → logprob: -0.8172549605369568
    3. '<|end|>' → logprob: -3.1922550201416016
    4. '    
' → logprob: -5.192255020141602
    5. '       ' → logprob: -6.067255020141602
    6. '  
' → logprob: -6.567255020141602
    7. '<|end|>' → logprob: -6.692255020141602
    8. '```' → logprob: -6.817255020141602
    9. ',' → logprob: -6.942255020141602
    10. 'else' → logprob: -6.942255020141602

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011058545671403408
    2. 'else' → logprob: -5.761058330535889
    3. '
' → logprob: -6.011058330535889
    4. '       ' → logprob: -6.511058330535889
    5. '    
' → logprob: -6.511058330535889
    6. '<|end|>' → logprob: -7.136058330535889
    7. 'elif' → logprob: -7.261058330535889
    8. ' else' → logprob: -8.136058807373047
    9. ',' → logprob: -8.511058807373047
    10. '  
' → logprob: -9.636058807373047

Token 89: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2743997573852539
    2. 'elif' (adapté à ' elif') → logprob: -1.899399757385254
    3. ' else' → logprob: -2.649399757385254
    4. ' elif' → logprob: -4.524399757385254
    5. '   ' → logprob: -4.774399757385254
    6. 'e' → logprob: -8.774399757385254
    7. ' ' → logprob: -10.024399757385254
    8. 'el' → logprob: -11.024399757385254
    9. '<|end|>' → logprob: -11.274399757385254
    10. 'if' → logprob: -11.399399757385254

Token 90: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16369661688804626
    2. '1' → logprob: -2.913696527481079
    3. '2' → logprob: -3.163696527481079
    4. '0' → logprob: -3.163696527481079
    5. '3' → logprob: -5.038696765899658
    6. '5' → logprob: -6.913696765899658
    7. ' s' → logprob: -7.038696765899658
    8. ' len' → logprob: -7.601196765899658
    9. '4' → logprob: -7.663696765899658
    10. 's' → logprob: -7.663696765899658

Token 91: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0477924346923828
    2. '2' → logprob: -1.5477924346923828
    3. '3' → logprob: -1.5477924346923828
    4. '1' → logprob: -2.172792434692383
    5. '0' → logprob: -2.422792434692383
    6. '5' → logprob: -4.422792434692383
    7. '4' → logprob: -5.797792434692383
    8. 's' → logprob: -6.172792434692383
    9. 'len' → logprob: -6.797792434692383
    10. '6' → logprob: -6.985292434692383

Token 92: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.009869768284261227
    2. ' in' → logprob: -4.759869575500488
    3. 'not' → logprob: -6.884869575500488
    4. ' ' → logprob: -9.009869575500488
    5. ' no' → logprob: -9.259869575500488
    6. 'in' → logprob: -11.384869575500488
    7. 'no' → logprob: -14.259869575500488
    8. '	not' → logprob: -14.384869575500488
    9. ' ' → logprob: -15.259869575500488
    10. ' n' → logprob: -15.509869575500488

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007613963447511196
    2. 'in' → logprob: -4.8826141357421875
    3. 's' → logprob: -12.757614135742188
    4. ' not' → logprob: -13.632614135742188
    5. 'i' → logprob: -13.882614135742188
    6. ' ' → logprob: -14.132614135742188
    7. ' i' → logprob: -14.257614135742188
    8. ' s' → logprob: -15.257614135742188
    9. '[' → logprob: -15.632614135742188
    10. 'not' → logprob: -15.757614135742188

Token 94: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31327372789382935
    2. 's' → logprob: -1.3132736682891846
    3. ' ' → logprob: -11.563273429870605
    4. '_s' → logprob: -15.125773429870605
    5. '<|end|>' → logprob: -15.125773429870605
    6. ' ' → logprob: -15.625773429870605
    7. '	s' → logprob: -15.750773429870605
    8. '(s' → logprob: -15.938273429870605
    9. '  ' → logprob: -16.000774383544922
    10. 'set' → logprob: -16.563274383544922

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007956892368383706
    2. ':
' → logprob: -7.750795841217041
    3. ' :' → logprob: -8.000795364379883
    4. '):' → logprob: -11.750795364379883
    5. '==' → logprob: -12.000795364379883
    6. '=' → logprob: -12.500795364379883
    7. ' ==' → logprob: -12.500795364379883
    8. ',' → logprob: -12.750795364379883
    9. ' :
' → logprob: -13.250795364379883
    10. ')' → logprob: -14.000795364379883

Token 96: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7494317293167114
    2. ':
' → logprob: -0.9994317293167114
    3. '       ' → logprob: -1.8744317293167114
    4. '   ' → logprob: -6.124431610107422
    5. '3' → logprob: -7.124431610107422
    6. ' :
' → logprob: -7.124431610107422
    7. ',' → logprob: -7.749431610107422
    8. ' ' → logprob: -7.874431610107422
    9. ' :' → logprob: -8.499431610107422
    10. '):
' → logprob: -8.874431610107422

Token 97: ' win' (ID: 4449)
  Prédit: ' win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.7303875088691711
    2. 'win' (adapté à ' win') → logprob: -0.7303875088691711
    3. '       ' → logprob: -3.9803874492645264
    4. 'lose' → logprob: -4.7303876876831055
    5. ' lose' → logprob: -5.2303876876831055
    6. '
' → logprob: -6.7303876876831055
    7. '   ' → logprob: -7.2303876876831055
    8. '	win' → logprob: -7.3553876876831055
    9. ' ' → logprob: -8.105387687683105
    10. '    ' → logprob: -9.230387687683105

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026959821116179228
    2. ' ,' → logprob: -6.0026960372924805
    3. '=' → logprob: -9.00269603729248
    4. ' =' → logprob: -9.25269603729248
    5. ' ' → logprob: -14.00269603729248
    6. '2' → logprob: -16.377695083618164
    7. '3' → logprob: -16.627695083618164
    8. '1' → logprob: -16.627695083618164
    9. '0' → logprob: -17.502695083618164
    10. '‌,' → logprob: -17.502695083618164

Token 99: ' lose' (ID: 12577)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7833118438720703
    2. ' lose' → logprob: -1.2833118438720703
    3. '3' → logprob: -2.0333118438720703
    4. 'lose' → logprob: -2.1583118438720703
    5. '1' → logprob: -4.40831184387207
    6. '=' → logprob: -6.40831184387207
    7. '0' → logprob: -6.40831184387207
    8. ' =' → logprob: -6.65831184387207
    9. '2' → logprob: -7.65831184387207
    10. '4' → logprob: -7.84581184387207

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054928552359342575
    2. '=' → logprob: -2.9299285411834717
    3. ' ' → logprob: -10.30492877960205
    4. ',' → logprob: -11.42992877960205
    5. ' ,' → logprob: -13.42992877960205
    6. '    ' → logprob: -16.179927825927734
    7. '＝' → logprob: -16.804927825927734
    8. '   ' → logprob: -16.804927825927734
    9. ' =[' → logprob: -17.054927825927734
    10. ' ' → logprob: -17.242427825927734

Token 101: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47745010256767273
    2. '1' → logprob: -1.2274501323699951
    3. '3' → logprob: -2.477450132369995
    4. ',' → logprob: -6.727449893951416
    5. '0' → logprob: -7.727449893951416
    6. ' ,' → logprob: -8.102450370788574
    7. '2' → logprob: -8.227450370788574
    8. '   ' → logprob: -9.039950370788574
    9. ' (' → logprob: -9.164950370788574
    10. '    ' → logprob: -9.852450370788574

Token 102: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5839400887489319
    2. '3' → logprob: -1.208940029144287
    3. ' ' → logprob: -1.958940029144287
    4. '2' → logprob: -6.708940029144287
    5. '   ' → logprob: -7.458940029144287
    6. ',' → logprob: -8.021440505981445
    7. '(' → logprob: -8.896440505981445
    8. ' (' → logprob: -9.083940505981445
    9. '0' → logprob: -9.521440505981445
    10. '[' → logprob: -10.021440505981445

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005991425714455545
    2. ' ,' → logprob: -7.625598907470703
    3. '1' → logprob: -9.375598907470703
    4. '2' → logprob: -11.250598907470703
    5. ' ' → logprob: -12.125598907470703
    6. '3' → logprob: -13.000598907470703
    7. ',
' → logprob: -13.750598907470703
    8. '   ' → logprob: -14.000598907470703
    9. '5' → logprob: -14.125598907470703
    10. '4' → logprob: -14.250598907470703

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02728598564863205
    2. '2' → logprob: -3.7772860527038574
    3. ' ' → logprob: -5.527286052703857
    4. '5' → logprob: -10.9022855758667
    5. '   ' → logprob: -11.0272855758667
    6. '  ' → logprob: -11.7772855758667
    7. '4' → logprob: -12.1522855758667
    8. '	' → logprob: -13.9647855758667
    9. '
' → logprob: -13.9647855758667
    10. '0' → logprob: -14.0272855758667

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01118315476924181
    2. '2' → logprob: -4.511183261871338
    3. ' ' → logprob: -9.51118278503418
    4. '5' → logprob: -10.38618278503418
    5. '4' → logprob: -10.76118278503418
    6. '   ' → logprob: -12.63618278503418
    7. '
' → logprob: -13.26118278503418
    8. '  ' → logprob: -13.82368278503418
    9. '0' → logprob: -14.13618278503418
    10. '	' → logprob: -14.38618278503418

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038400620222091675
    2. 'else' → logprob: -3.413400650024414
    3. ' else' → logprob: -5.413400650024414
    4. 'elif' → logprob: -8.288400650024414
    5. ' elif' → logprob: -10.663400650024414
    6. '	else' → logprob: -12.163400650024414
    7. ',' → logprob: -13.038400650024414
    8. ')' → logprob: -13.788400650024414
    9. '  ' → logprob: -13.913400650024414
    10. '<|end|>' → logprob: -14.288400650024414

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020735271275043488
    2. 'else' → logprob: -3.895735263824463
    3. ' else' → logprob: -8.645735740661621
    4. 'elif' → logprob: -11.020735740661621
    5. '	else' → logprob: -14.895735740661621
    6. ' elif' → logprob: -15.645735740661621
    7. '  ' → logprob: -15.645735740661621
    8. '       ' → logprob: -16.395734786987305
    9. ')' → logprob: -17.020734786987305
    10. ',' → logprob: -17.270734786987305

Token 108: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.17202799022197723
    2. '   ' → logprob: -2.047028064727783
    3. ' else' → logprob: -3.672028064727783
    4. 'elif' → logprob: -5.672028064727783
    5. ' elif' → logprob: -9.922027587890625
    6. '	else' → logprob: -12.797027587890625
    7. ' ' → logprob: -12.922027587890625
    8. '  ' → logprob: -13.172027587890625
    9. ',' → logprob: -14.047027587890625
    10. '    
' → logprob: -14.172027587890625

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4742121994495392
    2. ':
' → logprob: -0.9742121696472168
    3. '   ' → logprob: -9.474212646484375
    4. ':
' → logprob: -10.224212646484375
    5. '       ' → logprob: -11.349212646484375
    6. ' :
' → logprob: -12.474212646484375
    7. ' :' → logprob: -13.099212646484375
    8. ':

' → logprob: -13.349212646484375
    9. '  ' → logprob: -14.099212646484375
    10. '    ' → logprob: -14.849212646484375

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29252779483795166
    2. 'win' → logprob: -1.7925277948379517
    3. '       ' → logprob: -2.917527675628662
    4. ' win' → logprob: -3.542527675628662
    5. 'lose' → logprob: -5.917527675628662
    6. '	win' → logprob: -7.417527675628662
    7. '  ' → logprob: -8.04252815246582
    8. ' ' → logprob: -9.04252815246582
    9. '
' → logprob: -9.41752815246582
    10. '    ' → logprob: -10.04252815246582

Token 111: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.03617477044463158
    2. 'lose' → logprob: -3.661174774169922
    3. ' win' → logprob: -5.036174774169922
    4. '1' → logprob: -6.286174774169922
    5. '   ' → logprob: -7.911174774169922
    6. '       ' → logprob: -8.036174774169922
    7. ' lose' → logprob: -8.286174774169922
    8. '      ' → logprob: -9.036174774169922
    9. 'print' → logprob: -9.536174774169922
    10. '  ' → logprob: -9.911174774169922

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013035668234806508
    2. ' ,' → logprob: -9.000130653381348
    3. '=' → logprob: -12.125130653381348
    4. ' =' → logprob: -14.250130653381348
    5. '`,' → logprob: -14.875130653381348
    6. '‌,' → logprob: -15.500130653381348
    7. ',
' → logprob: -16.87512969970703
    8. '<|end|>' → logprob: -17.25012969970703
    9. ' ' → logprob: -17.62512969970703
    10. '_,' → logprob: -17.87512969970703

Token 113: ' lose' (ID: 12577)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.6151584386825562
    2. '1' → logprob: -1.1151584386825562
    3. '2' → logprob: -2.7401585578918457
    4. ' lose' → logprob: -3.2401585578918457
    5. ' ' → logprob: -3.6151585578918457
    6. '  ' → logprob: -8.240158081054688
    7. '   ' → logprob: -8.490158081054688
    8. '3' → logprob: -9.615158081054688
    9. '0' → logprob: -9.615158081054688
    10. 'win' → logprob: -9.865158081054688

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3136212229728699
    2. ' =' → logprob: -1.3136212825775146
    3. ',' → logprob: -7.9386210441589355
    4. ' ,' → logprob: -13.438621520996094
    5. ' ' → logprob: -14.438621520996094
    6. '＝' → logprob: -16.188621520996094
    7. '   ' → logprob: -16.438621520996094
    8. '=

' → logprob: -16.563621520996094
    9. 's' → logprob: -16.938621520996094
    10. ')' → logprob: -16.938621520996094

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.87508487701416
    3. '2' → logprob: -10.37508487701416
    4. '   ' → logprob: -13.25008487701416
    5. '  ' → logprob: -15.37508487701416
    6. '(' → logprob: -15.62508487701416
    7. '    ' → logprob: -16.625085830688477
    8. '
' → logprob: -17.250085830688477
    9. '[' → logprob: -17.250085830688477
    10. '      ' → logprob: -17.375085830688477

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5252596464706585e-05
    2. '2' → logprob: -10.125044822692871
    3. ' ' → logprob: -12.250044822692871
    4. '   ' → logprob: -16.000045776367188
    5. '```' → logprob: -16.812545776367188
    6. '  ' → logprob: -17.062545776367188
    7. '`' → logprob: -17.562545776367188
    8. '
' → logprob: -17.750045776367188
    9. '(' → logprob: -18.187545776367188
    10. '' → logprob: -18.437545776367188

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.927930654550437e-05
    2. ' ,' → logprob: -10.500029563903809
    3. '3' → logprob: -14.250029563903809
    4. '2' → logprob: -14.250029563903809
    5. ',
' → logprob: -15.750029563903809
    6. '4' → logprob: -16.875028610229492
    7. '6' → logprob: -17.375028610229492
    8. '   ' → logprob: -17.375028610229492
    9. ' ' → logprob: -18.000028610229492
    10. '7' → logprob: -19.125028610229492

Token 118: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002631238894537091
    2. ' ' → logprob: -8.250263214111328
    3. '3' → logprob: -13.375263214111328
    4. '   ' → logprob: -15.625263214111328
    5. '  ' → logprob: -17.000263214111328
    6. '1' → logprob: -17.312763214111328
    7. '２' → logprob: -18.312763214111328
    8. '۲' → logprob: -18.687763214111328
    9. '	' → logprob: -18.875263214111328
    10. '0' → logprob: -18.937763214111328

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. '3' → logprob: -14.000018119812012
    4. '   ' → logprob: -16.750017166137695
    5. '1' → logprob: -17.437517166137695
    6. '  ' → logprob: -17.937517166137695
    7. '２' → logprob: -18.687517166137695
    8. '```' → logprob: -18.687517166137695
    9. '0' → logprob: -19.125017166137695
    10. '۲' → logprob: -19.187517166137695

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5512648224830627
    2. 'for' → logprob: -1.176264762878418
    3. ' for' → logprob: -2.801264762878418
    4. 'count' → logprob: -4.176264762878418
    5. 'if' → logprob: -4.676264762878418
    6. 'result' → logprob: -4.676264762878418
    7. 'print' → logprob: -5.426264762878418
    8. 'cnt' → logprob: -5.801264762878418
    9. 'counts' → logprob: -5.926264762878418
    10. '    
' → logprob: -6.176264762878418

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4690971374511719
    2. 'for' → logprob: -1.0940971374511719
    3. ' for' → logprob: -3.344097137451172
    4. '    
' → logprob: -6.469097137451172
    5. 'if' → logprob: -6.719097137451172
    6. 'result' → logprob: -7.969097137451172
    7. 'count' → logprob: -7.969097137451172
    8. 'print' → logprob: -8.844097137451172
    9. 'score' → logprob: -9.469097137451172
    10. ' if' → logprob: -9.844097137451172

Token 122: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18050575256347656
    2. 'count' → logprob: -3.0555057525634766
    3. 'if' → logprob: -3.1805057525634766
    4. 'cnt' → logprob: -4.180505752563477
    5. ' for' → logprob: -4.555505752563477
    6. '   ' → logprob: -4.555505752563477
    7. 'result' → logprob: -4.680505752563477
    8. 'score' → logprob: -5.180505752563477
    9. 'print' → logprob: -5.430505752563477
    10. 'counts' → logprob: -5.555505752563477

Token 123: ' h' (ID: 312)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.9439693689346313
    2. ' hand' → logprob: -1.3189693689346313
    3. 'h' → logprob: -1.5689693689346313
    4. 'i' → logprob: -3.068969249725342
    5. ' h' → logprob: -3.318969249725342
    6. ' i' → logprob: -3.568969249725342
    7. 'x' → logprob: -4.943969249725342
    8. ' x' → logprob: -5.818969249725342
    9. 'num' → logprob: -5.943969249725342
    10. '_' → logprob: -6.068969249725342

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0161291491240263
    2. 'in' → logprob: -4.141129016876221
    3. 's' → logprob: -10.266129493713379
    4. ' ' → logprob: -11.266129493713379
    5. 'i' → logprob: -11.766129493713379
    6. ',' → logprob: -11.891129493713379
    7. 'h' → logprob: -12.016129493713379
    8. '_in' → logprob: -12.391129493713379
    9. '   ' → logprob: -12.766129493713379
    10. ' i' → logprob: -13.266129493713379

Token 125: ' hands' (ID: 8950)
  Prédit: ' hands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hands' → logprob: -0.6931844353675842
    2. 'hands' → logprob: -0.6931844353675842
    3. 'hand' → logprob: -10.818184852600098
    4. '   ' → logprob: -11.818184852600098
    5. ' ' → logprob: -12.568184852600098
    6. 'h' → logprob: -12.943184852600098
    7. 'Hands' → logprob: -13.193184852600098
    8. ' hans' → logprob: -14.943184852600098
    9. ' hand' → logprob: -14.943184852600098
    10. 's' → logprob: -15.068184852600098

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05490654706954956
    2. ':
' → logprob: -2.9299066066741943
    3. '   ' → logprob: -11.429906845092773
    4. ':

' → logprob: -12.679906845092773
    5. ' :' → logprob: -13.179906845092773
    6. '):
' → logprob: -13.429906845092773
    7. ',' → logprob: -13.554906845092773
    8. '=' → logprob: -14.179906845092773
    9. 'if' → logprob: -14.429906845092773
    10. '):' → logprob: -14.429906845092773

Token 127: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7126673460006714
    2. ':' → logprob: -1.0876673460006714
    3. '       ' → logprob: -2.337667465209961
    4. 'print' → logprob: -4.337667465209961
    5. '
' → logprob: -4.462667465209961
    6. ' if' → logprob: -4.587667465209961
    7. '<|end|>' → logprob: -4.587667465209961
    8. ':
' → logprob: -4.962667465209961
    9. '):' → logprob: -5.212667465209961
    10. '    
' → logprob: -5.712667465209961

Token 128: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5977519750595093
    2. ' print' → logprob: -0.9727519750595093
    3. '
' → logprob: -2.722752094268799
    4. '   ' → logprob: -6.097752094268799
    5. ' if' → logprob: -6.222752094268799
    6. '       ' → logprob: -6.972752094268799
    7. ' 
' → logprob: -8.09775161743164
    8. '\n' → logprob: -8.22275161743164
    9. 'if' → logprob: -8.84775161743164
    10. '.print' → logprob: -9.47275161743164

Token 129: '(' (ID: 7)
  Prédit: '(win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(win' → logprob: -0.1321057230234146
    2. '(' → logprob: -2.132105827331543
    3. '('' → logprob: -5.632105827331543
    4. '("' → logprob: -7.257105827331543
    5. 'win' → logprob: -7.632105827331543
    6. '(f' → logprob: -8.757105827331543
    7. '()' → logprob: -9.382105827331543
    8. ' win' → logprob: -9.632105827331543
    9. '(w' → logprob: -10.382105827331543
    10. '((' → logprob: -10.507105827331543

Token 130: '1' (ID: 16)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.01055818423628807
    2. ' win' → logprob: -4.885558128356934
    3. '3' → logprob: -6.010558128356934
    4. '(win' → logprob: -8.760558128356934
    5. 'lose' → logprob: -8.885558128356934
    6. ' ' → logprob: -9.760558128356934
    7. '   ' → logprob: -9.885558128356934
    8. '	win' → logprob: -11.010558128356934
    9. '2' → logprob: -11.635558128356934
    10. 'w' → logprob: -11.885558128356934

Token 131: ' if' (ID: 538)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8188608884811401
    2. ' if' → logprob: -0.8188608884811401
    3. '2' → logprob: -3.0688610076904297
    4. '8' → logprob: -3.6938610076904297
    5. 'if' → logprob: -4.31886100769043
    6. '1' → logprob: -5.06886100769043
    7. '00' → logprob: -5.19386100769043
    8. '3' → logprob: -5.69386100769043
    9. '7' → logprob: -5.69386100769043
    10. '5' → logprob: -5.69386100769043

Token 132: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3868846297264099
    2. ' h' → logprob: -1.1368846893310547
    3. ' ' → logprob: -11.511884689331055
    4. '   ' → logprob: -13.886884689331055
    5. ' win' → logprob: -14.511884689331055
    6. '(h' → logprob: -14.636884689331055
    7. '	h' → logprob: -14.699384689331055
    8. ' (' → logprob: -15.574384689331055
    9. ' ' → logprob: -15.699384689331055
    10. '    ' → logprob: -15.824384689331055

Token 133: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759560465812683
    2. '==' → logprob: -0.8259560465812683
    3. ' ' → logprob: -11.325956344604492
    4. '=' → logprob: -13.575956344604492
    5. '==
' → logprob: -13.825956344604492
    6. ' !=' → logprob: -14.325956344604492
    7. '!=' → logprob: -14.450956344604492
    8. ' ' → logprob: -15.450956344604492
    9. ')' → logprob: -15.825956344604492
    10. ')==' → logprob: -15.950956344604492

Token 134: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.07647281885147095
    2. ' win' → logprob: -2.701472759246826
    3. 'lose' → logprob: -5.201472759246826
    4. ' lose' → logprob: -7.201472759246826
    5. ' ' → logprob: -9.326473236083984
    6. '   ' → logprob: -10.388973236083984
    7. '	win' → logprob: -10.388973236083984
    8. 'wins' → logprob: -11.326473236083984
    9. 'winner' → logprob: -11.388973236083984
    10. 'los' → logprob: -11.451473236083984

Token 135: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931508183479309
    2. 'else' → logprob: -0.6931508183479309
    3. '	else' → logprob: -13.818150520324707
    4. ' ' → logprob: -14.068150520324707
    5. '
' → logprob: -14.318150520324707
    6. 'el' → logprob: -15.693150520324707
    7. 'elses' → logprob: -15.943150520324707
    8. '   ' → logprob: -16.068151473999023
    9. '

' → logprob: -16.193151473999023
    10. ' els' → logprob: -16.318151473999023

Token 136: ' ' (ID: 220)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.34946534037590027
    2. ' lose' → logprob: -1.2244653701782227
    3. 'win' → logprob: -8.474465370178223
    4. ' ' → logprob: -8.474465370178223
    5. '3' → logprob: -8.599465370178223
    6. '0' → logprob: -8.974465370178223
    7. '2' → logprob: -9.474465370178223
    8. ' win' → logprob: -9.474465370178223
    9. '   ' → logprob: -9.724465370178223
    10. '  ' → logprob: -11.099465370178223

Token 137: '2' (ID: 17)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.004506781231611967
    2. ' lose' → logprob: -5.504506587982178
    3. '3' → logprob: -8.379507064819336
    4. '2' → logprob: -9.754507064819336
    5. '0' → logprob: -10.254507064819336
    6. 'win' → logprob: -10.504507064819336
    7. 'los' → logprob: -10.879507064819336
    8. ' ' → logprob: -11.379507064819336
    9. '   ' → logprob: -11.379507064819336
    10. 'lo' → logprob: -11.754507064819336

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -13.250004768371582
    3. ' if' → logprob: -14.375004768371582
    4. '))' → logprob: -14.500004768371582
    5. ')
' → logprob: -14.625004768371582
    6. 'else' → logprob: -14.875004768371582
    7. '<|end|>' → logprob: -15.750004768371582
    8. 'if' → logprob: -16.000003814697266
    9. ' else' → logprob: -16.125003814697266
    10. '())' → logprob: -16.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 136
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 41.18%
Précision adaptée (1ère position): 44.85%
Précision (top 10): 88.97%
================================================================================
