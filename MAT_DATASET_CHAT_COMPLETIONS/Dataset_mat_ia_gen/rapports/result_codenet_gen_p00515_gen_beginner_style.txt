================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
scores = []
for i in range(5):
    point = int(input())
    if point < 40:
        point = 40
    scores.append(point)
average = sum(scores) // 5
print(average)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'scores' (ID: 109945)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' []
' (ID: 8911)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09199529886245728
    2. '.append' → logprob: -2.5919952392578125
    3. '[' → logprob: -4.7169952392578125
    4. '(' → logprob: -6.5919952392578125
    5. 'scores' → logprob: -6.8419952392578125
    6. '```' → logprob: -7.9669952392578125
    7. 's' → logprob: -8.591995239257812
    8. '\' → logprob: -8.841995239257812
    9. '(scores' → logprob: -8.841995239257812
    10. '[:]' → logprob: -9.216995239257812

Token 4: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004566599614918232
    2. '  ' → logprob: -5.629566669464111
    3. ' i' → logprob: -7.004566669464111
    4. ' scores' → logprob: -11.129566192626953
    5. ' ' → logprob: -11.379566192626953
    6. ' ‌' → logprob: -11.879566192626953
    7. '```' → logprob: -12.004566192626953
    8. 'i' → logprob: -12.129566192626953
    9. ' s' → logprob: -12.629566192626953
    10. 'scores' → logprob: -13.504566192626953

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15453656017780304
    2. 'in' → logprob: -2.154536485671997
    3. 'n' → logprob: -4.029536724090576
    4. ' ' → logprob: -4.779536724090576
    5. ' n' → logprob: -7.279536724090576
    6. ',' → logprob: -9.279536247253418
    7. '  ' → logprob: -9.904536247253418
    8. ')' → logprob: -10.279536247253418
    9. '_' → logprob: -10.529536247253418
    10. 's' → logprob: -11.029536247253418

Token 6: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005705638788640499
    2. 'range' → logprob: -5.380705833435059
    3. ' ' → logprob: -6.880705833435059
    4. ' scores' → logprob: -10.130705833435059
    5. ' ' → logprob: -11.505705833435059
    6. ' score' → logprob: -12.755705833435059
    7. ' in' → logprob: -13.380705833435059
    8. 'scores' → logprob: -14.380705833435059
    9. '	range' → logprob: -14.505705833435059
    10. '```' → logprob: -14.755705833435059

Token 7: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024215869780164212
    2. '(len' → logprob: -8.375242233276367
    3. '(length' → logprob: -13.125242233276367
    4. ' (' → logprob: -13.500242233276367
    5. '(`' → logprob: -13.625242233276367
    6. '(n' → logprob: -13.750242233276367
    7. '(range' → logprob: -14.000242233276367
    8. '```' → logprob: -14.000242233276367
    9. '((' → logprob: -14.625242233276367
    10. '(
' → logprob: -14.750242233276367

Token 8: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002756366156972945
    2. '1' → logprob: -9.125275611877441
    3. '100' → logprob: -9.375275611877441
    4. '5' → logprob: -9.500275611877441
    5. '0' → logprob: -12.875275611877441
    6. ' ' → logprob: -13.125275611877441
    7. ')' → logprob: -14.125275611877441
    8. '20' → logprob: -14.625275611877441
    9. '3' → logprob: -14.750275611877441
    10. '2' → logprob: -15.375275611877441

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520815134048462
    2. ')' → logprob: -1.5020815134048462
    3. ':' → logprob: -9.127081871032715
    4. '):
' → logprob: -11.002081871032715
    5. '+' → logprob: -11.627081871032715
    6. ',' → logprob: -12.377081871032715
    7. ' ):' → logprob: -13.252081871032715
    8. '```' → logprob: -13.627081871032715
    9. ')**' → logprob: -14.002081871032715
    10. ')：' → logprob: -14.002081871032715

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09696754068136215
    2. '    ' → logprob: -2.7219674587249756
    3. ' scores' → logprob: -4.221967697143555
    4. '    
' → logprob: -5.346967697143555
    5. '(scores' → logprob: -5.721967697143555
    6. 'scores' → logprob: -6.721967697143555
    7. '[' → logprob: -7.346967697143555
    8. '     
' → logprob: -7.471967697143555
    9. '```' → logprob: -7.721967697143555
    10. ' ' → logprob: -7.971967697143555

Token 11: ' point' (ID: 2438)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.2574291527271271
    2. 'scores' → logprob: -1.5074291229248047
    3. '   ' → logprob: -5.382429122924805
    4. 's' → logprob: -8.007429122924805
    5. '    ' → logprob: -8.507429122924805
    6. '(scores' → logprob: -9.132429122924805
    7. '```' → logprob: -9.882429122924805
    8. ' ```' → logprob: -10.132429122924805
    9. '_scores' → logprob: -10.382429122924805
    10. 'score' → logprob: -10.507429122924805

Token 12: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.143808109802194e-05
    2. 'score' → logprob: -11.125041007995605
    3. '_' → logprob: -11.875041007995605
    4. '=' → logprob: -12.000041007995605
    5. ' =' → logprob: -12.000041007995605
    6. '_s' → logprob: -12.750041007995605
    7. '_score' → logprob: -13.000041007995605
    8. 'scores' → logprob: -14.375041007995605
    9. '_scores' → logprob: -14.375041007995605
    10. ''s' → logprob: -15.250041007995605

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1550305038690567
    2. 'int' → logprob: -2.0300304889678955
    3. '0' → logprob: -4.655030727386475
    4. ' input' → logprob: -7.030030727386475
    5. ' scores' → logprob: -7.280030727386475
    6. ' randint' → logprob: -7.780030727386475
    7. ' ' → logprob: -8.280030250549316
    8. 'input' → logprob: -8.530030250549316
    9. 'scores' → logprob: -9.530030250549316
    10. '   ' → logprob: -9.530030250549316

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01245549600571394
    2. '(input' → logprob: -4.512455463409424
    3. '(scores' → logprob: -6.762455463409424
    4. '(points' → logprob: -9.262455940246582
    5. '(score' → logprob: -9.887455940246582
    6. '(point' → logprob: -9.887455940246582
    7. '('' → logprob: -10.637455940246582
    8. '()' → logprob: -12.012455940246582
    9. '(s' → logprob: -12.137455940246582
    10. '(`' → logprob: -12.762455940246582

Token 15: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7535679936408997
    2. '('' → logprob: -0.7535679936408997
    3. '()' → logprob: -3.503567934036255
    4. '("("' → logprob: -3.878567934036255
    5. '("' → logprob: -5.253568172454834
    6. '(""))' → logprob: -6.878568172454834
    7. '())' → logprob: -7.128568172454834
    8. '("")' → logprob: -7.628568172454834
    9. '()))' → logprob: -9.753567695617676
    10. ')' → logprob: -9.753567695617676

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21241384744644165
    2. 'scores' → logprob: -2.212413787841797
    3. ')' → logprob: -2.837413787841797
    4. '    
' → logprob: -5.087413787841797
    5. '(scores' → logprob: -5.587413787841797
    6. ' scores' → logprob: -5.587413787841797
    7. '```' → logprob: -5.962413787841797
    8. '_scores' → logprob: -6.087413787841797
    9. '<|end|>' → logprob: -6.337413787841797
    10. ')
' → logprob: -7.462413787841797

Token 17: ' if' (ID: 538)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.07062814384698868
    2. '   ' → logprob: -2.9456281661987305
    3. ' scores' → logprob: -4.9456281661987305
    4. 's' → logprob: -5.3206281661987305
    5. ')' → logprob: -6.6956281661987305
    6. '(scores' → logprob: -6.9456281661987305
    7. '_scores' → logprob: -7.4456281661987305
    8. '    
' → logprob: -8.94562816619873
    9. 'if' (adapté à ' if') → logprob: -9.07062816619873
    10. '```' → logprob: -9.32062816619873

Token 18: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.008864626288414001
    2. ' scores' → logprob: -5.008864402770996
    3. ' ' → logprob: -7.258864402770996
    4. ' score' → logprob: -7.508864402770996
    5. ' points' → logprob: -7.633864402770996
    6. 'point' → logprob: -8.508864402770996
    7. 'scores' → logprob: -9.008864402770996
    8. '	point' → logprob: -11.008864402770996
    9. ' ' → logprob: -11.383864402770996
    10. '(point' → logprob: -11.508864402770996

Token 19: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5584026575088501
    2. ' >=' → logprob: -1.05840265750885
    3. '>' → logprob: -2.6834025382995605
    4. '>=' → logprob: -4.5584025382995605
    5. ' ' → logprob: -7.3084025382995605
    6. ' <' → logprob: -7.6834025382995605
    7. '<|end|>' → logprob: -8.058403015136719
    8. ' <=' → logprob: -8.683403015136719
    9. '   ' → logprob: -9.183403015136719
    10. '<' → logprob: -9.683403015136719

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32827162742614746
    2. '60' → logprob: -1.5782716274261475
    3. '50' → logprob: -2.8282716274261475
    4. '0' → logprob: -4.578271865844727
    5. '40' → logprob: -6.328271865844727
    6. '10' → logprob: -7.203271865844727
    7. '=' → logprob: -7.203271865844727
    8. '100' → logprob: -8.203271865844727
    9. '20' → logprob: -8.953271865844727
    10. '70' → logprob: -9.078271865844727

Token 21: '40' (ID: 1723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4038301408290863
    2. '60' → logprob: -1.2788301706314087
    3. '50' → logprob: -3.403830051422119
    4. '40' → logprob: -4.278830051422119
    5. ' ' → logprob: -5.403830051422119
    6. '10' → logprob: -7.153830051422119
    7. '70' → logprob: -8.153830528259277
    8. '5' → logprob: -8.653830528259277
    9. '6' → logprob: -8.653830528259277
    10. '3' → logprob: -8.653830528259277

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008216609712690115
    2. ' :' → logprob: -7.250821590423584
    3. ':
' → logprob: -9.625822067260742
    4. '   ' → logprob: -11.000822067260742
    5. '    ' → logprob: -11.250822067260742
    6. '       ' → logprob: -12.375822067260742
    7. '):' → logprob: -12.500822067260742
    8. ' or' → logprob: -12.625822067260742
    9. ' :
' → logprob: -14.000822067260742
    10. ':**' → logprob: -14.250822067260742

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34325116872787476
    2. '   ' → logprob: -1.8432512283325195
    3. '    ' → logprob: -2.8432512283325195
    4. ' scores' → logprob: -4.2182512283325195
    5. '    
' → logprob: -4.4682512283325195
    6. '     
' → logprob: -4.5932512283325195
    7. '        
' → logprob: -4.7182512283325195
    8. '_' → logprob: -4.8432512283325195
    9. 'scores' → logprob: -5.0932512283325195
    10. '_scores' → logprob: -5.5932512283325195

Token 24: ' point' (ID: 2438)
  Prédit: ' scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.7906951904296875
    2. '       ' → logprob: -1.4156951904296875
    3. 'scores' → logprob: -2.0406951904296875
    4. '   ' → logprob: -2.2906951904296875
    5. ' continue' → logprob: -3.0406951904296875
    6. 'continue' → logprob: -4.9156951904296875
    7. '    ' → logprob: -5.4156951904296875
    8. 'point' (adapté à ' point') → logprob: -6.4156951904296875
    9. ' points' → logprob: -6.4156951904296875
    10. 's' → logprob: -6.4156951904296875

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6438415050506592
    2. ' =' → logprob: -0.7688415050506592
    3. ' +=' → logprob: -4.643841743469238
    4. 's' → logprob: -7.018841743469238
    5. '+=' → logprob: -7.768841743469238
    6. ' -=' → logprob: -9.518841743469238
    7. ' *=' → logprob: -10.143841743469238
    8. 'scores' → logprob: -10.393841743469238
    9. '   ' → logprob: -11.268841743469238
    10. 'score' → logprob: -11.393841743469238

Token 26: ' ' (ID: 220)
  Prédit: '40'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.007852314040064812
    2. ' ' → logprob: -4.882852077484131
    3. '0' → logprob: -8.757852554321289
    4. '4' → logprob: -9.382852554321289
    5. '30' → logprob: -13.257852554321289
    6. '400' → logprob: -14.007852554321289
    7. '   ' → logprob: -14.820352554321289
    8. '39' → logprob: -15.007852554321289
    9. '  ' → logprob: -15.320352554321289
    10. '3' → logprob: -15.445352554321289

Token 27: '40' (ID: 1723)
  Prédit: '40'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '40' → logprob: -0.0006886058254167438
    2. '0' → logprob: -7.875688552856445
    3. ' ' → logprob: -8.375688552856445
    4. '4' → logprob: -9.500688552856445
    5. '30' → logprob: -13.625688552856445
    6. '400' → logprob: -14.625688552856445
    7. '   ' → logprob: -14.938188552856445
    8. '35' → logprob: -15.375688552856445
    9. '  ' → logprob: -15.375688552856445
    10. '20' → logprob: -15.750688552856445

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014608610421419144
    2. '
' → logprob: -4.889608383178711
    3. '    
' → logprob: -5.514608383178711
    4. '```' → logprob: -6.639608383178711
    5. 'scores' → logprob: -7.639608383178711
    6. '<|end|>' → logprob: -7.889608383178711
    7. '  
' → logprob: -9.014608383178711
    8. ' scores' → logprob: -9.264608383178711
    9. '\n' → logprob: -9.264608383178711
    10. '``' → logprob: -9.264608383178711

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014740334590896964
    2. '    
' → logprob: -7.376473903656006
    3. '
' → logprob: -8.001474380493164
    4. 'scores' → logprob: -8.876474380493164
    5. '```' → logprob: -9.251474380493164
    6. '  ' → logprob: -9.876474380493164
    7. '<|end|>' → logprob: -10.001474380493164
    8. ')' → logprob: -10.376474380493164
    9. ' scores' → logprob: -10.501474380493164
    10. 's' → logprob: -10.626474380493164

Token 30: ' scores' (ID: 18923)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009217393584549427
    2. 'scores' (adapté à ' scores') → logprob: -4.884217262268066
    3. ' scores' → logprob: -7.384217262268066
    4. '    
' → logprob: -7.384217262268066
    5. '```' → logprob: -8.384217262268066
    6. '
' → logprob: -10.759217262268066
    7. '  ' → logprob: -10.884217262268066
    8. '(scores' → logprob: -11.134217262268066
    9. '_scores' → logprob: -11.259217262268066
    10. 's' → logprob: -11.259217262268066

Token 31: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.038048144429922104
    2. '.' → logprob: -3.288048028945923
    3. 'append' → logprob: -13.163047790527344
    4. '.app' → logprob: -13.538047790527344
    5. ' .' → logprob: -13.913047790527344
    6. '.push' → logprob: -14.538047790527344
    7. '.Append' → logprob: -14.538047790527344
    8. '.ap' → logprob: -14.663047790527344
    9. '.setdefault' → logprob: -14.663047790527344
    10. '.extend' → logprob: -14.913047790527344

Token 32: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.0004342453321442008
    2. '(' → logprob: -7.750434398651123
    3. '(points' → logprob: -12.750433921813965
    4. '(Point' → logprob: -15.125433921813965
    5. '(score' → logprob: -16.00043487548828
    6. '(p' → logprob: -16.62543487548828
    7. '(po' → logprob: -16.75043487548828
    8. ' (' → logprob: -18.37543487548828
    9. 'point' → logprob: -18.62543487548828
    10. '(
' → logprob: -18.75043487548828

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -17.5
    4. '))' → logprob: -18.0
    5. ')

' → logprob: -18.75
    6. ')`' → logprob: -19.5
    7. '`)' → logprob: -20.0
    8. '）' → logprob: -20.5
    9. '}' → logprob: -20.5
    10. '   ' → logprob: -20.625

Token 34: 'average' (ID: 33570)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9887084364891052
    2. '
' → logprob: -1.36370849609375
    3. 'average' → logprob: -2.11370849609375
    4. 'total' → logprob: -2.23870849609375
    5. 'sum' → logprob: -3.11370849609375
    6. 'mean' → logprob: -3.98870849609375
    7. 'max' → logprob: -4.36370849609375
    8. 'final' → logprob: -4.48870849609375
    9. '\n' → logprob: -4.48870849609375
    10. '#' → logprob: -5.11370849609375

Token 35: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5706902146339417
    2. '_' → logprob: -1.1956901550292969
    3. '=' → logprob: -2.695690155029297
    4. ' =' → logprob: -3.320690155029297
    5. '_scores' → logprob: -4.570690155029297
    6. '(scores' → logprob: -4.820690155029297
    7. '_score' → logprob: -5.320690155029297
    8. 's' → logprob: -5.570690155029297
    9. '(s' → logprob: -7.445690155029297
    10. ')' → logprob: -8.320690155029297

Token 36: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.06200633570551872
    2. 'sum' → logprob: -2.8120062351226807
    3. '(sum' → logprob: -10.937005996704102
    4. ' int' → logprob: -11.562005996704102
    5. ' ' → logprob: -11.812005996704102
    6. 'int' → logprob: -13.687005996704102
    7. '   ' → logprob: -13.812005996704102
    8. '  ' → logprob: -14.562005996704102
    9. '	sum' → logprob: -14.937005996704102
    10. ' round' → logprob: -15.312005996704102

Token 37: '(scores' (ID: 154090)
  Prédit: '(scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(scores' → logprob: -0.0019325626781210303
    2. '(' → logprob: -6.251932621002197
    3. '(score' → logprob: -12.876932144165039
    4. '(points' → logprob: -14.751932144165039
    5. '(s' → logprob: -15.001932144165039
    6. 'scores' → logprob: -15.626932144165039
    7. '(sc' → logprob: -16.50193214416504
    8. '(numbers' → logprob: -16.75193214416504
    9. '(samples' → logprob: -16.75193214416504
    10. ' scores' → logprob: -17.12693214416504

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009591046255081892
    2. ' )' → logprob: -7.0009589195251465
    3. ' /' → logprob: -10.500959396362305
    4. '/' → logprob: -11.125959396362305
    5. ')/' → logprob: -12.375959396362305
    6. '//' → logprob: -15.250959396362305
    7. ' //' → logprob: -15.500959396362305
    8. '')' → logprob: -15.750959396362305
    9. '）' → logprob: -16.375959396362305
    10. ')//' → logprob: -16.500959396362305

Token 39: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.0772570371627808
    2. ' /' → logprob: -1.0772570371627808
    3. '/' → logprob: -1.2022570371627808
    4. '//' → logprob: -4.20225715637207
    5. ')' → logprob: -6.45225715637207
    6. ' ' → logprob: -6.95225715637207
    7. ' ' → logprob: -7.82725715637207
    8. '`' → logprob: -8.57725715637207
    9. '```' → logprob: -9.20225715637207
    10. 'len' → logprob: -10.57725715637207

Token 40: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.20217092335224152
    2. 'len' → logprob: -1.702170968055725
    3. ' len' → logprob: -7.2021708488464355
    4. ' ' → logprob: -11.327171325683594
    5. '(len' → logprob: -16.077171325683594
    6. '   ' → logprob: -17.452171325683594
    7. ' ' → logprob: -17.827171325683594
    8. '  ' → logprob: -18.202171325683594
    9. '	len' → logprob: -18.452171325683594
    10. '```' → logprob: -18.577171325683594

Token 41: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10023622214794159
    2. 'len' → logprob: -2.350236177444458
    3. ' len' → logprob: -10.475235939025879
    4. ' ' → logprob: -13.850235939025879
    5. '(len' → logprob: -15.850235939025879
    6. '```' → logprob: -16.225236892700195
    7. '4' → logprob: -17.850236892700195
    8. '   ' → logprob: -17.850236892700195
    9. '５' → logprob: -17.975236892700195
    10. 'count' → logprob: -18.100236892700195

Token 42: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009557036682963371
    2. '
' → logprob: -4.884557247161865
    3. '<|end|>' → logprob: -6.759557247161865
    4. '\n' → logprob: -8.009556770324707
    5. 'if' → logprob: -8.759556770324707
    6. ' print' → logprob: -9.509556770324707
    7. '#' → logprob: -10.009556770324707
    8. 'for' → logprob: -10.384556770324707
    9. '```' → logprob: -10.509556770324707
    10. ')' → logprob: -10.759556770324707

Token 43: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0700967088341713
    2. 'if' → logprob: -2.695096731185913
    3. 'for' → logprob: -9.945096969604492
    4. '<|end|>' → logprob: -10.320096969604492
    5. '```' → logprob: -10.820096969604492
    6. '#' → logprob: -10.945096969604492
    7. 'pr' → logprob: -11.070096969604492
    8. '
' → logprob: -11.695096969604492
    9. 'prin' → logprob: -12.945096969604492
    10. 'result' → logprob: -13.195096969604492

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.636475493200123e-05
    2. '(scores' → logprob: -9.625076293945312
    3. '('' → logprob: -12.750076293945312
    4. '("("' → logprob: -13.375076293945312
    5. '(score' → logprob: -13.625076293945312
    6. '(avg' → logprob: -13.750076293945312
    7. 'average' → logprob: -13.750076293945312
    8. '()' → logprob: -14.375076293945312
    9. '(sum' → logprob: -14.375076293945312
    10. '(s' → logprob: -15.000076293945312

Token 45: 'average' (ID: 33570)
  Prédit: 'average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'average' → logprob: -0.000158842682139948
    2. ' average' → logprob: -8.75015926361084
    3. ')' → logprob: -15.87515926361084
    4. 'score' → logprob: -16.250158309936523
    5. 'avg' → logprob: -16.875158309936523
    6. 'scores' → logprob: -17.125158309936523
    7. 'aver' → logprob: -18.250158309936523
    8. '(' → logprob: -18.625158309936523
    9. '平均' → logprob: -18.625158309936523
    10. '.average' → logprob: -18.875158309936523

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')`' → logprob: -17.875
    5. '）' → logprob: -19.125
    6. ')}' → logprob: -19.5
    7. ')))' → logprob: -19.875
    8. '')' → logprob: -20.0
    9. '`)' → logprob: -20.0
    10. '),' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 44
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 93.18%
================================================================================
