================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    sys.setrecursionlimit(10000)
    input_lines = sys.stdin.read().splitlines()
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        w_h = input_lines[idx].strip()
        idx += 1
        if w_h == "0 0":
            break
        w, h = map(int, w_h.split())
        grid = []
        for _ in range(h):
            grid.append(input_lines[idx])
            idx += 1

        # The grid has h rows and w columns, with (0,0) at bottom-left
        # but input lines are from top to bottom (y = h-1 is top)
        # Let's transform to a coordinate system: blocks at (x,y) with y from 0 at bottom
        # We invert lines to get bottom line at index 0
        grid = grid[::-1]

        # Each cell is either '.' or digit '1' to '9'
        # Pieces are groups of connected blocks with same digit and touching by sides
        visited = [[False]*w for _ in range(h)]
        pieces = []
        # Each piece: list of coordinates [(x,y)]
        def neighbors(x,y):
            for dx,dy in [(1,0),(-1,0),(0,1),(0,-1)]:
                nx, ny = x+dx, y+dy
                if 0 <= nx < w and 0 <= ny < h:
                    yield nx, ny

        # Because two different pieces can have same digit if separated
        # So each connected component of same digit is a separate piece
        for y in range(h):
            for x in range(w):
                if grid[y][x] != '.' and not visited[y][x]:
                    digit = grid[y][x]
                    stack = [(x,y)]
                    visited[y][x] = True
                    comp = []
                    while stack:
                        cx, cy = stack.pop()
                        comp.append((cx, cy))
                        for nx, ny in neighbors(cx, cy):
                            if not visited[ny][nx] and grid[ny][nx] == digit:
                                visited[ny][nx] = True
                                stack.append((nx, ny))
                    pieces.append(comp)

        # Build a map from block to piece id
        block_to_piece = {}
        for i, piece in enumerate(pieces):
            for (x,y) in piece:
                block_to_piece[(x,y)] = i

        # Find parent piece for each piece (the one it touches below)
        # Each piece except one touches exactly one piece below or ground
        # For each piece find which piece(s) it supports or is supported by

        # piece_supports[i] = list of pieces supported by piece i (children in tree)
        piece_supports = [[] for _ in range(len(pieces))]
        # parent_of[i] = piece id of parent
        parent_of = [None]*len(pieces)

        # For each piece, find if it touches ground or piece below on bottom faces
        # bottom blocks: those with y block=0 or bottom face touches another block
        # Check blocks in piece with blocks below them
        for i, piece in enumerate(pieces):
            # For each block in piece check block below if none:
            # if y=0 => touches ground
            # else if there is a block below belonging to a different piece => that piece is parent
            parent_found = False
            for (x,y) in piece:
                if y == 0:
                    # touches ground
                    continue
                below = (x, y-1)
                if below in block_to_piece:
                    other_piece = block_to_piece[below]
                    if other_piece != i:
                        parent_of[i] = other_piece
                        piece_supports[other_piece].append(i)
                        parent_found = True
            # If no block touches another piece below, must be on ground
            if not parent_found:
                parent_of[i] = None

        # Find root piece on ground
        roots = [i for i,p in enumerate(parent_of) if p is None]

        # For center of mass calculation we need to compute recursively for each piece
        # x_L and x_R: leftmost and rightmost x coordinate of bottom touching blocks
        # M: x coordinate of accumulated center of mass (piece + all below it)

        # Calculate piece_weight and center_x for each piece and the accumulated values recursively

        # First, for each piece find its blocks
        # weight of piece = number of blocks
        # center_x_piece = average of center(x) of blocks (center at x+0.5)
        # For accumulated, weight accumulated = piece weight + sum of children weights
        # center_x_accum = weighted average center x of piece + children

        piece_weight = []
        piece_center_x = []
        # bottom blocks: blocks that touch bottom faces of this piece and the piece below or ground
        # To find x_L and x_R we need bottom blocks of the piece, i.e. blocks which are on bottom faces of piece,
        # that is blocks which have no block of this piece below them

        # find bottom blocks of each piece
        bottom_blocks = []
        for piece in pieces:
            block_set = set(piece)
            bottoms = []
            for (x,y) in piece:
                if (x,y-1) not in block_set:
                    bottoms.append((x,y))
            bottom_blocks.append(bottoms)

        for piece in pieces:
            # center_x of piece: average of block centers
            s = 0.0
            for (x,y) in piece:
                s += x + 0.5
            piece_center_x.append(s / len(piece))
            piece_weight.append(len(piece))

        # We compute accumulated center x and weight recursively
        # store results in cache
        acc_center_x = [None]*len(pieces)
        acc_weight = [None]*len(pieces)

        def dfs_acc(i):
            if acc_center_x[i] is not None:
                return acc_center_x[i], acc_weight[i]
            w_sum = piece_weight[i]
            mx_sum = piece_center_x[i]*piece_weight[i]
            for c in piece_supports[i]:
                mc, wc = dfs_acc(c)
                w_sum += wc
                mx_sum += mc*wc
            acc_weight[i] = w_sum
            acc_center_x[i] = mx_sum / w_sum
            return acc_center_x[i], acc_weight[i]

        for i in range(len(pieces)):
            dfs_acc(i)

        # Now check for stability of each piece
        # For each piece find xL and xR from bottom blocks:
        # xL = min x coordinate of leftmost block among bottom blocks of piece
        # xR = max x coordinate of rightmost block among bottom blocks of piece
        # The center M of accumulated center of mass must satisfy xL < M < xR strictly
        # If any piece fails => UNSTABLE else STABLE

        stable = True
        for i in range(len(pieces)):
            bottoms = bottom_blocks[i]
            if not bottoms:
                # no bottom blocks? should not happen but consider unstable
                stable = False
                break
            xL = min(x for (x,y) in bottoms)
            xR = max(x+1 for (x,y) in bottoms)  # right edge is x+1 because blocks occupy from x to x+1
            M = acc_center_x[i]
            if not (xL < M < xR):
                stable = False
                break

        if stable:
            print("STABLE")
        else:
            print("UNSTABLE")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.28756508231163025
    2. '\n' → logprob: -2.287564992904663
    3. '   ' → logprob: -2.912564992904663
    4. '(' → logprob: -3.787564992904663
    5. ''' → logprob: -4.037565231323242
    6. '    
' → logprob: -4.412565231323242
    7. '```' → logprob: -4.412565231323242
    8. ' 
' → logprob: -4.662565231323242
    9. ' ' → logprob: -5.537565231323242
    10. '    ' → logprob: -5.787565231323242

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3946855366230011
    2. 'pass' → logprob: -1.7696855068206787
    3. '   ' → logprob: -2.0196855068206787
    4. 'return' → logprob: -4.644685745239258
    5. '    ' → logprob: -5.519685745239258
    6. ' pass' → logprob: -5.894685745239258
    7. 'p' → logprob: -6.769685745239258
    8. '\' → logprob: -7.144685745239258
    9. '```' → logprob: -7.144685745239258
    10. 'a' → logprob: -7.394685745239258

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0714501366019249
    2. ' sys' → logprob: -2.8214502334594727
    3. ' math' → logprob: -5.321450233459473
    4. ' ' → logprob: -6.071450233459473
    5. ' numpy' → logprob: -6.821450233459473
    6. ' json' → logprob: -7.571450233459473
    7. ' space' → logprob: -9.196450233459473
    8. ' random' → logprob: -9.446450233459473
    9. 'os' → logprob: -9.821450233459473
    10. ' tensorflow' → logprob: -9.821450233459473

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06986362487077713
    2. '   ' → logprob: -4.694863796234131
    3. '.stdout' → logprob: -4.694863796234131
    4. '.readline' → logprob: -4.694863796234131
    5. '[' → logprob: -5.194863796234131
    6. '```' → logprob: -5.194863796234131
    7. 'newline' → logprob: -5.319863796234131
    8. '.print' → logprob: -5.569863796234131
    9. 'import' → logprob: -5.694863796234131
    10. '.argv' → logprob: -6.319863796234131

Token 7: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3504228889942169
    2. ' ' → logprob: -2.3504228591918945
    3. '    ' → logprob: -2.3504228591918945
    4. '\n' → logprob: -3.7254228591918945
    5. '\' → logprob: -4.1004228591918945
    6. '[' → logprob: -4.6004228591918945
    7. '.' → logprob: -4.7254228591918945
    8. 'import' → logprob: -4.8504228591918945
    9. 'newline' → logprob: -5.2254228591918945
    10. '  ' → logprob: -5.3504228591918945

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8087270038668066e-05
    2. ' .' → logprob: -11.125027656555176
    3. '.exit' → logprob: -12.625027656555176
    4. '.readline' → logprob: -13.375027656555176
    5. '.argv' → logprob: -13.500027656555176
    6. '.stdout' → logprob: -13.625027656555176
    7. '.import' → logprob: -14.125027656555176
    8. '.stdin' → logprob: -14.250027656555176
    9. '.`' → logprob: -14.875027656555176
    10. '.user' → logprob: -14.875027656555176

Token 10: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9763831496238708
    2. '_trace' → logprob: -1.1013832092285156
    3. '_version' → logprob: -2.6013832092285156
    4. 'trace' → logprob: -2.7263832092285156
    5. '_encoding' → logprob: -3.6013832092285156
    6. '_limit' → logprob: -3.9763832092285156
    7. '_ex' → logprob: -4.101383209228516
    8. '_execution' → logprob: -4.351383209228516
    9. '_exc' → logprob: -4.476383209228516
    10. 'rec' → logprob: -4.601383209228516

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.010059447027742863
    2. '_limit' → logprob: -5.760059356689453
    3. 'urs' → logprob: -5.885059356689453
    4. 'limit' → logprob: -6.635059356689453
    5. 'ut' → logprob: -7.260059356689453
    6. 'ur' → logprob: -7.385059356689453
    7. '_' → logprob: -7.385059356689453
    8. 'urse' → logprob: -8.635059356689453
    9. 'ursive' → logprob: -8.760059356689453
    10. 'u' → logprob: -9.135059356689453

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0623866431415081
    2. '_limit' → logprob: -2.8123867511749268
    3. 'lim' → logprob: -8.937386512756348
    4. '_depth' → logprob: -8.937386512756348
    5. 'depth' → logprob: -9.562386512756348
    6. ' limit' → logprob: -10.562386512756348
    7. '_lim' → logprob: -10.562386512756348
    8. 'Limit' → logprob: -11.187386512756348
    9. '_' → logprob: -12.187386512756348
    10. 'error' → logprob: -12.562386512756348

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.723352049040841e-06
    2. '(

' → logprob: -13.375004768371582
    3. '(
' → logprob: -13.500004768371582
    4. ' (' → logprob: -14.125004768371582
    5. '("("' → logprob: -14.250004768371582
    6. '((' → logprob: -15.625004768371582
    7. '('' → logprob: -16.000003814697266
    8. '()' → logprob: -17.625003814697266
    9. '```' → logprob: -17.625003814697266
    10. '(**' → logprob: -18.125003814697266

Token 14: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029773982241749763
    2. '100' → logprob: -3.5297739505767822
    3. ' ' → logprob: -11.029773712158203
    4. '1' → logprob: -12.154773712158203
    5. '   ' → logprob: -14.279773712158203
    6. '500' → logprob: -14.529773712158203
    7. '300' → logprob: -15.154773712158203
    8. '200' → logprob: -15.654773712158203
    9. '  ' → logprob: -15.904773712158203
    10. '999' → logprob: -16.029773712158203

Token 15: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6943861842155457
    2. '00' → logprob: -0.6943861842155457
    3. '000' → logprob: -6.694386005401611
    4. ')' → logprob: -15.06938648223877
    5. '))' → logprob: -15.94438648223877
    6. '01' → logprob: -17.569385528564453
    7. '1' → logprob: -17.694385528564453
    8. '09' → logprob: -18.569385528564453
    9. '07' → logprob: -19.194385528564453
    10. '50' → logprob: -19.444385528564453

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -14.625005722045898
    4. '))' → logprob: -15.875005722045898
    5. '')' → logprob: -17.1250057220459
    6. ')

' → logprob: -17.2500057220459
    7. '`)' → logprob: -17.3750057220459
    8. ' ' → logprob: -17.5000057220459
    9. ')
' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.0000057220459

Token 17: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5429116487503052
    2. '    
' → logprob: -1.6679116487503052
    3. '\' → logprob: -2.0429115295410156
    4. '   ' → logprob: -3.2929115295410156
    5. '\n' → logprob: -3.5429115295410156
    6. '```' → logprob: -3.7929115295410156
    7. '' → logprob: -5.667911529541016
    8. '  
' → logprob: -5.917911529541016
    9. ' 
' → logprob: -6.542911529541016
    10. '   
' → logprob: -6.792911529541016

Token 18: ' input' (ID: 3422)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.132386326789856
    2. '   ' → logprob: -1.132386326789856
    3. '    
' → logprob: -1.507386326789856
    4. '
' → logprob: -3.0073862075805664
    5. '\n' → logprob: -3.3823862075805664
    6. ' ' → logprob: -4.257386207580566
    7. '  
' → logprob: -4.882386207580566
    8. ' 
' → logprob: -4.882386207580566
    9. '    ' → logprob: -5.257386207580566
    10. '```' → logprob: -5.757386207580566

Token 19: '_lines' (ID: 42980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000972325331531465
    2. '()' → logprob: -8.000972747802734
    3. '('' → logprob: -8.125972747802734
    4. '```' → logprob: -9.250972747802734
    5. '("("' → logprob: -9.750972747802734
    6. '40' → logprob: -10.500972747802734
    7. ')' → logprob: -10.875972747802734
    8. '("")' → logprob: -10.875972747802734
    9. ''' → logprob: -11.125972747802734
    10. 'data' → logprob: -11.500972747802734

Token 20: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0133379697799683
    2. '[' → logprob: -1.0133379697799683
    3. '=' → logprob: -1.6383379697799683
    4. ' =' → logprob: -2.888338088989258
    5. '.' → logprob: -4.013338088989258
    6. '()' → logprob: -6.138338088989258
    7. '[:]' → logprob: -6.513338088989258
    8. ')' → logprob: -7.138338088989258
    9. '   ' → logprob: -8.388338088989258
    10. '```' → logprob: -8.513338088989258

Token 21: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7096835374832153
    2. ' sys' → logprob: -0.9596835374832153
    3. ' []' → logprob: -2.959683418273926
    4. 'input' → logprob: -3.209683418273926
    5. ' ' → logprob: -4.459683418273926
    6. ' iter' → logprob: -5.334683418273926
    7. ' [' → logprob: -5.459683418273926
    8. '[' → logprob: -5.459683418273926
    9. 'sys' → logprob: -5.834683418273926
    10. '[]' → logprob: -6.334683418273926

Token 22: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003305784775875509
    2. '.stdin' → logprob: -8.500330924987793
    3. '.readline' → logprob: -9.125330924987793
    4. ' .' → logprob: -12.375330924987793
    5. '.
' → logprob: -13.250330924987793
    6. '.​' → logprob: -13.375330924987793
    7. '.get' → logprob: -13.375330924987793
    8. '.read' → logprob: -13.625330924987793
    9. '.stdout' → logprob: -13.875330924987793
    10. '.input' → logprob: -14.125330924987793

Token 23: '.read' (ID: 7211)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3532163202762604
    2. '.readline' → logprob: -1.228216290473938
    3. '.read' → logprob: -5.728216171264648
    4. '.readlines' → logprob: -6.603216171264648
    5. 'read' → logprob: -9.103216171264648
    6. '```' → logprob: -11.603216171264648
    7. '.write' → logprob: -11.728216171264648
    8. ' readline' → logprob: -11.978216171264648
    9. '.Read' → logprob: -12.978216171264648
    10. '.\' → logprob: -13.228216171264648

Token 24: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006607610732316971
    2. '()' → logprob: -5.506607532501221
    3. '('' → logprob: -6.881607532501221
    4. '(
' → logprob: -7.381607532501221
    5. '().' → logprob: -8.381608009338379
    6. '.' → logprob: -8.881608009338379
    7. '(

' → logprob: -8.881608009338379
    8. '("("' → logprob: -9.006608009338379
    9. ')' → logprob: -9.756608009338379
    10. ''' → logprob: -10.381608009338379

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0067455661483109
    2. 'strip' → logprob: -5.006745338439941
    3. 'rstrip' → logprob: -10.506745338439941
    4. 'decode' → logprob: -13.631745338439941
    5. ' split' → logprob: -13.631745338439941
    6. 'read' → logprob: -15.006745338439941
    7. 'replace' → logprob: -16.756746292114258
    8. 'spl' → logprob: -17.131746292114258
    9. '(split' → logprob: -17.131746292114258
    10. '```' → logprob: -17.256746292114258

Token 26: 'lines' (ID: 10105)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.413381427526474
    2. '(' → logprob: -1.4133814573287964
    3. 'lines' → logprob: -2.788381338119507
    4. '()' → logprob: -4.288381576538086
    5. '('\' → logprob: -4.288381576538086
    6. '("("' → logprob: -5.163381576538086
    7. 'line' → logprob: -8.788381576538086
    8. ''' → logprob: -9.288381576538086
    9. '("\' → logprob: -9.788381576538086
    10. '("' → logprob: -9.788381576538086

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0297784935683012
    2. '(' → logprob: -3.529778480529785
    3. '(
' → logprob: -12.279778480529785
    4. ' ()' → logprob: -12.404778480529785
    5. '()
' → logprob: -13.029778480529785
    6. '()`' → logprob: -13.154778480529785
    7. '())' → logprob: -13.529778480529785
    8. '`()' → logprob: -13.654778480529785
    9. ')' → logprob: -13.779778480529785
    10. '(

' → logprob: -13.904778480529785

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022474952042102814
    2. '    
' → logprob: -4.022474765777588
    3. '```' → logprob: -6.147474765777588
    4. 'n' → logprob: -7.647474765777588
    5. '[' → logprob: -7.897474765777588
    6. '    ' → logprob: -8.147475242614746
    7. '
' → logprob: -8.272475242614746
    8. 'for' → logprob: -8.772475242614746
    9. '    
    
' → logprob: -9.397475242614746
    10. '`' → logprob: -9.522475242614746

Token 29: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10719019174575806
    2. 'n' → logprob: -2.9821901321411133
    3. '    
' → logprob: -4.107190132141113
    4. ' ' → logprob: -4.732190132141113
    5. 'i' → logprob: -4.857190132141113
    6. '    ' → logprob: -5.857190132141113
    7. '```' → logprob: -5.857190132141113
    8. 'd' → logprob: -5.982190132141113
    9. 'for' → logprob: -6.107190132141113
    10. '  ' → logprob: -7.357190132141113

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2113826721906662
    2. ' +=' → logprob: -2.7113826274871826
    3. '=' → logprob: -3.0863826274871826
    4. ' ' → logprob: -3.2113826274871826
    5. '+' → logprob: -3.4613826274871826
    6. ' +' → logprob: -6.711382865905762
    7. '+=' → logprob: -6.961382865905762
    8. '_' → logprob: -7.211382865905762
    9. '[' → logprob: -7.211382865905762
    10. ')' → logprob: -7.211382865905762

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021012276411057
    2. ' ' → logprob: -2.350210189819336
    3. '1' → logprob: -12.600210189819336
    4. ' ' → logprob: -16.225210189819336
    5. '  ' → logprob: -17.600210189819336
    6. '2' → logprob: -18.100210189819336
    7. '۰' → logprob: -19.725210189819336
    8. '`' → logprob: -19.975210189819336
    9. ' len' → logprob: -19.975210189819336
    10. 'len' → logprob: -19.975210189819336

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. '1' → logprob: -15.375123977661133
    4. '   ' → logprob: -17.625123977661133
    5. '```' → logprob: -17.625123977661133
    6. '`' → logprob: -17.875123977661133
    7. 'len' → logprob: -17.875123977661133
    8. '  ' → logprob: -18.062623977661133
    9. ')' → logprob: -19.687623977661133
    10. '2' → logprob: -19.750123977661133

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.678933322429657
    2. '
' → logprob: -0.928933322429657
    3. '    
' → logprob: -3.5539333820343018
    4. 'n' → logprob: -3.5539333820343018
    5. '<|end|>' → logprob: -4.678933143615723
    6. ' ' → logprob: -5.178933143615723
    7. '```' → logprob: -5.178933143615723
    8. '\n' → logprob: -5.678933143615723
    9. '  ' → logprob: -5.803933143615723
    10. '    ' → logprob: -6.303933143615723

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2162928283214569
    2. '
' → logprob: -2.0912928581237793
    3. '    
' → logprob: -3.3412928581237793
    4. 'n' → logprob: -4.216292858123779
    5. '```' → logprob: -4.716292858123779
    6. 'i' → logprob: -5.591292858123779
    7. 'd' → logprob: -6.466292858123779
    8. ' ' → logprob: -6.591292858123779
    9. '\n' → logprob: -6.841292858123779
    10. '    ' → logprob: -7.216292858123779

Token 35: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24766521155834198
    2. 'n' → logprob: -2.4976651668548584
    3. '    
' → logprob: -3.7476651668548584
    4. ' ' → logprob: -3.7476651668548584
    5. '
' → logprob: -3.8726651668548584
    6. 'i' → logprob: -3.9976651668548584
    7. '```' → logprob: -4.1226654052734375
    8. '\n' → logprob: -4.2476654052734375
    9. 'd' → logprob: -4.9976654052734375
    10. '' → logprob: -6.2476654052734375

Token 36: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.014731841161847115
    2. ' ' → logprob: -4.2647318840026855
    3. ' len' → logprob: -8.264731407165527
    4. 'idx' → logprob: -8.639731407165527
    5. ' input' → logprob: -9.889731407165527
    6. '  ' → logprob: -10.514731407165527
    7. ' True' → logprob: -10.639731407165527
    8. ' not' → logprob: -11.514731407165527
    9. ' (' → logprob: -12.014731407165527
    10. ' ' → logprob: -12.139731407165527

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000600572966504842
    2. ' :' → logprob: -7.625600337982178
    3. '   ' → logprob: -10.250600814819336
    4. ':**' → logprob: -10.500600814819336
    5. '):' → logprob: -11.250600814819336
    6. '    ' → logprob: -11.625600814819336
    7. ':
' → logprob: -12.125600814819336
    8. '():' → logprob: -12.125600814819336
    9. '[:]' → logprob: -12.125600814819336
    10. '       ' → logprob: -12.625600814819336

Token 38: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7512446045875549
    2. '       ' → logprob: -1.2512445449829102
    3. '    ' → logprob: -1.6262445449829102
    4. '   ' → logprob: -3.25124454498291
    5. '  ' → logprob: -5.87624454498291
    6. '     ' → logprob: -6.75124454498291
    7. '        ' → logprob: -7.25124454498291
    8. '      ' → logprob: -7.62624454498291
    9. 'i' → logprob: -8.12624454498291
    10. '<|end|>' → logprob: -8.50124454498291

Token 39: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11737852543592453
    2. '   ' → logprob: -2.8673784732818604
    3. '    ' → logprob: -3.2423784732818604
    4. 'i' → logprob: -5.1173787117004395
    5. '       ' → logprob: -5.7423787117004395
    6. '  ' → logprob: -6.1173787117004395
    7. 'n' → logprob: -6.9923787117004395
    8. ' i' → logprob: -7.1173787117004395
    9. ' if' → logprob: -7.1173787117004395
    10. ' n' → logprob: -9.117378234863281

Token 40: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.00027706706896424294
    2. ' ' → logprob: -8.625277519226074
    3. 'idx' → logprob: -9.375277519226074
    4. ' not' → logprob: -12.250277519226074
    5. '	idx' → logprob: -12.625277519226074
    6. '(idx' → logprob: -13.000277519226074
    7. ' len' → logprob: -14.000277519226074
    8. '[idx' → logprob: -14.625277519226074
    9. ' True' → logprob: -15.625277519226074
    10. ' ' → logprob: -15.875277519226074

Token 41: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0059806969948112965
    2. ' <' → logprob: -5.630980491638184
    3. '>=' → logprob: -6.255980491638184
    4. ' ' → logprob: -8.255980491638184
    5. ' ==' → logprob: -8.880980491638184
    6. '   ' → logprob: -10.630980491638184
    7. ' >' → logprob: -11.380980491638184
    8. '<' → logprob: -11.505980491638184
    9. '==' → logprob: -13.005980491638184
    10. ')' → logprob: -13.255980491638184

Token 42: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10020763427019119
    2. 'len' → logprob: -2.350207567214966
    3. '(len' → logprob: -14.975207328796387
    4. '   ' → logprob: -15.100207328796387
    5. '	len' → logprob: -15.475207328796387
    6. ' input' → logprob: -16.600208282470703
    7. '=len' → logprob: -16.600208282470703
    8. '<len' → logprob: -17.100208282470703
    9. ',len' → logprob: -17.600208282470703
    10. '    ' → logprob: -17.600208282470703

Token 43: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931928992271423
    2. '(input' → logprob: -0.6931928992271423
    3. ' (' → logprob: -10.193192481994629
    4. '(
' → logprob: -12.943192481994629
    5. 'input' → logprob: -13.693192481994629
    6. '(s' → logprob: -13.818192481994629
    7. '(

' → logprob: -14.193192481994629
    8. '(output' → logprob: -14.443192481994629
    9. '(space' → logprob: -14.693192481994629
    10. '(in' → logprob: -14.693192481994629

Token 44: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.9361264946837764e-07
    2. '_line' → logprob: -17.125
    3. ')_' → logprob: -17.625
    4. '_' → logprob: -18.125
    5. '_LINES' → logprob: -18.125
    6. ' _' → logprob: -18.375
    7. '_layers' → logprob: -18.75
    8. '_links' → logprob: -18.875
    9. '_strings' → logprob: -19.125
    10. '```' → logprob: -19.25

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1665908694267273
    2. ')' → logprob: -1.916590929031372
    3. ' ):' → logprob: -6.041590690612793
    4. ' or' → logprob: -6.041590690612793
    5. ':' → logprob: -7.041590690612793
    6. ' )' → logprob: -7.416590690612793
    7. '):
' → logprob: -9.791590690612793
    8. '   ' → logprob: -10.791590690612793
    9. ' and' → logprob: -10.791590690612793
    10. ' ' → logprob: -12.791590690612793

Token 46: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051558010280132294
    2. '           ' → logprob: -3.051558017730713
    3. ':' → logprob: -6.176558017730713
    4. '   ' → logprob: -8.051557540893555
    5. '        ' → logprob: -8.676557540893555
    6. '    ' → logprob: -9.426557540893555
    7. ' ' → logprob: -9.426557540893555
    8. ' :' → logprob: -9.926557540893555
    9. ':
' → logprob: -10.176557540893555
    10. '      ' → logprob: -10.926557540893555

Token 47: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0709155723452568
    2. '       ' → logprob: -2.820915460586548
    3. ' break' → logprob: -4.945915699005127
    4. 'break' (adapté à ' break') → logprob: -7.320915699005127
    5. '   ' → logprob: -7.820915699005127
    6. '\n' → logprob: -8.945915222167969
    7. ' ' → logprob: -8.945915222167969
    8. '               ' → logprob: -9.070915222167969
    9. ' 
' → logprob: -10.070915222167969
    10. '            
' → logprob: -10.195915222167969

Token 48: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1692257821559906
    2. '        
' → logprob: -3.1692256927490234
    3. '
' → logprob: -3.2942256927490234
    4. '\n' → logprob: -3.2942256927490234
    5. '\' → logprob: -4.044225692749023
    6. ':' → logprob: -5.169225692749023
    7. '    
' → logprob: -5.794225692749023
    8. '<|end|>' → logprob: -6.044225692749023
    9. ':
' → logprob: -6.794225692749023
    10. '  
' → logprob: -6.794225692749023

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04541011527180672
    2. '        
' → logprob: -3.54541015625
    3. '
' → logprob: -4.79541015625
    4. '<|end|>' → logprob: -6.04541015625
    5. '\n' → logprob: -6.67041015625
    6. '    
' → logprob: -6.92041015625
    7. '  
' → logprob: -7.79541015625
    8. ' 
' → logprob: -8.04541015625
    9. '```' → logprob: -8.04541015625
    10. '\' → logprob: -8.04541015625

Token 50: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08932492136955261
    2. '   ' → logprob: -3.464324951171875
    3. 'n' → logprob: -3.964324951171875
    4. '        
' → logprob: -4.589324951171875
    5. '    
' → logprob: -5.089324951171875
    6. '    ' → logprob: -5.589324951171875
    7. ' ' → logprob: -5.714324951171875
    8. ' line' → logprob: -6.464324951171875
    9. ' 
' → logprob: -6.464324951171875
    10. '  
' → logprob: -6.589324951171875

Token 51: '_h' (ID: 3434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12005860358476639
    2. '=' → logprob: -3.120058536529541
    3. ',' → logprob: -3.995058536529541
    4. ' ' → logprob: -4.120058536529541
    5. 'ord' → logprob: -4.370058536529541
    6. 'ords' → logprob: -5.245058536529541
    7. 'idth' → logprob: -5.370058536529541
    8. '   ' → logprob: -5.370058536529541
    9. 'h' → logprob: -6.495058536529541
    10. 'hile' → logprob: -6.495058536529541

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18126371502876282
    2. '=' → logprob: -1.8062636852264404
    3. ',' → logprob: -6.8062639236450195
    4. ' ' → logprob: -8.55626392364502
    5. '_' → logprob: -8.68126392364502
    6. ' ,' → logprob: -11.05626392364502
    7. '[' → logprob: -11.43126392364502
    8. ')' → logprob: -11.80626392364502
    9. '  ' → logprob: -12.80626392364502
    10. '   ' → logprob: -13.05626392364502

Token 53: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.48476895689964294
    2. 'input' → logprob: -0.9847689867019653
    3. ' list' → logprob: -4.859768867492676
    4. 'list' → logprob: -5.859768867492676
    5. '[input' → logprob: -11.859768867492676
    6. ' tuple' → logprob: -12.234768867492676
    7. '=input' → logprob: -12.234768867492676
    8. ' [' → logprob: -12.984768867492676
    9. '[' → logprob: -13.484768867492676
    10. 'line' → logprob: -13.484768867492676

Token 54: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00011856284982059151
    2. 'lines' → logprob: -9.625118255615234
    3. '_line' → logprob: -10.750118255615234
    4. 'Lines' → logprob: -11.000118255615234
    5. '_tokens' → logprob: -12.750118255615234
    6. '("_' → logprob: -13.250118255615234
    7. '_' → logprob: -13.375118255615234
    8. '('_' → logprob: -13.375118255615234
    9. '```' → logprob: -13.375118255615234
    10. '_LINES' → logprob: -14.125118255615234

Token 55: '[idx' (ID: 25582)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4744580388069153
    2. '[idx' → logprob: -0.9744580388069153
    3. '[w' → logprob: -9.224457740783691
    4. '   ' → logprob: -9.849457740783691
    5. '```' → logprob: -10.099457740783691
    6. '[token' → logprob: -10.724457740783691
    7. '[
' → logprob: -10.849457740783691
    8. ' [' → logprob: -10.974457740783691
    9. '[int' → logprob: -11.099457740783691
    10. '\[' → logprob: -11.224457740783691

Token 56: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06264062225818634
    2. ']' → logprob: -2.93764066696167
    3. '.split' → logprob: -5.06264066696167
    4. ').' → logprob: -7.43764066696167
    5. ')' → logprob: -8.062640190124512
    6. '])' → logprob: -8.312640190124512
    7. '.strip' → logprob: -8.687640190124512
    8. ' ].' → logprob: -9.812640190124512
    9. '.' → logprob: -12.187640190124512
    10. ' ]' → logprob: -12.187640190124512

Token 57: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1602243334054947
    2. 'strip' → logprob: -1.9102243185043335
    3. 'rstrip' → logprob: -15.785223960876465
    4. 'spl' → logprob: -16.78522491455078
    5. ' split' → logprob: -19.16022491455078
    6. 's' → logprob: -20.91022491455078
    7. '.strip' → logprob: -20.91022491455078
    8. 'sp' → logprob: -21.16022491455078
    9. 'startswith' → logprob: -21.66022491455078
    10. ' strip' → logprob: -21.66022491455078

Token 58: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.577580451965332
    2. '().' → logprob: -0.827580451965332
    3. '.split' → logprob: -6.827580451965332
    4. '(' → logprob: -8.327580451965332
    5. '.' → logprob: -8.577580451965332
    6. '()
' → logprob: -10.702580451965332
    7. '())' → logprob: -10.827580451965332
    8. '('' → logprob: -11.077580451965332
    9. ' ()' → logprob: -11.202580451965332
    10. 'split' → logprob: -11.577580451965332

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7200270891189575
    2. ' if' → logprob: -2.095026969909668
    3. '<|end|>' → logprob: -2.220026969909668
    4. '       ' → logprob: -2.720026969909668
    5. ':' → logprob: -2.970026969909668
    6. ')' → logprob: -3.470026969909668
    7. '\n' → logprob: -3.595026969909668
    8. '\' → logprob: -3.970026969909668
    9. '<|end|>' → logprob: -4.345026969909668
    10. ' ' → logprob: -4.345026969909668

Token 61: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.016000110656023026
    2. '+=' → logprob: -4.391000270843506
    3. '+' → logprob: -5.766000270843506
    4. ' +' → logprob: -8.265999794006348
    5. '++' → logprob: -9.515999794006348
    6. '+++' → logprob: -12.390999794006348
    7. ' =' → logprob: -12.640999794006348
    8. ' ==' → logprob: -13.015999794006348
    9. ' ++' → logprob: -13.140999794006348
    10. ' ' → logprob: -13.640999794006348

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -17.875261306762695
    4. '0' → logprob: -19.875261306762695
    5. '   ' → logprob: -20.375261306762695
    6. '１' → logprob: -20.500261306762695
    7. '`' → logprob: -20.750261306762695
    8. '  ' → logprob: -21.250261306762695
    9. '2' → logprob: -21.937761306762695
    10. ' ' → logprob: -22.250261306762695

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.125001907348633
    4. '１' → logprob: -19.250001907348633
    5. '0' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.437501907348633
    7. '-' → logprob: -20.812501907348633
    8. '`' → logprob: -21.062501907348633
    9. '+' → logprob: -21.250001907348633
    10. 'len' → logprob: -21.562501907348633

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028677601367235184
    2. ' if' → logprob: -4.653677463531494
    3. 'if' → logprob: -4.903677463531494
    4. '<|end|>' → logprob: -5.278677463531494
    5. '        
' → logprob: -5.653677463531494
    6. '
' → logprob: -6.653677463531494
    7. ',' → logprob: -8.153677940368652
    8. ' ' → logprob: -8.528677940368652
    9. '\n' → logprob: -8.778677940368652
    10. '   ' → logprob: -9.153677940368652

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16596581041812897
    2. ' if' → logprob: -1.9159657955169678
    3. '       ' → logprob: -5.540966033935547
    4. 'i' → logprob: -6.790966033935547
    5. 'w' → logprob: -8.040966033935547
    6. '        
' → logprob: -9.165966033935547
    7. '   ' → logprob: -9.665966033935547
    8. ' i' → logprob: -10.040966033935547
    9. ' ' → logprob: -10.165966033935547
    10. ' 
' → logprob: -10.790966033935547

Token 67: ' w' (ID: 286)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00860133208334446
    2. 'not' → logprob: -5.508601188659668
    3. ' w' → logprob: -5.633601188659668
    4. ' ' → logprob: -7.008601188659668
    5. ' len' → logprob: -11.508601188659668
    6. ' ' → logprob: -11.758601188659668
    7. 'w' → logprob: -11.883601188659668
    8. '  ' → logprob: -12.508601188659668
    9. ' no' → logprob: -13.633601188659668
    10. ' "' → logprob: -14.133601188659668

Token 68: '_h' (ID: 3434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08168686926364899
    2. '_h' → logprob: -3.2066869735717773
    3. ' ==' → logprob: -3.9566869735717773
    4. '==' → logprob: -4.081686973571777
    5. '=' → logprob: -7.081686973571777
    6. ' _' → logprob: -8.706686973571777
    7. ' ' → logprob: -9.081686973571777
    8. '   ' → logprob: -9.581686973571777
    9. '_e' → logprob: -9.581686973571777
    10. '.' → logprob: -9.831686973571777

Token 69: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048589639365673065
    2. '==' → logprob: -3.0485897064208984
    3. '.strip' → logprob: -14.423589706420898
    4. ' =' → logprob: -14.673589706420898
    5. '=' → logprob: -14.798589706420898
    6. ' ' → logprob: -15.423589706420898
    7. ')==' → logprob: -16.1735897064209
    8. '()==' → logprob: -16.1735897064209
    9. '[' → logprob: -16.2985897064209
    10. '===' → logprob: -16.6735897064209

Token 70: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2471705675125122
    2. ' ''' → logprob: -1.2471705675125122
    3. '''' → logprob: -1.8721705675125122
    4. ' '' → logprob: -1.8721705675125122
    5. '""' → logprob: -2.7471704483032227
    6. '"' → logprob: -3.4971704483032227
    7. ' ""' → logprob: -3.9971704483032227
    8. ' "' → logprob: -5.372170448303223
    9. ' ' → logprob: -9.372170448303223
    10. ''\' → logprob: -9.622170448303223

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5048930048942566
    2. '"' → logprob: -1.1298930644989014
    3. '""' → logprob: -3.5048930644989014
    4. ''' → logprob: -3.7548930644989014
    5. '":' → logprob: -4.754892826080322
    6. '"":' → logprob: -5.129892826080322
    7. ' ' → logprob: -5.879892826080322
    8. '''' → logprob: -6.254892826080322
    9. ':' → logprob: -9.12989330291748
    10. '"):' → logprob: -9.62989330291748

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00026503115077503026
    2. '0' → logprob: -8.250265121459961
    3. ' "' → logprob: -12.625265121459961
    4. '"' → logprob: -15.375265121459961
    5. ' ' → logprob: -16.50026512145996
    6. '  ' → logprob: -16.75026512145996
    7. ':' → logprob: -16.87526512145996
    8. '":' → logprob: -17.62526512145996
    9. ' ":' → logprob: -18.25026512145996
    10. ',' → logprob: -19.06276512145996

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '"' → logprob: -15.625296592712402
    4. '">' → logprob: -17.125295639038086
    5. '")' → logprob: -17.375295639038086
    6. '00' → logprob: -18.562795639038086
    7. '<|end|>' → logprob: -18.625295639038086
    8. '

' → logprob: -18.750295639038086
    9. '000' → logprob: -18.812795639038086
    10. '  ' → logprob: -18.875295639038086

Token 74: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.02409525215625763
    2. '":
' → logprob: -4.274095058441162
    3. '"' → logprob: -4.649095058441162
    4. '\n' → logprob: -8.52409553527832
    5. '":
' → logprob: -9.27409553527832
    6. ':' → logprob: -11.39909553527832
    7. '":

' → logprob: -13.02409553527832
    8. '```' → logprob: -13.64909553527832
    9. '"):' → logprob: -14.02409553527832
    10. '"):
' → logprob: -14.27409553527832

Token 75: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28682073950767517
    2. '           ' → logprob: -1.5368207693099976
    3. '       ' → logprob: -3.661820650100708
    4. ':
' → logprob: -4.786820888519287
    5. '\n' → logprob: -9.286820411682129
    6. '
' → logprob: -9.536820411682129
    7. '\' → logprob: -10.911820411682129
    8. '   ' → logprob: -11.536820411682129
    9. '		' → logprob: -11.536820411682129
    10. ' :' → logprob: -11.911820411682129

Token 76: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011562933214008808
    2. ' break' → logprob: -7.626156330108643
    3. '               ' → logprob: -7.751156330108643
    4. 'break' (adapté à ' break') → logprob: -8.501155853271484
    5. '       ' → logprob: -10.626155853271484
    6. '	break' → logprob: -12.626155853271484
    7. '   ' → logprob: -13.001155853271484
    8. '		' → logprob: -13.376155853271484
    9. '	       ' → logprob: -13.876155853271484
    10. '          ' → logprob: -14.001155853271484

Token 77: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04327800124883652
    2. '<|end|>' → logprob: -4.043278217315674
    3. '
' → logprob: -4.543278217315674
    4. '        
' → logprob: -4.793278217315674
    5. '\n' → logprob: -6.418278217315674
    6. ',' → logprob: -6.543278217315674
    7. 'n' → logprob: -7.793278217315674
    8. '  
' → logprob: -7.918278217315674
    9. '        ' → logprob: -8.168277740478516
    10. 'w' → logprob: -8.293277740478516

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00699384231120348
    2. '        
' → logprob: -5.256993770599365
    3. '        ' → logprob: -6.756993770599365
    4. '
' → logprob: -8.756994247436523
    5. '<|end|>' → logprob: -9.006994247436523
    6. '      ' → logprob: -9.881994247436523
    7. '    ' → logprob: -10.381994247436523
    8. 'w' → logprob: -10.631994247436523
    9. '```' → logprob: -10.631994247436523
    10. '' → logprob: -10.756994247436523

Token 79: ' w' (ID: 286)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037823647260665894
    2. ' w' → logprob: -4.287823677062988
    3. '        
' → logprob: -4.412823677062988
    4. '
' → logprob: -5.912823677062988
    5. 'w' (adapté à ' w') → logprob: -6.162823677062988
    6. ' 
' → logprob: -6.287823677062988
    7. '      ' → logprob: -7.037823677062988
    8. '        ' → logprob: -7.162823677062988
    9. 'n' → logprob: -7.537823677062988
    10. '    ' → logprob: -7.662823677062988

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030888281762599945
    2. ' ,' → logprob: -5.87808895111084
    3. '=' → logprob: -8.37808895111084
    4. ' =' → logprob: -10.00308895111084
    5. '_,' → logprob: -12.75308895111084
    6. ',w' → logprob: -12.87808895111084
    7. 's' → logprob: -14.25308895111084
    8. ',
' → logprob: -14.37808895111084
    9. ')' → logprob: -14.75308895111084
    10. ',s' → logprob: -15.00308895111084

Token 81: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.22903001308441162
    2. ' ' → logprob: -2.354030132293701
    3. '<|end|>' → logprob: -2.604030132293701
    4. 'h' → logprob: -3.354030132293701
    5. ' ' → logprob: -8.104029655456543
    6. '<|end|>' → logprob: -9.229029655456543
    7. ' =' → logprob: -9.354029655456543
    8. '_h' → logprob: -9.729029655456543
    9. 's' → logprob: -10.104029655456543
    10. '_' → logprob: -10.229029655456543

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324850670993328
    2. '=' → logprob: -3.7732484340667725
    3. ',' → logprob: -13.148248672485352
    4. ')' → logprob: -15.148248672485352
    5. ' ' → logprob: -15.523248672485352
    6. ' =
' → logprob: -15.773248672485352
    7. ' =)' → logprob: -15.898248672485352
    8. '<|end|>' → logprob: -15.898248672485352
    9. ' ,' → logprob: -17.02324867248535
    10. 's' → logprob: -17.27324867248535

Token 83: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011729520745575428
    2. ' w' → logprob: -4.886729717254639
    3. 'map' → logprob: -5.511729717254639
    4. 'w' → logprob: -10.51172924041748
    5. ' ' → logprob: -11.01172924041748
    6. ' list' → logprob: -11.13672924041748
    7. ' [' → logprob: -11.38672924041748
    8. '[' → logprob: -13.01172924041748
    9. ' m' → logprob: -13.51172924041748
    10. '	map' → logprob: -13.63672924041748

Token 84: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.15172986686229706
    2. '(' → logprob: -2.0267298221588135
    3. '(lambda' → logprob: -5.026730060577393
    4. '(str' → logprob: -6.026730060577393
    5. '(
' → logprob: -11.151729583740234
    6. '[int' → logprob: -12.026729583740234
    7. '<int' → logprob: -12.401729583740234
    8. 'int' → logprob: -12.401729583740234
    9. '(float' → logprob: -13.526729583740234
    10. '=int' → logprob: -13.651729583740234

Token 85: ',' (ID: 11)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.039313942193984985
    2. '(' → logprob: -3.914314031600952
    3. ')' → logprob: -4.289313793182373
    4. ',' → logprob: -5.789313793182373
    5. ',w' → logprob: -7.289313793182373
    6. ')(' → logprob: -7.414313793182373
    7. 'w' → logprob: -7.789313793182373
    8. ' w' → logprob: -10.914314270019531
    9. '(input' → logprob: -10.914314270019531
    10. '(
' → logprob: -11.164314270019531

Token 86: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.1801244169473648
    2. 'w' → logprob: -1.8051244020462036
    3. ')' → logprob: -7.930124282836914
    4. 'input' → logprob: -11.805124282836914
    5. ' input' → logprob: -12.430124282836914
    6. '(w' → logprob: -12.680124282836914
    7. ' ' → logprob: -12.805124282836914
    8. ' )' → logprob: -14.055124282836914
    9. '	w' → logprob: -14.680124282836914
    10. '    ' → logprob: -15.180124282836914

Token 87: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0007565005216747522
    2. ')' → logprob: -8.50075626373291
    3. '_lines' → logprob: -8.87575626373291
    4. '_' → logprob: -9.00075626373291
    5. '[' → logprob: -10.00075626373291
    6. '[h' → logprob: -10.37575626373291
    7. '(h' → logprob: -11.00075626373291
    8. '_w' → logprob: -11.12575626373291
    9. '.' → logprob: -11.18825626373291
    10. '(lines' → logprob: -11.31325626373291

Token 88: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7022762894630432
    2. '.split' → logprob: -0.7022762894630432
    3. ' .' → logprob: -5.202276229858398
    4. '().' → logprob: -5.827276229858398
    5. '.strip' → logprob: -7.577276229858398
    6. ')' → logprob: -9.202276229858398
    7. '   ' → logprob: -11.952276229858398
    8. ').' → logprob: -11.952276229858398
    9. '.s' → logprob: -12.702276229858398
    10. 'split' → logprob: -13.577276229858398

Token 89: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0675220638513565
    2. '())' → logprob: -2.8175220489501953
    3. '()' → logprob: -5.942522048950195
    4. '("' → logprob: -6.567522048950195
    5. '(' → logprob: -7.067522048950195
    6. '(','' → logprob: -7.942522048950195
    7. ')' → logprob: -8.567522048950195
    8. '("("' → logprob: -9.442522048950195
    9. '(',' → logprob: -11.317522048950195
    10. '()))' → logprob: -12.442522048950195

Token 90: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5293744206428528
    2. '       ' → logprob: -1.279374361038208
    3. '<|end|>' → logprob: -3.279374361038208
    4. '   ' → logprob: -3.654374361038208
    5. '        
' → logprob: -3.904374361038208
    6. '    
' → logprob: -4.029374599456787
    7. '\' → logprob: -5.154374599456787
    8. ')' → logprob: -5.654374599456787
    9. 'newline' → logprob: -5.779374599456787
    10. '\n' → logprob: -5.779374599456787

Token 91: ' grid' (ID: 10586)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7825911641120911
    2. 'grid' (adapté à ' grid') → logprob: -1.2825911045074463
    3. 'graph' → logprob: -1.7825911045074463
    4. ' grid' → logprob: -3.5325911045074463
    5. ' graph' → logprob: -4.032591342926025
    6. '   ' → logprob: -4.282591342926025
    7. '        
' → logprob: -4.407591342926025
    8. '
' → logprob: -4.782591342926025
    9. 'map' → logprob: -5.282591342926025
    10. 'board' → logprob: -6.157591342926025

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001506409258581698
    2. '=' → logprob: -6.501506328582764
    3. ' ' → logprob: -13.751506805419922
    4. ' =
' → logprob: -13.876506805419922
    5. ' =[' → logprob: -14.251506805419922
    6. '[' → logprob: -14.751506805419922
    7. ' =
' → logprob: -15.501506805419922
    8. '[:]' → logprob: -15.626506805419922
    9. '=[]' → logprob: -16.001506805419922
    10. '   ' → logprob: -16.251506805419922

Token 93: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7095028758049011
    2. '[]' → logprob: -0.9595028758049011
    3. ' [' → logprob: -2.209502935409546
    4. '[' → logprob: -4.209502696990967
    5. '[]
' → logprob: -9.209503173828125
    6. '[input' → logprob: -9.584503173828125
    7. '[
' → logprob: -9.834503173828125
    8. ' [
' → logprob: -10.584503173828125
    9. ' []
' → logprob: -10.709503173828125
    10. ' [[]' → logprob: -10.834503173828125

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3012197017669678
    2. ' for' → logprob: -1.3012197017669678
    3. '<|end|>' → logprob: -1.3012197017669678
    4. '	for' → logprob: -2.1762197017669678
    5. 'for' → logprob: -3.3012197017669678
    6. '   ' → logprob: -3.6762197017669678
    7. '	' → logprob: -6.301219940185547
    8. '<|end|>' → logprob: -6.426219940185547
    9. ' ' → logprob: -7.176219940185547
    10. '
' → logprob: -7.176219940185547

Token 95: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038326162844896317
    2. ' for' → logprob: -3.2883262634277344
    3. '	for' → logprob: -8.538326263427734
    4. '       ' → logprob: -9.788326263427734
    5. '   ' → logprob: -10.538326263427734
    6. '<|end|>' → logprob: -12.163326263427734
    7. ' ' → logprob: -14.413326263427734
    8. '<|end|>' → logprob: -16.163326263427734
    9. '
' → logprob: -16.288326263427734
    10. '  ' → logprob: -16.538326263427734

Token 96: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.008711368776857853
    2. '_' → logprob: -4.758711338043213
    3. ' i' → logprob: -9.758711814880371
    4. ' ' → logprob: -10.258711814880371
    5. ' ' → logprob: -12.633711814880371
    6. '_i' → logprob: -14.883711814880371
    7. 'i' → logprob: -15.258711814880371
    8. ' in' → logprob: -16.383710861206055
    9. ' ‌' → logprob: -17.883710861206055
    10. ' range' → logprob: -18.758710861206055

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11296436190605164
    2. ' ' → logprob: -2.862964391708374
    3. ' _' → logprob: -3.487964391708374
    4. 'in' → logprob: -4.737964153289795
    5. ' i' → logprob: -5.112964153289795
    6. ' range' → logprob: -6.237964153289795
    7. 'range' → logprob: -6.612964153289795
    8. '_' → logprob: -7.487964153289795
    9. 'i' → logprob: -8.237964630126953
    10. '  ' → logprob: -9.112964630126953

Token 98: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12701085209846497
    2. ' range' → logprob: -2.1270108222961426
    3. 'ange' → logprob: -9.5020112991333
    4. '	range' → logprob: -12.5020112991333
    5. '(range' → logprob: -13.5020112991333
    6. 'rang' → logprob: -14.1270112991333
    7. ' ' → logprob: -14.3770112991333
    8. 'ran' → logprob: -14.6270112991333
    9. ' xrange' → logprob: -15.1270112991333
    10. 'grid' → logprob: -15.5020112991333

Token 99: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.21258272230625153
    2. ' h' → logprob: -1.9625827074050903
    3. ' (' → logprob: -3.58758282661438
    4. 'h' → logprob: -3.96258282661438
    5. '(' → logprob: -5.462582588195801
    6. '	h' → logprob: -9.5875825881958
    7. ' ' → logprob: -10.9625825881958
    8. '   ' → logprob: -13.0875825881958
    9. ' range' → logprob: -15.3375825881958
    10. ')' → logprob: -15.4625825881958

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003358324058353901
    2. ' ):' → logprob: -6.253358364105225
    3. '):
' → logprob: -6.753358364105225
    4. ':' → logprob: -8.753357887268066
    5. ')' → logprob: -9.753357887268066
    6. '   ' → logprob: -10.503357887268066
    7. '       ' → logprob: -11.878357887268066
    8. ' ):
' → logprob: -12.753357887268066
    9. ' )' → logprob: -13.253357887268066
    10. '):
' → logprob: -13.628357887268066

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23515792191028595
    2. '       ' → logprob: -1.6101579666137695
    3. '	       ' → logprob: -5.8601579666137695
    4. '   ' → logprob: -5.9851579666137695
    5. '<|end|>' → logprob: -7.1101579666137695
    6. '
' → logprob: -7.2351579666137695
    7. '	   ' → logprob: -7.4851579666137695
    8. '```' → logprob: -8.36015796661377
    9. ':' → logprob: -8.48515796661377
    10. '               ' → logprob: -8.73515796661377

Token 102: ' grid' (ID: 10586)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6935237050056458
    2. ' grid' → logprob: -1.193523645401001
    3. '    ' → logprob: -2.568523645401001
    4. '        ' → logprob: -3.318523645401001
    5. ' ' → logprob: -3.318523645401001
    6. '   ' → logprob: -3.443523645401001
    7. ' line' → logprob: -5.94352388381958
    8. 'grid' (adapté à ' grid') → logprob: -5.94352388381958
    9. ' ' → logprob: -6.31852388381958
    10. ' input' → logprob: -6.56852388381958

Token 103: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004082554951310158
    2. '.' → logprob: -5.504082679748535
    3. '.extend' → logprob: -13.504082679748535
    4. ' .' → logprob: -13.879082679748535
    5. '   ' → logprob: -15.004082679748535
    6. '.=' → logprob: -15.004082679748535
    7. '.app' → logprob: -15.379082679748535
    8. 'append' → logprob: -15.504082679748535
    9. '.setdefault' → logprob: -15.629082679748535
    10. '.readline' → logprob: -16.25408172607422

Token 104: '(input' (ID: 10054)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.37880441546440125
    2. '(input' → logprob: -1.6288044452667236
    3. '(' → logprob: -2.1288044452667236
    4. '(tuple' → logprob: -9.003804206848145
    5. 'input' → logprob: -10.878804206848145
    6. 'list' → logprob: -11.003804206848145
    7. ' (' → logprob: -12.003804206848145
    8. '(
' → logprob: -12.878804206848145
    9. '(line' → logprob: -13.503804206848145
    10. '([' → logprob: -13.753804206848145

Token 105: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.006619804538786411
    2. '().' → logprob: -5.256619930267334
    3. '()' → logprob: -6.631619930267334
    4. '()(' → logprob: -11.131619453430176
    5. '_' → logprob: -11.256619453430176
    6. 'lines' → logprob: -11.756619453430176
    7. 'Lines' → logprob: -12.131619453430176
    8. '())' → logprob: -12.131619453430176
    9. '   ' → logprob: -12.506619453430176
    10. '```' → logprob: -12.881619453430176

Token 106: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.125000953674316
    3. ' [' → logprob: -15.375000953674316
    4. 'idx' → logprob: -16.375
    5. ' idx' → logprob: -17.25
    6. '   ' → logprob: -17.625
    7. '[id' → logprob: -17.875
    8. '(idx' → logprob: -17.875
    9. '	idx' → logprob: -19.25
    10. '[index' → logprob: -19.5

Token 107: '])
' (ID: 5169)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03378862142562866
    2. '])' → logprob: -3.4087886810302734
    3. ']' → logprob: -9.283788681030273
    4. ').' → logprob: -10.408788681030273
    5. '])
' → logprob: -12.033788681030273
    6. ' ].' → logprob: -12.408788681030273
    7. '][' → logprob: -12.533788681030273
    8. ')' → logprob: -13.283788681030273
    9. '.strip' → logprob: -13.658788681030273
    10. ' ])' → logprob: -14.283788681030273

Token 108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019535968080163002
    2. '
' → logprob: -5.144536018371582
    3. '   ' → logprob: -5.269536018371582
    4. '	   ' → logprob: -6.144536018371582
    5. 'idx' → logprob: -6.519536018371582
    6. '           ' → logprob: -6.769536018371582
    7. '        
' → logprob: -7.269536018371582
    8. '	' → logprob: -7.394536018371582
    9. '<|end|>' → logprob: -7.394536018371582
    10. '	idx' → logprob: -7.519536018371582

Token 109: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.9641194939613342
    2. ' idx' → logprob: -1.2141194343566895
    3. '	idx' → logprob: -2.0891194343566895
    4. '       ' → logprob: -2.3391194343566895
    5. '   ' → logprob: -3.4641194343566895
    6. '<|end|>' → logprob: -3.5891194343566895
    7. '	   ' → logprob: -4.3391194343566895
    8. '[idx' → logprob: -4.8391194343566895
    9. '<|end|>' → logprob: -5.3391194343566895
    10. '	' → logprob: -5.4641194343566895

Token 110: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6315944194793701
    2. ' +=' → logprob: -1.1315944194793701
    3. '+' → logprob: -2.63159441947937
    4. '++' → logprob: -2.63159441947937
    5. '+++' → logprob: -7.131594657897949
    6. '<|end|>' → logprob: -7.506594657897949
    7. '```' → logprob: -8.88159465789795
    8. ' +' → logprob: -9.38159465789795
    9. '<|end|>' → logprob: -10.00659465789795
    10. ' ++' → logprob: -10.25659465789795

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858771339058876
    2. ' ' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.798587799072266
    4. '   ' → logprob: -16.048587799072266
    5. '```' → logprob: -16.548587799072266
    6. '１' → logprob: -17.986087799072266
    7. '<|end|>' → logprob: -18.048587799072266
    8. '	' → logprob: -18.173587799072266
    9. '  ' → logprob: -18.611087799072266
    10. '۱' → logprob: -18.736087799072266

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '```' → logprob: -19.312501907348633
    5. '１' → logprob: -20.500001907348633
    6. '۱' → logprob: -21.312501907348633
    7. '0' → logprob: -21.500001907348633
    8. '' → logprob: -21.750001907348633
    9. '  ' → logprob: -21.875001907348633
    10. '+' → logprob: -21.875001907348633

Token 113: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5527302622795105
    2. '<|end|>' → logprob: -1.6777303218841553
    3. '
' → logprob: -1.9277303218841553
    4. '   ' → logprob: -2.9277303218841553
    5. '        
' → logprob: -3.8027303218841553
    6. '    
' → logprob: -5.427730083465576
    7. '    ' → logprob: -6.052730083465576
    8. ' ' → logprob: -6.427730083465576
    9. '        ' → logprob: -6.552730083465576
    10. '  
' → logprob: -6.927730083465576

Token 114: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24151360988616943
    2. '       ' → logprob: -2.116513729095459
    3. '
' → logprob: -2.991513729095459
    4. '    
' → logprob: -4.491513729095459
    5. '    ' → logprob: -4.991513729095459
    6. '        
' → logprob: -5.116513729095459
    7. ' ' → logprob: -5.741513729095459
    8. '<|end|>' → logprob: -5.866513729095459
    9. 'def' → logprob: -5.991513729095459
    10. '  
' → logprob: -6.116513729095459

Token 115: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2887263000011444
    2. 'visited' → logprob: -1.5387263298034668
    3. '   ' → logprob: -4.288726329803467
    4. ' visited' → logprob: -4.538726329803467
    5. '        
' → logprob: -5.163726329803467
    6. 'def' → logprob: -6.038726329803467
    7. 'v' → logprob: -7.413726329803467
    8. '        ' → logprob: -8.413725852966309
    9. '
' → logprob: -8.413725852966309
    10. 'count' → logprob: -8.538725852966309

Token 116: ' The' (ID: 623)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9900111556053162
    2. ' visited' → logprob: -1.115011215209961
    3. '       ' → logprob: -2.490011215209961
    4. '   ' → logprob: -2.990011215209961
    5. ' from' → logprob: -3.240011215209961
    6. 'def' → logprob: -3.490011215209961
    7. ' def' → logprob: -3.615011215209961
    8. ' directions' → logprob: -4.490011215209961
    9. 'from' → logprob: -4.740011215209961
    10. ' land' → logprob: -5.490011215209961

Token 117: ' grid' (ID: 10586)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9123352766036987
    2. ' visited' → logprob: -1.2873352766036987
    3. ' directions' → logprob: -2.0373353958129883
    4. 'def' → logprob: -3.0373353958129883
    5. 'dire' → logprob: -3.1623353958129883
    6. ' from' → logprob: -3.5373353958129883
    7. '       ' → logprob: -3.9123353958129883
    8. '   ' → logprob: -4.162335395812988
    9. ' def' → logprob: -4.412335395812988
    10. 'from' → logprob: -5.037335395812988

Token 118: ' has' (ID: 853)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' h' (ID: 312)
  Prédit: ' been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' been' → logprob: -1.188631534576416
    2. ' visited' → logprob: -1.563631534576416
    3. 'visited' → logprob: -1.688631534576416
    4. ' a' → logprob: -2.813631534576416
    5. ' ' → logprob: -3.563631534576416
    6. ' spaces' → logprob: -3.563631534576416
    7. ' one' → logprob: -4.063631534576416
    8. '1' → logprob: -4.188631534576416
    9. ' to' → logprob: -4.188631534576416
    10. 'def' → logprob: -4.188631534576416

Token 120: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.441744327545166
    2. ' lines' → logprob: -1.566744327545166
    3. 'rows' → logprob: -1.941744327545166
    4. '<|end|>' → logprob: -6.816744327545166
    5. 'lines' → logprob: -6.941744327545166
    6. ')' → logprob: -6.941744327545166
    7. '   ' → logprob: -7.941744327545166
    8. ' and' → logprob: -8.066743850708008
    9. ' ' → logprob: -8.441743850708008
    10. '	rows' → logprob: -8.691743850708008

Token 121: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.47408294677734375
    2. 'w' → logprob: -0.9740829467773438
    3. '   ' → logprob: -13.724082946777344
    4. '       ' → logprob: -14.224082946777344
    5. '	w' → logprob: -14.474082946777344
    6. ' ' → logprob: -14.474082946777344
    7. '_w' → logprob: -14.599082946777344
    8. ' ' → logprob: -14.974082946777344
    9. '    ' → logprob: -15.224082946777344
    10. ',' → logprob: -15.349082946777344

Token 123: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.023853745311498642
    2. 'columns' → logprob: -3.7738537788391113
    3. ' cols' → logprob: -7.898853778839111
    4. 'cols' → logprob: -9.023853302001953
    5. '<|end|>' → logprob: -10.023853302001953
    6. ' cells' → logprob: -11.148853302001953
    7. ',' → logprob: -11.523853302001953
    8. '.columns' → logprob: -11.773853302001953
    9. ' ' → logprob: -11.898853302001953
    10. '_columns' → logprob: -12.023853302001953

Token 124: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41397982835769653
    2. '
' → logprob: -1.2889797687530518
    3. '<|end|>' → logprob: -3.1639797687530518
    4. '        
' → logprob: -4.413980007171631
    5. ',' → logprob: -5.788980007171631
    6. '   ' → logprob: -6.163980007171631
    7. '<|end|>' → logprob: -7.288980007171631
    8. 'def' → logprob: -7.538980007171631
    9. ' ' → logprob: -8.038979530334473
    10. '.' → logprob: -8.163979530334473

Token 125: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4208071827888489
    2. ' and' → logprob: -2.420807123184204
    3. '        
' → logprob: -2.670807123184204
    4. 'visited' → logprob: -3.045807123184204
    5. '<|end|>' → logprob: -3.295807123184204
    6. ' visited' → logprob: -3.545807123184204
    7. 'def' → logprob: -3.795807123184204
    8. '
' → logprob: -4.045807361602783
    9. '   ' → logprob: -5.545807361602783
    10. ' directions' → logprob: -5.795807361602783

Token 126: ' (' (ID: 350)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.2072114944458008
    2. ' spaces' → logprob: -1.8322114944458008
    3. ' '' → logprob: -2.082211494445801
    4. ' each' → logprob: -2.082211494445801
    5. ' ' → logprob: -2.332211494445801
    6. ' "' → logprob: -3.582211494445801
    7. 'each' → logprob: -3.582211494445801
    8. ' the' → logprob: -3.707211494445801
    9. ''' → logprob: -3.832211494445801
    10. '"' → logprob: -4.207211494445801

Token 127: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19365675747394562
    2. ' )' → logprob: -1.9436568021774292
    3. ' ' → logprob: -4.318656921386719
    4. '0' → logprob: -5.943656921386719
    5. ' each' → logprob: -6.068656921386719
    6. ' spaces' → logprob: -6.068656921386719
    7. ' a' → logprob: -6.818656921386719
    8. ' grid' → logprob: -6.818656921386719
    9. 'each' → logprob: -7.068656921386719
    10. '1' → logprob: -7.068656921386719

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005499334656633437
    2. ')' → logprob: -7.875549793243408
    3. '0' → logprob: -9.625550270080566
    4. ' ,' → logprob: -10.000550270080566
    5. 'based' → logprob: -10.250550270080566
    6. '-based' → logprob: -11.250550270080566
    7. 'Based' → logprob: -12.750550270080566
    8. ',)' → logprob: -13.750550270080566
    9. ' )' → logprob: -13.875550270080566
    10. '<|end|>' → logprob: -14.000550270080566

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196948140859604
    2. ' ' → logprob: -2.811969518661499
    3. ')' → logprob: -13.436969757080078
    4. ' )' → logprob: -15.561969757080078
    5. '<|end|>' → logprob: -17.311969757080078
    6. '    ' → logprob: -17.311969757080078
    7. '   ' → logprob: -17.436969757080078
    8. '  ' → logprob: -17.936969757080078
    9. ' 
' → logprob: -18.186969757080078
    10. '       ' → logprob: -19.561969757080078

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005624461336992681
    2. ' )' → logprob: -7.50056266784668
    3. ')
' → logprob: -12.75056266784668
    4. ' as' → logprob: -13.12556266784668
    5. ' at' → logprob: -13.62556266784668
    6. ')is' → logprob: -14.37556266784668
    7. '),' → logprob: -14.87556266784668
    8. ' being' → logprob: -15.25056266784668
    9. 'as' → logprob: -15.62556266784668
    10. ')-' → logprob: -15.75056266784668

Token 131: ' at' (ID: 540)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.03581425920128822
    2. ' being' → logprob: -4.03581428527832
    3. '<|end|>' → logprob: -4.91081428527832
    4. ')' → logprob: -5.16081428527832
    5. ' at' → logprob: -6.41081428527832
    6. ' representing' → logprob: -6.53581428527832
    7. 'as' → logprob: -7.28581428527832
    8. ' in' → logprob: -8.41081428527832
    9. ' )' → logprob: -9.16081428527832
    10. ' is' → logprob: -9.28581428527832

Token 132: ' bottom' (ID: 8725)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5029534101486206
    2. 'the' → logprob: -1.0029534101486206
    3. ' top' → logprob: -4.25295352935791
    4. 'top' → logprob: -4.25295352935791
    5. ')' → logprob: -11.37795352935791
    6. ' ' → logprob: -13.37795352935791
    7. '   ' → logprob: -14.00295352935791
    8. '[top' → logprob: -14.00295352935791
    9. ' upper' → logprob: -14.25295352935791
    10. 'bottom' → logprob: -14.50295352935791

Token 133: '-left' (ID: 17007)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.12754102051258087
    2. '-left' → logprob: -2.6275410652160645
    3. '-' → logprob: -4.0025410652160645
    4. '_left' → logprob: -4.2525410652160645
    5. ',' → logprob: -5.0025410652160645
    6. ' left' → logprob: -6.0025410652160645
    7. ')' → logprob: -6.2525410652160645
    8. 'right' → logprob: -6.7525410652160645
    9. '_' → logprob: -6.8775410652160645
    10. '+' → logprob: -7.7525410652160645

Token 134: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7679750323295593
    2. '<|end|>' → logprob: -0.7679750323295593
    3. '       ' → logprob: -3.642975091934204
    4. ',' → logprob: -3.892975091934204
    5. '.' → logprob: -5.142974853515625
    6. '   ' → logprob: -5.267974853515625
    7. '<|end|>' → logprob: -5.642974853515625
    8. '        
' → logprob: -5.767974853515625
    9. '    
' → logprob: -6.392974853515625
    10. ')' → logprob: -6.767974853515625

Token 135: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04212547466158867
    2. '<|end|>' → logprob: -3.6671254634857178
    3. '       ' → logprob: -4.667125701904297
    4. '        
' → logprob: -6.417125701904297
    5. '   ' → logprob: -7.042125701904297
    6. ',' → logprob: -7.167125701904297
    7. ' 
' → logprob: -7.167125701904297
    8. '    
' → logprob: -7.417125701904297
    9. ' ' → logprob: -8.167125701904297
    10. '\n' → logprob: -8.417125701904297

Token 136: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3562189042568207
    2. 'visited' → logprob: -2.3562188148498535
    3. '
' → logprob: -2.4812188148498535
    4. ' visited' → logprob: -2.9812188148498535
    5. '        
' → logprob: -3.4812188148498535
    6. '   ' → logprob: -4.1062188148498535
    7. 'def' → logprob: -5.1062188148498535
    8. ' 
' → logprob: -5.7312188148498535
    9. '        ' → logprob: -5.8562188148498535
    10. '    ' → logprob: -6.2312188148498535

Token 137: ' but' (ID: 889)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7907740473747253
    2. ' visited' → logprob: -1.1657741069793701
    3. '       ' → logprob: -2.16577410697937
    4. 'def' → logprob: -3.41577410697937
    5. ' from' → logprob: -4.290773868560791
    6. 'from' → logprob: -4.540773868560791
    7. '   ' → logprob: -4.540773868560791
    8. ' def' → logprob: -4.540773868560791
    9. '
' → logprob: -4.915773868560791
    10. '        
' → logprob: -5.040773868560791

Token 138: ' input' (ID: 3422)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.023086486384272575
    2. 'the' → logprob: -4.6480865478515625
    3. ' we' → logprob: -5.2730865478515625
    4. ' in' → logprob: -6.5230865478515625
    5. ' coordinates' → logprob: -6.8980865478515625
    6. ' grid' → logprob: -7.0230865478515625
    7. ' (' → logprob: -7.3980865478515625
    8. ' you' → logprob: -7.6480865478515625
    9. ' from' → logprob: -8.023086547851562
    10. ' for' → logprob: -8.023086547851562

Token 139: ' lines' (ID: 8698)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.1510600745677948
    2. 'lines' → logprob: -3.151060104370117
    3. ' lines' → logprob: -3.276060104370117
    4. '()' → logprob: -3.401060104370117
    5. '<|end|>' → logprob: -3.901060104370117
    6. '<|end|>' → logprob: -6.526060104370117
    7. '_grid' → logprob: -7.151060104370117
    8. ' is' → logprob: -7.276060104370117
    9. ')' → logprob: -7.651060104370117
    10. '().' → logprob: -8.026060104370117

Token 140: ' are' (ID: 553)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.477163702249527
    2. '<|end|>' → logprob: -1.7271636724472046
    3. ' are' → logprob: -1.9771636724472046
    4. '.reverse' → logprob: -3.352163791656494
    5. '[' → logprob: -4.352163791656494
    6. '<|end|>' → logprob: -5.477163791656494
    7. ' appear' → logprob: -5.727163791656494
    8. ')' → logprob: -6.352163791656494
    9. ' should' → logprob: -6.477163791656494
    10. ' is' → logprob: -7.227163791656494

Token 141: ' from' (ID: 591)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.4701019525527954
    2. ' given' → logprob: -2.095101833343506
    3. 're' → logprob: -2.845101833343506
    4. ' in' → logprob: -2.970101833343506
    5. 'given' → logprob: -3.845101833343506
    6. 'from' → logprob: -4.095101833343506
    7. ' grid' → logprob: -4.095101833343506
    8. '[' → logprob: -4.345101833343506
    9. ' reversed' → logprob: -4.470101833343506
    10. 'grid' → logprob: -4.470101833343506

Token 142: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.709607720375061
    2. 'top' → logprob: -1.084607720375061
    3. 'the' → logprob: -2.0846076011657715
    4. ' the' → logprob: -3.0846076011657715
    5. '	top' → logprob: -11.95960807800293
    6. ' bottom' → logprob: -12.20960807800293
    7. 'bottom' → logprob: -12.33460807800293
    8. '[top' → logprob: -12.83460807800293
    9. '<|end|>' → logprob: -12.95960807800293
    10. '(top' → logprob: -13.95960807800293

Token 143: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.012409340590238571
    2. 'down' → logprob: -4.512409210205078
    3. ' bottom' → logprob: -6.637409210205078
    4. 'top' → logprob: -10.262409210205078
    5. ' down' → logprob: -11.137409210205078
    6. '_bottom' → logprob: -15.262409210205078
    7. '<|end|>' → logprob: -15.762409210205078
    8. 'bot' → logprob: -15.887409210205078
    9. '(bottom' → logprob: -16.762409210205078
    10. 'the' → logprob: -16.887409210205078

Token 145: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41771113872528076
    2. '
' → logprob: -1.4177111387252808
    3. '        
' → logprob: -2.6677112579345703
    4. '<|end|>' → logprob: -4.16771125793457
    5. '   ' → logprob: -5.41771125793457
    6. '    
' → logprob: -5.79271125793457
    7. ' 
' → logprob: -6.54271125793457
    8. '        ' → logprob: -6.91771125793457
    9. '<|end|>' → logprob: -7.29271125793457
    10. 'def' → logprob: -7.41771125793457

Token 146: 'y' (ID: 88)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021267807111144066
    2. ' )' → logprob: -4.771267890930176
    3. '
' → logprob: -5.396267890930176
    4. ',' → logprob: -6.271267890930176
    5. '<|end|>' → logprob: -6.396267890930176
    6. ')
' → logprob: -6.396267890930176
    7. ').' → logprob: -7.646267890930176
    8. ' 
' → logprob: -7.646267890930176
    9. '       ' → logprob: -7.896267890930176
    10. '.' → logprob: -8.771267890930176

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023085197433829308
    2. ' =' → logprob: -3.898085117340088
    3. ')' → logprob: -6.398085117340088
    4. '==' → logprob: -9.023085594177246
    5. '-' → logprob: -9.648085594177246
    6. ',' → logprob: -9.648085594177246
    7. ')=' → logprob: -9.648085594177246
    8. '=index' → logprob: -9.773085594177246
    9. ' ==' → logprob: -9.898085594177246
    10. '   ' → logprob: -9.898085594177246

Token 148: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6345938444137573
    2. 'h' → logprob: -0.7595938444137573
    3. '0' → logprob: -6.384593963623047
    4. ' ' → logprob: -8.759593963623047
    5. '	h' → logprob: -10.384593963623047
    6. '   ' → logprob: -10.384593963623047
    7. '(h' → logprob: -10.634593963623047
    8. ')' → logprob: -11.884593963623047
    9. ' (' → logprob: -11.884593963623047
    10. '[h' → logprob: -12.009593963623047

Token 149: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5231431126594543
    2. '-' → logprob: -0.8981431126594543
    3. ' ' → logprob: -11.64814281463623
    4. ')' → logprob: -12.02314281463623
    5. '   ' → logprob: -13.27314281463623
    6. '1' → logprob: -14.02314281463623
    7. ')-' → logprob: -14.27314281463623
    8. ' )' → logprob: -14.52314281463623
    9. '-)' → logprob: -14.64814281463623
    10. '−' → logprob: -15.64814281463623

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004125575942452997
    2. ' ' → logprob: -8.000412940979004
    3. '-' → logprob: -9.750412940979004
    4. ' -' → logprob: -11.000412940979004
    5. '   ' → logprob: -14.500412940979004
    6. '
' → logprob: -14.625412940979004
    7. ')' → logprob: -14.750412940979004
    8. 'y' → logprob: -16.000411987304688
    9. '```' → logprob: -16.250411987304688
    10. '    ' → logprob: -16.500411987304688

Token 151: ' is' (ID: 382)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.382201611995697
    2. '-' → logprob: -1.5072016716003418
    3. ')' → logprob: -2.507201671600342
    4. ',' → logprob: -5.257201671600342
    5. ' )' → logprob: -6.007201671600342
    6. ' to' → logprob: -6.757201671600342
    7. ' down' → logprob: -6.757201671600342
    8. '-down' → logprob: -7.132201671600342
    9. '   ' → logprob: -7.632201671600342
    10. 'down' → logprob: -8.007201194763184

Token 152: ' top' (ID: 2344)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9611400365829468
    2. ' top' → logprob: -1.3361400365829468
    3. 'the' → logprob: -1.5861400365829468
    4. 'top' → logprob: -2.0861401557922363
    5. ' at' → logprob: -3.8361401557922363
    6. 'at' → logprob: -6.586140155792236
    7. ' bottom' → logprob: -6.961140155792236
    8. 'bottom' → logprob: -7.586140155792236
    9. 'row' → logprob: -8.461139678955078
    10. ' ' → logprob: -8.836139678955078

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04610392078757286
    2. ',' → logprob: -4.2961039543151855
    3. ' line' → logprob: -4.2961039543151855
    4. ' )' → logprob: -5.9211039543151855
    5. '-left' → logprob: -6.1711039543151855
    6. ' row' → logprob: -6.5461039543151855
    7. 'line' → logprob: -6.6711039543151855
    8. '-' → logprob: -6.9211039543151855
    9. '       ' → logprob: -7.0461039543151855
    10. '-row' → logprob: -7.1711039543151855

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5391008257865906
    2. '
' → logprob: -1.9141008853912354
    3. '        
' → logprob: -1.9141008853912354
    4. '<|end|>' → logprob: -2.7891008853912354
    5. ' 
' → logprob: -4.539100646972656
    6. '   ' → logprob: -4.539100646972656
    7. ',' → logprob: -4.664100646972656
    8. '    
' → logprob: -4.789100646972656
    9. '        ' → logprob: -5.414100646972656
    10. ' ' → logprob: -5.539100646972656

Token 155: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6532512903213501
    2. '       ' → logprob: -1.02825129032135
    3. ' visited' → logprob: -3.2782511711120605
    4. '   ' → logprob: -3.5282511711120605
    5. 'def' → logprob: -3.6532511711120605
    6. '
' → logprob: -4.9032511711120605
    7. '        
' → logprob: -4.9032511711120605
    8. '<|end|>' → logprob: -5.6532511711120605
    9. 'graph' → logprob: -6.7782511711120605
    10. '    
' → logprob: -7.0282511711120605

Token 156: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3885391354560852
    2. 'visited' → logprob: -1.5135390758514404
    3. ' visited' → logprob: -3.3885390758514404
    4. '        
' → logprob: -3.6385390758514404
    5. 'def' → logprob: -4.1385393142700195
    6. '   ' → logprob: -4.3885393142700195
    7. '
' → logprob: -6.1385393142700195
    8. 'from' → logprob: -7.0135393142700195
    9. 'graph' → logprob: -7.1385393142700195
    10. ' def' → logprob: -7.2635393142700195

Token 157: ' transform' (ID: 7118)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.5119195580482483
    2. ' reverse' → logprob: -2.0119194984436035
    3. 'convert' → logprob: -2.2619194984436035
    4. ' define' → logprob: -2.8869194984436035
    5. 'reverse' → logprob: -3.3869194984436035
    6. ' continue' → logprob: -3.7619194984436035
    7. ' create' → logprob: -4.2619194984436035
    8. 'def' → logprob: -4.6369194984436035
    9. 'define' → logprob: -5.2619194984436035
    10. ' process' → logprob: -6.1369194984436035

Token 158: ' to' (ID: 316)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.35373225808143616
    2. ' grid' → logprob: -1.6037322282791138
    3. '(grid' → logprob: -2.6037323474884033
    4. '(' → logprob: -5.228732109069824
    5. '    ' → logprob: -5.603732109069824
    6. ' (' → logprob: -6.103732109069824
    7. ' ' → logprob: -6.353732109069824
    8. '<|end|>' → logprob: -6.478732109069824
    9. '	grid' → logprob: -6.603732109069824
    10. ' the' → logprob: -6.603732109069824

Token 159: ' a' (ID: 261)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.6511621475219727
    2. 'grid' → logprob: -1.0261621475219727
    3. ' a' → logprob: -2.4011621475219727
    4. '[
' → logprob: -4.651162147521973
    5. '[' → logprob: -5.151162147521973
    6. ' [' → logprob: -5.401162147521973
    7. 'a' → logprob: -5.901162147521973
    8. '[]' → logprob: -6.901162147521973
    9. 'list' → logprob: -7.026162147521973
    10. ' [
' → logprob: -7.151162147521973

Token 160: ' coordinate' (ID: 30380)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -1.1995227336883545
    2. ' [' → logprob: -1.4495227336883545
    3. ' list' → logprob: -2.4495227336883545
    4. ' bottom' → logprob: -2.6995227336883545
    5. ' ' → logprob: -2.9495227336883545
    6. '[' → logprob: -2.9495227336883545
    7. 'b' → logprob: -3.1995227336883545
    8. 'grid' → logprob: -3.3245227336883545
    9. '[
' → logprob: -3.9495227336883545
    10. 'list' → logprob: -4.324522972106934

Token 161: ' system' (ID: 2420)
  Prédit: ' system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.38710299134254456
    2. 'system' → logprob: -1.2621029615402222
    3. 's' → logprob: -3.8871030807495117
    4. 'map' → logprob: -5.137103080749512
    5. ' map' → logprob: -5.887103080749512
    6. '_map' → logprob: -5.887103080749512
    7. '_system' → logprob: -7.012103080749512
    8. '   ' → logprob: -7.387103080749512
    9. 'mapping' → logprob: -7.387103080749512
    10. ' ' → logprob: -7.637103080749512

Token 162: ':' (ID: 25)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.07221764326095581
    2. ' with' → logprob: -3.1972177028656006
    3. '       ' → logprob: -5.1972174644470215
    4. ' that' → logprob: -5.1972174644470215
    5. ',' → logprob: -5.5722174644470215
    6. ' for' → logprob: -5.8222174644470215
    7. ':' → logprob: -6.0722174644470215
    8. 'where' → logprob: -6.3222174644470215
    9. ' to' → logprob: -6.6972174644470215
    10. 'with' → logprob: -6.8222174644470215

Token 163: ' blocks' (ID: 18125)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.956774890422821
    2. ' 
' → logprob: -1.4567749500274658
    3. '        ' → logprob: -2.456774950027466
    4. '<|end|>' → logprob: -2.706774950027466
    5. '    ' → logprob: -2.956774950027466
    6. ' y' → logprob: -3.081774950027466
    7. '        
' → logprob: -3.456774950027466
    8. 'y' → logprob: -4.206774711608887
    9. '
' → logprob: -4.581774711608887
    10. '       ' → logprob: -4.581774711608887

Token 164: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013987435027956963
    2. '=' → logprob: -4.3889875411987305
    3. ',' → logprob: -7.6389875411987305
    4. '<|end|>' → logprob: -7.8889875411987305
    5. '_' → logprob: -8.88898754119873
    6. ')' → logprob: -9.13898754119873
    7. '[' → logprob: -9.38898754119873
    8. ' =
' → logprob: -10.13898754119873
    9. '   ' → logprob: -10.38898754119873
    10. '<|end|>' → logprob: -10.63898754119873

Token 165: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3774722218513489
    2. '(' → logprob: -2.252472162246704
    3. '(h' → logprob: -2.502472162246704
    4. '(x' → logprob: -3.627472162246704
    5. '(y' → logprob: -3.627472162246704
    6. ' y' → logprob: -4.127472400665283
    7. '[h' → logprob: -4.377472400665283
    8. ' the' → logprob: -4.502472400665283
    9. '[(' → logprob: -5.377472400665283
    10. 'y' → logprob: -5.502472400665283

Token 166: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3743304908275604
    2. '0' → logprob: -1.7493305206298828
    3. ' x' → logprob: -2.249330520629883
    4. ')' → logprob: -4.249330520629883
    5. ' ' → logprob: -4.999330520629883
    6. 'j' → logprob: -5.999330520629883
    7. ')x' → logprob: -6.249330520629883
    8. 'w' → logprob: -6.249330520629883
    9. ' j' → logprob: -7.374330520629883
    10. ' )' → logprob: -7.374330520629883

Token 167: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021549254655838013
    2. ',y' → logprob: -3.8965492248535156
    3. ' ,' → logprob: -7.021549224853516
    4. ')' → logprob: -9.896549224853516
    5. '=' → logprob: -11.271549224853516
    6. ',
' → logprob: -11.521549224853516
    7. '   ' → logprob: -11.771549224853516
    8. 'y' → logprob: -11.896549224853516
    9. ',h' → logprob: -11.896549224853516
    10. ' y' → logprob: -12.271549224853516

Token 168: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001978237647563219
    2. ')
' → logprob: -7.626978397369385
    3. ' )' → logprob: -7.751978397369385
    4. ',' → logprob: -8.001977920532227
    5. '       ' → logprob: -8.501977920532227
    6. '   ' → logprob: -8.751977920532227
    7. '),' → logprob: -9.126977920532227
    8. '):' → logprob: -9.501977920532227
    9. '):
' → logprob: -10.126977920532227
    10. '           ' → logprob: -10.751977920532227

Token 169: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.03878325968980789
    2. 'y' → logprob: -3.413783311843872
    3. '0' → logprob: -6.788783073425293
    4. ' ' → logprob: -6.913783073425293
    5. ' (' → logprob: -7.038783073425293
    6. ' grid' → logprob: -7.288783073425293
    7. ' h' → logprob: -7.663783073425293
    8. 'h' → logprob: -8.663783073425293
    9. '(' → logprob: -9.038783073425293
    10. 'grid' → logprob: -9.288783073425293

Token 171: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6368926167488098
    2. ' =' → logprob: -0.7618926167488098
    3. ' +=' → logprob: -6.136892795562744
    4. ')' → logprob: -7.761892795562744
    5. '+=' → logprob: -8.136892318725586
    6. ' >=' → logprob: -8.386892318725586
    7. ' ==' → logprob: -8.511892318725586
    8. ' ' → logprob: -8.636892318725586
    9. 'from' → logprob: -8.886892318725586
    10. ' in' → logprob: -9.761892318725586

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05843580141663551
    2. 'h' → logprob: -3.1834359169006348
    3. ' h' → logprob: -4.308435916900635
    4. ' ' → logprob: -6.308435916900635
    5. '   ' → logprob: -11.183435440063477
    6. 'bottom' → logprob: -11.683435440063477
    7. '(h' → logprob: -12.808435440063477
    8. ' bottom' → logprob: -13.058435440063477
    9. '[h' → logprob: -13.058435440063477
    10. 'y' → logprob: -13.683435440063477

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036851167678833008
    2. 'h' → logprob: -5.628684997558594
    3. ' ' → logprob: -10.003684997558594
    4. ' h' → logprob: -10.253684997558594
    5. 'bottom' → logprob: -13.503684997558594
    6. '`' → logprob: -14.628684997558594
    7. '(h' → logprob: -14.878684997558594
    8. '[h' → logprob: -15.003684997558594
    9. '```' → logprob: -15.128684997558594
    10. '1' → logprob: -15.191184997558594

Token 174: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.07844087481498718
    2. 'the' → logprob: -2.8284409046173096
    3. ' bottom' → logprob: -4.2034406661987305
    4. ' the' → logprob: -6.9534406661987305
    5. '0' → logprob: -7.8284406661987305
    6. '<|end|>' → logprob: -10.95344066619873
    7. ' ' → logprob: -12.20344066619873
    8. 'top' → logprob: -12.70344066619873
    9. 'bot' → logprob: -12.70344066619873
    10. 'b' → logprob: -13.07844066619873

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25443318486213684
    2. '<|end|>' → logprob: -2.2544331550598145
    3. '        
' → logprob: -3.1294331550598145
    4. ' to' → logprob: -4.0044331550598145
    5. ',' → logprob: -4.1294331550598145
    6. '   ' → logprob: -4.6294331550598145
    7. '
' → logprob: -4.8794331550598145
    8. '        ' → logprob: -5.6294331550598145
    9. '    
' → logprob: -5.7544331550598145
    10. '.' → logprob: -5.7544331550598145

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06582348793745041
    2. '<|end|>' → logprob: -3.190823554992676
    3. '   ' → logprob: -4.690823554992676
    4. '        
' → logprob: -5.065823554992676
    5. ' ' → logprob: -6.065823554992676
    6. '
' → logprob: -6.690823554992676
    7. '<|end|>' → logprob: -7.815823554992676
    8. '    ' → logprob: -7.940823554992676
    9. '    
' → logprob: -8.065823554992676
    10. '\n' → logprob: -8.315823554992676

Token 178: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9775915145874023
    2. '       ' → logprob: -1.2275915145874023
    3. '        
' → logprob: -2.1025915145874023
    4. ' 
' → logprob: -2.7275915145874023
    5. '<|end|>' → logprob: -3.3525915145874023
    6. '    
' → logprob: -3.7275915145874023
    7. ' ' → logprob: -3.8525915145874023
    8. '    ' → logprob: -4.352591514587402
    9. '   ' → logprob: -4.477591514587402
    10. '        ' → logprob: -4.602591514587402

Token 179: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3839268684387207
    2. 'visited' → logprob: -2.7589268684387207
    3. ' 
' → logprob: -3.1339268684387207
    4. '        
' → logprob: -3.2589268684387207
    5. ' visited' → logprob: -3.3839268684387207
    6. '   ' → logprob: -3.7589268684387207
    7. '    ' → logprob: -3.7589268684387207
    8. '        ' → logprob: -3.8839268684387207
    9. '
' → logprob: -4.133926868438721
    10. '<|end|>' → logprob: -5.133926868438721

Token 180: ' invert' (ID: 57364)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3873291015625
    2. '   ' → logprob: -2.1373291015625
    3. ' continue' → logprob: -2.2623291015625
    4. ''ll' → logprob: -2.2623291015625
    5. ' need' → logprob: -2.5123291015625
    6. '       ' → logprob: -2.8873291015625
    7. ' 
' → logprob: -3.5123291015625
    8. ' can' → logprob: -3.5123291015625
    9. 'continue' → logprob: -3.5123291015625
    10. '    ' → logprob: -3.6373291015625

Token 181: ' lines' (ID: 8698)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7144443988800049
    2. '(grid' → logprob: -1.0894443988800049
    3. ' grid' → logprob: -1.8394443988800049
    4. ' the' → logprob: -4.589444160461426
    5. '	grid' → logprob: -6.964444160461426
    6. '(' → logprob: -6.964444160461426
    7. 'the' → logprob: -7.089444160461426
    8. '   ' → logprob: -7.714444160461426
    9. ' lines' → logprob: -8.214444160461426
    10. ':grid' → logprob: -8.339444160461426

Token 182: ' to' (ID: 316)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.9083299040794373
    2. ' =' → logprob: -2.033329963684082
    3. '[::-' → logprob: -2.033329963684082
    4. '(grid' → logprob: -2.533329963684082
    5. '       ' → logprob: -2.658329963684082
    6. '
' → logprob: -3.033329963684082
    7. '   ' → logprob: -3.658329963684082
    8. ' for' → logprob: -3.908329963684082
    9. 'for' → logprob: -4.158329963684082
    10. ',' → logprob: -4.283329963684082

Token 183: ' get' (ID: 717)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.026570700109004974
    2. ' grid' → logprob: -3.6515707969665527
    3. '[::-' → logprob: -8.651570320129395
    4. 'list' → logprob: -9.526570320129395
    5. '	grid' → logprob: -11.276570320129395
    6. '[' → logprob: -12.651570320129395
    7. 'reverse' → logprob: -13.526570320129395
    8. ':grid' → logprob: -13.651570320129395
    9. '(grid' → logprob: -13.776570320129395
    10. ')' → logprob: -14.901570320129395

Token 184: ' bottom' (ID: 8725)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1428869068622589
    2. ' grid' → logprob: -2.0178868770599365
    3. '[::-' → logprob: -9.142887115478516
    4. 'list' → logprob: -10.017887115478516
    5. '   ' → logprob: -11.392887115478516
    6. '	grid' → logprob: -12.142887115478516
    7. ':grid' → logprob: -12.142887115478516
    8. '[
' → logprob: -12.267887115478516
    9. '(grid' → logprob: -12.392887115478516
    10. ' the' → logprob: -12.517887115478516

Token 185: ' line' (ID: 2543)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.014327883720398
    2. '_lines' → logprob: -1.389327883720398
    3. '[:]' → logprob: -3.0143280029296875
    4. '[::-' → logprob: -3.0143280029296875
    5. '-' → logprob: -3.1393280029296875
    6. '_line' → logprob: -3.2643280029296875
    7. '_grid' → logprob: -3.5143280029296875
    8. '=' → logprob: -4.0143280029296875
    9. '_list' → logprob: -4.0143280029296875
    10. '-up' → logprob: -4.0143280029296875

Token 186: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8657503128051758
    2. '[::-' → logprob: -0.8657503128051758
    3. ' =' → logprob: -2.115750312805176
    4. 's' → logprob: -4.740750312805176
    5. '(grid' → logprob: -5.490750312805176
    6. 'grid' → logprob: -5.490750312805176
    7. '_grid' → logprob: -5.865750312805176
    8. '[' → logprob: -5.990750312805176
    9. ',' → logprob: -6.115750312805176
    10. '(' → logprob: -6.240750312805176

Token 187: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.7579537034034729
    2. '0' → logprob: -1.5079536437988281
    3. 'grid' → logprob: -1.7579536437988281
    4. ' index' → logprob: -3.007953643798828
    5. ' grid' → logprob: -3.382953643798828
    6. 'the' → logprob: -3.507953643798828
    7. ' the' → logprob: -4.632953643798828
    8. '[' → logprob: -5.132953643798828
    9. 'top' → logprob: -6.257953643798828
    10. '-' → logprob: -6.757953643798828

Token 188: ' ' (ID: 220)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.016006350517273
    2. ' h' → logprob: -1.141006350517273
    3. '0' → logprob: -2.2660064697265625
    4. '-' → logprob: -3.0160064697265625
    5. '-h' → logprob: -3.0160064697265625
    6. '(h' → logprob: -3.2660064697265625
    7. 'h' → logprob: -3.5160064697265625
    8. ' ' → logprob: -3.8910064697265625
    9. ' (' → logprob: -4.0160064697265625
    10. '[h' → logprob: -5.2660064697265625

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9765779972076416
    2. '-h' → logprob: -1.2265779972076416
    3. 'h' → logprob: -1.3515779972076416
    4. '-' → logprob: -2.7265779972076416
    5. '-(' → logprob: -6.2265777587890625
    6. '(h' → logprob: -6.7265777587890625
    7. ' h' → logprob: -7.2265777587890625
    8. ' -' → logprob: -7.2265777587890625
    9. '[h' → logprob: -8.351577758789062
    10. ' ' → logprob: -8.476577758789062

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6250476241111755
    2. '
' → logprob: -1.0000476837158203
    3. 'grid' → logprob: -2.8750476837158203
    4. ',' → logprob: -4.50004768371582
    5. '        
' → logprob: -4.62504768371582
    6. '   ' → logprob: -5.75004768371582
    7. '<|end|>' → logprob: -5.87504768371582
    8. '    
' → logprob: -6.50004768371582
    9. '  
' → logprob: -6.62504768371582
    10. ' 
' → logprob: -6.62504768371582

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46660757064819336
    2. '        
' → logprob: -1.9666075706481934
    3. '
' → logprob: -2.0916075706481934
    4. ' 
' → logprob: -3.0916075706481934
    5. ' ' → logprob: -4.091607570648193
    6. '    
' → logprob: -4.966607570648193
    7. '<|end|>' → logprob: -4.966607570648193
    8. '   ' → logprob: -5.216607570648193
    9. '    ' → logprob: -5.341607570648193
    10. '        ' → logprob: -5.591607570648193

Token 192: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.6425451040267944
    2. '       ' → logprob: -1.2675451040267944
    3. ' grid' → logprob: -2.392545223236084
    4. '
' → logprob: -3.142545223236084
    5. ' 
' → logprob: -4.017545223236084
    6. '        
' → logprob: -4.017545223236084
    7. '   ' → logprob: -5.642545223236084
    8. '    
' → logprob: -5.767545223236084
    9. '	grid' → logprob: -6.142545223236084
    10. '\n' → logprob: -6.392545223236084

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521790564060211
    2. '=' → logprob: -1.5021790266036987
    3. '[::-' → logprob: -8.752179145812988
    4. '.reverse' → logprob: -9.627179145812988
    5. '=[' → logprob: -11.627179145812988
    6. '[:]' → logprob: -12.002179145812988
    7. '=re' → logprob: -12.127179145812988
    8. ' =[' → logprob: -13.377179145812988
    9. '[' → logprob: -13.502179145812988
    10. '＝' → logprob: -13.877179145812988

Token 194: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2087058573961258
    2. ' grid' → logprob: -1.7087059020996094
    3. 'list' → logprob: -5.333705902099609
    4. ' list' → logprob: -6.083705902099609
    5. ' [' → logprob: -9.83370590209961
    6. '[' → logprob: -10.20870590209961
    7. '[::-' → logprob: -10.83370590209961
    8. '	grid' → logprob: -11.08370590209961
    9. '   ' → logprob: -11.33370590209961
    10. ' ' → logprob: -11.45870590209961

Token 195: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -5.2762428822461516e-05
    2. '[' → logprob: -9.875052452087402
    3. '[:]' → logprob: -13.750052452087402
    4. '[
' → logprob: -16.87505340576172
    5. '[:' → logprob: -17.87505340576172
    6. '[#' → logprob: -18.62505340576172
    7. ' [' → logprob: -19.00005340576172
    8. '[-' → logprob: -19.12505340576172
    9. '[:-' → logprob: -19.25005340576172
    10. '[len' → logprob: -19.37505340576172

Token 196: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.926437497138977
    2. '])' → logprob: -1.051437497138977
    3. ')]' → logprob: -2.5514373779296875
    4. '1' → logprob: -2.5514373779296875
    5. '[::-' → logprob: -2.6764373779296875
    6. ']' → logprob: -3.9264373779296875
    7. '-' → logprob: -5.9264373779296875
    8. 'reverse' → logprob: -6.1764373779296875
    9. 'ed' → logprob: -7.1764373779296875
    10. '(reverse' → logprob: -7.3014373779296875

Token 197: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. ' )' → logprob: -11.625016212463379
    3. ')
' → logprob: -12.375016212463379
    4. '<|end|>' → logprob: -13.750016212463379
    5. '   ' → logprob: -14.000016212463379
    6. ']' → logprob: -15.125016212463379
    7. '       ' → logprob: -15.625016212463379
    8. ' ' → logprob: -15.750016212463379
    9. '）' → logprob: -16.250017166137695
    10. '#' → logprob: -16.625017166137695

Token 198: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6244949698448181
    2. '       ' → logprob: -1.124495029449463
    3. '<|end|>' → logprob: -2.749495029449463
    4. '        
' → logprob: -3.499495029449463
    5. '   ' → logprob: -4.124495029449463
    6. '    
' → logprob: -5.124495029449463
    7. 'def' → logprob: -5.249495029449463
    8. ',' → logprob: -5.249495029449463
    9. ' 
' → logprob: -6.249495029449463
    10. '  
' → logprob: -6.499495029449463

Token 199: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3301272392272949
    2. '       ' → logprob: -1.455127239227295
    3. 'def' → logprob: -3.830127239227295
    4. '   ' → logprob: -4.830127239227295
    5. ' visited' → logprob: -4.830127239227295
    6. 'v' → logprob: -5.830127239227295
    7. 'from' → logprob: -6.330127239227295
    8. 'vis' → logprob: -6.330127239227295
    9. '        
' → logprob: -7.580127239227295
    10. 'dire' → logprob: -8.080127716064453

Token 200: ' Each' (ID: 11555)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.14591936767101288
    2. 'def' → logprob: -3.3959193229675293
    3. ' visited' → logprob: -3.3959193229675293
    4. 'from' → logprob: -4.020919322967529
    5. '   ' → logprob: -4.145919322967529
    6. 'dire' → logprob: -4.770919322967529
    7. ' from' → logprob: -5.645919322967529
    8. 'v' → logprob: -6.020919322967529
    9. '       ' → logprob: -6.145919322967529
    10. 'd' → logprob: -6.270919322967529

Token 201: ' cell' (ID: 4206)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.400650978088379
    2. '_' → logprob: -2.025650978088379
    3. ' cell' → logprob: -2.025650978088379
    4. 'cell' → logprob: -2.275650978088379
    5. 'row' → logprob: -2.650650978088379
    6. ' ' → logprob: -2.775650978088379
    7. 'def' → logprob: -2.900650978088379
    8. ' (' → logprob: -3.775650978088379
    9. ' block' → logprob: -3.900650978088379
    10. 'block' → logprob: -3.900650978088379

Token 202: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' either' (ID: 4784)
  Prédit: ' either'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -0.15608525276184082
    2. 'either' → logprob: -2.906085252761841
    3. ' a' → logprob: -3.906085252761841
    4. ' '' → logprob: -3.906085252761841
    5. ''' → logprob: -4.406085014343262
    6. '0' → logprob: -4.781085014343262
    7. ' (' → logprob: -4.906085014343262
    8. ' ' → logprob: -5.406085014343262
    9. 'a' → logprob: -5.781085014343262
    10. '(' → logprob: -6.031085014343262

Token 204: ' '.'' (ID: 64762)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.26076143980026245
    2. ' '' → logprob: -1.7607614994049072
    3. '"' → logprob: -3.3857614994049072
    4. '0' → logprob: -4.760761260986328
    5. ' "' → logprob: -5.510761260986328
    6. ' ' → logprob: -5.510761260986328
    7. ''.' → logprob: -6.135761260986328
    8. ' '.'' → logprob: -6.385761260986328
    9. '1' → logprob: -7.635761260986328
    10. ' '#'' → logprob: -7.635761260986328

Token 205: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11758627742528915
    2. ',' → logprob: -2.867586374282837
    3. ' ' → logprob: -3.367586374282837
    4. 'or' → logprob: -4.242586135864258
    5. '<|end|>' → logprob: -5.992586135864258
    6. ' ,' → logprob: -6.367586135864258
    7. ')' → logprob: -8.367586135864258
    8. ''' → logprob: -8.867586135864258
    9. ' (' → logprob: -9.242586135864258
    10. '        ' → logprob: -9.242586135864258

Token 206: ' digit' (ID: 19181)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.04655745252966881
    2. ' '#'' → logprob: -4.046557426452637
    3. ''*' → logprob: -4.296557426452637
    4. ''' → logprob: -4.421557426452637
    5. '#' → logprob: -7.296557426452637
    6. ' '*'' → logprob: -7.796557426452637
    7. '"#' → logprob: -8.171557426452637
    8. ''w' → logprob: -8.671557426452637
    9. ''o' → logprob: -9.046557426452637
    10. ''x' → logprob: -9.171557426452637

Token 207: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.003400444984436
    2. ''' → logprob: -1.628400444984436
    3. '[' → logprob: -2.8784003257751465
    4. '<|end|>' → logprob: -3.0034003257751465
    5. '   ' → logprob: -3.1284003257751465
    6. '[]' → logprob: -3.2534003257751465
    7. ')' → logprob: -3.3784003257751465
    8. '.' → logprob: -3.8784003257751465
    9. '       ' → logprob: -4.0034003257751465
    10. ']' → logprob: -4.1284003257751465

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3387547433376312
    2. '0' → logprob: -1.5887547731399536
    3. ''' → logprob: -2.588754653930664
    4. '123' → logprob: -5.213754653930664
    5. '012' → logprob: -6.463754653930664
    6. '9' → logprob: -7.838754653930664
    7. ''s' → logprob: -8.838754653930664
    8. '#' → logprob: -9.338754653930664
    9. ''or' → logprob: -10.088754653930664
    10. '.'' → logprob: -10.338754653930664

Token 209: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020462587475776672
    2. ''-' → logprob: -4.270462512969971
    3. '9' → logprob: -5.895462512969971
    4. '2' → logprob: -6.520462512969971
    5. '-' → logprob: -7.645462512969971
    6. '7' → logprob: -7.895462512969971
    7. '8' → logprob: -8.395462989807129
    8. '0' → logprob: -8.895462989807129
    9. '6' → logprob: -9.020462989807129
    10. ''
' → logprob: -9.020462989807129

Token 210: ' to' (ID: 316)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6710720062255859
    2. '<|end|>' → logprob: -1.046072006225586
    3. ',' → logprob: -3.546072006225586
    4. '.' → logprob: -3.796072006225586
    5. '   ' → logprob: -4.171072006225586
    6. ')' → logprob: -4.296072006225586
    7. ' ' → logprob: -4.421072006225586
    8. '       ' → logprob: -4.671072006225586
    9. '0' → logprob: -4.671072006225586
    10. 'or' → logprob: -5.421072006225586

Token 211: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.024792084470391273
    2. '9' → logprob: -3.774792194366455
    3. '8' → logprob: -7.024792194366455
    4. ' '' → logprob: -7.899792194366455
    5. '6' → logprob: -8.774791717529297
    6. ' ' → logprob: -10.149791717529297
    7. '4' → logprob: -10.399791717529297
    8. '7' → logprob: -11.024791717529297
    9. '5' → logprob: -11.274791717529297
    10. '"' → logprob: -11.649791717529297

Token 212: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.021875295788049698
    2. '8' → logprob: -4.021875381469727
    3. '6' → logprob: -6.771875381469727
    4. '4' → logprob: -6.896875381469727
    5. '5' → logprob: -6.896875381469727
    6. '7' → logprob: -7.896875381469727
    7. '3' → logprob: -9.146875381469727
    8. ''' → logprob: -10.646875381469727
    9. '2' → logprob: -10.771875381469727
    10. '1' → logprob: -11.521875381469727

Token 213: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0031825865153223276
    2. ''
' → logprob: -6.253182411193848
    3. ')'' → logprob: -7.503182411193848
    4. '')' → logprob: -8.753182411193848
    5. ' '' → logprob: -8.753182411193848
    6. ')' → logprob: -8.878182411193848
    7. ''.' → logprob: -9.378182411193848
    8. '.'' → logprob: -10.253182411193848
    9. '       ' → logprob: -10.378182411193848
    10. '.' → logprob: -11.128182411193848

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14375704526901245
    2. '
' → logprob: -2.8937571048736572
    3. '        
' → logprob: -3.5187571048736572
    4. '   ' → logprob: -4.268756866455078
    5. ' 
' → logprob: -4.893756866455078
    6. '    
' → logprob: -5.268756866455078
    7. ',' → logprob: -5.893756866455078
    8. ' ' → logprob: -6.018756866455078
    9. ' or' → logprob: -6.018756866455078
    10. '  
' → logprob: -6.268756866455078

Token 215: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6034011840820312
    2. 'visited' → logprob: -1.4784011840820312
    3. '   ' → logprob: -2.9784011840820312
    4. '
' → logprob: -3.1034011840820312
    5. ' visited' → logprob: -3.3534011840820312
    6. 'def' → logprob: -3.3534011840820312
    7. '<|end|>' → logprob: -3.4784011840820312
    8. ' 
' → logprob: -5.103401184082031
    9. '        
' → logprob: -5.728401184082031
    10. 'for' → logprob: -6.478401184082031

Token 216: ' Pieces' (ID: 118132)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3382686674594879
    2. ' visited' → logprob: -2.088268756866455
    3. 'def' → logprob: -2.838268756866455
    4. 'v' → logprob: -4.213268756866455
    5. 'vis' → logprob: -4.838268756866455
    6. ' def' → logprob: -5.088268756866455
    7. 'neighbors' → logprob: -5.088268756866455
    8. ' 
' → logprob: -5.213268756866455
    9. 'from' → logprob: -5.463268756866455
    10. 'counts' → logprob: -5.463268756866455

Token 217: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3796376585960388
    2. '=' → logprob: -1.8796377182006836
    3. '_positions' → logprob: -2.6296377182006836
    4. '_' → logprob: -2.7546377182006836
    5. ':' → logprob: -4.879637718200684
    6. '_sizes' → logprob: -5.129637718200684
    7. '=[]' → logprob: -6.254637718200684
    8. ',' → logprob: -6.379637718200684
    9. 's' → logprob: -6.629637718200684
    10. '_p' → logprob: -6.879637718200684

Token 218: ' groups' (ID: 8896)
  Prédit: ' clusters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clusters' → logprob: -1.8004438877105713
    2. ' identified' → logprob: -2.0504438877105713
    3. ' []' → logprob: -2.4254438877105713
    4. ' defined' → logprob: -2.4254438877105713
    5. ' composed' → logprob: -2.6754438877105713
    6. ' pieces' → logprob: -2.9254438877105713
    7. ' contiguous' → logprob: -3.0504438877105713
    8. ' labeled' → logprob: -3.4254438877105713
    9. ' connected' → logprob: -3.8004438877105713
    10. ' formed' → logprob: -3.8004438877105713

Token 219: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' connected' (ID: 12079)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.148797631263733
    2. 'connected' → logprob: -1.398797631263733
    3. 'cells' → logprob: -1.523797631263733
    4. ' connected' → logprob: -2.0237975120544434
    5. 'adj' → logprob: -3.1487975120544434
    6. ' adjacent' → logprob: -3.8987975120544434
    7. 'digits' → logprob: -4.023797512054443
    8. ' digits' → logprob: -6.148797512054443
    9. 'digit' → logprob: -6.648797512054443
    10. ' contiguous' → logprob: -7.398797512054443

Token 221: ' blocks' (ID: 18125)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.33839818835258484
    2. ' cells' → logprob: -1.3383982181549072
    3. ''.' → logprob: -4.713397979736328
    4. ' '#'' → logprob: -5.463397979736328
    5. ' '.'' → logprob: -6.088397979736328
    6. '.' → logprob: -6.338397979736328
    7. '_cells' → logprob: -6.463397979736328
    8. 'components' → logprob: -6.588397979736328
    9. ''#' → logprob: -6.588397979736328
    10. ''' → logprob: -6.713397979736328

Token 222: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3767837584018707
    2. ' the' → logprob: -1.3767837285995483
    3. 'same' → logprob: -3.126783847808838
    4. 'digits' → logprob: -4.876783847808838
    5. ' same' → logprob: -5.251783847808838
    6. ' digits' → logprob: -6.751783847808838
    7. 'equal' → logprob: -6.876783847808838
    8. ' equal' → logprob: -7.376783847808838
    9. 'numbers' → logprob: -7.626783847808838
    10. ' identical' → logprob: -8.37678337097168

Token 224: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.1298392415046692
    2. ' digit' → logprob: -2.2548391819000244
    3. 'value' → logprob: -5.1298394203186035
    4. 'number' → logprob: -5.6298394203186035
    5. ' value' → logprob: -6.3798394203186035
    6. '_digit' → logprob: -6.3798394203186035
    7. 'digits' → logprob: -6.6298394203186035
    8. ' number' → logprob: -7.0048394203186035
    9. '-digit' → logprob: -7.3798394203186035
    10. ' digits' → logprob: -7.6298394203186035

Token 225: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.163736492395401
    2. '
' → logprob: -2.788736581802368
    3. 'visited' → logprob: -2.913736581802368
    4. ' visited' → logprob: -5.163736343383789
    5. '   ' → logprob: -5.288736343383789
    6. '<|end|>' → logprob: -5.538736343383789
    7. 'def' → logprob: -5.538736343383789
    8. 'from' → logprob: -5.663736343383789
    9. '        
' → logprob: -5.663736343383789
    10. ',' → logprob: -5.788736343383789

Token 226: ' touching' (ID: 52058)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -1.2533754110336304
    2. 'same' → logprob: -1.7533754110336304
    3. 'size' → logprob: -2.12837553024292
    4. ' same' → logprob: -2.25337553024292
    5. ' at' → logprob: -3.75337553024292
    6. ' not' → logprob: -3.75337553024292
    7. 'visited' → logprob: -4.00337553024292
    8. ' the' → logprob: -4.12837553024292
    9. 'adj' → logprob: -4.12837553024292
    10. 'value' → logprob: -4.12837553024292

Token 227: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9229901432991028
    2. ' from' → logprob: -1.672990083694458
    3. 'from' → logprob: -2.172990083694458
    4. 'def' → logprob: -2.172990083694458
    5. '   ' → logprob: -2.797990083694458
    6. ',' → logprob: -3.547990083694458
    7. 'visited' → logprob: -4.047990322113037
    8. 'import' → logprob: -4.297990322113037
    9. ' (' → logprob: -4.547990322113037
    10. ' visited' → logprob: -4.672990322113037

Token 228: ' sides' (ID: 18089)
  Prédit: ' sides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.5761923789978027
    2. 'up' → logprob: -2.3261923789978027
    3. 'side' → logprob: -2.3261923789978027
    4. 's' → logprob: -2.7011923789978027
    5. ' up' → logprob: -2.7011923789978027
    6. ' side' → logprob: -3.4511923789978027
    7. 'adj' → logprob: -3.5761923789978027
    8. 'edges' → logprob: -4.451192378997803
    9. ' edges' → logprob: -4.576192378997803
    10. '4' → logprob: -5.076192378997803

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2567460536956787
    2. '
' → logprob: -2.2567460536956787
    3. '<|end|>' → logprob: -2.6317460536956787
    4. '        
' → logprob: -3.7567460536956787
    5. 'visited' → logprob: -5.006746292114258
    6. ',' → logprob: -5.131746292114258
    7. 'def' → logprob: -5.881746292114258
    8. ' visited' → logprob: -6.006746292114258
    9. ',
' → logprob: -6.506746292114258
    10. '<|end|>' → logprob: -6.881746292114258

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05485723912715912
    2. '        
' → logprob: -3.6798572540283203
    3. ' 
' → logprob: -4.92985725402832
    4. '<|end|>' → logprob: -5.17985725402832
    5. ' ' → logprob: -5.42985725402832
    6. '   ' → logprob: -5.92985725402832
    7. '  
' → logprob: -6.55485725402832
    8. '
' → logprob: -6.92985725402832
    9. '    
' → logprob: -7.05485725402832
    10. '\n' → logprob: -7.30485725402832

Token 231: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04562527313828468
    2. '        
' → logprob: -4.04562520980835
    3. ' 
' → logprob: -4.42062520980835
    4. '
' → logprob: -5.29562520980835
    5. '<|end|>' → logprob: -5.79562520980835
    6. '  
' → logprob: -6.67062520980835
    7. '   ' → logprob: -6.79562520980835
    8. ' ' → logprob: -7.29562520980835
    9. '    
' → logprob: -7.42062520980835
    10. 'def' → logprob: -7.54562520980835

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164687134325504
    2. '=' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.264164924621582
    4. '[' → logprob: -15.514164924621582
    5. '=set' → logprob: -16.139163970947266
    6. ' =[' → logprob: -16.514163970947266
    7. ',' → logprob: -16.764163970947266
    8. '=[[' → logprob: -16.889163970947266
    9. ' ' → logprob: -17.264163970947266
    10. ')' → logprob: -18.014163970947266

Token 233: ' [[' (ID: 9237)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.5435661673545837
    2. 'set' → logprob: -1.0435662269592285
    3. ' [[' → logprob: -3.1685662269592285
    4. '[[' → logprob: -4.1685662269592285
    5. ' [' → logprob: -5.0435662269592285
    6. '[' → logprob: -5.7935662269592285
    7. '=set' → logprob: -10.79356575012207
    8. ' ' → logprob: -11.04356575012207
    9. '[
' → logprob: -11.29356575012207
    10. '   ' → logprob: -11.54356575012207

Token 234: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. '(False' → logprob: -19.87502098083496
    4. '   ' → logprob: -21.37502098083496
    5. '0' → logprob: -22.00002098083496
    6. '=False' → logprob: -22.62502098083496
    7. '.False' → logprob: -25.50002098083496
    8. 'false' → logprob: -26.00002098083496
    9. 'F' → logprob: -26.12502098083496
    10. 'True' → logprob: -27.00002098083496

Token 235: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012697174213826656
    2. 'for' → logprob: -5.012697219848633
    3. ']' → logprob: -5.387697219848633
    4. ']*' → logprob: -6.762697219848633
    5. '   ' → logprob: -8.762697219848633
    6. '	for' → logprob: -10.387697219848633
    7. ' ' → logprob: -10.637697219848633
    8. ' ]' → logprob: -11.512697219848633
    9. ']*(' → logprob: -12.637697219848633
    10. '           ' → logprob: -13.012697219848633

Token 236: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003418991982471198
    2. ' w' → logprob: -8.00034236907959
    3. '   ' → logprob: -12.62534236907959
    4. '(w' → logprob: -12.75034236907959
    5. '	w' → logprob: -16.250341415405273
    6. '       ' → logprob: -16.250341415405273
    7. ' ' → logprob: -17.000341415405273
    8. '    ' → logprob: -17.375341415405273
    9. '           ' → logprob: -17.625341415405273
    10. '(' → logprob: -18.250341415405273

Token 237: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01428126823157072
    2. 'for' → logprob: -4.264281272888184
    3. ']' → logprob: -9.639281272888184
    4. ')' → logprob: -10.014281272888184
    5. ' ' → logprob: -12.889281272888184
    6. ' ]' → logprob: -13.264281272888184
    7. '   ' → logprob: -13.639281272888184
    8. '	for' → logprob: -13.764281272888184
    9. ')]' → logprob: -14.264281272888184
    10. ' )' → logprob: -15.514281272888184

Token 238: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24769088625907898
    2. ' range' → logprob: -1.7476909160614014
    3. ' _' → logprob: -3.2476909160614014
    4. '_range' → logprob: -5.247690677642822
    5. 'range' → logprob: -6.872690677642822
    6. ' in' → logprob: -10.62269115447998
    7. '_w' → logprob: -10.87269115447998
    8. ' ' → logprob: -11.49769115447998
    9. '_i' → logprob: -12.74769115447998
    10. '_in' → logprob: -13.24769115447998

Token 239: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3649842441082001
    2. ' in' → logprob: -1.3649842739105225
    3. ' range' → logprob: -3.1149842739105225
    4. 'in' → logprob: -5.114984035491943
    5. ' ' → logprob: -11.239984512329102
    6. '   ' → logprob: -12.614984512329102
    7. '  ' → logprob: -12.739984512329102
    8. '(range' → logprob: -13.364984512329102
    9. '	range' → logprob: -14.864984512329102
    10. '_range' → logprob: -15.364984512329102

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04863755404949188
    2. ' range' → logprob: -3.048637628555298
    3. '   ' → logprob: -10.298637390136719
    4. '(range' → logprob: -12.173637390136719
    5. 'grid' → logprob: -12.548637390136719
    6. ' ' → logprob: -12.673637390136719
    7. '	range' → logprob: -13.923637390136719
    8. '[' → logprob: -13.923637390136719
    9. '  ' → logprob: -14.298637390136719
    10. '    ' → logprob: -14.673637390136719

Token 241: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.009626941755414009
    2. '(h' → logprob: -5.134626865386963
    3. 'range' → logprob: -5.884626865386963
    4. ' h' → logprob: -7.509626865386963
    5. ' range' → logprob: -8.759627342224121
    6. '   ' → logprob: -9.009627342224121
    7. 'w' → logprob: -11.009627342224121
    8. ' (' → logprob: -11.134627342224121
    9. '       ' → logprob: -11.634627342224121
    10. ')' → logprob: -11.759627342224121

Token 242: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.941161776310764e-05
    2. ']' → logprob: -10.875039100646973
    3. ')]
' → logprob: -11.500039100646973
    4. ')' → logprob: -12.375039100646973
    5. ' )' → logprob: -12.375039100646973
    6. ' ]' → logprob: -14.125039100646973
    7. '   ' → logprob: -15.000039100646973
    8. '       ' → logprob: -16.12504005432129
    9. ')]

' → logprob: -16.12504005432129
    10. ')],' → logprob: -16.50004005432129

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044276151806116104
    2. '        
' → logprob: -4.294276237487793
    3. '   ' → logprob: -4.544276237487793
    4. '<|end|>' → logprob: -4.544276237487793
    5. 'def' → logprob: -5.919276237487793
    6. '    
' → logprob: -6.169276237487793
    7. ' 
' → logprob: -7.169276237487793
    8. '
' → logprob: -7.419276237487793
    9. ' for' → logprob: -7.544276237487793
    10. '  
' → logprob: -8.419276237487793

Token 244: ' pieces' (ID: 12762)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30606842041015625
    2. 'def' → logprob: -1.6810684204101562
    3. '   ' → logprob: -2.9310684204101562
    4. ' for' → logprob: -4.556068420410156
    5. 'for' → logprob: -4.681068420410156
    6. ' def' → logprob: -6.306068420410156
    7. '    ' → logprob: -7.181068420410156
    8. '        ' → logprob: -8.431068420410156
    9. ')' → logprob: -8.556068420410156
    10. '        
' → logprob: -8.556068420410156

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002776175737381
    2. '=' → logprob: -2.3502776622772217
    3. '=[]' → logprob: -9.7252779006958
    4. ',' → logprob: -12.7252779006958
    5. 's' → logprob: -13.6002779006958
    6. '   ' → logprob: -13.7252779006958
    7. ' ' → logprob: -14.1002779006958
    8. ')' → logprob: -14.2252779006958
    9. ' =
' → logprob: -14.2252779006958
    10. '=[]
' → logprob: -14.4752779006958

Token 246: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006573142483830452
    2. '{}' → logprob: -5.25657320022583
    3. ' []' → logprob: -6.63157320022583
    4. '[]
' → logprob: -11.131572723388672
    5. '[]}' → logprob: -13.006572723388672
    6. '0' → logprob: -14.006572723388672
    7. ' {}' → logprob: -14.256572723388672
    8. '[' → logprob: -14.256572723388672
    9. '[]

' → logprob: -15.131572723388672
    10. '   ' → logprob: -15.381572723388672

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11581214517354965
    2. '        
' → logprob: -3.740812063217163
    3. '<|end|>' → logprob: -3.740812063217163
    4. '   ' → logprob: -3.990812063217163
    5. ' for' → logprob: -4.115812301635742
    6. ' 
' → logprob: -5.240812301635742
    7. 'def' → logprob: -5.240812301635742
    8. '    
' → logprob: -5.865812301635742
    9. '  
' → logprob: -6.115812301635742
    10. ' ' → logprob: -6.115812301635742

Token 248: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49337777495384216
    2. 'def' → logprob: -1.8683778047561646
    3. '   ' → logprob: -3.493377685546875
    4. '        
' → logprob: -3.618377685546875
    5. 'from' → logprob: -3.743377685546875
    6. ' for' → logprob: -3.743377685546875
    7. ' def' → logprob: -3.993377685546875
    8. ' from' → logprob: -3.993377685546875
    9. ' ' → logprob: -3.993377685546875
    10. 'import' → logprob: -4.118377685546875

Token 249: ' Each' (ID: 11555)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3455679416656494
    2. 'def' → logprob: -1.3455679416656494
    3. 'import' → logprob: -4.34556770324707
    4. 'for' → logprob: -4.84556770324707
    5. ' from' → logprob: -4.97056770324707
    6. '   ' → logprob: -5.97056770324707
    7. ' for' → logprob: -7.09556770324707
    8. ' def' → logprob: -7.84556770324707
    9. '       ' → logprob: -9.22056770324707
    10. ' import' → logprob: -9.84556770324707

Token 250: ' piece' (ID: 9047)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3449442684650421
    2. ' def' → logprob: -2.8449442386627197
    3. ' piece' → logprob: -3.0949442386627197
    4. 'piece' → logprob: -3.2199442386627197
    5. '   ' → logprob: -3.7199442386627197
    6. ')' → logprob: -3.8449442386627197
    7. '       ' → logprob: -4.344944477081299
    8. '_' → logprob: -4.844944477081299
    9. 'y' → logprob: -4.969944477081299
    10. ' stack' → logprob: -5.094944477081299

Token 251: ':' (ID: 25)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1436868906021118
    2. '=' → logprob: -2.0186867713928223
    3. 'is' → logprob: -2.0186867713928223
    4. '_' → logprob: -2.0186867713928223
    5. '[' → logprob: -3.2686867713928223
    6. 'def' → logprob: -3.2686867713928223
    7. ',' → logprob: -3.2686867713928223
    8. '<|end|>' → logprob: -3.6436867713928223
    9. '=[]' → logprob: -4.018686771392822
    10. ':' → logprob: -4.018686771392822

Token 252: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.43166583776474
    2. ' []' → logprob: -1.1816658973693848
    3. 'def' → logprob: -4.056665897369385
    4. ' (' → logprob: -5.556665897369385
    5. '[]
' → logprob: -5.681665897369385
    6. '[' → logprob: -5.806665897369385
    7. ' [' → logprob: -6.431665897369385
    8. '[(' → logprob: -6.431665897369385
    9. '[
' → logprob: -6.556665897369385
    10. 'tokens' → logprob: -6.931665897369385

Token 253: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2556568682193756
    2. 'of' → logprob: -2.1306569576263428
    3. '<|end|>' → logprob: -2.6306569576263428
    4. '(' → logprob: -4.255656719207764
    5. ')' → logprob: -4.880656719207764
    6. '[' → logprob: -5.255656719207764
    7. ',' → logprob: -6.630656719207764
    8. ' (' → logprob: -6.755656719207764
    9. '[(' → logprob: -7.255656719207764
    10. '<|end|>' → logprob: -7.255656719207764

Token 254: ' coordinates' (ID: 27933)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.25224536657333374
    2. ' (' → logprob: -1.7522454261779785
    3. '(' → logprob: -3.1272454261779785
    4. ' tuples' → logprob: -6.5022454261779785
    5. 'cells' → logprob: -6.5022454261779785
    6. 'coordinates' → logprob: -6.8772454261779785
    7. ' coordinates' → logprob: -7.8772454261779785
    8. '(y' → logprob: -8.25224494934082
    9. '[(' → logprob: -8.37724494934082
    10. ' cells' → logprob: -8.50224494934082

Token 255: ' [(' (ID: 43900)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2246949672698975
    2. '<|end|>' → logprob: -1.4746949672698975
    3. ' (' → logprob: -1.8496949672698975
    4. ',' → logprob: -2.2246949672698975
    5. ' =' → logprob: -2.7246949672698975
    6. ')' → logprob: -3.5996949672698975
    7. ' of' → logprob: -4.224695205688477
    8. ' [(' → logprob: -4.349695205688477
    9. '[' → logprob: -4.474695205688477
    10. '[(' → logprob: -4.849695205688477

Token 256: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0075714848935604095
    2. '0' → logprob: -5.382571697235107
    3. ')' → logprob: -6.757571697235107
    4. 'y' → logprob: -7.882571697235107
    5. ' x' → logprob: -7.882571697235107
    6. '),' → logprob: -8.25757122039795
    7. ')]' → logprob: -8.38257122039795
    8. ')x' → logprob: -8.50757122039795
    9. '(x' → logprob: -8.88257122039795
    10. ',' → logprob: -9.75757122039795

Token 257: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004205663222819567
    2. ',y' → logprob: -5.879205703735352
    3. ',x' → logprob: -7.629205703735352
    4. '<|end|>' → logprob: -8.004205703735352
    5. ' ,' → logprob: -8.879205703735352
    6. ',p' → logprob: -9.504205703735352
    7. ',n' → logprob: -9.629205703735352
    8. ',i' → logprob: -9.754205703735352
    9. ',
' → logprob: -10.879205703735352
    10. ',int' → logprob: -10.879205703735352

Token 258: ')]
' (ID: 11587)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.43207815289497375
    2. ')]' → logprob: -1.0570781230926514
    3. ')' → logprob: -6.1820783615112305
    4. '),(' → logprob: -7.6820783615112305
    5. ')],' → logprob: -8.05707836151123
    6. ',' → logprob: -8.55707836151123
    7. '],' → logprob: -9.05707836151123
    8. '),
' → logprob: -9.55707836151123
    9. ' ),' → logprob: -9.80707836151123
    10. ')...' → logprob: -10.80707836151123

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19975100457668304
    2. '   ' → logprob: -2.4497509002685547
    3. '<|end|>' → logprob: -3.0747509002685547
    4. 'def' → logprob: -4.324750900268555
    5. ' for' → logprob: -4.574750900268555
    6. ',' → logprob: -4.574750900268555
    7. 'for' → logprob: -6.199750900268555
    8. '        
' → logprob: -6.324750900268555
    9. 'from' → logprob: -6.449750900268555
    10. ')' → logprob: -6.574750900268555

Token 260: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31801435351371765
    2. 'from' → logprob: -2.19301438331604
    3. 'def' (adapté à ' def') → logprob: -2.31801438331604
    4. '   ' → logprob: -3.69301438331604
    5. ' from' → logprob: -4.068014144897461
    6. 'import' → logprob: -4.693014144897461
    7. ' for' → logprob: -5.568014144897461
    8. 'for' → logprob: -6.068014144897461
    9. '        
' → logprob: -6.443014144897461
    10. ' def' → logprob: -6.693014144897461

Token 261: ' neighbors' (ID: 31655)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0006506018689833581
    2. 'dfs' → logprob: -7.500650405883789
    3. ' bfs' → logprob: -9.625650405883789
    4. ' find' → logprob: -11.250650405883789
    5. ' ' → logprob: -11.750650405883789
    6. ' explore' → logprob: -12.375650405883789
    7. ' DFS' → logprob: -12.625650405883789
    8. ' flood' → logprob: -13.500650405883789
    9. ' visit' → logprob: -14.750650405883789
    10. ' d' → logprob: -15.375650405883789

Token 262: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08446662127971649
    2. '(x' → logprob: -2.5844666957855225
    3. '((' → logprob: -5.584466457366943
    4. '(cell' → logprob: -7.459466457366943
    5. '(i' → logprob: -8.334466934204102
    6. ' (' → logprob: -8.334466934204102
    7. '(row' → logprob: -8.959466934204102
    8. '(pos' → logprob: -9.084466934204102
    9. '(node' → logprob: -9.459466934204102
    10. ':' → logprob: -9.959466934204102

Token 263: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012091163545846939
    2. '):' → logprob: -4.762091159820557
    3. ',y' → logprob: -6.012091159820557
    4. '):
' → logprob: -7.387091159820557
    5. ' ,' → logprob: -9.137091636657715
    6. ',x' → logprob: -9.637091636657715
    7. ',i' → logprob: -10.012091636657715
    8. ',
' → logprob: -10.137091636657715
    9. ')' → logprob: -10.262091636657715
    10. '   ' → logprob: -10.512091636657715

Token 264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014182780869305134
    2. '):
' → logprob: -4.2641825675964355
    3. ' ):' → logprob: -11.514183044433594
    4. ')' → logprob: -12.264183044433594
    5. '   ' → logprob: -13.139183044433594
    6. '):
' → logprob: -13.514183044433594
    7. ':' → logprob: -14.889183044433594
    8. '):

' → logprob: -15.139183044433594
    9. '       ' → logprob: -16.014183044433594
    10. ',' → logprob: -16.139183044433594

Token 265: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6317481994628906
    2. '   ' → logprob: -0.8817481994628906
    3. '[' → logprob: -4.006748199462891
    4. ':
' → logprob: -4.756748199462891
    5. '       ' → logprob: -4.756748199462891
    6. '):' → logprob: -5.506748199462891
    7. '[]' → logprob: -5.756748199462891
    8. ',' → logprob: -6.131748199462891
    9. '[
' → logprob: -6.381748199462891
    10. '{' → logprob: -6.756748199462891

Token 266: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7640361785888672
    2. 'return' → logprob: -1.2640361785888672
    3. '           ' → logprob: -2.389036178588867
    4. '
' → logprob: -2.764036178588867
    5. '       ' → logprob: -3.264036178588867
    6. ' return' → logprob: -3.389036178588867
    7. ' for' → logprob: -4.514036178588867
    8. 'for' (adapté à ' for') → logprob: -4.764036178588867
    9. 'yield' → logprob: -6.639036178588867
    10. '               ' → logprob: -6.764036178588867

Token 267: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.26804181933403015
    2. 'dx' → logprob: -1.5180418491363525
    3. ' nx' → logprob: -5.143041610717773
    4. 'nx' → logprob: -5.893041610717773
    5. ' ' → logprob: -6.268041610717773
    6. '   ' → logprob: -6.268041610717773
    7. ' (' → logprob: -6.518041610717773
    8. '_dx' → logprob: -7.268041610717773
    9. '(nx' → logprob: -7.768041610717773
    10. ' x' → logprob: -8.518041610717773

Token 268: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13874471187591553
    2. ',' → logprob: -2.263744831085205
    3. ' ,' → logprob: -4.138744831085205
    4. 'in' → logprob: -4.888744831085205
    5. ',d' → logprob: -7.388744831085205
    6. ',y' → logprob: -7.763744831085205
    7. '   ' → logprob: -7.763744831085205
    8. ',in' → logprob: -8.888744354248047
    9. '    ' → logprob: -9.263744354248047
    10. ' ' → logprob: -9.388744354248047

Token 269: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.01529139094054699
    2. ' dy' → logprob: -4.265291213989258
    3. '0' → logprob: -7.390291213989258
    4. '[' → logprob: -7.765291213989258
    5. ' ' → logprob: -10.390291213989258
    6. '(' → logprob: -10.890291213989258
    7. ' (' → logprob: -11.140291213989258
    8. '[-' → logprob: -11.765291213989258
    9. ' [' → logprob: -12.015291213989258
    10. '   ' → logprob: -12.515291213989258

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026745392009615898
    2. 'in' → logprob: -3.651745319366455
    3. '   ' → logprob: -9.026745796203613
    4. ',' → logprob: -9.026745796203613
    5. '	in' → logprob: -9.901745796203613
    6. '    ' → logprob: -10.026745796203613
    7. ' ' → logprob: -10.151745796203613
    8. ')' → logprob: -10.401745796203613
    9. ' ,' → logprob: -10.776745796203613
    10. '  ' → logprob: -12.276745796203613

Token 271: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.07419061660766602
    2. '[' → logprob: -2.824190616607666
    3. ' [(' → logprob: -4.574190616607666
    4. ' [' → logprob: -6.449190616607666
    5. '((' → logprob: -8.699190139770508
    6. '[((' → logprob: -10.074190139770508
    7. ' ((' → logprob: -10.449190139770508
    8. '(' → logprob: -12.449190139770508
    9. '[-' → logprob: -12.574190139770508
    10. ' ' → logprob: -12.824190139770508

Token 272: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2542368471622467
    2. '1' → logprob: -1.5042368173599243
    3. '-' → logprob: -6.504236698150635
    4. ' ' → logprob: -7.129236698150635
    5. '   ' → logprob: -12.754237174987793
    6. ' -' → logprob: -13.129237174987793
    7. '(' → logprob: -14.629237174987793
    8. '
' → logprob: -14.879237174987793
    9. ')' → logprob: -15.629237174987793
    10. '    ' → logprob: -15.879237174987793

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028290803311392665
    2. ' ,' → logprob: -8.375283241271973
    3. '0' → logprob: -9.875283241271973
    4. ',
' → logprob: -14.625283241271973
    5. '),(' → logprob: -16.375282287597656
    6. ' ' → logprob: -16.375282287597656
    7. '<|end|>' → logprob: -17.125282287597656
    8. '),' → logprob: -17.375282287597656
    9. ',),' → logprob: -17.375282287597656
    10. '‌,' → logprob: -18.500282287597656

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.50000762939453
    4. '۰' → logprob: -18.68750762939453
    5. ',' → logprob: -19.43750762939453
    6. '-' → logprob: -19.87500762939453
    7. '00' → logprob: -20.62500762939453
    8. ')' → logprob: -20.75000762939453
    9. '﻿' → logprob: -20.81250762939453
    10. '  ' → logprob: -20.93750762939453

Token 275: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.38707593083381653
    2. '),' → logprob: -1.1370759010314941
    3. '),
' → logprob: -9.137076377868652
    4. ' ),' → logprob: -9.512076377868652
    5. ')' → logprob: -11.012076377868652
    6. ',' → logprob: -12.887076377868652
    7. ',),' → logprob: -13.512076377868652
    8. '   ' → logprob: -14.512076377868652
    9. '),

' → logprob: -14.887076377868652
    10. '           ' → logprob: -15.262076377868652

Token 276: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7060579061508179
    2. '0' → logprob: -0.7060579061508179
    3. '(-' → logprob: -5.081058025360107
    4. '(' → logprob: -5.331058025360107
    5. ' ' → logprob: -6.831058025360107
    6. ' -' → logprob: -7.331058025360107
    7. ' (' → logprob: -11.70605754852295
    8. ' (-' → logprob: -11.70605754852295
    9. '   ' → logprob: -11.83105754852295
    10. ',' → logprob: -12.33105754852295

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '0' → logprob: -17.0
    4. '
' → logprob: -17.375
    5. '

' → logprob: -17.875
    6. '   ' → logprob: -18.125
    7. '```' → logprob: -19.0625
    8. ',' → logprob: -20.6875
    9. '۱' → logprob: -20.8125
    10. '<|end|>' → logprob: -21.0625

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001643165247514844
    2. '0' → logprob: -6.501643180847168
    3. ' ,' → logprob: -8.876643180847168
    4. ',
' → logprob: -15.501643180847168
    5. '<|end|>' → logprob: -15.501643180847168
    6. ' ' → logprob: -15.689143180847168
    7. ')' → logprob: -16.00164222717285
    8. '),' → logprob: -16.25164222717285
    9. '```' → logprob: -16.37664222717285
    10. '
' → logprob: -17.37664222717285

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '
' → logprob: -17.25002098083496
    4. ',' → logprob: -17.75002098083496
    5. '<|end|>' → logprob: -18.12502098083496
    6. '   ' → logprob: -18.37502098083496
    7. ')' → logprob: -18.62502098083496
    8. '1' → logprob: -19.00002098083496
    9. '```' → logprob: -19.43752098083496
    10. '۰' → logprob: -19.62502098083496

Token 280: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.004102623555809259
    2. '),' → logprob: -5.62910270690918
    3. ',' → logprob: -7.87910270690918
    4. ',(' → logprob: -9.37910270690918
    5. '),
' → logprob: -11.50410270690918
    6. ')]' → logprob: -11.75410270690918
    7. ' ),' → logprob: -11.75410270690918
    8. ')' → logprob: -12.50410270690918
    9. '],[' → logprob: -12.75410270690918
    10. '(' → logprob: -12.87910270690918

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.000041007995605
    4. '
' → logprob: -15.875041007995605
    5. ',' → logprob: -16.25004005432129
    6. '1' → logprob: -16.62504005432129
    7. '```' → logprob: -17.00004005432129
    8. '    ' → logprob: -17.62504005432129
    9. '  ' → logprob: -17.75004005432129
    10. '       ' → logprob: -18.81254005432129

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005082341376692057
    2. '1' → logprob: -7.6255083084106445
    3. ',-' → logprob: -11.250508308410645
    4. ' ,' → logprob: -12.375508308410645
    5. ',
' → logprob: -12.875508308410645
    6. '-' → logprob: -16.000507354736328
    7. '   ' → logprob: -16.125507354736328
    8. '
' → logprob: -16.750507354736328
    9. ' ' → logprob: -17.250507354736328
    10. '```' → logprob: -17.375507354736328

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.404745439183898e-05
    2. '-' → logprob: -10.37503433227539
    3. ' ' → logprob: -13.00003433227539
    4. '
' → logprob: -15.12503433227539
    5. '   ' → logprob: -15.62503433227539
    6. ' -' → logprob: -16.87503433227539
    7. ')' → logprob: -17.25003433227539
    8. '```' → logprob: -18.12503433227539
    9. '

' → logprob: -18.37503433227539
    10. '+' → logprob: -18.68753433227539

Token 284: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.4379381239414215
    2. '),(' → logprob: -1.0629380941390991
    3. ')]' → logprob: -5.062938213348389
    4. ')' → logprob: -6.562938213348389
    5. '),
' → logprob: -7.062938213348389
    6. '):' → logprob: -7.687938213348389
    7. ' ),' → logprob: -10.43793773651123
    8. '],' → logprob: -10.43793773651123
    9. '),

' → logprob: -10.93793773651123
    10. ')],' → logprob: -11.43793773651123

Token 285: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023631771910004318
    2. '0' → logprob: -8.375236511230469
    3. ' -' → logprob: -12.125236511230469
    4. ')' → logprob: -15.750236511230469
    5. ' ' → logprob: -16.87523651123047
    6. '<|end|>' → logprob: -17.25023651123047
    7. '   ' → logprob: -17.62523651123047
    8. '−' → logprob: -17.62523651123047
    9. '1' → logprob: -17.75023651123047
    10. '```' → logprob: -17.87523651123047

Token 286: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.017764845862984657
    2. ',' → logprob: -4.517765045166016
    3. '-' → logprob: -5.017765045166016
    4. ')]' → logprob: -9.892765045166016
    5. '1' → logprob: -11.017765045166016
    6. ',-
' → logprob: -13.517765045166016
    7. ')' → logprob: -13.892765045166016
    8. ',
' → logprob: -14.142765045166016
    9. ')])' → logprob: -14.142765045166016
    10. ',-

' → logprob: -14.142765045166016

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ')]' → logprob: -12.250007629394531
    3. ' ' → logprob: -13.500007629394531
    4. ')' → logprob: -14.250007629394531
    5. '   ' → logprob: -15.500007629394531
    6. ')]
' → logprob: -15.625007629394531
    7. '0' → logprob: -15.750007629394531
    8. '
' → logprob: -15.875007629394531
    9. '```' → logprob: -16.00000762939453
    10. ')])' → logprob: -16.87500762939453

Token 288: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.33036449551582336
    2. ')' → logprob: -1.330364465713501
    3. '):' → logprob: -4.33036470413208
    4. '):
' → logprob: -5.70536470413208
    5. '       ' → logprob: -8.955364227294922
    6. '           ' → logprob: -9.455364227294922
    7. ' )' → logprob: -10.080364227294922
    8. '   ' → logprob: -10.205364227294922
    9. ']):' → logprob: -10.455364227294922
    10. ']):
' → logprob: -10.580364227294922

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0900757685303688
    2. ':
' → logprob: -3.340075731277466
    3. '           ' → logprob: -4.090075969696045
    4. '):' → logprob: -4.340075969696045
    5. '       ' → logprob: -4.465075969696045
    6. '               ' → logprob: -5.715075969696045
    7. '):
' → logprob: -6.215075969696045
    8. '<|end|>' → logprob: -6.215075969696045
    9. ',' → logprob: -6.715075969696045
    10. ')' → logprob: -8.840075492858887

Token 290: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32556071877479553
    2. '               ' → logprob: -1.3255606889724731
    3. '<|end|>' → logprob: -5.075560569763184
    4. ',' → logprob: -6.825560569763184
    5. '            
' → logprob: -6.825560569763184
    6. 'yield' → logprob: -7.325560569763184
    7. ' yield' → logprob: -7.450560569763184
    8. '       ' → logprob: -7.825560569763184
    9. '	       ' → logprob: -8.200560569763184
    10. '	yield' → logprob: -8.325560569763184

Token 291: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.06279479712247849
    2. 'nx' (adapté à ' nx') → logprob: -2.8127946853637695
    3. ' new' → logprob: -7.8127946853637695
    4. '(nx' → logprob: -8.93779468536377
    5. '               ' → logprob: -9.56279468536377
    6. ' x' → logprob: -9.68779468536377
    7. 'x' → logprob: -10.18779468536377
    8. '                   ' → logprob: -10.43779468536377
    9. '                ' → logprob: -10.43779468536377
    10. 'new' → logprob: -10.93779468536377

Token 292: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10241097211837769
    2. ' =' → logprob: -2.3524110317230225
    3. '=x' → logprob: -6.352410793304443
    4. ',' → logprob: -7.727410793304443
    5. '=n' → logprob: -11.852411270141602
    6. '=
' → logprob: -12.477411270141602
    7. ',x' → logprob: -12.602411270141602
    8. 'x' → logprob: -13.227411270141602
    9. ' =
' → logprob: -13.977411270141602
    10. ' ,' → logprob: -14.977411270141602

Token 293: ' ny' (ID: 4423)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016173604875802994
    2. 'y' → logprob: -4.141173839569092
    3. ' x' → logprob: -9.516173362731934
    4. ' y' → logprob: -9.766173362731934
    5. '=' → logprob: -12.266173362731934
    6. '<|end|>' → logprob: -13.516173362731934
    7. '0' → logprob: -14.141173362731934
    8. ' =' → logprob: -14.641173362731934
    9. '   ' → logprob: -15.016173362731934
    10. ' ' → logprob: -15.016173362731934

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023305457085371017
    2. ' =' → logprob: -3.7733054161071777
    3. '=x' → logprob: -9.773305892944336
    4. '=y' → logprob: -12.898305892944336
    5. '=
' → logprob: -15.523305892944336
    6. ')' → logprob: -16.148305892944336
    7. '=n' → logprob: -16.773305892944336
    8. ' ' → logprob: -16.898305892944336
    9. ')=' → logprob: -17.398305892944336
    10. '=

' → logprob: -17.773305892944336

Token 295: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31326231360435486
    2. ' x' → logprob: -1.3132623434066772
    3. '(x' → logprob: -15.188261985778809
    4. ' ' → logprob: -15.438261985778809
    5. '	x' → logprob: -16.438262939453125
    6. '   ' → logprob: -16.813262939453125
    7. ' 
' → logprob: -18.438262939453125
    8. '    ' → logprob: -18.813262939453125
    9. ')x' → logprob: -19.313262939453125
    10. '"x' → logprob: -19.438262939453125

Token 296: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10085630416870117
    2. ' +' → logprob: -2.350856304168701
    3. '+y' → logprob: -7.725856304168701
    4. '+x' → logprob: -8.60085678100586
    5. '+d' → logprob: -10.97585678100586
    6. '+
' → logprob: -13.35085678100586
    7. ',' → logprob: -13.35085678100586
    8. ',y' → logprob: -13.85085678100586
    9. '<|end|>' → logprob: -14.22585678100586
    10. ' ' → logprob: -14.72585678100586

Token 297: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -6.630610641877865e-06
    2. ' dx' → logprob: -12.000006675720215
    3. '(dx' → logprob: -15.625006675720215
    4. '0' → logprob: -16.1250057220459
    5. '_dx' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.5000057220459
    7. '
' → logprob: -17.6250057220459
    8. '[' → logprob: -18.3750057220459
    9. 'd' → logprob: -18.8750057220459
    10. ',' → logprob: -18.8750057220459

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0790303498506546
    2. ',y' → logprob: -2.5790302753448486
    3. ' ,' → logprob: -8.95403003692627
    4. ',n' → logprob: -11.45403003692627
    5. ',
' → logprob: -14.45403003692627
    6. 'y' → logprob: -15.95403003692627
    7. ',w' → logprob: -17.704030990600586
    8. '_,' → logprob: -17.704030990600586
    9. ',d' → logprob: -17.954030990600586
    10. ',next' → logprob: -17.954030990600586

Token 299: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00407923199236393
    2. ' y' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.50407886505127
    4. ' ' → logprob: -16.129079818725586
    5. '       ' → logprob: -16.504079818725586
    6. '	y' → logprob: -16.879079818725586
    7. '    ' → logprob: -17.754079818725586
    8. '           ' → logprob: -18.379079818725586
    9. '
' → logprob: -18.629079818725586
    10. '  ' → logprob: -18.754079818725586

Token 300: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012861868599429727
    2. '+y' → logprob: -6.751286029815674
    3. ' +' → logprob: -10.001286506652832
    4. '+d' → logprob: -10.751286506652832
    5. '<|end|>' → logprob: -10.876286506652832
    6. '+h' → logprob: -11.376286506652832
    7. 'y' → logprob: -12.126286506652832
    8. ')' → logprob: -12.501286506652832
    9. '-' → logprob: -13.001286506652832
    10. '+x' → logprob: -13.501286506652832

Token 301: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00035751116229221225
    2. ' dy' → logprob: -8.000357627868652
    3. '1' → logprob: -10.875357627868652
    4. 'y' → logprob: -13.500357627868652
    5. '0' → logprob: -13.750357627868652
    6. '.dy' → logprob: -15.125357627868652
    7. ' ' → logprob: -15.625357627868652
    8. '-d' → logprob: -16.000356674194336
    9. '
' → logprob: -16.500356674194336
    10. 'd' → logprob: -16.625356674194336

Token 302: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.685006856918335
    2. '<|end|>' → logprob: -0.810006856918335
    3. '               ' → logprob: -3.185006856918335
    4. '<|end|>' → logprob: -5.310007095336914
    5. '           ' → logprob: -6.435007095336914
    6. '
' → logprob: -7.060007095336914
    7. ',' → logprob: -7.810007095336914
    8. ' if' → logprob: -8.060007095336914
    9. ')' → logprob: -8.060007095336914
    10. '	       ' → logprob: -8.185007095336914

Token 303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031985383247956634
    2. '<|end|>' → logprob: -8.625319480895996
    3. '           ' → logprob: -9.875319480895996
    4. ',' → logprob: -11.125319480895996
    5. '                
' → logprob: -11.125319480895996
    6. '		       ' → logprob: -11.250319480895996
    7. '	           ' → logprob: -11.500319480895996
    8. '	       ' → logprob: -11.875319480895996
    9. '
' → logprob: -11.875319480895996
    10. '       ' → logprob: -12.625319480895996

Token 304: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05568574368953705
    2. ' if' → logprob: -3.1806857585906982
    3. 'if' (adapté à ' if') → logprob: -4.555685520172119
    4. '       ' → logprob: -6.430685520172119
    5. '           ' → logprob: -9.055685997009277
    6. ',' → logprob: -9.305685997009277
    7. '<|end|>' → logprob: -9.430685997009277
    8. ' ' → logprob: -9.555685997009277
    9. '	       ' → logprob: -10.680685997009277
    10. '		       ' → logprob: -11.055685997009277

Token 305: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012519069947302341
    2. ' ' → logprob: -4.387518882751465
    3. '   ' → logprob: -12.887518882751465
    4. 'nx' → logprob: -13.012518882751465
    5. ' nx' → logprob: -13.637518882751465
    6. '(nx' → logprob: -13.637518882751465
    7. ' ' → logprob: -14.137518882751465
    8. '(' → logprob: -14.762518882751465
    9. '
' → logprob: -15.012518882751465
    10. ' (' → logprob: -15.137518882751465

Token 306: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004901225329376757
    2. ' ' → logprob: -7.625490188598633
    3. 'nx' → logprob: -13.750490188598633
    4. '(nx' → logprob: -14.750490188598633
    5. '(' → logprob: -15.625490188598633
    6. '
' → logprob: -15.875490188598633
    7. '   ' → logprob: -16.000490188598633
    8. ' nx' → logprob: -16.000490188598633
    9. ' (' → logprob: -17.500490188598633
    10. ' ' → logprob: -18.000490188598633

Token 307: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2014177292585373
    2. '<=' → logprob: -1.7014176845550537
    3. '>=' → logprob: -13.076417922973633
    4. ' >=' → logprob: -13.326417922973633
    5. '0' → logprob: -15.326417922973633
    6. '<' → logprob: -16.076417922973633
    7. ' ' → logprob: -16.076417922973633
    8. ' <' → logprob: -16.951417922973633
    9. 'w' → logprob: -17.451417922973633
    10. ',' → logprob: -17.451417922973633

Token 308: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.005245260428637266
    2. ' nx' → logprob: -5.255245208740234
    3. 'ny' → logprob: -11.880245208740234
    4. '(nx' → logprob: -12.505245208740234
    5. 'n' → logprob: -14.505245208740234
    6. '
' → logprob: -15.505245208740234
    7. 'x' → logprob: -16.505245208740234
    8. 'Nx' → logprob: -17.130245208740234
    9. ' ny' → logprob: -17.880245208740234
    10. '```' → logprob: -18.130245208740234

Token 309: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06310217082500458
    2. ' <' → logprob: -2.8131022453308105
    3. '<w' → logprob: -7.0631022453308105
    4. '<h' → logprob: -8.688101768493652
    5. '<n' → logprob: -9.438101768493652
    6. ' and' → logprob: -11.563101768493652
    7. 'and' → logprob: -11.813101768493652
    8. '<len' → logprob: -12.563101768493652
    9. '<size' → logprob: -12.813101768493652
    10. '<m' → logprob: -13.688101768493652

Token 310: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005530327325686812
    2. ' w' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.500553131103516
    4. '	w' → logprob: -17.625553131103516
    5. '
' → logprob: -17.750553131103516
    6. ' ' → logprob: -19.000553131103516
    7. '    ' → logprob: -20.250553131103516
    8. '       ' → logprob: -20.500553131103516
    9. '```' → logprob: -20.875553131103516
    10. '    
' → logprob: -21.000553131103516

Token 311: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021012276411057
    2. 'and' → logprob: -2.350210189819336
    3. '           ' → logprob: -13.600210189819336
    4. '       ' → logprob: -13.600210189819336
    5. ',' → logprob: -14.600210189819336
    6. '               ' → logprob: -15.600210189819336
    7. '   ' → logprob: -15.975210189819336
    8. ')' → logprob: -15.975210189819336
    9. ' ' → logprob: -16.100210189819336
    10. '        ' → logprob: -17.475210189819336

Token 312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11873156577348709
    2. ' ' → logprob: -2.2437314987182617
    3. ' ny' → logprob: -6.118731498718262
    4. 'ny' → logprob: -6.618731498718262
    5. ' h' → logprob: -6.743731498718262
    6. 'h' → logprob: -6.868731498718262
    7. '   ' → logprob: -10.368731498718262
    8. '
' → logprob: -10.368731498718262
    9. '  ' → logprob: -11.368731498718262
    10. ' y' → logprob: -11.493731498718262

Token 313: '0' (ID: 15)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001367261866107583
    2. ' h' → logprob: -6.626367092132568
    3. '0' → logprob: -10.126367568969727
    4. ' ' → logprob: -15.001367568969727
    5. 'ny' → logprob: -15.376367568969727
    6. '   ' → logprob: -15.751367568969727
    7. 'y' → logprob: -15.876367568969727
    8. '
' → logprob: -16.376367568969727
    9. 'hy' → logprob: -16.376367568969727
    10. '	h' → logprob: -16.626367568969727

Token 314: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31361252069473267
    2. ' <' → logprob: -1.313612461090088
    3. '<h' → logprob: -8.188612937927246
    4. 'h' → logprob: -10.063612937927246
    5. '<n' → logprob: -11.188612937927246
    6. 'and' → logprob: -12.063612937927246
    7. '<w' → logprob: -12.688612937927246
    8. ' and' → logprob: -12.938612937927246
    9. ' ' → logprob: -14.438612937927246
    10. '<s' → logprob: -14.688612937927246

Token 315: ' ny' (ID: 4423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0021876145619899035
    2. ' h' → logprob: -6.127187728881836
    3. '   ' → logprob: -13.752187728881836
    4. ' ' → logprob: -14.377187728881836
    5. '
' → logprob: -15.502187728881836
    6. '	h' → logprob: -16.002187728881836
    7. '  ' → logprob: -16.627187728881836
    8. '(h' → logprob: -16.939687728881836
    9. '    ' → logprob: -16.939687728881836
    10. '0' → logprob: -17.002187728881836

Token 316: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20179668068885803
    2. '<' → logprob: -1.7017966508865356
    3. '<h' → logprob: -8.201796531677246
    4. 'h' → logprob: -9.701796531677246
    5. '<w' → logprob: -10.951796531677246
    6. ' ' → logprob: -11.951796531677246
    7. ' h' → logprob: -12.201796531677246
    8. '<n' → logprob: -12.326796531677246
    9. 'w' → logprob: -12.576796531677246
    10. '<len' → logprob: -13.201796531677246

Token 317: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0005533903022296727
    2. ' h' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.500553131103516
    4. ' ' → logprob: -16.500553131103516
    5. '	h' → logprob: -18.000553131103516
    6. '[h' → logprob: -18.250553131103516
    7. '       ' → logprob: -18.750553131103516
    8. '(h' → logprob: -18.875553131103516
    9. '           ' → logprob: -19.125553131103516
    10. '
' → logprob: -19.125553131103516

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24133560061454773
    2. ' and' → logprob: -1.7413356304168701
    3. ':
' → logprob: -3.61633563041687
    4. '               ' → logprob: -5.616335391998291
    5. '):' → logprob: -5.616335391998291
    6. '           ' → logprob: -6.116335391998291
    7. '                   ' → logprob: -6.741335391998291
    8. 'and' → logprob: -7.616335391998291
    9. '):
' → logprob: -7.741335391998291
    10. '<|end|>' → logprob: -7.866335391998291

Token 319: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1879761666059494
    2. ' and' → logprob: -2.437976121902466
    3. '               ' → logprob: -3.062976121902466
    4. ':' → logprob: -4.187976360321045
    5. ' yield' → logprob: -4.687976360321045
    6. 'yield' → logprob: -5.062976360321045
    7. '                       ' → logprob: -5.937976360321045
    8. '):' → logprob: -6.562976360321045
    9. '<|end|>' → logprob: -7.812976360321045
    10. '           ' → logprob: -7.812976360321045

Token 320: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.5710719227790833
    2. ' yield' → logprob: -1.0710718631744385
    3. '                   ' → logprob: -2.4460718631744385
    4. '                       ' → logprob: -5.321072101593018
    5. '	yield' → logprob: -7.196072101593018
    6. '                    ' → logprob: -10.07107162475586
    7. 'if' → logprob: -10.19607162475586
    8. '               ' → logprob: -10.44607162475586
    9. ' if' → logprob: -10.82107162475586
    10. '       ' → logprob: -11.57107162475586

Token 321: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.17555871605873108
    2. '(nx' → logprob: -2.1755588054656982
    3. ' nx' → logprob: -3.0505588054656982
    4. ' (' → logprob: -9.300559043884277
    5. '(n' → logprob: -10.550559043884277
    6. '(' → logprob: -12.300559043884277
    7. '   ' → logprob: -12.425559043884277
    8. 'ny' → logprob: -12.800559043884277
    9. '
' → logprob: -13.675559043884277
    10. 'n' → logprob: -13.675559043884277

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012241550721228123
    2. ' ,' → logprob: -6.751224040985107
    3. ',y' → logprob: -10.001224517822266
    4. ',n' → logprob: -11.751224517822266
    5. ',
' → logprob: -14.376224517822266
    6. '                   ' → logprob: -17.001224517822266
    7. '                    ' → logprob: -18.126224517822266
    8. ',\
' → logprob: -18.501224517822266
    9. '‌,' → logprob: -18.501224517822266
    10. ',new' → logprob: -19.126224517822266

Token 323: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0011706985533237457
    2. ' ny' → logprob: -6.751170635223389
    3. 'nyi' → logprob: -15.001171112060547
    4. ' ' → logprob: -17.501171112060547
    5. 'iny' → logprob: -18.001171112060547
    6. 'y' → logprob: -18.501171112060547
    7. ' ' → logprob: -18.501171112060547
    8. '    ' → logprob: -18.626171112060547
    9. 'nye' → logprob: -18.751171112060547
    10. '   ' → logprob: -19.001171112060547

Token 324: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09022021293640137
    2. '<|end|>' → logprob: -2.8402202129364014
    3. 'def' → logprob: -3.7152202129364014
    4. '   ' → logprob: -6.5902204513549805
    5. '        
' → logprob: -7.3402204513549805
    6. '<|end|>' → logprob: -7.8402204513549805
    7. ',' → logprob: -8.46522045135498
    8. ' def' → logprob: -8.96522045135498
    9. '    
' → logprob: -8.96522045135498
    10. ')' → logprob: -8.96522045135498

Token 326: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39209285378456116
    2. 'def' → logprob: -1.1420928239822388
    3. 'from' → logprob: -5.892092704772949
    4. '        
' → logprob: -6.517092704772949
    5. ' def' → logprob: -8.26709270477295
    6. '
' → logprob: -8.26709270477295
    7. '<|end|>' → logprob: -8.76709270477295
    8. 'import' → logprob: -9.01709270477295
    9. '   ' → logprob: -9.51709270477295
    10. '```' → logprob: -10.64209270477295

Token 327: ' Because' (ID: 13602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01343479473143816
    2. '       ' → logprob: -4.888434886932373
    3. 'from' → logprob: -5.388434886932373
    4. '   ' → logprob: -7.388434886932373
    5. ' def' → logprob: -7.638434886932373
    6. '        
' → logprob: -10.138434410095215
    7. 'import' → logprob: -10.138434410095215
    8. '
' → logprob: -10.138434410095215
    9. ' from' → logprob: -11.638434410095215
    10. 'for' → logprob: -12.138434410095215

Token 328: ' two' (ID: 1920)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08040311187505722
    2. ' def' → logprob: -2.7054030895233154
    3. ' the' → logprob: -5.7054033279418945
    4. '       ' → logprob: -6.5804033279418945
    5. '   ' → logprob: -6.9554033279418945
    6. 'the' → logprob: -7.2054033279418945
    7. ' pieces' → logprob: -7.8304033279418945
    8. '
' → logprob: -7.9554033279418945
    9. 'w' → logprob: -8.205403327941895
    10. 'from' → logprob: -8.330403327941895

Token 329: ' different' (ID: 2647)
  Prédit: ' pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -0.782820463180542
    2. ' cells' → logprob: -1.532820463180542
    3. 'pieces' → logprob: -1.782820463180542
    4. 'def' → logprob: -2.532820463180542
    5. 'cells' → logprob: -3.282820463180542
    6. ' blocks' → logprob: -4.282820701599121
    7. ' def' → logprob: -4.907820701599121
    8. 'blocks' → logprob: -5.657820701599121
    9. ' adjacent' → logprob: -5.907820701599121
    10. 'digits' → logprob: -6.282820701599121

Token 330: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.48512357473373413
    2. 'def' → logprob: -2.110123634338379
    3. 'cells' → logprob: -2.235123634338379
    4. ' pieces' → logprob: -2.360123634338379
    5. 'digits' → logprob: -3.360123634338379
    6. ' cells' → logprob: -4.360123634338379
    7. 'dfs' → logprob: -5.985123634338379
    8. ' digits' → logprob: -6.735123634338379
    9. ' def' → logprob: -6.860123634338379
    10. 'digit' → logprob: -7.110123634338379

Token 331: ' can' (ID: 665)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -1.4104809761047363
    2. ' may' → logprob: -1.5354809761047363
    3. ' can' → logprob: -2.0354809761047363
    4. ' might' → logprob: -2.5354809761047363
    5. 'def' → logprob: -2.6604809761047363
    6. ' are' → logprob: -2.6604809761047363
    7. 'cannot' → logprob: -2.6604809761047363
    8. '       ' → logprob: -3.1604809761047363
    9. 'may' → logprob: -4.160480976104736
    10. ' can't' → logprob: -4.410480976104736

Token 332: ' have' (ID: 679)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -1.4699783325195312
    2. ' be' → logprob: -1.8449783325195312
    3. ' touch' → logprob: -1.8449783325195312
    4. ' share' → logprob: -2.2199783325195312
    5. ' have' → logprob: -2.3449783325195312
    6. 'have' → logprob: -2.8449783325195312
    7. 'share' → logprob: -2.9699783325195312
    8. 'be' → logprob: -3.0949783325195312
    9. ' only' → logprob: -3.9699783325195312
    10. 'not' → logprob: -4.344978332519531

Token 333: ' same' (ID: 2684)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7595669031143188
    2. 'same' → logprob: -0.7595669031143188
    3. 'different' → logprob: -4.009566783905029
    4. 'digits' → logprob: -4.384566783905029
    5. ' the' → logprob: -4.509566783905029
    6. 'adj' → logprob: -4.759566783905029
    7. ' same' → logprob: -4.884566783905029
    8. 'cells' → logprob: -5.759566783905029
    9. 'digit' → logprob: -7.134566783905029
    10. 'blocks' → logprob: -7.759566783905029

Token 334: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.1688845157623291
    2. ' digit' → logprob: -2.668884515762329
    3. 'digits' → logprob: -2.668884515762329
    4. ' digits' → logprob: -4.41888427734375
    5. 'number' → logprob: -6.04388427734375
    6. 'value' → logprob: -7.29388427734375
    7. 'label' → logprob: -7.91888427734375
    8. ' number' → logprob: -8.16888427734375
    9. 'numbers' → logprob: -8.79388427734375
    10. '_digit' → logprob: -8.91888427734375

Token 335: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3021502196788788
    2. '
' → logprob: -1.6771502494812012
    3. ',' → logprob: -3.677150249481201
    4. 'def' → logprob: -4.052150249481201
    5. '        
' → logprob: -4.427150249481201
    6. '<|end|>' → logprob: -4.427150249481201
    7. ',
' → logprob: -5.927150249481201
    8. ' def' → logprob: -6.177150249481201
    9. '<|end|>' → logprob: -7.552150249481201
    10. '   ' → logprob: -7.677150249481201

Token 336: ' separated' (ID: 33930)
  Prédit: ' they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' they' → logprob: -0.5154531598091125
    2. 'they' → logprob: -1.7654531002044678
    3. ' not' → logprob: -2.5154531002044678
    4. ' their' → logprob: -4.140453338623047
    5. ' grid' → logprob: -4.265453338623047
    6. 'abs' → logprob: -4.390453338623047
    7. ' they're' → logprob: -4.390453338623047
    8. 'grid' → logprob: -4.390453338623047
    9. ' the' → logprob: -4.390453338623047
    10. 'not' → logprob: -4.890453338623047

Token 337: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23582890629768372
    2. ',' → logprob: -1.7358288764953613
    3. '<|end|>' → logprob: -4.110828876495361
    4. '
' → logprob: -5.235828876495361
    5. 'def' → logprob: -5.485828876495361
    6. ',
' → logprob: -5.860828876495361
    7. '<|end|>' → logprob: -6.110828876495361
    8. '.' → logprob: -6.735828876495361
    9. ' ,' → logprob: -7.860828876495361
    10. ' by' → logprob: -7.985828876495361

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2201130986213684
    2. '<|end|>' → logprob: -1.8451130390167236
    3. ',' → logprob: -3.5951130390167236
    4. '<|end|>' → logprob: -4.845113277435303
    5. 'def' → logprob: -6.720113277435303
    6. '        
' → logprob: -7.220113277435303
    7. ' ,' → logprob: -7.220113277435303
    8. ')' → logprob: -8.220112800598145
    9. '   ' → logprob: -8.720112800598145
    10. ',
' → logprob: -8.720112800598145

Token 339: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031043706461787224
    2. 'def' → logprob: -4.031043529510498
    3. '<|end|>' → logprob: -5.031043529510498
    4. ' def' → logprob: -6.156043529510498
    5. '
' → logprob: -6.656043529510498
    6. '        
' → logprob: -6.906043529510498
    7. ',' → logprob: -7.031043529510498
    8. '<|end|>' → logprob: -7.156043529510498
    9. '   ' → logprob: -9.906044006347656
    10. ' ,' → logprob: -11.031044006347656

Token 340: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45366889238357544
    2. '       ' → logprob: -1.0786688327789307
    3. ' def' → logprob: -4.32866907119751
    4. '
' → logprob: -5.07866907119751
    5. '        
' → logprob: -5.70366907119751
    6. ' for' → logprob: -7.82866907119751
    7. 'for' → logprob: -7.95366907119751
    8. '   ' → logprob: -7.95366907119751
    9. 'from' → logprob: -8.203668594360352
    10. 'import' → logprob: -8.703668594360352

Token 341: ' each' (ID: 2454)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5685261487960815
    2. 'def' → logprob: -1.4435261487960815
    3. '       ' → logprob: -1.6935261487960815
    4. ' for' → logprob: -5.318526268005371
    5. ' we' → logprob: -5.693526268005371
    6. '        ' → logprob: -5.693526268005371
    7. '   ' → logprob: -8.068526268005371
    8. '    ' → logprob: -8.193526268005371
    9. '        
' → logprob: -8.318526268005371
    10. '
' → logprob: -8.693526268005371

Token 342: ' connected' (ID: 12079)
  Prédit: ' piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' piece' → logprob: -0.800061821937561
    2. 'piece' → logprob: -0.925061821937561
    3. 'def' → logprob: -1.925061821937561
    4. 'dfs' → logprob: -5.5500617027282715
    5. ' def' → logprob: -6.8000617027282715
    6. ' dfs' → logprob: -7.4250617027282715
    7. 'visited' → logprob: -7.5500617027282715
    8. 'cell' → logprob: -7.6750617027282715
    9. '_piece' → logprob: -7.6750617027282715
    10. 'block' → logprob: -8.67506217956543

Token 343: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.5121936202049255
    2. ' component' → logprob: -1.0121936798095703
    3. 'def' → logprob: -3.6371936798095703
    4. '_component' → logprob: -5.26219367980957
    5. 'block' → logprob: -6.63719367980957
    6. 'piece' → logprob: -7.13719367980957
    7. 'components' → logprob: -7.26219367980957
    8. ' block' → logprob: -7.26219367980957
    9. ' piece' → logprob: -7.51219367980957
    10. 'region' → logprob: -8.13719367980957

Token 344: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.276357650756836
    2. ':' → logprob: -1.401357650756836
    3. ' of' → logprob: -2.151357650756836
    4. 'def' → logprob: -2.276357650756836
    5. ' is' → logprob: -2.776357650756836
    6. ' def' → logprob: -3.026357650756836
    7. '<|end|>' → logprob: -3.901357650756836
    8. ':
' → logprob: -4.026357650756836
    9. '   ' → logprob: -4.276357650756836
    10. ',' → logprob: -4.401357650756836

Token 345: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.38461488485336304
    2. 'cells' → logprob: -1.7596149444580078
    3. 'the' → logprob: -3.259614944458008
    4. ' same' → logprob: -3.259614944458008
    5. 'blocks' → logprob: -3.884614944458008
    6. ' cells' → logprob: -4.009614944458008
    7. 'digit' → logprob: -4.134614944458008
    8. ' the' → logprob: -5.509614944458008
    9. ' blocks' → logprob: -5.759614944458008
    10. 'equal' → logprob: -6.259614944458008

Token 346: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.011654580011963844
    2. ' digit' → logprob: -4.636654376983643
    3. '-digit' → logprob: -7.386654376983643
    4. 'def' → logprob: -7.761654376983643
    5. '_digit' → logprob: -7.886654376983643
    6. 'digits' → logprob: -8.1366548538208
    7. 'd' → logprob: -10.2616548538208
    8. 'cell' → logprob: -10.5116548538208
    9. '<|end|>' → logprob: -10.8866548538208
    10. '#' → logprob: -11.1366548538208

Token 347: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.82013338804245
    2. 'def' → logprob: -1.5701334476470947
    3. ' defines' → logprob: -1.5701334476470947
    4. ' def' → logprob: -2.8201334476470947
    5. ' will' → logprob: -4.445133209228516
    6. ' must' → logprob: -4.695133209228516
    7. ' with' → logprob: -4.945133209228516
    8. ',' → logprob: -5.320133209228516
    9. ' forms' → logprob: -5.695133209228516
    10. ' has' → logprob: -5.820133209228516

Token 348: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.41072878241539
    2. 'a' → logprob: -1.7857288122177124
    3. ' identified' → logprob: -2.910728693008423
    4. ' considered' → logprob: -3.660728693008423
    5. ' its' → logprob: -3.785728693008423
    6. ' one' → logprob: -3.785728693008423
    7. 'identified' → logprob: -4.785728931427002
    8. ' treated' → logprob: -5.035728931427002
    9. 'found' → logprob: -5.285728931427002
    10. ' found' → logprob: -5.285728931427002

Token 349: ' separate' (ID: 13574)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.028655467554926872
    2. ' piece' → logprob: -3.653655529022217
    3. ' separate' → logprob: -6.778655529022217
    4. 'se' → logprob: -7.778655529022217
    5. 'different' → logprob: -8.528655052185059
    6. ' distinct' → logprob: -8.778655052185059
    7. '"' → logprob: -8.778655052185059
    8. 'distinct' → logprob: -9.278655052185059
    9. 'new' → logprob: -10.153655052185059
    10. ' new' → logprob: -10.153655052185059

Token 350: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.04311029613018036
    2. ' piece' → logprob: -3.1681103706359863
    3. 'def' → logprob: -10.293109893798828
    4. 'component' → logprob: -10.418109893798828
    5. 'token' → logprob: -11.418109893798828
    6. '_piece' → logprob: -11.793109893798828
    7. '```' → logprob: -11.918109893798828
    8. '   ' → logprob: -12.668109893798828
    9. 'piec' → logprob: -12.668109893798828
    10. 'entity' → logprob: -12.793109893798828

Token 351: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4654676914215088
    2. '<|end|>' → logprob: -1.0904676914215088
    3. '
' → logprob: -3.840467691421509
    4. '<|end|>' → logprob: -4.46546745300293
    5. '        
' → logprob: -6.96546745300293
    6. 'def' → logprob: -7.34046745300293
    7. ',' → logprob: -7.84046745300293
    8. '.' → logprob: -8.09046745300293
    9. ':' → logprob: -8.46546745300293
    10. ')' → logprob: -8.84046745300293

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011682739481329918
    2. '<|end|>' → logprob: -5.386682510375977
    3. '        
' → logprob: -5.886682510375977
    4. '
' → logprob: -5.886682510375977
    5. 'def' → logprob: -7.136682510375977
    6. '<|end|>' → logprob: -8.261682510375977
    7. '   ' → logprob: -8.511682510375977
    8. '    
' → logprob: -9.511682510375977
    9. ',' → logprob: -10.386682510375977
    10. '  
' → logprob: -10.761682510375977

Token 353: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02276282012462616
    2. 'def' → logprob: -4.272762775421143
    3. '        
' → logprob: -5.522762775421143
    4. '
' → logprob: -5.772762775421143
    5. '<|end|>' → logprob: -7.897762775421143
    6. ' for' → logprob: -8.1477632522583
    7. ' def' → logprob: -8.1477632522583
    8. '    
' → logprob: -9.2727632522583
    9. '   ' → logprob: -9.3977632522583
    10. ',' → logprob: -9.6477632522583

Token 354: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10023374110460281
    2. 'y' → logprob: -2.350233793258667
    3. ' x' → logprob: -11.225234031677246
    4. 'x' → logprob: -11.850234031677246
    5. '	y' → logprob: -12.725234031677246
    6. ' ' → logprob: -12.975234031677246
    7. '   ' → logprob: -14.725234031677246
    8. '_y' → logprob: -14.975234031677246
    9. '  ' → logprob: -15.600234031677246
    10. '```' → logprob: -16.10023307800293

Token 355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019370813388377428
    2. 'in' → logprob: -6.251936912536621
    3. ',' → logprob: -12.376936912536621
    4. ' ' → logprob: -12.626936912536621
    5. '	in' → logprob: -15.251936912536621
    6. ' ,' → logprob: -15.376936912536621
    7. 'In' → logprob: -15.626936912536621
    8. '   ' → logprob: -16.376937866210938
    9. '_in' → logprob: -17.001937866210938
    10. '0' → logprob: -17.501937866210938

Token 356: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12694144248962402
    2. ' range' → logprob: -2.126941442489624
    3. '0' → logprob: -11.501941680908203
    4. ' ' → logprob: -13.376941680908203
    5. '   ' → logprob: -13.626941680908203
    6. '	range' → logprob: -15.876941680908203
    7. '(range' → logprob: -15.876941680908203
    8. 'r' → logprob: -16.876941680908203
    9. '  ' → logprob: -17.126941680908203
    10. ')' → logprob: -17.126941680908203

Token 357: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.011189171113073826
    2. 'h' → logprob: -4.511188983917236
    3. '(' → logprob: -9.136189460754395
    4. ' (' → logprob: -10.886189460754395
    5. ' h' → logprob: -11.386189460754395
    6. '   ' → logprob: -13.261189460754395
    7. '       ' → logprob: -14.636189460754395
    8. ')' → logprob: -15.011189460754395
    9. '0' → logprob: -15.261189460754395
    10. '           ' → logprob: -15.386189460754395

Token 358: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.693667471408844
    2. '):' → logprob: -0.693667471408844
    3. '   ' → logprob: -7.943667411804199
    4. '       ' → logprob: -9.3186674118042
    5. ':' → logprob: -10.4436674118042
    6. '+' → logprob: -10.8186674118042
    7. '):
' → logprob: -11.8186674118042
    8. ',' → logprob: -11.9436674118042
    9. ':
' → logprob: -12.8186674118042
    10. ' ):' → logprob: -13.1936674118042

Token 359: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16248959302902222
    2. '   ' → logprob: -1.912489652633667
    3. '       ' → logprob: -6.412489414215088
    4. 'for' → logprob: -7.662489414215088
    5. ':' → logprob: -9.787489891052246
    6. '	for' → logprob: -9.912489891052246
    7. ' ' → logprob: -10.912489891052246
    8. ':
' → logprob: -12.287489891052246
    9. '<|end|>' → logprob: -12.287489891052246
    10. '```' → logprob: -12.537489891052246

Token 360: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3213745355606079
    2. 'for' (adapté à ' for') → logprob: -1.321374535560608
    3. '   ' → logprob: -4.821374416351318
    4. '       ' → logprob: -11.071374893188477
    5. ' ' → logprob: -12.196374893188477
    6. '	for' → logprob: -13.196374893188477
    7. '    ' → logprob: -14.446374893188477
    8. '  ' → logprob: -14.696374893188477
    9. '           ' → logprob: -14.946374893188477
    10. '
' → logprob: -15.696374893188477

Token 361: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868711292743683
    2. ' x' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.761871337890625
    4. '0' → logprob: -17.886871337890625
    5. '	x' → logprob: -18.136871337890625
    6. '   ' → logprob: -19.386871337890625
    7. ')x' → logprob: -20.011871337890625
    8. '(x' → logprob: -20.136871337890625
    9. '    ' → logprob: -20.136871337890625
    10. 'w' → logprob: -20.886871337890625

Token 362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07896359264850616
    2. 'in' → logprob: -2.5789635181427
    3. '(' → logprob: -11.078963279724121
    4. '   ' → logprob: -11.578963279724121
    5. '<|end|>' → logprob: -11.703963279724121
    6. ' ' → logprob: -11.953963279724121
    7. '           ' → logprob: -12.203963279724121
    8. ',' → logprob: -12.703963279724121
    9. '	in' → logprob: -12.828963279724121
    10. ':' → logprob: -12.828963279724121

Token 363: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692873179912567
    2. ' range' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.626928329467773
    4. '   ' → logprob: -15.751928329467773
    5. '(range' → logprob: -16.251928329467773
    6. 'w' → logprob: -16.501928329467773
    7. '(' → logprob: -17.751928329467773
    8. '    ' → logprob: -18.126928329467773
    9. '0' → logprob: -18.751928329467773
    10. ')' → logprob: -18.751928329467773

Token 364: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.000007629394531
    3. '(h' → logprob: -13.500007629394531
    4. ' (' → logprob: -14.625007629394531
    5. 'w' → logprob: -17.75000762939453
    6. '(W' → logprob: -18.37500762939453
    7. '   ' → logprob: -19.00000762939453
    8. '((' → logprob: -19.37500762939453
    9. ')' → logprob: -19.75000762939453
    10. '       ' → logprob: -19.87500762939453

Token 365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03058997541666031
    2. '):
' → logprob: -3.530590057373047
    3. ')' → logprob: -7.280590057373047
    4. ':' → logprob: -9.780590057373047
    5. '           ' → logprob: -10.155590057373047
    6. '):

' → logprob: -11.530590057373047
    7. '):
' → logprob: -11.655590057373047
    8. ',' → logprob: -12.030590057373047
    9. '       ' → logprob: -12.030590057373047
    10. ' ):' → logprob: -12.280590057373047

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2961426377296448
    2. ':' → logprob: -1.421142578125
    3. ':
' → logprob: -5.171142578125
    4. '           ' → logprob: -5.296142578125
    5. ',' → logprob: -6.421142578125
    6. '<|end|>' → logprob: -6.921142578125
    7. '       ' → logprob: -7.171142578125
    8. '<|end|>' → logprob: -8.796142578125
    9. ' :' → logprob: -9.171142578125
    10. '                
' → logprob: -9.421142578125

Token 367: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15453390777111053
    2. '                   ' → logprob: -2.154533863067627
    3. '           ' → logprob: -3.904533863067627
    4. 'if' (adapté à ' if') → logprob: -5.529533863067627
    5. '               ' → logprob: -6.029533863067627
    6. '   ' → logprob: -8.654534339904785
    7. '                ' → logprob: -8.779534339904785
    8. '                    ' → logprob: -9.404534339904785
    9. '       ' → logprob: -9.904534339904785
    10. '            ' → logprob: -10.154534339904785

Token 368: ' grid' (ID: 10586)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5933659672737122
    2. ' grid' → logprob: -1.0933659076690674
    3. 'grid' → logprob: -2.4683659076690674
    4. 'not' → logprob: -3.5933659076690674
    5. ' ' → logprob: -8.718365669250488
    6. '(grid' → logprob: -10.843365669250488
    7. '   ' → logprob: -11.593365669250488
    8. ' ' → logprob: -12.218365669250488
    9. 'visited' → logprob: -12.593365669250488
    10. '(not' → logprob: -12.593365669250488

Token 369: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.630610641877865e-06
    2. '[x' → logprob: -12.125006675720215
    3. '[' → logprob: -14.125006675720215
    4. ' [' → logprob: -15.375006675720215
    5. '][' → logprob: -15.500006675720215
    6. '[
' → logprob: -17.5000057220459
    7. '[Y' → logprob: -18.1250057220459
    8. 'y' → logprob: -18.5000057220459
    9. '```' → logprob: -18.7500057220459
    10. '   ' → logprob: -19.0000057220459

Token 370: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4564732611179352
    2. '[x' → logprob: -1.2064732313156128
    3. '[y' → logprob: -2.7064733505249023
    4. ']' → logprob: -7.956473350524902
    5. '[' → logprob: -9.831473350524902
    6. ')[' → logprob: -11.831473350524902
    7. ' [' → logprob: -11.831473350524902
    8. ' ][' → logprob: -12.081473350524902
    9. '}[' → logprob: -12.206473350524902
    10. '[i' → logprob: -12.206473350524902

Token 371: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5094070477061905e-05
    2. ' x' → logprob: -11.125015258789062
    3. ']' → logprob: -15.750015258789062
    4. ')x' → logprob: -16.500015258789062
    5. '	x' → logprob: -17.375015258789062
    6. '"x' → logprob: -17.625015258789062
    7. ''x' → logprob: -18.250015258789062
    8. '
' → logprob: -18.375015258789062
    9. '```' → logprob: -18.375015258789062
    10. '(x' → logprob: -18.500015258789062

Token 372: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6559271812438965
    2. ' !=' → logprob: -1.0309271812438965
    3. ']' → logprob: -2.1559271812438965
    4. '!='' → logprob: -5.2809271812438965
    5. ']!=' → logprob: -6.6559271812438965
    6. ')' → logprob: -6.9059271812438965
    7. '.is' → logprob: -8.030927658081055
    8. 'isdigit' → logprob: -8.780927658081055
    9. ']!='' → logprob: -8.905927658081055
    10. ' not' → logprob: -9.030927658081055

Token 373: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2425362765789032
    2. '!=' → logprob: -1.6175363063812256
    3. ' not' → logprob: -4.6175360679626465
    4. '!='' → logprob: -5.6175360679626465
    5. '.is' → logprob: -6.4925360679626465
    6. 'isdigit' → logprob: -6.9925360679626465
    7. '==' → logprob: -7.7425360679626465
    8. 'not' → logprob: -8.742536544799805
    9. '>' → logprob: -8.992536544799805
    10. ' ==' → logprob: -8.992536544799805

Token 374: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0004182793782092631
    2. '"."' → logprob: -7.875418186187744
    3. ' '.'' → logprob: -10.375418663024902
    4. '.' → logprob: -12.250418663024902
    5. '".' → logprob: -13.125418663024902
    6. ''' → logprob: -16.125417709350586
    7. '"' → logprob: -16.500417709350586
    8. '('.')' → logprob: -17.500417709350586
    9. '','' → logprob: -17.625417709350586
    10. ' "."' → logprob: -17.875417709350586

Token 375: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693031132221222
    2. 'and' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.501930236816406
    4. '<|end|>' → logprob: -14.251930236816406
    5. '	and' → logprob: -16.501930236816406
    6. ')' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '                ' → logprob: -18.501930236816406
    9. ',' → logprob: -18.626930236816406
    10. '            ' → logprob: -18.626930236816406

Token 376: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4740791916847229
    2. 'not' → logprob: -0.9740791916847229
    3. '                   ' → logprob: -14.724079132080078
    4. '	not' → logprob: -14.724079132080078
    5. 'visited' → logprob: -14.849079132080078
    6. '(not' → logprob: -15.099079132080078
    7. '               ' → logprob: -15.349079132080078
    8. '   ' → logprob: -15.474079132080078
    9. 'and' → logprob: -15.974079132080078
    10. '!' → logprob: -16.724079132080078

Token 377: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06196768581867218
    2. ' visited' → logprob: -2.811967611312866
    3. 'Visited' → logprob: -20.061967849731445
    4. 'visit' → logprob: -20.061967849731445
    5. ' ' → logprob: -20.186967849731445
    6. '   ' → logprob: -21.436967849731445
    7. 'vis' → logprob: -21.436967849731445
    8. 'visible' → logprob: -22.186967849731445
    9. 'occupied' → logprob: -22.436967849731445
    10. 'seen' → logprob: -22.686967849731445

Token 378: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.250000953674316
    3. '[' → logprob: -15.625000953674316
    4. '][' → logprob: -15.875000953674316
    5. '[x' → logprob: -17.25
    6. '[
' → logprob: -17.875
    7. 'y' → logprob: -19.125
    8. '[Y' → logprob: -19.375
    9. '```' → logprob: -19.375
    10. '}[' → logprob: -19.625

Token 379: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.054984286427497864
    2. '][' → logprob: -2.9299843311309814
    3. ']' → logprob: -10.054984092712402
    4. '[' → logprob: -10.179984092712402
    5. 'y' → logprob: -11.679984092712402
    6. '[x' → logprob: -12.304984092712402
    7. ' [' → logprob: -12.929984092712402
    8. ')[' → logprob: -14.304984092712402
    9. '[Y' → logprob: -14.554984092712402
    10. ' ][' → logprob: -14.679984092712402

Token 380: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.3451433409936726e-05
    2. 'y' → logprob: -11.000033378601074
    3. ' x' → logprob: -11.250033378601074
    4. '[x' → logprob: -12.625033378601074
    5. '][' → logprob: -15.875033378601074
    6. ']' → logprob: -16.37503433227539
    7. '[' → logprob: -16.50003433227539
    8. '(x' → logprob: -17.00003433227539
    9. '```' → logprob: -17.75003433227539
    10. '	x' → logprob: -18.37503433227539

Token 381: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3876774311065674
    2. ']:
' → logprob: -1.2626774311065674
    3. ':' → logprob: -3.7626774311065674
    4. ']' → logprob: -4.512677192687988
    5. ':
' → logprob: -5.512677192687988
    6. ']:
' → logprob: -9.637677192687988
    7. '):
' → logprob: -10.012677192687988
    8. '):' → logprob: -10.262677192687988
    9. ']:

' → logprob: -10.387677192687988
    10. '                   ' → logprob: -11.137677192687988

Token 382: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32778018712997437
    2. ':' → logprob: -1.4527802467346191
    3. '<|end|>' → logprob: -3.827780246734619
    4. ':
' → logprob: -4.702780246734619
    5. '               ' → logprob: -5.452780246734619
    6. '<|end|>' → logprob: -5.827780246734619
    7. '                    
' → logprob: -6.327780246734619
    8. '                       ' → logprob: -6.952780246734619
    9. '                           ' → logprob: -7.077780246734619
    10. '                ' → logprob: -7.452780246734619

Token 383: ' digit' (ID: 19181)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.03391792252659798
    2. 'stack' → logprob: -3.4089179039001465
    3. '                       ' → logprob: -9.283918380737305
    4. ' queue' → logprob: -9.783918380737305
    5. '	stack' → logprob: -10.283918380737305
    6. '                   ' → logprob: -10.408918380737305
    7. 'queue' → logprob: -11.033918380737305
    8. ' from' → logprob: -11.408918380737305
    9. 'from' → logprob: -12.033918380737305
    10. '   ' → logprob: -12.033918380737305

Token 384: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14307795464992523
    2. '=' → logprob: -2.018077850341797
    3. ')' → logprob: -9.268077850341797
    4. '<|end|>' → logprob: -9.643077850341797
    5. ',' → logprob: -9.768077850341797
    6. ' ' → logprob: -10.393077850341797
    7. '=int' → logprob: -10.518077850341797
    8. '='' → logprob: -11.018077850341797
    9. '<|end|>' → logprob: -11.268077850341797
    10. '_stack' → logprob: -11.768077850341797

Token 385: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.000619388825725764
    2. ' grid' → logprob: -7.500619411468506
    3. 'int' → logprob: -9.625618934631348
    4. ' int' → logprob: -16.125619888305664
    5. '(grid' → logprob: -16.375619888305664
    6. '   ' → logprob: -16.875619888305664
    7. '	grid' → logprob: -17.500619888305664
    8. '.grid' → logprob: -18.500619888305664
    9. ' ' → logprob: -18.500619888305664
    10. 'gr' → logprob: -19.250619888305664

Token 386: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.282920129597187e-05
    2. 'y' → logprob: -11.750012397766113
    3. '][' → logprob: -13.125012397766113
    4. '[' → logprob: -13.625012397766113
    5. '                   ' → logprob: -14.500012397766113
    6. '```' → logprob: -15.375012397766113
    7. ' [' → logprob: -16.12501335144043
    8. '   ' → logprob: -16.25001335144043
    9. ']' → logprob: -16.75001335144043
    10. '[user' → logprob: -16.87501335144043

Token 387: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.20206281542778015
    2. '][' → logprob: -1.7020628452301025
    3. 'y' → logprob: -7.577062606811523
    4. ']' → logprob: -9.952062606811523
    5. '[' → logprob: -10.327062606811523
    6. ')[' → logprob: -11.327062606811523
    7. '(y' → logprob: -11.702062606811523
    8. ' [' → logprob: -11.827062606811523
    9. ' y' → logprob: -11.827062606811523
    10. ',y' → logprob: -12.577062606811523

Token 388: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00017386233957950026
    2. 'x' → logprob: -9.125173568725586
    3. ' y' → logprob: -10.125173568725586
    4. '[y' → logprob: -10.750173568725586
    5. '][' → logprob: -13.250173568725586
    6. ']' → logprob: -13.875173568725586
    7. ''y' → logprob: -15.625173568725586
    8. '(y' → logprob: -16.500173568725586
    9. ')y' → logprob: -16.500173568725586
    10. '	y' → logprob: -16.625173568725586

Token 389: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16743016242980957
    2. ']
' → logprob: -1.9174301624298096
    3. '                   ' → logprob: -5.4174299240112305
    4. ')' → logprob: -6.2924299240112305
    5. ')
' → logprob: -7.2924299240112305
    6. '']' → logprob: -9.66742992401123
    7. '
' → logprob: -10.41742992401123
    8. ']
' → logprob: -10.91742992401123
    9. ']

' → logprob: -10.91742992401123
    10. '               ' → logprob: -11.29242992401123

Token 390: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19460907578468323
    2. '<|end|>' → logprob: -2.3196091651916504
    3. '                    
' → logprob: -3.4446091651916504
    4. '
' → logprob: -3.5696091651916504
    5. '                    ' → logprob: -5.19460916519165
    6. ' visited' → logprob: -5.69460916519165
    7. '<|end|>' → logprob: -6.19460916519165
    8. ' 
' → logprob: -6.69460916519165
    9. ' ' → logprob: -7.31960916519165
    10. '               ' → logprob: -7.44460916519165

Token 391: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.44125837087631226
    2. 'stack' (adapté à ' stack') → logprob: -1.066258430480957
    3. '                   ' → logprob: -5.441258430480957
    4. 'queue' → logprob: -5.816258430480957
    5. 'from' → logprob: -5.816258430480957
    6. ' queue' → logprob: -6.691258430480957
    7. ' from' → logprob: -7.191258430480957
    8. '   ' → logprob: -9.816258430480957
    9. '
' → logprob: -10.066258430480957
    10. '	stack' → logprob: -10.066258430480957

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06318879127502441
    2. '=' → logprob: -2.8131887912750244
    3. '=[]' → logprob: -6.938188552856445
    4. '.append' → logprob: -9.438188552856445
    5. '=[' → logprob: -9.438188552856445
    6. ' =[' → logprob: -10.063188552856445
    7. '<|end|>' → logprob: -11.563188552856445
    8. '=['' → logprob: -11.688188552856445
    9. '=[
' → logprob: -11.813188552856445
    10. ')' → logprob: -12.188188552856445

Token 393: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.011047935113310814
    2. ' [(' → logprob: -4.511047840118408
    3. '[((' → logprob: -16.63604736328125
    4. ' ' → logprob: -19.51104736328125
    5. '[' → logprob: -19.76104736328125
    6. '([(' → logprob: -20.01104736328125
    7. '   ' → logprob: -20.26104736328125
    8. '[]' → logprob: -20.76104736328125
    9. '[[' → logprob: -22.26104736328125
    10. ' [' → logprob: -22.38604736328125

Token 394: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3663626305060461e-05
    2. ' x' → logprob: -11.25001335144043
    3. '(x' → logprob: -14.62501335144043
    4. ')x' → logprob: -16.37501335144043
    5. ')' → logprob: -19.00001335144043
    6. ',x' → logprob: -19.37501335144043
    7. '	x' → logprob: -19.50001335144043
    8. '   ' → logprob: -19.87501335144043
    9. ''x' → logprob: -20.50001335144043
    10. '[x' → logprob: -20.50001335144043

Token 395: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6934415102005005
    2. ',y' → logprob: -0.6934415102005005
    3. ' ,' → logprob: -8.193441390991211
    4. ',
' → logprob: -12.068441390991211
    5. 'y' → logprob: -12.568441390991211
    6. ',Y' → logprob: -13.318441390991211
    7. ',user' → logprob: -13.693441390991211
    8. ',x' → logprob: -14.318441390991211
    9. '
' → logprob: -14.443441390991211
    10. '```' → logprob: -14.818441390991211

Token 396: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002643437124788761
    2. ']' → logprob: -6.502643585205078
    3. ')]
' → logprob: -7.127643585205078
    4. ')' → logprob: -8.127643585205078
    5. ']
' → logprob: -10.252643585205078
    6. ')
' → logprob: -12.502643585205078
    7. '])' → logprob: -13.752643585205078
    8. ' )' → logprob: -14.127643585205078
    9. ')]

' → logprob: -14.752643585205078
    10. ')])' → logprob: -14.877643585205078

Token 397: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004665203392505646
    2. '
' → logprob: -6.004665374755859
    3. '<|end|>' → logprob: -7.879665374755859
    4. '                    ' → logprob: -8.00466537475586
    5. '                    
' → logprob: -8.00466537475586
    6. ' while' → logprob: -8.25466537475586
    7. '               ' → logprob: -9.00466537475586
    8. '           ' → logprob: -9.62966537475586
    9. '		           ' → logprob: -9.75466537475586
    10. '                       ' → logprob: -9.75466537475586

Token 398: ' visited' (ID: 18416)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.5831752419471741
    2. 'piece' → logprob: -1.3331751823425293
    3. 'visited' (adapté à ' visited') → logprob: -1.9581751823425293
    4. 'coords' → logprob: -4.333175182342529
    5. 'while' → logprob: -5.333175182342529
    6. 'pos' → logprob: -5.708175182342529
    7. '                   ' → logprob: -5.958175182342529
    8. 'cells' → logprob: -5.958175182342529
    9. 'positions' → logprob: -6.208175182342529
    10. 'current' → logprob: -6.333175182342529

Token 399: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.004916008096188307
    2. '[' → logprob: -6.004916191101074
    3. '[-' → logprob: -6.379916191101074
    4. '[x' → logprob: -7.379916191101074
    5. '[s' → logprob: -10.504916191101074
    6. ']' → logprob: -11.254916191101074
    7. '.append' → logprob: -11.254916191101074
    8. ' [' → logprob: -11.504916191101074
    9. '   ' → logprob: -11.879916191101074
    10. 'stack' → logprob: -12.004916191101074

Token 400: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03455287963151932
    2. '][-' → logprob: -3.784552812576294
    3. '[-' → logprob: -4.909553050994873
    4. '[y' → logprob: -6.034553050994873
    5. '   ' → logprob: -7.784553050994873
    6. ']' → logprob: -8.409552574157715
    7. '-' → logprob: -8.409552574157715
    8. '[' → logprob: -8.534552574157715
    9. ' ][' → logprob: -9.034552574157715
    10. '[x' → logprob: -9.534552574157715

Token 401: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3913346529006958
    2. 'x' → logprob: -1.1413346529006958
    3. '0' → logprob: -6.266334533691406
    4. '[' → logprob: -6.766334533691406
    5. ']' → logprob: -7.016334533691406
    6. ' y' → logprob: -8.891334533691406
    7. '][' → logprob: -9.891334533691406
    8. ')' → logprob: -10.141334533691406
    9. 'z' → logprob: -10.141334533691406
    10. '-' → logprob: -10.266334533691406

Token 402: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019472026033326983
    2. ']=' → logprob: -6.251947402954102
    3. '=' → logprob: -11.251947402954102
    4. ' ]' → logprob: -12.376947402954102
    5. '[' → logprob: -13.876947402954102
    6. ' =' → logprob: -15.501947402954102
    7. '][' → logprob: -16.1269474029541
    8. 'True' → logprob: -16.3769474029541
    9. ']
' → logprob: -17.3769474029541
    10. '=True' → logprob: -17.7519474029541

Token 403: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5689904093742371
    2. ' =' → logprob: -1.5689904689788818
    3. '=' → logprob: -2.068990468978882
    4. '.append' → logprob: -3.193990468978882
    5. '=True' → logprob: -4.193990230560303
    6. '[x' → logprob: -4.693990230560303
    7. '.add' → logprob: -4.818990230560303
    8. '.pop' → logprob: -4.943990230560303
    9. '                   ' → logprob: -5.068990230560303
    10. '[-' → logprob: -5.443990230560303

Token 404: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '(True' → logprob: -18.87520408630371
    4. '   ' → logprob: -20.37520408630371
    5. ' ' → logprob: -21.50020408630371
    6. '
' → logprob: -22.37520408630371
    7. '=True' → logprob: -22.62520408630371
    8. '1' → logprob: -22.75020408630371
    9. 'False' → logprob: -22.75020408630371
    10. 'true' → logprob: -22.75020408630371

Token 405: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14552655816078186
    2. '                   ' → logprob: -2.270526647567749
    3. ' while' → logprob: -4.64552640914917
    4. '<|end|>' → logprob: -4.77052640914917
    5. '                    
' → logprob: -5.52052640914917
    6. '  
' → logprob: -6.39552640914917
    7. ' 
' → logprob: -6.89552640914917
    8. ' ' → logprob: -6.89552640914917
    9. '<|end|>' → logprob: -6.89552640914917
    10. 'while' → logprob: -7.39552640914917

Token 406: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6181460022926331
    2. ' while' → logprob: -1.8681459426879883
    3. '<|end|>' → logprob: -1.9931459426879883
    4. '
' → logprob: -2.1181459426879883
    5. '                    
' → logprob: -4.493145942687988
    6. '<|end|>' → logprob: -5.118145942687988
    7. ' ' → logprob: -5.243145942687988
    8. '   ' → logprob: -5.493145942687988
    9. 'while' → logprob: -5.493145942687988
    10. '                    ' → logprob: -5.743145942687988

Token 407: ' comp' (ID: 1050)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.7172598242759705
    2. 'piece' → logprob: -1.4672598838806152
    3. '                   ' → logprob: -2.3422598838806152
    4. 'cells' → logprob: -2.3422598838806152
    5. 'coords' → logprob: -3.3422598838806152
    6. 'positions' → logprob: -3.4672598838806152
    7. 'shape' → logprob: -5.592259883880615
    8. ' component' → logprob: -5.717259883880615
    9. 'coordinates' → logprob: -5.842259883880615
    10. ' piece' → logprob: -6.092259883880615

Token 408: ' =' (ID: 314)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onent' → logprob: -0.2156996876001358
    2. ' =' → logprob: -2.3406996726989746
    3. '=[]' → logprob: -2.8406996726989746
    4. 'on' → logprob: -3.9656996726989746
    5. '=[]
' → logprob: -5.340699672698975
    6. '=' → logprob: -5.465699672698975
    7. 'osition' → logprob: -5.715699672698975
    8. '_coords' → logprob: -6.090699672698975
    9. 'ose' → logprob: -6.715699672698975
    10. '_cells' → logprob: -7.090699672698975

Token 409: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.017852088436484337
    2. '[]' → logprob: -4.517852306365967
    3. ' [(' → logprob: -5.017852306365967
    4. ' []' → logprob: -8.767851829528809
    5. ' ' → logprob: -12.892851829528809
    6. '[' → logprob: -13.017851829528809
    7. '[x' → logprob: -13.642851829528809
    8. ' [' → logprob: -15.517851829528809
    9. '[((' → logprob: -15.642851829528809
    10. '[]
' → logprob: -15.642851829528809

Token 410: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026999877765774727
    2. '
' → logprob: -4.6519999504089355
    3. '                    
' → logprob: -4.7769999504089355
    4. '                    ' → logprob: -5.5269999504089355
    5. ' while' → logprob: -7.1519999504089355
    6. ' ' → logprob: -7.1519999504089355
    7. '  
' → logprob: -7.4019999504089355
    8. ' 
' → logprob: -7.6519999504089355
    9. '<|end|>' → logprob: -8.026999473571777
    10. '    
' → logprob: -8.526999473571777

Token 411: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.25481218099594116
    2. '                   ' → logprob: -1.629812240600586
    3. 'while' (adapté à ' while') → logprob: -3.629812240600586
    4. '                    ' → logprob: -6.754812240600586
    5. '
' → logprob: -8.004812240600586
    6. ' ' → logprob: -8.129812240600586
    7. '                    
' → logprob: -9.129812240600586
    8. '   ' → logprob: -9.379812240600586
    9. '    ' → logprob: -9.629812240600586
    10. '                       ' → logprob: -9.879812240600586

Token 412: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.01815345324575901
    2. ' stack' → logprob: -4.018153667449951
    3. '	stack' → logprob: -12.893153190612793
    4. '(stack' → logprob: -14.393153190612793
    5. '   ' → logprob: -14.643153190612793
    6. 'len' → logprob: -17.14315414428711
    7. ' ' → logprob: -18.64315414428711
    8. '    ' → logprob: -19.26815414428711
    9. 'st' → logprob: -20.14315414428711
    10. ' len' → logprob: -20.51815414428711

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10058695077896118
    2. ':
' → logprob: -2.3505868911743164
    3. '.pop' → logprob: -7.975586891174316
    4. '[-' → logprob: -10.725586891174316
    5. '):' → logprob: -12.350586891174316
    6. '):
' → logprob: -12.350586891174316
    7. '>:' → logprob: -13.600586891174316
    8. 'pop' → logprob: -14.225586891174316
    9. '   ' → logprob: -14.225586891174316
    10. '```' → logprob: -14.475586891174316

Token 414: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7481595873832703
    2. ' x' → logprob: -0.7481595873832703
    3. 'x' → logprob: -2.998159646987915
    4. '(x' → logprob: -6.123159408569336
    5. '                        ' → logprob: -7.248159408569336
    6. '                   ' → logprob: -9.123159408569336
    7. ' (' → logprob: -9.248159408569336
    8. '                    ' → logprob: -9.248159408569336
    9. '                      ' → logprob: -9.623159408569336
    10. '       ' → logprob: -10.498159408569336

Token 415: ' cx' (ID: 44448)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10041940957307816
    2. ' x' → logprob: -2.350419521331787
    3. 'cx' (adapté à ' cx') → logprob: -8.725419044494629
    4. ' cx' → logprob: -10.100419044494629
    5. 'px' → logprob: -12.850419044494629
    6. ' px' → logprob: -13.225419044494629
    7. 'xx' → logprob: -13.350419044494629
    8. '                           ' → logprob: -14.225419044494629
    9. '	x' → logprob: -14.600419044494629
    10. '                       ' → logprob: -14.975419044494629

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08930573612451553
    2. ',x' → logprob: -2.4643056392669678
    3. ',c' → logprob: -8.339305877685547
    4. ' ,' → logprob: -9.339305877685547
    5. ',y' → logprob: -10.964305877685547
    6. ',
' → logprob: -12.464305877685547
    7. ',d' → logprob: -13.089305877685547
    8. ',_' → logprob: -13.339305877685547
    9. ',(' → logprob: -13.339305877685547
    10. 'x' → logprob: -13.589305877685547

Token 417: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -5.836499985889532e-05
    2. ' cy' → logprob: -9.7500581741333
    3. '.cy' → logprob: -17.750059127807617
    4. '   ' → logprob: -18.375059127807617
    5. 'cyj' → logprob: -18.375059127807617
    6. ',' → logprob: -19.875059127807617
    7. 'cs' → logprob: -20.125059127807617
    8. '
' → logprob: -20.250059127807617
    9. '

' → logprob: -20.625059127807617
    10. 'cycles' → logprob: -20.750059127807617

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519359588623047
    2. '=' → logprob: -1.5019359588623047
    3. ')' → logprob: -12.001935958862305
    4. ')=' → logprob: -14.626935958862305
    5. ' ' → logprob: -15.876935958862305
    6. ' )' → logprob: -16.751935958862305
    7. ' =
' → logprob: -17.376935958862305
    8. ' =)' → logprob: -17.626935958862305
    9. '(stack' → logprob: -17.626935958862305
    10. ']' → logprob: -18.001935958862305

Token 419: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.023245712742209435
    2. ' stack' → logprob: -3.7732458114624023
    3. '	stack' → logprob: -15.648245811462402
    4. '(stack' → logprob: -17.398244857788086
    5. '   ' → logprob: -17.523244857788086
    6. ' ' → logprob: -18.398244857788086
    7. 'st' → logprob: -18.773244857788086
    8. 'stk' → logprob: -19.148244857788086
    9. '.stack' → logprob: -19.273244857788086
    10. 'pop' → logprob: -19.898244857788086

Token 420: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.599403423024341e-05
    2. 'pop' → logprob: -9.875065803527832
    3. '[-' → logprob: -11.625065803527832
    4. '=' → logprob: -13.250065803527832
    5. '.' → logprob: -13.625065803527832
    6. ')' → logprob: -14.625065803527832
    7. ' pop' → logprob: -14.750065803527832
    8. ',' → logprob: -15.000065803527832
    9. '	pop' → logprob: -15.250065803527832
    10. 'Pop' → logprob: -15.375065803527832

Token 421: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16028931736946106
    2. '()
' → logprob: -1.9102892875671387
    3. ')' → logprob: -10.285289764404297
    4. '()

' → logprob: -11.285289764404297
    5. '()
' → logprob: -12.035289764404297
    6. '(' → logprob: -12.035289764404297
    7. '                       ' → logprob: -13.285289764404297
    8. ')
' → logprob: -13.410289764404297
    9. '())' → logprob: -14.285289764404297
    10. '();' → logprob: -14.285289764404297

Token 422: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.19982178509235382
    2. '
' → logprob: -1.9498218297958374
    3. '                   ' → logprob: -3.324821710586548
    4. '                        
' → logprob: -6.699821949005127
    5. ' comp' → logprob: -7.949821949005127
    6. '               ' → logprob: -8.324821472167969
    7. ',' → logprob: -8.574821472167969
    8. '                           ' → logprob: -8.699821472167969
    9. '<|end|>' → logprob: -8.824821472167969
    10. '                    
' → logprob: -8.949821472167969

Token 423: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.004365798085927963
    2. 'comp' (adapté à ' comp') → logprob: -5.629365921020508
    3. '                       ' → logprob: -7.379365921020508
    4. '                   ' → logprob: -9.129365921020508
    5. '                           ' → logprob: -11.254365921020508
    6. '	comp' → logprob: -11.879365921020508
    7. '               ' → logprob: -12.129365921020508
    8. '           ' → logprob: -13.504365921020508
    9. '       ' → logprob: -13.504365921020508
    10. '   ' → logprob: -13.629365921020508

Token 424: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00028290803311392665
    2. '.' → logprob: -8.250283241271973
    3. ' .' → logprob: -11.125283241271973
    4. 'append' → logprob: -13.250283241271973
    5. '.app' → logprob: -13.375283241271973
    6. ')' → logprob: -13.875283241271973
    7. '.Append' → logprob: -14.375283241271973
    8. ').' → logprob: -14.750283241271973
    9. '.add' → logprob: -15.250283241271973
    10. '.ap' → logprob: -15.375283241271973

Token 425: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004098227713257074
    2. '(' → logprob: -5.504098415374756
    3. '(cx' → logprob: -10.879097938537598
    4. '(
' → logprob: -14.254097938537598
    5. '(x' → logprob: -15.879097938537598
    6. ' ((' → logprob: -16.504098892211914
    7. ' (' → logprob: -17.129098892211914
    8. '(c' → logprob: -17.254098892211914
    9. '[(' → logprob: -17.254098892211914
    10. '(

' → logprob: -17.504098892211914

Token 426: 'cx' (ID: 47207)
  Prédit: 'cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -7.822646693966817e-06
    2. ' cx' → logprob: -11.875007629394531
    3. '(cx' → logprob: -14.125007629394531
    4. '.cx' → logprob: -17.12500762939453
    5. 'c' → logprob: -18.00000762939453
    6. '
' → logprob: -18.62500762939453
    7. ')' → logprob: -19.37500762939453
    8. '   ' → logprob: -19.62500762939453
    9. 'cy' → logprob: -20.25000762939453
    10. 'x' → logprob: -20.25000762939453

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ' ,' → logprob: -11.250025749206543
    3. ',
' → logprob: -11.375025749206543
    4. ',c' → logprob: -14.625025749206543
    5. ',

' → logprob: -15.500025749206543
    6. '‌,' → logprob: -16.375024795532227
    7. '
' → logprob: -17.125024795532227
    8. ',\
' → logprob: -17.375024795532227
    9. '

' → logprob: -17.500024795532227
    10. '<|end|>' → logprob: -17.500024795532227

Token 428: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -2.7848862373502925e-05
    2. ' cy' → logprob: -10.500027656555176
    3. ' ' → logprob: -16.250028610229492
    4. 'cyj' → logprob: -16.375028610229492
    5. ' ' → logprob: -17.250028610229492
    6. '.cy' → logprob: -17.375028610229492
    7. '   ' → logprob: -18.250028610229492
    8. '
' → logprob: -18.250028610229492
    9. 'c' → logprob: -19.125028610229492
    10. ')' → logprob: -19.250028610229492

Token 429: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.030551359057426453
    2. '))
' → logprob: -3.5305514335632324
    3. ')' → logprob: -7.155551433563232
    4. ')
' → logprob: -11.030550956726074
    5. ' ))' → logprob: -14.030550956726074
    6. '))

' → logprob: -14.280550956726074
    7. '                       ' → logprob: -14.655550956726074
    8. '                   ' → logprob: -14.655550956726074
    9. '));' → logprob: -14.905550956726074
    10. ')))' → logprob: -15.405550956726074

Token 430: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006554892170242965
    2. '                   ' → logprob: -7.375655651092529
    3. ' for' → logprob: -11.125655174255371
    4. 'for' → logprob: -11.875655174255371
    5. '                           ' → logprob: -12.625655174255371
    6. '                        
' → logprob: -14.250655174255371
    7. '```' → logprob: -14.500655174255371
    8. '                        ' → logprob: -14.625655174255371
    9. ',' → logprob: -14.625655174255371
    10. '               ' → logprob: -14.750655174255371

Token 431: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016218038217630237
    2. ' for' → logprob: -8.750162124633789
    3. '                       ' → logprob: -13.125162124633789
    4. '                           ' → logprob: -14.000162124633789
    5. '   ' → logprob: -15.000162124633789
    6. '	for' → logprob: -15.125162124633789
    7. '           ' → logprob: -16.25016212463379
    8. '       ' → logprob: -16.62516212463379
    9. '                   ' → logprob: -16.87516212463379
    10. '                        
' → logprob: -17.62516212463379

Token 432: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.007421690970659256
    2. ' nx' → logprob: -5.007421493530273
    3. '(nx' → logprob: -7.257421493530273
    4. 'n' → logprob: -14.382421493530273
    5. 'nn' → logprob: -15.257421493530273
    6. '(' → logprob: -15.882421493530273
    7. '   ' → logprob: -16.507421493530273
    8. '```' → logprob: -16.632421493530273
    9. '(n' → logprob: -17.007421493530273
    10. '`' → logprob: -17.257421493530273

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -13.000003814697266
    3. ',n' → logprob: -13.625003814697266
    4. '_,' → logprob: -16.625003814697266
    5. 'n' → logprob: -18.125003814697266
    6. '```' → logprob: -18.375003814697266
    7. ',
' → logprob: -18.500003814697266
    8. '1' → logprob: -18.500003814697266
    9. '‌,' → logprob: -19.500003814697266
    10. ',int' → logprob: -20.625003814697266

Token 434: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.003180921310558915
    2. ' ny' → logprob: -5.753180980682373
    3. 'cy' → logprob: -12.753180503845215
    4. 'n' → logprob: -16.00318145751953
    5. 'Ny' → logprob: -17.00318145751953
    6. ',' → logprob: -17.25318145751953
    7. 'nyi' → logprob: -17.37818145751953
    8. 'NY' → logprob: -19.00318145751953
    9. 'py' → logprob: -19.12818145751953
    10. ' ' → logprob: -19.87818145751953

Token 435: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25193241238594055
    2. 'in' → logprob: -1.5019323825836182
    3. '	in' → logprob: -13.376932144165039
    4. 'n' → logprob: -15.376932144165039
    5. ' ' → logprob: -15.626932144165039
    6. 'In' → logprob: -15.751932144165039
    7. ')' → logprob: -15.751932144165039
    8. 's' → logprob: -15.876932144165039
    9. ',' → logprob: -16.12693214416504
    10. '                       ' → logprob: -16.50193214416504

Token 436: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0007100477814674377
    2. ' neighbors' → logprob: -7.2507100105285645
    3. 'neighbor' → logprob: -17.000709533691406
    4. 'ne' → logprob: -17.250709533691406
    5. '```' → logprob: -18.000709533691406
    6. '_neighbors' → logprob: -18.375709533691406
    7. '   ' → logprob: -18.375709533691406
    8. ' ' → logprob: -19.000709533691406
    9. 'Neighbors' → logprob: -19.625709533691406
    10. 'n' → logprob: -19.625709533691406

Token 437: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -1.759734732331708e-05
    2. '(nx' → logprob: -11.125017166137695
    3. '(' → logprob: -13.250017166137695
    4. ' (' → logprob: -14.000017166137695
    5. ')(' → logprob: -17.500017166137695
    6. '(x' → logprob: -17.750017166137695
    7. ')' → logprob: -17.875017166137695
    8. '(C' → logprob: -17.875017166137695
    9. '   ' → logprob: -18.250017166137695
    10. '       ' → logprob: -18.375017166137695

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.88418151892256e-05
    2. ' ,' → logprob: -9.875059127807617
    3. ',n' → logprob: -12.500059127807617
    4. ',
' → logprob: -12.625059127807617
    5. ',y' → logprob: -15.375059127807617
    6. ',

' → logprob: -17.875059127807617
    7. '
' → logprob: -18.000059127807617
    8. '```' → logprob: -18.000059127807617
    9. '‌,' → logprob: -18.250059127807617
    10. '   ' → logprob: -18.500059127807617

Token 439: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0019325626781210303
    2. 'ny' → logprob: -6.251932621002197
    3. ' cy' → logprob: -12.751932144165039
    4. '   ' → logprob: -14.626932144165039
    5. '
' → logprob: -15.501932144165039
    6. ' ny' → logprob: -15.876932144165039
    7. ' ' → logprob: -16.37693214416504
    8. 'dy' → logprob: -17.00193214416504
    9. 'ky' → logprob: -17.12693214416504
    10. 'py' → logprob: -17.62693214416504

Token 440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002953574061393738
    2. '):' → logprob: -5.87795352935791
    3. '                           ' → logprob: -9.75295352935791
    4. '):
' → logprob: -9.75295352935791
    5. '                       ' → logprob: -10.50295352935791
    6. '):

' → logprob: -12.87795352935791
    7. ':
' → logprob: -14.12795352935791
    8. ' ):
' → logprob: -14.25295352935791
    9. '                   ' → logprob: -15.12795352935791
    10. '():
' → logprob: -15.50295352935791

Token 441: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0004528374411165714
    2. '                       ' → logprob: -8.000452995300293
    3. ' if' → logprob: -9.750452995300293
    4. '                               ' → logprob: -11.000452995300293
    5. '                   ' → logprob: -11.500452995300293
    6. '           ' → logprob: -11.500452995300293
    7. '                            
' → logprob: -12.625452995300293
    8. '                            ' → logprob: -12.750452995300293
    9. '```' → logprob: -12.875452995300293
    10. '   ' → logprob: -13.000452995300293

Token 442: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4356110990047455
    2. '                               ' → logprob: -1.1856111288070679
    3. 'if' (adapté à ' if') → logprob: -3.0606110095977783
    4. '                           ' → logprob: -8.1856107711792
    5. '```' → logprob: -8.6856107711792
    6. '                                   ' → logprob: -8.8106107711792
    7. '               ' → logprob: -10.6856107711792
    8. '   ' → logprob: -10.9356107711792
    9. '
' → logprob: -11.1856107711792
    10. '                                       ' → logprob: -11.8106107711792

Token 443: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.667750358581543
    2. 'grid' → logprob: -1.042750358581543
    3. ' not' → logprob: -2.167750358581543
    4. ' grid' → logprob: -3.917750358581543
    5. '(not' → logprob: -9.167750358581543
    6. '(grid' → logprob: -9.417750358581543
    7. '0' → logprob: -9.917750358581543
    8. '   ' → logprob: -10.417750358581543
    9. ' ' → logprob: -11.167750358581543
    10. '                   ' → logprob: -11.292750358581543

Token 444: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -9.627176768844947e-05
    2. ' visited' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.12509536743164
    4. '
' → logprob: -17.50009536743164
    5. '           ' → logprob: -18.25009536743164
    6. ' ' → logprob: -19.00009536743164
    7. '       ' → logprob: -19.87509536743164
    8. '                   ' → logprob: -19.87509536743164
    9. ' 
' → logprob: -20.75009536743164
    10. '               ' → logprob: -21.12509536743164

Token 445: '[' (ID: 58)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.4740805923938751
    2. '[' → logprob: -0.9740805625915527
    3. '```' → logprob: -13.474081039428711
    4. 'ny' → logprob: -13.974081039428711
    5. ' [' → logprob: -14.974081039428711
    6. '
' → logprob: -15.724081039428711
    7. ',n' → logprob: -15.724081039428711
    8. 'n' → logprob: -15.849081039428711
    9. '   ' → logprob: -16.34908103942871
    10. '

' → logprob: -16.72408103942871

Token 446: 'ny' (ID: 3008)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.4019012451171875
    2. 'nx' → logprob: -1.6519012451171875
    3. '(nx' → logprob: -2.9019012451171875
    4. 'ny' → logprob: -3.1519012451171875
    5. '[' → logprob: -3.2769012451171875
    6. '][' → logprob: -6.2769012451171875
    7. '(n' → logprob: -6.7769012451171875
    8. 'n' → logprob: -8.401901245117188
    9. ' nx' → logprob: -8.526901245117188
    10. ' ny' → logprob: -9.151901245117188

Token 447: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.37162914872169495
    2. '[' → logprob: -1.3716291189193726
    3. '[n' → logprob: -2.871629238128662
    4. ']' → logprob: -9.996628761291504
    5. ')[' → logprob: -11.746628761291504
    6. '   ' → logprob: -12.371628761291504
    7. ''][' → logprob: -12.496628761291504
    8. '[
' → logprob: -12.496628761291504
    9. ' ][' → logprob: -12.871628761291504
    10. '```' → logprob: -12.871628761291504

Token 448: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.006141019053757191
    2. '(nx' → logprob: -5.256141185760498
    3. ' nx' → logprob: -7.381141185760498
    4. 'ny' → logprob: -8.38114070892334
    5. '[n' → logprob: -10.38114070892334
    6. 'x' → logprob: -11.63114070892334
    7. 'n' → logprob: -11.88114070892334
    8. '(n' → logprob: -13.38114070892334
    9. '[' → logprob: -13.50614070892334
    10. '][' → logprob: -13.63114070892334

Token 449: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22940878570079803
    2. 'and' → logprob: -1.9794087409973145
    3. ']' → logprob: -2.7294087409973145
    4. ')' → logprob: -6.4794087409973145
    5. '           ' → logprob: -10.854409217834473
    6. '               ' → logprob: -11.854409217834473
    7. '                   ' → logprob: -11.979409217834473
    8. '   ' → logprob: -12.354409217834473
    9. ' ]' → logprob: -12.729409217834473
    10. '                           ' → logprob: -13.604409217834473

Token 450: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931522488594055
    2. 'and' → logprob: -0.6931522488594055
    3. '   ' → logprob: -13.56815242767334
    4. '           ' → logprob: -13.69315242767334
    5. '               ' → logprob: -14.06815242767334
    6. '	and' → logprob: -14.56815242767334
    7. '                   ' → logprob: -15.06815242767334
    8. ' ' → logprob: -15.31815242767334
    9. '                       ' → logprob: -15.44315242767334
    10. '                           ' → logprob: -15.44315242767334

Token 451: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.006715370807796717
    2. ' grid' → logprob: -5.006715297698975
    3. '(grid' → logprob: -16.881715774536133
    4. '	grid' → logprob: -18.506715774536133
    5. '.grid' → logprob: -20.131715774536133
    6. '                           ' → logprob: -21.381715774536133
    7. ':grid' → logprob: -21.631715774536133
    8. ' ' → logprob: -22.006715774536133
    9. '   ' → logprob: -22.006715774536133
    10. '                       ' → logprob: -22.131715774536133

Token 452: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. 'ny' → logprob: -14.250001907348633
    3. '[
' → logprob: -14.625001907348633
    4. '```' → logprob: -14.750001907348633
    5. ' [' → logprob: -15.625001907348633
    6. '[y' → logprob: -16.250001907348633
    7. '
' → logprob: -16.750001907348633
    8. 'y' → logprob: -16.875001907348633
    9. 'def' → logprob: -17.000001907348633
    10. '[n' → logprob: -17.125001907348633

Token 453: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.026327935978770256
    2. '[' → logprob: -3.6513278484344482
    3. ' ny' → logprob: -11.026328086853027
    4. ']' → logprob: -12.901328086853027
    5. 'y' → logprob: -12.901328086853027
    6. 'n' → logprob: -13.401328086853027
    7. '][' → logprob: -14.401328086853027
    8. '[y' → logprob: -14.401328086853027
    9. '```' → logprob: -14.526328086853027
    10. 'nyi' → logprob: -14.651328086853027

Token 454: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4299769997596741
    2. '][' → logprob: -1.0549769401550293
    3. '[n' → logprob: -6.929976940155029
    4. ']' → logprob: -8.679977416992188
    5. '[y' → logprob: -10.304977416992188
    6. '}[' → logprob: -10.554977416992188
    7. '```' → logprob: -11.179977416992188
    8. ')[' → logprob: -11.429977416992188
    9. ''][' → logprob: -12.179977416992188
    10. '[
' → logprob: -12.304977416992188

Token 455: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.048890627920627594
    2. 'ny' → logprob: -3.0488905906677246
    3. '[' → logprob: -9.298891067504883
    4. 'x' → logprob: -9.548891067504883
    5. '[n' → logprob: -10.048891067504883
    6. '(nx' → logprob: -10.048891067504883
    7. ' nx' → logprob: -10.673891067504883
    8. ']' → logprob: -11.423891067504883
    9. '][' → logprob: -11.548891067504883
    10. '```' → logprob: -12.548891067504883

Token 456: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2822505235671997
    2. ']==' → logprob: -1.4072505235671997
    3. '==' → logprob: -6.90725040435791
    4. ' ==' → logprob: -9.78225040435791
    5. ' ]' → logprob: -10.40725040435791
    6. '']==' → logprob: -12.28225040435791
    7. '[' → logprob: -12.40725040435791
    8. '']' → logprob: -14.03225040435791
    9. ']=' → logprob: -14.03225040435791
    10. ')==' → logprob: -14.78225040435791

Token 457: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02346186153590679
    2. ' ==' → logprob: -3.7734618186950684
    3. ']==' → logprob: -8.523462295532227
    4. ']' → logprob: -11.773462295532227
    5. '==
' → logprob: -12.398462295532227
    6. ')==' → logprob: -13.023462295532227
    7. '=' → logprob: -13.148462295532227
    8. '===' → logprob: -14.773462295532227
    9. '']==' → logprob: -14.898462295532227
    10. '[' → logprob: -15.148462295532227

Token 458: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -5.836499985889532e-05
    2. ' digit' → logprob: -9.7500581741333
    3. 'd' → logprob: -18.500059127807617
    4. '-digit' → logprob: -19.250059127807617
    5. '   ' → logprob: -19.625059127807617
    6. 'digital' → logprob: -20.250059127807617
    7. ' ' → logprob: -20.500059127807617
    8. '_digit' → logprob: -20.750059127807617
    9. '```' → logprob: -20.875059127807617
    10. 'diamond' → logprob: -21.125059127807617

Token 459: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10320700705051422
    2. ':' → logprob: -2.3532071113586426
    3. '                           ' → logprob: -6.353207111358643
    4. '):
' → logprob: -7.353207111358643
    5. '                               ' → logprob: -7.603207111358643
    6. '                       ' → logprob: -10.478206634521484
    7. ' and' → logprob: -11.353206634521484
    8. '                   ' → logprob: -11.478206634521484
    9. ':

' → logprob: -11.478206634521484
    10. '):' → logprob: -11.603206634521484

Token 460: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0004886920796707273
    2. '                                   ' → logprob: -8.25048828125
    3. '                           ' → logprob: -9.00048828125
    4. ' visited' → logprob: -9.75048828125
    5. '                                       ' → logprob: -11.87548828125
    6. '							' → logprob: -11.87548828125
    7. 'visited' → logprob: -11.87548828125
    8. '                                
' → logprob: -13.00048828125
    9. '                       ' → logprob: -13.12548828125
    10. '               ' → logprob: -13.12548828125

Token 461: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.18725360929965973
    2. 'visited' (adapté à ' visited') → logprob: -1.9372535943984985
    3. '                               ' → logprob: -3.812253713607788
    4. '                                   ' → logprob: -5.437253475189209
    5. '                                       ' → logprob: -9.687253952026367
    6. '   ' → logprob: -10.062253952026367
    7. '                                ' → logprob: -10.812253952026367
    8. '                                           ' → logprob: -10.812253952026367
    9. '                                 ' → logprob: -11.312253952026367
    10. '                   ' → logprob: -11.687253952026367

Token 462: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '
' → logprob: -20.25
    3. '[
' → logprob: -20.25
    4. ' [' → logprob: -20.625
    5. 'True' → logprob: -20.625
    6. '```' → logprob: -20.625
    7. '=' → logprob: -20.875
    8. '   ' → logprob: -21.0
    9. '

' → logprob: -21.5
    10. '
' → logprob: -22.625

Token 463: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -1.6166903151315637e-05
    2. ' ny' → logprob: -11.125016212463379
    3. '[' → logprob: -13.625016212463379
    4. '   ' → logprob: -17.125015258789062
    5. 'yn' → logprob: -17.250015258789062
    6. 'ni' → logprob: -17.750015258789062
    7. ''ny' → logprob: -18.125015258789062
    8. 'nyi' → logprob: -18.125015258789062
    9. '    ' → logprob: -19.250015258789062
    10. 'n' → logprob: -19.250015258789062

Token 464: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1603350192308426
    2. '][' → logprob: -1.9103350639343262
    3. ']' → logprob: -9.785334587097168
    4. '   ' → logprob: -11.535334587097168
    5. ' ][' → logprob: -11.535334587097168
    6. '[n' → logprob: -12.160334587097168
    7. '```' → logprob: -12.285334587097168
    8. '       ' → logprob: -12.535334587097168
    9. ')[' → logprob: -13.160334587097168
    10. ' [' → logprob: -13.160334587097168

Token 465: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.006823000963777304
    2. 'ny' → logprob: -5.0068230628967285
    3. '[' → logprob: -9.88182258605957
    4. '(nx' → logprob: -10.00682258605957
    5. '[n' → logprob: -12.00682258605957
    6. ' nx' → logprob: -12.50682258605957
    7. '1' → logprob: -14.50682258605957
    8. 'x' → logprob: -15.00682258605957
    9. ' ny' → logprob: -15.88182258605957
    10. 'n' → logprob: -16.00682258605957

Token 466: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027343055233359337
    2. '=' → logprob: -4.152343273162842
    3. ']=' → logprob: -4.777343273162842
    4. ' =' → logprob: -5.902343273162842
    5. '=True' → logprob: -9.652342796325684
    6. ')' → logprob: -11.152342796325684
    7. ' ]' → logprob: -12.027342796325684
    8. '[' → logprob: -12.777342796325684
    9. 'True' → logprob: -13.277342796325684
    10. '                   ' → logprob: -14.152342796325684

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011072699911892414
    2. ' =' → logprob: -4.511072635650635
    3. '=True' → logprob: -11.136073112487793
    4. ']' → logprob: -12.011073112487793
    5. ']=' → logprob: -12.511073112487793
    6. '=
' → logprob: -15.511073112487793
    7. '[' → logprob: -16.386072158813477
    8. '           ' → logprob: -17.136072158813477
    9. '=False' → logprob: -17.511072158813477
    10. '                   ' → logprob: -17.636072158813477

Token 468: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.339278580620885e-06
    2. ' True' → logprob: -13.000001907348633
    3. '(True' → logprob: -20.250001907348633
    4. '=True' → logprob: -22.375001907348633
    5. '
' → logprob: -23.000001907348633
    6. 'False' → logprob: -24.125001907348633
    7. '.True' → logprob: -24.500001907348633
    8. '[' → logprob: -24.625001907348633
    9. 'true' → logprob: -24.750001907348633
    10. 'TRUE' → logprob: -25.000001907348633

Token 469: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0012947621289640665
    2. ',' → logprob: -7.5012946128845215
    3. '							' → logprob: -8.25129508972168
    4. ' stack' → logprob: -8.87629508972168
    5. ')' → logprob: -9.50129508972168
    6. 'stack' → logprob: -9.62629508972168
    7. '<|end|>' → logprob: -9.62629508972168
    8. '(stack' → logprob: -10.12629508972168
    9. '                                
' → logprob: -11.12629508972168
    10. '```' → logprob: -11.37629508972168

Token 470: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0008986006141640246
    2. '							' → logprob: -7.625898838043213
    3. ' stack' → logprob: -9.250898361206055
    4. 'stack' → logprob: -9.500898361206055
    5. ',' → logprob: -9.875898361206055
    6. '<|end|>' → logprob: -10.125898361206055
    7. '                                
' → logprob: -10.625898361206055
    8. '                                ' → logprob: -10.750898361206055
    9. '```' → logprob: -10.750898361206055
    10. ')' → logprob: -10.875898361206055

Token 471: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.575940728187561
    2. ' stack' → logprob: -0.825940728187561
    3. '                               ' → logprob: -14.45094108581543
    4. '	stack' → logprob: -14.95094108581543
    5. '(stack' → logprob: -15.32594108581543
    6. 'Stack' → logprob: -16.57594108581543
    7. '                                   ' → logprob: -16.70094108581543
    8. '_stack' → logprob: -17.07594108581543
    9. '.stack' → logprob: -17.70094108581543
    10. 'stackoverflow' → logprob: -17.82594108581543

Token 472: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2842308680992573e-05
    2. '.' → logprob: -10.750022888183594
    3. '.app' → logprob: -14.375022888183594
    4. '.extend' → logprob: -14.375022888183594
    5. 'append' → logprob: -16.375022888183594
    6. ' .' → logprob: -16.500022888183594
    7. '.Append' → logprob: -17.875022888183594
    8. '.APP' → logprob: -18.875022888183594
    9. '.pop' → logprob: -19.000022888183594
    10. '	append' → logprob: -19.250022888183594

Token 473: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.860340752406046e-05
    2. '(' → logprob: -9.8750581741333
    3. '(nx' → logprob: -11.8750581741333
    4. '(((' → logprob: -16.250059127807617
    5. '[(' → logprob: -17.750059127807617
    6. ' ((' → logprob: -18.000059127807617
    7. '(
' → logprob: -18.250059127807617
    8. '(n' → logprob: -18.375059127807617
    9. '```' → logprob: -19.625059127807617
    10. ')((' → logprob: -20.000059127807617

Token 474: 'nx' (ID: 45103)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.6336506009101868
    2. 'nx' → logprob: -0.7586506009101868
    3. ' nx' → logprob: -7.383650779724121
    4. ' (' → logprob: -8.133650779724121
    5. '(n' → logprob: -9.258650779724121
    6. '   ' → logprob: -11.008650779724121
    7. 'n' → logprob: -11.883650779724121
    8. ')' → logprob: -12.508650779724121
    9. 'ny' → logprob: -13.008650779724121
    10. '```' → logprob: -13.258650779724121

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006422612932510674
    2. ',n' → logprob: -7.5006422996521
    3. '(nx' → logprob: -9.875641822814941
    4. 'nx' → logprob: -11.125641822814941
    5. 'n' → logprob: -11.125641822814941
    6. ' ,' → logprob: -12.000641822814941
    7. '(n' → logprob: -14.500641822814941
    8. ',
' → logprob: -14.625641822814941
    9. '```' → logprob: -14.875641822814941
    10. '[' → logprob: -15.750641822814941

Token 476: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0003849133790936321
    2. ' ny' → logprob: -7.87538480758667
    3. 'nx' → logprob: -12.500385284423828
    4. 'nyi' → logprob: -15.250385284423828
    5. 'n' → logprob: -15.375385284423828
    6. '(n' → logprob: -15.625385284423828
    7. '```' → logprob: -16.500385284423828
    8. '(nx' → logprob: -16.750385284423828
    9. '
' → logprob: -17.000385284423828
    10. 'nyt' → logprob: -17.000385284423828

Token 477: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12695550918579102
    2. ')' → logprob: -2.126955509185791
    3. ')))' → logprob: -11.001955032348633
    4. '))
' → logprob: -11.751955032348633
    5. ')
' → logprob: -14.501955032348633
    6. ' ))' → logprob: -14.501955032348633
    7. ')}' → logprob: -14.876955032348633
    8. '))))' → logprob: -15.376955032348633
    9. '                           ' → logprob: -15.501955032348633
    10. '),' → logprob: -15.626955032348633

Token 478: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1771555095911026
    2. ')' → logprob: -2.4271554946899414
    3. '<|end|>' → logprob: -3.3021554946899414
    4. '```' → logprob: -4.052155494689941
    5. '<|end|>' → logprob: -5.302155494689941
    6. '                               ' → logprob: -5.927155494689941
    7. '                           ' → logprob: -5.927155494689941
    8. '               ' → logprob: -6.677155494689941
    9. '   ' → logprob: -6.677155494689941
    10. '           ' → logprob: -7.052155494689941

Token 479: ' pieces' (ID: 12762)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05993855372071266
    2. '                   ' → logprob: -2.934938669204712
    3. '<|end|>' → logprob: -5.934938430786133
    4. ' pieces' → logprob: -7.309938430786133
    5. '   ' → logprob: -7.684938430786133
    6. 'pieces' (adapté à ' pieces') → logprob: -7.934938430786133
    7. '```' → logprob: -8.059938430786133
    8. '<|end|>' → logprob: -8.809938430786133
    9. '           ' → logprob: -9.309938430786133
    10. '
' → logprob: -9.434938430786133

Token 480: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001175343873910606
    2. '.' → logprob: -6.751175403594971
    3. 'append' → logprob: -13.001174926757812
    4. '.app' → logprob: -13.751174926757812
    5. '.Append' → logprob: -14.376174926757812
    6. ' .' → logprob: -14.751174926757812
    7. '.ap' → logprob: -15.501174926757812
    8. '.extend' → logprob: -15.751174926757812
    9. ').' → logprob: -15.876174926757812
    10. '_append' → logprob: -16.501174926757812

Token 481: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. '((' → logprob: -17.25
    4. 'comp' → logprob: -17.375
    5. ' (' → logprob: -18.125
    6. '(com' → logprob: -19.375
    7. '	comp' → logprob: -20.25
    8. ' comp' → logprob: -20.875
    9. '(c' → logprob: -21.0
    10. '([' → logprob: -21.25

Token 482: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ')
' → logprob: -12.375005722045898
    3. '       ' → logprob: -14.125005722045898
    4. ' )' → logprob: -15.125005722045898
    5. '))' → logprob: -15.125005722045898
    6. '                   ' → logprob: -15.375005722045898
    7. '               ' → logprob: -16.5000057220459
    8. '   ' → logprob: -17.0000057220459
    9. '           ' → logprob: -17.2500057220459
    10. ']' → logprob: -18.2500057220459

Token 483: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6225473284721375
    2. '       ' → logprob: -1.2475473880767822
    3. '<|end|>' → logprob: -1.9975473880767822
    4. '        
' → logprob: -4.372547149658203
    5. '   ' → logprob: -4.497547149658203
    6. '    
' → logprob: -5.122547149658203
    7. '<|end|>' → logprob: -5.497547149658203
    8. '```' → logprob: -5.622547149658203
    9. '

' → logprob: -7.247547149658203
    10. '  
' → logprob: -7.622547149658203

Token 484: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1508541107177734
    2. 'piece' → logprob: -1.4008541107177734
    3. 'pieces' → logprob: -2.6508541107177734
    4. 'for' → logprob: -3.0258541107177734
    5. 'adj' → logprob: -3.2758541107177734
    6. '       ' → logprob: -3.4008541107177734
    7. 'edges' → logprob: -3.7758541107177734
    8. 'max' → logprob: -3.7758541107177734
    9. 'def' → logprob: -3.7758541107177734
    10. 'results' → logprob: -4.025854110717773

Token 485: ' Build' (ID: 10885)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9152737855911255
    2. 'for' → logprob: -1.9152737855911255
    3. 'results' → logprob: -2.790273666381836
    4. 'piece' → logprob: -2.790273666381836
    5. 'def' → logprob: -3.415273666381836
    6. 'adj' → logprob: -3.540273666381836
    7. 'edges' → logprob: -3.915273666381836
    8. 'max' → logprob: -4.040273666381836
    9. 'pieces' → logprob: -4.040273666381836
    10. 'result' → logprob: -4.540273666381836

Token 486: ' a' (ID: 261)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3567395508289337
    2. 'graph' → logprob: -1.9817395210266113
    3. 'edges' → logprob: -3.4817395210266113
    4. 'piece' → logprob: -3.6067395210266113
    5. 'from' → logprob: -3.8567395210266113
    6. '#' → logprob: -4.231739521026611
    7. ' adj' → logprob: -4.856739521026611
    8. ' adjacency' → logprob: -4.981739521026611
    9. 'import' → logprob: -5.106739521026611
    10. 'pos' → logprob: -5.231739521026611

Token 487: ' map' (ID: 4014)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.13074754178524017
    2. 'adj' → logprob: -2.6307475566864014
    3. '#' → logprob: -4.005747318267822
    4. 'from' → logprob: -5.130747318267822
    5. 'piece' → logprob: -5.255747318267822
    6. 'pieces' → logprob: -5.880747318267822
    7. ' graph' → logprob: -6.005747318267822
    8. 'neighbor' → logprob: -6.005747318267822
    9. 'edges' → logprob: -6.130747318267822
    10. 'connections' → logprob: -6.755747318267822

Token 488: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2429665327072144
    2. ' from' → logprob: -1.4929665327072144
    3. ' =' → logprob: -1.7429665327072144
    4. '       ' → logprob: -2.492966651916504
    5. 'piece' → logprob: -3.242966651916504
    6. 'pos' → logprob: -3.617966651916504
    7. ' piece' → logprob: -3.742966651916504
    8. '=' → logprob: -3.742966651916504
    9. ' of' → logprob: -3.867966651916504
    10. ':' → logprob: -4.367966651916504

Token 489: ' block' (ID: 4355)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1017495393753052
    2. 'piece' → logprob: -1.8517495393753052
    3. 'pos' → logprob: -1.9767495393753052
    4. 'block' → logprob: -2.2267494201660156
    5. 'cell' → logprob: -2.4767494201660156
    6. '(piece' → logprob: -2.7267494201660156
    7. 'position' → logprob: -3.6017494201660156
    8. 'coord' → logprob: -4.101749420166016
    9. ' (' → logprob: -4.226749420166016
    10. 'coordinate' → logprob: -4.601749420166016

Token 490: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.13715477287769318
    2. ' to' → logprob: -2.2621548175811768
    3. '_positions' → logprob: -4.637154579162598
    4. 'to' → logprob: -4.887154579162598
    5. '_pos' → logprob: -5.762154579162598
    6. '_position' → logprob: -7.262154579162598
    7. '_coord' → logprob: -7.262154579162598
    8. '_coords' → logprob: -7.387154579162598
    9. ' positions' → logprob: -7.637154579162598
    10. 'positions' → logprob: -8.012154579162598

Token 491: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0011016374919563532
    2. ' piece' → logprob: -7.876101493835449
    3. 'which' → logprob: -8.12610149383545
    4. '(piece' → logprob: -8.37610149383545
    5. ' which' → logprob: -8.75110149383545
    6. 'piec' → logprob: -10.62610149383545
    7. 'block' → logprob: -12.87610149383545
    8. 'index' → logprob: -12.87610149383545
    9. 'pie' → logprob: -13.25110149383545
    10. '_piece' → logprob: -13.25110149383545

Token 492: ' id' (ID: 1211)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.751220166683197
    2. 'block' → logprob: -0.751220166683197
    3. '_block' → logprob: -3.751220226287842
    4. '_map' → logprob: -4.251220226287842
    5. '_id' → logprob: -5.251220226287842
    6. 'id' → logprob: -5.626220226287842
    7. '=' → logprob: -6.251220226287842
    8. ':' → logprob: -6.376220226287842
    9. ' block' → logprob: -6.626220226287842
    10. '   ' → logprob: -6.626220226287842

Token 493: '
' (ID: 198)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.08084982633590698
    2. ' block' → logprob: -2.7058498859405518
    3. '       ' → logprob: -5.205849647521973
    4. '
' → logprob: -6.705849647521973
    5. '   ' → logprob: -6.955849647521973
    6. ':' → logprob: -7.080849647521973
    7. ' =' → logprob: -7.205849647521973
    8. 'mapping' → logprob: -7.580849647521973
    9. 'map' → logprob: -8.705849647521973
    10. ',' → logprob: -8.830849647521973

Token 494: '       ' (ID: 309)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.009285066276788712
    2. ' block' → logprob: -5.009284973144531
    3. '       ' → logprob: -6.509284973144531
    4. 'piece' → logprob: -7.509284973144531
    5. '   ' → logprob: -8.259284973144531
    6. '
' → logprob: -9.509284973144531
    7. 'map' → logprob: -9.634284973144531
    8. 'mapping' → logprob: -10.259284973144531
    9. '```' → logprob: -10.509284973144531
    10. 'pos' → logprob: -11.259284973144531

Token 495: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' (adapté à ' block') → logprob: -0.006005940958857536
    2. ' block' → logprob: -5.881005764007568
    3. 'piece' → logprob: -5.881005764007568
    4. 'pos' → logprob: -8.006006240844727
    5. 'cell' → logprob: -11.006006240844727
    6. 'point' → logprob: -11.131006240844727
    7. '   ' → logprob: -11.256006240844727
    8. 'id' → logprob: -12.131006240844727
    9. '```' → logprob: -12.256006240844727
    10. ' piece' → logprob: -12.506006240844727

Token 496: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.05018110200762749
    2. '_map' → logprob: -3.0501811504364014
    3. '_id' → logprob: -6.550180912017822
    4. '_piece' → logprob: -9.55018138885498
    5. 's' → logprob: -9.67518138885498
    6. '_ids' → logprob: -11.92518138885498
    7. '2' → logprob: -12.42518138885498
    8. '_in' → logprob: -12.42518138885498
    9. '_pos' → logprob: -12.55018138885498
    10. 'map' → logprob: -12.67518138885498

Token 497: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0007825878565199673
    2. '_p' → logprob: -7.375782489776611
    3. 'piece' → logprob: -8.87578296661377
    4. '_id' → logprob: -11.50078296661377
    5. 'id' → logprob: -13.00078296661377
    6. 'piec' → logprob: -13.62578296661377
    7. '_block' → logprob: -13.62578296661377
    8. '_pid' → logprob: -14.62578296661377
    9. '(piece' → logprob: -15.25078296661377
    10. ' piece' → logprob: -15.62578296661377

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32125505805015564
    2. ' =' → logprob: -1.321255087852478
    3. '_id' → logprob: -5.196255207061768
    4. 'id' → logprob: -6.071255207061768
    5. 's' → logprob: -10.94625473022461
    6. '[' → logprob: -10.94625473022461
    7. '_' → logprob: -11.32125473022461
    8. 'ID' → logprob: -11.32125473022461
    9. '{' → logprob: -11.69625473022461
    10. '={}' → logprob: -11.69625473022461

Token 499: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0006498866132460535
    2. ' {}' → logprob: -7.750649929046631
    3. '[[' → logprob: -9.250649452209473
    4. '{}
' → logprob: -9.500649452209473
    5. '{' → logprob: -10.500649452209473
    6. '[' → logprob: -11.500649452209473
    7. 'dict' → logprob: -11.750649452209473
    8. ' dict' → logprob: -14.125649452209473
    9. ' [[' → logprob: -14.375649452209473
    10. ' {}
' → logprob: -14.500649452209473

Token 500: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5023856163024902
    2. ' for' → logprob: -1.5023856163024902
    3. '       ' → logprob: -2.0023856163024902
    4. '[' → logprob: -4.12738561630249
    5. '   ' → logprob: -5.00238561630249
    6. '[(' → logprob: -5.75238561630249
    7. '[
' → logprob: -6.12738561630249
    8. '[x' → logprob: -6.37738561630249
    9. '        
' → logprob: -6.87738561630249
    10. ' 
' → logprob: -6.87738561630249

Token 501: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00043138445471413434
    2. '       ' → logprob: -8.375431060791016
    3. 'piece' → logprob: -8.750431060791016
    4. ' for' → logprob: -10.125431060791016
    5. 'pid' → logprob: -13.875431060791016
    6. '```' → logprob: -14.500431060791016
    7. 'block' → logprob: -15.500431060791016
    8. 'token' → logprob: -15.500431060791016
    9. '
' → logprob: -16.500431060791016
    10. '	for' → logprob: -16.625431060791016

Token 502: ' i' (ID: 575)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.583979070186615
    2. 'i' → logprob: -0.833979070186615
    3. 'piece' → logprob: -5.45897912979126
    4. ' pid' → logprob: -6.08397912979126
    5. ' i' → logprob: -6.70897912979126
    6. 'pi' → logprob: -8.708978652954102
    7. 'id' → logprob: -10.458978652954102
    8. 'p' → logprob: -10.833978652954102
    9. 'idx' → logprob: -11.208978652954102
    10. ' piece' → logprob: -11.458978652954102

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004813034553080797
    2. ' ,' → logprob: -6.129813194274902
    3. ' in' → logprob: -6.379813194274902
    4. ',p' → logprob: -7.629813194274902
    5. 'in' → logprob: -8.004813194274902
    6. ',(' → logprob: -9.379813194274902
    7. ',in' → logprob: -12.379813194274902
    8. ',x' → logprob: -13.004813194274902
    9. ',e' → logprob: -13.129813194274902
    10. ',t' → logprob: -13.254813194274902

Token 504: ' piece' (ID: 9047)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.3267602026462555
    2. 'piece' → logprob: -1.326760172843933
    3. ' comp' → logprob: -4.826760292053223
    4. ' piece' → logprob: -5.576760292053223
    5. 'p' → logprob: -7.326760292053223
    6. 'cells' → logprob: -8.076760292053223
    7. 'blocks' → logprob: -8.201760292053223
    8. 'block' → logprob: -8.451760292053223
    9. 'pc' → logprob: -9.951760292053223
    10. 'part' → logprob: -10.451760292053223

Token 505: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6339837312698364
    2. ' in' → logprob: -0.7589837312698364
    3. ',' → logprob: -6.633983612060547
    4. '_in' → logprob: -10.508983612060547
    5. ',in' → logprob: -11.633983612060547
    6. 's' → logprob: -11.883983612060547
    7. '   ' → logprob: -12.633983612060547
    8. ' ,' → logprob: -12.758983612060547
    9. '	in' → logprob: -13.008983612060547
    10. ' ' → logprob: -13.133983612060547

Token 506: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06196948140859604
    2. ' enumerate' → logprob: -2.811969518661499
    3. 'pieces' → logprob: -13.561969757080078
    4. 'en' → logprob: -15.686969757080078
    5. '   ' → logprob: -16.436969757080078
    6. 'range' → logprob: -16.811969757080078
    7. 'enum' → logprob: -17.311969757080078
    8. '.enumer' → logprob: -17.561969757080078
    9. '```' → logprob: -17.686969757080078
    10. '  ' → logprob: -17.811969757080078

Token 507: '(p' (ID: 2407)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.06689442694187164
    2. '(p' → logprob: -2.81689453125
    3. ' pieces' → logprob: -5.31689453125
    4. '(piece' → logprob: -12.44189453125
    5. ' (' → logprob: -14.06689453125
    6. 'p' → logprob: -14.06689453125
    7. '(' → logprob: -14.69189453125
    8. ')' → logprob: -15.44189453125
    9. '   ' → logprob: -15.56689453125
    10. 'piece' → logprob: -16.44189453125

Token 508: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.0005637573776766658
    2. 'pieces' → logprob: -7.500563621520996
    3. 'iece' → logprob: -12.125563621520996
    4. ' pieces' → logprob: -13.375563621520996
    5. 'e' → logprob: -13.750563621520996
    6. 'ec' → logprob: -13.750563621520996
    7. 'ece' → logprob: -14.625563621520996
    8. '#' → logprob: -14.750563621520996
    9. '```' → logprob: -15.875563621520996
    10. 'ie' → logprob: -16.125564575195312

Token 509: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0031373165547847748
    2. '):' → logprob: -5.878137111663818
    3. ':
' → logprob: -8.378137588500977
    4. ':' → logprob: -9.503137588500977
    5. '       ' → logprob: -11.503137588500977
    6. '   ' → logprob: -11.628137588500977
    7. '):
' → logprob: -11.753137588500977
    8. '():
' → logprob: -14.628137588500977
    9. ' ):
' → logprob: -15.378137588500977
    10. ']:
' → logprob: -16.128137588500977

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04800011217594147
    2. '   ' → logprob: -3.2980000972747803
    3. ' for' → logprob: -5.048000335693359
    4. '       ' → logprob: -5.798000335693359
    5. ':' → logprob: -9.17300033569336
    6. '```' → logprob: -9.29800033569336
    7. 'for' → logprob: -9.67300033569336
    8. ':
' → logprob: -9.92300033569336
    9. '<|end|>' → logprob: -10.42300033569336
    10. '	   ' → logprob: -10.42300033569336

Token 511: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28872057795524597
    2. '   ' → logprob: -2.1637206077575684
    3. '           ' → logprob: -2.2887206077575684
    4. '               ' → logprob: -3.4137206077575684
    5. 'for' (adapté à ' for') → logprob: -7.288720607757568
    6. '       ' → logprob: -7.913720607757568
    7. ' ' → logprob: -8.41372013092041
    8. '	for' → logprob: -8.66372013092041
    9. '	       ' → logprob: -9.78872013092041
    10. '<|end|>' → logprob: -10.91372013092041

Token 512: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005322697106748819
    2. '(x' → logprob: -5.2553229331970215
    3. ' x' → logprob: -9.755322456359863
    4. ' (' → logprob: -10.505322456359863
    5. 'block' → logprob: -13.130322456359863
    6. '   ' → logprob: -14.380322456359863
    7. 'bx' → logprob: -14.880322456359863
    8. '(' → logprob: -15.255322456359863
    9. ' ' → logprob: -16.63032341003418
    10. 'px' → logprob: -16.75532341003418

Token 513: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.25
    3. 'bx' → logprob: -17.625
    4. '(x' → logprob: -17.75
    5. 'px' → logprob: -18.5
    6. '   ' → logprob: -18.75
    7. ')x' → logprob: -18.875
    8. 'xx' → logprob: -20.25
    9. 'block' → logprob: -21.875
    10. '_x' → logprob: -22.0

Token 514: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018164223060011864
    2. ',y' → logprob: -4.018164157867432
    3. ' ,' → logprob: -11.26816463470459
    4. ',x' → logprob: -13.76816463470459
    5. ',
' → logprob: -14.64316463470459
    6. 'y' → logprob: -17.268163681030273
    7. ',user' → logprob: -17.393163681030273
    8. ',Y' → logprob: -18.143163681030273
    9. '_,' → logprob: -18.768163681030273
    10. ',

' → logprob: -19.143163681030273

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044914212776347995
    2. ' )' → logprob: -7.875449180603027
    3. '),' → logprob: -10.500449180603027
    4. ',' → logprob: -11.125449180603027
    5. ' in' → logprob: -11.375449180603027
    6. 'in' → logprob: -12.125449180603027
    7. ',)' → logprob: -12.125449180603027
    8. ')
' → logprob: -13.625449180603027
    9. '   ' → logprob: -13.750449180603027
    10. ')x' → logprob: -14.875449180603027

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859691113233566
    2. 'in' → logprob: -3.0485968589782715
    3. ')' → logprob: -12.79859733581543
    4. ',' → logprob: -12.92359733581543
    5. '	in' → logprob: -12.92359733581543
    6. '_in' → logprob: -14.42359733581543
    7. ' ' → logprob: -15.04859733581543
    8. 'In' → logprob: -15.29859733581543
    9. '   ' → logprob: -15.54859733581543
    10. '    ' → logprob: -16.29859733581543

Token 517: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.014182545244693756
    2. ' piece' → logprob: -4.2641825675964355
    3. '(piece' → logprob: -10.889182090759277
    4. '   ' → logprob: -15.389182090759277
    5. 'piec' → logprob: -16.264183044433594
    6. '_piece' → logprob: -18.264183044433594
    7. 'pie' → logprob: -18.514183044433594
    8. 'pieces' → logprob: -18.514183044433594
    9. ' ' → logprob: -18.764183044433594
    10. '       ' → logprob: -19.514183044433594

Token 518: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25227975845336914
    2. ':
' → logprob: -1.5022797584533691
    3. '):
' → logprob: -8.252279281616211
    4. '):' → logprob: -9.877279281616211
    5. '   ' → logprob: -11.377279281616211
    6. ',' → logprob: -11.627279281616211
    7. ':
' → logprob: -11.877279281616211
    8. '       ' → logprob: -12.127279281616211
    9. ')' → logprob: -13.252279281616211
    10. ']:' → logprob: -13.877279281616211

Token 519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000865487614646554
    2. ' block' → logprob: -7.250865459442139
    3. '           ' → logprob: -9.250865936279297
    4. '                   ' → logprob: -10.625865936279297
    5. '	           ' → logprob: -12.250865936279297
    6. 'block' → logprob: -12.250865936279297
    7. '                       ' → logprob: -12.375865936279297
    8. '(block' → logprob: -12.625865936279297
    9. '       ' → logprob: -12.750865936279297
    10. '	block' → logprob: -12.750865936279297

Token 520: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.7082909345626831
    2. 'block' (adapté à ' block') → logprob: -0.7082909345626831
    3. '               ' → logprob: -4.208291053771973
    4. '	block' → logprob: -9.958291053771973
    5. '                   ' → logprob: -10.333291053771973
    6. '   ' → logprob: -10.333291053771973
    7. '           ' → logprob: -10.833291053771973
    8. '       ' → logprob: -11.708291053771973
    9. '(block' → logprob: -12.208291053771973
    10. '                ' → logprob: -12.583291053771973

Token 521: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '   ' → logprob: -18.625
    3. ' _' → logprob: -19.25
    4. '[(' → logprob: -19.875
    5. 'to' → logprob: -20.125
    6. '
' → logprob: -20.75
    7. '=' → logprob: -21.0
    8. '       ' → logprob: -21.0
    9. '```' → logprob: -21.25
    10. ',_' → logprob: -21.625

Token 522: '_piece' (ID: 126000)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5514403581619263
    2. '_piece' → logprob: -0.9264403581619263
    3. ' (' → logprob: -4.176440238952637
    4. '_(' → logprob: -5.051440238952637
    5. '_' → logprob: -5.676440238952637
    6. '(' → logprob: -6.926440238952637
    7. 'piece' → logprob: -8.051440238952637
    8. '_block' → logprob: -8.176440238952637
    9. '_p' → logprob: -8.426440238952637
    10. '
' → logprob: -8.801440238952637

Token 523: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.1318875446449965e-05
    2. '[x' → logprob: -10.250041007995605
    3. '[' → logprob: -12.125041007995605
    4. '   ' → logprob: -16.125041961669922
    5. ' [(' → logprob: -16.125041961669922
    6. '[
' → logprob: -16.500041961669922
    7. '(x' → logprob: -16.750041961669922
    8. '[[' → logprob: -17.000041961669922
    9. '
' → logprob: -17.875041961669922
    10. '[((' → logprob: -17.875041961669922

Token 524: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.125
    3. ')x' → logprob: -19.5
    4. '(x' → logprob: -21.125
    5. '   ' → logprob: -21.25
    6. '	x' → logprob: -21.5
    7. '"x' → logprob: -21.75
    8. '{x' → logprob: -22.0
    9. '
' → logprob: -22.375
    10. ' ' → logprob: -22.625

Token 525: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.06205002963542938
    2. ',' → logprob: -2.8120501041412354
    3. ' ,' → logprob: -9.437049865722656
    4. ',
' → logprob: -14.187049865722656
    5. ',x' → logprob: -14.187049865722656
    6. ',user' → logprob: -14.937049865722656
    7. ',Y' → logprob: -15.437049865722656
    8. 'y' → logprob: -15.687049865722656
    9. '```' → logprob: -16.062049865722656
    10. '<|end|>' → logprob: -16.187049865722656

Token 526: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1010046973824501
    2. ']' → logprob: -2.3510046005249023
    3. ')' → logprob: -7.226004600524902
    4. ']=' → logprob: -10.351004600524902
    5. ' ]' → logprob: -10.851004600524902
    6. '])' → logprob: -11.726004600524902
    7. ' )' → logprob: -11.726004600524902
    8. ']]' → logprob: -13.726004600524902
    9. '   ' → logprob: -14.726004600524902
    10. ']
' → logprob: -14.726004600524902

Token 527: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03832397982478142
    2. ' =' → logprob: -3.2883238792419434
    3. ']' → logprob: -8.788324356079102
    4. ']=' → logprob: -9.163324356079102
    5. '=i' → logprob: -11.288324356079102
    6. ')=' → logprob: -11.788324356079102
    7. ')' → logprob: -12.288324356079102
    8. '[' → logprob: -15.538324356079102
    9. '[i' → logprob: -16.4133243560791
    10. ' ' → logprob: -16.6633243560791

Token 528: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006715370807796717
    2. ' i' → logprob: -5.006715297698975
    3. '	i' → logprob: -18.131715774536133
    4. '   ' → logprob: -19.131715774536133
    5. ' ' → logprob: -21.006715774536133
    6. '(i' → logprob: -21.381715774536133
    7. '{i' → logprob: -21.881715774536133
    8. ')i' → logprob: -21.881715774536133
    9. '[i' → logprob: -22.131715774536133
    10. '_i' → logprob: -22.506715774536133

Token 529: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2127203345298767
    2. '       ' → logprob: -2.2127203941345215
    3. '<|end|>' → logprob: -3.4627203941345215
    4. '

' → logprob: -3.7127203941345215
    5. '        
' → logprob: -4.0877203941345215
    6. '
' → logprob: -6.7127203941345215
    7. '#' → logprob: -6.7127203941345215
    8. ',' → logprob: -6.9627203941345215
    9. '        

' → logprob: -7.0877203941345215
    10. ')' → logprob: -7.5252203941345215

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062136631458997726
    2. '#' → logprob: -3.812136650085449
    3. '
' → logprob: -4.437136650085449
    4. '        
' → logprob: -4.437136650085449
    5. 'edges' → logprob: -5.187136650085449
    6. 'adj' → logprob: -6.187136650085449
    7. 'down' → logprob: -6.937136650085449
    8. 'neighbors' → logprob: -7.437136650085449
    9. '```' → logprob: -7.812136650085449
    10. 'gravity' → logprob: -7.812136650085449

Token 531: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5672523975372314
    2. '#' (adapté à ' #') → logprob: -1.5672523975372314
    3. '       ' → logprob: -2.0672523975372314
    4. 'graph' → logprob: -3.6922523975372314
    5. 'piece' → logprob: -4.192252159118652
    6. 'edges' → logprob: -4.442252159118652
    7. 'neighbors' → logprob: -4.817252159118652
    8. '   ' → logprob: -5.067252159118652
    9. 'connections' → logprob: -5.692252159118652
    10. 'pieces' → logprob: -5.692252159118652

Token 532: ' Find' (ID: 9764)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8781965374946594
    2. '#' → logprob: -1.0031964778900146
    3. 'above' → logprob: -3.1281964778900146
    4. 'graph' → logprob: -3.3781964778900146
    5. 'piece' → logprob: -3.7531964778900146
    6. 'edges' → logprob: -4.753196716308594
    7. 'connections' → logprob: -4.753196716308594
    8. 'in' → logprob: -4.753196716308594
    9. '   ' → logprob: -4.878196716308594
    10. 'below' → logprob: -5.003196716308594

Token 533: ' parent' (ID: 5980)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.5506610870361328
    2. 'support' → logprob: -1.6756610870361328
    3. '#' → logprob: -2.050661087036133
    4. 'supports' → logprob: -2.425661087036133
    5. 'the' → logprob: -2.550661087036133
    6. 'all' → logprob: -2.925661087036133
    7. '   ' → logprob: -3.300661087036133
    8. 'connections' → logprob: -3.800661087036133
    9. 'dependencies' → logprob: -4.425661087036133
    10. 'for' → logprob: -4.550661087036133

Token 534: ' piece' (ID: 9047)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006891316268593073
    2. '=' → logprob: -5.256891250610352
    3. 's' → logprob: -6.631891250610352
    4. '_p' → logprob: -8.881891250610352
    5. '=[]' → logprob: -9.506891250610352
    6. '_parent' → logprob: -10.756891250610352
    7. '_piece' → logprob: -11.131891250610352
    8. '_ids' → logprob: -11.256891250610352
    9. '=[' → logprob: -11.506891250610352
    10. '=[]
' → logprob: -11.631891250610352

Token 535: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4687696397304535
    2. 's' → logprob: -1.4687696695327759
    3. '=' → logprob: -1.9687696695327759
    4. '_p' → logprob: -7.343769550323486
    5. '_of' → logprob: -7.343769550323486
    6. '_ids' → logprob: -7.343769550323486
    7. '_parent' → logprob: -7.343769550323486
    8. 'of' → logprob: -8.093770027160645
    9. '=
' → logprob: -8.593770027160645
    10. '   ' → logprob: -8.718770027160645

Token 536: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12043162435293198
    2. 'each' → logprob: -3.245431661605835
    3. ' i' → logprob: -3.495431661605835
    4. ' each' → logprob: -3.870431661605835
    5. 'piece' → logprob: -3.995431661605835
    6. ' piece' → logprob: -5.995431423187256
    7. 'p' → logprob: -7.120431423187256
    8. '(i' → logprob: -8.745431900024414
    9. '(piece' → logprob: -8.870431900024414
    10. ' p' → logprob: -8.870431900024414

Token 537: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.341810941696167
    2. 'i' → logprob: -1.341810941696167
    3. ' piece' → logprob: -3.841810941696167
    4. ' i' → logprob: -5.591811180114746
    5. 'block' → logprob: -7.091811180114746
    6. '(piece' → logprob: -7.841811180114746
    7. ' (' → logprob: -8.216811180114746
    8. '(i' → logprob: -8.341811180114746
    9. '   ' → logprob: -8.466811180114746
    10. '(' → logprob: -8.591811180114746

Token 538: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6252689361572266
    2. ' =' → logprob: -1.3752689361572266
    3. ':' → logprob: -3.0002689361572266
    4. '
' → logprob: -3.0002689361572266
    5. 'parent' → logprob: -3.1252689361572266
    6. ':
' → logprob: -4.000268936157227
    7. '=' → logprob: -4.500268936157227
    8. ' parent' → logprob: -4.625268936157227
    9. ',' → logprob: -5.375268936157227
    10. 'parents' → logprob: -5.625268936157227

Token 539: 'the' (ID: 3086)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.050041675567627
    2. '#' → logprob: -1.300041675567627
    3. ')' → logprob: -2.425041675567627
    4. ' parent' → logprob: -2.800041675567627
    5. 'i' → logprob: -3.300041675567627
    6. '       ' → logprob: -3.300041675567627
    7. 'each' → logprob: -3.675041675567627
    8. 'def' → logprob: -4.425041675567627
    9. 'for' → logprob: -4.675041675567627
    10. 'in' → logprob: -4.675041675567627

Token 540: ' one' (ID: 1001)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.3543763756752014
    2. ' lowest' → logprob: -1.7293763160705566
    3. ' bottom' → logprob: -4.104376316070557
    4. 'min' → logprob: -4.229376316070557
    5. ' highest' → logprob: -4.604376316070557
    6. ' one' → logprob: -4.729376316070557
    7. ' top' → logprob: -4.854376316070557
    8. 'bottom' → logprob: -4.979376316070557
    9. 'highest' → logprob: -4.979376316070557
    10. 'y' → logprob: -4.979376316070557

Token 541: ' it' (ID: 480)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.5416851043701172
    2. ' directly' → logprob: -2.041685104370117
    3. 'that' → logprob: -2.166685104370117
    4. '       ' → logprob: -3.041685104370117
    5. ' below' → logprob: -3.666685104370117
    6. 'below' → logprob: -3.916685104370117
    7. ' under' → logprob: -4.291685104370117
    8. '   ' → logprob: -4.541685104370117
    9. 'under' → logprob: -4.791685104370117
    10. ' just' → logprob: -4.916685104370117

Token 542: ' touches' (ID: 45060)
  Prédit: ' rests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rests' → logprob: -0.29798272252082825
    2. 'is' → logprob: -2.172982692718506
    3. 's' → logprob: -2.422982692718506
    4. ' is' → logprob: -3.547982692718506
    5. 'rests' → logprob: -5.047982692718506
    6. ' sits' → logprob: -5.297982692718506
    7. ''s' → logprob: -5.672982692718506
    8. 'supports' → logprob: -5.922982692718506
    9. '#' → logprob: -6.547982692718506
    10. 'self' → logprob: -6.547982692718506

Token 543: ' below' (ID: 4895)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3428356647491455
    2. ' on' → logprob: -1.4678356647491455
    3. ')' → logprob: -1.5928356647491455
    4. 'on' → logprob: -2.2178356647491455
    5. ',' → logprob: -3.3428356647491455
    6. ' by' → logprob: -3.5928356647491455
    7. ' that' → logprob: -3.7178356647491455
    8. 'by' → logprob: -3.8428356647491455
    9. 'that' → logprob: -4.217835426330566
    10. 'below' → logprob: -4.592835426330566

Token 544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027540577575564384
    2. ',' → logprob: -4.652540683746338
    3. '):' → logprob: -5.277540683746338
    4. ' )' → logprob: -5.527540683746338
    5. ')
' → logprob: -7.277540683746338
    6. '   ' → logprob: -7.277540683746338
    7. ' at' → logprob: -7.527540683746338
    8. ' for' → logprob: -7.527540683746338
    9. ' or' → logprob: -7.652540683746338
    10. ' (' → logprob: -7.652540683746338

Token 545: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5601179599761963
    2. 'for' → logprob: -1.0601179599761963
    3. '       ' → logprob: -2.5601179599761963
    4. '
' → logprob: -5.560117721557617
    5. 'parent' → logprob: -7.935117721557617
    6. '#' → logprob: -8.310117721557617
    7. ' parent' → logprob: -8.560117721557617
    8. '        
' → logprob: -8.935117721557617
    9. '   ' → logprob: -9.560117721557617
    10. ':' → logprob: -9.560117721557617

Token 546: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.11349329352378845
    2. 'parents' → logprob: -2.4884932041168213
    3. 'piece' → logprob: -3.7384932041168213
    4. '       ' → logprob: -7.8634934425354
    5. 'pieces' → logprob: -10.738492965698242
    6. 'def' → logprob: -10.988492965698242
    7. '#' (adapté à ' #') → logprob: -11.613492965698242
    8. '   ' → logprob: -11.988492965698242
    9. 'below' → logprob: -12.363492965698242
    10. ' parent' → logprob: -12.863492965698242

Token 547: ' Each' (ID: 11555)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.21739783883094788
    2. 'parents' → logprob: -2.217397928237915
    3. 'piece' → logprob: -2.467397928237915
    4. '       ' → logprob: -7.467397689819336
    5. '#' → logprob: -7.717397689819336
    6. ' parent' → logprob: -8.842397689819336
    7. 'pieces' → logprob: -9.217397689819336
    8. ' piece' → logprob: -9.467397689819336
    9. ' parents' → logprob: -9.467397689819336
    10. 'below' → logprob: -9.592397689819336

Token 548: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.5332363247871399
    2. ' piece' → logprob: -1.2832362651824951
    3. 'i' → logprob: -2.408236265182495
    4. 'parent' → logprob: -3.783236265182495
    5. ' i' → logprob: -4.783236503601074
    6. ' parent' → logprob: -5.408236503601074
    7. 'for' → logprob: -5.783236503601074
    8. ' for' → logprob: -5.908236503601074
    9. 'p' → logprob: -6.408236503601074
    10. '   ' → logprob: -7.408236503601074

Token 549: ' except' (ID: 6384)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -1.0677176713943481
    2. ':' → logprob: -1.1927176713943481
    3. ' has' → logprob: -2.5677175521850586
    4. ' can' → logprob: -3.0677175521850586
    5. 'has' → logprob: -3.6927175521850586
    6. 'parent' → logprob: -3.8177175521850586
    7. ' =' → logprob: -3.9427175521850586
    8. ' is' → logprob: -4.067717552185059
    9. '_id' → logprob: -4.067717552185059
    10. '_p' → logprob: -4.317717552185059

Token 550: ' one' (ID: 1001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5513811111450195
    2. 'the' → logprob: -1.1763811111450195
    3. ' the' → logprob: -3.9263811111450195
    4. 's' → logprob: -4.0513811111450195
    5. ' for' → logprob: -4.1763811111450195
    6. 'bottom' → logprob: -4.1763811111450195
    7. 'def' → logprob: -4.6763811111450195
    8. 'root' → logprob: -4.9263811111450195
    9. '#' → logprob: -5.4263811111450195
    10. 'pieces' → logprob: -5.5513811111450195

Token 551: ' touches' (ID: 45060)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09760547429323196
    2. 'for' → logprob: -4.0976057052612305
    3. ' has' → logprob: -4.0976057052612305
    4. ' for' → logprob: -4.5976057052612305
    5. ' can' → logprob: -4.8476057052612305
    6. 'has' → logprob: -4.9726057052612305
    7. ' is' → logprob: -5.2226057052612305
    8. ' with' → logprob: -5.5976057052612305
    9. 'parent' → logprob: -5.8476057052612305
    10. ' that' → logprob: -5.9726057052612305

Token 552: ' exactly' (ID: 9707)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9426412582397461
    2. 'at' → logprob: -1.317641258239746
    3. 'some' → logprob: -2.442641258239746
    4. ' at' → logprob: -2.817641258239746
    5. 'a' → logprob: -3.692641258239746
    6. 'no' → logprob: -3.817641258239746
    7. 'something' → logprob: -4.067641258239746
    8. ' the' → logprob: -4.192641258239746
    9. 'below' → logprob: -4.317641258239746
    10. 'another' → logprob: -4.442641258239746

Token 553: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.044194262474775314
    2. ' one' → logprob: -3.169194221496582
    3. 'none' → logprob: -7.919194221496582
    4. 'at' → logprob: -8.169194221496582
    5. '0' → logprob: -8.419194221496582
    6. ' at' → logprob: -8.919194221496582
    7. 'zero' → logprob: -9.919194221496582
    8. 'bottom' → logprob: -10.669194221496582
    9. 'below' → logprob: -10.794194221496582
    10. 'another' → logprob: -11.044194221496582

Token 554: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.16445298492908478
    2. ' piece' → logprob: -2.4144530296325684
    3. 'other' → logprob: -3.4144530296325684
    4. 'below' → logprob: -3.9144530296325684
    5. ' other' → logprob: -5.539453029632568
    6. '(piece' → logprob: -6.414453029632568
    7. ' below' → logprob: -7.039453029632568
    8. 'parent' → logprob: -7.289453029632568
    9. 'lower' → logprob: -7.539453029632568
    10. ' at' → logprob: -8.66445255279541

Token 555: ' below' (ID: 4895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25536981225013733
    2. ' below' → logprob: -2.6303699016571045
    3. ' or' → logprob: -3.2553699016571045
    4. '
' → logprob: -3.2553699016571045
    5. ' at' → logprob: -4.255369663238525
    6. ' for' → logprob: -4.255369663238525
    7. ',' → logprob: -4.255369663238525
    8. ' (' → logprob: -5.130369663238525
    9. '.' → logprob: -5.255369663238525
    10. 'below' → logprob: -5.505369663238525

Token 556: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028520621359348297
    2. 'parent' → logprob: -4.278520584106445
    3. '
' → logprob: -4.903520584106445
    4. 'for' → logprob: -6.153520584106445
    5. '        
' → logprob: -6.153520584106445
    6. '#' → logprob: -7.528520584106445
    7. 'parents' → logprob: -7.653520584106445
    8. ',' → logprob: -8.028520584106445
    9. ' for' → logprob: -8.403520584106445
    10. '<|end|>' → logprob: -8.528520584106445

Token 557: ' ground' (ID: 7740)
  Prédit: 'none'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'none' → logprob: -0.3226592540740967
    2. 'None' → logprob: -1.3226592540740967
    3. 'is' → logprob: -5.072659492492676
    4. '0' → logprob: -6.322659492492676
    5. 'no' → logprob: -7.947659492492676
    6. '-' → logprob: -8.572659492492676
    7. '   ' → logprob: -8.822659492492676
    8. '       ' → logprob: -9.197659492492676
    9. '
' → logprob: -9.197659492492676
    10. 'has' → logprob: -9.197659492492676

Token 558: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015202402137219906
    2. '
' → logprob: -4.765202522277832
    3. 'parent' → logprob: -5.640202522277832
    4. '        
' → logprob: -6.015202522277832
    5. '<|end|>' → logprob: -9.015202522277832
    6. ',' → logprob: -9.265202522277832
    7. '#' → logprob: -9.390202522277832
    8. 'parents' → logprob: -10.265202522277832
    9. '(parent' → logprob: -10.390202522277832
    10. '   ' → logprob: -10.640202522277832

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023778896778821945
    2. 'parent' → logprob: -4.023778915405273
    3. '
' → logprob: -6.148778915405273
    4. '        
' → logprob: -6.898778915405273
    5. 'parents' → logprob: -7.398778915405273
    6. 'for' → logprob: -7.648778915405273
    7. ' parent' → logprob: -7.648778915405273
    8. ' for' → logprob: -8.648778915405273
    9. '#' → logprob: -9.023778915405273
    10. ',' → logprob: -9.523778915405273

Token 560: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.08528804779052734
    2. 'parents' → logprob: -3.2102880477905273
    3. '       ' → logprob: -3.5852880477905273
    4. 'piece' → logprob: -4.585288047790527
    5. ' parent' → logprob: -5.835288047790527
    6. ' parents' → logprob: -8.460288047790527
    7. ' piece' → logprob: -9.335288047790527
    8. 'pieces' → logprob: -9.710288047790527
    9. '   ' → logprob: -9.960288047790527
    10. '#' (adapté à ' #') → logprob: -10.460288047790527

Token 561: ' For' (ID: 2214)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.16578644514083862
    2. 'parents' → logprob: -2.1657865047454834
    3. '       ' → logprob: -3.4157865047454834
    4. 'piece' → logprob: -5.415786266326904
    5. '#' → logprob: -8.415786743164062
    6. ' parent' → logprob: -8.665786743164062
    7. 'ground' → logprob: -8.665786743164062
    8. ' parents' → logprob: -9.665786743164062
    9. 'pieces' → logprob: -9.915786743164062
    10. '   ' → logprob: -10.415786743164062

Token 562: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3096483051776886
    2. ' i' → logprob: -2.184648275375366
    3. 'p' → logprob: -3.184648275375366
    4. 'y' → logprob: -3.809648275375366
    5. 'piece' → logprob: -3.809648275375366
    6. ' piece' → logprob: -3.934648275375366
    7. ' p' → logprob: -4.059648513793945
    8. ' y' → logprob: -4.684648513793945
    9. 'pi' → logprob: -4.934648513793945
    10. 'each' → logprob: -5.059648513793945

Token 563: ' piece' (ID: 9047)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3585093915462494
    2. 'piece' → logprob: -1.3585094213485718
    3. ' piece' → logprob: -3.7335093021392822
    4. ' i' → logprob: -3.9835093021392822
    5. 'p' → logprob: -7.358509540557861
    6. 'y' → logprob: -8.108509063720703
    7. '   ' → logprob: -9.108509063720703
    8. 'x' → logprob: -9.233509063720703
    9. '(piece' → logprob: -9.233509063720703
    10. ' (' → logprob: -9.546009063720703

Token 564: ' find' (ID: 1646)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12482485175132751
    2. ':' → logprob: -3.1248247623443604
    3. ' in' → logprob: -3.6248247623443604
    4. ' i' → logprob: -3.9998247623443604
    5. '       ' → logprob: -4.6248250007629395
    6. 'i' → logprob: -4.8748250007629395
    7. ',i' → logprob: -5.2498250007629395
    8. '   ' → logprob: -6.2498250007629395
    9. ' ,' → logprob: -7.1248250007629395
    10. '[i' → logprob: -7.1248250007629395

Token 565: ' which' (ID: 1118)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.3421172499656677
    2. 'the' → logprob: -1.8421173095703125
    3. ' its' → logprob: -3.3421173095703125
    4. 'its' → logprob: -3.3421173095703125
    5. 'min' → logprob: -3.7171173095703125
    6. ' lowest' → logprob: -3.9671173095703125
    7. ' the' → logprob: -4.8421173095703125
    8. 'bottom' → logprob: -6.2171173095703125
    9. 'parent' → logprob: -6.3421173095703125
    10. ' min' → logprob: -6.7171173095703125

Token 566: ' piece' (ID: 9047)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1501950025558472
    2. '(x' → logprob: -1.9001950025558472
    3. 'blocks' → logprob: -2.1501951217651367
    4. 'x' → logprob: -2.4001951217651367
    5. 'block' → logprob: -2.5251951217651367
    6. 'piece' → logprob: -2.9001951217651367
    7. '(y' → logprob: -2.9001951217651367
    8. ' (' → logprob: -3.7751951217651367
    9. '(' → logprob: -4.025195121765137
    10. ' blocks' → logprob: -4.275195121765137

Token 567: '(s' (ID: 1858)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2348014861345291
    2. 'it' → logprob: -2.4848015308380127
    3. 'i' → logprob: -2.9848015308380127
    4. 'touch' → logprob: -3.8598015308380127
    5. 'below' → logprob: -4.484801292419434
    6. 'belongs' → logprob: -4.734801292419434
    7. 'lies' → logprob: -4.984801292419434
    8. ' is' → logprob: -5.109801292419434
    9. ' touches' → logprob: -5.609801292419434
    10. 'blocks' → logprob: -5.859801292419434

Token 568: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20701007544994354
    2. 'it' → logprob: -2.83201003074646
    3. '(' → logprob: -2.95701003074646
    4. ' it' → logprob: -3.70701003074646
    5. 'are' → logprob: -4.332010269165039
    6. '(x' → logprob: -4.707010269165039
    7. ' are' → logprob: -4.832010269165039
    8. ' (' → logprob: -5.457010269165039
    9. 'below' → logprob: -5.832010269165039
    10. 'y' → logprob: -6.207010269165039

Token 569: ' it' (ID: 480)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.1663554161787033
    2. 'it' → logprob: -2.7913553714752197
    3. 'are' → logprob: -3.6663553714752197
    4. ' touch' → logprob: -4.166355609893799
    5. 'blocks' → logprob: -4.416355609893799
    6. ' it' → logprob: -5.166355609893799
    7. 'is' → logprob: -5.291355609893799
    8. 'have' → logprob: -5.291355609893799
    9. '   ' → logprob: -5.541355609893799
    10. ' lie' → logprob: -6.041355609893799

Token 570: ' supports' (ID: 17203)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.6353234052658081
    2. ' touches' → logprob: -0.8853234052658081
    3. 'is' → logprob: -4.260323524475098
    4. 's' → logprob: -4.885323524475098
    5. 'rests' → logprob: -4.885323524475098
    6. ' is' → logprob: -5.010323524475098
    7. '   ' → logprob: -5.510323524475098
    8. 'contacts' → logprob: -5.510323524475098
    9. ' rests' → logprob: -5.635323524475098
    10. 'supports' → logprob: -7.010323524475098

Token 571: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28906723856925964
    2. '
' → logprob: -1.539067268371582
    3. '        
' → logprob: -4.039067268371582
    4. 'pieces' → logprob: -5.539067268371582
    5. '#' → logprob: -5.664067268371582
    6. 'for' → logprob: -6.289067268371582
    7. 'supported' → logprob: -6.664067268371582
    8. 'support' → logprob: -7.289067268371582
    9. 'below' → logprob: -7.664067268371582
    10. 'piece' → logprob: -7.664067268371582

Token 572: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1105332002043724
    2. 'which' → logprob: -2.8605332374572754
    3. ' is' → logprob: -3.8605332374572754
    4. 'supported' → logprob: -5.235533237457275
    5. ' touches' → logprob: -5.360533237457275
    6. '#' → logprob: -5.360533237457275
    7. 'blocks' → logprob: -6.110533237457275
    8. 'touch' → logprob: -6.485533237457275
    9. ' which' → logprob: -6.485533237457275
    10. 'supports' → logprob: -6.985533237457275

Token 573: ' supported' (ID: 12837)
  Prédit: 'supported'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'supported' → logprob: -0.0008204689365811646
    2. ' supported' → logprob: -8.00082015991211
    3. 'None' → logprob: -9.37582015991211
    4. '   ' → logprob: -9.62582015991211
    5. '[]' → logprob: -9.75082015991211
    6. 'blocked' → logprob: -9.87582015991211
    7. 'below' → logprob: -10.25082015991211
    8. 'support' → logprob: -10.50082015991211
    9. '_supported' → logprob: -10.62582015991211
    10. ')' → logprob: -11.00082015991211

Token 574: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.060680024325847626
    2. ' by' → logprob: -3.9356799125671387
    3. 'for' → logprob: -3.9356799125671387
    4. 'from' → logprob: -5.310679912567139
    5. '<|end|>' → logprob: -5.810679912567139
    6. '#' → logprob: -6.060679912567139
    7. 's' → logprob: -6.560679912567139
    8. '       ' → logprob: -6.560679912567139
    9. 'below' → logprob: -6.560679912567139
    10. 'Below' → logprob: -6.935679912567139

Token 575: '

' (ID: 279)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5935867428779602
    2. 'parents' → logprob: -1.8435866832733154
    3. 'piece' → logprob: -1.8435866832733154
    4. 'supports' → logprob: -3.0935866832733154
    5. 'support' → logprob: -3.2185866832733154
    6. '#' → logprob: -4.8435869216918945
    7. 'supported' → logprob: -5.0935869216918945
    8. 'pieces' → logprob: -5.2185869216918945
    9. 'below' → logprob: -5.2185869216918945
    10. 'down' → logprob: -5.3435869216918945

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13473598659038544
    2. 'support' → logprob: -3.3847360610961914
    3. 'parent' → logprob: -3.5097360610961914
    4. '        
' → logprob: -3.6347360610961914
    5. 'piece' → logprob: -4.509736061096191
    6. 'parents' → logprob: -5.009736061096191
    7. '
' → logprob: -5.009736061096191
    8. 'supports' → logprob: -5.384736061096191
    9. 'pieces' → logprob: -6.509736061096191
    10. 'down' → logprob: -6.634736061096191

Token 577: ' #' (ID: 1069)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.4603351652622223
    2. 'support' → logprob: -1.4603351354599
    3. 'supports' → logprob: -2.7103352546691895
    4. 'pieces' → logprob: -4.2103352546691895
    5. 'supported' → logprob: -4.3353352546691895
    6. 'parent' → logprob: -4.3353352546691895
    7. 'below' → logprob: -4.4603352546691895
    8. '#' (adapté à ' #') → logprob: -4.8353352546691895
    9. '       ' → logprob: -5.4603352546691895
    10. 'parents' → logprob: -6.3353352546691895

Token 578: ' piece' (ID: 9047)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.2271637916564941
    2. 'piece' → logprob: -1.3521637916564941
    3. 'support' → logprob: -1.4771637916564941
    4. 'supports' → logprob: -2.227163791656494
    5. 'parents' → logprob: -2.977163791656494
    6. 'below' → logprob: -3.727163791656494
    7. '#' → logprob: -4.227163791656494
    8. 'supported' → logprob: -4.352163791656494
    9. 'above' → logprob: -6.102163791656494
    10. 'children' → logprob: -6.477163791656494

Token 579: '_support' (ID: 59508)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6361266374588013
    2. '_support' → logprob: -0.8861266374588013
    3. '_supported' → logprob: -3.2611265182495117
    4. '_to' → logprob: -4.636126518249512
    5. '_ab' → logprob: -5.386126518249512
    6. '_s' → logprob: -6.386126518249512
    7. '_under' → logprob: -7.386126518249512
    8. '_count' → logprob: -7.511126518249512
    9. 's' → logprob: -7.636126518249512
    10. '_down' → logprob: -7.761126518249512

Token 580: 's' (ID: 82)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5383636951446533
    2. 's' → logprob: -0.9133636951446533
    3. ' =' → logprob: -4.413363456726074
    4. '=' → logprob: -6.413363456726074
    5. 'ers' → logprob: -7.663363456726074
    6. 'ing' → logprob: -8.288363456726074
    7. 'eds' → logprob: -8.413363456726074
    8. 'd' → logprob: -9.663363456726074
    9. 'e' → logprob: -10.288363456726074
    10. 'er' → logprob: -10.288363456726074

Token 581: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889904081821442
    2. ' =' → logprob: -2.5788991451263428
    3. 's' → logprob: -12.328899383544922
    4. '   ' → logprob: -13.828899383544922
    5. '=[' → logprob: -14.328899383544922
    6. '_support' → logprob: -14.328899383544922
    7. 'support' → logprob: -14.453899383544922
    8. 'supports' → logprob: -14.953899383544922
    9. '=[]' → logprob: -15.078899383544922
    10. ']' → logprob: -15.453899383544922

Token 582: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037364219315350056
    2. ']=' → logprob: -6.00373649597168
    3. '=' → logprob: -6.87873649597168
    4. ' =' → logprob: -8.62873649597168
    5. ' ]' → logprob: -10.62873649597168
    6. 's' → logprob: -11.50373649597168
    7. '   ' → logprob: -13.00373649597168
    8. ']={' → logprob: -13.37873649597168
    9. '][' → logprob: -13.62873649597168
    10. '[' → logprob: -13.75373649597168

Token 583: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164221473038197
    2. ' =' → logprob: -4.264164447784424
    3. '=[]' → logprob: -14.639163970947266
    4. '=[' → logprob: -16.264163970947266
    5. ',' → logprob: -16.889163970947266
    6. '=

' → logprob: -17.264163970947266
    7. '={}' → logprob: -17.514163970947266
    8. '＝' → logprob: -17.764163970947266
    9. '[' → logprob: -18.764163970947266
    10. 'support' → logprob: -19.014163970947266

Token 584: ' list' (ID: 1562)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5760647654533386
    2. '[]' → logprob: -0.8260647654533386
    3. ' set' → logprob: -9.826065063476562
    4. ' []' → logprob: -10.326065063476562
    5. '{}' → logprob: -11.076065063476562
    6. '[]}' → logprob: -11.576065063476562
    7. '[' → logprob: -12.326065063476562
    8. '[]
' → logprob: -12.701065063476562
    9. '[]>' → logprob: -13.201065063476562
    10. '[])' → logprob: -13.826065063476562

Token 585: ' of' (ID: 328)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.3135555386543274
    2. '[]' → logprob: -1.5635554790496826
    3. '=' → logprob: -3.4385554790496826
    4. '()' → logprob: -3.9385554790496826
    5. '([]' → logprob: -5.188555717468262
    6. ' =' → logprob: -6.438555717468262
    7. '[]=' → logprob: -7.438555717468262
    8. 'of' → logprob: -8.813555717468262
    9. ' []' → logprob: -9.688555717468262
    10. '=[]
' → logprob: -9.938555717468262

Token 586: ' pieces' (ID: 12762)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.501609206199646
    2. 'pieces' → logprob: -1.001609206199646
    3. ' pieces' → logprob: -4.8766093254089355
    4. 'indices' → logprob: -4.8766093254089355
    5. 'piece' → logprob: -5.6266093254089355
    6. 'i' → logprob: -5.8766093254089355
    7. ' []' → logprob: -7.0016093254089355
    8. 'children' → logprob: -7.0016093254089355
    9. '[int' → logprob: -7.3766093254089355
    10. '[])' → logprob: -7.5016093254089355

Token 587: ' supported' (ID: 12837)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018727611750364304
    2. ' =' → logprob: -4.143727779388428
    3. '=[]' → logprob: -6.518727779388428
    4. '[]' → logprob: -6.893727779388428
    5. '[i' → logprob: -9.01872730255127
    6. 'supported' → logprob: -10.64372730255127
    7. '=[' → logprob: -11.14372730255127
    8. '[]=' → logprob: -11.76872730255127
    9. '=[]
' → logprob: -12.01872730255127
    10. '[' → logprob: -12.26872730255127

Token 588: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18065373599529266
    2. ' =' → logprob: -1.805653691291809
    3. '=[]' → logprob: -8.18065357208252
    4. '[i' → logprob: -8.30565357208252
    5. '_by' → logprob: -9.05565357208252
    6. 'by' → logprob: -9.80565357208252
    7. '=[]
' → logprob: -10.30565357208252
    8. 's' → logprob: -10.30565357208252
    9. '[]' → logprob: -10.55565357208252
    10. ']' → logprob: -10.93065357208252

Token 589: ' piece' (ID: 9047)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06117779761552811
    2. '[i' → logprob: -3.0611777305603027
    3. '[' → logprob: -5.061177730560303
    4. '[]
' → logprob: -5.936177730560303
    5. 'i' → logprob: -6.186177730560303
    6. ' []' → logprob: -7.061177730560303
    7. '[]

' → logprob: -8.061178207397461
    8. '[])' → logprob: -9.186178207397461
    9. ' [' → logprob: -9.561178207397461
    10. ' i' → logprob: -9.686178207397461

Token 590: ' i' (ID: 575)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231819152832031
    2. ' =' → logprob: -0.8981819152832031
    3. 's' → logprob: -11.148181915283203
    4. '=[]' → logprob: -11.273181915283203
    5. '       ' → logprob: -12.273181915283203
    6. '=
' → logprob: -12.398181915283203
    7. '=[]
' → logprob: -12.648181915283203
    8. ' =
' → logprob: -12.648181915283203
    9. ']' → logprob: -12.898181915283203
    10. '   ' → logprob: -13.273181915283203

Token 591: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39984971284866333
    2. '=' → logprob: -1.2748496532440186
    3. '       ' → logprob: -3.1498496532440186
    4. 'piece' → logprob: -5.399849891662598
    5. '=
' → logprob: -7.274849891662598
    6. ' =
' → logprob: -7.524849891662598
    7. '   ' → logprob: -8.024849891662598
    8. ' piece' → logprob: -8.274849891662598
    9. '(piece' → logprob: -8.399849891662598
    10. '_piece' → logprob: -8.774849891662598

Token 592: 'children' (ID: 10961)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.21615049242973328
    2. '[]' → logprob: -1.7161505222320557
    3. ')' → logprob: -4.716150283813477
    4. '[]
' → logprob: -5.841150283813477
    5. '[])
' → logprob: -6.341150283813477
    6. '[i' → logprob: -7.591150283813477
    7. ' [])' → logprob: -8.216150283813477
    8. '[' → logprob: -8.591150283813477
    9. ' []' → logprob: -11.216150283813477
    10. '[]

' → logprob: -12.091150283813477

Token 593: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07715979218482971
    2. ']' → logprob: -3.452159881591797
    3. '=' → logprob: -3.952159881591797
    4. '])' → logprob: -4.452159881591797
    5. ' =' → logprob: -4.577159881591797
    6. ')
' → logprob: -8.452159881591797
    7. '[])' → logprob: -8.452159881591797
    8. ']=' → logprob: -8.577159881591797
    9. ')=' → logprob: -8.577159881591797
    10. ')]' → logprob: -8.827159881591797

Token 594: ' tree' (ID: 8165)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4972972273826599
    2. 'tree' → logprob: -1.7472972869873047
    3. ')' → logprob: -2.6222972869873047
    4. 'the' → logprob: -2.7472972869873047
    5. 'a' → logprob: -4.247297286987305
    6. 'adj' → logprob: -4.997297286987305
    7. '[i' → logprob: -4.997297286987305
    8. '   ' → logprob: -5.372297286987305
    9. 'trees' → logprob: -5.372297286987305
    10. ' graph' → logprob: -5.497297286987305

Token 595: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22141270339488983
    2. ')
' → logprob: -1.7214126586914062
    3. ']' → logprob: -4.346412658691406
    4. '])' → logprob: -6.346412658691406
    5. ']
' → logprob: -6.596412658691406
    6. ' =' → logprob: -6.596412658691406
    7. '=' → logprob: -7.221412658691406
    8. 's' → logprob: -7.346412658691406
    9. ')

' → logprob: -8.721412658691406
    10. 'indices' → logprob: -9.096412658691406

Token 596: '       ' (ID: 309)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.4774171710014343
    2. '       ' → logprob: -0.9774171710014343
    3. ' piece' → logprob: -6.2274169921875
    4. '
' → logprob: -7.3524169921875
    5. ' =' → logprob: -8.4774169921875
    6. '(piece' → logprob: -8.4774169921875
    7. '   ' → logprob: -8.6024169921875
    8. '        
' → logprob: -10.3524169921875
    9. '=' → logprob: -10.8524169921875
    10. '_piece' → logprob: -11.2274169921875

Token 597: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' (adapté à ' piece') → logprob: -0.002086854539811611
    2. '       ' → logprob: -6.502086639404297
    3. ' piece' → logprob: -7.502086639404297
    4. '   ' → logprob: -10.752086639404297
    5. '```' → logprob: -12.127086639404297
    6. '
' → logprob: -12.627086639404297
    7. '(piece' → logprob: -14.502086639404297
    8. '        
' → logprob: -14.627086639404297
    9. 'pieces' → logprob: -14.627086639404297
    10. '           ' → logprob: -14.752086639404297

Token 598: '_support' (ID: 59508)
  Prédit: '_support'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_support' → logprob: -6.194110756041482e-05
    2. '_' → logprob: -10.500061988830566
    3. '_s' → logprob: -10.750061988830566
    4. '_supported' → logprob: -11.750061988830566
    5. ' _' → logprob: -13.000061988830566
    6. '_sup' → logprob: -13.750061988830566
    7. 'supports' → logprob: -14.625061988830566
    8. 'Supports' → logprob: -15.500061988830566
    9. '_SUPPORT' → logprob: -15.875061988830566
    10. '\' → logprob: -16.50006103515625

Token 599: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.7888184528565034e-05
    2. 'supports' → logprob: -10.0000581741333
    3. '_support' → logprob: -11.6250581741333
    4. '_s' → logprob: -13.6250581741333
    5. ' s' → logprob: -14.0000581741333
    6. 'Supports' → logprob: -14.7500581741333
    7. ' supports' → logprob: -15.2500581741333
    8. ' =' → logprob: -15.5000581741333
    9. '=' → logprob: -15.7500581741333
    10. 'support' → logprob: -15.8750581741333

Token 600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023248620331287384
    2. ' =' → logprob: -3.7732486724853516
    3. '=[]' → logprob: -13.398248672485352
    4. '=[' → logprob: -13.773248672485352
    5. '[' → logprob: -14.773248672485352
    6. '＝' → logprob: -16.89824867248535
    7. ' =[' → logprob: -17.14824867248535
    8. ')' → logprob: -17.64824867248535
    9. ']' → logprob: -17.64824867248535
    10. '[i' → logprob: -18.14824867248535

Token 601: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859520494937897
    2. ' [[]' → logprob: -3.0485951900482178
    3. '{' → logprob: -11.923595428466797
    4. '   ' → logprob: -14.298595428466797
    5. ' [' → logprob: -15.048595428466797
    6. '[len' → logprob: -16.173595428466797
    7. '[[' → logprob: -16.423595428466797
    8. '[]' → logprob: -16.673595428466797
    9. '{}' → logprob: -17.298595428466797
    10. 'default' → logprob: -17.548595428466797

Token 602: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.576417863368988
    2. ' for' → logprob: -0.826417863368988
    3. ']' → logprob: -8.451417922973633
    4. '   ' → logprob: -9.076417922973633
    5. ')' → logprob: -9.576417922973633
    6. '       ' → logprob: -9.826417922973633
    7. '	for' → logprob: -11.326417922973633
    8. ' ' → logprob: -12.326417922973633
    9. '           ' → logprob: -12.576417922973633
    10. '               ' → logprob: -13.701417922973633

Token 603: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.44041088223457336
    2. ' range' → logprob: -1.190410852432251
    3. '_' → logprob: -3.065410852432251
    4. '_range' → logprob: -5.94041109085083
    5. '(range' → logprob: -6.44041109085083
    6. '_p' → logprob: -7.56541109085083
    7. 'i' → logprob: -8.815410614013672
    8. ' _' → logprob: -8.815410614013672
    9. '_piece' → logprob: -9.190410614013672
    10. '_i' → logprob: -9.440410614013672

Token 604: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03035571053624153
    2. ' range' → logprob: -4.030355930328369
    3. 'pieces' → logprob: -4.655355930328369
    4. 'in' → logprob: -7.030355930328369
    5. '(p' → logprob: -7.530355930328369
    6. 'p' → logprob: -7.780355930328369
    7. '(range' → logprob: -8.280355453491211
    8. '(w' → logprob: -8.530355453491211
    9. ' in' → logprob: -9.155355453491211
    10. 'w' → logprob: -9.780355453491211

Token 605: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02669200301170349
    2. 'pieces' → logprob: -3.6516919136047363
    3. ' range' → logprob: -7.901691913604736
    4. '(range' → logprob: -11.276692390441895
    5. 'p' → logprob: -12.276692390441895
    6. ' pieces' → logprob: -13.526692390441895
    7. '(p' → logprob: -13.651692390441895
    8. 'piece' → logprob: -14.776692390441895
    9. 'ranges' → logprob: -14.776692390441895
    10. '(' → logprob: -15.026692390441895

Token 606: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10037002712488174
    2. '(len' → logprob: -2.350369930267334
    3. ' len' → logprob: -8.725370407104492
    4. '[len' → logprob: -14.850370407104492
    5. '(' → logprob: -15.225370407104492
    6. '   ' → logprob: -16.100370407104492
    7. '=len' → logprob: -16.100370407104492
    8. '           ' → logprob: -16.975370407104492
    9. '	len' → logprob: -17.100370407104492
    10. 'range' → logprob: -17.225370407104492

Token 607: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.013482537120580673
    2. 'pieces' → logprob: -4.388482570648193
    3. 'p' → logprob: -7.013482570648193
    4. '(piece' → logprob: -10.013482093811035
    5. ' pieces' → logprob: -11.263482093811035
    6. '(' → logprob: -12.263482093811035
    7. 'piece' → logprob: -13.638482093811035
    8. ')' → logprob: -13.888482093811035
    9. '(parts' → logprob: -14.013482093811035
    10. ' (' → logprob: -14.138482093811035

Token 608: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00018244501552544534
    2. 'pieces' → logprob: -8.625182151794434
    3. 'iece' → logprob: -13.500182151794434
    4. ')' → logprob: -15.125182151794434
    5. 'ie' → logprob: -15.375182151794434
    6. ' pieces' → logprob: -15.500182151794434
    7. '```' → logprob: -15.875182151794434
    8. '``' → logprob: -15.875182151794434
    9. 'ices' → logprob: -16.25018310546875
    10. 'i' → logprob: -16.25018310546875

Token 609: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0041173421777784824
    2. '))' → logprob: -5.629117488861084
    3. ')])' → logprob: -8.129117012023926
    4. '])]' → logprob: -8.754117012023926
    5. ')' → logprob: -9.754117012023926
    6. ')]
' → logprob: -13.379117012023926
    7. ']' → logprob: -13.754117012023926
    8. '])' → logprob: -14.004117012023926
    9. ' )' → logprob: -14.504117012023926
    10. ')))' → logprob: -14.754117012023926

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4169985353946686
    2. 'piece' → logprob: -1.1669985055923462
    3. '#' → logprob: -3.7919986248016357
    4. 'parent' → logprob: -5.166998386383057
    5. '
' → logprob: -7.791998386383057
    6. 'ground' → logprob: -8.541998863220215
    7. 'for' → logprob: -8.791998863220215
    8. 'pieces' → logprob: -8.916998863220215
    9. 'support' → logprob: -9.041998863220215
    10. '   ' → logprob: -9.291998863220215

Token 611: ' #' (ID: 1069)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.06189148500561714
    2. 'for' → logprob: -3.186891555786133
    3. '#' (adapté à ' #') → logprob: -4.186891555786133
    4. 'parent' → logprob: -6.061891555786133
    5. 'supported' → logprob: -8.186891555786133
    6. 'ground' → logprob: -8.561891555786133
    7. 'support' → logprob: -8.811891555786133
    8. 'below' → logprob: -9.311891555786133
    9. 'pieces' → logprob: -9.436891555786133
    10. '   ' → logprob: -9.686891555786133

Token 612: ' parent' (ID: 5980)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.028100205585360527
    2. 'for' → logprob: -4.02810001373291
    3. 'supported' → logprob: -5.40310001373291
    4. 'parent' → logprob: -6.27810001373291
    5. 'ground' → logprob: -6.90310001373291
    6. '#' → logprob: -7.15310001373291
    7. 'support' → logprob: -7.40310001373291
    8. 'below' → logprob: -8.27810001373291
    9. 'supports' → logprob: -8.65310001373291
    10. 'pieces' → logprob: -9.15310001373291

Token 613: '_of' (ID: 8023)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43428686261177063
    2. ' =' → logprob: -1.0592868328094482
    3. '_piece' → logprob: -5.934287071228027
    4. 's' → logprob: -6.059287071228027
    5. '_p' → logprob: -8.309287071228027
    6. '_' → logprob: -8.434287071228027
    7. '_of' → logprob: -10.184287071228027
    8. 'piece' → logprob: -10.684287071228027
    9. '=[]' → logprob: -11.309287071228027
    10. '_support' → logprob: -11.434287071228027

Token 614: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2530800402164459
    2. ' =' → logprob: -1.5030800104141235
    3. '[' → logprob: -7.003079891204834
    4. '=[' → logprob: -9.253080368041992
    5. ' [' → logprob: -9.628080368041992
    6. '=[]' → logprob: -10.503080368041992
    7. '[]' → logprob: -11.128080368041992
    8. 'piece' → logprob: -11.253080368041992
    9. '_piece' → logprob: -12.503080368041992
    10. ' =[' → logprob: -12.753080368041992

Token 615: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7513816356658936
    2. ' =' → logprob: -0.7513816356658936
    3. ']' → logprob: -2.8763816356658936
    4. ']=' → logprob: -8.876381874084473
    5. ' ]' → logprob: -9.501381874084473
    6. ')' → logprob: -11.751381874084473
    7. ' ' → logprob: -12.251381874084473
    8. '   ' → logprob: -13.626381874084473
    9. ')]' → logprob: -13.626381874084473
    10. '=[]' → logprob: -14.376381874084473

Token 616: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '=[' → logprob: -17.143150329589844
    4. '=[]' → logprob: -17.643150329589844
    5. ' ' → logprob: -19.018150329589844
    6. ' =[' → logprob: -19.393150329589844
    7. '＝' → logprob: -19.643150329589844
    8. ' ' → logprob: -20.393150329589844
    9. '[' → logprob: -20.518150329589844
    10. '=None' → logprob: -20.643150329589844

Token 617: ' piece' (ID: 9047)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04979123920202255
    2. 'None' → logprob: -3.0497913360595703
    3. ' -' → logprob: -7.17479133605957
    4. ' None' → logprob: -8.04979133605957
    5. '[-' → logprob: -9.17479133605957
    6. '[' → logprob: -11.17479133605957
    7. '   ' → logprob: -15.42479133605957
    8. ' [' → logprob: -16.42479133605957
    9. ' ' → logprob: -16.54979133605957
    10. '[]' → logprob: -17.04979133605957

Token 618: ' id' (ID: 1211)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12958648800849915
    2. ' =' → logprob: -2.1295864582061768
    3. '=None' → logprob: -6.754586696624756
    4. '=-' → logprob: -7.629586696624756
    5. 's' → logprob: -8.504586219787598
    6. '_of' → logprob: -8.754586219787598
    7. '_' → logprob: -8.879586219787598
    8. '=[]' → logprob: -8.879586219787598
    9. 'of' → logprob: -9.754586219787598
    10. '[i' → logprob: -10.254586219787598

Token 619: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759578943252563
    2. '=' → logprob: -0.8259578943252563
    3. '=[]' → logprob: -11.825958251953125
    4. '=None' → logprob: -12.075958251953125
    5. '   ' → logprob: -14.325958251953125
    6. '=[' → logprob: -14.450958251953125
    7. ',' → logprob: -14.575958251953125
    8. ' ' → logprob: -14.700958251953125
    9. '[' → logprob: -14.950958251953125
    10. 's' → logprob: -14.950958251953125

Token 620: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.17275477945804596
    2. 'the' → logprob: -2.2977547645568848
    3. 'None' → logprob: -3.9227547645568848
    4. 'piece' → logprob: -4.172754764556885
    5. '-' → logprob: -4.547754764556885
    6. ' parent' → logprob: -5.297754764556885
    7. 'i' → logprob: -5.422754764556885
    8. ' the' → logprob: -7.297754764556885
    9. ' None' → logprob: -7.422754764556885
    10. ' piece' → logprob: -7.547754764556885

Token 621: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602255403995514
    2. ' =' → logprob: -1.910225510597229
    3. 'parent' → logprob: -15.035225868225098
    4. '   ' → logprob: -15.160225868225098
    5. ',' → logprob: -15.785225868225098
    6. '=[]' → logprob: -15.910225868225098
    7. 'for' → logprob: -16.16022491455078
    8. '=None' → logprob: -16.28522491455078
    9. ' ' → logprob: -16.41022491455078
    10. 's' → logprob: -16.66022491455078

Token 622: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9446321129798889
    2. '=' → logprob: -1.1946320533752441
    3. 'parent' → logprob: -1.1946320533752441
    4. ' parent' → logprob: -5.569632053375244
    5. '       ' → logprob: -6.444632053375244
    6. '   ' → logprob: -10.319632530212402
    7. ',parent' → logprob: -10.319632530212402
    8. '[parent' → logprob: -10.944632530212402
    9. '_parent' → logprob: -11.444632530212402
    10. '.parent' → logprob: -11.569632530212402

Token 623: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -3.7697225252486533e-06
    2. ' parent' → logprob: -12.500003814697266
    3. '[parent' → logprob: -18.625003814697266
    4. '
' → logprob: -19.625003814697266
    5. '   ' → logprob: -19.750003814697266
    6. '	parent' → logprob: -20.750003814697266
    7. 'import' → logprob: -21.125003814697266
    8. 'from' → logprob: -21.125003814697266
    9. '       ' → logprob: -21.500003814697266
    10. '.parent' → logprob: -21.500003814697266

Token 624: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.25000286102295
    3. '_for' → logprob: -14.37500286102295
    4. ' _' → logprob: -14.75000286102295
    5. '=_' → logprob: -14.75000286102295
    6. '_o' → logprob: -16.375001907348633
    7. ' =' → logprob: -16.375001907348633
    8. '_or' → logprob: -16.500001907348633
    9. '_parent' → logprob: -17.000001907348633
    10. '_off' → logprob: -17.125001907348633

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759447813034058
    2. ' =' → logprob: -0.8259447813034058
    3. '=[' → logprob: -13.075944900512695
    4. '[' → logprob: -13.325944900512695
    5. '=[]' → logprob: -13.825944900512695
    6. ' =[' → logprob: -15.325944900512695
    7. ')' → logprob: -15.450944900512695
    8. ']' → logprob: -17.200944900512695
    9. ' ' → logprob: -17.450944900512695
    10. '＝' → logprob: -17.700944900512695

Token 626: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.10024883598089218
    2. '[' → logprob: -2.3502488136291504
    3. ' [-' → logprob: -10.350249290466309
    4. ' [' → logprob: -11.975249290466309
    5. '[n' → logprob: -13.725249290466309
    6. '[len' → logprob: -13.725249290466309
    7. '{}' → logprob: -13.850249290466309
    8. '[i' → logprob: -15.725249290466309
    9. '[N' → logprob: -15.850249290466309
    10. '   ' → logprob: -16.350248336791992

Token 627: 'None' (ID: 8505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02327948994934559
    2. 'None' → logprob: -3.7732794284820557
    3. ' -' → logprob: -10.398279190063477
    4. ' None' → logprob: -12.773279190063477
    5. '   ' → logprob: -14.773279190063477
    6. '-none' → logprob: -15.273279190063477
    7. '-n' → logprob: -17.273279190063477
    8. '-s' → logprob: -17.773279190063477
    9. ' ' → logprob: -18.273279190063477
    10. '0' → logprob: -18.648279190063477

Token 628: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6828238368034363
    2. ']' → logprob: -0.9328238368034363
    3. 'for' → logprob: -2.557823896408081
    4. ']*' → logprob: -3.807823896408081
    5. ' ]' → logprob: -6.557823657989502
    6. ')' → logprob: -9.43282413482666
    7. '	for' → logprob: -9.43282413482666
    8. ']+' → logprob: -10.55782413482666
    9. '   ' → logprob: -10.68282413482666
    10. ']*(' → logprob: -10.93282413482666

Token 629: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015920029545668513
    2. '(len' → logprob: -8.75015926361084
    3. ' len' → logprob: -14.25015926361084
    4. '[len' → logprob: -18.500158309936523
    5. '	len' → logprob: -20.625158309936523
    6. '   ' → logprob: -22.250158309936523
    7. '<len' → logprob: -23.000158309936523
    8. ',len' → logprob: -23.375158309936523
    9. '=len' → logprob: -23.500158309936523
    10. '(' → logprob: -25.125158309936523

Token 630: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001319063303526491
    2. 'pieces' → logprob: -9.000131607055664
    3. 'p' → logprob: -11.875131607055664
    4. '(piece' → logprob: -14.750131607055664
    5. '(parts' → logprob: -14.750131607055664
    6. ' pieces' → logprob: -15.000131607055664
    7. '(' → logprob: -15.500131607055664
    8. ' (' → logprob: -16.250131607055664
    9. '(points' → logprob: -18.375131607055664
    10. '(parent' → logprob: -18.625131607055664

Token 631: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -1.1637164789135568e-05
    2. 'pieces' → logprob: -11.375011444091797
    3. 'iece' → logprob: -16.625011444091797
    4. ' pieces' → logprob: -18.375011444091797
    5. 'ices' → logprob: -18.375011444091797
    6. ')' → logprob: -18.750011444091797
    7. 'ie' → logprob: -19.125011444091797
    8. '
' → logprob: -19.250011444091797
    9. '``' → logprob: -19.375011444091797
    10. '```' → logprob: -19.500011444091797

Token 632: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002099773846566677
    2. ')]' → logprob: -8.62520980834961
    3. ']' → logprob: -10.87520980834961
    4. ')
' → logprob: -12.00020980834961
    5. '])' → logprob: -13.25020980834961
    6. ' )' → logprob: -13.50020980834961
    7. '       ' → logprob: -14.25020980834961
    8. '))' → logprob: -14.62520980834961
    9. ')])' → logprob: -14.75020980834961
    10. '   ' → logprob: -15.50020980834961

Token 633: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47731730341911316
    2. '       ' → logprob: -0.9773173332214355
    3. '#' → logprob: -5.9773173332214355
    4. ' for' → logprob: -7.3523173332214355
    5. 'ground' → logprob: -11.352316856384277
    6. '   ' → logprob: -11.477316856384277
    7. '	for' → logprob: -11.727316856384277
    8. 'from' → logprob: -11.727316856384277
    9. '        
' → logprob: -12.102316856384277
    10. 'down' → logprob: -12.977316856384277

Token 634: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017186744138598442
    2. '#' (adapté à ' #') → logprob: -4.142186641693115
    3. 'support' → logprob: -7.517186641693115
    4. 'ground' → logprob: -9.267187118530273
    5. 'bottom' → logprob: -9.517187118530273
    6. '   ' → logprob: -9.767187118530273
    7. 'block' → logprob: -9.892187118530273
    8. '       ' → logprob: -10.142187118530273
    9. 'supported' → logprob: -10.142187118530273
    10. 'foot' → logprob: -10.267187118530273

Token 635: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03327644243836403
    2. '#' → logprob: -3.5332765579223633
    3. 'support' → logprob: -6.533276557922363
    4. 'bottom' → logprob: -8.158276557922363
    5. 'below' → logprob: -8.283276557922363
    6. 'supports' → logprob: -8.408276557922363
    7. 'from' → logprob: -8.658276557922363
    8. 'foot' → logprob: -8.658276557922363
    9. 'ground' → logprob: -8.783276557922363
    10. 'piece' → logprob: -9.033276557922363

Token 636: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09069087356328964
    2. 'y' → logprob: -3.090690851211548
    3. ' i' → logprob: -3.340690851211548
    4. ' y' → logprob: -5.215691089630127
    5. 'piece' → logprob: -8.965690612792969
    6. 'each' → logprob: -9.215690612792969
    7. ' each' → logprob: -9.840690612792969
    8. 'p' → logprob: -10.340690612792969
    9. ' piece' → logprob: -10.715690612792969
    10. '(i' → logprob: -11.340690612792969

Token 637: ' piece' (ID: 9047)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04952593147754669
    2. 'piece' → logprob: -3.6745259761810303
    3. ' i' → logprob: -3.9245259761810303
    4. ' piece' → logprob: -6.424525737762451
    5. 'y' → logprob: -6.674525737762451
    6. ' y' → logprob: -8.92452621459961
    7. ' (' → logprob: -10.04952621459961
    8. 'x' → logprob: -10.54952621459961
    9. 'p' → logprob: -10.67452621459961
    10. '(i' → logprob: -10.92452621459961

Token 638: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8763712048530579
    2. 'for' → logprob: -0.8763712048530579
    3. ' for' → logprob: -1.876371145248413
    4. ',' → logprob: -4.876371383666992
    5. ' i' → logprob: -6.001371383666992
    6. ':' → logprob: -6.501371383666992
    7. ' in' → logprob: -6.501371383666992
    8. '       ' → logprob: -7.751371383666992
    9. 'in' → logprob: -7.751371383666992
    10. ':
' → logprob: -9.001371383666992

Token 639: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004342529457062483
    2. ' for' → logprob: -5.504342555999756
    3. '       ' → logprob: -9.004342079162598
    4. 'support' → logprob: -10.379342079162598
    5. '   ' → logprob: -10.504342079162598
    6. '#' → logprob: -11.129342079162598
    7. 'supports' → logprob: -11.129342079162598
    8. 'check' → logprob: -11.754342079162598
    9. 'bases' → logprob: -11.879342079162598
    10. 'bottom' → logprob: -11.879342079162598

Token 640: ' if' (ID: 538)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.4366958737373352
    2. 'the' → logprob: -1.3116958141326904
    3. 'for' → logprob: -3.3116958141326904
    4. 'all' → logprob: -4.0616960525512695
    5. 'its' → logprob: -4.5616960525512695
    6. 'bottom' → logprob: -5.1866960525512695
    7. 'min' → logprob: -5.4366960525512695
    8. 'blocks' → logprob: -6.3116960525512695
    9. 'those' → logprob: -6.5616960525512695
    10. 'cells' → logprob: -7.0616960525512695

Token 641: ' it' (ID: 480)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.1594206094741821
    2. 'any' → logprob: -1.4094206094741821
    3. 'y' → logprob: -2.0344204902648926
    4. ' its' → logprob: -2.6594204902648926
    5. ' it' → logprob: -3.4094204902648926
    6. '(y' → logprob: -3.6594204902648926
    7. '(' → logprob: -3.7844204902648926
    8. 'it' → logprob: -3.7844204902648926
    9. ' all' → logprob: -3.9094204902648926
    10. ' (' → logprob: -3.9094204902648926

Token 642: ' touches' (ID: 45060)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.3023180663585663
    2. ' touches' → logprob: -2.4273180961608887
    3. 'has' → logprob: -2.4273180961608887
    4. 'supports' → logprob: -3.5523180961608887
    5. 'touch' → logprob: -3.9273180961608887
    6. ' supports' → logprob: -4.552318096160889
    7. 's' → logprob: -4.677318096160889
    8. ' is' → logprob: -5.552318096160889
    9. 'is' → logprob: -6.302318096160889
    10. '   ' → logprob: -6.302318096160889

Token 643: ' ground' (ID: 7740)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.29307955503463745
    2. 'the' → logprob: -2.0430796146392822
    3. 'y' → logprob: -2.6680796146392822
    4. ' any' → logprob: -4.168079376220703
    5. 'below' → logprob: -4.793079376220703
    6. 'its' → logprob: -4.918079376220703
    7. ' the' → logprob: -5.668079376220703
    8. '(y' → logprob: -5.918079376220703
    9. 'pieces' → logprob: -6.043079376220703
    10. '(' → logprob: -6.418079376220703

Token 644: ' or' (ID: 503)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06300647556781769
    2. ' for' → logprob: -2.9380064010620117
    3. 'ground' → logprob: -5.063006401062012
    4. '       ' → logprob: -6.688006401062012
    5. ' ground' → logprob: -9.563006401062012
    6. '<|end|>' → logprob: -9.563006401062012
    7. '.' → logprob: -9.563006401062012
    8. '
' → logprob: -9.813006401062012
    9. '        
' → logprob: -10.188006401062012
    10. '_ground' → logprob: -10.313006401062012

Token 645: ' piece' (ID: 9047)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11053768545389175
    2. 'any' → logprob: -3.2355377674102783
    3. ' not' → logprob: -3.6105377674102783
    4. 'has' → logprob: -3.7355377674102783
    5. 'if' → logprob: -5.485537528991699
    6. 'is' → logprob: -6.235537528991699
    7. 'for' → logprob: -6.360537528991699
    8. 'parent' → logprob: -6.735537528991699
    9. '(' → logprob: -7.110537528991699
    10. '(not' → logprob: -7.735537528991699

Token 646: ' below' (ID: 4895)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23836976289749146
    2. ' for' → logprob: -2.1133697032928467
    3. 'for' → logprob: -3.4883697032928467
    4. 's' → logprob: -4.113369941711426
    5. ' at' → logprob: -4.238369941711426
    6. '...' → logprob: -5.238369941711426
    7. '<|end|>' → logprob: -5.488369941711426
    8. ':' → logprob: -5.488369941711426
    9. ',' → logprob: -5.613369941711426
    10. '.' → logprob: -5.738369941711426

Token 647: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07722412794828415
    2. '       ' → logprob: -2.827224016189575
    3. ' for' → logprob: -4.202224254608154
    4. '
' → logprob: -9.577223777770996
    5. '<|end|>' → logprob: -9.952223777770996
    6. '        
' → logprob: -10.827223777770996
    7. ',' → logprob: -11.577223777770996
    8. '   ' → logprob: -11.827223777770996
    9. ')' → logprob: -12.577223777770996
    10. 'next' → logprob: -12.827223777770996

Token 648: ' bottom' (ID: 8725)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.8630341291427612
    2. 'x' → logprob: -1.6130341291427612
    3. 'the' → logprob: -1.9880341291427612
    4. 'y' → logprob: -1.9880341291427612
    5. 'which' → logprob: -2.988034248352051
    6. 'some' → logprob: -4.363034248352051
    7. 'block' → logprob: -4.488034248352051
    8. 'its' → logprob: -5.113034248352051
    9. 'a' → logprob: -5.988034248352051
    10. 'their' → logprob: -6.113034248352051

Token 649: ' faces' (ID: 22060)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7520880103111267
    2. ' for' → logprob: -1.5020880699157715
    3. '       ' → logprob: -1.6270880699157715
    4. ':' → logprob: -2.8770880699157715
    5. 's' → logprob: -4.5020880699157715
    6. '   ' → logprob: -4.8770880699157715
    7. 'of' → logprob: -5.2520880699157715
    8. '.' → logprob: -5.6270880699157715
    9. ' of' → logprob: -5.6270880699157715
    10. 'i' → logprob: -6.0020880699157715

Token 650: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02684473991394043
    2. 'for' → logprob: -3.7768447399139404
    3. ' for' → logprob: -5.7768449783325195
    4. '<|end|>' → logprob: -7.7768449783325195
    5. '<|end|>' → logprob: -10.65184497833252
    6. ',' → logprob: -11.02684497833252
    7. '        
' → logprob: -11.40184497833252
    8. '   ' → logprob: -12.15184497833252
    9. '
' → logprob: -12.52684497833252
    10. '...' → logprob: -12.90184497833252

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015261677326634526
    2. 'for' → logprob: -6.751526355743408
    3. ' for' → logprob: -8.37652587890625
    4. '<|end|>' → logprob: -9.12652587890625
    5. '        
' → logprob: -11.75152587890625
    6. '<|end|>' → logprob: -12.62652587890625
    7. '   ' → logprob: -13.12652587890625
    8. ',' → logprob: -13.75152587890625
    9. ')' → logprob: -14.75152587890625
    10. '...' → logprob: -14.87652587890625

Token 652: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011749001714633778
    2. '       ' → logprob: -9.125117301940918
    3. ' for' → logprob: -11.750117301940918
    4. 'ground' → logprob: -15.250117301940918
    5. 'from' → logprob: -15.500117301940918
    6. '   ' → logprob: -16.375118255615234
    7. '        
' → logprob: -17.125118255615234
    8. '	for' → logprob: -17.375118255615234
    9. '#' (adapté à ' #') → logprob: -18.125118255615234
    10. 'down' → logprob: -18.625118255615234

Token 653: ' bottom' (ID: 8725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.274932143744081e-05
    2. '       ' → logprob: -10.250042915344238
    3. ' for' → logprob: -12.125042915344238
    4. 'ground' → logprob: -14.250042915344238
    5. 'from' → logprob: -14.375042915344238
    6. '#' → logprob: -14.625042915344238
    7. '   ' → logprob: -16.375041961669922
    8. 'For' → logprob: -17.125041961669922
    9. '        
' → logprob: -17.250041961669922
    10. '	for' → logprob: -17.375041961669922

Token 654: ' blocks' (ID: 18125)
  Prédit: '_faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_faces' → logprob: -0.1511121392250061
    2. 'faces' → logprob: -2.5261120796203613
    3. 's' → logprob: -3.9011120796203613
    4. '_face' → logprob: -4.151112079620361
    5. '_of' → logprob: -5.401112079620361
    6. 'of' → logprob: -5.401112079620361
    7. '_edges' → logprob: -5.526112079620361
    8. '_positions' → logprob: -6.276112079620361
    9. '_support' → logprob: -6.651112079620361
    10. 'face' → logprob: -6.651112079620361

Token 655: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11911967396736145
    2. '=' → logprob: -3.244119644165039
    3. ':' → logprob: -3.869119644165039
    4. '_positions' → logprob: -4.994119644165039
    5. '   ' → logprob: -5.494119644165039
    6. 's' → logprob: -5.619119644165039
    7. '_of' → logprob: -5.619119644165039
    8. '=[]' → logprob: -5.744119644165039
    9. '_cells' → logprob: -5.869119644165039
    10. '       ' → logprob: -5.994119644165039

Token 656: ' those' (ID: 2617)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.022416671738028526
    2. ' bottom' → logprob: -4.772416591644287
    3. 'min' → logprob: -5.022416591644287
    4. '[]' → logprob: -6.272416591644287
    5. '[]
' → logprob: -6.647416591644287
    6. 'for' → logprob: -6.772416591644287
    7. '[b' → logprob: -7.772416591644287
    8. '[' → logprob: -7.897416591644287
    9. 'b' → logprob: -8.147417068481445
    10. '[min' → logprob: -8.397417068481445

Token 657: ' with' (ID: 483)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2723976373672485
    2. ' =' → logprob: -1.5223976373672485
    3. 'with' → logprob: -1.8973976373672485
    4. 'in' → logprob: -2.022397518157959
    5. '=' → logprob: -2.272397518157959
    6. ' in' → logprob: -2.647397518157959
    7. ' with' → logprob: -4.272397518157959
    8. ' at' → logprob: -4.647397518157959
    9. 'for' → logprob: -5.397397518157959
    10. 'x' → logprob: -6.022397518157959

Token 658: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.056104421615600586
    2. 'min' → logprob: -3.4311044216156006
    3. 'minimal' → logprob: -4.68110466003418
    4. 'minimum' → logprob: -5.30610466003418
    5. ' y' → logprob: -5.43110466003418
    6. ' minimal' → logprob: -5.93110466003418
    7. 'lowest' → logprob: -8.18110466003418
    8. ' minimum' → logprob: -8.55610466003418
    9. 'the' → logprob: -9.43110466003418
    10. '   ' → logprob: -9.55610466003418

Token 659: ' block' (ID: 4355)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5683882236480713
    2. ' ==' → logprob: -1.1933882236480713
    3. '=' → logprob: -2.0683882236480713
    4. ' =' → logprob: -6.818387985229492
    5. ']==' → logprob: -7.068387985229492
    6. 'min' → logprob: -7.193387985229492
    7. '()==' → logprob: -7.318387985229492
    8. '0' → logprob: -8.193387985229492
    9. ' ' → logprob: -9.318387985229492
    10. ')==' → logprob: -9.443387985229492

Token 660: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.756874680519104
    2. '=' → logprob: -1.381874680519104
    3. '==' → logprob: -1.381874680519104
    4. ' =' → logprob: -3.8818745613098145
    5. 's' → logprob: -5.0068745613098145
    6. 'min' → logprob: -8.631875038146973
    7. ')' → logprob: -8.756875038146973
    8. ',' → logprob: -8.881875038146973
    9. 'y' → logprob: -9.131875038146973
    10. ' at' → logprob: -9.381875038146973

Token 661: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13336777687072754
    2. '0' → logprob: -2.1333677768707275
    3. ' min' → logprob: -5.383367538452148
    4. '=min' → logprob: -7.258367538452148
    5. '=' → logprob: -7.758367538452148
    6. 'max' → logprob: -8.133367538452148
    7. 'y' → logprob: -9.008367538452148
    8. ' ' → logprob: -9.383367538452148
    9. '[min' → logprob: -10.508367538452148
    10. 'lambda' → logprob: -10.633367538452148

Token 662: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015560796484351158
    2. '.' → logprob: -5.515560626983643
    3. '<|end|>' → logprob: -5.765560626983643
    4. ' for' → logprob: -6.015560626983643
    5. ')' → logprob: -6.390560626983643
    6. 'for' → logprob: -6.640560626983643
    7. '
' → logprob: -7.515560626983643
    8. ':' → logprob: -7.640560626983643
    9. '        
' → logprob: -7.765560626983643
    10. '   ' → logprob: -8.0155611038208

Token 663: ' bottom' (ID: 8725)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9931334853172302
    2. 'not' → logprob: -1.868133544921875
    3. 'any' → logprob: -1.868133544921875
    4. '(grid' → logprob: -2.243133544921875
    5. 'grid' → logprob: -2.493133544921875
    6. '(y' → logprob: -3.118133544921875
    7. '(not' → logprob: -3.743133544921875
    8. ' all' → logprob: -4.118133544921875
    9. ' not' → logprob: -4.368133544921875
    10. '(all' → logprob: -4.493133544921875

Token 664: ' face' (ID: 4950)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.6253995299339294
    2. 'blocks' → logprob: -0.8753995299339294
    3. ' blocks' → logprob: -4.000399589538574
    4. 's' → logprob: -4.625399589538574
    5. 'faces' → logprob: -4.750399589538574
    6. '_faces' → logprob: -5.625399589538574
    7. '=' → logprob: -6.500399589538574
    8. 'y' → logprob: -6.750399589538574
    9. '_cells' → logprob: -7.125399589538574
    10. 'for' → logprob: -7.500399589538574

Token 665: ' touches' (ID: 45060)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7863192558288574
    2. '       ' → logprob: -2.1613192558288574
    3. ' for' → logprob: -2.5363192558288574
    4. '<|end|>' → logprob: -2.9113192558288574
    5. 'for' → logprob: -3.1613192558288574
    6. '   ' → logprob: -3.5363192558288574
    7. '_faces' → logprob: -3.5363192558288574
    8. ' of' → logprob: -3.6613192558288574
    9. ')' → logprob: -3.7863192558288574
    10. '=' → logprob: -4.036319255828857

Token 666: ' another' (ID: 3613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6021900773048401
    2. ' for' → logprob: -1.1021900177001953
    3. '=' → logprob: -4.102190017700195
    4. '       ' → logprob: -4.477190017700195
    5. ' at' → logprob: -4.727190017700195
    6. '   ' → logprob: -4.852190017700195
    7. ' on' → logprob: -4.977190017700195
    8. ' (' → logprob: -4.977190017700195
    9. ' of' → logprob: -5.102190017700195
    10. '(' → logprob: -5.352190017700195

Token 667: ' block' (ID: 4355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5134093165397644
    2. ' for' → logprob: -1.2634093761444092
    3. 'for' → logprob: -2.263409376144409
    4. '<|end|>' → logprob: -4.76340913772583
    5. '.' → logprob: -6.26340913772583
    6. ',' → logprob: -6.88840913772583
    7. ')' → logprob: -7.51340913772583
    8. ' of' → logprob: -7.51340913772583
    9. '...' → logprob: -8.388409614562988
    10. '<|end|>' → logprob: -8.513409614562988

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03834600746631622
    2. 'for' → logprob: -4.038345813751221
    3. ' for' → logprob: -4.038345813751221
    4. '<|end|>' → logprob: -6.163345813751221
    5. ',' → logprob: -9.538346290588379
    6. '.' → logprob: -10.163346290588379
    7. '<|end|>' → logprob: -10.538346290588379
    8. '...' → logprob: -10.788346290588379
    9. ')' → logprob: -11.163346290588379
    10. '   ' → logprob: -11.413346290588379

Token 670: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15640316903591156
    2. ' for' → logprob: -2.281403064727783
    3. '       ' → logprob: -3.156403064727783
    4. '<|end|>' → logprob: -11.031403541564941
    5. 'For' → logprob: -11.156403541564941
    6. '#' (adapté à ' #') → logprob: -11.406403541564941
    7. ')' → logprob: -12.031403541564941
    8. ',' → logprob: -12.531403541564941
    9. '	for' → logprob: -13.156403541564941
    10. '        
' → logprob: -13.406403541564941

Token 671: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003842471167445183
    2. ' for' → logprob: -5.628842353820801
    3. '       ' → logprob: -8.5038423538208
    4. '#' → logprob: -10.5038423538208
    5. 'ground' → logprob: -12.6288423538208
    6. 'bottom' → logprob: -12.6288423538208
    7. 'For' → logprob: -13.3788423538208
    8. '   ' → logprob: -14.1288423538208
    9. 'from' → logprob: -14.6288423538208
    10. 'foot' → logprob: -14.6288423538208

Token 672: ' blocks' (ID: 18125)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006882557645440102
    2. ' for' → logprob: -5.006882667541504
    3. '       ' → logprob: -8.756882667541504
    4. 'bottom' → logprob: -12.006882667541504
    5. '   ' → logprob: -13.256882667541504
    6. 'from' → logprob: -14.506882667541504
    7. '	for' → logprob: -14.881882667541504
    8. 'pieces' → logprob: -15.131882667541504
    9. '#' → logprob: -15.381882667541504
    10. ' bottom' → logprob: -15.881882667541504

Token 673: ' in' (ID: 306)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.2264970541000366
    2. 'for' → logprob: -1.4764970541000366
    3. ' in' → logprob: -1.9764970541000366
    4. ' with' → logprob: -2.226497173309326
    5. ' for' → logprob: -2.726497173309326
    6. 'in' → logprob: -2.851497173309326
    7. ' =' → logprob: -3.351497173309326
    8. ' at' → logprob: -3.476497173309326
    9. '=' → logprob: -4.101497173309326
    10. ' of' → logprob: -4.476497173309326

Token 674: ' piece' (ID: 9047)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.14081056416034698
    2. 'piece' → logprob: -2.140810489654541
    3. 'range' → logprob: -5.765810489654541
    4. '[' → logprob: -6.015810489654541
    5. '[p' → logprob: -6.140810489654541
    6. '[i' → logprob: -6.890810489654541
    7. 'p' → logprob: -6.890810489654541
    8. ' pieces' → logprob: -7.015810489654541
    9. 'block' → logprob: -7.015810489654541
    10. '[(' → logprob: -7.390810489654541

Token 675: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8634864687919617
    2. 'for' → logprob: -0.9884864687919617
    3. ' for' → logprob: -1.8634865283966064
    4. ':' → logprob: -3.3634865283966064
    5. ':
' → logprob: -5.488486289978027
    6. ' at' → logprob: -6.113486289978027
    7. ',' → logprob: -6.488486289978027
    8. '   ' → logprob: -6.613486289978027
    9. ')' → logprob: -6.613486289978027
    10. '           ' → logprob: -7.238486289978027

Token 676: ' blocks' (ID: 18125)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.013116340152919292
    2. ' y' → logprob: -4.388116359710693
    3. 'min' → logprob: -8.263115882873535
    4. '0' → logprob: -8.888115882873535
    5. '(y' → logprob: -10.138115882873535
    6. 'minimum' → logprob: -10.263115882873535
    7. 'block' → logprob: -10.388115882873535
    8. 'lowest' → logprob: -10.888115882873535
    9. ')' → logprob: -11.388115882873535
    10. 'any' → logprob: -11.638115882873535

Token 677: ' below' (ID: 4895)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.389455646276474
    2. 'with' → logprob: -1.5144556760787964
    3. ' with' → logprob: -3.389455556869507
    4. 'at' → logprob: -3.639455556869507
    5. ' =' → logprob: -4.389455795288086
    6. '=' → logprob: -4.639455795288086
    7. '<|end|>' → logprob: -5.639455795288086
    8. 'for' → logprob: -6.389455795288086
    9. '_with' → logprob: -6.639455795288086
    10. '_at' → logprob: -6.764455795288086

Token 678: ' them' (ID: 1373)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009864693507552147
    2. ' for' → logprob: -5.009864807128906
    3. 'for' → logprob: -5.884864807128906
    4. '                   ' → logprob: -9.509864807128906
    5. '           ' → logprob: -9.509864807128906
    6. '.' → logprob: -9.509864807128906
    7. ',' → logprob: -9.759864807128906
    8. '                       ' → logprob: -10.759864807128906
    9. '               ' → logprob: -11.009864807128906
    10. '   ' → logprob: -11.634864807128906

Token 679: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005702669732272625
    2. 'for' → logprob: -5.755702495574951
    3. ' for' → logprob: -6.005702495574951
    4. ',' → logprob: -10.75570297241211
    5. '           ' → logprob: -11.50570297241211
    6. '<|end|>' → logprob: -11.75570297241211
    7. '.' → logprob: -11.88070297241211
    8. '
' → logprob: -13.00570297241211
    9. '   ' → logprob: -13.00570297241211
    10. ':' → logprob: -13.50570297241211

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016218416392803192
    2. ' for' → logprob: -4.266218185424805
    3. 'for' → logprob: -6.516218185424805
    4. '        
' → logprob: -8.391218185424805
    5. ':' → logprob: -9.641218185424805
    6. '<|end|>' → logprob: -9.766218185424805
    7. ',' → logprob: -9.891218185424805
    8. '.' → logprob: -10.141218185424805
    9. '           ' → logprob: -10.891218185424805
    10. '
' → logprob: -11.141218185424805

Token 681: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04152023792266846
    2. 'for' (adapté à ' for') → logprob: -3.291520118713379
    3. ' for' → logprob: -5.666520118713379
    4. '        
' → logprob: -12.541520118713379
    5. '<|end|>' → logprob: -12.666520118713379
    6. '   ' → logprob: -13.291520118713379
    7. ',' → logprob: -13.666520118713379
    8. '
' → logprob: -14.166520118713379
    9. '           ' → logprob: -14.416520118713379
    10. '	for' → logprob: -14.541520118713379

Token 682: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027451513335108757
    2. ' i' → logprob: -3.652451515197754
    3. 'y' → logprob: -7.152451515197754
    4. 'piece' → logprob: -8.527451515197754
    5. ' y' → logprob: -9.527451515197754
    6. 'pi' → logprob: -10.402451515197754
    7. 'p' → logprob: -11.402451515197754
    8. 'yi' → logprob: -11.652451515197754
    9. 'pid' → logprob: -11.652451515197754
    10. ' piece' → logprob: -11.777451515197754

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03229066729545593
    2. ' in' → logprob: -4.032290458679199
    3. 'in' → logprob: -4.282290458679199
    4. ',p' → logprob: -9.1572904586792
    5. ' ,' → logprob: -9.4072904586792
    6. '   ' → logprob: -11.6572904586792
    7. '_,' → logprob: -11.7822904586792
    8. 'piece' → logprob: -12.5322904586792
    9. 'p' → logprob: -12.9072904586792
    10. '(piece' → logprob: -13.0322904586792

Token 684: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0013314292300492525
    2. 'comp' → logprob: -6.876331329345703
    3. ' piece' → logprob: -8.126331329345703
    4. ' comp' → logprob: -13.501331329345703
    5. 'pieces' → logprob: -14.376331329345703
    6. 'block' → logprob: -14.876331329345703
    7. '(piece' → logprob: -15.501331329345703
    8. 'p' → logprob: -16.376331329345703
    9. 'component' → logprob: -16.751331329345703
    10. 'piec' → logprob: -16.876331329345703

Token 685: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1597011536359787
    2. 'in' → logprob: -2.284701108932495
    3. ':' → logprob: -3.409701108932495
    4. ':
' → logprob: -4.534701347351074
    5. '   ' → logprob: -6.784701347351074
    6. '       ' → logprob: -7.784701347351074
    7. '           ' → logprob: -7.909701347351074
    8. ',' → logprob: -10.659701347351074
    9. '):
' → logprob: -11.409701347351074
    10. '                   ' → logprob: -12.159701347351074

Token 686: ' enumerate' (ID: 29671)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.018899347633123398
    2. 'piece' → logprob: -4.268899440765381
    3. 'enumer' → logprob: -5.393899440765381
    4. ' pieces' → logprob: -9.518898963928223
    5. ' enumerate' → logprob: -9.518898963928223
    6. 'range' → logprob: -10.643898963928223
    7. 'piec' → logprob: -12.768898963928223
    8. '(piece' → logprob: -13.268898963928223
    9. '   ' → logprob: -13.768898963928223
    10. '[(' → logprob: -14.018898963928223

Token 687: '(p' (ID: 2407)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.029341131448745728
    2. '(piece' → logprob: -4.029341220855713
    3. ' piece' → logprob: -4.904341220855713
    4. 'pieces' → logprob: -5.904341220855713
    5. 'comp' → logprob: -8.029340744018555
    6. ')' → logprob: -8.154340744018555
    7. ' pieces' → logprob: -9.779340744018555
    8. '(comp' → logprob: -10.029340744018555
    9. '):' → logprob: -10.154340744018555
    10. '   ' → logprob: -10.529340744018555

Token 688: 'ieces' (ID: 44654)
  Prédit: 'iece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -0.07393369823694229
    2. 'ieces' → logprob: -2.6989336013793945
    3. '):' → logprob: -5.9489336013793945
    4. '):
' → logprob: -6.8239336013793945
    5. '):

' → logprob: -8.698933601379395
    6. 'piece' → logprob: -10.073933601379395
    7. 'iec' → logprob: -10.823933601379395
    8. ')' → logprob: -10.948933601379395
    9. ':' → logprob: -11.073933601379395
    10. 'pieces' → logprob: -12.073933601379395

Token 689: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2532474398612976
    2. '):' → logprob: -1.5032474994659424
    3. ':' → logprob: -7.003247261047363
    4. ':
' → logprob: -8.378247261047363
    5. '):
' → logprob: -9.503247261047363
    6. '       ' → logprob: -9.503247261047363
    7. '           ' → logprob: -11.128247261047363
    8. '   ' → logprob: -11.378247261047363
    9. '():
' → logprob: -14.253247261047363
    10. '):

' → logprob: -14.753247261047363

Token 690: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16999737918376923
    2. '   ' → logprob: -1.9199973344802856
    3. '       ' → logprob: -4.669997215270996
    4. 'for' → logprob: -9.419997215270996
    5. '
' → logprob: -9.669997215270996
    6. 'bottom' → logprob: -10.044997215270996
    7. ' for' → logprob: -10.419997215270996
    8. '```' → logprob: -10.544997215270996
    9. 'found' → logprob: -10.919997215270996
    10. 'support' → logprob: -11.794997215270996

Token 691: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5679301023483276
    2. '   ' → logprob: -1.8179301023483276
    3. '           ' → logprob: -2.692930221557617
    4. 'bottom' → logprob: -3.317930221557617
    5. 'found' → logprob: -3.317930221557617
    6. 'supports' → logprob: -3.442930221557617
    7. 'below' → logprob: -3.692930221557617
    8. 'support' → logprob: -3.942930221557617
    9. 'parent' → logprob: -3.942930221557617
    10. 'supported' → logprob: -4.442930221557617

Token 692: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.944320023059845
    2. 'bottom' → logprob: -1.1943199634552002
    3. 'support' → logprob: -2.6943199634552
    4. 'supports' → logprob: -2.6943199634552
    5. 'supported' → logprob: -2.9443199634552
    6. 'found' → logprob: -3.5693199634552
    7. 'below' → logprob: -3.6943199634552
    8. 'ground' → logprob: -3.9443199634552
    9. '   ' → logprob: -4.194320201873779
    10. 'bases' → logprob: -5.319320201873779

Token 693: ' each' (ID: 2454)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11311616748571396
    2. '(x' → logprob: -2.2381162643432617
    3. ' (' → logprob: -9.238116264343262
    4. ' x' → logprob: -9.238116264343262
    5. '(' → logprob: -10.488116264343262
    6. '_,' → logprob: -10.863116264343262
    7. 'block' → logprob: -11.238116264343262
    8. '(_,' → logprob: -11.863116264343262
    9. 'px' → logprob: -11.988116264343262
    10. '(b' → logprob: -12.863116264343262

Token 694: ' block' (ID: 4355)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12081750482320786
    2. 'x' → logprob: -2.2458174228668213
    3. '(' → logprob: -5.3708176612854
    4. ' (' → logprob: -5.7458176612854
    5. ' x' → logprob: -9.620817184448242
    6. '   ' → logprob: -10.995817184448242
    7. '(cx' → logprob: -11.495817184448242
    8. '(px' → logprob: -12.245817184448242
    9. ',x' → logprob: -12.370817184448242
    10. 'block' → logprob: -12.370817184448242

Token 695: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14563055336475372
    2. 'in' → logprob: -2.6456305980682373
    3. '(x' → logprob: -3.7706305980682373
    4. '           ' → logprob: -4.395630359649658
    5. '               ' → logprob: -4.395630359649658
    6. 'x' → logprob: -4.770630359649658
    7. ',' → logprob: -5.520630359649658
    8. ' (' → logprob: -6.020630359649658
    9. ' x' → logprob: -7.520630359649658
    10. ',x' → logprob: -7.770630359649658

Token 696: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0001322639436693862
    2. ' piece' → logprob: -9.00013256072998
    3. 'pieces' → logprob: -11.75013256072998
    4. '(piece' → logprob: -14.75013256072998
    5. '   ' → logprob: -15.12513256072998
    6. 'component' → logprob: -16.000131607055664
    7. '       ' → logprob: -16.750131607055664
    8. 'piec' → logprob: -17.375131607055664
    9. 'pie' → logprob: -18.000131607055664
    10. '           ' → logprob: -18.250131607055664

Token 697: ' check' (ID: 2371)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45933061838150024
    2. ':' → logprob: -1.4593305587768555
    3. ':
' → logprob: -2.3343305587768555
    4. '           ' → logprob: -3.4593305587768555
    5. ',' → logprob: -4.9593305587768555
    6. ' for' → logprob: -9.459330558776855
    7. '):
' → logprob: -9.584330558776855
    8. '                
' → logprob: -9.834330558776855
    9. '   ' → logprob: -10.084330558776855
    10. 'for' → logprob: -10.209330558776855

Token 698: ' block' (ID: 4355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2104315161705017
    2. ' if' → logprob: -2.3354315757751465
    3. '(x' → logprob: -2.5854315757751465
    4. 'for' → logprob: -4.9604315757751465
    5. '   ' → logprob: -5.8354315757751465
    6. '           ' → logprob: -5.9604315757751465
    7. 'x' → logprob: -6.4604315757751465
    8. ' (' → logprob: -6.7104315757751465
    9. '(' → logprob: -7.2104315757751465
    10. '               ' → logprob: -7.3354315757751465

Token 699: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.3174387216567993
    2. 'x' → logprob: -2.0674386024475098
    3. '(x' → logprob: -2.8174386024475098
    4. 'if' → logprob: -3.1924386024475098
    5. ' below' → logprob: -4.56743860244751
    6. '           ' → logprob: -4.56743860244751
    7. 'b' → logprob: -5.31743860244751
    8. '_b' → logprob: -5.56743860244751
    9. '(' → logprob: -5.69243860244751
    10. ' if' → logprob: -6.06743860244751

Token 700: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12449587881565094
    2. ' (' → logprob: -2.6244959831237793
    3. '(x' → logprob: -4.249495983123779
    4. ',' → logprob: -4.374495983123779
    5. ' for' → logprob: -4.749495983123779
    6. ':' → logprob: -5.874495983123779
    7. '(' → logprob: -5.999495983123779
    8. ' at' → logprob: -7.249495983123779
    9. ' in' → logprob: -7.624495983123779
    10. 'for' → logprob: -7.749495983123779

Token 701: ' none' (ID: 12698)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.05833212658762932
    2. '(' → logprob: -3.6833322048187256
    3. '(x' → logprob: -4.3083319664001465
    4. 'y' → logprob: -4.6833319664001465
    5. '(i' → logprob: -5.5583319664001465
    6. '(block' → logprob: -6.1833319664001465
    7. ' (' → logprob: -6.6833319664001465
    8. '(piece' → logprob: -7.3083319664001465
    9. 'block' → logprob: -7.6833319664001465
    10. '((' → logprob: -9.058332443237305

Token 702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6698063611984253
    2. ',' → logprob: -1.4198063611984253
    3. ' in' → logprob: -2.294806480407715
    4. ':
' → logprob: -2.544806480407715
    5. ' or' → logprob: -4.044806480407715
    6. ' (' → logprob: -4.919806480407715
    7. '           ' → logprob: -5.169806480407715
    8. ' not' → logprob: -5.294806480407715
    9. ' ==' → logprob: -5.544806480407715
    10. '.' → logprob: -5.669806480407715

Token 703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5389370918273926
    2. '               ' → logprob: -1.0389370918273926
    3. ' for' → logprob: -3.0389370918273926
    4. ' if' → logprob: -5.538937091827393
    5. '            ' → logprob: -6.413937091827393
    6. ' y' → logprob: -6.788937091827393
    7. ',' → logprob: -6.788937091827393
    8. ' has' → logprob: -7.288937091827393
    9. ' is' → logprob: -7.538937091827393
    10. ' (' → logprob: -7.788937091827393

Token 704: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25621750950813293
    2. '           ' → logprob: -1.6312174797058105
    3. 'for' → logprob: -4.2562174797058105
    4. '               ' → logprob: -5.2562174797058105
    5. ' has' → logprob: -5.3812174797058105
    6. ' found' → logprob: -6.2562174797058105
    7. ' if' → logprob: -7.2562174797058105
    8. ' can' → logprob: -7.6312174797058105
    9. ' touches' → logprob: -7.7562174797058105
    10. ' is' → logprob: -7.8812174797058105

Token 705: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6015360355377197
    2. 'for' → logprob: -2.4765360355377197
    3. 'support' → logprob: -2.6015360355377197
    4. 'supports' → logprob: -2.6015360355377197
    5. 'supported' → logprob: -3.4765360355377197
    6. ' supports' → logprob: -3.7265360355377197
    7. ' for' → logprob: -3.7265360355377197
    8. 'found' → logprob: -3.7265360355377197
    9. 'below' → logprob: -3.9765360355377197
    10. '               ' → logprob: -4.101535797119141

Token 706: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1821011304855347
    2. 'block' → logprob: -1.6821011304855347
    3. ' y' → logprob: -2.307101249694824
    4. 'piece' → logprob: -2.432101249694824
    5. ' (' → logprob: -2.932101249694824
    6. ' block' → logprob: -3.057101249694824
    7. '(piece' → logprob: -3.182101249694824
    8. 'all' → logprob: -3.182101249694824
    9. ' all' → logprob: -3.307101249694824
    10. '(y' → logprob: -3.807101249694824

Token 707: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.582809567451477
    2. ' ==' → logprob: -0.832809567451477
    3. '=' → logprob: -5.2078094482421875
    4. ' ' → logprob: -8.207809448242188
    5. ' =' → logprob: -8.707809448242188
    6. '()==' → logprob: -8.832809448242188
    7. '(x' → logprob: -9.207809448242188
    8. ' (' → logprob: -9.332809448242188
    9. '           ' → logprob: -9.332809448242188
    10. ']==' → logprob: -9.707809448242188

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032307098153978586
    2. ' ' → logprob: -5.753230571746826
    3. '=' → logprob: -10.503231048583984
    4. 'block' → logprob: -11.503231048583984
    5. ' block' → logprob: -12.878231048583984
    6. '   ' → logprob: -13.128231048583984
    7. '           ' → logprob: -13.628231048583984
    8. '       ' → logprob: -13.628231048583984
    9. ' =' → logprob: -13.753231048583984
    10. '==' → logprob: -13.878231048583984

Token 709: ' =>' (ID: 871)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6464285254478455
    2. ' and' → logprob: -1.7714285850524902
    3. ':' → logprob: -2.0214285850524902
    4. ':
' → logprob: -2.7714285850524902
    5. '           ' → logprob: -3.0214285850524902
    6. '               ' → logprob: -3.0214285850524902
    7. ',' → logprob: -5.39642858505249
    8. ' if' → logprob: -6.39642858505249
    9. '                       ' → logprob: -6.64642858505249
    10. 'and' → logprob: -6.64642858505249

Token 710: ' touches' (ID: 45060)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.03837767243385315
    2. ' parent' → logprob: -3.2883777618408203
    3. '           ' → logprob: -8.16337776184082
    4. '               ' → logprob: -10.53837776184082
    5. '   ' → logprob: -11.16337776184082
    6. '	parent' → logprob: -12.28837776184082
    7. '                   ' → logprob: -13.16337776184082
    8. '       ' → logprob: -14.41337776184082
    9. ' ' → logprob: -14.41337776184082
    10. '[parent' → logprob: -14.91337776184082

Token 711: ' ground' (ID: 7740)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.35647016763687134
    2. ' ground' → logprob: -1.2314701080322266
    3. ' the' → logprob: -5.356470108032227
    4. 'the' → logprob: -6.231470108032227
    5. '0' → logprob: -6.981470108032227
    6. '_ground' → logprob: -8.481470108032227
    7. 'floor' → logprob: -10.231470108032227
    8. 'down' → logprob: -10.606470108032227
    9. ' ' → logprob: -10.731470108032227
    10. ' floor' → logprob: -10.981470108032227

Token 712: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014785595703870058
    2. ',' → logprob: -7.501478672027588
    3. '       ' → logprob: -8.37647819519043
    4. '<|end|>' → logprob: -8.37647819519043
    5. '               ' → logprob: -9.12647819519043
    6. ' for' → logprob: -9.37647819519043
    7. '.' → logprob: -9.75147819519043
    8. ':' → logprob: -10.12647819519043
    9. '   ' → logprob: -10.75147819519043
    10. '          ' → logprob: -11.00147819519043

Token 713: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002045221161097288
    2. ' for' → logprob: -6.502045154571533
    3. '       ' → logprob: -8.002045631408691
    4. ',' → logprob: -9.877045631408691
    5. '<|end|>' → logprob: -10.127045631408691
    6. 'for' → logprob: -10.377045631408691
    7. '               ' → logprob: -10.627045631408691
    8. '   ' → logprob: -11.002045631408691
    9. ' or' → logprob: -11.377045631408691
    10. '          ' → logprob: -12.127045631408691

Token 714: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028200577944517136
    2. ' for' → logprob: -3.653200626373291
    3. ' or' → logprob: -7.403200626373291
    4. 'for' → logprob: -7.528200626373291
    5. '       ' → logprob: -8.653200149536133
    6. ',' → logprob: -8.903200149536133
    7. '   ' → logprob: -9.153200149536133
    8. '               ' → logprob: -9.403200149536133
    9. '          ' → logprob: -10.153200149536133
    10. '            ' → logprob: -10.153200149536133

Token 715: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6914791464805603
    2. 'for' → logprob: -0.8164791464805603
    3. 'has' → logprob: -4.691479206085205
    4. ' for' → logprob: -4.816479206085205
    5. 'touch' → logprob: -4.941479206085205
    6. 'parent' → logprob: -5.316479206085205
    7. 'found' → logprob: -5.441479206085205
    8. 'else' → logprob: -5.691479206085205
    9. '   ' → logprob: -5.691479206085205
    10. 'support' → logprob: -5.816479206085205

Token 716: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5758898258209229
    2. '               ' → logprob: -1.2008898258209229
    3. ' if' → logprob: -2.325889825820923
    4. 'for' → logprob: -3.825889825820923
    5. 'if' → logprob: -5.700889587402344
    6. ' block' → logprob: -6.075889587402344
    7. '           ' → logprob: -6.200889587402344
    8. ' y' → logprob: -6.325889587402344
    9. ':' → logprob: -6.450889587402344
    10. ' continue' → logprob: -6.950889587402344

Token 717: ' there' (ID: 1354)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.95236736536026
    2. ' (' → logprob: -1.7023673057556152
    3. '(block' → logprob: -1.8273673057556152
    4. '(x' → logprob: -1.9523673057556152
    5. '(grid' → logprob: -3.0773673057556152
    6. '(c' → logprob: -3.2023673057556152
    7. 'block' → logprob: -4.327367305755615
    8. '(' → logprob: -4.702367305755615
    9. '(parent' → logprob: -5.202367305755615
    10. 'grid' → logprob: -5.702367305755615

Token 718: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.060762371867895126
    2. ' is' → logprob: -3.060762405395508
    3. 'not' → logprob: -5.560762405395508
    4. ' not' → logprob: -6.560762405395508
    5. 'y' → logprob: -6.685762405395508
    6. ''s' → logprob: -6.810762405395508
    7. '==' → logprob: -6.935762405395508
    8. '-' → logprob: -7.310762405395508
    9. 'block' → logprob: -8.060762405395508
    10. 's' → logprob: -8.185762405395508

Token 719: ' a' (ID: 261)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.640667200088501
    2. 'no' → logprob: -1.765667200088501
    3. '(block' → logprob: -1.765667200088501
    4. ' no' → logprob: -2.015667200088501
    5. '(x' → logprob: -2.140667200088501
    6. '(' → logprob: -2.390667200088501
    7. ' (' → logprob: -3.015667200088501
    8. ' block' → logprob: -3.640667200088501
    9. '(no' → logprob: -4.265666961669922
    10. '(y' → logprob: -4.890666961669922

Token 720: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0511620007455349
    2. ' block' → logprob: -3.676162004470825
    3. 'piece' → logprob: -4.426161766052246
    4. '(x' → logprob: -4.926161766052246
    5. '(' → logprob: -6.051161766052246
    6. ' (' → logprob: -6.551161766052246
    7. '(block' → logprob: -7.176161766052246
    8. '(piece' → logprob: -7.926161766052246
    9. ' piece' → logprob: -9.301161766052246
    10. 'grid' → logprob: -9.551161766052246

Token 721: ' below' (ID: 4895)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.9292166829109192
    2. 'below' → logprob: -0.9292166829109192
    3. ' below' → logprob: -2.0542166233062744
    4. 'at' → logprob: -3.1792166233062744
    5. '(x' → logprob: -3.9292166233062744
    6. ',' → logprob: -5.0542168617248535
    7. ' (' → logprob: -6.3042168617248535
    8. ' in' → logprob: -6.5542168617248535
    9. '[(' → logprob: -6.5542168617248535
    10. 'Below' → logprob: -6.5542168617248535

Token 722: ' belonging' (ID: 55199)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6066694855690002
    2. 'and' → logprob: -1.7316694259643555
    3. ' in' → logprob: -2.6066694259643555
    4. ':' → logprob: -2.7316694259643555
    5. ' at' → logprob: -3.4816694259643555
    6. '                   ' → logprob: -3.8566694259643555
    7. ':
' → logprob: -4.1066694259643555
    8. '               ' → logprob: -4.1066694259643555
    9. 'in' → logprob: -4.6066694259643555
    10. ',' → logprob: -4.7316694259643555

Token 723: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.009954524226486683
    2. ' to' → logprob: -4.634954452514648
    3. '_to' → logprob: -9.009954452514648
    4. '               ' → logprob: -10.634954452514648
    5. '           ' → logprob: -10.884954452514648
    6. '   ' → logprob: -11.759954452514648
    7. 'block' → logprob: -12.384954452514648
    8. '	to' → logprob: -12.759954452514648
    9. '(to' → logprob: -13.134954452514648
    10. '       ' → logprob: -13.134954452514648

Token 724: ' a' (ID: 261)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.027016475796699524
    2. 'piece' → logprob: -4.277016639709473
    3. 'None' → logprob: -5.402016639709473
    4. ' block' → logprob: -5.527016639709473
    5. '(' → logprob: -6.277016639709473
    6. 'different' → logprob: -7.652016639709473
    7. '(block' → logprob: -7.777016639709473
    8. 'parent' → logprob: -7.902016639709473
    9. 'pieces' → logprob: -8.527016639709473
    10. 'another' → logprob: -8.777016639709473

Token 725: ' different' (ID: 2647)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.0012890440411865711
    2. 'piece' → logprob: -6.751288890838623
    3. ' different' → logprob: -9.626289367675781
    4. 'other' → logprob: -10.001289367675781
    5. 'd' → logprob: -12.501289367675781
    6. 'block' → logprob: -14.001289367675781
    7. '(piece' → logprob: -14.501289367675781
    8. 'diff' → logprob: -14.751289367675781
    9. 'ifferent' → logprob: -15.001289367675781
    10. 'another' → logprob: -15.126289367675781

Token 726: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0003454753023106605
    2. ' piece' → logprob: -8.375345230102539
    3. 'block' → logprob: -9.500345230102539
    4. '_piece' → logprob: -10.750345230102539
    5. '(piece' → logprob: -11.250345230102539
    6. '
' → logprob: -12.875345230102539
    7. '-piece' → logprob: -14.750345230102539
    8. ')' → logprob: -14.750345230102539
    9. 'pieces' → logprob: -15.125345230102539
    10. 'i' → logprob: -15.250345230102539

Token 727: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5180172324180603
    2. ':
' → logprob: -1.768017292022705
    3. ',' → logprob: -2.268017292022705
    4. '           ' → logprob: -2.518017292022705
    5. ' for' → logprob: -4.518017292022705
    6. ' and' → logprob: -4.768017292022705
    7. '.' → logprob: -5.018017292022705
    8. ' in' → logprob: -5.268017292022705
    9. '               ' → logprob: -5.893017292022705
    10. ' at' → logprob: -5.893017292022705

Token 728: ' that' (ID: 484)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0404326431453228
    2. ' parent' → logprob: -3.5404326915740967
    3. 'p' → logprob: -5.290432453155518
    4. 'block' → logprob: -5.915432453155518
    5. 'neighbor' → logprob: -7.165432453155518
    6. 'below' → logprob: -8.040432929992676
    7. '               ' → logprob: -8.290432929992676
    8. 'b' → logprob: -8.290432929992676
    9. 'piece' → logprob: -8.415432929992676
    10. ' p' → logprob: -8.540432929992676

Token 729: ' piece' (ID: 9047)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.8974252939224243
    2. ' block' → logprob: -1.0224252939224243
    3. 'piece' → logprob: -1.8974252939224243
    4. ' piece' → logprob: -2.7724251747131348
    5. ' is' → logprob: -5.647425174713135
    6. 'neighbor' → logprob: -6.022425174713135
    7. 'y' → logprob: -6.397425174713135
    8. 'x' → logprob: -6.522425174713135
    9. 'below' → logprob: -6.647425174713135
    10. ' (' → logprob: -6.647425174713135

Token 730: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.522645115852356
    2. '           ' → logprob: -1.897645115852356
    3. ':
' → logprob: -2.2726449966430664
    4. ',' → logprob: -3.2726449966430664
    5. ' at' → logprob: -3.8976449966430664
    6. ' for' → logprob: -4.022644996643066
    7. '               ' → logprob: -4.147644996643066
    8. 'for' → logprob: -4.647644996643066
    9. ' in' → logprob: -4.772644996643066
    10. ' below' → logprob: -5.147644996643066

Token 731: ' parent' (ID: 5980)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0028576552867889404
    2. ' block' → logprob: -5.877857685089111
    3. 'parent' → logprob: -10.002857208251953
    4. 'i' → logprob: -12.877857208251953
    5. 'piece' → logprob: -13.377857208251953
    6. '(block' → logprob: -14.127857208251953
    7. '   ' → logprob: -14.252857208251953
    8. '	block' → logprob: -14.252857208251953
    9. '
' → logprob: -15.002857208251953
    10. 'None' → logprob: -15.377857208251953

Token 732: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014953380450606346
    2. '
' → logprob: -7.126495361328125
    3. '<|end|>' → logprob: -8.751495361328125
    4. ',' → logprob: -9.001495361328125
    5. '       ' → logprob: -9.501495361328125
    6. '.' → logprob: -9.626495361328125
    7. '               ' → logprob: -9.876495361328125
    8. ' for' → logprob: -10.376495361328125
    9. ':' → logprob: -10.376495361328125
    10. '          ' → logprob: -10.501495361328125

Token 733: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008259449969045818
    2. ' for' → logprob: -7.500825881958008
    3. '       ' → logprob: -8.625825881958008
    4. '   ' → logprob: -10.625825881958008
    5. '               ' → logprob: -11.125825881958008
    6. '
' → logprob: -11.125825881958008
    7. ',' → logprob: -11.875825881958008
    8. 'for' → logprob: -12.250825881958008
    9. '<|end|>' → logprob: -12.250825881958008
    10. '          ' → logprob: -12.750825881958008

Token 734: ' parent' (ID: 5980)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026203572750091553
    2. ' for' → logprob: -3.7762036323547363
    3. 'for' → logprob: -6.026203632354736
    4. '   ' → logprob: -8.151203155517578
    5. '       ' → logprob: -8.651203155517578
    6. '               ' → logprob: -10.526203155517578
    7. '
' → logprob: -11.026203155517578
    8. ' ' → logprob: -11.526203155517578
    9. '          ' → logprob: -12.401203155517578
    10. '         ' → logprob: -12.651203155517578

Token 735: '_found' (ID: 50825)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.4544520974159241
    2. '=' → logprob: -1.9544520378112793
    3. '_found' → logprob: -2.4544520378112793
    4. '_id' → logprob: -2.7044520378112793
    5. ' =' → logprob: -2.9544520378112793
    6. '=None' → logprob: -5.454452037811279
    7. '_candidates' → logprob: -5.579452037811279
    8. 'of' → logprob: -5.954452037811279
    9. '_' → logprob: -6.454452037811279
    10. '_idx' → logprob: -6.579452037811279

Token 736: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891435921192169
    2. ' =' → logprob: -2.5789144039154053
    3. '=True' → logprob: -10.953914642333984
    4. '=False' → logprob: -12.078914642333984
    5. '   ' → logprob: -15.203914642333984
    6. ' ' → logprob: -15.203914642333984
    7. ':' → logprob: -15.703914642333984
    8. '=None' → logprob: -16.078914642333984
    9. ',' → logprob: -16.203914642333984
    10. '_' → logprob: -16.328914642333984

Token 737: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.015084865503013134
    2. 'None' → logprob: -4.265084743499756
    3. ' False' → logprob: -7.015084743499756
    4. ' None' → logprob: -10.765085220336914
    5. '   ' → logprob: -14.140085220336914
    6. 'True' → logprob: -14.140085220336914
    7. 'false' → logprob: -17.015085220336914
    8. 'F' → logprob: -17.140085220336914
    9. '0' → logprob: -17.265085220336914
    10. ' ' → logprob: -17.515085220336914

Token 738: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000959700730163604
    2. ' for' → logprob: -7.250959873199463
    3. 'for' → logprob: -9.500959396362305
    4. '
' → logprob: -9.625959396362305
    5. '       ' → logprob: -10.000959396362305
    6. '   ' → logprob: -10.875959396362305
    7. '               ' → logprob: -11.125959396362305
    8. '                   ' → logprob: -11.750959396362305
    9. ',' → logprob: -12.125959396362305
    10. '	       ' → logprob: -13.000959396362305

Token 739: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002933942887466401
    2. ' for' → logprob: -8.375293731689453
    3. 'for' → logprob: -10.000293731689453
    4. '       ' → logprob: -11.250293731689453
    5. '   ' → logprob: -12.875293731689453
    6. '               ' → logprob: -13.875293731689453
    7. '                   ' → logprob: -15.000293731689453
    8. '	       ' → logprob: -15.375293731689453
    9. '```' → logprob: -16.125293731689453
    10. '		' → logprob: -16.625293731689453

Token 740: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5850598812103271
    2. '           ' → logprob: -0.8350598812103271
    3. ' for' → logprob: -4.710060119628906
    4. '   ' → logprob: -9.710060119628906
    5. '       ' → logprob: -11.585060119628906
    6. ' ' → logprob: -13.085060119628906
    7. '               ' → logprob: -14.210060119628906
    8. '          ' → logprob: -14.460060119628906
    9. '	for' → logprob: -14.585060119628906
    10. '         ' → logprob: -15.210060119628906

Token 741: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3767084777355194
    2. 'x' → logprob: -1.2517085075378418
    3. ' (' → logprob: -3.751708507537842
    4. ' x' → logprob: -5.501708507537842
    5. '(' → logprob: -9.126708030700684
    6. '   ' → logprob: -9.376708030700684
    7. '(cx' → logprob: -9.501708030700684
    8. ' ' → logprob: -11.501708030700684
    9. '(px' → logprob: -12.251708030700684
    10. '(c' → logprob: -12.501708030700684

Token 742: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.895480277715251e-06
    2. ' x' → logprob: -12.250008583068848
    3. '(x' → logprob: -12.500008583068848
    4. '   ' → logprob: -16.000009536743164
    5. ')x' → logprob: -16.875009536743164
    6. '_x' → logprob: -17.375009536743164
    7. 'bx' → logprob: -17.375009536743164
    8. 'cx' → logprob: -18.000009536743164
    9. '```' → logprob: -18.375009536743164
    10. '_,' → logprob: -18.500009536743164

Token 743: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5760602355003357
    2. ',' → logprob: -0.8260602355003357
    3. ' ,' → logprob: -9.07606029510498
    4. ',
' → logprob: -13.57606029510498
    5. ',user' → logprob: -13.95106029510498
    6. 'y' → logprob: -14.20106029510498
    7. ',x' → logprob: -14.32606029510498
    8. '_,' → logprob: -14.82606029510498
    9. ',(' → logprob: -15.32606029510498
    10. ',n' → logprob: -15.45106029510498

Token 744: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041003660298883915
    2. '-' → logprob: -5.629100322723389
    3. ' )' → logprob: -8.879100799560547
    4. ' -' → logprob: -9.379100799560547
    5. '           ' → logprob: -9.504100799560547
    6. '):
' → logprob: -9.879100799560547
    7. '-)' → logprob: -10.254100799560547
    8. ' in' → logprob: -10.879100799560547
    9. '               ' → logprob: -11.129100799560547
    10. 'in' → logprob: -11.129100799560547

Token 745: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07896833121776581
    2. 'in' → logprob: -2.5789682865142822
    3. ',' → logprob: -10.828968048095703
    4. '           ' → logprob: -10.828968048095703
    5. '	in' → logprob: -11.328968048095703
    6. '               ' → logprob: -11.453968048095703
    7. '            ' → logprob: -12.953968048095703
    8. '   ' → logprob: -13.453968048095703
    9. ':' → logprob: -13.703968048095703
    10. 'import' → logprob: -13.828968048095703

Token 746: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.006818146910518408
    2. ' piece' → logprob: -5.0068182945251465
    3. 'pieces' → logprob: -9.256817817687988
    4. '(piece' → logprob: -12.006817817687988
    5. ' pieces' → logprob: -14.631817817687988
    6. 'piec' → logprob: -15.006817817687988
    7. '   ' → logprob: -16.256818771362305
    8. 'pie' → logprob: -16.506818771362305
    9. ' ' → logprob: -16.756818771362305
    10. 'part' → logprob: -17.381818771362305

Token 747: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25711652636528015
    2. ':' → logprob: -1.5071165561676025
    3. '               ' → logprob: -6.007116317749023
    4. '           ' → logprob: -6.382116317749023
    5. '):
' → logprob: -7.882116317749023
    6. '       ' → logprob: -8.632116317749023
    7. ',' → logprob: -9.257116317749023
    8. ':

' → logprob: -9.382116317749023
    9. ' if' → logprob: -9.632116317749023
    10. '   ' → logprob: -10.382116317749023

Token 748: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033462056890130043
    2. '           ' → logprob: -5.8783464431762695
    3. ' if' → logprob: -8.00334644317627
    4. '	           ' → logprob: -9.75334644317627
    5. '<|end|>' → logprob: -9.75334644317627
    6. '                
' → logprob: -11.12834644317627
    7. '   ' → logprob: -11.75334644317627
    8. '                   ' → logprob: -11.87834644317627
    9. '            
' → logprob: -12.12834644317627
    10. '       ' → logprob: -12.12834644317627

Token 749: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7085152268409729
    2. ' if' → logprob: -0.7085152268409729
    3. 'if' (adapté à ' if') → logprob: -4.208515167236328
    4. '           ' → logprob: -8.583515167236328
    5. '                   ' → logprob: -9.833515167236328
    6. '	           ' → logprob: -10.083515167236328
    7. '   ' → logprob: -11.083515167236328
    8. '	if' → logprob: -11.083515167236328
    9. '                ' → logprob: -11.083515167236328
    10. ' ' → logprob: -12.083515167236328

Token 750: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.01416398212313652
    2. 'y' → logprob: -4.264163970947266
    3. '                   ' → logprob: -15.889163970947266
    4. '	y' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.139163970947266
    6. '                ' → logprob: -17.389163970947266
    7. ')y' → logprob: -17.514163970947266
    8. '(y' → logprob: -17.889163970947266
    9. '               ' → logprob: -18.014163970947266
    10. ' ' → logprob: -18.639163970947266

Token 751: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4291074573993683
    2. '==' → logprob: -1.054107427597046
    3. '0' → logprob: -8.679107666015625
    4. '-' → logprob: -8.929107666015625
    5. ' ' → logprob: -10.804107666015625
    6. ')==' → logprob: -10.929107666015625
    7. ' -' → logprob: -11.054107666015625
    8. '=' → logprob: -11.054107666015625
    9. '>' → logprob: -11.679107666015625
    10. ')' → logprob: -12.179107666015625

Token 752: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.37501335144043
    4. '۰' → logprob: -19.75001335144043
    5. '
' → logprob: -20.87501335144043
    6. '1' → logprob: -21.12501335144043
    7. '```' → logprob: -21.12501335144043
    8. '=' → logprob: -21.37501335144043
    9. '<|end|>' → logprob: -21.62501335144043
    10. '                   ' → logprob: -21.75001335144043

Token 753: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '۰' → logprob: -20.500001907348633
    5. '=' → logprob: -22.000001907348633
    6. '０' → logprob: -22.750001907348633
    7. '
' → logprob: -22.750001907348633
    8. '```' → logprob: -22.750001907348633
    9. '           ' → logprob: -23.000001907348633
    10. '  ' → logprob: -23.000001907348633

Token 754: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.44068533182144165
    2. ' or' → logprob: -1.4406852722167969
    3. ':' → logprob: -2.315685272216797
    4. '                   ' → logprob: -4.065685272216797
    5. '               ' → logprob: -6.190685272216797
    6. 'or' → logprob: -7.065685272216797
    7. '                       ' → logprob: -7.565685272216797
    8. ' and' → logprob: -9.190685272216797
    9. '           ' → logprob: -9.815685272216797
    10. '):
' → logprob: -9.940685272216797

Token 755: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005830573500134051
    2. '               ' → logprob: -7.875583171844482
    3. '                       ' → logprob: -9.625582695007324
    4. ':
' → logprob: -10.125582695007324
    5. '           ' → logprob: -10.750582695007324
    6. '                    
' → logprob: -11.250582695007324
    7. '                  ' → logprob: -11.250582695007324
    8. ':' → logprob: -11.375582695007324
    9. '<|end|>' → logprob: -11.875582695007324
    10. '                           ' → logprob: -12.250582695007324

Token 756: ' #' (ID: 1069)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.6228078603744507
    2. 'parent' → logprob: -1.3728078603744507
    3. '                   ' → logprob: -1.6228078603744507
    4. '                       ' → logprob: -4.74780797958374
    5. '               ' → logprob: -5.62280797958374
    6. '           ' → logprob: -8.622807502746582
    7. ',parent' → logprob: -9.122807502746582
    8. '   ' → logprob: -9.622807502746582
    9. '
' → logprob: -10.122807502746582
    10. '       ' → logprob: -10.247807502746582

Token 757: ' touches' (ID: 45060)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.010521728545427322
    2. ' parent' → logprob: -5.01052188873291
    3. '                   ' → logprob: -5.63552188873291
    4. '               ' → logprob: -8.51052188873291
    5. '           ' → logprob: -11.01052188873291
    6. '   ' → logprob: -12.76052188873291
    7. '                       ' → logprob: -12.88552188873291
    8. '#' → logprob: -13.01052188873291
    9. '	parent' → logprob: -13.88552188873291
    10. ',parent' → logprob: -14.13552188873291

Token 758: ' ground' (ID: 7740)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.16024555265903473
    2. ' ground' → logprob: -1.9102455377578735
    3. '_ground' → logprob: -10.785245895385742
    4. 'Ground' → logprob: -15.410245895385742
    5. 'GROUND' → logprob: -16.160245895385742
    6. '   ' → logprob: -16.160245895385742
    7. 'parent' → logprob: -16.410245895385742
    8. '           ' → logprob: -16.660245895385742
    9. '               ' → logprob: -17.410245895385742
    10. ' ' → logprob: -17.785245895385742

Token 759: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1213623657822609
    2. '               ' → logprob: -2.7463624477386475
    3. 'parent' → logprob: -3.4963624477386475
    4. ' parent' → logprob: -4.496362209320068
    5. '           ' → logprob: -5.371362209320068
    6. ':
' → logprob: -6.871362209320068
    7. '
' → logprob: -6.996362209320068
    8. '                       ' → logprob: -6.996362209320068
    9. ',' → logprob: -7.996362209320068
    10. ',parent' → logprob: -8.496362686157227

Token 760: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007924780366010964
    2. '               ' → logprob: -7.625792503356934
    3. '                       ' → logprob: -8.375792503356934
    4. ',' → logprob: -10.500792503356934
    5. '           ' → logprob: -11.375792503356934
    6. '<|end|>' → logprob: -11.750792503356934
    7. '                    
' → logprob: -12.000792503356934
    8. '
' → logprob: -12.250792503356934
    9. 'parent' → logprob: -13.000792503356934
    10. 'continue' → logprob: -13.500792503356934

Token 761: ' continue' (ID: 4901)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.07514090836048126
    2. '                   ' → logprob: -3.075140953063965
    3. ' parent' → logprob: -3.700140953063965
    4. '               ' → logprob: -6.700140953063965
    5. '                       ' → logprob: -8.575140953063965
    6. '           ' → logprob: -10.825140953063965
    7. '   ' → logprob: -10.950140953063965
    8. ',parent' → logprob: -11.700140953063965
    9. '[parent' → logprob: -12.200140953063965
    10. '	parent' → logprob: -12.575140953063965

Token 762: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004436587623786181
    2. '           ' → logprob: -8.250443458557129
    3. '<|end|>' → logprob: -9.500443458557129
    4. '
' → logprob: -9.625443458557129
    5. '                   ' → logprob: -12.000443458557129
    6. '              ' → logprob: -12.125443458557129
    7. '       ' → logprob: -12.500443458557129
    8. ')' → logprob: -13.000443458557129
    9. '	           ' → logprob: -13.000443458557129
    10. '			' → logprob: -13.125443458557129

Token 763: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011522514978423715
    2. '<|end|>' → logprob: -9.750115394592285
    3. '           ' → logprob: -10.375115394592285
    4. '	           ' → logprob: -12.250115394592285
    5. '              ' → logprob: -12.375115394592285
    6. '		       ' → logprob: -12.875115394592285
    7. '			' → logprob: -13.125115394592285
    8. '                   ' → logprob: -13.500115394592285
    9. '       ' → logprob: -14.000115394592285
    10. 'else' → logprob: -14.250115394592285

Token 764: ' below' (ID: 4895)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12792646884918213
    2. 'elif' → logprob: -2.6279263496398926
    3. ' elif' → logprob: -3.6279263496398926
    4. 'if' → logprob: -5.002926349639893
    5. ' if' → logprob: -5.127926349639893
    6. 'else' → logprob: -5.252926349639893
    7. 'block' → logprob: -6.627926349639893
    8. ' else' → logprob: -6.627926349639893
    9. ' block' → logprob: -8.62792682647705
    10. '           ' → logprob: -8.75292682647705

Token 765: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3049314022064209
    2. '=' → logprob: -1.554931402206421
    3. '_x' → logprob: -3.179931402206421
    4. 'x' → logprob: -4.804931640625
    5. '_y' → logprob: -6.554931640625
    6. '=(' → logprob: -8.929931640625
    7. 'y' → logprob: -9.304931640625
    8. '_block' → logprob: -10.179931640625
    9. '   ' → logprob: -10.304931640625
    10. '               ' → logprob: -10.554931640625

Token 766: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007756988517940044
    2. ' (' → logprob: -5.257757186889648
    3. 'x' → logprob: -6.007757186889648
    4. '(' → logprob: -10.257757186889648
    5. ' x' → logprob: -11.632757186889648
    6. 'block' → logprob: -12.132757186889648
    7. '   ' → logprob: -12.507757186889648
    8. '(block' → logprob: -13.257757186889648
    9. '                   ' → logprob: -13.382757186889648
    10. '               ' → logprob: -13.382757186889648

Token 767: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.2729995988775045e-06
    2. ' x' → logprob: -12.000006675720215
    3. '	x' → logprob: -20.8750057220459
    4. '(x' → logprob: -21.1250057220459
    5. '   ' → logprob: -21.3750057220459
    6. ')x' → logprob: -21.6250057220459
    7. '"x' → logprob: -23.0000057220459
    8. '{x' → logprob: -24.0000057220459
    9. ',x' → logprob: -24.5000057220459
    10. '               ' → logprob: -24.5000057220459

Token 768: ',' (ID: 11)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5759772658348083
    2. ',' → logprob: -0.8259772658348083
    3. ' ,' → logprob: -10.450977325439453
    4. ',(' → logprob: -12.575977325439453
    5. ',
' → logprob: -13.200977325439453
    6. 'y' → logprob: -13.450977325439453
    7. '   ' → logprob: -14.700977325439453
    8. ',b' → logprob: -14.700977325439453
    9. ',x' → logprob: -15.200977325439453
    10. ',Y' → logprob: -15.700977325439453

Token 769: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001801801408873871
    2. ' y' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.5001802444458
    4. '(y' → logprob: -16.750179290771484
    5. ' ' → logprob: -17.125179290771484
    6. '	y' → logprob: -17.250179290771484
    7. ',y' → logprob: -18.125179290771484
    8. ')y' → logprob: -18.500179290771484
    9. '    ' → logprob: -18.750179290771484
    10. '       ' → logprob: -18.750179290771484

Token 770: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005562512087635696
    2. ' -' → logprob: -7.500556468963623
    3. '[' → logprob: -13.125555992126465
    4. '1' → logprob: -14.375555992126465
    5. ')' → logprob: -14.625555992126465
    6. '```' → logprob: -17.37555694580078
    7. '   ' → logprob: -17.75055694580078
    8. ' ' → logprob: -17.87555694580078
    9. 'y' → logprob: -18.00055694580078
    10. '-
' → logprob: -18.25055694580078

Token 771: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. ')' → logprob: -18.375
    4. '   ' → logprob: -19.375
    5. '```' → logprob: -19.625
    6. '           ' → logprob: -21.75
    7. '<|end|>' → logprob: -21.875
    8. '       ' → logprob: -21.875
    9. '-' → logprob: -22.375
    10. '                   ' → logprob: -22.5625

Token 772: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20178645849227905
    2. ')' → logprob: -1.7017865180969238
    3. '               ' → logprob: -8.451786041259766
    4. ')
' → logprob: -8.826786041259766
    5. '                   ' → logprob: -11.951786041259766
    6. ')

' → logprob: -13.201786041259766
    7. ' )
' → logprob: -13.576786041259766
    8. '           ' → logprob: -13.826786041259766
    9. ')`
' → logprob: -14.576786041259766
    10. '   ' → logprob: -14.701786041259766

Token 773: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.436450636712834e-05
    2. ' if' → logprob: -10.250094413757324
    3. 'if' → logprob: -10.500094413757324
    4. '<|end|>' → logprob: -11.625094413757324
    5. '           ' → logprob: -11.875094413757324
    6. '                   ' → logprob: -12.250094413757324
    7. '```' → logprob: -12.500094413757324
    8. ',' → logprob: -13.625094413757324
    9. '<|end|>' → logprob: -13.625094413757324
    10. '#' → logprob: -14.625094413757324

Token 774: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00420851306989789
    2. ' if' → logprob: -5.754208564758301
    3. '               ' → logprob: -6.879208564758301
    4. '                
' → logprob: -14.0042085647583
    5. '	if' → logprob: -16.379207611083984
    6. '                   ' → logprob: -16.504207611083984
    7. '           ' → logprob: -16.504207611083984
    8. '
' → logprob: -16.754207611083984
    9. 'If' → logprob: -16.754207611083984
    10. ';if' → logprob: -17.129207611083984

Token 775: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.0011711753904819489
    2. ' below' → logprob: -6.751171112060547
    3. 'block' → logprob: -14.876171112060547
    4. 'b' → logprob: -15.001171112060547
    5. 'bel' → logprob: -16.126171112060547
    6. '   ' → logprob: -16.626171112060547
    7. 'bottom' → logprob: -17.126171112060547
    8. 'Below' → logprob: -17.126171112060547
    9. ' ' → logprob: -18.001171112060547
    10. 'bene' → logprob: -18.251171112060547

Token 776: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5819820761680603
    2. ' in' → logprob: -0.8319820761680603
    3. ' not' → logprob: -5.331982135772705
    4. 'not' → logprob: -6.956982135772705
    5. ')' → logprob: -8.956981658935547
    6. '	in' → logprob: -10.206981658935547
    7. ']' → logprob: -10.331981658935547
    8. ' ' → logprob: -11.331981658935547
    9. '   ' → logprob: -11.706981658935547
    10. '[' → logprob: -12.831981658935547

Token 777: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.1517960956552997e-05
    2. ' block' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.625011444091797
    4. '	block' → logprob: -19.625011444091797
    5. '(block' → logprob: -19.625011444091797
    6. ' ' → logprob: -20.750011444091797
    7. '.block' → logprob: -21.250011444091797
    8. 'blocked' → logprob: -21.375011444091797
    9. 'box' → logprob: -22.000011444091797
    10. 'bloc' → logprob: -22.000011444091797

Token 778: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. ')' → logprob: -20.125
    3. '   ' → logprob: -20.125
    4. '               ' → logprob: -20.5
    5. 'to' → logprob: -20.625
    6. 'To' → logprob: -20.875
    7. '_' → logprob: -20.875
    8. 's' → logprob: -21.125
    9. '_TO' → logprob: -21.375
    10. 'block' → logprob: -21.5

Token 779: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0002973280206788331
    2. 'piece' → logprob: -8.125297546386719
    3. '(piece' → logprob: -14.625297546386719
    4. '_block' → logprob: -15.375297546386719
    5. '```' → logprob: -15.375297546386719
    6. 'block' → logprob: -16.00029754638672
    7. ' piece' → logprob: -16.50029754638672
    8. 'piec' → logprob: -16.75029754638672
    9. '-piece' → logprob: -16.87529754638672
    10. '_p' → logprob: -17.25029754638672

Token 780: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08898996561765671
    2. 'and' → logprob: -2.4639899730682373
    3. '                   ' → logprob: -11.588990211486816
    4. '<|end|>' → logprob: -11.588990211486816
    5. ':' → logprob: -11.838990211486816
    6. ':
' → logprob: -12.088990211486816
    7. '	and' → logprob: -12.088990211486816
    8. ',' → logprob: -12.213990211486816
    9. '               ' → logprob: -12.963990211486816
    10. ' ' → logprob: -13.713990211486816

Token 781: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6340073943138123
    2. '                   ' → logprob: -0.7590073943138123
    3. 'and' → logprob: -6.884007453918457
    4. '                    ' → logprob: -9.759007453918457
    5. '                       ' → logprob: -9.759007453918457
    6. '<|end|>' → logprob: -9.759007453918457
    7. '               ' → logprob: -10.009007453918457
    8. '                ' → logprob: -10.259007453918457
    9. ',' → logprob: -10.509007453918457
    10. '                  ' → logprob: -11.134007453918457

Token 782: ' other' (ID: 1273)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7613219022750854
    2. ' b' → logprob: -2.011322021484375
    3. '                   ' → logprob: -2.011322021484375
    4. 'parent' → logprob: -2.386322021484375
    5. 'b' → logprob: -2.761322021484375
    6. ' parent' → logprob: -3.136322021484375
    7. ' if' → logprob: -3.511322021484375
    8. ' p' → logprob: -3.761322021484375
    9. 'p' → logprob: -5.511322021484375
    10. 'if' → logprob: -5.886322021484375

Token 783: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.23688925802707672
    2. '_id' → logprob: -1.6118892431259155
    3. '_i' → logprob: -4.861889362335205
    4. '_p' → logprob: -6.611889362335205
    5. 'piece' → logprob: -6.736889362335205
    6. '_idx' → logprob: -7.986889362335205
    7. '_pid' → logprob: -8.486888885498047
    8. 'i' → logprob: -8.611888885498047
    9. '=' → logprob: -9.736888885498047
    10. 'id' → logprob: -9.861888885498047

Token 784: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5850203633308411
    2. ' =' → logprob: -0.8350203633308411
    3. '_id' → logprob: -4.710020542144775
    4. 'id' → logprob: -10.460020065307617
    5. '=id' → logprob: -12.710020065307617
    6. '=i' → logprob: -13.835020065307617
    7. '                   ' → logprob: -14.085020065307617
    8. '=_' → logprob: -14.335020065307617
    9. '   ' → logprob: -14.710020065307617
    10. '_idx' → logprob: -15.585020065307617

Token 785: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.00861468818038702
    2. ' block' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.883615493774414
    4. '	block' → logprob: -17.633615493774414
    5. '               ' → logprob: -18.383615493774414
    6. '(block' → logprob: -18.883615493774414
    7. ' ' → logprob: -18.883615493774414
    8. '           ' → logprob: -18.883615493774414
    9. '                   ' → logprob: -19.133615493774414
    10. 'b' → logprob: -19.508615493774414

Token 786: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.704273118884885e-07
    2. 'To' → logprob: -15.000000953674316
    3. 'to' → logprob: -15.125000953674316
    4. 'support' → logprob: -17.125
    5. '_support' → logprob: -18.0
    6. 's' → logprob: -18.375
    7. '_id' → logprob: -19.0
    8. '
' → logprob: -19.25
    9. '   ' → logprob: -19.625
    10. '_TO' → logprob: -20.0

Token 787: '_piece' (ID: 126000)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0032070616725832224
    2. '_piece' → logprob: -5.753207206726074
    3. 'block' → logprob: -10.503207206726074
    4. ' piece' → logprob: -13.503207206726074
    5. '-piece' → logprob: -15.628207206726074
    6. '(piece' → logprob: -15.753207206726074
    7. 'iece' → logprob: -17.128206253051758
    8. 'pieces' → logprob: -17.378206253051758
    9. 'piec' → logprob: -17.503206253051758
    10. 'pie' → logprob: -17.503206253051758

Token 788: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.042213134467601776
    2. '[(' → logprob: -3.667213201522827
    3. '(b' → logprob: -4.167212963104248
    4. '[b' → logprob: -8.167213439941406
    5. 'below' → logprob: -12.417213439941406
    6. ' (' → logprob: -14.042213439941406
    7. '(' → logprob: -14.167213439941406
    8. 'Below' → logprob: -14.542213439941406
    9. '((' → logprob: -14.917213439941406
    10. '[
' → logprob: -15.417213439941406

Token 789: 'below' (ID: 101356)
  Prédit: 'below'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.01861739344894886
    2. '(b' → logprob: -4.018617630004883
    3. 'b' → logprob: -8.018617630004883
    4. '[' → logprob: -9.518617630004883
    5. ' below' → logprob: -10.018617630004883
    6. '[b' → logprob: -11.143617630004883
    7. '(' → logprob: -12.643617630004883
    8. '	b' → logprob: -14.518617630004883
    9. ' (' → logprob: -14.768617630004883
    10. ')' → logprob: -15.143617630004883

Token 790: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31468087434768677
    2. ']
' → logprob: -1.314680814743042
    3. '                   ' → logprob: -6.689681053161621
    4. ']
' → logprob: -9.064681053161621
    5. '               ' → logprob: -10.814681053161621
    6. ')' → logprob: -11.814681053161621
    7. ']==' → logprob: -11.939681053161621
    8. '           ' → logprob: -12.689681053161621
    9. '                       ' → logprob: -12.814681053161621
    10. ')
' → logprob: -12.939681053161621

Token 791: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010126839624717832
    2. '<|end|>' → logprob: -7.626012802124023
    3. '               ' → logprob: -8.501012802124023
    4. '                       ' → logprob: -9.876012802124023
    5. '           ' → logprob: -10.001012802124023
    6. ' if' → logprob: -10.001012802124023
    7. '                    ' → logprob: -10.626012802124023
    8. '                    
' → logprob: -10.751012802124023
    9. '                           ' → logprob: -10.751012802124023
    10. '<|end|>' → logprob: -10.876012802124023

Token 792: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10245714336633682
    2. 'if' (adapté à ' if') → logprob: -2.352457046508789
    3. ' if' → logprob: -6.102457046508789
    4. 'parent' → logprob: -12.727457046508789
    5. '               ' → logprob: -13.102457046508789
    6. '   ' → logprob: -13.477457046508789
    7. '           ' → logprob: -13.852457046508789
    8. '				' → logprob: -14.102457046508789
    9. 'If' → logprob: -14.602457046508789
    10. '		           ' → logprob: -14.852457046508789

Token 793: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.004079708829522133
    2. ' other' → logprob: -5.504079818725586
    3. '                   ' → logprob: -14.004079818725586
    4. '(other' → logprob: -15.504079818725586
    5. '   ' → logprob: -16.254079818725586
    6. '                       ' → logprob: -16.504079818725586
    7. '               ' → logprob: -17.129079818725586
    8. 'Other' → logprob: -17.504079818725586
    9. 'not' → logprob: -17.629079818725586
    10. '                               ' → logprob: -18.004079818725586

Token 794: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0010288810590282083
    2. '_other' → logprob: -7.251029014587402
    3. 'other' → logprob: -8.126029014587402
    4. ' !=' → logprob: -12.751029014587402
    5. '                   ' → logprob: -13.126029014587402
    6. '!=' → logprob: -13.251029014587402
    7. 'Piece' → logprob: -13.251029014587402
    8. '(other' → logprob: -13.251029014587402
    9. 'else' → logprob: -13.376029014587402
    10. '_of' → logprob: -13.376029014587402

Token 795: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.16023662686347961
    2. ' !=' → logprob: -1.9102365970611572
    3. ')!=' → logprob: -12.160236358642578
    4. ']!=' → logprob: -12.660236358642578
    5. '()!=' → logprob: -12.910236358642578
    6. '!==' → logprob: -14.285236358642578
    7. '!=(' → logprob: -14.660236358642578
    8. '!=-' → logprob: -15.660236358642578
    9. '                   ' → logprob: -16.660236358642578
    10. '==' → logprob: -16.910236358642578

Token 796: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004897649050690234
    2. ' i' → logprob: -7.625489711761475
    3. '   ' → logprob: -13.750490188598633
    4. '                   ' → logprob: -15.125490188598633
    5. ' ' → logprob: -16.125490188598633
    6. '
' → logprob: -16.500490188598633
    7. '           ' → logprob: -17.000490188598633
    8. '	i' → logprob: -17.250490188598633
    9. '               ' → logprob: -17.750490188598633
    10. '                       ' → logprob: -18.000490188598633

Token 797: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24478767812252045
    2. ' and' → logprob: -1.8697876930236816
    3. ':' → logprob: -2.9947876930236816
    4. '                       ' → logprob: -4.494787693023682
    5. 'and' → logprob: -6.619787693023682
    6. '                   ' → logprob: -8.244787216186523
    7. '):
' → logprob: -9.244787216186523
    8. ':

' → logprob: -10.494787216186523
    9. ':
' → logprob: -11.619787216186523
    10. ' :
' → logprob: -11.994787216186523

Token 798: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002277054125443101
    2. 'parent' → logprob: -6.75227689743042
    3. '                   ' → logprob: -7.37727689743042
    4. ' parent' → logprob: -7.87727689743042
    5. '                           ' → logprob: -10.502277374267578
    6. '               ' → logprob: -11.002277374267578
    7. '       ' → logprob: -11.377277374267578
    8. '                        
' → logprob: -11.627277374267578
    9. '[parent' → logprob: -11.752277374267578
    10. ',parent' → logprob: -11.877277374267578

Token 799: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.030596908181905746
    2. ' parent' → logprob: -3.530596971511841
    3. '                       ' → logprob: -7.280596733093262
    4. '                           ' → logprob: -9.280596733093262
    5. 'if' → logprob: -10.530596733093262
    6. '   ' → logprob: -11.530596733093262
    7. ' if' → logprob: -11.905596733093262
    8. '               ' → logprob: -12.280596733093262
    9. '                   ' → logprob: -12.280596733093262
    10. '           ' → logprob: -12.780596733093262

Token 800: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0001249925117008388
    2. '_found' → logprob: -9.00012493133545
    3. '                   ' → logprob: -15.00012493133545
    4. 'of' → logprob: -15.00012493133545
    5. 'Of' → logprob: -15.25012493133545
    6. 'found' → logprob: -15.37512493133545
    7. '=_' → logprob: -16.250125885009766
    8. 'Found' → logprob: -16.375125885009766
    9. ',_' → logprob: -17.125125885009766
    10. '               ' → logprob: -17.250125885009766

Token 801: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0100624169572257e-05
    2. '[' → logprob: -11.125020027160645
    3. ' [' → logprob: -12.375020027160645
    4. 'i' → logprob: -15.250020027160645
    5. ' =' → logprob: -15.875020027160645
    6. '=' → logprob: -16.00002098083496
    7. ')[' → logprob: -16.50002098083496
    8. '(i' → logprob: -16.87502098083496
    9. ')' → logprob: -17.37502098083496
    10. '=i' → logprob: -17.37502098083496

Token 802: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1604735255241394
    2. '=' → logprob: -2.535473585128784
    3. ']=' → logprob: -2.910473585128784
    4. ' =' → logprob: -4.410473346710205
    5. ' ]' → logprob: -6.035473346710205
    6. ')' → logprob: -10.660473823547363
    7. '[' → logprob: -11.535473823547363
    8. ')=' → logprob: -12.785473823547363
    9. ']==' → logprob: -12.910473823547363
    10. ']+=' → logprob: -14.160473823547363

Token 803: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. '＝' → logprob: -17.251928329467773
    4. '=None' → logprob: -18.376928329467773
    5. ' ' → logprob: -18.751928329467773
    6. ')' → logprob: -19.001928329467773
    7. '=

' → logprob: -19.251928329467773
    8. ')=' → logprob: -20.251928329467773
    9. '=True' → logprob: -20.501928329467773
    10. ',' → logprob: -20.626928329467773

Token 804: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0001584850688232109
    2. ' other' → logprob: -8.750158309936523
    3. '(other' → logprob: -19.250158309936523
    4. 'Other' → logprob: -19.500158309936523
    5. '_other' → logprob: -21.000158309936523
    6. '.other' → logprob: -21.625158309936523
    7. 'OTHER' → logprob: -22.125158309936523
    8. '   ' → logprob: -23.250158309936523
    9. 'othe' → logprob: -23.375158309936523
    10. 'outside' → logprob: -24.000158309936523

Token 805: '_piece' (ID: 126000)
  Prédit: '_piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.0006778847891837358
    2. '_of' → logprob: -7.375678062438965
    3. '```' → logprob: -10.875678062438965
    4. 'of' → logprob: -11.375678062438965
    5. '_' → logprob: -12.375678062438965
    6. '_other' → logprob: -12.375678062438965
    7. 'Piece' → logprob: -12.625678062438965
    8. 'piece' → logprob: -13.625678062438965
    9. '_possible' → logprob: -13.875678062438965
    10. '_line' → logprob: -14.250678062438965

Token 806: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0008445297717116773
    2. '					' → logprob: -7.875844478607178
    3. '<|end|>' → logprob: -7.875844478607178
    4. '                        
' → logprob: -10.250844955444336
    5. '                        ' → logprob: -11.000844955444336
    6. '
' → logprob: -12.375844955444336
    7. '                   ' → logprob: -12.750844955444336
    8. '                           ' → logprob: -12.750844955444336
    9. '               ' → logprob: -13.000844955444336
    10. '						
' → logprob: -13.125844955444336

Token 807: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -5.5027299822540954e-05
    2. '					' → logprob: -11.000055313110352
    3. '                        
' → logprob: -11.250055313110352
    4. '<|end|>' → logprob: -11.625055313110352
    5. '                        ' → logprob: -12.125055313110352
    6. '                   ' → logprob: -12.750055313110352
    7. '```' → logprob: -13.000055313110352
    8. '               ' → logprob: -13.625055313110352
    9. '                           ' → logprob: -13.875055313110352
    10. '                      ' → logprob: -14.375055313110352

Token 808: ' piece' (ID: 9047)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.011247877962887287
    2. 'parent' → logprob: -4.7612481117248535
    3. '                       ' → logprob: -6.2612481117248535
    4. ' break' → logprob: -7.2612481117248535
    5. '                   ' → logprob: -11.636247634887695
    6. ' parent' → logprob: -12.011247634887695
    7. '               ' → logprob: -12.886247634887695
    8. '           ' → logprob: -14.386247634887695
    9. '       ' → logprob: -15.886247634887695
    10. '                           ' → logprob: -16.261247634887695

Token 809: '_support' (ID: 59508)
  Prédit: '_support'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_support' → logprob: -1.4259644558478612e-05
    2. 'supports' → logprob: -11.250014305114746
    3. 'Supports' → logprob: -14.875014305114746
    4. ' supports' → logprob: -15.625014305114746
    5. '_SUPPORT' → logprob: -15.875014305114746
    6. 'support' → logprob: -16.12501335144043
    7. '-support' → logprob: -16.62501335144043
    8. '_supported' → logprob: -16.75001335144043
    9. '```' → logprob: -17.00001335144043
    10. 'upport' → logprob: -17.00001335144043

Token 810: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00028302724240347743
    2. 'supports' → logprob: -8.375283241271973
    3. '_support' → logprob: -9.875283241271973
    4. '[s' → logprob: -14.625283241271973
    5. ' supports' → logprob: -15.500283241271973
    6. 'support' → logprob: -15.750283241271973
    7. 'Supports' → logprob: -15.875283241271973
    8. '_s' → logprob: -17.000282287597656
    9. 'ts' → logprob: -17.750282287597656
    10. ' s' → logprob: -18.125282287597656

Token 811: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011840384686365724
    2. '[parent' → logprob: -6.751183986663818
    3. '[i' → logprob: -11.251184463500977
    4. '```' → logprob: -15.626184463500977
    5. '[p' → logprob: -16.126184463500977
    6. 'of' → logprob: -16.501184463500977
    7. ' [' → logprob: -16.501184463500977
    8. '   ' → logprob: -16.626184463500977
    9. '=' → logprob: -16.626184463500977
    10. '       ' → logprob: -17.376184463500977

Token 812: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00030709904967807233
    2. '[' → logprob: -8.125307083129883
    3. 'i' → logprob: -11.750307083129883
    4. ' other' → logprob: -13.000307083129883
    5. '[i' → logprob: -14.875307083129883
    6. '(other' → logprob: -15.125307083129883
    7. 'parent' → logprob: -16.125307083129883
    8. '[parent' → logprob: -16.625307083129883
    9. '
' → logprob: -18.500307083129883
    10. 'Other' → logprob: -19.125307083129883

Token 813: '_piece' (ID: 126000)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.054463766515254974
    2. 'of' → logprob: -3.5544638633728027
    3. '_support' → logprob: -5.429463863372803
    4. '_found' → logprob: -5.554463863372803
    5. '[i' → logprob: -5.679463863372803
    6. '][' → logprob: -5.929463863372803
    7. 'i' → logprob: -6.179463863372803
    8. '_piece' → logprob: -6.179463863372803
    9. ']' → logprob: -6.554463863372803
    10. 'support' → logprob: -7.179463863372803

Token 814: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.12716348469257355
    2. '.append' → logprob: -2.1271634101867676
    3. '.' → logprob: -8.627163887023926
    4. ').' → logprob: -10.252163887023926
    5. ' ].' → logprob: -11.252163887023926
    6. ' .' → logprob: -12.752163887023926
    7. ']' → logprob: -13.252163887023926
    8. '.app' → logprob: -14.002163887023926
    9. '}.' → logprob: -14.627163887023926
    10. '           ' → logprob: -14.752163887023926

Token 815: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. '.append' → logprob: -13.500001907348633
    3. ' append' → logprob: -15.750001907348633
    4. '_append' → logprob: -17.500001907348633
    5. 'app' → logprob: -18.000001907348633
    6. 'appen' → logprob: -19.375001907348633
    7. '	append' → logprob: -19.750001907348633
    8. 'Append' → logprob: -20.625001907348633
    9. 'add' → logprob: -21.500001907348633
    10. 'insert' → logprob: -22.625001907348633

Token 816: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -12.75000286102295
    3. '(' → logprob: -15.00000286102295
    4. '[i' → logprob: -18.500003814697266
    5. ' (' → logprob: -18.875003814697266
    6. '((' → logprob: -19.000003814697266
    7. '(
' → logprob: -19.750003814697266
    8. ' i' → logprob: -20.750003814697266
    9. '   ' → logprob: -21.750003814697266
    10. ',i' → logprob: -22.375003814697266

Token 817: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036478189285844564
    2. ')
' → logprob: -6.253647804260254
    3. '                       ' → logprob: -6.378647804260254
    4. ' )' → logprob: -12.378647804260254
    5. '                   ' → logprob: -12.503647804260254
    6. '           ' → logprob: -13.003647804260254
    7. '               ' → logprob: -13.128647804260254
    8. ')return' → logprob: -13.378647804260254
    9. '<|end|>' → logprob: -13.503647804260254
    10. ')#' → logprob: -13.878647804260254

Token 818: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -9.543733904138207e-05
    2. 'break' → logprob: -10.87509536743164
    3. '                        ' → logprob: -11.12509536743164
    4. '               ' → logprob: -11.12509536743164
    5. '					' → logprob: -11.37509536743164
    6. '<|end|>' → logprob: -11.37509536743164
    7. '```' → logprob: -12.25009536743164
    8. '                   ' → logprob: -12.25009536743164
    9. '                        
' → logprob: -12.50009536743164
    10. '           ' → logprob: -13.12509536743164

Token 819: ' parent' (ID: 5980)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.13025960326194763
    2. 'parent' (adapté à ' parent') → logprob: -2.1302595138549805
    3. '                       ' → logprob: -6.3802595138549805
    4. ' break' → logprob: -6.6302595138549805
    5. ' parent' → logprob: -8.63025951385498
    6. '                   ' → logprob: -9.13025951385498
    7. '               ' → logprob: -11.00525951385498
    8. '           ' → logprob: -12.75525951385498
    9. '```' → logprob: -13.75525951385498
    10. '       ' → logprob: -14.75525951385498

Token 820: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.2520180344581604
    2. '_of' → logprob: -1.5020179748535156
    3. 'Found' → logprob: -9.502017974853516
    4. 'found' → logprob: -12.877017974853516
    5. '_break' → logprob: -13.377017974853516
    6. '                   ' → logprob: -13.752017974853516
    7. '_FOUND' → logprob: -13.877017974853516
    8. '   ' → logprob: -14.252017974853516
    9. '_for' → logprob: -14.252017974853516
    10. 'Of' → logprob: -14.377017974853516

Token 821: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10037477314472198
    2. ' =' → logprob: -2.350374698638916
    3. '=True' → logprob: -8.975375175476074
    4. '                       ' → logprob: -10.350375175476074
    5. '=False' → logprob: -12.225375175476074
    6. '                   ' → logprob: -13.725375175476074
    7. '                           ' → logprob: -13.850375175476074
    8. '                        ' → logprob: -14.225375175476074
    9. '           ' → logprob: -14.350375175476074
    10. '=
' → logprob: -15.225375175476074

Token 822: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '=True' → logprob: -21.25007438659668
    4. '(True' → logprob: -21.50007438659668
    5. 'False' → logprob: -22.37507438659668
    6. 'true' → logprob: -23.37507438659668
    7. 'Tr' → logprob: -24.50007438659668
    8. '   ' → logprob: -25.62507438659668
    9. 'TRUE' → logprob: -25.75007438659668
    10. '.True' → logprob: -25.87507438659668

Token 823: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001105762057704851
    2. '                   ' → logprob: -10.250110626220703
    3. '               ' → logprob: -10.375110626220703
    4. '           ' → logprob: -10.750110626220703
    5. '					' → logprob: -11.750110626220703
    6. '                           ' → logprob: -12.625110626220703
    7. '       ' → logprob: -12.875110626220703
    8. '                        ' → logprob: -13.125110626220703
    9. '```' → logprob: -13.125110626220703
    10. '                        
' → logprob: -13.375110626220703

Token 824: '           ' (ID: 352)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -5.7888184528565034e-05
    2. '               ' → logprob: -11.0000581741333
    3. '                   ' → logprob: -11.0000581741333
    4. '           ' → logprob: -11.5000581741333
    5. '                           ' → logprob: -12.3750581741333
    6. '       ' → logprob: -12.6250581741333
    7. '					' → logprob: -13.0000581741333
    8. '```' → logprob: -13.5000581741333
    9. '                        ' → logprob: -13.7500581741333
    10. '                        
' → logprob: -14.3750581741333

Token 825: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004824668634682894
    2. '       ' → logprob: -6.004824638366699
    3. ' if' → logprob: -6.379824638366699
    4. 'if' → logprob: -8.3798246383667
    5. '
' → logprob: -8.8798246383667
    6. '		' → logprob: -9.6298246383667
    7. '<|end|>' → logprob: -9.7548246383667
    8. '   ' → logprob: -10.8798246383667
    9. '         ' → logprob: -11.0048246383667
    10. '               ' → logprob: -11.0048246383667

Token 826: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3706631660461426
    2. ' if' → logprob: -1.9956631660461426
    3. '       ' → logprob: -2.2456631660461426
    4. 'if' → logprob: -2.9956631660461426
    5. ' continue' → logprob: -5.120663166046143
    6. 'continue' → logprob: -5.120663166046143
    7. '
' → logprob: -6.120663166046143
    8. '<|end|>' → logprob: -6.995663166046143
    9. '        ' → logprob: -7.495663166046143
    10. '   ' → logprob: -8.120662689208984

Token 827: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6931756138801575
    2. 'not' → logprob: -0.6931756138801575
    3. 'parent' → logprob: -11.818175315856934
    4. '   ' → logprob: -12.068175315856934
    5. ' parent' → logprob: -12.068175315856934
    6. '(not' → logprob: -12.318175315856934
    7. ' no' → logprob: -13.068175315856934
    8. '
' → logprob: -13.193175315856934
    9. 'no' → logprob: -14.818175315856934
    10. 'n' → logprob: -15.693175315856934

Token 828: ' block' (ID: 4355)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.22850920259952545
    2. ' parent' → logprob: -1.6035091876983643
    3. 't' → logprob: -5.853509426116943
    4. '_parent' → logprob: -8.978508949279785
    5. '(parent' → logprob: -10.228508949279785
    6. ' t' → logprob: -10.853508949279785
    7. '_' → logprob: -11.228508949279785
    8. '[parent' → logprob: -12.103508949279785
    9. '	parent' → logprob: -12.353508949279785
    10. '
' → logprob: -12.603508949279785

Token 829: ' touches' (ID: 45060)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.6983374953269958
    2. 'found' → logprob: -1.4483375549316406
    3. '           ' → logprob: -2.3233375549316406
    4. ' has' → logprob: -2.9483375549316406
    5. ' found' → logprob: -3.4483375549316406
    6. 'has' → logprob: -3.9483375549316406
    7. '               ' → logprob: -4.073337554931641
    8. ' of' → logprob: -4.448337554931641
    9. ' was' → logprob: -4.698337554931641
    10. 'of' → logprob: -5.448337554931641

Token 830: ' another' (ID: 3613)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.07906053960323334
    2. ' ground' → logprob: -2.5790605545043945
    3. 'parent' → logprob: -9.204060554504395
    4. '_ground' → logprob: -10.579060554504395
    5. '   ' → logprob: -11.454060554504395
    6. ' parent' → logprob: -11.829060554504395
    7. 'the' → logprob: -11.829060554504395
    8. ' the' → logprob: -12.079060554504395
    9. ' ' → logprob: -12.454060554504395
    10. 'below' → logprob: -12.704060554504395

Token 831: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.11818908900022507
    2. ' piece' → logprob: -2.2431890964508057
    3. '_piece' → logprob: -6.368188858032227
    4. '(piece' → logprob: -6.993188858032227
    5. '           ' → logprob: -7.243188858032227
    6. ' or' → logprob: -8.243188858032227
    7. '   ' → logprob: -8.493188858032227
    8. '       ' → logprob: -8.493188858032227
    9. '
' → logprob: -8.618188858032227
    10. '               ' → logprob: -8.743188858032227

Token 832: ' below' (ID: 4895)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3939236104488373
    2. 'and' → logprob: -1.6439236402511597
    3. ' or' → logprob: -2.89392352104187
    4. ',' → logprob: -3.39392352104187
    5. '           ' → logprob: -3.89392352104187
    6. ':' → logprob: -5.518923759460449
    7. 'or' → logprob: -6.018923759460449
    8. ' in' → logprob: -6.143923759460449
    9. ' at' → logprob: -6.143923759460449
    10. ' below' → logprob: -6.143923759460449

Token 833: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1731022447347641
    2. 'and' → logprob: -2.7981021404266357
    3. ',' → logprob: -3.2981021404266357
    4. '           ' → logprob: -3.4231021404266357
    5. ':' → logprob: -4.173102378845215
    6. ' or' → logprob: -5.048102378845215
    7. ':
' → logprob: -5.673102378845215
    8. ' if' → logprob: -6.923102378845215
    9. '       ' → logprob: -7.173102378845215
    10. '               ' → logprob: -7.423102378845215

Token 834: ' must' (ID: 2804)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7253300547599792
    2. 'if' → logprob: -1.350330114364624
    3. ' if' → logprob: -1.475330114364624
    4. '#' → logprob: -3.725330114364624
    5. '       ' → logprob: -6.975329875946045
    6. '               ' → logprob: -7.600329875946045
    7. ' #' → logprob: -7.600329875946045
    8. 'continue' → logprob: -7.600329875946045
    9. 'parent' → logprob: -7.725329875946045
    10. ' continue' → logprob: -7.850329875946045

Token 835: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6392900347709656
    2. 'be' → logprob: -0.7642900347709656
    3. 'continue' → logprob: -6.014289855957031
    4. 'not' → logprob: -6.764289855957031
    5. 'have' → logprob: -7.764289855957031
    6. '#' → logprob: -7.764289855957031
    7. '       ' → logprob: -7.764289855957031
    8. '           ' → logprob: -7.889289855957031
    9. ' have' → logprob: -8.639289855957031
    10. ' not' → logprob: -8.764289855957031

Token 836: ' on' (ID: 402)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.7263915538787842
    2. 'None' → logprob: -1.4763915538787842
    3. 'parent' → logprob: -1.6013915538787842
    4. 'touch' → logprob: -3.226391553878784
    5. 'on' → logprob: -3.851391553878784
    6. 'i' → logprob: -5.101391792297363
    7. ' None' → logprob: -5.976391792297363
    8. 'attached' → logprob: -6.351391792297363
    9. 'True' → logprob: -6.476391792297363
    10. 'connected' → logprob: -6.726391792297363

Token 837: ' ground' (ID: 7740)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.11537005007266998
    2. ' ground' → logprob: -2.240370035171509
    3. 'the' → logprob: -6.240370273590088
    4. ' the' → logprob: -7.740370273590088
    5. '_ground' → logprob: -9.49036979675293
    6. '   ' → logprob: -9.74036979675293
    7. 'Ground' → logprob: -11.36536979675293
    8. '
' → logprob: -12.74036979675293
    9. '0' → logprob: -13.24036979675293
    10. '           ' → logprob: -13.61536979675293

Token 838: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0783604234457016
    2. '<|end|>' → logprob: -3.0783603191375732
    3. '       ' → logprob: -3.5783603191375732
    4. '<|end|>' → logprob: -7.328360557556152
    5. '
' → logprob: -8.328360557556152
    6. ' if' → logprob: -8.703360557556152
    7. '```' → logprob: -10.078360557556152
    8. ' ' → logprob: -10.328360557556152
    9. '          ' → logprob: -10.453360557556152
    10. '        ' → logprob: -10.578360557556152

Token 839: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6954897046089172
    2. '       ' → logprob: -0.8204897046089172
    3. ' if' → logprob: -3.1954896450042725
    4. 'if' (adapté à ' if') → logprob: -4.070489883422852
    5. '<|end|>' → logprob: -6.070489883422852
    6. '   ' → logprob: -8.320489883422852
    7. '
' → logprob: -9.195489883422852
    8. '```' → logprob: -9.320489883422852
    9. '<|end|>' → logprob: -10.320489883422852
    10. ' ' → logprob: -10.445489883422852

Token 841: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20162130892276764
    2. 'not' → logprob: -1.7016212940216064
    3. ' parent' → logprob: -9.326621055603027
    4. 'parent' → logprob: -9.701621055603027
    5. '   ' → logprob: -9.826621055603027
    6. '           ' → logprob: -13.701621055603027
    7. '
' → logprob: -14.451621055603027
    8. ' ' → logprob: -14.576621055603027
    9. '       ' → logprob: -14.701621055603027
    10. '    ' → logprob: -14.701621055603027

Token 842: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4740884304046631
    2. ' parent' → logprob: -0.9740884304046631
    3. '   ' → logprob: -12.349088668823242
    4. '	parent' → logprob: -12.974088668823242
    5. '(parent' → logprob: -13.724088668823242
    6. '_parent' → logprob: -14.224088668823242
    7. 'paren' → logprob: -14.724088668823242
    8. ' ' → logprob: -14.724088668823242
    9. ' any' → logprob: -14.849088668823242
    10. 'any' → logprob: -14.849088668823242

Token 843: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.07889385521411896
    2. '_of' → logprob: -2.5788938999176025
    3. 'Found' → logprob: -13.203893661499023
    4. 'found' → logprob: -14.078893661499023
    5. '_for' → logprob: -15.328893661499023
    6. 'of' → logprob: -15.453893661499023
    7. '
' → logprob: -15.703893661499023
    8. '   ' → logprob: -15.828893661499023
    9. '\' → logprob: -16.078893661499023
    10. '_present' → logprob: -16.203893661499023

Token 844: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.012514829635620117
    2. ':' → logprob: -4.512515068054199
    3. '           ' → logprob: -7.137515068054199
    4. '[parent' → logprob: -8.2625150680542
    5. ' and' → logprob: -8.3875150680542
    6. '               ' → logprob: -9.3875150680542
    7. '[' → logprob: -10.0125150680542
    8. ' :
' → logprob: -11.2625150680542
    9. '       ' → logprob: -11.3875150680542
    10. 'and' → logprob: -12.0125150680542

Token 845: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39978089928627014
    2. '           ' → logprob: -1.3997808694839478
    3. ' parent' → logprob: -3.0247809886932373
    4. 'parent' → logprob: -3.7747809886932373
    5. '       ' → logprob: -5.649780750274658
    6. ',parent' → logprob: -6.399780750274658
    7. '[parent' → logprob: -6.774780750274658
    8. ':' → logprob: -6.899780750274658
    9. ' =' → logprob: -6.899780750274658
    10. ':
' → logprob: -7.524780750274658

Token 846: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.47444039583206177
    2. ' parent' → logprob: -0.9744403958320618
    3. '               ' → logprob: -8.474440574645996
    4. '           ' → logprob: -9.474440574645996
    5. 'pass' → logprob: -10.849440574645996
    6. ' pass' → logprob: -11.224440574645996
    7. '                   ' → logprob: -11.474440574645996
    8. '   ' → logprob: -11.599440574645996
    9. '	parent' → logprob: -12.099440574645996
    10. ' continue' → logprob: -12.599440574645996

Token 847: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: 0.0
    2. 'Of' → logprob: -18.625
    3. ' of' → logprob: -18.875
    4. '   ' → logprob: -19.125
    5. '_OF' → logprob: -20.125
    6. '\' → logprob: -20.75
    7. 'of' → logprob: -21.0
    8. '	of' → logprob: -21.125
    9. 's' → logprob: -21.75
    10. '```' → logprob: -22.0

Token 848: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -15.125000953674316
    3. ' [' → logprob: -15.625000953674316
    4. ')[' → logprob: -15.750000953674316
    5. '[' → logprob: -15.875000953674316
    6. '
' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.250001907348633
    8. ' =' → logprob: -16.875001907348633
    9. '\[' → logprob: -17.000001907348633
    10. 'i' → logprob: -17.000001907348633

Token 849: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22052137553691864
    2. '=' → logprob: -2.0955214500427246
    3. ']=' → logprob: -2.7205214500427246
    4. ' =' → logprob: -4.720521450042725
    5. ' ]' → logprob: -9.720520973205566
    6. ')' → logprob: -10.470520973205566
    7. '=None' → logprob: -10.595520973205566
    8. ')=' → logprob: -11.095520973205566
    9. '[i' → logprob: -12.220520973205566
    10. '[' → logprob: -12.470520973205566

Token 850: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694290280342102
    2. ' =' → logprob: -2.1269428730010986
    3. '=None' → logprob: -11.50194263458252
    4. '[i' → logprob: -13.12694263458252
    5. '[' → logprob: -14.00194263458252
    6. ' is' → logprob: -14.50194263458252
    7. ']=' → logprob: -14.75194263458252
    8. '=
' → logprob: -15.37694263458252
    9. ']' → logprob: -15.50194263458252
    10. ')' → logprob: -16.001943588256836

Token 851: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04861995577812195
    2. '-' → logprob: -3.0486199855804443
    3. ' None' → logprob: -10.548620223999023
    4. '"' → logprob: -13.298620223999023
    5. '_None' → logprob: -13.298620223999023
    6. ' -' → logprob: -13.923620223999023
    7. '=None' → logprob: -14.173620223999023
    8. '   ' → logprob: -14.673620223999023
    9. ',None' → logprob: -15.548620223999023
    10. '(None' → logprob: -15.673620223999023

Token 852: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24976375699043274
    2. '<|end|>' → logprob: -1.9997637271881104
    3. '   ' → logprob: -3.2497637271881104
    4. 'def' → logprob: -3.7497637271881104
    5. '    
' → logprob: -3.9997637271881104
    6. 'import' → logprob: -6.3747639656066895
    7. '        
' → logprob: -6.9997639656066895
    8. '<|end|>' → logprob: -7.4997639656066895
    9. '

' → logprob: -7.6247639656066895
    10. '```' → logprob: -7.8747639656066895

Token 854: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8813784718513489
    2. '   ' → logprob: -1.506378412246704
    3. '       ' → logprob: -1.756378412246704
    4. 'import' → logprob: -2.756378412246704
    5. 'dp' → logprob: -3.256378412246704
    6. '#' (adapté à ' #') → logprob: -3.756378412246704
    7. 'visited' → logprob: -3.756378412246704
    8. 'gravity' → logprob: -4.881378650665283
    9. 'max' → logprob: -5.131378650665283
    10. 'from' → logprob: -5.256378650665283

Token 855: ' Find' (ID: 9764)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5678818821907043
    2. '#' → logprob: -1.5678818225860596
    3. 'import' → logprob: -2.1928818225860596
    4. 'from' → logprob: -3.1928818225860596
    5. 'roots' → logprob: -3.8178818225860596
    6. '   ' → logprob: -4.817882061004639
    7. 'dp' → logprob: -4.817882061004639
    8. '       ' → logprob: -4.942882061004639
    9. 'stack' → logprob: -5.067882061004639
    10. 'visited' → logprob: -5.567882061004639

Token 856: ' root' (ID: 6577)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.3370055854320526
    2. ' roots' → logprob: -1.837005615234375
    3. 'root' → logprob: -2.337005615234375
    4. 'le' → logprob: -4.587005615234375
    5. 'the' → logprob: -4.962005615234375
    6. ' root' → logprob: -5.462005615234375
    7. 'ground' → logprob: -6.087005615234375
    8. ' the' → logprob: -6.712005615234375
    9. 'bottom' → logprob: -6.837005615234375
    10. 'top' → logprob: -7.212005615234375

Token 857: ' piece' (ID: 9047)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8132522702217102
    2. '_ro' → logprob: -1.5632522106170654
    3. '_nodes' → logprob: -1.8132522106170654
    4. 's' → logprob: -2.1882522106170654
    5. '_p' → logprob: -4.0632524490356445
    6. '_candidates' → logprob: -4.0632524490356445
    7. '_indices' → logprob: -4.5632524490356445
    8. 'pieces' → logprob: -5.1882524490356445
    9. 'roots' → logprob: -5.1882524490356445
    10. '=' → logprob: -5.5632524490356445

Token 858: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3266003429889679
    2. 'root' → logprob: -1.7016003131866455
    3. 'roots' → logprob: -2.5766003131866455
    4. ' =' → logprob: -4.451600551605225
    5. ' roots' → logprob: -5.451600551605225
    6. ' root' → logprob: -6.701600551605225
    7. '=root' → logprob: -7.201600551605225
    8. '=' → logprob: -7.326600551605225
    9. '[root' → logprob: -7.826600551605225
    10. '```' → logprob: -7.951600551605225

Token 859: ' ground' (ID: 7740)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.09268756955862045
    2. 'e' → logprob: -2.8426876068115234
    3. 'None' → logprob: -5.092687606811523
    4. 'es' → logprob: -5.467687606811523
    5. 's' → logprob: -5.592687606811523
    6. 'pieces' → logprob: -5.967687606811523
    7. '_ground' → logprob: -6.092687606811523
    8. ' ground' → logprob: -6.092687606811523
    9. 'which' → logprob: -6.717687606811523
    10. '[' → logprob: -7.092687606811523

Token 860: '
' (ID: 198)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.030146608129143715
    2. 'roots' → logprob: -3.905146598815918
    3. '       ' → logprob: -4.780146598815918
    4. 'for' → logprob: -7.155146598815918
    5. ' root' → logprob: -9.280146598815918
    6. ' roots' → logprob: -9.780146598815918
    7. '[root' → logprob: -9.780146598815918
    8. '
' → logprob: -9.905146598815918
    9. '```' → logprob: -10.280146598815918
    10. ',' → logprob: -11.155146598815918

Token 861: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.4363042414188385
    2. '       ' → logprob: -1.3113042116165161
    3. 'roots' → logprob: -2.5613043308258057
    4. ' roots' → logprob: -6.311304092407227
    5. '
' → logprob: -6.436304092407227
    6. ' root' → logprob: -6.686304092407227
    7. '```' → logprob: -6.811304092407227
    8. 'for' → logprob: -7.561304092407227
    9. '[root' → logprob: -8.936304092407227
    10. '        
' → logprob: -9.186304092407227

Token 862: ' roots' (ID: 29895)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.47584962844848633
    2. 'roots' (adapté à ' roots') → logprob: -0.9758496284484863
    3. 'for' → logprob: -6.850849628448486
    4. 'ground' → logprob: -7.850849628448486
    5. '       ' → logprob: -8.100849151611328
    6. ' roots' → logprob: -11.475849151611328
    7. 'try' → logprob: -13.225849151611328
    8. ' root' → logprob: -13.600849151611328
    9. '   ' → logprob: -13.850849151611328
    10. '[root' → logprob: -13.850849151611328

Token 863: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698973715305328
    2. '=' → logprob: -2.1269898414611816
    3. '=[]' → logprob: -10.001989364624023
    4. 's' → logprob: -11.876989364624023
    5. ' =[' → logprob: -12.251989364624023
    6. '=[' → logprob: -12.876989364624023
    7. ',' → logprob: -15.001989364624023
    8. '=[]
' → logprob: -15.376989364624023
    9. '[' → logprob: -15.876989364624023
    10. '[]' → logprob: -16.126989364624023

Token 864: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008453231304883957
    2. '[' → logprob: -5.008453369140625
    3. '[]
' → logprob: -6.508453369140625
    4. '[s' → logprob: -9.008453369140625
    5. '[x' → logprob: -10.508453369140625
    6. ' [' → logprob: -11.008453369140625
    7. '[]' → logprob: -11.133453369140625
    8. '[p' → logprob: -11.758453369140625
    9. '[id' → logprob: -11.883453369140625
    10. '[n' → logprob: -12.383453369140625

Token 865: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.747814349073451e-05
    2. ' i' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.000017166137695
    4. 'idx' → logprob: -15.750017166137695
    5. '(i' → logprob: -16.375017166137695
    6. '	i' → logprob: -16.875017166137695
    7. 'p' → logprob: -17.250017166137695
    8. 'pid' → logprob: -17.500017166137695
    9. '[i' → logprob: -17.625017166137695
    10. 'pi' → logprob: -17.750017166137695

Token 866: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868788182735443
    2. 'for' → logprob: -1.1368788480758667
    3. '
' → logprob: -12.886878967285156
    4. ' ' → logprob: -13.386878967285156
    5. '           ' → logprob: -13.511878967285156
    6. '   ' → logprob: -14.261878967285156
    7. '       ' → logprob: -14.261878967285156
    8. '        ' → logprob: -14.886878967285156
    9. '          ' → logprob: -15.386878967285156
    10. '	for' → logprob: -15.761878967285156

Token 867: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012152367271482944
    2. ' i' → logprob: -6.87621545791626
    3. ',' → logprob: -8.626214981079102
    4. ',i' → logprob: -14.126214981079102
    5. ' in' → logprob: -14.501214981079102
    6. 'which' → logprob: -14.751214981079102
    7. 'in' → logprob: -15.001214981079102
    8. ' which' → logprob: -15.001214981079102
    9. '(i' → logprob: -15.501214981079102
    10. '
' → logprob: -16.3762149810791

Token 868: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06320345401763916
    2. 'in' → logprob: -2.9382033348083496
    3. ',parent' → logprob: -5.31320333480835
    4. ',p' → logprob: -6.06320333480835
    5. ' in' → logprob: -7.56320333480835
    6. ',in' → logprob: -8.063203811645508
    7. ' ,' → logprob: -9.813203811645508
    8. ',e' → logprob: -10.313203811645508
    9. ',x' → logprob: -10.938203811645508
    10. ',t' → logprob: -11.188203811645508

Token 869: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13958466053009033
    2. 'in' → logprob: -2.139584541320801
    3. 'ar' → logprob: -4.389584541320801
    4. ',' → logprob: -9.5145845413208
    5. 'parent' → logprob: -10.2645845413208
    6. 'i' → logprob: -11.3895845413208
    7. 'r' → logprob: -11.6395845413208
    8. ',parent' → logprob: -12.2645845413208
    9. 'ARENT' → logprob: -12.2645845413208
    10. ' None' → logprob: -12.6395845413208

Token 870: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0030871592462062836
    2. ' enumerate' → logprob: -5.878087043762207
    3. 'in' → logprob: -8.628087043762207
    4. 'parent' → logprob: -10.003087043762207
    5. ' in' → logprob: -10.753087043762207
    6. 'p' → logprob: -11.128087043762207
    7. 'e' → logprob: -11.503087043762207
    8. 'x' → logprob: -12.753087043762207
    9. 'en' → logprob: -12.878087043762207
    10. '
' → logprob: -13.378087043762207

Token 871: '(parent' (ID: 24729)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0005315870512276888
    2. ' parent' → logprob: -8.000531196594238
    3. '(parent' → logprob: -8.875531196594238
    4. 'enumer' → logprob: -10.000531196594238
    5. 'p' → logprob: -12.875531196594238
    6. 'piece' → logprob: -13.000531196594238
    7. 'paren' → logprob: -13.750531196594238
    8. '[parent' → logprob: -14.000531196594238
    9. '	parent' → logprob: -14.125531196594238
    10. 'range' → logprob: -14.500531196594238

Token 872: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.36574100604048e-06
    2. 'of' → logprob: -13.625004768371582
    3. 's' → logprob: -14.375004768371582
    4. '_in' → logprob: -14.750004768371582
    5. '_for' → logprob: -14.750004768371582
    6. '_or' → logprob: -15.000004768371582
    7. '   ' → logprob: -15.125004768371582
    8. ')' → logprob: -15.500004768371582
    9. ' of' → logprob: -15.875004768371582
    10. ')_' → logprob: -15.875004768371582

Token 873: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.423219696851447e-05
    2. 'if' → logprob: -9.750083923339844
    3. ' if' → logprob: -11.250083923339844
    4. 'p' → logprob: -12.125083923339844
    5. ' )' → logprob: -12.125083923339844
    6. ')p' → logprob: -14.250083923339844
    7. '   ' → logprob: -14.875083923339844
    8. 'None' → logprob: -15.375083923339844
    9. 'in' → logprob: -16.125083923339844
    10. '(p' → logprob: -16.125083923339844

Token 874: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20143857598304749
    2. 'if' → logprob: -1.701438546180725
    3. ' ' → logprob: -12.326438903808594
    4. ')' → logprob: -12.451438903808594
    5. '   ' → logprob: -12.576438903808594
    6. '       ' → logprob: -12.701438903808594
    7. '        ' → logprob: -12.951438903808594
    8. '           ' → logprob: -13.201438903808594
    9. '          ' → logprob: -13.451438903808594
    10. '()' → logprob: -14.201438903808594

Token 875: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015093892579898238
    2. ' p' → logprob: -6.501509189605713
    3. 'parent' → logprob: -12.001509666442871
    4. '   ' → logprob: -15.001509666442871
    5. ' ' → logprob: -16.126508712768555
    6. '
' → logprob: -16.251508712768555
    7. ' parent' → logprob: -16.501508712768555
    8. '(p' → logprob: -17.001508712768555
    9. '  ' → logprob: -17.189008712768555
    10. '    ' → logprob: -17.314008712768555

Token 876: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2017037272453308
    2. 'is' → logprob: -1.7017037868499756
    3. '==' → logprob: -8.326704025268555
    4. ' None' → logprob: -10.951704025268555
    5. ')' → logprob: -11.451704025268555
    6. 'None' → logprob: -11.826704025268555
    7. ' ==' → logprob: -12.576704025268555
    8. ' ' → logprob: -12.701704025268555
    9. ')is' → logprob: -12.951704025268555
    10. ']' → logprob: -14.326704025268555

Token 877: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007102862582542002
    2. ' None' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.250710487365723
    4. '_None' → logprob: -17.875709533691406
    5. '       ' → logprob: -18.250709533691406
    6. '=None' → logprob: -18.750709533691406
    7. '(None' → logprob: -19.000709533691406
    8. '           ' → logprob: -19.125709533691406
    9. '  ' → logprob: -19.250709533691406
    10. '         ' → logprob: -19.250709533691406

Token 878: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007472136639989913
    2. ']
' → logprob: -7.875747203826904
    3. '       ' → logprob: -8.625747680664062
    4. ' ]' → logprob: -8.750747680664062
    5. ']

' → logprob: -10.750747680664062
    6. '   ' → logprob: -12.625747680664062
    7. '()]' → logprob: -12.750747680664062
    8. ')]' → logprob: -14.750747680664062
    9. ']
' → logprob: -15.500747680664062
    10. ')' → logprob: -15.875747680664062

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05167530104517937
    2. '
' → logprob: -3.176675319671631
    3. '        
' → logprob: -5.301675319671631
    4. '<|end|>' → logprob: -6.926675319671631
    5. '   ' → logprob: -7.301675319671631
    6. '```' → logprob: -7.801675319671631
    7. ',' → logprob: -7.926675319671631
    8. 'import' → logprob: -8.676674842834473
    9. '    
' → logprob: -8.801674842834473
    10. 'def' → logprob: -8.926674842834473

Token 880: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0483863353729248
    2. 'dp' → logprob: -1.6733863353729248
    3. '#' (adapté à ' #') → logprob: -2.423386335372925
    4. 'gravity' → logprob: -2.548386335372925
    5. 'dist' → logprob: -3.048386335372925
    6. '   ' → logprob: -3.048386335372925
    7. 'max' → logprob: -3.423386335372925
    8. 'positions' → logprob: -3.548386335372925
    9. 'def' → logprob: -3.673386335372925
    10. 'moves' → logprob: -4.423386573791504

Token 881: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.355189323425293
    2. 'dp' → logprob: -1.355189323425293
    3. '#' → logprob: -1.605189323425293
    4. 'dist' → logprob: -2.730189323425293
    5. 'gravity' → logprob: -2.730189323425293
    6. 'import' → logprob: -3.730189323425293
    7. 'positions' → logprob: -4.105189323425293
    8. '   ' → logprob: -4.230189323425293
    9. 'fall' → logprob: -4.605189323425293
    10. 'for' → logprob: -5.105189323425293

Token 882: ' center' (ID: 6170)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2025635242462158
    2. 'each' → logprob: -2.077563524246216
    3. ' piece' → logprob: -2.327563524246216
    4. ' i' → logprob: -2.452563524246216
    5. ' root' → logprob: -2.702563524246216
    6. 'root' → logprob: -2.702563524246216
    7. ' each' → logprob: -2.952563524246216
    8. 'piece' → logprob: -3.702563524246216
    9. 'dp' → logprob: -3.827563524246216
    10. ' p' → logprob: -3.952563524246216

Token 883: ' of' (ID: 328)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.4963187575340271
    2. 'x' → logprob: -1.7463188171386719
    3. ' =' → logprob: -2.746318817138672
    4. '_' → logprob: -3.121318817138672
    5. '_of' → logprob: -3.371318817138672
    6. 'piece' → logprob: -3.746318817138672
    7. '=' → logprob: -3.996318817138672
    8. 's' → logprob: -4.121318817138672
    9. '(' → logprob: -5.246318817138672
    10. 'of' → logprob: -5.496318817138672

Token 884: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.014940433204174042
    2. ' mass' → logprob: -5.26494026184082
    3. 'piece' → logprob: -5.26494026184082
    4. 'pieces' → logprob: -5.76494026184082
    5. 'gravity' → logprob: -7.38994026184082
    6. 'each' → logprob: -7.51494026184082
    7. 'x' → logprob: -9.88994026184082
    8. ')' → logprob: -10.76494026184082
    9. ' piece' → logprob: -11.13994026184082
    10. 'm' → logprob: -11.26494026184082

Token 885: ' calculation' (ID: 40722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9308440089225769
    2. '       ' → logprob: -1.4308440685272217
    3. 'positions' → logprob: -1.8058440685272217
    4. 'def' → logprob: -2.6808440685272217
    5. 'for' → logprob: -4.305843830108643
    6. 'import' → logprob: -4.555843830108643
    7. 'x' → logprob: -4.555843830108643
    8. '   ' → logprob: -4.680843830108643
    9. 'pieces' → logprob: -4.680843830108643
    10. ' positions' → logprob: -4.805843830108643

Token 886: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018498387187719345
    2. '
' → logprob: -4.893498420715332
    3. 'import' → logprob: -5.768498420715332
    4. 'positions' → logprob: -5.893498420715332
    5. 'def' → logprob: -6.143498420715332
    6. '        
' → logprob: -7.018498420715332
    7. '#' → logprob: -7.268498420715332
    8. ',' → logprob: -8.143498420715332
    9. 'total' → logprob: -8.393498420715332
    10. '   ' → logprob: -8.893498420715332

Token 887: ' need' (ID: 1309)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6649521589279175
    2. '       ' → logprob: -1.7899521589279175
    3. 'import' → logprob: -1.7899521589279175
    4. 'def' → logprob: -3.539952278137207
    5. ' continue' → logprob: -3.539952278137207
    6. '   ' → logprob: -3.789952278137207
    7. 'need' → logprob: -3.914952278137207
    8. '#' → logprob: -4.414952278137207
    9. ' need' → logprob: -4.789952278137207
    10. 'calculate' → logprob: -4.914952278137207

Token 888: ' to' (ID: 316)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -1.5480389595031738
    2. 'mass' → logprob: -1.5480389595031738
    3. 'cent' → logprob: -2.298038959503174
    4. 'pieces' → logprob: -2.548038959503174
    5. '#' → logprob: -2.923038959503174
    6. 'import' → logprob: -3.048038959503174
    7. ' mass' → logprob: -3.298038959503174
    8. '       ' → logprob: -3.423038959503174
    9. 'positions' → logprob: -3.673038959503174
    10. ' piece' → logprob: -3.798038959503174

Token 889: ' compute' (ID: 23864)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.31384316086769104
    2. 'compute' → logprob: -2.438843250274658
    3. 'calculate' → logprob: -2.688843250274658
    4. 'from' → logprob: -3.313843250274658
    5. '#' → logprob: -3.688843250274658
    6. 'def' → logprob: -4.188843250274658
    7. 'continue' → logprob: -4.813843250274658
    8. ' calculate' → logprob: -5.063843250274658
    9. 'define' → logprob: -5.188843250274658
    10. ' compute' → logprob: -5.313843250274658

Token 890: ' recursively' (ID: 130266)
  Prédit: 'cent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cent' → logprob: -0.7537491321563721
    2. 'for' → logprob: -2.128749132156372
    3. 'mass' → logprob: -2.128749132156372
    4. 'center' → logprob: -3.003749132156372
    5. ' mass' → logprob: -3.378749132156372
    6. '#' → logprob: -3.503749132156372
    7. 'piece' → logprob: -3.628749132156372
    8. ' for' → logprob: -3.753749132156372
    9. '       ' → logprob: -4.128748893737793
    10. ' cent' → logprob: -4.253748893737793

Token 891: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.619960606098175
    2. 'def' → logprob: -0.994960606098175
    3. '
' → logprob: -2.6199605464935303
    4. 'import' → logprob: -4.244960784912109
    5. '   ' → logprob: -6.244960784912109
    6. '        
' → logprob: -6.494960784912109
    7. '#' → logprob: -7.619960784912109
    8. 'from' → logprob: -7.994960784912109
    9. 'weights' → logprob: -8.36996078491211
    10. 'positions' → logprob: -9.11996078491211

Token 892: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.02348712831735611
    2. ' each' → logprob: -3.898487091064453
    3. 'all' → logprob: -6.398487091064453
    4. 'piece' → logprob: -7.648487091064453
    5. 'i' → logprob: -7.898487091064453
    6. ' all' → logprob: -8.898487091064453
    7. 'pieces' → logprob: -9.398487091064453
    8. 'root' → logprob: -9.648487091064453
    9. 'the' → logprob: -10.398487091064453
    10. 'def' → logprob: -10.648487091064453

Token 893: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.011512011289596558
    2. ' piece' → logprob: -4.51151180267334
    3. 'node' → logprob: -8.26151180267334
    4. 'i' → logprob: -9.01151180267334
    5. 'def' → logprob: -10.38651180267334
    6. '
' → logprob: -11.38651180267334
    7. '(piece' → logprob: -11.63651180267334
    8. '```' → logprob: -12.01151180267334
    9. ' node' → logprob: -12.13651180267334
    10. ' i' → logprob: -12.38651180267334

Token 894: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07550652325153351
    2. '
' → logprob: -3.0755064487457275
    3. 'def' → logprob: -4.075506687164307
    4. '        
' → logprob: -5.325506687164307
    5. 'import' → logprob: -6.575506687164307
    6. '   ' → logprob: -6.950506687164307
    7. '<|end|>' → logprob: -7.200506687164307
    8. '#' → logprob: -7.325506687164307
    9. ',' → logprob: -7.950506687164307
    10. '<|end|>' → logprob: -8.950506210327148

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07176073640584946
    2. '
' → logprob: -2.821760654449463
    3. '        
' → logprob: -5.321760654449463
    4. 'def' → logprob: -5.571760654449463
    5. '<|end|>' → logprob: -7.946760654449463
    6. '    
' → logprob: -8.821761131286621
    7. 'import' → logprob: -8.821761131286621
    8. '   ' → logprob: -9.571761131286621
    9. '<|end|>' → logprob: -9.946761131286621
    10. ',' → logprob: -9.946761131286621

Token 896: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4781639277935028
    2. '       ' → logprob: -1.1031639575958252
    3. 'def' → logprob: -3.478163957595825
    4. '        
' → logprob: -4.228163719177246
    5. '#' (adapté à ' #') → logprob: -6.978163719177246
    6. '   ' → logprob: -7.728163719177246
    7. '    
' → logprob: -7.728163719177246
    8. 'import' → logprob: -7.978163719177246
    9. '

' → logprob: -8.978163719177246
    10. '            
' → logprob: -9.728163719177246

Token 897: ' x' (ID: 1215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3632878065109253
    2. '       ' → logprob: -1.6132878065109253
    3. '
' → logprob: -2.363287925720215
    4. '   ' → logprob: -4.863287925720215
    5. '        
' → logprob: -6.863287925720215
    6. 'import' → logprob: -6.863287925720215
    7. '#' → logprob: -7.238287925720215
    8. '    
' → logprob: -8.613287925720215
    9. 'positions' → logprob: -8.613287925720215
    10. 'from' → logprob: -8.738287925720215

Token 898: '_L' (ID: 4258)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0926650762557983
    2. ',' → logprob: -1.4676650762557983
    3. 'sum' → logprob: -2.092665195465088
    4. ',y' → logprob: -2.467665195465088
    5. '_total' → logprob: -3.592665195465088
    6. '_counts' → logprob: -3.717665195465088
    7. '   ' → logprob: -3.967665195465088
    8. '_cent' → logprob: -3.967665195465088
    9. 's' → logprob: -4.217665195465088
    10. 'y' → logprob: -4.467665195465088

Token 899: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1596088409423828
    2. 'y' → logprob: -2.034608840942383
    3. '_sum' → logprob: -2.034608840942383
    4. '_list' → logprob: -2.284608840942383
    5. 's' → logprob: -2.909608840942383
    6. 'sum' → logprob: -3.034608840942383
    7. ' =' → logprob: -3.159608840942383
    8. ',y' → logprob: -3.659608840942383
    9. 'ys' → logprob: -3.909608840942383
    10. '_coords' → logprob: -3.909608840942383

Token 900: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018205778673291206
    2. ' y' → logprob: -4.018205642700195
    3. '   ' → logprob: -10.768205642700195
    4. 'x' → logprob: -11.768205642700195
    5. '#' → logprob: -11.893205642700195
    6. '       ' → logprob: -12.268205642700195
    7. 'def' → logprob: -12.518205642700195
    8. '_y' → logprob: -12.643205642700195
    9. ''y' → logprob: -13.643205642700195
    10. '
' → logprob: -13.893205642700195

Token 901: '_R' (ID: 5190)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0548932552337646
    2. '_c' → logprob: -1.3048932552337646
    3. 'sum' → logprob: -2.8048932552337646
    4. '_center' → logprob: -3.0548932552337646
    5. '_C' → logprob: -3.1798932552337646
    6. '_cm' → logprob: -3.3048932552337646
    7. '_mass' → logprob: -3.4298932552337646
    8. '_total' → logprob: -3.8048932552337646
    9. '_cent' → logprob: -3.8048932552337646
    10. 's' → logprob: -4.429893493652344

Token 902: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30683162808418274
    2. '=' → logprob: -1.8068315982818604
    3. ',' → logprob: -2.4318315982818604
    4. '       ' → logprob: -5.5568318367004395
    5. 's' → logprob: -6.0568318367004395
    6. '   ' → logprob: -7.1818318367004395
    7. 'def' → logprob: -7.1818318367004395
    8. ',
' → logprob: -7.5568318367004395
    9. '_' → logprob: -7.8068318367004395
    10. '
' → logprob: -7.9318318367004395

Token 903: ' left' (ID: 3561)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.710545003414154
    2. '0' → logprob: -2.085545063018799
    3. '[' → logprob: -2.085545063018799
    4. ' None' → logprob: -2.460545063018799
    5. 'None' → logprob: -2.960545063018799
    6. '       ' → logprob: -3.960545063018799
    7. '[]' → logprob: -4.460545063018799
    8. ' =' → logprob: -4.710545063018799
    9. ' []' → logprob: -4.710545063018799
    10. ' x' → logprob: -4.835545063018799

Token 904: 'most' (ID: 5309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6145792007446289
    2. '_bound' → logprob: -2.239579200744629
    3. 'most' → logprob: -2.364579200744629
    4. ' =' → logprob: -2.489579200744629
    5. '=' → logprob: -2.989579200744629
    6. '_' → logprob: -3.114579200744629
    7. '_m' → logprob: -4.364579200744629
    8. '       ' → logprob: -4.739579200744629
    9. '_bounds' → logprob: -4.739579200744629
    10. 's' → logprob: -4.739579200744629

Token 905: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5220513343811035
    2. ' =' → logprob: -1.3970513343811035
    3. ',' → logprob: -2.1470513343811035
    4. ' and' → logprob: -4.2720513343811035
    5. '_' → logprob: -4.3970513343811035
    6. 'and' → logprob: -4.6470513343811035
    7. '   ' → logprob: -6.7720513343811035
    8. '       ' → logprob: -7.0220513343811035
    9. 'x' → logprob: -7.2720513343811035
    10. '_piece' → logprob: -7.5220513343811035

Token 906: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0319209098815918
    2. 'x' → logprob: -4.156920909881592
    3. ' right' → logprob: -4.156920909881592
    4. '_right' → logprob: -9.90692138671875
    5. '   ' → logprob: -10.65692138671875
    6. ' x' → logprob: -10.78192138671875
    7. 'Right' → logprob: -12.40692138671875
    8. '#' → logprob: -13.28192138671875
    9. ' ' → logprob: -13.53192138671875
    10. '       ' → logprob: -13.90692138671875

Token 907: 'most' (ID: 5309)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.0455443859100342
    2. 'most' → logprob: -1.0455443859100342
    3. '_' → logprob: -1.2955443859100342
    4. ',' → logprob: -5.170544624328613
    5. '=' → logprob: -5.295544624328613
    6. '   ' → logprob: -5.545544624328613
    7. ' =' → logprob: -5.670544624328613
    8. 'm' → logprob: -6.670544624328613
    9. '_bound' → logprob: -6.795544624328613
    10. ')' → logprob: -7.170544624328613

Token 908: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7905604243278503
    2. ' =' → logprob: -1.4155604839324951
    3. '_' → logprob: -1.5405604839324951
    4. ',' → logprob: -3.415560483932495
    5. 'x' → logprob: -3.790560483932495
    6. '<|end|>' → logprob: -4.540560245513916
    7. '_x' → logprob: -4.665560245513916
    8. '   ' → logprob: -6.165560245513916
    9. '_=' → logprob: -6.790560245513916
    10. '
' → logprob: -6.790560245513916

Token 909: ' coordinate' (ID: 30380)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5852470993995667
    2. '
' → logprob: -2.210247039794922
    3. '_' → logprob: -2.710247039794922
    4. '       ' → logprob: -3.335247039794922
    5. '_positions' → logprob: -3.460247039794922
    6. '<|end|>' → logprob: -3.960247039794922
    7. '<|end|>' → logprob: -4.210247039794922
    8. ' =' → logprob: -4.210247039794922
    9. '_coordinates' → logprob: -4.210247039794922
    10. '   ' → logprob: -4.585247039794922

Token 910: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06346281617879868
    2. '
' → logprob: -3.188462734222412
    3. ',' → logprob: -4.688462734222412
    4. '   ' → logprob: -5.438462734222412
    5. ' for' → logprob: -6.563462734222412
    6. ',
' → logprob: -7.313462734222412
    7. ' of' → logprob: -7.438462734222412
    8. '#' → logprob: -7.688462734222412
    9. 'def' → logprob: -8.06346321105957
    10. '        
' → logprob: -8.06346321105957

Token 911: ' bottom' (ID: 8725)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.7067385911941528
    2. 'the' → logprob: -1.3317385911941528
    3. 'pieces' → logprob: -2.5817384719848633
    4. ' piece' → logprob: -2.9567384719848633
    5. ' the' → logprob: -3.0817384719848633
    6. 'each' → logprob: -3.2067384719848633
    7. ' pieces' → logprob: -4.581738471984863
    8. ' each' → logprob: -5.331738471984863
    9. 'a' → logprob: -5.456738471984863
    10. '   ' → logprob: -6.331738471984863

Token 912: ' touching' (ID: 52058)
  Prédit: '_face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_face' → logprob: -0.6527677178382874
    2. '_' → logprob: -1.2777676582336426
    3. '_blocks' → logprob: -3.1527676582336426
    4. '_faces' → logprob: -3.7777676582336426
    5. '_block' → logprob: -3.9027676582336426
    6. '_bound' → logprob: -4.027767658233643
    7. '_piece' → logprob: -4.777767658233643
    8. '   ' → logprob: -4.777767658233643
    9. '```' → logprob: -4.902767658233643
    10. '_line' → logprob: -5.027767658233643

Token 913: ' blocks' (ID: 18125)
  Prédit: '_face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_face' → logprob: -1.2524447441101074
    2. '_faces' → logprob: -1.6274447441101074
    3. 'face' → logprob: -1.8774447441101074
    4. '_blocks' → logprob: -1.8774447441101074
    5. 'faces' → logprob: -2.1274447441101074
    6. 'blocks' → logprob: -3.5024447441101074
    7. '_block' → logprob: -4.752444744110107
    8. 'block' → logprob: -4.877444744110107
    9. '_' → logprob: -4.877444744110107
    10. '   ' → logprob: -5.002444744110107

Token 914: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5689116716384888
    2. '
' → logprob: -0.9439116716384888
    3. 'def' → logprob: -4.318911552429199
    4. '   ' → logprob: -4.568911552429199
    5. '#' → logprob: -4.693911552429199
    6. '        
' → logprob: -5.943911552429199
    7. '_' → logprob: -6.443911552429199
    8. 'x' → logprob: -6.693911552429199
    9. '_
' → logprob: -6.693911552429199
    10. '```' → logprob: -7.443911552429199

Token 915: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02501440793275833
    2. '
' → logprob: -3.9000144004821777
    3. '   ' → logprob: -5.900014400482178
    4. '        
' → logprob: -7.400014400482178
    5. '<|end|>' → logprob: -8.400014877319336
    6. '           ' → logprob: -8.775014877319336
    7. '#' → logprob: -8.900014877319336
    8. ',' → logprob: -9.025014877319336
    9. 'x' → logprob: -9.150014877319336
    10. 'def' → logprob: -9.775014877319336

Token 916: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01929980143904686
    2. '
' → logprob: -4.2692999839782715
    3. 'def' → logprob: -6.2692999839782715
    4. '#' (adapté à ' #') → logprob: -6.5192999839782715
    5. '   ' → logprob: -7.5192999839782715
    6. '        
' → logprob: -7.7692999839782715
    7. 'for' → logprob: -8.269299507141113
    8. ' for' → logprob: -8.769299507141113
    9. 'x' → logprob: -9.144299507141113
    10. ',' → logprob: -9.894299507141113

Token 917: ' M' (ID: 391)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12810686230659485
    2. '#' → logprob: -3.0031068325042725
    3. '       ' → logprob: -3.1281068325042725
    4. '
' → logprob: -4.878107070922852
    5. 'y' → logprob: -5.253107070922852
    6. '   ' → logprob: -5.378107070922852
    7. 'for' → logprob: -5.628107070922852
    8. 'from' → logprob: -6.253107070922852
    9. 'import' → logprob: -6.628107070922852
    10. 'x' → logprob: -7.003107070922852

Token 918: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5854319930076599
    2. 'def' → logprob: -1.5854320526123047
    3. '=' → logprob: -2.2104320526123047
    4. '   ' → logprob: -3.3354320526123047
    5. 'ass' → logprob: -3.4604320526123047
    6. 'asses' → logprob: -4.335432052612305
    7. '#' → logprob: -4.835432052612305
    8. '       ' → logprob: -4.960432052612305
    9. 'x' → logprob: -5.210432052612305
    10. '    ' → logprob: -5.835432052612305

Token 919: ' x' (ID: 1215)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2268016338348389
    2. 'def' → logprob: -1.3518016338348389
    3. 'from' → logprob: -1.9768016338348389
    4. 'sum' → logprob: -3.101801633834839
    5. ' #' → logprob: -3.476801633834839
    6. ' def' → logprob: -3.476801633834839
    7. 'for' → logprob: -3.601801633834839
    8. ' sum' → logprob: -3.976801633834839
    9. 'M' → logprob: -3.976801633834839
    10. ' for' → logprob: -4.101801872253418

Token 920: ' coordinate' (ID: 30380)
  Prédit: '_L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_L' → logprob: -1.6851102113723755
    2. ',' → logprob: -2.060110092163086
    3. '_center' → logprob: -2.060110092163086
    4. '_sum' → logprob: -2.560110092163086
    5. 'sum' → logprob: -2.685110092163086
    6. '_min' → logprob: -3.185110092163086
    7. '_coords' → logprob: -3.185110092163086
    8. 'min' → logprob: -3.435110092163086
    9. '_left' → logprob: -3.560110092163086
    10. ' =' → logprob: -3.685110092163086

Token 921: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0059337615966797
    2. '       ' → logprob: -1.2559337615966797
    3. 'def' → logprob: -2.5059337615966797
    4. ' =' → logprob: -2.7559337615966797
    5. 's' → logprob: -3.3809337615966797
    6. '   ' → logprob: -3.3809337615966797
    7. ',' → logprob: -3.6309337615966797
    8. '
' → logprob: -4.00593376159668
    9. '=' → logprob: -4.13093376159668
    10. '_
' → logprob: -4.63093376159668

Token 922: ' accumulated' (ID: 64757)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.18596920371055603
    2. 'mass' → logprob: -2.185969114303589
    3. 'the' → logprob: -4.060969352722168
    4. ' center' → logprob: -4.060969352722168
    5. 'bottom' → logprob: -4.310969352722168
    6. ' mass' → logprob: -5.685969352722168
    7. 'cent' → logprob: -6.060969352722168
    8. ' the' → logprob: -7.060969352722168
    9. ' bottom' → logprob: -7.435969352722168
    10. ' centroid' → logprob: -8.060969352722168

Token 923: ' center' (ID: 6170)
  Prédit: '_mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mass' → logprob: -1.0832698345184326
    2. 'mass' → logprob: -1.2082698345184326
    3. '_center' → logprob: -1.8332698345184326
    4. 'center' → logprob: -2.8332698345184326
    5. ' mass' → logprob: -3.9582698345184326
    6. ',' → logprob: -4.083270072937012
    7. '_cm' → logprob: -4.208270072937012
    8. '_c' → logprob: -4.208270072937012
    9. '_' → logprob: -4.458270072937012
    10. '_com' → logprob: -4.708270072937012

Token 924: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9747521281242371
    2. '       ' → logprob: -1.3497521877288818
    3. '
' → logprob: -1.9747521877288818
    4. '   ' → logprob: -2.349752187728882
    5. '_' → logprob: -3.099752187728882
    6. '_
' → logprob: -3.224752187728882
    7. ' =' → logprob: -4.974751949310303
    8. '=' → logprob: -5.224751949310303
    9. ' def' → logprob: -5.474751949310303
    10. '#' → logprob: -5.474751949310303

Token 925: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -7.338466093642637e-05
    2. ' mass' → logprob: -9.750073432922363
    3. 'm' → logprob: -11.750073432922363
    4. 'gravity' → logprob: -12.750073432922363
    5. 'Mass' → logprob: -13.250073432922363
    6. '_mass' → logprob: -13.750073432922363
    7. '   ' → logprob: -14.500073432922363
    8. '
' → logprob: -14.750073432922363
    9. 'massa' → logprob: -15.500073432922363
    10. ')' → logprob: -17.125072479248047

Token 926: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5963975787162781
    2. '
' → logprob: -0.8463975787162781
    3. 'def' → logprob: -4.346397399902344
    4. '        
' → logprob: -5.721397399902344
    5. 'import' → logprob: -6.721397399902344
    6. '   ' → logprob: -6.846397399902344
    7. '#' → logprob: -7.221397399902344
    8. '```' → logprob: -8.221397399902344
    9. 'from' → logprob: -8.846397399902344
    10. '    
' → logprob: -8.971397399902344

Token 927: 'piece' (ID: 30871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15755535662174225
    2. 'x' → logprob: -3.282555341720581
    3. ')
' → logprob: -3.407555341720581
    4. '=' → logprob: -3.782555341720581
    5. 'pieces' → logprob: -4.03255558013916
    6. ',' → logprob: -5.28255558013916
    7. 'mass' → logprob: -5.28255558013916
    8. '
' → logprob: -5.53255558013916
    9. 'def' → logprob: -5.90755558013916
    10. ' =' → logprob: -6.03255558013916

Token 928: ' +' (ID: 659)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4020442068576813
    2. ')' → logprob: -2.2770442962646484
    3. ',' → logprob: -2.9020442962646484
    4. '_x' → logprob: -3.2770442962646484
    5. '_mass' → logprob: -3.6520442962646484
    6. 'x' → logprob: -4.277044296264648
    7. '   ' → logprob: -4.652044296264648
    8. '       ' → logprob: -4.902044296264648
    9. 'mass' → logprob: -4.902044296264648
    10. '
' → logprob: -5.027044296264648

Token 929: ' all' (ID: 722)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.01030760258436203
    2. ' children' → logprob: -6.260307788848877
    3. 'sub' → logprob: -6.385307788848877
    4. 'supports' → logprob: -6.760307788848877
    5. 'supported' → logprob: -6.885307788848877
    6. 'pieces' → logprob: -7.010307788848877
    7. 'child' → logprob: -7.135307788848877
    8. 'its' → logprob: -7.260307788848877
    9. 'support' → logprob: -7.260307788848877
    10. 'desc' → logprob: -7.760307788848877

Token 930: ' below' (ID: 4895)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.09585696458816528
    2. 'supported' → logprob: -3.7208569049835205
    3. 'its' → logprob: -3.8458569049835205
    4. 'desc' → logprob: -4.3458571434021
    5. 'pieces' → logprob: -5.4708571434021
    6. 'child' → logprob: -5.4708571434021
    7. ' its' → logprob: -5.4708571434021
    8. ' children' → logprob: -5.5958571434021
    9. 'supports' → logprob: -5.5958571434021
    10. '   ' → logprob: -5.7208571434021

Token 931: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7078334093093872
    2. ')' → logprob: -1.7078334093093872
    3. ')_' → logprob: -2.2078332901000977
    4. 's' → logprob: -2.8328332901000977
    5. '_s' → logprob: -3.3328332901000977
    6. '_)' → logprob: -3.4578332901000977
    7. '   ' → logprob: -3.4578332901000977
    8. '_p' → logprob: -4.082833290100098
    9. '_blocks' → logprob: -4.082833290100098
    10. 'pieces' → logprob: -5.457833290100098

Token 932: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31901538372039795
    2. ')' → logprob: -2.3190155029296875
    3. ')
' → logprob: -2.8190155029296875
    4. 'def' → logprob: -3.5690155029296875
    5. '   ' → logprob: -3.6940155029296875
    6. '_' → logprob: -4.0690155029296875
    7. '#' → logprob: -4.3190155029296875
    8. '
' → logprob: -4.6940155029296875
    9. 's' → logprob: -5.3190155029296875
    10. ',' → logprob: -5.5690155029296875

Token 933: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11273487657308578
    2. '   ' → logprob: -2.862734794616699
    3. '
' → logprob: -3.362734794616699
    4. 'def' → logprob: -5.112734794616699
    5. '        
' → logprob: -5.862734794616699
    6. '#' → logprob: -6.737734794616699
    7. '    
' → logprob: -7.112734794616699
    8. '           ' → logprob: -7.237734794616699
    9. 'x' → logprob: -7.737734794616699
    10. ',' → logprob: -8.2377347946167

Token 934: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15440070629119873
    2. '
' → logprob: -2.4044008255004883
    3. 'def' → logprob: -3.4044008255004883
    4. '   ' → logprob: -4.154400825500488
    5. '        
' → logprob: -6.154400825500488
    6. 'import' → logprob: -7.279400825500488
    7. '    
' → logprob: -7.529400825500488
    8. 'from' → logprob: -8.779400825500488
    9. '#' (adapté à ' #') → logprob: -9.029400825500488
    10. ' def' → logprob: -10.029400825500488

Token 935: ' Calculate' (ID: 38942)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14732080698013306
    2. 'from' → logprob: -3.0223207473754883
    3. 'import' → logprob: -3.3973207473754883
    4. 'class' → logprob: -3.5223207473754883
    5. '       ' → logprob: -4.522320747375488
    6. '   ' → logprob: -4.897320747375488
    7. '#' → logprob: -5.022320747375488
    8. '
' → logprob: -9.022320747375488
    9. 'for' → logprob: -9.897320747375488
    10. 'indent' → logprob: -9.897320747375488

Token 936: ' piece' (ID: 9047)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1011067628860474
    2. 'x' → logprob: -1.6011067628860474
    3. 'bottom' → logprob: -1.6011067628860474
    4. '   ' → logprob: -2.476106643676758
    5. '#' → logprob: -3.101106643676758
    6. 'def' → logprob: -3.476106643676758
    7. 'for' → logprob: -4.351106643676758
    8. '       ' → logprob: -4.476106643676758
    9. ' bottom' → logprob: -4.601106643676758
    10. 'piece' → logprob: -4.726106643676758

Token 937: '_weight' (ID: 34711)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.8201325535774231
    2. '_bounds' → logprob: -1.8201324939727783
    3. '_m' → logprob: -2.4451324939727783
    4. '_x' → logprob: -3.3201324939727783
    5. '_support' → logprob: -3.3201324939727783
    6. '_cent' → logprob: -3.4451324939727783
    7. '_left' → logprob: -3.8201324939727783
    8. 'bounds' → logprob: -3.9451324939727783
    9. 'bottom' → logprob: -3.9451324939727783
    10. '_blocks' → logprob: -4.070132732391357

Token 938: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9143194556236267
    2. ' =' → logprob: -0.9143194556236267
    3. 's' → logprob: -1.6643195152282715
    4. '   ' → logprob: -5.0393195152282715
    5. 'def' → logprob: -7.1643195152282715
    6. '=[]' → logprob: -7.9143195152282715
    7. '=[]
' → logprob: -8.539319038391113
    8. '       ' → logprob: -8.664319038391113
    9. '=
' → logprob: -8.914319038391113
    10. '=s' → logprob: -9.039319038391113

Token 939: ' center' (ID: 6170)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.04887745901942253
    2. ' piece' → logprob: -3.173877477645874
    3. 'pieces' → logprob: -6.673877239227295
    4. '   ' → logprob: -7.048877239227295
    5. 'def' → logprob: -7.548877239227295
    6. 'center' → logprob: -7.673877239227295
    7. 'bottom' → logprob: -7.798877239227295
    8. 'x' → logprob: -7.923877239227295
    9. 'block' → logprob: -7.923877239227295
    10. '
' → logprob: -8.298877716064453

Token 940: '_x' (ID: 7054)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.5169365406036377
    2. ' =' → logprob: -1.6419365406036377
    3. 'of' → logprob: -1.6419365406036377
    4. '=' → logprob: -1.8919365406036377
    5. 's' → logprob: -2.1419365406036377
    6. '       ' → logprob: -2.6419365406036377
    7. '   ' → logprob: -3.6419365406036377
    8. '_mass' → logprob: -5.016936302185059
    9. '
' → logprob: -5.641936302185059
    10. '_x' → logprob: -5.641936302185059

Token 941: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4122721552848816
    2. 's' → logprob: -1.4122722148895264
    3. '=' → logprob: -2.6622722148895264
    4. '   ' → logprob: -4.287271976470947
    5. '
' → logprob: -5.912271976470947
    6. '=
' → logprob: -5.912271976470947
    7. ' =
' → logprob: -6.412271976470947
    8. 'for' → logprob: -7.162271976470947
    9. '       ' → logprob: -7.287271976470947
    10. ',' → logprob: -7.912271976470947

Token 942: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4983147084712982
    2. 'i' → logprob: -1.3733147382736206
    3. 'piece' → logprob: -2.248314619064331
    4. ' each' → logprob: -3.748314619064331
    5. ' i' → logprob: -5.87331485748291
    6. ' piece' → logprob: -5.87331485748291
    7. 'pieces' → logprob: -6.24831485748291
    8. '[i' → logprob: -7.87331485748291
    9. '   ' → logprob: -8.24831485748291
    10. 'p' → logprob: -8.24831485748291

Token 943: ' piece' (ID: 9047)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.463366836309433
    2. 'piece' → logprob: -1.8383668661117554
    3. ' i' → logprob: -1.9633668661117554
    4. ' piece' → logprob: -2.713366746902466
    5. '   ' → logprob: -6.713366985321045
    6. '_piece' → logprob: -6.713366985321045
    7. ' =' → logprob: -7.838366985321045
    8. '_i' → logprob: -8.088366508483887
    9. '
' → logprob: -8.088366508483887
    10. '=' → logprob: -8.713366508483887

Token 944: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17959849536418915
    2. '
' → logprob: -1.9295984506607056
    3. '   ' → logprob: -5.054598331451416
    4. '        
' → logprob: -5.429598331451416
    5. ':' → logprob: -5.804598331451416
    6. ',' → logprob: -6.429598331451416
    7. ':
' → logprob: -7.429598331451416
    8. '    
' → logprob: -7.679598331451416
    9. '<|end|>' → logprob: -7.804598331451416
    10. ' =' → logprob: -8.554598808288574

Token 945: ' the' (ID: 290)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.4072233736515045
    2. 'store' → logprob: -1.6572233438491821
    3. 'M' → logprob: -3.4072234630584717
    4. 'pieces' → logprob: -3.9072234630584717
    5. 'for' → logprob: -4.157223224639893
    6. '#' → logprob: -4.157223224639893
    7. 'x' → logprob: -4.282223224639893
    8. '   ' → logprob: -4.907223224639893
    9. ' piece' → logprob: -4.907223224639893
    10. 'def' → logprob: -5.032223224639893

Token 946: ' accumulated' (ID: 64757)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.6112583875656128
    2. 'next' → logprob: -2.2362585067749023
    3. '#' → logprob: -2.7362585067749023
    4. 'center' → logprob: -2.7362585067749023
    5. 'bottom' → logprob: -3.4862585067749023
    6. 'x' → logprob: -3.6112585067749023
    7. 'def' → logprob: -3.8612585067749023
    8. 'mass' → logprob: -3.8612585067749023
    9. ' piece' → logprob: -3.9862585067749023
    10. 'position' → logprob: -4.236258506774902

Token 947: ' values' (ID: 4824)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -1.0937122106552124
    2. 'weight' → logprob: -1.3437122106552124
    3. 'mass' → logprob: -1.3437122106552124
    4. '_mass' → logprob: -2.593712329864502
    5. '#' → logprob: -3.593712329864502
    6. 'piece' → logprob: -4.843712329864502
    7. 'weights' → logprob: -5.218712329864502
    8. '_piece' → logprob: -5.468712329864502
    9. '_weights' → logprob: -5.843712329864502
    10. 'x' → logprob: -5.843712329864502

Token 948: ' recursively' (ID: 130266)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009600582998245955
    2. 'piece' → logprob: -8.125960350036621
    3. 'pieces' → logprob: -9.000960350036621
    4. '        
' → logprob: -9.125960350036621
    5. '   ' → logprob: -9.625960350036621
    6. ',' → logprob: -9.625960350036621
    7. '
' → logprob: -10.000960350036621
    8. 'def' → logprob: -10.125960350036621
    9. '(piece' → logprob: -10.250960350036621
    10. '<|end|>' → logprob: -10.250960350036621

Token 949: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08330192416906357
    2. '
' → logprob: -2.9583020210266113
    3. '   ' → logprob: -4.208302021026611
    4. 'piece' → logprob: -5.208302021026611
    5. 'def' → logprob: -5.458302021026611
    6. ' piece' → logprob: -6.708302021026611
    7. '        
' → logprob: -6.833302021026611
    8. '#' → logprob: -8.583301544189453
    9. 'import' → logprob: -8.708301544189453
    10. 'weight' → logprob: -8.958301544189453

Token 950: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6001731157302856
    2. '       ' → logprob: -0.8501731157302856
    3. '        
' → logprob: -4.225172996520996
    4. '   ' → logprob: -5.225172996520996
    5. '    
' → logprob: -6.100172996520996
    6. '<|end|>' → logprob: -7.100172996520996
    7. 'def' → logprob: -8.350172996520996
    8. '            
' → logprob: -9.475172996520996
    9. ' 
' → logprob: -9.600172996520996
    10. ',' → logprob: -9.850172996520996

Token 951: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03634192794561386
    2. '   ' → logprob: -4.161342144012451
    3. '
' → logprob: -4.286342144012451
    4. 'piece' → logprob: -5.911342144012451
    5. 'def' → logprob: -6.036342144012451
    6. '        
' → logprob: -7.161342144012451
    7. '    
' → logprob: -8.536341667175293
    8. ' piece' → logprob: -9.536341667175293
    9. 'import' → logprob: -9.911341667175293
    10. 'weight' → logprob: -10.036341667175293

Token 952: ' First' (ID: 8338)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6784396767616272
    2. 'import' → logprob: -0.9284396767616272
    3. 'from' → logprob: -3.1784396171569824
    4. 'piece' → logprob: -3.5534396171569824
    5. '       ' → logprob: -4.678439617156982
    6. 'weight' → logprob: -5.428439617156982
    7. '   ' → logprob: -5.553439617156982
    8. 'weights' → logprob: -5.928439617156982
    9. '#' → logprob: -6.428439617156982
    10. ' from' → logprob: -6.928439617156982

Token 953: ',' (ID: 11)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0833955928683281
    2. 'def' → logprob: -3.458395481109619
    3. 'import' → logprob: -4.083395481109619
    4. ' piece' → logprob: -4.583395481109619
    5. '   ' → logprob: -4.708395481109619
    6. '       ' → logprob: -5.208395481109619
    7. 'from' → logprob: -5.833395481109619
    8. '#' → logprob: -6.333395481109619
    9. '
' → logprob: -7.208395481109619
    10. 'weight' → logprob: -7.708395481109619

Token 954: ' for' (ID: 395)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.06900616735219955
    2. 'def' → logprob: -3.1940062046051025
    3. 'from' → logprob: -4.694005966186523
    4. ' piece' → logprob: -4.819005966186523
    5. 'import' → logprob: -5.319005966186523
    6. '#' → logprob: -6.444005966186523
    7. '   ' → logprob: -7.319005966186523
    8. 'weight' → logprob: -7.819005966186523
    9. 'for' → logprob: -8.569005966186523
    10. '
' → logprob: -9.069005966186523

Token 955: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17170944809913635
    2. 'each' → logprob: -2.6717095375061035
    3. ' i' → logprob: -3.2967095375061035
    4. 'piece' → logprob: -4.0467095375061035
    5. ' each' → logprob: -4.0467095375061035
    6. ' piece' → logprob: -5.1717095375061035
    7. 'def' → logprob: -5.2967095375061035
    8. 'x' → logprob: -6.7967095375061035
    9. 'p' → logprob: -6.7967095375061035
    10. ' def' → logprob: -7.2967095375061035

Token 956: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.2519002854824066
    2. 'i' → logprob: -1.626900315284729
    3. ' piece' → logprob: -3.7519001960754395
    4. ' i' → logprob: -6.1269001960754395
    5. '   ' → logprob: -9.251900672912598
    6. '_piece' → logprob: -9.501900672912598
    7. '```' → logprob: -9.876900672912598
    8. '(piece' → logprob: -9.876900672912598
    9. '
' → logprob: -10.251900672912598
    10. 'def' → logprob: -10.251900672912598

Token 957: ' find' (ID: 1646)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2554292678833008
    2. 'piece' → logprob: -1.8804292678833008
    3. 'size' → logprob: -4.005429267883301
    4. ':' → logprob: -4.130429267883301
    5. '       ' → logprob: -4.505429267883301
    6. '#' → logprob: -4.880429267883301
    7. 'sizes' → logprob: -5.255429267883301
    8. '   ' → logprob: -6.255429267883301
    9. 'pieces' → logprob: -6.255429267883301
    10. 'calculate' → logprob: -6.505429267883301

Token 958: ' its' (ID: 1617)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0016450724797323346
    2. ' bottom' → logprob: -7.001645088195801
    3. 'x' → logprob: -8.3766450881958
    4. 'the' → logprob: -8.3766450881958
    5. '   ' → logprob: -9.2516450881958
    6. '#' → logprob: -10.2516450881958
    7. 'lowest' → logprob: -10.2516450881958
    8. 'base' → logprob: -10.5016450881958
    9. 'left' → logprob: -10.8766450881958
    10. 'min' → logprob: -11.7516450881958

Token 959: ' blocks' (ID: 18125)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.008506548590958118
    2. 'min' → logprob: -5.758506774902344
    3. 'x' → logprob: -6.008506774902344
    4. 'blocks' → logprob: -7.008506774902344
    5. 'left' → logprob: -7.508506774902344
    6. ' bottom' → logprob: -8.258506774902344
    7. 'block' → logprob: -8.258506774902344
    8. 'lowest' → logprob: -8.633506774902344
    9. 'weight' → logprob: -8.758506774902344
    10. 'y' → logprob: -9.508506774902344

Token 960: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41713449358940125
    2. ',' → logprob: -2.4171345233917236
    3. 'block' → logprob: -3.1671345233917236
    4. 'x' → logprob: -3.4171345233917236
    5. '<|end|>' → logprob: -3.4171345233917236
    6. '#' → logprob: -3.6671345233917236
    7. ':' → logprob: -4.1671342849731445
    8. ' and' → logprob: -4.2921342849731445
    9. 'blocks' → logprob: -4.4171342849731445
    10. '...' → logprob: -4.5421342849731445

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01157858781516552
    2. '<|end|>' → logprob: -5.761578559875488
    3. ',' → logprob: -6.136578559875488
    4. '        
' → logprob: -6.636578559875488
    5. ' and' → logprob: -7.386578559875488
    6. '#' → logprob: -7.511578559875488
    7. '   ' → logprob: -7.636578559875488
    8. 'x' → logprob: -7.761578559875488
    9. '<|end|>' → logprob: -7.886578559875488
    10. '...' → logprob: -8.386578559875488

Token 962: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035250984132289886
    2. 'piece' → logprob: -3.7852509021759033
    3. '#' (adapté à ' #') → logprob: -5.910251140594482
    4. 'for' → logprob: -6.160251140594482
    5. 'block' → logprob: -6.660251140594482
    6. 'weights' → logprob: -6.660251140594482
    7. '   ' → logprob: -7.160251140594482
    8. 'weight' → logprob: -7.285251140594482
    9. '        
' → logprob: -7.535251140594482
    10. 'pieces' → logprob: -7.535251140594482

Token 963: ' weight' (ID: 6049)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.572763204574585
    2. '#' → logprob: -1.697763204574585
    3. '       ' → logprob: -1.697763204574585
    4. 'for' → logprob: -3.947763204574585
    5. 'weights' → logprob: -4.072763442993164
    6. 'weight' → logprob: -4.447763442993164
    7. '   ' → logprob: -5.322763442993164
    8. 'block' → logprob: -5.697763442993164
    9. ' piece' → logprob: -5.822763442993164
    10. 'def' → logprob: -5.947763442993164

Token 964: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5878205895423889
    2. 's' → logprob: -1.3378205299377441
    3. ' =' → logprob: -1.7128205299377441
    4. '_weights' → logprob: -7.462820529937744
    5. '_weight' → logprob: -8.712821006774902
    6. '   ' → logprob: -9.087821006774902
    7. '_count' → logprob: -9.337821006774902
    8. '_counts' → logprob: -9.337821006774902
    9. '=
' → logprob: -9.587821006774902
    10. ')' → logprob: -9.587821006774902

Token 965: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.3052477240562439
    2. 'each' → logprob: -1.8052477836608887
    3. 'pieces' → logprob: -3.3052477836608887
    4. ' each' → logprob: -4.055247783660889
    5. ' piece' → logprob: -4.305247783660889
    6. 'i' → logprob: -4.805247783660889
    7. 'p' → logprob: -5.180247783660889
    8. 'len' → logprob: -5.805247783660889
    9. 'a' → logprob: -6.055247783660889
    10. ' pieces' → logprob: -6.430247783660889

Token 966: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31753990054130554
    2. '=' → logprob: -1.317539930343628
    3. 's' → logprob: -5.567539691925049
    4. '_' → logprob: -9.442540168762207
    5. ')' → logprob: -9.567540168762207
    6. '   ' → logprob: -9.817540168762207
    7. ',' → logprob: -10.192540168762207
    8. '=len' → logprob: -10.192540168762207
    9. '[' → logprob: -11.067540168762207
    10. '[i' → logprob: -11.567540168762207

Token 967: ' number' (ID: 2086)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005650650127790868
    2. ' len' → logprob: -7.500565052032471
    3. '(len' → logprob: -12.375565528869629
    4. 'sum' → logprob: -13.250565528869629
    5. '=len' → logprob: -13.375565528869629
    6. '
' → logprob: -13.500565528869629
    7. '   ' → logprob: -13.625565528869629
    8. '	len' → logprob: -14.500565528869629
    9. '[len' → logprob: -14.625565528869629
    10. '```' → logprob: -15.250565528869629

Token 968: ' of' (ID: 328)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3317604660987854
    2. 'of' → logprob: -1.5817604064941406
    3. 'len' → logprob: -3.5817604064941406
    4. '=len' → logprob: -3.9567604064941406
    5. 's' → logprob: -4.456760406494141
    6. '[len' → logprob: -4.706760406494141
    7. ' of' → logprob: -5.081760406494141
    8. '_of' → logprob: -7.081760406494141
    9. ')' → logprob: -7.831760406494141
    10. '=' → logprob: -8.58176040649414

Token 969: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.22705328464508057
    2. 'pieces' → logprob: -2.102053165435791
    3. ' blocks' → logprob: -2.852053165435791
    4. 'piece' → logprob: -4.977053165435791
    5. '(piece' → logprob: -5.352053165435791
    6. ' pieces' → logprob: -5.602053165435791
    7. 'block' → logprob: -6.602053165435791
    8. 'cells' → logprob: -6.852053165435791
    9. 'comp' → logprob: -6.977053165435791
    10. '[(' → logprob: -7.102053165435791

Token 970: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3121013343334198
    2. '<|end|>' → logprob: -2.062101364135742
    3. '
' → logprob: -2.312101364135742
    4. '<|end|>' → logprob: -4.062101364135742
    5. '        
' → logprob: -4.937101364135742
    6. '   ' → logprob: -5.687101364135742
    7. '#' → logprob: -5.687101364135742
    8. ',' → logprob: -6.562101364135742
    9. ' pieces' → logprob: -6.687101364135742
    10. 'def' → logprob: -6.812101364135742

Token 971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011303046718239784
    2. '<|end|>' → logprob: -5.011302947998047
    3. '
' → logprob: -7.011302947998047
    4. '#' → logprob: -7.011302947998047
    5. '        
' → logprob: -7.261302947998047
    6. ',' → logprob: -8.136302947998047
    7. 'piece' → logprob: -8.261302947998047
    8. '   ' → logprob: -8.261302947998047
    9. 'def' → logprob: -8.386302947998047
    10. '```' → logprob: -9.011302947998047

Token 972: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07349551469087601
    2. '
' → logprob: -3.198495626449585
    3. '#' (adapté à ' #') → logprob: -4.198495388031006
    4. '   ' → logprob: -5.573495388031006
    5. '        
' → logprob: -6.448495388031006
    6. ',' → logprob: -6.573495388031006
    7. 'for' → logprob: -6.698495388031006
    8. 'piece' → logprob: -6.698495388031006
    9. '<|end|>' → logprob: -6.823495388031006
    10. ' for' → logprob: -7.073495388031006

Token 973: ' center' (ID: 6170)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.09811103343963623
    2. '       ' → logprob: -3.348111152648926
    3. 'weight' → logprob: -4.098111152648926
    4. '#' → logprob: -4.473111152648926
    5. 'def' → logprob: -4.723111152648926
    6. 'center' → logprob: -5.098111152648926
    7. 'for' → logprob: -5.223111152648926
    8. '   ' → logprob: -5.973111152648926
    9. 'weights' → logprob: -6.098111152648926
    10. 'pieces' → logprob: -6.973111152648926

Token 974: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.001313213026151061
    2. 'x' → logprob: -7.001313209533691
    3. '_of' → logprob: -8.501313209533691
    4. '_' → logprob: -9.001313209533691
    5. 'of' → logprob: -10.376313209533691
    6. '=' → logprob: -11.876313209533691
    7. ' of' → logprob: -12.376313209533691
    8. ' =' → logprob: -12.501313209533691
    9. '_mass' → logprob: -12.501313209533691
    10. '_=' → logprob: -12.501313209533691

Token 975: '_piece' (ID: 126000)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.035101294517517
    2. ' =' → logprob: -1.035101294517517
    3. 's' → logprob: -1.285101294517517
    4. '_s' → logprob: -5.660101413726807
    5. '_of' → logprob: -6.160101413726807
    6. ',' → logprob: -7.035101413726807
    7. '_positions' → logprob: -7.035101413726807
    8. 'of' → logprob: -7.410101413726807
    9. '_coords' → logprob: -7.410101413726807
    10. '_' → logprob: -7.535101413726807

Token 976: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5253360271453857
    2. ' =' → logprob: -1.0253360271453857
    3. 's' → logprob: -3.0253360271453857
    4. '   ' → logprob: -7.275336265563965
    5. '_s' → logprob: -9.150336265563965
    6. '_values' → logprob: -9.275336265563965
    7. '=
' → logprob: -10.150336265563965
    8. '_list' → logprob: -10.150336265563965
    9. ',' → logprob: -10.275336265563965
    10. 'for' → logprob: -10.525336265563965

Token 977: ' average' (ID: 7848)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.017320090904831886
    2. ' sum' → logprob: -4.142320156097412
    3. '(sum' → logprob: -6.892320156097412
    4. '   ' → logprob: -9.017319679260254
    5. 'lambda' → logprob: -9.392319679260254
    6. '
' → logprob: -10.267319679260254
    7. ' lambda' → logprob: -11.767319679260254
    8. '(lambda' → logprob: -12.517319679260254
    9. ' (' → logprob: -12.517319679260254
    10. '(' → logprob: -12.767319679260254

Token 978: ' of' (ID: 328)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.2667100429534912
    2. 'x' → logprob: -2.141710042953491
    3. '=' → logprob: -2.766710042953491
    4. ' =' → logprob: -3.641710042953491
    5. '_' → logprob: -4.51671028137207
    6. '(' → logprob: -5.39171028137207
    7. '```' → logprob: -6.14171028137207
    8. '   ' → logprob: -6.64171028137207
    9. 'of' → logprob: -6.89171028137207
    10. '`' → logprob: -7.14171028137207

Token 979: ' center' (ID: 6170)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.09224817156791687
    2. 'x' → logprob: -2.5922482013702393
    3. ' [' → logprob: -5.46724796295166
    4. '[' → logprob: -5.46724796295166
    5. 'block' → logprob: -5.59224796295166
    6. ' x' → logprob: -8.34224796295166
    7. '[b' → logprob: -8.59224796295166
    8. '(x' → logprob: -8.84224796295166
    9. '[t' → logprob: -9.09224796295166
    10. '[token' → logprob: -9.34224796295166

Token 980: '(x' (ID: 4061)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.04334193468093872
    2. 'x' → logprob: -3.418341875076294
    3. 'of' → logprob: -5.668342113494873
    4. '```' → logprob: -6.543342113494873
    5. '[' → logprob: -6.918342113494873
    6. '   ' → logprob: -7.168342113494873
    7. ' of' → logprob: -7.168342113494873
    8. '_of' → logprob: -7.293342113494873
    9. '(' → logprob: -8.168341636657715
    10. 'pieces' → logprob: -8.793341636657715

Token 981: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8227842450141907
    2. ')' → logprob: -1.447784185409546
    3. 's' → logprob: -2.572784185409546
    4. 'for' → logprob: -2.572784185409546
    5. '_blocks' → logprob: -3.572784185409546
    6. '
' → logprob: -4.447784423828125
    7. 'block' → logprob: -4.572784423828125
    8. '[' → logprob: -4.572784423828125
    9. '))' → logprob: -4.697784423828125
    10. 'of' → logprob: -4.697784423828125

Token 982: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1240172386169434
    2. '()' → logprob: -1.4990172386169434
    3. 's' → logprob: -1.7490172386169434
    4. ')_' → logprob: -2.8740172386169434
    5. '_x' → logprob: -3.1240172386169434
    6. '```' → logprob: -3.9990172386169434
    7. '_blocks' → logprob: -3.9990172386169434
    8. 'of' → logprob: -4.124017238616943
    9. '_' → logprob: -4.124017238616943
    10. ',' → logprob: -5.124017238616943

Token 983: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.8458081483840942
    2. 'all' → logprob: -1.4708081483840942
    3. 'block' → logprob: -1.7208081483840942
    4. 'each' → logprob: -2.4708080291748047
    5. 'the' → logprob: -3.7208080291748047
    6. 'its' → logprob: -4.095808029174805
    7. '[x' → logprob: -4.595808029174805
    8. 'piece' → logprob: -4.970808029174805
    9. 'x' → logprob: -5.345808029174805
    10. '[' → logprob: -5.720808029174805

Token 984: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0490085706114769
    2. '
' → logprob: -4.174008369445801
    3. ' for' → logprob: -4.924008369445801
    4. '        
' → logprob: -5.424008369445801
    5. ' (' → logprob: -5.799008369445801
    6. '   ' → logprob: -5.924008369445801
    7. '#' → logprob: -6.049008369445801
    8. '<|end|>' → logprob: -6.174008369445801
    9. 'for' → logprob: -6.299008369445801
    10. 'def' → logprob: -6.799008369445801

Token 985: 'center' (ID: 5463)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2423818111419678
    2. ')' → logprob: -1.6173818111419678
    3. 'for' → logprob: -2.1173818111419678
    4. '[x' → logprob: -2.4923818111419678
    5. ' for' → logprob: -2.7423818111419678
    6. '
' → logprob: -2.8673818111419678
    7. '(x' → logprob: -3.4923818111419678
    8. '[i' → logprob: -4.117382049560547
    9. '[' → logprob: -4.242382049560547
    10. '           ' → logprob: -4.742382049560547

Token 986: ' at' (ID: 540)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0681465864181519
    2. ')_' → logprob: -1.5681465864181519
    3. ')' → logprob: -1.8181465864181519
    4. 'of' → logprob: -2.8181467056274414
    5. 'pieces' → logprob: -2.9431467056274414
    6. '       ' → logprob: -3.6931467056274414
    7. '_of' → logprob: -3.6931467056274414
    8. '=' → logprob: -3.9431467056274414
    9. ' of' → logprob: -4.443146705627441
    10. ' =' → logprob: -4.443146705627441

Token 987: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04284799471497536
    2. '[x' → logprob: -4.042848110198975
    3. 'block' → logprob: -4.667848110198975
    4. '(x' → logprob: -5.042848110198975
    5. ' x' → logprob: -5.667848110198975
    6. '[' → logprob: -6.042848110198975
    7. 'each' → logprob: -7.542848110198975
    8. ' [' → logprob: -7.917848110198975
    9. '0' → logprob: -8.042847633361816
    10. 'xi' → logprob: -8.167847633361816

Token 988: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5293672680854797
    2. ' +' → logprob: -0.9043672680854797
    3. ')' → logprob: -5.904367446899414
    4. ')+' → logprob: -6.654367446899414
    5. '```' → logprob: -7.904367446899414
    6. '   ' → logprob: -7.904367446899414
    7. '           ' → logprob: -8.404367446899414
    8. '0' → logprob: -8.779367446899414
    9. '
' → logprob: -8.779367446899414
    10. 's' → logprob: -8.904367446899414

Token 989: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040695868665352464
    2. ' ' → logprob: -7.875406742095947
    3. '.' → logprob: -10.625407218933105
    4. '+' → logprob: -13.750407218933105
    5. '   ' → logprob: -14.625407218933105
    6. '```' → logprob: -15.250407218933105
    7. ' .' → logprob: -15.500407218933105
    8. '
' → logprob: -15.750407218933105
    9. '  ' → logprob: -16.00040626525879
    10. '    ' → logprob: -17.00040626525879

Token 990: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -14.00000286102295
    3. ' .' → logprob: -14.00000286102295
    4. '           ' → logprob: -15.87500286102295
    5. ').' → logprob: -15.87500286102295
    6. ')' → logprob: -16.500001907348633
    7. '```' → logprob: -16.750001907348633
    8. ' ' → logprob: -17.250001907348633
    9. 'x' → logprob: -17.250001907348633
    10. '.
' → logprob: -17.500001907348633

Token 991: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.250003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '50' → logprob: -16.625003814697266
    6. '
' → logprob: -17.125003814697266
    7. '```' → logprob: -17.125003814697266
    8. '.' → logprob: -17.250003814697266
    9. '  ' → logprob: -17.937503814697266
    10. 'five' → logprob: -18.187503814697266

Token 992: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006279755849391222
    2. ')
' → logprob: -6.006279945373535
    3. ' )' → logprob: -6.131279945373535
    4. '       ' → logprob: -8.131279945373535
    5. '))' → logprob: -8.381279945373535
    6. '           ' → logprob: -8.631279945373535
    7. ')`' → logprob: -8.631279945373535
    8. '   ' → logprob: -9.131279945373535
    9. '`)' → logprob: -9.381279945373535
    10. ')+' → logprob: -9.381279945373535

Token 993: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004979116842150688
    2. '   ' → logprob: -6.754979133605957
    3. '
' → logprob: -7.004979133605957
    4. '        
' → logprob: -7.004979133605957
    5. ',' → logprob: -7.879979133605957
    6. '<|end|>' → logprob: -8.004979133605957
    7. ')' → logprob: -8.254979133605957
    8. '           ' → logprob: -8.504979133605957
    9. ' for' → logprob: -8.754979133605957
    10. '#' → logprob: -8.754979133605957

Token 994: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010003028437495232
    2. '
' → logprob: -5.010003089904785
    3. '        
' → logprob: -6.885003089904785
    4. '   ' → logprob: -7.260003089904785
    5. 'def' → logprob: -7.510003089904785
    6. '#' (adapté à ' #') → logprob: -8.135003089904785
    7. 'for' → logprob: -8.635003089904785
    8. ' for' → logprob: -9.385003089904785
    9. 'piece' → logprob: -9.760003089904785
    10. ',' → logprob: -9.760003089904785

Token 995: ' For' (ID: 2214)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.836309552192688
    2. 'for' → logprob: -1.586309552192688
    3. '       ' → logprob: -1.711309552192688
    4. 'def' → logprob: -2.3363094329833984
    5. '#' → logprob: -3.9613094329833984
    6. 'weight' → logprob: -4.211309432983398
    7. '
' → logprob: -4.336309432983398
    8. '   ' → logprob: -4.461309432983398
    9. 'center' → logprob: -4.836309432983398
    10. 'weights' → logprob: -4.961309432983398

Token 996: ' accumulated' (ID: 64757)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7818491458892822
    2. 'each' → logprob: -0.9068491458892822
    3. 'piece' → logprob: -2.7818491458892822
    4. 'x' → logprob: -4.281848907470703
    5. ' each' → logprob: -4.281848907470703
    6. 'def' → logprob: -4.531848907470703
    7. ' piece' → logprob: -4.656848907470703
    8. ' i' → logprob: -4.656848907470703
    9. 'y' → logprob: -6.031848907470703
    10. 'all' → logprob: -6.406848907470703

Token 997: ',' (ID: 11)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.6625378131866455
    2. '_x' → logprob: -1.6625378131866455
    3. 'def' → logprob: -2.2875378131866455
    4. 'weight' → logprob: -3.0375378131866455
    5. '_center' → logprob: -3.5375378131866455
    6. '_mass' → logprob: -3.7875378131866455
    7. ',' → logprob: -4.162537574768066
    8. '_piece' → logprob: -4.537537574768066
    9. 'center' → logprob: -4.787537574768066
    10. '_weights' → logprob: -4.787537574768066

Token 998: ' weight' (ID: 6049)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02428433857858181
    2. '#' → logprob: -4.524284362792969
    3. 'import' → logprob: -5.024284362792969
    4. ' def' → logprob: -6.149284362792969
    5. '
' → logprob: -6.274284362792969
    6. 'visited' → logprob: -7.399284362792969
    7. 'acc' → logprob: -8.024284362792969
    8. '   ' → logprob: -8.274284362792969
    9. 'we' → logprob: -8.274284362792969
    10. ' #' → logprob: -9.024284362792969

Token 999: ' accumulated' (ID: 64757)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1014366149902344
    2. '=' → logprob: -1.2264366149902344
    3. ' =' → logprob: -1.8514366149902344
    4. ',' → logprob: -2.2264366149902344
    5. 'def' → logprob: -3.7264366149902344
    6. 'of' → logprob: -3.7264366149902344
    7. '_of' → logprob: -4.476436614990234
    8. '_' → logprob: -4.976436614990234
    9. '_,' → logprob: -4.976436614990234
    10. '   ' → logprob: -5.101436614990234

Token 1000: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1096885204315186
    2. '=' → logprob: -1.2346885204315186
    3. 's' → logprob: -1.7346885204315186
    4. 'def' → logprob: -2.7346885204315186
    5. ',' → logprob: -3.6096885204315186
    6. '[i' → logprob: -3.6096885204315186
    7. '   ' → logprob: -3.9846885204315186
    8. 'for' → logprob: -4.359688758850098
    9. '_' → logprob: -4.609688758850098
    10. '_of' → logprob: -4.984688758850098

Token 1001: ' piece' (ID: 9047)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8030478358268738
    2. 'weight' → logprob: -1.0530478954315186
    3. 'len' → logprob: -1.6780478954315186
    4. 'number' → logprob: -4.8030476570129395
    5. 'piece' → logprob: -6.1780476570129395
    6. 'pieces' → logprob: -6.8030476570129395
    7. 'length' → logprob: -7.0530476570129395
    8. '0' → logprob: -7.1780476570129395
    9. '
' → logprob: -7.4280476570129395
    10. 'weights' → logprob: -7.4280476570129395

Token 1002: ' weight' (ID: 6049)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.23118288815021515
    2. 's' → logprob: -2.231182813644409
    3. '_weights' → logprob: -3.106182813644409
    4. '_size' → logprob: -4.106183052062988
    5. 'weight' → logprob: -4.231183052062988
    6. '   ' → logprob: -5.106183052062988
    7. ')' → logprob: -5.731183052062988
    8. 'size' → logprob: -6.106183052062988
    9. '       ' → logprob: -6.356183052062988
    10. 'weights' → logprob: -7.106183052062988

Token 1003: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6810099482536316
    2. '
' → logprob: -1.0560100078582764
    3. 'def' → logprob: -2.6810100078582764
    4. '#' → logprob: -3.8060100078582764
    5. '        
' → logprob: -4.556009769439697
    6. ',' → logprob: -4.806009769439697
    7. '_' → logprob: -4.931009769439697
    8. '   ' → logprob: -5.056009769439697
    9. '_of' → logprob: -5.181009769439697
    10. ')
' → logprob: -5.681009769439697

Token 1004: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0068437191657722
    2. ' sum' → logprob: -5.006843566894531
    3. '
' → logprob: -9.631843566894531
    4. '(sum' → logprob: -10.131843566894531
    5. '   ' → logprob: -11.881843566894531
    6. 'weight' → logprob: -12.506843566894531
    7. '	sum' → logprob: -12.506843566894531
    8. '#' → logprob: -13.256843566894531
    9. '       ' → logprob: -13.256843566894531
    10. '=sum' → logprob: -13.756843566894531

Token 1005: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.013769507408142
    2. 'of' → logprob: -1.138769507408142
    3. '(child' → logprob: -2.0137696266174316
    4. '([' → logprob: -2.3887696266174316
    5. '(len' → logprob: -3.7637696266174316
    6. '(' → logprob: -4.013769626617432
    7. '_of' → logprob: -4.638769626617432
    8. '(weight' → logprob: -4.638769626617432
    9. '(piece' → logprob: -5.013769626617432
    10. '(p' → logprob: -5.388769626617432

Token 1006: ' children' (ID: 3953)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -1.0571054220199585
    2. 'weight' → logprob: -1.3071054220199585
    3. 'child' → logprob: -1.6821054220199585
    4. '[' → logprob: -2.307105541229248
    5. '(piece' → logprob: -3.557105541229248
    6. 'weights' → logprob: -3.807105541229248
    7. 'children' → logprob: -4.182105541229248
    8. '[p' → logprob: -4.807105541229248
    9. ' weight' → logprob: -5.307105541229248
    10. ' piece' → logprob: -5.432105541229248

Token 1007: ' weights' (ID: 28460)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04989660158753395
    2. '
' → logprob: -3.299896717071533
    3. '   ' → logprob: -5.174896717071533
    4. 'def' → logprob: -5.549896717071533
    5. '#' → logprob: -7.049896717071533
    6. '        
' → logprob: -7.174896717071533
    7. 'import' → logprob: -8.799896240234375
    8. '    
' → logprob: -9.299896240234375
    9. 'weights' → logprob: -9.924896240234375
    10. 'weight' → logprob: -10.049896240234375

Token 1008: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047682151198387146
    2. '
' → logprob: -3.297682046890259
    3. '   ' → logprob: -5.797682285308838
    4. '        
' → logprob: -5.922682285308838
    5. '#' → logprob: -6.922682285308838
    6. 'piece' → logprob: -7.047682285308838
    7. 'def' → logprob: -7.047682285308838
    8. 'import' → logprob: -8.29768180847168
    9. 'weight' → logprob: -8.42268180847168
    10. '    
' → logprob: -8.42268180847168

Token 1009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030486835166811943
    2. '#' → logprob: -4.155487060546875
    3. '
' → logprob: -4.905487060546875
    4. '   ' → logprob: -5.655487060546875
    5. 'def' → logprob: -5.905487060546875
    6. '```' → logprob: -7.905487060546875
    7. '        
' → logprob: -8.655487060546875
    8. '           ' → logprob: -10.530487060546875
    9. 'import' → logprob: -10.655487060546875
    10. ',' → logprob: -11.030487060546875

Token 1010: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1696234792470932
    2. 'def' → logprob: -2.419623374938965
    3. '#' (adapté à ' #') → logprob: -3.169623374938965
    4. '
' → logprob: -4.294623374938965
    5. '   ' → logprob: -4.669623374938965
    6. '```' → logprob: -7.669623374938965
    7. '           ' → logprob: -8.294623374938965
    8. '        
' → logprob: -8.419623374938965
    9. 'center' → logprob: -9.044623374938965
    10. ',' → logprob: -9.544623374938965

Token 1011: ' center' (ID: 6170)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44558602571487427
    2. '       ' → logprob: -1.3205859661102295
    3. '#' → logprob: -2.8205859661102295
    4. '
' → logprob: -3.9455859661102295
    5. '   ' → logprob: -5.445586204528809
    6. 'import' → logprob: -5.570586204528809
    7. 'center' → logprob: -5.945586204528809
    8. 'from' → logprob: -7.195586204528809
    9. 'for' → logprob: -7.945586204528809
    10. 'weight' → logprob: -7.945586204528809

Token 1012: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.002512285253033042
    2. '_' → logprob: -6.502512454986572
    3. '_acc' → logprob: -7.627512454986572
    4. ' _' → logprob: -8.627511978149414
    5. '_of' → logprob: -9.877511978149414
    6. '_weight' → logprob: -10.252511978149414
    7. '   ' → logprob: -10.377511978149414
    8. 'x' → logprob: -10.877511978149414
    9. '_y' → logprob: -11.002511978149414
    10. '```' → logprob: -11.002511978149414

Token 1013: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.059180889278650284
    2. '_piece' → logprob: -2.934180974960327
    3. '_p' → logprob: -6.059180736541748
    4. '_' → logprob: -7.059180736541748
    5. ' =' → logprob: -7.934180736541748
    6. '_ac' → logprob: -8.184181213378906
    7. 'acc' → logprob: -8.434181213378906
    8. '=' → logprob: -8.934181213378906
    9. 's' → logprob: -11.309181213378906
    10. '_=' → logprob: -11.809181213378906

Token 1014: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.013592609204351902
    2. '_piece' → logprob: -5.013592720031738
    3. '=' → logprob: -5.888592720031738
    4. ' =' → logprob: -6.763592720031738
    5. 'umulate' → logprob: -7.638592720031738
    6. '_' → logprob: -7.638592720031738
    7. '       ' → logprob: -7.763592720031738
    8. '   ' → logprob: -8.013592720031738
    9. '_p' → logprob: -8.013592720031738
    10. 'umulative' → logprob: -8.763592720031738

Token 1015: ' =' (ID: 314)
  Prédit: 'ulated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulated' → logprob: -0.5535186529159546
    2. 'um' → logprob: -1.0535186529159546
    3. ' =' → logprob: -3.178518772125244
    4. '=' → logprob: -4.178518772125244
    5. '_piece' → logprob: -5.053518772125244
    6. '   ' → logprob: -5.803518772125244
    7. '_x' → logprob: -6.053518772125244
    8. '_weight' → logprob: -6.678518772125244
    9. 'umul' → logprob: -6.803518772125244
    10. '_acc' → logprob: -6.928518772125244

Token 1016: ' weighted' (ID: 70288)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.40736091136932373
    2. '(M' → logprob: -2.0323610305786133
    3. '(weight' → logprob: -2.2823610305786133
    4. '(
' → logprob: -3.6573610305786133
    5. '(' → logprob: -4.157361030578613
    6. '(x' → logprob: -4.407361030578613
    7. '(lambda' → logprob: -4.532361030578613
    8. ' (' → logprob: -4.657361030578613
    9. '
' → logprob: -4.782361030578613
    10. '(p' → logprob: -4.907361030578613

Token 1017: ' average' (ID: 7848)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.3121027946472168
    2. '_average' → logprob: -1.3121027946472168
    3. 'average' → logprob: -1.6871027946472168
    4. '_' → logprob: -1.8121027946472168
    5. 'sum' → logprob: -2.937102794647217
    6. '_center' → logprob: -3.312102794647217
    7. '
' → logprob: -4.812102794647217
    8. 'center' → logprob: -5.187102794647217
    9. '_x' → logprob: -5.562102794647217
    10. '_avg' → logprob: -6.187102794647217

Token 1018: ' center' (ID: 6170)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5174685716629028
    2. 'def' → logprob: -1.1424685716629028
    3. '
' → logprob: -3.1424684524536133
    4. '   ' → logprob: -3.7674684524536133
    5. '#' → logprob: -5.267468452453613
    6. ' =' → logprob: -5.517468452453613
    7. '=' → logprob: -6.267468452453613
    8. '=
' → logprob: -6.392468452453613
    9. 'import' → logprob: -6.767468452453613
    10. ')
' → logprob: -7.517468452453613

Token 1019: ' x' (ID: 1215)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.6371337175369263
    2. '_of' → logprob: -1.6371337175369263
    3. '_p' → logprob: -2.3871335983276367
    4. '_' → logprob: -3.2621335983276367
    5. 'def' → logprob: -3.5121335983276367
    6. '_piece' → logprob: -3.8871335983276367
    7. '   ' → logprob: -4.262133598327637
    8. '_weights' → logprob: -4.387133598327637
    9. '       ' → logprob: -4.387133598327637
    10. 'of' → logprob: -4.762133598327637

Token 1020: ' of' (ID: 328)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.40138158202171326
    2. '_' → logprob: -2.276381492614746
    3. 'def' → logprob: -2.526381492614746
    4. '       ' → logprob: -2.776381492614746
    5. '   ' → logprob: -3.651381492614746
    6. '_p' → logprob: -3.776381492614746
    7. '_
' → logprob: -4.776381492614746
    8. '
' → logprob: -5.151381492614746
    9. '_of' → logprob: -5.276381492614746
    10. ')' → logprob: -5.776381492614746

Token 1021: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.28391700983047485
    2. 'pieces' → logprob: -1.53391695022583
    3. 'all' → logprob: -3.90891695022583
    4. ' piece' → logprob: -6.28391695022583
    5. 'the' → logprob: -6.28391695022583
    6. 'blocks' → logprob: -6.78391695022583
    7. '(piece' → logprob: -6.78391695022583
    8. '
' → logprob: -6.90891695022583
    9. 'acc' → logprob: -6.90891695022583
    10. 'children' → logprob: -7.28391695022583

Token 1022: ' +' (ID: 659)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.011834487318992615
    2. '       ' → logprob: -5.761834621429443
    3. '_' → logprob: -6.261834621429443
    4. '_weight' → logprob: -6.636834621429443
    5. '_acc' → logprob: -7.011834621429443
    6. '   ' → logprob: -7.136834621429443
    7. '_of' → logprob: -7.261834621429443
    8. '_p' → logprob: -7.761834621429443
    9. 'def' → logprob: -7.761834621429443
    10. '
' → logprob: -7.886834621429443

Token 1023: ' children' (ID: 3953)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.08015646040439606
    2. 'sum' → logprob: -3.0801565647125244
    3. ' children' → logprob: -4.330156326293945
    4. ' sum' → logprob: -5.580156326293945
    5. 'pieces' → logprob: -6.080156326293945
    6. '
' → logprob: -6.580156326293945
    7. '           ' → logprob: -6.705156326293945
    8. '   ' → logprob: -6.705156326293945
    9. '(children' → logprob: -6.705156326293945
    10. 'weighted' → logprob: -6.705156326293945

Token 1024: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10183180123567581
    2. '
' → logprob: -2.8518319129943848
    3. 'def' → logprob: -4.351831912994385
    4. '   ' → logprob: -4.976831912994385
    5. '#' → logprob: -5.226831912994385
    6. 'piece' → logprob: -5.351831912994385
    7. 'import' → logprob: -5.726831912994385
    8. 'weights' → logprob: -6.101831912994385
    9. 'weight' → logprob: -6.601831912994385
    10. '        
' → logprob: -6.601831912994385

Token 1025: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028756489977240562
    2. '
' → logprob: -4.278756618499756
    3. 'def' → logprob: -5.153756618499756
    4. '        
' → logprob: -6.028756618499756
    5. '   ' → logprob: -6.153756618499756
    6. 'import' → logprob: -6.528756618499756
    7. 'piece' → logprob: -6.778756618499756
    8. '#' → logprob: -7.778756618499756
    9. 'weights' → logprob: -8.278756141662598
    10. 'weight' → logprob: -8.278756141662598

Token 1026: ' piece' (ID: 9047)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1818908303976059
    2. 'def' → logprob: -2.5568907260894775
    3. '   ' → logprob: -2.9318907260894775
    4. 'piece' (adapté à ' piece') → logprob: -3.9318907260894775
    5. '
' → logprob: -4.556890964508057
    6. '        
' → logprob: -6.556890964508057
    7. 'weight' → logprob: -6.556890964508057
    8. '    
' → logprob: -7.181890964508057
    9. 'import' → logprob: -7.556890964508057
    10. 'for' → logprob: -8.181890487670898

Token 1027: '_weight' (ID: 34711)
  Prédit: '_weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.5762189626693726
    2. '_weight' → logprob: -0.8262189626693726
    3. '_sizes' → logprob: -9.076218605041504
    4. '_size' → logprob: -9.826218605041504
    5. '_w' → logprob: -10.201218605041504
    6. '_blocks' → logprob: -11.201218605041504
    7. '_piece' → logprob: -11.326218605041504
    8. '_we' → logprob: -11.576218605041504
    9. '_' → logprob: -11.826218605041504
    10. '_block' → logprob: -12.201218605041504

Token 1028: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03070557862520218
    2. ' =' → logprob: -3.530705690383911
    3. 's' → logprob: -7.280705451965332
    4. '[' → logprob: -9.280705451965332
    5. '=[' → logprob: -9.280705451965332
    6. '[i' → logprob: -10.155705451965332
    7. ',' → logprob: -11.155705451965332
    8. '=[]' → logprob: -11.655705451965332
    9. '   ' → logprob: -12.280705451965332
    10. ' =[' → logprob: -13.030705451965332

Token 1029: ' []
' (ID: 8911)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.002195337088778615
    2. '[' → logprob: -6.252195358276367
    3. '[i' → logprob: -8.502195358276367
    4. '[length' → logprob: -10.002195358276367
    5. ' [' → logprob: -12.127195358276367
    6. '[size' → logprob: -12.377195358276367
    7. '[]' → logprob: -13.752195358276367
    8. '[num' → logprob: -13.752195358276367
    9. '[number' → logprob: -13.877195358276367
    10. '[p' → logprob: -14.252195358276367

Token 1030: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0862090587615967
    2. '[
' → logprob: -1.5862090587615967
    3. '[]' → logprob: -1.7112090587615967
    4. 'piece' → logprob: -2.7112090587615967
    5. '=' → logprob: -3.0862090587615967
    6. 'center' → logprob: -3.3362090587615967
    7. '[]
' → logprob: -3.5862090587615967
    8. '       ' → logprob: -3.7112090587615967
    9. 'for' → logprob: -3.9612090587615967
    10. ' =' → logprob: -4.336209297180176

Token 1031: ' piece' (ID: 9047)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.289638489484787
    2. 'piece' (adapté à ' piece') → logprob: -1.4146385192871094
    3. '       ' → logprob: -5.164638519287109
    4. ' for' → logprob: -6.789638519287109
    5. 'center' → logprob: -7.289638519287109
    6. '   ' → logprob: -7.914638519287109
    7. ' piece' → logprob: -8.91463851928711
    8. '[]' → logprob: -9.41463851928711
    9. '[]
' → logprob: -9.41463851928711
    10. '           ' → logprob: -9.66463851928711

Token 1032: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.037872884422540665
    2. '_cent' → logprob: -3.662872791290283
    3. '_weight' → logprob: -5.662872791290283
    4. '_x' → logprob: -5.787872791290283
    5. '_acc' → logprob: -6.037872791290283
    6. '_c' → logprob: -8.037873268127441
    7. 'center' → logprob: -8.162873268127441
    8. '_size' → logprob: -8.162873268127441
    9. '_blocks' → logprob: -8.412873268127441
    10. '_' → logprob: -8.537873268127441

Token 1033: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.5143004059791565
    2. '=' → logprob: -1.1393003463745117
    3. 'x' → logprob: -2.6393003463745117
    4. ' =' → logprob: -5.264300346374512
    5. '_' → logprob: -6.514300346374512
    6. 'piece' → logprob: -6.639300346374512
    7. '_=' → logprob: -7.139300346374512
    8. '_piece' → logprob: -7.139300346374512
    9. '=[]' → logprob: -8.014300346374512
    10. '=_' → logprob: -8.389300346374512

Token 1034: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12819400429725647
    2. ' =' → logprob: -2.1281940937042236
    3. '_piece' → logprob: -7.1281938552856445
    4. '_' → logprob: -8.003193855285645
    5. '=[]' → logprob: -9.378193855285645
    6. 'piece' → logprob: -11.878193855285645
    7. '(piece' → logprob: -12.253193855285645
    8. '_=' → logprob: -12.378193855285645
    9. '_p' → logprob: -12.503193855285645
    10. '   ' → logprob: -12.628193855285645

Token 1035: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.16024179756641388
    2. '[]' → logprob: -1.9102418422698975
    3. '[]

' → logprob: -11.160242080688477
    4. ' []
' → logprob: -13.410242080688477
    5. '[' → logprob: -13.660242080688477
    6. '[
' → logprob: -14.660242080688477
    7. ' []' → logprob: -15.160242080688477
    8. '[],
' → logprob: -18.160242080688477
    9. '[])
' → logprob: -18.285242080688477
    10. '[],' → logprob: -19.285242080688477

Token 1036: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35260310769081116
    2. ' for' → logprob: -1.4776030778884888
    3. '       ' → logprob: -2.7276031970977783
    4. '   ' → logprob: -6.352602958679199
    5. '        
' → logprob: -7.477602958679199
    6. '[' → logprob: -8.3526029586792
    7. '	for' → logprob: -8.6026029586792
    8. '
' → logprob: -8.7276029586792
    9. '    
' → logprob: -8.9776029586792
    10. ' 
' → logprob: -9.3526029586792

Token 1037: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003212805895600468
    2. '       ' → logprob: -8.250321388244629
    3. 'piece' → logprob: -9.875321388244629
    4. ' for' → logprob: -11.750321388244629
    5. '   ' → logprob: -14.625321388244629
    6. '#' (adapté à ' #') → logprob: -16.625320434570312
    7. '           ' → logprob: -17.000320434570312
    8. 'block' → logprob: -17.125320434570312
    9. '
' → logprob: -17.250320434570312
    10. '	for' → logprob: -17.375320434570312

Token 1038: ' bottom' (ID: 8725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.054500666621607e-06
    2. '       ' → logprob: -13.37500286102295
    3. ' for' → logprob: -15.00000286102295
    4. '   ' → logprob: -15.00000286102295
    5. '
' → logprob: -15.12500286102295
    6. 'For' → logprob: -15.87500286102295
    7. '#' → logprob: -16.000003814697266
    8. 'def' → logprob: -16.375003814697266
    9. 'piece' → logprob: -16.500003814697266
    10. '```' → logprob: -16.500003814697266

Token 1039: ' blocks' (ID: 18125)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.22002661228179932
    2. '_touch' → logprob: -2.0950264930725098
    3. 'touch' → logprob: -3.3450264930725098
    4. 'blocks' → logprob: -4.22002649307251
    5. '_x' → logprob: -4.84502649307251
    6. '_edges' → logprob: -5.09502649307251
    7. '_faces' → logprob: -5.72002649307251
    8. 'most' → logprob: -7.34502649307251
    9. '_positions' → logprob: -7.34502649307251
    10. '_face' → logprob: -7.47002649307251

Token 1040: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1406855583190918
    2. '=' → logprob: -2.140685558319092
    3. '_positions' → logprob: -4.890685558319092
    4. 'for' → logprob: -6.765685558319092
    5. '_blocks' → logprob: -6.765685558319092
    6. '   ' → logprob: -7.640685558319092
    7. '=[]' → logprob: -7.765685558319092
    8. '=[]
' → logprob: -7.765685558319092
    9. ':' → logprob: -8.01568603515625
    10. '_bottom' → logprob: -8.01568603515625

Token 1041: ' blocks' (ID: 18125)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1504368931055069
    2. 'bottom' → logprob: -2.9004368782043457
    3. ' for' → logprob: -3.1504368782043457
    4. '[]
' → logprob: -4.150436878204346
    5. '[]' → logprob: -4.775436878204346
    6. 'from' → logprob: -5.900436878204346
    7. '{}
' → logprob: -6.150436878204346
    8. ' bottom' → logprob: -6.275436878204346
    9. '{}' → logprob: -6.275436878204346
    10. 'set' → logprob: -6.525436878204346

Token 1042: ' that' (ID: 484)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.5520139336585999
    2. ' =' → logprob: -1.802013874053955
    3. '_bottom' → logprob: -1.927013874053955
    4. '_by' → logprob: -3.427013874053955
    5. '_of' → logprob: -4.052013874053955
    6. '_per' → logprob: -4.802013874053955
    7. '_b' → logprob: -4.927013874053955
    8. '=[]' → logprob: -5.177013874053955
    9. '_with' → logprob: -5.427013874053955
    10. '=[]
' → logprob: -5.552013874053955

Token 1043: ' touch' (ID: 7381)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.675046443939209
    2. 'y' → logprob: -1.675046443939209
    3. ' have' → logprob: -2.050046443939209
    4. ' are' → logprob: -2.425046443939209
    5. 'are' → logprob: -3.175046443939209
    6. ' y' → logprob: -3.800046443939209
    7. ' in' → logprob: -4.925046443939209
    8. '
' → logprob: -5.800046443939209
    9. ' for' → logprob: -6.425046443939209
    10. 'appear' → logprob: -6.675046443939209

Token 1044: ' bottom' (ID: 8725)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.7368685603141785
    2. 'the' → logprob: -0.8618685603141785
    3. ' ground' → logprob: -2.8618686199188232
    4. ' the' → logprob: -3.4868686199188232
    5. 'bottom' → logprob: -5.361868381500244
    6. 'below' → logprob: -5.861868381500244
    7. '   ' → logprob: -6.236868381500244
    8. '0' → logprob: -7.736868381500244
    9. 'block' → logprob: -8.486868858337402
    10. ' bottom' → logprob: -8.611868858337402

Token 1045: ' faces' (ID: 22060)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -2.1041367053985596
    2. '_face' → logprob: -2.1041367053985596
    3. ' or' → logprob: -2.6041367053985596
    4. '   ' → logprob: -2.6041367053985596
    5. 'face' → logprob: -2.8541367053985596
    6. '       ' → logprob: -2.9791367053985596
    7. ' in' → logprob: -3.1041367053985596
    8. '_' → logprob: -3.1041367053985596
    9. '_faces' → logprob: -3.1041367053985596
    10. '=' → logprob: -3.3541367053985596

Token 1046: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16658735275268555
    2. '=' → logprob: -3.4165873527526855
    3. ' in' → logprob: -3.4165873527526855
    4. ' of' → logprob: -3.6665873527526855
    5. ' that' → logprob: -3.9165873527526855
    6. ':' → logprob: -5.4165873527526855
    7. 'of' → logprob: -5.4165873527526855
    8. ' for' → logprob: -5.5415873527526855
    9. 'that' → logprob: -5.5415873527526855
    10. ' (' → logprob: -5.6665873527526855

Token 1047: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7356323599815369
    2. 'piece' → logprob: -0.7356323599815369
    3. 'pieces' → logprob: -3.6106324195861816
    4. 'each' → logprob: -5.610632419586182
    5. 'blocks' → logprob: -5.985632419586182
    6. ' the' → logprob: -6.485632419586182
    7. ' piece' → logprob: -6.485632419586182
    8. 'that' → logprob: -6.860632419586182
    9. 'their' → logprob: -6.860632419586182
    10. 'block' → logprob: -7.610632419586182

Token 1048: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.20791305601596832
    2. ' piece' → logprob: -1.7079130411148071
    3. '(piece' → logprob: -6.457912921905518
    4. 'pieces' → logprob: -6.707912921905518
    5. '_piece' → logprob: -7.332912921905518
    6. '   ' → logprob: -7.582912921905518
    7. '       ' → logprob: -7.707912921905518
    8. ' for' → logprob: -7.832912921905518
    9. ' pieces' → logprob: -7.957912921905518
    10. 'for' → logprob: -8.582913398742676

Token 1049: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8193292617797852
    2. 'for' → logprob: -1.5693292617797852
    3. ' =' → logprob: -2.069329261779785
    4. '       ' → logprob: -3.319329261779785
    5. '_piece' → logprob: -3.569329261779785
    6. 'def' → logprob: -4.069329261779785
    7. '   ' → logprob: -4.194329261779785
    8. '=' → logprob: -4.194329261779785
    9. '_' → logprob: -4.319329261779785
    10. '
' → logprob: -4.319329261779785

Token 1050: ' the' (ID: 290)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.1315112113952637
    2. ' have' → logprob: -2.2565112113952637
    3. 'for' → logprob: -2.5065112113952637
    4. 'y' → logprob: -2.6315112113952637
    5. 'are' → logprob: -2.8815112113952637
    6. ' are' → logprob: -3.1315112113952637
    7. ' (' → logprob: -3.1315112113952637
    8. '(' → logprob: -3.6315112113952637
    9. '#' → logprob: -3.7565112113952637
    10. ' for' → logprob: -3.8815112113952637

Token 1051: ' piece' (ID: 9047)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.4994500875473022
    2. 'grid' → logprob: -1.4994500875473022
    3. 'blocks' → logprob: -1.8744500875473022
    4. 'ground' → logprob: -2.499450206756592
    5. 'piece' → logprob: -2.874450206756592
    6. ' grid' → logprob: -2.874450206756592
    7. ' blocks' → logprob: -3.374450206756592
    8. ' ones' → logprob: -3.374450206756592
    9. '#' → logprob: -3.874450206756592
    10. ' block' → logprob: -4.374450206756592

Token 1052: ' below' (ID: 4895)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.968471109867096
    2. 's' → logprob: -2.218471050262451
    3. '_support' → logprob: -2.468471050262451
    4. '_b' → logprob: -2.718471050262451
    5. '_blocks' → logprob: -2.968471050262451
    6. '_bottom' → logprob: -3.343471050262451
    7. '```' → logprob: -3.593471050262451
    8. '_touch' → logprob: -4.093471050262451
    9. '_s' → logprob: -4.218471050262451
    10. '   ' → logprob: -4.343471050262451

Token 1053: ' or' (ID: 503)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8783625364303589
    2. 'for' → logprob: -1.2533625364303589
    3. ' =' → logprob: -2.2533626556396484
    4. '       ' → logprob: -3.2533626556396484
    5. '
' → logprob: -3.7533626556396484
    6. '#' → logprob: -4.003362655639648
    7. '_piece' → logprob: -4.003362655639648
    8. '=' → logprob: -4.503362655639648
    9. 'def' → logprob: -4.753362655639648
    10. '_bottom' → logprob: -4.753362655639648

Token 1054: ' ground' (ID: 7740)
  Prédit: 'ground'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ground' → logprob: -0.008026758208870888
    2. 'grid' → logprob: -5.258026599884033
    3. ' ground' → logprob: -6.633026599884033
    4. 'or' → logprob: -7.508026599884033
    5. '#' → logprob: -8.008027076721191
    6. 'the' → logprob: -8.758027076721191
    7. '
' → logprob: -9.383027076721191
    8. '   ' → logprob: -9.633027076721191
    9. '0' → logprob: -10.133027076721191
    10. 'y' → logprob: -10.258027076721191

Token 1055: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1725152730941772
    2. 'for' → logprob: -1.5475152730941772
    3. '
' → logprob: -2.172515392303467
    4. ' =' → logprob: -2.172515392303467
    5. '_piece' → logprob: -3.047515392303467
    6. '_' → logprob: -3.672515392303467
    7. '       ' → logprob: -3.797515392303467
    8. '_
' → logprob: -4.172515392303467
    9. '=' → logprob: -4.172515392303467
    10. '   ' → logprob: -4.297515392303467

Token 1056: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.503550112247467
    2. ' for' → logprob: -1.5035500526428223
    3. '       ' → logprob: -2.0035500526428223
    4. 'bottom' → logprob: -4.878550052642822
    5. '
' → logprob: -5.253550052642822
    6. '   ' → logprob: -5.253550052642822
    7. '#' → logprob: -5.878550052642822
    8. 'piece' → logprob: -5.878550052642822
    9. '```' → logprob: -6.503550052642822
    10. ' bottom' → logprob: -6.753550052642822

Token 1057: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6826878190040588
    2. ' for' → logprob: -1.182687759399414
    3. 'bottom' → logprob: -1.932687759399414
    4. ' bottom' → logprob: -3.682687759399414
    5. 'piece' → logprob: -4.932687759399414
    6. '       ' → logprob: -4.932687759399414
    7. '```' → logprob: -6.807687759399414
    8. '#' (adapté à ' #') → logprob: -7.432687759399414
    9. ' piece' → logprob: -7.557687759399414
    10. '
' → logprob: -7.807687759399414

Token 1058: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5792992115020752
    2. 'bottom' → logprob: -0.8292992115020752
    3. ' for' → logprob: -6.954298973083496
    4. '       ' → logprob: -7.079298973083496
    5. ' bottom' → logprob: -7.704298973083496
    6. 'def' → logprob: -7.829298973083496
    7. 'piece' → logprob: -8.329298973083496
    8. '#' → logprob: -8.454298973083496
    9. '   ' → logprob: -9.704298973083496
    10. 'block' → logprob: -9.704298973083496

Token 1059: ' find' (ID: 1646)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.5492435693740845
    2. 'complete' → logprob: -1.6742435693740845
    3. 'find' → logprob: -1.9242435693740845
    4. 'det' → logprob: -2.424243450164795
    5. 'define' → logprob: -2.674243450164795
    6. 'compute' → logprob: -2.799243450164795
    7. 'calculate' → logprob: -2.924243450164795
    8. 'do' → logprob: -3.174243450164795
    9. 'identify' → logprob: -3.424243450164795
    10. 'get' → logprob: -3.549243450164795

Token 1060: ' x' (ID: 1215)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.03790135309100151
    2. ' bottom' → logprob: -3.6629014015197754
    3. 'for' → logprob: -6.037901401519775
    4. 'continue' → logprob: -6.037901401519775
    5. 'each' → logprob: -6.287901401519775
    6. 'find' → logprob: -6.912901401519775
    7. 'complete' → logprob: -7.162901401519775
    8. 'identify' → logprob: -7.287901401519775
    9. 'det' → logprob: -7.787901401519775
    10. '_bottom' → logprob: -8.162900924682617

Token 1061: '_L' (ID: 4258)
  Prédit: '_bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bottom' → logprob: -0.337471067905426
    2. '_left' → logprob: -2.8374710083007812
    3. '_min' → logprob: -3.0874710083007812
    4. '_bounds' → logprob: -3.5874710083007812
    5. 'min' → logprob: -3.8374710083007812
    6. '_limits' → logprob: -3.8374710083007812
    7. '_ranges' → logprob: -4.337471008300781
    8. 'bottom' → logprob: -4.587471008300781
    9. '_L' → logprob: -4.587471008300781
    10. '_coords' → logprob: -4.712471008300781

Token 1062: ' and' (ID: 326)
  Prédit: '_piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_piece' → logprob: -0.5797649621963501
    2. ',' → logprob: -0.9547649621963501
    3. '_' → logprob: -3.5797648429870605
    4. '_,' → logprob: -5.0797648429870605
    5. '_bottom' → logprob: -5.3297648429870605
    6. 'piece' → logprob: -5.7047648429870605
    7. '(piece' → logprob: -5.9547648429870605
    8. ' =' → logprob: -6.4547648429870605
    9. 's' → logprob: -6.9547648429870605
    10. '_p' → logprob: -6.9547648429870605

Token 1063: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011315245646983385
    2. ' x' → logprob: -8.251131057739258
    3. '_R' → logprob: -8.251131057739258
    4. 'piece' → logprob: -8.876131057739258
    5. '
' → logprob: -9.251131057739258
    6. 'bottom' → logprob: -9.376131057739258
    7. '   ' → logprob: -10.376131057739258
    8. '```' → logprob: -10.626131057739258
    9. '<|end|>' → logprob: -10.626131057739258
    10. '       ' → logprob: -10.751131057739258

Token 1064: '_R' (ID: 5190)
  Prédit: '_R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_R' → logprob: -0.006465724669396877
    2. 'R' → logprob: -5.881465911865234
    3. '_bottom' → logprob: -7.006465911865234
    4. '_B' → logprob: -7.506465911865234
    5. '#' → logprob: -7.631465911865234
    6. '```' → logprob: -7.881465911865234
    7. '_blocks' → logprob: -8.256465911865234
    8. '_L' → logprob: -9.006465911865234
    9. '_right' → logprob: -9.131465911865234
    10. 'bottom' → logprob: -9.631465911865234

Token 1065: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11954804509878159
    2. 'bottom' → logprob: -2.4945480823516846
    3. ' for' → logprob: -3.7445480823516846
    4. '#' → logprob: -6.1195478439331055
    5. 'piece' → logprob: -6.4945478439331055
    6. '       ' → logprob: -7.2445478439331055
    7. 'def' → logprob: -7.4945478439331055
    8. ' bottom' → logprob: -7.4945478439331055
    9. 'x' → logprob: -7.8695478439331055
    10. ',' → logprob: -9.494547843933105

Token 1066: ' need' (ID: 1309)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4898812174797058
    2. 'for' → logprob: -1.9898812770843506
    3. 'need' → logprob: -2.2398812770843506
    4. '#' → logprob: -3.6148812770843506
    5. '       ' → logprob: -3.6148812770843506
    6. ' need' → logprob: -4.4898810386657715
    7. ' for' → logprob: -4.6148810386657715
    8. '           ' → logprob: -4.8648810386657715
    9. ' continue' → logprob: -4.8648810386657715
    10. '...' → logprob: -4.9898810386657715

Token 1067: ' bottom' (ID: 8725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9308732151985168
    2. 'for' → logprob: -1.305873155593872
    3. ' for' → logprob: -1.555873155593872
    4. '   ' → logprob: -2.555873155593872
    5. 'bottom' → logprob: -4.555873394012451
    6. '[]' → logprob: -4.930873394012451
    7. ' to' → logprob: -4.930873394012451
    8. ' bottom' → logprob: -5.430873394012451
    9. 'def' → logprob: -5.930873394012451
    10. '           ' → logprob: -5.930873394012451

Token 1068: ' blocks' (ID: 18125)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.015230929479002953
    2. 'blocks' → logprob: -4.265231132507324
    3. '_faces' → logprob: -7.265231132507324
    4. '_block' → logprob: -8.765231132507324
    5. 'block' → logprob: -10.015231132507324
    6. 'faces' → logprob: -10.390231132507324
    7. '```' → logprob: -10.515231132507324
    8. ' blocks' → logprob: -10.640231132507324
    9. '_' → logprob: -10.765231132507324
    10. '_face' → logprob: -10.765231132507324

Token 1069: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09219381958246231
    2. ' for' → logprob: -2.467193841934204
    3. '       ' → logprob: -6.717193603515625
    4. '#' → logprob: -7.967193603515625
    5. ',' → logprob: -7.967193603515625
    6. '
' → logprob: -8.342193603515625
    7. 'def' → logprob: -8.592193603515625
    8. ':' → logprob: -9.217193603515625
    9. 'bottom' → logprob: -9.217193603515625
    10. '   ' → logprob: -9.342193603515625

Token 1070: ' the' (ID: 290)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.058223385363817215
    2. 'each' → logprob: -3.4332234859466553
    3. 'the' → logprob: -4.058223247528076
    4. 'pieces' → logprob: -5.558223247528076
    5. ' piece' → logprob: -6.933223247528076
    6. 'this' → logprob: -7.558223247528076
    7. 'a' → logprob: -7.683223247528076
    8. 'i' → logprob: -7.933223247528076
    9. '[i' → logprob: -8.308223724365234
    10. '(piece' → logprob: -9.183223724365234

Token 1071: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.005022175144404173
    2. 'current' → logprob: -5.505022048950195
    3. ' piece' → logprob: -8.380022048950195
    4. 'pieces' → logprob: -8.380022048950195
    5. 'def' → logprob: -9.130022048950195
    6. 'i' → logprob: -9.380022048950195
    7. 'same' → logprob: -9.380022048950195
    8. '(piece' → logprob: -9.880022048950195
    9. '```' → logprob: -10.130022048950195
    10. 'for' → logprob: -10.380022048950195

Token 1072: ',' (ID: 11)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.7118890881538391
    2. '       ' → logprob: -0.8368890881538391
    3. 'for' → logprob: -3.4618890285491943
    4. ' bottom' → logprob: -4.086889266967773
    5. ' for' → logprob: -5.086889266967773
    6. 'piece' → logprob: -5.461889266967773
    7. ',' → logprob: -5.836889266967773
    8. '#' → logprob: -5.961889266967773
    9. ' =' → logprob: -6.211889266967773
    10. '
' → logprob: -6.461889266967773

Token 1073: ' i' (ID: 575)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.2767675518989563
    2. 'for' → logprob: -2.5267674922943115
    3. '#' → logprob: -3.1517674922943115
    4. 'x' → logprob: -3.2767674922943115
    5. '       ' → logprob: -3.4017674922943115
    6. ' bottom' → logprob: -3.7767674922943115
    7. ' for' → logprob: -5.151767730712891
    8. '
' → logprob: -5.401767730712891
    9. 'block' → logprob: -5.776767730712891
    10. 'from' → logprob: -6.026767730712891

Token 1074: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6945321559906006
    2. 'm' → logprob: -2.0695321559906006
    3. 'for' → logprob: -2.1945321559906006
    4. '       ' → logprob: -2.3195321559906006
    5. 'nd' → logprob: -2.8195321559906006
    6. '=' → logprob: -3.0695321559906006
    7. '#' → logprob: -4.31953239440918
    8. 's' → logprob: -4.56953239440918
    9. '           ' → logprob: -5.19453239440918
    10. '   ' → logprob: -5.69453239440918

Token 1075: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6681814193725586
    2. '       ' → logprob: -1.7931814193725586
    3. 'for' → logprob: -1.7931814193725586
    4. ',' → logprob: -2.1681814193725586
    5. '.' → logprob: -2.6681814193725586
    6. '               ' → logprob: -2.6681814193725586
    7. ':' → logprob: -2.9181814193725586
    8. '   ' → logprob: -3.1681814193725586
    9. 'not' → logprob: -3.6681814193725586
    10. '                   ' → logprob: -3.6681814193725586

Token 1076: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.35438498854637146
    2. 'bottom' → logprob: -2.8543848991394043
    3. 'for' → logprob: -2.9793848991394043
    4. '
' → logprob: -3.3543848991394043
    5. 'block' → logprob: -3.4793848991394043
    6. '[x' → logprob: -3.7293848991394043
    7. ' blocks' → logprob: -3.7293848991394043
    8. '```' → logprob: -4.604384899139404
    9. 'those' → logprob: -4.604384899139404
    10. '[(' → logprob: -4.729384899139404

Token 1077: ' which' (ID: 1118)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.7284153699874878
    2. ' that' → logprob: -0.8534153699874878
    3. ' in' → logprob: -3.7284154891967773
    4. '```' → logprob: -3.7284154891967773
    5. '_that' → logprob: -4.478415489196777
    6. 'in' → logprob: -4.603415489196777
    7. 'with' → logprob: -5.353415489196777
    8. '
' → logprob: -5.853415489196777
    9. ' with' → logprob: -6.603415489196777
    10. '   ' → logprob: -6.603415489196777

Token 1078: ' are' (ID: 553)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.5628613233566284
    2. 'y' → logprob: -1.1878613233566284
    3. 'are' → logprob: -2.812861442565918
    4. ' have' → logprob: -4.187861442565918
    5. 'touch' → logprob: -4.187861442565918
    6. 'do' → logprob: -4.562861442565918
    7. ' y' → logprob: -4.812861442565918
    8. ' are' → logprob: -5.437861442565918
    9. '   ' → logprob: -5.812861442565918
    10. '
' → logprob: -6.687861442565918

Token 1079: ' on' (ID: 402)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.24016328155994415
    2. 'on' → logprob: -2.7401633262634277
    3. 'part' → logprob: -2.9901633262634277
    4. 'y' → logprob: -3.4901633262634277
    5. 'bottom' → logprob: -3.8651633262634277
    6. 'not' → logprob: -3.9901633262634277
    7. 'lowest' → logprob: -4.865163326263428
    8. 'in' → logprob: -5.990163326263428
    9. '(y' → logprob: -6.240163326263428
    10. '(x' → logprob: -6.240163326263428

Token 1080: ' bottom' (ID: 8725)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.10259054601192474
    2. 'bottom' → logprob: -3.102590560913086
    3. 'y' → logprob: -3.352590560913086
    4. ' the' → logprob: -4.602590560913086
    5. 'piece' → logprob: -6.102590560913086
    6. 'a' → logprob: -6.477590560913086
    7. ' y' → logprob: -6.977590560913086
    8. 'lowest' → logprob: -7.102590560913086
    9. 'grid' → logprob: -7.977590560913086
    10. ' bottom' → logprob: -7.977590560913086

Token 1081: ' faces' (ID: 22060)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.5307117700576782
    2. 'face' → logprob: -1.7807117700576782
    3. 'for' → logprob: -2.2807116508483887
    4. 'of' → logprob: -3.4057116508483887
    5. '       ' → logprob: -3.6557116508483887
    6. '   ' → logprob: -4.530711650848389
    7. ' for' → logprob: -4.530711650848389
    8. '```' → logprob: -4.780711650848389
    9. '_face' → logprob: -4.780711650848389
    10. 'blocks' → logprob: -5.030711650848389

Token 1082: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38033175468444824
    2. 'for' → logprob: -1.7553317546844482
    3. ' for' → logprob: -3.2553317546844482
    4. ' of' → logprob: -3.6303317546844482
    5. 'of' → logprob: -4.005331993103027
    6. '```' → logprob: -4.380331993103027
    7. 'def' → logprob: -4.505331993103027
    8. ',' → logprob: -5.130331993103027
    9. '#' → logprob: -5.255331993103027
    10. '   ' → logprob: -5.380331993103027

Token 1083: ' piece' (ID: 9047)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.20679643750190735
    2. 'piece' → logprob: -1.706796407699585
    3. 'this' → logprob: -5.706796646118164
    4. ' the' → logprob: -7.456796646118164
    5. ' piece' → logprob: -7.706796646118164
    6. '(piece' → logprob: -8.456796646118164
    7. 'pieces' → logprob: -8.706796646118164
    8. '```' → logprob: -8.831796646118164
    9. 'each' → logprob: -8.956796646118164
    10. 'that' → logprob: -9.331796646118164

Token 1084: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04076940938830376
    2. ' =' → logprob: -4.415769577026367
    3. '#' → logprob: -5.040769577026367
    4. 'for' → logprob: -5.165769577026367
    5. 'def' → logprob: -5.665769577026367
    6. '   ' → logprob: -5.790769577026367
    7. ',' → logprob: -6.290769577026367
    8. '
' → logprob: -6.415769577026367
    9. '=' → logprob: -6.790769577026367
    10. ' for' → logprob: -6.790769577026367

Token 1085: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09711067378520966
    2. '#' → logprob: -2.8471107482910156
    3. 'which' → logprob: -4.597110748291016
    4. 'and' → logprob: -5.847110748291016
    5. 'i' → logprob: -5.972110748291016
    6. '   ' → logprob: -6.097110748291016
    7. 'but' → logprob: -6.097110748291016
    8. 'not' → logprob: -6.097110748291016
    9. 'that' → logprob: -6.097110748291016
    10. '           ' → logprob: -6.472110748291016

Token 1086: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.743183434009552
    2. 'i' → logprob: -1.4931833744049072
    3. '       ' → logprob: -1.4931833744049072
    4. ' i' → logprob: -3.6181833744049072
    5. 'that' → logprob: -3.7431833744049072
    6. ' that' → logprob: -5.118183612823486
    7. 'not' → logprob: -5.618183612823486
    8. 'or' → logprob: -6.243183612823486
    9. 'which' → logprob: -6.243183612823486
    10. ' not' → logprob: -6.618183612823486

Token 1087: ' that' (ID: 484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13935686647891998
    2. '       ' → logprob: -2.139356851577759
    3. 'which' → logprob: -5.514357089996338
    4. '           ' → logprob: -6.639357089996338
    5. '   ' → logprob: -6.639357089996338
    6. ' #' → logprob: -6.889357089996338
    7. 'and' → logprob: -7.014357089996338
    8. 'i' → logprob: -7.264357089996338
    9. 'for' → logprob: -7.264357089996338
    10. 'but' → logprob: -7.889357089996338

Token 1088: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.2265853881835938
    2. 'are' → logprob: -1.6015853881835938
    3. '#' → logprob: -1.7265853881835938
    4. ' is' → logprob: -2.3515853881835938
    5. '   ' → logprob: -2.8515853881835938
    6. '       ' → logprob: -3.2265853881835938
    7. ' are' → logprob: -3.4765853881835938
    8. '           ' → logprob: -3.9765853881835938
    9. 'touch' → logprob: -4.226585388183594
    10. 's' → logprob: -4.601585388183594

Token 1089: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.472028523683548
    2. 'for' → logprob: -2.0970284938812256
    3. 'y' → logprob: -2.5970284938812256
    4. 'those' → logprob: -3.2220284938812256
    5. 'they' → logprob: -3.4720284938812256
    6. 'the' → logprob: -3.7220284938812256
    7. 'block' → logprob: -3.9720284938812256
    8. ' blocks' → logprob: -4.222028732299805
    9. ' for' → logprob: -4.347028732299805
    10. '   ' → logprob: -5.597028732299805

Token 1090: ' which' (ID: 1118)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.5686845779418945
    2. 'which' → logprob: -1.5686845779418945
    3. ' that' → logprob: -1.8186845779418945
    4. ' which' → logprob: -2.3186845779418945
    5. ' with' → logprob: -2.5686845779418945
    6. ' in' → logprob: -2.6936845779418945
    7. 'that' → logprob: -2.6936845779418945
    8. 'for' → logprob: -3.5686845779418945
    9. ' for' → logprob: -3.9436845779418945
    10. 'in' → logprob: -4.0686845779418945

Token 1091: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.37571215629577637
    2. 'do' → logprob: -2.2507121562957764
    3. ' have' → logprob: -2.5007121562957764
    4. 'are' → logprob: -3.1257121562957764
    5. 'for' → logprob: -3.1257121562957764
    6. ' for' → logprob: -4.5007123947143555
    7. ' are' → logprob: -4.6257123947143555
    8. ' do' → logprob: -5.0007123947143555
    9. '
' → logprob: -6.5007123947143555
    10. 'don't' → logprob: -6.6257123947143555

Token 1092: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.5163087844848633
    2. 'y' → logprob: -1.6413087844848633
    3. 'at' → logprob: -2.5163087844848633
    4. ' no' → logprob: -2.7663087844848633
    5. 'a' → logprob: -3.5163087844848633
    6. ' at' → logprob: -4.516308784484863
    7. 'an' → logprob: -5.391308784484863
    8. 'neighbors' → logprob: -5.516308784484863
    9. '
' → logprob: -5.641308784484863
    10. 'any' → logprob: -6.266308784484863

Token 1093: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.014801718294620514
    2. ' block' → logprob: -4.764801502227783
    3. 'blocks' → logprob: -6.014801502227783
    4. 'neighbor' → logprob: -7.139801502227783
    5. 'other' → logprob: -7.264801502227783
    6. '(' → logprob: -7.389801502227783
    7. '
' → logprob: -7.639801502227783
    8. '(block' → logprob: -8.139801979064941
    9. 'below' → logprob: -8.639801979064941
    10. 'piece' → logprob: -9.264801979064941

Token 1094: ' of' (ID: 328)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.02811724878847599
    2. ' below' → logprob: -4.4031171798706055
    3. 's' → logprob: -5.2781171798706055
    4. 'at' → logprob: -6.1531171798706055
    5. '(' → logprob: -6.5281171798706055
    6. '(x' → logprob: -6.6531171798706055
    7. '
' → logprob: -7.1531171798706055
    8. 'bene' → logprob: -7.4031171798706055
    9. ')' → logprob: -7.6531171798706055
    10. 'Below' → logprob: -7.9031171798706055

Token 1095: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.04707663506269455
    2. 'same' → logprob: -3.67207670211792
    3. 'piece' → logprob: -4.67207670211792
    4. '(piece' → logprob: -4.79707670211792
    5. ' the' → logprob: -6.42207670211792
    6. '(' → logprob: -7.17207670211792
    7. 'this' → logprob: -9.172076225280762
    8. ' same' → logprob: -9.297076225280762
    9. 'pieces' → logprob: -9.672076225280762
    10. '(p' → logprob: -9.922076225280762

Token 1096: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.02113860659301281
    2. ' piece' → logprob: -4.271138668060303
    3. 'y' → logprob: -5.646138668060303
    4. '(piece' → logprob: -7.021138668060303
    5. 'i' → logprob: -7.271138668060303
    6. 'h' → logprob: -7.771138668060303
    7. '
' → logprob: -8.396138191223145
    8. '_piece' → logprob: -8.521138191223145
    9. '   ' → logprob: -9.021138191223145
    10. '[i' → logprob: -9.271138191223145

Token 1097: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.1503531038761139
    2. ' below' → logprob: -2.775353193283081
    3. ' at' → logprob: -3.900353193283081
    4. 's' → logprob: -4.025352954864502
    5. 'at' → logprob: -4.900352954864502
    6. 'bene' → logprob: -5.275352954864502
    7. '(' → logprob: -5.900352954864502
    8. ')' → logprob: -6.025352954864502
    9. '
' → logprob: -6.150352954864502
    10. '```' → logprob: -6.275352954864502

Token 1098: ' them' (ID: 1373)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17928895354270935
    2. '       ' → logprob: -2.179288864135742
    3. ' for' → logprob: -3.054288864135742
    4. '   ' → logprob: -6.304288864135742
    5. 'piece' → logprob: -7.304288864135742
    6. '
' → logprob: -8.179288864135742
    7. 'def' → logprob: -8.429288864135742
    8. '           ' → logprob: -8.804288864135742
    9. '```' → logprob: -8.804288864135742
    10. ',' → logprob: -9.554288864135742

Token 1099: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.583905816078186
    2. 'for' → logprob: -0.958905816078186
    3. ' for' → logprob: -2.9589056968688965
    4. '   ' → logprob: -5.7089056968688965
    5. '
' → logprob: -6.9589056968688965
    6. 'piece' → logprob: -7.3339056968688965
    7. '           ' → logprob: -7.4589056968688965
    8. 'def' → logprob: -7.8339056968688965
    9. '                   ' → logprob: -7.9589056968688965
    10. '        
' → logprob: -8.708906173706055

Token 1100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4503079652786255
    2. ' for' → logprob: -1.7003079652786255
    3. 'for' → logprob: -1.8253079652786255
    4. '   ' → logprob: -4.700307846069336
    5. '                   ' → logprob: -5.950307846069336
    6. '           ' → logprob: -6.075307846069336
    7. '
' → logprob: -7.075307846069336
    8. 'def' → logprob: -7.075307846069336
    9. '               ' → logprob: -7.450307846069336
    10. '```' → logprob: -7.575307846069336

Token 1101: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018425006419420242
    2. ' for' → logprob: -4.268424987792969
    3. '       ' → logprob: -5.518424987792969
    4. 'bottom' → logprob: -9.143424987792969
    5. 'def' → logprob: -10.018424987792969
    6. '   ' → logprob: -10.393424987792969
    7. 'piece' → logprob: -10.518424987792969
    8. '
' → logprob: -11.518424987792969
    9. '#' (adapté à ' #') → logprob: -12.018424987792969
    10. '        
' → logprob: -12.393424987792969

Token 1102: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022606621496379375
    2. ' for' → logprob: -9.750226020812988
    3. 'bottom' → logprob: -9.750226020812988
    4. '       ' → logprob: -10.125226020812988
    5. 'def' → logprob: -10.125226020812988
    6. '#' → logprob: -11.125226020812988
    7. '   ' → logprob: -12.125226020812988
    8. '```' → logprob: -12.750226020812988
    9. 'piece' → logprob: -12.750226020812988
    10. '
' → logprob: -13.250226020812988

Token 1103: ' bottom' (ID: 8725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8625719547271729
    2. ' for' → logprob: -1.6125719547271729
    3. 'bottom' → logprob: -1.9875719547271729
    4. ' bottom' → logprob: -2.112571954727173
    5. 'x' → logprob: -3.362571954727173
    6. 'piece' → logprob: -3.487571954727173
    7. '   ' → logprob: -4.487571716308594
    8. ' piece' → logprob: -4.737571716308594
    9. '_bottom' → logprob: -4.862571716308594
    10. 'def' → logprob: -4.987571716308594

Token 1104: ' blocks' (ID: 18125)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.0001129602751461789
    2. 'blocks' → logprob: -9.625112533569336
    3. '_faces' → logprob: -10.125112533569336
    4. '_block' → logprob: -12.500112533569336
    5. '_cells' → logprob: -13.375112533569336
    6. '_positions' → logprob: -14.500112533569336
    7. ' blocks' → logprob: -15.375112533569336
    8. '```' → logprob: -15.875112533569336
    9. '_' → logprob: -16.125112533569336
    10. '_bottom' → logprob: -16.125112533569336

Token 1105: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5291303992271423
    2. '       ' → logprob: -1.404130458831787
    3. 'bottom' → logprob: -2.029130458831787
    4. ' for' → logprob: -3.654130458831787
    5. '   ' → logprob: -5.779130458831787
    6. ' bottom' → logprob: -6.154130458831787
    7. 'from' → logprob: -7.779130458831787
    8. '```' → logprob: -8.029129981994629
    9. 'def' → logprob: -8.154129981994629
    10. '           ' → logprob: -8.154129981994629

Token 1106: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.38515955209732056
    2. 'piece' → logprob: -1.5101594924926758
    3. 'pieces' → logprob: -2.885159492492676
    4. ' each' → logprob: -3.635159492492676
    5. 'i' → logprob: -5.510159492492676
    6. ' piece' → logprob: -5.635159492492676
    7. ' pieces' → logprob: -6.010159492492676
    8. 'the' → logprob: -6.010159492492676
    9. 'def' → logprob: -6.885159492492676
    10. 'for' → logprob: -7.385159492492676

Token 1107: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.04715202376246452
    2. ' piece' → logprob: -3.172152042388916
    3. 'i' → logprob: -6.297152042388916
    4. 'for' → logprob: -6.672152042388916
    5. '_piece' → logprob: -8.172151565551758
    6. '```' → logprob: -8.547151565551758
    7. ' for' → logprob: -8.922151565551758
    8. '[i' → logprob: -9.172151565551758
    9. '
' → logprob: -9.922151565551758
    10. '(piece' → logprob: -9.922151565551758

Token 1108: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7642127275466919
    2. 'bottom' → logprob: -0.8892127275466919
    3. '       ' → logprob: -2.2642126083374023
    4. ' for' → logprob: -4.389212608337402
    5. 'piece' → logprob: -5.514212608337402
    6. ' bottom' → logprob: -6.514212608337402
    7. '   ' → logprob: -7.139212608337402
    8. 'def' → logprob: -9.264212608337402
    9. '```' → logprob: -9.264212608337402
    10. '
' → logprob: -9.514212608337402

Token 1109: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46808692812919617
    2. 'bottom' → logprob: -1.0930869579315186
    3. '       ' → logprob: -3.4680869579315186
    4. ' for' → logprob: -5.2180867195129395
    5. '   ' → logprob: -7.4680867195129395
    6. 'piece' → logprob: -7.4680867195129395
    7. ' bottom' → logprob: -7.9680867195129395
    8. '
' → logprob: -8.843087196350098
    9. '```' → logprob: -8.968087196350098
    10. 'def' → logprob: -9.718087196350098

Token 1110: ' bottom' (ID: 8725)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21466659009456635
    2. 'bottom' (adapté à ' bottom') → logprob: -1.7146666049957275
    3. ' for' → logprob: -4.839666366577148
    4. '       ' → logprob: -5.589666366577148
    5. 'piece' → logprob: -7.089666366577148
    6. ' bottom' → logprob: -7.714666366577148
    7. '   ' → logprob: -9.089666366577148
    8. 'pieces' → logprob: -10.089666366577148
    9. 'def' → logprob: -10.964666366577148
    10. '```' → logprob: -11.589666366577148

Token 1111: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -4.251091377227567e-05
    2. 'blocks' → logprob: -10.750042915344238
    3. '_block' → logprob: -11.250042915344238
    4. '_positions' → logprob: -13.000042915344238
    5. '_cells' → logprob: -13.250042915344238
    6. '_indices' → logprob: -13.750042915344238
    7. '```' → logprob: -14.250042915344238
    8. '_' → logprob: -14.500042915344238
    9. '_piece' → logprob: -15.250042915344238
    10. ' blocks' → logprob: -15.625042915344238

Token 1112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12701578438282013
    2. ' =' → logprob: -2.1270158290863037
    3. '=[]' → logprob: -9.377016067504883
    4. '=[]
' → logprob: -13.127016067504883
    5. '=[' → logprob: -14.877016067504883
    6. '=
' → logprob: -15.752016067504883
    7. 's' → logprob: -15.752016067504883
    8. '[' → logprob: -16.002016067504883
    9. ',' → logprob: -16.627016067504883
    10. '   ' → logprob: -16.752016067504883

Token 1113: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1283353567123413
    2. '[]
' → logprob: -2.128335475921631
    3. '[]' → logprob: -6.878335475921631
    4. ' [[]' → logprob: -8.128334999084473
    5. '[
' → logprob: -10.878334999084473
    6. '   ' → logprob: -11.128334999084473
    7. '[]

' → logprob: -11.253334999084473
    8. '[i' → logprob: -11.378334999084473
    9. '[[' → logprob: -11.753334999084473
    10. ' []
' → logprob: -11.878334999084473

Token 1114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5809032917022705
    2. 'for' → logprob: -0.8309032917022705
    3. ' for' → logprob: -5.330903053283691
    4. '   ' → logprob: -9.580903053283691
    5. '```' → logprob: -10.955903053283691
    6. '
' → logprob: -12.080903053283691
    7. 'def' → logprob: -12.330903053283691
    8. '        
' → logprob: -12.330903053283691
    9. '           ' → logprob: -12.330903053283691
    10. ',' → logprob: -13.955903053283691

Token 1115: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00014036978245712817
    2. '       ' → logprob: -9.000140190124512
    3. ' for' → logprob: -11.000140190124512
    4. '   ' → logprob: -15.875140190124512
    5. '```' → logprob: -16.500141143798828
    6. '
' → logprob: -17.375141143798828
    7. '        
' → logprob: -18.500141143798828
    8. '	for' → logprob: -18.500141143798828
    9. '           ' → logprob: -19.125141143798828
    10. '#' → logprob: -19.500141143798828

Token 1116: ' piece' (ID: 9047)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3234753906726837
    2. 'piece' → logprob: -1.3234753608703613
    3. ' i' → logprob: -5.198475360870361
    4. ' piece' → logprob: -5.948475360870361
    5. 'p' → logprob: -6.948475360870361
    6. '_,' → logprob: -8.19847583770752
    7. '_i' → logprob: -8.44847583770752
    8. 'pi' → logprob: -8.69847583770752
    9. '(piece' → logprob: -9.57347583770752
    10. 'pieces' → logprob: -9.69847583770752

Token 1117: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47783249616622925
    2. ' in' → logprob: -0.9778324961662292
    3. '_i' → logprob: -7.352832317352295
    4. '_in' → logprob: -7.727832317352295
    5. '_idx' → logprob: -7.852832317352295
    6. '_id' → logprob: -8.102832794189453
    7. 'i' → logprob: -8.352832794189453
    8. ')' → logprob: -8.477832794189453
    9. '=' → logprob: -8.602832794189453
    10. '_index' → logprob: -8.852832794189453

Token 1118: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -4.723352049040841e-06
    2. ' pieces' → logprob: -12.375004768371582
    3. '[' → logprob: -15.500004768371582
    4. '   ' → logprob: -16.000003814697266
    5. '
' → logprob: -16.000003814697266
    6. 'ieces' → logprob: -16.750003814697266
    7. 'piece' → logprob: -17.875003814697266
    8. 'p' → logprob: -18.500003814697266
    9. '[p' → logprob: -18.500003814697266
    10. ' ' → logprob: -18.500003814697266

Token 1119: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14923128485679626
    2. ':' → logprob: -2.149231195449829
    3. '           ' → logprob: -4.024231433868408
    4. '       ' → logprob: -5.899231433868408
    5. '):
' → logprob: -7.774231433868408
    6. ',' → logprob: -7.774231433868408
    7. '   ' → logprob: -8.27423095703125
    8. '=' → logprob: -8.89923095703125
    9. '[' → logprob: -10.02423095703125
    10. ' =' → logprob: -10.64923095703125

Token 1120: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007896790280938148
    2. '       ' → logprob: -5.132896900177002
    3. '```' → logprob: -7.132896900177002
    4. '           ' → logprob: -7.382896900177002
    5. '
' → logprob: -7.757896900177002
    6. '``' → logprob: -10.507896423339844
    7. ':
' → logprob: -10.632896423339844
    8. '):
' → logprob: -10.882896423339844
    9. '    
' → logprob: -11.007896423339844
    10. ':' → logprob: -11.507896423339844

Token 1121: ' block' (ID: 4355)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.16269223392009735
    2. ' bb' → logprob: -2.2876923084259033
    3. '   ' → logprob: -4.162692070007324
    4. 'b' → logprob: -4.412692070007324
    5. '           ' → logprob: -4.412692070007324
    6. 'bottom' → logprob: -6.037692070007324
    7. 'bbs' → logprob: -6.037692070007324
    8. ' b' → logprob: -6.787692070007324
    9. '_bb' → logprob: -7.412692070007324
    10. 'bs' → logprob: -7.412692070007324

Token 1122: '_set' (ID: 5451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38663360476493835
    2. '_to' → logprob: -1.6366336345672607
    3. '_set' → logprob: -2.2616336345672607
    4. '_bottom' → logprob: -4.761633396148682
    5. '_positions' → logprob: -5.511633396148682
    6. '_b' → logprob: -5.636633396148682
    7. '_s' → logprob: -6.136633396148682
    8. 'set' → logprob: -6.511633396148682
    9. '_coords' → logprob: -7.011633396148682
    10. '_blocks' → logprob: -8.88663387298584

Token 1123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3881836533546448
    2. '=' → logprob: -1.13818359375
    3. '=set' → logprob: -6.63818359375
    4. '=
' → logprob: -14.63818359375
    5. '={
' → logprob: -15.13818359375
    6. '           ' → logprob: -15.26318359375
    7. ' =
' → logprob: -15.26318359375
    8. '```' → logprob: -15.51318359375
    9. '={' → logprob: -15.63818359375
    10. 'set' → logprob: -15.63818359375

Token 1124: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.011054662987589836
    2. '{' → logprob: -4.511054515838623
    3. ' set' → logprob: -12.011054992675781
    4. '{
' → logprob: -14.761054992675781
    5. '(set' → logprob: -16.13605499267578
    6. '{s' → logprob: -16.26105499267578
    7. '=set' → logprob: -16.63605499267578
    8. '	set' → logprob: -16.88605499267578
    9. '   ' → logprob: -17.38605499267578
    10. ' {(' → logprob: -17.88605499267578

Token 1125: '(piece' (ID: 172522)
  Prédit: '(piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(piece' → logprob: -0.0005133562372066081
    2. 'piece' → logprob: -7.750513553619385
    3. '((' → logprob: -9.875513076782227
    4. '[(' → logprob: -11.125513076782227
    5. '([(' → logprob: -11.875513076782227
    6. '(p' → logprob: -11.875513076782227
    7. '```' → logprob: -13.125513076782227
    8. '([' → logprob: -15.375513076782227
    9. 'block' → logprob: -15.750513076782227
    10. '(' → logprob: -16.250513076782227

Token 1126: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062305666506290436
    2. ')' → logprob: -2.8123056888580322
    3. '           ' → logprob: -8.062305450439453
    4. ')
' → logprob: -11.437305450439453
    5. '       ' → logprob: -12.687305450439453
    6. '())
' → logprob: -12.687305450439453
    7. '   ' → logprob: -13.437305450439453
    8. ')

' → logprob: -13.562305450439453
    9. '               ' → logprob: -13.812305450439453
    10. ' )
' → logprob: -14.187305450439453

Token 1127: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008382306434214115
    2. '   ' → logprob: -4.883382320404053
    3. '
' → logprob: -8.258381843566895
    4. 'bottom' → logprob: -8.633381843566895
    5. '       ' → logprob: -8.883381843566895
    6. '```' → logprob: -9.258381843566895
    7. ' bottom' → logprob: -9.383381843566895
    8. ',' → logprob: -12.133381843566895
    9. '    
' → logprob: -12.633381843566895
    10. 'b' → logprob: -13.383381843566895

Token 1128: ' bottoms' (ID: 145726)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.1067689061164856
    2. 'bottom' → logprob: -3.481768846511841
    3. '           ' → logprob: -3.856768846511841
    4. ' bb' → logprob: -3.856768846511841
    5. 'b' → logprob: -4.48176908493042
    6. '   ' → logprob: -4.73176908493042
    7. 'bbs' → logprob: -6.10676908493042
    8. ' bottom' → logprob: -6.23176908493042
    9. 'bot' → logprob: -6.73176908493042
    10. 'bt' → logprob: -7.60676908493042

Token 1129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31366249918937683
    2. ' =' → logprob: -1.3136625289916992
    3. '=[]' → logprob: -8.3136625289917
    4. '=set' → logprob: -8.9386625289917
    5. '_blocks' → logprob: -11.3136625289917
    6. '=[]
' → logprob: -11.6886625289917
    7. '   ' → logprob: -13.9386625289917
    8. '=_' → logprob: -14.9386625289917
    9. '=find' → logprob: -15.0636625289917
    10. '_set' → logprob: -15.3136625289917

Token 1130: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.12707529962062836
    2. '[(' → logprob: -2.3770751953125
    3. '[x' → logprob: -4.1270751953125
    4. '[]' → logprob: -4.6270751953125
    5. '[' → logprob: -8.2520751953125
    6. '[]

' → logprob: -8.5020751953125
    7. '[
' → logprob: -9.7520751953125
    8. '[b' → logprob: -11.3770751953125
    9. ' []
' → logprob: -11.6270751953125
    10. '[])
' → logprob: -11.7520751953125

Token 1131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009511216776445508
    2. ' for' → logprob: -7.875951290130615
    3. 'for' → logprob: -8.250950813293457
    4. '   ' → logprob: -8.500950813293457
    5. '       ' → logprob: -9.625950813293457
    6. '
' → logprob: -10.375950813293457
    7. '	   ' → logprob: -12.750950813293457
    8. '		' → logprob: -13.500950813293457
    9. '               ' → logprob: -13.500950813293457
    10. '            
' → logprob: -14.500950813293457

Token 1132: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04219336062669754
    2. '           ' → logprob: -3.7921934127807617
    3. ' for' → logprob: -4.042193412780762
    4. '   ' → logprob: -6.792193412780762
    5. '       ' → logprob: -9.542193412780762
    6. '               ' → logprob: -12.292193412780762
    7. ' ' → logprob: -12.542193412780762
    8. '
' → logprob: -12.792193412780762
    9. '```' → logprob: -12.792193412780762
    10. '	for' → logprob: -13.417193412780762

Token 1133: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06256090104579926
    2. 'x' → logprob: -2.812560796737671
    3. ' (' → logprob: -7.56256103515625
    4. '(' → logprob: -9.93756103515625
    5. '   ' → logprob: -11.06256103515625
    6. ' x' → logprob: -12.18756103515625
    7. '(block' → logprob: -13.81256103515625
    8. '(px' → logprob: -14.56256103515625
    9. 'block' → logprob: -14.93756103515625
    10. '(cx' → logprob: -15.06256103515625

Token 1134: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.3458322731312364e-06
    2. '(x' → logprob: -12.250007629394531
    3. ' x' → logprob: -13.375007629394531
    4. '   ' → logprob: -14.750007629394531
    5. ')x' → logprob: -15.500007629394531
    6. '```' → logprob: -15.875007629394531
    7. ')' → logprob: -17.12500762939453
    8. '	x' → logprob: -17.50000762939453
    9. ' ' → logprob: -17.62500762939453
    10. 'block' → logprob: -17.87500762939453

Token 1135: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.011079294607043266
    2. ',' → logprob: -4.51107931137085
    3. ' ,' → logprob: -10.511078834533691
    4. '           ' → logprob: -13.511078834533691
    5. ',x' → logprob: -14.011078834533691
    6. '_,' → logprob: -14.511078834533691
    7. ',
' → logprob: -15.261078834533691
    8. 'y' → logprob: -15.761078834533691
    9. ',Y' → logprob: -15.761078834533691
    10. ',(' → logprob: -15.886078834533691

Token 1136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013917774776928127
    2. '):
' → logprob: -9.875139236450195
    3. 'in' → logprob: -10.125139236450195
    4. ' )' → logprob: -10.375139236450195
    5. '               ' → logprob: -12.625139236450195
    6. '           ' → logprob: -12.875139236450195
    7. '   ' → logprob: -12.875139236450195
    8. '       ' → logprob: -13.250139236450195
    9. '):' → logprob: -13.500139236450195
    10. ' in' → logprob: -13.500139236450195

Token 1137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.535163938999176
    2. 'in' → logprob: -0.910163938999176
    3. '               ' → logprob: -5.660163879394531
    4. ':
' → logprob: -5.785163879394531
    5. ',' → logprob: -6.535163879394531
    6. 'if' → logprob: -6.785163879394531
    7. '           ' → logprob: -6.910163879394531
    8. ':' → logprob: -7.285163879394531
    9. ' if' → logprob: -8.285163879394531
    10. '       ' → logprob: -8.910163879394531

Token 1138: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.0015061709564179182
    2. ' piece' → logprob: -6.501506328582764
    3. '(piece' → logprob: -12.876505851745605
    4. 'block' → logprob: -14.876505851745605
    5. '
' → logprob: -15.001505851745605
    6. '   ' → logprob: -15.376505851745605
    7. '[' → logprob: -16.251506805419922
    8. 'bottom' → logprob: -16.376506805419922
    9. 'piec' → logprob: -17.251506805419922
    10. '           ' → logprob: -17.376506805419922

Token 1139: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3737594187259674
    2. ':
' → logprob: -1.248759388923645
    3. ':' → logprob: -3.7487595081329346
    4. ',' → logprob: -7.9987592697143555
    5. '       ' → logprob: -8.748759269714355
    6. '	           ' → logprob: -9.123759269714355
    7. '		       ' → logprob: -9.373759269714355
    8. '<|end|>' → logprob: -9.373759269714355
    9. '           ' → logprob: -9.623759269714355
    10. '):
' → logprob: -9.623759269714355

Token 1140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005096645909361541
    2. '```' → logprob: -7.750509738922119
    3. ' if' → logprob: -10.625509262084961
    4. '
' → logprob: -11.000509262084961
    5. '       ' → logprob: -11.125509262084961
    6. '           ' → logprob: -12.250509262084961
    7. ',' → logprob: -12.500509262084961
    8. '``' → logprob: -13.000509262084961
    9. '                   ' → logprob: -13.125509262084961
    10. '		       ' → logprob: -13.375509262084961

Token 1141: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12739188969135284
    2. 'if' (adapté à ' if') → logprob: -2.377391815185547
    3. '               ' → logprob: -4.252391815185547
    4. '                   ' → logprob: -5.127391815185547
    5. ' below' → logprob: -5.752391815185547
    6. 'below' → logprob: -6.377391815185547
    7. '   ' → logprob: -6.627391815185547
    8. '           ' → logprob: -9.127391815185547
    9. ' for' → logprob: -9.377391815185547
    10. '       ' → logprob: -9.502391815185547

Token 1142: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.011823891662061214
    2. 'not' → logprob: -5.761823654174805
    3. '(not' → logprob: -5.761823654174805
    4. '(x' → logprob: -6.261823654174805
    5. ' (' → logprob: -6.386823654174805
    6. 'all' → logprob: -6.886823654174805
    7. ' not' → logprob: -8.261823654174805
    8. 'y' → logprob: -8.511823654174805
    9. '(all' → logprob: -8.511823654174805
    10. '   ' → logprob: -9.386823654174805

Token 1143: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003656722605228424
    2. '(x' → logprob: -5.62865686416626
    3. ' x' → logprob: -10.628656387329102
    4. ' (' → logprob: -11.003656387329102
    5. '
' → logprob: -12.503656387329102
    6. 'y' → logprob: -12.753656387329102
    7. '(' → logprob: -12.753656387329102
    8. '   ' → logprob: -12.878656387329102
    9. 'not' → logprob: -14.128656387329102
    10. ')' → logprob: -14.503656387329102

Token 1144: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.03808612748980522
    2. ',' → logprob: -3.288086175918579
    3. ' ,' → logprob: -10.5380859375
    4. 'y' → logprob: -12.2880859375
    5. ',(' → logprob: -12.2880859375
    6. ',
' → logprob: -12.6630859375
    7. '_,' → logprob: -14.1630859375
    8. '
' → logprob: -14.2880859375
    9. ',x' → logprob: -14.4130859375
    10. ',int' → logprob: -14.4130859375

Token 1145: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3105350732803345
    2. ')' → logprob: -1.4355350732803345
    3. '[' → logprob: -5.310534954071045
    4. 'not' → logprob: -5.310534954071045
    5. ' -' → logprob: -5.435534954071045
    6. '+' → logprob: -5.435534954071045
    7. '(' → logprob: -5.685534954071045
    8. '   ' → logprob: -6.060534954071045
    9. ' not' → logprob: -6.810534954071045
    10. '==' → logprob: -7.810534954071045

Token 1146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013032146962359548
    2. ')' → logprob: -6.751303195953369
    3. '0' → logprob: -9.001303672790527
    4. ' ' → logprob: -11.876303672790527
    5. '(' → logprob: -14.501303672790527
    6. '```' → logprob: -14.626303672790527
    7. '   ' → logprob: -14.876303672790527
    8. ')>' → logprob: -15.626303672790527
    9. ')==' → logprob: -15.751303672790527
    10. '-' → logprob: -15.876303672790527

Token 1147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016703052446246147
    2. ' not' → logprob: -4.266703128814697
    3. 'not' → logprob: -6.016703128814697
    4. ' )' → logprob: -9.766702651977539
    5. '               ' → logprob: -10.641702651977539
    6. '   ' → logprob: -12.391702651977539
    7. '           ' → logprob: -13.141702651977539
    8. '                   ' → logprob: -13.391702651977539
    9. 'Not' → logprob: -13.516702651977539
    10. '	not' → logprob: -13.641702651977539

Token 1148: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11366216838359833
    2. 'not' → logprob: -2.2386622428894043
    3. ')' → logprob: -7.113662242889404
    4. '	not' → logprob: -11.988661766052246
    5. 'in' → logprob: -12.238661766052246
    6. ']' → logprob: -12.613661766052246
    7. ' in' → logprob: -12.738661766052246
    8. '   ' → logprob: -13.363661766052246
    9. '(not' → logprob: -13.613661766052246
    10. '               ' → logprob: -13.738661766052246

Token 1149: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1602390557527542
    2. ' in' → logprob: -1.9102391004562378
    3. '_in' → logprob: -11.535239219665527
    4. 'block' → logprob: -13.160239219665527
    5. 'not' → logprob: -14.660239219665527
    6. '	in' → logprob: -14.910239219665527
    7. '
' → logprob: -15.035239219665527
    8. ')' → logprob: -15.535239219665527
    9. 'In' → logprob: -15.535239219665527
    10. ' ' → logprob: -15.785239219665527

Token 1150: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0013290488859638572
    2. ' block' → logprob: -6.626328945159912
    3. 'piece' → logprob: -13.12632942199707
    4. '   ' → logprob: -14.87632942199707
    5. 'bottom' → logprob: -14.87632942199707
    6. '	block' → logprob: -16.12632942199707
    7. ' ' → logprob: -16.62632942199707
    8. '(block' → logprob: -17.25132942199707
    9. '```' → logprob: -17.25132942199707
    10. 'blocked' → logprob: -17.37632942199707

Token 1151: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0015652115689590573
    2. 'set' → logprob: -6.501564979553223
    3. '_to' → logprob: -10.376564979553223
    4. '   ' → logprob: -12.001564979553223
    5. 'et' → logprob: -12.001564979553223
    6. 'piece' → logprob: -12.876564979553223
    7. '
' → logprob: -12.876564979553223
    8. ')set' → logprob: -13.251564979553223
    9. '```' → logprob: -13.626564979553223
    10. 'block' → logprob: -13.626564979553223

Token 1152: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6119004487991333
    2. '                   ' → logprob: -1.4869004487991333
    3. ':' → logprob: -2.2369003295898438
    4. ' and' → logprob: -2.8619003295898438
    5. ' or' → logprob: -3.6119003295898438
    6. ':
' → logprob: -3.9869003295898438
    7. 'and' → logprob: -4.861900329589844
    8. '           ' → logprob: -4.986900329589844
    9. '                       ' → logprob: -5.486900329589844
    10. 'or' → logprob: -6.986900329589844

Token 1153: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002241727663204074
    2. '               ' → logprob: -7.502241611480713
    3. ' or' → logprob: -7.752241611480713
    4. ' and' → logprob: -7.752241611480713
    5. ':
' → logprob: -8.377242088317871
    6. ':' → logprob: -8.377242088317871
    7. '                       ' → logprob: -9.502242088317871
    8. '                    ' → logprob: -9.877242088317871
    9. '                  ' → logprob: -10.127242088317871
    10. '<|end|>' → logprob: -10.127242088317871

Token 1154: ' bottoms' (ID: 145726)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3181210160255432
    2. ' bottoms' → logprob: -2.0681209564208984
    3. '                       ' → logprob: -2.5681209564208984
    4. 'bottom' → logprob: -2.8181209564208984
    5. ' bottom' → logprob: -5.193120956420898
    6. '               ' → logprob: -5.818120956420898
    7. 'b' → logprob: -7.568120956420898
    8. '       ' → logprob: -8.193120956420898
    9. '           ' → logprob: -8.818120956420898
    10. '(bottom' → logprob: -10.193120956420898

Token 1155: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00039647609810344875
    2. '.' → logprob: -8.125396728515625
    3. '                   ' → logprob: -9.625396728515625
    4. 'append' → logprob: -11.000396728515625
    5. '                       ' → logprob: -11.750396728515625
    6. ' .' → logprob: -12.250396728515625
    7. '           ' → logprob: -13.375396728515625
    8. '               ' → logprob: -13.750396728515625
    9. '       ' → logprob: -14.875396728515625
    10. '().' → logprob: -14.875396728515625

Token 1156: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.12170746922492981
    2. '(x' → logprob: -2.3717074394226074
    3. '(' → logprob: -3.9967074394226074
    4. ' (' → logprob: -5.871707439422607
    5. '   ' → logprob: -9.996707916259766
    6. ' ((' → logprob: -10.621707916259766
    7. '(
' → logprob: -12.371707916259766
    8. ' ' → logprob: -13.621707916259766
    9. '[(' → logprob: -15.121707916259766
    10. '    ' → logprob: -15.246707916259766

Token 1157: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2664456789934775e-06
    2. ' x' → logprob: -13.625000953674316
    3. '(x' → logprob: -17.500001907348633
    4. ')x' → logprob: -18.250001907348633
    5. '	x' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '"x' → logprob: -21.625001907348633
    8. '{x' → logprob: -22.750001907348633
    9. '                   ' → logprob: -22.875001907348633
    10. ')' → logprob: -23.125001907348633

Token 1158: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.3417700529098511
    2. ',' → logprob: -1.341770052909851
    3. ',x' → logprob: -3.5917701721191406
    4. ' ,' → logprob: -8.34177017211914
    5. 'x' → logprob: -8.96677017211914
    6. ',
' → logprob: -9.34177017211914
    7. ',n' → logprob: -11.34177017211914
    8. '   ' → logprob: -11.59177017211914
    9. '           ' → logprob: -11.59177017211914
    10. '       ' → logprob: -11.71677017211914

Token 1159: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009371278807520866
    2. ')' → logprob: -5.134371280670166
    3. '))
' → logprob: -5.884371280670166
    4. '                   ' → logprob: -7.634371280670166
    5. '               ' → logprob: -9.009370803833008
    6. ')))' → logprob: -11.009370803833008
    7. '           ' → logprob: -11.884370803833008
    8. ')
' → logprob: -12.009370803833008
    9. '                       ' → logprob: -12.384370803833008
    10. ' ))' → logprob: -13.009370803833008

Token 1160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016858897870406508
    2. '       ' → logprob: -7.001686096191406
    3. 'bottom' → logprob: -8.126686096191406
    4. '
' → logprob: -8.626686096191406
    5. '   ' → logprob: -9.001686096191406
    6. '```' → logprob: -9.751686096191406
    7. ' bottom' → logprob: -10.751686096191406
    8. '          ' → logprob: -10.876686096191406
    9. '               ' → logprob: -11.251686096191406
    10. '<|end|>' → logprob: -11.376686096191406

Token 1161: ' bottom' (ID: 8725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9224915504455566
    2. '   ' → logprob: -1.2974915504455566
    3. 'bottom' (adapté à ' bottom') → logprob: -1.9224915504455566
    4. '           ' → logprob: -2.1724915504455566
    5. ' bottom' → logprob: -3.1724915504455566
    6. '
' → logprob: -4.172491550445557
    7. 'piece' → logprob: -5.547491550445557
    8. '```' → logprob: -5.672491550445557
    9. '    
' → logprob: -7.422491550445557
    10. '        
' → logprob: -7.672491550445557

Token 1162: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.0007943779928609729
    2. 's' → logprob: -7.250794410705566
    3. 'blocks' → logprob: -9.750794410705566
    4. '   ' → logprob: -12.500794410705566
    5. '```' → logprob: -12.500794410705566
    6. 'Blocks' → logprob: -12.875794410705566
    7. '
' → logprob: -13.125794410705566
    8. '_' → logprob: -13.125794410705566
    9. '       ' → logprob: -13.375794410705566
    10. '_tokens' → logprob: -13.750794410705566

Token 1163: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.051816124469041824
    2. '.' → logprob: -3.17681622505188
    3. '=' → logprob: -4.801815986633301
    4. '.=' → logprob: -8.3018159866333
    5. ' =' → logprob: -8.9268159866333
    6. ' .' → logprob: -10.1768159866333
    7. 'append' → logprob: -10.5518159866333
    8. '.extend' → logprob: -10.5518159866333
    9. '.app' → logprob: -10.6768159866333
    10. '+=' → logprob: -10.6768159866333

Token 1164: '(bottom' (ID: 114240)
  Prédit: '(bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bottom' → logprob: -0.06197575107216835
    2. 'bottom' → logprob: -2.8119757175445557
    3. '(' → logprob: -12.686975479125977
    4. ' bottom' → logprob: -12.686975479125977
    5. ' bottoms' → logprob: -14.311975479125977
    6. '   ' → logprob: -15.686975479125977
    7. '(bounds' → logprob: -15.811975479125977
    8. '(block' → logprob: -16.311975479125977
    9. '(
' → logprob: -16.311975479125977
    10. '(bot' → logprob: -16.561975479125977

Token 1165: 's' (ID: 82)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.18412163853645325
    2. 's' → logprob: -1.8091216087341309
    3. ')' → logprob: -6.059121608734131
    4. 'cks' → logprob: -8.184122085571289
    5. 'Blocks' → logprob: -8.309122085571289
    6. 'blocks' → logprob: -8.684122085571289
    7. '])' → logprob: -8.684122085571289
    8. 'ocks' → logprob: -8.809122085571289
    9. ')_' → logprob: -8.934122085571289
    10. ')]' → logprob: -9.059122085571289

Token 1166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038611164782196283
    2. '       ' → logprob: -5.628860950469971
    3. ')
' → logprob: -8.503861427307129
    4. '
' → logprob: -10.128861427307129
    5. '   ' → logprob: -12.003861427307129
    6. '           ' → logprob: -12.253861427307129
    7. ')

' → logprob: -13.378861427307129
    8. ' )' → logprob: -13.628861427307129
    9. '<|end|>' → logprob: -14.003861427307129
    10. '))' → logprob: -14.378861427307129

Token 1167: '       ' (ID: 309)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.024191951379179955
    2. '       ' → logprob: -4.024191856384277
    3. 'def' → logprob: -5.899191856384277
    4. '
' → logprob: -6.774191856384277
    5. '   ' → logprob: -7.274191856384277
    6. 'for' → logprob: -8.149191856384277
    7. 'weight' → logprob: -8.149191856384277
    8. 'acc' → logprob: -8.399191856384277
    9. 'import' → logprob: -9.024191856384277
    10. '```' → logprob: -9.149191856384277

Token 1168: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17938511073589325
    2. 'acc' → logprob: -2.304385185241699
    3. 'piece' → logprob: -3.429385185241699
    4. 'import' → logprob: -4.429385185241699
    5. 'from' → logprob: -5.179385185241699
    6. '#' → logprob: -5.179385185241699
    7. 'weight' → logprob: -5.804385185241699
    8. '       ' → logprob: -6.429385185241699
    9. 'memo' → logprob: -7.179385185241699
    10. 'dp' → logprob: -7.179385185241699

Token 1169: ' piece' (ID: 9047)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5816159844398499
    2. 'piece' → logprob: -1.956615924835205
    3. 'pw' → logprob: -2.206615924835205
    4. 'w' → logprob: -2.831615924835205
    5. ' i' → logprob: -3.081615924835205
    6. ' pw' → logprob: -3.706615924835205
    7. 'p' → logprob: -3.956615924835205
    8. ' piece' → logprob: -4.081615924835205
    9. 'weight' → logprob: -4.831615924835205
    10. ' w' → logprob: -5.456615924835205

Token 1170: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.469661831855774
    2. ' in' → logprob: -1.469661831855774
    3. '_weight' → logprob: -1.469661831855774
    4. '_' → logprob: -1.594661831855774
    5. ',' → logprob: -3.7196617126464844
    6. '_idx' → logprob: -4.094661712646484
    7. '_i' → logprob: -4.094661712646484
    8. '_in' → logprob: -4.469661712646484
    9. ')' → logprob: -5.219661712646484
    10. '_weights' → logprob: -5.344661712646484

Token 1171: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.030040539801120758
    2. 'range' → logprob: -3.5300405025482178
    3. 'enumer' → logprob: -9.030040740966797
    4. 'bottom' → logprob: -9.405040740966797
    5. 'piece' → logprob: -9.905040740966797
    6. ' pieces' → logprob: -10.780040740966797
    7. ' range' → logprob: -11.405040740966797
    8. 'parts' → logprob: -13.280040740966797
    9. '(range' → logprob: -14.405040740966797
    10. 'p' → logprob: -14.405040740966797

Token 1172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1335287243127823
    2. ':
' → logprob: -2.383528709411621
    3. '           ' → logprob: -3.508528709411621
    4. '       ' → logprob: -6.758528709411621
    5. ',' → logprob: -7.008528709411621
    6. '[' → logprob: -8.008528709411621
    7. '   ' → logprob: -8.883528709411621
    8. '=' → logprob: -9.633528709411621
    9. '):' → logprob: -9.883528709411621
    10. '):
' → logprob: -10.633528709411621

Token 1173: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010550870560109615
    2. '           ' → logprob: -5.1355509757995605
    3. '       ' → logprob: -5.3855509757995605
    4. '```' → logprob: -11.385550498962402
    5. ':
' → logprob: -11.885550498962402
    6. 'weight' → logprob: -12.760550498962402
    7. 'piece' → logprob: -12.760550498962402
    8. ' weight' → logprob: -13.510550498962402
    9. ':' → logprob: -14.010550498962402
    10. '(piece' → logprob: -14.260550498962402

Token 1174: ' #' (ID: 1069)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6002057790756226
    2. 'weight' → logprob: -0.8502057790756226
    3. 'pw' → logprob: -4.850205898284912
    4. 'wt' → logprob: -5.600205898284912
    5. 'count' → logprob: -5.850205898284912
    6. '   ' → logprob: -5.850205898284912
    7. 'n' → logprob: -6.475205898284912
    8. 'piece' → logprob: -6.600205898284912
    9. 'cnt' → logprob: -6.725205898284912
    10. 'total' → logprob: -6.975205898284912

Token 1175: ' center' (ID: 6170)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6625978946685791
    2. 'weight' → logprob: -0.7875978946685791
    3. 'wt' → logprob: -4.28759765625
    4. 'total' → logprob: -5.41259765625
    5. 'pw' → logprob: -5.66259765625
    6. 'cnt' → logprob: -6.16259765625
    7. 'count' → logprob: -6.41259765625
    8. '   ' → logprob: -7.16259765625
    9. 'num' → logprob: -7.41259765625
    10. 'n' → logprob: -7.78759765625

Token 1176: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.004818495828658342
    2. '_' → logprob: -5.754818439483643
    3. 'x' → logprob: -6.879818439483643
    4. '_of' → logprob: -8.1298189163208
    5. 'piece' → logprob: -9.0048189163208
    6. 'of' → logprob: -9.7548189163208
    7. '_piece' → logprob: -10.0048189163208
    8. '_weight' → logprob: -10.5048189163208
    9. '```' → logprob: -11.2548189163208
    10. 'for' → logprob: -11.2548189163208

Token 1177: ' of' (ID: 328)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.7569106221199036
    2. ' =' → logprob: -2.131910562515259
    3. 's' → logprob: -2.381910562515259
    4. '_piece' → logprob: -2.381910562515259
    5. '_sum' → logprob: -2.631910562515259
    6. '=' → logprob: -2.631910562515259
    7. '_of' → logprob: -3.506910562515259
    8. '_coords' → logprob: -3.756910562515259
    9. '_points' → logprob: -5.506910800933838
    10. '_' → logprob: -5.756910800933838

Token 1178: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.4201192557811737
    2. 'sum' → logprob: -1.670119285583496
    3. 'blocks' → logprob: -2.170119285583496
    4. '
' → logprob: -4.045119285583496
    5. 'block' → logprob: -5.045119285583496
    6. '(piece' → logprob: -5.545119285583496
    7. '[(' → logprob: -5.795119285583496
    8. '[' → logprob: -6.295119285583496
    9. '[
' → logprob: -6.420119285583496
    10. '[p' → logprob: -6.795119285583496

Token 1179: ':' (ID: 25)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.2890384793281555
    2. '=' → logprob: -2.6640384197235107
    3. 'sum' → logprob: -2.9140384197235107
    4. ' =' → logprob: -3.2890384197235107
    5. '_x' → logprob: -4.03903865814209
    6. 's' → logprob: -4.16403865814209
    7. '_s' → logprob: -5.41403865814209
    8. '_n' → logprob: -5.41403865814209
    9. '_center' → logprob: -5.41403865814209
    10. '_piece' → logprob: -5.41403865814209

Token 1180: ' average' (ID: 7848)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -1.162164568901062
    2. 'sum' → logprob: -1.412164568901062
    3. '(cx' → logprob: -2.0371646881103516
    4. 's' → logprob: -2.2871646881103516
    5. ' cx' → logprob: -3.5371646881103516
    6. 'w' → logprob: -3.6621646881103516
    7. '   ' → logprob: -3.9121646881103516
    8. 'total' → logprob: -3.9121646881103516
    9. 'center' → logprob: -4.162164688110352
    10. 'sx' → logprob: -4.412164688110352

Token 1181: ' of' (ID: 328)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.11202404648065567
    2. '=' → logprob: -3.2370240688323975
    3. '(' → logprob: -3.7370240688323975
    4. 'x' → logprob: -3.9870240688323975
    5. ' =' → logprob: -4.862023830413818
    6. '_' → logprob: -5.737023830413818
    7. '((' → logprob: -5.987023830413818
    8. '(
' → logprob: -6.112023830413818
    9. '_=' → logprob: -6.237023830413818
    10. '(sum' → logprob: -6.987023830413818

Token 1182: ' block' (ID: 4355)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2946535348892212
    2. '[x' → logprob: -1.5446535348892212
    3. '[(' → logprob: -4.544653415679932
    4. 'block' → logprob: -4.669653415679932
    5. '(b' → logprob: -4.919653415679932
    6. '[' → logprob: -5.169653415679932
    7. '[b' → logprob: -5.544653415679932
    8. '(block' → logprob: -5.669653415679932
    9. '([' → logprob: -7.669653415679932
    10. 'x' → logprob: -8.29465389251709

Token 1183: ' centers' (ID: 26037)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.337507724761963
    2. '(' → logprob: -1.712507724761963
    3. '_x' → logprob: -2.212507724761963
    4. '[
' → logprob: -2.212507724761963
    5. '(
' → logprob: -2.837507724761963
    6. '_center' → logprob: -2.837507724761963
    7. 's' → logprob: -2.962507724761963
    8. '_' → logprob: -3.837507724761963
    9. '   ' → logprob: -3.837507724761963
    10. 'x' → logprob: -4.212507724761963

Token 1184: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1253018379211426
    2. ' =' → logprob: -1.1253018379211426
    3. '(' → logprob: -2.8753018379211426
    4. '(
' → logprob: -3.2503018379211426
    5. '(piece' → logprob: -3.2503018379211426
    6. '_x' → logprob: -3.3753018379211426
    7. ' (' → logprob: -3.7503018379211426
    8. '           ' → logprob: -4.000301837921143
    9. ' +=' → logprob: -4.375301837921143
    10. '
' → logprob: -4.500301837921143

Token 1185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029009530320763588
    2. '       ' → logprob: -3.7790095806121826
    3. '   ' → logprob: -6.1540093421936035
    4. '```' → logprob: -6.7790093421936035
    5. '               ' → logprob: -7.4040093421936035
    6. 'center' → logprob: -8.029009819030762
    7. '_center' → logprob: -8.529009819030762
    8. '
' → logprob: -8.654009819030762
    9. '_sum' → logprob: -8.904009819030762
    10. '=' → logprob: -8.904009819030762

Token 1186: ' s' (ID: 265)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8297435641288757
    2. 'total' → logprob: -1.7047436237335205
    3. 's' (adapté à ' s') → logprob: -2.0797436237335205
    4. 'sx' → logprob: -2.8297436237335205
    5. '   ' → logprob: -3.2047436237335205
    6. 'cx' → logprob: -3.3297436237335205
    7. '           ' → logprob: -3.7047436237335205
    8. 'weight' → logprob: -3.7047436237335205
    9. 'wx' → logprob: -3.9547436237335205
    10. 'w' → logprob: -4.329743385314941

Token 1187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6284456849098206
    2. 'um' → logprob: -0.8784456849098206
    3. ' =' → logprob: -3.003445625305176
    4. '_' → logprob: -6.878445625305176
    5. 'u' → logprob: -8.878445625305176
    6. '=sum' → logprob: -9.128445625305176
    7. '   ' → logprob: -10.253445625305176
    8. '_=' → logprob: -10.503445625305176
    9. '=
' → logprob: -11.128445625305176
    10. ' ' → logprob: -11.128445625305176

Token 1188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016265720478259027
    2. 'sum' → logprob: -9.250163078308105
    3. ' ' → logprob: -9.750163078308105
    4. ' sum' → logprob: -11.750163078308105
    5. '(sum' → logprob: -15.375163078308105
    6. '   ' → logprob: -16.50016212463379
    7. '+' → logprob: -17.37516212463379
    8. 's' → logprob: -17.50016212463379
    9. '           ' → logprob: -18.12516212463379
    10. '=' → logprob: -18.25016212463379

Token 1189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017033906187862158
    2. 'sum' → logprob: -6.376703262329102
    3. ' sum' → logprob: -14.251703262329102
    4. ' ' → logprob: -15.126703262329102
    5. '(sum' → logprob: -16.0017032623291
    6. '
' → logprob: -17.0017032623291
    7. '```' → logprob: -17.2517032623291
    8. 'len' → logprob: -17.3767032623291
    9. '   ' → logprob: -17.6267032623291
    10. '=' → logprob: -17.6267032623291

Token 1190: '.' (ID: 13)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14096422493457794
    2. '           ' → logprob: -2.6409642696380615
    3. ' +' → logprob: -4.015964031219482
    4. '+=' → logprob: -4.015964031219482
    5. 'for' → logprob: -4.390964031219482
    6. '
' → logprob: -5.515964031219482
    7. ' +=' → logprob: -6.265964031219482
    8. '       ' → logprob: -6.515964031219482
    9. '+
' → logprob: -7.265964031219482
    10. '=' → logprob: -7.265964031219482

Token 1191: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.24887989461421967
    2. '0' → logprob: -2.248879909515381
    3. 'for' → logprob: -2.373879909515381
    4. '       ' → logprob: -4.498879909515381
    5. '           ' → logprob: -5.373879909515381
    6. ' for' → logprob: -5.998879909515381
    7. ' ' → logprob: -7.373879909515381
    8. '   ' → logprob: -7.623879909515381
    9. '        ' → logprob: -7.998879909515381
    10. '.' → logprob: -8.123879432678223

Token 1192: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40066850185394287
    2. 'for' → logprob: -1.4006685018539429
    3. ' for' → logprob: -2.7756686210632324
    4. '+' → logprob: -4.775668621063232
    5. '       ' → logprob: -5.900668621063232
    6. '=' → logprob: -6.400668621063232
    7. '*' → logprob: -6.525668621063232
    8. '               ' → logprob: -6.775668621063232
    9. ',' → logprob: -7.150668621063232
    10. '          ' → logprob: -7.275668621063232

Token 1193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18135042488574982
    2. 'for' → logprob: -2.1813504695892334
    3. ' for' → logprob: -3.0563504695892334
    4. '+' → logprob: -5.556350231170654
    5. '               ' → logprob: -7.556350231170654
    6. '       ' → logprob: -8.181350708007812
    7. ' +' → logprob: -8.181350708007812
    8. '                   ' → logprob: -8.556350708007812
    9. '   ' → logprob: -8.681350708007812
    10. '		' → logprob: -9.681350708007812

Token 1194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006379375699907541
    2. '           ' → logprob: -5.2563796043396
    3. ' for' → logprob: -6.8813796043396
    4. '       ' → logprob: -10.131379127502441
    5. '   ' → logprob: -10.381379127502441
    6. '               ' → logprob: -10.756379127502441
    7. 's' → logprob: -11.006379127502441
    8. 'count' → logprob: -13.131379127502441
    9. 'n' → logprob: -13.381379127502441
    10. '	for' → logprob: -13.506379127502441

Token 1195: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.010975898243486881
    2. ' (' → logprob: -5.0109758377075195
    3. 'x' → logprob: -5.5109758377075195
    4. 'block' → logprob: -9.38597583770752
    5. '(' → logprob: -9.76097583770752
    6. 'b' → logprob: -10.63597583770752
    7. '(b' → logprob: -11.51097583770752
    8. '(px' → logprob: -11.76097583770752
    9. '(block' → logprob: -12.01097583770752
    10. '   ' → logprob: -12.38597583770752

Token 1196: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.375001907348633
    3. '(x' → logprob: -17.625001907348633
    4. ')x' → logprob: -18.750001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '	x' → logprob: -20.250001907348633
    7. '```' → logprob: -20.875001907348633
    8. ',x' → logprob: -21.000001907348633
    9. ',' → logprob: -22.125001907348633
    10. '
' → logprob: -22.375001907348633

Token 1197: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.04016059264540672
    2. ',' → logprob: -3.290160655975342
    3. ',x' → logprob: -6.540160655975342
    4. '+' → logprob: -8.040160179138184
    5. ',+' → logprob: -9.165160179138184
    6. ' ,' → logprob: -9.165160179138184
    7. ',s' → logprob: -9.290160179138184
    8. '+,' → logprob: -11.165160179138184
    9. ',
' → logprob: -11.790160179138184
    10. '```' → logprob: -13.040160179138184

Token 1198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025642864406108856
    2. '):
' → logprob: -4.4006428718566895
    3. '+' → logprob: -5.1506428718566895
    4. ')+' → logprob: -5.9006428718566895
    5. ',' → logprob: -6.1506428718566895
    6. '):' → logprob: -6.5256428718566895
    7. ')
' → logprob: -8.775642395019531
    8. '   ' → logprob: -9.025642395019531
    9. ' )' → logprob: -9.150642395019531
    10. '```' → logprob: -9.400642395019531

Token 1199: ' in' (ID: 306)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018543902784585953
    2. ':' → logprob: -4.768543720245361
    3. '               ' → logprob: -6.268543720245361
    4. ' +' → logprob: -6.268543720245361
    5. ':
' → logprob: -6.393543720245361
    6. '+=' → logprob: -6.518543720245361
    7. '+s' → logprob: -7.143543720245361
    8. '           ' → logprob: -7.768543720245361
    9. '   ' → logprob: -8.01854419708252
    10. ' +=' → logprob: -8.26854419708252

Token 1200: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.05946725234389305
    2. ' piece' → logprob: -3.559467315673828
    3. 'range' → logprob: -4.434467315673828
    4. 's' → logprob: -5.059467315673828
    5. '(piece' → logprob: -5.934467315673828
    6. 'bottom' → logprob: -6.184467315673828
    7. 'pieces' → logprob: -6.309467315673828
    8. ' range' → logprob: -6.434467315673828
    9. 'x' → logprob: -6.434467315673828
    10. 'block' → logprob: -8.434467315673828

Token 1201: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11336707323789597
    2. ':' → logprob: -2.9883670806884766
    3. ':
' → logprob: -3.6133670806884766
    4. ' +' → logprob: -4.363367080688477
    5. '               ' → logprob: -5.113367080688477
    6. '           ' → logprob: -5.613367080688477
    7. '+s' → logprob: -5.863367080688477
    8. '+=' → logprob: -6.738367080688477
    9. ' +=' → logprob: -7.113367080688477
    10. '   ' → logprob: -7.113367080688477

Token 1202: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008805898949503899
    2. '           ' → logprob: -4.883805751800537
    3. 's' → logprob: -7.758805751800537
    4. ' s' → logprob: -8.258806228637695
    5. '       ' → logprob: -8.508806228637695
    6. '	           ' → logprob: -9.508806228637695
    7. '	       ' → logprob: -9.883806228637695
    8. '   ' → logprob: -10.383806228637695
    9. '```' → logprob: -10.508806228637695
    10. '                   ' → logprob: -10.633806228637695

Token 1203: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.17326976358890533
    2. ' s' → logprob: -1.9232697486877441
    3. '               ' → logprob: -4.548269748687744
    4. '                   ' → logprob: -6.173269748687744
    5. '           ' → logprob: -8.673270225524902
    6. '
' → logprob: -10.673270225524902
    7. ' ' → logprob: -10.798270225524902
    8. '   ' → logprob: -11.173270225524902
    9. '                ' → logprob: -11.173270225524902
    10. '                       ' → logprob: -11.673270225524902

Token 1204: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07893308252096176
    2. ' +=' → logprob: -2.578933000564575
    3. '+' → logprob: -10.828932762145996
    4. ']+=' → logprob: -11.203932762145996
    5. '+=(' → logprob: -12.828932762145996
    6. '+='' → logprob: -13.453932762145996
    7. '    ' → logprob: -13.578932762145996
    8. '   ' → logprob: -14.078932762145996
    9. '+="' → logprob: -14.078932762145996
    10. '```' → logprob: -14.203932762145996

Token 1205: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008622847497463226
    2. '(x' → logprob: -4.758622646331787
    3. ' x' → logprob: -11.883623123168945
    4. ' (' → logprob: -14.383623123168945
    5. '0' → logprob: -14.633623123168945
    6. '   ' → logprob: -15.008623123168945
    7. '(' → logprob: -17.508623123168945
    8. '           ' → logprob: -18.008623123168945
    9. '	x' → logprob: -18.383623123168945
    10. '```' → logprob: -18.383623123168945

Token 1206: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06998179107904434
    2. ' +' → logprob: -2.694981813430786
    3. '.' → logprob: -11.444981575012207
    4. '<|end|>' → logprob: -11.569981575012207
    5. '0' → logprob: -11.944981575012207
    6. '               ' → logprob: -12.444981575012207
    7. '           ' → logprob: -12.694981575012207
    8. '       ' → logprob: -13.319981575012207
    9. ')+' → logprob: -13.444981575012207
    10. '+
' → logprob: -13.444981575012207

Token 1207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '.' → logprob: -14.50000286102295
    4. ' .' → logprob: -21.375001907348633
    5. '   ' → logprob: -23.125001907348633
    6. '
' → logprob: -23.625001907348633
    7. '```' → logprob: -23.625001907348633
    8. '۰' → logprob: -23.875001907348633
    9. '  ' → logprob: -24.000001907348633
    10. ' ' → logprob: -24.375001907348633

Token 1208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '.' → logprob: -15.375000953674316
    4. '```' → logprob: -21.75
    5. '   ' → logprob: -22.375
    6. '1' → logprob: -23.375
    7. '۰' → logprob: -23.75
    8. ' .' → logprob: -24.25
    9. '
' → logprob: -24.25
    10. '`' → logprob: -24.25

Token 1209: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.750000953674316
    3. '.
' → logprob: -16.5
    4. '`.' → logprob: -16.625
    5. ' .' → logprob: -17.0
    6. '‌.' → logprob: -18.25
    7. '```' → logprob: -18.25
    8. '           ' → logprob: -18.875
    9. '<|end|>' → logprob: -19.25
    10. '.

' → logprob: -19.25

Token 1210: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. '0' → logprob: -18.25
    3. '```' → logprob: -18.75
    4. '50' → logprob: -19.5
    5. '۵' → logprob: -19.75
    6. ' ' → logprob: -19.75
    7. '٥' → logprob: -20.25
    8. '   ' → logprob: -20.5625
    9. '500' → logprob: -20.6875
    10. '.' → logprob: -20.75

Token 1211: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48072341084480286
    2. '       ' → logprob: -1.3557233810424805
    3. ')' → logprob: -2.7307233810424805
    4. '   ' → logprob: -3.9807233810424805
    5. '<|end|>' → logprob: -4.1057233810424805
    6. '               ' → logprob: -5.4807233810424805
    7. '
' → logprob: -5.7307233810424805
    8. ' ' → logprob: -5.9807233810424805
    9. ',' → logprob: -6.2307233810424805
    10. '    ' → logprob: -6.3557233810424805

Token 1212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1240287572145462
    2. '       ' → logprob: -3.1240286827087402
    3. '/' → logprob: -3.2490286827087402
    4. ' /' → logprob: -4.49902868270874
    5. '
' → logprob: -5.24902868270874
    6. '   ' → logprob: -5.37402868270874
    7. '```' → logprob: -5.62402868270874
    8. ',' → logprob: -6.37402868270874
    9. 's' → logprob: -7.12402868270874
    10. '/count' → logprob: -7.24902868270874

Token 1213: ' piece' (ID: 9047)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.456680029630661
    2. 'piece' (adapté à ' piece') → logprob: -1.9566800594329834
    3. '           ' → logprob: -2.9566800594329834
    4. 's' → logprob: -2.9566800594329834
    5. 'center' → logprob: -2.9566800594329834
    6. '   ' → logprob: -3.2066800594329834
    7. ' piece' → logprob: -4.456679821014404
    8. ' s' → logprob: -4.956679821014404
    9. '```' → logprob: -6.206679821014404
    10. 'n' → logprob: -6.456679821014404

Token 1214: '_center' (ID: 48737)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0034338808618485928
    2. '_center' → logprob: -5.753433704376221
    3. '_size' → logprob: -9.253434181213379
    4. '_length' → logprob: -9.253434181213379
    5. '_len' → logprob: -10.503434181213379
    6. '_weights' → logprob: -11.253434181213379
    7. 'len' → logprob: -12.378434181213379
    8. 'weight' → logprob: -12.503434181213379
    9. '_width' → logprob: -13.003434181213379
    10. '_count' → logprob: -13.128434181213379

Token 1215: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -14.25000286102295
    3. 'x' → logprob: -14.87500286102295
    4. '[' → logprob: -15.00000286102295
    5. 's' → logprob: -15.25000286102295
    6. ' _' → logprob: -15.62500286102295
    7. '[_' → logprob: -16.125001907348633
    8. '_y' → logprob: -16.375001907348633
    9. '"_' → logprob: -16.375001907348633
    10. '=' → logprob: -16.500001907348633

Token 1216: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023047674039844424
    2. '.' → logprob: -8.87523078918457
    3. 'append' → logprob: -10.25023078918457
    4. ' .' → logprob: -11.37523078918457
    5. '_append' → logprob: -11.75023078918457
    6. '[-' → logprob: -12.12523078918457
    7. '.push' → logprob: -12.37523078918457
    8. '[p' → logprob: -12.75023078918457
    9. '.extend' → logprob: -12.75023078918457
    10. ',' → logprob: -12.75023078918457

Token 1217: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1394841969013214
    2. ' s' → logprob: -2.389484167098999
    3. '(s' → logprob: -3.264484167098999
    4. '(' → logprob: -8.514484405517578
    5. ' (' → logprob: -9.764484405517578
    6. 'len' → logprob: -11.139484405517578
    7. '(len' → logprob: -11.764484405517578
    8. '   ' → logprob: -11.889484405517578
    9. 'sum' → logprob: -12.764484405517578
    10. '((' → logprob: -12.764484405517578

Token 1218: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10020774602890015
    2. ' /' → logprob: -2.350207805633545
    3. ')' → logprob: -14.350207328796387
    4. '/
' → logprob: -16.350208282470703
    5. ' /
' → logprob: -16.350208282470703
    6. '/(' → logprob: -16.475208282470703
    7. '/p' → logprob: -17.475208282470703
    8. '[len' → logprob: -17.600208282470703
    9. ')/' → logprob: -17.600208282470703
    10. ' ' → logprob: -17.725208282470703

Token 1219: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.696889623621246e-06
    2. ' len' → logprob: -13.25000286102295
    3. '(len' → logprob: -14.00000286102295
    4. '           ' → logprob: -17.750001907348633
    5. '[len' → logprob: -18.000001907348633
    6. '	len' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.375001907348633
    8. '       ' → logprob: -21.625001907348633
    9. '
' → logprob: -22.000001907348633
    10. '=len' → logprob: -22.375001907348633

Token 1220: '(piece' (ID: 172522)
  Prédit: '(piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(piece' → logprob: -9.13388703338569e-06
    2. 'piece' → logprob: -11.625009536743164
    3. '(p' → logprob: -16.375009536743164
    4. '(' → logprob: -17.750009536743164
    5. '(
' → logprob: -19.250009536743164
    6. ' (' → logprob: -19.375009536743164
    7. '(part' → logprob: -19.875009536743164
    8. ' piece' → logprob: -19.875009536743164
    9. ')' → logprob: -20.125009536743164
    10. '```' → logprob: -21.250009536743164

Token 1221: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12694260478019714
    2. ')' → logprob: -2.1269426345825195
    3. ')
' → logprob: -11.75194263458252
    4. '))
' → logprob: -12.75194263458252
    5. '           ' → logprob: -13.50194263458252
    6. '       ' → logprob: -13.62694263458252
    7. ')))' → logprob: -15.00194263458252
    8. '])' → logprob: -15.62694263458252
    9. '),' → logprob: -15.87694263458252
    10. '   ' → logprob: -16.126941680908203

Token 1222: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07127275317907333
    2. 'piece' → logprob: -2.696272850036621
    3. '(piece' → logprob: -6.946272850036621
    4. '   ' → logprob: -8.821272850036621
    5. '```' → logprob: -9.696272850036621
    6. '           ' → logprob: -9.821272850036621
    7. ' piece' → logprob: -9.821272850036621
    8. ')' → logprob: -11.446272850036621
    9. 'for' → logprob: -11.446272850036621
    10. '_piece' → logprob: -11.571272850036621

Token 1223: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' (adapté à ' piece') → logprob: -0.022557249292731285
    2. '       ' → logprob: -4.022557258605957
    3. '           ' → logprob: -5.522557258605957
    4. '   ' → logprob: -8.647557258605957
    5. '(piece' → logprob: -9.397557258605957
    6. ' piece' → logprob: -10.022557258605957
    7. '```' → logprob: -10.522557258605957
    8. 'bottom' → logprob: -11.522557258605957
    9. 'weight' → logprob: -11.772557258605957
    10. '               ' → logprob: -11.897557258605957

Token 1224: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -2.45848218582978e-06
    2. '_weights' → logprob: -13.62500286102295
    3. 'weight' → logprob: -15.25000286102295
    4. '_length' → logprob: -15.25000286102295
    5. '_size' → logprob: -15.62500286102295
    6. '_w' → logprob: -15.87500286102295
    7. '_WEIGHT' → logprob: -16.125001907348633
    8. 'Weight' → logprob: -16.250001907348633
    9. '_' → logprob: -16.875001907348633
    10. '```' → logprob: -17.625001907348633

Token 1225: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00024739265791140497
    2. '.' → logprob: -8.37524700164795
    3. ' .' → logprob: -11.12524700164795
    4. '_append' → logprob: -14.00024700164795
    5. 'append' → logprob: -14.12524700164795
    6. '.extend' → logprob: -15.62524700164795
    7. '.app' → logprob: -15.87524700164795
    8. '=' → logprob: -17.125247955322266
    9. '.push' → logprob: -17.875247955322266
    10. ' =' → logprob: -17.875247955322266

Token 1226: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02990507148206234
    2. '(len' → logprob: -3.529905080795288
    3. ' len' → logprob: -8.779905319213867
    4. 'float' → logprob: -14.154905319213867
    5. '[len' → logprob: -16.529905319213867
    6. '(float' → logprob: -18.154905319213867
    7. '	len' → logprob: -18.154905319213867
    8. '(' → logprob: -18.529905319213867
    9. '=len' → logprob: -18.654905319213867
    10. '   ' → logprob: -19.404905319213867

Token 1227: '(piece' (ID: 172522)
  Prédit: '(piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(piece' → logprob: -2.7133641196996905e-05
    2. '(' → logprob: -10.62502670288086
    3. '(p' → logprob: -13.12502670288086
    4. ' (' → logprob: -14.87502670288086
    5. ')' → logprob: -15.62502670288086
    6. '(
' → logprob: -16.12502670288086
    7. 'piece' → logprob: -16.62502670288086
    8. '(part' → logprob: -17.12502670288086
    9. '(pi' → logprob: -18.37502670288086
    10. '(pair' → logprob: -19.50002670288086

Token 1228: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018155913800001144
    2. ')' → logprob: -4.018156051635742
    3. '))
' → logprob: -13.018156051635742
    4. ')
' → logprob: -13.393156051635742
    5. '       ' → logprob: -14.268156051635742
    6. ')))' → logprob: -14.268156051635742
    7. '           ' → logprob: -14.393156051635742
    8. '   ' → logprob: -15.518156051635742
    9. ' ))' → logprob: -15.643156051635742
    10. '),' → logprob: -16.893156051635742

Token 1229: '       ' (ID: 309)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.025027669966220856
    2. 'def' → logprob: -3.9000277519226074
    3. '#' → logprob: -6.650027751922607
    4. 'M' → logprob: -6.775027751922607
    5. 'piece' → logprob: -7.525027751922607
    6. 'weight' → logprob: -7.900027751922607
    7. '   ' → logprob: -8.02502727508545
    8. '       ' → logprob: -8.52502727508545
    9. 'cum' → logprob: -9.02502727508545
    10. 'dp' → logprob: -9.65002727508545

Token 1230: ' #' (ID: 1069)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.2866345942020416
    2. 'def' → logprob: -1.4116345643997192
    3. '#' (adapté à ' #') → logprob: -6.41163444519043
    4. 'M' → logprob: -7.16163444519043
    5. 'piece' → logprob: -7.53663444519043
    6. 'import' → logprob: -7.53663444519043
    7. '   ' → logprob: -7.78663444519043
    8. 'dp' → logprob: -7.78663444519043
    9. 'weight' → logprob: -8.03663444519043
    10. '       ' → logprob: -8.53663444519043

Token 1231: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18550239503383636
    2. 'acc' → logprob: -2.185502290725708
    3. 'import' → logprob: -3.060502290725708
    4. 'from' → logprob: -4.810502529144287
    5. '#' → logprob: -7.560502529144287
    6. 'sys' → logprob: -7.685502529144287
    7. 'dp' → logprob: -8.310502052307129
    8. 'M' → logprob: -8.560502052307129
    9. 'visited' → logprob: -8.685502052307129
    10. 'sub' → logprob: -9.435502052307129

Token 1232: ' compute' (ID: 23864)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2774409055709839
    2. 'visited' → logprob: -1.7774409055709839
    3. 'need' → logprob: -3.1524410247802734
    4. '#' → logprob: -4.152441024780273
    5. 'acc' → logprob: -5.152441024780273
    6. 'define' → logprob: -6.152441024780273
    7. 'have' → logprob: -6.402441024780273
    8. 'continue' → logprob: -7.152441024780273
    9. 'weight' → logprob: -7.277441024780273
    10. 'ights' → logprob: -7.777441024780273

Token 1233: ' accumulated' (ID: 64757)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4067297875881195
    2. 'import' → logprob: -1.656729817390442
    3. 'acc' → logprob: -2.0317296981811523
    4. 'from' → logprob: -4.906729698181152
    5. '   ' → logprob: -6.781729698181152
    6. '#' → logprob: -7.156729698181152
    7. 'M' → logprob: -7.281729698181152
    8. '
' → logprob: -7.281729698181152
    9. 'visited' → logprob: -7.531729698181152
    10. 'dp' → logprob: -8.531729698181152

Token 1234: ' center' (ID: 6170)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.002688371343538165
    2. '_weights' → logprob: -6.002688407897949
    3. 'weight' → logprob: -9.25268840789795
    4. 'def' → logprob: -9.75268840789795
    5. '_piece' → logprob: -10.00268840789795
    6. '_w' → logprob: -12.75268840789795
    7. 'weights' → logprob: -12.75268840789795
    8. '_' → logprob: -13.25268840789795
    9. '_mass' → logprob: -13.62768840789795
    10. '_acc' → logprob: -13.75268840789795

Token 1235: ' x' (ID: 1215)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.1593439280986786
    2. '_of' → logprob: -2.034343957901001
    3. 'of' → logprob: -4.534343719482422
    4. '   ' → logprob: -6.659343719482422
    5. 'def' → logprob: -6.659343719482422
    6. 's' → logprob: -6.909343719482422
    7. 'x' → logprob: -7.534343719482422
    8. '       ' → logprob: -7.909343719482422
    9. ' of' → logprob: -7.909343719482422
    10. '
' → logprob: -8.034343719482422

Token 1236: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2134252786636353
    2. '_acc' → logprob: -1.2134252786636353
    3. 'acc' → logprob: -2.0884251594543457
    4. 'def' → logprob: -2.2134251594543457
    5. ' and' → logprob: -2.9634251594543457
    6. '       ' → logprob: -3.0884251594543457
    7. ' =' → logprob: -3.7134251594543457
    8. ',' → logprob: -4.088425159454346
    9. '
' → logprob: -4.838425159454346
    10. 'and' → logprob: -4.963425159454346

Token 1237: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.21160264313220978
    2. 'acc' → logprob: -1.7116026878356934
    3. 'def' → logprob: -5.211602687835693
    4. 'weights' → logprob: -6.086602687835693
    5. '#' → logprob: -6.961602687835693
    6. '
' → logprob: -7.336602687835693
    7. 'total' → logprob: -8.461602210998535
    8. 'children' → logprob: -8.711602210998535
    9. '_weight' → logprob: -8.961602210998535
    10. 'visited' → logprob: -10.086602210998535

Token 1238: ' recursively' (ID: 130266)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.892707347869873
    2. 'acc' → logprob: -1.267707347869873
    3. '
' → logprob: -1.392707347869873
    4. 'def' → logprob: -3.517707347869873
    5. '   ' → logprob: -4.017707347869873
    6. '        
' → logprob: -5.642707347869873
    7. ',' → logprob: -6.642707347869873
    8. 'import' → logprob: -6.767707347869873
    9. '```' → logprob: -6.767707347869873
    10. '_acc' → logprob: -7.142707347869873

Token 1239: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1927831768989563
    2. '       ' → logprob: -2.0677831172943115
    3. 'def' → logprob: -3.9427831172943115
    4. 'acc' → logprob: -4.442783355712891
    5. 'import' → logprob: -4.567783355712891
    6. '   ' → logprob: -5.192783355712891
    7. '        
' → logprob: -6.817783355712891
    8. '    
' → logprob: -8.31778335571289
    9. 'from' → logprob: -8.81778335571289
    10. '

' → logprob: -9.31778335571289

Token 1240: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8145713806152344
    2. '   ' → logprob: -0.9395713806152344
    3. '       ' → logprob: -2.4395713806152344
    4. '
' → logprob: -2.8145713806152344
    5. 'acc' → logprob: -4.189571380615234
    6. 'import' → logprob: -6.189571380615234
    7. '        
' → logprob: -7.439571380615234
    8. '    
' → logprob: -7.439571380615234
    9. ' def' → logprob: -7.564571380615234
    10. 'dp' → logprob: -9.314571380615234

Token 1241: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07277753949165344
    2. 'acc' → logprob: -2.947777509689331
    3. '   ' → logprob: -4.32277774810791
    4. '       ' → logprob: -5.94777774810791
    5. 'import' → logprob: -6.44777774810791
    6. '
' → logprob: -8.94777774810791
    7. 'M' → logprob: -9.57277774810791
    8. 'from' → logprob: -10.32277774810791
    9. 'ac' → logprob: -11.19777774810791
    10. 'dp' → logprob: -11.94777774810791

Token 1242: ' store' (ID: 4897)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20822381973266602
    2. 'acc' → logprob: -1.708223819732666
    3. '   ' → logprob: -5.833223819732666
    4. 'import' → logprob: -5.833223819732666
    5. '       ' → logprob: -7.333223819732666
    6. 'from' → logprob: -9.458223342895508
    7. 'M' → logprob: -9.833223342895508
    8. '
' → logprob: -9.958223342895508
    9. 'ac' → logprob: -10.458223342895508
    10. 'dp' → logprob: -10.583223342895508

Token 1243: ' results' (ID: 4376)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0026580586563795805
    2. '   ' → logprob: -6.627657890319824
    3. 'def' → logprob: -7.002657890319824
    4. 'M' → logprob: -8.502657890319824
    5. '_acc' → logprob: -10.127657890319824
    6. '       ' → logprob: -10.752657890319824
    7. 'import' → logprob: -10.752657890319824
    8. '
' → logprob: -10.877657890319824
    9. ' accumulated' → logprob: -10.877657890319824
    10. 'piece' → logprob: -10.877657890319824

Token 1244: ' in' (ID: 306)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.25326740741729736
    2. '       ' → logprob: -1.5032674074172974
    3. '   ' → logprob: -7.753267288208008
    4. 'ac' → logprob: -7.878267288208008
    5. '_acc' → logprob: -9.253267288208008
    6. ' accumulated' → logprob: -9.253267288208008
    7. ' acc' → logprob: -9.253267288208008
    8. '
' → logprob: -9.878267288208008
    9. 'M' → logprob: -10.503267288208008
    10. '	acc' → logprob: -10.503267288208008

Token 1245: ' cache' (ID: 11956)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -2.558399319241289e-05
    2. 'piece' → logprob: -11.625025749206543
    3. 'memo' → logprob: -12.625025749206543
    4. 'sub' → logprob: -12.875025749206543
    5. 'cache' → logprob: -13.250025749206543
    6. 'dp' → logprob: -13.375025749206543
    7. 'M' → logprob: -13.750025749206543
    8. '#' → logprob: -13.750025749206543
    9. 'ac' → logprob: -13.875025749206543
    10. 'cum' → logprob: -14.125025749206543

Token 1246: '
' (ID: 198)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.14205272495746613
    2. '
' → logprob: -3.14205265045166
    3. '   ' → logprob: -3.51705265045166
    4. '       ' → logprob: -3.76705265045166
    5. 'import' → logprob: -4.01705265045166
    6. 'cache' → logprob: -4.39205265045166
    7. '_acc' → logprob: -6.26705265045166
    8. 'from' → logprob: -6.51705265045166
    9. '_cache' → logprob: -7.89205265045166
    10. '        
' → logprob: -8.14205265045166

Token 1247: '       ' (ID: 309)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7781135439872742
    2. '   ' → logprob: -1.528113603591919
    3. '       ' → logprob: -1.528113603591919
    4. 'cache' → logprob: -2.403113603591919
    5. 'def' → logprob: -5.02811336517334
    6. '_acc' → logprob: -5.77811336517334
    7. '_cache' → logprob: -6.02811336517334
    8. '
' → logprob: -6.15311336517334
    9. 'dp' → logprob: -7.27811336517334
    10. '        
' → logprob: -8.02811336517334

Token 1248: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.317974716424942
    2. '   ' → logprob: -2.442974805831909
    3. 'import' → logprob: -2.817974805831909
    4. 'cache' → logprob: -3.067974805831909
    5. 'def' → logprob: -3.317974805831909
    6. 'from' → logprob: -3.317974805831909
    7. '       ' → logprob: -5.06797456741333
    8. 'dp' → logprob: -8.442975044250488
    9. 'ac' → logprob: -9.692975044250488
    10. '
' → logprob: -10.067975044250488

Token 1249: '_center' (ID: 48737)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5541396141052246
    2. '_weight' → logprob: -1.0541396141052246
    3. '_center' → logprob: -2.8041396141052246
    4. 'u' → logprob: -5.054139614105225
    5. '_weights' → logprob: -5.679139614105225
    6. '_' → logprob: -6.179139614105225
    7. '_cent' → logprob: -6.429139614105225
    8. '_x' → logprob: -7.054139614105225
    9. '_acc' → logprob: -7.804139614105225
    10. '_m' → logprob: -7.929139614105225

Token 1250: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0012034466490149498
    2. '_' → logprob: -6.751203536987305
    3. 's' → logprob: -10.751203536987305
    4. 'x' → logprob: -12.376203536987305
    5. ' _' → logprob: -13.501203536987305
    6. '}_' → logprob: -14.001203536987305
    7. '```' → logprob: -14.001203536987305
    8. '_coords' → logprob: -14.126203536987305
    9. '[' → logprob: -14.626203536987305
    10. '_
' → logprob: -14.626203536987305

Token 1251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22229844331741333
    2. ' =' → logprob: -1.8472983837127686
    3. '_' → logprob: -3.4722983837127686
    4. '_cache' → logprob: -5.472298622131348
    5. 's' → logprob: -5.722298622131348
    6. ',' → logprob: -6.097298622131348
    7. '_=' → logprob: -8.097298622131348
    8. '   ' → logprob: -8.847298622131348
    9. '_acc' → logprob: -9.097298622131348
    10. '=[]' → logprob: -9.722298622131348

Token 1252: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.313495397567749
    2. '{}' → logprob: -1.313495397567749
    3. ' [' → logprob: -8.688495635986328
    4. '[]' → logprob: -10.813495635986328
    5. '{}
' → logprob: -10.938495635986328
    6. '[-' → logprob: -11.938495635986328
    7. '{' → logprob: -12.313495635986328
    8. '[n' → logprob: -12.563495635986328
    9. ' {}' → logprob: -12.688495635986328
    10. '[p' → logprob: -13.563495635986328

Token 1253: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.015651751309633255
    2. '0' → logprob: -4.265651702880859
    3. '-' → logprob: -6.515651702880859
    4. ' None' → logprob: -12.14065170288086
    5. '   ' → logprob: -13.39065170288086
    6. '
' → logprob: -16.14065170288086
    7. 'float' → logprob: -16.89065170288086
    8. '(None' → logprob: -17.51565170288086
    9. ' -' → logprob: -17.64065170288086
    10. '_None' → logprob: -18.01565170288086

Token 1254: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05976339429616928
    2. ' for' → logprob: -3.5597634315490723
    3. 'for' → logprob: -3.9347634315490723
    4. ']*' → logprob: -4.809763431549072
    5. '<|end|>' → logprob: -7.934763431549072
    6. ')' → logprob: -7.934763431549072
    7. '   ' → logprob: -8.309762954711914
    8. '       ' → logprob: -8.434762954711914
    9. ',' → logprob: -8.434762954711914
    10. ' ]' → logprob: -9.434762954711914

Token 1255: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012356207298580557
    2. '(len' → logprob: -9.000123977661133
    3. ' len' → logprob: -16.250123977661133
    4. '[len' → logprob: -18.500123977661133
    5. '   ' → logprob: -19.000123977661133
    6. '           ' → logprob: -19.750123977661133
    7. '	len' → logprob: -20.750123977661133
    8. '(' → logprob: -21.125123977661133
    9. '=len' → logprob: -21.125123977661133
    10. '       ' → logprob: -21.500123977661133

Token 1256: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004989320412278175
    2. '(piece' → logprob: -5.379989147186279
    3. 'pieces' → logprob: -8.129989624023438
    4. '(parent' → logprob: -10.004989624023438
    5. 'p' → logprob: -11.379989624023438
    6. '(acc' → logprob: -11.629989624023438
    7. 'acc' → logprob: -13.004989624023438
    8. 'piece' → logprob: -13.129989624023438
    9. '(parts' → logprob: -13.379989624023438
    10. 'parent' → logprob: -13.629989624023438

Token 1257: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.0003178273618686944
    2. 'iece' → logprob: -8.750317573547363
    3. 'pieces' → logprob: -8.750317573547363
    4. ' pieces' → logprob: -15.000317573547363
    5. 'ie' → logprob: -15.625317573547363
    6. '```' → logprob: -16.00031852722168
    7. 'iec' → logprob: -16.37531852722168
    8. ')' → logprob: -17.25031852722168
    9. '``' → logprob: -17.25031852722168
    10. '>' → logprob: -18.00031852722168

Token 1258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5246182680130005
    2. ')
' → logprob: -0.8996182680130005
    3. ']' → logprob: -7.899618148803711
    4. '
' → logprob: -7.899618148803711
    5. ']
' → logprob: -8.399618148803711
    6. '       ' → logprob: -8.524618148803711
    7. ' )
' → logprob: -9.399618148803711
    8. ' )' → logprob: -9.899618148803711
    9. '   ' → logprob: -10.149618148803711
    10. ',' → logprob: -10.149618148803711

Token 1259: '       ' (ID: 309)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.002395748160779476
    2. '   ' → logprob: -6.7523956298828125
    3. '       ' → logprob: -7.5023956298828125
    4. ' acc' → logprob: -8.127395629882812
    5. 'def' → logprob: -8.252395629882812
    6. '	acc' → logprob: -9.252395629882812
    7. '           ' → logprob: -12.502395629882812
    8. '
' → logprob: -12.502395629882812
    9. '_acc' → logprob: -12.752395629882812
    10. ' ' → logprob: -13.377395629882812

Token 1260: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.005283799953758717
    2. 'def' → logprob: -5.255283832550049
    3. '   ' → logprob: -10.88028335571289
    4. ' acc' → logprob: -11.38028335571289
    5. '
' → logprob: -12.13028335571289
    6. '       ' → logprob: -12.75528335571289
    7. '```' → logprob: -12.88028335571289
    8. 'piece' → logprob: -13.00528335571289
    9. 'import' → logprob: -13.13028335571289
    10. '           ' → logprob: -14.00528335571289

Token 1261: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -9.17420256882906e-05
    2. '_weights' → logprob: -9.375091552734375
    3. '_w' → logprob: -13.250091552734375
    4. '_center' → logprob: -13.500091552734375
    5. '_mass' → logprob: -13.625091552734375
    6. '_' → logprob: -14.125091552734375
    7. '_depth' → logprob: -14.500091552734375
    8. '_acc' → logprob: -15.125091552734375
    9. ' _' → logprob: -15.750091552734375
    10. '\' → logprob: -16.125091552734375

Token 1262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05492990463972092
    2. ' =' → logprob: -2.9299299716949463
    3. '[' → logprob: -10.804929733276367
    4. 's' → logprob: -11.804929733276367
    5. ']' → logprob: -11.929929733276367
    6. '   ' → logprob: -12.304929733276367
    7. ')' → logprob: -13.304929733276367
    8. '_' → logprob: -13.304929733276367
    9. ' ' → logprob: -13.679929733276367
    10. '=[]' → logprob: -13.929929733276367

Token 1263: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010513884481042624
    2. ' [' → logprob: -7.001051425933838
    3. '[len' → logprob: -9.00105094909668
    4. '[n' → logprob: -11.75105094909668
    5. '[N' → logprob: -11.87605094909668
    6. '   ' → logprob: -14.37605094909668
    7. '[p' → logprob: -15.00105094909668
    8. '[num' → logprob: -15.37605094909668
    9. ' ' → logprob: -15.75105094909668
    10. '[length' → logprob: -16.25105094909668

Token 1264: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -11.750008583068848
    3. ' None' → logprob: -14.875008583068848
    4. '0' → logprob: -16.37500762939453
    5. '   ' → logprob: -16.37500762939453
    6. '(None' → logprob: -16.50000762939453
    7. '_None' → logprob: -18.37500762939453
    8. 'len' → logprob: -19.12500762939453
    9. ',None' → logprob: -19.25000762939453
    10. '
' → logprob: -19.87500762939453

Token 1265: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.004134203307330608
    2. ']' → logprob: -5.504134178161621
    3. '*' → logprob: -10.004134178161621
    4. 'for' → logprob: -12.754134178161621
    5. ']*(' → logprob: -13.129134178161621
    6. ')*' → logprob: -13.504134178161621
    7. '   ' → logprob: -13.504134178161621
    8. ' ]' → logprob: -13.879134178161621
    9. '[' → logprob: -14.379134178161621
    10. ']+' → logprob: -14.879134178161621

Token 1266: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007105246186256409
    2. 'int' → logprob: -7.250710487365723
    3. 'list' → logprob: -15.375710487365723
    4. '(len' → logprob: -15.375710487365723
    5. '[len' → logprob: -17.12571144104004
    6. 'range' → logprob: -18.00071144104004
    7. '
' → logprob: -18.50071144104004
    8. '=len' → logprob: -18.50071144104004
    9. ' len' → logprob: -18.87571144104004
    10. 'length' → logprob: -20.12571144104004

Token 1267: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.011091329157352448
    2. 'pieces' → logprob: -4.636091232299805
    3. 'p' → logprob: -6.636091232299805
    4. 'range' → logprob: -12.636091232299805
    5. '[p' → logprob: -12.636091232299805
    6. ' pieces' → logprob: -13.261091232299805
    7. '(' → logprob: -13.511091232299805
    8. '(parts' → logprob: -13.636091232299805
    9. '
' → logprob: -13.761091232299805
    10. 'parts' → logprob: -14.011091232299805

Token 1268: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.002870730822905898
    2. 'pieces' → logprob: -5.877870559692383
    3. 'iece' → logprob: -10.627870559692383
    4. ' pieces' → logprob: -10.877870559692383
    5. 'e' → logprob: -11.752870559692383
    6. 'ec' → logprob: -12.002870559692383
    7. '```' → logprob: -12.752870559692383
    8. '_e' → logprob: -13.627870559692383
    9. 'ece' → logprob: -14.002870559692383
    10. 'ices' → logprob: -14.627870559692383

Token 1269: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025806447491049767
    2. ']' → logprob: -4.025806427001953
    3. ')
' → logprob: -5.525806427001953
    4. ')

' → logprob: -6.275806427001953
    5. ')]' → logprob: -6.900806427001953
    6. ']

' → logprob: -8.150806427001953
    7. ']
' → logprob: -8.400806427001953
    8. '   ' → logprob: -9.150806427001953
    9. '       ' → logprob: -10.025806427001953
    10. 'def' → logprob: -10.775806427001953

Token 1270: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6383233070373535
    2. '       ' → logprob: -1.1383233070373535
    3. '   ' → logprob: -1.8883233070373535
    4. ' def' → logprob: -9.138322830200195
    5. '	def' → logprob: -11.888322830200195
    6. '           ' → logprob: -12.013322830200195
    7. 'for' → logprob: -12.263322830200195
    8. '```' → logprob: -12.513322830200195
    9. '        
' → logprob: -12.638322830200195
    10. '`' → logprob: -13.138322830200195

Token 1271: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019084083614870906
    2. '       ' → logprob: -6.751908302307129
    3. '   ' → logprob: -7.251908302307129
    4. ' def' → logprob: -10.626908302307129
    5. 'for' → logprob: -12.376908302307129
    6. 'import' → logprob: -15.751908302307129
    7. '           ' → logprob: -16.126909255981445
    8. '
' → logprob: -16.251909255981445
    9. '	def' → logprob: -16.876909255981445
    10. 'i' → logprob: -17.501909255981445

Token 1272: ' dfs' (ID: 51252)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.8259415030479431
    2. 'acc' → logprob: -1.075941562652588
    3. 'dfs' → logprob: -1.825941562652588
    4. 'calc' → logprob: -2.825941562652588
    5. 'calculate' → logprob: -8.07594108581543
    6. 'get' → logprob: -8.07594108581543
    7. 'solve' → logprob: -8.95094108581543
    8. ' dfs' → logprob: -9.82594108581543
    9. ' compute' → logprob: -10.45094108581543
    10. 'rec' → logprob: -10.95094108581543

Token 1273: '_acc' (ID: 35551)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5939272046089172
    2. '(i' → logprob: -0.8439272046089172
    3. '(piece' → logprob: -4.218927383422852
    4. '(
' → logprob: -7.343927383422852
    5. '(node' → logprob: -7.468927383422852
    6. '(p' → logprob: -7.843927383422852
    7. '_' → logprob: -7.843927383422852
    8. '(acc' → logprob: -7.968927383422852
    9. '(parent' → logprob: -8.593927383422852
    10. ' (' → logprob: -9.093927383422852

Token 1274: '(i' (ID: 3649)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.02771277353167534
    2. 'um' → logprob: -3.652712821960449
    3. 'umulator' → logprob: -7.402712821960449
    4. '_center' → logprob: -8.27771282196045
    5. 'uml' → logprob: -8.90271282196045
    6. 'umu' → logprob: -9.40271282196045
    7. '(' → logprob: -9.65271282196045
    8. 'umul' → logprob: -10.02771282196045
    9. 'umulative' → logprob: -10.15271282196045
    10. 'u' → logprob: -10.40271282196045

Token 1275: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17617742717266083
    2. '):
' → logprob: -1.9261773824691772
    3. '(i' → logprob: -4.176177501678467
    4. ')' → logprob: -8.176177024841309
    5. '):(' → logprob: -10.176177024841309
    6. '   ' → logprob: -10.301177024841309
    7. ',' → logprob: -10.426177024841309
    8. '(' → logprob: -10.801177024841309
    9. ' ):' → logprob: -11.051177024841309
    10. ':' → logprob: -11.176177024841309

Token 1276: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4056699872016907
    2. '       ' → logprob: -1.155669927597046
    3. '           ' → logprob: -4.530670166015625
    4. ' if' → logprob: -5.655670166015625
    5. 'if' → logprob: -5.905670166015625
    6. '
' → logprob: -7.280670166015625
    7. ' ' → logprob: -8.655670166015625
    8. '    
' → logprob: -8.780670166015625
    9. '        ' → logprob: -9.155670166015625
    10. '    ' → logprob: -9.405670166015625

Token 1277: ' if' (ID: 538)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.6394188404083252
    2. 'res' → logprob: -1.8894188404083252
    3. '       ' → logprob: -2.139418840408325
    4. '           ' → logprob: -2.139418840408325
    5. 'acc' → logprob: -2.389418840408325
    6. 'total' → logprob: -2.639418840408325
    7. ' acc' → logprob: -2.764418840408325
    8. '   ' → logprob: -3.014418840408325
    9. 'w' → logprob: -3.514418840408325
    10. 'weight' → logprob: -3.889418840408325

Token 1278: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.005241106729954481
    2. 'acc' → logprob: -5.2552409172058105
    3. ' None' → logprob: -13.505241394042969
    4. '           ' → logprob: -13.505241394042969
    5. '	acc' → logprob: -13.755241394042969
    6. ' ac' → logprob: -13.880241394042969
    7. '(acc' → logprob: -13.880241394042969
    8. ' ' → logprob: -14.755241394042969
    9. ' accu' → logprob: -15.005241394042969
    10. '   ' → logprob: -15.380241394042969

Token 1279: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.00032604875741526484
    2. '_acc' → logprob: -8.500326156616211
    3. '_weight' → logprob: -9.625326156616211
    4. '_cent' → logprob: -11.000326156616211
    5. '[i' → logprob: -11.125326156616211
    6. '_' → logprob: -12.000326156616211
    7. '[_' → logprob: -12.500326156616211
    8. '_c' → logprob: -12.875326156616211
    9. '_depth' → logprob: -13.625326156616211
    10. '```' → logprob: -13.875326156616211

Token 1280: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.5213274309644476e-05
    2. '[i' → logprob: -12.125015258789062
    3. '[' → logprob: -13.000015258789062
    4. '[_' → logprob: -13.125015258789062
    5. '_i' → logprob: -13.250015258789062
    6. ' _' → logprob: -14.125015258789062
    7. '```' → logprob: -14.125015258789062
    8. '           ' → logprob: -15.125015258789062
    9. '=_' → logprob: -15.250015258789062
    10. '_[' → logprob: -15.375015258789062

Token 1281: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.392202976712724e-06
    2. ' [' → logprob: -12.750006675720215
    3. '[' → logprob: -13.125006675720215
    4. '```' → logprob: -14.625006675720215
    5. ')[' → logprob: -15.250006675720215
    6. '==' → logprob: -15.875006675720215
    7. '
' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.5000057220459
    9. 'i' → logprob: -16.6250057220459
    10. '[j' → logprob: -17.0000057220459

Token 1282: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0693531334400177
    2. 'is' → logprob: -3.1943531036376953
    3. ' is' → logprob: -3.6943531036376953
    4. ']==' → logprob: -7.694353103637695
    5. ' ]' → logprob: -8.069353103637695
    6. ']!=' → logprob: -8.569353103637695
    7. '[' → logprob: -9.819353103637695
    8. ')is' → logprob: -9.944353103637695
    9. ')' → logprob: -10.569353103637695
    10. '[i' → logprob: -10.819353103637695

Token 1283: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1604413390159607
    2. ' is' → logprob: -1.9104413986206055
    3. '!=' → logprob: -8.535441398620605
    4. '==' → logprob: -12.410441398620605
    5. ')is' → logprob: -12.660441398620605
    6. ')' → logprob: -12.785441398620605
    7. '[' → logprob: -12.785441398620605
    8. '=' → logprob: -12.910441398620605
    9. ' !=' → logprob: -13.660441398620605
    10. ' ' → logprob: -13.660441398620605

Token 1284: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.39013949036598206
    2. 'None' → logprob: -1.1401394605636597
    3. ' not' → logprob: -5.765139579772949
    4. ' None' → logprob: -9.14013957977295
    5. '   ' → logprob: -11.64013957977295
    6. 'Not' → logprob: -12.26513957977295
    7. 'none' → logprob: -13.14013957977295
    8. '...' → logprob: -13.76513957977295
    9. '	not' → logprob: -14.39013957977295
    10. '_None' → logprob: -14.51513957977295

Token 1285: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.8206473871250637e-05
    2. ' None' → logprob: -10.500028610229492
    3. '_None' → logprob: -15.000028610229492
    4. '(None' → logprob: -16.250028610229492
    5. '   ' → logprob: -16.500028610229492
    6. '
' → logprob: -16.750028610229492
    7. 'not' → logprob: -17.375028610229492
    8. 'def' → logprob: -17.500028610229492
    9. '```' → logprob: -17.625028610229492
    10. '       ' → logprob: -17.875028610229492

Token 1286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16820253431797028
    2. ':
' → logprob: -2.4182026386260986
    3. '               ' → logprob: -2.7932026386260986
    4. '           ' → logprob: -5.9182024002075195
    5. ':return' → logprob: -7.2932024002075195
    6. ' and' → logprob: -8.54320240020752
    7. '       ' → logprob: -8.66820240020752
    8. ',' → logprob: -8.91820240020752
    9. '   ' → logprob: -9.66820240020752
    10. '              ' → logprob: -9.79320240020752

Token 1287: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0064782798290252686
    2. ' return' → logprob: -5.506478309631348
    3. '           ' → logprob: -6.756478309631348
    4. 'return' → logprob: -7.006478309631348
    5. '       ' → logprob: -10.006478309631348
    6. '                ' → logprob: -10.506478309631348
    7. ':' → logprob: -10.506478309631348
    8. '   ' → logprob: -10.506478309631348
    9. '            ' → logprob: -10.506478309631348
    10. ':return' → logprob: -10.506478309631348

Token 1288: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08648386597633362
    2. 'return' (adapté à ' return') → logprob: -2.586483955383301
    3. '           ' → logprob: -5.211483955383301
    4. '               ' → logprob: -6.336483955383301
    5. '   ' → logprob: -8.8364839553833
    6. '       ' → logprob: -9.7114839553833
    7. '                   ' → logprob: -10.2114839553833
    8. '
' → logprob: -10.7114839553833
    9. '            ' → logprob: -10.8364839553833
    10. '                ' → logprob: -11.2114839553833

Token 1289: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.005524492356926203
    2. '(acc' → logprob: -5.380524635314941
    3. ' acc' → logprob: -7.130524635314941
    4. '           ' → logprob: -9.755524635314941
    5. '
' → logprob: -10.630524635314941
    6. '   ' → logprob: -11.505524635314941
    7. ' (' → logprob: -12.755524635314941
    8. '               ' → logprob: -12.755524635314941
    9. '       ' → logprob: -13.630524635314941
    10. '	acc' → logprob: -13.755524635314941

Token 1290: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -1.0206720617134124e-05
    2. '_acc' → logprob: -12.62501049041748
    3. '_cent' → logprob: -13.00001049041748
    4. '           ' → logprob: -13.87501049041748
    5. '       ' → logprob: -14.00001049041748
    6. 'center' → logprob: -14.25001049041748
    7. '[i' → logprob: -14.62501049041748
    8. '
' → logprob: -14.75001049041748
    9. 'acc' → logprob: -14.87501049041748
    10. '               ' → logprob: -16.000009536743164

Token 1291: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.5928495486150496e-05
    2. 'acc' → logprob: -11.500016212463379
    3. 'x' → logprob: -12.500016212463379
    4. '_center' → logprob: -14.125016212463379
    5. '       ' → logprob: -15.125016212463379
    6. '   ' → logprob: -15.250016212463379
    7. ' acc' → logprob: -16.000015258789062
    8. '
' → logprob: -16.125015258789062
    9. '_acc' → logprob: -16.375015258789062
    10. '           ' → logprob: -16.375015258789062

Token 1292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005810309085063636
    2. '[' → logprob: -7.62558126449585
    3. '
' → logprob: -11.000580787658691
    4. '```' → logprob: -11.000580787658691
    5. 'i' → logprob: -11.250580787658691
    6. ' [' → logprob: -11.375580787658691
    7. ')[' → logprob: -12.250580787658691
    8. '[
' → logprob: -12.500580787658691
    9. '       ' → logprob: -12.875580787658691
    10. '\[' → logprob: -13.000580787658691

Token 1293: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.055303893983364105
    2. '][' → logprob: -3.8053038120269775
    3. '],' → logprob: -3.8053038120269775
    4. ']' → logprob: -4.805304050445557
    5. ',' → logprob: -8.055303573608398
    6. ',i' → logprob: -8.430303573608398
    7. '],[' → logprob: -8.805303573608398
    8. 'i' → logprob: -9.055303573608398
    9. '),' → logprob: -9.680303573608398
    10. ']
' → logprob: -10.055303573608398

Token 1294: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -4.56102097814437e-05
    2. ' acc' → logprob: -10.000045776367188
    3. '           ' → logprob: -15.875045776367188
    4. '
' → logprob: -17.375045776367188
    5. '       ' → logprob: -18.750045776367188
    6. '(acc' → logprob: -19.000045776367188
    7. '               ' → logprob: -19.125045776367188
    8. '          ' → logprob: -19.875045776367188
    9. '            
' → logprob: -20.375045776367188
    10. '   ' → logprob: -20.625045776367188

Token 1295: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.038065019994974136
    2. 'weight' → logprob: -3.288064956665039
    3. '
' → logprob: -11.413064956665039
    4. '[i' → logprob: -12.663064956665039
    5. 'w' → logprob: -12.788064956665039
    6. 'i' → logprob: -13.038064956665039
    7. '(i' → logprob: -13.663064956665039
    8. 'we' → logprob: -14.288064956665039
    9. 'weig' → logprob: -14.788064956665039
    10. '_WEIGHT' → logprob: -14.788064956665039

Token 1296: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1398757123970427e-05
    2. '[' → logprob: -12.125011444091797
    3. '```' → logprob: -13.750011444091797
    4. 'i' → logprob: -14.000011444091797
    5. '           ' → logprob: -14.375011444091797
    6. '_i' → logprob: -14.375011444091797
    7. '
' → logprob: -14.750011444091797
    8. '[j' → logprob: -14.750011444091797
    9. '   ' → logprob: -14.750011444091797
    10. '       ' → logprob: -15.125011444091797

Token 1297: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008738546632230282
    2. ')' → logprob: -5.6337385177612305
    3. '<|end|>' → logprob: -5.6337385177612305
    4. '           ' → logprob: -6.8837385177612305
    5. '       ' → logprob: -9.00873851776123
    6. ']
' → logprob: -9.25873851776123
    7. '[i' → logprob: -9.25873851776123
    8. '<|end|>' → logprob: -9.75873851776123
    9. '[' → logprob: -9.88373851776123
    10. ' ]' → logprob: -10.88373851776123

Token 1298: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00478254584595561
    2. '
' → logprob: -6.254782676696777
    3. '            
' → logprob: -6.879782676696777
    4. '    
' → logprob: -7.504782676696777
    5. ' 
' → logprob: -7.754782676696777
    6. '               ' → logprob: -8.754782676696777
    7. '   ' → logprob: -8.879782676696777
    8. '       ' → logprob: -8.879782676696777
    9. '        
' → logprob: -9.254782676696777
    10. '		' → logprob: -10.004782676696777

Token 1299: ' w' (ID: 286)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.9446523189544678
    2. 'wx' → logprob: -1.0696523189544678
    3. 'w' (adapté à ' w') → logprob: -2.3196523189544678
    4. '           ' → logprob: -2.6946523189544678
    5. 'acc' → logprob: -3.0696523189544678
    6. 'total' → logprob: -4.319652557373047
    7. 'cw' → logprob: -4.694652557373047
    8. '   ' → logprob: -4.944652557373047
    9. 'weight' → logprob: -5.319652557373047
    10. ' cx' → logprob: -5.319652557373047

Token 1300: '_sum' (ID: 29859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7402227520942688
    2. ' =' → logprob: -0.8652227520942688
    3. '=' → logprob: -2.365222692489624
    4. '_sum' → logprob: -6.240222930908203
    5. '_total' → logprob: -6.490222930908203
    6. '[i' → logprob: -7.115222930908203
    7. '=i' → logprob: -7.740222930908203
    8. ' ,' → logprob: -7.865222930908203
    9. '           ' → logprob: -7.990222930908203
    10. '   ' → logprob: -7.990222930908203

Token 1301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6332274079322815
    2. '=' → logprob: -0.7582274079322815
    3. ',' → logprob: -7.883227348327637
    4. '           ' → logprob: -9.133227348327637
    5. '=i' → logprob: -10.258227348327637
    6. '            ' → logprob: -10.633227348327637
    7. ' +=' → logprob: -10.758227348327637
    8. '=w' → logprob: -11.633227348327637
    9. ' ' → logprob: -11.883227348327637
    10. '+=' → logprob: -12.008227348327637

Token 1302: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.00048751471331343055
    2. ' piece' → logprob: -7.875487327575684
    3. '           ' → logprob: -9.500487327575684
    4. '0' → logprob: -11.000487327575684
    5. '   ' → logprob: -12.125487327575684
    6. 'pie' → logprob: -12.250487327575684
    7. '       ' → logprob: -12.625487327575684
    8. '               ' → logprob: -14.500487327575684
    9. 'weight' → logprob: -14.625487327575684
    10. '(piece' → logprob: -15.250487327575684

Token 1303: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -6.704273118884885e-07
    2. 'weight' → logprob: -14.875000953674316
    3. '_weights' → logprob: -15.875000953674316
    4. '_w' → logprob: -17.125
    5. '```' → logprob: -17.125
    6. '_size' → logprob: -18.0
    7. '\' → logprob: -18.25
    8. '[_' → logprob: -18.375
    9. '
' → logprob: -18.625
    10. '_we' → logprob: -18.75

Token 1304: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.375005722045898
    3. 's' → logprob: -14.875005722045898
    4. '[
' → logprob: -15.250005722045898
    5. '```' → logprob: -15.250005722045898
    6. '[I' → logprob: -15.750005722045898
    7. '(i' → logprob: -16.5000057220459
    8. ' [' → logprob: -16.6250057220459
    9. '   ' → logprob: -16.6250057220459
    10. '
' → logprob: -16.7500057220459

Token 1305: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5170591473579407
    2. ')' → logprob: -1.642059087753296
    3. ' +' → logprob: -2.142059087753296
    4. ']' → logprob: -3.392059087753296
    5. '           ' → logprob: -3.517059087753296
    6. '
' → logprob: -4.267059326171875
    7. '<|end|>' → logprob: -4.767059326171875
    8. '<|end|>' → logprob: -6.517059326171875
    9. '+
' → logprob: -6.642059326171875
    10. ']+' → logprob: -7.017059326171875

Token 1306: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8810527920722961
    2. ' s' → logprob: -1.6310527324676514
    3. ' c' → logprob: -1.7560527324676514
    4. '           ' → logprob: -2.8810527324676514
    5. 'c' → logprob: -3.0060527324676514
    6. 's' → logprob: -3.5060527324676514
    7. ',' → logprob: -3.6310527324676514
    8. '+' → logprob: -4.6310529708862305
    9. ' x' → logprob: -4.6310529708862305
    10. 'x' → logprob: -4.8810529708862305

Token 1307: ' mx' (ID: 28004)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20361514389514923
    2. 'cx' → logprob: -1.9536151885986328
    3. ' c' → logprob: -4.078615188598633
    4. ' cx' → logprob: -4.328615188598633
    5. 's' → logprob: -5.328615188598633
    6. 'x' → logprob: -5.578615188598633
    7. 'center' → logprob: -6.828615188598633
    8. ' s' → logprob: -7.203615188598633
    9. 'mx' (adapté à ' mx') → logprob: -7.703615188598633
    10. 'm' → logprob: -7.953615188598633

Token 1308: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.49929359555244446
    2. ' =' → logprob: -1.499293565750122
    3. '=' → logprob: -2.124293565750122
    4. '*i' → logprob: -4.124293804168701
    5. '*' → logprob: -4.499293804168701
    6. ' *' → logprob: -5.374293804168701
    7. '_mul' → logprob: -5.749293804168701
    8. ',' → logprob: -6.124293804168701
    9. '_i' → logprob: -6.124293804168701
    10. 'sum' → logprob: -6.374293804168701

Token 1309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5265487432479858
    2. '=' → logprob: -0.9015487432479858
    3. '*' → logprob: -6.276548862457275
    4. ' *' → logprob: -7.401548862457275
    5. ',' → logprob: -7.776548862457275
    6. ' +=' → logprob: -8.776548385620117
    7. '*=' → logprob: -9.276548385620117
    8. '+=' → logprob: -9.526548385620117
    9. ' +' → logprob: -10.151548385620117
    10. '+' → logprob: -10.651548385620117

Token 1310: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.09011738002300262
    2. ' piece' → logprob: -2.4651174545288086
    3. '(piece' → logprob: -7.465117454528809
    4. '   ' → logprob: -8.215117454528809
    5. 'acc' → logprob: -8.965117454528809
    6. '           ' → logprob: -9.215117454528809
    7. '0' → logprob: -10.715117454528809
    8. 'pie' → logprob: -10.965117454528809
    9. ' ' → logprob: -11.590117454528809
    10. ' (' → logprob: -11.840117454528809

Token 1311: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.019831689074635506
    2. '_weight' → logprob: -4.269831657409668
    3. 'center' → logprob: -5.519831657409668
    4. '[i' → logprob: -6.894831657409668
    5. '_x' → logprob: -8.269831657409668
    6. 'acc' → logprob: -8.394831657409668
    7. '_acc' → logprob: -9.269831657409668
    8. 'weight' → logprob: -11.769831657409668
    9. 'Center' → logprob: -11.894831657409668
    10. '```' → logprob: -11.894831657409668

Token 1312: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.8219583075260743e-05
    2. 'x' → logprob: -10.250038146972656
    3. '```' → logprob: -13.125038146972656
    4. '[' → logprob: -15.000038146972656
    5. '[i' → logprob: -16.000038146972656
    6. '_i' → logprob: -16.000038146972656
    7. '   ' → logprob: -16.375038146972656
    8. ' _' → logprob: -17.250038146972656
    9. '[
' → logprob: -17.500038146972656
    10. 's' → logprob: -17.625038146972656

Token 1313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.25000286102295
    3. 'i' → logprob: -14.75000286102295
    4. 's' → logprob: -14.75000286102295
    5. '```' → logprob: -16.000003814697266
    6. ' [' → logprob: -16.125003814697266
    7. ' i' → logprob: -16.750003814697266
    8. '[
' → logprob: -17.000003814697266
    9. ',i' → logprob: -17.250003814697266
    10. '(i' → logprob: -17.375003814697266

Token 1314: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6691837906837463
    2. '*' → logprob: -0.9191837906837463
    3. '*w' → logprob: -2.5441837310791016
    4. '*i' → logprob: -4.669183731079102
    5. ')' → logprob: -7.669183731079102
    6. ')*' → logprob: -7.794183731079102
    7. '*)' → logprob: -10.294183731079102
    8. '           ' → logprob: -10.794183731079102
    9. '*l' → logprob: -11.044183731079102
    10. ']*' → logprob: -11.294183731079102

Token 1315: 'piece' (ID: 30871)
  Prédit: 'piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.4741673767566681
    2. 'w' → logprob: -0.9741673469543457
    3. ' w' → logprob: -10.224167823791504
    4. ' piece' → logprob: -10.724167823791504
    5. 'weight' → logprob: -10.724167823791504
    6. 'acc' → logprob: -12.099167823791504
    7. '(piece' → logprob: -13.349167823791504
    8. '
' → logprob: -13.974167823791504
    9. 'pie' → logprob: -14.599167823791504
    10. '           ' → logprob: -14.849167823791504

Token 1316: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -7.703443770878948e-06
    2. 'weight' → logprob: -12.375007629394531
    3. 'Weight' → logprob: -13.250007629394531
    4. '```' → logprob: -13.875007629394531
    5. '[i' → logprob: -15.625007629394531
    6. '_weights' → logprob: -16.00000762939453
    7. '_WEIGHT' → logprob: -16.25000762939453
    8. '[' → logprob: -16.50000762939453
    9. '_w' → logprob: -16.75000762939453
    10. '[
' → logprob: -16.87500762939453

Token 1317: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.500003814697266
    3. '[
' → logprob: -16.750003814697266
    4. '```' → logprob: -17.250003814697266
    5. ' [' → logprob: -17.375003814697266
    6. '[I' → logprob: -17.875003814697266
    7. 'i' → logprob: -18.500003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '`' → logprob: -18.875003814697266
    10. '(i' → logprob: -18.875003814697266

Token 1318: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08409549295902252
    2. '
' → logprob: -3.2090954780578613
    3. '+' → logprob: -4.209095478057861
    4. ')' → logprob: -4.459095478057861
    5. ' +' → logprob: -4.834095478057861
    6. '       ' → logprob: -6.459095478057861
    7. ']' → logprob: -6.834095478057861
    8. '<|end|>' → logprob: -6.959095478057861
    9. '            
' → logprob: -7.834095478057861
    10. '            ' → logprob: -8.20909595489502

Token 1319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032445008400827646
    2. ' for' → logprob: -6.378244400024414
    3. '   ' → logprob: -7.003244400024414
    4. 'for' → logprob: -8.503244400024414
    5. '
' → logprob: -8.628244400024414
    6. '       ' → logprob: -9.753244400024414
    7. ',' → logprob: -10.378244400024414
    8. '```' → logprob: -10.503244400024414
    9. '	       ' → logprob: -10.878244400024414
    10. '               ' → logprob: -11.003244400024414

Token 1320: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3983480632305145
    2. '           ' → logprob: -1.398348093032837
    3. ' for' → logprob: -2.523348093032837
    4. '   ' → logprob: -6.898347854614258
    5. '
' → logprob: -8.273347854614258
    6. '       ' → logprob: -9.523347854614258
    7. '	for' → logprob: -10.773347854614258
    8. ' ' → logprob: -12.398347854614258
    9. '	       ' → logprob: -12.898347854614258
    10. '```' → logprob: -13.023347854614258

Token 1321: ' c' (ID: 274)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.003925349097698927
    2. 'c' → logprob: -6.003925323486328
    3. ' child' → logprob: -6.753925323486328
    4. 'ch' → logprob: -8.503925323486328
    5. 'j' → logprob: -9.503925323486328
    6. ' c' → logprob: -13.753925323486328
    7. 'chi' → logprob: -13.878925323486328
    8. '	child' → logprob: -14.253925323486328
    9. 'support' → logprob: -15.128925323486328
    10. '
' → logprob: -15.253925323486328

Token 1322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0976514145731926
    2. 'in' → logprob: -2.472651481628418
    3. ',' → logprob: -4.972651481628418
    4. ',c' → logprob: -7.222651481628418
    5. 'c' → logprob: -7.347651481628418
    6. '```' → logprob: -10.097651481628418
    7. ')' → logprob: -10.347651481628418
    8. ' ' → logprob: -10.472651481628418
    9. '_child' → logprob: -10.597651481628418
    10. '_in' → logprob: -10.597651481628418

Token 1323: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.001244993763975799
    2. ' piece' → logprob: -6.751245021820068
    3. '(piece' → logprob: -9.50124454498291
    4. 'pieces' → logprob: -17.251245498657227
    5. 'pie' → logprob: -18.501245498657227
    6. 'child' → logprob: -18.626245498657227
    7. '[' → logprob: -18.751245498657227
    8. '_piece' → logprob: -19.251245498657227
    9. '
' → logprob: -19.626245498657227
    10. ' ' → logprob: -19.876245498657227

Token 1324: '_support' (ID: 59508)
  Prédit: '_support'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_support' → logprob: -0.009781472384929657
    2. 'supports' → logprob: -4.634781360626221
    3. 'support' → logprob: -11.134781837463379
    4. 'Supports' → logprob: -12.634781837463379
    5. '[i' → logprob: -13.259781837463379
    6. '
' → logprob: -14.009781837463379
    7. ' supports' → logprob: -14.259781837463379
    8. '_supported' → logprob: -14.259781837463379
    9. '-support' → logprob: -14.384781837463379
    10. '_SUPPORT' → logprob: -14.634781837463379

Token 1325: 's' (ID: 82)
  Prédit: 'orts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orts' → logprob: -0.02843720279633999
    2. 's' → logprob: -4.27843713760376
    3. 'ors' → logprob: -4.27843713760376
    4. 'ots' → logprob: -8.653437614440918
    5. 'ords' → logprob: -10.778437614440918
    6. 'ts' → logprob: -10.903437614440918
    7. '[' → logprob: -10.903437614440918
    8. 'ports' → logprob: -10.903437614440918
    9. 'ers' → logprob: -11.028437614440918
    10. 'ort' → logprob: -11.278437614440918

Token 1326: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '(i' → logprob: -14.875
    3. '[
' → logprob: -17.5
    4. '[' → logprob: -17.625
    5. '[c' → logprob: -17.625
    6. 'i' → logprob: -18.25
    7. '```' → logprob: -18.625
    8. ' [' → logprob: -18.75
    9. '{i' → logprob: -19.125
    10. '
' → logprob: -19.5

Token 1327: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0096219778060913
    2. ']:
' → logprob: -1.2596219778060913
    3. ']:' → logprob: -1.6346219778060913
    4. ':
' → logprob: -2.134622097015381
    5. '):
' → logprob: -3.509622097015381
    6. '):' → logprob: -5.384622097015381
    7. '           ' → logprob: -6.134622097015381
    8. '       ' → logprob: -6.759622097015381
    9. '   ' → logprob: -8.134621620178223
    10. ']' → logprob: -9.384621620178223

Token 1328: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017517358355689794
    2. '                
' → logprob: -10.375175476074219
    3. ' w' → logprob: -10.625175476074219
    4. ' mx' → logprob: -10.875175476074219
    5. '                ' → logprob: -11.000175476074219
    6. ',' → logprob: -11.000175476074219
    7. '                   ' → logprob: -11.625175476074219
    8. '	           ' → logprob: -11.750175476074219
    9. '
' → logprob: -12.125175476074219
    10. '           ' → logprob: -12.500175476074219

Token 1329: ' mc' (ID: 36958)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.28653112053871155
    2. 'mc' (adapté à ' mc') → logprob: -2.1615312099456787
    3. 'mx' → logprob: -2.6615312099456787
    4. 'c' → logprob: -3.5365312099456787
    5. '   ' → logprob: -4.5365309715271
    6. 'child' → logprob: -5.0365309715271
    7. 'cc' → logprob: -5.4115309715271
    8. ' cx' → logprob: -5.6615309715271
    9. '       ' → logprob: -5.9115309715271
    10. 'cm' → logprob: -5.9115309715271

Token 1330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7766656875610352
    2. '_x' → logprob: -1.2766656875610352
    3. 'x' → logprob: -2.026665687561035
    4. '_acc' → logprob: -2.526665687561035
    5. ',_' → logprob: -3.901665687561035
    6. '_center' → logprob: -4.276665687561035
    7. '_,' → logprob: -5.401665687561035
    8. 'acc' → logprob: -6.026665687561035
    9. ',x' → logprob: -6.151665687561035
    10. 's' → logprob: -6.276665687561035

Token 1331: ' wc' (ID: 44867)
  Prédit: 'mw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mw' → logprob: -0.02240373007953167
    2. 'w' → logprob: -5.022403717041016
    3. 'wc' → logprob: -5.397403717041016
    4. ' mw' → logprob: -5.397403717041016
    5. 'cw' → logprob: -5.522403717041016
    6. 'mc' → logprob: -6.647403717041016
    7. 'ww' → logprob: -7.022403717041016
    8. 'wt' → logprob: -9.147403717041016
    9. 'wm' → logprob: -9.772403717041016
    10. 'c' → logprob: -10.397403717041016

Token 1332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196959316730499
    2. ' =' → logprob: -2.811969518661499
    3. '=i' → logprob: -14.936969757080078
    4. ' ' → logprob: -15.061969757080078
    5. '=_' → logprob: -15.061969757080078
    6. '=c' → logprob: -15.311969757080078
    7. '=get' → logprob: -15.561969757080078
    8. '=w' → logprob: -15.936969757080078
    9. ',' → logprob: -16.061969757080078
    10. '=
' → logprob: -16.061969757080078

Token 1333: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -2.15310683415737e-05
    2. ' dfs' → logprob: -10.750021934509277
    3. 'df' → logprob: -19.25002098083496
    4. 'd' → logprob: -20.87502098083496
    5. 'DFS' → logprob: -21.37502098083496
    6. '   ' → logprob: -21.75002098083496
    7. 'def' → logprob: -23.37502098083496
    8. '
' → logprob: -23.50002098083496
    9. 'fs' → logprob: -23.62502098083496
    10. 'ds' → logprob: -24.12502098083496

Token 1334: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.00010127831774298102
    2. 'acc' → logprob: -9.375101089477539
    3. 'c' → logprob: -11.375101089477539
    4. '(c' → logprob: -12.750101089477539
    5. '_ac' → logprob: -14.750101089477539
    6. '
' → logprob: -15.125101089477539
    7. ' acc' → logprob: -15.250101089477539
    8. '[c' → logprob: -15.500101089477539
    9. 'Acc' → logprob: -15.500101089477539
    10. 's' → logprob: -15.625101089477539

Token 1335: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.320199877838604e-07
    2. '(
' → logprob: -15.75
    3. ' (' → logprob: -15.875
    4. '(' → logprob: -16.125
    5. 'c' → logprob: -18.5
    6. '   ' → logprob: -19.375
    7. '©' → logprob: -19.625
    8. ')' → logprob: -19.875
    9. ')(' → logprob: -19.875
    10. ')c' → logprob: -20.0

Token 1336: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.49625688791275024
    2. ')' → logprob: -0.9962568879127502
    3. '(i' → logprob: -3.9962568283081055
    4. '               ' → logprob: -6.1212568283081055
    5. '           ' → logprob: -7.4962568283081055
    6. '(' → logprob: -7.9962568283081055
    7. '(c' → logprob: -8.496256828308105
    8. '       ' → logprob: -9.246256828308105
    9. '                   ' → logprob: -9.996256828308105
    10. ' (' → logprob: -10.621256828308105

Token 1337: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018664064118638635
    2. '
' → logprob: -6.751866340637207
    3. '                   ' → logprob: -8.126866340637207
    4. '                
' → logprob: -8.376866340637207
    5. '                ' → logprob: -10.251866340637207
    6. 'mx' → logprob: -11.001866340637207
    7. '			' → logprob: -11.251866340637207
    8. '                       ' → logprob: -11.626866340637207
    9. '              ' → logprob: -11.626866340637207
    10. '           ' → logprob: -11.626866340637207

Token 1338: ' w' (ID: 286)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.3277428150177002
    2. ' mx' → logprob: -1.9527428150177002
    3. '               ' → logprob: -2.0777428150177
    4. 'w' (adapté à ' w') → logprob: -4.702742576599121
    5. 'mc' → logprob: -6.702742576599121
    6. ' w' → logprob: -7.327742576599121
    7. '           ' → logprob: -7.827742576599121
    8. ' mc' → logprob: -7.952742576599121
    9. '            ' → logprob: -8.577742576599121
    10. '                ' → logprob: -8.577742576599121

Token 1339: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0007743701571598649
    2. '_' → logprob: -7.500774383544922
    3. ' _' → logprob: -9.375774383544922
    4. ' +=' → logprob: -10.000774383544922
    5. '+=' → logprob: -10.750774383544922
    6. '+' → logprob: -11.500774383544922
    7. '_s' → logprob: -11.500774383544922
    8. '_add' → logprob: -11.625774383544922
    9. '_SUM' → logprob: -11.750774383544922
    10. '=_' → logprob: -12.125774383544922

Token 1340: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023262368515133858
    2. ' +=' → logprob: -3.7732622623443604
    3. '+' → logprob: -11.773262023925781
    4. ']+=' → logprob: -12.023262023925781
    5. '```' → logprob: -14.648262023925781
    6. '=' → logprob: -14.648262023925781
    7. '*=' → logprob: -14.898262023925781
    8. '           ' → logprob: -15.148262023925781
    9. '   ' → logprob: -15.148262023925781
    10. '+=(' → logprob: -15.273262023925781

Token 1341: ' wc' (ID: 44867)
  Prédit: 'wc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wc' → logprob: -0.0001234428636962548
    2. ' wc' → logprob: -9.000123023986816
    3. 'w' → logprob: -18.750123977661133
    4. '   ' → logprob: -19.000123977661133
    5. '_wc' → logprob: -19.875123977661133
    6. '
' → logprob: -20.375123977661133
    7. '       ' → logprob: -22.000123977661133
    8. ' ' → logprob: -22.375123977661133
    9. 'ws' → logprob: -22.375123977661133
    10. '```' → logprob: -23.000123977661133

Token 1342: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.734433114528656
    2. '
' → logprob: -1.3594331741333008
    3. 'mc' → logprob: -1.9844331741333008
    4. '           ' → logprob: -2.734433174133301
    5. ' mc' → logprob: -3.609433174133301
    6. '                   ' → logprob: -4.484433174133301
    7. ',' → logprob: -4.609433174133301
    8. '(mc' → logprob: -4.609433174133301
    9. '_mc' → logprob: -7.234433174133301
    10. 'mx' → logprob: -7.734433174133301

Token 1343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009511216776445508
    2. 'mx' → logprob: -8.250950813293457
    3. 'mc' → logprob: -8.375950813293457
    4. ' mc' → logprob: -8.875950813293457
    5. '
' → logprob: -9.000950813293457
    6. ' mx' → logprob: -9.750950813293457
    7. '```' → logprob: -9.875950813293457
    8. '                   ' → logprob: -10.000950813293457
    9. '           ' → logprob: -11.625950813293457
    10. '(mc' → logprob: -11.750950813293457

Token 1344: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' (adapté à ' mx') → logprob: -0.10199221223592758
    2. ' mx' → logprob: -2.601992130279541
    3. 'mc' → logprob: -3.851992130279541
    4. ' mc' → logprob: -6.601992130279541
    5. '           ' → logprob: -8.7269926071167
    6. '               ' → logprob: -9.8519926071167
    7. '                   ' → logprob: -11.1019926071167
    8. '       ' → logprob: -12.7269926071167
    9. '   ' → logprob: -13.2269926071167
    10. '(mx' → logprob: -13.2269926071167

Token 1345: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.005784566048532724
    2. '_' → logprob: -5.755784511566162
    3. ' _' → logprob: -6.130784511566162
    4. '*' → logprob: -8.75578498840332
    5. '_s' → logprob: -9.13078498840332
    6. '*_' → logprob: -9.38078498840332
    7. 's' → logprob: -10.63078498840332
    8. '+' → logprob: -11.75578498840332
    9. '_SUM' → logprob: -12.38078498840332
    10. ',_' → logprob: -12.50578498840332

Token 1346: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31338152289390564
    2. '+=' → logprob: -1.313381552696228
    3. '*=' → logprob: -9.68838119506836
    4. ' *=' → logprob: -10.56338119506836
    5. '=' → logprob: -11.56338119506836
    6. '   ' → logprob: -11.68838119506836
    7. ']+=' → logprob: -12.68838119506836
    8. '           ' → logprob: -12.68838119506836
    9. '       ' → logprob: -13.43838119506836
    10. '```' → logprob: -13.56338119506836

Token 1347: ' mc' (ID: 36958)
  Prédit: 'mc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mc' → logprob: -0.07911152392625809
    2. ' mc' → logprob: -2.5791115760803223
    3. 'wc' → logprob: -8.829111099243164
    4. '(mc' → logprob: -9.829111099243164
    5. 'mx' → logprob: -11.079111099243164
    6. ' wc' → logprob: -12.829111099243164
    7. '_mc' → logprob: -13.579111099243164
    8. '   ' → logprob: -14.204111099243164
    9. ' mx' → logprob: -15.079111099243164
    10. ' ' → logprob: -15.204111099243164

Token 1348: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47407785058021545
    2. '*' → logprob: -0.9740778207778931
    3. '*w' → logprob: -14.474078178405762
    4. '```' → logprob: -16.099077224731445
    5. '[' → logprob: -16.724077224731445
    6. ' *
' → logprob: -16.849077224731445
    7. ' ' → logprob: -16.849077224731445
    8. ' ' → logprob: -16.974077224731445
    9. '*
' → logprob: -17.099077224731445
    10. '           ' → logprob: -17.224077224731445

Token 1349: 'wc' (ID: 51378)
  Prédit: 'wc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wc' → logprob: -8.494741632603109e-05
    2. ' wc' → logprob: -9.37508487701416
    3. 'w' → logprob: -17.750085830688477
    4. '_wc' → logprob: -18.375085830688477
    5. 'ws' → logprob: -18.875085830688477
    6. 'wt' → logprob: -19.125085830688477
    7. '```' → logprob: -19.500085830688477
    8. '   ' → logprob: -19.875085830688477
    9. 'wx' → logprob: -20.125085830688477
    10. 'wch' → logprob: -20.250085830688477

Token 1350: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05500573292374611
    2. '
' → logprob: -2.9300057888031006
    3. '       ' → logprob: -10.30500602722168
    4. '               ' → logprob: -10.43000602722168
    5. ',' → logprob: -11.05500602722168
    6. '   ' → logprob: -11.93000602722168
    7. '	       ' → logprob: -11.93000602722168
    8. '          ' → logprob: -12.55500602722168
    9. ' return' → logprob: -12.55500602722168
    10. '    
' → logprob: -12.80500602722168

Token 1351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015278366627171636
    2. '
' → logprob: -7.126527786254883
    3. '               ' → logprob: -7.376527786254883
    4. '       ' → logprob: -10.376527786254883
    5. '                   ' → logprob: -11.376527786254883
    6. '   ' → logprob: -11.626527786254883
    7. '	       ' → logprob: -11.876527786254883
    8. ' return' → logprob: -12.001527786254883
    9. 'return' → logprob: -12.126527786254883
    10. ',' → logprob: -12.376527786254883

Token 1352: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.5721632838249207
    2. ' acc' → logprob: -1.8221633434295654
    3. '   ' → logprob: -1.9471633434295654
    4. '           ' → logprob: -2.3221633434295654
    5. '
' → logprob: -3.8221633434295654
    6. '       ' → logprob: -4.697163105010986
    7. 'center' → logprob: -6.447163105010986
    8. 'ac' → logprob: -8.322163581848145
    9. ' center' → logprob: -9.197163581848145
    10. '	acc' → logprob: -9.697163581848145

Token 1353: '_weight' (ID: 34711)
  Prédit: '_center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.00012737659562844783
    2. '_weight' → logprob: -9.250127792358398
    3. '_' → logprob: -10.875127792358398
    4. '_cent' → logprob: -12.250127792358398
    5. '_c' → logprob: -13.375127792358398
    6. '_token' → logprob: -14.125127792358398
    7. '_acc' → logprob: -14.125127792358398
    8. '```' → logprob: -14.375127792358398
    9. '\' → logprob: -14.750127792358398
    10. '_weights' → logprob: -14.875127792358398

Token 1354: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.000000953674316
    3. '=[' → logprob: -16.000001907348633
    4. '=' → logprob: -16.000001907348633
    5. '[I' → logprob: -16.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '=i' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '[ind' → logprob: -18.250001907348633
    10. '\[' → logprob: -18.750001907348633

Token 1355: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009183663059957325
    2. ']' → logprob: -7.500918388366699
    3. '=' → logprob: -8.0009183883667
    4. ']=' → logprob: -10.8759183883667
    5. '=i' → logprob: -12.6259183883667
    6. '[' → logprob: -13.2509183883667
    7. '][' → logprob: -13.7509183883667
    8. '           ' → logprob: -13.8759183883667
    9. 'i' → logprob: -14.0009183883667
    10. '   ' → logprob: -14.0009183883667

Token 1356: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5761137008666992
    2. '=' → logprob: -0.8261137008666992
    3. '=i' → logprob: -9.0761137008667
    4. '=
' → logprob: -9.9511137008667
    5. '[' → logprob: -12.3261137008667
    6. ' =' → logprob: -12.5761137008667
    7. '=[' → logprob: -12.9511137008667
    8. '=

' → logprob: -13.9511137008667
    9. '[
' → logprob: -15.4511137008667
    10. '```' → logprob: -15.7011137008667

Token 1357: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.7610454708337784e-05
    2. ' w' → logprob: -10.500027656555176
    3. '   ' → logprob: -20.37502670288086
    4. '           ' → logprob: -21.00002670288086
    5. '	w' → logprob: -21.87502670288086
    6. '       ' → logprob: -22.50002670288086
    7. '_w' → logprob: -25.12502670288086
    8. '               ' → logprob: -25.37502670288086
    9. '=w' → logprob: -26.00002670288086
    10. '(w' → logprob: -26.50002670288086

Token 1358: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.200166469876422e-06
    2. 'sum' → logprob: -12.750004768371582
    3. 'um' → logprob: -13.500004768371582
    4. 'Sum' → logprob: -14.875004768371582
    5. '_SUM' → logprob: -15.500004768371582
    6. '```' → logprob: -16.7500057220459
    7. '[_' → logprob: -17.1250057220459
    8. '_s' → logprob: -17.1250057220459
    9. 'w' → logprob: -17.5000057220459
    10. 'SUM' → logprob: -17.7500057220459

Token 1359: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010504739359021187
    2. '
' → logprob: -5.260504722595215
    3. '       ' → logprob: -5.635504722595215
    4. 'acc' → logprob: -7.260504722595215
    5. '   ' → logprob: -7.510504722595215
    6. ' acc' → logprob: -9.010504722595215
    7. '<|end|>' → logprob: -9.260504722595215
    8. '               ' → logprob: -9.385504722595215
    9. '(acc' → logprob: -10.260504722595215
    10. '	acc' → logprob: -10.885504722595215

Token 1360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08057314902544022
    2. 'acc' → logprob: -2.580573081970215
    3. ' acc' → logprob: -6.830573081970215
    4. '       ' → logprob: -7.955573081970215
    5. '   ' → logprob: -8.580573081970215
    6. '               ' → logprob: -10.580573081970215
    7. '                   ' → logprob: -11.580573081970215
    8. '(acc' → logprob: -11.705573081970215
    9. '	acc' → logprob: -11.830573081970215
    10. '
' → logprob: -12.580573081970215

Token 1361: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.00018947436183225363
    2. '           ' → logprob: -8.750189781188965
    3. ' acc' → logprob: -11.125189781188965
    4. '   ' → logprob: -11.500189781188965
    5. '       ' → logprob: -12.125189781188965
    6. '               ' → logprob: -15.125189781188965
    7. 'return' → logprob: -15.625189781188965
    8. 'ac' → logprob: -16.25018882751465
    9. '
' → logprob: -16.37518882751465
    10. '	acc' → logprob: -17.62518882751465

Token 1362: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -4.008129963040119e-06
    2. 'center' → logprob: -13.125003814697266
    3. '_cent' → logprob: -13.750003814697266
    4. '_c' → logprob: -15.625003814697266
    5. '_x' → logprob: -16.375003814697266
    6. 'Center' → logprob: -16.500003814697266
    7. '_CENTER' → logprob: -16.500003814697266
    8. '_' → logprob: -16.625003814697266
    9. '
' → logprob: -16.625003814697266
    10. '_weight' → logprob: -16.750003814697266

Token 1363: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.45848218582978e-06
    2. 'x' → logprob: -13.00000286102295
    3. '```' → logprob: -15.75000286102295
    4. '[' → logprob: -17.250001907348633
    5. ' _' → logprob: -18.125001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '[x' → logprob: -19.625001907348633
    8. '[_' → logprob: -20.000001907348633
    9. '	x' → logprob: -20.125001907348633
    10. '_[' → logprob: -20.250001907348633

Token 1364: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '=' → logprob: -15.375
    3. '[' → logprob: -17.0
    4. 'i' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. ' =' → logprob: -18.125
    7. '=i' → logprob: -18.5
    8. '   ' → logprob: -19.0
    9. '[
' → logprob: -19.0
    10. '\[' → logprob: -19.375

Token 1365: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09993184357881546
    2. ']' → logprob: -2.4749319553375244
    3. '=' → logprob: -5.099931716918945
    4. ']=' → logprob: -5.599931716918945
    5. ' =' → logprob: -7.599931716918945
    6. ')' → logprob: -8.099931716918945
    7. '   ' → logprob: -9.474931716918945
    8. '[' → logprob: -9.724931716918945
    9. '=i' → logprob: -10.224931716918945
    10. '][' → logprob: -10.349931716918945

Token 1366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003558423195499927
    2. ' =' → logprob: -8.00035572052002
    3. '[i' → logprob: -10.87535572052002
    4. '=
' → logprob: -14.25035572052002
    5. '=i' → logprob: -14.62535572052002
    6. '[' → logprob: -15.50035572052002
    7. '=int' → logprob: -17.000356674194336
    8. '=

' → logprob: -17.000356674194336
    9. '＝' → logprob: -17.250356674194336
    10. '=`' → logprob: -17.500356674194336

Token 1367: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -1.1637164789135568e-05
    2. ' mx' → logprob: -11.500011444091797
    3. '(mx' → logprob: -13.750011444091797
    4. 'mc' → logprob: -15.375011444091797
    5. '   ' → logprob: -15.625011444091797
    6. '.mx' → logprob: -20.500011444091797
    7. 'm' → logprob: -21.375011444091797
    8. '
' → logprob: -21.500011444091797
    9. 'mex' → logprob: -22.000011444091797
    10. '       ' → logprob: -22.500011444091797

Token 1368: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0010424555512145162
    2. '_center' → logprob: -6.876042366027832
    3. '_x' → logprob: -12.876042366027832
    4. '_' → logprob: -13.251042366027832
    5. '_cent' → logprob: -13.251042366027832
    6. 'sum' → logprob: -13.376042366027832
    7. '_c' → logprob: -15.126042366027832
    8. '_pos' → logprob: -15.376042366027832
    9. '/' → logprob: -15.626042366027832
    10. '+' → logprob: -15.626042366027832

Token 1369: ' /' (ID: 820)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1691436469554901
    2. '/' → logprob: -2.2941436767578125
    3. ' /' → logprob: -2.9191436767578125
    4. '/w' → logprob: -7.4191436767578125
    5. '   ' → logprob: -9.044143676757812
    6. '[' → logprob: -10.419143676757812
    7. '[w' → logprob: -11.294143676757812
    8. '/
' → logprob: -12.044143676757812
    9. '```' → logprob: -12.169143676757812
    10. '
' → logprob: -13.169143676757812

Token 1370: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.2729995988775045e-06
    2. ' w' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.5000057220459
    4. 'acc' → logprob: -19.8750057220459
    5. '_w' → logprob: -21.1250057220459
    6. '(w' → logprob: -22.0000057220459
    7. '	w' → logprob: -22.5000057220459
    8. '       ' → logprob: -22.8750057220459
    9. '
' → logprob: -23.5000057220459
    10. '           ' → logprob: -24.2500057220459

Token 1371: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.21088366210460663
    2. '[i' → logprob: -1.835883617401123
    3. '_weight' → logprob: -4.335883617401123
    4. 'ight' → logprob: -4.335883617401123
    5. 'eight' → logprob: -5.835883617401123
    6. '   ' → logprob: -8.335884094238281
    7. '_count' → logprob: -8.585884094238281
    8. '[' → logprob: -8.585884094238281
    9. 'e' → logprob: -9.085884094238281
    10. '_size' → logprob: -9.335884094238281

Token 1372: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18349188566207886
    2. '   ' → logprob: -1.8084919452667236
    3. '       ' → logprob: -5.8084917068481445
    4. 'return' → logprob: -8.433491706848145
    5. '
' → logprob: -9.058491706848145
    6. ' return' → logprob: -9.308491706848145
    7. ' ' → logprob: -9.558491706848145
    8. '               ' → logprob: -9.558491706848145
    9. '	return' → logprob: -9.808491706848145
    10. '    
' → logprob: -11.058491706848145

Token 1373: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.285201758146286
    2. '           ' → logprob: -1.4102017879486084
    3. '       ' → logprob: -5.910201549530029
    4. 'return' → logprob: -7.035201549530029
    5. '	return' → logprob: -8.910202026367188
    6. ' return' → logprob: -9.160202026367188
    7. ' ' → logprob: -9.910202026367188
    8. '               ' → logprob: -10.160202026367188
    9. '```' → logprob: -10.535202026367188
    10. '                   ' → logprob: -10.660202026367188

Token 1374: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4163439869880676
    2. 'return' (adapté à ' return') → logprob: -1.4163439273834229
    3. '   ' → logprob: -2.416343927383423
    4. '       ' → logprob: -5.041344165802002
    5. ' return' → logprob: -6.166344165802002
    6. '	return' → logprob: -9.166343688964844
    7. ' ' → logprob: -11.416343688964844
    8. '               ' → logprob: -11.791343688964844
    9. '		' → logprob: -12.666343688964844
    10. '                   ' → logprob: -12.916343688964844

Token 1375: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -4.084206375409849e-05
    2. ' acc' → logprob: -10.250041007995605
    3. '(acc' → logprob: -12.125041007995605
    4. '   ' → logprob: -17.12504005432129
    5. '	acc' → logprob: -18.50004005432129
    6. '(' → logprob: -20.37504005432129
    7. 'ac' → logprob: -20.50004005432129
    8. '_acc' → logprob: -21.37504005432129
    9. ' (' → logprob: -21.50004005432129
    10. 'i' → logprob: -21.87504005432129

Token 1376: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: 0.0
    2. 'center' → logprob: -16.75
    3. 'acc' → logprob: -17.25
    4. 'Center' → logprob: -17.75
    5. '_cent' → logprob: -18.25
    6. 'acenter' → logprob: -18.75
    7. '_CENTER' → logprob: -19.75
    8. '_acc' → logprob: -19.75
    9. '
' → logprob: -20.25
    10. 'acent' → logprob: -20.5

Token 1377: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -15.125000953674316
    3. 'acc' → logprob: -16.0
    4. '_center' → logprob: -17.0
    5. '```' → logprob: -17.75
    6. '   ' → logprob: -18.75
    7. '[i' → logprob: -19.375
    8. '_acc' → logprob: -20.0
    9. 'const' → logprob: -20.0
    10. '_i' → logprob: -20.125

Token 1378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.482821431243792e-05
    2. '[' → logprob: -9.50008487701416
    3. '```' → logprob: -12.00008487701416
    4. '\[' → logprob: -14.50008487701416
    5. ' [' → logprob: -14.62508487701416
    6. '[I' → logprob: -14.62508487701416
    7. ',i' → logprob: -14.87508487701416
    8. '   ' → logprob: -15.25008487701416
    9. '[token' → logprob: -15.50008487701416
    10. '[int' → logprob: -16.000083923339844

Token 1379: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3901107609272003
    2. ',' → logprob: -1.140110731124878
    3. ',i' → logprob: -5.765110969543457
    4. ' ,' → logprob: -9.890110969543457
    5. '][' → logprob: -11.140110969543457
    6. '   ' → logprob: -11.640110969543457
    7. ',[' → logprob: -11.765110969543457
    8. '(i' → logprob: -12.265110969543457
    9. '],' → logprob: -12.640110969543457
    10. '[' → logprob: -13.140110969543457

Token 1380: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.676292231422849e-05
    2. ' acc' → logprob: -11.000017166137695
    3. '(acc' → logprob: -22.125017166137695
    4. '	acc' → logprob: -22.375017166137695
    5. '   ' → logprob: -22.500017166137695
    6. 'w' → logprob: -22.750017166137695
    7. 'ac' → logprob: -23.125017166137695
    8. '
' → logprob: -23.500017166137695
    9. '_acc' → logprob: -23.625017166137695
    10. 'ack' → logprob: -24.625017166137695

Token 1381: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -7.703443770878948e-06
    2. 'weight' → logprob: -11.875007629394531
    3. '_center' → logprob: -14.625007629394531
    4. '[i' → logprob: -16.00000762939453
    5. '_WEIGHT' → logprob: -16.87500762939453
    6. 'Weight' → logprob: -17.00000762939453
    7. '
' → logprob: -17.75000762939453
    8. ' weight' → logprob: -18.75000762939453
    9. '-weight' → logprob: -19.37500762939453
    10. '_weights' → logprob: -19.37500762939453

Token 1382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2378600735682994e-05
    2. '[' → logprob: -10.500032424926758
    3. '<|end|>' → logprob: -13.250032424926758
    4. '[
' → logprob: -14.000032424926758
    5. '```' → logprob: -14.375032424926758
    6. 'i' → logprob: -14.500032424926758
    7. ']' → logprob: -15.000032424926758
    8. '<|end|>' → logprob: -15.625032424926758
    9. '\[' → logprob: -16.500032424926758
    10. '[end' → logprob: -16.750032424926758

Token 1383: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4741916358470917
    2. '[i' → logprob: -0.9741916656494141
    3. ')' → logprob: -9.349191665649414
    4. '[' → logprob: -11.974191665649414
    5. '   ' → logprob: -12.099191665649414
    6. '])' → logprob: -12.599191665649414
    7. '][' → logprob: -12.724191665649414
    8. ' ]' → logprob: -12.849191665649414
    9. ']
' → logprob: -12.974191665649414
    10. '       ' → logprob: -13.349191665649414

Token 1384: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040827538818120956
    2. '    
' → logprob: -4.290827751159668
    3. '       ' → logprob: -4.415827751159668
    4. '<|end|>' → logprob: -5.290827751159668
    5. '
' → logprob: -5.415827751159668
    6. 'def' → logprob: -6.540827751159668
    7. '        
' → logprob: -7.165827751159668
    8. '  
' → logprob: -7.915827751159668
    9. '```' → logprob: -8.165827751159668
    10. ' 
' → logprob: -8.790827751159668

Token 1385: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06757677346467972
    2. 'for' (adapté à ' for') → logprob: -2.9425768852233887
    3. ' for' → logprob: -5.192576885223389
    4. '   ' → logprob: -5.942576885223389
    5. 'while' → logprob: -6.567576885223389
    6. '        
' → logprob: -6.692576885223389
    7. 'def' → logprob: -7.067576885223389
    8. 'import' → logprob: -8.56757640838623
    9. '#' → logprob: -9.06757640838623
    10. '    
' → logprob: -9.19257640838623

Token 1386: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1255917251110077
    2. 'root' → logprob: -2.75059175491333
    3. 'r' → logprob: -3.00059175491333
    4. ' i' → logprob: -5.87559175491333
    5. ' root' → logprob: -6.50059175491333
    6. ' r' → logprob: -9.750591278076172
    7. 'rt' → logprob: -12.500591278076172
    8. '_root' → logprob: -13.375591278076172
    9. 'c' → logprob: -13.625591278076172
    10. '   ' → logprob: -15.000591278076172

Token 1387: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17983652651309967
    2. 'in' → logprob: -1.8048365116119385
    3. ',' → logprob: -9.92983627319336
    4. '	in' → logprob: -11.67983627319336
    5. '_in' → logprob: -11.80483627319336
    6. ')' → logprob: -12.55483627319336
    7. 'In' → logprob: -12.55483627319336
    8. '       ' → logprob: -12.67983627319336
    9. '   ' → logprob: -12.80483627319336
    10. '```' → logprob: -13.30483627319336

Token 1388: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.600714161526412e-05
    2. ' range' → logprob: -9.500076293945312
    3. 'roots' → logprob: -13.750076293945312
    4. 'ranges' → logprob: -18.500076293945312
    5. 'root' → logprob: -18.625076293945312
    6. '(range' → logprob: -18.750076293945312
    7. '   ' → logprob: -19.125076293945312
    8. 'pieces' → logprob: -19.375076293945312
    9. '	range' → logprob: -19.875076293945312
    10. 'rang' → logprob: -20.125076293945312

Token 1389: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -5.9153885558771435e-06
    2. 'len' → logprob: -12.250005722045898
    3. '(' → logprob: -14.750005722045898
    4. ' (' → logprob: -15.125005722045898
    5. '   ' → logprob: -16.2500057220459
    6. '       ' → logprob: -16.3750057220459
    7. '[len' → logprob: -17.0000057220459
    8. '(w' → logprob: -17.1250057220459
    9. ',len' → logprob: -17.3750057220459
    10. ' len' → logprob: -17.5000057220459

Token 1390: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.7697225252486533e-06
    2. 'pieces' → logprob: -13.375003814697266
    3. '(' → logprob: -14.000003814697266
    4. ' (' → logprob: -14.625003814697266
    5. '(piece' → logprob: -14.875003814697266
    6. '(parts' → logprob: -15.250003814697266
    7. 'p' → logprob: -16.625003814697266
    8. '(
' → logprob: -16.750003814697266
    9. ' pieces' → logprob: -17.000003814697266
    10. ')' → logprob: -17.500003814697266

Token 1391: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -4.644463479053229e-05
    2. 'pieces' → logprob: -10.000046730041504
    3. ' pieces' → logprob: -15.625046730041504
    4. ')' → logprob: -15.875046730041504
    5. '   ' → logprob: -15.875046730041504
    6. '```' → logprob: -15.875046730041504
    7. 'iece' → logprob: -16.750045776367188
    8. 'ices' → logprob: -16.750045776367188
    9. 'iec' → logprob: -16.750045776367188
    10. 'ie' → logprob: -16.750045776367188

Token 1392: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04872748628258705
    2. '):' → logprob: -3.048727512359619
    3. '       ' → logprob: -9.048727035522461
    4. '           ' → logprob: -11.298727035522461
    5. '():
' → logprob: -12.923727035522461
    6. '):
' → logprob: -13.048727035522461
    7. ')' → logprob: -13.298727035522461
    8. '   ' → logprob: -13.798727035522461
    9. ':
' → logprob: -14.423727035522461
    10. '):

' → logprob: -14.423727035522461

Token 1393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.1928003813372925e-05
    2. '   ' → logprob: -10.625051498413086
    3. ' dfs' → logprob: -11.250051498413086
    4. 'dfs' → logprob: -12.250051498413086
    5. '       ' → logprob: -12.375051498413086
    6. '            
' → logprob: -13.750051498413086
    7. ',' → logprob: -14.250051498413086
    8. ' ' → logprob: -14.250051498413086
    9. '	       ' → logprob: -14.625051498413086
    10. '               ' → logprob: -14.750051498413086

Token 1394: ' dfs' (ID: 51252)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49184679985046387
    2. 'dfs' (adapté à ' dfs') → logprob: -1.2418467998504639
    3. ' dfs' → logprob: -2.366846799850464
    4. '   ' → logprob: -5.866847038269043
    5. '       ' → logprob: -6.616847038269043
    6. '_' → logprob: -7.491847038269043
    7. '               ' → logprob: -7.991847038269043
    8. ' _' → logprob: -8.991847038269043
    9. '
' → logprob: -9.116847038269043
    10. 'd' → logprob: -9.241847038269043

Token 1395: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -5.061676347395405e-05
    2. '(i' → logprob: -10.37505054473877
    3. '_(' → logprob: -12.00005054473877
    4. 'Acc' → logprob: -12.62505054473877
    5. '_ac' → logprob: -13.12505054473877
    6. '_' → logprob: -13.25005054473877
    7. 'acc' → logprob: -13.50005054473877
    8. '```' → logprob: -13.62505054473877
    9. ' _' → logprob: -14.00005054473877
    10. '[i' → logprob: -14.87505054473877

Token 1396: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006457181880250573
    2. '_acc' → logprob: -7.375645637512207
    3. '(' → logprob: -12.250645637512207
    4. ' (' → logprob: -12.625645637512207
    5. 'acc' → logprob: -12.750645637512207
    6. '_(' → logprob: -12.750645637512207
    7. '(
' → logprob: -13.375645637512207
    8. '_' → logprob: -13.750645637512207
    9. '[i' → logprob: -13.875645637512207
    10. '(acc' → logprob: -14.250645637512207

Token 1397: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. ')
' → logprob: -12.375006675720215
    3. ' )' → logprob: -14.500006675720215
    4. '))' → logprob: -14.750006675720215
    5. '   ' → logprob: -15.125006675720215
    6. '       ' → logprob: -15.250006675720215
    7. '())' → logprob: -16.1250057220459
    8. ')`' → logprob: -16.2500057220459
    9. '[' → logprob: -16.6250057220459
    10. ')i' → logprob: -17.1250057220459

Token 1398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019683610647916794
    2. '
' → logprob: -4.394683837890625
    3. '```' → logprob: -5.519683837890625
    4. '   ' → logprob: -6.394683837890625
    5. '        
' → logprob: -8.019683837890625
    6. '#' → logprob: -8.394683837890625
    7. 'def' → logprob: -8.644683837890625
    8. 'bottom' → logprob: -9.519683837890625
    9. 'indent' → logprob: -9.519683837890625
    10. '           ' → logprob: -9.894683837890625

Token 1399: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01820332556962967
    2. 'def' → logprob: -5.018203258514404
    3. '#' (adapté à ' #') → logprob: -5.893203258514404
    4. 'max' → logprob: -7.018203258514404
    5. '```' → logprob: -7.143203258514404
    6. 'while' → logprob: -7.268203258514404
    7. 'x' → logprob: -7.393203258514404
    8. 'import' → logprob: -7.643203258514404
    9. 'for' → logprob: -7.768203258514404
    10. 'rest' → logprob: -8.393203735351562

Token 1400: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5138741731643677
    2. '       ' → logprob: -2.263874053955078
    3. 'x' → logprob: -2.638874053955078
    4. 'def' → logprob: -3.138874053955078
    5. 'min' → logprob: -3.513874053955078
    6. 'max' → logprob: -3.513874053955078
    7. 'forces' → logprob: -4.013874053955078
    8. 'import' → logprob: -4.388874053955078
    9. 'result' → logprob: -4.763874053955078
    10. 'tor' → logprob: -4.888874053955078

Token 1401: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015557861886918545
    2. 'for' → logprob: -5.015557765960693
    3. ' for' → logprob: -5.265557765960693
    4. '   ' → logprob: -6.265557765960693
    5. '#' → logprob: -7.265557765960693
    6. 'import' → logprob: -8.265558242797852
    7. 'min' → logprob: -8.640558242797852
    8. '
' → logprob: -9.015558242797852
    9. 'indent' → logprob: -9.515558242797852
    10. 'max' → logprob: -9.640558242797852

Token 1402: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8125967383384705
    2. 'for' → logprob: -0.9375967383384705
    3. ' for' → logprob: -1.9375967979431152
    4. '   ' → logprob: -4.312596797943115
    5. 'pieces' → logprob: -6.687596797943115
    6. 'if' → logprob: -6.937596797943115
    7. 'x' → logprob: -7.312596797943115
    8. 'indent' → logprob: -7.562596797943115
    9. ' if' → logprob: -7.687596797943115
    10. '#' → logprob: -7.812596797943115

Token 1403: ' stability' (ID: 27827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10828686505556107
    2. 'unst' → logprob: -3.3582868576049805
    3. 'each' → logprob: -3.7332868576049805
    4. 'inst' → logprob: -4.7332868576049805
    5. 'over' → logprob: -5.2332868576049805
    6. 'st' → logprob: -5.2332868576049805
    7. 'balance' → logprob: -5.3582868576049805
    8. '(i' → logprob: -5.9832868576049805
    9. 'stable' → logprob: -6.4832868576049805
    10. ' i' → logprob: -6.4832868576049805

Token 1404: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003730964148417115
    2. 'for' → logprob: -6.253730773925781
    3. '        
' → logprob: -7.128730773925781
    4. '
' → logprob: -8.128730773925781
    5. ' for' → logprob: -8.253730773925781
    6. 'def' → logprob: -8.628730773925781
    7. '```' → logprob: -9.128730773925781
    8. 'st' → logprob: -10.378730773925781
    9. '   ' → logprob: -10.753730773925781
    10. '           ' → logprob: -11.378730773925781

Token 1405: ' each' (ID: 2454)
  Prédit: 'roots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.6026074886322021
    2. 'each' → logprob: -1.4776074886322021
    3. 'root' → logprob: -2.102607488632202
    4. 'piece' → logprob: -3.477607488632202
    5. ' roots' → logprob: -3.727607488632202
    6. 'pieces' → logprob: -3.977607488632202
    7. ' each' → logprob: -4.727607727050781
    8. 'i' → logprob: -4.852607727050781
    9. 'all' → logprob: -5.602607727050781
    10. ' piece' → logprob: -6.102607727050781

Token 1406: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.36404454708099365
    2. 'i' → logprob: -1.9890445470809937
    3. 'root' → logprob: -2.364044666290283
    4. ' piece' → logprob: -2.989044666290283
    5. '   ' → logprob: -4.614044666290283
    6. ' root' → logprob: -4.989044666290283
    7. '       ' → logprob: -5.739044666290283
    8. ' i' → logprob: -5.864044666290283
    9. 'for' → logprob: -8.614044189453125
    10. '
' → logprob: -9.114044189453125

Token 1407: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029757991433143616
    2. 'for' → logprob: -6.127975940704346
    3. ' for' → logprob: -7.377975940704346
    4. '
' → logprob: -9.502975463867188
    5. '        
' → logprob: -9.627975463867188
    6. '```' → logprob: -11.502975463867188
    7. '   ' → logprob: -12.252975463867188
    8. '           ' → logprob: -12.627975463867188
    9. ',' → logprob: -13.252975463867188
    10. '<|end|>' → logprob: -13.877975463867188

Token 1408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014869032427668571
    2. 'for' → logprob: -4.264869213104248
    3. ' for' → logprob: -7.389869213104248
    4. '
' → logprob: -10.26486873626709
    5. '        
' → logprob: -11.13986873626709
    6. '```' → logprob: -11.26486873626709
    7. 'indent' → logprob: -11.88986873626709
    8. '           ' → logprob: -11.88986873626709
    9. '   ' → logprob: -12.01486873626709
    10. ',' → logprob: -14.13986873626709

Token 1409: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006516746943816543
    2. 'for' → logprob: -7.500651836395264
    3. '
' → logprob: -9.875651359558105
    4. '        
' → logprob: -10.750651359558105
    5. ' for' → logprob: -11.000651359558105
    6. '   ' → logprob: -12.125651359558105
    7. '```' → logprob: -13.875651359558105
    8. '           ' → logprob: -14.375651359558105
    9. '#' (adapté à ' #') → logprob: -14.875651359558105
    10. 'def' → logprob: -15.250651359558105

Token 1410: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9594309329986572
    2. 'unst' → logprob: -1.3344309329986572
    3. 'stable' → logprob: -1.4594309329986572
    4. '       ' → logprob: -3.2094309329986572
    5. 'def' → logprob: -3.9594309329986572
    6. 'results' → logprob: -4.084430694580078
    7. 'st' → logprob: -4.084430694580078
    8. 'result' → logprob: -4.334430694580078
    9. '#' → logprob: -5.709430694580078
    10. 'un' → logprob: -6.209430694580078

Token 1411: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005391107406467199
    2. ' i' → logprob: -5.7553911209106445
    3. 'root' → logprob: -7.7553911209106445
    4. 'piece' → logprob: -7.7553911209106445
    5. 'st' → logprob: -8.255391120910645
    6. 'p' → logprob: -8.630391120910645
    7. ' stability' → logprob: -8.755391120910645
    8. '```' → logprob: -8.755391120910645
    9. 'each' → logprob: -9.380391120910645
    10. '(i' → logprob: -9.755391120910645

Token 1412: ' piece' (ID: 9047)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3368452191352844
    2. 'piece' → logprob: -1.7118451595306396
    3. ' piece' → logprob: -2.5868451595306396
    4. ' i' → logprob: -3.5868451595306396
    5. '   ' → logprob: -6.836845397949219
    6. '```' → logprob: -8.211845397949219
    7. '       ' → logprob: -8.461845397949219
    8. 'child' → logprob: -8.461845397949219
    9. '
' → logprob: -8.961845397949219
    10. '(piece' → logprob: -9.461845397949219

Token 1413: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055723629891872406
    2. ',' → logprob: -3.3057236671447754
    3. ':' → logprob: -5.055723667144775
    4. ':
' → logprob: -6.055723667144775
    5. '           ' → logprob: -6.055723667144775
    6. '
' → logprob: -6.555723667144775
    7. '   ' → logprob: -6.555723667144775
    8. '```' → logprob: -6.805723667144775
    9. ' for' → logprob: -7.430723667144775
    10. ' in' → logprob: -8.055723190307617

Token 1414: ' x' (ID: 1215)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.7890694737434387
    2. 'the' → logprob: -1.664069414138794
    3. 'x' → logprob: -1.789069414138794
    4. 'its' → logprob: -2.789069414138794
    5. '(x' → logprob: -3.414069414138794
    6. 'left' → logprob: -3.914069414138794
    7. '   ' → logprob: -4.039069652557373
    8. 'i' → logprob: -4.414069652557373
    9. 'lowest' → logprob: -5.039069652557373
    10. '#' → logprob: -5.289069652557373

Token 1415: 'L' (ID: 43)
  Prédit: '_L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.21100616455078125
    2. '_' → logprob: -2.2110061645507812
    3. '```' → logprob: -3.4610061645507812
    4. '_R' → logprob: -4.336006164550781
    5. '<|end|>' → logprob: -4.711006164550781
    6. '_center' → logprob: -5.086006164550781
    7. '<|end|>' → logprob: -5.086006164550781
    8. '_bottom' → logprob: -6.711006164550781
    9. '_B' → logprob: -6.836006164550781
    10. '_positions' → logprob: -6.961006164550781

Token 1416: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15064281225204468
    2. '_L' → logprob: -2.5256428718566895
    3. ',' → logprob: -3.7756428718566895
    4. ' =' → logprob: -4.0256428718566895
    5. ',_' → logprob: -5.6506428718566895
    6. '_bottom' → logprob: -6.0256428718566895
    7. '=_' → logprob: -6.5256428718566895
    8. '_lower' → logprob: -6.5256428718566895
    9. ' _' → logprob: -6.7756428718566895
    10. '_low' → logprob: -6.9006428718566895

Token 1417: ' x' (ID: 1215)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.104763150215149
    2. 'x' → logprob: -1.104763150215149
    3. '_R' → logprob: -1.104763150215149
    4. '   ' → logprob: -6.354763031005859
    5. '
' → logprob: -6.729763031005859
    6. '```' → logprob: -7.229763031005859
    7. ' x' → logprob: -7.604763031005859
    8. '       ' → logprob: -7.979763031005859
    9. '=' → logprob: -8.22976303100586
    10. '#' → logprob: -8.47976303100586

Token 1418: 'R' (ID: 49)
  Prédit: '_R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_R' → logprob: -0.8844754695892334
    2. 'L' → logprob: -1.1344754695892334
    3. '_L' → logprob: -1.5094754695892334
    4. 'R' → logprob: -3.1344754695892334
    5. '```' → logprob: -7.1344757080078125
    6. '\' → logprob: -10.509475708007812
    7. '_' → logprob: -10.884475708007812
    8. '`' → logprob: -11.134475708007812
    9. '``' → logprob: -11.384475708007812
    10. '[' → logprob: -12.134475708007812

Token 1419: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16065667569637299
    2. ' =' → logprob: -2.535656690597534
    3. '=' → logprob: -3.410656690597534
    4. '
' → logprob: -4.160656452178955
    5. 'for' → logprob: -5.785656452178955
    6. ',' → logprob: -6.285656452178955
    7. '_' → logprob: -6.410656452178955
    8. ':' → logprob: -6.535656452178955
    9. '```' → logprob: -6.535656452178955
    10. '   ' → logprob: -6.660656452178955

Token 1420: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.00014978687977418303
    2. ' bottom' → logprob: -8.875149726867676
    3. '
' → logprob: -13.125149726867676
    4. '           ' → logprob: -13.375149726867676
    5. '   ' → logprob: -13.500149726867676
    6. '```' → logprob: -13.625149726867676
    7. 'range' → logprob: -14.375149726867676
    8. 'x' → logprob: -14.500149726867676
    9. '(bottom' → logprob: -14.625149726867676
    10. '       ' → logprob: -14.875149726867676

Token 1421: ' blocks' (ID: 18125)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.004232377745211124
    2. 'blocks' → logprob: -5.504232406616211
    3. '```' → logprob: -9.379232406616211
    4. '_block' → logprob: -11.004232406616211
    5. '
' → logprob: -11.379232406616211
    6. '   ' → logprob: -12.129232406616211
    7. '       ' → logprob: -12.254232406616211
    8. 'block' → logprob: -12.504232406616211
    9. '_' → logprob: -12.629232406616211
    10. ' blocks' → logprob: -12.879232406616211

Token 1422: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008552397484891117
    2. '
' → logprob: -7.625855445861816
    3. 'for' → logprob: -8.500855445861816
    4. '```' → logprob: -9.875855445861816
    5. '   ' → logprob: -10.625855445861816
    6. '        
' → logprob: -10.875855445861816
    7. 'x' → logprob: -11.250855445861816
    8. ' for' → logprob: -11.375855445861816
    9. ',' → logprob: -11.500855445861816
    10. '           ' → logprob: -11.625855445861816

Token 1423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013536872575059533
    2. '```' → logprob: -7.001353740692139
    3. '           ' → logprob: -8.75135326385498
    4. 'x' → logprob: -9.00135326385498
    5. '   ' → logprob: -10.25135326385498
    6. '`' → logprob: -10.50135326385498
    7. '        
' → logprob: -11.12635326385498
    8. '``' → logprob: -11.25135326385498
    9. ' x' → logprob: -11.37635326385498
    10. '
' → logprob: -11.75135326385498

Token 1424: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019832389429211617
    2. 'x' → logprob: -4.019832611083984
    3. '```' → logprob: -7.769832611083984
    4. ' x' → logprob: -7.894832611083984
    5. '   ' → logprob: -7.894832611083984
    6. '           ' → logprob: -8.019832611083984
    7. 'for' → logprob: -9.644832611083984
    8. ' ' → logprob: -10.519832611083984
    9. '#' (adapté à ' #') → logprob: -11.394832611083984
    10. '``' → logprob: -11.644832611083984

Token 1425: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15154649317264557
    2. '       ' → logprob: -2.0265464782714844
    3. 'for' → logprob: -5.401546478271484
    4. 'import' → logprob: -6.651546478271484
    5. '#' → logprob: -7.151546478271484
    6. '```' → logprob: -7.151546478271484
    7. 'bottom' → logprob: -7.776546478271484
    8. '   ' → logprob: -7.776546478271484
    9. 'For' → logprob: -8.401546478271484
    10. ' x' → logprob: -9.276546478271484

Token 1426: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10603292286396027
    2. '_L' → logprob: -2.3560328483581543
    3. '_' → logprob: -5.606032848358154
    4. '```' → logprob: -7.606032848358154
    5. ' =' → logprob: -8.106033325195312
    6. '=' → logprob: -8.231033325195312
    7. '`' → logprob: -8.981033325195312
    8. ',' → logprob: -9.106033325195312
    9. '
' → logprob: -9.481033325195312
    10. 'R' → logprob: -9.606033325195312

Token 1427: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5071539282798767
    2. ' =' → logprob: -1.3821539878845215
    3. '_' → logprob: -2.6321539878845215
    4. '=' → logprob: -2.8821539878845215
    5. '_,' → logprob: -4.8821539878845215
    6. '_min' → logprob: -6.2571539878845215
    7. ',_' → logprob: -6.7571539878845215
    8. '_lower' → logprob: -6.7571539878845215
    9. 's' → logprob: -6.8821539878845215
    10. '_L' → logprob: -7.5071539878845215

Token 1428: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0038800002075731754
    2. 'bottom' → logprob: -5.753880023956299
    3. 'float' → logprob: -7.753880023956299
    4. ' min' → logprob: -9.00387954711914
    5. 'x' → logprob: -9.75387954711914
    6. 'int' → logprob: -10.12887954711914
    7. 'max' → logprob: -10.37887954711914
    8. '   ' → logprob: -12.25387954711914
    9. '(min' → logprob: -12.87887954711914
    10. 'left' → logprob: -12.87887954711914

Token 1429: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10623490065336227
    2. '(
' → logprob: -3.6062347888946533
    3. 'x' → logprob: -3.8562347888946533
    4. '(' → logprob: -3.9812347888946533
    5. '((' → logprob: -4.231235027313232
    6. '(bottom' → logprob: -4.606235027313232
    7. '([' → logprob: -5.106235027313232
    8. '(block' → logprob: -6.481235027313232
    9. '_x' → logprob: -7.606235027313232
    10. 'bottom' → logprob: -7.981235027313232

Token 1430: ' coordinate' (ID: 30380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08607827126979828
    2. '_L' → logprob: -3.58607816696167
    3. 'L' → logprob: -3.71107816696167
    4. ' =' → logprob: -4.71107816696167
    5. '=' → logprob: -4.96107816696167
    6. '_bottom' → logprob: -6.21107816696167
    7. '```' → logprob: -6.33607816696167
    8. ',' → logprob: -6.71107816696167
    9. '(x' → logprob: -7.21107816696167
    10. '_block' → logprob: -7.21107816696167

Token 1431: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.961094856262207
    2. 'for' → logprob: -2.211094856262207
    3. ' =' → logprob: -2.336094856262207
    4. ',' → logprob: -2.336094856262207
    5. 'bottom' → logprob: -2.336094856262207
    6. '(x' → logprob: -2.336094856262207
    7. '```' → logprob: -2.586094856262207
    8. 'of' → logprob: -2.711094856262207
    9. '_bottom' → logprob: -3.211094856262207
    10. '(bottom' → logprob: -3.336094856262207

Token 1432: ' left' (ID: 3561)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0013121402589604259
    2. '(bottom' → logprob: -7.376312255859375
    3. ' bottom' → logprob: -8.626312255859375
    4. 'b' → logprob: -8.751312255859375
    5. 'x' → logprob: -8.751312255859375
    6. '(x' → logprob: -8.876312255859375
    7. 'block' → logprob: -11.751312255859375
    8. '[x' → logprob: -11.876312255859375
    9. '[' → logprob: -12.001312255859375
    10. '_bottom' → logprob: -12.251312255859375

Token 1433: 'most' (ID: 5309)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.030277766287326813
    2. '_bottom' → logprob: -4.405277729034424
    3. '```' → logprob: -5.905277729034424
    4. 'bottom' → logprob: -5.905277729034424
    5. ')_' → logprob: -6.155277729034424
    6. ')' → logprob: -6.780277729034424
    7. ' _' → logprob: -6.905277729034424
    8. '_block' → logprob: -6.905277729034424
    9. '_b' → logprob: -7.155277729034424
    10. '()' → logprob: -7.405277729034424

Token 1434: ' block' (ID: 4355)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.4156173765659332
    2. '_' → logprob: -1.2906173467636108
    3. '```' → logprob: -3.9156174659729004
    4. '_bottom' → logprob: -4.2906174659729
    5. '+' → logprob: -5.1656174659729
    6. 'block' → logprob: -5.4156174659729
    7. '_block' → logprob: -5.5406174659729
    8. ' bottom' → logprob: -6.0406174659729
    9. '`' → logprob: -6.1656174659729
    10. '_
' → logprob: -6.1656174659729

Token 1435: ' among' (ID: 6200)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9995206594467163
    2. ' =' → logprob: -1.2495206594467163
    3. 'bottom' → logprob: -1.9995206594467163
    4. '```' → logprob: -2.749520778656006
    5. '_bottom' → logprob: -3.124520778656006
    6. '_' → logprob: -3.624520778656006
    7. ',' → logprob: -4.249520778656006
    8. '       ' → logprob: -4.624520778656006
    9. '   ' → logprob: -4.874520778656006
    10. '_blocks' → logprob: -4.999520778656006

Token 1436: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -5.490809417096898e-05
    2. ' bottom' → logprob: -10.625055313110352
    3. '   ' → logprob: -11.125055313110352
    4. 'the' → logprob: -11.750055313110352
    5. '           ' → logprob: -12.625055313110352
    6. '       ' → logprob: -13.500055313110352
    7. '(bottom' → logprob: -13.750055313110352
    8. '
' → logprob: -14.750055313110352
    9. '         ' → logprob: -14.875055313110352
    10. '```' → logprob: -14.875055313110352

Token 1437: ' blocks' (ID: 18125)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.024524111300706863
    2. '_' → logprob: -3.774524211883545
    3. '```' → logprob: -8.399523735046387
    4. '_
' → logprob: -8.524523735046387
    5. ')_' → logprob: -8.649523735046387
    6. '_block' → logprob: -8.649523735046387
    7. '`' → logprob: -9.274523735046387
    8. ' _' → logprob: -9.524523735046387
    9. '"_' → logprob: -9.899523735046387
    10. '_bottom' → logprob: -9.899523735046387

Token 1438: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6023911237716675
    2. '       ' → logprob: -1.4773911237716675
    3. ' =' → logprob: -2.227391242980957
    4. '=
' → logprob: -2.852391242980957
    5. '_' → logprob: -4.352391242980957
    6. '```' → logprob: -4.477391242980957
    7. '_
' → logprob: -4.727391242980957
    8. 'for' → logprob: -5.727391242980957
    9. '   ' → logprob: -5.852391242980957
    10. ' =
' → logprob: -5.852391242980957

Token 1439: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.021888237446546555
    2. 'the' → logprob: -4.021888256072998
    3. 'bottom' → logprob: -5.896888256072998
    4. 'pieces' → logprob: -8.27188777923584
    5. 'each' → logprob: -8.64688777923584
    6. ' piece' → logprob: -8.77188777923584
    7. '```' → logprob: -8.89688777923584
    8. '(piece' → logprob: -10.02188777923584
    9. '   ' → logprob: -10.14688777923584
    10. '[' → logprob: -10.39688777923584

Token 1440: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3272107243537903
    2. 'x' → logprob: -1.5772106647491455
    3. ' =' → logprob: -3.2022106647491455
    4. '=' → logprob: -4.327210903167725
    5. '```' → logprob: -4.577210903167725
    6. '   ' → logprob: -5.952210903167725
    7. ' x' → logprob: -6.577210903167725
    8. '
' → logprob: -7.202210903167725
    9. '``' → logprob: -7.577210903167725
    10. '=
' → logprob: -7.577210903167725

Token 1441: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.651114284992218
    2. '       ' → logprob: -0.776114284992218
    3. '```' → logprob: -4.276114463806152
    4. ' x' → logprob: -6.651114463806152
    5. '   ' → logprob: -6.901114463806152
    6. '
' → logprob: -7.401114463806152
    7. '``' → logprob: -7.776114463806152
    8. '#' → logprob: -8.401114463806152
    9. ',' → logprob: -8.526114463806152
    10. '`' → logprob: -8.901114463806152

Token 1442: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39719295501708984
    2. 'x' → logprob: -1.1471929550170898
    3. '```' → logprob: -5.14719295501709
    4. ' x' → logprob: -5.64719295501709
    5. '   ' → logprob: -7.77219295501709
    6. '``' → logprob: -8.14719295501709
    7. '           ' → logprob: -9.27219295501709
    8. '`' → logprob: -9.89719295501709
    9. ' ' → logprob: -10.77219295501709
    10. '        ' → logprob: -11.39719295501709

Token 1443: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007900102995336056
    2. '       ' → logprob: -4.882900238037109
    3. '#' → logprob: -8.75790023803711
    4. ' x' → logprob: -9.88290023803711
    5. '   ' → logprob: -10.00790023803711
    6. '```' → logprob: -11.13290023803711
    7. '           ' → logprob: -11.88290023803711
    8. 'import' → logprob: -12.00790023803711
    9. '
' → logprob: -12.13290023803711
    10. '``' → logprob: -13.50790023803711

Token 1444: 'R' (ID: 49)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07041296362876892
    2. 'R' → logprob: -2.6954128742218018
    3. '_L' → logprob: -8.320412635803223
    4. '_R' → logprob: -8.945412635803223
    5. '=' → logprob: -10.195412635803223
    6. '_' → logprob: -10.695412635803223
    7. '```' → logprob: -11.070412635803223
    8. ' =' → logprob: -11.445412635803223
    9. '`' → logprob: -13.070412635803223
    10. '\' → logprob: -13.070412635803223

Token 1445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34846898913383484
    2. '=' → logprob: -1.2234690189361572
    3. ',' → logprob: -11.473468780517578
    4. '   ' → logprob: -12.223468780517578
    5. 'x' → logprob: -13.348468780517578
    6. '```' → logprob: -13.473468780517578
    7. ' ' → logprob: -13.848468780517578
    8. '       ' → logprob: -13.848468780517578
    9. '_' → logprob: -13.973468780517578
    10. ')' → logprob: -14.723468780517578

Token 1446: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.575969934463501
    2. ' max' → logprob: -0.825969934463501
    3. 'min' → logprob: -10.950969696044922
    4. ' min' → logprob: -11.450969696044922
    5. '(max' → logprob: -13.700969696044922
    6. ' x' → logprob: -14.700969696044922
    7. 'x' → logprob: -15.200969696044922
    8. '
' → logprob: -15.575969696044922
    9. '   ' → logprob: -16.450969696044922
    10. ' ' → logprob: -16.575969696044922

Token 1447: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07057039439678192
    2. '(x' → logprob: -3.320570468902588
    3. ' x' → logprob: -3.820570468902588
    4. '_x' → logprob: -5.070570468902588
    5. '(' → logprob: -7.195570468902588
    6. 'bottom' → logprob: -7.820570468902588
    7. ' (' → logprob: -7.945570468902588
    8. '([' → logprob: -7.945570468902588
    9. '((' → logprob: -8.07056999206543
    10. '[x' → logprob: -8.32056999206543

Token 1448: ' coordinate' (ID: 30380)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5602297186851501
    2. 'coordinate' → logprob: -2.060229778289795
    3. ' x' → logprob: -2.560229778289795
    4. 'bottom' → logprob: -2.685229778289795
    5. '_coordinate' → logprob: -2.935229778289795
    6. '_blocks' → logprob: -3.935229778289795
    7. ' bottom' → logprob: -3.935229778289795
    8. '_block' → logprob: -4.060229778289795
    9. ' coordinate' → logprob: -4.685229778289795
    10. '   ' → logprob: -4.935229778289795

Token 1449: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2623671591281891
    2. ' of' → logprob: -1.8873671293258667
    3. '_of' → logprob: -3.1373672485351562
    4. 'bottom' → logprob: -4.137367248535156
    5. '_bottom' → logprob: -5.512367248535156
    6. '```' → logprob: -5.512367248535156
    7. '=' → logprob: -5.887367248535156
    8. '_' → logprob: -6.137367248535156
    9. '+' → logprob: -6.387367248535156
    10. ',' → logprob: -7.012367248535156

Token 1450: ' right' (ID: 1849)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0007923588855192065
    2. 'right' → logprob: -7.625792503356934
    3. ' bottom' → logprob: -8.500792503356934
    4. 'x' → logprob: -9.875792503356934
    5. 'block' → logprob: -11.125792503356934
    6. 'b' → logprob: -11.500792503356934
    7. '
' → logprob: -12.000792503356934
    8. '(bottom' → logprob: -12.250792503356934
    9. '[x' → logprob: -12.750792503356934
    10. '[b' → logprob: -12.875792503356934

Token 1451: 'most' (ID: 5309)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.17875313758850098
    2. '_' → logprob: -2.928753137588501
    3. '_block' → logprob: -3.053753137588501
    4. ']_' → logprob: -4.178752899169922
    5. ')_' → logprob: -4.553752899169922
    6. 'most' → logprob: -4.678752899169922
    7. ']' → logprob: -4.928752899169922
    8. ')' → logprob: -5.053752899169922
    9. '+' → logprob: -5.178752899169922
    10. '```' → logprob: -5.553752899169922

Token 1452: ' block' (ID: 4355)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.9259613752365112
    2. '_block' → logprob: -1.4259613752365112
    3. 'coordinate' → logprob: -2.925961494445801
    4. '_coordinate' → logprob: -2.925961494445801
    5. ' bottom' → logprob: -3.050961494445801
    6. '```' → logprob: -3.050961494445801
    7. '_bottom' → logprob: -3.175961494445801
    8. '_' → logprob: -3.175961494445801
    9. 'block' → logprob: -4.300961494445801
    10. '`' → logprob: -4.425961494445801

Token 1453: ' among' (ID: 6200)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.9800362586975098
    2. '```' → logprob: -1.2300362586975098
    3. '_of' → logprob: -2.7300362586975098
    4. '_' → logprob: -2.7300362586975098
    5. '_bottom' → logprob: -3.4800362586975098
    6. '   ' → logprob: -3.7300362586975098
    7. ' of' → logprob: -3.7300362586975098
    8. '+' → logprob: -3.8550362586975098
    9. 'for' → logprob: -4.10503625869751
    10. '_blocks' → logprob: -4.23003625869751

Token 1454: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0001029471677611582
    2. 'piece' → logprob: -10.250102996826172
    3. 'the' → logprob: -10.375102996826172
    4. ' bottom' → logprob: -10.625102996826172
    5. '```' → logprob: -12.125102996826172
    6. 'x' → logprob: -13.250102996826172
    7. 'each' → logprob: -13.625102996826172
    8. '
' → logprob: -13.750102996826172
    9. '   ' → logprob: -14.000102996826172
    10. 'top' → logprob: -14.625102996826172

Token 1455: ' blocks' (ID: 18125)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.0012872596271336079
    2. 'blocks' → logprob: -6.876287460327148
    3. '```' → logprob: -9.251287460327148
    4. '_block' → logprob: -10.251287460327148
    5. ' blocks' → logprob: -10.751287460327148
    6. '``' → logprob: -11.001287460327148
    7. '_' → logprob: -11.126287460327148
    8. '
' → logprob: -11.126287460327148
    9. '   ' → logprob: -11.626287460327148
    10. ')_' → logprob: -12.126287460327148

Token 1456: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1322208195924759
    2. 'for' → logprob: -2.88222074508667
    3. '```' → logprob: -4.00722074508667
    4. '=' → logprob: -4.25722074508667
    5. '           ' → logprob: -5.13222074508667
    6. '+' → logprob: -5.13222074508667
    7. ',' → logprob: -6.00722074508667
    8. ' =' → logprob: -6.13222074508667
    9. '#' → logprob: -6.13222074508667
    10. '   ' → logprob: -6.38222074508667

Token 1457: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.00010485442908247933
    2. 'bottom' → logprob: -9.750104904174805
    3. 'the' → logprob: -10.625104904174805
    4. '```' → logprob: -11.125104904174805
    5. ' piece' → logprob: -12.125104904174805
    6. '(piece' → logprob: -14.000104904174805
    7. '
' → logprob: -14.875104904174805
    8. 'pieces' → logprob: -15.500104904174805
    9. '   ' → logprob: -15.875104904174805
    10. 'piec' → logprob: -16.500104904174805

Token 1458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15738120675086975
    2. 'for' → logprob: -2.282381296157837
    3. 'x' → logprob: -3.907381296157837
    4. '```' → logprob: -4.907381057739258
    5. '
' → logprob: -5.532381057739258
    6. '#' → logprob: -5.782381057739258
    7. ' for' → logprob: -5.907381057739258
    8. '   ' → logprob: -6.657381057739258
    9. 'import' → logprob: -7.157381057739258
    10. 'For' → logprob: -7.407381057739258

Token 1459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004428694024682045
    2. 'for' → logprob: -5.754428863525391
    3. '   ' → logprob: -8.00442886352539
    4. '```' → logprob: -8.25442886352539
    5. '
' → logprob: -8.75442886352539
    6. ' for' → logprob: -9.00442886352539
    7. 'x' → logprob: -9.00442886352539
    8. '           ' → logprob: -9.12942886352539
    9. 'For' → logprob: -10.00442886352539
    10. '#' → logprob: -10.75442886352539

Token 1460: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026241309940814972
    2. 'for' → logprob: -4.026241302490234
    3. 'x' → logprob: -5.651241302490234
    4. '```' → logprob: -6.026241302490234
    5. '
' → logprob: -7.151241302490234
    6. ' for' → logprob: -7.651241302490234
    7. '   ' → logprob: -7.651241302490234
    8. 'For' → logprob: -9.026241302490234
    9. '           ' → logprob: -9.526241302490234
    10. 'import' → logprob: -10.026241302490234

Token 1461: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3033011555671692
    2. '       ' → logprob: -1.4283010959625244
    3. 'x' → logprob: -4.5533013343811035
    4. 'st' → logprob: -5.1783013343811035
    5. 'import' → logprob: -6.9283013343811035
    6. '#' → logprob: -6.9283013343811035
    7. 'For' → logprob: -7.3033013343811035
    8. ' for' → logprob: -7.6783013343811035
    9. 'result' → logprob: -7.6783013343811035
    10. 'results' → logprob: -7.8033013343811035

Token 1462: ' center' (ID: 6170)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.125509262084961
    2. 'for' → logprob: -1.375509262084961
    3. '       ' → logprob: -1.500509262084961
    4. 'x' → logprob: -1.875509262084961
    5. '
' → logprob: -4.500509262084961
    6. ' for' → logprob: -4.750509262084961
    7. 'def' → logprob: -4.875509262084961
    8. '   ' → logprob: -5.125509262084961
    9. ' #' → logprob: -6.000509262084961
    10. ' x' → logprob: -6.250509262084961

Token 1463: ' M' (ID: 391)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.004262411966919899
    2. '_of' → logprob: -5.629262447357178
    3. 'of' → logprob: -8.12926197052002
    4. 'x' → logprob: -9.00426197052002
    5. '   ' → logprob: -9.87926197052002
    6. ' of' → logprob: -10.00426197052002
    7. '
' → logprob: -10.25426197052002
    8. '```' → logprob: -10.37926197052002
    9. '       ' → logprob: -10.50426197052002
    10. '#' → logprob: -11.12926197052002

Token 1464: ' of' (ID: 328)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.02249150723218918
    2. ' =' → logprob: -4.772491455078125
    3. '_' → logprob: -5.147491455078125
    4. '_of' → logprob: -5.647491455078125
    5. '_acc' → logprob: -6.522491455078125
    6. 'x' → logprob: -6.647491455078125
    7. '   ' → logprob: -8.397491455078125
    8. ' _' → logprob: -8.522491455078125
    9. '```' → logprob: -8.897491455078125
    10. '=' → logprob: -8.897491455078125

Token 1465: ' accumulated' (ID: 64757)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.0048457845114171505
    2. 'acc' → logprob: -5.50484561920166
    3. 'the' → logprob: -7.62984561920166
    4. 'bottom' → logprob: -9.00484561920166
    5. 'm' → logprob: -9.62984561920166
    6. 'piece' → logprob: -10.50484561920166
    7. ' mass' → logprob: -11.37984561920166
    8. 'M' → logprob: -11.50484561920166
    9. 'pieces' → logprob: -11.62984561920166
    10. 'each' → logprob: -11.75484561920166

Token 1466: ' center' (ID: 6170)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.909993588924408
    2. '_acc' → logprob: -1.4099936485290527
    3. '_mass' → logprob: -1.5349936485290527
    4. '_' → logprob: -2.2849936485290527
    5. 'acc' → logprob: -4.784993648529053
    6. 'mass' → logprob: -5.159993648529053
    7. '_center' → logprob: -5.159993648529053
    8. '_of' → logprob: -5.659993648529053
    9. ' mass' → logprob: -6.159993648529053
    10. ' of' → logprob: -6.784993648529053

Token 1467: ' of' (ID: 328)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.003135174512863159
    2. '_of' → logprob: -7.2531352043151855
    3. 'x' → logprob: -7.6281352043151855
    4. 'of' → logprob: -7.6281352043151855
    5. '_m' → logprob: -7.6281352043151855
    6. '   ' → logprob: -8.128134727478027
    7. '_' → logprob: -8.503134727478027
    8. '
' → logprob: -9.503134727478027
    9. 's' → logprob: -9.753134727478027
    10. ')' → logprob: -10.128134727478027

Token 1468: ' mass' (ID: 4842)
  Prédit: 'mass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mass' → logprob: -0.00039968726923689246
    2. ' mass' → logprob: -7.875399589538574
    3. 'm' → logprob: -11.125399589538574
    4. 'gravity' → logprob: -13.000399589538574
    5. '_mass' → logprob: -13.375399589538574
    6. 'x' → logprob: -15.250399589538574
    7. ')' → logprob: -15.500399589538574
    8. '
' → logprob: -15.750399589538574
    9. 'Mass' → logprob: -15.875399589538574
    10. 'M' → logprob: -17.00040054321289

Token 1469: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7978894114494324
    2. '       ' → logprob: -1.5478894710540771
    3. '=' → logprob: -1.6728894710540771
    4. ' is' → logprob: -3.547889471054077
    5. 'for' → logprob: -4.172889232635498
    6. ' for' → logprob: -4.297889232635498
    7. '[i' → logprob: -4.422889232635498
    8. ')' → logprob: -4.547889232635498
    9. 's' → logprob: -4.797889232635498
    10. ',' → logprob: -4.797889232635498

Token 1470: ' satisfy' (ID: 35441)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6628336906433105
    2. 'be' → logprob: -0.7878336906433105
    3. 'lie' → logprob: -4.2878336906433105
    4. '>=' → logprob: -4.4128336906433105
    5. ' lie' → logprob: -6.0378336906433105
    6. ' >=' → logprob: -7.4128336906433105
    7. '```' → logprob: -7.6628336906433105
    8. '<=' → logprob: -9.412834167480469
    9. 's' → logprob: -9.787834167480469
    10. 'fall' → logprob: -9.912834167480469

Token 1471: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015794939827173948
    2. '```' → logprob: -7.251579284667969
    3. '       ' → logprob: -8.376579284667969
    4. '   ' → logprob: -8.626579284667969
    5. '>=' → logprob: -9.126579284667969
    6. ' x' → logprob: -9.626579284667969
    7. '``' → logprob: -9.876579284667969
    8. '           ' → logprob: -10.001579284667969
    9. '
' → logprob: -10.126579284667969
    10. '<=' → logprob: -10.126579284667969

Token 1472: 'L' (ID: 43)
  Prédit: '_L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -0.6399404406547546
    2. 'L' → logprob: -0.7649404406547546
    3. '_' → logprob: -5.63994026184082
    4. 'R' → logprob: -7.13994026184082
    5. '_R' → logprob: -7.38994026184082
    6. '>' → logprob: -7.51494026184082
    7. '```' → logprob: -7.51494026184082
    8. '>L' → logprob: -8.26494026184082
    9. '`' → logprob: -9.51494026184082
    10. '``' → logprob: -9.76494026184082

Token 1473: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5194805860519409
    2. '<=' → logprob: -1.144480586051941
    3. '=' → logprob: -3.1444807052612305
    4. ' =' → logprob: -4.0194807052612305
    5. ',' → logprob: -4.7694807052612305
    6. '_' → logprob: -5.2694807052612305
    7. '   ' → logprob: -6.0194807052612305
    8. ' ≤' → logprob: -6.3944807052612305
    9. '≤' → logprob: -6.5194807052612305
    10. '       ' → logprob: -6.5194807052612305

Token 1474: ' M' (ID: 391)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7973976135253906
    2. 'M' → logprob: -1.1723976135253906
    3. 'acc' → logprob: -1.9223976135253906
    4. ' M' → logprob: -2.6723976135253906
    5. ' acc' → logprob: -4.047397613525391
    6. '=M' → logprob: -6.172397613525391
    7. 'x' → logprob: -6.172397613525391
    8. ' =' → logprob: -7.172397613525391
    9. 'm' → logprob: -8.17239761352539
    10. ' x' → logprob: -8.54739761352539

Token 1475: ' <' (ID: 464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7422231435775757
    2. 'and' → logprob: -1.8672231435775757
    3. ' and' → logprob: -1.9922231435775757
    4. ' <' → logprob: -2.4922232627868652
    5. '_' → logprob: -2.6172232627868652
    6. '<' → logprob: -3.3672232627868652
    7. '<=' → logprob: -4.492223262786865
    8. ' <=' → logprob: -4.742223262786865
    9. ' =' → logprob: -5.367223262786865
    10. '+' → logprob: -5.492223262786865

Token 1476: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18006844818592072
    2. ' x' → logprob: -1.8050684928894043
    3. '=' → logprob: -8.305068016052246
    4. '`' → logprob: -10.680068016052246
    5. '(x' → logprob: -11.680068016052246
    6. '```' → logprob: -11.930068016052246
    7. '   ' → logprob: -12.055068016052246
    8. ' ' → logprob: -12.305068016052246
    9. ' =' → logprob: -12.305068016052246
    10. ' ' → logprob: -12.430068016052246

Token 1477: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.017016125842928886
    2. 'L' → logprob: -4.2670159339904785
    3. '_R' → logprob: -5.8920159339904785
    4. '+' → logprob: -10.392016410827637
    5. '_L' → logprob: -10.517016410827637
    6. '```' → logprob: -11.017016410827637
    7. ' R' → logprob: -12.892016410827637
    8. '_' → logprob: -13.517016410827637
    9. '``' → logprob: -13.642016410827637
    10. '   ' → logprob: -13.892016410827637

Token 1478: ' strictly' (ID: 38971)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007807484827935696
    2. 'for' → logprob: -5.38280725479126
    3. ' for' → logprob: -5.88280725479126
    4. '        
' → logprob: -8.757807731628418
    5. 'def' → logprob: -9.382807731628418
    6. '
' → logprob: -9.632807731628418
    7. '   ' → logprob: -10.132807731628418
    8. '<|end|>' → logprob: -11.632807731628418
    9. ',' → logprob: -11.882807731628418
    10. '           ' → logprob: -12.132807731628418

Token 1479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032628714689053595
    2. 'for' → logprob: -8.500326156616211
    3. ' for' → logprob: -9.625326156616211
    4. '        
' → logprob: -10.375326156616211
    5. '
' → logprob: -11.125326156616211
    6. '   ' → logprob: -12.000326156616211
    7. '           ' → logprob: -13.625326156616211
    8. 'import' → logprob: -14.250326156616211
    9. 'def' → logprob: -14.250326156616211
    10. '<|end|>' → logprob: -14.375326156616211

Token 1480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002501343551557511
    2. 'for' → logprob: -8.625249862670898
    3. ' for' → logprob: -10.125249862670898
    4. '
' → logprob: -11.000249862670898
    5. '   ' → logprob: -12.125249862670898
    6. '```' → logprob: -12.375249862670898
    7. '           ' → logprob: -12.750249862670898
    8. '        
' → logprob: -14.125249862670898
    9. 'For' → logprob: -16.1252498626709
    10. 'import' → logprob: -16.2502498626709

Token 1481: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021847303956747055
    2. 'for' → logprob: -3.8968472480773926
    3. ' for' → logprob: -6.771847248077393
    4. '
' → logprob: -9.14684772491455
    5. '   ' → logprob: -10.52184772491455
    6. '```' → logprob: -11.52184772491455
    7. '           ' → logprob: -12.14684772491455
    8. '        
' → logprob: -12.52184772491455
    9. 'For' → logprob: -12.52184772491455
    10. ',' → logprob: -15.02184772491455

Token 1482: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5771526098251343
    2. 'for' → logprob: -0.8271526098251343
    3. ' for' → logprob: -6.952152729034424
    4. '   ' → logprob: -9.577152252197266
    5. 'results' → logprob: -9.827152252197266
    6. 'result' → logprob: -10.202152252197266
    7. 'def' → logprob: -10.327152252197266
    8. '```' → logprob: -10.452152252197266
    9. '
' → logprob: -11.577152252197266
    10. '        
' → logprob: -11.702152252197266

Token 1483: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.2989180088043213
    2. ' not' → logprob: -1.4239180088043213
    3. 'any' → logprob: -1.7989180088043213
    4. 'not' → logprob: -2.2989180088043213
    5. ' all' → logprob: -2.4239180088043213
    6. 'all' → logprob: -3.0489180088043213
    7. 'x' → logprob: -3.5489180088043213
    8. ' x' → logprob: -4.048917770385742
    9. ' parent' → logprob: -4.423917770385742
    10. 'parent' → logprob: -4.548917770385742

Token 1484: ' piece' (ID: 9047)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9870520234107971
    2. 'not' → logprob: -1.6120519638061523
    3. 'i' → logprob: -2.1120519638061523
    4. ' piece' → logprob: -2.4870519638061523
    5. 'piece' → logprob: -2.8620519638061523
    6. ' i' → logprob: -2.9870519638061523
    7. '       ' → logprob: -3.1120519638061523
    8. '   ' → logprob: -4.237051963806152
    9. 'x' → logprob: -4.237051963806152
    10. ' x' → logprob: -4.862051963806152

Token 1485: ' fails' (ID: 28336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8619358539581299
    2. ' not' → logprob: -2.23693585395813
    3. '
' → logprob: -3.11193585395813
    4. '#' → logprob: -3.11193585395813
    5. ' is' → logprob: -3.11193585395813
    6. '```' → logprob: -3.11193585395813
    7. '           ' → logprob: -3.23693585395813
    8. ''s' → logprob: -3.36193585395813
    9. ' has' → logprob: -3.48693585395813
    10. 's' → logprob: -3.48693585395813

Token 1486: ' =>' (ID: 871)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3131203353404999
    2. '       ' → logprob: -1.9381203651428223
    3. ':' → logprob: -2.9381203651428223
    4. '           ' → logprob: -3.1881203651428223
    5. 'to' → logprob: -4.563120365142822
    6. ' to' → logprob: -5.313120365142822
    7. 'for' → logprob: -5.563120365142822
    8. '   ' → logprob: -5.813120365142822
    9. 'if' → logprob: -6.063120365142822
    10. '{
' → logprob: -6.063120365142822

Token 1487: ' UN' (ID: 9014)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015338115394115448
    2. ' print' → logprob: -4.265337944030762
    3. '       ' → logprob: -7.265337944030762
    4. '           ' → logprob: -8.265337944030762
    5. '   ' → logprob: -8.765337944030762
    6. '```' → logprob: -10.140337944030762
    7. 'break' → logprob: -12.515337944030762
    8. 'return' → logprob: -12.515337944030762
    9. '        
' → logprob: -13.265337944030762
    10. '
' → logprob: -13.265337944030762

Token 1488: 'ST' (ID: 1117)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3652881383895874
    2. '       ' → logprob: -1.8652881383895874
    3. 'print' → logprob: -1.8652881383895874
    4. 'ST' → logprob: -1.9902881383895874
    5. 'def' → logprob: -2.615288257598877
    6. '   ' → logprob: -2.740288257598877
    7. 'for' → logprob: -3.115288257598877
    8. 'stable' → logprob: -3.240288257598877
    9. '
' → logprob: -3.990288257598877
    10. '```' → logprob: -4.740288257598877

Token 1489: 'ABLE' (ID: 6606)
  Prédit: 'ABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABLE' → logprob: -0.032310280948877335
    2. 'A' → logprob: -3.6573102474212646
    3. 'AB' → logprob: -5.907310485839844
    4. 'ABL' → logprob: -6.657310485839844
    5. 'able' → logprob: -7.532310485839844
    6. 'ABLED' → logprob: -7.907310485839844
    7. 'BLE' → logprob: -8.532310485839844
    8. 'R' → logprob: -8.657310485839844
    9. '```' → logprob: -9.282310485839844
    10. '   ' → logprob: -9.782310485839844

Token 1490: ' else' (ID: 1203)
  Prédit: 'unst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unst' → logprob: -0.7563868165016174
    2. '       ' → logprob: -0.8813868165016174
    3. 'for' → logprob: -2.8813867568969727
    4. 'stable' → logprob: -3.1313867568969727
    5. 'is' → logprob: -5.006386756896973
    6. 'result' → logprob: -5.881386756896973
    7. 'ans' → logprob: -6.506386756896973
    8. 'answer' → logprob: -6.506386756896973
    9. 'all' → logprob: -6.756386756896973
    10. 'st' → logprob: -7.006386756896973

Token 1491: ' ST' (ID: 6433)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033871013671159744
    2. ' print' → logprob: -3.4088709354400635
    3. '   ' → logprob: -9.158870697021484
    4. '       ' → logprob: -9.658870697021484
    5. '           ' → logprob: -10.408870697021484
    6. '```' → logprob: -11.033870697021484
    7. '	print' → logprob: -13.283870697021484
    8. '
' → logprob: -13.408870697021484
    9. '"' → logprob: -13.408870697021484
    10. '``' → logprob: -14.033870697021484

Token 1492: 'ABLE' (ID: 6606)
  Prédit: 'ABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABLE' → logprob: -1.010427474975586
    2. 'ATUS' → logprob: -1.010427474975586
    3. 'R' → logprob: -1.385427474975586
    4. 'A' → logprob: -5.010427474975586
    5. 'ATE' → logprob: -5.760427474975586
    6. 'AB' → logprob: -6.135427474975586
    7. '   ' → logprob: -6.510427474975586
    8. 'ABILITY' → logprob: -6.760427474975586
    9. '       ' → logprob: -6.885427474975586
    10. 'AT' → logprob: -6.885427474975586

Token 1493: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31926628947257996
    2. 'for' → logprob: -1.4442663192749023
    3. 'result' → logprob: -4.194266319274902
    4. ' for' → logprob: -5.069266319274902
    5. 'unst' → logprob: -5.194266319274902
    6. 'stable' → logprob: -5.444266319274902
    7. 'answer' → logprob: -6.819266319274902
    8. 'status' → logprob: -6.944266319274902
    9. '   ' → logprob: -7.194266319274902
    10. '        
' → logprob: -7.194266319274902

Token 1494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05636237561702728
    2. 'result' → logprob: -3.9313623905181885
    3. 'for' → logprob: -3.9313623905181885
    4. 'unst' → logprob: -4.806362152099609
    5. 'stable' → logprob: -5.806362152099609
    6. ' for' → logprob: -6.681362152099609
    7. 'status' → logprob: -6.931362152099609
    8. 'st' → logprob: -7.556362152099609
    9. '   ' → logprob: -7.806362152099609
    10. '        
' → logprob: -7.931362152099609

Token 1495: ' stable' (ID: 22105)
  Prédit: 'unst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unst' → logprob: -0.45483872294425964
    2. '       ' → logprob: -1.954838752746582
    3. 'for' → logprob: -2.079838752746582
    4. 'stable' (adapté à ' stable') → logprob: -2.579838752746582
    5. 'result' → logprob: -4.204838752746582
    6. 'is' → logprob: -5.454838752746582
    7. 'answer' → logprob: -7.079838752746582
    8. 'all' → logprob: -7.204838752746582
    9. 'ans' → logprob: -7.579838752746582
    10. 'un' → logprob: -7.829838752746582

Token 1496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7458800673484802
    2. '_' → logprob: -0.8708800673484802
    3. '=' → logprob: -2.245880126953125
    4. '[' → logprob: -8.370880126953125
    5. ':' → logprob: -8.620880126953125
    6. ')' → logprob: -8.870880126953125
    7. '   ' → logprob: -8.995880126953125
    8. ',' → logprob: -9.120880126953125
    9. ' _' → logprob: -9.495880126953125
    10. 's' → logprob: -9.870880126953125

Token 1497: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011048642918467522
    2. ' True' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.261048316955566
    4. '=True' → logprob: -16.261049270629883
    5. '(True' → logprob: -17.386049270629883
    6. '       ' → logprob: -18.136049270629883
    7. 'true' → logprob: -20.386049270629883
    8. 'False' → logprob: -20.636049270629883
    9. '[' → logprob: -21.761049270629883
    10. 'TRUE' → logprob: -22.136049270629883

Token 1498: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02351018786430359
    2. 'for' → logprob: -3.898510217666626
    3. ' for' → logprob: -5.898509979248047
    4. '
' → logprob: -8.898509979248047
    5. '        
' → logprob: -9.773509979248047
    6. '   ' → logprob: -11.023509979248047
    7. '           ' → logprob: -12.773509979248047
    8. '	for' → logprob: -13.398509979248047
    9. '    
' → logprob: -13.648509979248047
    10. '<|end|>' → logprob: -13.773509979248047

Token 1499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02087409608066082
    2. 'for' → logprob: -3.8958740234375
    3. ' for' → logprob: -8.1458740234375
    4. '   ' → logprob: -10.3958740234375
    5. '        
' → logprob: -11.8958740234375
    6. '           ' → logprob: -12.8958740234375
    7. '
' → logprob: -14.2708740234375
    8. '	for' → logprob: -14.3958740234375
    9. 'if' → logprob: -14.8958740234375
    10. '<|end|>' → logprob: -15.7708740234375

Token 1500: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004317420825827867
    2. '       ' → logprob: -7.750431537628174
    3. ' for' → logprob: -14.375432014465332
    4. '   ' → logprob: -14.625432014465332
    5. 'if' → logprob: -17.750431060791016
    6. '
' → logprob: -17.875431060791016
    7. '           ' → logprob: -18.000431060791016
    8. '        
' → logprob: -18.125431060791016
    9. '	for' → logprob: -19.125431060791016
    10. '```' → logprob: -19.125431060791016

Token 1501: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3869423568248749
    2. ' i' → logprob: -1.1369423866271973
    3. '   ' → logprob: -9.761941909790039
    4. '       ' → logprob: -11.761941909790039
    5. ' ' → logprob: -13.386941909790039
    6. '	i' → logprob: -13.386941909790039
    7. 'piece' → logprob: -14.261941909790039
    8. '    ' → logprob: -14.261941909790039
    9. ' piece' → logprob: -15.386941909790039
    10. '_i' → logprob: -15.511941909790039

Token 1502: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18052555620670319
    2. 'in' → logprob: -1.805525541305542
    3. ',' → logprob: -8.055525779724121
    4. ':' → logprob: -8.680525779724121
    5. '<|end|>' → logprob: -9.930525779724121
    6. '	in' → logprob: -10.305525779724121
    7. ')' → logprob: -10.680525779724121
    8. '        ' → logprob: -10.805525779724121
    9. '       ' → logprob: -10.930525779724121
    10. '   ' → logprob: -10.930525779724121

Token 1503: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002496110275387764
    2. ' range' → logprob: -6.002496242523193
    3. 'bottom' → logprob: -12.002495765686035
    4. '(range' → logprob: -12.252495765686035
    5. 'piece' → logprob: -12.627495765686035
    6. 'len' → logprob: -12.877495765686035
    7. 'in' → logprob: -13.752495765686035
    8. 'pieces' → logprob: -13.877495765686035
    9. '   ' → logprob: -14.627495765686035
    10. '	range' → logprob: -15.002495765686035

Token 1504: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.002192256273701787
    2. 'len' → logprob: -6.25219202041626
    3. 'range' → logprob: -8.627192497253418
    4. '(range' → logprob: -9.752192497253418
    5. '(' → logprob: -11.252192497253418
    6. ' len' → logprob: -12.127192497253418
    7. ' (' → logprob: -12.377192497253418
    8. '[len' → logprob: -13.752192497253418
    9. ' range' → logprob: -14.002192497253418
    10. ')' → logprob: -14.252192497253418

Token 1505: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.006266847252845764
    2. '(bottom' → logprob: -5.506267070770264
    3. '(piece' → logprob: -7.381267070770264
    4. 'bottom' → logprob: -7.631267070770264
    5. 'pieces' → logprob: -7.756267070770264
    6. '(range' → logprob: -8.381266593933105
    7. 'range' → logprob: -9.006266593933105
    8. '(' → logprob: -9.631266593933105
    9. 'p' → logprob: -9.756266593933105
    10. ')' → logprob: -9.881266593933105

Token 1506: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.0005212200339883566
    2. 'pieces' → logprob: -7.625521183013916
    3. ')' → logprob: -11.750521659851074
    4. '```' → logprob: -12.000521659851074
    5. '(' → logprob: -12.500521659851074
    6. '
' → logprob: -12.875521659851074
    7. 'ices' → logprob: -13.250521659851074
    8. '(i' → logprob: -13.750521659851074
    9. 'e' → logprob: -13.750521659851074
    10. '``' → logprob: -14.000521659851074

Token 1507: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007393414154648781
    2. '):' → logprob: -5.0073933601379395
    3. '           ' → logprob: -8.007393836975098
    4. '       ' → logprob: -8.132393836975098
    5. ')' → logprob: -11.257393836975098
    6. '):
' → logprob: -11.632393836975098
    7. ']:
' → logprob: -11.882393836975098
    8. '   ' → logprob: -12.007393836975098
    9. ':
' → logprob: -12.507393836975098
    10. ')):
' → logprob: -13.257393836975098

Token 1508: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5801562666893005
    2. '           ' → logprob: -0.8301562666893005
    3. '       ' → logprob: -5.580156326293945
    4. '	   ' → logprob: -8.955156326293945
    5. '   ' → logprob: -9.955156326293945
    6. '```' → logprob: -9.955156326293945
    7. '
' → logprob: -10.080156326293945
    8. '    
' → logprob: -10.330156326293945
    9. '               ' → logprob: -10.580156326293945
    10. '>' → logprob: -10.580156326293945

Token 1509: ' bottoms' (ID: 145726)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4546775817871094
    2. 'x' → logprob: -1.8296775817871094
    3. 'bottom' → logprob: -2.5796775817871094
    4. 'b' → logprob: -2.9546775817871094
    5. 'if' → logprob: -3.5796775817871094
    6. '   ' → logprob: -3.8296775817871094
    7. 'bl' → logprob: -5.329677581787109
    8. '       ' → logprob: -5.954677581787109
    9. ' if' → logprob: -6.079677581787109
    10. 'bt' → logprob: -6.204677581787109

Token 1510: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2065786123275757
    2. '=' → logprob: -1.3315786123275757
    3. ' =' → logprob: -1.3315786123275757
    4. '[' → logprob: -2.4565787315368652
    5. ':' → logprob: -3.7065787315368652
    6. '[i' → logprob: -3.9565787315368652
    7. ']' → logprob: -4.331578731536865
    8. ')' → logprob: -5.331578731536865
    9. '][' → logprob: -5.331578731536865
    10. '```' → logprob: -5.706578731536865

Token 1511: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0019295861711725593
    2. ' bottom' → logprob: -6.251929759979248
    3. '           ' → logprob: -14.25192928314209
    4. '   ' → logprob: -16.001930236816406
    5. '(bottom' → logprob: -16.501930236816406
    6. '       ' → logprob: -17.251930236816406
    7. '[' → logprob: -17.251930236816406
    8. '         ' → logprob: -17.501930236816406
    9. '.bottom' → logprob: -17.501930236816406
    10. 'sorted' → logprob: -18.751930236816406

Token 1512: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.0015618811594322324
    2. '[i' → logprob: -6.626562118530273
    3. '           ' → logprob: -9.126562118530273
    4. 'blocks' → logprob: -9.751562118530273
    5. 'i' → logprob: -10.876562118530273
    6. '```' → logprob: -11.251562118530273
    7. '       ' → logprob: -11.626562118530273
    8. '[' → logprob: -11.751562118530273
    9. 'Blocks' → logprob: -12.001562118530273
    10. '[_' → logprob: -13.001562118530273

Token 1513: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '           ' → logprob: -13.125004768371582
    3. '```' → logprob: -14.250004768371582
    4. '][' → logprob: -14.500004768371582
    5. 'i' → logprob: -14.625004768371582
    6. '[' → logprob: -15.000004768371582
    7. ' [' → logprob: -15.500004768371582
    8. '       ' → logprob: -15.750004768371582
    9. '\[' → logprob: -16.750003814697266
    10. '[
' → logprob: -16.875003814697266

Token 1514: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0611744299530983
    2. '           ' → logprob: -3.0611743927001953
    3. ')
' → logprob: -4.561174392700195
    4. ']' → logprob: -6.311174392700195
    5. ')' → logprob: -8.561174392700195
    6. '
' → logprob: -11.061174392700195
    7. ')]
' → logprob: -11.811174392700195
    8. '       ' → logprob: -11.936174392700195
    9. ']
' → logprob: -12.061174392700195
    10. '])
' → logprob: -12.061174392700195

Token 1515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006345203728415072
    2. '   ' → logprob: -8.12563419342041
    3. '       ' → logprob: -8.50063419342041
    4. 'x' → logprob: -9.62563419342041
    5. '               ' → logprob: -10.87563419342041
    6. ' if' → logprob: -11.00063419342041
    7. 'if' → logprob: -11.25063419342041
    8. '```' → logprob: -11.50063419342041
    9. '
' → logprob: -12.12563419342041
    10. ' x' → logprob: -13.50063419342041

Token 1516: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06692208349704742
    2. '           ' → logprob: -3.191922187805176
    3. 'if' (adapté à ' if') → logprob: -3.816922187805176
    4. 'xs' → logprob: -6.566922187805176
    5. 'xl' → logprob: -9.816922187805176
    6. '       ' → logprob: -9.816922187805176
    7. 'xmin' → logprob: -10.316922187805176
    8. '   ' → logprob: -10.441922187805176
    9. 'min' → logprob: -10.441922187805176
    10. ' if' → logprob: -11.441922187805176

Token 1517: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01388044934719801
    2. ' not' → logprob: -4.763880252838135
    3. 'len' → logprob: -5.263880252838135
    4. 'bottom' → logprob: -10.263880729675293
    5. '           ' → logprob: -11.013880729675293
    6. ' len' → logprob: -11.513880729675293
    7. '   ' → logprob: -12.138880729675293
    8. '       ' → logprob: -12.263880729675293
    9. '
' → logprob: -12.513880729675293
    10. '(not' → logprob: -15.138880729675293

Token 1518: ' bottoms' (ID: 145726)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -2.451116051815916e-05
    2. ' bottoms' → logprob: -11.125024795532227
    3. 'stable' → logprob: -12.000024795532227
    4. ' bottom' → logprob: -12.625024795532227
    5. 'all' → logprob: -16.125024795532227
    6. 'len' → logprob: -16.375024795532227
    7. 'bot' → logprob: -16.750024795532227
    8. 'any' → logprob: -17.500024795532227
    9. '(bottom' → logprob: -17.750024795532227
    10. '
' → logprob: -18.125024795532227

Token 1519: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.576415479183197
    2. ':' → logprob: -0.826415479183197
    3. '               ' → logprob: -7.951415538787842
    4. '           ' → logprob: -9.451415061950684
    5. ' or' → logprob: -11.451415061950684
    6. ':return' → logprob: -11.451415061950684
    7. '[' → logprob: -11.826415061950684
    8. 'or' → logprob: -12.201415061950684
    9. 'continue' → logprob: -12.326415061950684
    10. ':
' → logprob: -13.201415061950684

Token 1520: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016714917728677392
    2. ' continue' → logprob: -6.751671314239502
    3. '           ' → logprob: -7.876671314239502
    4. 'continue' → logprob: -10.00167179107666
    5. ' continues' → logprob: -10.87667179107666
    6. '   ' → logprob: -11.12667179107666
    7. '```' → logprob: -11.50167179107666
    8. ':
' → logprob: -12.12667179107666
    9. '                   ' → logprob: -12.12667179107666
    10. '       ' → logprob: -12.37667179107666

Token 1521: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4978239834308624
    2. 'continue' → logprob: -1.74782395362854
    3. ' continue' → logprob: -1.87282395362854
    4. ' stable' → logprob: -3.74782395362854
    5. '           ' → logprob: -4.122824192047119
    6. 'stable' → logprob: -4.122824192047119
    7. '   ' → logprob: -4.872824192047119
    8. '                   ' → logprob: -8.247823715209961
    9. '       ' → logprob: -8.622823715209961
    10. ' ' → logprob: -9.622823715209961

Token 1522: ' no' (ID: 860)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stable' → logprob: -0.1926845908164978
    2. 'continue' → logprob: -1.9426846504211426
    3. '               ' → logprob: -4.067684650421143
    4. '           ' → logprob: -4.442684650421143
    5. '   ' → logprob: -6.317684650421143
    6. ' stable' → logprob: -7.317684650421143
    7. '                   ' → logprob: -8.942684173583984
    8. '       ' → logprob: -9.192684173583984
    9. ' continue' → logprob: -9.192684173583984
    10. 'x' → logprob: -9.192684173583984

Token 1523: ' bottom' (ID: 8725)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.372023582458496
    2. ' _' → logprob: -1.872023582458496
    3. ' bottom' → logprob: -1.997023582458496
    4. 'bottom' → logprob: -2.872023582458496
    5. ' valid' → logprob: -2.997023582458496
    6. 't' → logprob: -3.122023582458496
    7. 'blocks' → logprob: -3.372023582458496
    8. ' blocks' → logprob: -3.372023582458496
    9. '_blocks' → logprob: -3.372023582458496
    10. '_bottom' → logprob: -3.622023582458496

Token 1524: ' blocks' (ID: 18125)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.25459355115890503
    2. '           ' → logprob: -1.8795936107635498
    3. 'blocks' → logprob: -4.129593372344971
    4. '_' → logprob: -4.129593372344971
    5. '_block' → logprob: -4.629593372344971
    6. '               ' → logprob: -4.754593372344971
    7. '```' → logprob: -5.129593372344971
    8. ' blocks' → logprob: -5.629593372344971
    9. '
' → logprob: -6.004593372344971
    10. 'block' → logprob: -6.379593372344971

Token 1525: '?' (ID: 30)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017842020839452744
    2. ' continue' → logprob: -5.267841815948486
    3. ':
' → logprob: -5.392841815948486
    4. '           ' → logprob: -5.517841815948486
    5. 'continue' → logprob: -6.267841815948486
    6. ':' → logprob: -6.517841815948486
    7. '                   ' → logprob: -7.767841815948486
    8. ',' → logprob: -10.017842292785645
    9. ' continues' → logprob: -10.267842292785645
    10. ' or' → logprob: -10.892842292785645

Token 1526: ' should' (ID: 1757)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5551434755325317
    2. ' continue' → logprob: -1.6801434755325317
    3. '           ' → logprob: -1.8051434755325317
    4. 'continue' → logprob: -2.805143356323242
    5. '   ' → logprob: -4.555143356323242
    6. '                   ' → logprob: -5.680143356323242
    7. '       ' → logprob: -8.055143356323242
    8. '
' → logprob: -8.680143356323242
    9. ' stable' → logprob: -8.930143356323242
    10. '```' → logprob: -9.430143356323242

Token 1527: ' not' (ID: 625)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1621078997850418
    2. 'not' → logprob: -2.1621079444885254
    3. '               ' → logprob: -3.9121079444885254
    4. '           ' → logprob: -5.162107944488525
    5. ' not' → logprob: -6.037107944488525
    6. 'raise' → logprob: -6.162107944488525
    7. '                   ' → logprob: -6.787107944488525
    8. 'pass' → logprob: -7.287107944488525
    9. 'n't' → logprob: -7.537107944488525
    10. '#' → logprob: -7.787107944488525

Token 1528: ' happen' (ID: 5659)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7391524314880371
    2. ' happen' → logprob: -1.739152431488037
    3. 'occur' → logprob: -1.739152431488037
    4. 'continue' → logprob: -2.489152431488037
    5. '           ' → logprob: -3.364152431488037
    6. '```' → logprob: -3.864152431488037
    7. '               ' → logprob: -4.239152431488037
    8. 'be' → logprob: -5.489152431488037
    9. 'pass' → logprob: -5.489152431488037
    10. 'break' → logprob: -5.739152431488037

Token 1529: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008671891875565052
    2. '           ' → logprob: -5.383671760559082
    3. ' continue' → logprob: -5.758671760559082
    4. 'continue' → logprob: -7.758671760559082
    5. '                   ' → logprob: -8.133671760559082
    6. ',' → logprob: -9.133671760559082
    7. '   ' → logprob: -10.508671760559082
    8. ':
' → logprob: -12.133671760559082
    9. '       ' → logprob: -12.633671760559082
    10. '
' → logprob: -12.633671760559082

Token 1530: ' consider' (ID: 3331)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0514132976531982
    2. 'continue' → logprob: -1.3014132976531982
    3. '               ' → logprob: -1.8014132976531982
    4. 'stable' → logprob: -2.3014132976531982
    5. ' continue' → logprob: -3.0514132976531982
    6. '   ' → logprob: -3.1764132976531982
    7. ' stable' → logprob: -3.9264132976531982
    8. '                   ' → logprob: -6.176413536071777
    9. '       ' → logprob: -6.426413536071777
    10. '             ' → logprob: -8.801413536071777

Token 1531: ' unstable' (ID: 85238)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5983422994613647
    2. 'continue' → logprob: -1.8483422994613647
    3. '           ' → logprob: -2.0983424186706543
    4. 'stable' → logprob: -2.3483424186706543
    5. '   ' → logprob: -2.8483424186706543
    6. ' stable' → logprob: -4.848342418670654
    7. ' continue' → logprob: -5.348342418670654
    8. '                   ' → logprob: -5.723342418670654
    9. '             ' → logprob: -8.848341941833496
    10. '
' → logprob: -8.848341941833496

Token 1532: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2541779577732086
    2. '           ' → logprob: -1.5041779279708862
    3. '                   ' → logprob: -6.379178047180176
    4. ',' → logprob: -8.504178047180176
    5. '
' → logprob: -9.629178047180176
    6. ':
' → logprob: -10.254178047180176
    7. 'stable' → logprob: -10.254178047180176
    8. '{
' → logprob: -10.504178047180176
    9. '       ' → logprob: -10.629178047180176
    10. ',
' → logprob: -10.629178047180176

Token 1533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008033146150410175
    2. '           ' → logprob: -7.375803470611572
    3. '                   ' → logprob: -9.375802993774414
    4. '   ' → logprob: -9.375802993774414
    5. '       ' → logprob: -12.625802993774414
    6. '```' → logprob: -13.125802993774414
    7. 'continue' → logprob: -14.250802993774414
    8. ' continue' → logprob: -15.000802993774414
    9. '                       ' → logprob: -15.125802993774414
    10. '              ' → logprob: -15.750802993774414

Token 1534: ' stable' (ID: 22105)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15380781888961792
    2. 'stable' (adapté à ' stable') → logprob: -2.1538078784942627
    3. '               ' → logprob: -3.6538078784942627
    4. ' stable' → logprob: -8.028807640075684
    5. '   ' → logprob: -8.778807640075684
    6. '       ' → logprob: -9.278807640075684
    7. '                   ' → logprob: -10.028807640075684
    8. '             ' → logprob: -12.403807640075684
    9. '          ' → logprob: -13.653807640075684
    10. '         ' → logprob: -13.778807640075684

Token 1535: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049032408744096756
    2. ' =' → logprob: -3.04903244972229
    3. '=False' → logprob: -7.924032211303711
    4. '=True' → logprob: -9.424032211303711
    5. '=
' → logprob: -14.549032211303711
    6. '==' → logprob: -14.799032211303711
    7. ')' → logprob: -14.924032211303711
    8. ' &=' → logprob: -15.299032211303711
    9. '_=' → logprob: -15.799032211303711
    10. '           ' → logprob: -16.79903221130371

Token 1536: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01815006136894226
    2. ' False' → logprob: -4.0181498527526855
    3. 'True' → logprob: -16.518150329589844
    4. '(False' → logprob: -18.518150329589844
    5. '=False' → logprob: -18.768150329589844
    6. 'false' → logprob: -19.018150329589844
    7. ' True' → logprob: -20.268150329589844
    8. '   ' → logprob: -20.393150329589844
    9. '_false' → logprob: -21.768150329589844
    10. ' false' → logprob: -22.018150329589844

Token 1537: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002371521550230682
    2. '           ' → logprob: -8.375237464904785
    3. '                   ' → logprob: -12.375237464904785
    4. ',' → logprob: -14.750237464904785
    5. '       ' → logprob: -14.750237464904785
    6. '                       ' → logprob: -15.000237464904785
    7. '	           ' → logprob: -15.250237464904785
    8. '   ' → logprob: -15.875237464904785
    9. '              ' → logprob: -15.875237464904785
    10. '```' → logprob: -16.25023651123047

Token 1538: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006009025499224663
    2. '           ' → logprob: -5.131009101867676
    3. '                   ' → logprob: -9.881009101867676
    4. '       ' → logprob: -11.381009101867676
    5. '   ' → logprob: -12.506009101867676
    6. 'continue' → logprob: -12.631009101867676
    7. ' continue' → logprob: -13.131009101867676
    8. 'else' → logprob: -13.256009101867676
    9. '                       ' → logprob: -13.256009101867676
    10. '```' → logprob: -13.881009101867676

Token 1539: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021123789250850677
    2. '                   ' → logprob: -4.771123886108398
    3. '           ' → logprob: -5.021123886108398
    4. 'break' (adapté à ' break') → logprob: -5.896123886108398
    5. 'continue' → logprob: -5.896123886108398
    6. '                       ' → logprob: -9.396123886108398
    7. '       ' → logprob: -9.646123886108398
    8. ' continue' → logprob: -10.396123886108398
    9. '                               ' → logprob: -10.521123886108398
    10. '   ' → logprob: -10.521123886108398

Token 1540: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024037064576987177
    2. '       ' → logprob: -8.625240325927734
    3. '               ' → logprob: -10.500240325927734
    4. '
' → logprob: -11.375240325927734
    5. '   ' → logprob: -12.375240325927734
    6. '		' → logprob: -13.250240325927734
    7. '            
' → logprob: -13.250240325927734
    8. 'continue' → logprob: -13.250240325927734
    9. '```' → logprob: -13.375240325927734
    10. 'for' → logprob: -13.500240325927734

Token 1541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014048899174667895
    2. '       ' → logprob: -9.000140190124512
    3. '               ' → logprob: -12.125140190124512
    4. '		' → logprob: -12.375140190124512
    5. '	       ' → logprob: -13.250140190124512
    6. '   ' → logprob: -13.375140190124512
    7. '
' → logprob: -13.875140190124512
    8. 'x' → logprob: -14.250140190124512
    9. '```' → logprob: -14.500140190124512
    10. '          ' → logprob: -14.500140190124512

Token 1542: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42978888750076294
    2. 'x' (adapté à ' x') → logprob: -1.0547888278961182
    3. '   ' → logprob: -7.929789066314697
    4. '       ' → logprob: -8.304788589477539
    5. ' x' → logprob: -8.929788589477539
    6. 'bottom' → logprob: -9.054788589477539
    7. 'min' → logprob: -10.054788589477539
    8. '               ' → logprob: -10.054788589477539
    9. 'xs' → logprob: -10.304788589477539
    10. 'left' → logprob: -10.429788589477539

Token 1543: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.599467933177948
    2. '_L' → logprob: -0.974467933177948
    3. '_min' → logprob: -2.8494679927825928
    4. '_' → logprob: -5.224467754364014
    5. '_l' → logprob: -5.599467754364014
    6. '_left' → logprob: -5.974467754364014
    7. 'min' → logprob: -6.599467754364014
    8. '_low' → logprob: -7.474467754364014
    9. '_lower' → logprob: -8.099468231201172
    10. '=' → logprob: -8.474468231201172

Token 1544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06320580840110779
    2. ' =' → logprob: -2.8132057189941406
    3. ',' → logprob: -7.313205718994141
    4. '=min' → logprob: -7.688205718994141
    5. ')' → logprob: -10.43820571899414
    6. '=int' → logprob: -11.06320571899414
    7. '=
' → logprob: -11.31320571899414
    8. '=x' → logprob: -11.68820571899414
    9. '[' → logprob: -12.06320571899414
    10. ',min' → logprob: -12.18820571899414

Token 1545: ' min' (ID: 1349)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.6465206742286682
    2. 'min' → logprob: -0.7715206742286682
    3. ' min' → logprob: -4.646520614624023
    4. ' bottom' → logprob: -5.646520614624023
    5. 'float' → logprob: -8.021520614624023
    6. ' bottoms' → logprob: -8.521520614624023
    7. 'x' → logprob: -9.396520614624023
    8. '   ' → logprob: -10.896520614624023
    9. 'max' → logprob: -11.521520614624023
    10. '=min' → logprob: -11.896520614624023

Token 1546: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.386730819940567
    2. 'b' → logprob: -1.8867307901382446
    3. '(b' → logprob: -1.8867307901382446
    4. '(block' → logprob: -4.886730670928955
    5. 'x' → logprob: -5.386730670928955
    6. '(bottom' → logprob: -6.636730670928955
    7. '([' → logprob: -7.011730670928955
    8. 'block' → logprob: -7.136730670928955
    9. '((' → logprob: -7.511730670928955
    10. 'bottom' → logprob: -7.636730670928955

Token 1547: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6188443303108215
    2. '[' → logprob: -1.6188442707061768
    3. 'for' → logprob: -2.1188442707061768
    4. ' for' → logprob: -3.1188442707061768
    5. 'x' → logprob: -3.2438442707061768
    6. '[x' → logprob: -3.4938442707061768
    7. '-' → logprob: -4.118844509124756
    8. 'L' → logprob: -5.118844509124756
    9. 'b' → logprob: -5.868844509124756
    10. '{x' → logprob: -7.493844509124756

Token 1548: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12712538242340088
    2. '(x' → logprob: -2.1271252632141113
    3. ' (' → logprob: -8.75212574005127
    4. ' x' → logprob: -10.25212574005127
    5. '(' → logprob: -13.25212574005127
    6. ',x' → logprob: -13.62712574005127
    7. '"x' → logprob: -15.37712574005127
    8. ',' → logprob: -15.87712574005127
    9. '```' → logprob: -16.127124786376953
    10. '[x' → logprob: -16.502124786376953

Token 1549: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.3458322731312364e-06
    2. '(x' → logprob: -11.875007629394531
    3. ' x' → logprob: -15.000007629394531
    4. ')x' → logprob: -16.62500762939453
    5. ' (' → logprob: -19.25000762939453
    6. ')' → logprob: -19.87500762939453
    7. '   ' → logprob: -20.12500762939453
    8. '(' → logprob: -20.50000762939453
    9. '	x' → logprob: -20.62500762939453
    10. ',x' → logprob: -21.00000762939453

Token 1550: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1770552396774292
    2. ',' → logprob: -2.1770553588867188
    3. ',x' → logprob: -3.0520553588867188
    4. 'x' → logprob: -6.552055358886719
    5. ' ,' → logprob: -9.427055358886719
    6. 'y' → logprob: -9.552055358886719
    7. '(x' → logprob: -10.927055358886719
    8. ',b' → logprob: -11.302055358886719
    9. ',
' → logprob: -12.052055358886719
    10. ',v' → logprob: -12.802055358886719

Token 1551: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.493430894101039e-05
    2. 'in' → logprob: -9.875075340270996
    3. ')
' → logprob: -11.750075340270996
    4. ' in' → logprob: -12.500075340270996
    5. ')i' → logprob: -12.750075340270996
    6. ' )' → logprob: -13.000075340270996
    7. ')x' → logprob: -13.000075340270996
    8. '
' → logprob: -14.000075340270996
    9. ')L' → logprob: -14.000075340270996
    10. ')s' → logprob: -14.500075340270996

Token 1552: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11880947649478912
    2. ' in' → logprob: -2.493809461593628
    3. ')' → logprob: -3.618809461593628
    4. ',' → logprob: -6.868809700012207
    5. 'x' → logprob: -8.243809700012207
    6. '
' → logprob: -8.243809700012207
    7. ')x' → logprob: -8.243809700012207
    8. 'bottom' → logprob: -8.618809700012207
    9. ',x' → logprob: -8.868809700012207
    10. '),' → logprob: -9.618809700012207

Token 1553: ' bottoms' (ID: 145726)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0018621186027303338
    2. ' bottoms' → logprob: -6.501862049102783
    3. ' bottom' → logprob: -8.501862525939941
    4. 'x' → logprob: -8.876862525939941
    5. 'b' → logprob: -11.751862525939941
    6. '(bottom' → logprob: -12.751862525939941
    7. '
' → logprob: -13.751862525939941
    8. ')' → logprob: -14.126862525939941
    9. '[' → logprob: -14.376862525939941
    10. 'bounds' → logprob: -14.501862525939941

Token 1554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46078184247016907
    2. ')+' → logprob: -1.2107818126678467
    3. ')-' → logprob: -2.7107818126678467
    4. ')
' → logprob: -5.835782051086426
    5. ' )' → logprob: -7.085782051086426
    6. '-' → logprob: -7.585782051086426
    7. '+' → logprob: -8.710782051086426
    8. ')x' → logprob: -9.085782051086426
    9. '),' → logprob: -10.085782051086426
    10. '),
' → logprob: -10.460782051086426

Token 1555: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05921358987689018
    2. 'x' → logprob: -3.184213638305664
    3. '       ' → logprob: -4.434213638305664
    4. ' x' → logprob: -5.809213638305664
    5. '   ' → logprob: -7.684213638305664
    6. '               ' → logprob: -8.434213638305664
    7. '         ' → logprob: -8.434213638305664
    8. '          ' → logprob: -9.309213638305664
    9. '```' → logprob: -9.684213638305664
    10. '        ' → logprob: -10.184213638305664

Token 1556: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.001191298826597631
    2. '           ' → logprob: -7.376191139221191
    3. ' x' → logprob: -7.501191139221191
    4. '       ' → logprob: -11.626191139221191
    5. '```' → logprob: -13.501191139221191
    6. '   ' → logprob: -13.626191139221191
    7. '               ' → logprob: -15.376191139221191
    8. '         ' → logprob: -16.126192092895508
    9. '          ' → logprob: -16.501192092895508
    10. ' ' → logprob: -16.876192092895508

Token 1557: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.026271846145391464
    2. '+' → logprob: -3.7762718200683594
    3. ' +' → logprob: -6.401271820068359
    4. '_R' → logprob: -8.27627182006836
    5. ' R' → logprob: -8.52627182006836
    6. 'L' → logprob: -8.65127182006836
    7. '=' → logprob: -9.02627182006836
    8. ' +=' → logprob: -9.27627182006836
    9. ' =' → logprob: -9.40127182006836
    10. ',' → logprob: -9.40127182006836

Token 1558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. '=max' → logprob: -15.951414108276367
    4. '=
' → logprob: -16.701414108276367
    5. ' =
' → logprob: -16.951414108276367
    6. ' for' → logprob: -17.201414108276367
    7. ',' → logprob: -18.201414108276367
    8. '=min' → logprob: -18.201414108276367
    9. '=

' → logprob: -18.326414108276367
    10. '＝' → logprob: -18.326414108276367

Token 1559: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011047935113310814
    2. ' max' → logprob: -4.511047840118408
    3. '(max' → logprob: -15.886048316955566
    4. 'x' → logprob: -17.76104736328125
    5. 'min' → logprob: -19.63604736328125
    6. '=max' → logprob: -19.76104736328125
    7. ' x' → logprob: -20.63604736328125
    8. '	max' → logprob: -20.76104736328125
    9. ' ' → logprob: -21.01104736328125
    10. '[max' → logprob: -21.13604736328125

Token 1560: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.7697225252486533e-06
    2. 'x' → logprob: -13.375003814697266
    3. '((' → logprob: -14.000003814697266
    4. ' (' → logprob: -15.125003814697266
    5. '[x' → logprob: -15.250003814697266
    6. '(' → logprob: -15.375003814697266
    7. 'for' → logprob: -15.750003814697266
    8. '(
' → logprob: -15.875003814697266
    9. '+' → logprob: -16.375003814697266
    10. '([' → logprob: -16.875003814697266

Token 1561: '+' (ID: 10)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0012736850185319781
    2. 'for' → logprob: -7.3762736320495605
    3. 'x' → logprob: -7.5012736320495605
    4. '+' → logprob: -9.876274108886719
    5. '[x' → logprob: -10.626274108886719
    6. '+x' → logprob: -11.376274108886719
    7. '{x' → logprob: -13.126274108886719
    8. ' for' → logprob: -13.126274108886719
    9. ' +' → logprob: -14.001274108886719
    10. '+(' → logprob: -14.376274108886719

Token 1562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007287146989256144
    2. '0' → logprob: -5.50728702545166
    3. ' ' → logprob: -5.88228702545166
    4. '(' → logprob: -8.88228702545166
    5. ' (' → logprob: -9.13228702545166
    6. '(x' → logprob: -9.38228702545166
    7. 'for' → logprob: -10.25728702545166
    8. ')' → logprob: -11.25728702545166
    9. ' for' → logprob: -12.13228702545166
    10. '+' → logprob: -12.50728702545166

Token 1563: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1603151112794876
    2. ' for' → logprob: -1.9103151559829712
    3. ')' → logprob: -9.91031551361084
    4. '(x' → logprob: -10.28531551361084
    5. '	for' → logprob: -13.03531551361084
    6. '```' → logprob: -13.28531551361084
    7. '
' → logprob: -13.66031551361084
    8. ' (' → logprob: -14.78531551361084
    9. '(' → logprob: -15.03531551361084
    10. ' ' → logprob: -15.16031551361084

Token 1564: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01876726932823658
    2. ' (' → logprob: -4.018767356872559
    3. 'x' → logprob: -7.393767356872559
    4. '(' → logprob: -13.643767356872559
    5. ' x' → logprob: -14.768767356872559
    6. '```' → logprob: -16.018766403198242
    7. ' ' → logprob: -16.143766403198242
    8. '   ' → logprob: -16.643766403198242
    9. '[x' → logprob: -17.393766403198242
    10. '`' → logprob: -17.393766403198242

Token 1565: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043221889063715935
    2. '(x' → logprob: -7.750432014465332
    3. ' x' → logprob: -13.625432014465332
    4. ' (' → logprob: -15.250432014465332
    5. '```' → logprob: -18.00043296813965
    6. ')x' → logprob: -18.12543296813965
    7. '(' → logprob: -18.37543296813965
    8. '   ' → logprob: -18.75043296813965
    9. '	x' → logprob: -18.87543296813965
    10. '[x' → logprob: -19.25043296813965

Token 1566: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0006159355980344117
    2. ',x' → logprob: -7.875616073608398
    3. ',' → logprob: -8.375616073608398
    4. ' in' → logprob: -14.000616073608398
    5. 'x' → logprob: -14.125616073608398
    6. 'y' → logprob: -14.250616073608398
    7. '(x' → logprob: -14.500616073608398
    8. 'for' → logprob: -14.875616073608398
    9. ' ,' → logprob: -15.125616073608398
    10. ',v' → logprob: -15.125616073608398

Token 1567: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14429481327533722
    2. 'in' → logprob: -2.3942947387695312
    3. ' in' → logprob: -3.1442947387695312
    4. '
' → logprob: -11.894294738769531
    5. '   ' → logprob: -12.144294738769531
    6. ' )' → logprob: -12.269294738769531
    7. 'In' → logprob: -13.144294738769531
    8. ' ' → logprob: -13.519294738769531
    9. '```' → logprob: -13.519294738769531
    10. 'x' → logprob: -13.519294738769531

Token 1568: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.576698362827301
    2. 'in' → logprob: -0.826698362827301
    3. ')' → logprob: -7.201698303222656
    4. '           ' → logprob: -13.201698303222656
    5. '        ' → logprob: -13.326698303222656
    6. '       ' → logprob: -13.451698303222656
    7. '   ' → logprob: -13.576698303222656
    8. '         ' → logprob: -13.951698303222656
    9. '
' → logprob: -14.076698303222656
    10. '),' → logprob: -14.326698303222656

Token 1569: ' bottoms' (ID: 145726)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.0022969208657741547
    2. ' bottoms' → logprob: -6.1272969245910645
    3. ' bottom' → logprob: -9.127296447753906
    4. '(bottom' → logprob: -13.877296447753906
    5. 'b' → logprob: -14.127296447753906
    6. 'bot' → logprob: -14.377296447753906
    7. 'bounds' → logprob: -15.377296447753906
    8. ')' → logprob: -15.877296447753906
    9. '.bottom' → logprob: -16.127296447753906
    10. '_bottom' → logprob: -16.252296447753906

Token 1570: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25644317269325256
    2. '           ' → logprob: -1.5064431428909302
    3. ')
' → logprob: -5.506443023681641
    4. '):
' → logprob: -8.38144302368164
    5. '       ' → logprob: -9.75644302368164
    6. '<|end|>' → logprob: -10.13144302368164
    7. '   ' → logprob: -10.63144302368164
    8. ':
' → logprob: -11.13144302368164
    9. '
' → logprob: -11.75644302368164
    10. '          ' → logprob: -11.88144302368164

Token 1571: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010740526020526886
    2. ' if' → logprob: -5.510740756988525
    3. '
' → logprob: -6.135740756988525
    4. '<|end|>' → logprob: -6.385740756988525
    5. '   ' → logprob: -7.510740756988525
    6. '       ' → logprob: -7.635740756988525
    7. '```' → logprob: -7.760740756988525
    8. ')' → logprob: -7.760740756988525
    9. ')
' → logprob: -8.260740280151367
    10. ',' → logprob: -9.010740280151367

Token 1572: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03519366309046745
    2. ')
' → logprob: -4.53519344329834
    3. ')' → logprob: -5.28519344329834
    4. ' if' → logprob: -5.28519344329834
    5. '
' → logprob: -5.78519344329834
    6. '```' → logprob: -5.78519344329834
    7. ':
' → logprob: -6.03519344329834
    8. 'if' → logprob: -6.41019344329834
    9. '<|end|>' → logprob: -7.03519344329834
    10. '   ' → logprob: -7.03519344329834

Token 1573: ' right' (ID: 1849)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030186746269464493
    2. '<|end|>' → logprob: -4.030186653137207
    3. '           ' → logprob: -5.405186653137207
    4. '<|end|>' → logprob: -6.405186653137207
    5. 'x' → logprob: -6.530186653137207
    6. '#' → logprob: -6.780186653137207
    7. '+' → logprob: -7.530186653137207
    8. ')
' → logprob: -7.905186653137207
    9. '```' → logprob: -8.030186653137207
    10. '...' → logprob: -8.155186653137207

Token 1574: ' edge' (ID: 11165)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7403322458267212
    2. ')' → logprob: -1.9903322458267212
    3. 'most' → logprob: -2.1153321266174316
    4. '+' → logprob: -2.7403321266174316
    5. 'bound' → logprob: -3.1153321266174316
    6. '_bound' → logprob: -3.1153321266174316
    7. '_blocks' → logprob: -3.4903321266174316
    8. '-block' → logprob: -3.8653321266174316
    9. '-' → logprob: -4.115332126617432
    10. '_boundary' → logprob: -5.115332126617432

Token 1575: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5147862434387207
    2. ')' → logprob: -1.2647862434387207
    3. '<|end|>' → logprob: -2.5147862434387207
    4. ' if' → logprob: -4.264786243438721
    5. ':' → logprob: -5.389786243438721
    6. '       ' → logprob: -5.389786243438721
    7. '<|end|>' → logprob: -5.514786243438721
    8. 'if' → logprob: -6.139786243438721
    9. '+' → logprob: -6.139786243438721
    10. '               ' → logprob: -6.764786243438721

Token 1576: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.032521363347768784
    2. ' x' → logprob: -3.5325212478637695
    3. '(x' → logprob: -6.2825212478637695
    4. '           ' → logprob: -7.6575212478637695
    5. 'max' → logprob: -8.28252124786377
    6. ' max' → logprob: -10.15752124786377
    7. '   ' → logprob: -11.03252124786377
    8. ' (' → logprob: -11.15752124786377
    9. '```' → logprob: -11.15752124786377
    10. '       ' → logprob: -11.40752124786377

Token 1577: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14324387907981873
    2. ' +' → logprob: -2.0182437896728516
    3. '<|end|>' → logprob: -8.643243789672852
    4. ')' → logprob: -8.768243789672852
    5. ')+' → logprob: -9.893243789672852
    6. '           ' → logprob: -10.018243789672852
    7. 'L' → logprob: -10.268243789672852
    8. 'R' → logprob: -10.393243789672852
    9. '+
' → logprob: -11.268243789672852
    10. '<|end|>' → logprob: -11.518243789672852

Token 1578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.750006675720215
    3. '```' → logprob: -12.875006675720215
    4. '   ' → logprob: -14.750006675720215
    5. '0' → logprob: -15.250006675720215
    6. '`' → logprob: -16.00000762939453
    7. '+' → logprob: -16.50000762939453
    8. ')' → logprob: -16.75000762939453
    9. '       ' → logprob: -16.87500762939453
    10. '=' → logprob: -16.87500762939453

Token 1579: ' because' (ID: 2236)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011185461189597845
    2. '       ' → logprob: -7.5011186599731445
    3. '
' → logprob: -9.251118659973145
    4. '   ' → logprob: -9.376118659973145
    5. ' if' → logprob: -9.376118659973145
    6. ',' → logprob: -9.751118659973145
    7. ')' → logprob: -9.751118659973145
    8. ' for' → logprob: -10.126118659973145
    9. '               ' → logprob: -10.251118659973145
    10. 'if' → logprob: -11.126118659973145

Token 1580: ' blocks' (ID: 18125)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.5610169768333435
    2. 'blocks' → logprob: -1.4360170364379883
    3. 'each' → logprob: -2.1860170364379883
    4. 'the' → logprob: -3.1860170364379883
    5. 'block' → logprob: -3.8110170364379883
    6. 'x' → logprob: -4.561017036437988
    7. ' bottom' → logprob: -6.561017036437988
    8. ' each' → logprob: -6.936017036437988
    9. ' blocks' → logprob: -7.186017036437988
    10. '#' → logprob: -8.061017036437988

Token 1581: ' occupy' (ID: 89046)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.2791463136672974
    2. '+' → logprob: -1.7791463136672974
    3. ' are' → logprob: -1.7791463136672974
    4. 'have' → logprob: -2.029146194458008
    5. '[' → logprob: -2.154146194458008
    6. '```' → logprob: -2.779146194458008
    7. ' have' → logprob: -3.529146194458008
    8. ')' → logprob: -4.029146194458008
    9. 'x' → logprob: -5.529146194458008
    10. 'can' → logprob: -5.904146194458008

Token 1582: ' from' (ID: 591)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2683480381965637
    2. 'x' → logprob: -1.893347978591919
    3. 'one' → logprob: -2.893347978591919
    4. 'space' → logprob: -4.393348217010498
    5. 'a' → logprob: -4.643348217010498
    6. ' one' → logprob: -5.768348217010498
    7. 'the' → logprob: -7.643348217010498
    8. '```' → logprob: -7.768348217010498
    9. 'cell' → logprob: -7.893348217010498
    10. '(x' → logprob: -8.01834774017334

Token 1583: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007118358626030385
    2. ' x' → logprob: -7.250711917877197
    3. '```' → logprob: -14.250711441040039
    4. '   ' → logprob: -14.625711441040039
    5. '0' → logprob: -15.000711441040039
    6. ' ' → logprob: -16.50071144104004
    7. '
' → logprob: -16.62571144104004
    8. '(x' → logprob: -16.75071144104004
    9. '	x' → logprob: -17.25071144104004
    10. '    ' → logprob: -17.25071144104004

Token 1584: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10767370462417603
    2. ' to' → logprob: -2.3576736450195312
    3. '+' → logprob: -6.107673645019531
    4. '0' → logprob: -6.107673645019531
    5. 'x' → logprob: -6.732673645019531
    6. '```' → logprob: -7.107673645019531
    7. ',' → logprob: -7.482673645019531
    8. ' ' → logprob: -9.232673645019531
    9. '
' → logprob: -9.607673645019531
    10. '(x' → logprob: -9.857673645019531

Token 1585: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067167943343520164
    2. ' x' → logprob: -5.006716728210449
    3. '(x' → logprob: -14.00671672821045
    4. '```' → logprob: -15.00671672821045
    5. ' (' → logprob: -16.256717681884766
    6. '
' → logprob: -16.631717681884766
    7. '_x' → logprob: -17.256717681884766
    8. ' ' → logprob: -17.506717681884766
    9. '{x' → logprob: -17.756717681884766
    10. '`' → logprob: -17.756717681884766

Token 1586: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002069371985271573
    2. ' +' → logprob: -7.377069473266602
    3. 'x' → logprob: -7.502069473266602
    4. '```' → logprob: -8.002069473266602
    5. '+x' → logprob: -8.377069473266602
    6. '+
' → logprob: -9.502069473266602
    7. '0' → logprob: -10.252069473266602
    8. 'plus' → logprob: -10.502069473266602
    9. 'y' → logprob: -10.627069473266602
    10. '[' → logprob: -10.627069473266602

Token 1587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22557483613491058
    2. 'x' → logprob: -1.6005748510360718
    3. '(x' → logprob: -9.600574493408203
    4. '+' → logprob: -9.850574493408203
    5. ' x' → logprob: -11.100574493408203
    6. '```' → logprob: -11.975574493408203
    7. ' ' → logprob: -12.475574493408203
    8. '{x' → logprob: -12.600574493408203
    9. '(' → logprob: -12.850574493408203
    10. '_x' → logprob: -13.725574493408203

Token 1588: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06769933551549911
    2. '
' → logprob: -2.817699432373047
    3. '<|end|>' → logprob: -6.192699432373047
    4. ')' → logprob: -6.942699432373047
    5. ')
' → logprob: -6.942699432373047
    6. ',' → logprob: -7.692699432373047
    7. ' M' → logprob: -8.192699432373047
    8. '       ' → logprob: -8.692699432373047
    9. '            
' → logprob: -8.817699432373047
    10. '   ' → logprob: -9.192699432373047

Token 1589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008957397076301277
    2. '       ' → logprob: -8.000895500183105
    3. '```' → logprob: -8.500895500183105
    4. ' if' → logprob: -8.750895500183105
    5. 'if' → logprob: -9.625895500183105
    6. '   ' → logprob: -10.000895500183105
    7. ' ' → logprob: -10.625895500183105
    8. ',' → logprob: -11.250895500183105
    9. ')' → logprob: -11.750895500183105
    10. 'M' → logprob: -11.875895500183105

Token 1590: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.006084272637963295
    2. 'if' → logprob: -6.631084442138672
    3. '   ' → logprob: -6.756084442138672
    4. 'm' → logprob: -6.881084442138672
    5. '           ' → logprob: -7.131084442138672
    6. ' M' → logprob: -7.131084442138672
    7. '       ' → logprob: -7.381084442138672
    8. '
' → logprob: -9.006084442138672
    9. 'center' → logprob: -9.381084442138672
    10. 'acc' → logprob: -10.131084442138672

Token 1591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931522488594055
    2. ' =' → logprob: -0.6931522488594055
    3. ',' → logprob: -12.69315242767334
    4. '>' → logprob: -14.56815242767334
    5. ' >' → logprob: -15.69315242767334
    6. '   ' → logprob: -15.81815242767334
    7. ')' → logprob: -15.81815242767334
    8. '<|end|>' → logprob: -15.81815242767334
    9. '.' → logprob: -16.068151473999023
    10. '=int' → logprob: -16.193151473999023

Token 1592: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.005233763717114925
    2. ' acc' → logprob: -5.2552337646484375
    3. 'ac' → logprob: -17.380233764648438
    4. '(acc' → logprob: -17.505233764648438
    5. '	acc' → logprob: -18.505233764648438
    6. '   ' → logprob: -18.755233764648438
    7. '_acc' → logprob: -19.755233764648438
    8. '       ' → logprob: -21.130233764648438
    9. 'Acc' → logprob: -21.255233764648438
    10. '.acc' → logprob: -21.880233764648438

Token 1593: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -1.8193366486229934e-05
    2. 'center' → logprob: -11.125018119812012
    3. 'Center' → logprob: -13.125018119812012
    4. 'acc' → logprob: -14.000018119812012
    5. '_acc' → logprob: -15.250018119812012
    6. '_cent' → logprob: -16.750019073486328
    7. '_CENTER' → logprob: -17.000019073486328
    8. '```' → logprob: -17.125019073486328
    9. '<center' → logprob: -17.500019073486328
    10. ' Center' → logprob: -17.625019073486328

Token 1594: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.500000953674316
    3. 'x' → logprob: -15.125000953674316
    4. '_[' → logprob: -15.375000953674316
    5. ' _' → logprob: -15.875000953674316
    6. '   ' → logprob: -17.750001907348633
    7. '[_' → logprob: -17.750001907348633
    8. '_' → logprob: -17.875001907348633
    9. '[' → logprob: -18.000001907348633
    10. '[
' → logprob: -18.125001907348633

Token 1595: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. 'i' → logprob: -12.250008583068848
    3. '[' → logprob: -12.875008583068848
    4. ' [' → logprob: -15.250008583068848
    5. '```' → logprob: -15.250008583068848
    6. '[
' → logprob: -15.875008583068848
    7. '(i' → logprob: -16.50000762939453
    8. ' i' → logprob: -16.50000762939453
    9. '\[' → logprob: -18.25000762939453
    10. '[I' → logprob: -18.37500762939453

Token 1596: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. ']' → logprob: -14.375001907348633
    3. ')' → logprob: -15.000001907348633
    4. ')[' → logprob: -15.250001907348633
    5. '][' → logprob: -15.250001907348633
    6. '[' → logprob: -15.375001907348633
    7. '```' → logprob: -15.750001907348633
    8. '
' → logprob: -16.125001907348633
    9. '[
' → logprob: -16.250001907348633
    10. '           ' → logprob: -16.625001907348633

Token 1597: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000768413650803268
    2. '       ' → logprob: -7.625768184661865
    3. '   ' → logprob: -9.375768661499023
    4. '<|end|>' → logprob: -9.625768661499023
    5. ' if' → logprob: -10.125768661499023
    6. 'if' → logprob: -10.250768661499023
    7. '```' → logprob: -10.500768661499023
    8. '	       ' → logprob: -11.875768661499023
    9. '          ' → logprob: -12.750768661499023
    10. '               ' → logprob: -12.875768661499023

Token 1598: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3364444077014923
    2. 'if' (adapté à ' if') → logprob: -1.33644437789917
    3. ' if' → logprob: -3.83644437789917
    4. '   ' → logprob: -6.71144437789917
    5. '       ' → logprob: -9.086444854736328
    6. '               ' → logprob: -12.086444854736328
    7. ' ' → logprob: -12.586444854736328
    8. '```' → logprob: -13.086444854736328
    9. '          ' → logprob: -13.711444854736328
    10. '  ' → logprob: -14.086444854736328

Token 1599: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5367635488510132
    2. 'not' → logprob: -0.9117635488510132
    3. 'M' → logprob: -4.786763668060303
    4. '           ' → logprob: -5.536763668060303
    5. ' M' → logprob: -7.036763668060303
    6. '(not' → logprob: -8.661763191223145
    7. '   ' → logprob: -9.286763191223145
    8. '               ' → logprob: -10.286763191223145
    9. '       ' → logprob: -10.661763191223145
    10. '          ' → logprob: -11.411763191223145

Token 1600: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.13942936062812805
    2. ' (' → logprob: -2.1394293308258057
    3. '(' → logprob: -4.389429569244385
    4. 'x' → logprob: -12.139429092407227
    5. '((' → logprob: -12.764429092407227
    6. ' x' → logprob: -13.014429092407227
    7. '   ' → logprob: -13.014429092407227
    8. '(
' → logprob: -14.639429092407227
    9. ' ' → logprob: -14.764429092407227
    10. '(i' → logprob: -14.889429092407227

Token 1601: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00034118397161364555
    2. ' x' → logprob: -8.000341415405273
    3. '(x' → logprob: -12.250341415405273
    4. '   ' → logprob: -13.875341415405273
    5. '           ' → logprob: -17.875341415405273
    6. ' (' → logprob: -18.125341415405273
    7. ')x' → logprob: -19.000341415405273
    8. ' ' → logprob: -19.125341415405273
    9. '	x' → logprob: -19.625341415405273
    10. '       ' → logprob: -19.625341415405273

Token 1602: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.8921695047756657e-05
    2. '<' → logprob: -11.375028610229492
    3. ' L' → logprob: -12.000028610229492
    4. ' <' → logprob: -13.125028610229492
    5. '[' → logprob: -13.375028610229492
    6. '<L' → logprob: -13.375028610229492
    7. '```' → logprob: -13.625028610229492
    8. '<x' → logprob: -14.250028610229492
    9. 'i' → logprob: -14.625028610229492
    10. '_L' → logprob: -14.750028610229492

Token 1603: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2519819140434265
    2. ' <' → logprob: -1.5019819736480713
    3. '+' → logprob: -11.126981735229492
    4. ')' → logprob: -11.251981735229492
    5. '<
' → logprob: -11.626981735229492
    6. '<int' → logprob: -12.876981735229492
    7. ' <
' → logprob: -12.876981735229492
    8. ')<' → logprob: -13.376981735229492
    9. '<M' → logprob: -13.376981735229492
    10. ' ' → logprob: -13.876981735229492

Token 1604: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0005530327325686812
    2. ' M' → logprob: -7.500553131103516
    3. '
' → logprob: -17.375553131103516
    4. '           ' → logprob: -19.000553131103516
    5. '```' → logprob: -19.000553131103516
    6. '   ' → logprob: -19.125553131103516
    7. ' ' → logprob: -19.125553131103516
    8. ' ' → logprob: -20.125553131103516
    9. '`' → logprob: -20.375553131103516
    10. '``' → logprob: -20.625553131103516

Token 1605: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.099311351776123
    2. ' and' → logprob: -1.099311351776123
    3. ' <' → logprob: -1.224311351776123
    4. 'and' → logprob: -3.224311351776123
    5. ')' → logprob: -10.974311828613281
    6. '           ' → logprob: -11.474311828613281
    7. ' ' → logprob: -11.599311828613281
    8. '        ' → logprob: -12.724311828613281
    9. ' <
' → logprob: -12.724311828613281
    10. '       ' → logprob: -12.849311828613281

Token 1606: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. ')x' → logprob: -19.003177642822266
    4. '   ' → logprob: -19.378177642822266
    5. '(x' → logprob: -19.503177642822266
    6. '```' → logprob: -19.628177642822266
    7. ')' → logprob: -20.253177642822266
    8. '	x' → logprob: -20.378177642822266
    9. '       ' → logprob: -20.628177642822266
    10. '           ' → logprob: -21.128177642822266

Token 1607: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4259644558478612e-05
    2. 'x' → logprob: -11.750014305114746
    3. '_R' → logprob: -12.875014305114746
    4. ' R' → logprob: -13.500014305114746
    5. 'L' → logprob: -14.125014305114746
    6. '   ' → logprob: -14.750014305114746
    7. '[' → logprob: -15.000014305114746
    8. '```' → logprob: -15.125014305114746
    9. '       ' → logprob: -16.25001335144043
    10. '[i' → logprob: -16.62501335144043

Token 1608: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02340550534427166
    2. '           ' → logprob: -4.2734055519104
    3. '):' → logprob: -4.7734055519104
    4. '               ' → logprob: -7.8984055519104
    5. ':
' → logprob: -8.273405075073242
    6. ':' → logprob: -9.898405075073242
    7. '       ' → logprob: -10.273405075073242
    8. ' ):
' → logprob: -11.273405075073242
    9. ')' → logprob: -11.773405075073242
    10. '          ' → logprob: -12.398405075073242

Token 1609: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.621933451038785e-05
    2. '           ' → logprob: -10.375056266784668
    3. '                   ' → logprob: -11.375056266784668
    4. '              ' → logprob: -12.125056266784668
    5. ' continue' → logprob: -13.500056266784668
    6. '   ' → logprob: -13.500056266784668
    7. '             ' → logprob: -14.000056266784668
    8. '                       ' → logprob: -14.125056266784668
    9. '	           ' → logprob: -14.250056266784668
    10. 'continue' → logprob: -14.500056266784668

Token 1610: ' stable' (ID: 22105)
  Prédit: 'stable'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stable' (adapté à ' stable') → logprob: -0.19804026186466217
    2. ' stable' → logprob: -2.698040246963501
    3. '               ' → logprob: -2.948040246963501
    4. '           ' → logprob: -3.323040246963501
    5. '                   ' → logprob: -3.823040246963501
    6. '   ' → logprob: -6.57304048538208
    7. '```' → logprob: -8.448040008544922
    8. '
' → logprob: -8.823040008544922
    9. '       ' → logprob: -9.198040008544922
    10. '``' → logprob: -10.073040008544922

Token 1611: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769311785697937
    2. '=' → logprob: -0.8269311785697937
    3. '=False' → logprob: -6.951930999755859
    4. '           ' → logprob: -11.70193099975586
    5. '=True' → logprob: -11.82693099975586
    6. '               ' → logprob: -11.95193099975586
    7. '                   ' → logprob: -12.07693099975586
    8. '==' → logprob: -13.32693099975586
    9. '=
' → logprob: -13.95193099975586
    10. '                ' → logprob: -14.07693099975586

Token 1612: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01814994215965271
    2. ' False' → logprob: -4.0181498527526855
    3. '=False' → logprob: -18.768150329589844
    4. '(False' → logprob: -19.893150329589844
    5. '_false' → logprob: -20.643150329589844
    6. 'false' → logprob: -21.018150329589844
    7. 'not' → logprob: -22.143150329589844
    8. 'True' → logprob: -22.143150329589844
    9. 'F' → logprob: -22.643150329589844
    10. '.False' → logprob: -22.643150329589844

Token 1613: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04835569113492966
    2. '           ' → logprob: -3.2983555793762207
    3. '       ' → logprob: -5.048355579376221
    4. '<|end|>' → logprob: -6.298355579376221
    5. '                   ' → logprob: -7.048355579376221
    6. '   ' → logprob: -8.798356056213379
    7. '
' → logprob: -8.923356056213379
    8. ')' → logprob: -9.048356056213379
    9. '              ' → logprob: -9.048356056213379
    10. '                ' → logprob: -9.423356056213379

Token 1614: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004022003151476383
    2. '           ' → logprob: -6.004022121429443
    3. '       ' → logprob: -7.254022121429443
    4. '<|end|>' → logprob: -8.004021644592285
    5. '                   ' → logprob: -8.379021644592285
    6. '   ' → logprob: -10.004021644592285
    7. '              ' → logprob: -10.379021644592285
    8. '                ' → logprob: -10.379021644592285
    9. ')' → logprob: -10.879021644592285
    10. ' ' → logprob: -11.254021644592285

Token 1615: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.13340699672698975
    2. ' break' → logprob: -2.6334071159362793
    3. '               ' → logprob: -3.6334071159362793
    4. '           ' → logprob: -3.6334071159362793
    5. '	break' → logprob: -9.633406639099121
    6. '                   ' → logprob: -9.633406639099121
    7. '       ' → logprob: -10.008406639099121
    8. '   ' → logprob: -11.383406639099121
    9. '```' → logprob: -12.008406639099121
    10. '		' → logprob: -12.633406639099121

Token 1616: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0392141193151474
    2. 'print' → logprob: -4.164214134216309
    3. '   ' → logprob: -4.414214134216309
    4. 'if' → logprob: -5.039214134216309
    5. '```' → logprob: -5.789214134216309
    6. ' if' → logprob: -7.914214134216309
    7. '        
' → logprob: -7.914214134216309
    8. '<|end|>' → logprob: -8.289214134216309
    9. '
' → logprob: -8.664214134216309
    10. '    
' → logprob: -10.289214134216309

Token 1617: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14946559071540833
    2. '       ' → logprob: -2.274465560913086
    3. '
' → logprob: -3.649465560913086
    4. '    
' → logprob: -5.399465560913086
    5. '```' → logprob: -6.274465560913086
    6. 'print' → logprob: -6.649465560913086
    7. '        
' → logprob: -6.899465560913086
    8. '<|end|>' → logprob: -7.274465560913086
    9. 'if' → logprob: -8.274465560913086
    10. '\n' → logprob: -9.399465560913086

Token 1618: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.973912239074707
    2. 'if' (adapté à ' if') → logprob: -0.973912239074707
    3. 'print' → logprob: -1.473912239074707
    4. '   ' → logprob: -4.348912239074707
    5. ' if' → logprob: -6.098912239074707
    6. '```' → logprob: -7.598912239074707
    7. ' print' → logprob: -9.848912239074707
    8. '
' → logprob: -10.973912239074707
    9. '        
' → logprob: -11.223912239074707
    10. 'return' → logprob: -12.098912239074707

Token 1619: ' stable' (ID: 22105)
  Prédit: ' stable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stable' → logprob: -0.010158807970583439
    2. 'stable' → logprob: -4.760159015655518
    3. ' not' → logprob: -6.510159015655518
    4. 'not' → logprob: -9.88515853881836
    5. '   ' → logprob: -12.63515853881836
    6. '       ' → logprob: -15.38515853881836
    7. '    ' → logprob: -15.88515853881836
    8. ' ' → logprob: -16.63515853881836
    9. 'Stable' → logprob: -17.38515853881836
    10. 'st' → logprob: -17.63515853881836

Token 1620: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24641644954681396
    2. ':
' → logprob: -1.871416449546814
    3. '           ' → logprob: -2.7464165687561035
    4. '():
' → logprob: -9.246416091918945
    5. 'print' → logprob: -9.496416091918945
    6. '               ' → logprob: -10.496416091918945
    7. '       ' → logprob: -10.996416091918945
    8. '<|end|>' → logprob: -10.996416091918945
    9. ',' → logprob: -11.371416091918945
    10. ' print' → logprob: -11.621416091918945

Token 1621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007121934904716909
    2. 'print' → logprob: -7.3757123947143555
    3. ' print' → logprob: -9.875712394714355
    4. '       ' → logprob: -10.625712394714355
    5. '	       ' → logprob: -12.750712394714355
    6. ':
' → logprob: -13.250712394714355
    7. '               ' → logprob: -13.750712394714355
    8. '		' → logprob: -13.750712394714355
    9. '```' → logprob: -13.750712394714355
    10. ':' → logprob: -14.375712394714355

Token 1622: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.47514063119888306
    2. '           ' → logprob: -0.9751406311988831
    3. ' print' → logprob: -7.100140571594238
    4. '       ' → logprob: -8.475140571594238
    5. '```' → logprob: -11.100140571594238
    6. '   ' → logprob: -11.725140571594238
    7. '               ' → logprob: -12.225140571594238
    8. '
' → logprob: -14.725140571594238
    9. '	print' → logprob: -14.725140571594238
    10. '`' → logprob: -15.850140571594238

Token 1623: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00013083349040243775
    2. '(' → logprob: -9.125130653381348
    3. '('' → logprob: -10.875130653381348
    4. '"' → logprob: -12.875130653381348
    5. '(
' → logprob: -15.375130653381348
    6. ' ("' → logprob: -16.375131607055664
    7. '(("' → logprob: -16.875131607055664
    8. '   ' → logprob: -17.000131607055664
    9. '("'' → logprob: -18.750131607055664
    10. '(`' → logprob: -18.875131607055664

Token 1624: 'ST' (ID: 1117)
  Prédit: 'ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -8.113290095934644e-05
    2. '"' → logprob: -9.500081062316895
    3. 'stable' → logprob: -12.500081062316895
    4. 'Stable' → logprob: -14.125081062316895
    5. 'SAFE' → logprob: -14.375081062316895
    6. 'STA' → logprob: -15.375081062316895
    7. ' ST' → logprob: -15.500081062316895
    8. 'STACK' → logprob: -15.500081062316895
    9. ''' → logprob: -15.875081062316895
    10. '   ' → logprob: -16.37508201599121

Token 1625: 'ABLE' (ID: 6606)
  Prédit: 'ABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABLE' → logprob: -2.696889623621246e-06
    2. 'able' → logprob: -13.12500286102295
    3. 'A' → logprob: -15.75000286102295
    4. 'ABLED' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.500001907348633
    6. 'ACK' → logprob: -17.000001907348633
    7. 'E' → logprob: -17.000001907348633
    8. 'ABL' → logprob: -17.125001907348633
    9. 'R' → logprob: -17.250001907348633
    10. 'ABILITY' → logprob: -17.250001907348633

Token 1626: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.01418866403400898
    2. '")' → logprob: -4.264188766479492
    3. '")
' → logprob: -10.889188766479492
    4. ')
' → logprob: -12.514188766479492
    5. 'else' → logprob: -14.514188766479492
    6. '   ' → logprob: -14.639188766479492
    7. '       ' → logprob: -15.014188766479492
    8. '')
' → logprob: -15.014188766479492
    9. '");' → logprob: -15.514188766479492
    10. '")

' → logprob: -15.764188766479492

Token 1627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003223583335056901
    2. 'else' → logprob: -5.753223419189453
    3. '```' → logprob: -10.628223419189453
    4. ' else' → logprob: -11.128223419189453
    5. '   ' → logprob: -12.253223419189453
    6. '           ' → logprob: -14.003223419189453
    7. '<|end|>' → logprob: -14.503223419189453
    8. '	' → logprob: -15.003223419189453
    9. '	else' → logprob: -16.253223419189453
    10. '     ' → logprob: -16.628223419189453

Token 1628: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.12700548768043518
    2. '       ' → logprob: -2.1270055770874023
    3. ' else' → logprob: -9.502005577087402
    4. '   ' → logprob: -13.502005577087402
    5. 'elif' → logprob: -14.502005577087402
    6. '	else' → logprob: -14.502005577087402
    7. '```' → logprob: -15.377005577087402
    8. '	' → logprob: -17.127004623413086
    9. 'continue' → logprob: -17.252004623413086
    10. '           ' → logprob: -17.877004623413086

Token 1629: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28791776299476624
    2. ':' → logprob: -1.4129177331924438
    3. ':
' → logprob: -5.162917613983154
    4. '```' → logprob: -8.412918090820312
    5. '               ' → logprob: -8.787918090820312
    6. '(' → logprob: -9.537918090820312
    7. '<|end|>' → logprob: -9.537918090820312
    8. '	       ' → logprob: -9.662918090820312
    9. '          ' → logprob: -9.787918090820312
    10. 'print' → logprob: -9.912918090820312

Token 1630: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7089560627937317
    2. '           ' → logprob: -0.9589560627937317
    3. ' print' → logprob: -2.083956003189087
    4. '```' → logprob: -9.958955764770508
    5. '               ' → logprob: -10.958955764770508
    6. '       ' → logprob: -11.083955764770508
    7. '	print' → logprob: -11.208955764770508
    8. '   ' → logprob: -11.958955764770508
    9. '(print' → logprob: -12.708955764770508
    10. '		' → logprob: -12.833955764770508

Token 1631: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.306760805164231e-05
    2. ' print' → logprob: -11.25001335144043
    3. '           ' → logprob: -17.75001335144043
    4. '```' → logprob: -18.37501335144043
    5. '	print' → logprob: -19.62501335144043
    6. '       ' → logprob: -20.12501335144043
    7. 'break' → logprob: -20.50001335144043
    8. '   ' → logprob: -22.50001335144043
    9. '(print' → logprob: -23.25001335144043
    10. '``' → logprob: -23.37501335144043

Token 1632: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0145559785887599
    2. '(' → logprob: -4.264555931091309
    3. '("("' → logprob: -7.889555931091309
    4. '(
' → logprob: -11.389555931091309
    5. '("(' → logprob: -12.639555931091309
    6. '('' → logprob: -13.639555931091309
    7. '("")' → logprob: -13.764555931091309
    8. '()' → logprob: -15.014555931091309
    9. '(""' → logprob: -15.139555931091309
    10. '("""' → logprob: -16.264556884765625

Token 1633: 'UN' (ID: 2926)
  Prédit: 'UN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UN' → logprob: -7.896309739408025e-07
    2. '"' → logprob: -14.250000953674316
    3. ' UN' → logprob: -16.0
    4. 'unst' → logprob: -19.0
    5. '_UN' → logprob: -19.0
    6. '.UN' → logprob: -20.75
    7. 'Un' → logprob: -21.25
    8. 'UNK' → logprob: -21.375
    9. 'UNC' → logprob: -22.0
    10. 'UNO' → logprob: -22.75

Token 1634: 'ST' (ID: 1117)
  Prédit: 'ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: 0.0
    2. '
' → logprob: -17.25
    3. ' ST' → logprob: -18.5
    4. '_ST' → logprob: -18.875
    5. 'STA' → logprob: -18.875
    6. 'stable' → logprob: -19.125
    7. 'S' → logprob: -20.25
    8. 'ABLE' → logprob: -20.25
    9. 'Stable' → logprob: -20.25
    10. 'SAFE' → logprob: -21.25

Token 1635: 'ABLE' (ID: 6606)
  Prédit: 'ABLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABLE' → logprob: -5.200166469876422e-06
    2. 'able' → logprob: -12.375004768371582
    3. '```' → logprob: -14.750004768371582
    4. '
' → logprob: -16.0000057220459
    5. 'ABL' → logprob: -16.2500057220459
    6. 'ABLED' → logprob: -16.6250057220459
    7. 'AL' → logprob: -17.1250057220459
    8. 'L' → logprob: -17.1250057220459
    9. 'R' → logprob: -17.7500057220459
    10. '_' → logprob: -17.7500057220459

Token 1636: '")

' (ID: 10822)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1637: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7578157186508179
    2. 'if' → logprob: -0.8828157186508179
    3. '<|end|>' → logprob: -2.2578158378601074
    4. '```' → logprob: -4.757815837860107
    5. '
' → logprob: -6.257815837860107
    6. ' main' → logprob: -7.257815837860107
    7. '(main' → logprob: -7.632815837860107
    8. '   ' → logprob: -7.757815837860107
    9. ' if' → logprob: -8.38281536102295
    10. '    
' → logprob: -8.75781536102295

Token 1638: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005234594456851482
    2. '__' → logprob: -5.255234718322754
    3. ' _' → logprob: -14.755234718322754
    4. '_' → logprob: -15.380234718322754
    5. ' ___' → logprob: -16.630233764648438
    6. ' ' → logprob: -17.005233764648438
    7. '___' → logprob: -17.630233764648438
    8. '_name' → logprob: -18.005233764648438
    9. ' ____' → logprob: -18.255233764648438
    10. 'main' → logprob: -18.505233764648438

Token 1639: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005997385596856475
    2. '==' → logprob: -8.25059986114502
    3. ' ==' → logprob: -8.37559986114502
    4. '```' → logprob: -10.00059986114502
    5. ' __' → logprob: -11.00059986114502
    6. '__.' → logprob: -11.62559986114502
    7. '__.__' → logprob: -11.87559986114502
    8. '=="' → logprob: -12.00059986114502
    9. 'name' → logprob: -12.12559986114502
    10. '___' → logprob: -12.62559986114502

Token 1640: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.816093228830141e-06
    2. '__.__' → logprob: -13.37500286102295
    3. '==' → logprob: -14.62500286102295
    4. '```' → logprob: -15.25000286102295
    5. '__
' → logprob: -15.37500286102295
    6. '=="' → logprob: -16.500001907348633
    7. '__.' → logprob: -16.875001907348633
    8. '____' → logprob: -17.000001907348633
    9. '___' → logprob: -17.500001907348633
    10. '__["' → logprob: -17.625001907348633

Token 1641: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0178423710167408
    2. '==' → logprob: -4.1428422927856445
    3. '=="' → logprob: -6.8928422927856445
    4. ' ==' → logprob: -7.7678422927856445
    5. '__.__' → logprob: -8.267842292785645
    6. '=='' → logprob: -10.517842292785645
    7. '==
' → logprob: -10.892842292785645
    8. '__
' → logprob: -11.142842292785645
    9. '```' → logprob: -11.517842292785645
    10. '__":
' → logprob: -11.642842292785645

Token 1642: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00247981958091259
    2. ''' → logprob: -6.0024800300598145
    3. ' "__' → logprob: -13.002479553222656
    4. '__' → logprob: -13.252479553222656
    5. '   ' → logprob: -16.252479553222656
    6. '"name' → logprob: -17.877479553222656
    7. '"user' → logprob: -18.252479553222656
    8. ' '__' → logprob: -18.502479553222656
    9. '("__' → logprob: -18.752479553222656
    10. ''"' → logprob: -19.627479553222656

Token 1643: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10073753446340561
    2. 'main' → logprob: -2.3507375717163086
    3. '"' → logprob: -7.975737571716309
    4. ''' → logprob: -9.225737571716309
    5. 'name' → logprob: -9.600737571716309
    6. '__":
' → logprob: -11.225737571716309
    7. '___' → logprob: -12.475737571716309
    8. '____' → logprob: -13.850737571716309
    9. '__
' → logprob: -14.600737571716309
    10. '_main' → logprob: -14.725737571716309

Token 1644: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018769966438412666
    2. '__' → logprob: -4.01876974105835
    3. '__':
' → logprob: -7.39376974105835
    4. '__.' → logprob: -13.518770217895508
    5. '__
' → logprob: -13.893770217895508
    6. '__["' → logprob: -14.143770217895508
    7. '__.__' → logprob: -14.268770217895508
    8. '__:' → logprob: -14.393770217895508
    9. '__",' → logprob: -16.018770217895508
    10. '():
' → logprob: -16.393770217895508

Token 1645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16287648677825928
    2. 'main' → logprob: -1.9128764867782593
    3. '	main' → logprob: -6.162876605987549
    4. ' main' → logprob: -7.537876605987549
    5. '_main' → logprob: -12.41287612915039
    6. '    
' → logprob: -13.41287612915039
    7. '(main' → logprob: -13.66287612915039
    8. '```' → logprob: -13.66287612915039
    9. '
' → logprob: -14.28787612915039
    10. '   ' → logprob: -14.66287612915039

Token 1646: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -16.375
    4. '   ' → logprob: -19.125
    5. '(main' → logprob: -20.25
    6. '_main' → logprob: -20.625
    7. 'import' → logprob: -22.75
    8. '.main' → logprob: -22.875
    9. 'Main' → logprob: -24.375
    10. 'mainwindow' → logprob: -24.375

Token 1647: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1645
Tokens correctement prédits (1ère position, stricte): 508
Tokens correctement prédits (1ère position, avec adaptation): 546
Tokens correctement prédits (top 10): 1202
Précision stricte (1ère position): 30.88%
Précision adaptée (1ère position): 33.19%
Précision (top 10): 73.07%
================================================================================
