================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    import sys
    sys.setrecursionlimit(10**7)
    input = sys.stdin.readline

    from functools import lru_cache

    n = int(input())
    for _ in range(n):
        s = input().strip()

        @lru_cache(None)
        def can_win(number):
            if len(number) == 1:
                return False
            digits = list(map(int, number))
            length = len(digits)
            # essayer toutes les paires i, i+1
            for i in range(length-1):
                new_digits = digits[:i] + [digits[i]+digits[i+1]] + digits[i+2:]
                new_number = tuple(new_digits)
                # si l'adversaire ne peut pas gagner à partir de new_number alors on gagne
                if not can_win(new_number):
                    return True
            return False

        result = can_win(tuple(map(int, s)))
        print("Fabre wins." if result else "Audrey wins.")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8254364728927612
    2. '\n' → logprob: -1.3254364728927612
    3. '\' → logprob: -1.4504364728927612
    4. '```' → logprob: -3.325436592102051
    5. '    
' → logprob: -4.450436592102051
    6. ':' → logprob: -5.700436592102051
    7. '    ' → logprob: -6.200436592102051
    8. '(' → logprob: -6.575436592102051
    9. '\r' → logprob: -6.700436592102051
    10. ' 
' → logprob: -6.950436592102051

Token 4: ' import' (ID: 1588)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4606890678405762
    2. 'n' → logprob: -1.5856890678405762
    3. 'x' → logprob: -2.085689067840576
    4. '   ' → logprob: -2.085689067840576
    5. '\' → logprob: -2.460689067840576
    6. 'a' → logprob: -2.710689067840576
    7. 'i' → logprob: -3.460689067840576
    8. '```' → logprob: -3.585689067840576
    9. ' ' → logprob: -4.085689067840576
    10. '#' → logprob: -4.335689067840576

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03070881776511669
    2. ' math' → logprob: -3.5307087898254395
    3. ' ' → logprob: -7.7807087898254395
    4. ' os' → logprob: -8.280709266662598
    5. ' itertools' → logprob: -9.030709266662598
    6. ' numpy' → logprob: -9.530709266662598
    7. 'sys' → logprob: -10.155709266662598
    8. '=sys' → logprob: -11.280709266662598
    9. ' functools' → logprob: -11.405709266662598
    10. ' collections' → logprob: -11.780709266662598

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8628963828086853
    2. '\' → logprob: -1.36289644241333
    3. '.readline' → logprob: -1.73789644241333
    4. '```' → logprob: -3.36289644241333
    5. '   ' → logprob: -3.48789644241333
    6. '.' → logprob: -3.86289644241333
    7. 'newline' → logprob: -4.11289644241333
    8. '.stdout' → logprob: -4.36289644241333
    9. '.stdin' → logprob: -4.36289644241333
    10. '
' → logprob: -6.23789644241333

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7744858264923096
    2. '\n' → logprob: -1.5244858264923096
    3. '.readline' → logprob: -2.6494858264923096
    4. 'newline' → logprob: -2.6494858264923096
    5. '\' → logprob: -3.3994858264923096
    6. '
' → logprob: -3.5244858264923096
    7. '.' → logprob: -3.7744858264923096
    8. 'input' → logprob: -4.0244855880737305
    9. '```' → logprob: -4.2744855880737305
    10. '    
' → logprob: -4.3994855880737305

Token 8: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35100364685058594
    2. '.readline' → logprob: -2.101003646850586
    3. 'input' → logprob: -2.976003646850586
    4. '```' → logprob: -3.726003646850586
    5. '\n' → logprob: -4.101003646850586
    6. ' readline' → logprob: -4.101003646850586
    7. '.' → logprob: -4.351003646850586
    8. 'newline' → logprob: -4.726003646850586
    9. '       ' → logprob: -4.851003646850586
    10. '    ' → logprob: -5.476003646850586

Token 9: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11876638233661652
    2. '.stdin' → logprob: -2.8687663078308105
    3. '.stdout' → logprob: -2.9937663078308105
    4. ' .' → logprob: -6.3687663078308105
    5. '.exit' → logprob: -6.8687663078308105
    6. '.stderr' → logprob: -7.1187663078308105
    7. '.readline' → logprob: -7.2437663078308105
    8. '.argv' → logprob: -7.3687663078308105
    9. '.std' → logprob: -9.618766784667969
    10. '.import' → logprob: -9.868766784667969

Token 10: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0035468549467623234
    2. 'limit' → logprob: -6.378546714782715
    3. '_rec' → logprob: -7.503546714782715
    4. '_limit' → logprob: -7.503546714782715
    5. 'trace' → logprob: -8.378546714782715
    6. 'set' → logprob: -8.753546714782715
    7. ' recursion' → logprob: -8.878546714782715
    8. 'ex' → logprob: -10.753546714782715
    9. '_trace' → logprob: -10.753546714782715
    10. 'execution' → logprob: -10.878546714782715

Token 11: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00046022076276130974
    2. 'urs' → logprob: -7.875460147857666
    3. 'ur' → logprob: -10.375460624694824
    4. '_' → logprob: -11.125460624694824
    5. 'limit' → logprob: -11.625460624694824
    6. 'ursor' → logprob: -12.500460624694824
    7. '_limit' → logprob: -12.500460624694824
    8. 'usion' → logprob: -12.625460624694824
    9. 'urf' → logprob: -13.125460624694824
    10. 'urse' → logprob: -13.250460624694824

Token 12: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00867791660130024
    2. '_limit' → logprob: -4.758677959442139
    3. ' limit' → logprob: -9.75867748260498
    4. 'lim' → logprob: -12.88367748260498
    5. 'depth' → logprob: -13.63367748260498
    6. '_depth' → logprob: -13.88367748260498
    7. '-limit' → logprob: -14.88367748260498
    8. '_LIMIT' → logprob: -15.50867748260498
    9. 'Limit' → logprob: -16.008678436279297
    10. '.limit' → logprob: -16.383678436279297

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.45848218582978e-06
    2. '((' → logprob: -14.37500286102295
    3. '(
' → logprob: -14.87500286102295
    4. '("("' → logprob: -15.25000286102295
    5. '(

' → logprob: -15.37500286102295
    6. '```' → logprob: -15.62500286102295
    7. '40' → logprob: -16.000001907348633
    8. '('' → logprob: -16.250001907348633
    9. '()' → logprob: -16.250001907348633
    10. ' (' → logprob: -16.250001907348633

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019291093340143561
    2. '100' → logprob: -6.25192928314209
    3. ' ' → logprob: -14.62692928314209
    4. '500' → logprob: -17.376928329467773
    5. '200' → logprob: -17.501928329467773
    6. '300' → logprob: -17.626928329467773
    7. 'int' → logprob: -18.126928329467773
    8. '   ' → logprob: -18.376928329467773
    9. '1' → logprob: -18.501928329467773
    10. '999' → logprob: -19.001928329467773

Token 15: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5051431655883789
    2. '6' → logprob: -1.130143165588379
    3. '7' → logprob: -3.505143165588379
    4. '**' → logprob: -3.755143165588379
    5. '000' → logprob: -4.255143165588379
    6. '5' → logprob: -5.630143165588379
    7. '00' → logprob: -6.130143165588379
    8. '```' → logprob: -9.380143165588379
    9. '4' → logprob: -10.005143165588379
    10. ')' → logprob: -11.005143165588379

Token 16: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0015540247550234199
    2. '9' → logprob: -6.501554012298584
    3. '8' → logprob: -9.876554489135742
    4. '6' → logprob: -15.376554489135742
    5. '```' → logprob: -19.751554489135742
    6. ' ' → logprob: -21.626554489135742
    7. '``' → logprob: -22.126554489135742
    8. '**' → logprob: -22.501554489135742
    9. '  ' → logprob: -23.251554489135742
    10. '

' → logprob: -23.251554489135742

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.625004768371582
    3. ' )' → logprob: -13.500004768371582
    4. '))' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.1250057220459
    6. ')
' → logprob: -18.0000057220459
    7. ')

' → logprob: -18.1250057220459
    8. ' ' → logprob: -18.2500057220459
    9. '`)' → logprob: -18.5000057220459
    10. '),' → logprob: -19.1250057220459

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47655314207077026
    2. '
' → logprob: -1.226553201675415
    3. '    
' → logprob: -3.226553201675415
    4. '\n' → logprob: -3.601553201675415
    5. '```' → logprob: -4.351552963256836
    6. '\' → logprob: -6.226552963256836
    7. '<|end|>' → logprob: -6.351552963256836
    8. 'newline' → logprob: -7.351552963256836
    9. '  
' → logprob: -7.976552963256836
    10. 'n' → logprob: -8.726552963256836

Token 19: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2305242270231247
    2. '\n' → logprob: -2.2305243015289307
    3. 'n' → logprob: -2.9805243015289307
    4. '
' → logprob: -3.3555243015289307
    5. '    
' → logprob: -4.730524063110352
    6. '\' → logprob: -6.230524063110352
    7. '```' → logprob: -7.480524063110352
    8. 'data' → logprob: -8.605524063110352
    9. '\r' → logprob: -8.980524063110352
    10. 'newline' → logprob: -8.980524063110352

Token 20: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02996719628572464
    2. '()' → logprob: -4.029967308044434
    3. '.' → logprob: -5.029967308044434
    4. ')' → logprob: -6.279967308044434
    5. '=' → logprob: -7.154967308044434
    6. 'data' → logprob: -8.029967308044434
    7. '```' → logprob: -8.029967308044434
    8. '().' → logprob: -8.279967308044434
    9. '('' → logprob: -8.529967308044434
    10. ''' → logprob: -8.904967308044434

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01820109784603119
    2. 'sys' → logprob: -4.018200874328613
    3. ' input' → logprob: -10.393200874328613
    4. 'input' → logprob: -11.018200874328613
    5. '	sys' → logprob: -13.393200874328613
    6. ' lambda' → logprob: -13.893200874328613
    7. '=sys' → logprob: -14.018200874328613
    8. '(sys' → logprob: -14.893200874328613
    9. 'lambda' → logprob: -15.518200874328613
    10. ' ' → logprob: -15.518200874328613

Token 22: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12782272696495056
    2. '.readline' → logprob: -2.1278226375579834
    3. '.read' → logprob: -7.8778228759765625
    4. ' .' → logprob: -8.127822875976562
    5. '.stdin' → logprob: -8.877822875976562
    6. '.Read' → logprob: -11.002822875976562
    7. '<|end|>' → logprob: -11.627822875976562
    8. ').' → logprob: -12.377822875976562
    9. '.readlines' → logprob: -12.377822875976562
    10. '<|end|>' → logprob: -12.502822875976562

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008720697835087776
    2. '.read' → logprob: -5.008720874786377
    3. 'read' → logprob: -6.258720874786377
    4. '.' → logprob: -9.633720397949219
    5. ' readline' → logprob: -11.383720397949219
    6. '.Read' → logprob: -12.258720397949219
    7. '_read' → logprob: -12.508720397949219
    8. '.readlines' → logprob: -13.133720397949219
    9. 'reader' → logprob: -14.508720397949219
    10. '.READ' → logprob: -15.008720397949219

Token 24: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07295641303062439
    2. '    
' → logprob: -3.6979563236236572
    3. '\n' → logprob: -4.447956562042236
    4. 'n' → logprob: -4.572956562042236
    5. '(n' → logprob: -5.072956562042236
    6. '
' → logprob: -5.447956562042236
    7. '()' → logprob: -5.572956562042236
    8. '(' → logprob: -5.947956562042236
    9. '\' → logprob: -6.322956562042236
    10. ')' → logprob: -6.697956562042236

Token 25: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3145146667957306
    2. '   ' → logprob: -1.3145146369934082
    3. ' n' → logprob: -7.189514636993408
    4. 't' → logprob: -7.939514636993408
    5. 'N' → logprob: -9.689515113830566
    6. '    
' → logprob: -10.064515113830566
    7. ' ' → logprob: -11.564515113830566
    8. '    ' → logprob: -12.314515113830566
    9. '	n' → logprob: -12.564515113830566
    10. '
' → logprob: -12.689515113830566

Token 26: ' from' (ID: 591)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00042209390085190535
    2. 't' → logprob: -8.500422477722168
    3. 'N' → logprob: -8.750422477722168
    4. '   ' → logprob: -9.750422477722168
    5. 'T' → logprob: -14.250422477722168
    6. ' n' → logprob: -14.375422477722168
    7. 'r' → logprob: -15.750422477722168
    8. 'a' → logprob: -16.00042152404785
    9. 'k' → logprob: -16.12542152404785
    10. 'd' → logprob: -16.12542152404785

Token 27: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.39132776856422424
    2. ' math' → logprob: -1.1413277387619019
    3. 'collections' → logprob: -6.391327857971191
    4. ' itertools' → logprob: -6.516327857971191
    5. ' sys' → logprob: -7.016327857971191
    6. ' functools' → logprob: -7.891327857971191
    7. 'math' → logprob: -11.891327857971191
    8. ' typing' → logprob: -12.016327857971191
    9. ' heap' → logprob: -13.141327857971191
    10. ' bis' → logprob: -13.391327857971191

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06224529445171356
    2. 'import' → logprob: -2.8122453689575195
    3. '	import' → logprob: -8.68724536895752
    4. '<|end|>' → logprob: -9.68724536895752
    5. '_import' → logprob: -11.18724536895752
    6. ' ' → logprob: -11.93724536895752
    7. '.' → logprob: -12.18724536895752
    8. '<|end|>' → logprob: -13.06224536895752
    9. ' impor' → logprob: -13.18724536895752
    10. ' importar' → logprob: -13.31224536895752

Token 29: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12708401679992676
    2. ' l' → logprob: -2.1270840167999268
    3. 'cache' → logprob: -9.377083778381348
    4. 'reduce' → logprob: -9.752083778381348
    5. 'wrap' → logprob: -12.127083778381348
    6. 'import' → logprob: -12.502083778381348
    7. '	l' → logprob: -14.002083778381348
    8. ' cache' → logprob: -14.127083778381348
    9. 'cached' → logprob: -14.502083778381348
    10. ' reduce' → logprob: -14.752083778381348

Token 30: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -4.4849443838757e-06
    2. 'r' → logprob: -12.625004768371582
    3. 'ruz' → logprob: -14.125004768371582
    4. 'RU' → logprob: -16.125003814697266
    5. 'ruff' → logprob: -16.250003814697266
    6. 'rup' → logprob: -16.750003814697266
    7. '_ru' → logprob: -17.250003814697266
    8. 'ruk' → logprob: -17.375003814697266
    9. 'a' → logprob: -17.375003814697266
    10. 'ruh' → logprob: -17.625003814697266

Token 31: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -4.961759259458631e-06
    2. 'cache' → logprob: -12.500004768371582
    3. '_cached' → logprob: -14.375004768371582
    4. '_c' → logprob: -15.750004768371582
    5. '_' → logprob: -15.875004768371582
    6. '_counter' → logprob: -16.2500057220459
    7. '_CACHE' → logprob: -16.6250057220459
    8. 'Cache' → logprob: -17.0000057220459
    9. '_cash' → logprob: -17.1250057220459
    10. '\' → logprob: -17.7500057220459

Token 32: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2382386475801468
    2. '   ' → logprob: -2.488238573074341
    3. '
' → logprob: -3.238238573074341
    4. '    
' → logprob: -3.488238573074341
    5. '\' → logprob: -3.738238573074341
    6. '(' → logprob: -5.11323881149292
    7. '@
' → logprob: -5.36323881149292
    8. '<|end|>' → logprob: -5.36323881149292
    9. 'def' → logprob: -5.73823881149292
    10. '\n' → logprob: -5.98823881149292

Token 33: '   ' (ID: 271)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.03571879491209984
    2. '   ' → logprob: -3.5357186794281006
    3. '    
' → logprob: -5.66071891784668
    4. '
' → logprob: -6.91071891784668
    5. '@n' → logprob: -7.53571891784668
    6. '@
' → logprob: -7.91071891784668
    7. 'n' → logprob: -9.16071891784668
    8. '    ' → logprob: -9.66071891784668
    9. '@s' → logprob: -9.91071891784668
    10. 'def' → logprob: -10.16071891784668

Token 34: ' n' (ID: 297)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0024373778142035007
    2. '@n' → logprob: -6.627437591552734
    3. 'n' (adapté à ' n') → logprob: -7.127437591552734
    4. '   ' → logprob: -8.252437591552734
    5. '    
' → logprob: -11.127437591552734
    6. '@
' → logprob: -11.627437591552734
    7. '
' → logprob: -11.752437591552734
    8. '@s' → logprob: -12.877437591552734
    9. ' @' → logprob: -13.127437591552734
    10. 'def' → logprob: -13.377437591552734

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07146722823381424
    2. '=' → logprob: -2.696467161178589
    3. ' ' → logprob: -6.696467399597168
    4. ',' → logprob: -8.696467399597168
    5. '=int' → logprob: -10.071467399597168
    6. ')' → logprob: -10.946467399597168
    7. '  ' → logprob: -10.946467399597168
    8. ' ,' → logprob: -11.446467399597168
    9. ' =)' → logprob: -11.571467399597168
    10. ' =
' → logprob: -11.821467399597168

Token 36: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011181985028088093
    2. 'int' → logprob: -4.511181831359863
    3. ' ' → logprob: -9.261181831359863
    4. ' input' → logprob: -10.386181831359863
    5. '=int' → logprob: -12.886181831359863
    6. 'input' → logprob: -13.136181831359863
    7. '10' → logprob: -14.386181831359863
    8. '(int' → logprob: -14.386181831359863
    9. '0' → logprob: -15.011181831359863
    10. '<int' → logprob: -15.136181831359863

Token 37: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20148496329784393
    2. '(' → logprob: -1.7014849185943604
    3. 'input' → logprob: -9.701484680175781
    4. '(sys' → logprob: -12.576484680175781
    5. ' (' → logprob: -13.076484680175781
    6. '(in' → logprob: -13.451484680175781
    7. '(inp' → logprob: -14.701484680175781
    8. '()' → logprob: -14.826484680175781
    9. ' input' → logprob: -14.951484680175781
    10. '(
' → logprob: -14.951484680175781

Token 38: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0053038387559354305
    2. '()' → logprob: -5.255303859710693
    3. ')' → logprob: -9.755303382873535
    4. '().' → logprob: -12.255303382873535
    5. ' ())' → logprob: -12.380303382873535
    6. '(' → logprob: -13.755303382873535
    7. '())
' → logprob: -14.130303382873535
    8. '()))' → logprob: -15.005303382873535
    9. '();)' → logprob: -15.130303382873535
    10. '()
' → logprob: -16.00530433654785

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2594723403453827
    2. ' ' → logprob: -3.009472370147705
    3. ')' → logprob: -3.259472370147705
    4. '    
' → logprob: -3.259472370147705
    5. '\' → logprob: -3.634472370147705
    6. '    ' → logprob: -4.134472370147705
    7. '<|end|>' → logprob: -4.259472370147705
    8. '\n' → logprob: -4.759472370147705
    9. '
' → logprob: -4.884472370147705
    10. '@' → logprob: -5.509472370147705

Token 40: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0547680854797363
    2. '<|end|>' → logprob: -1.6797680854797363
    3. '   ' → logprob: -2.0547680854797363
    4. ')' → logprob: -2.5547680854797363
    5. '@' → logprob: -2.8047680854797363
    6. 'n' → logprob: -3.5547680854797363
    7. ',' → logprob: -4.054768085479736
    8. ' 
' → logprob: -4.179768085479736
    9. '<|end|>' → logprob: -4.179768085479736
    10. '    ' → logprob: -4.179768085479736

Token 41: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32083073258399963
    2. ' _' → logprob: -1.4458307027816772
    3. ' i' → logprob: -3.445830821990967
    4. '_' → logprob: -5.070830821990967
    5. '  ' → logprob: -7.570830821990967
    6. ' range' → logprob: -9.070830345153809
    7. ' ▁' → logprob: -10.195830345153809
    8. ' ​' → logprob: -10.445830345153809
    9. ' ‌' → logprob: -10.945830345153809
    10. '_range' → logprob: -12.320830345153809

Token 42: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6428539156913757
    2. ' range' → logprob: -1.0178539752960205
    3. ' in' → logprob: -2.2678539752960205
    4. ' ' → logprob: -5.392853736877441
    5. '_' → logprob: -5.642853736877441
    6. 'in' → logprob: -7.267853736877441
    7. '	range' → logprob: -8.767853736877441
    8. ' _' → logprob: -8.892853736877441
    9. ' xrange' → logprob: -9.142853736877441
    10. 'n' → logprob: -10.392853736877441

Token 43: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197462975978851
    2. ' range' → logprob: -2.81197452545166
    3. '	range' → logprob: -12.93697452545166
    4. '(range' → logprob: -13.18697452545166
    5. '```' → logprob: -14.18697452545166
    6. ' ' → logprob: -14.68697452545166
    7. '_' → logprob: -15.06197452545166
    8. 'rang' → logprob: -15.18697452545166
    9. '  ' → logprob: -15.43697452545166
    10. ')' → logprob: -15.68697452545166

Token 44: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.202938050031662
    2. ' (' → logprob: -2.3279380798339844
    3. '(n' → logprob: -2.4529380798339844
    4. ' ' → logprob: -9.577938079833984
    5. ' n' → logprob: -10.327938079833984
    6. ' ()' → logprob: -11.077938079833984
    7. '()' → logprob: -11.952938079833984
    8. '(space' → logprob: -13.327938079833984
    9. '  ' → logprob: -13.452938079833984
    10. 'n' → logprob: -13.702938079833984

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028575662523508072
    2. ')' → logprob: -3.6535756587982178
    3. ' ):' → logprob: -6.778575897216797
    4. ':' → logprob: -7.153575897216797
    5. ' )' → logprob: -8.778575897216797
    6. ',' → logprob: -9.153575897216797
    7. '():' → logprob: -10.403575897216797
    8. '):
' → logprob: -11.028575897216797
    9. '   ' → logprob: -11.028575897216797
    10. ' ' → logprob: -11.153575897216797

Token 46: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.30928361415863037
    2. ' ' → logprob: -1.9342836141586304
    3. '       ' → logprob: -2.68428373336792
    4. '   ' → logprob: -3.18428373336792
    5. '<|end|>' → logprob: -5.55928373336792
    6. 'input' → logprob: -6.05928373336792
    7. '        ' → logprob: -6.68428373336792
    8. ' readline' → logprob: -6.93428373336792
    9. '    
' → logprob: -7.43428373336792
    10. '     ' → logprob: -7.80928373336792

Token 47: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1662439107894897
    2. 's' (adapté à ' s') → logprob: -1.6662439107894897
    3. '    ' → logprob: -2.1662440299987793
    4. ' ' → logprob: -2.5412440299987793
    5. 'data' → logprob: -2.9162440299987793
    6. ' data' → logprob: -3.1662440299987793
    7. 'a' → logprob: -3.2912440299987793
    8. ' line' → logprob: -3.5412440299987793
    9. ' a' → logprob: -3.7912440299987793
    10. ' t' → logprob: -3.7912440299987793

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01269175298511982
    2. '=' → logprob: -4.387691974639893
    3. ',' → logprob: -9.887691497802734
    4. ' ' → logprob: -10.137691497802734
    5. 'tr' → logprob: -10.637691497802734
    6. ')' → logprob: -10.887691497802734
    7. '.' → logprob: -11.637691497802734
    8. '   ' → logprob: -12.137691497802734
    9. ' ' → logprob: -12.387691497802734
    10. '_' → logprob: -12.512691497802734

Token 49: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021551698446274
    2. 'input' → logprob: -2.350215435028076
    3. '=input' → logprob: -12.225215911865234
    4. ' s' → logprob: -13.225215911865234
    5. '(input' → logprob: -14.100215911865234
    6. 's' → logprob: -14.600215911865234
    7. 'int' → logprob: -14.975215911865234
    8. ' int' → logprob: -15.600215911865234
    9. ',input' → logprob: -16.225215911865234
    10. ' ' → logprob: -16.350215911865234

Token 50: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6931987404823303
    2. '().' → logprob: -0.6931987404823303
    3. '())' → logprob: -10.568199157714844
    4. '(' → logprob: -11.193199157714844
    5. ' ()' → logprob: -13.068199157714844
    6. '()]' → logprob: -13.568199157714844
    7. '()[' → logprob: -13.568199157714844
    8. '()(' → logprob: -14.068199157714844
    9. '().__' → logprob: -14.443199157714844
    10. '().'' → logprob: -14.568199157714844

Token 51: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0380457378923893
    2. 'rstrip' → logprob: -3.288045644760132
    3. 'split' → logprob: -12.913045883178711
    4. 'rst' → logprob: -14.663045883178711
    5. 'str' → logprob: -14.663045883178711
    6. 'rs' → logprob: -14.788045883178711
    7. 'decode' → logprob: -15.538045883178711
    8. '```' → logprob: -15.913045883178711
    9. 'r' → logprob: -16.03804588317871
    10. 'startswith' → logprob: -17.53804588317871

Token 52: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007731672842055559
    2. '(' → logprob: -4.8827314376831055
    3. '('' → logprob: -9.757731437683105
    4. ')' → logprob: -10.632731437683105
    5. '())' → logprob: -11.257731437683105
    6. '().' → logprob: -12.382731437683105
    7. '```' → logprob: -13.007731437683105
    8. '()\' → logprob: -13.382731437683105
    9. '()='' → logprob: -13.632731437683105
    10. '("("' → logprob: -13.632731437683105

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9126931428909302
    2. ')' → logprob: -1.2876931428909302
    3. ':' → logprob: -1.4126931428909302
    4. '       ' → logprob: -3.5376930236816406
    5. '_' → logprob: -4.037693023681641
    6. '@' → logprob: -4.662693023681641
    7. '<|end|>' → logprob: -5.287693023681641
    8. '    ' → logprob: -6.037693023681641
    9. 'def' → logprob: -6.037693023681641
    10. '
' → logprob: -6.037693023681641

Token 54: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.01576041243970394
    2. 'if' → logprob: -4.89076042175293
    3. 'print' → logprob: -6.51576042175293
    4. 'def' → logprob: -6.64076042175293
    5. '       ' → logprob: -6.89076042175293
    6. 'result' → logprob: -6.89076042175293
    7. 'dp' → logprob: -6.89076042175293
    8. 'for' → logprob: -7.26576042175293
    9. 'count' → logprob: -8.14076042175293
    10. 'answer' → logprob: -8.51576042175293

Token 55: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -20.25
    3. 'staticmethod' → logprob: -20.5
    4. '```' → logprob: -21.5
    5. '	l' → logprob: -22.375
    6. 'lr' → logprob: -22.5
    7. '`' → logprob: -23.25
    8. 'cache' → logprob: -23.375
    9. 'dat' → logprob: -23.375
    10. 'li' → logprob: -23.5

Token 56: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31378045678138733
    2. 'ru' → logprob: -1.313780426979065
    3. '_r' → logprob: -8.188780784606934
    4. '_' → logprob: -9.688780784606934
    5. '_ru' → logprob: -10.188780784606934
    6. '```' → logprob: -10.313780784606934
    7. '(r' → logprob: -11.688780784606934
    8. 'cache' → logprob: -11.813780784606934
    9. '_cache' → logprob: -11.813780784606934
    10. 'rule' → logprob: -12.313780784606934

Token 57: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00025645215646363795
    2. '_cached' → logprob: -9.000256538391113
    3. '_' → logprob: -9.625256538391113
    4. '_c' → logprob: -10.500256538391113
    5. ' _' → logprob: -10.750256538391113
    6. 'cache' → logprob: -11.750256538391113
    7. '@' → logprob: -13.750256538391113
    8. ')_' → logprob: -13.875256538391113
    9. 'Cache' → logprob: -13.875256538391113
    10. '_ca' → logprob: -13.875256538391113

Token 58: '(None' (ID: 65126)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5282270312309265
    2. 'def' → logprob: -1.6532270908355713
    3. '()
' → logprob: -2.0282270908355713
    4. '(None' → logprob: -2.5282270908355713
    5. '(' → logprob: -5.403226852416992
    6. '(max' → logprob: -6.403226852416992
    7. '()\' → logprob: -8.153226852416992
    8. '(True' → logprob: -8.528226852416992
    9. 'None' → logprob: -8.653226852416992
    10. '(False' → logprob: -8.778226852416992

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02088051661849022
    2. ')
' → logprob: -3.8958804607391357
    3. '       ' → logprob: -8.895880699157715
    4. 'def' → logprob: -9.020880699157715
    5. ')
' → logprob: -10.645880699157715
    6. ')`' → logprob: -10.645880699157715
    7. '   ' → logprob: -11.020880699157715
    8. ' )' → logprob: -12.395880699157715
    9. ')`
' → logprob: -12.395880699157715
    10. '))' → logprob: -13.895880699157715

Token 60: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2020624279975891
    2. '       ' → logprob: -2.0770623683929443
    3. '<|end|>' → logprob: -3.4520623683929443
    4. '(' → logprob: -5.327062606811523
    5. '   ' → logprob: -5.452062606811523
    6. '()' → logprob: -5.577062606811523
    7. ' def' → logprob: -5.702062606811523
    8. '<|end|>' → logprob: -6.202062606811523
    9. '
' → logprob: -6.827062606811523
    10. '	def' → logprob: -7.077062606811523

Token 61: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014180023572407663
    2. '   ' → logprob: -9.500142097473145
    3. '       ' → logprob: -10.000142097473145
    4. ' def' → logprob: -11.375142097473145
    5. '	def' → logprob: -11.875142097473145
    6. '
' → logprob: -13.000142097473145
    7. '           ' → logprob: -15.375142097473145
    8. ':def' → logprob: -15.625142097473145
    9. ' ' → logprob: -16.625141143798828
    10. 'Def' → logprob: -16.875141143798828

Token 62: ' can' (ID: 665)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.4072827994823456
    2. 'dp' → logprob: -1.407282829284668
    3. 'is' → logprob: -2.907282829284668
    4. ' dfs' → logprob: -3.782282829284668
    5. 'f' → logprob: -5.782282829284668
    6. 'can' → logprob: -5.907282829284668
    7. ' dp' → logprob: -6.157282829284668
    8. 'solve' → logprob: -6.907282829284668
    9. 'count' → logprob: -7.032282829284668
    10. ' is' → logprob: -7.282282829284668

Token 63: '_win' (ID: 63099)
  Prédit: '_form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_form' → logprob: -0.22152245044708252
    2. '_make' → logprob: -2.221522331237793
    3. '_partition' → logprob: -3.846522331237793
    4. '_construct' → logprob: -3.846522331237793
    5. '_use' → logprob: -4.721522331237793
    6. '_take' → logprob: -4.721522331237793
    7. '_build' → logprob: -4.846522331237793
    8. 'Form' → logprob: -5.221522331237793
    9. 'Make' → logprob: -5.471522331237793
    10. '_decode' → logprob: -6.471522331237793

Token 64: '(number' (ID: 32955)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.19630229473114014
    2. '(' → logprob: -1.8213022947311401
    3. '():' → logprob: -4.57130241394043
    4. '(i' → logprob: -5.69630241394043
    5. ' (' → logprob: -7.69630241394043
    6. '(pos' → logprob: -7.69630241394043
    7. '(index' → logprob: -8.69630241394043
    8. '(x' → logprob: -8.94630241394043
    9. '(token' → logprob: -8.94630241394043
    10. '(a' → logprob: -8.94630241394043

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01695658639073372
    2. ',' → logprob: -4.391956806182861
    3. '):
' → logprob: -6.016956806182861
    4. ':' → logprob: -6.891956806182861
    5. 's' → logprob: -7.516956806182861
    6. ')' → logprob: -8.141956329345703
    7. ' ):' → logprob: -9.891956329345703
    8. '):
' → logprob: -10.641956329345703
    9. '   ' → logprob: -11.516956329345703
    10. '):

' → logprob: -11.641956329345703

Token 66: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6503981351852417
    2. '(' → logprob: -1.1503981351852417
    3. '):' → logprob: -2.6503982543945312
    4. '           ' → logprob: -3.4003982543945312
    5. '():' → logprob: -3.6503982543945312
    6. ')' → logprob: -4.275398254394531
    7. '<|end|>' → logprob: -4.900398254394531
    8. ' (' → logprob: -5.900398254394531
    9. '       ' → logprob: -6.525398254394531
    10. '#' → logprob: -6.650398254394531

Token 67: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6377993822097778
    2. ')' → logprob: -1.6377993822097778
    3. '   ' → logprob: -2.3877992630004883
    4. ':' → logprob: -2.7627992630004883
    5. ' if' → logprob: -3.0127992630004883
    6. '       ' → logprob: -4.012799263000488
    7. '    ' → logprob: -4.262799263000488
    8. ' )' → logprob: -4.262799263000488
    9. ' (' → logprob: -5.637799263000488
    10. ' :' → logprob: -5.887799263000488

Token 68: ' len' (ID: 4631)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.4806270897388458
    2. ' number' → logprob: -0.9806270599365234
    3. ' not' → logprob: -5.730627059936523
    4. 'int' → logprob: -6.355627059936523
    5. ' int' → logprob: -6.980627059936523
    6. 'not' → logprob: -7.980627059936523
    7. ' ' → logprob: -9.230627059936523
    8. ' len' → logprob: -9.355627059936523
    9. 'len' → logprob: -9.730627059936523
    10. 'num' → logprob: -11.730627059936523

Token 69: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -2.3676733690081164e-05
    2. '(' → logprob: -11.12502384185791
    3. 'number' → logprob: -12.37502384185791
    4. '(s' → logprob: -12.37502384185791
    5. ' (' → logprob: -15.87502384185791
    6. '(numbers' → logprob: -16.250022888183594
    7. ' number' → logprob: -16.875022888183594
    8. '(numero' → logprob: -17.125022888183594
    9. '(n' → logprob: -17.500022888183594
    10. '[number' → logprob: -17.750022888183594

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024355934001505375
    2. ')==' → logprob: -6.377435684204102
    3. '==' → logprob: -7.377435684204102
    4. ' )' → logprob: -10.127435684204102
    5. ')<=' → logprob: -10.377435684204102
    6. ' ==' → logprob: -10.877435684204102
    7. ')<' → logprob: -11.877435684204102
    8. '<=' → logprob: -12.002435684204102
    9. '<' → logprob: -12.877435684204102
    10. '')' → logprob: -14.752435684204102

Token 71: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9429139494895935
    2. ' <' → logprob: -1.4429140090942383
    3. '==' → logprob: -1.8179140090942383
    4. ' <=' → logprob: -2.0679140090942383
    5. '<' → logprob: -2.6929140090942383
    6. '<=' → logprob: -4.067914009094238
    7. ' ' → logprob: -8.817914009094238
    8. ')' → logprob: -9.442914009094238
    9. '()' → logprob: -9.442914009094238
    10. '()==' → logprob: -9.817914009094238

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6933175921440125
    2. '1' → logprob: -0.6933175921440125
    3. ' ' → logprob: -8.818317413330078
    4. '2' → logprob: -11.193317413330078
    5. '3' → logprob: -12.693317413330078
    6. '```' → logprob: -13.818317413330078
    7. ' ' → logprob: -13.818317413330078
    8. '4' → logprob: -14.193317413330078
    9. '6' → logprob: -14.568317413330078
    10. '   ' → logprob: -14.755817413330078

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22551119327545166
    2. '0' → logprob: -1.6005111932754517
    3. '2' → logprob: -9.72551155090332
    4. '3' → logprob: -11.16301155090332
    5. ' ' → logprob: -12.41301155090332
    6. '```' → logprob: -12.41301155090332
    7. '4' → logprob: -12.97551155090332
    8. '5' → logprob: -13.22551155090332
    9. '   ' → logprob: -13.78801155090332
    10. '6' → logprob: -13.85051155090332

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008193254470825195
    2. ':return' → logprob: -5.258193016052246
    3. ' and' → logprob: -6.633193016052246
    4. ':
' → logprob: -6.758193016052246
    5. '           ' → logprob: -8.383193016052246
    6. '               ' → logprob: -8.758193016052246
    7. ' or' → logprob: -10.383193016052246
    8. '):' → logprob: -10.883193016052246
    9. 'and' → logprob: -11.133193016052246
    10. ')' → logprob: -11.883193016052246

Token 75: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3004399538040161
    2. '               ' → logprob: -1.5504399538040161
    3. ':return' → logprob: -3.6754398345947266
    4. '           ' → logprob: -4.175439834594727
    5. '):' → logprob: -6.300439834594727
    6. ' return' → logprob: -6.425439834594727
    7. ':
' → logprob: -7.175439834594727
    8. ')' → logprob: -7.675439834594727
    9. '<|end|>' → logprob: -7.925439834594727
    10. ',' → logprob: -7.925439834594727

Token 76: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4881424903869629
    2. ' return' → logprob: -1.238142490386963
    3. '               ' → logprob: -2.488142490386963
    4. '           ' → logprob: -4.488142490386963
    5. ':return' → logprob: -7.363142490386963
    6. '   ' → logprob: -7.863142490386963
    7. '
' → logprob: -8.113142013549805
    8. ' ' → logprob: -8.863142013549805
    9. '0' → logprob: -9.238142013549805
    10. '                   ' → logprob: -9.363142013549805

Token 77: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0810530036687851
    2. 'number' → logprob: -2.5810530185699463
    3. 'int' → logprob: -6.456052780151367
    4. 'True' → logprob: -7.831052780151367
    5. '0' → logprob: -9.331052780151367
    6. ' False' → logprob: -9.706052780151367
    7. ' number' → logprob: -11.331052780151367
    8. 'not' → logprob: -11.706052780151367
    9. 'len' → logprob: -11.706052780151367
    10. 'bool' → logprob: -12.331052780151367

Token 78: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5751898288726807
    2. '<|end|>' → logprob: -1.3251898288726807
    3. ')' → logprob: -2.4501898288726807
    4. '
' → logprob: -3.4501898288726807
    5. '       ' → logprob: -4.200189590454102
    6. '\n' → logprob: -4.450189590454102
    7. '            
' → logprob: -4.700189590454102
    8. '        ' → logprob: -5.575189590454102
    9. '            ' → logprob: -5.575189590454102
    10. '    ' → logprob: -5.950189590454102

Token 79: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5851300954818726
    2. ' for' → logprob: -1.5851300954818726
    3. '           ' → logprob: -1.9601300954818726
    4. '   ' → logprob: -3.585130214691162
    5. ')' → logprob: -3.960130214691162
    6. '    ' → logprob: -4.085130214691162
    7. 'for' → logprob: -4.335130214691162
    8. ' ' → logprob: -4.710130214691162
    9. '.' → logprob: -6.210130214691162
    10. ' if' → logprob: -6.585130214691162

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20154237747192383
    2. '=' → logprob: -1.7015423774719238
    3. '.' → logprob: -9.701541900634766
    4. ' ' → logprob: -11.326541900634766
    5. ' in' → logprob: -11.576541900634766
    6. ')' → logprob: -11.701541900634766
    7. '[' → logprob: -11.826541900634766
    8. '[:]' → logprob: -12.076541900634766
    9. '_' → logprob: -12.201541900634766
    10. ',' → logprob: -12.701541900634766

Token 82: ' list' (ID: 1562)
  Prédit: '[number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[number' → logprob: -0.46572309732437134
    2. 'list' → logprob: -1.9657230377197266
    3. ' list' → logprob: -2.5907230377197266
    4. ' [' → logprob: -3.0907230377197266
    5. '[len' → logprob: -3.4657230377197266
    6. '[' → logprob: -3.5907230377197266
    7. 'number' → logprob: -3.5907230377197266
    8. '[int' → logprob: -4.340723037719727
    9. '[list' → logprob: -4.965723037719727
    10. ' number' → logprob: -5.965723037719727

Token 83: '(map' (ID: 16946)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.05787040293216705
    2. '(map' → logprob: -2.932870388031006
    3. '(' → logprob: -5.932870388031006
    4. '(int' → logprob: -8.557870864868164
    5. '(range' → logprob: -9.432870864868164
    6. '(d' → logprob: -11.057870864868164
    7. '(numbers' → logprob: -11.432870864868164
    8. 'number' → logprob: -11.432870864868164
    9. '(set' → logprob: -12.307870864868164
    10. '(s' → logprob: -12.807870864868164

Token 84: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011832444579340518
    2. '(' → logprob: -9.750118255615234
    3. 'int' → logprob: -10.250118255615234
    4. '(str' → logprob: -11.125118255615234
    5. '(lambda' → logprob: -11.875118255615234
    6. ',int' → logprob: -13.875118255615234
    7. ')' → logprob: -14.500118255615234
    8. '[int' → logprob: -15.000118255615234
    9. ' int' → logprob: -15.125118255615234
    10. ' (' → logprob: -15.250118255615234

Token 85: ',' (ID: 11)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0017314640572294593
    2. '(' → logprob: -6.5017313957214355
    3. ',' → logprob: -9.001731872558594
    4. '(list' → logprob: -9.876731872558594
    5. '(d' → logprob: -11.126731872558594
    6. ',(' → logprob: -11.126731872558594
    7. '(numbers' → logprob: -11.876731872558594
    8. ' (' → logprob: -12.501731872558594
    9. ')' → logprob: -13.001731872558594
    10. '(num' → logprob: -13.251731872558594

Token 86: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.07811524718999863
    2. 'list' → logprob: -2.953115224838257
    3. 'str' → logprob: -3.828115224838257
    4. ' number' → logprob: -7.203115463256836
    5. ' list' → logprob: -8.453115463256836
    6. ' str' → logprob: -8.578115463256836
    7. '[number' → logprob: -10.703115463256836
    8. '(number' → logprob: -11.078115463256836
    9. '(list' → logprob: -12.328115463256836
    10. '(str' → logprob: -12.703115463256836

Token 87: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004597457125782967
    2. '))
' → logprob: -5.7545976638793945
    3. '[' → logprob: -7.3795976638793945
    4. '[:-' → logprob: -7.7545976638793945
    5. ' ))' → logprob: -9.004597663879395
    6. '()))' → logprob: -9.879597663879395
    7. '[]' → logprob: -9.879597663879395
    8. '[:' → logprob: -10.379597663879395
    9. '[::-' → logprob: -10.504597663879395
    10. '   ' → logprob: -11.129597663879395

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011433755047619343
    2. ' ' → logprob: -5.5114336013793945
    3. '<|end|>' → logprob: -5.5114336013793945
    4. '            ' → logprob: -6.6364336013793945
    5. '    ' → logprob: -7.2614336013793945
    6. '        ' → logprob: -8.136433601379395
    7. '       ' → logprob: -8.136433601379395
    8. '   ' → logprob: -8.886433601379395
    9. '<|end|>' → logprob: -9.136433601379395
    10. '          ' → logprob: -9.261433601379395

Token 89: ' length' (ID: 5517)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05932502821087837
    2. 'for' → logprob: -3.4343249797821045
    3. '           ' → logprob: -3.6843249797821045
    4. '    ' → logprob: -9.684325218200684
    5. '       ' → logprob: -9.809325218200684
    6. '   ' → logprob: -10.309325218200684
    7. ' return' → logprob: -10.684325218200684
    8. ' ' → logprob: -10.934325218200684
    9. ' if' → logprob: -11.434325218200684
    10. '            ' → logprob: -11.934325218200684

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038186993449926376
    2. '=' → logprob: -3.288187026977539
    3. '=len' → logprob: -9.038187026977539
    4. '<|end|>' → logprob: -11.538187026977539
    5. ' ' → logprob: -12.288187026977539
    6. ' >' → logprob: -12.913187026977539
    7. '-' → logprob: -13.538187026977539
    8. '>' → logprob: -13.538187026977539
    9. ' ==' → logprob: -14.038187026977539
    10. '=int' → logprob: -14.413187026977539

Token 91: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06206078827381134
    2. 'len' → logprob: -2.812060832977295
    3. '(len' → logprob: -9.312060356140137
    4. '[len' → logprob: -13.937060356140137
    5. '=len' → logprob: -13.937060356140137
    6. '	len' → logprob: -14.687060356140137
    7. ' ' → logprob: -15.312060356140137
    8. ',len' → logprob: -15.562060356140137
    9. '<len' → logprob: -16.437061309814453
    10. '           ' → logprob: -17.437061309814453

Token 92: '(d' (ID: 2572)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.026496758684515953
    2. '(d' → logprob: -3.651496648788452
    3. 'number' → logprob: -9.026496887207031
    4. '(length' → logprob: -10.151496887207031
    5. '(' → logprob: -11.026496887207031
    6. '(numbers' → logprob: -11.651496887207031
    7. 'digits' → logprob: -11.651496887207031
    8. '(s' → logprob: -13.776496887207031
    9. '	number' → logprob: -15.026496887207031
    10. '(n' → logprob: -15.026496887207031

Token 93: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0001968649885384366
    2. 'its' → logprob: -9.50019645690918
    3. 'number' → logprob: -9.87519645690918
    4. 'igit' → logprob: -10.75019645690918
    5. 'digits' → logprob: -10.75019645690918
    6. 'umber' → logprob: -11.00019645690918
    7. '(number' → logprob: -12.75019645690918
    8. 'ig' → logprob: -13.00019645690918
    9. 'igts' → logprob: -13.00019645690918
    10. ')' → logprob: -14.37519645690918

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005430477671325207
    2. ')
' → logprob: -5.255430698394775
    3. '           ' → logprob: -9.255430221557617
    4. ' )' → logprob: -10.130430221557617
    5. '-' → logprob: -10.505430221557617
    6. '))' → logprob: -11.130430221557617
    7. ')

' → logprob: -12.505430221557617
    8. ' -' → logprob: -13.130430221557617
    9. '   ' → logprob: -13.255430221557617
    10. '       ' → logprob: -13.505430221557617

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8054843544960022
    2. '<|end|>' → logprob: -1.0554842948913574
    3. ' ' → logprob: -1.9304842948913574
    4. '       ' → logprob: -3.9304842948913574
    5. '   ' → logprob: -4.055484294891357
    6. ' for' → logprob: -5.055484294891357
    7. ' ' → logprob: -5.305484294891357
    8. '    ' → logprob: -5.305484294891357
    9. '<|end|>' → logprob: -6.430484294891357
    10. ' 
' → logprob: -7.180484294891357

Token 96: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46871379017829895
    2. '           ' → logprob: -1.0937137603759766
    3. ' ' → logprob: -3.5937137603759766
    4. 'for' → logprob: -4.968713760375977
    5. '<|end|>' → logprob: -6.218713760375977
    6. '       ' → logprob: -7.218713760375977
    7. ' ' → logprob: -7.343713760375977
    8. ' 
' → logprob: -7.843713760375977
    9. '    ' → logprob: -7.968713760375977
    10. '   ' → logprob: -9.093713760375977

Token 97: ' essayer' (ID: 92713)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31355777382850647
    2. ' for' → logprob: -1.313557744026184
    3. '           ' → logprob: -8.188557624816895
    4. '   ' → logprob: -11.313557624816895
    5. '       ' → logprob: -12.813557624816895
    6. 'return' → logprob: -13.938557624816895
    7. '```' → logprob: -14.313557624816895
    8. ' ' → logprob: -14.688557624816895
    9. 'For' → logprob: -15.063557624816895
    10. 'if' → logprob: -15.813557624816895

Token 98: ' toutes' (ID: 17502)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33683696389198303
    2. ' de' → logprob: -1.8368369340896606
    3. 's' → logprob: -2.58683705329895
    4. ' ' → logprob: -4.961836814880371
    5. '   ' → logprob: -4.961836814880371
    6. ' for' → logprob: -5.086836814880371
    7. ' d' → logprob: -5.211836814880371
    8. 'de' → logprob: -5.336836814880371
    9. 'for' → logprob: -5.586836814880371
    10. 'd' → logprob: -5.711836814880371

Token 99: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0818547010421753
    2. 's' → logprob: -1.5818547010421753
    3. '(' → logprob: -1.9568547010421753
    4. '(i' → logprob: -2.206854820251465
    5. 'les' → logprob: -2.456854820251465
    6. 'i' → logprob: -2.831854820251465
    7. ' i' → logprob: -3.831854820251465
    8. '()' → logprob: -5.081854820251465
    9. ' la' → logprob: -5.331854820251465
    10. ' ' → logprob: -5.456854820251465

Token 100: ' p' (ID: 275)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6076182723045349
    2. 'poss' → logprob: -1.1076183319091797
    3. 'spl' → logprob: -3.2326183319091797
    4. 'cou' → logprob: -3.6076183319091797
    5. 'i' → logprob: -3.8576183319091797
    6. 'split' → logprob: -5.10761833190918
    7. 'c' → logprob: -5.23261833190918
    8. 's' → logprob: -5.73261833190918
    9. 'options' → logprob: -6.23261833190918
    10. ' positions' → logprob: -6.48261833190918

Token 101: 'aires' (ID: 8507)
  Prédit: 'oss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oss' → logprob: -0.20822922885417938
    2. 'os' → logprob: -1.7082291841506958
    3. 'art' → logprob: -5.583229064941406
    4. 'r' → logprob: -7.833229064941406
    5. 'laces' → logprob: -8.083229064941406
    6. 'ar' → logprob: -8.583229064941406
    7. 'ieces' → logprob: -8.708229064941406
    8. 'aires' → logprob: -8.833229064941406
    9. 'i' → logprob: -8.833229064941406
    10. 'oses' → logprob: -8.958229064941406

Token 102: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047860123217105865
    2. '<|end|>' → logprob: -3.2978601455688477
    3. '<|end|>' → logprob: -5.922860145568848
    4. ' for' → logprob: -6.047860145568848
    5. ' ' → logprob: -6.547860145568848
    6. '       ' → logprob: -7.297860145568848
    7. ',' → logprob: -7.422860145568848
    8. '   ' → logprob: -8.172860145568848
    9. ' ' → logprob: -8.172860145568848
    10. '               ' → logprob: -8.297860145568848

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6813872456550598
    2. '+' → logprob: -0.8063872456550598
    3. ',j' → logprob: -3.556387186050415
    4. ' +' → logprob: -4.931387424468994
    5. ' ,' → logprob: -5.681387424468994
    6. ' in' → logprob: -6.056387424468994
    7. ' ' → logprob: -7.181387424468994
    8. ',n' → logprob: -7.181387424468994
    9. 'in' → logprob: -7.181387424468994
    10. '+j' → logprob: -7.306387424468994

Token 104: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3485269546508789
    2. ' j' → logprob: -1.223526954650879
    3. '    ' → logprob: -10.973526954650879
    4. 'i' → logprob: -10.973526954650879
    5. '+' → logprob: -11.598526954650879
    6. ' ' → logprob: -11.723526954650879
    7. ' i' → logprob: -11.973526954650879
    8. '<|end|>' → logprob: -12.223526954650879
    9. '_j' → logprob: -12.598526954650879
    10. ' length' → logprob: -12.848526954650879

Token 105: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02628403902053833
    2. ',' → logprob: -3.7762839794158936
    3. ' +' → logprob: -6.276284217834473
    4. ',j' → logprob: -7.401284217834473
    5. ' ,' → logprob: -8.776284217834473
    6. '+j' → logprob: -8.901284217834473
    7. '+,' → logprob: -9.901284217834473
    8. ' ' → logprob: -10.401284217834473
    9. '<|end|>' → logprob: -10.401284217834473
    10. ' in' → logprob: -10.901284217834473

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.750001907348633
    3. '<|end|>' → logprob: -15.250001907348633
    4. '
' → logprob: -15.375001907348633
    5. '2' → logprob: -15.500001907348633
    6. '```' → logprob: -15.625001907348633
    7. '`' → logprob: -16.125001907348633
    8. '<|end|>' → logprob: -17.125001907348633
    9. '+' → logprob: -17.750001907348633
    10. 's' → logprob: -18.062501907348633

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5052388310432434
    2. '<|end|>' → logprob: -1.0052387714385986
    3. ' ' → logprob: -3.7552387714385986
    4. '<|end|>' → logprob: -5.380239009857178
    5. '            ' → logprob: -7.755239009857178
    6. '       ' → logprob: -7.880239009857178
    7. '   ' → logprob: -8.00523853302002
    8. '          ' → logprob: -8.50523853302002
    9. '    ' → logprob: -8.63023853302002
    10. '               ' → logprob: -8.63023853302002

Token 109: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03080030344426632
    2. ' for' → logprob: -4.2808003425598145
    3. '<|end|>' → logprob: -4.5308003425598145
    4. ' ' → logprob: -5.5308003425598145
    5. '       ' → logprob: -7.2808003425598145
    6. '<|end|>' → logprob: -7.7808003425598145
    7. '   ' → logprob: -8.280799865722656
    8. 'for' (adapté à ' for') → logprob: -8.780799865722656
    9. '    ' → logprob: -9.280799865722656
    10. '  ' → logprob: -10.530799865722656

Token 110: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019441033946350217
    2. 'i' → logprob: -6.251944065093994
    3. ' range' → logprob: -12.251944541931152
    4. 'range' → logprob: -12.251944541931152
    5. ' ' → logprob: -12.376944541931152
    6. ' in' → logprob: -14.626944541931152
    7. '	i' → logprob: -14.751944541931152
    8. ' ' → logprob: -15.251944541931152
    9. '(i' → logprob: -15.501944541931152
    10. '_i' → logprob: -15.626944541931152

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01131906732916832
    2. 'in' → logprob: -4.511319160461426
    3. '<|end|>' → logprob: -9.011319160461426
    4. ' ' → logprob: -9.136319160461426
    5. '	in' → logprob: -11.511319160461426
    6. '+' → logprob: -11.761319160461426
    7. ' =' → logprob: -11.886319160461426
    8. '=' → logprob: -12.636319160461426
    9. '<|end|>' → logprob: -13.386319160461426
    10. '0' → logprob: -13.511319160461426

Token 112: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020915418863297
    2. 'range' → logprob: -2.3502092361450195
    3. '	range' → logprob: -13.85020923614502
    4. ' xrange' → logprob: -14.47520923614502
    5. '(range' → logprob: -14.47520923614502
    6. ' ' → logprob: -14.97520923614502
    7. 'ange' → logprob: -16.600208282470703
    8. '.range' → logprob: -17.225208282470703
    9. '_range' → logprob: -17.350208282470703
    10. ')' → logprob: -17.475208282470703

Token 113: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0013833323027938604
    2. 'length' → logprob: -7.251383304595947
    3. '(len' → logprob: -7.501383304595947
    4. ' length' → logprob: -9.126383781433105
    5. '(' → logprob: -12.251383781433105
    6. '[length' → logprob: -12.876383781433105
    7. '	length' → logprob: -13.126383781433105
    8. ',length' → logprob: -13.251383781433105
    9. 'len' → logprob: -15.001383781433105
    10. 'ength' → logprob: -15.126383781433105

Token 114: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11284764856100082
    2. '-' → logprob: -2.2378475666046143
    3. ')' → logprob: -10.862847328186035
    4. ' ' → logprob: -12.612847328186035
    5. ' )' → logprob: -13.737847328186035
    6. '   ' → logprob: -14.612847328186035
    7. '1' → logprob: -14.987847328186035
    8. ')-' → logprob: -15.362847328186035
    9. '):
' → logprob: -16.11284828186035
    10. '           ' → logprob: -16.11284828186035

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -14.500028610229492
    4. '<|end|>' → logprob: -17.375028610229492
    5. '```' → logprob: -17.375028610229492
    6. '   ' → logprob: -17.687528610229492
    7. ')' → logprob: -18.062528610229492
    8. '0' → logprob: -18.125028610229492
    9. '  ' → logprob: -18.312528610229492
    10. '१' → logprob: -18.312528610229492

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0434601791203022
    2. '):
' → logprob: -3.1684601306915283
    3. '           ' → logprob: -8.29345989227295
    4. ':' → logprob: -9.79345989227295
    5. ' ):' → logprob: -9.79345989227295
    6. ')' → logprob: -10.41845989227295
    7. '               ' → logprob: -10.54345989227295
    8. '):
' → logprob: -10.66845989227295
    9. '       ' → logprob: -11.66845989227295
    10. '):

' → logprob: -12.54345989227295

Token 117: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.57962566614151
    2. '<|end|>' → logprob: -0.95462566614151
    3. ' ' → logprob: -3.0796256065368652
    4. '            ' → logprob: -5.704625606536865
    5. '                ' → logprob: -6.329625606536865
    6. '           ' → logprob: -6.454625606536865
    7. ')' → logprob: -7.704625606536865
    8. '<|end|>' → logprob: -7.954625606536865
    9. '        ' → logprob: -8.329626083374023
    10. '       ' → logprob: -8.329626083374023

Token 118: ' new' (ID: 620)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3771321475505829
    2. '                ' → logprob: -1.5021321773529053
    3. '<|end|>' → logprob: -3.1271321773529053
    4. ' if' → logprob: -4.127131938934326
    5. '            ' → logprob: -4.252131938934326
    6. '               ' → logprob: -4.502131938934326
    7. '           ' → logprob: -6.752131938934326
    8. '    ' → logprob: -7.252131938934326
    9. '                   ' → logprob: -7.377131938934326
    10. ' 
' → logprob: -7.502131938934326

Token 119: '_digits' (ID: 108638)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.004474388901144266
    2. 'number' → logprob: -6.12947416305542
    3. '_' → logprob: -6.50447416305542
    4. '_num' → logprob: -7.75447416305542
    5. ' =' → logprob: -8.379474639892578
    6. '_digits' → logprob: -10.379474639892578
    7. 'Number' → logprob: -10.504474639892578
    8. '=' → logprob: -11.129474639892578
    9. ' number' → logprob: -11.629474639892578
    10. '_numbers' → logprob: -11.629474639892578

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008632414974272251
    2. '=' → logprob: -4.758632183074951
    3. ' ' → logprob: -11.63363265991211
    4. '<|end|>' → logprob: -13.13363265991211
    5. ' =[' → logprob: -13.13363265991211
    6. ' =
' → logprob: -13.63363265991211
    7. ')' → logprob: -14.25863265991211
    8. '    ' → logprob: -14.75863265991211
    9. '[:]' → logprob: -14.88363265991211
    10. '<|end|>' → logprob: -15.00863265991211

Token 121: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.3493519425392151
    2. 'digits' → logprob: -1.2243518829345703
    3. ' [' → logprob: -7.59935188293457
    4. '[' → logprob: -8.59935188293457
    5. '   ' → logprob: -9.72435188293457
    6. '           ' → logprob: -9.84935188293457
    7. ' ' → logprob: -11.09935188293457
    8. '       ' → logprob: -11.53685188293457
    9. '               ' → logprob: -11.66185188293457
    10. '    ' → logprob: -11.78685188293457

Token 122: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00013321757433004677
    2. '[:]' → logprob: -9.250133514404297
    3. '.copy' → logprob: -10.250133514404297
    4. '[' → logprob: -14.375133514404297
    5. '[:-' → logprob: -14.500133514404297
    6. '[i' → logprob: -14.625133514404297
    7. '][:' → logprob: -16.375133514404297
    8. '[
' → logprob: -17.250133514404297
    9. ' [:' → logprob: -18.625133514404297
    10. ' =' → logprob: -19.125133514404297

Token 123: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ']' → logprob: -13.750001907348633
    3. ' i' → logprob: -14.000001907348633
    4. ':i' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '
' → logprob: -17.375001907348633
    7. ':' → logprob: -17.750001907348633
    8. '	i' → logprob: -18.000001907348633
    9. ' ' → logprob: -18.125001907348633
    10. '(i' → logprob: -18.125001907348633

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007556929253041744
    2. ']+' → logprob: -5.007556915283203
    3. '+' → logprob: -7.132556915283203
    4. '+i' → logprob: -10.257556915283203
    5. 'i' → logprob: -13.257556915283203
    6. '}' → logprob: -13.257556915283203
    7. ')' → logprob: -14.007556915283203
    8. '```' → logprob: -14.257556915283203
    9. ':i' → logprob: -14.382556915283203
    10. ' +' → logprob: -15.007556915283203

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006724368315190077
    2. ' +' → logprob: -5.0067243576049805
    3. '+i' → logprob: -11.75672435760498
    4. '```' → logprob: -15.25672435760498
    5. '+k' → logprob: -15.63172435760498
    6. '＋' → logprob: -15.88172435760498
    7. '+B' → logprob: -16.131725311279297
    8. '+self' → logprob: -16.131725311279297
    9. ']+' → logprob: -16.381725311279297
    10. '+p' → logprob: -17.256725311279297

Token 126: ' [' (ID: 723)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.024491658434271812
    2. ' digits' → logprob: -3.899491548538208
    3. '[' → logprob: -5.649491786956787
    4. ' [' → logprob: -8.399491310119629
    5. '[d' → logprob: -8.649491310119629
    6. ' ' → logprob: -11.899491310119629
    7. '   ' → logprob: -12.399491310119629
    8. '           ' → logprob: -12.774491310119629
    9. 'dig' → logprob: -13.774491310119629
    10. '_digits' → logprob: -14.149491310119629

Token 127: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.06409618258476257
    2. '(d' → logprob: -2.814096212387085
    3. ' digits' → logprob: -6.939095973968506
    4. ' (' → logprob: -8.439096450805664
    5. 'd' → logprob: -8.814096450805664
    6. '   ' → logprob: -9.064096450805664
    7. 'int' → logprob: -9.189096450805664
    8. 'abs' → logprob: -9.189096450805664
    9. 'dig' → logprob: -9.439096450805664
    10. '((' → logprob: -9.689096450805664

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3676733690081164e-05
    2. 'i' → logprob: -10.75002384185791
    3. '(i' → logprob: -13.75002384185791
    4. '[j' → logprob: -14.12502384185791
    5. '{i' → logprob: -15.62502384185791
    6. '[' → logprob: -16.750022888183594
    7. '[
' → logprob: -16.750022888183594
    8. ']' → logprob: -17.375022888183594
    9. '+i' → logprob: -17.500022888183594
    10. '   ' → logprob: -18.125022888183594

Token 129: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.7865420579910278
    2. '+' → logprob: -1.0365420579910278
    3. ']' → logprob: -1.6615420579910278
    4. '+]' → logprob: -11.786541938781738
    5. ' +' → logprob: -12.036541938781738
    6. '1' → logprob: -12.036541938781738
    7. ']+=' → logprob: -12.161541938781738
    8. ']-' → logprob: -12.411541938781738
    9. 'plus' → logprob: -12.411541938781738
    10. 'i' → logprob: -12.661541938781738

Token 130: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.00154533376917243
    2. ' digits' → logprob: -6.501545429229736
    3. '   ' → logprob: -11.001544952392578
    4. '           ' → logprob: -11.126544952392578
    5. '               ' → logprob: -12.626544952392578
    6. '1' → logprob: -13.001544952392578
    7. ' ' → logprob: -13.501544952392578
    8. '       ' → logprob: -13.876544952392578
    9. '                   ' → logprob: -14.001544952392578
    10. '    ' → logprob: -14.876544952392578

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00642936397343874
    2. '+' → logprob: -5.131429195404053
    3. '(i' → logprob: -8.631429672241211
    4. '{i' → logprob: -9.256429672241211
    5. '1' → logprob: -9.381429672241211
    6. 'i' → logprob: -10.256429672241211
    7. '[' → logprob: -10.631429672241211
    8. ']' → logprob: -11.131429672241211
    9. '   ' → logprob: -11.631429672241211
    10. '+i' → logprob: -11.756429672241211

Token 132: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.384836888173595e-05
    2. '1' → logprob: -9.7500638961792
    3. '[' → logprob: -13.0000638961792
    4. ' +' → logprob: -14.3750638961792
    5. 'i' → logprob: -14.6250638961792
    6. '   ' → logprob: -14.7500638961792
    7. '[i' → logprob: -14.7500638961792
    8. '+i' → logprob: -14.8750638961792
    9. ']+' → logprob: -15.1250638961792
    10. '{' → logprob: -15.7500638961792

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.492120155598968e-05
    2. ' ' → logprob: -9.875064849853516
    3. '   ' → logprob: -12.250064849853516
    4. ']' → logprob: -12.375064849853516
    5. '+' → logprob: -13.250064849853516
    6. '0' → logprob: -14.500064849853516
    7. '])' → logprob: -15.312564849853516
    8. '2' → logprob: -15.437564849853516
    9. '-' → logprob: -15.625064849853516
    10. '     ' → logprob: -15.875064849853516

Token 134: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5451681974809617e-05
    2. ']+' → logprob: -11.625015258789062
    3. '])' → logprob: -13.500015258789062
    4. ']]' → logprob: -14.000015258789062
    5. ' ]' → logprob: -14.125015258789062
    6. '()]' → logprob: -14.250015258789062
    7. ')]' → logprob: -14.375015258789062
    8. 'i' → logprob: -14.875015258789062
    9. '1' → logprob: -15.000015258789062
    10. '```' → logprob: -15.250015258789062

Token 135: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08897218108177185
    2. ' +' → logprob: -2.4639720916748047
    3. '               ' → logprob: -11.213972091674805
    4. '                ' → logprob: -12.213972091674805
    5. '              ' → logprob: -12.713972091674805
    6. '+i' → logprob: -13.213972091674805
    7. '            ' → logprob: -13.338972091674805
    8. '           ' → logprob: -13.588972091674805
    9. '             ' → logprob: -13.713972091674805
    10. '```' → logprob: -14.463972091674805

Token 136: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.07890840619802475
    2. ' digits' → logprob: -2.5789084434509277
    3. '           ' → logprob: -11.45390796661377
    4. '       ' → logprob: -12.70390796661377
    5. 'igits' → logprob: -13.32890796661377
    6. ' ' → logprob: -14.07890796661377
    7. '   ' → logprob: -14.20390796661377
    8. '         ' → logprob: -14.70390796661377
    9. '_digits' → logprob: -14.70390796661377
    10. 'd' → logprob: -15.20390796661377

Token 137: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. '[:' → logprob: -15.375000953674316
    4. '[I' → logprob: -16.25
    5. 'i' → logprob: -17.125
    6. ' [' → logprob: -17.5
    7. '[
' → logprob: -17.5
    8. '[(' → logprob: -17.875
    9. '```' → logprob: -18.5
    10. '[s' → logprob: -19.0

Token 138: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.292907877039397e-06
    2. ' +' → logprob: -13.25000286102295
    3. '2' → logprob: -13.50000286102295
    4. '[' → logprob: -17.875003814697266
    5. '+
' → logprob: -18.625003814697266
    6. '{' → logprob: -19.125003814697266
    7. '＋' → logprob: -19.375003814697266
    8. '```' → logprob: -19.375003814697266
    9. '()+' → logprob: -20.625003814697266
    10. '+i' → logprob: -21.062503814697266

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. ' ' → logprob: -18.75
    4. '۲' → logprob: -19.0
    5. '1' → logprob: -19.25
    6. '3' → logprob: -19.5
    7. '２' → logprob: -20.25
    8. '२' → logprob: -20.5
    9. '
' → logprob: -20.625
    10. '   ' → logprob: -20.8125

Token 140: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0015930612571537495
    2. ':' → logprob: -6.501593112945557
    3. ' :]' → logprob: -10.501592636108398
    4. ':],' → logprob: -10.501592636108398
    5. ']' → logprob: -10.626592636108398
    6. '():' → logprob: -12.501592636108398
    7. ':]
' → logprob: -13.001592636108398
    8. ']:' → logprob: -13.251592636108398
    9. '()]' → logprob: -13.501592636108398
    10. ':)' → logprob: -14.126592636108398

Token 141: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09738205373287201
    2. '           ' → logprob: -2.972382068634033
    3. '<|end|>' → logprob: -4.722382068634033
    4. ' 
' → logprob: -4.972382068634033
    5. '                
' → logprob: -5.097382068634033
    6. '
' → logprob: -5.222382068634033
    7. ')' → logprob: -5.472382068634033
    8. '            
' → logprob: -5.472382068634033
    9. '\n' → logprob: -6.722382068634033
    10. '```' → logprob: -7.097382068634033

Token 142: ' new' (ID: 620)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03988628089427948
    2. ' if' → logprob: -3.289886236190796
    3. ' ' → logprob: -7.539886474609375
    4. 'if' → logprob: -7.914886474609375
    5. '                
' → logprob: -8.414886474609375
    6. '<|end|>' → logprob: -8.664886474609375
    7. ' new' → logprob: -8.789886474609375
    8. ' ' → logprob: -9.039886474609375
    9. ' 
' → logprob: -9.664886474609375
    10. '           ' → logprob: -9.664886474609375

Token 143: '_number' (ID: 11733)
  Prédit: '_digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.11249404400587082
    2. '_tokens' → logprob: -2.4874939918518066
    3. 'digits' → logprob: -4.487493991851807
    4. 'def' → logprob: -5.737493991851807
    5. '_numbers' → logprob: -5.987493991851807
    6. '_number' → logprob: -6.237493991851807
    7. '_token' → logprob: -7.112493991851807
    8. '_' → logprob: -7.487493991851807
    9. '=' → logprob: -7.612493991851807
    10. ')' → logprob: -7.737493991851807

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10128244757652283
    2. ' =' → logprob: -2.3512823581695557
    3. ')' → logprob: -6.976282596588135
    4. ')=' → logprob: -10.101282119750977
    5. '=str' → logprob: -10.351282119750977
    6. 'def' → logprob: -10.476282119750977
    7. 's' → logprob: -11.601282119750977
    8. ',' → logprob: -12.226282119750977
    9. '<|end|>' → logprob: -12.476282119750977
    10. '.append' → logprob: -12.976282119750977

Token 145: ' tuple' (ID: 31311)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.29329168796539307
    2. '''.' → logprob: -1.793291687965393
    3. 'str' → logprob: -3.0432915687561035
    4. ' "".' → logprob: -3.5432915687561035
    5. ' ''.' → logprob: -4.6682915687561035
    6. '""' → logprob: -6.6682915687561035
    7. 'tuple' → logprob: -8.418292045593262
    8. ' str' → logprob: -8.668292045593262
    9. ''' → logprob: -9.168292045593262
    10. '''' → logprob: -11.043292045593262

Token 146: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.018165627494454384
    2. 'new' → logprob: -4.018165588378906
    3. '(sorted' → logprob: -11.143165588378906
    4. '[new' → logprob: -14.768165588378906
    5. 'sorted' → logprob: -15.143165588378906
    6. ' new' → logprob: -15.643165588378906
    7. '(' → logprob: -16.018165588378906
    8. ')new' → logprob: -16.018165588378906
    9. '$new' → logprob: -16.643165588378906
    10. 'digits' → logprob: -17.393165588378906

Token 147: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.03657100722193718
    2. 'digits' → logprob: -3.9115710258483887
    3. 'umber' → logprob: -4.911571025848389
    4. '_number' → logprob: -5.286571025848389
    5. 'igits' → logprob: -6.661571025848389
    6. 'number' → logprob: -7.536571025848389
    7. '(new' → logprob: -8.03657054901123
    8. '_d' → logprob: -8.41157054901123
    9. 'new' → logprob: -8.66157054901123
    10. '(number' → logprob: -9.03657054901123

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.376848902320489e-05
    2. '<|end|>' → logprob: -10.125093460083008
    3. ')
' → logprob: -10.375093460083008
    4. ' )' → logprob: -11.750093460083008
    5. ')return' → logprob: -12.000093460083008
    6. ',' → logprob: -13.125093460083008
    7. ')#' → logprob: -13.375093460083008
    8. '           ' → logprob: -14.250093460083008
    9. '<|end|>' → logprob: -14.250093460083008
    10. '       ' → logprob: -14.375093460083008

Token 149: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23784053325653076
    2. ' if' → logprob: -1.9878405332565308
    3. ')' → logprob: -2.8628406524658203
    4. 'if' → logprob: -4.48784065246582
    5. '           ' → logprob: -6.11284065246582
    6. ' 
' → logprob: -6.86284065246582
    7. '                ' → logprob: -7.11284065246582
    8. ' ' → logprob: -7.23784065246582
    9. ' )' → logprob: -7.73784065246582
    10. '                
' → logprob: -7.98784065246582

Token 151: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006806195713579655
    2. ' if' → logprob: -5.006806373596191
    3. '           ' → logprob: -10.006806373596191
    4. '               ' → logprob: -10.006806373596191
    5. 'return' → logprob: -15.131806373596191
    6. 'If' → logprob: -16.131805419921875
    7. '
' → logprob: -16.256805419921875
    8. '                   ' → logprob: -16.881805419921875
    9. ' ' → logprob: -17.881805419921875
    10. '       ' → logprob: -18.131805419921875

Token 152: ' l' (ID: 305)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6549088358879089
    2. ' can' → logprob: -0.9049088358879089
    3. 'can' → logprob: -2.7799088954925537
    4. 'not' → logprob: -4.279908657073975
    5. '               ' → logprob: -11.029909133911133
    6. '           ' → logprob: -11.654909133911133
    7. '(can' → logprob: -12.654909133911133
    8. '	can' → logprob: -12.779909133911133
    9. '   ' → logprob: -12.904909133911133
    10. ' ' → logprob: -13.654909133911133

Token 153: ''ad' (ID: 36162)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17501108348369598
    2. ' not' → logprob: -2.050011157989502
    3. 'new' → logprob: -3.800011157989502
    4. 'can' → logprob: -6.550011157989502
    5. '(not' → logprob: -6.675011157989502
    6. 'a' → logprob: -7.050011157989502
    7. 'is' → logprob: -7.175011157989502
    8. 'en' → logprob: -7.175011157989502
    9. ' new' → logprob: -7.425011157989502
    10. 'cannot' → logprob: -7.425011157989502

Token 154: 'vers' (ID: 3674)
  Prédit: 'met'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'met' → logprob: -1.429931402206421
    2. 'v' → logprob: -1.804931402206421
    3. 'd' → logprob: -2.179931402206421
    4. 'ef' → logprob: -2.679931402206421
    5. 'vers' → logprob: -2.804931402206421
    6. 'mit' → logprob: -3.054931402206421
    7. 'ict' → logprob: -3.554931402206421
    8. 'j' → logprob: -3.929931402206421
    9. 'eturn' → logprob: -4.179931640625
    10. 'return' → logprob: -4.429931640625

Token 155: 'aire' (ID: 8189)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.3873878717422485
    2. 'vers' → logprob: -1.7623878717422485
    3. 'verse' → logprob: -1.8873878717422485
    4. 'vert' → logprob: -2.137387752532959
    5. 'ver' → logprob: -2.762387752532959
    6. 'ient' → logprob: -3.387387752532959
    7. 'er' → logprob: -3.512387752532959
    8. 'a' → logprob: -3.762387752532959
    9. 'iste' → logprob: -3.762387752532959
    10. 'ont' → logprob: -4.262387752532959

Token 156: ' ne' (ID: 453)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.2112163007259369
    2. ' cannot' → logprob: -3.0862162113189697
    3. ' ne' → logprob: -3.2112162113189697
    4. ')' → logprob: -3.5862162113189697
    5. 'ne' → logprob: -3.7112162113189697
    6. 'n' → logprob: -4.211216449737549
    7. 'can't' → logprob: -4.461216449737549
    8. 'pe' → logprob: -5.461216449737549
    9. 'per' → logprob: -5.586216449737549
    10. ',' → logprob: -5.836216449737549

Token 157: ' peut' (ID: 9216)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.14093315601348877
    2. 'can' → logprob: -2.265933036804199
    3. 'pe' → logprob: -4.890933036804199
    4. 'g' → logprob: -5.265933036804199
    5. ' pas' → logprob: -5.515933036804199
    6. ')' → logprob: -6.140933036804199
    7. 'cannot' → logprob: -6.390933036804199
    8. '_pas' → logprob: -7.015933036804199
    9. '               ' → logprob: -7.515933036804199
    10. 'win' → logprob: -7.640933036804199

Token 158: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2298845499753952
    2. ' pas' → logprob: -1.6048845052719116
    3. 'win' → logprob: -6.354884624481201
    4. '               ' → logprob: -7.104884624481201
    5. '_pas' → logprob: -7.104884624481201
    6. ' win' → logprob: -7.229884624481201
    7. 'not' → logprob: -9.229884147644043
    8. '_win' → logprob: -9.604884147644043
    9. '                   ' → logprob: -10.104884147644043
    10. ' gagner' → logprob: -10.479884147644043

Token 159: ' gagner' (ID: 64227)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.34408125281333923
    2. ' win' → logprob: -1.4690812826156616
    3. 'can' → logprob: -3.719081163406372
    4. '               ' → logprob: -3.844081163406372
    5. '                   ' → logprob: -5.344081401824951
    6. ' gagner' → logprob: -5.594081401824951
    7. ' can' → logprob: -5.719081401824951
    8. '_win' → logprob: -7.219081401824951
    9. '   ' → logprob: -7.719081401824951
    10. '           ' → logprob: -8.094080924987793

Token 160: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4957185983657837
    2. '               ' → logprob: -1.2457185983657837
    3. ':' → logprob: -3.120718479156494
    4. '                   ' → logprob: -3.495718479156494
    5. '           ' → logprob: -5.120718479156494
    6. ' and' → logprob: -5.120718479156494
    7. ')' → logprob: -5.245718479156494
    8. ':
' → logprob: -6.245718479156494
    9. ' ,' → logprob: -6.745718479156494
    10. '):' → logprob: -6.745718479156494

Token 161: ' partir' (ID: 12100)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004294572863727808
    2. ' new' → logprob: -5.504294395446777
    3. '(new' → logprob: -8.629294395446777
    4. ')new' → logprob: -11.379294395446777
    5. ')' → logprob: -11.754294395446777
    6. '[new' → logprob: -12.254294395446777
    7. 'next' → logprob: -12.629294395446777
    8. ' ' → logprob: -13.004294395446777
    9. '
' → logprob: -13.129294395446777
    10. '```' → logprob: -13.879294395446777

Token 162: ' de' (ID: 334)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08474034816026688
    2. '(new' → logprob: -2.834740400314331
    3. ' new' → logprob: -4.084740161895752
    4. '               ' → logprob: -5.209740161895752
    5. ')new' → logprob: -9.08474063873291
    6. '[new' → logprob: -10.58474063873291
    7. '                   ' → logprob: -10.70974063873291
    8. '           ' → logprob: -10.70974063873291
    9. ' de' → logprob: -11.95974063873291
    10. '                ' → logprob: -12.08474063873291

Token 163: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0024801772087812424
    2. ' new' → logprob: -6.0024800300598145
    3. '(new' → logprob: -12.877480506896973
    4. '   ' → logprob: -14.627480506896973
    5. '               ' → logprob: -14.627480506896973
    6. '           ' → logprob: -15.502480506896973
    7. '
' → logprob: -15.752480506896973
    8. '                   ' → logprob: -16.252479553222656
    9. '[new' → logprob: -16.252479553222656
    10. ')new' → logprob: -16.627479553222656

Token 164: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -13.125003814697266
    3. '_new' → logprob: -13.875003814697266
    4. '_n' → logprob: -15.125003814697266
    5. 'number' → logprob: -17.125003814697266
    6. '_position' → logprob: -17.125003814697266
    7. '_num' → logprob: -17.250003814697266
    8. '_numbers' → logprob: -17.625003814697266
    9. '_version' → logprob: -18.000003814697266
    10. ' _' → logprob: -18.750003814697266

Token 165: ' alors' (ID: 17971)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21704411506652832
    2. ':' → logprob: -2.4670441150665283
    3. '               ' → logprob: -2.5920441150665283
    4. ':
' → logprob: -4.092043876647949
    5. '):' → logprob: -4.842043876647949
    6. ' ,' → logprob: -6.342043876647949
    7. '           ' → logprob: -6.342043876647949
    8. '                   ' → logprob: -6.467043876647949
    9. ')' → logprob: -6.592043876647949
    10. ':return' → logprob: -6.717043876647949

Token 166: ' on' (ID: 402)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08429810404777527
    2. 'return' → logprob: -2.5842981338500977
    3. '               ' → logprob: -6.209298133850098
    4. '                   ' → logprob: -6.209298133850098
    5. ' not' → logprob: -6.834298133850098
    6. 'not' → logprob: -8.459298133850098
    7. '           ' → logprob: -9.584298133850098
    8. '
' → logprob: -12.084298133850098
    9. '   ' → logprob: -12.584298133850098
    10. '                       ' → logprob: -13.209298133850098

Token 167: ' gagne' (ID: 141776)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1864469349384308
    2. 'return' → logprob: -1.8114469051361084
    3. '                   ' → logprob: -5.1864471435546875
    4. '               ' → logprob: -7.0614471435546875
    5. '{return' → logprob: -9.311447143554688
    6. ')' → logprob: -10.811447143554688
    7. 'eturn' → logprob: -11.311447143554688
    8. '           ' → logprob: -11.311447143554688
    9. ' ' → logprob: -11.686447143554688
    10. ')return' → logprob: -11.811447143554688

Token 168: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027985218912363052
    2. '           ' → logprob: -4.652985095977783
    3. ')' → logprob: -5.152985095977783
    4. ':' → logprob: -6.027985095977783
    5. '                   ' → logprob: -6.152985095977783
    6. ' and' → logprob: -6.277985095977783
    7. ',' → logprob: -7.027985095977783
    8. ':
' → logprob: -7.152985095977783
    9. ' 
' → logprob: -7.527985095977783
    10. '                
' → logprob: -7.527985095977783

Token 169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12133554369211197
    2. ')' → logprob: -2.496335506439209
    3. '           ' → logprob: -4.871335506439209
    4. '<|end|>' → logprob: -5.121335506439209
    5. ' )' → logprob: -5.246335506439209
    6. '                   ' → logprob: -5.621335506439209
    7. ' 
' → logprob: -5.996335506439209
    8. ' ' → logprob: -6.371335506439209
    9. ' if' → logprob: -6.746335506439209
    10. '                
' → logprob: -7.121335506439209

Token 170: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1663879007101059
    2. ' if' → logprob: -2.0413877964019775
    3. 'if' (adapté à ' if') → logprob: -4.416388034820557
    4. '           ' → logprob: -4.916388034820557
    5. ' return' → logprob: -6.541388034820557
    6. '
' → logprob: -6.666388034820557
    7. 'return' → logprob: -7.291388034820557
    8. ' 
' → logprob: -8.791387557983398
    9. '                   ' → logprob: -8.791387557983398
    10. ')' → logprob: -9.291387557983398

Token 171: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12694133818149567
    2. 'not' → logprob: -2.126941442489624
    3. '               ' → logprob: -12.751941680908203
    4. ' can' → logprob: -12.876941680908203
    5. '   ' → logprob: -13.251941680908203
    6. '           ' → logprob: -13.251941680908203
    7. '(not' → logprob: -13.376941680908203
    8. '!' → logprob: -14.126941680908203
    9. '
' → logprob: -14.376941680908203
    10. '                   ' → logprob: -15.251941680908203

Token 172: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.011049943044781685
    2. ' can' → logprob: -4.511049747467041
    3. '(can' → logprob: -13.2610502243042
    4. '	can' → logprob: -15.3860502243042
    5. '           ' → logprob: -16.261049270629883
    6. '   ' → logprob: -16.761049270629883
    7. '_can' → logprob: -17.011049270629883
    8. '               ' → logprob: -19.011049270629883
    9. '.can' → logprob: -19.136049270629883
    10. ' ' → logprob: -19.761049270629883

Token 173: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -3.440506407059729e-05
    2. '_can' → logprob: -10.50003433227539
    3. '_new' → logprob: -12.75003433227539
    4. '_w' → logprob: -13.00003433227539
    5. 'win' → logprob: -14.50003433227539
    6. 'new' → logprob: -14.62503433227539
    7. '_WIN' → logprob: -15.25003433227539
    8. 'Win' → logprob: -16.75003433227539
    9. '(new' → logprob: -17.37503433227539
    10. '(win' → logprob: -17.37503433227539

Token 174: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -2.618001053633634e-05
    2. '(' → logprob: -10.750025749206543
    3. 'new' → logprob: -12.500025749206543
    4. '(tuple' → logprob: -14.375025749206543
    5. ' (' → logprob: -16.25002670288086
    6. '((' → logprob: -16.25002670288086
    7. ' new' → logprob: -16.37502670288086
    8. '(
' → logprob: -17.12502670288086
    9. ')new' → logprob: -17.62502670288086
    10. '[new' → logprob: -17.75002670288086

Token 175: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.47697752714157104
    2. '(new' → logprob: -1.1019775867462158
    3. 'new' → logprob: -3.476977586746216
    4. 'ew' → logprob: -4.726977348327637
    5. '_new' → logprob: -5.726977348327637
    6. 'umber' → logprob: -6.476977348327637
    7. '(_' → logprob: -6.976977348327637
    8. '[new' → logprob: -7.851977348327637
    9. 'number' → logprob: -8.351977348327637
    10. '_(' → logprob: -8.851977348327637

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5799729824066162
    2. '):
' → logprob: -0.8299729824066162
    3. ')' → logprob: -5.579973220825195
    4. '):
' → logprob: -9.454973220825195
    5. '           ' → logprob: -9.829973220825195
    6. '               ' → logprob: -9.829973220825195
    7. ':' → logprob: -10.954973220825195
    8. '):

' → logprob: -11.704973220825195
    9. '                   ' → logprob: -11.954973220825195
    10. ' ):
' → logprob: -11.954973220825195

Token 177: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.034973591566085815
    2. '               ' → logprob: -3.784973621368408
    3. ':' → logprob: -5.784973621368408
    4. ':
' → logprob: -5.784973621368408
    5. '                       ' → logprob: -6.284973621368408
    6. ' return' → logprob: -7.034973621368408
    7. ' :' → logprob: -7.284973621368408
    8. '):
' → logprob: -7.659973621368408
    9. '):' → logprob: -7.909973621368408
    10. '           ' → logprob: -8.15997314453125

Token 178: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1529986560344696
    2. '                   ' → logprob: -2.152998685836792
    3. 'return' (adapté à ' return') → logprob: -3.902998685836792
    4. '                       ' → logprob: -5.902998447418213
    5. ' 
' → logprob: -6.027998447418213
    6. '                    
' → logprob: -8.902998924255371
    7. '               ' → logprob: -9.527998924255371
    8. '                    ' → logprob: -9.902998924255371
    9. '                        
' → logprob: -10.277998924255371
    10. ' ' → logprob: -10.777998924255371

Token 179: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.31326186656951904
    2. ' True' → logprob: -1.313261866569519
    3. '(True' → logprob: -16.313261032104492
    4. '=True' → logprob: -19.063261032104492
    5. '1' → logprob: -20.688261032104492
    6. 'False' → logprob: -21.313261032104492
    7. '   ' → logprob: -22.188261032104492
    8. 'true' → logprob: -22.938261032104492
    9. ' ' → logprob: -23.063261032104492
    10. '_true' → logprob: -23.188261032104492

Token 180: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18979614973068237
    2. '       ' → logprob: -2.064796209335327
    3. '<|end|>' → logprob: -4.564795970916748
    4. ')' → logprob: -4.689795970916748
    5. ' return' → logprob: -5.064795970916748
    6. '        
' → logprob: -5.439795970916748
    7. '
' → logprob: -5.564795970916748
    8. ' 
' → logprob: -5.689795970916748
    9. '            
' → logprob: -6.439795970916748
    10. '   ' → logprob: -6.439795970916748

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14163480699062347
    2. '       ' → logprob: -2.391634702682495
    3. ')' → logprob: -4.891634941101074
    4. ' return' → logprob: -4.891634941101074
    5. '<|end|>' → logprob: -5.016634941101074
    6. ' 
' → logprob: -5.141634941101074
    7. '        
' → logprob: -5.516634941101074
    8. '
' → logprob: -6.016634941101074
    9. 'return' → logprob: -6.891634941101074
    10. ' ' → logprob: -6.891634941101074

Token 182: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03174804151058197
    2. '           ' → logprob: -4.656747817993164
    3. ')' → logprob: -5.156747817993164
    4. ' return' → logprob: -5.656747817993164
    5. '<|end|>' → logprob: -5.906747817993164
    6. '        
' → logprob: -6.156747817993164
    7. '
' → logprob: -6.281747817993164
    8. '\n' → logprob: -6.781747817993164
    9. ' 
' → logprob: -6.781747817993164
    10. 'return' (adapté à ' return') → logprob: -6.906747817993164

Token 183: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. '(False' → logprob: -20.875036239624023
    4. 'false' → logprob: -23.375036239624023
    5. '=False' → logprob: -23.750036239624023
    6. '_false' → logprob: -24.625036239624023
    7. '.False' → logprob: -26.000036239624023
    8. 'True' → logprob: -26.000036239624023
    9. '0' → logprob: -26.625036239624023
    10. '   ' → logprob: -26.875036239624023

Token 184: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4389675259590149
    2. ')' → logprob: -1.9389674663543701
    3. ')
' → logprob: -3.31396746635437
    4. '<|end|>' → logprob: -3.31396746635437
    5. '\n' → logprob: -3.81396746635437
    6. '    
' → logprob: -3.93896746635437
    7. '   ' → logprob: -4.188967704772949
    8. '       ' → logprob: -4.313967704772949
    9. '(' → logprob: -4.688967704772949
    10. '        
' → logprob: -5.063967704772949

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22228173911571503
    2. '
' → logprob: -2.3472816944122314
    3. '()
' → logprob: -3.8472816944122314
    4. '        
' → logprob: -3.8472816944122314
    5. '   ' → logprob: -3.9722816944122314
    6. '(' → logprob: -4.7222819328308105
    7. '()' → logprob: -5.0972819328308105
    8. ')' → logprob: -5.2222819328308105
    9. '(
' → logprob: -5.5972819328308105
    10. '    
' → logprob: -5.8472819328308105

Token 186: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29384660720825195
    2. '       ' → logprob: -1.418846607208252
    3. 'result' (adapté à ' result') → logprob: -5.168846607208252
    4. 'number' → logprob: -5.418846607208252
    5. ' print' → logprob: -6.293846607208252
    6. 'if' → logprob: -8.793846130371094
    7. '        
' → logprob: -9.043846130371094
    8. '
' → logprob: -9.418846130371094
    9. '   ' → logprob: -9.918846130371094
    10. ' result' → logprob: -10.168846130371094

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03856499865651131
    2. '=' → logprob: -3.288564920425415
    3. '(' → logprob: -8.038564682006836
    4. ' ' → logprob: -10.163564682006836
    5. ')' → logprob: -10.288564682006836
    6. '=True' → logprob: -10.288564682006836
    7. '   ' → logprob: -10.663564682006836
    8. '(True' → logprob: -11.413564682006836
    9. '()' → logprob: -11.413564682006836
    10. '    ' → logprob: -12.038564682006836

Token 188: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6325221657752991
    2. '"' → logprob: -1.2575221061706543
    3. 'can' → logprob: -2.3825221061706543
    4. ' "' → logprob: -3.1325221061706543
    5. ''' → logprob: -3.2575221061706543
    6. ' '' → logprob: -4.882522106170654
    7. ' True' → logprob: -7.132522106170654
    8. 'True' → logprob: -7.257522106170654
    9. '"s' → logprob: -8.507522583007812
    10. ''s' → logprob: -8.632522583007812

Token 189: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -7.226628895296017e-06
    2. 'win' → logprob: -12.375007629394531
    3. '_w' → logprob: -13.750007629394531
    4. 'Win' → logprob: -14.250007629394531
    5. '_WIN' → logprob: -15.000007629394531
    6. 'result' → logprob: -15.125007629394531
    7. 's' → logprob: -15.250007629394531
    8. '_result' → logprob: -16.12500762939453
    9. '_word' → logprob: -16.62500762939453
    10. '_' → logprob: -17.62500762939453

Token 190: '(tuple' (ID: 133029)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007016452960669994
    2. '(tuple' → logprob: -5.132016658782959
    3. 's' → logprob: -7.257016658782959
    4. ' (' → logprob: -8.8820161819458
    5. '(' → logprob: -8.8820161819458
    6. '(t' → logprob: -9.6320161819458
    7. '((' → logprob: -10.6320161819458
    8. 'tuple' → logprob: -12.5070161819458
    9. '(number' → logprob: -12.7570161819458
    10. '(str' → logprob: -12.8820161819458

Token 191: '(map' (ID: 16946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4997868239879608
    2. '(map' → logprob: -0.9997868537902832
    3. '(int' → logprob: -4.249786853790283
    4. '(ord' → logprob: -5.374786853790283
    5. '(d' → logprob: -5.499786853790283
    6. 'map' → logprob: -6.374786853790283
    7. 's' → logprob: -8.124786376953125
    8. '([' → logprob: -8.624786376953125
    9. 'int' → logprob: -9.749786376953125
    10. '((' → logprob: -9.749786376953125

Token 192: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00794279482215643
    2. 'int' → logprob: -4.8829426765441895
    3. '   ' → logprob: -8.257943153381348
    4. '[int' → logprob: -10.507943153381348
    5. ' int' → logprob: -11.132943153381348
    6. '(lambda' → logprob: -11.632943153381348
    7. ' (' → logprob: -12.132943153381348
    8. ',int' → logprob: -12.382943153381348
    9. '(str' → logprob: -12.757943153381348
    10. '<int' → logprob: -12.882943153381348

Token 193: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.180879816180095e-05
    2. '(list' → logprob: -10.875051498413086
    3. '(' → logprob: -11.500051498413086
    4. 's' → logprob: -11.625051498413086
    5. ' (' → logprob: -11.875051498413086
    6. ',' → logprob: -13.125051498413086
    7. '((' → logprob: -13.250051498413086
    8. ')(' → logprob: -13.625051498413086
    9. ')' → logprob: -14.125051498413086
    10. '))' → logprob: -15.375051498413086

Token 194: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006086753215640783
    2. 'list' → logprob: -5.131086826324463
    3. ' s' → logprob: -9.381086349487305
    4. '(s' → logprob: -9.756086349487305
    5. ' list' → logprob: -11.631086349487305
    6. '   ' → logprob: -13.006086349487305
    7. '(list' → logprob: -13.256086349487305
    8. '[s' → logprob: -13.381086349487305
    9. 'str' → logprob: -14.631086349487305
    10. '{s' → logprob: -15.881086349487305

Token 195: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.031187688931822777
    2. ')))' → logprob: -3.7811877727508545
    3. '()))' → logprob: -4.906187534332275
    4. '))
' → logprob: -7.781187534332275
    5. '()))
' → logprob: -10.531188011169434
    6. ')))
' → logprob: -10.656188011169434
    7. ' ))' → logprob: -10.781188011169434
    8. '())))' → logprob: -11.406188011169434
    9. '}))' → logprob: -13.406188011169434
    10. '))))' → logprob: -13.406188011169434

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06851360946893692
    2. '
' → logprob: -3.0685136318206787
    3. 'print' → logprob: -4.1935133934021
    4. '```' → logprob: -6.5685133934021
    5. '<|end|>' → logprob: -6.6935133934021
    6. '        
' → logprob: -6.9435133934021
    7. ' print' → logprob: -7.9435133934021
    8. '  
' → logprob: -8.818513870239258
    9. '   ' → logprob: -9.193513870239258
    10. ' if' → logprob: -9.318513870239258

Token 197: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5764502286911011
    2. '       ' → logprob: -0.9514502286911011
    3. ' print' → logprob: -3.4514503479003906
    4. ' if' → logprob: -4.451450347900391
    5. '
' → logprob: -5.076450347900391
    6. 'if' → logprob: -6.701450347900391
    7. '        
' → logprob: -7.826450347900391
    8. '   ' → logprob: -8.70145034790039
    9. '```' → logprob: -8.95145034790039
    10. ' 
' → logprob: -9.07645034790039

Token 198: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0057933395728468895
    2. '('' → logprob: -5.255793571472168
    3. '(' → logprob: -7.630793571472168
    4. '(result' → logprob: -9.630793571472168
    5. '(int' → logprob: -13.130793571472168
    6. '(True' → logprob: -13.130793571472168
    7. '(("' → logprob: -13.505793571472168
    8. '"' → logprob: -13.505793571472168
    9. 'result' → logprob: -13.880793571472168
    10. '(
' → logprob: -15.130793571472168

Token 199: 'Fab' (ID: 75489)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.5459684133529663
    2. 'First' → logprob: -1.4209684133529663
    3. 'YES' → logprob: -2.545968532562256
    4. '"' → logprob: -3.420968532562256
    5. 'B' → logprob: -3.795968532562256
    6. 'Win' → logprob: -4.420968532562256
    7. 'Possible' → logprob: -5.170968532562256
    8. 'Second' → logprob: -5.420968532562256
    9. 'Alice' → logprob: -5.545968532562256
    10. 'Y' → logprob: -5.795968532562256

Token 200: 're' (ID: 264)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.9330618381500244
    2. 'rique' → logprob: -1.9330618381500244
    3. 'ric' → logprob: -2.1830618381500244
    4. 'rice' → logprob: -3.0580618381500244
    5. 'ian' → logprob: -3.5580618381500244
    6. 'in' → logprob: -3.5580618381500244
    7. 'iou' → logprob: -3.5580618381500244
    8. 'er' → logprob: -3.8080618381500244
    9. 'i' → logprob: -3.8080618381500244
    10. 'onacci' → logprob: -4.558061599731445

Token 201: ' wins' (ID: 25327)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.15558917820453644
    2. 's' → logprob: -3.5305891036987305
    3. '"' → logprob: -3.9055891036987305
    4. 'l' → logprob: -4.0305891036987305
    5. 'n' → logprob: -4.1555891036987305
    6. 'au' → logprob: -4.5305891036987305
    7. 'r' → logprob: -5.1555891036987305
    8. 't' → logprob: -5.1555891036987305
    9. '')' → logprob: -5.4055891036987305
    10. ''' → logprob: -5.4055891036987305

Token 202: '."' (ID: 3692)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2557946741580963
    2. '"' → logprob: -1.505794644355774
    3. '!")' → logprob: -5.630794525146484
    4. '!' → logprob: -8.880794525146484
    5. '!"' → logprob: -9.005794525146484
    6. '")
' → logprob: -13.005794525146484
    7. 'if' → logprob: -13.005794525146484
    8. ' if' → logprob: -13.380794525146484
    9. ''' → logprob: -14.505794525146484
    10. '()' → logprob: -14.630794525146484

Token 203: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4498818814754486
    2. 'if' → logprob: -1.449881911277771
    3. ' if' → logprob: -2.0748817920684814
    4. '   ' → logprob: -6.9498820304870605
    5. '()' → logprob: -7.5748820304870605
    6. '       ' → logprob: -8.199881553649902
    7. 'else' → logprob: -8.699881553649902
    8. '<|end|>' → logprob: -9.949881553649902
    9. '")' → logprob: -10.824881553649902
    10. 'elif' → logprob: -10.949881553649902

Token 204: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.25192928314208984
    2. 'result' → logprob: -1.5019292831420898
    3. '(result' → logprob: -15.75192928314209
    4. 'not' → logprob: -18.376930236816406
    5. ' not' → logprob: -19.001930236816406
    6. ' ' → logprob: -19.751930236816406
    7. 'Result' → logprob: -19.876930236816406
    8. '=result' → logprob: -20.251930236816406
    9. '	result' → logprob: -20.376930236816406
    10. '$result' → logprob: -21.001930236816406

Token 205: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.029757557436823845
    2. 'else' → logprob: -3.529757499694824
    3. ')' → logprob: -12.529757499694824
    4. '	else' → logprob: -13.529757499694824
    5. '    ' → logprob: -13.904757499694824
    6. ' )' → logprob: -14.779757499694824
    7. ' ' → logprob: -15.279757499694824
    8. '==' → logprob: -15.529757499694824
    9. '   ' → logprob: -15.779757499694824
    10. '```' → logprob: -15.904757499694824

Token 206: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0554252527654171
    2. ' "' → logprob: -2.9304251670837402
    3. '"No' → logprob: -9.055425643920898
    4. '"D' → logprob: -9.430425643920898
    5. '"B' → logprob: -9.680425643920898
    6. '"L' → logprob: -9.805425643920898
    7. '"S' → logprob: -10.430425643920898
    8. '"A' → logprob: -10.680425643920898
    9. '"K' → logprob: -10.680425643920898
    10. '"I' → logprob: -10.805425643920898

Token 207: 'Aud' (ID: 54517)
  Prédit: 'Fab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fab' → logprob: -1.030469536781311
    2. 'L' → logprob: -2.7804694175720215
    3. 'B' → logprob: -3.2804694175720215
    4. 'G' → logprob: -3.6554694175720215
    5. 'R' → logprob: -3.8429694175720215
    6. 'F' → logprob: -4.1554694175720215
    7. 'P' → logprob: -4.4054694175720215
    8. 'D' → logprob: -4.4054694175720215
    9. 'S' → logprob: -4.4054694175720215
    10. 'M' → logprob: -4.4054694175720215

Token 208: 'rey' (ID: 14603)
  Prédit: 'rey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rey' → logprob: -0.0071113863959908485
    2. 'it' → logprob: -6.257111549377441
    3. 'ience' → logprob: -6.257111549377441
    4. 're' → logprob: -8.007111549377441
    5. 'r' → logprob: -8.132111549377441
    6. 'i' → logprob: -8.132111549377441
    7. 'ou' → logprob: -8.257111549377441
    8. '```' → logprob: -8.507111549377441
    9. 'ible' → logprob: -9.007111549377441
    10. 'e' → logprob: -9.132111549377441

Token 209: ' wins' (ID: 25327)
  Prédit: ' loses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loses' → logprob: -0.14919914305210114
    2. 'los' → logprob: -2.7741992473602295
    3. 'wins' → logprob: -3.0241992473602295
    4. ' wins' → logprob: -3.6491992473602295
    5. 'lo' → logprob: -6.77419900894165
    6. 's' → logprob: -8.399199485778809
    7. ' ' → logprob: -9.649199485778809
    8. 'lose' → logprob: -9.649199485778809
    9. ' lo' → logprob: -10.274199485778809
    10. ' losses' → logprob: -12.024199485778809

Token 210: '.")' (ID: 102659)
  Prédit: '.")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -7.624555291840807e-05
    2. '."' → logprob: -9.875076293945312
    3. '")' → logprob: -11.375076293945312
    4. '.' → logprob: -12.000076293945312
    5. '.")
' → logprob: -13.000076293945312
    6. '.')' → logprob: -13.500076293945312
    7. '()' → logprob: -13.500076293945312
    8. '.)' → logprob: -14.125076293945312
    9. '!")' → logprob: -14.250076293945312
    10. '.");' → logprob: -15.500076293945312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 208
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 89
Tokens correctement prédits (top 10): 165
Précision stricte (1ère position): 40.87%
Précision adaptée (1ère position): 42.79%
Précision (top 10): 79.33%
================================================================================
