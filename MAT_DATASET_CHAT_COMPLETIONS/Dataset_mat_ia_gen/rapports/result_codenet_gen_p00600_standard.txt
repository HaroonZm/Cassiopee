================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:04:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

class UnionFind:
    def __init__(self,n):
        self.par=list(range(n))
        self.rank=[0]*n
    def find(self,x):
        while self.par[x]!=x:
            self.par[x]=self.par[self.par[x]]
            x=self.par[x]
        return x
    def union(self,x,y):
        x=self.find(x)
        y=self.find(y)
        if x==y:
            return False
        if self.rank[x]<self.rank[y]:
            self.par[x]=y
        else:
            self.par[y]=x
            if self.rank[x]==self.rank[y]:
                self.rank[x]+=1
        return True

def main():
    input=sys.stdin.readline
    while True:
        s,d=map(int,input().split())
        if s==0 and d==0:
            break
        edges=[]
        # hot springs idx: 0 to s-1
        # districts idx: s to s+d-1
        for i in range(s):
            dist=list(map(int,input().split()))
            for j,x in enumerate(dist):
                if x!=0:
                    edges.append((x,i,s+j))
        for i in range(d-1):
            line=list(map(int,input().split()))
            for j,x in enumerate(line):
                if x!=0:
                    u=s+i
                    v=s+i+1+j
                    edges.append((x,u,v))
        edges.sort()
        uf=UnionFind(s+d)
        ans=0
        for w,u,v in edges:
            if uf.union(u,v):
                ans+=w
        print(ans)
if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.8828707804204896e-05
    2. '[' → logprob: -10.750048637390137
    3. '.import' → logprob: -12.500048637390137
    4. '.readline' → logprob: -12.875048637390137
    5. '."""' → logprob: -13.375048637390137
    6. '.user' → logprob: -13.625048637390137
    7. '.next' → logprob: -13.750048637390137
    8. '.stdout' → logprob: -13.750048637390137
    9. '```' → logprob: -13.750048637390137
    10. '.[' → logprob: -14.000048637390137

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037562556099146605
    2. 'ursive' → logprob: -6.378756046295166
    3. 'limit' → logprob: -7.003756046295166
    4. 'ur' → logprob: -7.503756046295166
    5. 'urse' → logprob: -9.253756523132324
    6. 'urs' → logprob: -9.503756523132324
    7. '_limit' → logprob: -9.628756523132324
    8. 'ut' → logprob: -9.753756523132324
    9. 'u' → logprob: -10.003756523132324
    10. 't' → logprob: -10.128756523132324

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.10088767111301422
    2. '_limit' → logprob: -2.3508877754211426
    3. '_depth' → logprob: -7.725887775421143
    4. 'depth' → logprob: -8.600887298583984
    5. 'lim' → logprob: -11.225887298583984
    6. ' limit' → logprob: -11.350887298583984
    7. 'error' → logprob: -11.350887298583984
    8. '_stack' → logprob: -13.100887298583984
    9. '_' → logprob: -13.475887298583984
    10. '_threshold' → logprob: -13.600887298583984

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '(()' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004092408809810877
    2. '9' → logprob: -6.004092216491699
    3. '6' → logprob: -7.004092216491699
    4. '8' → logprob: -7.254092216491699
    5. '```' → logprob: -17.254093170166016
    6. ' ' → logprob: -17.379093170166016
    7. '``' → logprob: -20.504093170166016
    8. ')' → logprob: -20.629093170166016
    9. '(' → logprob: -21.129093170166016
    10. '**' → logprob: -21.629093170166016

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' Union' (ID: 14746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40495193004608154
    2. ' Solution' → logprob: -1.6549519300460815
    3. ' Node' → logprob: -2.904952049255371
    4. ' Trie' → logprob: -3.654952049255371
    5. ' Tree' → logprob: -4.029952049255371
    6. ' My' → logprob: -4.654952049255371
    7. ' DFS' → logprob: -4.779952049255371
    8. ' Factor' → logprob: -5.279952049255371
    9. ' Recursive' → logprob: -5.404952049255371
    10. ' Binary' → logprob: -5.779952049255371

Token 15: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.00416969507932663
    2. '[' → logprob: -6.254169464111328
    3. ':' → logprob: -6.754169464111328
    4. '[int' → logprob: -8.129169464111328
    5. ' Find' → logprob: -8.504169464111328
    6. '_Find' → logprob: -8.504169464111328
    7. '-F' → logprob: -9.629169464111328
    8. '[str' → logprob: -9.754169464111328
    9. 'Finder' → logprob: -9.879169464111328
    10. '```' → logprob: -10.129169464111328

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020027317106723785
    2. '():' → logprob: -4.520027160644531
    3. '(' → logprob: -4.770027160644531
    4. '[' → logprob: -9.020027160644531
    5. '):' → logprob: -9.395027160644531
    6. ' :' → logprob: -9.645027160644531
    7. '```' → logprob: -10.145027160644531
    8. '.' → logprob: -10.770027160644531
    9. '(object' → logprob: -11.020027160644531
    10. '(:' → logprob: -11.145027160644531

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14874045550823212
    2. ' def' → logprob: -2.648740530014038
    3. ':' → logprob: -3.148740530014038
    4. 'def' → logprob: -4.773740291595459
    5. '```' → logprob: -5.023740291595459
    6. '    ' → logprob: -5.523740291595459
    7. '    
' → logprob: -7.023740291595459
    8. ' ' → logprob: -7.273740291595459
    9. ' 
' → logprob: -7.523740291595459
    10. '  ' → logprob: -7.648740291595459

Token 18: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4484861195087433
    2. 'def' (adapté à ' def') → logprob: -1.573486089706421
    3. '   ' → logprob: -1.948486089706421
    4. 'class' → logprob: -4.823486328125
    5. '    ' → logprob: -6.073486328125
    6. ' class' → logprob: -8.573486328125
    7. '```' → logprob: -8.823486328125
    8. ' ' → logprob: -8.948486328125
    9. ' __' → logprob: -9.073486328125
    10. ' (' → logprob: -9.073486328125

Token 19: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0003461905289441347
    2. ' init' → logprob: -8.000346183776855
    3. '__' → logprob: -11.625346183776855
    4. ' _' → logprob: -14.250346183776855
    5. 'init' → logprob: -14.750346183776855
    6. ' ' → logprob: -15.250346183776855
    7. ' ' → logprob: -15.625346183776855
    8. '_init' → logprob: -15.750346183776855
    9. ' ___' → logprob: -16.250347137451172
    10. ' def' → logprob: -16.750347137451172

Token 20: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.0
    3. 'int' → logprob: -20.125
    4. '_init' → logprob: -21.0
    5. 'ini' → logprob: -21.25
    6. 'inite' → logprob: -22.25
    7. '	init' → logprob: -22.5
    8. 'innit' → logprob: -22.75
    9. 'in' → logprob: -23.125
    10. '```' → logprob: -23.25

Token 21: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02985381707549095
    2. '__' → logprob: -3.5298538208007812
    3. '__(
' → logprob: -10.154853820800781
    4. '__((' → logprob: -10.404853820800781
    5. '(self' → logprob: -10.904853820800781
    6. '__('' → logprob: -12.154853820800781
    7. '(' → logprob: -12.404853820800781
    8. '__(*' → logprob: -12.779853820800781
    9. '___' → logprob: -13.404853820800781
    10. '__("' → logprob: -14.529853820800781

Token 22: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003831252979580313
    2. ' self' → logprob: -7.875382900238037
    3. ',self' → logprob: -13.250383377075195
    4. ',' → logprob: -15.125383377075195
    5. '(self' → logprob: -15.125383377075195
    6. '	self' → logprob: -15.625383377075195
    7. '   ' → logprob: -15.625383377075195
    8. ' ' → logprob: -15.875383377075195
    9. ')' → logprob: -16.125383377075195
    10. '       ' → logprob: -16.375383377075195

Token 23: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02293713018298149
    2. ' ,' → logprob: -3.897937059402466
    3. 'self' → logprob: -6.647937297821045
    4. ',self' → logprob: -6.897937297821045
    5. '(self' → logprob: -10.522936820983887
    6. '_,' → logprob: -10.897936820983887
    7. '_self' → logprob: -11.522936820983887
    8. ')' → logprob: -11.772936820983887
    9. ' self' → logprob: -12.022936820983887
    10. ' ' → logprob: -12.272936820983887

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018199458718299866
    2. ')' → logprob: -4.018199443817139
    3. ' ):' → logprob: -10.518199920654297
    4. ',' → logprob: -11.018199920654297
    5. '):
' → logprob: -13.143199920654297
    6. ':' → logprob: -13.643199920654297
    7. ')：' → logprob: -14.268199920654297
    8. ' )' → logprob: -14.268199920654297
    9. '),' → logprob: -14.768199920654297
    10. '   ' → logprob: -14.768199920654297

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010934626683592796
    2. 'self' → logprob: -4.760934829711914
    3. '        ' → logprob: -6.885934829711914
    4. '```' → logprob: -7.885934829711914
    5. ' self' → logprob: -8.010934829711914
    6. '    ' → logprob: -8.635934829711914
    7. '   ' → logprob: -9.385934829711914
    8. 'n' → logprob: -10.135934829711914
    9. '(n' → logprob: -10.260934829711914
    10. '     ' → logprob: -10.260934829711914

Token 26: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7871218919754028
    2. '       ' → logprob: -1.0371218919754028
    3. 'self' (adapté à ' self') → logprob: -1.6621218919754028
    4. '        ' → logprob: -7.787121772766113
    5. '   ' → logprob: -9.162121772766113
    6. ' ' → logprob: -10.662121772766113
    7. '```' → logprob: -10.912121772766113
    8. '           ' → logprob: -11.037121772766113
    9. '	self' → logprob: -11.162121772766113
    10. '    ' → logprob: -11.537121772766113

Token 27: '.par' (ID: 36294)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.022296596318483353
    2. '.parent' → logprob: -4.52229642868042
    3. '.n' → logprob: -5.14729642868042
    4. ' .' → logprob: -5.39729642868042
    5. '.union' → logprob: -8.897296905517578
    6. '.size' → logprob: -9.022296905517578
    7. '._' → logprob: -9.522296905517578
    8. '.parents' → logprob: -9.647296905517578
    9. '.data' → logprob: -9.772296905517578
    10. '.l' → logprob: -10.522296905517578

Token 28: '=list' (ID: 93413)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4973812997341156
    2. '=' → logprob: -1.497381329536438
    3. ' =' → logprob: -1.872381329536438
    4. 't' → logprob: -4.372381210327148
    5. '[' → logprob: -6.747381210327148
    6. 'ents' → logprob: -9.122381210327148
    7. 'rent' → logprob: -9.747381210327148
    8. '   ' → logprob: -9.872381210327148
    9. '=None' → logprob: -9.872381210327148
    10. '=[]' → logprob: -9.997381210327148

Token 29: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.000377645599655807
    2. '(' → logprob: -8.375377655029297
    3. '([' → logprob: -9.000377655029297
    4. '[' → logprob: -11.250377655029297
    5. '<|end|>' → logprob: -12.750377655029297
    6. '<|end|>' → logprob: -12.875377655029297
    7. 'range' → logprob: -13.125377655029297
    8. '()' → logprob: -14.750377655029297
    9. '(
' → logprob: -14.750377655029297
    10. '```' → logprob: -15.000377655029297

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. ')n' → logprob: -16.500009536743164
    4. ')(' → logprob: -17.500009536743164
    5. 'n' → logprob: -17.625009536743164
    6. ')' → logprob: -19.500009536743164
    7. ' (' → logprob: -20.500009536743164
    8. '(len' → logprob: -20.500009536743164
    9. '(N' → logprob: -20.625009536743164
    10. '(
' → logprob: -20.750009536743164

Token 31: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00021057340200059116
    2. ')' → logprob: -8.875210762023926
    3. '))
' → logprob: -9.625210762023926
    4. ' ))' → logprob: -12.875210762023926
    5. '))

' → logprob: -14.000210762023926
    6. ')))' → logprob: -14.375210762023926
    7. ')),' → logprob: -15.250210762023926
    8. '),' → logprob: -15.875210762023926
    9. '()))' → logprob: -16.50020980834961
    10. ' ' → logprob: -16.87520980834961

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20581765472888947
    2. '<|end|>' → logprob: -1.955817699432373
    3. ')' → logprob: -3.830817699432373
    4. '   ' → logprob: -4.455817699432373
    5. '[' → logprob: -6.205817699432373
    6. ' ' → logprob: -6.580817699432373
    7. '<|end|>' → logprob: -6.955817699432373
    8. '
' → logprob: -7.080817699432373
    9. ',' → logprob: -7.205817699432373
    10. '        
' → logprob: -7.455817699432373

Token 33: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0707961916923523
    2. 'self' (adapté à ' self') → logprob: -2.820796251296997
    3. 'n' → logprob: -5.945796012878418
    4. ' self' → logprob: -6.445796012878418
    5. ' ' → logprob: -6.570796012878418
    6. '   ' → logprob: -6.695796012878418
    7. ')' → logprob: -7.820796012878418
    8. ',self' → logprob: -7.820796012878418
    9. 's' → logprob: -8.195796012878418
    10. ',' → logprob: -8.445796012878418

Token 34: '.rank' (ID: 96793)
  Prédit: '.sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sz' → logprob: -0.5486428141593933
    2. '.rank' → logprob: -1.298642873764038
    3. '.size' → logprob: -1.923642873764038
    4. '.s' → logprob: -6.173642635345459
    5. '.r' → logprob: -7.673642635345459
    6. ' .' → logprob: -8.173643112182617
    7. '.parent' → logprob: -9.423643112182617
    8. 'size' → logprob: -9.548643112182617
    9. 'siz' → logprob: -9.923643112182617
    10. '.' → logprob: -10.298643112182617

Token 35: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27184709906578064
    2. ' =' → logprob: -1.646847128868103
    3. '=[' → logprob: -3.1468470096588135
    4. '=[]' → logprob: -6.771847248077393
    5. ' =[' → logprob: -6.771847248077393
    6. '[' → logprob: -10.396846771240234
    7. '=array' → logprob: -11.396846771240234
    8. '＝' → logprob: -11.396846771240234
    9. '=list' → logprob: -11.521846771240234
    10. '=zeros' → logprob: -11.771846771240234

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -12.75000286102295
    3. ' ' → logprob: -15.25000286102295
    4. '０' → logprob: -20.250003814697266
    5. '۰' → logprob: -21.750003814697266
    6. '```' → logprob: -22.000003814697266
    7. '   ' → logprob: -22.500003814697266
    8. '000' → logprob: -22.875003814697266
    9. '(' → logprob: -22.875003814697266
    10. ')' → logprob: -23.000003814697266

Token 37: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1595238298177719
    2. ']*' → logprob: -2.4095237255096436
    3. ' ]' → logprob: -3.0345237255096436
    4. ',' → logprob: -5.034523963928223
    5. ']*(' → logprob: -6.659523963928223
    6. ' for' → logprob: -7.034523963928223
    7. ')' → logprob: -7.784523963928223
    8. ' )' → logprob: -9.284523963928223
    9. '])' → logprob: -9.284523963928223
    10. ' ' → logprob: -9.284523963928223

Token 38: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.696889623621246e-06
    2. ' n' → logprob: -12.87500286102295
    3. '(n' → logprob: -16.375001907348633
    4. '	n' → logprob: -17.625001907348633
    5. ')n' → logprob: -19.625001907348633
    6. '_n' → logprob: -20.500001907348633
    7. '<|end|>' → logprob: -21.250001907348633
    8. '<|end|>' → logprob: -21.250001907348633
    9. ',n' → logprob: -21.375001907348633
    10. '(' → logprob: -22.500001907348633

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.009878385812044144
    2. 'find' → logprob: -4.634878158569336
    3. ' unite' → logprob: -10.009878158569336
    4. ' union' → logprob: -10.384878158569336
    5. ' root' → logprob: -10.509878158569336
    6. ' ' → logprob: -11.884878158569336
    7. 'union' → logprob: -12.259878158569336
    8. '	find' → logprob: -13.134878158569336
    9. '_find' → logprob: -13.509878158569336
    10. ' ' → logprob: -13.884878158569336

Token 43: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01848597824573517
    2. '(self' → logprob: -4.018486022949219
    3. ' (' → logprob: -9.143486022949219
    4. '<|end|>' → logprob: -9.768486022949219
    5. 'self' → logprob: -10.268486022949219
    6. '(x' → logprob: -10.518486022949219
    7. '(
' → logprob: -11.268486022949219
    8. ')' → logprob: -11.393486022949219
    9. '(node' → logprob: -11.518486022949219
    10. '_' → logprob: -11.643486022949219

Token 44: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04097253084182739
    2. ',x' → logprob: -4.290972709655762
    3. ' ,' → logprob: -4.415972709655762
    4. ',u' → logprob: -5.290972709655762
    5. ',node' → logprob: -5.915972709655762
    6. ',int' → logprob: -6.165972709655762
    7. ',parent' → logprob: -7.040972709655762
    8. ',v' → logprob: -7.040972709655762
    9. ',n' → logprob: -7.415972709655762
    10. ',a' → logprob: -7.915972709655762

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00047964724944904447
    2. ')' → logprob: -7.750479698181152
    3. '):
' → logprob: -10.250479698181152
    4. ' ):' → logprob: -11.875479698181152
    5. ':' → logprob: -12.125479698181152
    6. '():' → logprob: -14.750479698181152
    7. '):
' → logprob: -14.875479698181152
    8. '   ' → logprob: -15.000479698181152
    9. '       ' → logprob: -16.750478744506836
    10. ' ' → logprob: -16.875478744506836

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00791287049651146
    2. ' if' → logprob: -5.382912635803223
    3. ':' → logprob: -7.007912635803223
    4. 'if' → logprob: -7.132912635803223
    5. ' while' → logprob: -7.257912635803223
    6. '
' → logprob: -8.382912635803223
    7. '        ' → logprob: -8.632912635803223
    8. '   ' → logprob: -9.132912635803223
    9. 'while' → logprob: -9.757912635803223
    10. '<|end|>' → logprob: -10.257912635803223

Token 47: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4750998318195343
    2. 'if' → logprob: -0.9750998020172119
    3. '       ' → logprob: -7.100100040435791
    4. ' while' → logprob: -8.850099563598633
    5. '
' → logprob: -10.725099563598633
    6. 'while' (adapté à ' while') → logprob: -11.100099563598633
    7. '	if' → logprob: -12.350099563598633
    8. '```' → logprob: -12.850099563598633
    9. '   ' → logprob: -12.975099563598633
    10. '        ' → logprob: -13.225099563598633

Token 48: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.044142939150333405
    2. ' self' → logprob: -3.169142961502075
    3. 'x' → logprob: -6.794142723083496
    4. ' x' → logprob: -11.544142723083496
    5. '(self' → logprob: -11.794142723083496
    6. '	self' → logprob: -12.544142723083496
    7. ' ' → logprob: -13.544142723083496
    8. 'Self' → logprob: -15.919142723083496
    9. '   ' → logprob: -16.544143676757812
    10. '[self' → logprob: -16.794143676757812

Token 49: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.03912676125764847
    2. 'par' → logprob: -3.2891268730163574
    3. ' !=' → logprob: -7.539126873016357
    4. '!=' → logprob: -7.789126873016357
    5. ' par' → logprob: -9.7891263961792
    6. '_par' → logprob: -10.5391263961792
    7. '	par' → logprob: -11.0391263961792
    8. '.' → logprob: -11.1641263961792
    9. '[' → logprob: -11.7891263961792
    10. 'x' → logprob: -12.6641263961792

Token 50: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: 0.0
    2. '[self' → logprob: -17.375
    3. '[' → logprob: -18.25
    4. 'x' → logprob: -20.0
    5. '[
' → logprob: -20.25
    6. ' [' → logprob: -20.625
    7. '<x' → logprob: -20.875
    8. '```' → logprob: -21.25
    9. '{x' → logprob: -21.375
    10. '	x' → logprob: -21.75

Token 51: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.03411390632390976
    2. '!=' → logprob: -3.784113883972168
    3. ']' → logprob: -4.534113883972168
    4. ' !=' → logprob: -9.784113883972168
    5. ')!=' → logprob: -11.534113883972168
    6. '()!=' → logprob: -12.659113883972168
    7. '```' → logprob: -13.784113883972168
    8. 'x' → logprob: -14.409113883972168
    9. ']+=' → logprob: -14.784113883972168
    10. '[x' → logprob: -15.284113883972168

Token 52: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.1008713702030946e-06
    2. ' x' → logprob: -13.125001907348633
    3. '	x' → logprob: -17.500001907348633
    4. ')x' → logprob: -20.625001907348633
    5. '   ' → logprob: -22.250001907348633
    6. '<x' → logprob: -22.500001907348633
    7. 'self' → logprob: -22.500001907348633
    8. ' ' → logprob: -23.250001907348633
    9. ''x' → logprob: -23.250001907348633
    10. '>x' → logprob: -23.500001907348633

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004108084831386805
    2. ':
' → logprob: -5.50410795211792
    3. ':x' → logprob: -11.254108428955078
    4. ' :' → logprob: -11.504108428955078
    5. ',' → logprob: -12.754108428955078
    6. '):' → logprob: -13.754108428955078
    7. 'x' → logprob: -14.254108428955078
    8. ':return' → logprob: -15.004108428955078
    9. ':
' → logprob: -15.254108428955078
    10. ':**' → logprob: -15.254108428955078

Token 54: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056864332407712936
    2. ' x' → logprob: -3.0568642616271973
    3. '       ' → logprob: -5.806864261627197
    4. '
' → logprob: -7.056864261627197
    5. ':' → logprob: -7.181864261627197
    6. '\n' → logprob: -7.306864261627197
    7. ':
' → logprob: -7.431864261627197
    8. 'x' → logprob: -7.556864261627197
    9. '```' → logprob: -7.556864261627197
    10. '   ' → logprob: -8.556864738464355

Token 55: ' self' (ID: 1051)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5014501214027405
    2. 'x' → logprob: -1.8764500617980957
    3. '           ' → logprob: -2.0014500617980957
    4. '               ' → logprob: -3.1264500617980957
    5. 'self' (adapté à ' self') → logprob: -3.1264500617980957
    6. ' self' → logprob: -4.126450061798096
    7. '   ' → logprob: -6.501450061798096
    8. ' ' → logprob: -8.251450538635254
    9. '```' → logprob: -8.751450538635254
    10. '            ' → logprob: -9.876450538635254

Token 56: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.0008364312816411257
    2. 'par' → logprob: -7.750836372375488
    3. '.' → logprob: -8.250836372375488
    4. '.x' → logprob: -9.500836372375488
    5. '	par' → logprob: -10.250836372375488
    6. 'x' → logprob: -11.125836372375488
    7. '_par' → logprob: -11.875836372375488
    8. '.parent' → logprob: -13.000836372375488
    9. ' =' → logprob: -13.250836372375488
    10. ' .' → logprob: -13.375836372375488

Token 57: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.6457742175552994e-05
    2. '[' → logprob: -9.875056266784668
    3. 'x' → logprob: -12.250056266784668
    4. '[
' → logprob: -16.750057220458984
    5. ' x' → logprob: -16.875057220458984
    6. '```' → logprob: -17.250057220458984
    7. '	x' → logprob: -17.875057220458984
    8. '<x' → logprob: -18.250057220458984
    9. ' [' → logprob: -18.375057220458984
    10. '[self' → logprob: -18.625057220458984

Token 58: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030892426148056984
    2. ']=' → logprob: -3.9058923721313477
    3. ' =' → logprob: -5.030892372131348
    4. '=x' → logprob: -6.030892372131348
    5. ']' → logprob: -7.030892372131348
    6. '=self' → logprob: -8.030892372131348
    7. ')=' → logprob: -9.780892372131348
    8. '=sys' → logprob: -10.280892372131348
    9. '=s' → logprob: -11.780892372131348
    10. '=int' → logprob: -12.030892372131348

Token 59: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002615742268972099
    2. ' self' → logprob: -8.250261306762695
    3. '	self' → logprob: -15.750261306762695
    4. '[self' → logprob: -17.000261306762695
    5. '(self' → logprob: -17.375261306762695
    6. '=self' → logprob: -19.125261306762695
    7. ' ' → logprob: -19.125261306762695
    8. '_self' → logprob: -19.625261306762695
    9. '-self' → logprob: -20.000261306762695
    10. '$self' → logprob: -20.125261306762695

Token 60: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -5.796184723294573e-06
    2. '	par' → logprob: -13.000005722045898
    3. 'par' → logprob: -13.250005722045898
    4. '.find' → logprob: -14.625005722045898
    5. ' .' → logprob: -14.750005722045898
    6. '.p' → logprob: -15.125005722045898
    7. '.' → logprob: -15.875005722045898
    8. '.parent' → logprob: -16.2500057220459
    9. '.py' → logprob: -16.8750057220459
    10. '_par' → logprob: -16.8750057220459

Token 61: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -12.750004768371582
    3. 'self' → logprob: -13.125004768371582
    4. '(self' → logprob: -18.3750057220459
    5. '[
' → logprob: -18.7500057220459
    6. '	self' → logprob: -20.3750057220459
    7. ' self' → logprob: -20.5000057220459
    8. ':self' → logprob: -20.6250057220459
    9. '[x' → logprob: -21.3750057220459
    10. '$self' → logprob: -21.7500057220459

Token 62: '.par' (ID: 36294)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.013747830875217915
    2. '.x' → logprob: -4.638747692108154
    3. '.par' → logprob: -5.888747692108154
    4. 'x' → logprob: -7.263747692108154
    5. '[' → logprob: -8.263748168945312
    6. 'par' → logprob: -8.513748168945312
    7. '.' → logprob: -10.638748168945312
    8. '_par' → logprob: -11.888748168945312
    9. '[
' → logprob: -12.263748168945312
    10. 'Par' → logprob: -12.513748168945312

Token 63: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.000330220878822729
    2. 'x' → logprob: -8.375329971313477
    3. '[' → logprob: -9.250329971313477
    4. ']' → logprob: -12.750329971313477
    5. '[
' → logprob: -15.000329971313477
    6. ' x' → logprob: -15.750329971313477
    7. ')x' → logprob: -16.125329971313477
    8. '	x' → logprob: -16.875329971313477
    9. '```' → logprob: -17.000329971313477
    10. '(x' → logprob: -17.375329971313477

Token 64: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007869821041822433
    2. '])' → logprob: -5.007869720458984
    3. '[x' → logprob: -6.882869720458984
    4. ']
' → logprob: -10.007869720458984
    5. ')]' → logprob: -10.382869720458984
    6. ')' → logprob: -10.882869720458984
    7. 'x' → logprob: -11.632869720458984
    8. '[' → logprob: -12.132869720458984
    9. ' ]' → logprob: -12.507869720458984
    10. ']]' → logprob: -13.007869720458984

Token 65: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29622340202331543
    2. 'x' → logprob: -1.6712234020233154
    3. ' x' → logprob: -3.0462234020233154
    4. '       ' → logprob: -4.6712236404418945
    5. '   ' → logprob: -4.9212236404418945
    6. '	x' → logprob: -6.7962236404418945
    7. ')' → logprob: -7.1712236404418945
    8. '               ' → logprob: -7.2962236404418945
    9. '<|end|>' → logprob: -8.421223640441895
    10. '    ' → logprob: -8.546223640441895

Token 66: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.01815474033355713
    2. ' x' → logprob: -4.018154621124268
    3. '	x' → logprob: -12.268155097961426
    4. ')x' → logprob: -16.64315414428711
    5. '$x' → logprob: -17.64315414428711
    6. ',x' → logprob: -17.76815414428711
    7. '   ' → logprob: -18.14315414428711
    8. ''x' → logprob: -18.26815414428711
    9. ' ' → logprob: -18.39315414428711
    10. '.x' → logprob: -19.14315414428711

Token 67: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024169325828552
    2. ' =' → logprob: -1.910241723060608
    3. ' +=' → logprob: -11.535242080688477
    4. ' ' → logprob: -13.160242080688477
    5. ' |=' → logprob: -13.410242080688477
    6. '.=' → logprob: -14.160242080688477
    7. '+=' → logprob: -14.160242080688477
    8. ' .=' → logprob: -14.535242080688477
    9. '=

' → logprob: -15.035242080688477
    10. ' =)' → logprob: -15.035242080688477

Token 68: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -4.7159857786027715e-05
    2. '.' → logprob: -10.375046730041504
    3. 'par' → logprob: -12.250046730041504
    4. ' .' → logprob: -12.250046730041504
    5. '	par' → logprob: -12.500046730041504
    6. '.p' → logprob: -13.625046730041504
    7. '.pa' → logprob: -14.375046730041504
    8. '_par' → logprob: -15.500046730041504
    9. ' ' → logprob: -15.750046730041504
    10. ' par' → logprob: -16.37504768371582

Token 69: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.029879383742809296
    2. '[' → logprob: -3.529879331588745
    3. 'x' → logprob: -9.029879570007324
    4. '[
' → logprob: -11.904879570007324
    5. '```' → logprob: -13.279879570007324
    6. ' [' → logprob: -15.404879570007324
    7. '(x' → logprob: -16.029878616333008
    8. ' ' → logprob: -16.404878616333008
    9. '[user' → logprob: -17.029878616333008
    10. ' x' → logprob: -17.154878616333008

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.333223139634356e-05
    2. ']' → logprob: -10.875033378601074
    3. ')
' → logprob: -11.625033378601074
    4. '       ' → logprob: -13.125033378601074
    5. ' )' → logprob: -13.625033378601074
    6. '[' → logprob: -14.500033378601074
    7. '）' → logprob: -15.000033378601074
    8. ')return' → logprob: -15.375033378601074
    9. ')x' → logprob: -15.375033378601074
    10. ')`' → logprob: -15.375033378601074

Token 71: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6874920129776001
    2. '       ' → logprob: -1.3124920129776
    3. '
' → logprob: -2.6874918937683105
    4. '<|end|>' → logprob: -2.9374918937683105
    5. 'return' → logprob: -3.6874918937683105
    6. ')' → logprob: -3.8124918937683105
    7. ' return' → logprob: -4.1874918937683105
    8. '   ' → logprob: -4.3124918937683105
    9. ':return' → logprob: -4.8124918937683105
    10. '\' → logprob: -4.8124918937683105

Token 72: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8465728759765625
    2. ':return' → logprob: -1.8465728759765625
    3. ' return' → logprob: -2.4715728759765625
    4. 'return' (adapté à ' return') → logprob: -2.5965728759765625
    5. '<|end|>' → logprob: -2.7215728759765625
    6. '   ' → logprob: -2.7215728759765625
    7. '\n' → logprob: -2.9715728759765625
    8. ')' → logprob: -3.8465728759765625
    9. '    ' → logprob: -4.7215728759765625
    10. '	return' → logprob: -4.9715728759765625

Token 73: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '(x' → logprob: -20.163042068481445
    4. ' ' → logprob: -20.163042068481445
    5. '	x' → logprob: -20.788042068481445
    6. ')x' → logprob: -21.663042068481445
    7. '"x' → logprob: -23.788042068481445
    8. ' ' → logprob: -24.038042068481445
    9. '$x' → logprob: -24.538042068481445
    10. '_x' → logprob: -24.913042068481445

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9175929427146912
    2. '
' → logprob: -1.292593002319336
    3. ' 
' → logprob: -1.917593002319336
    4. '<|end|>' → logprob: -2.667593002319336
    5. '    
' → logprob: -2.792593002319336
    6. '  
' → logprob: -4.417593002319336
    7. '```' → logprob: -4.417593002319336
    8. ' ' → logprob: -4.542593002319336
    9. '\n' → logprob: -5.542593002319336
    10. '   
' → logprob: -6.167593002319336

Token 75: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.972981870174408
    2. '   ' → logprob: -1.3479819297790527
    3. '
' → logprob: -1.9729819297790527
    4. '    
' → logprob: -2.2229819297790527
    5. '  
' → logprob: -3.3479819297790527
    6. ' ' → logprob: -3.8479819297790527
    7. '```' → logprob: -3.8479819297790527
    8. '<|end|>' → logprob: -3.9729819297790527
    9. '   
' → logprob: -5.347981929779053
    10. 'def' → logprob: -5.472981929779053

Token 76: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6308234333992004
    2. '   ' → logprob: -1.2558233737945557
    3. '<|end|>' → logprob: -2.8808233737945557
    4. ' 
' → logprob: -3.1308233737945557
    5. '
' → logprob: -3.8808233737945557
    6. '    
' → logprob: -4.380823612213135
    7. 'def' (adapté à ' def') → logprob: -4.755823612213135
    8. ' def' → logprob: -4.880823612213135
    9. 'n' → logprob: -5.005823612213135
    10. '\n' → logprob: -5.255823612213135

Token 77: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.08105146884918213
    2. ' unite' → logprob: -2.5810513496398926
    3. 'union' → logprob: -6.581051349639893
    4. '.union' → logprob: -7.456051349639893
    5. ' merge' → logprob: -9.58105182647705
    6. ' united' → logprob: -9.95605182647705
    7. ' unions' → logprob: -10.70605182647705
    8. ' unify' → logprob: -11.20605182647705
    9. '_union' → logprob: -11.58105182647705
    10. 'un' → logprob: -11.70605182647705

Token 78: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001025895617203787
    2. ' (' → logprob: -9.375102996826172
    3. '(self' → logprob: -12.000102996826172
    4. '(x' → logprob: -12.500102996826172
    5. '<|end|>' → logprob: -12.750102996826172
    6. '(
' → logprob: -13.375102996826172
    7. '(

' → logprob: -14.625102996826172
    8. '_' → logprob: -14.875102996826172
    9. '((' → logprob: -15.125102996826172
    10. '("("' → logprob: -15.250102996826172

Token 79: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20530681312084198
    2. '(' → logprob: -1.8303067684173584
    3. ' ,' → logprob: -4.5803070068359375
    4. '(x' → logprob: -4.5803070068359375
    5. ',x' → logprob: -5.9553070068359375
    6. ')' → logprob: -6.8303070068359375
    7. ' (' → logprob: -8.205307006835938
    8. ',self' → logprob: -8.580307006835938
    9. ',(' → logprob: -8.830307006835938
    10. ',a' → logprob: -9.705307006835938

Token 80: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4418171455617994e-05
    2. ',y' → logprob: -11.000044822692871
    3. ',x' → logprob: -11.250044822692871
    4. ' ,' → logprob: -11.375044822692871
    5. ',int' → logprob: -13.625044822692871
    6. ',

' → logprob: -15.125044822692871
    7. ',
' → logprob: -16.000043869018555
    8. ',b' → logprob: -16.125043869018555
    9. ',j' → logprob: -16.375043869018555
    10. ',user' → logprob: -16.500043869018555

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000533136713784188
    2. ')' → logprob: -7.750533103942871
    3. ' ):' → logprob: -9.625533103942871
    4. ':' → logprob: -10.375533103942871
    5. '):
' → logprob: -12.625533103942871
    6. ',' → logprob: -13.500533103942871
    7. ')：' → logprob: -15.000533103942871
    8. ' :' → logprob: -16.500534057617188
    9. ' ' → logprob: -16.750534057617188
    10. ' )' → logprob: -16.875534057617188

Token 82: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5036513805389404
    2. ':' → logprob: -1.7536513805389404
    3. '<|end|>' → logprob: -2.2536513805389404
    4. ' ' → logprob: -3.0036513805389404
    5. '):' → logprob: -3.1286513805389404
    6. ''' → logprob: -5.5036516189575195
    7. ' :' → logprob: -5.6286516189575195
    8. '   ' → logprob: -5.7536516189575195
    9. ' )' → logprob: -6.1286516189575195
    10. '       ' → logprob: -6.2536516189575195

Token 83: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.1991109848022461
    2. ' x' → logprob: -1.949110984802246
    3. ' ' → logprob: -4.074110984802246
    4. ''' → logprob: -4.574110984802246
    5. '`' → logprob: -6.574110984802246
    6. '"' → logprob: -6.574110984802246
    7. '   ' → logprob: -6.699110984802246
    8. ')' → logprob: -6.699110984802246
    9. ''x' → logprob: -6.824110984802246
    10. '    ' → logprob: -7.199110984802246

Token 84: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47134503722190857
    2. ',' → logprob: -1.596345067024231
    3. ' =' → logprob: -1.971345067024231
    4. ')' → logprob: -3.5963449478149414
    5. '=find' → logprob: -6.471344947814941
    6. ' ' → logprob: -6.846344947814941
    7. ')=' → logprob: -6.846344947814941
    8. '_parent' → logprob: -7.721344947814941
    9. '_' → logprob: -7.846344947814941
    10. '=self' → logprob: -8.471344947814941

Token 85: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0344490148127079
    2. '.' → logprob: -3.7844491004943848
    3. 'find' → logprob: -4.784449100494385
    4. '.union' → logprob: -6.159449100494385
    5. '.par' → logprob: -8.534448623657227
    6. 'union' → logprob: -8.909448623657227
    7. '.findall' → logprob: -9.409448623657227
    8. '.
' → logprob: -9.659448623657227
    9. 'par' → logprob: -9.659448623657227
    10. ' .' → logprob: -9.784448623657227

Token 86: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05360294133424759
    2. '(' → logprob: -3.053602933883667
    3. '(y' → logprob: -5.303603172302246
    4. 'x' → logprob: -10.678603172302246
    5. '(
' → logprob: -12.303603172302246
    6. ')' → logprob: -14.178603172302246
    7. 'y' → logprob: -14.928603172302246
    8. ' (' → logprob: -15.428603172302246
    9. ')x' → logprob: -16.30360221862793
    10. ',' → logprob: -16.42860221862793

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013490456622093916
    2. ')y' → logprob: -7.001348972320557
    3. ')
' → logprob: -8.001349449157715
    4. ' )' → logprob: -9.376349449157715
    5. ',y' → logprob: -11.501349449157715
    6. ',' → logprob: -12.626349449157715
    7. ')x' → logprob: -13.501349449157715
    8. 'y' → logprob: -13.876349449157715
    9. ' y' → logprob: -14.251349449157715
    10. ' )
' → logprob: -14.751349449157715

Token 88: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.835824191570282
    2. '<|end|>' → logprob: -1.2108242511749268
    3. ' y' → logprob: -2.2108242511749268
    4. 'y' → logprob: -2.8358242511749268
    5. ',y' → logprob: -3.3358242511749268
    6. ' ' → logprob: -4.085824012756348
    7. ',' → logprob: -4.210824012756348
    8. ';y' → logprob: -4.960824012756348
    9. ')y' → logprob: -5.335824012756348
    10. ';' → logprob: -5.835824012756348

Token 89: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38708174228668213
    2. 'y' (adapté à ' y') → logprob: -1.1370817422866821
    3. ' ' → logprob: -9.13708209991455
    4. '	y' → logprob: -9.63708209991455
    5. ',y' → logprob: -10.88708209991455
    6. ' 
' → logprob: -11.51208209991455
    7. ''y' → logprob: -12.76208209991455
    8. ' ' → logprob: -13.63708209991455
    9. '(y' → logprob: -13.76208209991455
    10. ')y' → logprob: -14.01208209991455

Token 90: '=self' (ID: 16945)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21643032133579254
    2. ' =' → logprob: -2.341430425643921
    3. '<|end|>' → logprob: -2.591430425643921
    4. ')' → logprob: -3.841430425643921
    5. '<|end|>' → logprob: -7.216430187225342
    6. ')=' → logprob: -7.966430187225342
    7. ' ' → logprob: -8.2164306640625
    8. ',' → logprob: -8.5914306640625
    9. ' )' → logprob: -9.5914306640625
    10. '=x' → logprob: -10.0914306640625

Token 91: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00045486391172744334
    2. '.' → logprob: -8.375454902648926
    3. 'find' → logprob: -8.750454902648926
    4. '.findall' → logprob: -10.000454902648926
    5. ' .' → logprob: -11.125454902648926
    6. ')' → logprob: -13.375454902648926
    7. ').' → logprob: -14.000454902648926
    8. '[x' → logprob: -14.875454902648926
    9. '	find' → logprob: -14.875454902648926
    10. '(find' → logprob: -15.125454902648926

Token 92: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0005570820067077875
    2. '(' → logprob: -7.500556945800781
    3. '<|end|>' → logprob: -13.500556945800781
    4. '(x' → logprob: -14.250556945800781
    5. ' (' → logprob: -14.250556945800781
    6. ')' → logprob: -14.375556945800781
    7. 'y' → logprob: -15.000556945800781
    8. '(
' → logprob: -15.125556945800781
    9. ')(' → logprob: -17.50055694580078
    10. '	y' → logprob: -17.87555694580078

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.9728669738397e-05
    2. ')
' → logprob: -9.500100135803223
    3. ' )' → logprob: -11.125100135803223
    4. '<|end|>' → logprob: -12.375100135803223
    5. ')return' → logprob: -12.625100135803223
    6. ')x' → logprob: -14.625100135803223
    7. '):' → logprob: -15.000100135803223
    8. ');' → logprob: -15.625100135803223
    9. '<|end|>' → logprob: -15.625100135803223
    10. ')y' → logprob: -16.125099182128906

Token 94: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2861352264881134
    2. '<|end|>' → logprob: -1.411135196685791
    3. ' if' → logprob: -6.536135196685791
    4. 'if' → logprob: -6.911135196685791
    5. ' 
' → logprob: -7.161135196685791
    6. ' ' → logprob: -7.536135196685791
    7. '  
' → logprob: -8.03613567352295
    8. '<|end|>' → logprob: -8.53613567352295
    9. ')' → logprob: -8.78613567352295
    10. '' → logprob: -9.41113567352295

Token 95: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.526801586151123
    2. ' if' → logprob: -0.901801586151123
    3. ' ' → logprob: -6.651801586151123
    4. ')' → logprob: -6.901801586151123
    5. '   ' → logprob: -8.026802062988281
    6. '0' → logprob: -8.151802062988281
    7. '
' → logprob: -8.776802062988281
    8. '```' → logprob: -9.276802062988281
    9. ',' → logprob: -9.651802062988281
    10. ' 
' → logprob: -9.776802062988281

Token 96: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014175265096127987
    2. 'x' → logprob: -4.2641754150390625
    3. ' ' → logprob: -11.764175415039062
    4. '	x' → logprob: -12.514175415039062
    5. ' (' → logprob: -16.764175415039062
    6. '(' → logprob: -16.764175415039062
    7. '  ' → logprob: -16.764175415039062
    8. ' ' → logprob: -17.014175415039062
    9. ' self' → logprob: -17.639175415039062
    10. '(x' → logprob: -17.639175415039062

Token 97: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28203457593917847
    2. '!=' → logprob: -1.4070346355438232
    3. ' ==' → logprob: -7.657034397125244
    4. '=' → logprob: -8.532034873962402
    5. ' !=' → logprob: -8.532034873962402
    6. '==
' → logprob: -12.282034873962402
    7. '<|end|>' → logprob: -12.782034873962402
    8. ']==' → logprob: -12.907034873962402
    9. '!==' → logprob: -13.407034873962402
    10. ']!=' → logprob: -14.157034873962402

Token 98: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019288709154352546
    2. ' y' → logprob: -6.251928806304932
    3. '	y' → logprob: -15.25192928314209
    4. '<|end|>' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.251928329467773
    6. ''y' → logprob: -18.376928329467773
    7. ')y' → logprob: -19.376928329467773
    8. '   ' → logprob: -19.501928329467773
    9. '  ' → logprob: -19.626928329467773
    10. '‘y' → logprob: -20.376928329467773

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20163124799728394
    2. ':return' → logprob: -1.7016313076019287
    3. ' :' → logprob: -8.576631546020508
    4. ':
' → logprob: -10.826631546020508
    5. ')return' → logprob: -12.701631546020508
    6. ' return' → logprob: -12.826631546020508
    7. '):' → logprob: -13.701631546020508
    8. 'return' → logprob: -13.701631546020508
    9. ')' → logprob: -14.451631546020508
    10. ' ' → logprob: -14.951631546020508

Token 100: '           ' (ID: 352)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.16010083258152008
    2. ':' → logprob: -2.5351009368896484
    3. ' return' → logprob: -4.160100936889648
    4. '
' → logprob: -4.160100936889648
    5. ' ' → logprob: -4.535100936889648
    6. '       ' → logprob: -4.660100936889648
    7. '	return' → logprob: -5.410100936889648
    8. ':
' → logprob: -5.785100936889648
    9. '   ' → logprob: -5.910100936889648
    10. ' 
' → logprob: -6.660100936889648

Token 101: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8198769092559814
    2. '
' → logprob: -1.0698769092559814
    3. ' return' → logprob: -1.6948769092559814
    4. 'return' (adapté à ' return') → logprob: -3.8198769092559814
    5. ':return' → logprob: -5.444876670837402
    6. '   ' → logprob: -7.069876670837402
    7. '    
' → logprob: -7.069876670837402
    8. ' True' → logprob: -7.194876670837402
    9. '\n' → logprob: -7.194876670837402
    10. ' ' → logprob: -7.319876670837402

Token 102: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7946398854255676
    2. ' False' → logprob: -0.9196398854255676
    3. '
' → logprob: -2.169639825820923
    4. ' True' → logprob: -4.044640064239502
    5. ' 
' → logprob: -4.919640064239502
    6. 'True' → logprob: -5.169640064239502
    7. ' None' → logprob: -5.794640064239502
    8. 'None' → logprob: -6.794640064239502
    9. '        
' → logprob: -8.419639587402344
    10. ' ' → logprob: -8.919639587402344

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05593421682715416
    2. '<|end|>' → logprob: -2.930934190750122
    3. '\n' → logprob: -8.055933952331543
    4. ' 
' → logprob: -8.555933952331543
    5. '       ' → logprob: -9.055933952331543
    6. '  
' → logprob: -9.305933952331543
    7. '' → logprob: -9.805933952331543
    8. '<|end|>' → logprob: -9.930933952331543
    9. ' ' → logprob: -10.305933952331543
    10. '
' → logprob: -10.430933952331543

Token 104: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33777981996536255
    2. '       ' → logprob: -1.8377797603607178
    3. '<|end|>' → logprob: -2.2127797603607178
    4. '  
' → logprob: -5.212779998779297
    5. ' 
' → logprob: -5.212779998779297
    6. '        
' → logprob: -6.712779998779297
    7. '   ' → logprob: -6.837779998779297
    8. '    
' → logprob: -7.087779998779297
    9. '\n' → logprob: -7.587779998779297
    10. '    ' → logprob: -7.712779998779297

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6847165822982788
    2. '<|end|>' → logprob: -1.4347165822982788
    3. 'if' (adapté à ' if') → logprob: -1.5597165822982788
    4. '
' → logprob: -4.434716701507568
    5. '       ' → logprob: -4.559716701507568
    6. ' ' → logprob: -4.684716701507568
    7. '   ' → logprob: -4.934716701507568
    8. '    ' → logprob: -5.309716701507568
    9. '```' → logprob: -7.184716701507568
    10. '        ' → logprob: -7.184716701507568

Token 106: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.054891426116228104
    2. 'self' → logprob: -2.929891347885132
    3. '	self' → logprob: -12.554891586303711
    4. '(self' → logprob: -13.054891586303711
    5. '<|end|>' → logprob: -13.929891586303711
    6. '[self' → logprob: -14.054891586303711
    7. ' ' → logprob: -14.804891586303711
    8. 's' → logprob: -15.179891586303711
    9. '_self' → logprob: -15.304891586303711
    10. '
' → logprob: -15.554891586303711

Token 107: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.5332478142227046e-05
    2. '.' → logprob: -11.500015258789062
    3. 'rank' → logprob: -12.500015258789062
    4. ' rank' → logprob: -14.375015258789062
    5. ' .' → logprob: -14.500015258789062
    6. '.r' → logprob: -15.625015258789062
    7. '_rank' → logprob: -15.750015258789062
    8. '.
' → logprob: -16.875015258789062
    9. ' ' → logprob: -19.500015258789062
    10. '
' → logprob: -19.500015258789062

Token 108: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.909333023941144e-05
    2. '[' → logprob: -9.625068664550781
    3. 'x' → logprob: -13.250068664550781
    4. '[
' → logprob: -14.125068664550781
    5. ' [' → logprob: -15.125068664550781
    6. ' x' → logprob: -17.00006866455078
    7. '<x' → logprob: -17.00006866455078
    8. '[s' → logprob: -17.37506866455078
    9. '[int' → logprob: -17.75006866455078
    10. '[y' → logprob: -18.00006866455078

Token 109: ']<' (ID: 80424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5248021483421326
    2. '<' → logprob: -0.8998021483421326
    3. ']<' → logprob: -7.274802207946777
    4. '<x' → logprob: -7.774802207946777
    5. '[' → logprob: -8.774802207946777
    6. ')<' → logprob: -8.774802207946777
    7. ' ' → logprob: -9.274802207946777
    8. ']' → logprob: -10.024802207946777
    9. ')' → logprob: -10.899802207946777
    10. '<size' → logprob: -11.524802207946777

Token 110: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005365852266550064
    2. ' self' → logprob: -5.25536584854126
    3. 'y' → logprob: -9.005366325378418
    4. '   ' → logprob: -13.255366325378418
    5. '	self' → logprob: -13.255366325378418
    6. '<|end|>' → logprob: -13.505366325378418
    7. ' ' → logprob: -13.630366325378418
    8. '[self' → logprob: -14.005366325378418
    9. 's' → logprob: -14.505366325378418
    10. 'x' → logprob: -14.880366325378418

Token 111: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.030302630737423897
    2. 'rank' → logprob: -3.5303025245666504
    3. ' rank' → logprob: -8.155303001403809
    4. '_rank' → logprob: -8.655303001403809
    5. '.' → logprob: -9.530303001403809
    6. '[y' → logprob: -12.030303001403809
    7. 'Rank' → logprob: -12.155303001403809
    8. '[x' → logprob: -13.030303001403809
    9. ' .' → logprob: -13.780303001403809
    10. 'ank' → logprob: -13.780303001403809

Token 112: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00024631983251310885
    2. 'y' → logprob: -8.750246047973633
    3. '[' → logprob: -9.625246047973633
    4. '][' → logprob: -11.375246047973633
    5. '[x' → logprob: -12.625246047973633
    6. '[
' → logprob: -13.000246047973633
    7. '```' → logprob: -13.875246047973633
    8. ',y' → logprob: -14.250246047973633
    9. '<|end|>' → logprob: -14.250246047973633
    10. ']' → logprob: -14.375246047973633

Token 113: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07060825824737549
    2. '):' → logprob: -2.695608139038086
    3. ']:' → logprob: -7.695608139038086
    4. '>:' → logprob: -9.320608139038086
    5. ' :' → logprob: -9.820608139038086
    6. '}:' → logprob: -10.320608139038086
    7. ':
' → logprob: -11.820608139038086
    8. ' ):' → logprob: -12.070608139038086
    9. ':**' → logprob: -12.320608139038086
    10. '<|end|>' → logprob: -12.570608139038086

Token 114: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.018224159255623817
    2. 'self' (adapté à ' self') → logprob: -4.143224239349365
    3. ' x' → logprob: -6.643224239349365
    4. '           ' → logprob: -8.018223762512207
    5. 'x' → logprob: -8.393223762512207
    6. '	self' → logprob: -8.643223762512207
    7. ' ' → logprob: -10.018223762512207
    8. ' 
' → logprob: -11.393223762512207
    9. '_self' → logprob: -11.518223762512207
    10. '<|end|>' → logprob: -11.518223762512207

Token 116: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -6.372916686814278e-05
    2. '	par' → logprob: -10.5000638961792
    3. '.' → logprob: -10.6250638961792
    4. 'par' → logprob: -11.8750638961792
    5. '_par' → logprob: -13.0000638961792
    6. ' .' → logprob: -14.6250638961792
    7. '.p' → logprob: -14.7500638961792
    8. '.py' → logprob: -15.5000638961792
    9. '.pol' → logprob: -15.8750638961792

Token 117: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0023085770662873983
    2. '[x' → logprob: -6.252308368682861
    3. '[' → logprob: -7.877308368682861
    4. ' [' → logprob: -14.50230884552002
    5. '```' → logprob: -16.502307891845703
    6. 'y' → logprob: -16.752307891845703
    7. '[user' → logprob: -17.627307891845703
    8. '[s' → logprob: -17.752307891845703
    9. '[
' → logprob: -17.752307891845703
    10. '][' → logprob: -18.752307891845703

Token 118: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.31634896993637085
    2. ']' → logprob: -1.3163490295410156
    3. '=' → logprob: -6.191349029541016
    4. '=y' → logprob: -7.066349029541016
    5. ' ]' → logprob: -9.191349029541016
    6. ' =' → logprob: -10.316349029541016
    7. ']+=' → logprob: -10.441349029541016
    8. '[y' → logprob: -12.066349029541016
    9. 'y' → logprob: -13.191349029541016
    10. '[' → logprob: -13.316349029541016

Token 119: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.2729995988775045e-06
    2. ' y' → logprob: -12.000006675720215
    3. '	y' → logprob: -18.6250057220459
    4. ')y' → logprob: -21.6250057220459
    5. ''y' → logprob: -22.5000057220459
    6. '‘y' → logprob: -23.1250057220459
    7. '[y' → logprob: -23.3750057220459
    8. '   ' → logprob: -23.5000057220459
    9. '<|end|>' → logprob: -23.8750057220459
    10. 'x' → logprob: -24.0000057220459

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06546133756637573
    2. '<|end|>' → logprob: -3.4404613971710205
    3. '       ' → logprob: -4.065461158752441
    4. '\n' → logprob: -4.440461158752441
    5. ' 
' → logprob: -7.440461158752441
    6. ' else' → logprob: -7.690461158752441
    7. 'else' → logprob: -7.690461158752441
    8. '  
' → logprob: -8.190461158752441
    9. '
' → logprob: -8.815461158752441
    10. '   ' → logprob: -9.815461158752441

Token 121: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3632792830467224
    2. '<|end|>' → logprob: -1.6132793426513672
    3. '       ' → logprob: -2.613279342651367
    4. 'else' → logprob: -4.113279342651367
    5. ' else' → logprob: -4.988279342651367
    6. '\n' → logprob: -5.113279342651367
    7. '   ' → logprob: -7.738279342651367
    8. '  
' → logprob: -7.738279342651367
    9. ' 
' → logprob: -7.988279342651367
    10. '    
' → logprob: -7.988279342651367

Token 122: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.127557173371315
    2. ' else' → logprob: -2.1275572776794434
    3. '       ' → logprob: -7.502557277679443
    4. '	else' → logprob: -10.127556800842285
    5. 'elif' → logprob: -11.002556800842285
    6. '   ' → logprob: -12.252556800842285
    7. '
' → logprob: -12.377556800842285
    8. '<|end|>' → logprob: -12.502556800842285
    9. '#else' → logprob: -13.252556800842285
    10. '}else' → logprob: -13.377556800842285

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29034847021102905
    2. ':
' → logprob: -1.4153485298156738
    3. '{' → logprob: -5.665348529815674
    4. '           ' → logprob: -5.915348529815674
    5. '{
' → logprob: -6.415348529815674
    6. '       ' → logprob: -6.915348529815674
    7. '        ' → logprob: -9.915348052978516
    8. ' :
' → logprob: -9.915348052978516
    9. ' :' → logprob: -10.040348052978516
    10. '   ' → logprob: -10.040348052978516

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00596979632973671
    2. ':' → logprob: -6.130970001220703
    3. ':
' → logprob: -6.380970001220703
    4. ' self' → logprob: -7.880970001220703
    5. '{
' → logprob: -8.005970001220703
    6. '               ' → logprob: -8.130970001220703
    7. '       ' → logprob: -8.255970001220703
    8. 'self' → logprob: -8.755970001220703
    9. '   ' → logprob: -9.130970001220703
    10. '```' → logprob: -9.255970001220703

Token 125: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1352452039718628
    2. '           ' → logprob: -2.7602453231811523
    3. ' self' → logprob: -2.8852453231811523
    4. '               ' → logprob: -5.260245323181152
    5. '	self' → logprob: -6.885245323181152
    6. '[self' → logprob: -8.260245323181152
    7. ' ' → logprob: -8.885245323181152
    8. '       ' → logprob: -9.260245323181152
    9. ':self' → logprob: -9.510245323181152
    10. '{
' → logprob: -9.510245323181152

Token 126: '.par' (ID: 36294)
  Prédit: '.par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.par' → logprob: -0.0010463856160640717
    2. 'par' → logprob: -7.376046180725098
    3. '.rank' → logprob: -8.001046180725098
    4. '	par' → logprob: -10.001046180725098
    5. ' par' → logprob: -11.001046180725098
    6. '.' → logprob: -11.751046180725098
    7. ' .' → logprob: -13.001046180725098
    8. 'rank' → logprob: -13.626046180725098
    9. '[' → logprob: -13.751046180725098

Token 127: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -5.264322317088954e-05
    2. '[' → logprob: -9.875052452087402
    3. '[x' → logprob: -15.250052452087402
    4. 'y' → logprob: -15.250052452087402
    5. '[
' → logprob: -15.375052452087402
    6. '```' → logprob: -16.12505340576172
    7. '       ' → logprob: -16.50005340576172
    8. '[self' → logprob: -16.62505340576172
    9. '][' → logprob: -17.25005340576172
    10. '	y' → logprob: -17.37505340576172

Token 128: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.06099769473075867
    2. '=' → logprob: -3.560997724533081
    3. '=x' → logprob: -3.560997724533081
    4. ')=' → logprob: -6.185997486114502
    5. ']' → logprob: -8.43599796295166
    6. ' =' → logprob: -10.18599796295166
    7. '=y' → logprob: -10.68599796295166
    8. '}=' → logprob: -11.56099796295166
    9. '']=' → logprob: -12.31099796295166
    10. '"]=' → logprob: -13.31099796295166

Token 129: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.1008713702030946e-06
    2. ' x' → logprob: -13.125001907348633
    3. '	x' → logprob: -19.875001907348633
    4. ''x' → logprob: -21.000001907348633
    5. ')x' → logprob: -21.250001907348633
    6. '"x' → logprob: -21.500001907348633
    7. '[x' → logprob: -22.125001907348633
    8. '$x' → logprob: -22.375001907348633
    9. '<|end|>' → logprob: -23.375001907348633
    10. '   ' → logprob: -23.375001907348633

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9883195757865906
    2. '<|end|>' → logprob: -1.2383196353912354
    3. '
' → logprob: -1.8633196353912354
    4. '           ' → logprob: -2.6133196353912354
    5. ' if' → logprob: -3.1133196353912354
    6. 'if' → logprob: -3.7383196353912354
    7. '        
' → logprob: -4.488319396972656
    8. '            
' → logprob: -4.988319396972656
    9. ' 
' → logprob: -5.363319396972656
    10. '  
' → logprob: -5.738319396972656

Token 131: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25897249579429626
    2. '           ' → logprob: -2.633972406387329
    3. ' if' → logprob: -3.008972406387329
    4. 'if' → logprob: -3.508972406387329
    5. '
' → logprob: -4.008972644805908
    6. '        
' → logprob: -4.383972644805908
    7. '<|end|>' → logprob: -4.508972644805908
    8. '   ' → logprob: -4.633972644805908
    9. ' 
' → logprob: -4.633972644805908
    10. '            
' → logprob: -5.133972644805908

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001414426224073395
    2. ' if' → logprob: -9.500141143798828
    3. '           ' → logprob: -9.625141143798828
    4. '       ' → logprob: -15.875141143798828
    5. '1' → logprob: -16.125141143798828
    6. '
' → logprob: -16.375141143798828
    7. 'If' → logprob: -16.625141143798828
    8. '               ' → logprob: -17.000141143798828
    9. '   ' → logprob: -17.000141143798828
    10. '	if' → logprob: -17.000141143798828

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007106438861228526
    2. ' self' → logprob: -7.250710487365723
    3. '(self' → logprob: -15.375710487365723
    4. '
' → logprob: -15.500710487365723
    5. '[self' → logprob: -15.750710487365723
    6. '	self' → logprob: -17.37571144104004
    7. 'rank' → logprob: -17.37571144104004
    8. '<|end|>' → logprob: -17.87571144104004
    9. ':self' → logprob: -18.75071144104004
    10. 's' → logprob: -18.75071144104004

Token 134: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.3782830137643032e-05
    2. 'rank' → logprob: -11.37501335144043
    3. '_rank' → logprob: -13.12501335144043
    4. ' rank' → logprob: -15.75001335144043
    5. 'Rank' → logprob: -16.62501335144043
    6. 'ank' → logprob: -18.00001335144043
    7. '.' → logprob: -19.50001335144043
    8. '[self' → logprob: -19.87501335144043
    9. 'self' → logprob: -20.25001335144043
    10. ' .' → logprob: -20.62501335144043

Token 135: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.869017852295656e-06
    2. 'x' → logprob: -12.625006675720215
    3. '[' → logprob: -12.750006675720215
    4. '[self' → logprob: -14.500006675720215
    5. '[
' → logprob: -17.12500762939453
    6. '[s' → logprob: -17.37500762939453
    7. ' [' → logprob: -18.62500762939453
    8. ' x' → logprob: -19.25000762939453
    9. '[src' → logprob: -19.87500762939453
    10. '```' → logprob: -19.87500762939453

Token 136: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0032953477930277586
    2. ']==' → logprob: -5.753295421600342
    3. ' ==' → logprob: -10.253294944763184
    4. '==
' → logprob: -10.503294944763184
    5. ')==' → logprob: -10.753294944763184
    6. '[' → logprob: -11.253294944763184
    7. '=' → logprob: -11.378294944763184
    8. '()==' → logprob: -12.503294944763184
    9. '===' → logprob: -12.628294944763184
    10. '']==' → logprob: -13.503294944763184

Token 137: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.015305552864447e-05
    2. ' self' → logprob: -9.875060081481934
    3. '
' → logprob: -12.750060081481934
    4. '<|end|>' → logprob: -13.000060081481934
    5. '[self' → logprob: -13.250060081481934
    6. 'y' → logprob: -13.750060081481934
    7. '	self' → logprob: -15.500060081481934
    8. '(self' → logprob: -16.00006103515625
    9. ' ' → logprob: -17.00006103515625
    10. '=self' → logprob: -17.12506103515625

Token 138: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.08581256121397018
    2. 'rank' → logprob: -2.585812568664551
    3. '_rank' → logprob: -5.960812568664551
    4. '[y' → logprob: -6.085812568664551
    5. ' rank' → logprob: -6.960812568664551
    6. '[x' → logprob: -7.085812568664551
    7. 'Rank' → logprob: -8.46081256866455
    8. 'ank' → logprob: -10.21081256866455
    9. '.' → logprob: -11.83581256866455
    10. '[' → logprob: -13.58581256866455

Token 139: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.002482315758243203
    2. 'y' → logprob: -6.0024824142456055
    3. '[x' → logprob: -12.252482414245605
    4. '[' → logprob: -14.127482414245605
    5. ' y' → logprob: -14.627482414245605
    6. '	y' → logprob: -14.877482414245605
    7. '```' → logprob: -15.752482414245605
    8. '   ' → logprob: -16.75248146057129
    9. '[
' → logprob: -17.00248146057129
    10. '(y' → logprob: -17.12748146057129

Token 140: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016100885346531868
    2. ':
' → logprob: -4.141100883483887
    3. '):
' → logprob: -10.891100883483887
    4. '):' → logprob: -11.016100883483887
    5. ']:' → logprob: -11.016100883483887
    6. '<|end|>' → logprob: -12.891100883483887
    7. ']:
' → logprob: -13.016100883483887
    8. '+:' → logprob: -13.141100883483887
    9. '>:' → logprob: -13.391100883483887
    10. ':return' → logprob: -13.641100883483887

Token 141: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005452647339552641
    2. '           ' → logprob: -6.005452632904053
    3. '   ' → logprob: -6.255452632904053
    4. ' ' → logprob: -8.130453109741211
    5. ' self' → logprob: -8.630453109741211
    6. '1' → logprob: -8.755453109741211
    7. '<|end|>' → logprob: -9.505453109741211
    8. '  ' → logprob: -9.630453109741211
    9. '	       ' → logprob: -10.005453109741211
    10. '	           ' → logprob: -10.130453109741211

Token 142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25194430351257324
    2. ' self' → logprob: -1.5019443035125732
    3. '	self' → logprob: -12.626944541931152
    4. '               ' → logprob: -12.751944541931152
    5. 's' → logprob: -12.876944541931152
    6. '                   ' → logprob: -13.001944541931152
    7. '   ' → logprob: -13.626944541931152
    8. '[self' → logprob: -13.876944541931152
    9. '           ' → logprob: -14.251944541931152
    10. ' ' → logprob: -14.751944541931152

Token 143: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.650518920039758e-06
    2. '[x' → logprob: -13.500003814697266
    3. 'rank' → logprob: -13.875003814697266
    4. '_rank' → logprob: -14.125003814697266
    5. ' rank' → logprob: -15.375003814697266
    6. '.' → logprob: -15.625003814697266
    7. 'Rank' → logprob: -15.875003814697266
    8. ' .' → logprob: -17.125003814697266
    9. '
' → logprob: -19.875003814697266
    10. '.x' → logprob: -20.125003814697266

Token 144: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. 'x' → logprob: -15.750000953674316
    4. '	x' → logprob: -18.125
    5. ' [' → logprob: -18.25
    6. '[
' → logprob: -18.875
    7. '[int' → logprob: -18.875
    8. '[self' → logprob: -19.0
    9. '```' → logprob: -19.5
    10. '[s' → logprob: -20.0

Token 145: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.47560468316078186
    2. '+=' → logprob: -0.9756046533584595
    3. ']' → logprob: -6.97560453414917
    4. ' +=' → logprob: -7.97560453414917
    5. '[' → logprob: -8.975605010986328
    6. '```' → logprob: -9.725605010986328
    7. '+' → logprob: -10.225605010986328
    8. ']+' → logprob: -10.975605010986328
    9. '+='' → logprob: -13.600605010986328
    10. '   ' → logprob: -13.600605010986328

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.375
    4. '
' → logprob: -20.875
    5. '１' → logprob: -21.875
    6. '  ' → logprob: -22.125
    7. '<|end|>' → logprob: -22.25
    8. '```' → logprob: -22.875
    9. '۱' → logprob: -23.5
    10. '

' → logprob: -24.25

Token 147: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07200158387422562
    2. '<|end|>' → logprob: -2.9470016956329346
    3. '       ' → logprob: -4.3220014572143555
    4. '\n' → logprob: -6.9470014572143555
    5. '   ' → logprob: -7.0720014572143555
    6. 'return' → logprob: -7.5720014572143555
    7. ' return' → logprob: -8.072001457214355
    8. ')' → logprob: -9.072001457214355
    9. ':return' → logprob: -9.072001457214355
    10. '```' → logprob: -9.197001457214355

Token 148: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8646172881126404
    2. '\n' → logprob: -1.2396173477172852
    3. '<|end|>' → logprob: -1.4896173477172852
    4. '       ' → logprob: -3.489617347717285
    5. '   ' → logprob: -4.864617347717285
    6. ' ' → logprob: -5.364617347717285
    7. ' 
' → logprob: -5.614617347717285
    8. ' return' → logprob: -5.989617347717285
    9. '```' → logprob: -6.114617347717285
    10. 'return' → logprob: -6.364617347717285

Token 149: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0073503428138792515
    2. ' return' → logprob: -5.507350444793701
    3. '       ' → logprob: -5.757350444793701
    4. '
' → logprob: -9.632349967956543
    5. '   ' → logprob: -10.757349967956543
    6. 'True' → logprob: -11.507349967956543
    7. 'true' → logprob: -12.632349967956543
    8. '	return' → logprob: -12.882349967956543
    9. '               ' → logprob: -13.007349967956543
    10. '           ' → logprob: -13.757349967956543

Token 150: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. '(True' → logprob: -18.143150329589844
    4. '=True' → logprob: -20.893150329589844
    5. '_true' → logprob: -21.768150329589844
    6. '.True' → logprob: -22.268150329589844
    7. 'None' → logprob: -22.643150329589844
    8. ' ' → logprob: -23.268150329589844
    9. 'true' → logprob: -23.393150329589844
    10. 'False' → logprob: -23.893150329589844

Token 151: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12575426697731018
    2. '<|end|>' → logprob: -2.2507543563842773
    3. 'n' → logprob: -5.125754356384277
    4. 'def' → logprob: -6.125754356384277
    5. '\n' → logprob: -6.375754356384277
    6. '

' → logprob: -6.875754356384277
    7. '<|end|>' → logprob: -8.000754356384277
    8. '#' → logprob: -8.000754356384277
    9. '(n' → logprob: -8.250754356384277
    10. '```' → logprob: -8.875754356384277

Token 152: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40813836455345154
    2. 'def' → logprob: -1.158138394355774
    3. 'd' → logprob: -5.033138275146484
    4. '#' → logprob: -5.158138275146484
    5. 'N' → logprob: -5.283138275146484
    6. ' ' → logprob: -6.908138275146484
    7. 'class' → logprob: -7.408138275146484
    8. 'k' → logprob: -8.283138275146484
    9. 'a' → logprob: -8.283138275146484
    10. '
' → logprob: -8.408138275146484

Token 153: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0019856137223541737
    2. ' solve' → logprob: -6.251985549926758
    3. ' dfs' → logprob: -10.376985549926758
    4. 'main' → logprob: -11.376985549926758
    5. '	main' → logprob: -12.251985549926758
    6. ' ' → logprob: -12.876985549926758
    7. 'solve' → logprob: -13.751985549926758
    8. ' resolve' → logprob: -14.001985549926758
    9. ' input' → logprob: -14.251985549926758
    10. ' find' → logprob: -14.376985549926758

Token 154: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004007600946351886
    2. '(' → logprob: -8.00040054321289
    3. '()' → logprob: -10.00040054321289
    4. ' ():' → logprob: -11.37540054321289
    5. '():
' → logprob: -11.87540054321289
    6. ':' → logprob: -14.37540054321289
    7. '(:' → logprob: -14.62540054321289
    8. '(":' → logprob: -15.37540054321289
    9. '(
' → logprob: -16.62540054321289
    10. '):' → logprob: -18.12540054321289

Token 155: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3617011308670044
    2. 'n' → logprob: -1.3617011308670044
    3. '   ' → logprob: -3.111701011657715
    4. ' ' → logprob: -6.736701011657715
    5. '(n' → logprob: -7.486701011657715
    6. '	n' → logprob: -7.611701011657715
    7. ' input' → logprob: -8.986701011657715
    8. ' import' → logprob: -9.236701011657715
    9. 'import' → logprob: -9.361701011657715
    10. '    ' → logprob: -10.111701011657715

Token 156: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.045436881482601166
    2. ' n' → logprob: -3.1704368591308594
    3. 'N' → logprob: -6.295436859130859
    4. 'import' → logprob: -8.42043685913086
    5. '   ' → logprob: -8.92043685913086
    6. ' N' → logprob: -9.04543685913086
    7. 'input' (adapté à ' input') → logprob: -9.67043685913086
    8. ' input' → logprob: -10.67043685913086
    9. ' ' → logprob: -11.29543685913086
    10. ' import' → logprob: -11.54543685913086

Token 157: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012970803305506706
    2. '=' → logprob: -5.387970924377441
    3. '_data' → logprob: -5.637970924377441
    4. ' =' → logprob: -6.137970924377441
    5. '(' → logprob: -7.137970924377441
    6. '_' → logprob: -7.262970924377441
    7. '_line' → logprob: -7.637970924377441
    8. '().' → logprob: -8.762970924377441
    9. 'data' → logprob: -9.387970924377441
    10. '_str' → logprob: -9.762970924377441

Token 158: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023650135844945908
    2. '.stdin' → logprob: -3.7736501693725586
    3. '.stdout' → logprob: -8.648650169372559
    4. '.readline' → logprob: -8.773650169372559
    5. '.argv' → logprob: -10.523650169372559
    6. ' .' → logprob: -10.773650169372559
    7. '.input' → logprob: -11.273650169372559
    8. '.​' → logprob: -12.148650169372559
    9. '.std' → logprob: -13.148650169372559
    10. '.stderr' → logprob: -13.523650169372559

Token 159: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00011450992315076292
    2. '.read' → logprob: -9.375114440917969
    3. '.' → logprob: -11.000114440917969
    4. 'read' → logprob: -11.500114440917969
    5. ' readline' → logprob: -13.750114440917969
    6. '.stdin' → logprob: -14.375114440917969
    7. '.readlines' → logprob: -14.500114440917969
    8. '.buffer' → logprob: -15.375114440917969
    9. '_read' → logprob: -15.375114440917969
    10. 'input' → logprob: -17.12511444091797

Token 160: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014293139800429344
    2. '().' → logprob: -4.389293193817139
    3. '()
' → logprob: -6.389293193817139
    4. '(' → logprob: -10.13929271697998
    5. '()\' → logprob: -10.76429271697998
    6. ')' → logprob: -11.38929271697998
    7. '())' → logprob: -12.01429271697998
    8. ' ()' → logprob: -12.51429271697998
    9. '()<' → logprob: -12.76429271697998
    10. '   ' → logprob: -12.88929271697998

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5830766558647156
    2. 'n' → logprob: -0.8330766558647156
    3. ' n' → logprob: -5.833076477050781
    4. 'N' → logprob: -5.958076477050781
    5. '
' → logprob: -6.958076477050781
    6. '	n' → logprob: -8.708076477050781
    7. ' N' → logprob: -8.833076477050781
    8. '  ' → logprob: -10.208076477050781
    9. ',n' → logprob: -10.208076477050781
    10. '    
' → logprob: -10.333076477050781

Token 162: ' while' (ID: 2049)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6939098238945007
    2. 'n' → logprob: -0.6939098238945007
    3. '   ' → logprob: -7.943909645080566
    4. 'Q' → logprob: -8.568909645080566
    5. 'h' → logprob: -9.943909645080566
    6. ' n' → logprob: -10.068909645080566
    7. ' N' → logprob: -10.443909645080566
    8. 'H' → logprob: -10.818909645080566
    9. 't' → logprob: -10.943909645080566
    10. 'q' → logprob: -11.318909645080566

Token 163: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.012527070008218288
    2. 'True' → logprob: -4.387526988983154
    3. '(True' → logprob: -11.262527465820312
    4. '1' → logprob: -12.637527465820312
    5. ' ' → logprob: -14.387527465820312
    6. '=True' → logprob: -14.887527465820312
    7. ' Tru' → logprob: -14.887527465820312
    8. '_true' → logprob: -18.137527465820312
    9. '.True' → logprob: -18.137527465820312
    10. ' T' → logprob: -18.387527465820312

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005440961103886366
    2. ':
' → logprob: -8.000544548034668
    3. ' :' → logprob: -8.625544548034668
    4. '():' → logprob: -11.375544548034668
    5. '):' → logprob: -11.500544548034668
    6. ',' → logprob: -12.500544548034668
    7. '   ' → logprob: -13.375544548034668
    8. ' :
' → logprob: -14.375544548034668
    9. ':**' → logprob: -14.500544548034668
    10. '):
' → logprob: -15.750544548034668

Token 165: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019214674830436707
    2. '       ' → logprob: -4.019214630126953
    3. '    ' → logprob: -7.394214630126953
    4. 'n' → logprob: -8.894214630126953
    5. ' try' → logprob: -9.144214630126953
    6. ' ' → logprob: -9.644214630126953
    7. '   ' → logprob: -10.519214630126953
    8. '  ' → logprob: -10.519214630126953
    9. '    
' → logprob: -10.769214630126953
    10. ' line' → logprob: -11.144214630126953

Token 166: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3463015854358673
    2. ' n' → logprob: -1.346301555633545
    3. 'N' → logprob: -4.221301555633545
    4. ' line' → logprob: -5.096301555633545
    5. ' N' → logprob: -5.846301555633545
    6. 'l' → logprob: -6.221301555633545
    7. 's' (adapté à ' s') → logprob: -7.096301555633545
    8. 'h' → logprob: -7.096301555633545
    9. ' l' → logprob: -7.221301555633545
    10. '   ' → logprob: -7.221301555633545

Token 167: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009234884637407959
    2. ' =' → logprob: -7.2509236335754395
    3. '=line' → logprob: -9.000923156738281
    4. '=input' → logprob: -10.250923156738281
    5. '=int' → logprob: -10.750923156738281
    6. 'tr' → logprob: -11.750923156738281
    7. '=s' → logprob: -12.000923156738281
    8. '=sys' → logprob: -12.625923156738281
    9. '=[]' → logprob: -13.250923156738281
    10. '=n' → logprob: -13.250923156738281

Token 168: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013411621563136578
    2. ' =' → logprob: -4.388411521911621
    3. '=input' → logprob: -7.138411521911621
    4. '=line' → logprob: -10.263411521911621
    5. ',' → logprob: -10.763411521911621
    6. ' ' → logprob: -11.013411521911621
    7. '=sys' → logprob: -12.013411521911621
    8. '=

' → logprob: -12.513411521911621
    9. '=s' → logprob: -12.638411521911621
    10. '=list' → logprob: -12.763411521911621

Token 169: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10854315012693405
    2. ' map' → logprob: -2.3585431575775146
    3. 'input' → logprob: -4.8585429191589355
    4. ' input' → logprob: -7.6085429191589355
    5. 'list' → logprob: -10.733543395996094
    6. 'm' → logprob: -11.733543395996094
    7. '	map' → logprob: -12.233543395996094
    8. ' ' → logprob: -12.608543395996094
    9. '(map' → logprob: -13.233543395996094
    10. ' list' → logprob: -13.608543395996094

Token 170: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05172941833734512
    2. '(' → logprob: -3.301729440689087
    3. '(str' → logprob: -4.301729202270508
    4. '(input' → logprob: -11.051729202270508
    5. '(in' → logprob: -11.426729202270508
    6. 'int' → logprob: -11.676729202270508
    7. '(
' → logprob: -12.176729202270508
    8. 'str' → logprob: -12.926729202270508
    9. ' (' → logprob: -13.676729202270508
    10. '(list' → logprob: -13.801729202270508

Token 171: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.062262315303087234
    2. ',' → logprob: -2.8122622966766357
    3. '(input' → logprob: -8.687262535095215
    4. 'input' → logprob: -10.187262535095215
    5. '(' → logprob: -10.187262535095215
    6. '(sys' → logprob: -11.187262535095215
    7. ')' → logprob: -11.687262535095215
    8. ',(' → logprob: -11.937262535095215
    9. ' ,' → logprob: -12.062262535095215
    10. 'sys' → logprob: -12.562262535095215

Token 172: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.318681188422488e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -16.62501335144043
    4. '(' → logprob: -16.75001335144043
    5. '()
' → logprob: -17.37501335144043
    6. '())' → logprob: -17.87501335144043
    7. ')' → logprob: -18.87501335144043
    8. '().
' → logprob: -19.62501335144043
    9. '	' → logprob: -20.50001335144043
    10. '   ' → logprob: -20.50001335144043

Token 173: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011480189859867096
    2. 'strip' → logprob: -4.511480331420898
    3. 'rstrip' → logprob: -7.761480331420898
    4. ')' → logprob: -13.136480331420898
    5. ' split' → logprob: -13.261480331420898
    6. 'read' → logprob: -13.886480331420898
    7. '().' → logprob: -14.011480331420898
    8. '(split' → logprob: -14.386480331420898
    9. ').' → logprob: -15.886480331420898
    10. ' strip' → logprob: -16.0114803314209

Token 174: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013185526244342327
    2. ')' → logprob: -4.888185501098633
    3. '()' → logprob: -5.638185501098633
    4. '())
' → logprob: -6.638185501098633
    5. '()))' → logprob: -7.388185501098633
    6. '))' → logprob: -10.013185501098633
    7. '(' → logprob: -11.138185501098633
    8. '()))
' → logprob: -12.138185501098633
    9. '()
' → logprob: -12.388185501098633
    10. ')
' → logprob: -13.388185501098633

Token 175: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046006932854652405
    2. '<|end|>' → logprob: -4.54600715637207
    3. ' 
' → logprob: -4.92100715637207
    4. '  
' → logprob: -5.04600715637207
    5. ',' → logprob: -5.42100715637207
    6. '       ' → logprob: -5.67100715637207
    7. ')' → logprob: -5.92100715637207
    8. '        
' → logprob: -6.17100715637207
    9. ')
' → logprob: -6.54600715637207
    10. '        ' → logprob: -6.67100715637207

Token 176: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07895852625370026
    2. 'if' (adapté à ' if') → logprob: -3.203958511352539
    3. ' if' → logprob: -3.453958511352539
    4. '       ' → logprob: -7.328958511352539
    5. '\n' → logprob: -7.328958511352539
    6. '<|end|>' → logprob: -7.328958511352539
    7. ' 
' → logprob: -7.578958511352539
    8. '        
' → logprob: -8.328958511352539
    9. 'If' → logprob: -8.703958511352539
    10. ')' → logprob: -8.953958511352539

Token 177: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0788925439119339
    2. 's' → logprob: -2.578892469406128
    3. ' not' → logprob: -13.828892707824707
    4. '(s' → logprob: -13.828892707824707
    5. ' (' → logprob: -14.703892707824707
    6. ' ' → logprob: -15.453892707824707
    7. '(' → logprob: -15.953892707824707
    8. ' ' → logprob: -16.95389175415039
    9. 'not' → logprob: -18.70389175415039
    10. '	s' → logprob: -18.70389175415039

Token 178: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003612901084125042
    2. ' ==' → logprob: -5.628612995147705
    3. '===' → logprob: -12.503612518310547
    4. '=' → logprob: -12.628612518310547
    5. '==
' → logprob: -13.253612518310547
    6. '0' → logprob: -13.503612518310547
    7. '()==' → logprob: -14.253612518310547
    8. ')==' → logprob: -14.628612518310547
    9. '```' → logprob: -15.128612518310547
    10. ' ' → logprob: -15.128612518310547

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011045700375689194
    2. ' ' → logprob: -9.750110626220703
    3. 'd' → logprob: -9.875110626220703
    4. ' d' → logprob: -15.125110626220703
    5. '０' → logprob: -15.250110626220703
    6. '۰' → logprob: -17.250110626220703
    7. ' ' → logprob: -17.375110626220703
    8. '```' → logprob: -17.750110626220703
    9. '
' → logprob: -17.937610626220703
    10. '  ' → logprob: -18.687610626220703

Token 180: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.474081814289093
    2. 'and' → logprob: -0.974081814289093
    3. ' ' → logprob: -12.974081993103027
    4. '	and' → logprob: -13.474081993103027
    5. ' a' → logprob: -14.724081993103027
    6. '<|end|>' → logprob: -15.474081993103027
    7. 'a' → logprob: -15.599081993103027
    8. ' or' → logprob: -16.34908103942871
    9. '0' → logprob: -16.34908103942871
    10. '&&' → logprob: -17.34908103942871

Token 181: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0788949653506279
    2. 'd' → logprob: -2.578894853591919
    3. '	d' → logprob: -12.95389461517334
    4. '   ' → logprob: -13.70389461517334
    5. ' ' → logprob: -14.20389461517334
    6. ' ' → logprob: -14.45389461517334
    7. '  ' → logprob: -15.32889461517334
    8. '    ' → logprob: -16.328895568847656
    9. '
' → logprob: -17.578895568847656
    10. '       ' → logprob: -17.828895568847656

Token 182: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -4.1080467781284824e-05
    2. ' ==' → logprob: -10.250041007995605
    3. '0' → logprob: -12.625041007995605
    4. '=' → logprob: -13.250041007995605
    5. ']==' → logprob: -15.625041007995605
    6. '==
' → logprob: -15.750041007995605
    7. ')==' → logprob: -16.125041961669922
    8. '===' → logprob: -16.375041961669922
    9. '()==' → logprob: -16.500041961669922
    10. '```' → logprob: -17.625041961669922

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '<|end|>' → logprob: -16.25010871887207
    4. '   ' → logprob: -16.87510871887207
    5. '  ' → logprob: -17.50010871887207
    6. '    ' → logprob: -19.25010871887207
    7. 's' → logprob: -19.81260871887207
    8. '۰' → logprob: -20.00010871887207
    9. '=' → logprob: -20.06260871887207
    10. '```' → logprob: -20.06260871887207

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038536328822374344
    2. ':
' → logprob: -3.288536310195923
    3. '           ' → logprob: -7.663536548614502
    4. '       ' → logprob: -11.538536071777344
    5. ':return' → logprob: -11.663536071777344
    6. ':
' → logprob: -12.788536071777344
    7. '   ' → logprob: -14.288536071777344
    8. '.' → logprob: -14.288536071777344
    9. ':

' → logprob: -14.413536071777344
    10. ',' → logprob: -14.413536071777344

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021046982146799564
    2. '       ' → logprob: -6.377104759216309
    3. '		' → logprob: -8.877104759216309
    4. ':' → logprob: -9.627104759216309
    5. '          ' → logprob: -10.252104759216309
    6. '	break' → logprob: -10.377104759216309
    7. '   ' → logprob: -10.377104759216309
    8. '	       ' → logprob: -11.002104759216309
    9. ' break' → logprob: -11.127104759216309
    10. ',' → logprob: -11.502104759216309

Token 186: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.016627661883831024
    2. ' break' → logprob: -4.266627788543701
    3. 'return' → logprob: -6.016627788543701
    4. '	break' → logprob: -11.516627311706543
    5. ' return' → logprob: -12.016627311706543
    6. '           ' → logprob: -12.266627311706543
    7. '       ' → logprob: -13.516627311706543
    8. '   ' → logprob: -13.766627311706543
    9. '```' → logprob: -16.14162826538086
    10. '               ' → logprob: -16.64162826538086

Token 187: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5371171236038208
    2. '       ' → logprob: -1.5371171236038208
    3. 'edges' → logprob: -2.1621170043945312
    4. ' edges' → logprob: -2.5371170043945312
    5. 'graph' → logprob: -6.162117004394531
    6. ' graph' → logprob: -6.912117004394531
    7. 'u' → logprob: -7.412117004394531
    8. 'n' → logprob: -7.537117004394531
    9. 'e' → logprob: -7.537117004394531
    10. 'edge' → logprob: -7.912117004394531

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02738991752266884
    2. '   ' → logprob: -4.277390003204346
    3. '
' → logprob: -5.652390003204346
    4. 'n' → logprob: -5.902390003204346
    5. '        
' → logprob: -5.902390003204346
    6. ' n' → logprob: -7.027390003204346
    7. ' u' → logprob: -7.277390003204346
    8. 'u' → logprob: -7.652390003204346
    9. ' uf' → logprob: -7.777390003204346
    10. '    ' → logprob: -7.902390003204346

Token 189: ' edges' (ID: 22569)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.035579364746809006
    2. 'edges' (adapté à ' edges') → logprob: -4.035579204559326
    3. ' uf' → logprob: -4.160579204559326
    4. ' edges' → logprob: -7.660579204559326
    5. 'nodes' → logprob: -8.660579681396484
    6. 'u' → logprob: -8.660579681396484
    7. '   ' → logprob: -8.660579681396484
    8. 'ufs' → logprob: -8.785579681396484
    9. 'n' → logprob: -9.035579681396484
    10. 'edge' → logprob: -9.660579681396484

Token 190: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.583789050579071
    2. ' =' → logprob: -0.958789050579071
    3. '=[]' → logprob: -2.833789110183716
    4. '={}' → logprob: -10.833788871765137
    5. '=[' → logprob: -11.083788871765137
    6. '=[]
' → logprob: -11.458788871765137
    7. '＝' → logprob: -11.583788871765137
    8. '=[],' → logprob: -12.333788871765137
    9. '[]' → logprob: -12.833788871765137
    10. '=[]
' → logprob: -13.208788871765137

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2555524408817291
    2. '   ' → logprob: -2.3805525302886963
    3. ' for' → logprob: -2.5055525302886963
    4. 'for' → logprob: -3.0055525302886963
    5. '<|end|>' → logprob: -6.630552291870117
    6. '	for' → logprob: -8.755552291870117
    7. '
' → logprob: -9.630552291870117
    8. 'total' → logprob: -9.880552291870117
    9. ' edges' → logprob: -10.505552291870117
    10. ' ' → logprob: -10.630552291870117

Token 192: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2952280640602112
    2. 'total' → logprob: -2.5452280044555664
    3. 'uf' → logprob: -2.7952280044555664
    4. ' for' → logprob: -3.0452280044555664
    5. ' uf' → logprob: -3.2952280044555664
    6. 'max' → logprob: -4.420228004455566
    7. 'nodes' → logprob: -4.670228004455566
    8. 'sum' → logprob: -6.420228004455566
    9. ' total' → logprob: -6.545228004455566
    10. 'ans' → logprob: -6.670228004455566

Token 193: ' hot' (ID: 3648)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049932099878787994
    2. ' for' → logprob: -3.4249320030212402
    3. 'total' → logprob: -4.29993200302124
    4. ' total' → logprob: -7.04993200302124
    5. 'cost' → logprob: -7.79993200302124
    6. 'nodes' → logprob: -8.174932479858398
    7. 'max' → logprob: -8.549932479858398
    8. 'sum' → logprob: -8.924932479858398
    9. 'node' → logprob: -9.299932479858398
    10. 'mst' → logprob: -9.674932479858398

Token 194: ' springs' (ID: 60986)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9848970174789429
    2. 'fix' → logprob: -1.1098970174789429
    3. 'w' → logprob: -2.9848971366882324
    4. '       ' → logprob: -3.4848971366882324
    5. 's' → logprob: -3.4848971366882324
    6. '_edges' → logprob: -3.8598971366882324
    7. '=' → logprob: -3.9848971366882324
    8. 'lines' → logprob: -4.109897136688232
    9. 'wire' → logprob: -4.359897136688232
    10. ' for' → logprob: -4.359897136688232

Token 195: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5959482192993164
    2. ' for' → logprob: -0.8459482192993164
    3. ' =' → logprob: -4.845948219299316
    4. '=' → logprob: -6.220948219299316
    5. 'count' → logprob: -6.470948219299316
    6. '   ' → logprob: -6.720948219299316
    7. '_nodes' → logprob: -6.845948219299316
    8. 'total' → logprob: -6.970948219299316
    9. '_count' → logprob: -7.095948219299316
    10. 'nodes' → logprob: -7.345948219299316

Token 196: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4320097267627716
    2. '=' → logprob: -1.0570096969604492
    3. '_map' → logprob: -6.932009696960449
    4. '_offset' → logprob: -7.307009696960449
    5. '_mapping' → logprob: -7.307009696960449
    6. 's' → logprob: -7.932009696960449
    7. ' ' → logprob: -9.18200969696045
    8. 'offset' → logprob: -9.43200969696045
    9. 'es' → logprob: -9.68200969696045
    10. '_' → logprob: -9.93200969696045

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4171501100063324
    2. '{}' → logprob: -1.4171501398086548
    3. ' ' → logprob: -2.7921500205993652
    4. '1' → logprob: -4.542150020599365
    5. '[]' → logprob: -4.792150020599365
    6. ' {}' → logprob: -5.042150020599365
    7. ' []' → logprob: -5.917150020599365
    8. '{' → logprob: -6.167150020599365
    9. 's' → logprob: -6.292150020599365
    10. 'set' → logprob: -6.917150020599365

Token 198: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.14031648635864258
    2. '[]' → logprob: -2.3903164863586426
    3. '0' → logprob: -3.7653164863586426
    4. 'set' → logprob: -5.015316486358643
    5. '[]
' → logprob: -5.640316486358643
    6. '{' → logprob: -6.390316486358643
    7. 's' → logprob: -6.765316486358643
    8. '[' → logprob: -6.890316486358643
    9. '{}
' → logprob: -7.515316486358643
    10. 'dict' → logprob: -7.765316486358643

Token 199: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9096899628639221
    2. '<|end|>' → logprob: -1.4096899032592773
    3. ' to' → logprob: -2.7846899032592773
    4. '
' → logprob: -2.9096899032592773
    5. ' for' → logprob: -3.0346899032592773
    6. 'd' → logprob: -3.1596899032592773
    7. '-based' → logprob: -3.2846899032592773
    8. 's' → logprob: -4.159689903259277
    9. ',d' → logprob: -4.534689903259277
    10. ' #' → logprob: -4.659689903259277

Token 200: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007008044049143791
    2. ' s' → logprob: -5.132008075714111
    3. 'd' → logprob: -6.882008075714111
    4. ' d' → logprob: -11.132007598876953
    5. '
' → logprob: -11.257007598876953
    6. '   ' → logprob: -11.882007598876953
    7. '(s' → logprob: -12.007007598876953
    8. ' ' → logprob: -12.882007598876953
    9. '	s' → logprob: -13.382007598876953
    10. '{s' → logprob: -13.632007598876953

Token 201: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.809429407119751
    2. ' for' → logprob: -1.184429407119751
    3. 'for' → logprob: -2.059429407119751
    4. '   ' → logprob: -3.059429407119751
    5. '<|end|>' → logprob: -3.184429407119751
    6. ' edges' → logprob: -5.184429168701172
    7. 'edges' → logprob: -5.184429168701172
    8. ',' → logprob: -5.309429168701172
    9. '<|end|>' → logprob: -5.684429168701172
    10. '
' → logprob: -5.809429168701172

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.250014305114746
    3. '-' → logprob: -15.000014305114746
    4. '   ' → logprob: -15.375014305114746
    5. '2' → logprob: -15.625014305114746
    6. '
' → logprob: -15.625014305114746
    7. '```' → logprob: -16.87501335144043
    8. '

' → logprob: -18.00001335144043
    9. '  ' → logprob: -18.00001335144043
    10. ')' → logprob: -18.00001335144043

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06966929137706757
    2. ' for' → logprob: -2.944669246673584
    3. 'for' → logprob: -5.069669246673584
    4. ',' → logprob: -5.819669246673584
    5. '<|end|>' → logprob: -6.069669246673584
    6. '
' → logprob: -6.944669246673584
    7. '        
' → logprob: -7.569669246673584
    8. ' edges' → logprob: -7.694669246673584
    9. 'edges' → logprob: -7.819669246673584
    10. '   ' → logprob: -8.194669723510742

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13377413153648376
    2. ' for' → logprob: -2.5087740421295166
    3. 'for' → logprob: -3.8837740421295166
    4. '<|end|>' → logprob: -4.508774280548096
    5. 'edges' → logprob: -5.258774280548096
    6. '   ' → logprob: -5.758774280548096
    7. ' edges' → logprob: -6.508774280548096
    8. ',' → logprob: -7.508774280548096
    9. '	for' → logprob: -8.008773803710938
    10. 'd' → logprob: -8.883773803710938

Token 205: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42307424545288086
    2. 'uf' → logprob: -1.2980742454528809
    3. ' for' → logprob: -3.173074245452881
    4. ' uf' → logprob: -4.173074245452881
    5. '   ' → logprob: -6.173074245452881
    6. 'edges' → logprob: -7.048074245452881
    7. '       ' → logprob: -7.298074245452881
    8. 'd' → logprob: -7.423074245452881
    9. 'hot' → logprob: -7.423074245452881
    10. 'roads' → logprob: -7.423074245452881

Token 206: ' districts' (ID: 46334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.537030041217804
    2. ' for' → logprob: -0.912030041217804
    3. ' h' → logprob: -5.787030220031738
    4. ' d' → logprob: -6.412030220031738
    5. '   ' → logprob: -7.162030220031738
    6. ' roads' → logprob: -7.662030220031738
    7. '```' → logprob: -7.787030220031738
    8. 'h' → logprob: -7.912030220031738
    9. ' road' → logprob: -8.224530220031738
    10. '       ' → logprob: -8.224530220031738

Token 207: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6226229667663574
    2. ' =' → logprob: -1.6226229667663574
    3. ' idx' → logprob: -1.9976229667663574
    4. '_idx' → logprob: -3.1226229667663574
    5. '   ' → logprob: -3.9976229667663574
    6. ':' → logprob: -4.247622966766357
    7. '       ' → logprob: -4.247622966766357
    8. '=' → logprob: -4.497622966766357
    9. 'from' → logprob: -5.497622966766357
    10. '
' → logprob: -5.622622966766357

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009834124706685543
    2. 's' → logprob: -5.634834289550781
    3. ' :' → logprob: -5.634834289550781
    4. '=' → logprob: -7.134834289550781
    5. ' s' → logprob: -7.509834289550781
    6. ' =' → logprob: -7.634834289550781
    7. 'from' → logprob: -7.634834289550781
    8. 'd' → logprob: -8.759834289550781
    9. ' from' → logprob: -9.884834289550781
    10. '   ' → logprob: -10.134834289550781

Token 209: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1608186662197113
    2. 's' → logprob: -1.9108186960220337
    3. '0' → logprob: -8.035819053649902
    4. ' ' → logprob: -8.410819053649902
    5. ' range' → logprob: -10.660819053649902
    6. ' d' → logprob: -11.660819053649902
    7. 'd' → logprob: -12.035819053649902
    8. 'range' → logprob: -12.160819053649902
    9. ' ' → logprob: -14.035819053649902
    10. '[' → logprob: -14.660819053649902

Token 210: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2520063817501068
    2. '<|end|>' → logprob: -1.8770064115524292
    3. 'to' → logprob: -3.1270062923431396
    4. '+' → logprob: -4.252006530761719
    5. '<|end|>' → logprob: -5.002006530761719
    6. ' ' → logprob: -6.127006530761719
    7. ',' → logprob: -7.502006530761719
    8. '
' → logprob: -7.752006530761719
    9. '	to' → logprob: -7.877006530761719
    10. '   ' → logprob: -8.627006530761719

Token 211: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00021057340200059116
    2. ' s' → logprob: -8.500210762023926
    3. '   ' → logprob: -12.750210762023926
    4. '
' → logprob: -12.750210762023926
    5. ' ' → logprob: -14.375210762023926
    6. '(s' → logprob: -15.875210762023926
    7. '       ' → logprob: -16.12520980834961
    8. '  ' → logprob: -16.37520980834961
    9. '     ' → logprob: -16.75020980834961
    10. '    ' → logprob: -16.75020980834961

Token 212: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.021382516250014305
    2. '+' → logprob: -4.0213823318481445
    3. ' +' → logprob: -6.0213823318481445
    4. 'd' → logprob: -7.1463823318481445
    5. '+
' → logprob: -12.271382331848145
    6. ' d' → logprob: -12.771382331848145
    7. '-' → logprob: -13.271382331848145
    8. '+s' → logprob: -13.896382331848145
    9. '+D' → logprob: -14.146382331848145
    10. ' ' → logprob: -14.271382331848145

Token 213: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07331407815217972
    2. '       ' → logprob: -2.6983141899108887
    3. 'edges' → logprob: -6.698314189910889
    4. '_edges' → logprob: -7.198314189910889
    5. '   ' → logprob: -7.948314189910889
    6. ' edges' → logprob: -8.32331371307373
    7. '        
' → logprob: -8.82331371307373
    8. '+' → logprob: -9.07331371307373
    9. 's' → logprob: -9.32331371307373
    10. '-
' → logprob: -9.57331371307373

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'd' → logprob: -16.750001907348633
    4. '2' → logprob: -18.250001907348633
    5. 's' → logprob: -18.875001907348633
    6. '１' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '
' → logprob: -19.750001907348633
    9. '<|end|>' → logprob: -19.875001907348633
    10. '<|end|>' → logprob: -19.875001907348633

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16939173638820648
    2. 'edges' → logprob: -2.794391632080078
    3. '<|end|>' → logprob: -3.294391632080078
    4. 'for' → logprob: -3.544391632080078
    5. ' for' → logprob: -3.919391632080078
    6. ' edges' → logprob: -5.419391632080078
    7. '<|end|>' → logprob: -6.544391632080078
    8. '        
' → logprob: -6.919391632080078
    9. '   ' → logprob: -7.794391632080078
    10. '(edges' → logprob: -8.419391632080078

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12965402007102966
    2. ' for' → logprob: -2.8796539306640625
    3. 'for' → logprob: -3.0046539306640625
    4. '<|end|>' → logprob: -4.7546539306640625
    5. 'edges' → logprob: -5.5046539306640625
    6. '   ' → logprob: -6.7546539306640625
    7. '	for' → logprob: -7.1296539306640625
    8. ' edges' → logprob: -7.6296539306640625
    9. '<|end|>' → logprob: -8.379653930664062
    10. '        
' → logprob: -9.254653930664062

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4548999071121216
    2. ' for' → logprob: -1.3298999071121216
    3. 'uf' → logprob: -2.579899787902832
    4. ' uf' → logprob: -4.079899787902832
    5. '   ' → logprob: -5.329899787902832
    6. 'n' → logprob: -7.079899787902832
    7. 'u' → logprob: -7.954899787902832
    8. ' edges' → logprob: -8.204899787902832
    9. 'edges' → logprob: -8.204899787902832
    10. '       ' → logprob: -8.204899787902832

Token 218: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.014719855040311813
    2. '_' → logprob: -4.2647199630737305
    3. ' i' → logprob: -7.5147199630737305
    4. '_i' → logprob: -11.88971996307373
    5. ' ' → logprob: -12.88971996307373
    6. 'i' → logprob: -13.26471996307373
    7. ' _
' → logprob: -16.014719009399414
    8. ' ' → logprob: -17.014719009399414
    9. '_=' → logprob: -17.764719009399414
    10. '_range' → logprob: -18.889719009399414

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863709583878517
    2. 'in' → logprob: -3.0486371517181396
    3. '_' → logprob: -11.298637390136719
    4. 'd' → logprob: -11.298637390136719
    5. ' ' → logprob: -11.673637390136719
    6. 's' → logprob: -12.048637390136719
    7. 'range' → logprob: -13.298637390136719
    8. 'n' → logprob: -13.423637390136719
    9. ' _' → logprob: -13.548637390136719
    10. ',' → logprob: -13.673637390136719

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038043100386857986
    2. ' range' → logprob: -3.2880430221557617
    3. '	range' → logprob: -14.538043022155762
    4. 'rang' → logprob: -14.788043022155762
    5. ' ' → logprob: -14.913043022155762
    6. '(range' → logprob: -15.663043022155762
    7. 'r' → logprob: -15.913043022155762
    8. '  ' → logprob: -16.913043975830078
    9. 'ran' → logprob: -16.913043975830078
    10. '   ' → logprob: -17.038043975830078

Token 221: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0016430460382252932
    2. '(' → logprob: -6.751643180847168
    3. '(d' → logprob: -7.876643180847168
    4. ' (' → logprob: -10.626643180847168
    5. '((' → logprob: -10.876643180847168
    6. 's' → logprob: -10.876643180847168
    7. ' s' → logprob: -11.751643180847168
    8. '(sd' → logprob: -12.126643180847168
    9. '(n' → logprob: -12.751643180847168
    10. '(
' → logprob: -12.751643180847168

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05432693287730217
    2. '+d' → logprob: -3.1793270111083984
    3. '+' → logprob: -4.554327011108398
    4. ' +' → logprob: -8.179327011108398
    5. ' ):' → logprob: -9.054327011108398
    6. '):
' → logprob: -9.304327011108398
    7. '*d' → logprob: -9.679327011108398
    8. '+s' → logprob: -9.929327011108398
    9. '*' → logprob: -10.179327011108398
    10. ',d' → logprob: -10.554327011108398

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4583410918712616
    2. '   ' → logprob: -1.083341121673584
    3. ' edges' → logprob: -4.583341121673584
    4. ' for' → logprob: -4.958341121673584
    5. '       ' → logprob: -5.583341121673584
    6. 'edges' → logprob: -5.958341121673584
    7. ',' → logprob: -6.458341121673584
    8. 'for' → logprob: -7.208341121673584
    9. ' lines' → logprob: -7.458341121673584
    10. '	   ' → logprob: -7.458341121673584

Token 224: ' dist' (ID: 3601)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6776515245437622
    2. 'cost' → logprob: -2.0526514053344727
    3. 'arr' → logprob: -2.0526514053344727
    4. '   ' → logprob: -2.3026514053344727
    5. 'lst' → logprob: -2.4276514053344727
    6. 'w' → logprob: -2.9276514053344727
    7. 'l' → logprob: -2.9276514053344727
    8. 'dist' (adapté à ' dist') → logprob: -3.0526514053344727
    9. 'data' → logprob: -3.4276514053344727
    10. 'c' → logprob: -3.4276514053344727

Token 225: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8747467398643494
    2. ' =' → logprob: -1.3747467994689941
    3. ',' → logprob: -1.4997467994689941
    4. 'ance' → logprob: -3.124746799468994
    5. ' ,' → logprob: -3.624746799468994
    6. '=int' → logprob: -4.999746799468994
    7. 'ances' → logprob: -4.999746799468994
    8. '=[]' → logprob: -5.499746799468994
    9. '=input' → logprob: -5.624746799468994
    10. ' ' → logprob: -5.749746799468994

Token 226: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.024604277219623e-05
    2. 'map' → logprob: -10.625040054321289
    3. '(' → logprob: -11.125040054321289
    4. '()' → logprob: -14.750040054321289
    5. '(int' → logprob: -15.375040054321289
    6. '(
' → logprob: -15.625040054321289
    7. '(input' → logprob: -16.25004005432129
    8. ',map' → logprob: -16.37504005432129
    9. ' map' → logprob: -16.75004005432129
    10. '	map' → logprob: -17.12504005432129

Token 227: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020246754866093397
    2. 'int' → logprob: -8.750202178955078
    3. '=int' → logprob: -11.500202178955078
    4. '[int' → logprob: -11.625202178955078
    5. ',int' → logprob: -12.000202178955078
    6. '(' → logprob: -12.000202178955078
    7. '<int' → logprob: -12.500202178955078
    8. '(float' → logprob: -12.625202178955078
    9. ']int' → logprob: -13.000202178955078
    10. ')' → logprob: -13.625202178955078

Token 228: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06246894970536232
    2. ',input' → logprob: -2.812469005584717
    3. 'input' → logprob: -8.312468528747559
    4. ',' → logprob: -8.937468528747559
    5. '(' → logprob: -9.687468528747559
    6. '=input' → logprob: -10.687468528747559
    7. ')' → logprob: -10.812468528747559
    8. '[input' → logprob: -11.687468528747559
    9. '(
' → logprob: -13.312468528747559
    10. ' input' → logprob: -13.312468528747559

Token 229: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.500003814697266
    3. ' ().' → logprob: -17.250003814697266
    4. '(' → logprob: -18.000003814697266
    5. '()))' → logprob: -18.000003814697266
    6. '()
' → logprob: -18.500003814697266
    7. '.split' → logprob: -18.625003814697266
    8. '(i' → logprob: -19.750003814697266
    9. '()[' → logprob: -20.000003814697266
    10. '().__' → logprob: -20.375003814697266

Token 230: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.127333340875339e-06
    2. 'rstrip' → logprob: -13.125003814697266
    3. 'strip' → logprob: -13.250003814697266
    4. ' split' → logprob: -15.750003814697266
    5. '(split' → logprob: -15.875003814697266
    6. 'spl' → logprob: -17.750003814697266
    7. 's' → logprob: -18.875003814697266
    8. '.split' → logprob: -19.125003814697266
    9. '
' → logprob: -19.375003814697266
    10. ')' → logprob: -20.375003814697266

Token 231: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08000911772251129
    2. '()' → logprob: -2.7050092220306396
    3. '))' → logprob: -5.3300089836120605
    4. '(' → logprob: -6.3300089836120605
    5. '())' → logprob: -6.3300089836120605
    6. '()))
' → logprob: -6.9550089836120605
    7. '())))' → logprob: -8.705009460449219
    8. '(s' → logprob: -8.830009460449219
    9. '().' → logprob: -9.455009460449219
    10. '()));' → logprob: -9.955009460449219

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005121919326484203
    2. '       ' → logprob: -6.25512170791626
    3. ' edges' → logprob: -6.25512170791626
    4. ' for' → logprob: -8.005122184753418
    5. '<|end|>' → logprob: -8.005122184753418
    6. 'edges' → logprob: -8.130122184753418
    7. '   ' → logprob: -9.755122184753418
    8. '(edges' → logprob: -9.880122184753418
    9. ')' → logprob: -10.255122184753418
    10. '[' → logprob: -10.505122184753418

Token 233: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48106688261032104
    2. 'for' (adapté à ' for') → logprob: -0.981066882610321
    3. '           ' → logprob: -5.856066703796387
    4. '       ' → logprob: -5.856066703796387
    5. ' edges' → logprob: -7.356066703796387
    6. 'edges' → logprob: -8.356066703796387
    7. '	for' → logprob: -8.481066703796387
    8. '   ' → logprob: -8.981066703796387
    9. ' ' → logprob: -11.981066703796387
    10. ' ' → logprob: -12.606066703796387

Token 234: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12692853808403015
    2. ' j' → logprob: -2.1269285678863525
    3. '	j' → logprob: -15.376928329467773
    4. '_j' → logprob: -16.001928329467773
    5. 'k' → logprob: -17.001928329467773
    6. '   ' → logprob: -17.501928329467773
    7. ' ' → logprob: -17.501928329467773
    8. ',j' → logprob: -18.501928329467773
    9. 'idx' → logprob: -18.626928329467773
    10. 'x' → logprob: -18.876928329467773

Token 235: ',x' (ID: 29748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007775917649269104
    2. 'in' → logprob: -4.882775783538818
    3. ' ' → logprob: -8.757776260375977
    4. '	in' → logprob: -11.882776260375977
    5. ' ' → logprob: -13.632776260375977
    6. ',' → logprob: -14.132776260375977
    7. ' ,' → logprob: -14.382776260375977
    8. '<|end|>' → logprob: -14.507776260375977
    9. '    ' → logprob: -15.132776260375977
    10. ')' → logprob: -15.257776260375977

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018184827640652657
    2. 'in' → logprob: -4.018184661865234
    3. ' ' → logprob: -11.268184661865234
    4. ',' → logprob: -11.643184661865234
    5. '	in' → logprob: -12.643184661865234
    6. ' ,' → logprob: -13.018184661865234
    7. 'n' → logprob: -13.268184661865234
    8. '   ' → logprob: -14.268184661865234
    9. ',in' → logprob: -14.268184661865234
    10. '           ' → logprob: -14.393184661865234

Token 237: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.023246292024850845
    2. ' enumerate' → logprob: -3.7732462882995605
    3. 'en' → logprob: -14.773246765136719
    4. 'range' → logprob: -15.523246765136719
    5. '
' → logprob: -16.02324676513672
    6. '(en' → logprob: -16.39824676513672
    7. '.enumer' → logprob: -17.77324676513672
    8. '```' → logprob: -17.89824676513672
    9. 'enum' → logprob: -18.14824676513672
    10. ' ' → logprob: -18.39824676513672

Token 238: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.318681188422488e-05
    2. 'dist' → logprob: -11.25001335144043
    3. '(' → logprob: -16.50001335144043
    4. '	dist' → logprob: -17.87501335144043
    5. ' dist' → logprob: -18.62501335144043
    6. '(range' → logprob: -18.75001335144043
    7. 'Dist' → logprob: -19.00001335144043
    8. ' (' → logprob: -19.25001335144043
    9. '(d' → logprob: -19.25001335144043
    10. '_dist' → logprob: -19.87501335144043

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005835180636495352
    2. '():' → logprob: -5.505835056304932
    3. ':' → logprob: -6.755835056304932
    4. '):
' → logprob: -7.505835056304932
    5. ' ):' → logprob: -10.50583553314209
    6. '()' → logprob: -12.13083553314209
    7. '():
' → logprob: -12.63083553314209
    8. '(' → logprob: -14.00583553314209
    9. ')):' → logprob: -14.13083553314209
    10. ')' → logprob: -14.38083553314209

Token 240: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000587821879889816
    2. ' if' → logprob: -8.000587463378906
    3. '<|end|>' → logprob: -8.750587463378906
    4. '           ' → logprob: -10.250587463378906
    5. '       ' → logprob: -11.875587463378906
    6. ' ' → logprob: -12.250587463378906
    7. '<|end|>' → logprob: -12.250587463378906
    8. ',' → logprob: -12.250587463378906
    9. '            ' → logprob: -12.375587463378906
    10. '   ' → logprob: -12.500587463378906

Token 241: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7471272945404053
    2. '                   ' → logprob: -1.2471272945404053
    3. ' if' → logprob: -1.6221272945404053
    4. '           ' → logprob: -3.8721272945404053
    5. '   ' → logprob: -4.997127532958984
    6. 'edges' → logprob: -5.122127532958984
    7. ' edges' → logprob: -5.497127532958984
    8. '               ' → logprob: -5.622127532958984
    9. '       ' → logprob: -8.747127532958984
    10. '	if' → logprob: -10.872127532958984

Token 242: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08895287662744522
    2. ' x' → logprob: -2.4639527797698975
    3. '                   ' → logprob: -12.713953018188477
    4. '   ' → logprob: -12.838953018188477
    5. ' ' → logprob: -13.338953018188477
    6. '0' → logprob: -13.338953018188477
    7. 's' → logprob: -13.588953018188477
    8. '               ' → logprob: -13.838953018188477
    9. ' s' → logprob: -14.838953018188477
    10. '	x' → logprob: -15.213953018188477

Token 243: '!=' (ID: 11408)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4940192699432373
    2. '>' → logprob: -0.9940192699432373
    3. ' <=' → logprob: -4.994019508361816
    4. ' !=' → logprob: -5.369019508361816
    5. '<=' → logprob: -6.119019508361816
    6. ':' → logprob: -6.494019508361816
    7. '!=' → logprob: -6.619019508361816
    8. ' <' → logprob: -7.244019508361816
    9. '<|end|>' → logprob: -7.744019508361816
    10. ')>' → logprob: -7.869019508361816

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16079817712306976
    2. '-' → logprob: -1.910798192024231
    3. '100' → logprob: -8.535798072814941
    4. ' ' → logprob: -8.785798072814941
    5. ' -' → logprob: -8.910798072814941
    6. '999' → logprob: -9.660798072814941
    7. '123' → logprob: -12.035798072814941
    8. '1' → logprob: -12.285798072814941
    9. '   ' → logprob: -12.785798072814941
    10. '10' → logprob: -12.910798072814941

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4254946708679199
    2. ' and' → logprob: -1.80049467086792
    3. ':
' → logprob: -1.80049467086792
    4. '                   ' → logprob: -4.42549467086792
    5. '               ' → logprob: -6.67549467086792
    6. '           ' → logprob: -6.92549467086792
    7. ' :' → logprob: -7.42549467086792
    8. ',' → logprob: -8.300495147705078
    9. '):
' → logprob: -8.300495147705078
    10. ' :
' → logprob: -8.550495147705078

Token 246: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004363659769296646
    2. ' edges' → logprob: -5.504363536834717
    3. 'edges' → logprob: -9.254364013671875
    4. '               ' → logprob: -9.254364013671875
    5. '           ' → logprob: -10.379364013671875
    6. '                       ' → logprob: -11.129364013671875
    7. '<|end|>' → logprob: -11.629364013671875
    8. ',' → logprob: -12.129364013671875
    9. '(edges' → logprob: -12.129364013671875
    10. '   ' → logprob: -12.379364013671875

Token 247: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.0369986854493618
    2. 'edges' (adapté à ' edges') → logprob: -3.411998748779297
    3. '                   ' → logprob: -6.036998748779297
    4. '                       ' → logprob: -7.161998748779297
    5. '   ' → logprob: -9.286998748779297
    6. '               ' → logprob: -10.411998748779297
    7. '       ' → logprob: -11.036998748779297
    8. '                    ' → logprob: -11.536998748779297
    9. '           ' → logprob: -11.911998748779297
    10. '    ' → logprob: -12.661998748779297

Token 248: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004402055055834353
    2. '.' → logprob: -7.7504401206970215
    3. '.app' → logprob: -13.00044059753418
    4. '.ap' → logprob: -13.37544059753418
    5. ' .' → logprob: -13.62544059753418
    6. ').' → logprob: -13.75044059753418
    7. '.Append' → logprob: -14.00044059753418
    8. '.extend' → logprob: -14.62544059753418
    9. '.push' → logprob: -14.62544059753418
    10. '.p' → logprob: -15.12544059753418

Token 249: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0012401100248098373
    2. '(' → logprob: -6.876240253448486
    3. '(s' → logprob: -9.001239776611328
    4. '(i' → logprob: -10.126239776611328
    5. '([' → logprob: -10.251239776611328
    6. '(((' → logprob: -12.501239776611328
    7. ' ((' → logprob: -12.751239776611328
    8. '(
' → logprob: -14.626239776611328
    9. ' (' → logprob: -14.626239776611328
    10. '   ' → logprob: -14.751239776611328

Token 250: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003935564309358597
    2. 'i' → logprob: -5.62893533706665
    3. ' x' → logprob: -8.253935813903809
    4. 's' → logprob: -9.628935813903809
    5. ' i' → logprob: -12.378935813903809
    6. 'j' → logprob: -13.503935813903809
    7. ')' → logprob: -14.253935813903809
    8. '   ' → logprob: -14.503935813903809
    9. ' ' → logprob: -14.628935813903809
    10. ')x' → logprob: -14.753935813903809

Token 251: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5542445778846741
    2. ',i' → logprob: -0.9292445778846741
    3. ',s' → logprob: -3.5542445182800293
    4. ' ,' → logprob: -6.304244518280029
    5. ',(' → logprob: -8.929244995117188
    6. ',
' → logprob: -10.554244995117188
    7. ',x' → logprob: -10.929244995117188
    8. ',j' → logprob: -11.304244995117188
    9. ',u' → logprob: -13.054244995117188
    10. '   ' → logprob: -13.179244995117188

Token 252: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.28938281536102295
    2. ',' → logprob: -1.414382815361023
    3. ',j' → logprob: -5.2893829345703125
    4. 's' → logprob: -6.4143829345703125
    5. ' ,' → logprob: -7.2893829345703125
    6. ',
' → logprob: -7.6643829345703125
    7. ' s' → logprob: -8.289382934570312
    8. '+s' → logprob: -10.039382934570312
    9. ',d' → logprob: -10.914382934570312
    10. ',n' → logprob: -11.539382934570312

Token 253: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.5768991112709045
    2. '+' → logprob: -0.8268991112709045
    3. ' +' → logprob: -6.95189905166626
    4. '＋' → logprob: -13.951899528503418
    5. '+)' → logprob: -14.076899528503418
    6. '+
' → logprob: -15.201899528503418
    7. 'plus' → logprob: -15.826899528503418
    8. ' plus' → logprob: -16.7018985748291
    9. '+')' → logprob: -16.7018985748291
    10. ')+' → logprob: -17.2018985748291

Token 254: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006421420839615166
    2. ')' → logprob: -7.8756422996521
    3. ')))' → logprob: -8.750641822814941
    4. '))
' → logprob: -9.750641822814941
    5. ' ))' → logprob: -10.250641822814941
    6. '+' → logprob: -12.000641822814941
    7. ''))' → logprob: -13.750641822814941
    8. '),' → logprob: -14.500641822814941
    9. ' )' → logprob: -15.250641822814941
    10. '   ' → logprob: -15.250641822814941

Token 255: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6090391874313354
    2. '       ' → logprob: -1.3590391874313354
    3. ' edges' → logprob: -2.109039306640625
    4. 'edges' → logprob: -2.609039306640625
    5. '
' → logprob: -6.359039306640625
    6. '```' → logprob: -7.109039306640625
    7. ')' → logprob: -7.484039306640625
    8. '    
' → logprob: -7.734039306640625
    9. '(edges' → logprob: -8.484039306640625
    10. '        
' → logprob: -8.859039306640625

Token 256: ' for' (ID: 395)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.12653817236423492
    2. ' edges' → logprob: -2.5015382766723633
    3. '   ' → logprob: -3.7515382766723633
    4. '
' → logprob: -4.376538276672363
    5. '    
' → logprob: -8.251538276672363
    6. 'uf' → logprob: -9.126538276672363
    7. '       ' → logprob: -9.126538276672363
    8. '(edges' → logprob: -9.251538276672363
    9. '        
' → logprob: -9.876538276672363
    10. ')
' → logprob: -10.001538276672363

Token 257: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.39383965730667114
    2. 'j' → logprob: -1.1438395977020264
    3. ' d' → logprob: -6.0188398361206055
    4. 'd' → logprob: -6.7688398361206055
    5. ' i' → logprob: -7.0188398361206055
    6. 'i' → logprob: -7.1438398361206055
    7. '_j' → logprob: -7.2688398361206055
    8. ' _' → logprob: -7.8938398361206055
    9. ' s' → logprob: -8.393839836120605
    10. '_' → logprob: -8.393839836120605

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06276009231805801
    2. 'in' → logprob: -2.8127601146698
    3. 'd' → logprob: -7.562759876251221
    4. 's' → logprob: -8.687760353088379
    5. ',' → logprob: -10.812760353088379
    6. ' d' → logprob: -11.312760353088379
    7. ',d' → logprob: -11.312760353088379
    8. '
' → logprob: -11.687760353088379
    9. 'range' → logprob: -11.687760353088379
    10. ' s' → logprob: -11.687760353088379

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14640498161315918
    2. ' range' → logprob: -2.021404981613159
    3. 'd' → logprob: -5.646405220031738
    4. 's' → logprob: -8.771405220031738
    5. ' d' → logprob: -10.646405220031738
    6. ' ' → logprob: -12.646405220031738
    7. '(range' → logprob: -12.896405220031738
    8. 'r' → logprob: -12.896405220031738
    9. ' s' → logprob: -13.646405220031738
    10. 'rang' → logprob: -13.646405220031738

Token 260: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.289570152759552
    2. '(d' → logprob: -1.4145700931549072
    3. 's' → logprob: -5.164570331573486
    4. '(s' → logprob: -6.289570331573486
    5. ' d' → logprob: -7.539570331573486
    6. '(' → logprob: -8.539569854736328
    7. ')d' → logprob: -10.914569854736328
    8. '(
' → logprob: -11.539569854736328
    9. '1' → logprob: -11.539569854736328
    10. '   ' → logprob: -11.914569854736328

Token 261: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007564741652458906
    2. ')' → logprob: -5.382564544677734
    3. '):
' → logprob: -6.132564544677734
    4. ',' → logprob: -7.257564544677734
    5. ' ):' → logprob: -10.632564544677734
    6. ':' → logprob: -11.257564544677734
    7. '       ' → logprob: -12.132564544677734
    8. '   ' → logprob: -12.382564544677734
    9. '),' → logprob: -12.507564544677734
    10. ',s' → logprob: -13.757564544677734

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.745069499127567e-05
    2. ' ' → logprob: -9.50008773803711
    3. '2' → logprob: -12.37508773803711
    4. 's' → logprob: -12.62508773803711
    5. '0' → logprob: -13.25008773803711
    6. ')' → logprob: -13.75008773803711
    7. 'd' → logprob: -14.12508773803711
    8. '   ' → logprob: -14.25008773803711
    9. '<|end|>' → logprob: -15.25008773803711
    10. ' s' → logprob: -16.18758773803711

Token 263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02392078936100006
    2. '):
' → logprob: -4.148921012878418
    3. ',' → logprob: -4.898921012878418
    4. ')' → logprob: -9.273921012878418
    5. ' ):' → logprob: -9.273921012878418
    6. ':' → logprob: -10.023921012878418
    7. ',d' → logprob: -10.273921012878418
    8. '       ' → logprob: -10.898921012878418
    9. '+' → logprob: -11.148921012878418
    10. ',s' → logprob: -11.398921012878418

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6290385723114014
    2. '   ' → logprob: -1.5040385723114014
    3. ' edges' → logprob: -1.8790385723114014
    4. '       ' → logprob: -3.1290385723114014
    5. ' for' → logprob: -4.2540388107299805
    6. ',' → logprob: -4.3790388107299805
    7. 'edges' → logprob: -4.7540388107299805
    8. ' x' → logprob: -6.3790388107299805
    9. ' u' → logprob: -6.7540388107299805
    10. 'dist' → logprob: -7.2540388107299805

Token 265: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7860027551651001
    2. 'u' → logprob: -1.6610027551651
    3. 'x' → logprob: -2.0360026359558105
    4. 'w' → logprob: -2.9110026359558105
    5. ' a' → logprob: -3.0360026359558105
    6. ' u' → logprob: -3.0360026359558105
    7. ' w' → logprob: -3.7860026359558105
    8. '           ' → logprob: -4.0360026359558105
    9. ' x' → logprob: -4.4110026359558105
    10. 'dist' → logprob: -5.5360026359558105

Token 266: '=list' (ID: 93413)
  Prédit: '=list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=list' → logprob: -0.38976356387138367
    2. '=' → logprob: -1.514763593673706
    3. ' =' → logprob: -3.139763593673706
    4. '=sys' → logprob: -3.139763593673706
    5. '=input' → logprob: -4.389763355255127
    6. '=line' → logprob: -5.889763355255127
    7. '=int' → logprob: -8.014763832092285
    8. 's' → logprob: -8.264763832092285
    9. '=s' → logprob: -8.264763832092285
    10. '=(' → logprob: -9.514763832092285

Token 267: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.45848218582978e-06
    2. 'map' → logprob: -13.37500286102295
    3. ',map' → logprob: -14.87500286102295
    4. ' map' → logprob: -15.62500286102295
    5. '	map' → logprob: -16.125001907348633
    6. '(int' → logprob: -16.125001907348633
    7. '(' → logprob: -16.500001907348633
    8. '.map' → logprob: -16.500001907348633
    9. '()' → logprob: -17.625001907348633
    10. ' (' → logprob: -17.875001907348633

Token 268: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024726821575313807
    2. 'int' → logprob: -6.252472877502441
    3. ',int' → logprob: -7.877472877502441
    4. '=int' → logprob: -9.377472877502441
    5. '[int' → logprob: -10.002472877502441
    6. ' int' → logprob: -11.002472877502441
    7. ']int' → logprob: -11.627472877502441
    8. '<int' → logprob: -12.002472877502441
    9. '```' → logprob: -13.502472877502441
    10. ':int' → logprob: -14.127472877502441

Token 269: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.012905134819447994
    2. '(input' → logprob: -4.387905120849609
    3. ',' → logprob: -8.51290512084961
    4. '(),' → logprob: -9.63790512084961
    5. '=input' → logprob: -9.76290512084961
    6. 'input' → logprob: -9.76290512084961
    7. ',int' → logprob: -12.13790512084961
    8. '[input' → logprob: -12.76290512084961
    9. '<input' → logprob: -13.13790512084961
    10. ' input' → logprob: -13.38790512084961

Token 270: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0325924449716695e-05
    2. '()' → logprob: -11.75001049041748
    3. '()))' → logprob: -13.75001049041748
    4. '.split' → logprob: -14.37501049041748
    5. '())' → logprob: -16.125009536743164
    6. '.' → logprob: -16.250009536743164
    7. '(' → logprob: -16.375009536743164
    8. ' ().' → logprob: -16.500009536743164
    9. '()[' → logprob: -16.875009536743164
    10. '.readline' → logprob: -17.375009536743164

Token 271: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.796184723294573e-06
    2. 'strip' → logprob: -12.125005722045898
    3. ' split' → logprob: -15.500005722045898
    4. 'rstrip' → logprob: -16.7500057220459
    5. '(split' → logprob: -17.1250057220459
    6. 'spl' → logprob: -18.0000057220459
    7. ')' → logprob: -18.5000057220459
    8. 'read' → logprob: -18.8750057220459
    9. '
' → logprob: -19.2500057220459
    10. '.split' → logprob: -19.7500057220459

Token 272: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09094669669866562
    2. '))' → logprob: -3.090946674346924
    3. '()))
' → logprob: -3.715946674346924
    4. '()' → logprob: -4.090946674346924
    5. '))
' → logprob: -8.590947151184082
    6. '())' → logprob: -9.715947151184082
    7. '(' → logprob: -9.715947151184082
    8. '()
' → logprob: -10.465947151184082
    9. '()))

' → logprob: -10.965947151184082
    10. ' (' → logprob: -11.090947151184082

Token 273: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8568384647369385
    2. '           ' → logprob: -0.8568384647369385
    3. '   ' → logprob: -2.3568384647369385
    4. '<|end|>' → logprob: -3.2318384647369385
    5. ' for' → logprob: -4.481838226318359
    6. 'for' → logprob: -5.981838226318359
    7. ',' → logprob: -7.231838226318359
    8. '	       ' → logprob: -7.231838226318359
    9. '<|end|>' → logprob: -7.481838226318359
    10. ')' → logprob: -7.731838226318359

Token 274: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8019574284553528
    2. 'for' (adapté à ' for') → logprob: -0.9269574284553528
    3. ' for' → logprob: -1.926957368850708
    4. '   ' → logprob: -5.051957607269287
    5. '           ' → logprob: -5.676957607269287
    6. 'edges' → logprob: -8.676957130432129
    7. ' edges' → logprob: -9.051957130432129
    8. '	for' → logprob: -10.176957130432129
    9. ' ' → logprob: -11.551957130432129
    10. '      ' → logprob: -11.801957130432129

Token 275: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4757743179798126
    2. ' j' → logprob: -0.9757742881774902
    3. 'k' → logprob: -6.85077428817749
    4. ' k' → logprob: -7.97577428817749
    5. 'x' → logprob: -8.975774765014648
    6. ' x' → logprob: -9.600774765014648
    7. 'idx' → logprob: -10.975774765014648
    8. ' idx' → logprob: -11.100774765014648
    9. 'u' → logprob: -11.225774765014648
    10. 'v' → logprob: -11.475774765014648

Token 276: ',x' (ID: 29748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5587015151977539
    2. ',' → logprob: -1.558701515197754
    3. 'in' → logprob: -1.933701515197754
    4. ',line' → logprob: -3.058701515197754
    5. ' ,' → logprob: -4.058701515197754
    6. ',x' → logprob: -6.183701515197754
    7. ' range' → logprob: -6.433701515197754
    8. ' ' → logprob: -6.683701515197754
    9. 'range' → logprob: -6.808701515197754
    10. ',j' → logprob: -7.308701515197754

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0702492892742157
    2. 'in' → logprob: -2.695249319076538
    3. ',' → logprob: -8.445249557495117
    4. ' ,' → logprob: -10.320249557495117
    5. ',in' → logprob: -10.570249557495117
    6. ' ' → logprob: -10.820249557495117
    7. '	in' → logprob: -11.820249557495117
    8. '   ' → logprob: -12.570249557495117
    9. '  ' → logprob: -13.445249557495117
    10. ')' → logprob: -13.570249557495117

Token 278: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00012368128227535635
    2. ' enumerate' → logprob: -9.000123977661133
    3. 'range' → logprob: -16.000123977661133
    4. '(en' → logprob: -16.500123977661133
    5. 'en' → logprob: -17.250123977661133
    6. '   ' → logprob: -19.125123977661133
    7. '
' → logprob: -19.250123977661133
    8. ' ' → logprob: -19.750123977661133
    9. 'enqueue' → logprob: -19.750123977661133
    10. '.enumer' → logprob: -19.875123977661133

Token 279: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.9361264946837764e-07
    2. '[line' → logprob: -16.875
    3. '(' → logprob: -17.375
    4. 'line' → logprob: -17.625
    5. ' line' → logprob: -17.875
    6. '(range' → logprob: -18.125
    7. ' (' → logprob: -18.125
    8. '(list' → logprob: -18.625
    9. '=line' → logprob: -18.875
    10. ',line' → logprob: -19.125

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45567262172698975
    2. ':' → logprob: -2.0806727409362793
    3. '               ' → logprob: -2.3306727409362793
    4. '):
' → logprob: -2.5806727409362793
    5. '[' → logprob: -3.2056727409362793
    6. ',' → logprob: -4.705672740936279
    7. '           ' → logprob: -5.205672740936279
    8. '[:-' → logprob: -5.205672740936279
    9. '[i' → logprob: -6.955672740936279
    10. '[:' → logprob: -6.955672740936279

Token 281: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024433838203549385
    2. '           ' → logprob: -3.8994338512420654
    3. ' if' → logprob: -6.024433612823486
    4. '       ' → logprob: -7.649433612823486
    5. 'if' → logprob: -8.274434089660645
    6. '   ' → logprob: -8.524434089660645
    7. ',' → logprob: -9.024434089660645
    8. '<|end|>' → logprob: -9.149434089660645
    9. '[' → logprob: -10.274434089660645
    10. ' ,' → logprob: -10.524434089660645

Token 282: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9421324133872986
    2. ' if' → logprob: -1.0671324729919434
    3. '               ' → logprob: -1.4421324729919434
    4. 'if' (adapté à ' if') → logprob: -4.192132472991943
    5. '   ' → logprob: -4.442132472991943
    6. '       ' → logprob: -6.067132472991943
    7. '                   ' → logprob: -8.567131996154785
    8. '<|end|>' → logprob: -9.067131996154785
    9. ' ' → logprob: -9.192131996154785
    10. '    ' → logprob: -10.567131996154785

Token 283: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31329473853111267
    2. 'x' → logprob: -1.313294768333435
    3. '                   ' → logprob: -12.438294410705566
    4. ' ' → logprob: -12.438294410705566
    5. '   ' → logprob: -12.688294410705566
    6. ' j' → logprob: -12.688294410705566
    7. 'j' → logprob: -12.813294410705566
    8. '    ' → logprob: -13.063294410705566
    9. '               ' → logprob: -13.063294410705566
    10. ' i' → logprob: -13.188294410705566

Token 284: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07385187596082687
    2. ' !=' → logprob: -2.8238518238067627
    3. '>' → logprob: -4.823852062225342
    4. '<|end|>' → logprob: -6.323852062225342
    5. ' >' → logprob: -6.948852062225342
    6. ' and' → logprob: -9.073851585388184
    7. ')!=' → logprob: -9.073851585388184
    8. '   ' → logprob: -9.073851585388184
    9. '==' → logprob: -9.198851585388184
    10. ',' → logprob: -9.573851585388184

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003317705122753978
    2. ' ' → logprob: -8.25033187866211
    3. '1' → logprob: -9.87533187866211
    4. '   ' → logprob: -12.25033187866211
    5. 's' → logprob: -13.12533187866211
    6. '  ' → logprob: -13.50033187866211
    7. '-' → logprob: -13.50033187866211
    8. 'd' → logprob: -13.50033187866211
    9. '
' → logprob: -13.50033187866211
    10. 'j' → logprob: -13.87533187866211

Token 286: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005655251909047365
    2. '               ' → logprob: -6.505655288696289
    3. ' and' → logprob: -6.755655288696289
    4. ' edges' → logprob: -7.005655288696289
    5. ':
' → logprob: -7.255655288696289
    6. '(edges' → logprob: -7.630655288696289
    7. 'edges' → logprob: -8.005655288696289
    8. '                       ' → logprob: -8.505655288696289
    9. ',' → logprob: -9.005655288696289
    10. '           ' → logprob: -9.255655288696289

Token 287: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030867233872413635
    2. ' edges' → logprob: -4.030867099761963
    3. 'edges' → logprob: -4.530867099761963
    4. '           ' → logprob: -6.655867099761963
    5. '               ' → logprob: -7.655867099761963
    6. '                       ' → logprob: -9.905867576599121
    7. '   ' → logprob: -11.280867576599121
    8. '(edges' → logprob: -11.280867576599121
    9. '       ' → logprob: -11.655867576599121
    10. '                  ' → logprob: -12.780867576599121

Token 288: ' u' (ID: 337)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.52471923828125
    2. ' edges' → logprob: -0.89971923828125
    3. '                   ' → logprob: -6.77471923828125
    4. '               ' → logprob: -9.02471923828125
    5. '                       ' → logprob: -9.02471923828125
    6. '   ' → logprob: -9.27471923828125
    7. 'if' → logprob: -9.89971923828125
    8. '           ' → logprob: -11.02471923828125
    9. '(edges' → logprob: -11.27471923828125
    10. ' if' → logprob: -11.64971923828125

Token 289: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48280906677246094
    2. ',' → logprob: -1.232809066772461
    3. ' =' → logprob: -2.982809066772461
    4. ',u' → logprob: -4.482809066772461
    5. ',d' → logprob: -4.982809066772461
    6. ',s' → logprob: -5.607809066772461
    7. 'edges' → logprob: -5.857809066772461
    8. ',v' → logprob: -5.857809066772461
    9. '=u' → logprob: -5.857809066772461
    10. 's' → logprob: -6.107809066772461

Token 290: '+i' (ID: 49691)
  Prédit: '+i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.526340901851654
    2. '+j' → logprob: -1.5263409614562988
    3. '+' → logprob: -1.6513409614562988
    4. ' +' → logprob: -9.65134048461914
    5. '+x' → logprob: -11.65134048461914
    6. 'plus' → logprob: -12.02634048461914
    7. '+
' → logprob: -12.27634048461914
    8. '+s' → logprob: -12.27634048461914
    9. '+(' → logprob: -12.40134048461914
    10. '+d' → logprob: -12.52634048461914

Token 291: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.025623811408877373
    2. '                   ' → logprob: -4.650623798370361
    3. '+s' → logprob: -4.650623798370361
    4. '+j' → logprob: -5.775623798370361
    5. ' +' → logprob: -7.025623798370361
    6. 's' → logprob: -7.525623798370361
    7. '+d' → logprob: -7.650623798370361
    8. '   ' → logprob: -8.52562427520752
    9. '+x' → logprob: -8.65062427520752
    10. 'u' → logprob: -8.77562427520752

Token 292: '                   ' (ID: 699)
  Prédit: ',s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -1.028132677078247
    2. ' s' → logprob: -1.528132677078247
    3. 's' → logprob: -2.028132677078247
    4. ',' → logprob: -2.028132677078247
    5. '                   ' → logprob: -2.278132677078247
    6. '+' → logprob: -4.028132438659668
    7. '   ' → logprob: -5.153132438659668
    8. 'd' → logprob: -5.153132438659668
    9. ',v' → logprob: -5.278132438659668
    10. '+s' → logprob: -5.528132438659668

Token 293: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.10064958035945892
    2. 's' → logprob: -2.35064959526062
    3. ' v' → logprob: -7.975649356842041
    4. ' s' → logprob: -9.7256498336792
    5. 'd' → logprob: -11.1006498336792
    6. '                   ' → logprob: -11.4756498336792
    7. '   ' → logprob: -11.8506498336792
    8. '           ' → logprob: -13.7256498336792
    9. ' ' → logprob: -13.8506498336792
    10. ',v' → logprob: -13.9756498336792

Token 294: '=s' (ID: 32455)
  Prédit: '=s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=s' → logprob: -0.25356024503707886
    2. '=' → logprob: -1.5035603046417236
    3. '=v' → logprob: -6.8785600662231445
    4. ' =' → logprob: -7.7535600662231445
    5. '=u' → logprob: -10.003560066223145
    6. 's' → logprob: -10.003560066223145
    7. '=j' → logprob: -10.128560066223145
    8. '=
' → logprob: -10.753560066223145
    9. '=

' → logprob: -12.378560066223145
    10. '=w' → logprob: -13.378560066223145

Token 295: '+i' (ID: 49691)
  Prédit: '+j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.16029693186283112
    2. '+' → logprob: -1.91029691696167
    3. ' +' → logprob: -10.410297393798828
    4. 'j' → logprob: -10.410297393798828
    5. 'plus' → logprob: -12.410297393798828
    6. '+s' → logprob: -12.410297393798828
    7. '+x' → logprob: -13.785297393798828
    8. '+d' → logprob: -13.785297393798828
    9. '+
' → logprob: -14.410297393798828
    10. '＋' → logprob: -15.660297393798828

Token 296: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0037088620010763407
    2. '+j' → logprob: -5.628708839416504
    3. ' +' → logprob: -9.253708839416504
    4. '1' → logprob: -11.628708839416504
    5. '+
' → logprob: -13.378708839416504
    6. '+k' → logprob: -14.003708839416504
    7. '+x' → logprob: -15.128708839416504
    8. '+y' → logprob: -15.503708839416504
    9. '＋' → logprob: -15.503708839416504
    10. '+w' → logprob: -15.628708839416504

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2813585698604584
    2. 'j' → logprob: -1.4063585996627808
    3. ' j' → logprob: -9.40635871887207
    4. '+j' → logprob: -9.78135871887207
    5. '   ' → logprob: -10.53135871887207
    6. ' ' → logprob: -10.65635871887207
    7. '+' → logprob: -11.40635871887207
    8. '	j' → logprob: -12.40635871887207
    9. 'v' → logprob: -14.40635871887207
    10. '  ' → logprob: -14.78135871887207

Token 298: '+j' (ID: 71365)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0024751818273216486
    2. '
' → logprob: -7.502475261688232
    3. 'edges' → logprob: -7.502475261688232
    4. '               ' → logprob: -7.877475261688232
    5. ' edges' → logprob: -7.877475261688232
    6. '           ' → logprob: -9.002474784851074
    7. ',' → logprob: -9.252474784851074
    8. '+' → logprob: -9.627474784851074
    9. '                  ' → logprob: -9.627474784851074
    10. 'n' → logprob: -10.377474784851074

Token 299: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1812446266412735
    2. ',' → logprob: -1.9312446117401123
    3. ' edges' → logprob: -4.681244850158691
    4. 'edges' → logprob: -5.056244850158691
    5. '               ' → logprob: -6.681244850158691
    6. ' ,' → logprob: -6.806244850158691
    7. '(edges' → logprob: -7.681244850158691
    8. ',x' → logprob: -7.931244850158691
    9. '<|end|>' → logprob: -7.931244850158691
    10. '           ' → logprob: -8.181244850158691

Token 300: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005947640631347895
    2. '           ' → logprob: -6.505947589874268
    3. '               ' → logprob: -6.505947589874268
    4. ',' → logprob: -6.755947589874268
    5. 'edges' → logprob: -7.005947589874268
    6. ' edges' → logprob: -7.505947589874268
    7. '		           ' → logprob: -9.005948066711426
    8. '				' → logprob: -10.380948066711426
    9. '(edges' → logprob: -10.880948066711426
    10. '	               ' → logprob: -11.130948066711426

Token 301: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.6126134395599365
    2. ' edges' → logprob: -0.9876134395599365
    3. '                   ' → logprob: -2.4876134395599365
    4. '               ' → logprob: -6.737613677978516
    5. 'if' → logprob: -7.862613677978516
    6. '                       ' → logprob: -8.362613677978516
    7. '           ' → logprob: -8.362613677978516
    8. ' if' → logprob: -8.737613677978516
    9. '   ' → logprob: -9.362613677978516
    10. '       ' → logprob: -10.362613677978516

Token 302: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.217951886355877e-05
    2. '.' → logprob: -9.750061988830566
    3. 'append' → logprob: -13.500061988830566
    4. '.extend' → logprob: -14.375061988830566
    5. '.ap' → logprob: -14.500061988830566
    6. '.app' → logprob: -15.125061988830566
    7. ' .' → logprob: -15.125061988830566
    8. ').' → logprob: -15.375061988830566
    9. '.add' → logprob: -15.375061988830566
    10. '.push' → logprob: -15.500061988830566

Token 303: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003449984942562878
    2. '(x' → logprob: -8.375345230102539
    3. '(' → logprob: -9.125345230102539
    4. '(
' → logprob: -12.500345230102539
    5. ' ((' → logprob: -14.125345230102539
    6. ' (' → logprob: -15.000345230102539
    7. ' ' → logprob: -15.375345230102539
    8. '   ' → logprob: -15.500345230102539
    9. '(('' → logprob: -17.00034523010254
    10. '```' → logprob: -17.00034523010254

Token 304: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002806417876854539
    2. ' x' → logprob: -5.877806186676025
    3. '(x' → logprob: -14.627806663513184
    4. ')x' → logprob: -14.877806663513184
    5. ',x' → logprob: -16.252805709838867
    6. ')' → logprob: -16.252805709838867
    7. '
' → logprob: -16.627805709838867
    8. '   ' → logprob: -16.627805709838867
    9. '	x' → logprob: -16.752805709838867
    10. ',' → logprob: -16.752805709838867

Token 305: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.01269987877458334
    2. ',' → logprob: -4.387700080871582
    3. ',v' → logprob: -9.012700080871582
    4. ' ,' → logprob: -9.887700080871582
    5. 'u' → logprob: -11.762700080871582
    6. '   ' → logprob: -13.387700080871582
    7. ',
' → logprob: -13.512700080871582
    8. ' u' → logprob: -14.262700080871582
    9. '```' → logprob: -14.512700080871582
    10. ')' → logprob: -14.512700080871582

Token 306: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.08914601057767868
    2. ',' → logprob: -2.4641458988189697
    3. ',
' → logprob: -9.33914566040039
    4. '))' → logprob: -9.46414566040039
    5. ' ,' → logprob: -10.96414566040039
    6. 'v' → logprob: -11.71414566040039
    7. ',

' → logprob: -13.08914566040039
    8. ',y' → logprob: -13.21414566040039
    9. ',u' → logprob: -13.21414566040039
    10. ',\
' → logprob: -13.33914566040039

Token 307: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011195185594260693
    2. ')' → logprob: -4.511195182800293
    3. '))
' → logprob: -8.886195182800293
    4. ')
' → logprob: -12.511195182800293
    5. ')))' → logprob: -13.011195182800293
    6. ' ))' → logprob: -13.511195182800293
    7. '       ' → logprob: -14.136195182800293
    8. '))

' → logprob: -15.761195182800293
    9. '),' → logprob: -15.761195182800293
    10. '                   ' → logprob: -15.761195182800293

Token 308: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33557555079460144
    2. ' edges' → logprob: -1.8355755805969238
    3. 'edges' → logprob: -2.210575580596924
    4. '       ' → logprob: -4.210575580596924
    5. '    
' → logprob: -8.085575103759766
    6. '```' → logprob: -8.335575103759766
    7. '
' → logprob: -8.835575103759766
    8. '<|end|>' → logprob: -9.585575103759766
    9. '(edges' → logprob: -9.710575103759766
    10. ',' → logprob: -9.835575103759766

Token 309: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.7629311084747314
    2. '   ' → logprob: -0.8879311084747314
    3. ' edges' → logprob: -2.1379311084747314
    4. '
' → logprob: -6.137930870056152
    5. 'uf' → logprob: -6.762930870056152
    6. '    
' → logprob: -7.262930870056152
    7. '```' → logprob: -9.262930870056152
    8. '(edges' → logprob: -10.512930870056152
    9. '       ' → logprob: -10.637930870056152
    10. '        
' → logprob: -10.887930870056152

Token 310: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.011048408225178719
    2. '.' → logprob: -4.511048316955566
    3. 'sort' → logprob: -15.136048316955566
    4. '=' → logprob: -15.886048316955566
    5. ' .' → logprob: -16.261049270629883
    6. '.s' → logprob: -17.386049270629883
    7. '.sorted' → logprob: -17.636049270629883
    8. '.Sort' → logprob: -17.886049270629883
    9. '	sort' → logprob: -18.011049270629883
    10. ' sort' → logprob: -18.386049270629883

Token 311: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01760907471179962
    2. '(key' → logprob: -4.142609119415283
    3. '(reverse' → logprob: -6.642609119415283
    4. '(' → logprob: -8.892608642578125
    5. '()
' → logprob: -9.017608642578125
    6. 'key' → logprob: -12.392608642578125
    7. 'reverse' → logprob: -13.017608642578125
    8. ',key' → logprob: -13.642608642578125
    9. '()
' → logprob: -14.392608642578125
    10. ')' → logprob: -14.392608642578125

Token 312: '       ' (ID: 309)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.8979637622833252
    2. ' uf' → logprob: -0.8979637622833252
    3. '   ' → logprob: -1.8979637622833252
    4. '
' → logprob: -3.522963762283325
    5. '    
' → logprob: -5.522963523864746
    6. ' u' → logprob: -7.647963523864746
    7. ' union' → logprob: -8.522963523864746
    8. '.uf' → logprob: -8.647963523864746
    9. '  
' → logprob: -8.897963523864746
    10. ',' → logprob: -9.147963523864746

Token 313: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.0013104787794873118
    2. ' uf' → logprob: -6.876310348510742
    3. '   ' → logprob: -8.626310348510742
    4. '       ' → logprob: -9.376310348510742
    5. '.uf' → logprob: -13.001310348510742
    6. 'uff' → logprob: -13.126310348510742
    7. 'ufe' → logprob: -13.751310348510742
    8. 'UF' → logprob: -13.751310348510742
    9. 'ufs' → logprob: -13.751310348510742
    10. '        
' → logprob: -13.751310348510742

Token 314: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. '=
' → logprob: -16.501502990722656
    4. '＝' → logprob: -16.876502990722656
    5. '_=' → logprob: -17.251502990722656
    6. '(' → logprob: -17.751502990722656
    7. '=

' → logprob: -18.501502990722656
    8. '=len' → logprob: -18.626502990722656
    9. '=}' → logprob: -18.626502990722656
    10. ' ' → logprob: -19.376502990722656

Token 315: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -4.842555426876061e-06
    2. ' Union' → logprob: -12.250004768371582
    3. 'union' → logprob: -17.8750057220459
    4. '   ' → logprob: -20.0000057220459
    5. '_union' → logprob: -20.2500057220459
    6. ' union' → logprob: -21.8750057220459
    7. '       ' → logprob: -22.0000057220459
    8. 'Unit' → logprob: -22.3750057220459
    9. ''Union' → logprob: -22.5000057220459
    10. '           ' → logprob: -22.8750057220459

Token 316: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -2.7729658540920354e-05
    2. 'Union' → logprob: -11.125027656555176
    3. '[' → logprob: -12.375027656555176
    4. 'F' → logprob: -12.625027656555176
    5. '   ' → logprob: -13.625027656555176
    6. '(F' → logprob: -14.500027656555176
    7. 'Fill' → logprob: -14.500027656555176
    8. '(' → logprob: -15.000027656555176
    9. 'Fold' → logprob: -15.125027656555176
    10. ')' → logprob: -15.250027656555176

Token 317: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.704065213445574e-05
    2. 's' → logprob: -10.250046730041504
    3. '(' → logprob: -11.500046730041504
    4. '((' → logprob: -14.625046730041504
    5. ' (' → logprob: -14.875046730041504
    6. '(len' → logprob: -15.000046730041504
    7. '(d' → logprob: -15.125046730041504
    8. '(
' → logprob: -16.50004768371582
    9. '(S' → logprob: -17.62504768371582
    10. '
' → logprob: -17.75004768371582

Token 318: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.028922326862812042
    2. '+' → logprob: -3.6539223194122314
    3. ' +' → logprob: -6.0289225578308105
    4. '+s' → logprob: -8.528922080993652
    5. '+
' → logprob: -12.153922080993652
    6. 'd' → logprob: -12.528922080993652
    7. '+D' → logprob: -12.778922080993652
    8. '   ' → logprob: -15.028922080993652
    9. '
' → logprob: -16.15392303466797
    10. '+

' → logprob: -16.65392303466797

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9146995327901095e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.375019073486328
    4. '))' → logprob: -14.500019073486328
    5. '+' → logprob: -16.375019073486328
    6. ')
' → logprob: -16.875019073486328
    7. ')s' → logprob: -17.500019073486328
    8. '),' → logprob: -17.750019073486328
    9. ')

' → logprob: -17.750019073486328
    10. ')add' → logprob: -17.750019073486328

Token 320: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1122558116912842
    2. 'res' → logprob: -1.6122558116912842
    3. 'mst' → logprob: -1.6122558116912842
    4. '   ' → logprob: -2.237255811691284
    5. 'ans' → logprob: -2.612255811691284
    6. 'cost' → logprob: -3.487255811691284
    7. 'result' → logprob: -3.612255811691284
    8. '       ' → logprob: -3.987255811691284
    9. 'cnt' → logprob: -5.862256050109863
    10. 'answer' → logprob: -5.987256050109863

Token 321: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.46704375743865967
    2. 'res' → logprob: -1.2170437574386597
    3. 'total' → logprob: -3.217043876647949
    4. 'cost' → logprob: -3.592043876647949
    5. 'answer' → logprob: -5.717043876647949
    6. 'result' → logprob: -6.217043876647949
    7. 'mst' → logprob: -6.342043876647949
    8. 'cnt' → logprob: -6.842043876647949
    9. 'count' → logprob: -7.342043876647949
    10. 'tot' → logprob: -8.59204387664795

Token 322: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003180094063282013
    2. ' =' → logprob: -5.753180027008057
    3. '=-' → logprob: -13.378180503845215
    4. '=int' → logprob: -15.503180503845215
    5. '=None' → logprob: -15.878180503845215
    6. '=[]' → logprob: -15.878180503845215
    7. '=sum' → logprob: -15.878180503845215
    8. '＝' → logprob: -17.1281795501709
    9. '=_' → logprob: -17.5031795501709
    10. '=float' → logprob: -17.5031795501709

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. 'sum' → logprob: -15.750004768371582
    4. 's' → logprob: -16.000003814697266
    5. '-' → logprob: -16.250003814697266
    6. '1' → logprob: -16.750003814697266
    7. 'int' → logprob: -17.125003814697266
    8. '[]' → logprob: -17.125003814697266
    9. 'float' → logprob: -17.625003814697266
    10. '   ' → logprob: -17.625003814697266

Token 324: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.675110399723053
    2. 'for' → logprob: -0.925110399723053
    3. '
' → logprob: -2.425110340118408
    4. '   ' → logprob: -6.050110340118408
    5. '<|end|>' → logprob: -6.550110340118408
    6. '	for' → logprob: -7.425110340118408
    7. '       ' → logprob: -7.800110340118408
    8. ',' → logprob: -8.175110816955566
    9. 'count' → logprob: -8.925110816955566
    10. '0' → logprob: -8.925110816955566

Token 325: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2165498435497284
    2. ' for' → logprob: -1.7165498733520508
    3. '<|end|>' → logprob: -4.716549873352051
    4. '   ' → logprob: -5.716549873352051
    5. '
' → logprob: -6.716549873352051
    6. ',' → logprob: -7.966549873352051
    7. ' ' → logprob: -8.34154987335205
    8. '	for' → logprob: -8.34154987335205
    9. '0' → logprob: -8.84154987335205
    10. '    
' → logprob: -9.46654987335205

Token 326: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2649551331996918
    2. 'count' → logprob: -1.8899551630020142
    3. 'cnt' → logprob: -2.5149550437927246
    4. ' for' → logprob: -7.639955043792725
    5. 'num' → logprob: -9.139955520629883
    6. ' count' → logprob: -9.639955520629883
    7. ' cnt' → logprob: -10.389955520629883
    8. '   ' → logprob: -10.639955520629883
    9. 'connected' → logprob: -10.889955520629883
    10. 'used' → logprob: -11.014955520629883

Token 327: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08369933813810349
    2. 'cost' → logprob: -2.8336992263793945
    3. ' w' → logprob: -4.5836992263793945
    4. 'c' → logprob: -4.7086992263793945
    5. ' cost' → logprob: -7.4586992263793945
    6. 'weight' → logprob: -7.4586992263793945
    7. 'x' → logprob: -8.333699226379395
    8. '_,' → logprob: -8.333699226379395
    9. 'dist' → logprob: -8.708699226379395
    10. 'wt' → logprob: -9.833699226379395

Token 328: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7363579273223877
    2. ',u' → logprob: -0.7363579273223877
    3. ',v' → logprob: -3.3613579273223877
    4. ',x' → logprob: -5.361357688903809
    5. ',e' → logprob: -6.736357688903809
    6. ',w' → logprob: -7.236357688903809
    7. ',i' → logprob: -8.111357688903809
    8. ',t' → logprob: -8.611357688903809
    9. ',a' → logprob: -8.736357688903809
    10. ',c' → logprob: -9.361357688903809

Token 329: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -4.3226136767771095e-05
    2. ',' → logprob: -10.125042915344238
    3. ' ,' → logprob: -13.375042915344238
    4. 'v' → logprob: -13.625042915344238
    5. ',_' → logprob: -15.125042915344238
    6. '_,' → logprob: -17.750043869018555
    7. ',u' → logprob: -18.125043869018555
    8. ',w' → logprob: -18.375043869018555
    9. ',value' → logprob: -18.625043869018555
    10. ',z' → logprob: -19.000043869018555

Token 330: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760287642478943
    2. ' in' → logprob: -0.8260287642478943
    3. ',' → logprob: -9.701028823852539
    4. ',in' → logprob: -11.451028823852539
    5. '
' → logprob: -12.576028823852539
    6. ',_' → logprob: -13.076028823852539
    7. '   ' → logprob: -13.326028823852539
    8. ' ,' → logprob: -13.326028823852539
    9. '	in' → logprob: -13.701028823852539
    10. '  ' → logprob: -13.951028823852539

Token 331: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0009115827269852161
    2. ' edges' → logprob: -7.000911712646484
    3. '(edges' → logprob: -16.750911712646484
    4. '.edges' → logprob: -17.125911712646484
    5. '_edges' → logprob: -18.625911712646484
    6. 'edge' → logprob: -20.250911712646484
    7. '   ' → logprob: -20.625911712646484
    8. 'ed' → logprob: -21.000911712646484
    9. 'Edges' → logprob: -21.000911712646484
    10. '```' → logprob: -22.250911712646484

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015795379877090454
    2. ',' → logprob: -4.3907952308654785
    3. ':
' → logprob: -6.0157952308654785
    4. ' in' → logprob: -8.015795707702637
    5. '<|end|>' → logprob: -9.015795707702637
    6. '=' → logprob: -9.390795707702637
    7. '):' → logprob: -9.640795707702637
    8. 'in' → logprob: -9.765795707702637
    9. ')' → logprob: -10.265795707702637
    10. 'if' → logprob: -10.890795707702637

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04693969711661339
    2. '       ' → logprob: -3.5469396114349365
    3. ' if' → logprob: -4.171939849853516
    4. 'if' → logprob: -7.421939849853516
    5. '<|end|>' → logprob: -7.546939849853516
    6. '        ' → logprob: -9.046939849853516
    7. '   ' → logprob: -9.171939849853516
    8. '            
' → logprob: -9.796939849853516
    9. '          ' → logprob: -10.046939849853516
    10. '               ' → logprob: -10.421939849853516

Token 334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.040197115391492844
    2. ' if' → logprob: -3.5401971340179443
    3. 'uf' → logprob: -5.165196895599365
    4. '           ' → logprob: -5.415196895599365
    5. ' uf' → logprob: -8.415197372436523
    6. '       ' → logprob: -12.290197372436523
    7. '   ' → logprob: -13.415197372436523
    8. '               ' → logprob: -13.665197372436523
    9. '	if' → logprob: -14.665197372436523
    10. 'ufi' → logprob: -14.790197372436523

Token 335: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.004078401252627373
    2. ' uf' → logprob: -5.504078388214111
    3. ' not' → logprob: -17.504077911376953
    4. 'ufs' → logprob: -17.754077911376953
    5. 'not' → logprob: -18.379077911376953
    6. 'ufi' → logprob: -18.504077911376953
    7. ' ' → logprob: -18.754077911376953
    8. '  ' → logprob: -19.504077911376953
    9. 'ug' → logprob: -19.629077911376953
    10. ' ' → logprob: -19.879077911376953

Token 336: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -2.3199920178740285e-05
    2. 'union' → logprob: -10.750022888183594
    3. '.' → logprob: -13.500022888183594
    4. '	union' → logprob: -15.875022888183594
    5. ' .' → logprob: -16.125022888183594
    6. ' union' → logprob: -17.375022888183594
    7. '.un' → logprob: -17.625022888183594
    8. '.merge' → logprob: -18.500022888183594
    9. '_union' → logprob: -18.625022888183594
    10. '.uniform' → logprob: -19.375022888183594

Token 337: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. 'u' → logprob: -15.750000953674316
    4. '[u' → logprob: -18.125
    5. ' (' → logprob: -18.375
    6. ' u' → logprob: -18.625
    7. '(
' → logprob: -19.625
    8. ',u' → logprob: -19.625
    9. '(v' → logprob: -19.875
    10. '<u' → logprob: -20.5

Token 338: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.018954673781991005
    2. ',' → logprob: -4.018954753875732
    3. 'v' → logprob: -7.768954753875732
    4. ' ,' → logprob: -7.893954753875732
    5. ' v' → logprob: -12.018954277038574
    6. ',
' → logprob: -13.268954277038574
    7. ',u' → logprob: -15.393954277038574
    8. '(v' → logprob: -15.518954277038574
    9. '
' → logprob: -16.01895523071289
    10. ',y' → logprob: -16.51895523071289

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006744269747287035
    2. '):
' → logprob: -5.006744384765625
    3. ' ):' → logprob: -10.631744384765625
    4. ':' → logprob: -13.006744384765625
    5. ')' → logprob: -13.381744384765625
    6. '):
' → logprob: -14.381744384765625
    7. ' ):
' → logprob: -16.631744384765625
    8. '):

' → logprob: -16.631744384765625
    9. '}:' → logprob: -16.756744384765625
    10. ')：' → logprob: -17.381744384765625

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6303784251213074
    2. ' ans' → logprob: -1.2553784847259521
    3. '           ' → logprob: -2.005378484725952
    4. '
' → logprob: -3.255378484725952
    5. 'ans' → logprob: -4.880378246307373
    6. '   ' → logprob: -7.380378246307373
    7. '```' → logprob: -8.005378723144531
    8. '	ans' → logprob: -8.505378723144531
    9. '       ' → logprob: -8.630378723144531
    10. '\n' → logprob: -8.880378723144531

Token 341: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.10066477954387665
    2. ' ans' → logprob: -2.3506648540496826
    3. '               ' → logprob: -8.600665092468262
    4. '           ' → logprob: -8.725665092468262
    5. '
' → logprob: -9.725665092468262
    6. '	ans' → logprob: -10.850665092468262
    7. '   ' → logprob: -10.975665092468262
    8. '                   ' → logprob: -11.225665092468262
    9. '       ' → logprob: -13.975665092468262
    10. '(ans' → logprob: -14.975665092468262

Token 342: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47411611676216125
    2. ' +=' → logprob: -0.9741160869598389
    3. ']+=' → logprob: -10.849116325378418
    4. '+' → logprob: -10.974116325378418
    5. '+=(' → logprob: -13.599116325378418
    6. '+='' → logprob: -15.099116325378418
    7. '
' → logprob: -15.224116325378418
    8. '+="' → logprob: -15.599116325378418
    9. '=' → logprob: -15.974116325378418
    10. ' +' → logprob: -16.2241153717041

Token 343: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0206720617134124e-05
    2. ' w' → logprob: -11.50001049041748
    3. '	w' → logprob: -20.625009536743164
    4. '*w' → logprob: -22.250009536743164
    5. '
' → logprob: -22.375009536743164
    6. '<w' → logprob: -22.375009536743164
    7. '_w' → logprob: -22.625009536743164
    8. '```' → logprob: -23.250009536743164
    9. '=w' → logprob: -24.125009536743164
    10. ''w' → logprob: -24.500009536743164

Token 344: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01819349080324173
    2. '   ' → logprob: -4.26819372177124
    3. '    
' → logprob: -6.51819372177124
    4. '       ' → logprob: -6.89319372177124
    5. '  
' → logprob: -7.76819372177124
    6. '
' → logprob: -7.89319372177124
    7. 'print' → logprob: -8.268193244934082
    8. '<|end|>' → logprob: -8.393193244934082
    9. '        
' → logprob: -9.643193244934082
    10. '\n' → logprob: -9.768193244934082

Token 345: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22920776903629303
    2. '
' → logprob: -1.6042077541351318
    3. 'print' → logprob: -6.104207992553711
    4. '       ' → logprob: -6.854207992553711
    5. ' print' → logprob: -8.354207992553711
    6. '    
' → logprob: -8.729207992553711
    7. '
' → logprob: -10.479207992553711
    8. '```' → logprob: -10.479207992553711
    9. '<|end|>' → logprob: -10.729207992553711
    10. '        
' → logprob: -11.104207992553711

Token 346: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.019085442647337914
    2. '   ' → logprob: -4.01908540725708
    3. ' print' → logprob: -7.01908540725708
    4. '```' → logprob: -11.019085884094238
    5. '
' → logprob: -11.644085884094238
    6. '       ' → logprob: -11.769085884094238
    7. '	print' → logprob: -11.894085884094238
    8. '    
' → logprob: -15.144085884094238
    9. ' ' → logprob: -16.019084930419922
    10. '  ' → logprob: -16.394084930419922

Token 347: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003368926409166306
    2. '(' → logprob: -8.000336647033691
    3. 'ans' → logprob: -14.375336647033691
    4. '()' → logprob: -15.000336647033691
    5. '('' → logprob: -15.750336647033691
    6. ' (' → logprob: -15.750336647033691
    7. '(
' → logprob: -16.125337600708008
    8. '(abs' → logprob: -16.250337600708008
    9. '(f' → logprob: -17.000337600708008
    10. '((' → logprob: -18.125337600708008

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.625000953674316
    3. '())' → logprob: -16.5
    4. ')
' → logprob: -16.875
    5. '()' → logprob: -17.0
    6. ')`' → logprob: -17.0
    7. '))' → logprob: -18.125
    8. '')' → logprob: -19.375
    9. ')}' → logprob: -19.5
    10. '}' → logprob: -19.625

Token 349: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016365716233849525
    2. '__' → logprob: -4.1413655281066895
    3. '_' → logprob: -8.266366004943848
    4. ' main' → logprob: -10.641366004943848
    5. ' _' → logprob: -11.266366004943848
    6. '_name' → logprob: -11.266366004943848
    7. ' ' → logprob: -12.016366004943848
    8. '_main' → logprob: -12.141366004943848
    9. '___' → logprob: -12.266366004943848
    10. ' ' → logprob: -12.891366004943848

Token 351: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1637902408838272
    2. ' __' → logprob: -3.163790225982666
    3. ' ==' → logprob: -3.288790225982666
    4. '.' → logprob: -3.913790225982666
    5. '.__' → logprob: -3.913790225982666
    6. '==' → logprob: -4.663790225982666
    7. '__.__' → logprob: -4.913790225982666
    8. '__.' → logprob: -5.538790225982666
    9. '_' → logprob: -6.038790225982666
    10. ' .' → logprob: -6.163790225982666

Token 352: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.630610641877865e-06
    2. '==' → logprob: -12.500006675720215
    3. '_' → logprob: -13.250006675720215
    4. '___' → logprob: -14.375006675720215
    5. '__.__' → logprob: -15.250006675720215
    6. '____' → logprob: -15.875006675720215
    7. '__
' → logprob: -16.8750057220459
    8. ' ==' → logprob: -17.2500057220459
    9. '=="' → logprob: -17.6250057220459
    10. '__.' → logprob: -18.0000057220459

Token 353: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.24938423931598663
    2. ' ==' → logprob: -1.7493842840194702
    3. '==' → logprob: -3.1243841648101807
    4. '=="' → logprob: -6.49938440322876
    5. '=='' → logprob: -7.74938440322876
    6. '__.__' → logprob: -8.124383926391602
    7. '.__' → logprob: -8.374383926391602
    8. '.' → logprob: -9.124383926391602
    9. '_' → logprob: -9.499383926391602
    10. '=' → logprob: -9.749383926391602

Token 354: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33426833152770996
    2. '__' → logprob: -1.83426833152771
    3. ''' → logprob: -2.08426833152771
    4. ' "__' → logprob: -11.834268569946289
    5. 'main' → logprob: -13.209268569946289
    6. ' __' → logprob: -15.959268569946289
    7. '___' → logprob: -16.33426856994629
    8. ' '__' → logprob: -16.45926856994629
    9. '"<?' → logprob: -16.45926856994629
    10. '/__' → logprob: -16.70926856994629

Token 355: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.704273118884885e-07
    2. 'name' → logprob: -14.250000953674316
    3. ' main' → logprob: -17.875
    4. '_main' → logprob: -18.875
    5. 'ma' → logprob: -19.875
    6. '	main' → logprob: -21.0
    7. 'mai' → logprob: -21.0
    8. '"' → logprob: -22.25
    9. 'm' → logprob: -22.75
    10. '-main' → logprob: -23.25

Token 356: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.038279939442873
    2. '__' → logprob: -3.2882800102233887
    3. '__':
' → logprob: -8.53827953338623
    4. '```' → logprob: -11.28827953338623
    5. ':' → logprob: -11.78827953338623
    6. '__:' → logprob: -11.91327953338623
    7. '":' → logprob: -12.28827953338623
    8. '":
' → logprob: -12.66327953338623
    9. '"' → logprob: -12.91327953338623
    10. '_' → logprob: -13.53827953338623

Token 357: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9515531659126282
    2. '	main' → logprob: -0.9515531659126282
    3. 'main' → logprob: -1.9515531063079834
    4. '   ' → logprob: -2.7015531063079834
    5. '_main' → logprob: -5.2015533447265625
    6. '<|end|>' → logprob: -5.7015533447265625
    7. '    
' → logprob: -5.8265533447265625
    8. '   ' → logprob: -6.3265533447265625
    9. '(main' → logprob: -6.4515533447265625
    10. '
' → logprob: -7.5765533447265625

Token 358: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.31327295303344727
    2. ' main' → logprob: -1.3132729530334473
    3. '	main' → logprob: -11.438272476196289
    4. '   ' → logprob: -14.813272476196289
    5. '_main' → logprob: -16.81327247619629
    6. ' ' → logprob: -17.56327247619629
    7. '(main' → logprob: -17.81327247619629
    8. '.main' → logprob: -18.43827247619629
    9. ' ' → logprob: -18.81327247619629
    10. 'maine' → logprob: -19.43827247619629

Token 359: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 357
Tokens correctement prédits (1ère position, stricte): 170
Tokens correctement prédits (1ère position, avec adaptation): 191
Tokens correctement prédits (top 10): 306
Précision stricte (1ère position): 47.62%
Précision adaptée (1ère position): 53.50%
Précision (top 10): 85.71%
================================================================================
