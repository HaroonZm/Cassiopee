================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Iterator, Optional
import bisect

class PrimeSieve:
    def __init__(self, limit: int):
        self.limit = limit
        self._sieve: List[bool] = []
        self._primes: List[int] = []
        self._generate_sieve()

    def _generate_sieve(self):
        sieve = [True] * (self.limit + 1)
        sieve[0], sieve[1] = False, False
        for i in range(2, int(self.limit**0.5) + 1):
            if sieve[i]:
                for j in range(i*i, self.limit + 1, i):
                    sieve[j] = False
        self._sieve = sieve
        self._primes = [i for i, prime in enumerate(sieve) if prime]

    def is_prime(self, n: int) -> bool:
        if n <= self.limit:
            return self._sieve[n]
        # Fallback for numbers greater than limit (not needed here)
        return False

    def primes(self) -> List[int]:
        return self._primes

    def nth_prime(self, n: int) -> int:
        # 1-based indexing
        return self._primes[n - 1]

class PrimeGap:
    def __init__(self, primes: List[int]):
        self.primes = primes
        self.start_map = {}  # Map start of gap composite to gap length and endpoints
        self.end_map = {}    # Map end of gap composite to gap length and endpoints
        self._build_gaps()

    def _build_gaps(self):
        for i in range(len(self.primes) - 1):
            p1 = self.primes[i]
            p2 = self.primes[i + 1]
            gap_length = p2 - p1
            if gap_length > 1:
                # composite numbers lying between p1 and p2 are from p1+1 to p2-1
                for composite_candidate in range(p1 + 1, p2):
                    self.start_map[composite_candidate] = gap_length
                    self.end_map[composite_candidate] = gap_length

    def gap_length_containing(self, num: int) -> int:
        # Returns length of prime gap that contains num or 0 if none
        return self.start_map.get(num, 0)

class PrimeGapContext:
    """Context to hold all abstractions and provide a single interface."""

    MAX_LIMIT = 1299709  # given upper bound in problem statement

    def __init__(self):
        self.sieve = PrimeSieve(PrimeGapContext.MAX_LIMIT)
        self.prime_gap = PrimeGap(self.sieve.primes())

    def query_gap_length(self, num: int) -> int:
        if num <= 1:
            return 0
        if self.sieve.is_prime(num):
            return 0
        # num composite, check prime gap length
        return self.prime_gap.gap_length_containing(num)

class InputProcessor:
    def __init__(self, context: PrimeGapContext):
        self.context = context

    def iter_input(self, inputs: Iterator[str]) -> Iterator[int]:
        for line in inputs:
            line = line.strip()
            if line == '0':
                break
            try:
                val = int(line)
                if val > 1:
                    yield val
            except ValueError:
                continue

    def process(self, inputs: Iterator[str]) -> Iterator[int]:
        for num in self.iter_input(inputs):
            yield self.context.query_gap_length(num)

def main():
    import sys
    context = PrimeGapContext()
    processor = InputProcessor(context)
    inputs = (line for line in sys.stdin)
    results = processor.process(inputs)
    for res in results:
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.05127459019422531
    2. ' Any' → logprob: -3.301274538040161
    3. ' Optional' → logprob: -4.92627477645874
    4. 'List' → logprob: -5.80127477645874
    5. 'Any' → logprob: -6.30127477645874
    6. ' Union' → logprob: -7.55127477645874
    7. ' Generator' → logprob: -8.301274299621582
    8. 'Optional' → logprob: -9.176274299621582
    9. ' ' → logprob: -9.676274299621582
    10. ' Iterable' → logprob: -10.676274299621582

Token 4: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5396010279655457
    2. '```' → logprob: -1.4146010875701904
    3. ',' → logprob: -2.7896010875701904
    4. '[' → logprob: -3.0396010875701904
    5. '\' → logprob: -3.6646010875701904
    6. '\n' → logprob: -4.039600849151611
    7. 'import' → logprob: -5.414600849151611
    8. '\[' → logprob: -5.414600849151611
    9. ':' → logprob: -6.039600849151611
    10. 'a' → logprob: -6.539600849151611

Token 5: ' Iterator' (ID: 41994)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.6449089646339417
    2. 'Optional' → logprob: -0.7699089646339417
    3. 'Dict' → logprob: -5.519908905029297
    4. 'Tuple' → logprob: -5.519908905029297
    5. ' Dict' → logprob: -6.144908905029297
    6. ' Union' → logprob: -7.144908905029297
    7. ' Tuple' → logprob: -7.394908905029297
    8. 'Union' → logprob: -8.019908905029297
    9. 'Any' → logprob: -9.019908905029297
    10. 'Iterable' → logprob: -9.394908905029297

Token 6: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7455765604972839
    2. 'def' → logprob: -1.3705766201019287
    3. ',' → logprob: -2.3705766201019287
    4. ':' → logprob: -2.9955766201019287
    5. '\' → logprob: -3.1205766201019287
    6. '[' → logprob: -3.2455766201019287
    7. '\n' → logprob: -4.74557638168335
    8. '(' → logprob: -4.87057638168335
    9. '`' → logprob: -5.12057638168335
    10. 'a' → logprob: -5.12057638168335

Token 7: ' Optional' (ID: 19351)
  Prédit: 'Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterable' → logprob: -0.1239616647362709
    2. 'Optional' → logprob: -2.9989616870880127
    3. ' Iterable' → logprob: -3.4989616870880127
    4. 'Tuple' → logprob: -4.498961448669434
    5. ' Optional' → logprob: -4.623961448669434
    6. 'Generator' → logprob: -5.498961448669434
    7. 'Dict' → logprob: -5.873961448669434
    8. 'Sequence' → logprob: -5.873961448669434
    9. ' Generator' → logprob: -6.373961448669434
    10. 'Union' → logprob: -6.998961448669434

Token 8: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9019267559051514
    2. 'def' → logprob: -1.0269267559051514
    3. '[' → logprob: -2.0269267559051514
    4. '\' → logprob: -3.5269267559051514
    5. ':' → logprob: -3.6519267559051514
    6. '\n' → logprob: -4.2769269943237305
    7. ',' → logprob: -4.2769269943237305
    8. '
' → logprob: -5.7769269943237305
    9. '``' → logprob: -5.9019269943237305
    10. '(' → logprob: -5.9019269943237305

Token 9: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6933030486106873
    2. '```' → logprob: -0.9433030486106873
    3. '\n' → logprob: -3.193303108215332
    4. '
' → logprob: -3.818303108215332
    5. '\' → logprob: -4.568303108215332
    6. ',' → logprob: -4.818303108215332
    7. '

' → logprob: -5.068303108215332
    8. 'class' → logprob: -5.318303108215332
    9. '`' → logprob: -5.568303108215332
    10. ':' → logprob: -5.818303108215332

Token 10: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6001277565956116
    2. ' typing' → logprob: -0.9751277565956116
    3. ' sys' → logprob: -2.975127696990967
    4. ' ' → logprob: -4.350127696990967
    5. ' itertools' → logprob: -5.225127696990967
    6. ' re' → logprob: -5.975127696990967
    7. ' requests' → logprob: -6.975127696990967
    8. ' collections' → logprob: -8.100128173828125
    9. ' json' → logprob: -8.225128173828125
    10. ' io' → logprob: -8.350128173828125

Token 11: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.554343366995454e-05
    2. 'ected' → logprob: -10.000085830688477
    3. 'ection' → logprob: -10.375085830688477
    4. 't' → logprob: -13.000085830688477
    5. 'ec' → logprob: -13.000085830688477
    6. 'ective' → logprob: -13.625085830688477
    7. 'ects' → logprob: -13.750085830688477
    8. 'e' → logprob: -14.250085830688477
    9. 'ectl' → logprob: -15.000085830688477
    10. 'ectin' → logprob: -15.250085830688477

Token 12: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.024169720709323883
    2. '
' → logprob: -4.149169921875
    3. '_

' → logprob: -6.399169921875
    4. '
' → logprob: -6.899169921875
    5. 'def' → logprob: -6.899169921875
    6. '


' → logprob: -6.899169921875
    7. '

' → logprob: -7.024169921875
    8. '(' → logprob: -7.524169921875
    9. '(

' → logprob: -7.899169921875
    10. '\n' → logprob: -8.399169921875

Token 13: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5180433988571167
    2. '
' → logprob: -1.8930433988571167
    3. '

' → logprob: -1.8930433988571167
    4. 'def' → logprob: -2.6430435180664062
    5. '```' → logprob: -3.7680435180664062
    6. '\n' → logprob: -5.393043518066406
    7. '\' → logprob: -6.143043518066406
    8. '``' → logprob: -7.643043518066406
    9. '
' → logprob: -7.893043518066406
    10. ' class' → logprob: -8.143043518066406

Token 14: ' Prime' (ID: 20134)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6423883438110352
    2. ' Sorted' → logprob: -0.8923883438110352
    3. ' Ordered' → logprob: -3.767388343811035
    4. ' B' → logprob: -4.267388343811035
    5. ' Binary' → logprob: -5.267388343811035
    6. ' Range' → logprob: -5.767388343811035
    7. ' My' → logprob: -6.142388343811035
    8. ' Skip' → logprob: -6.142388343811035
    9. ' Balanced' → logprob: -6.392388343811035
    10. ' Space' → logprob: -6.767388343811035

Token 15: 'S' (ID: 50)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.8083913922309875
    2. 'Factors' → logprob: -1.0583913326263428
    3. ':' → logprob: -2.3083913326263428
    4. 'Generator' → logprob: -3.6833913326263428
    5. 's' → logprob: -3.9333913326263428
    6. 'S' → logprob: -4.433391571044922
    7. '(' → logprob: -4.558391571044922
    8. 'Calculator' → logprob: -4.933391571044922
    9. 'Finder' → logprob: -5.058391571044922
    10. 'Sizer' → logprob: -5.433391571044922

Token 16: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.1222665086388588
    2. 'et' → logprob: -2.4972665309906006
    3. 'e' → logprob: -3.8722665309906006
    4. 'earch' → logprob: -5.3722662925720215
    5. 't' → logprob: -6.1222662925720215
    6. 'egment' → logprob: -6.1222662925720215
    7. 'eg' → logprob: -7.4972662925720215
    8. 'ets' → logprob: -7.7472662925720215
    9. 'eries' → logprob: -7.9972662925720215
    10. 'etter' → logprob: -7.9972662925720215

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014371353900060058
    2. '(' → logprob: -6.626437187194824
    3. '():' → logprob: -10.251437187194824
    4. ' :' → logprob: -10.876437187194824
    5. '```' → logprob: -11.001437187194824
    6. ':**' → logprob: -11.626437187194824
    7. '(:' → logprob: -12.251437187194824
    8. '[' → logprob: -12.376437187194824
    9. ':
' → logprob: -12.751437187194824
    10. '<|end|>' → logprob: -12.751437187194824

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005185135640203953
    2. '```' → logprob: -5.880185127258301
    3. '   ' → logprob: -6.880185127258301
    4. '(' → logprob: -7.130185127258301
    5. '():' → logprob: -8.2551851272583
    6. ':
' → logprob: -8.6301851272583
    7. '[' → logprob: -10.6301851272583
    8. '<|end|>' → logprob: -11.7551851272583
    9. '  ' → logprob: -12.1301851272583
    10. '    
' → logprob: -12.1301851272583

Token 19: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0768267959356308
    2. 'def' (adapté à ' def') → logprob: -2.701826810836792
    3. '   ' → logprob: -5.076826572418213
    4. ' ' → logprob: -8.576827049255371
    5. '```' → logprob: -8.826827049255371
    6. '    ' → logprob: -8.951827049255371
    7. '    
' → logprob: -10.576827049255371
    8. ' ```' → logprob: -10.701827049255371
    9. 'class' → logprob: -10.951827049255371
    10. ' 
' → logprob: -11.201827049255371

Token 20: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01485845074057579
    2. ' _' → logprob: -4.514858245849609
    3. ' ' → logprob: -6.264858245849609
    4. ' init' → logprob: -7.514858245849609
    5. '__' → logprob: -7.889858245849609
    6. ' def' → logprob: -8.13985824584961
    7. 'init' → logprob: -8.38985824584961
    8. '_init' → logprob: -8.63985824584961
    9. '_' → logprob: -9.38985824584961
    10. 'itialize' → logprob: -9.63985824584961

Token 21: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -15.5
    3. 'in' → logprob: -17.5
    4. 'inite' → logprob: -18.5
    5. '_init' → logprob: -19.25
    6. 'int' → logprob: -19.5
    7. 'innit' → logprob: -19.75
    8. 'iter' → logprob: -20.75
    9. ' init' → logprob: -20.75
    10. 'initi' → logprob: -20.875

Token 22: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.025672605261206627
    2. '__' → logprob: -4.400672435760498
    3. '(' → logprob: -4.650672435760498
    4. '(self' → logprob: -6.650672435760498
    5. '__(
' → logprob: -6.650672435760498
    6. ' (' → logprob: -7.650672435760498
    7. '__((' → logprob: -9.025672912597656
    8. '__(*' → logprob: -9.275672912597656
    9. '_(' → logprob: -9.900672912597656
    10. '```' → logprob: -10.025672912597656

Token 23: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002189279766753316
    2. ' self' → logprob: -6.1271891593933105
    3. ')' → logprob: -12.752189636230469
    4. ' ' → logprob: -14.127189636230469
    5. '   ' → logprob: -15.877189636230469
    6. '0' → logprob: -15.877189636230469
    7. 'n' → logprob: -16.62718963623047
    8. '	self' → logprob: -17.62718963623047
    9. '(self' → logprob: -17.87718963623047
    10. '[' → logprob: -18.00218963623047

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2423727661371231
    2. 'self' → logprob: -1.992372751235962
    3. ' ,' → logprob: -3.367372751235962
    4. ' self' → logprob: -3.867372751235962
    5. ' ' → logprob: -3.992372751235962
    6. ')' → logprob: -6.617372989654541
    7. '(self' → logprob: -7.117372989654541
    8. ' )' → logprob: -7.117372989654541
    9. ',self' → logprob: -7.117372989654541
    10. '_self' → logprob: -7.242372989654541

Token 25: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -1.2308298349380493
    2. 'self' → logprob: -1.3558298349380493
    3. ' self' → logprob: -1.4808298349380493
    4. 'limit' → logprob: -1.6058298349380493
    5. 'n' → logprob: -4.60582971572876
    6. ' n' → logprob: -4.98082971572876
    7. ' max' → logprob: -5.85582971572876
    8. 'max' → logprob: -6.60582971572876
    9. '   ' → logprob: -7.35582971572876
    10. ' upper' → logprob: -9.105830192565918

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04479137808084488
    2. '):' → logprob: -3.1697914600372314
    3. '=' → logprob: -6.794791221618652
    4. ')' → logprob: -8.169791221618652
    5. ':int' → logprob: -8.294791221618652
    6. ' ):' → logprob: -9.169791221618652
    7. ' :' → logprob: -10.544791221618652
    8. '=int' → logprob: -13.044791221618652
    9. '):
' → logprob: -13.419791221618652
    10. '=None' → logprob: -13.794791221618652

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3132883608341217
    2. 'int' → logprob: -1.3132883310317993
    3. '=int' → logprob: -11.688288688659668
    4. ':int' → logprob: -11.813288688659668
    5. '[int' → logprob: -12.563288688659668
    6. ' Optional' → logprob: -12.813288688659668
    7. ')' → logprob: -13.938288688659668
    8. ' ' → logprob: -14.188288688659668
    9. '(int' → logprob: -14.313288688659668
    10. '<int' → logprob: -14.438288688659668

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062142569571733475
    2. ')' → logprob: -2.8121426105499268
    3. ':' → logprob: -9.312142372131348
    4. ' ):' → logprob: -10.187142372131348
    5. '   ' → logprob: -11.062142372131348
    6. '):
' → logprob: -11.562142372131348
    7. ',' → logprob: -11.687142372131348
    8. ')->' → logprob: -12.187142372131348
    9. ' )' → logprob: -12.812142372131348
    10. '=' → logprob: -13.562142372131348

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04033990576863289
    2. '        ' → logprob: -3.665339946746826
    3. 'self' → logprob: -5.165339946746826
    4. '    ' → logprob: -5.415339946746826
    5. ' self' → logprob: -6.165339946746826
    6. ' ' → logprob: -7.165339946746826
    7. '   ' → logprob: -7.665339946746826
    8. '     ' → logprob: -8.790339469909668
    9. ' ' → logprob: -8.915339469909668
    10. '      ' → logprob: -9.790339469909668

Token 30: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.30376747250556946
    2. 'self' (adapté à ' self') → logprob: -1.428767442703247
    3. '       ' → logprob: -3.803767442703247
    4. ' ' → logprob: -10.303767204284668
    5. '        ' → logprob: -10.678767204284668
    6. '   ' → logprob: -12.178767204284668
    7. ' ' → logprob: -12.803767204284668
    8. 'import' → logprob: -13.178767204284668
    9. '	self' → logprob: -13.178767204284668
    10. '```' → logprob: -13.428767204284668

Token 31: '.limit' (ID: 75191)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2222827970981598
    2. '._' → logprob: -1.7222827672958374
    3. '.limit' → logprob: -4.347282886505127
    4. ' .' → logprob: -4.972282886505127
    5. '.s' → logprob: -7.722282886505127
    6. ' ' → logprob: -9.847282409667969
    7. '.l' → logprob: -10.222282409667969
    8. '   ' → logprob: -10.472282409667969
    9. '.data' → logprob: -10.847282409667969
    10. '.values' → logprob: -11.347282409667969

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18005073070526123
    2. '=' → logprob: -1.8050507307052612
    3. ' ' → logprob: -8.93005084991455
    4. '   ' → logprob: -9.93005084991455
    5. '    ' → logprob: -10.30505084991455
    6. ')' → logprob: -11.30505084991455
    7. ' =)' → logprob: -11.30505084991455
    8. '<|end|>' → logprob: -11.30505084991455
    9. '  ' → logprob: -11.68005084991455
    10. ' >=' → logprob: -11.93005084991455

Token 33: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.009782060980796814
    2. 'limit' → logprob: -4.634781837463379
    3. ' ' → logprob: -10.884781837463379
    4. '(limit' → logprob: -12.259781837463379
    5. ' int' → logprob: -14.259781837463379
    6. '0' → logprob: -14.634781837463379
    7. '_limit' → logprob: -14.884781837463379
    8. '    ' → logprob: -15.009781837463379
    9. '  ' → logprob: -15.134781837463379
    10. ' ' → logprob: -15.759781837463379

Token 34: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04437011852860451
    2. '
' → logprob: -3.294370174407959
    3. 'self' → logprob: -6.294370174407959
    4. '        ' → logprob: -6.294370174407959
    5. '<|end|>' → logprob: -6.544370174407959
    6. ' self' → logprob: -7.294370174407959
    7. '
' → logprob: -9.5443696975708
    8. '   ' → logprob: -9.6693696975708
    9. ' ' → logprob: -9.6693696975708
    10. ',' → logprob: -9.6693696975708

Token 35: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4254551827907562
    2. '       ' → logprob: -1.3004552125930786
    3. 'self' → logprob: -2.675455093383789
    4. '<|end|>' → logprob: -6.300455093383789
    5. '```' → logprob: -6.675455093383789
    6. ' self' → logprob: -7.800455093383789
    7. '   ' → logprob: -8.175455093383789
    8. '\' → logprob: -8.175455093383789
    9. '        ' → logprob: -8.300455093383789
    10. '\n' → logprob: -8.300455093383789

Token 36: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20849590003490448
    2. ' self' → logprob: -1.708495855331421
    3. '       ' → logprob: -5.20849609375
    4. '
' → logprob: -6.58349609375
    5. 'import' → logprob: -9.83349609375
    6. ' ' → logprob: -10.70849609375
    7. '```' → logprob: -10.70849609375
    8. '_self' → logprob: -11.45849609375
    9. '<|end|>' → logprob: -11.45849609375
    10. '   ' → logprob: -11.58349609375

Token 37: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.15283015370368958
    2. ' .' → logprob: -2.777830123901367
    3. '.' → logprob: -3.277830123901367
    4. '.s' → logprob: -3.777830123901367
    5. '.pr' → logprob: -4.152830123901367
    6. '.is' → logprob: -7.777830123901367
    7. '_s' → logprob: -8.277830123901367
    8. '.py' → logprob: -8.277830123901367
    9. ' ' → logprob: -8.277830123901367
    10. '.bits' → logprob: -8.402830123901367

Token 38: 's' (ID: 82)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.4204702079296112
    2. 's' → logprob: -1.1704702377319336
    3. 'is' → logprob: -3.4204702377319336
    4. 'prime' → logprob: -9.295470237731934
    5. 'com' → logprob: -10.295470237731934
    6. 'cache' → logprob: -10.420470237731934
    7. ' primes' → logprob: -10.670470237731934
    8. 'base' → logprob: -10.795470237731934
    9. 'buffer' → logprob: -11.295470237731934
    10. 'flags' → logprob: -11.420470237731934

Token 39: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.007469381671398878
    2. 'ieved' → logprob: -5.007469177246094
    3. 't' → logprob: -8.257469177246094
    4. 's' → logprob: -8.507469177246094
    5. 'qrt' → logprob: -10.132469177246094
    6. 'quares' → logprob: -10.132469177246094
    7. 'et' → logprob: -10.382469177246094
    8. 'ieving' → logprob: -10.632469177246094
    9. 'IEVE' → logprob: -10.632469177246094
    10. 'ieves' → logprob: -11.007469177246094

Token 40: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04935980960726738
    2. '[' → logprob: -3.6743597984313965
    3. '=' → logprob: -4.5493597984313965
    4. '[:]' → logprob: -5.0493597984313965
    5. '_' → logprob: -5.7993597984313965
    6. 'd' → logprob: -6.5493597984313965
    7. ' ' → logprob: -8.049360275268555
    8. '[]' → logprob: -8.424360275268555
    9. '_array' → logprob: -8.424360275268555
    10. ',' → logprob: -8.924360275268555

Token 41: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2832910716533661
    2. ' List' → logprob: -1.4082911014556885
    3. '[List' → logprob: -6.533290863037109
    4. 'list' → logprob: -8.03329086303711
    5. ' list' → logprob: -9.15829086303711
    6. 'byte' → logprob: -9.78329086303711
    7. '[' → logprob: -9.78329086303711
    8. ' byte' → logprob: -9.90829086303711
    9. '[]' → logprob: -10.28329086303711
    10. 'Optional' → logprob: -10.78329086303711

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018152287229895592
    2. '[int' → logprob: -4.018152236938477
    3. '   ' → logprob: -13.518152236938477
    4. '[
' → logprob: -14.643152236938477
    5. ' [' → logprob: -15.393152236938477
    6. '```' → logprob: -16.143152236938477
    7. '<bool' → logprob: -16.268152236938477
    8. 'bool' → logprob: -16.393152236938477
    9. '[Int' → logprob: -16.893152236938477
    10. ',bool' → logprob: -17.518152236938477

Token 43: 'bool' (ID: 9037)
  Prédit: 'bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.015659024938941002
    2. 'int' → logprob: -4.265658855438232
    3. 'Optional' → logprob: -6.515658855438232
    4. ' bool' → logprob: -11.76565933227539
    5. '   ' → logprob: -13.89065933227539
    6. '	bool' → logprob: -14.14065933227539
    7. 'bo' → logprob: -14.26565933227539
    8. 'b' → logprob: -14.26565933227539
    9. '[' → logprob: -14.51565933227539
    10. 'optional' → logprob: -14.51565933227539

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011963568249484524
    2. ' ]' → logprob: -9.25011920928955
    3. '[' → logprob: -11.00011920928955
    4. ']=' → logprob: -12.12511920928955
    5. ' ' → logprob: -14.75011920928955
    6. ')' → logprob: -14.87511920928955
    7. '`]' → logprob: -16.125120162963867
    8. '   ' → logprob: -16.375120162963867
    9. '']' → logprob: -16.375120162963867
    10. '"]' → logprob: -17.000120162963867

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20152589678764343
    2. '=' → logprob: -1.7015259265899658
    3. '[' → logprob: -9.326525688171387
    4. '<|end|>' → logprob: -11.576525688171387
    5. ' ' → logprob: -11.701525688171387
    6. ' =[' → logprob: -12.826525688171387
    7. '=[' → logprob: -14.451525688171387
    8. ']' → logprob: -14.576525688171387
    9. '[:]' → logprob: -14.576525688171387
    10. '[]' → logprob: -15.076525688171387

Token 46: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16023002564907074
    2. ' [' → logprob: -1.910230040550232
    3. ' ' → logprob: -12.785229682922363
    4. '[self' → logprob: -14.035229682922363
    5. '   ' → logprob: -14.785229682922363
    6. '[start' → logprob: -15.035229682922363
    7. '[class' → logprob: -15.160229682922363
    8. '[n' → logprob: -15.535229682922363
    9. '[a' → logprob: -16.41023063659668
    10. '[int' → logprob: -16.53523063659668

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5482420325279236
    2. ' ' → logprob: -1.4232420921325684
    3. '<|end|>' → logprob: -2.1732420921325684
    4. ' 
' → logprob: -3.9232420921325684
    5. '        ' → logprob: -3.9232420921325684
    6. '\' → logprob: -4.923242092132568
    7. '
' → logprob: -4.923242092132568
    8. '   ' → logprob: -5.423242092132568
    9. '    ' → logprob: -6.048242092132568
    10. '[' → logprob: -6.298242092132568

Token 48: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8952286243438721
    2. 'self' (adapté à ' self') → logprob: -1.395228624343872
    3. '[' → logprob: -1.895228624343872
    4. '       ' → logprob: -2.020228624343872
    5. ' ' → logprob: -3.520228624343872
    6. ' [' → logprob: -4.145228385925293
    7. '   ' → logprob: -4.520228385925293
    8. '[self' → logprob: -6.895228385925293
    9. '        ' → logprob: -7.395228385925293
    10. '    ' → logprob: -7.520228385925293

Token 49: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.03822876885533333
    2. '.' → logprob: -3.288228750228882
    3. '_' → logprob: -9.913228988647461
    4. '.reset' → logprob: -10.288228988647461
    5. '.append' → logprob: -11.538228988647461
    6. '.fill' → logprob: -11.663228988647461
    7. '.create' → logprob: -11.788228988647461
    8. '.initialize' → logprob: -11.788228988647461
    9. '.clear' → logprob: -12.163228988647461
    10. 'import' → logprob: -12.413228988647461

Token 50: 'pr' (ID: 638)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1078474223613739
    2. 'pr' → logprob: -3.1078474521636963
    3. 'is' → logprob: -4.107847213745117
    4. 'build' → logprob: -4.232847213745117
    5. 'generate' → logprob: -4.607847213745117
    6. 'fill' → logprob: -5.732847213745117
    7. 'prime' → logprob: -6.232847213745117
    8. '_s' → logprob: -6.357847213745117
    9. 'initialize' → logprob: -6.607847213745117
    10. 'size' → logprob: -6.857847213745117

Token 51: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.011334276758134365
    2. 'ime' → logprob: -4.636334419250488
    3. 'im' → logprob: -7.511334419250488
    4. '```' → logprob: -9.073834419250488
    5. '_' → logprob: -9.448834419250488
    6. 'i' → logprob: -9.698834419250488
    7. '   ' → logprob: -10.323834419250488
    8. 'es' → logprob: -10.323834419250488
    9. 'omes' → logprob: -10.448834419250488
    10. 'imest' → logprob: -10.448834419250488

Token 52: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4326927959918976
    2. ' =' → logprob: -1.0576927661895752
    3. '=' → logprob: -5.807693004608154
    4. ' :' → logprob: -7.432693004608154
    5. ' ' → logprob: -8.432692527770996
    6. '<|end|>' → logprob: -9.807692527770996
    7. '=[]' → logprob: -10.182692527770996
    8. '  ' → logprob: -10.307692527770996
    9. '[:]' → logprob: -10.557692527770996
    10. '   ' → logprob: -12.807692527770996

Token 53: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.17938560247421265
    2. 'List' → logprob: -2.3043856620788574
    3. ' []' → logprob: -2.9293856620788574
    4. '[]' → logprob: -4.554385662078857
    5. '[List' → logprob: -8.3043851852417
    6. ' ' → logprob: -8.8043851852417
    7. ' Optional' → logprob: -11.0543851852417
    8. ' list' → logprob: -11.6793851852417
    9. '  ' → logprob: -12.0543851852417
    10. '	List' → logprob: -12.3043851852417

Token 54: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.630610641877865e-06
    2. '<int' → logprob: -12.750006675720215
    3. 'int' → logprob: -13.000006675720215
    4. '[' → logprob: -13.750006675720215
    5. ']int' → logprob: -15.625006675720215
    6. '=int' → logprob: -17.0000057220459
    7. '	int' → logprob: -17.1250057220459
    8. '[Int' → logprob: -17.1250057220459
    9. '(int' → logprob: -17.7500057220459
    10. '```' → logprob: -18.0000057220459

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001483564410591498
    2. ')' → logprob: -8.87514877319336
    3. ']=' → logprob: -12.37514877319336
    4. ' ]' → logprob: -13.00014877319336
    5. '=' → logprob: -14.50014877319336
    6. ' =' → logprob: -14.62514877319336
    7. ']
' → logprob: -15.75014877319336
    8. '[' → logprob: -16.00014877319336
    9. ']int' → logprob: -16.00014877319336
    10. '>' → logprob: -16.12514877319336

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11288885772228241
    2. '=' → logprob: -2.237888813018799
    3. '=[]' → logprob: -10.737889289855957
    4. '(' → logprob: -11.237889289855957
    5. ' =
' → logprob: -11.862889289855957
    6. '[' → logprob: -11.862889289855957
    7. '<|end|>' → logprob: -12.112889289855957
    8. '=[]
' → logprob: -12.862889289855957
    9. ' ' → logprob: -13.237889289855957
    10. '=
' → logprob: -13.612889289855957

Token 57: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10027438402175903
    2. ' []' → logprob: -2.3502743244171143
    3. '[' → logprob: -9.850274085998535
    4. '[]
' → logprob: -11.600274085998535
    5. '[]}' → logprob: -12.850274085998535
    6. '[]

' → logprob: -13.725274085998535
    7. '[])' → logprob: -14.100274085998535
    8. ' [' → logprob: -14.850274085998535
    9. '[]>' → logprob: -15.100274085998535
    10. ' []
' → logprob: -15.225274085998535

Token 58: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05193711444735527
    2. '       ' → logprob: -3.5519371032714844
    3. '<|end|>' → logprob: -4.051937103271484
    4. ' ' → logprob: -6.551937103271484
    5. ' 
' → logprob: -6.801937103271484
    6. '   ' → logprob: -7.176937103271484
    7. '  
' → logprob: -8.551937103271484
    8. '        
' → logprob: -8.801937103271484
    9. '        ' → logprob: -8.801937103271484
    10. '' → logprob: -9.051937103271484

Token 59: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8858916759490967
    2. '       ' → logprob: -1.6358916759490967
    3. 'def' → logprob: -1.7608916759490967
    4. '   ' → logprob: -2.2608916759490967
    5. ' self' → logprob: -2.6358916759490967
    6. ' ' → logprob: -3.6358916759490967
    7. '<|end|>' → logprob: -5.010891914367676
    8. '    ' → logprob: -5.635891914367676
    9. '
' → logprob: -6.760891914367676
    10. 's' → logprob: -7.010891914367676

Token 60: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.17983534932136536
    2. '.' → logprob: -1.804835319519043
    3. ' .' → logprob: -10.304835319519043
    4. '.__' → logprob: -12.304835319519043
    5. ' ' → logprob: -12.429835319519043
    6. '.reset' → logprob: -12.429835319519043
    7. '.initialize' → logprob: -12.429835319519043
    8. '_' → logprob: -12.429835319519043
    9. '.s' → logprob: -12.679835319519043

Token 61: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.8109288215637207
    2. 'build' → logprob: -1.4359288215637207
    3. 's' → logprob: -2.1859288215637207
    4. 'initialize' → logprob: -2.4359288215637207
    5. 'init' → logprob: -2.6859288215637207
    6. 'create' → logprob: -4.185928821563721
    7. 'populate' → logprob: -5.185928821563721
    8. 'run' → logprob: -5.310928821563721
    9. 'initialized' → logprob: -5.435928821563721
    10. 'fill' → logprob: -5.560928821563721

Token 62: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5329011678695679
    2. '(' → logprob: -1.4079011678695679
    3. '_s' → logprob: -1.9079011678695679
    4. '_pr' → logprob: -4.157901287078857
    5. '()' → logprob: -6.032901287078857
    6. '_prime' → logprob: -7.782901287078857
    7. 's' → logprob: -8.2829008102417
    8. '(_)' → logprob: -8.6579008102417
    9. '```' → logprob: -8.9079008102417
    10. '(_' → logprob: -9.1579008102417

Token 63: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0008760893833823502
    2. 'ive' → logprob: -7.500875949859619
    3. 'iev' → logprob: -9.000876426696777
    4. 'ieves' → logprob: -9.875876426696777
    5. '   ' → logprob: -10.500876426696777
    6. 'i' → logprob: -10.500876426696777
    7. '_' → logprob: -10.875876426696777
    8. '(' → logprob: -12.000876426696777
    9. '```' → logprob: -12.125876426696777
    10. ' ' → logprob: -12.125876426696777

Token 64: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1814637929201126
    2. '(' → logprob: -1.8064638376235962
    3. '(limit' → logprob: -6.431463718414307
    4. '()
' → logprob: -10.306464195251465
    5. ' ()' → logprob: -10.806464195251465
    6. '(
' → logprob: -11.431464195251465
    7. '<|end|>' → logprob: -11.806464195251465
    8. '(

' → logprob: -12.681464195251465
    9. '()

' → logprob: -12.681464195251465
    10. '()(' → logprob: -12.806464195251465

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4244770407676697
    2. '
' → logprob: -1.5494771003723145
    3. '<|end|>' → logprob: -2.9244771003723145
    4. ' ' → logprob: -3.7994771003723145
    5. '    
' → logprob: -3.9244771003723145
    6. 'def' → logprob: -4.6744771003723145
    7. ' 
' → logprob: -5.0494771003723145
    8. '  
' → logprob: -5.2994771003723145
    9. '```' → logprob: -5.6744771003723145
    10. ')' → logprob: -5.7994771003723145

Token 66: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07660984992980957
    2. '
' → logprob: -3.4516098499298096
    3. ' def' → logprob: -3.8266098499298096
    4. '   ' → logprob: -4.2016096115112305
    5. ' ' → logprob: -6.0766096115112305
    6. '    
' → logprob: -6.5766096115112305
    7. '  
' → logprob: -7.4516096115112305
    8. ' 
' → logprob: -8.07660961151123
    9. '```' → logprob: -8.32660961151123
    10. '<|end|>' → logprob: -8.82660961151123

Token 67: ' _' (ID: 1175)
  Prédit: '_generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_generate' → logprob: -0.08051387220621109
    2. ' _' → logprob: -2.5805139541625977
    3. '_' → logprob: -6.955513954162598
    4. '_get' → logprob: -7.705513954162598
    5. '_find' → logprob: -10.080513954162598
    6. '_add' → logprob: -10.455513954162598
    7. '_s' → logprob: -10.580513954162598
    8. '_update' → logprob: -10.955513954162598
    9. ' ' → logprob: -11.455513954162598
    10. '_generator' → logprob: -11.705513954162598

Token 68: 'generate' (ID: 36386)
  Prédit: 'generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.0014497563242912292
    2. 'g' → logprob: -6.8764495849609375
    3. 'gener' → logprob: -8.376449584960938
    4. 'gene' → logprob: -9.251449584960938
    5. 'ge' → logprob: -10.001449584960938
    6. '_generate' → logprob: -10.751449584960938
    7. 'gen' → logprob: -10.876449584960938
    8. ' generate' → logprob: -13.626449584960938
    9. 'enerate' → logprob: -14.376449584960938
    10. '	g' → logprob: -14.376449584960938

Token 69: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004636249504983425
    2. '_' → logprob: -5.379636287689209
    3. 's' → logprob: -12.00463581085205
    4. '_suffix' → logprob: -12.87963581085205
    5. ' _' → logprob: -13.87963581085205
    6. '_self' → logprob: -14.62963581085205
    7. '_sn' → logprob: -14.87963581085205
    8. '_t' → logprob: -15.00463581085205
    9. '_a' → logprob: -15.00463581085205
    10. '_code' → logprob: -15.25463581085205

Token 70: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.01415539812296629
    2. '_' → logprob: -4.389155387878418
    3. '_s' → logprob: -6.514155387878418
    4. 's' → logprob: -9.389155387878418
    5. 'ive' → logprob: -11.264155387878418
    6. 'e' → logprob: -11.889155387878418
    7. '_i' → logprob: -12.014155387878418
    8. '```' → logprob: -12.139155387878418
    9. 'IEVE' → logprob: -12.264155387878418
    10. 'a' → logprob: -12.389155387878418

Token 71: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014454466290771961
    2. '(' → logprob: -4.264454364776611
    3. ' (' → logprob: -9.38945484161377
    4. 'self' → logprob: -9.63945484161377
    5. '   ' → logprob: -9.88945484161377
    6. '(
' → logprob: -9.88945484161377
    7. '(s' → logprob: -11.13945484161377
    8. ' ' → logprob: -11.26445484161377
    9. '       ' → logprob: -12.01445484161377
    10. ' self' → logprob: -13.13945484161377

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11071697622537613
    2. ',' → logprob: -2.6107170581817627
    3. ')' → logprob: -3.6107170581817627
    4. 'self' → logprob: -6.110716819763184
    5. ' ):' → logprob: -6.610716819763184
    6. ':' → logprob: -7.860716819763184
    7. ' )' → logprob: -9.110716819763184
    8. ' ,' → logprob: -9.985716819763184
    9. ' ' → logprob: -9.985716819763184
    10. '(self' → logprob: -10.110716819763184

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00732062803581357
    2. '        
' → logprob: -6.132320404052734
    3. '<|end|>' → logprob: -6.382320404052734
    4. '
' → logprob: -6.882320404052734
    5. ':' → logprob: -7.257320404052734
    6. '  
' → logprob: -8.132320404052734
    7. '   ' → logprob: -8.257320404052734
    8. ' 
' → logprob: -8.632320404052734
    9. '```' → logprob: -9.257320404052734
    10. '    
' → logprob: -9.382320404052734

Token 74: ' sieve' (ID: 142781)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04071309417486191
    2. ' self' → logprob: -3.66571307182312
    3. '       ' → logprob: -4.415713310241699
    4. 'n' → logprob: -6.290713310241699
    5. 's' → logprob: -9.4157133102417
    6. 'limit' → logprob: -9.7907133102417
    7. 'size' → logprob: -9.9157133102417
    8. ' if' → logprob: -10.0407133102417
    9. '   ' → logprob: -10.0407133102417
    10. ' n' → logprob: -10.2907133102417

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006098243407905102
    2. '=' → logprob: -5.88109827041626
    3. '[:]' → logprob: -6.38109827041626
    4. ' ' → logprob: -7.13109827041626
    5. ':' → logprob: -8.131097793579102
    6. '[' → logprob: -8.131097793579102
    7. '   ' → logprob: -9.631097793579102
    8. '  ' → logprob: -10.381097793579102
    9. '_size' → logprob: -11.131097793579102
    10. '.extend' → logprob: -11.256097793579102

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008952890522778034
    2. ' [' → logprob: -4.758953094482422
    3. '[self' → logprob: -8.008953094482422
    4. '   ' → logprob: -13.258953094482422
    5. ' ' → logprob: -13.633953094482422
    6. '[s' → logprob: -14.008953094482422
    7. '[start' → logprob: -14.633953094482422
    8. '[type' → logprob: -15.133953094482422
    9. '[n' → logprob: -15.258953094482422
    10. '[class' → logprob: -15.633953094482422

Token 77: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.203409844194539e-05
    2. 'False' → logprob: -10.250041961669922
    3. ' True' → logprob: -12.000041961669922
    4. '(True' → logprob: -15.375041961669922
    5. 'Tr' → logprob: -15.500041961669922
    6. 'T' → logprob: -20.500041961669922
    7. '1' → logprob: -20.750041961669922
    8. '   ' → logprob: -20.875041961669922
    9. '.True' → logprob: -21.625041961669922
    10. '=True' → logprob: -21.875041961669922

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23280765116214752
    2. ' for' → logprob: -1.6078076362609863
    3. ',' → logprob: -5.857807636260986
    4. ']*' → logprob: -6.107807636260986
    5. 'for' → logprob: -7.107807636260986
    6. ' ' → logprob: -7.357807636260986
    7. ']*(' → logprob: -7.857807636260986
    8. ' ]' → logprob: -7.857807636260986
    9. '   ' → logprob: -11.607808113098145
    10. ' ,' → logprob: -11.732808113098145

Token 79: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5791627168655396
    2. ' for' → logprob: -1.2041627168655396
    3. '[' → logprob: -2.70416259765625
    4. '<|end|>' → logprob: -3.32916259765625
    5. ' ]' → logprob: -4.70416259765625
    6. '<|end|>' → logprob: -4.82916259765625
    7. ',' → logprob: -4.82916259765625
    8. 'for' → logprob: -5.45416259765625
    9. '        ' → logprob: -6.57916259765625
    10. '       ' → logprob: -6.82916259765625

Token 80: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004233443643897772
    2. ' (' → logprob: -5.504233360290527
    3. '(' → logprob: -9.629233360290527
    4. 'self' → logprob: -9.754233360290527
    5. '(max' → logprob: -10.629233360290527
    6. ' self' → logprob: -12.879233360290527
    7. '(this' → logprob: -13.254233360290527
    8. '(len' → logprob: -14.129233360290527
    9. '((' → logprob: -14.504233360290527
    10. '(sel' → logprob: -15.754233360290527

Token 81: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014164448715746403
    2. ' self' → logprob: -4.264164447784424
    3. ' ' → logprob: -15.014164924621582
    4. '(self' → logprob: -15.264164924621582
    5. '	self' → logprob: -16.139163970947266
    6. '   ' → logprob: -16.264163970947266
    7. '  ' → logprob: -16.639163970947266
    8. '
' → logprob: -17.764163970947266
    9. 'sel' → logprob: -17.889163970947266
    10. '    ' → logprob: -18.014163970947266

Token 82: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.0001872094871941954
    2. 'limit' → logprob: -8.875186920166016
    3. '.' → logprob: -10.000186920166016
    4. '.l' → logprob: -14.125186920166016
    5. ' limit' → logprob: -14.625186920166016
    6. '(limit' → logprob: -15.500186920166016
    7. '-limit' → logprob: -15.625186920166016
    8. '_limit' → logprob: -16.125186920166016
    9. 'Limit' → logprob: -16.250186920166016
    10. ' .' → logprob: -16.375186920166016

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804344683885574
    2. ' +' → logprob: -3.28804349899292
    3. ' ' → logprob: -13.288043022155762
    4. '+)' → logprob: -16.538043975830078
    5. '+
' → logprob: -17.038043975830078
    6. ' +
' → logprob: -17.288043975830078
    7. ')' → logprob: -17.788043975830078
    8. ' plus' → logprob: -17.788043975830078
    9. '1' → logprob: -18.288043975830078
    10. ' )' → logprob: -18.538043975830078

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364604339003563
    2. ' ' → logprob: -3.4086461067199707
    3. '2' → logprob: -15.283645629882812
    4. '  ' → logprob: -17.033645629882812
    5. '```' → logprob: -17.033645629882812
    6. ')' → logprob: -17.908645629882812
    7. '   ' → logprob: -18.283645629882812
    8. '0' → logprob: -19.096145629882812
    9. '7' → logprob: -19.596145629882812
    10. '
' → logprob: -19.971145629882812

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.37507438659668
    4. '```' → logprob: -19.50007438659668
    5. '  ' → logprob: -19.75007438659668
    6. '0' → logprob: -20.50007438659668
    7. '2' → logprob: -20.56257438659668
    8. '１' → logprob: -21.06257438659668
    9. '۱' → logprob: -21.37507438659668
    10. '7' → logprob: -21.43757438659668

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018270162865519524
    2. ')
' → logprob: -4.018270015716553
    3. '       ' → logprob: -10.143270492553711
    4. ' )' → logprob: -10.268270492553711
    5. ')
' → logprob: -10.643270492553711
    6. '<|end|>' → logprob: -11.518270492553711
    7. ' )
' → logprob: -12.393270492553711
    8. '
' → logprob: -13.643270492553711
    9. '<|end|>' → logprob: -13.893270492553711
    10. ')\' → logprob: -14.018270492553711

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20666371285915375
    2. ' ' → logprob: -2.5816636085510254
    3. '<|end|>' → logprob: -3.0816636085510254
    4. '
' → logprob: -4.206663608551025
    5. '        
' → logprob: -4.456663608551025
    6. ' 
' → logprob: -4.456663608551025
    7. '\n' → logprob: -5.706663608551025
    8. '   ' → logprob: -5.706663608551025
    9. ' for' → logprob: -5.706663608551025
    10. '#' → logprob: -5.831663608551025

Token 88: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02240070514380932
    2. '       ' → logprob: -4.022400856018066
    3. ' sieve' → logprob: -5.647400856018066
    4. 'for' → logprob: -7.772400856018066
    5. ' ' → logprob: -9.147400856018066
    6. '   ' → logprob: -9.647400856018066
    7. '        
' → logprob: -9.772400856018066
    8. ' for' → logprob: -10.522400856018066
    9. '```' → logprob: -11.022400856018066
    10. '	s' → logprob: -12.272400856018066

Token 89: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -15.750000953674316
    3. '[
' → logprob: -15.750000953674316
    4. '[:]' → logprob: -15.750000953674316
    5. '\[' → logprob: -16.0
    6. '[:' → logprob: -16.5
    7. '```' → logprob: -17.0
    8. ' ' → logprob: -17.0
    9. '[...]' → logprob: -18.125
    10. '[s' → logprob: -18.125

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016742534353397787
    2. ' ' → logprob: -9.625167846679688
    3. ':' → logprob: -9.875167846679688
    4. '1' → logprob: -11.125167846679688
    5. ')' → logprob: -11.125167846679688
    6. '=' → logprob: -11.750167846679688
    7. '2' → logprob: -12.500167846679688
    8. '[' → logprob: -13.000167846679688
    9. ']' → logprob: -13.000167846679688
    10. '   ' → logprob: -14.250167846679688

Token 91: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012547328136861324
    2. ' ]' → logprob: -4.387547492980957
    3. ']=' → logprob: -10.387547492980957
    4. '],' → logprob: -13.137547492980957
    5. ' =' → logprob: -13.512547492980957
    6. ' ' → logprob: -13.512547492980957
    7. '=' → logprob: -14.262547492980957
    8. ':' → logprob: -15.012547492980957
    9. ')' → logprob: -15.262547492980957
    10. '']' → logprob: -15.637547492980957

Token 92: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.025003014132380486
    2. 's' → logprob: -3.775002956390381
    3. ' ' → logprob: -6.400002956390381
    4. ' ' → logprob: -9.650003433227539
    5. '	s' → logprob: -11.400003433227539
    6. '<|end|>' → logprob: -12.025003433227539
    7. '(s' → logprob: -13.275003433227539
    8. '1' → logprob: -13.400003433227539
    9. '    ' → logprob: -13.400003433227539
    10. ' False' → logprob: -13.775003433227539

Token 93: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3085496127605438
    2. '[' → logprob: -1.4335496425628662
    3. '<|end|>' → logprob: -3.683549642562866
    4. ' ' → logprob: -7.433549404144287
    5. '=' → logprob: -8.183549880981445
    6. '[:]' → logprob: -8.433549880981445
    7. '<|end|>' → logprob: -8.558549880981445
    8. '[
' → logprob: -8.558549880981445
    9. '[]' → logprob: -9.058549880981445
    10. ',' → logprob: -9.433549880981445

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '  ' → logprob: -15.875158309936523
    4. '    ' → logprob: -17.312658309936523
    5. '   ' → logprob: -17.562658309936523
    6. '```' → logprob: -17.750158309936523
    7. '۱' → logprob: -18.000158309936523
    8. '<|end|>' → logprob: -18.125158309936523
    9. '[' → logprob: -18.187658309936523
    10. '

' → logprob: -18.875158309936523

Token 95: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01984197460114956
    2. '=' → logprob: -4.394842147827148
    3. ']' → logprob: -5.144842147827148
    4. '<|end|>' → logprob: -7.394842147827148
    5. ' ]' → logprob: -8.144842147827148
    6. ')' → logprob: -8.144842147827148
    7. ' ' → logprob: -8.394842147827148
    8. ']=' → logprob: -10.894842147827148
    9. ' )' → logprob: -11.144842147827148
    10. '=False' → logprob: -12.144842147827148

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004079589620232582
    2. '=' → logprob: -5.504079818725586
    3. ' ' → logprob: -14.379079818725586
    4. ' =
' → logprob: -14.504079818725586
    5. 'space' → logprob: -17.379079818725586
    6. '<|end|>' → logprob: -17.629079818725586
    7. '=False' → logprob: -17.754079818725586
    8. ' =)' → logprob: -18.129079818725586
    9. ' =[' → logprob: -18.254079818725586
    10. ')' → logprob: -18.754079818725586

Token 97: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.20141392946243286
    2. 'False' → logprob: -1.701413869857788
    3. '(False' → logprob: -14.576414108276367
    4. '=False' → logprob: -15.951414108276367
    5. '.False' → logprob: -18.326414108276367
    6. ' ' → logprob: -18.326414108276367
    7. '_false' → logprob: -18.826414108276367
    8. 'F' → logprob: -20.326414108276367
    9. ' True' → logprob: -20.826414108276367
    10. ' false' → logprob: -21.076414108276367

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07935336977243423
    2. '<|end|>' → logprob: -2.5793533325195312
    3. ',
' → logprob: -8.954353332519531
    4. '<|end|>' → logprob: -9.079353332519531
    5. '
' → logprob: -9.329353332519531
    6. ',None' → logprob: -9.954353332519531
    7. ' ,' → logprob: -10.579353332519531
    8. ',true' → logprob: -10.704353332519531
    9. '```' → logprob: -12.329353332519531
    10. ' ' → logprob: -12.579353332519531

Token 99: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16023103892803192
    2. 'False' → logprob: -1.9102309942245483
    3. ' ' → logprob: -12.41023063659668
    4. '(False' → logprob: -13.53523063659668
    5. ' True' → logprob: -14.03523063659668
    6. '<|end|>' → logprob: -14.78523063659668
    7. '=False' → logprob: -15.66023063659668
    8. '.False' → logprob: -16.53523063659668
    9. ' ' → logprob: -16.78523063659668
    10. '_false' → logprob: -16.91023063659668

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22577641904354095
    2. '<|end|>' → logprob: -1.6007764339447021
    3. '<|end|>' → logprob: -8.600776672363281
    4. '       ' → logprob: -9.475776672363281
    5. '
' → logprob: -9.975776672363281
    6. ' for' → logprob: -11.100776672363281
    7. ' 
' → logprob: -11.975776672363281
    8. '

' → logprob: -11.975776672363281
    9. '\n' → logprob: -12.225776672363281
    10. '```' → logprob: -12.350776672363281

Token 101: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07194523513317108
    2. '       ' → logprob: -3.1969451904296875
    3. '<|end|>' → logprob: -3.5719451904296875
    4. '
' → logprob: -9.321945190429688
    5. '\n' → logprob: -9.446945190429688
    6. ' 
' → logprob: -9.821945190429688
    7. '<|end|>' → logprob: -9.821945190429688
    8. '        
' → logprob: -10.196945190429688
    9. '  
' → logprob: -10.196945190429688
    10. '' → logprob: -11.321945190429688

Token 102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.587372899055481
    2. ' for' → logprob: -0.837372899055481
    3. '       ' → logprob: -4.837372779846191
    4. 'i' → logprob: -6.212372779846191
    5. ' i' → logprob: -6.712372779846191
    6. '   ' → logprob: -8.587372779846191
    7. '        
' → logprob: -11.962372779846191
    8. '
' → logprob: -12.212372779846191
    9. ' ' → logprob: -12.462372779846191
    10. 'n' → logprob: -12.462372779846191

Token 103: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.024474559351801872
    2. ' number' → logprob: -4.649474620819092
    3. ' num' → logprob: -5.024474620819092
    4. 'i' → logprob: -5.149474620819092
    5. ' p' → logprob: -6.274474620819092
    6. 'number' → logprob: -8.649474143981934
    7. 'num' → logprob: -8.899474143981934
    8. 'p' → logprob: -10.899474143981934
    9. ' n' → logprob: -12.399474143981934
    10. ' ' → logprob: -12.399474143981934

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012090419186279178
    2. 'in' → logprob: -6.751209259033203
    3. ' ' → logprob: -10.251209259033203
    4. 'n' → logprob: -14.126209259033203
    5. ' i' → logprob: -14.126209259033203
    6. '  ' → logprob: -14.501209259033203
    7. ',' → logprob: -15.001209259033203
    8. 'range' → logprob: -15.126209259033203
    9. '2' → logprob: -15.626209259033203
    10. '	in' → logprob: -15.876209259033203

Token 105: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0009118211455643177
    2. 'range' → logprob: -7.000911712646484
    3. '	range' → logprob: -15.750911712646484
    4. ' ' → logprob: -16.000911712646484
    5. '(range' → logprob: -17.875911712646484
    6. '   ' → logprob: -18.375911712646484
    7. '2' → logprob: -18.750911712646484
    8. '  ' → logprob: -19.250911712646484
    9. '.range' → logprob: -19.625911712646484
    10. ' xrange' → logprob: -20.375911712646484

Token 106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.107425062713446e-06
    2. '2' → logprob: -11.875006675720215
    3. ' ' → logprob: -16.75000762939453
    4. ' (' → logprob: -16.87500762939453
    5. '(
' → logprob: -18.12500762939453
    6. '```' → logprob: -22.87500762939453
    7. '3' → logprob: -23.87500762939453
    8. '((' → logprob: -23.87500762939453
    9. '(

' → logprob: -24.00000762939453
    10. '   ' → logprob: -24.00000762939453

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.00002098083496
    4. '  ' → logprob: -18.75002098083496
    5. '(' → logprob: -19.25002098083496
    6. '       ' → logprob: -19.50002098083496
    7. '２' → logprob: -19.50002098083496
    8. '```' → logprob: -19.75002098083496
    9. '۲' → logprob: -20.00002098083496
    10. '    ' → logprob: -20.12502098083496

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013351208763197064
    2. ' ,' → logprob: -6.626335144042969
    3. ',self' → logprob: -12.626335144042969
    4. ',int' → logprob: -13.501335144042969
    5. '    ' → logprob: -13.876335144042969
    6. ')' → logprob: -13.876335144042969
    7. ' ' → logprob: -14.001335144042969
    8. ',
' → logprob: -14.501335144042969
    9. '   ' → logprob: -14.751335144042969
    10. ',len' → logprob: -14.876335144042969

Token 109: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0142300333827734
    2. ' int' → logprob: -4.264230251312256
    3. 'self' → logprob: -9.764229774475098
    4. '   ' → logprob: -11.764229774475098
    5. '(int' → logprob: -14.639229774475098
    6. '	int' → logprob: -14.889229774475098
    7. '       ' → logprob: -15.639229774475098
    8. ' self' → logprob: -15.764229774475098
    9. '  ' → logprob: -16.514230728149414
    10. ' ' → logprob: -16.639230728149414

Token 110: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002957019954919815
    2. '(' → logprob: -5.877956867218018
    3. '(s' → logprob: -8.877957344055176
    4. '((' → logprob: -11.502957344055176
    5. '(
' → logprob: -13.877957344055176
    6. ' (' → logprob: -14.377957344055176
    7. '(pow' → logprob: -14.627957344055176
    8. 'self' → logprob: -15.002957344055176
    9. '(len' → logprob: -15.627957344055176
    10. '(i' → logprob: -16.87795639038086

Token 111: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.0010609137825667858
    2. '.sqrt' → logprob: -7.251060962677002
    3. '.' → logprob: -8.126060485839844
    4. '.self' → logprob: -10.876060485839844
    5. 'limit' → logprob: -10.876060485839844
    6. '.math' → logprob: -12.126060485839844
    7. ' .' → logprob: -12.876060485839844
    8. 'self' → logprob: -13.251060485839844
    9. ' limit' → logprob: -13.501060485839844
    10. '.import' → logprob: -13.501060485839844

Token 112: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.16025936603546143
    2. ' **' → logprob: -1.9102593660354614
    3. ' ' → logprob: -10.285259246826172
    4. ')' → logprob: -15.285259246826172
    5. ' **)' → logprob: -15.785259246826172
    6. '
' → logprob: -15.910259246826172
    7. ')**' → logprob: -16.160259246826172
    8. 'import' → logprob: -16.285259246826172
    9. ' )' → logprob: -16.285259246826172
    10. '.sqrt' → logprob: -16.535259246826172

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '.' → logprob: -15.250004768371582
    4. '

' → logprob: -18.1250057220459
    5. '   ' → logprob: -18.7500057220459
    6. ' ' → logprob: -19.5000057220459
    7. '```' → logprob: -19.8750057220459
    8. '  ' → logprob: -20.2500057220459
    9. '2' → logprob: -20.5000057220459
    10. '**' → logprob: -20.6250057220459

Token 114: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -13.50000286102295
    3. '5' → logprob: -13.75000286102295
    4. ' .' → logprob: -16.000003814697266
    5. '2' → logprob: -16.250003814697266
    6. '1' → logprob: -16.375003814697266
    7. ' ' → logprob: -16.500003814697266
    8. '3' → logprob: -16.625003814697266
    9. '6' → logprob: -17.250003814697266
    10. '45' → logprob: -18.062503814697266

Token 115: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -14.375001907348633
    3. '   ' → logprob: -14.812501907348633
    4. '

' → logprob: -15.500001907348633
    5. '```' → logprob: -15.875001907348633
    6. '"' → logprob: -16.500001907348633
    7. '...' → logprob: -16.687501907348633
    8. '0' → logprob: -16.812501907348633
    9. 'five' → logprob: -16.875001907348633
    10. '
' → logprob: -16.937501907348633

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009806736372411251
    2. ')+' → logprob: -4.6348066329956055
    3. ' )' → logprob: -10.009806632995605
    4. '+' → logprob: -12.384806632995605
    5. '()' → logprob: -14.509806632995605
    6. ' +' → logprob: -14.759806632995605
    7. '```' → logprob: -15.884806632995605
    8. '}' → logprob: -16.009807586669922
    9. '}+' → logprob: -16.259807586669922
    10. ')+(' → logprob: -16.384807586669922

Token 117: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7137582898139954
    2. '+' → logprob: -0.9637582898139954
    3. ')' → logprob: -2.2137582302093506
    4. ')+' → logprob: -3.9637582302093506
    5. ' ' → logprob: -8.33875846862793
    6. ' )' → logprob: -8.96375846862793
    7. '()' → logprob: -10.33875846862793
    8. '   ' → logprob: -11.08875846862793
    9. '```' → logprob: -11.46375846862793
    10. '()+' → logprob: -11.58875846862793

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005535095697268844
    2. ' ' → logprob: -7.500553607940674
    3. '2' → logprob: -15.375553131103516
    4. '```' → logprob: -16.375553131103516
    5. ')' → logprob: -16.500553131103516
    6. '  ' → logprob: -17.625553131103516
    7. '   ' → logprob: -17.625553131103516
    8. '

' → logprob: -18.125553131103516
    9. '(' → logprob: -18.375553131103516
    10. '
' → logprob: -18.625553131103516

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.875015258789062
    4. '```' → logprob: -17.875015258789062
    5. '  ' → logprob: -18.750015258789062
    6. '2' → logprob: -19.625015258789062
    7. ')' → logprob: -20.000015258789062
    8. '    ' → logprob: -20.250015258789062
    9. '(' → logprob: -20.562515258789062
    10. '

' → logprob: -20.625015258789062

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007748471572995186
    2. '):
' → logprob: -5.132748603820801
    3. ':' → logprob: -6.382748603820801
    4. ' ):' → logprob: -9.1327486038208
    5. ')' → logprob: -11.5077486038208
    6. '       ' → logprob: -12.6327486038208
    7. '   ' → logprob: -13.1327486038208
    8. '):
' → logprob: -13.3827486038208
    9. ' ):
' → logprob: -13.6327486038208
    10. ',' → logprob: -14.5077486038208

Token 121: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009799649938941002
    2. '       ' → logprob: -5.884799480438232
    3. '           ' → logprob: -6.509799480438232
    4. '<|end|>' → logprob: -6.759799480438232
    5. ' :' → logprob: -6.884799480438232
    6. ':
' → logprob: -6.884799480438232
    7. '):' → logprob: -7.259799480438232
    8. ' ' → logprob: -8.00979995727539
    9. '   ' → logprob: -8.13479995727539
    10. ' if' → logprob: -8.13479995727539

Token 122: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22960373759269714
    2. '           ' → logprob: -2.2296037673950195
    3. 'if' (adapté à ' if') → logprob: -2.8546037673950195
    4. ' ' → logprob: -3.7296037673950195
    5. '
' → logprob: -5.3546037673950195
    6. ' 
' → logprob: -5.4796037673950195
    7. '               ' → logprob: -6.1046037673950195
    8. '            ' → logprob: -6.6046037673950195
    9. '   ' → logprob: -7.3546037673950195
    10. '       ' → logprob: -7.3546037673950195

Token 123: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.0008223761687986553
    2. 's' → logprob: -7.1258225440979
    3. '	s' → logprob: -11.250822067260742
    4. ' ' → logprob: -13.000822067260742
    5. ' s' → logprob: -14.000822067260742
    6. ' ' → logprob: -14.750822067260742
    7. ' not' → logprob: -14.750822067260742
    8. ' sift' → logprob: -15.625822067260742
    9. ' sie' → logprob: -16.125822067260742
    10. '(s' → logprob: -16.125822067260742

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.794061770662665e-05
    2. '[' → logprob: -9.25009822845459
    3. ' [' → logprob: -13.50009822845459
    4. '[
' → logprob: -15.87509822845459
    5. '[I' → logprob: -17.125097274780273
    6. '   ' → logprob: -17.250097274780273
    7. '```' → logprob: -17.625097274780273
    8. 'i' → logprob: -18.250097274780273
    9. ' ' → logprob: -18.625097274780273
    10. '           ' → logprob: -19.125097274780273

Token 125: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0013083330122753978
    2. ']' → logprob: -7.501308441162109
    3. ':' → logprob: -7.751308441162109
    4. ']:
' → logprob: -8.25130844116211
    5. '):' → logprob: -10.62630844116211
    6. ' ]' → logprob: -11.00130844116211
    7. ']==' → logprob: -11.87630844116211
    8. ']=' → logprob: -12.62630844116211
    9. '[' → logprob: -12.87630844116211
    10. ':]' → logprob: -13.25130844116211

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02458774484694004
    2. '                ' → logprob: -4.774587631225586
    3. ':' → logprob: -5.149587631225586
    4. '<|end|>' → logprob: -5.149587631225586
    5. '                
' → logprob: -6.524587631225586
    6. '           ' → logprob: -7.399587631225586
    7. '            ' → logprob: -7.649587631225586
    8. ' ' → logprob: -7.774587631225586
    9. '            
' → logprob: -8.524587631225586
    10. ':
' → logprob: -8.774587631225586

Token 127: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05608176067471504
    2. '               ' → logprob: -2.931081771850586
    3. 'for' (adapté à ' for') → logprob: -7.306081771850586
    4. '                ' → logprob: -8.181081771850586
    5. ' j' → logprob: -9.306081771850586
    6. ' ' → logprob: -9.806081771850586
    7. '           ' → logprob: -9.806081771850586
    8. '            ' → logprob: -11.306081771850586
    9. ' ' → logprob: -11.431081771850586
    10. '                   ' → logprob: -11.931081771850586

Token 128: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.01105265598744154
    2. 'j' → logprob: -4.51105260848999
    3. '	j' → logprob: -13.011053085327148
    4. ' multiple' → logprob: -13.136053085327148
    5. '   ' → logprob: -15.261053085327148
    6. 'multiple' → logprob: -15.636053085327148
    7. ' multiples' → logprob: -16.38605308532715
    8. 'multip' → logprob: -16.88605308532715
    9. ' ' → logprob: -17.01105308532715
    10. '*j' → logprob: -17.26105308532715

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018236570060253143
    2. 'in' → logprob: -4.0182366371154785
    3. '=' → logprob: -9.89323616027832
    4. ' i' → logprob: -11.01823616027832
    5. ' =' → logprob: -11.64323616027832
    6. '	in' → logprob: -12.01823616027832
    7. '=i' → logprob: -13.39323616027832
    8. ' ' → logprob: -13.89323616027832
    9. '                ' → logprob: -14.89323616027832
    10. '=in' → logprob: -15.01823616027832

Token 130: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2586211562156677
    2. 'range' → logprob: -1.5086212158203125
    3. ' i' → logprob: -5.1336212158203125
    4. 'i' → logprob: -7.2586212158203125
    5. ' ' → logprob: -10.508621215820312
    6. '   ' → logprob: -10.633621215820312
    7. '	range' → logprob: -11.883621215820312
    8. '    ' → logprob: -12.383621215820312
    9. '  ' → logprob: -12.758621215820312
    10. '(range' → logprob: -13.258621215820312

Token 131: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000193527273950167
    2. '(' → logprob: -8.62519359588623
    3. ' i' → logprob: -11.50019359588623
    4. 'i' → logprob: -13.50019359588623
    5. ' (' → logprob: -13.62519359588623
    6. '(
' → logprob: -14.62519359588623
    7. '	i' → logprob: -15.25019359588623
    8. '   ' → logprob: -15.62519359588623
    9. ')' → logprob: -16.000192642211914
    10. '(j' → logprob: -16.500192642211914

Token 132: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.005786227528005838
    2. '*' → logprob: -5.255786418914795
    3. ' *' → logprob: -7.505786418914795
    4. 'i' → logprob: -13.005785942077637
    5. '*j' → logprob: -17.630786895751953
    6. ' i' → logprob: -17.630786895751953
    7. '**' → logprob: -18.755786895751953
    8. ' ' → logprob: -19.505786895751953
    9. '*=' → logprob: -20.505786895751953
    10. '*,' → logprob: -20.755786895751953

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.32654589228332e-05
    2. ',self' → logprob: -9.875073432922363
    3. ' ,' → logprob: -10.750073432922363
    4. ',
' → logprob: -15.375073432922363
    5. 'self' → logprob: -16.000072479248047
    6. ',

' → logprob: -18.500072479248047
    7. ' self' → logprob: -19.000072479248047
    8. '

' → logprob: -19.250072479248047
    9. ',len' → logprob: -19.375072479248047
    10. '
' → logprob: -19.875072479248047

Token 134: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25193315744400024
    2. ' self' → logprob: -1.5019330978393555
    3. '	self' → logprob: -13.376933097839355
    4. '   ' → logprob: -14.001933097839355
    5. ' ' → logprob: -14.126933097839355
    6. '(self' → logprob: -14.501933097839355
    7. '    ' → logprob: -15.501933097839355
    8. '           ' → logprob: -16.626934051513672
    9. '  ' → logprob: -17.126934051513672
    10. '       ' → logprob: -17.251934051513672

Token 135: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.00013381359167397022
    2. 'limit' → logprob: -9.000133514404297
    3. ' .' → logprob: -12.000133514404297
    4. ' limit' → logprob: -12.875133514404297
    5. '.' → logprob: -13.750133514404297
    6. '-limit' → logprob: -15.500133514404297
    7. '_limit' → logprob: -15.750133514404297
    8. 'Limit' → logprob: -16.875133514404297
    9. '(limit' → logprob: -16.875133514404297
    10. '
' → logprob: -17.625133514404297

Token 136: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804149478673935
    2. ' +' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.163042068481445
    4. '+
' → logprob: -18.038042068481445
    5. '   ' → logprob: -19.038042068481445
    6. '1' → logprob: -19.038042068481445
    7. '+j' → logprob: -19.538042068481445
    8. ' plus' → logprob: -19.663042068481445
    9. '
' → logprob: -19.788042068481445
    10. '```' → logprob: -19.788042068481445

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. '  ' → logprob: -18.375024795532227
    5. '```' → logprob: -19.000024795532227
    6. '
' → logprob: -19.375024795532227
    7. '    ' → logprob: -20.125024795532227
    8. ')' → logprob: -20.250024795532227
    9. ',' → logprob: -20.500024795532227
    10. '１' → logprob: -20.625024795532227

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.250017166137695
    4. '
' → logprob: -18.250017166137695
    5. '  ' → logprob: -18.375017166137695
    6. '```' → logprob: -19.000017166137695
    7. '１' → logprob: -19.125017166137695
    8. '     ' → logprob: -19.687517166137695
    9. '    ' → logprob: -19.750017166137695
    10. ')' → logprob: -20.000017166137695

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019081698264926672
    2. ',i' → logprob: -6.376908302307129
    3. '                   ' → logprob: -9.001908302307129
    4. ' ,' → logprob: -9.626908302307129
    5. '               ' → logprob: -11.501908302307129
    6. ',j' → logprob: -12.251908302307129
    7. '                ' → logprob: -15.001908302307129
    8. ':i' → logprob: -15.126908302307129
    9. '                       ' → logprob: -15.251908302307129
    10. '   ' → logprob: -15.501908302307129

Token 140: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759419202804565
    2. 'i' → logprob: -0.8259419202804565
    3. '	i' → logprob: -13.575942039489746
    4. ')' → logprob: -14.825942039489746
    5. ')i' → logprob: -15.200942039489746
    6. ' ' → logprob: -15.325942039489746
    7. ' ' → logprob: -15.700942039489746
    8. ',i' → logprob: -16.82594108581543
    9. '   ' → logprob: -17.20094108581543
    10. '{i' → logprob: -17.45094108581543

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028829758521169424
    2. '):
' → logprob: -5.877882957458496
    3. ' ):' → logprob: -10.127882957458496
    4. ')' → logprob: -10.377882957458496
    5. '):
' → logprob: -13.127882957458496
    6. ',' → logprob: -13.127882957458496
    7. ':' → logprob: -13.252882957458496
    8. ']:' → logprob: -15.377882957458496
    9. '   ' → logprob: -15.502882957458496
    10. '):

' → logprob: -15.627882957458496

Token 142: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004033518023788929
    2. 's' → logprob: -6.62903356552124
    3. '                       ' → logprob: -6.87903356552124
    4. ' sieve' → logprob: -7.00403356552124
    5. '                    
' → logprob: -8.254033088684082
    6. '               ' → logprob: -8.754033088684082
    7. '
' → logprob: -10.004033088684082
    8. '                    ' → logprob: -10.129033088684082
    9. ' 
' → logprob: -10.129033088684082
    10. '           ' → logprob: -10.254033088684082

Token 143: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009811222553253174
    2. ' sieve' → logprob: -4.6348114013671875
    3. ' ' → logprob: -10.759811401367188
    4. ' s' → logprob: -11.759811401367188
    5. '                   ' → logprob: -12.259811401367188
    6. ' 
' → logprob: -12.634811401367188
    7. '                    ' → logprob: -12.759811401367188
    8. '                ' → logprob: -13.009811401367188
    9. '                       ' → logprob: -13.134811401367188
    10. '	s' → logprob: -13.634811401367188

Token 144: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9146995327901095e-05
    2. '[' → logprob: -10.875019073486328
    3. '[i' → logprob: -15.625019073486328
    4. '[js' → logprob: -17.750019073486328
    5. 'j' → logprob: -17.875019073486328
    6. '```' → logprob: -18.250019073486328
    7. ' [' → logprob: -19.125019073486328
    8. '][' → logprob: -19.375019073486328
    9. '[...]' → logprob: -19.625019073486328
    10. '[
' → logprob: -19.625019073486328

Token 145: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00041065402911044657
    2. ' ]' → logprob: -8.250411033630371
    3. ']=' → logprob: -8.875411033630371
    4. '=' → logprob: -11.625411033630371
    5. ' =' → logprob: -14.500411033630371
    6. ']
' → logprob: -16.375410079956055
    7. ')' → logprob: -16.875410079956055
    8. ' ' → logprob: -17.625410079956055
    9. ']

' → logprob: -17.750410079956055
    10. '[' → logprob: -18.000410079956055

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048997215926647186
    2. ' =' → logprob: -3.048997163772583
    3. '=False' → logprob: -8.548996925354004
    4. ']' → logprob: -8.673996925354004
    5. ']=' → logprob: -10.173996925354004
    6. 'False' → logprob: -12.048996925354004
    7. ' False' → logprob: -15.048996925354004
    8. ')' → logprob: -15.173996925354004
    9. '=True' → logprob: -15.173996925354004
    10. ')=' → logprob: -16.29899787902832

Token 147: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. '(False' → logprob: -18.01104736328125
    4. '=False' → logprob: -20.13604736328125
    5. '.False' → logprob: -21.13604736328125
    6. '_false' → logprob: -22.26104736328125
    7. 'F' → logprob: -22.88604736328125
    8. 'false' → logprob: -23.38604736328125
    9. 'True' → logprob: -24.13604736328125
    10. ' false' → logprob: -24.63604736328125

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45707714557647705
    2. '       ' → logprob: -1.082077145576477
    3. '<|end|>' → logprob: -3.7070770263671875
    4. 's' → logprob: -6.4570770263671875
    5. '<|end|>' → logprob: -7.8320770263671875
    6. 'self' → logprob: -8.207077026367188
    7. '' → logprob: -8.582077026367188
    8. '        
' → logprob: -8.832077026367188
    9. '        ' → logprob: -9.082077026367188
    10. '
' → logprob: -9.207077026367188

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018280261429026723
    2. 'self' → logprob: -9.12518310546875
    3. '
' → logprob: -10.62518310546875
    4. ' self' → logprob: -10.87518310546875
    5. 's' → logprob: -11.75018310546875
    6. '<|end|>' → logprob: -11.87518310546875
    7. '   ' → logprob: -12.50018310546875
    8. ',' → logprob: -12.75018310546875
    9. '        
' → logprob: -13.12518310546875
    10. '               ' → logprob: -14.00018310546875

Token 150: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6074427962303162
    2. '       ' → logprob: -0.8574427962303162
    3. '
' → logprob: -3.982442855834961
    4. ' self' → logprob: -4.482442855834961
    5. '        
' → logprob: -7.982442855834961
    6. '	self' → logprob: -8.732442855834961
    7. '   ' → logprob: -9.232442855834961
    8. '
' → logprob: -9.232442855834961
    9. '  
' → logprob: -9.732442855834961
    10. '<|end|>' → logprob: -9.732442855834961

Token 151: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.613945101387799e-05
    2. '_s' → logprob: -9.500085830688477
    3. '.' → logprob: -11.750085830688477
    4. ']._' → logprob: -14.000085830688477
    5. '_' → logprob: -14.125085830688477
    6. ')._' → logprob: -14.375085830688477
    7. ' .' → logprob: -14.625085830688477
    8. '.s' → logprob: -15.125085830688477
    9. '_self' → logprob: -16.375085830688477
    10. '.'_' → logprob: -16.875085830688477

Token 152: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001105762057704851
    2. 'pr' → logprob: -9.125110626220703
    3. ' sieve' → logprob: -14.375110626220703
    4. '_s' → logprob: -14.875110626220703
    5. 'prime' → logprob: -16.125110626220703
    6. '   ' → logprob: -16.375110626220703
    7. 'generate' → logprob: -16.562610626220703
    8. '  ' → logprob: -16.875110626220703
    9. '_pr' → logprob: -17.125110626220703
    10. ' ' → logprob: -17.312610626220703

Token 153: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.01984536089003086
    2. '_' → logprob: -4.644845485687256
    3. 's' → logprob: -5.144845485687256
    4. '_s' → logprob: -5.769845485687256
    5. 'ive' → logprob: -8.519845008850098
    6. 'e' → logprob: -8.644845008850098
    7. 'erve' → logprob: -9.519845008850098
    8. '_pr' → logprob: -9.769845008850098
    9. ' sieve' → logprob: -9.769845008850098
    10. '   ' → logprob: -9.894845008850098

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061969030648469925
    2. '=' → logprob: -2.811969041824341
    3. '[:]' → logprob: -13.936968803405762
    4. '＝' → logprob: -15.811968803405762
    5. ' ' → logprob: -16.061969757080078
    6. ' =[' → logprob: -16.686969757080078
    7. '.extend' → logprob: -16.811969757080078
    8. '.=' → logprob: -17.186969757080078
    9. ',' → logprob: -17.311969757080078
    10. ' .=' → logprob: -18.061969757080078

Token 155: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018155913800001144
    2. ' sieve' → logprob: -4.018156051635742
    3. 'sie' → logprob: -12.518156051635742
    4. '[s' → logprob: -14.768156051635742
    5. 'se' → logprob: -15.018156051635742
    6. ' ' → logprob: -15.018156051635742
    7. '```' → logprob: -15.268156051635742
    8. '	s' → logprob: -15.393156051635742
    9. '[' → logprob: -15.393156051635742
    10. 'si' → logprob: -15.893156051635742

Token 156: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001513312105089426
    2. '
' → logprob: -7.376513481140137
    3. 'self' → logprob: -7.626513481140137
    4. 'for' → logprob: -8.626513481140137
    5. '<|end|>' → logprob: -9.376513481140137
    6. ' for' → logprob: -9.501513481140137
    7. '   ' → logprob: -10.751513481140137
    8. '        
' → logprob: -11.251513481140137
    9. ' self' → logprob: -11.376513481140137
    10. '```' → logprob: -12.751513481140137

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003609458915889263
    2. 'self' → logprob: -6.128609657287598
    3. 'for' → logprob: -7.253609657287598
    4. '   ' → logprob: -7.503609657287598
    5. ' for' → logprob: -9.503609657287598
    6. 'def' → logprob: -10.378609657287598
    7. ' self' → logprob: -10.503609657287598
    8. '<|end|>' → logprob: -12.003609657287598
    9. '	self' → logprob: -12.003609657287598
    10. '
' → logprob: -12.128609657287598

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00019972586596850306
    2. '       ' → logprob: -9.000199317932129
    3. ' self' → logprob: -9.500199317932129
    4. '   ' → logprob: -14.000199317932129
    5. 'for' → logprob: -14.875199317932129
    6. '	self' → logprob: -15.750199317932129
    7. ' ' → logprob: -17.000200271606445
    8. 'def' → logprob: -18.250200271606445
    9. '  ' → logprob: -18.500200271606445
    10. '        
' → logprob: -19.250200271606445

Token 159: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -15.375000953674316
    3. ')._' → logprob: -15.375000953674316
    4. '_pr' → logprob: -15.500000953674316
    5. ']._' → logprob: -15.500000953674316
    6. ' .' → logprob: -16.250001907348633
    7. '."_' → logprob: -17.000001907348633
    8. 'self' → logprob: -17.125001907348633
    9. '->_' → logprob: -18.000001907348633
    10. '.pr' → logprob: -18.125001907348633

Token 160: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -2.339278580620885e-06
    2. '_pr' → logprob: -13.250001907348633
    3. 's' → logprob: -15.875001907348633
    4. '.pr' → logprob: -16.125001907348633
    5. 'prime' → logprob: -17.250001907348633
    6. ' primes' → logprob: -17.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. '	pr' → logprob: -17.375001907348633
    9. 'pri' → logprob: -17.750001907348633
    10. 'generate' → logprob: -18.250001907348633

Token 161: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00017350474081467837
    2. '_' → logprob: -9.500173568725586
    3. 'ime' → logprob: -11.375173568725586
    4. 'mes' → logprob: -11.625173568725586
    5. 'omes' → logprob: -11.750173568725586
    6. 'i' → logprob: -11.875173568725586
    7. 'im' → logprob: -12.000173568725586
    8. '#' → logprob: -12.375173568725586
    9. '[' → logprob: -12.625173568725586
    10. '   ' → logprob: -12.875173568725586

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20147570967674255
    2. '=' → logprob: -1.701475739479065
    3. '.clear' → logprob: -10.076476097106934
    4. '.extend' → logprob: -10.951476097106934
    5. ' =[' → logprob: -13.576476097106934
    6. '[:]' → logprob: -14.451476097106934
    7. '.append' → logprob: -15.451476097106934
    8. '=[]' → logprob: -15.576476097106934
    9. ' =
' → logprob: -15.576476097106934
    10. '.=' → logprob: -15.951476097106934

Token 163: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5404548048973083
    2. '[i' → logprob: -1.2904548645019531
    3. ' [' → logprob: -2.040454864501953
    4. '[j' → logprob: -5.290454864501953
    5. '[int' → logprob: -6.040454864501953
    6. '[index' → logprob: -7.540454864501953
    7. '[self' → logprob: -7.540454864501953
    8. '[list' → logprob: -7.790454864501953
    9. '[get' → logprob: -8.040454864501953
    10. '[class' → logprob: -8.290454864501953

Token 164: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.32654589228332e-05
    2. 'x' → logprob: -9.625073432922363
    3. 'p' → logprob: -12.500073432922363
    4. 'idx' → logprob: -13.750073432922363
    5. 'num' → logprob: -13.750073432922363
    6. ' i' → logprob: -13.875073432922363
    7. 'n' → logprob: -15.375073432922363
    8. 'index' → logprob: -16.000072479248047
    9. '   ' → logprob: -18.500072479248047
    10. '	i' → logprob: -18.625072479248047

Token 165: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007634435780346394
    2. 'for' → logprob: -4.88263463973999
    3. ' ' → logprob: -10.507634162902832
    4. '	for' → logprob: -15.007634162902832
    5. '
' → logprob: -15.132634162902832
    6. ' 
' → logprob: -16.00763511657715
    7. '+' → logprob: -16.25763511657715
    8. '```' → logprob: -16.50763511657715
    9. '

' → logprob: -17.38263511657715
    10. 'd' → logprob: -17.75763511657715

Token 166: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6959569454193115
    2. ' i' → logprob: -0.6959569454193115
    3. ' range' → logprob: -6.445957183837891
    4. ',' → logprob: -6.945957183837891
    5. 'range' → logprob: -8.69595718383789
    6. ' in' → logprob: -9.57095718383789
    7. ' ' → logprob: -11.69595718383789
    8. ',i' → logprob: -12.19595718383789
    9. '	i' → logprob: -13.32095718383789
    10. '(i' → logprob: -13.94595718383789

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08933212608098984
    2. ' in' → logprob: -2.464332103729248
    3. 'in' → logprob: -8.214332580566406
    4. ' ,' → logprob: -9.589332580566406
    5. 'range' → logprob: -10.339332580566406
    6. ' range' → logprob: -11.714332580566406
    7. ' ' → logprob: -12.839332580566406
    8. ' i' → logprob: -13.214332580566406
    9. ',i' → logprob: -13.464332580566406
    10. ',in' → logprob: -13.464332580566406

Token 168: ' prime' (ID: 9197)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8462461829185486
    2. ' is' → logprob: -0.8462461829185486
    3. 'prime' → logprob: -2.0962462425231934
    4. ' prime' → logprob: -3.9712462425231934
    5. 'val' → logprob: -10.096245765686035
    6. 'p' → logprob: -10.221245765686035
    7. 'flag' → logprob: -10.471245765686035
    8. 'v' → logprob: -10.846245765686035
    9. ' val' → logprob: -10.971245765686035
    10. ' flag' → logprob: -11.721245765686035

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38688310980796814
    2. 'in' → logprob: -1.1368831396102905
    3. 's' → logprob: -12.011882781982422
    4. ',' → logprob: -13.011882781982422
    5. ' ' → logprob: -13.261882781982422
    6. 'ine' → logprob: -14.886882781982422
    7. 'i' → logprob: -15.636882781982422
    8. ' ' → logprob: -15.636882781982422
    9. '	in' → logprob: -15.761882781982422
    10. 'is' → logprob: -15.886882781982422

Token 170: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.048587486147880554
    2. ' enumerate' → logprob: -3.0485875606536865
    3. 'enum' → logprob: -16.673587799072266
    4. 'en' → logprob: -18.298587799072266
    5. 'Enumer' → logprob: -18.923587799072266
    6. '
' → logprob: -19.423587799072266
    7. '.enumer' → logprob: -19.548587799072266
    8. '```' → logprob: -19.548587799072266
    9. 'enqueue' → logprob: -19.548587799072266
    10. ' enumer' → logprob: -19.923587799072266

Token 171: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006394077208824456
    2. '(self' → logprob: -7.87563943862915
    3. 's' → logprob: -8.500638961791992
    4. 'self' → logprob: -9.875638961791992
    5. '(' → logprob: -12.375638961791992
    6. ' (' → logprob: -16.000638961791992
    7. '(
' → logprob: -16.875638961791992
    8. '```' → logprob: -17.125638961791992
    9. ')' → logprob: -17.500638961791992
    10. '       ' → logprob: -18.125638961791992

Token 172: 'ieve' (ID: 3703)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.041202038526535034
    2. 'elf' → logprob: -3.6662020683288574
    3. 'ieve' → logprob: -4.791202068328857
    4. 'l' → logprob: -6.041202068328857
    5. 'ive' → logprob: -6.541202068328857
    6. 'if' → logprob: -7.416202068328857
    7. 'self' → logprob: -7.791202068328857
    8. 'f' → logprob: -8.0412015914917
    9. '       ' → logprob: -8.9162015914917
    10. 'i' → logprob: -9.4162015914917

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012093995464965701
    2. ' )' → logprob: -7.251209259033203
    3. 'if' → logprob: -8.126209259033203
    4. ' if' → logprob: -8.501209259033203
    5. ']' → logprob: -15.751209259033203
    6. '()' → logprob: -16.376209259033203
    7. ')
' → logprob: -16.626209259033203
    8. '   ' → logprob: -16.751209259033203
    9. '）' → logprob: -17.251209259033203
    10. '        ' → logprob: -17.251209259033203

Token 174: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006719520781189203
    2. 'if' → logprob: -5.006719589233398
    3. ' ' → logprob: -13.631719589233398
    4. '        ' → logprob: -14.006719589233398
    5. '    ' → logprob: -14.631719589233398
    6. '	if' → logprob: -14.631719589233398
    7. '   ' → logprob: -14.756719589233398
    8. '       ' → logprob: -15.006719589233398
    9. 'If' → logprob: -15.881719589233398
    10. '()' → logprob: -16.5067195892334

Token 175: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.033662181347608566
    2. ' prime' → logprob: -3.4086620807647705
    3. 'pr' → logprob: -11.283661842346191
    4. 'prim' → logprob: -13.658661842346191
    5. ' ' → logprob: -14.408661842346191
    6. '   ' → logprob: -14.533661842346191
    7. '_prime' → logprob: -15.033661842346191
    8. ' ' → logprob: -15.658661842346191
    9. 'primer' → logprob: -15.658661842346191
    10. '
' → logprob: -15.658661842346191

Token 176: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.259079363080673e-05
    2. ' ]' → logprob: -11.375012397766113
    3. 'if' → logprob: -15.000012397766113
    4. ']
' → logprob: -15.250012397766113
    5. ' if' → logprob: -15.750012397766113
    6. ']

' → logprob: -15.875012397766113
    7. '()]' → logprob: -17.37501335144043
    8. 'continue' → logprob: -18.00001335144043
    9. '];' → logprob: -18.25001335144043
    10. ' and' → logprob: -18.37501335144043

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09247522801160812
    2. '
' → logprob: -2.842475175857544
    3. '<|end|>' → logprob: -4.342475414276123
    4. '    
' → logprob: -4.842475414276123
    5. 'def' → logprob: -5.467475414276123
    6. ' 
' → logprob: -6.717475414276123
    7. ' ' → logprob: -7.092475414276123
    8. '```' → logprob: -7.217475414276123
    9. '  
' → logprob: -7.717475414276123
    10. ')' → logprob: -7.842475414276123

Token 178: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2577728033065796
    2. '   ' → logprob: -1.6327728033065796
    3. ' def' → logprob: -3.632772922515869
    4. '
' → logprob: -6.007772922515869
    5. '    
' → logprob: -6.757772922515869
    6. '```' → logprob: -7.382772922515869
    7. ' ' → logprob: -7.507772922515869
    8. ' 
' → logprob: -8.007772445678711
    9. '   
' → logprob: -9.757772445678711
    10. '  
' → logprob: -9.757772445678711

Token 179: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.19074493646621704
    2. ' def' → logprob: -1.9407448768615723
    3. ' get' → logprob: -4.440744876861572
    4. 'is' → logprob: -5.190744876861572
    5. 'def' → logprob: -5.315744876861572
    6. ' primes' → logprob: -5.815744876861572
    7. ' __' → logprob: -6.315744876861572
    8. '__' → logprob: -6.815744876861572
    9. ' ' → logprob: -7.440744876861572
    10. 'get' → logprob: -7.815744876861572

Token 180: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.018202388659119606
    2. '_' → logprob: -4.018202304840088
    3. ' _' → logprob: -11.018202781677246
    4. '_pr' → logprob: -11.643202781677246
    5. '_pal' → logprob: -11.893202781677246
    6. '_valid' → logprob: -12.143202781677246
    7. '_space' → logprob: -12.893202781677246
    8. '_safe' → logprob: -13.393202781677246
    9. '_prob' → logprob: -13.643202781677246
    10. '_div' → logprob: -13.643202781677246

Token 181: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20146402716636658
    2. '(' → logprob: -1.701464056968689
    3. '(
' → logprob: -10.45146369934082
    4. ' (' → logprob: -11.20146369934082
    5. 'self' → logprob: -12.20146369934082
    6. '(s' → logprob: -13.70146369934082
    7. '(

' → logprob: -14.20146369934082
    8. '(sel' → logprob: -14.95146369934082
    9. ' self' → logprob: -15.57646369934082
    10. ' ' → logprob: -15.95146369934082

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004102623555809259
    2. '(self' → logprob: -6.25410270690918
    3. 'self' → logprob: -6.87910270690918
    4. ' ,' → logprob: -7.12910270690918
    5. '(' → logprob: -8.50410270690918
    6. ',self' → logprob: -9.50410270690918
    7. ')' → logprob: -10.37910270690918
    8. ' (' → logprob: -11.62910270690918
    9. ' ' → logprob: -12.25410270690918
    10. ',
' → logprob: -12.50410270690918

Token 183: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.32511967420578003
    2. 'n' → logprob: -1.3251197338104248
    3. 'num' → logprob: -5.325119495391846
    4. ' num' → logprob: -5.825119495391846
    5. ' number' → logprob: -6.075119495391846
    6. 'number' → logprob: -6.700119495391846
    7. ' self' → logprob: -8.450119972229004
    8. 'self' → logprob: -8.450119972229004
    9. '   ' → logprob: -12.450119972229004
    10. ' x' → logprob: -13.325119972229004

Token 184: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035631912760436535
    2. ')' → logprob: -8.125356674194336
    3. '):' → logprob: -9.875356674194336
    4. ':int' → logprob: -12.375356674194336
    5. ' :' → logprob: -12.875356674194336
    6. '   ' → logprob: -14.125356674194336
    7. ' )' → logprob: -14.750356674194336
    8. '):
' → logprob: -15.000356674194336
    9. ' ' → logprob: -15.375356674194336
    10. '  ' → logprob: -16.125356674194336

Token 185: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8936668634414673
    2. 'int' → logprob: -0.8936668634414673
    3. ' int' → logprob: -1.7686668634414673
    4. ' )' → logprob: -5.268666744232178
    5. '   ' → logprob: -5.893666744232178
    6. ':' → logprob: -6.268666744232178
    7. ':int' → logprob: -8.143667221069336
    8. 'n' → logprob: -8.393667221069336
    9. '):' → logprob: -8.643667221069336
    10. '       ' → logprob: -8.643667221069336

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.500003814697266
    3. '):' → logprob: -15.875003814697266
    4. '   ' → logprob: -16.125003814697266
    5. ')->' → logprob: -17.250003814697266
    6. '`)' → logprob: -18.250003814697266
    7. ':' → logprob: -18.500003814697266
    8. ' ' → logprob: -19.375003814697266
    9. '')' → logprob: -19.500003814697266
    10. ')
' → logprob: -20.000003814697266

Token 187: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2668445408344269
    2. '->' → logprob: -1.5168445110321045
    3. ' ->' → logprob: -4.266844749450684
    4. ':' → logprob: -7.391844749450684
    5. ')->' → logprob: -9.391844749450684
    6. '   ' → logprob: -10.016844749450684
    7. '>' → logprob: -11.141844749450684
    8. ']' → logprob: -11.391844749450684
    9. '-' → logprob: -12.516844749450684
    10. '       ' → logprob: -13.391844749450684

Token 188: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.033905357122421265
    2. 'bool' → logprob: -3.408905267715454
    3. ' Optional' → logprob: -8.533905029296875
    4. 'Optional' → logprob: -10.158905029296875
    5. ' ' → logprob: -10.783905029296875
    6. '  ' → logprob: -13.533905029296875
    7. '	bool' → logprob: -14.158905029296875
    8. ' ' → logprob: -14.533905029296875
    9. '   ' → logprob: -15.158905029296875
    10. '<bool' → logprob: -15.783905029296875

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.0219828002154827e-05
    2. '):' → logprob: -11.125020027160645
    3. ':
' → logprob: -12.375020027160645
    4. ')' → logprob: -14.750020027160645
    5. '():' → logprob: -15.125020027160645
    6. ' :' → logprob: -15.750020027160645
    7. ':**' → logprob: -16.12502098083496
    8. ':return' → logprob: -16.50002098083496
    9. '   ' → logprob: -16.87502098083496
    10. '->' → logprob: -17.00002098083496

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002606333466246724
    2. ' return' → logprob: -6.502606391906738
    3. '   ' → logprob: -8.002606391906738
    4. ' ' → logprob: -8.127606391906738
    5. '    ' → logprob: -9.002606391906738
    6. ':' → logprob: -9.127606391906738
    7. ' 
' → logprob: -10.002606391906738
    8. '        ' → logprob: -10.377606391906738
    9. ':return' → logprob: -10.502606391906738
    10. '        
' → logprob: -10.627606391906738

Token 191: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.34419482946395874
    2. ' return' → logprob: -1.5941948890686035
    3. ' if' → logprob: -3.0941948890686035
    4. 'if' (adapté à ' if') → logprob: -3.8441948890686035
    5. '       ' → logprob: -3.8441948890686035
    6. '0' → logprob: -11.594194412231445
    7. '   ' → logprob: -12.594194412231445
    8. ' ' → logprob: -13.969194412231445
    9. 'self' → logprob: -13.969194412231445
    10. '```' → logprob: -13.969194412231445

Token 192: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5885366201400757
    2. ' n' → logprob: -1.0885366201400757
    3. '0' → logprob: -2.3385367393493652
    4. ' ' → logprob: -4.463536739349365
    5. '1' → logprob: -8.838536262512207
    6. '	n' → logprob: -11.463536262512207
    7. '   ' → logprob: -12.838536262512207
    8. '  ' → logprob: -14.588536262512207
    9. ' ' → logprob: -14.963536262512207
    10. ' not' → logprob: -14.963536262512207

Token 193: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8834642767906189
    2. ' >' → logprob: -1.0084643363952637
    3. ' <=' → logprob: -2.3834643363952637
    4. '<=' → logprob: -2.5084643363952637
    5. '<' → logprob: -3.5084643363952637
    6. ' <' → logprob: -4.008464336395264
    7. ' ' → logprob: -9.258463859558105
    8. '>=' → logprob: -10.883463859558105
    9. '0' → logprob: -11.133463859558105
    10. ' >=' → logprob: -12.258463859558105

Token 194: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12701557576656342
    2. ' self' → logprob: -2.1270155906677246
    3. '0' → logprob: -9.627015113830566
    4. ' ' → logprob: -11.127015113830566
    5. '<|end|>' → logprob: -12.377015113830566
    6. '[self' → logprob: -14.127015113830566
    7. '   ' → logprob: -14.502015113830566
    8. '(self' → logprob: -14.752015113830566
    9. '	self' → logprob: -15.502015113830566
    10. '1' → logprob: -15.502015113830566

Token 195: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.00013786651834379882
    2. '.' → logprob: -9.125138282775879
    3. 'limit' → logprob: -10.500138282775879
    4. '.l' → logprob: -14.125138282775879
    5. ' .' → logprob: -15.125138282775879
    6. ' limit' → logprob: -15.375138282775879
    7. 'Limit' → logprob: -16.875137329101562
    8. '_limit' → logprob: -17.125137329101562
    9. '._' → logprob: -18.125137329101562
    10. '-limit' → logprob: -18.125137329101562

Token 196: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15857253968715668
    2. ':' → logprob: -2.4085724353790283
    3. ':
' → logprob: -3.1585724353790283
    4. 'and' → logprob: -4.283572673797607
    5. ':return' → logprob: -8.15857219696045
    6. '           ' → logprob: -10.53357219696045
    7. '       ' → logprob: -10.78357219696045
    8. ' :' → logprob: -11.28357219696045
    9. ' ' → logprob: -11.40857219696045
    10. ' :
' → logprob: -11.53357219696045

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21384236216545105
    2. ' return' → logprob: -2.8388423919677734
    3. '       ' → logprob: -3.0888423919677734
    4. ':
' → logprob: -3.3388423919677734
    5. ':' → logprob: -3.8388423919677734
    6. ' and' → logprob: -4.588842391967773
    7. ':return' → logprob: -4.588842391967773
    8. 'return' → logprob: -4.838842391967773
    9. '
' → logprob: -6.213842391967773
    10. ' 
' → logprob: -8.463842391967773

Token 198: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20294439792633057
    2. ' return' → logprob: -1.7029443979263306
    3. '
' → logprob: -6.827944278717041
    4. '       ' → logprob: -8.5779447555542
    5. '           ' → logprob: -8.8279447555542
    6. ' 
' → logprob: -9.7029447555542
    7. ':return' → logprob: -10.0779447555542
    8. '	return' → logprob: -13.2029447555542
    9. '   ' → logprob: -13.3279447555542
    10. '{return' → logprob: -13.4529447555542

Token 199: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07888978719711304
    2. ' self' → logprob: -2.578889846801758
    3. '           ' → logprob: -17.828889846801758
    4. '(self' → logprob: -18.328889846801758
    5. 'True' → logprob: -18.453889846801758
    6. 'Self' → logprob: -19.078889846801758
    7. '       ' → logprob: -19.203889846801758
    8. '	self' → logprob: -19.328889846801758
    9. '[self' → logprob: -19.328889846801758
    10. '_self' → logprob: -19.703889846801758

Token 200: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.511406809295295e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -15.500006675720215
    4. ' ' → logprob: -18.2500057220459
    5. ']._' → logprob: -18.8750057220459
    6. ')._' → logprob: -19.2500057220459
    7. '

' → logprob: -19.3750057220459
    8. '_' → logprob: -19.5000057220459
    9. '
' → logprob: -19.5000057220459
    10. '.__' → logprob: -19.7500057220459

Token 201: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.60414821645827e-06
    2. 'pr' → logprob: -12.625004768371582
    3. 'prime' → logprob: -14.250004768371582
    4. '_s' → logprob: -15.500004768371582
    5. '[s' → logprob: -16.375003814697266
    6. 'is' → logprob: -16.750003814697266
    7. '(s' → logprob: -17.625003814697266
    8. '{s' → logprob: -17.625003814697266
    9. '_' → logprob: -17.750003814697266
    10. '
' → logprob: -18.687503814697266

Token 202: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0019876365549862385
    2. '_' → logprob: -6.376987457275391
    3. '_s' → logprob: -9.25198745727539
    4. 's' → logprob: -9.37698745727539
    5. 'ive' → logprob: -11.00198745727539
    6. 'IEVE' → logprob: -11.00198745727539
    7. 'e' → logprob: -11.25198745727539
    8. '._' → logprob: -11.50198745727539
    9. '_prime' → logprob: -12.12698745727539
    10. '[' → logprob: -12.25198745727539

Token 203: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.500003814697266
    3. ' [' → logprob: -19.750003814697266
    4. 'n' → logprob: -20.375003814697266
    5. '[
' → logprob: -21.125003814697266
    6. '[i' → logprob: -21.250003814697266
    7. '[num' → logprob: -23.250003814697266
    8. '[m' → logprob: -23.625003814697266
    9. '[N' → logprob: -24.000003814697266
    10. '[int' → logprob: -24.125003814697266

Token 204: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034774013329297304
    2. ']
' → logprob: -8.125348091125488
    3. ' ]' → logprob: -9.875348091125488
    4. ']

' → logprob: -15.875348091125488
    5. ']
' → logprob: -16.375347137451172
    6. ' ]
' → logprob: -17.000347137451172
    7. ']==' → logprob: -18.000347137451172
    8. '   ' → logprob: -18.000347137451172
    9. ' ' → logprob: -18.750347137451172
    10. 'else' → logprob: -18.875347137451172

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031401283922605217
    2. '        
' → logprob: -8.500313758850098
    3. '
' → logprob: -10.000313758850098
    4. 'return' → logprob: -10.375313758850098
    5. '   ' → logprob: -11.250313758850098
    6. '    
' → logprob: -11.625313758850098
    7. '	' → logprob: -12.625313758850098
    8. 'else' → logprob: -12.750313758850098
    9. '  
' → logprob: -14.250313758850098
    10. '```' → logprob: -14.375313758850098

Token 206: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4152926802635193
    2. 'return' → logprob: -1.415292739868164
    3. '#' (adapté à ' #') → logprob: -2.915292739868164
    4. 'raise' → logprob: -3.415292739868164
    5. 'else' → logprob: -4.665292739868164
    6. '        
' → logprob: -8.415292739868164
    7. 'if' → logprob: -8.915292739868164
    8. '
' → logprob: -9.665292739868164
    9. ' raise' → logprob: -10.915292739868164
    10. '   ' → logprob: -11.040292739868164

Token 207: ' F' (ID: 454)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5051427483558655
    2. '#' → logprob: -1.2551426887512207
    3. 'raise' → logprob: -2.7551426887512207
    4. 'else' → logprob: -3.5051426887512207
    5. ' #' → logprob: -5.380142688751221
    6. ' return' → logprob: -5.505142688751221
    7. ' raise' → logprob: -5.630142688751221
    8. '       ' → logprob: -5.630142688751221
    9. 'if' → logprob: -7.005142688751221
    10. '   ' → logprob: -7.505142688751221

Token 208: 'allback' (ID: 13054)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0013460656628012657
    2. 'rom' → logprob: -7.126346111297607
    3. '#' → logprob: -7.876346111297607
    4. '   ' → logprob: -10.25134563446045
    5. '       ' → logprob: -10.25134563446045
    6. 'irst' → logprob: -10.37634563446045
    7. 'for' → logprob: -11.12634563446045
    8. 'ind' → logprob: -11.37634563446045
    9. 'allback' → logprob: -11.62634563446045
    10. 'orget' → logprob: -12.00134563446045

Token 209: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7480337023735046
    2. ' for' → logprob: -0.9980337023735046
    3. ' if' → logprob: -2.4980337619781494
    4. ' to' → logprob: -2.9980337619781494
    5. 'for' → logprob: -4.37303352355957
    6. '       ' → logprob: -5.24803352355957
    7. 'if' → logprob: -5.62303352355957
    8. ':
' → logprob: -6.24803352355957
    9. ' else' → logprob: -6.87303352355957
    10. '        
' → logprob: -8.12303352355957

Token 210: ' numbers' (ID: 8663)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017809348180890083
    2. ' n' → logprob: -4.5178093910217285
    3. 'larg' → logprob: -5.8928093910217285
    4. ' larger' → logprob: -6.3928093910217285
    5. 'numbers' → logprob: -6.5178093910217285
    6. ' numbers' → logprob: -7.5178093910217285
    7. '   ' → logprob: -10.01780891418457
    8. 'pr' → logprob: -10.01780891418457
    9. '       ' → logprob: -10.26780891418457
    10. 'True' → logprob: -10.26780891418457

Token 211: ' greater' (ID: 10740)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.28001669049263
    2. '>' → logprob: -1.6550166606903076
    3. ' beyond' → logprob: -3.7800166606903076
    4. ' greater' → logprob: -4.280016899108887
    5. ' larger' → logprob: -4.530016899108887
    6. 'greater' → logprob: -5.530016899108887
    7. '       ' → logprob: -7.280016899108887
    8. 'larg' → logprob: -7.530016899108887
    9. ' above' → logprob: -8.655016899108887
    10. ' ' → logprob: -9.530016899108887

Token 212: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.04372962564229965
    2. ' than' → logprob: -3.168729543685913
    3. '       ' → logprob: -8.418729782104492
    4. '1' → logprob: -8.543729782104492
    5. '0' → logprob: -8.668729782104492
    6. '           ' → logprob: -9.543729782104492
    7. '=' → logprob: -11.418729782104492
    8. '   ' → logprob: -11.793729782104492
    9. '        ' → logprob: -11.793729782104492
    10. ',' → logprob: -11.918729782104492

Token 213: ' limit' (ID: 5967)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006384541047737002
    2. ' self' → logprob: -7.375638484954834
    3. 'limit' → logprob: -11.500638008117676
    4. 'the' → logprob: -13.500638008117676
    5. '       ' → logprob: -16.250638961791992
    6. ' limit' → logprob: -16.625638961791992
    7. '(self' → logprob: -16.750638961791992
    8. ' the' → logprob: -16.750638961791992
    9. '```' → logprob: -16.750638961791992
    10. '0' → logprob: -16.875638961791992

Token 214: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25028419494628906
    2. '       ' → logprob: -1.625284194946289
    3. ':
' → logprob: -4.875284194946289
    4. '        
' → logprob: -5.375284194946289
    5. ',' → logprob: -6.250284194946289
    6. ' if' → logprob: -6.375284194946289
    7. '    
' → logprob: -6.500284194946289
    8. '
' → logprob: -6.500284194946289
    9. ' 
' → logprob: -6.875284194946289
    10. '   ' → logprob: -7.000284194946289

Token 215: 'not' (ID: 2878)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8081581592559814
    2. ')' → logprob: -2.0581581592559814
    3. 'n' → logprob: -2.3081581592559814
    4. 'return' → logprob: -2.4331581592559814
    5. ' if' → logprob: -3.1831581592559814
    6. ' return' → logprob: -3.1831581592559814
    7. ' n' → logprob: -3.5581581592559814
    8. 'if' → logprob: -3.8081581592559814
    9. ' for' → logprob: -3.9331581592559814
    10. ' )' → logprob: -4.558157920837402

Token 216: ' needed' (ID: 6118)
  Prédit: 'implemented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'implemented' → logprob: -0.11735264956951141
    2. ' implemented' → logprob: -2.8673527240753174
    3. 'efficient' → logprob: -3.6173527240753174
    4. 'optimized' → logprob: -4.867352485656738
    5. '       ' → logprob: -5.117352485656738
    6. ' efficient' → logprob: -5.742352485656738
    7. 'handled' → logprob: -6.492352485656738
    8. 'covered' → logprob: -6.492352485656738
    9. ' optimized' → logprob: -6.617352485656738
    10. ' in' → logprob: -6.867352485656738

Token 217: ' here' (ID: 2105)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49508363008499146
    2. ' for' → logprob: -1.7450835704803467
    3. ' here' → logprob: -2.2450835704803467
    4. ' in' → logprob: -2.7450835704803467
    5. 'for' → logprob: -4.495083808898926
    6. 'in' → logprob: -4.870083808898926
    7. ' if' → logprob: -4.995083808898926
    8. '       ' → logprob: -5.495083808898926
    9. ' )' → logprob: -5.745083808898926
    10. '):' → logprob: -5.870083808898926

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042888117604888976
    2. ')
' → logprob: -7.875428676605225
    3. '       ' → logprob: -10.500429153442383
    4. ' but' → logprob: -12.000429153442383
    5. '   ' → logprob: -12.125429153442383
    6. ')

' → logprob: -12.375429153442383
    7. ' )' → logprob: -13.375429153442383
    8. '):' → logprob: -13.875429153442383
    9. ')
' → logprob: -14.500429153442383
    10. '):
' → logprob: -14.625429153442383

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6704789400100708
    2. '   ' → logprob: -1.7954789400100708
    3. '
' → logprob: -2.2954788208007812
    4. '\n' → logprob: -2.5454788208007812
    5. ' 
' → logprob: -3.1704788208007812
    6. 'return' → logprob: -3.4204788208007812
    7. '    
' → logprob: -3.6704788208007812
    8. ' return' → logprob: -3.7954788208007812
    9. '\' → logprob: -5.545478820800781
    10. '        
' → logprob: -5.545478820800781

Token 220: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1987498700618744
    2. ' return' → logprob: -1.8237498998641968
    3. '       ' → logprob: -4.073750019073486
    4. '   ' → logprob: -6.948750019073486
    5. '        
' → logprob: -8.448749542236328
    6. ' 
' → logprob: -8.948749542236328
    7. '    ' → logprob: -9.073749542236328
    8. 'raise' → logprob: -9.448749542236328
    9. ':' → logprob: -9.823749542236328
    10. '    
' → logprob: -10.323749542236328

Token 221: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0021433625370264053
    2. ' False' → logprob: -6.377143383026123
    3. 'True' → logprob: -8.002142906188965
    4. 'None' → logprob: -9.627142906188965
    5. 'all' → logprob: -10.377142906188965
    6. 'n' → logprob: -12.377142906188965
    7. 'self' → logprob: -13.627142906188965
    8. ' all' → logprob: -13.627142906188965
    9. ' True' → logprob: -13.877142906188965
    10. 'false' → logprob: -14.627142906188965

Token 222: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7001739144325256
    2. '   ' → logprob: -0.8251739144325256
    3. '    
' → logprob: -3.450173854827881
    4. '```' → logprob: -3.700173854827881
    5. 'def' → logprob: -5.450173854827881
    6. '<|end|>' → logprob: -6.825173854827881
    7. '  
' → logprob: -7.200173854827881
    8. '\n' → logprob: -7.700173854827881
    9. ' 
' → logprob: -7.700173854827881
    10. ' ' → logprob: -8.450174331665039

Token 224: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3856492842023727e-06
    2. ' def' → logprob: -13.875000953674316
    3. '   ' → logprob: -14.875000953674316
    4. '```' → logprob: -19.000001907348633
    5. '    
' → logprob: -19.625001907348633
    6. '@' → logprob: -20.625001907348633
    7. '	def' → logprob: -20.625001907348633
    8. '@property' → logprob: -20.625001907348633
    9. 'de' → logprob: -21.250001907348633
    10. '
' → logprob: -21.500001907348633

Token 225: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.27015507221221924
    2. 'get' → logprob: -1.7701550722122192
    3. 'iter' → logprob: -3.3951549530029297
    4. '__' → logprob: -4.27015495300293
    5. '_pr' → logprob: -5.39515495300293
    6. ' primes' → logprob: -5.39515495300293
    7. 'prime' → logprob: -5.52015495300293
    8. 'iterator' → logprob: -6.14515495300293
    9. ' get' → logprob: -7.27015495300293
    10. 'generate' → logprob: -7.39515495300293

Token 226: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003876550472341478
    2. '(' → logprob: -8.000387191772461
    3. 'self' → logprob: -10.875387191772461
    4. '(
' → logprob: -12.125387191772461
    5. '_up' → logprob: -12.500387191772461
    6. '_generator' → logprob: -12.500387191772461
    7. '_in' → logprob: -12.625387191772461
    8. 's' → logprob: -13.000387191772461
    9. '_between' → logprob: -13.125387191772461
    10. 'def' → logprob: -13.625387191772461

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3660365343093872
    2. 'self' → logprob: -1.2410365343093872
    3. '(self' → logprob: -4.241036415100098
    4. ',' → logprob: -6.241036415100098
    5. ' self' → logprob: -8.491036415100098
    6. '_start' → logprob: -8.616036415100098
    7. ' ' → logprob: -9.116036415100098
    8. '):' → logprob: -9.366036415100098
    9. '_self' → logprob: -9.491036415100098
    10. 'start' → logprob: -9.616036415100098

Token 228: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3915141355246305e-05
    2. 'self' → logprob: -11.12502384185791
    3. '(' → logprob: -12.37502384185791
    4. '   ' → logprob: -13.62502384185791
    5. 'def' → logprob: -13.62502384185791
    6. '->' → logprob: -13.75002384185791
    7. ' ->' → logprob: -14.37502384185791
    8. ')' → logprob: -14.87502384185791
    9. '       ' → logprob: -15.37502384185791
    10. ' (' → logprob: -16.125024795532227

Token 229: ' List' (ID: 2655)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.03873623535037041
    2. ' Iterator' → logprob: -3.288736343383789
    3. 'List' → logprob: -7.288736343383789
    4. '   ' → logprob: -12.788736343383789
    5. ' List' → logprob: -12.913736343383789
    6. ' ' → logprob: -12.913736343383789
    7. '	Iterator' → logprob: -12.913736343383789
    8. 'Iterable' → logprob: -14.538736343383789
    9. '  ' → logprob: -14.788736343383789
    10. 'Generator' → logprob: -16.03873634338379

Token 230: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -14.875
    3. '<int' → logprob: -16.625
    4. '[Int' → logprob: -19.75
    5. '[i' → logprob: -20.875
    6. '[' → logprob: -21.75
    7. '[in' → logprob: -21.875
    8. ']int' → logprob: -22.25
    9. ':int' → logprob: -22.75
    10. '[
' → logprob: -22.75

Token 231: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0033134082332253456
    2. ']:
' → logprob: -5.8783135414123535
    3. '):' → logprob: -8.253313064575195
    4. ']:
' → logprob: -9.003313064575195
    5. ']' → logprob: -9.128313064575195
    6. '():' → logprob: -11.628313064575195
    7. '):
' → logprob: -13.253313064575195
    8. '"]:' → logprob: -13.253313064575195
    9. ':' → logprob: -14.003313064575195
    10. '']:' → logprob: -14.378313064575195

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007364890188910067
    2. ' return' → logprob: -7.750736713409424
    3. 'return' → logprob: -8.375736236572266
    4. '   ' → logprob: -10.625736236572266
    5. ':
' → logprob: -10.875736236572266
    6. '
' → logprob: -11.000736236572266
    7. ':' → logprob: -11.625736236572266
    8. ':return' → logprob: -12.625736236572266
    9. '[:]' → logprob: -14.500736236572266
    10. '[]' → logprob: -15.000736236572266

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02265993133187294
    2. '       ' → logprob: -4.272659778594971
    3. ' return' → logprob: -4.772659778594971
    4. '   ' → logprob: -13.147660255432129
    5. '	return' → logprob: -14.272660255432129
    6. '
' → logprob: -17.397659301757812
    7. ' ' → logprob: -18.022659301757812
    8. '{return' → logprob: -18.147659301757812
    9. ':return' → logprob: -18.897659301757812
    10. 'Return' → logprob: -19.147659301757812

Token 234: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. '[self' → logprob: -18.264163970947266
    4. '   ' → logprob: -18.514163970947266
    5. '(self' → logprob: -19.514163970947266
    6. ' ' → logprob: -20.264163970947266
    7. '	self' → logprob: -20.389163970947266
    8. 'list' → logprob: -20.889163970947266
    9. '       ' → logprob: -21.139163970947266
    10. '  ' → logprob: -22.639163970947266

Token 235: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -15.75
    3. ' .' → logprob: -18.625
    4. ')._' → logprob: -19.625
    5. '_pr' → logprob: -19.75
    6. '.__' → logprob: -20.0
    7. 'self' → logprob: -20.25
    8. '."_' → logprob: -20.375
    9. '_' → logprob: -20.5
    10. '.\' → logprob: -20.625

Token 236: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.2664456789934775e-06
    2. '_pr' → logprob: -14.375000953674316
    3. 'prime' → logprob: -15.375000953674316
    4. 's' → logprob: -16.125001907348633
    5. 'pri' → logprob: -16.125001907348633
    6. 'prim' → logprob: -17.125001907348633
    7. '.pr' → logprob: -17.250001907348633
    8. 'p' → logprob: -17.250001907348633
    9. '	pr' → logprob: -17.375001907348633
    10. '-pr' → logprob: -17.625001907348633

Token 237: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0001532401074655354
    2. '_' → logprob: -9.625153541564941
    3. 'mes' → logprob: -10.750153541564941
    4. 'omes' → logprob: -11.625153541564941
    5. '_pr' → logprob: -11.875153541564941
    6. 'ime' → logprob: -12.000153541564941
    7. '[' → logprob: -12.250153541564941
    8. 'im' → logprob: -12.375153541564941
    9. 'pr' → logprob: -12.750153541564941
    10. '._' → logprob: -12.750153541564941

Token 238: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006201449781656265
    2. '   ' → logprob: -5.756201267242432
    3. '<|end|>' → logprob: -6.756201267242432
    4. '    
' → logprob: -7.881201267242432
    5. '\n' → logprob: -7.881201267242432
    6. '

' → logprob: -8.25620174407959
    7. 'def' → logprob: -8.25620174407959
    8. '\' → logprob: -9.13120174407959
    9. '```' → logprob: -9.63120174407959
    10. ' ' → logprob: -9.63120174407959

Token 240: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007665063603781164
    2. '   ' → logprob: -7.250766277313232
    3. ' def' → logprob: -10.12576675415039
    4. 'class' → logprob: -12.00076675415039
    5. '```' → logprob: -12.00076675415039
    6. '	def' → logprob: -13.00076675415039
    7. '    
' → logprob: -14.12576675415039
    8. ' ' → logprob: -14.25076675415039
    9. '  ' → logprob: -16.75076675415039
    10. '
' → logprob: -16.75076675415039

Token 241: ' nth' (ID: 58687)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.7930827736854553
    2. ' prime' → logprob: -1.1680827140808105
    3. ' primes' → logprob: -1.6680827140808105
    4. 'pr' → logprob: -4.5430827140808105
    5. 'iter' → logprob: -5.0430827140808105
    6. ' iter' → logprob: -5.2930827140808105
    7. '__' → logprob: -5.5430827140808105
    8. ' get' → logprob: -5.6680827140808105
    9. 'get' → logprob: -5.7930827140808105
    10. 'next' → logprob: -5.7930827140808105

Token 242: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -4.978233846486546e-05
    2. '_' → logprob: -10.250049591064453
    3. '_pr' → logprob: -12.125049591064453
    4. '(self' → logprob: -12.250049591064453
    5. 'prime' → logprob: -13.125049591064453
    6. '_factor' → logprob: -14.500049591064453
    7. '(_' → logprob: -14.625049591064453
    8. 'Prime' → logprob: -14.625049591064453
    9. '(' → logprob: -15.750049591064453
    10. '_element' → logprob: -16.250049591064453

Token 243: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. 'self' → logprob: -14.126171112060547
    4. ' (' → logprob: -15.376171112060547
    5. '(
' → logprob: -15.501171112060547
    6. '(s' → logprob: -16.501171112060547
    7. '   ' → logprob: -17.126171112060547
    8. '(sel' → logprob: -17.376171112060547
    9. 's' → logprob: -17.626171112060547
    10. ' self' → logprob: -18.376171112060547

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15829956531524658
    2. 'self' → logprob: -2.283299446105957
    3. '(self' → logprob: -3.158299446105957
    4. '       ' → logprob: -7.408299446105957
    5. ' self' → logprob: -7.533299446105957
    6. '   ' → logprob: -7.783299446105957
    7. ')' → logprob: -9.033299446105957
    8. ',self' → logprob: -9.158299446105957
    9. ' ,' → logprob: -9.533299446105957
    10. ' (' → logprob: -10.408299446105957

Token 245: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05158121883869171
    2. 'self' → logprob: -3.4265811443328857
    3. ' n' → logprob: -4.051581382751465
    4. ' self' → logprob: -7.926581382751465
    5. '   ' → logprob: -11.176581382751465
    6. ' ' → logprob: -13.176581382751465
    7. '       ' → logprob: -13.176581382751465
    8. '	n' → logprob: -14.426581382751465
    9. 'index' → logprob: -14.926581382751465
    10. '
' → logprob: -15.051581382751465

Token 246: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006011271849274635
    2. '):' → logprob: -5.381011486053467
    3. ':int' → logprob: -6.756011486053467
    4. ')' → logprob: -8.756011009216309
    5. ' :' → logprob: -9.631011009216309
    6. ' ):' → logprob: -13.631011009216309
    7. '):
' → logprob: -14.256011009216309
    8. '_:' → logprob: -15.131011009216309
    9. 'int' → logprob: -15.256011009216309
    10. '   ' → logprob: -15.381011009216309

Token 247: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005247514229267836
    2. ' int' → logprob: -5.255247592926025
    3. ')' → logprob: -11.255247116088867
    4. '   ' → logprob: -15.380247116088867
    5. ' Optional' → logprob: -15.380247116088867
    6. 'Optional' → logprob: -15.380247116088867
    7. ' )' → logprob: -17.255247116088867
    8. ':int' → logprob: -17.380247116088867
    9. '1' → logprob: -18.130247116088867
    10. ' ' → logprob: -18.255247116088867

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -11.875008583068848
    3. '):' → logprob: -13.500008583068848
    4. '   ' → logprob: -15.875008583068848
    5. ':' → logprob: -16.625009536743164
    6. ')->' → logprob: -17.375009536743164
    7. '`)' → logprob: -18.125009536743164
    8. '):
' → logprob: -18.250009536743164
    9. '       ' → logprob: -19.375009536743164
    10. ']' → logprob: -19.375009536743164

Token 249: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5479039549827576
    2. '->' → logprob: -0.9229039549827576
    3. ':' → logprob: -3.7979040145874023
    4. ')' → logprob: -6.422904014587402
    5. '   ' → logprob: -8.422904014587402
    6. ')->' → logprob: -8.797904014587402
    7. '       ' → logprob: -10.297904014587402
    8. '-' → logprob: -11.297904014587402
    9. '>' → logprob: -12.297904014587402
    10. ' ' → logprob: -12.797904014587402

Token 250: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14221665263175964
    2. ' int' → logprob: -2.392216682434082
    3. 'Optional' → logprob: -3.392216682434082
    4. ' Optional' → logprob: -4.892216682434082
    5. '(Optional' → logprob: -15.142216682434082
    6. '[int' → logprob: -15.392216682434082
    7. '(int' → logprob: -15.767216682434082
    8. '   ' → logprob: -16.142215728759766
    9. 'Int' → logprob: -16.142215728759766
    10. ' ' → logprob: -16.267215728759766

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009181279456242919
    2. ':
' → logprob: -7.000917911529541
    3. '):' → logprob: -12.7509183883667
    4. '       ' → logprob: -13.2509183883667
    5. '():' → logprob: -14.1259183883667
    6. ':
' → logprob: -15.0009183883667
    7. ':def' → logprob: -15.1259183883667
    8. '   ' → logprob: -15.5009183883667
    9. ':return' → logprob: -16.125917434692383
    10. '[' → logprob: -16.625917434692383

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029284872114658356
    2. ' if' → logprob: -3.654284954071045
    3. ' return' → logprob: -6.779284954071045
    4. 'if' → logprob: -6.779284954071045
    5. 'return' → logprob: -7.279284954071045
    6. '   ' → logprob: -11.154284477233887
    7. '      ' → logprob: -14.654284477233887
    8. '	' → logprob: -14.779284477233887
    9. '	if' → logprob: -15.029284477233887
    10. '	return' → logprob: -15.904284477233887

Token 253: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2175118625164032
    2. 'if' → logprob: -1.7175118923187256
    3. '       ' → logprob: -4.9675116539001465
    4. ' return' → logprob: -5.3425116539001465
    5. ' if' → logprob: -5.4675116539001465
    6. '   ' → logprob: -12.967512130737305
    7. '```' → logprob: -14.092512130737305
    8. '#' (adapté à ' #') → logprob: -15.342512130737305
    9. '	return' → logprob: -16.592512130737305
    10. 'raise' → logprob: -16.717512130737305

Token 254: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03146057203412056
    2. 'return' → logprob: -3.5314605236053467
    3. ' if' → logprob: -6.406460762023926
    4. ' return' → logprob: -10.406460762023926
    5. '       ' → logprob: -10.781460762023926
    6. '   ' → logprob: -12.281460762023926
    7. 'If' → logprob: -14.031460762023926
    8. 'Return' → logprob: -15.156460762023926
    9. '```' → logprob: -15.281460762023926
    10. 'assert' → logprob: -15.531460762023926

Token 255: '1' (ID: 16)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004799988120794296
    2. 'return' → logprob: -5.379799842834473
    3. ' if' → logprob: -8.754799842834473
    4. '       ' → logprob: -11.254799842834473
    5. 'while' → logprob: -12.129799842834473
    6. '   ' → logprob: -13.004799842834473
    7. ' return' → logprob: -14.879799842834473
    8. 'assert' → logprob: -15.004799842834473
    9. '"""' → logprob: -15.504799842834473
    10. 'raise' → logprob: -15.754799842834473

Token 256: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.02794117107987404
    2. '-index' → logprob: -4.5279412269592285
    3. 'based' → logprob: -4.9029412269592285
    4. ' if' → logprob: -5.2779412269592285
    5. '-' → logprob: -5.9029412269592285
    6. ' based' → logprob: -7.1529412269592285
    7. 'Based' → logprob: -7.6529412269592285
    8. ' -' → logprob: -10.02794075012207
    9. 'if' → logprob: -10.40294075012207
    10. '_based' → logprob: -10.52794075012207

Token 257: ' indexing' (ID: 105989)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06620390713214874
    2. 'if' → logprob: -3.4412038326263428
    3. 'index' → logprob: -3.9412038326263428
    4. ' index' → logprob: -4.691204071044922
    5. '       ' → logprob: -6.816204071044922
    6. '<|end|>' → logprob: -7.316204071044922
    7. '   ' → logprob: -7.566204071044922
    8. 'n' → logprob: -7.691204071044922
    9. ' return' → logprob: -8.566204071044922
    10. ' n' → logprob: -8.941204071044922

Token 258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09549416601657867
    2. ' if' → logprob: -2.470494270324707
    3. 'if' → logprob: -5.845494270324707
    4. '   ' → logprob: -5.845494270324707
    5. '[' → logprob: -8.220494270324707
    6. '    ' → logprob: -9.720494270324707
    7. '
' → logprob: -9.845494270324707
    8. ')' → logprob: -9.970494270324707
    9. '        ' → logprob: -9.970494270324707
    10. '<|end|>' → logprob: -10.220494270324707

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037750278133898973
    2. ' if' → logprob: -5.753775119781494
    3. '   ' → logprob: -7.878775119781494
    4. 'if' → logprob: -9.253774642944336
    5. ')' → logprob: -10.128774642944336
    6. '<|end|>' → logprob: -10.503774642944336
    7. ' return' → logprob: -11.003774642944336
    8. 'return' → logprob: -12.003774642944336
    9. '```' → logprob: -12.378774642944336
    10. '        
' → logprob: -12.503774642944336

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32120612263679504
    2. 'if' → logprob: -1.3212060928344727
    3. ' if' → logprob: -5.571206092834473
    4. ' return' → logprob: -6.071206092834473
    5. '       ' → logprob: -6.321206092834473
    6. '   ' → logprob: -14.071206092834473
    7. '	return' → logprob: -17.19620704650879
    8. '```' → logprob: -17.19620704650879
    9. '	if' → logprob: -18.19620704650879
    10. 'assert' → logprob: -18.32120704650879

Token 261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47407785058021545
    2. ' self' → logprob: -0.9740778207778931
    3. '       ' → logprob: -14.224078178405762
    4. '(self' → logprob: -16.349077224731445
    5. '	self' → logprob: -17.724077224731445
    6. '   ' → logprob: -18.599077224731445
    7. ' ' → logprob: -18.974077224731445
    8. 'Self' → logprob: -19.724077224731445
    9. '[self' → logprob: -19.724077224731445
    10. '        ' → logprob: -20.099077224731445

Token 262: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.625003814697266
    3. ' .' → logprob: -14.625003814697266
    4. '.__' → logprob: -15.625003814697266
    5. ')._' → logprob: -15.875003814697266
    6. ']._' → logprob: -16.375003814697266
    7. '._
' → logprob: -17.250003814697266
    8. '_' → logprob: -18.250003814697266
    9. '
' → logprob: -18.250003814697266
    10. '._

' → logprob: -18.500003814697266

Token 263: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -5.438573680294212e-06
    2. '_pr' → logprob: -12.250005722045898
    3. 'prime' → logprob: -16.1250057220459
    4. '.pr' → logprob: -16.6250057220459
    5. '_' → logprob: -17.0000057220459
    6. 's' → logprob: -17.1250057220459
    7. '-pr' → logprob: -17.1250057220459
    8. 'pri' → logprob: -17.2500057220459
    9. 'p' → logprob: -17.7500057220459
    10. 'pl' → logprob: -17.8750057220459

Token 264: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0012001125141978264
    2. 'mes' → logprob: -7.001200199127197
    3. '_' → logprob: -8.876199722290039
    4. 'ime' → logprob: -10.126199722290039
    5. '
' → logprob: -11.126199722290039
    6. 'omes' → logprob: -11.126199722290039
    7. '[' → logprob: -12.126199722290039
    8. '__' → logprob: -12.251199722290039
    9. '_
' → logprob: -12.251199722290039
    10. '\' → logprob: -12.501199722290039

Token 265: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.00000286102295
    3. '[
' → logprob: -15.00000286102295
    4. ' [' → logprob: -15.87500286102295
    5. 'n' → logprob: -17.000001907348633
    6. '[N' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '
' → logprob: -18.375001907348633
    9. '[m' → logprob: -18.500001907348633
    10. '[s' → logprob: -18.750001907348633

Token 266: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009117019944824278
    2. ' -' → logprob: -7.000911712646484
    3. '1' → logprob: -16.250911712646484
    4. ']' → logprob: -16.750911712646484
    5. ']-' → logprob: -17.125911712646484
    6. '[' → logprob: -18.000911712646484
    7. '-
' → logprob: -18.500911712646484
    8. '−' → logprob: -18.750911712646484
    9. '```' → logprob: -19.000911712646484
    10. '   ' → logprob: -19.000911712646484

Token 267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.750003814697266
    5. ']' → logprob: -17.875003814697266
    6. '```' → logprob: -18.250003814697266
    7. ')' → logprob: -19.750003814697266
    8. 'to' → logprob: -20.437503814697266
    9. '۱' → logprob: -20.500003814697266
    10. '  ' → logprob: -20.687503814697266

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. ']' → logprob: -18.375
    4. '   ' → logprob: -19.375
    5. '```' → logprob: -19.375
    6. '<|end|>' → logprob: -19.6875
    7. ')' → logprob: -19.9375
    8. '۱' → logprob: -20.375
    9. '১' → logprob: -21.0625
    10. '１' → logprob: -21.125

Token 269: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1838560700416565
    2. '<|end|>' → logprob: -2.3088560104370117
    3. ']' → logprob: -2.9338560104370117
    4. '}' → logprob: -4.183856010437012
    5. '<|end|>' → logprob: -9.308856010437012
    6. '```' → logprob: -10.683856010437012
    7. ' )' → logprob: -12.683856010437012
    8. '）' → logprob: -12.808856010437012
    9. ')return' → logprob: -12.933856010437012
    10. ')
' → logprob: -13.058856010437012

Token 270: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40923595428466797
    2. '<|end|>' → logprob: -1.159235954284668
    3. '   ' → logprob: -4.659235954284668
    4. '
' → logprob: -4.909235954284668
    5. ' def' → logprob: -5.659235954284668
    6. '```' → logprob: -7.909235954284668
    7. '<|end|>' → logprob: -7.909235954284668
    8. ')' → logprob: -8.534235954284668
    9. '#' → logprob: -8.659235954284668
    10. ' ' → logprob: -8.784235954284668

Token 271: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.5534539818763733
    2. ' Prime' → logprob: -0.9284539818763733
    3. 'Segment' → logprob: -4.3034539222717285
    4. '_prime' → logprob: -6.1784539222717285
    5. 'Pr' → logprob: -6.3034539222717285
    6. ' Seg' → logprob: -6.4284539222717285
    7. ' Segment' → logprob: -6.8034539222717285
    8. ' Pr' → logprob: -7.0534539222717285
    9. ' Twin' → logprob: -7.3034539222717285
    10. ' Pal' → logprob: -7.4284539222717285

Token 272: 'Gap' (ID: 17218)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.5543352961540222
    2. 'Generator' → logprob: -1.054335355758667
    3. 'Range' → logprob: -3.679335355758667
    4. 'Factor' → logprob: -4.054335117340088
    5. 'Factors' → logprob: -5.554335117340088
    6. 'Enumerator' → logprob: -5.929335117340088
    7. 'Iterable' → logprob: -5.929335117340088
    8. 'Pair' → logprob: -6.054335117340088
    9. 'Gap' → logprob: -6.179335117340088
    10. 'Stream' → logprob: -6.179335117340088

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5287052392959595
    2. 'Finder' → logprob: -1.1537052392959595
    3. 'Calculator' → logprob: -3.02870512008667
    4. 'Analyzer' → logprob: -4.90370512008667
    5. ':
' → logprob: -5.02870512008667
    6. 'Generator' → logprob: -5.02870512008667
    7. 'S' → logprob: -5.15370512008667
    8. '(' → logprob: -5.40370512008667
    9. 'Iterator' → logprob: -5.65370512008667
    10. 'Sizer' → logprob: -5.65370512008667

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014345075003802776
    2. 'def' → logprob: -4.639345169067383
    3. ' def' → logprob: -5.389345169067383
    4. '	def' → logprob: -12.514345169067383
    5. '    
' → logprob: -12.639345169067383
    6. ':' → logprob: -13.014345169067383
    7. '   ' → logprob: -13.639345169067383
    8. ':def' → logprob: -13.889345169067383
    9. '
' → logprob: -14.889345169067383
    10. '```' → logprob: -14.889345169067383

Token 275: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.31817713379859924
    2. ' def' → logprob: -1.3181771039962769
    3. '   ' → logprob: -5.318177223205566
    4. 'import' → logprob: -14.818177223205566
    5. 'from' → logprob: -14.818177223205566
    6. 'de' → logprob: -15.068177223205566
    7. ' ' → logprob: -15.443177223205566
    8. '	def' → logprob: -15.568177223205566
    9. ':def' → logprob: -16.56817626953125
    10. 'class' → logprob: -16.81817626953125

Token 276: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5362153053283691
    2. '__' → logprob: -0.9112153053283691
    3. ' def' → logprob: -4.911215305328369
    4. 'def' → logprob: -6.161215305328369
    5. 'init' → logprob: -6.536215305328369
    6. '_init' → logprob: -6.786215305328369
    7. '```' → logprob: -7.411215305328369
    8. '   ' → logprob: -8.286214828491211
    9. ' init' → logprob: -10.661214828491211
    10. '.__' → logprob: -10.786214828491211

Token 277: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -17.625
    3. 'def' → logprob: -18.625
    4. ' init' → logprob: -18.875
    5. 'ini' → logprob: -20.875
    6. 'int' → logprob: -21.125
    7. '```' → logprob: -22.25
    8. '	init' → logprob: -23.0
    9. '   ' → logprob: -23.25
    10. 'inite' → logprob: -23.375

Token 278: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.023284733295440674
    2. '(self' → logprob: -3.773284673690796
    3. '__' → logprob: -10.773284912109375
    4. '_(' → logprob: -11.773284912109375
    5. '(' → logprob: -12.273284912109375
    6. '__(
' → logprob: -12.273284912109375
    7. 'self' → logprob: -15.273284912109375
    8. '__((' → logprob: -15.398284912109375
    9. ')(' → logprob: -15.523284912109375
    10. ' (' → logprob: -15.523284912109375

Token 279: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.141186450899113e-05
    2. ' self' → logprob: -11.000020980834961
    3. ',' → logprob: -12.625020980834961
    4. '       ' → logprob: -14.375020980834961
    5. '   ' → logprob: -15.125020980834961
    6. '
' → logprob: -15.375020980834961
    7. 'limit' → logprob: -15.625020980834961
    8. '0' → logprob: -16.12502098083496
    9. '(self' → logprob: -16.87502098083496
    10. ',self' → logprob: -17.12502098083496

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008688559755682945
    2. 'self' → logprob: -4.758688449859619
    3. '(self' → logprob: -10.008688926696777
    4. ' ,' → logprob: -11.258688926696777
    5. ',self' → logprob: -11.883688926696777
    6. ' self' → logprob: -12.008688926696777
    7. ' (' → logprob: -13.508688926696777
    8. '   ' → logprob: -13.883688926696777
    9. ',
' → logprob: -15.508688926696777
    10. ')' → logprob: -15.508688926696777

Token 281: ' primes' (ID: 104042)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.1360543817281723
    2. ' limit' → logprob: -2.511054277420044
    3. 'self' → logprob: -3.886054277420044
    4. 's' → logprob: -4.636054515838623
    5. 'start' → logprob: -4.886054515838623
    6. 'max' → logprob: -6.511054515838623
    7. ' self' → logprob: -6.511054515838623
    8. '   ' → logprob: -6.636054515838623
    9. ' sieve' → logprob: -6.636054515838623
    10. ' start' → logprob: -6.886054515838623

Token 282: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002789303893223405
    2. '):' → logprob: -6.002789497375488
    3. ')' → logprob: -8.377789497375488
    4. ' :' → logprob: -10.377789497375488
    5. ' ):' → logprob: -10.377789497375488
    6. ',' → logprob: -12.002789497375488
    7. '):
' → logprob: -12.252789497375488
    8. ' )' → logprob: -12.502789497375488
    9. '=' → logprob: -13.127789497375488
    10. '   ' → logprob: -13.877789497375488

Token 283: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.018186818808317184
    2. ' List' → logprob: -4.018187046051025
    3. '   ' → logprob: -10.768186569213867
    4. 'Optional' → logprob: -12.393186569213867
    5. '       ' → logprob: -12.643186569213867
    6. '[List' → logprob: -12.893186569213867
    7. 'list' → logprob: -13.143186569213867
    8. ')' → logprob: -13.768186569213867
    9. 'Prime' → logprob: -14.143186569213867
    10. '           ' → logprob: -14.768186569213867

Token 284: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.3544423381972592e-05
    2. 'int' → logprob: -11.25001335144043
    3. '<int' → logprob: -15.12501335144043
    4. '   ' → logprob: -16.00001335144043
    5. ']int' → logprob: -17.25001335144043
    6. '[in' → logprob: -17.37501335144043
    7. '[' → logprob: -18.00001335144043
    8. ':int' → logprob: -18.25001335144043
    9. ')' → logprob: -18.75001335144043
    10. '):' → logprob: -19.12501335144043

Token 285: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.062187716364860535
    2. '):' → logprob: -3.562187671661377
    3. ']' → logprob: -4.187187671661377
    4. '])' → logprob: -4.937187671661377
    5. ')' → logprob: -5.312187671661377
    6. ']):
' → logprob: -5.437187671661377
    7. ']:' → logprob: -8.687188148498535
    8. '>):' → logprob: -10.312188148498535
    9. '],' → logprob: -11.187188148498535
    10. ':' → logprob: -11.312188148498535

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019138160860165954
    2. 'self' → logprob: -8.625191688537598
    3. '   ' → logprob: -12.000191688537598
    4. ' self' → logprob: -12.375191688537598
    5. '      ' → logprob: -15.000191688537598
    6. ',' → logprob: -15.125191688537598
    7. '	' → logprob: -15.500191688537598
    8. '	   ' → logprob: -15.625191688537598
    9. ':' → logprob: -15.875191688537598
    10. '    ' → logprob: -16.50019073486328

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1271633803844452
    2. '       ' → logprob: -2.3771634101867676
    3. ' self' → logprob: -3.6271634101867676
    4. '	self' → logprob: -13.00216293334961
    5. '   ' → logprob: -13.50216293334961
    6. ' ' → logprob: -14.50216293334961
    7. 'import' → logprob: -15.00216293334961
    8. '(self' → logprob: -15.75216293334961
    9. '      ' → logprob: -16.00216293334961
    10. '	' → logprob: -16.87716293334961

Token 288: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.02690647542476654
    2. '._' → logprob: -3.6519064903259277
    3. '   ' → logprob: -7.901906490325928
    4. '.' → logprob: -8.65190601348877
    5. ' .' → logprob: -10.40190601348877
    6. '       ' → logprob: -11.52690601348877
    7. '	pr' → logprob: -12.40190601348877
    8. '.pe' → logprob: -13.02690601348877
    9. ' ' → logprob: -13.15190601348877
    10. '.__' → logprob: -13.52690601348877

Token 289: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -2.6776029699249193e-05
    2. 'omes' → logprob: -11.62502670288086
    3. 'mes' → logprob: -12.12502670288086
    4. 'ime' → logprob: -12.87502670288086
    5. '_' → logprob: -13.37502670288086
    6. 'i' → logprob: -13.75002670288086
    7. '
' → logprob: -14.12502670288086
    8. '   ' → logprob: -14.25002670288086
    9. '#' → logprob: -14.75002670288086
    10. '

' → logprob: -14.75002670288086

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759580135345459
    2. ' =' → logprob: -0.8259580135345459
    3. ',' → logprob: -12.200958251953125
    4. '=self' → logprob: -12.450958251953125
    5. '   ' → logprob: -12.700958251953125
    6. ')' → logprob: -13.700958251953125
    7. '_' → logprob: -14.075958251953125
    8. ' ' → logprob: -14.075958251953125
    9. '    ' → logprob: -14.700958251953125
    10. '=[]' → logprob: -14.700958251953125

Token 291: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.03804252669215202
    2. ' primes' → logprob: -3.2880425453186035
    3. 'prime' → logprob: -15.288042068481445
    4. '	pr' → logprob: -15.413042068481445
    5. ' ' → logprob: -15.913042068481445
    6. '(pr' → logprob: -16.288042068481445
    7. 'pri' → logprob: -16.288042068481445
    8. ' pr' → logprob: -16.413042068481445
    9. 'sorted' → logprob: -16.663042068481445
    10. 'prim' → logprob: -16.663042068481445

Token 292: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3019787073135376
    2. '   ' → logprob: -1.4269787073135376
    3. 'def' → logprob: -4.051978588104248
    4. '       ' → logprob: -6.301978588104248
    5. '    
' → logprob: -7.301978588104248
    6. '<|end|>' → logprob: -8.176979064941406
    7. '

' → logprob: -8.676979064941406
    8. ' def' → logprob: -8.801979064941406
    9. '        
' → logprob: -10.676979064941406
    10. '  
' → logprob: -10.676979064941406

Token 293: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6889234185218811
    2. 'def' → logprob: -1.1889233589172363
    3. '
' → logprob: -1.6889233589172363
    4. ' def' → logprob: -5.563923358917236
    5. '       ' → logprob: -6.063923358917236
    6. '    
' → logprob: -6.313923358917236
    7. '  
' → logprob: -8.438923835754395
    8. '        
' → logprob: -8.688923835754395
    9. '<|end|>' → logprob: -9.563923835754395
    10. '	def' → logprob: -10.188923835754395

Token 294: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000599976978264749
    2. '       ' → logprob: -7.6255998611450195
    3. 'def' → logprob: -9.25059986114502
    4. ' self' → logprob: -11.75059986114502
    5. '   ' → logprob: -12.00059986114502
    6. '
' → logprob: -14.12559986114502
    7. 'if' → logprob: -14.37559986114502
    8. 'from' → logprob: -15.75059986114502
    9. '	self' → logprob: -16.125600814819336
    10. '@property' → logprob: -16.750600814819336

Token 295: '.start' (ID: 10181)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.022213581949472427
    2. '.g' → logprob: -4.147213459014893
    3. '.' → logprob: -6.522213459014893
    4. '_g' → logprob: -6.522213459014893
    5. '   ' → logprob: -7.397213459014893
    6. '_gap' → logprob: -8.27221393585205
    7. 'def' → logprob: -8.64721393585205
    8. '_pairs' → logprob: -8.77221393585205
    9. '_index' → logprob: -8.77221393585205
    10. ' .' → logprob: -8.77221393585205

Token 296: '_map' (ID: 11824)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.3331152200698853
    2. 's' → logprob: -1.5831152200698853
    3. '=' → logprob: -1.8331152200698853
    4. ' =' → logprob: -1.9581152200698853
    5. '_index' → logprob: -1.9581152200698853
    6. '_indices' → logprob: -3.0831151008605957
    7. '_' → logprob: -3.5831151008605957
    8. '_indexes' → logprob: -4.958115100860596
    9. 'ing' → logprob: -5.958115100860596
    10. '_idxs' → logprob: -6.083115100860596

Token 297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.168540820479393
    2. ':' → logprob: -2.2935407161712646
    3. '=' → logprob: -2.9185407161712646
    4. ' :' → logprob: -9.293540954589844
    5. ' ' → logprob: -10.043540954589844
    6. '   ' → logprob: -10.918540954589844
    7. '[' → logprob: -12.168540954589844
    8. '  ' → logprob: -12.793540954589844
    9. 's' → logprob: -13.043540954589844
    10. ':int' → logprob: -13.418540954589844

Token 298: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -9.253090865968261e-06
    2. '{' → logprob: -12.500009536743164
    3. 'dict' → logprob: -13.125009536743164
    4. ' {}' → logprob: -13.375009536743164
    5. '{}
' → logprob: -13.750009536743164
    6. '{}

' → logprob: -14.875009536743164
    7. '[]' → logprob: -15.500009536743164
    8. '{}\' → logprob: -15.875009536743164
    9. '={}' → logprob: -16.500009536743164
    10. '{},' → logprob: -16.875009536743164

Token 299: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: ' Map' (ID: 7343)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04314054548740387
    2. 'dict' → logprob: -4.043140411376953
    3. 'List' → logprob: -4.543140411376953
    4. 'from' → logprob: -5.543140411376953
    5. '[int' → logprob: -5.793140411376953
    6. 'Dict' → logprob: -5.793140411376953
    7. 'Optional' → logprob: -6.918140411376953
    8. ' int' → logprob: -7.043140411376953
    9. 'key' → logprob: -7.543140411376953
    10. '<int' → logprob: -8.168140411376953

Token 302: ' start' (ID: 1604)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.09208662062883377
    2. 'from' → logprob: -2.7170865535736084
    3. ' from' → logprob: -4.3420867919921875
    4. 'int' → logprob: -4.9670867919921875
    5. '<int' → logprob: -7.0920867919921875
    6. ':int' → logprob: -8.342086791992188
    7. ':' → logprob: -8.342086791992188
    8. '(int' → logprob: -8.717086791992188
    9. '       ' → logprob: -9.217086791992188
    10. ' of' → logprob: -9.217086791992188

Token 303: ' of' (ID: 328)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.4207632541656494
    2. ' ->' → logprob: -1.7957632541656494
    3. 'to' → logprob: -2.0457632541656494
    4. '_prime' → logprob: -2.5457632541656494
    5. ':int' → logprob: -2.6707632541656494
    6. '->' → logprob: -2.6707632541656494
    7. 'prime' → logprob: -2.6707632541656494
    8. 'int' → logprob: -2.7957632541656494
    9. ' of' → logprob: -3.1707632541656494
    10. 'of' → logprob: -4.29576301574707

Token 304: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.07753846049308777
    2. 'prime' → logprob: -3.07753849029541
    3. 'int' → logprob: -4.45253849029541
    4. ' gap' → logprob: -4.45253849029541
    5. 'the' → logprob: -5.82753849029541
    6. 'range' → logprob: -6.70253849029541
    7. 'a' → logprob: -7.32753849029541
    8. 'interval' → logprob: -9.32753849029541
    9. ' the' → logprob: -9.70253849029541
    10. ' int' → logprob: -9.82753849029541

Token 305: ' composite' (ID: 40773)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.586589515209198
    2. ' to' → logprob: -0.836589515209198
    3. '->' → logprob: -4.836589336395264
    4. 'self' → logprob: -7.336589336395264
    5. ' ->' → logprob: -7.586589336395264
    6. '
' → logprob: -8.336589813232422
    7. '       ' → logprob: -8.461589813232422
    8. ':' → logprob: -8.586589813232422
    9. '_to' → logprob: -8.586589813232422
    10. ':int' → logprob: -8.836589813232422

Token 306: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3338682651519775
    2. ' to' → logprob: -1.4588682651519775
    3. 'to' → logprob: -1.4588682651519775
    4. '_to' → logprob: -2.2088682651519775
    5. ':' → logprob: -2.3338682651519775
    6. ':int' → logprob: -3.4588682651519775
    7. '_numbers' → logprob: -4.708868026733398
    8. ' :' → logprob: -4.958868026733398
    9. 'int' → logprob: -5.583868026733398
    10. '_number' → logprob: -6.208868026733398

Token 307: ' gap' (ID: 19953)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3274049758911133
    2. 'int' → logprob: -1.4524049758911133
    3. '(int' → logprob: -1.5774049758911133
    4. '(i' → logprob: -2.8274049758911133
    5. '(n' → logprob: -3.0774049758911133
    6. '(end' → logprob: -3.0774049758911133
    7. ' (' → logprob: -3.4524049758911133
    8. '(pr' → logprob: -4.077404975891113
    9. '(True' → logprob: -4.452404975891113
    10. 'True' → logprob: -4.577404975891113

Token 308: ' length' (ID: 5517)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.0632508993148804
    2. 'length' → logprob: -1.3132508993148804
    3. '_length' → logprob: -1.9382508993148804
    4. '_size' → logprob: -2.06325101852417
    5. '   ' → logprob: -4.06325101852417
    6. '_count' → logprob: -4.31325101852417
    7. 'value' → logprob: -4.56325101852417
    8. 'def' → logprob: -4.68825101852417
    9. 'count' → logprob: -4.93825101852417
    10. 's' → logprob: -4.93825101852417

Token 309: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9100850224494934
    2. '       ' → logprob: -1.0350849628448486
    3. '<|end|>' → logprob: -1.5350849628448486
    4. ' ' → logprob: -4.410085201263428
    5. '   ' → logprob: -5.285085201263428
    6. '	' → logprob: -6.160085201263428
    7. '<|end|>' → logprob: -6.535085201263428
    8. ',' → logprob: -6.535085201263428
    9. '        
' → logprob: -7.035085201263428
    10. 'self' → logprob: -7.160085201263428

Token 310: ' endpoints' (ID: 76454)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.959216833114624
    2. 'prime' → logprob: -1.209216833114624
    3. ' start' → logprob: -2.584216833114624
    4. ' prime' → logprob: -2.584216833114624
    5. 'next' → logprob: -3.459216833114624
    6. ' next' → logprob: -3.834216833114624
    7. 'end' → logprob: -3.959216833114624
    8. ' gap' → logprob: -3.959216833114624
    9. 'gap' → logprob: -4.334217071533203
    10. '   ' → logprob: -4.584217071533203

Token 311: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17693118751049042
    2. '<|end|>' → logprob: -2.051931142807007
    3. ' ' → logprob: -4.176931381225586
    4. '       ' → logprob: -4.801931381225586
    5. '   ' → logprob: -5.301931381225586
    6. '<|end|>' → logprob: -6.926931381225586
    7. '    
' → logprob: -7.426931381225586
    8. '        
' → logprob: -7.801931381225586
    9. '\' → logprob: -7.801931381225586
    10. ' 
' → logprob: -7.926931381225586

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8486417531967163
    2. '<|end|>' → logprob: -1.3486417531967163
    3. '   ' → logprob: -1.8486417531967163
    4. ' ' → logprob: -2.348641872406006
    5. '
' → logprob: -3.723641872406006
    6. ',' → logprob: -5.598641872406006
    7. '[' → logprob: -5.598641872406006
    8. '        
' → logprob: -5.598641872406006
    9. '    
' → logprob: -5.723641872406006
    10. '	' → logprob: -5.723641872406006

Token 313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2000756561756134
    2. '       ' → logprob: -1.950075626373291
    3. 'for' → logprob: -3.950075626373291
    4. ' self' → logprob: -4.325075626373291
    5. '   ' → logprob: -6.075075626373291
    6. 'def' → logprob: -6.200075626373291
    7. ' for' → logprob: -6.200075626373291
    8. ' ' → logprob: -9.70007610321045
    9. '<|end|>' → logprob: -10.45007610321045
    10. '	self' → logprob: -10.57507610321045

Token 314: '.end' (ID: 10289)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.24007737636566162
    2. '.end' → logprob: -1.6150773763656616
    3. '_end' → logprob: -5.240077495574951
    4. '.' → logprob: -5.365077495574951
    5. 'end' → logprob: -5.990077495574951
    6. '.g' → logprob: -6.990077495574951
    7. '.length' → logprob: -8.365077018737793
    8. '.fill' → logprob: -8.865077018737793
    9. '.build' → logprob: -8.990077018737793
    10. 'def' → logprob: -9.490077018737793

Token 315: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0010082771768793464
    2. '_' → logprob: -7.3760085105896
    3. 's' → logprob: -8.251008033752441
    4. '_points' → logprob: -10.501008033752441
    5. '_mapping' → logprob: -10.751008033752441
    6. '_maps' → logprob: -10.876008033752441
    7. '_point' → logprob: -11.501008033752441
    8. ' _' → logprob: -11.626008033752441
    9. '_to' → logprob: -11.751008033752441
    10. '_m' → logprob: -12.501008033752441

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22556465864181519
    2. '=' → logprob: -1.60056471824646
    3. ':' → logprob: -9.475564956665039
    4. '={}' → logprob: -9.725564956665039
    5. '=[]' → logprob: -11.725564956665039
    6. ' ' → logprob: -13.475564956665039
    7. '={' → logprob: -13.725564956665039
    8. '{}' → logprob: -13.725564956665039
    9. '{' → logprob: -13.975564956665039
    10. '<|end|>' → logprob: -14.475564956665039

Token 317: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1269395500421524
    2. ' {}' → logprob: -2.126939535140991
    3. '{' → logprob: -12.75193977355957
    4. ' ' → logprob: -13.00193977355957
    5. '   ' → logprob: -13.25193977355957
    6. '[]' → logprob: -14.25193977355957
    7. '{}
' → logprob: -14.50193977355957
    8. 'set' → logprob: -14.62693977355957
    9. '{}

' → logprob: -14.62693977355957
    10. '{}\' → logprob: -14.87693977355957

Token 318: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030609508976340294
    2. ' ' → logprob: -4.405609607696533
    3. '       ' → logprob: -5.280609607696533
    4. '={}' → logprob: -6.155609607696533
    5. ' {}' → logprob: -6.280609607696533
    6. '{}' → logprob: -6.405609607696533
    7. '=' → logprob: -6.405609607696533
    8. ':' → logprob: -6.405609607696533
    9. '   ' → logprob: -6.530609607696533
    10. '()' → logprob: -7.155609607696533

Token 319: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3377480506896973
    2. '       ' → logprob: -1.5877480506896973
    3. '()' → logprob: -1.8377480506896973
    4. '#' (adapté à ' #') → logprob: -1.8377480506896973
    5. '{' → logprob: -2.8377480506896973
    6. '   ' → logprob: -3.0877480506896973
    7. ' #' → logprob: -3.4627480506896973
    8. '{}' → logprob: -3.9627480506896973
    9. ' {' → logprob: -4.337748050689697
    10. '  ' → logprob: -4.587748050689697

Token 320: ' Map' (ID: 7343)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.7001687288284302
    2. ' Map' → logprob: -0.8251687288284302
    3. 'Map' → logprob: -3.4501686096191406
    4. '{}' → logprob: -3.8251686096191406
    5. ' ' → logprob: -4.950168609619141
    6. ' {' → logprob: -6.575168609619141
    7. ' #' → logprob: -7.200168609619141
    8. '{' → logprob: -7.825168609619141
    9. ' {}
' → logprob: -7.825168609619141
    10. ' map' → logprob: -8.07516860961914

Token 321: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.2552276849746704
    2. 'end' → logprob: -1.5052276849746704
    3. ' composite' → logprob: -6.755227565765381
    4. ' gap' → logprob: -8.005228042602539
    5. 'prime' → logprob: -8.130228042602539
    6. 'gap' → logprob: -8.130228042602539
    7. 'self' → logprob: -8.380228042602539
    8. ' primes' → logprob: -8.880228042602539
    9. ' prime' → logprob: -9.380228042602539
    10. ' self' → logprob: -9.380228042602539

Token 322: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04419061169028282
    2. '_of' → logprob: -3.7941906452178955
    3. 'of' → logprob: -4.044190406799316
    4. '   ' → logprob: -7.419190406799316
    5. ' =' → logprob: -7.419190406799316
    6. '=' → logprob: -7.669190406799316
    7. '       ' → logprob: -8.169190406799316
    8. 's' → logprob: -8.544190406799316
    9. '_' → logprob: -8.794190406799316
    10. '  ' → logprob: -8.794190406799316

Token 323: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.20268958806991577
    2. ' gap' → logprob: -1.7026896476745605
    3. '_gap' → logprob: -7.7026896476745605
    4. 'com' → logprob: -7.9526896476745605
    5. ' composite' → logprob: -9.077689170837402
    6. 'range' → logprob: -9.827689170837402
    7. 'g' → logprob: -9.952689170837402
    8. 'prime' → logprob: -10.265189170837402
    9. 'the' → logprob: -10.390189170837402
    10. ' the' → logprob: -10.452689170837402

Token 324: ' composite' (ID: 40773)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18742242455482483
    2. ' composite' → logprob: -2.187422513961792
    3. 'to' → logprob: -3.437422513961792
    4. 'com' → logprob: -3.812422513961792
    5. ':' → logprob: -6.312422275543213
    6. ' of' → logprob: -7.187422275543213
    7. '_com' → logprob: -7.437422275543213
    8. ' ' → logprob: -7.437422275543213
    9. 'Composite' → logprob: -8.812422752380371
    10. '_to' → logprob: -9.687422752380371

Token 325: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04438117891550064
    2. 'to' → logprob: -3.1693811416625977
    3. ':' → logprob: -7.044381141662598
    4. '<|end|>' → logprob: -8.294381141662598
    5. ' ' → logprob: -8.919381141662598
    6. ',' → logprob: -10.794381141662598
    7. ' composite' → logprob: -11.044381141662598
    8. ')' → logprob: -11.169381141662598
    9. '_to' → logprob: -11.669381141662598
    10. 'To' → logprob: -11.794381141662598

Token 326: ' gap' (ID: 19953)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.18033307790756226
    2. ' {}' → logprob: -1.805333137512207
    3. ' ' → logprob: -8.555333137512207
    4. ' (' → logprob: -9.055333137512207
    5. '{' → logprob: -10.055333137512207
    6. ' []' → logprob: -10.555333137512207
    7. ' {' → logprob: -10.555333137512207
    8. '[]' → logprob: -10.680333137512207
    9. '<|end|>' → logprob: -10.930333137512207
    10. ' {}
' → logprob: -11.055333137512207

Token 327: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.04910175874829292
    2. 'length' → logprob: -3.0491018295288086
    3. ' lengths' → logprob: -8.299101829528809
    4. '_length' → logprob: -8.299101829528809
    5. '_lengths' → logprob: -12.424101829528809
    6. 'ength' → logprob: -13.299101829528809
    7. ' _' → logprob: -13.299101829528809
    8. ' ' → logprob: -13.299101829528809
    9. '[length' → logprob: -13.674101829528809
    10. 'len' → logprob: -13.674101829528809

Token 328: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0658018589019775
    2. '<|end|>' → logprob: -1.1908018589019775
    3. '       ' → logprob: -1.5658018589019775
    4. ',' → logprob: -2.3158018589019775
    5. 'and' → logprob: -4.065801620483398
    6. ' ' → logprob: -4.690801620483398
    7. '   ' → logprob: -4.940801620483398
    8. '        ' → logprob: -5.940801620483398
    9. '<|end|>' → logprob: -6.190801620483398
    10. '  ' → logprob: -7.190801620483398

Token 329: ' endpoints' (ID: 76454)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.26197534799575806
    2. ' endpoints' → logprob: -1.5119752883911133
    3. 'start' → logprob: -4.761975288391113
    4. ' end' → logprob: -7.261975288391113
    5. ' start' → logprob: -7.761975288391113
    6. '(end' → logprob: -9.011975288391113
    7. 'interval' → logprob: -9.636975288391113
    8. 'points' → logprob: -10.386975288391113
    9. ' (' → logprob: -11.886975288391113
    10. '(start' → logprob: -11.886975288391113

Token 330: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7758455276489258
    2. '   ' → logprob: -0.7758455276489258
    3. '       ' → logprob: -2.775845527648926
    4. '<|end|>' → logprob: -4.400845527648926
    5. '    
' → logprob: -6.400845527648926
    6. '

' → logprob: -7.150845527648926
    7. 'def' → logprob: -7.400845527648926
    8. ',' → logprob: -7.650845527648926
    9. '<|end|>' → logprob: -8.025845527648926
    10. ' ' → logprob: -8.150845527648926

Token 331: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7166112661361694
    2. '
' → logprob: -0.8416112661361694
    3. '<|end|>' → logprob: -2.841611385345459
    4. '    
' → logprob: -4.591611385345459
    5. 'def' → logprob: -5.216611385345459
    6. ' def' → logprob: -6.591611385345459
    7. ' ' → logprob: -6.716611385345459
    8. ' 
' → logprob: -6.841611385345459
    9. '       ' → logprob: -7.091611385345459
    10. '  
' → logprob: -7.341611385345459

Token 332: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37877005338668823
    2. 'for' → logprob: -1.378770112991333
    3. ' for' → logprob: -3.503770112991333
    4. 'self' (adapté à ' self') → logprob: -4.128769874572754
    5. 'def' → logprob: -4.378769874572754
    6. ' self' → logprob: -5.878769874572754
    7. '   ' → logprob: -6.378769874572754
    8. '
' → logprob: -9.128769874572754
    9. ' def' → logprob: -10.878769874572754
    10. 'n' → logprob: -11.753769874572754

Token 333: '._' (ID: 2697)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8125607371330261
    2. '._' → logprob: -0.8125607371330261
    3. '   ' → logprob: -2.437560796737671
    4. '.' → logprob: -4.562560558319092
    5. ' def' → logprob: -4.687560558319092
    6. '.def' → logprob: -5.812560558319092
    7. '_gap' → logprob: -7.562560558319092
    8. '.g' → logprob: -8.43756103515625
    9. '.__' → logprob: -8.43756103515625
    10. 'for' → logprob: -8.56256103515625

Token 334: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.7091047167778015
    2. 'generate' → logprob: -1.3341047763824463
    3. 'compute' → logprob: -1.9591047763824463
    4. 'pre' → logprob: -3.2091047763824463
    5. 'populate' → logprob: -3.3341047763824463
    6. 'process' → logprob: -4.709104537963867
    7. 'calculate' → logprob: -4.834104537963867
    8. 'prepare' → logprob: -5.459104537963867
    9. 'initialize' → logprob: -6.209104537963867
    10. 'create' → logprob: -6.459104537963867

Token 335: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.44822025299072266
    2. '_gap' → logprob: -1.4482202529907227
    3. '_map' → logprob: -2.3232202529907227
    4. '_' → logprob: -3.9482202529907227
    5. '_maps' → logprob: -4.948220252990723
    6. '()' → logprob: -6.698220252990723
    7. '_s' → logprob: -8.823220252990723
    8. 'g' → logprob: -8.948220252990723
    9. '(' → logprob: -9.073220252990723
    10. '_mapping' → logprob: -9.948220252990723

Token 336: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.054973576217889786
    2. 'ap' → logprob: -2.929973602294922
    3. 'a' → logprob: -10.929973602294922
    4. 'raph' → logprob: -11.179973602294922
    5. 'enerate' → logprob: -11.304973602294922
    6. '_' → logprob: -11.554973602294922
    7. 'app' → logprob: -12.054973602294922
    8. '_ap' → logprob: -12.804973602294922
    9. 'ап' → logprob: -12.929973602294922
    10. '```' → logprob: -13.179973602294922

Token 337: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.957014556974173e-05
    2. '()
' → logprob: -9.750069618225098
    3. '()

' → logprob: -12.125069618225098
    4. '(' → logprob: -12.750069618225098
    5. '()`' → logprob: -13.875069618225098
    6. ' ()' → logprob: -14.500069618225098
    7. '()
' → logprob: -15.250069618225098
    8. '   ' → logprob: -15.625069618225098
    9. '()\' → logprob: -15.750069618225098
    10. '_' → logprob: -15.875069618225098

Token 338: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7084485292434692
    2. '   ' → logprob: -0.8334485292434692
    3. 'def' → logprob: -2.7084484100341797
    4. '    
' → logprob: -5.70844841003418
    5. ' def' → logprob: -5.95844841003418
    6. '<|end|>' → logprob: -9.08344841003418
    7. '	def' → logprob: -9.58344841003418
    8. '

' → logprob: -9.70844841003418
    9. '
' → logprob: -9.95844841003418
    10. '  
' → logprob: -10.08344841003418

Token 339: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002357690827921033
    2. '   ' → logprob: -6.752357482910156
    3. ' def' → logprob: -6.752357482910156
    4. '
' → logprob: -11.377357482910156
    5. '	def' → logprob: -12.002357482910156
    6. ' ' → logprob: -14.252357482910156
    7. '    
' → logprob: -15.252357482910156
    8. '  ' → logprob: -16.877357482910156
    9. '

' → logprob: -17.502357482910156
    10. '_def' → logprob: -17.752357482910156

Token 340: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.00020473242329899222
    2. ' _' → logprob: -8.500205039978027
    3. '_' → logprob: -14.875205039978027
    4. '_generate' → logprob: -15.000205039978027
    5. '_start' → logprob: -16.00020408630371
    6. 'build' → logprob: -16.00020408630371
    7. '_b' → logprob: -16.00020408630371
    8. '_create' → logprob: -16.25020408630371
    9. '_add' → logprob: -16.62520408630371
    10. '_get' → logprob: -17.25020408630371

Token 341: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -5.512236498361744e-07
    2. 'b' → logprob: -14.875000953674316
    3. 'generate' → logprob: -16.25
    4. '_build' → logprob: -16.5
    5. ' build' → logprob: -17.75
    6. '(build' → logprob: -18.875
    7. '	build' → logprob: -19.25
    8. 'def' → logprob: -19.875
    9. '.build' → logprob: -19.875
    10. 'bu' → logprob: -20.25

Token 342: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -3.786196975852363e-05
    2. 'g' → logprob: -10.250038146972656
    3. '_' → logprob: -13.000038146972656
    4. ' _' → logprob: -16.750038146972656
    5. '_gap' → logprob: -16.750038146972656
    6. '_s' → logprob: -18.000038146972656
    7. '
' → logprob: -18.000038146972656
    8. '

' → logprob: -18.375038146972656
    9. '\' → logprob: -19.375038146972656
    10. '(_' → logprob: -19.750038146972656

Token 343: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -1.5928495486150496e-05
    2. 'ap' → logprob: -11.625016212463379
    3. 'g' → logprob: -12.250016212463379
    4. '_' → logprob: -14.625016212463379
    5. 'apses' → logprob: -14.875016212463379
    6. 'build' → logprob: -15.000016212463379
    7. 'a' → logprob: -15.125016212463379
    8. '_g' → logprob: -15.375016212463379
    9. 'ags' → logprob: -15.875016212463379
    10. 'abs' → logprob: -16.125015258789062

Token 344: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020115631923545152
    2. '(' → logprob: -8.625201225280762
    3. 'self' → logprob: -10.875201225280762
    4. '   ' → logprob: -13.625201225280762
    5. '(
' → logprob: -14.500201225280762
    6. '       ' → logprob: -15.250201225280762
    7. '(s' → logprob: -15.375201225280762
    8. ' ' → logprob: -16.375200271606445
    9. ' (' → logprob: -16.500200271606445
    10. 'def' → logprob: -16.625200271606445

Token 345: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07252601534128189
    2. '(self' → logprob: -3.572525978088379
    3. '):
' → logprob: -3.572525978088379
    4. 'self' → logprob: -4.697525978088379
    5. ')' → logprob: -5.572525978088379
    6. '   ' → logprob: -7.947525978088379
    7. '       ' → logprob: -8.447525978088379
    8. '():' → logprob: -9.447525978088379
    9. '):

' → logprob: -10.322525978088379
    10. ':' → logprob: -10.322525978088379

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.041768160182983e-05
    2. 'for' → logprob: -9.875080108642578
    3. ' for' → logprob: -10.500080108642578
    4. '   ' → logprob: -14.500080108642578
    5. 'n' → logprob: -15.250080108642578
    6. 'self' → logprob: -16.125080108642578
    7. '```' → logprob: -16.125080108642578
    8. '      ' → logprob: -16.375080108642578
    9. ',' → logprob: -16.500080108642578
    10. '           ' → logprob: -16.875080108642578

Token 347: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03497762605547905
    2. '       ' → logprob: -3.784977674484253
    3. ' for' → logprob: -4.534977436065674
    4. 'prev' → logprob: -7.034977436065674
    5. 'n' → logprob: -11.159977912902832
    6. 'self' → logprob: -11.284977912902832
    7. 'previous' → logprob: -11.534977912902832
    8. ' prev' → logprob: -11.659977912902832
    9. 'last' → logprob: -12.034977912902832
    10. 'gap' → logprob: -13.784977912902832

Token 348: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005270395893603563
    2. ' i' → logprob: -5.255270481109619
    3. 'idx' → logprob: -11.005270004272461
    4. 'index' → logprob: -11.005270004272461
    5. ' idx' → logprob: -13.130270004272461
    6. ' ' → logprob: -14.380270004272461
    7. '   ' → logprob: -14.630270004272461
    8. ' index' → logprob: -15.380270004272461
    9. '	i' → logprob: -16.50527000427246
    10. '  ' → logprob: -16.75527000427246

Token 349: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003186386078596115
    2. 'in' → logprob: -5.753186225891113
    3. ' ' → logprob: -12.503186225891113
    4. '1' → logprob: -13.628186225891113
    5. ',' → logprob: -13.753186225891113
    6. ' i' → logprob: -13.878186225891113
    7. '   ' → logprob: -14.128186225891113
    8. '	in' → logprob: -14.878186225891113
    9. '_in' → logprob: -16.12818717956543
    10. '  ' → logprob: -16.12818717956543

Token 350: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615515194833279
    2. ' range' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.633615493774414
    4. ' ' → logprob: -15.258615493774414
    5. '  ' → logprob: -16.133615493774414
    6. '	range' → logprob: -16.383615493774414
    7. '(range' → logprob: -17.133615493774414
    8. '    ' → logprob: -18.383615493774414
    9. '
' → logprob: -19.008615493774414
    10. '     ' → logprob: -19.883615493774414

Token 351: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31327563524246216
    2. '(len' → logprob: -1.3132755756378174
    3. 'len' → logprob: -11.313275337219238
    4. '1' → logprob: -13.438275337219238
    5. ' len' → logprob: -16.063276290893555
    6. ' (' → logprob: -17.563276290893555
    7. '   ' → logprob: -17.813276290893555
    8. ' ' → logprob: -17.938276290893555
    9. '[len' → logprob: -19.063276290893555
    10. '(
' → logprob: -19.188276290893555

Token 352: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.36574100604048e-06
    2. 'self' → logprob: -12.375004768371582
    3. '(' → logprob: -17.125003814697266
    4. ' self' → logprob: -19.500003814697266
    5. '=self' → logprob: -20.250003814697266
    6. '(pr' → logprob: -20.375003814697266
    7. '[self' → logprob: -20.375003814697266
    8. ',self' → logprob: -20.750003814697266
    9. '(s' → logprob: -21.125003814697266
    10. ')' → logprob: -21.375003814697266

Token 353: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.00011248346709180623
    2. '(pr' → logprob: -9.750112533569336
    3. '   ' → logprob: -10.500112533569336
    4. 'pr' → logprob: -11.000112533569336
    5. '.' → logprob: -12.875112533569336
    6. 'self' → logprob: -13.625112533569336
    7. ' .' → logprob: -13.625112533569336
    8. '	pr' → logprob: -13.750112533569336
    9. '       ' → logprob: -14.375112533569336
    10. ')' → logprob: -14.500112533569336

Token 354: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00016182278341148049
    2. 'omes' → logprob: -10.750162124633789
    3. 'mes' → logprob: -10.875162124633789
    4. 'ime' → logprob: -11.000162124633789
    5. '_' → logprob: -11.125162124633789
    6. '   ' → logprob: -11.625162124633789
    7. '
' → logprob: -11.875162124633789
    8. '#' → logprob: -12.250162124633789
    9. '[' → logprob: -12.437662124633789
    10. '__' → logprob: -12.687662124633789

Token 355: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011728443205356598
    2. ' -' → logprob: -7.12617301940918
    3. ' )' → logprob: -8.87617301940918
    4. ')-' → logprob: -9.12617301940918
    5. '-' → logprob: -9.37617301940918
    6. '   ' → logprob: -11.00117301940918
    7. ' ' → logprob: -11.25117301940918
    8. '()' → logprob: -13.12617301940918
    9. '1' → logprob: -14.00117301940918
    10. ']' → logprob: -14.12617301940918

Token 356: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00865109171718359
    2. '-' → logprob: -4.758651256561279
    3. ' ' → logprob: -11.133650779724121
    4. '   ' → logprob: -11.508650779724121
    5. ')' → logprob: -11.758650779724121
    6. '1' → logprob: -12.883650779724121
    7. '
' → logprob: -14.508650779724121
    8. '       ' → logprob: -14.883650779724121
    9. '  ' → logprob: -15.633650779724121
    10. '()' → logprob: -16.008651733398438

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '2' → logprob: -16.750059127807617
    4. '   ' → logprob: -18.375059127807617
    5. '<|end|>' → logprob: -19.000059127807617
    6. ')' → logprob: -19.125059127807617
    7. '```' → logprob: -20.312559127807617
    8. '0' → logprob: -20.687559127807617
    9. '  ' → logprob: -21.000059127807617
    10. 'def' → logprob: -21.250059127807617

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '2' → logprob: -16.750009536743164
    4. '   ' → logprob: -18.250009536743164
    5. '１' → logprob: -19.687509536743164
    6. '0' → logprob: -20.437509536743164
    7. '
' → logprob: -20.500009536743164
    8. ')' → logprob: -20.500009536743164
    9. '  ' → logprob: -20.625009536743164
    10. '```' → logprob: -20.750009536743164

Token 359: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02672543004155159
    2. '):' → logprob: -3.6517255306243896
    3. '):
' → logprob: -8.026725769042969
    4. '       ' → logprob: -10.276725769042969
    5. ' ):
' → logprob: -10.276725769042969
    6. ':' → logprob: -10.901725769042969
    7. '   ' → logprob: -12.026725769042969
    8. ':
' → logprob: -13.151725769042969
    9. ' ):' → logprob: -13.776725769042969
    10. '):

' → logprob: -14.276725769042969

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09552580118179321
    2. '       ' → logprob: -2.5955257415771484
    3. 'start' → logprob: -4.595525741577148
    4. ' start' → logprob: -5.345525741577148
    5. ' gap' → logprob: -7.095525741577148
    6. 'gap' → logprob: -8.345525741577148
    7. ',' → logprob: -9.095525741577148
    8. 'n' → logprob: -9.720525741577148
    9. '   ' → logprob: -9.720525741577148
    10. 'a' → logprob: -9.845525741577148

Token 361: ' p' (ID: 275)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3338336944580078
    2. 'p' (adapté à ' p') → logprob: -2.083833694458008
    3. '           ' → logprob: -2.958833694458008
    4. 'a' → logprob: -2.958833694458008
    5. ' start' → logprob: -3.708833694458008
    6. ' p' → logprob: -4.458833694458008
    7. 'gap' → logprob: -4.833833694458008
    8. ' gap' → logprob: -5.333833694458008
    9. '   ' → logprob: -5.958833694458008
    10. ' a' → logprob: -6.208833694458008

Token 362: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3328377306461334
    2. 'r' → logprob: -2.3328378200531006
    3. '1' → logprob: -2.8328378200531006
    4. '_start' → logprob: -3.0828378200531006
    5. ' =' → logprob: -3.7078378200531006
    6. 'i' → logprob: -3.7078378200531006
    7. '   ' → logprob: -4.8328375816345215
    8. ',' → logprob: -5.2078375816345215
    9. '=' → logprob: -5.7078375816345215
    10. 's' → logprob: -5.8328375816345215

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6165619492530823
    2. ',' → logprob: -0.8665619492530823
    3. '=' → logprob: -3.2415618896484375
    4. ' ,' → logprob: -7.9915618896484375
    5. ',p' → logprob: -8.116561889648438
    6. '=p' → logprob: -10.116561889648438
    7. 'p' → logprob: -10.866561889648438
    8. ' =
' → logprob: -13.241561889648438
    9. ' ' → logprob: -13.366561889648438
    10. ' p' → logprob: -13.366561889648438

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024756586644798517
    2. ' self' → logprob: -6.002475738525391
    3. '       ' → logprob: -17.75247573852539
    4. '(self' → logprob: -19.25247573852539
    5. '	self' → logprob: -19.50247573852539
    6. '   ' → logprob: -19.62747573852539
    7. '           ' → logprob: -19.75247573852539
    8. '[self' → logprob: -19.75247573852539
    9. '=self' → logprob: -20.37747573852539
    10. '
' → logprob: -21.50247573852539

Token 365: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.0004320996522437781
    2. '.' → logprob: -9.125432014465332
    3. ' .' → logprob: -9.125432014465332
    4. 'pr' → logprob: -9.375432014465332
    5. '	pr' → logprob: -10.500432014465332
    6. '.p' → logprob: -10.625432014465332
    7. '   ' → logprob: -11.125432014465332
    8. 's' → logprob: -11.500432014465332
    9. '_pr' → logprob: -11.625432014465332
    10. '_.' → logprob: -11.750432014465332

Token 366: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.02122381702065468
    2. 'mes' → logprob: -3.896223783493042
    3. 'omes' → logprob: -8.896224021911621
    4. '[' → logprob: -9.146224021911621
    5. 'im' → logprob: -10.021224021911621
    6. '_' → logprob: -10.271224021911621
    7. '#' → logprob: -10.271224021911621
    8. 'ames' → logprob: -10.396224021911621
    9. 'es' → logprob: -10.396224021911621
    10. '{' → logprob: -10.521224021911621

Token 367: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7385154428193346e-05
    2. '           ' → logprob: -10.87503719329834
    3. '       ' → logprob: -11.62503719329834
    4. '
' → logprob: -12.50003719329834
    5. '[' → logprob: -13.00003719329834
    6. '   ' → logprob: -13.62503719329834
    7. ' [' → logprob: -14.50003719329834
    8. ',' → logprob: -15.37503719329834
    9. '[
' → logprob: -15.50003719329834
    10. '               ' → logprob: -15.50003719329834

Token 368: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04377013072371483
    2. ']' → logprob: -3.1687700748443604
    3. '           ' → logprob: -7.9187703132629395
    4. ']
' → logprob: -9.168769836425781
    5. '
' → logprob: -9.543769836425781
    6. '+' → logprob: -9.918769836425781
    7. ')
' → logprob: -9.918769836425781
    8. '       ' → logprob: -10.168769836425781
    9. 'p' → logprob: -10.543769836425781
    10. ']

' → logprob: -10.668769836425781

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018641959875822067
    2. 'p' → logprob: -4.143641948699951
    3. ' p' → logprob: -6.143641948699951
    4. '   ' → logprob: -8.39364242553711
    5. ',' → logprob: -9.51864242553711
    6. '       ' → logprob: -9.64364242553711
    7. '		' → logprob: -10.26864242553711
    8. '	   ' → logprob: -11.39364242553711
    9. '          ' → logprob: -11.76864242553711
    10. '	p' → logprob: -12.14364242553711

Token 370: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.07920140027999878
    2. ' p' → logprob: -2.5792014598846436
    3. '           ' → logprob: -8.079201698303223
    4. '   ' → logprob: -13.704201698303223
    5. '       ' → logprob: -15.579201698303223
    6. ' ' → logprob: -15.829201698303223
    7. '	p' → logprob: -16.079200744628906
    8. '  ' → logprob: -16.954200744628906
    9. '    ' → logprob: -17.079200744628906
    10. '          ' → logprob: -17.829200744628906

Token 371: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0091570308431983
    2. '2' → logprob: -5.259157180786133
    3. '+' → logprob: -5.884157180786133
    4. '
' → logprob: -8.134157180786133
    5. '_plus' → logprob: -8.259157180786133
    6. 'p' → logprob: -8.384157180786133
    7. '_' → logprob: -9.134157180786133
    8. '0' → logprob: -9.384157180786133
    9. '=' → logprob: -10.009157180786133
    10. ' =' → logprob: -10.759157180786133

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693534791469574
    2. '=' → logprob: -2.1269352436065674
    3. ' ' → logprob: -12.626935005187988
    4. '           ' → logprob: -14.001935005187988
    5. '=self' → logprob: -14.001935005187988
    6. '        ' → logprob: -14.376935005187988
    7. '       ' → logprob: -15.251935005187988
    8. '            ' → logprob: -15.251935005187988
    9. ' =
' → logprob: -15.251935005187988
    10. ')' → logprob: -15.501935005187988

Token 373: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.693148672580719
    2. 'self' → logprob: -0.693148672580719
    3. '           ' → logprob: -14.818148612976074
    4. '(self' → logprob: -15.068148612976074
    5. '[self' → logprob: -15.568148612976074
    6. '	self' → logprob: -15.693148612976074
    7. ' ' → logprob: -17.19314956665039
    8. '       ' → logprob: -17.31814956665039
    9. '`' → logprob: -17.44314956665039
    10. 'pr' → logprob: -17.56814956665039

Token 374: '.pr' (ID: 27292)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.33105313777923584
    2. '[i' → logprob: -1.5810531377792358
    3. 's' → logprob: -2.8310532569885254
    4. 'i' → logprob: -4.956053256988525
    5. '.pr' → logprob: -4.956053256988525
    6. 'r' → logprob: -6.081053256988525
    7. ' primes' → logprob: -8.456052780151367
    8. '	pr' → logprob: -9.706052780151367
    9. '
' → logprob: -9.956052780151367
    10. '_pr' → logprob: -10.081052780151367

Token 375: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.002252910751849413
    2. 'mes' → logprob: -6.12725305557251
    3. 'r' → logprob: -10.252252578735352
    4. 's' → logprob: -11.627252578735352
    5. 'es' → logprob: -12.502252578735352
    6. '[' → logprob: -13.127252578735352
    7. '
' → logprob: -13.127252578735352
    8. 'i' → logprob: -13.252252578735352
    9. '   ' → logprob: -13.502252578735352
    10. 'ves' → logprob: -13.627252578735352

Token 376: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. 'i' → logprob: -15.625000953674316
    4. '[
' → logprob: -16.375
    5. '
' → logprob: -16.75
    6. ' [' → logprob: -17.125
    7. '       ' → logprob: -18.375
    8. '   ' → logprob: -18.5
    9. '[++' → logprob: -18.625
    10. '[j' → logprob: -18.75

Token 377: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0069144065491855145
    2. ' +' → logprob: -5.0069146156311035
    3. '[i' → logprob: -8.881914138793945
    4. '+i' → logprob: -9.756914138793945
    5. '   ' → logprob: -14.631914138793945
    6. 'i' → logprob: -14.631914138793945
    7. '+
' → logprob: -14.756914138793945
    8. ']' → logprob: -15.256914138793945
    9. '1' → logprob: -15.631914138793945
    10. '[' → logprob: -15.756914138793945

Token 378: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.375031471252441
    4. '
' → logprob: -15.750031471252441
    5. '  ' → logprob: -17.437532424926758
    6. '```' → logprob: -17.437532424926758
    7. ']' → logprob: -17.875032424926758
    8. '0' → logprob: -18.562532424926758
    9. 'i' → logprob: -18.625032424926758
    10. '2' → logprob: -18.875032424926758

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.37500762939453
    4. '0' → logprob: -17.75000762939453
    5. '```' → logprob: -18.25000762939453
    6. ']' → logprob: -18.62500762939453
    7. '  ' → logprob: -18.68750762939453
    8. '
' → logprob: -18.81250762939453
    9. '2' → logprob: -19.06250762939453
    10. '<|end|>' → logprob: -19.18750762939453

Token 380: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5003938674926758
    2. '           ' → logprob: -1.5003938674926758
    3. ']' → logprob: -2.250393867492676
    4. ')
' → logprob: -3.000393867492676
    5. '
' → logprob: -5.750393867492676
    6. ']
' → logprob: -5.750393867492676
    7. '       ' → logprob: -6.125393867492676
    8. ':' → logprob: -6.500393867492676
    9. '):
' → logprob: -6.750393867492676
    10. '<|end|>' → logprob: -6.750393867492676

Token 381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017481597024016082
    2. '            
' → logprob: -9.625174522399902
    3. ' gap' → logprob: -10.625174522399902
    4. '       ' → logprob: -11.000174522399902
    5. '<|end|>' → logprob: -11.125174522399902
    6. ',' → logprob: -11.250174522399902
    7. '
' → logprob: -11.375174522399902
    8. 'gap' → logprob: -11.625174522399902
    9. '   ' → logprob: -12.375174522399902
    10. '          ' → logprob: -12.875174522399902

Token 382: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' (adapté à ' gap') → logprob: -0.038560181856155396
    2. '           ' → logprob: -3.788560152053833
    3. ' gap' → logprob: -4.288560390472412
    4. 'length' → logprob: -6.913560390472412
    5. 'if' → logprob: -7.913560390472412
    6. ' if' → logprob: -9.913559913635254
    7. ' length' → logprob: -11.663559913635254
    8. '            
' → logprob: -11.788559913635254
    9. 'g' → logprob: -11.788559913635254
    10. 'distance' → logprob: -11.913559913635254

Token 383: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.48821181058883667
    2. ' =' → logprob: -0.9882118105888367
    3. '=' → logprob: -4.863211631774902
    4. '_len' → logprob: -5.488211631774902
    5. '_size' → logprob: -6.488211631774902
    6. '_' → logprob: -7.363211631774902
    7. '_distance' → logprob: -12.613211631774902
    8. ' ' → logprob: -12.738211631774902
    9. '_width' → logprob: -12.738211631774902
    10. 'length' → logprob: -13.488211631774902

Token 384: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692853808403015
    2. '=' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.126928329467773
    4. 's' → logprob: -17.001928329467773
    5. '=p' → logprob: -17.126928329467773
    6. ' =
' → logprob: -17.251928329467773
    7. '=int' → logprob: -17.376928329467773
    8. ',' → logprob: -18.001928329467773
    9. '_' → logprob: -18.626928329467773
    10. '    ' → logprob: -18.751928329467773

Token 385: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00034058792516589165
    2. ' p' → logprob: -8.000340461730957
    3. '           ' → logprob: -12.500340461730957
    4. '(p' → logprob: -13.625340461730957
    5. '
' → logprob: -16.125341415405273
    6. '<p' → logprob: -17.750341415405273
    7. '   ' → logprob: -17.875341415405273
    8. '	p' → logprob: -18.125341415405273
    9. '               ' → logprob: -18.625341415405273
    10. '(' → logprob: -18.875341415405273

Token 386: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -16.0625
    3. '```' → logprob: -16.1875
    4. '۲' → logprob: -16.5
    5. '_' → logprob: -17.625
    6. ' ' → logprob: -17.875
    7. '২' → logprob: -17.9375
    8. '₂' → logprob: -18.1875
    9. 'ython' → logprob: -18.5625
    10. 'ength' → logprob: -18.5625

Token 387: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01416798122227192
    2. '-' → logprob: -4.264167785644531
    3. '-p' → logprob: -12.764167785644531
    4. ' ' → logprob: -13.889167785644531
    5. ' p' → logprob: -14.889167785644531
    6. '   ' → logprob: -15.889167785644531
    7. 'p' → logprob: -16.13916778564453
    8. '[' → logprob: -18.38916778564453
    9. '−' → logprob: -18.76416778564453
    10. '  ' → logprob: -19.01416778564453

Token 388: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.493430894101039e-05
    2. ' p' → logprob: -9.500075340270996
    3. ' (' → logprob: -18.25007438659668
    4. '(p' → logprob: -18.62507438659668
    5. '(' → logprob: -19.75007438659668
    6. '<p' → logprob: -19.87507438659668
    7. '<|end|>' → logprob: -20.12507438659668
    8. '           ' → logprob: -20.25007438659668
    9. 'self' → logprob: -21.12507438659668
    10. '	p' → logprob: -21.25007438659668

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. 'r' → logprob: -13.750001907348633
    3. '```' → logprob: -17.437501907348633
    4. ' ' → logprob: -17.500001907348633
    5. 'l' → logprob: -17.500001907348633
    6. 's' → logprob: -17.875001907348633
    7. 'al' → logprob: -17.875001907348633
    8. '১' → logprob: -18.250001907348633
    9. 'ython' → logprob: -18.312501907348633
    10. '۱' → logprob: -18.437501907348633

Token 390: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006265300791710615
    2. ' -' → logprob: -5.256265163421631
    3. '-' → logprob: -7.131265163421631
    4. '            
' → logprob: -9.881265640258789
    5. '
' → logprob: -10.006265640258789
    6. ',' → logprob: -10.381265640258789
    7. '1' → logprob: -10.631265640258789
    8. '          ' → logprob: -10.756265640258789
    9. '       ' → logprob: -11.131265640258789
    10. '<|end|>' → logprob: -11.631265640258789

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002141458389814943
    2. '
' → logprob: -8.750214576721191
    3. ',' → logprob: -11.000214576721191
    4. '       ' → logprob: -11.375214576721191
    5. '            
' → logprob: -11.750214576721191
    6. '<|end|>' → logprob: -12.250214576721191
    7. ' if' → logprob: -12.750214576721191
    8. '   ' → logprob: -13.000214576721191
    9. '```' → logprob: -13.625214576721191
    10. ' for' → logprob: -13.875214576721191

Token 392: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2946620583534241
    2. 'self' → logprob: -1.9196619987487793
    3. 'if' (adapté à ' if') → logprob: -2.9196619987487793
    4. 'for' → logprob: -3.6696619987487793
    5. 'gap' → logprob: -4.794661998748779
    6. 'com' → logprob: -4.919661998748779
    7. ' self' → logprob: -5.044661998748779
    8. ' if' → logprob: -5.544661998748779
    9. ' for' → logprob: -6.669661998748779
    10. 'key' → logprob: -7.669661998748779

Token 393: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.34845665097236633
    2. ' gap' → logprob: -1.223456621170044
    3. '1' → logprob: -12.223456382751465
    4. '2' → logprob: -12.973456382751465
    5. ' ' → logprob: -13.348456382751465
    6. '   ' → logprob: -13.723456382751465
    7. '
' → logprob: -14.848456382751465
    8. '_gap' → logprob: -14.973456382751465
    9. 'g' → logprob: -15.723456382751465
    10. '           ' → logprob: -15.723456382751465

Token 394: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -6.861651490908116e-05
    2. '_' → logprob: -10.875068664550781
    3. '_l' → logprob: -10.875068664550781
    4. '>' → logprob: -11.000068664550781
    5. 'length' → logprob: -11.625068664550781
    6. ' >' → logprob: -13.625068664550781
    7. 's' → logprob: -14.000068664550781
    8. '   ' → logprob: -14.625068664550781
    9. 'l' → logprob: -15.000068664550781
    10. ' _' → logprob: -15.000068664550781

Token 395: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16045615077018738
    2. '>' → logprob: -1.9104561805725098
    3. ' >=' → logprob: -8.785455703735352
    4. ' ' → logprob: -10.285455703735352
    5. '>=' → logprob: -11.160455703735352
    6. '   ' → logprob: -11.660455703735352
    7. ' <=' → logprob: -12.035455703735352
    8. ' ==' → logprob: -12.160455703735352
    9. '==' → logprob: -13.035455703735352
    10. '  ' → logprob: -13.535455703735352

Token 396: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003506230190396309
    2. '2' → logprob: -6.003506183624268
    3. ' ' → logprob: -6.878506183624268
    4. '4' → logprob: -15.753506660461426
    5. '

' → logprob: -16.62850570678711
    6. '
' → logprob: -17.06600570678711
    7. '   ' → logprob: -17.37850570678711
    8. '0' → logprob: -17.37850570678711
    9. '3' → logprob: -17.87850570678711
    10. '6' → logprob: -17.94100570678711

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5239769816398621
    2. '2' → logprob: -0.8989769816398621
    3. ' ' → logprob: -7.273976802825928
    4. '4' → logprob: -9.023977279663086
    5. '6' → logprob: -11.148977279663086
    6. '3' → logprob: -12.148977279663086
    7. '8' → logprob: -12.648977279663086
    8. '7' → logprob: -12.836477279663086
    9. '   ' → logprob: -13.148977279663086
    10. '0' → logprob: -13.336477279663086

Token 398: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2832862436771393
    2. ':' → logprob: -1.408286213874817
    3. '           ' → logprob: -6.408286094665527
    4. '               ' → logprob: -8.283286094665527
    5. ' and' → logprob: -8.783286094665527
    6. ',' → logprob: -10.158286094665527
    7. '):
' → logprob: -11.533286094665527
    8. ' :
' → logprob: -11.533286094665527
    9. ':
' → logprob: -11.658286094665527
    10. ':

' → logprob: -12.158286094665527

Token 399: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7055118083953857
    2. '               ' → logprob: -0.7055118083953857
    3. ' self' → logprob: -5.330512046813965
    4. 'self' → logprob: -5.455512046813965
    5. ' gap' → logprob: -6.330512046813965
    6. ' for' → logprob: -7.580512046813965
    7. 'gap' → logprob: -7.705512046813965
    8. ',' → logprob: -9.455512046813965
    9. ' composite' → logprob: -9.455512046813965
    10. '       ' → logprob: -9.955512046813965

Token 400: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9033267498016357
    2. 'self' → logprob: -1.4033267498016357
    3. ' self' → logprob: -1.6533267498016357
    4. ' for' → logprob: -2.2783267498016357
    5. 'for' → logprob: -3.7783267498016357
    6. 'start' → logprob: -4.403326988220215
    7. 'com' → logprob: -4.903326988220215
    8. ' gap' → logprob: -5.653326988220215
    9. ' start' → logprob: -5.903326988220215
    10. 'gap' → logprob: -5.903326988220215

Token 401: ' composite' (ID: 40773)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4890683591365814
    2. 'start' → logprob: -2.2390682697296143
    3. 'com' → logprob: -2.3640682697296143
    4. 'gap' → logprob: -2.4890682697296143
    5. 'self' → logprob: -2.8640682697296143
    6. ' for' → logprob: -3.6140682697296143
    7. '               ' → logprob: -4.739068508148193
    8. ' gap' → logprob: -5.489068508148193
    9. ' composite' → logprob: -6.239068508148193
    10. ' self' → logprob: -6.364068508148193

Token 402: ' numbers' (ID: 8663)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.03696708753705025
    2. ' =' → logprob: -3.6619670391082764
    3. '_com' → logprob: -5.2869672775268555
    4. 'start' → logprob: -6.0369672775268555
    5. 'for' → logprob: -7.5369672775268555
    6. '_number' → logprob: -7.5369672775268555
    7. '=' → logprob: -7.5369672775268555
    8. '_num' → logprob: -7.6619672775268555
    9. 'com' → logprob: -7.7869672775268555
    10. '_range' → logprob: -9.036967277526855

Token 403: ' lying' (ID: 38091)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3763132095336914
    2. ' for' → logprob: -1.8763132095336914
    3. '=' → logprob: -3.0013132095336914
    4. '               ' → logprob: -3.1263132095336914
    5. 'for' → logprob: -3.1263132095336914
    6. 'start' → logprob: -5.251313209533691
    7. '_start' → logprob: -5.501313209533691
    8. ' in' → logprob: -5.751313209533691
    9. ' between' → logprob: -6.126313209533691
    10. ' start' → logprob: -6.376313209533691

Token 404: ' between' (ID: 2870)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.2067682445049286
    2. ' between' → logprob: -1.706768274307251
    3. 'in' → logprob: -5.331768035888672
    4. ' in' → logprob: -7.831768035888672
    5. '_between' → logprob: -9.206768035888672
    6. 'Between' → logprob: -13.081768035888672
    7. '>' → logprob: -13.706768035888672
    8. 'etween' → logprob: -13.956768035888672
    9. '```' → logprob: -14.581768035888672
    10. ' ' → logprob: -14.706768035888672

Token 405: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1010085716843605
    2. ' p' → logprob: -2.726008653640747
    3. ' for' → logprob: -4.101008415222168
    4. 'for' → logprob: -4.601008415222168
    5. 'range' → logprob: -6.476008415222168
    6. '               ' → logprob: -6.726008415222168
    7. ' range' → logprob: -6.851008415222168
    8. '(p' → logprob: -10.101008415222168
    9. '           ' → logprob: -10.726008415222168
    10. ' =' → logprob: -11.101008415222168

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001564586127642542
    2. 'p' → logprob: -9.25015640258789
    3. '_' → logprob: -10.62515640258789
    4. '2' → logprob: -11.37515640258789
    5. ' p' → logprob: -12.37515640258789
    6. 's' → logprob: -12.62515640258789
    7. ',' → logprob: -12.75015640258789
    8. '+' → logprob: -13.00015640258789
    9. 'r' → logprob: -13.00015640258789
    10. '   ' → logprob: -13.25015640258789

Token 407: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20385190844535828
    2. ' +' → logprob: -1.7038519382476807
    3. ' and' → logprob: -6.828851699829102
    4. 'and' → logprob: -6.953851699829102
    5. ',' → logprob: -8.578851699829102
    6. '               ' → logprob: -9.703851699829102
    7. '           ' → logprob: -11.328851699829102
    8. '+=' → logprob: -11.328851699829102
    9. ' +=' → logprob: -11.328851699829102
    10. '+
' → logprob: -11.578851699829102

Token 408: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10021346807479858
    2. ' p' → logprob: -2.3502135276794434
    3. '               ' → logprob: -13.100213050842285
    4. '                   ' → logprob: -13.100213050842285
    5. 'self' → logprob: -14.850213050842285
    6. '(p' → logprob: -14.850213050842285
    7. '                ' → logprob: -14.850213050842285
    8. '
' → logprob: -14.975213050842285
    9. ',' → logprob: -15.475213050842285
    10. ' ' → logprob: -15.600213050842285

Token 409: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '_' → logprob: -15.375001907348633
    4. 'p' → logprob: -15.375001907348633
    5. '۲' → logprob: -16.125001907348633
    6. '```' → logprob: -16.125001907348633
    7. '
' → logprob: -17.187501907348633
    8. '+' → logprob: -17.437501907348633
    9. '   ' → logprob: -17.875001907348633
    10. '1' → logprob: -17.875001907348633

Token 410: ' are' (ID: 553)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5316133499145508
    2. '               ' → logprob: -1.1566133499145508
    3. ':' → logprob: -2.781613349914551
    4. 'for' → logprob: -3.906613349914551
    5. ' =' → logprob: -4.906613349914551
    6. ',' → logprob: -5.281613349914551
    7. ':
' → logprob: -6.406613349914551
    8. '=' → logprob: -7.656613349914551
    9. '                
' → logprob: -8.65661334991455
    10. '                ' → logprob: -9.40661334991455

Token 411: ' from' (ID: 591)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6312111616134644
    2. 'range' → logprob: -1.5062111616134644
    3. ' p' → logprob: -2.756211280822754
    4. ' list' → logprob: -2.756211280822754
    5. 'list' → logprob: -2.756211280822754
    6. ' range' → logprob: -3.756211280822754
    7. '[p' → logprob: -3.881211280822754
    8. '(p' → logprob: -6.006211280822754
    9. '   ' → logprob: -6.256211280822754
    10. '[' → logprob: -6.256211280822754

Token 412: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3870355486869812
    2. ' p' → logprob: -1.137035608291626
    3. '(p' → logprob: -8.887035369873047
    4. ' (' → logprob: -10.887035369873047
    5. '`' → logprob: -12.512035369873047
    6. 'range' → logprob: -14.137035369873047
    7. '                   ' → logprob: -14.512035369873047
    8. '(' → logprob: -14.637035369873047
    9. '               ' → logprob: -14.637035369873047
    10. ' range' → logprob: -15.012035369873047

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '+' → logprob: -12.875004768371582
    3. '```' → logprob: -14.625004768371582
    4. '2' → logprob: -15.125004768371582
    5. 's' → logprob: -15.125004768371582
    6. '`' → logprob: -15.625004768371582
    7. ' +' → logprob: -15.750004768371582
    8. '_' → logprob: -16.250003814697266
    9. ' p' → logprob: -16.500003814697266
    10. '   ' → logprob: -16.625003814697266

Token 414: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868715465068817
    2. ' +' → logprob: -1.136871576309204
    3. '+
' → logprob: -16.261871337890625
    4. '+i' → logprob: -16.386871337890625
    5. ' +
' → logprob: -16.511871337890625
    6. '+p' → logprob: -16.886871337890625
    7. '1' → logprob: -16.886871337890625
    8. ' ' → logprob: -17.011871337890625
    9. '[' → logprob: -17.261871337890625
    10. '()+' → logprob: -17.386871337890625

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.779520092299208e-05
    2. ' ' → logprob: -9.500078201293945
    3. '2' → logprob: -14.000078201293945
    4. '+' → logprob: -14.250078201293945
    5. '```' → logprob: -14.500078201293945
    6. '                   ' → logprob: -15.500078201293945
    7. ' +' → logprob: -15.750078201293945
    8. '
' → logprob: -15.750078201293945
    9. '           ' → logprob: -16.000078201293945
    10. '   ' → logprob: -16.125078201293945

Token 416: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10830354690551758
    2. 'to' → logprob: -2.3583035469055176
    3. ' up' → logprob: -5.733303546905518
    4. '               ' → logprob: -5.733303546905518
    5. '                ' → logprob: -6.733303546905518
    6. '                   ' → logprob: -8.48330307006836
    7. ',' → logprob: -9.60830307006836
    8. ' ' → logprob: -10.73330307006836
    9. ' through' → logprob: -10.85830307006836
    10. '            ' → logprob: -11.10830307006836

Token 417: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.38687217235565186
    2. 'p' → logprob: -1.1368721723556519
    3. '(p' → logprob: -14.511872291564941
    4. ' (' → logprob: -15.761872291564941
    5. '<p' → logprob: -16.261871337890625
    6. '`' → logprob: -16.511871337890625
    7. ' ' → logprob: -16.636871337890625
    8. '   ' → logprob: -16.761871337890625
    9. ',' → logprob: -16.761871337890625
    10. ' ' → logprob: -17.011871337890625

Token 418: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.875001907348633
    3. '1' → logprob: -15.125001907348633
    4. '۲' → logprob: -15.750001907348633
    5. '₂' → logprob: -15.937501907348633
    6. '```' → logprob: -15.937501907348633
    7. '-' → logprob: -17.062501907348633
    8. '[' → logprob: -17.187501907348633
    9. '_' → logprob: -17.562501907348633
    10. '٢' → logprob: -17.625001907348633

Token 419: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49160581827163696
    2. ' -' → logprob: -0.991605818271637
    3. '           ' → logprob: -5.366605758666992
    4. ',' → logprob: -5.741605758666992
    5. '
' → logprob: -5.991605758666992
    6. '+' → logprob: -5.991605758666992
    7. '   ' → logprob: -6.741605758666992
    8. '1' → logprob: -7.491605758666992
    9. '               ' → logprob: -7.491605758666992
    10. '       ' → logprob: -8.116605758666992

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. ' ' → logprob: -10.37503719329834
    3. '2' → logprob: -13.12503719329834
    4. ' -' → logprob: -13.25003719329834
    5. '-' → logprob: -14.00003719329834
    6. '
' → logprob: -14.62503719329834
    7. '```' → logprob: -15.50003719329834
    8. '   ' → logprob: -15.75003719329834
    9. ',' → logprob: -16.500036239624023
    10. '+' → logprob: -16.875036239624023

Token 421: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018863992590922862
    2. ',' → logprob: -8.875188827514648
    3. '                
' → logprob: -11.250188827514648
    4. '<|end|>' → logprob: -12.000188827514648
    5. '           ' → logprob: -12.250188827514648
    6. ':' → logprob: -12.250188827514648
    7. '```' → logprob: -12.500188827514648
    8. ' for' → logprob: -12.750188827514648
    9. '.' → logprob: -12.875188827514648
    10. '              ' → logprob: -13.000188827514648

Token 422: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.3451433409936726e-05
    2. '           ' → logprob: -11.250033378601074
    3. ',' → logprob: -11.875033378601074
    4. 'self' → logprob: -12.375033378601074
    5. ' for' → logprob: -13.000033378601074
    6. '              ' → logprob: -13.250033378601074
    7. '```' → logprob: -13.625033378601074
    8. '       ' → logprob: -14.250033378601074
    9. '                   ' → logprob: -14.250033378601074
    10. 'for' → logprob: -14.625033378601074

Token 423: ' for' (ID: 395)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6631182432174683
    2. 'for' (adapté à ' for') → logprob: -1.2881182432174683
    3. 'self' → logprob: -1.7881182432174683
    4. '               ' → logprob: -4.288118362426758
    5. ' for' → logprob: -4.413118362426758
    6. 'gap' → logprob: -5.038118362426758
    7. ' self' → logprob: -5.663118362426758
    8. ' start' → logprob: -5.913118362426758
    9. 'com' → logprob: -6.038118362426758
    10. ' gap' → logprob: -8.163118362426758

Token 424: ' composite' (ID: 40773)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1642487049102783
    2. 'x' → logprob: -1.2892487049102783
    3. 'num' → logprob: -1.2892487049102783
    4. 'comp' → logprob: -3.4142487049102783
    5. ' comp' → logprob: -3.7892487049102783
    6. 'n' → logprob: -4.039248466491699
    7. ' num' → logprob: -4.164248466491699
    8. 'c' → logprob: -4.164248466491699
    9. ' composite' → logprob: -4.164248466491699
    10. ' x' → logprob: -4.789248466491699

Token 425: '_candidate' (ID: 158186)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07980771362781525
    2. '_num' → logprob: -3.079807758331299
    3. 'in' → logprob: -4.079807758331299
    4. '_number' → logprob: -5.079807758331299
    5. 'num' → logprob: -5.329807758331299
    6. ' ' → logprob: -6.829807758331299
    7. ' composite' → logprob: -7.829807758331299
    8. '_value' → logprob: -8.20480728149414
    9. '_' → logprob: -8.20480728149414
    10. 'com' → logprob: -8.32980728149414

Token 426: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016071440652012825
    2. 'in' → logprob: -4.141071319580078
    3. ' ' → logprob: -10.516071319580078
    4. '                ' → logprob: -12.766071319580078
    5. '                    ' → logprob: -14.016071319580078
    6. '	in' → logprob: -14.266071319580078
    7. ',' → logprob: -14.516071319580078
    8. '_in' → logprob: -14.641071319580078
    9. ' =' → logprob: -14.641071319580078
    10. '```' → logprob: -14.766071319580078

Token 427: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519315779209137
    2. ' range' → logprob: -1.5019315481185913
    3. '	range' → logprob: -14.001931190490723
    4. '   ' → logprob: -14.251931190490723
    5. ' ' → logprob: -14.376931190490723
    6. '(range' → logprob: -15.126931190490723
    7. '  ' → logprob: -17.00193214416504
    8. '    ' → logprob: -18.25193214416504
    9. 'p' → logprob: -18.50193214416504
    10. 'rang' → logprob: -18.62693214416504

Token 428: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.1318875446449965e-05
    2. '(' → logprob: -10.125041007995605
    3. ' (' → logprob: -14.500041007995605
    4. 'p' → logprob: -14.750041007995605
    5. '(
' → logprob: -15.625041007995605
    6. ' p' → logprob: -16.500041961669922
    7. '(pr' → logprob: -18.125041961669922
    8. '((' → logprob: -19.375041961669922
    9. '   ' → logprob: -19.500041961669922
    10. '               ' → logprob: -19.500041961669922

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. '+' → logprob: -11.000035285949707
    3. '2' → logprob: -12.250035285949707
    4. ' ' → logprob: -13.500035285949707
    5. 's' → logprob: -13.625035285949707
    6. '   ' → logprob: -13.875035285949707
    7. '```' → logprob: -14.062535285949707
    8. '           ' → logprob: -14.187535285949707
    9. ' +' → logprob: -14.187535285949707
    10. '       ' → logprob: -14.312535285949707

Token 430: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759473443031311
    2. ' +' → logprob: -0.8259473443031311
    3. '1' → logprob: -13.200947761535645
    4. '+
' → logprob: -13.325947761535645
    5. ' ' → logprob: -13.450947761535645
    6. ' +
' → logprob: -13.575947761535645
    7. '()+' → logprob: -14.950947761535645
    8. '   ' → logprob: -15.075947761535645
    9. ' plus' → logprob: -15.950947761535645
    10. '2' → logprob: -15.950947761535645

Token 431: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.672236824873835e-05
    2. ' ' → logprob: -9.625076293945312
    3. '2' → logprob: -11.500076293945312
    4. '<|end|>' → logprob: -14.750076293945312
    5. '```' → logprob: -16.625076293945312
    6. '   ' → logprob: -17.000076293945312
    7. ',' → logprob: -18.312576293945312
    8. '  ' → logprob: -18.937576293945312
    9. ')' → logprob: -19.062576293945312
    10. '
' → logprob: -19.187576293945312

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.125045776367188
    3. '2' → logprob: -12.125045776367188
    4. '```' → logprob: -15.625045776367188
    5. '<|end|>' → logprob: -16.125045776367188
    6. '
' → logprob: -17.000045776367188
    7. '   ' → logprob: -17.250045776367188
    8. ',' → logprob: -17.750045776367188
    9. '

' → logprob: -18.125045776367188
    10. '۱' → logprob: -18.250045776367188

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00418061763048172
    2. ',p' → logprob: -5.504180431365967
    3. ' ,' → logprob: -9.379180908203125
    4. ',
' → logprob: -11.629180908203125
    5. 'p' → logprob: -11.879180908203125
    6. ' p' → logprob: -14.629180908203125
    7. '(p' → logprob: -15.379180908203125
    8. '   ' → logprob: -15.629180908203125
    9. '       ' → logprob: -16.379180908203125
    10. ',

' → logprob: -16.379180908203125

Token 434: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002614550176076591
    2. ' p' → logprob: -8.250261306762695
    3. '           ' → logprob: -16.375261306762695
    4. '       ' → logprob: -17.500261306762695
    5. '               ' → logprob: -17.875261306762695
    6. '   ' → logprob: -17.875261306762695
    7. '                   ' → logprob: -18.250261306762695
    8. '<p' → logprob: -19.125261306762695
    9. '                       ' → logprob: -20.125261306762695
    10. '	p' → logprob: -20.875261306762695

Token 435: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -15.375001907348633
    3. '1' → logprob: -15.500001907348633
    4. '```' → logprob: -15.750001907348633
    5. '+' → logprob: -16.000001907348633
    6. 'p' → logprob: -16.125001907348633
    7. '
' → logprob: -16.250001907348633
    8. '   ' → logprob: -16.375001907348633
    9. '_' → logprob: -16.437501907348633
    10. '{' → logprob: -16.750001907348633

Token 436: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8232219815254211
    2. ' -' → logprob: -0.8232219815254211
    3. ')' → logprob: -2.1982219219207764
    4. '):' → logprob: -4.9482221603393555
    5. ' ' → logprob: -6.6982221603393555
    6. '<|end|>' → logprob: -6.6982221603393555
    7. '):
' → logprob: -7.8232221603393555
    8. ',' → logprob: -8.198222160339355
    9. '),' → logprob: -8.573222160339355
    10. '   ' → logprob: -9.198222160339355

Token 437: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16350582242012024
    2. 'self' → logprob: -2.413505792617798
    3. '           ' → logprob: -3.038505792617798
    4. ' self' → logprob: -4.788506031036377
    5. '               ' → logprob: -5.538506031036377
    6. ',' → logprob: -7.538506031036377
    7. '                       ' → logprob: -8.538505554199219
    8. ':' → logprob: -8.913505554199219
    9. ' =' → logprob: -9.913505554199219
    10. '```' → logprob: -10.163505554199219

Token 438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000519312743563205
    2. ' self' → logprob: -7.875519275665283
    3. '                   ' → logprob: -9.250519752502441
    4. '                       ' → logprob: -10.250519752502441
    5. '               ' → logprob: -12.250519752502441
    6. '   ' → logprob: -13.750519752502441
    7. ' ' → logprob: -14.500519752502441
    8. 'if' → logprob: -15.250519752502441
    9. '           ' → logprob: -15.250519752502441
    10. '                     ' → logprob: -15.625519752502441

Token 439: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0015584280481562018
    2. '.' → logprob: -7.126558303833008
    3. 'start' → logprob: -7.251558303833008
    4. ' .' → logprob: -10.501558303833008
    5. ' start' → logprob: -12.501558303833008
    6. '   ' → logprob: -12.751558303833008
    7. '.s' → logprob: -13.001558303833008
    8. '.end' → logprob: -13.626558303833008
    9. '[start' → logprob: -13.626558303833008
    10. ' ' → logprob: -13.751558303833008

Token 440: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00010008628305513412
    2. '[_' → logprob: -10.375100135803223
    3. 's' → logprob: -11.250100135803223
    4. ' _' → logprob: -11.625100135803223
    5. '_mapping' → logprob: -11.875100135803223
    6. '[' → logprob: -12.125100135803223
    7. '"_' → logprob: -12.500100135803223
    8. '._' → logprob: -12.625100135803223
    9. '_' → logprob: -12.875100135803223
    10. '_maps' → logprob: -12.875100135803223

Token 441: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012516580754891038
    2. '[p' → logprob: -7.126251697540283
    3. '.setdefault' → logprob: -8.501251220703125
    4. '[(' → logprob: -8.876251220703125
    5. ' [' → logprob: -10.376251220703125
    6. '(com' → logprob: -10.626251220703125
    7. 'com' → logprob: -11.376251220703125
    8. '[c' → logprob: -11.376251220703125
    9. '   ' → logprob: -12.501251220703125
    10. '[key' → logprob: -13.126251220703125

Token 442: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00011021859245374799
    2. ' composite' → logprob: -9.125110626220703
    3. '(com' → logprob: -14.625110626220703
    4. '[' → logprob: -15.250110626220703
    5. 'p' → logprob: -15.500110626220703
    6. 'c' → logprob: -15.750110626220703
    7. 'comp' → logprob: -16.000110626220703
    8. '	com' → logprob: -17.250110626220703
    9. '   ' → logprob: -17.875110626220703
    10. '                   ' → logprob: -18.000110626220703

Token 443: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.00270644249394536
    2. 'osite' → logprob: -6.002706527709961
    3. '_pos' → logprob: -9.252706527709961
    4. '_candidate' → logprob: -9.877706527709961
    5. 'pos' → logprob: -11.002706527709961
    6. '_' → logprob: -11.377706527709961
    7. '[' → logprob: -11.627706527709961
    8. '_site' → logprob: -12.002706527709961
    9. ']' → logprob: -12.377706527709961
    10. 'posit' → logprob: -12.627706527709961

Token 444: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.00032473751343786716
    2. 'candidate' → logprob: -9.125325202941895
    3. ']' → logprob: -9.625325202941895
    4. '_candidates' → logprob: -10.125325202941895
    5. 'Candidate' → logprob: -10.875325202941895
    6. '[' → logprob: -11.000325202941895
    7. '+' → logprob: -11.250325202941895
    8. '_' → logprob: -11.250325202941895
    9. ' _' → logprob: -11.625325202941895
    10. ' ]' → logprob: -12.375325202941895

Token 445: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01303987018764019
    2. ']=' → logprob: -4.888040065765381
    3. ' =' → logprob: -5.763040065765381
    4. '=' → logprob: -6.638040065765381
    5. ' ]' → logprob: -7.138040065765381
    6. ']=(' → logprob: -8.763039588928223
    7. '[' → logprob: -12.138039588928223
    8. ')' → logprob: -12.263039588928223
    9. '])' → logprob: -13.888039588928223
    10. ' ' → logprob: -13.888039588928223

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519386410713196
    2. '=' → logprob: -1.5019385814666748
    3. ']' → logprob: -12.376938819885254
    4. ']=' → logprob: -13.126938819885254
    5. ')' → logprob: -14.501938819885254
    6. ',' → logprob: -14.626938819885254
    7. '=[' → logprob: -14.876938819885254
    8. ' ' → logprob: -15.126938819885254
    9. '[' → logprob: -15.126938819885254
    10. '=None' → logprob: -15.251938819885254

Token 447: ' gap' (ID: 19953)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.005081364419311285
    2. ' (' → logprob: -6.0050811767578125
    3. 'gap' → logprob: -6.5050811767578125
    4. '(p' → logprob: -7.7550811767578125
    5. '(' → logprob: -8.255081176757812
    6. '{
' → logprob: -9.505081176757812
    7. '   ' → logprob: -9.630081176757812
    8. '
' → logprob: -10.505081176757812
    9. 'g' → logprob: -10.505081176757812
    10. '(
' → logprob: -10.880081176757812

Token 448: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.380904672667384e-05
    2. '_' → logprob: -10.625033378601074
    3. '_l' → logprob: -12.250033378601074
    4. '_gap' → logprob: -13.500033378601074
    5. ' _' → logprob: -13.875033378601074
    6. '_le' → logprob: -14.125033378601074
    7. 'length' → logprob: -14.125033378601074
    8. '_
' → logprob: -16.25003433227539
    9. '_lengths' → logprob: -16.25003433227539
    10. '
' → logprob: -16.37503433227539

Token 449: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13352060317993164
    2. ',
' → logprob: -2.6335206031799316
    3. '                   ' → logprob: -3.6335206031799316
    4. '
' → logprob: -4.008520603179932
    5. '           ' → logprob: -5.758520603179932
    6. '               ' → logprob: -5.758520603179932
    7. '<|end|>' → logprob: -6.758520603179932
    8. '       ' → logprob: -8.258520126342773
    9. ' ,' → logprob: -8.508520126342773
    10. '   ' → logprob: -9.008520126342773

Token 450: '                   ' (ID: 699)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10635880380868912
    2. '                   ' → logprob: -2.356358766555786
    3. ',
' → logprob: -6.106359004974365
    4. '           ' → logprob: -6.606359004974365
    5. '               ' → logprob: -7.356359004974365
    6. '
' → logprob: -7.606359004974365
    7. ',self' → logprob: -7.606359004974365
    8. '<|end|>' → logprob: -7.856359004974365
    9. ' ,' → logprob: -8.856358528137207
    10. '       ' → logprob: -9.981358528137207

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0951162651181221
    2. '(self' → logprob: -3.220116376876831
    3. '                   ' → logprob: -3.220116376876831
    4. ' self' → logprob: -4.845116138458252
    5. ' (' → logprob: -6.345116138458252
    6. '(' → logprob: -7.720116138458252
    7. '               ' → logprob: -8.22011661529541
    8. ',' → logprob: -8.59511661529541
    9. '           ' → logprob: -9.34511661529541
    10. ',self' → logprob: -10.47011661529541

Token 452: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.006125972140580416
    2. 'end' → logprob: -5.3811259269714355
    3. '.' → logprob: -6.7561259269714355
    4. ' .' → logprob: -9.256126403808594
    5. '_end' → logprob: -9.381126403808594
    6. '   ' → logprob: -10.881126403808594
    7. '._' → logprob: -11.006126403808594
    8. ',' → logprob: -11.131126403808594
    9. '.start' → logprob: -11.506126403808594
    10. ' ' → logprob: -11.506126403808594

Token 453: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -8.180258191714529e-06
    2. '_' → logprob: -12.125008583068848
    3. 'Map' → logprob: -14.250008583068848
    4. ' _' → logprob: -14.375008583068848
    5. '_mapping' → logprob: -15.375008583068848
    6. 'map' → logprob: -15.500008583068848
    7. '_m' → logprob: -15.625008583068848
    8. '   ' → logprob: -15.875008583068848
    9. '_maps' → logprob: -16.25000762939453
    10. '"_' → logprob: -16.87500762939453

Token 454: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027718624914996326
    2. '[p' → logprob: -8.500277519226074
    3. ' [' → logprob: -10.125277519226074
    4. 'com' → logprob: -11.750277519226074
    5. '[(' → logprob: -12.125277519226074
    6. '   ' → logprob: -12.750277519226074
    7. ' ' → logprob: -12.875277519226074
    8. '[c' → logprob: -13.250277519226074
    9. ' =' → logprob: -13.375277519226074
    10. '[
' → logprob: -13.750277519226074

Token 455: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.008793489076197147
    2. '[' → logprob: -4.758793354034424
    3. ' composite' → logprob: -9.008793830871582
    4. 'p' → logprob: -10.383793830871582
    5. '(com' → logprob: -11.258793830871582
    6. ')' → logprob: -13.508793830871582
    7. ' ' → logprob: -13.758793830871582
    8. 'comp' → logprob: -13.883793830871582
    9. 'c' → logprob: -14.008793830871582
    10. '   ' → logprob: -14.133793830871582

Token 456: 'posite' (ID: 25800)
  Prédit: 'posite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posite' → logprob: -0.03885148465633392
    2. 'osite' → logprob: -3.913851499557495
    3. '_candidate' → logprob: -4.038851261138916
    4. 'ite' → logprob: -9.663851737976074
    5. 'pos' → logprob: -9.663851737976074
    6. '1' → logprob: -10.163851737976074
    7. 'o' → logprob: -10.413851737976074
    8. 'p' → logprob: -10.538851737976074
    9. 'os' → logprob: -10.538851737976074
    10. '_prime' → logprob: -10.663851737976074

Token 457: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.0006180775817483664
    2. '2' → logprob: -7.750617980957031
    3. 'candidate' → logprob: -9.750617980957031
    4. '1' → logprob: -10.750617980957031
    5. '_prime' → logprob: -11.000617980957031
    6. 'andidate' → logprob: -11.125617980957031
    7. '-' → logprob: -11.250617980957031
    8. ']' → logprob: -11.750617980957031
    9. 'Candidate' → logprob: -12.125617980957031
    10. '_' → logprob: -12.125617980957031

Token 458: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16706062853336334
    2. ' =' → logprob: -2.292060613632202
    3. '=' → logprob: -3.167060613632202
    4. '[' → logprob: -5.042060852050781
    5. ']=' → logprob: -5.667060852050781
    6. ',' → logprob: -8.042060852050781
    7. ' ]' → logprob: -8.417060852050781
    8. ')' → logprob: -9.917060852050781
    9. '][' → logprob: -10.792060852050781
    10. ' ' → logprob: -10.792060852050781

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34844955801963806
    2. '=' → logprob: -1.2234495878219604
    3. ' ' → logprob: -13.34844970703125
    4. '[' → logprob: -13.47344970703125
    5. ')' → logprob: -14.47344970703125
    6. ']' → logprob: -14.84844970703125
    7. ',' → logprob: -15.34844970703125
    8. '=end' → logprob: -15.97344970703125
    9. ']=' → logprob: -16.47344970703125
    10. '>' → logprob: -16.97344970703125

Token 460: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.013586845248937607
    2. '(p' → logprob: -4.76358699798584
    3. 'p' → logprob: -6.01358699798584
    4. ' gap' → logprob: -6.38858699798584
    5. '(g' → logprob: -8.38858699798584
    6. ' (' → logprob: -8.38858699798584
    7. '(' → logprob: -9.38858699798584
    8. '(i' → logprob: -9.76358699798584
    9. 'g' → logprob: -9.88858699798584
    10. 'com' → logprob: -10.01358699798584

Token 461: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.3544423381972592e-05
    2. 'length' → logprob: -11.62501335144043
    3. '_l' → logprob: -13.12501335144043
    4. '2' → logprob: -14.12501335144043
    5. '_' → logprob: -15.00001335144043
    6. 'Length' → logprob: -15.00001335144043
    7. '_gap' → logprob: -15.12501335144043
    8. 'ength' → logprob: -15.25001335144043
    9. '_size' → logprob: -16.37501335144043
    10. 'gap' → logprob: -16.87501335144043

Token 462: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' gap' (ID: 19953)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.6886478662490845
    2. 'get' → logprob: -1.4386478662490845
    3. '__' → logprob: -2.438647747039795
    4. 'com' → logprob: -2.688647747039795
    5. 'find' → logprob: -2.938647747039795
    6. 'has' → logprob: -4.063647747039795
    7. ' contains' → logprob: -4.938647747039795
    8. 'gap' → logprob: -5.438647747039795
    9. 'length' → logprob: -5.688647747039795
    10. ' get' → logprob: -5.688647747039795

Token 466: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.2932450473308563
    2. '_lengths' → logprob: -2.2932450771331787
    3. '_at' → logprob: -2.6682450771331787
    4. '_between' → logprob: -3.6682450771331787
    5. 's' → logprob: -3.9182450771331787
    6. '_size' → logprob: -4.2932448387146
    7. '(' → logprob: -4.4182448387146
    8. 'length' → logprob: -6.1682448387146
    9. '_start' → logprob: -6.5432448387146
    10. '_' → logprob: -6.6682448387146

Token 467: '_cont' (ID: 43788)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06204330921173096
    2. '(' → logprob: -2.8120431900024414
    3. 'self' → logprob: -10.062043190002441
    4. '(
' → logprob: -10.937043190002441
    5. '   ' → logprob: -11.937043190002441
    6. ' (' → logprob: -12.312043190002441
    7. 's' → logprob: -13.937043190002441
    8. '=' → logprob: -14.437043190002441
    9. ' ' → logprob: -14.687043190002441
    10. 'def' → logprob: -14.937043190002441

Token 468: 'aining' (ID: 2649)
  Prédit: 'ains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ains' → logprob: -0.011105830781161785
    2. 'in' → logprob: -4.511106014251709
    3. 'ained' → logprob: -10.38610553741455
    4. '(self' → logprob: -11.63610553741455
    5. 'inue' → logprob: -12.63610553741455
    6. '(' → logprob: -12.63610553741455
    7. 'ins' → logprob: -13.01110553741455
    8. 'ain' → logprob: -13.26110553741455
    9. '(in' → logprob: -13.26110553741455
    10. 'ainment' → logprob: -13.51110553741455

Token 469: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07907165586948395
    2. '(' → logprob: -2.5790717601776123
    3. 'self' → logprob: -9.079071998596191
    4. ' (' → logprob: -9.954071998596191
    5. '(
' → logprob: -11.329071998596191
    6. 's' → logprob: -12.829071998596191
    7. '(com' → logprob: -13.454071998596191
    8. 'com' → logprob: -13.954071998596191
    9. ' self' → logprob: -14.204071998596191
    10. ' ' → logprob: -14.579071998596191

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2748086452484131
    2. ')' → logprob: -1.899808645248413
    3. 'token' → logprob: -3.524808645248413
    4. '<|end|>' → logprob: -3.774808645248413
    5. '(' → logprob: -4.649808883666992
    6. '(self' → logprob: -5.399808883666992
    7. ' ' → logprob: -5.524808883666992
    8. 'self' → logprob: -5.649808883666992
    9. ' ,' → logprob: -5.649808883666992
    10. '_token' → logprob: -5.899808883666992

Token 471: ' num' (ID: 2269)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2502203583717346
    2. 'x' → logprob: -2.12522029876709
    3. 'num' → logprob: -3.00022029876709
    4. 'com' → logprob: -3.87522029876709
    5. 'number' → logprob: -4.00022029876709
    6. 'self' → logprob: -4.50022029876709
    7. ' n' → logprob: -6.87522029876709
    8. ' x' → logprob: -8.37522029876709
    9. 'candidate' → logprob: -8.50022029876709
    10. ' composite' → logprob: -8.62522029876709

Token 472: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4823610484600067
    2. ')' → logprob: -1.107361078262329
    3. '):' → logprob: -2.982361078262329
    4. '   ' → logprob: -7.73236083984375
    5. 'self' → logprob: -7.73236083984375
    6. ',' → logprob: -8.73236083984375
    7. '):
' → logprob: -8.73236083984375
    8. ' )' → logprob: -9.23236083984375
    9. '(self' → logprob: -9.48236083984375
    10. '       ' → logprob: -9.85736083984375

Token 473: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3093889653682709
    2. ' int' → logprob: -1.6843889951705933
    3. 'self' → logprob: -2.9343888759613037
    4. ' self' → logprob: -3.6843888759613037
    5. ')' → logprob: -6.309389114379883
    6. ' Optional' → logprob: -8.434389114379883
    7. '   ' → logprob: -9.559389114379883
    8. ' )' → logprob: -9.684389114379883
    9. 'Optional' → logprob: -9.934389114379883
    10. ' ' → logprob: -10.809389114379883

Token 474: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.125011444091797
    4. '):' → logprob: -14.625011444091797
    5. ':' → logprob: -16.750011444091797
    6. '):
' → logprob: -17.125011444091797
    7. '`)' → logprob: -17.625011444091797
    8. '       ' → logprob: -19.125011444091797
    9. ',)' → logprob: -19.125011444091797
    10. '")' → logprob: -19.250011444091797

Token 475: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.21734537184238434
    2. ' ->' → logprob: -1.7173453569412231
    3. ')' → logprob: -4.717345237731934
    4. ':' → logprob: -5.092345237731934
    5. ')->' → logprob: -7.967345237731934
    6. '(' → logprob: -8.717345237731934
    7. '   ' → logprob: -9.467345237731934
    8. '       ' → logprob: -9.467345237731934
    9. '()->' → logprob: -10.592345237731934
    10. '()' → logprob: -11.592345237731934

Token 476: ' int' (ID: 677)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.17778441309928894
    2. ' Optional' → logprob: -2.4277844429016113
    3. 'int' → logprob: -2.6777844429016113
    4. ' int' → logprob: -5.302784442901611
    5. 'self' → logprob: -7.177784442901611
    6. ' self' → logprob: -8.802783966064453
    7. '(Optional' → logprob: -10.302783966064453
    8. ' ' → logprob: -13.302783966064453
    9. 'optional' → logprob: -14.177783966064453
    10. '_optional' → logprob: -14.802783966064453

Token 477: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011727985925972462
    2. '   ' → logprob: -5.261727809906006
    3. '       ' → logprob: -6.261727809906006
    4. ':
' → logprob: -6.261727809906006
    5. '(' → logprob: -6.636727809906006
    6. ')' → logprob: -8.136728286743164
    7. '{' → logprob: -8.511728286743164
    8. '<|end|>' → logprob: -8.636728286743164
    9. ',' → logprob: -8.761728286743164
    10. '[' → logprob: -9.136728286743164

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009653978981077671
    2. ' return' → logprob: -4.8846540451049805
    3. 'return' → logprob: -6.8846540451049805
    4. ' if' → logprob: -7.1346540451049805
    5. '   ' → logprob: -8.50965404510498
    6. 'if' → logprob: -11.63465404510498
    7. '	return' → logprob: -12.75965404510498
    8. '<|end|>' → logprob: -13.13465404510498
    9. '```' → logprob: -13.38465404510498
    10. ' for' → logprob: -13.75965404510498

Token 479: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06670430302619934
    2. ' return' → logprob: -3.316704273223877
    3. '       ' → logprob: -3.566704273223877
    4. 'if' → logprob: -12.441704750061035
    5. ' if' → logprob: -12.816704750061035
    6. '   ' → logprob: -15.316704750061035
    7. 'self' → logprob: -15.941704750061035
    8. '```' → logprob: -16.19170379638672
    9. '	return' → logprob: -16.56670379638672
    10. 'result' → logprob: -17.06670379638672

Token 480: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00030697984038852155
    2. '       ' → logprob: -8.500307083129883
    3. ' return' → logprob: -9.250307083129883
    4. 'if' → logprob: -11.875307083129883
    5. '   ' → logprob: -14.875307083129883
    6. '```' → logprob: -17.625307083129883
    7. 'self' → logprob: -18.375307083129883
    8. 'result' → logprob: -18.375307083129883
    9. ' if' → logprob: -18.375307083129883
    10. 'Return' → logprob: -19.000307083129883

Token 481: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31328263878822327
    2. ' self' → logprob: -1.3132826089859009
    3. '0' → logprob: -10.81328296661377
    4. '(self' → logprob: -14.93828296661377
    5. '1' → logprob: -15.06328296661377
    6. '       ' → logprob: -16.813282012939453
    7. '   ' → logprob: -16.938282012939453
    8. '
' → logprob: -17.063282012939453
    9. ' ' → logprob: -17.438282012939453
    10. '	self' → logprob: -17.438282012939453

Token 482: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07344988733530045
    2. '(self' → logprob: -2.9484498500823975
    3. 'self' → logprob: -4.823450088500977
    4. ' =' → logprob: -5.573450088500977
    5. ' self' → logprob: -5.823450088500977
    6. '=' → logprob: -6.573450088500977
    7. 'return' → logprob: -6.823450088500977
    8. '
' → logprob: -8.323450088500977
    9. '=self' → logprob: -8.323450088500977
    10. ' return' → logprob: -8.448450088500977

Token 483: ' prime' (ID: 9197)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07891424000263214
    2. ' self' → logprob: -2.578914165496826
    3. '(self' → logprob: -10.703914642333984
    4. ' the' → logprob: -14.328914642333984
    5. 'the' → logprob: -14.953914642333984
    6. '=self' → logprob: -15.453914642333984
    7. ' ' → logprob: -15.578914642333984
    8. '1' → logprob: -15.953914642333984
    9. 'gap' → logprob: -15.953914642333984
    10. 's' → logprob: -16.328914642333984

Token 484: ' gap' (ID: 19953)
  Prédit: '_gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.0012628522235900164
    2. ' _' → logprob: -7.501262664794922
    3. '_' → logprob: -7.751262664794922
    4. 'gap' → logprob: -9.626262664794922
    5. ' gap' → logprob: -9.751262664794922
    6. '_g' → logprob: -10.251262664794922
    7. 'Gap' → logprob: -10.626262664794922
    8. '_length' → logprob: -10.876262664794922
    9. '_s' → logprob: -11.376262664794922
    10. '       ' → logprob: -11.626262664794922

Token 485: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6845452189445496
    2. ' if' → logprob: -1.5595452785491943
    3. '       ' → logprob: -2.4345452785491943
    4. '(self' → logprob: -2.4345452785491943
    5. '=' → logprob: -2.5595452785491943
    6. 'if' → logprob: -4.434545040130615
    7. 'self' → logprob: -4.934545040130615
    8. ' self' → logprob: -5.809545040130615
    9. '=self' → logprob: -6.059545040130615
    10. '_start' → logprob: -6.309545040130615

Token 486: ' contains' (ID: 8895)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.3644276559352875
    2. 'includes' → logprob: -1.8644276857376099
    3. 'num' → logprob: -1.9894276857376099
    4. ' contains' → logprob: -4.48942756652832
    5. ' includes' → logprob: -6.48942756652832
    6. ' num' → logprob: -7.48942756652832
    7. 'covers' → logprob: -8.61442756652832
    8. 'starts' → logprob: -9.36442756652832
    9. '_contains' → logprob: -10.86442756652832
    10. ' covers' → logprob: -11.36442756652832

Token 487: ' num' (ID: 2269)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8628111481666565
    2. 'self' → logprob: -1.1128110885620117
    3. 'num' → logprob: -1.8628110885620117
    4. ' num' → logprob: -2.3628110885620117
    5. '(self' → logprob: -15.487811088562012
    6. '(num' → logprob: -15.987811088562012
    7. '_num' → logprob: -15.987811088562012
    8. '=num' → logprob: -16.362812042236328
    9. '   ' → logprob: -16.612812042236328
    10. '	self' → logprob: -16.612812042236328

Token 488: ' or' (ID: 503)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019116900861263275
    2. '       ' → logprob: -4.5191168785095215
    3. 'if' → logprob: -5.0191168785095215
    4. ' or' → logprob: -7.2691168785095215
    5. ',' → logprob: -7.6441168785095215
    6. ' =' → logprob: -9.64411735534668
    7. '   ' → logprob: -9.76911735534668
    8. 'return' → logprob: -10.76911735534668
    9. ' in' → logprob: -10.89411735534668
    10. '	if' → logprob: -11.01911735534668

Token 489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011861803941428661
    2. ' ' → logprob: -7.126186370849609
    3. '-' → logprob: -8.12618637084961
    4. '       ' → logprob: -10.00118637084961
    5. ' -' → logprob: -10.37618637084961
    6. 'return' → logprob: -12.00118637084961
    7. '1' → logprob: -13.50118637084961
    8. '   ' → logprob: -13.87618637084961
    9. ' return' → logprob: -14.62618637084961
    10. 'None' → logprob: -15.37618637084961

Token 490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008510822663083673
    2. '-' → logprob: -7.750851154327393
    3. ' ' → logprob: -7.875851154327393
    4. ' -' → logprob: -10.625850677490234
    5. 'None' → logprob: -11.625850677490234
    6. '       ' → logprob: -12.625850677490234
    7. 'return' → logprob: -13.500850677490234
    8. '   ' → logprob: -13.750850677490234
    9. '1' → logprob: -14.000850677490234
    10. ' None' → logprob: -15.250850677490234

Token 491: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20967824757099152
    2. '       ' → logprob: -1.709678292274475
    3. 'if' → logprob: -5.7096781730651855
    4. ',' → logprob: -6.3346781730651855
    5. '   ' → logprob: -6.3346781730651855
    6. ' in' → logprob: -7.9596781730651855
    7. '<|end|>' → logprob: -7.9596781730651855
    8. ' or' → logprob: -8.084678649902344
    9. '	if' → logprob: -9.209678649902344
    10. '	' → logprob: -9.709678649902344

Token 492: ' none' (ID: 12698)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06216362863779068
    2. ' num' → logprob: -2.8121635913848877
    3. 'not' → logprob: -9.187163352966309
    4. ' not' → logprob: -9.312163352966309
    5. 'False' → logprob: -14.062163352966309
    6. '0' → logprob: -14.562163352966309
    7. 'no' → logprob: -14.687163352966309
    8. ' no' → logprob: -14.812163352966309
    9. '(num' → logprob: -14.812163352966309
    10. '	num' → logprob: -15.062163352966309

Token 493: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07645846158266068
    2. '   ' → logprob: -2.70145845413208
    3. '(' → logprob: -6.45145845413208
    4. ',' → logprob: -7.32645845413208
    5. '<|end|>' → logprob: -7.32645845413208
    6. ':' → logprob: -7.57645845413208
    7. ' if' → logprob: -7.57645845413208
    8. '(self' → logprob: -7.95145845413208
    9. '
' → logprob: -8.076458930969238
    10. ' (' → logprob: -8.576458930969238

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005323022487573326
    2. '   ' → logprob: -8.750532150268555
    3. '<|end|>' → logprob: -8.875532150268555
    4. ' if' → logprob: -9.375532150268555
    5. ':' → logprob: -9.875532150268555
    6. ',' → logprob: -10.000532150268555
    7. '	' → logprob: -11.250532150268555
    8. '{' → logprob: -11.875532150268555
    9. '<|end|>' → logprob: -12.250532150268555
    10. ':
' → logprob: -12.250532150268555

Token 495: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1471557766199112
    2. '       ' → logprob: -2.14715576171875
    3. 'if' → logprob: -4.39715576171875
    4. ' return' → logprob: -5.14715576171875
    5. ' if' → logprob: -6.27215576171875
    6. 'for' → logprob: -12.77215576171875
    7. 'length' → logprob: -13.52215576171875
    8. '	return' → logprob: -13.89715576171875
    9. '```' → logprob: -14.27215576171875
    10. 'start' → logprob: -14.64715576171875

Token 496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4740913212299347
    2. ' self' → logprob: -0.9740912914276123
    3. '0' → logprob: -11.224091529846191
    4. '(self' → logprob: -14.599091529846191
    5. '       ' → logprob: -14.974091529846191
    6. '   ' → logprob: -16.724090576171875
    7. '1' → logprob: -17.224090576171875
    8. '	self' → logprob: -17.474090576171875
    9. ' ' → logprob: -17.849090576171875
    10. '
' → logprob: -18.099090576171875

Token 497: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0059532104060053825
    2. '.' → logprob: -5.130953311920166
    3. 'start' → logprob: -12.130952835083008
    4. '.s' → logprob: -12.255952835083008
    5. '.end' → logprob: -12.255952835083008
    6. ' .' → logprob: -12.380952835083008
    7. '.st' → logprob: -13.630952835083008
    8. '.star' → logprob: -14.505952835083008
    9. '.space' → logprob: -14.505952835083008
    10. '.START' → logprob: -14.880952835083008

Token 498: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.25
    3. ' _' → logprob: -16.375
    4. '_maps' → logprob: -18.0
    5. '_MAP' → logprob: -18.25
    6. '_m' → logprob: -18.625
    7. '._' → logprob: -18.75
    8. '"_' → logprob: -19.25
    9. '[_' → logprob: -19.25
    10. ''_' → logprob: -19.25

Token 499: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.003178901970386505
    2. '.' → logprob: -5.75317907333374
    3. ' .' → logprob: -14.003178596496582
    4. 'get' → logprob: -16.0031795501709
    5. '[num' → logprob: -16.6281795501709
    6. '.setdefault' → logprob: -16.6281795501709
    7. '   ' → logprob: -17.3781795501709
    8. '{}.' → logprob: -17.3781795501709
    9. '_get' → logprob: -19.7531795501709
    10. '.g' → logprob: -19.8781795501709

Token 500: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -4.7159857786027715e-05
    2. '(' → logprob: -10.000046730041504
    3. 'num' → logprob: -13.375046730041504
    4. '[num' → logprob: -16.37504768371582
    5. ' (' → logprob: -16.87504768371582
    6. ' num' → logprob: -17.12504768371582
    7. ',num' → logprob: -18.50004768371582
    8. '(
' → logprob: -18.50004768371582
    9. '(n' → logprob: -18.75004768371582
    10. '(number' → logprob: -18.87504768371582

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.780830830801278e-05
    2. ' ,' → logprob: -9.37508773803711
    3. ')' → logprob: -13.00008773803711
    4. '   ' → logprob: -15.37508773803711
    5. '       ' → logprob: -15.62508773803711
    6. '0' → logprob: -16.25008773803711
    7. ' or' → logprob: -16.87508773803711
    8. '(),' → logprob: -17.12508773803711
    9. '    ' → logprob: -17.62508773803711
    10. ' ' → logprob: -17.87508773803711

Token 502: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.000018119812012
    3. 'self' → logprob: -14.250018119812012
    4. ')' → logprob: -14.750018119812012
    5. '   ' → logprob: -16.250017166137695
    6. '       ' → logprob: -17.375017166137695
    7. ' self' → logprob: -18.750017166137695
    8. '  ' → logprob: -20.250017166137695
    9. ')
' → logprob: -20.375017166137695
    10. '۰' → logprob: -20.750017166137695

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. 'self' → logprob: -16.625
    4. ')' → logprob: -17.25
    5. '   ' → logprob: -20.875
    6. '۰' → logprob: -21.0625
    7. ' ' → logprob: -22.375
    8. '

' → logprob: -22.5
    9. '00' → logprob: -22.5
    10. '  ' → logprob: -22.5625

Token 504: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8206473871250637e-05
    2. ')
' → logprob: -11.250028610229492
    3. '<|end|>' → logprob: -11.250028610229492
    4. ' )' → logprob: -13.875028610229492
    5. '   ' → logprob: -15.125028610229492
    6. ')return' → logprob: -15.250028610229492
    7. '       ' → logprob: -15.375028610229492
    8. '<|end|>' → logprob: -16.125028610229492
    9. '}' → logprob: -16.250028610229492
    10. ')}' → logprob: -16.750028610229492

Token 505: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.11502998322248459
    2. ' Prime' → logprob: -2.36503005027771
    3. 'Gap' → logprob: -5.490029811859131
    4. 'Max' → logprob: -6.490029811859131
    5. 'Largest' → logprob: -6.490029811859131
    6. 'Extended' → logprob: -6.865029811859131
    7. 'Composite' → logprob: -6.865029811859131
    8. 'Solution' → logprob: -7.365029811859131
    9. ' Gap' → logprob: -7.490029811859131
    10. 'Longest' → logprob: -7.865029811859131

Token 507: 'Gap' (ID: 17218)
  Prédit: 'Gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gap' → logprob: -0.1991843283176422
    2. 'Iterator' → logprob: -2.8241844177246094
    3. 'G' → logprob: -3.1991844177246094
    4. 'S' → logprob: -3.5741844177246094
    5. 'Range' → logprob: -3.9491844177246094
    6. 'Generator' → logprob: -4.199184417724609
    7. 'Chain' → logprob: -6.074184417724609
    8. 'Sequence' → logprob: -6.199184417724609
    9. 'Ring' → logprob: -7.074184417724609
    10. 'Iter' → logprob: -7.324184417724609

Token 508: 'Context' (ID: 2522)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.7276649475097656
    2. ':' → logprob: -0.8526649475097656
    3. 'Range' → logprob: -3.2276649475097656
    4. 'Finder' → logprob: -4.227664947509766
    5. 's' → logprob: -4.852664947509766
    6. '   ' → logprob: -5.477664947509766
    7. 'Ranges' → logprob: -5.977664947509766
    8. '.' → logprob: -6.102664947509766
    9. ':
' → logprob: -6.102664947509766
    10. 'Enumerator' → logprob: -6.227664947509766

Token 509: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00416969507932663
    2. ':
' → logprob: -5.504169464111328
    3. '   ' → logprob: -10.004169464111328
    4. '(' → logprob: -11.129169464111328
    5. '):' → logprob: -11.254169464111328
    6. ' :' → logprob: -11.879169464111328
    7. '<|end|>' → logprob: -13.129169464111328
    8. ',' → logprob: -13.379169464111328
    9. ':def' → logprob: -13.379169464111328
    10. '):
' → logprob: -13.879169464111328

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002213061787188053
    2. ' def' → logprob: -6.377213001251221
    3. 'class' → logprob: -8.252213478088379
    4. 'def' → logprob: -8.752213478088379
    5. ' class' → logprob: -10.002213478088379
    6. '```' → logprob: -10.752213478088379
    7. '    ' → logprob: -11.502213478088379
    8. ' ' → logprob: -11.752213478088379
    9. '  ' → logprob: -13.252213478088379
    10. 'import' → logprob: -13.627213478088379

Token 511: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2555917799472809
    2. 'def' → logprob: -1.5055917501449585
    3. '   ' → logprob: -5.630591869354248
    4. 'class' → logprob: -9.75559139251709
    5. '    ' → logprob: -12.75559139251709
    6. 'from' → logprob: -13.00559139251709
    7. ' ' → logprob: -13.13059139251709
    8. ' __' → logprob: -13.75559139251709
    9. '```' → logprob: -13.75559139251709
    10. '	def' → logprob: -14.63059139251709

Token 512: 'Context' (ID: 2522)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6616957187652588
    2. 'def' → logprob: -1.4116957187652588
    3. '   ' → logprob: -1.6616957187652588
    4. ' def' → logprob: -3.036695718765259
    5. ' class' → logprob: -6.66169548034668
    6. 'from' → logprob: -7.28669548034668
    7. '```' → logprob: -8.28669548034668
    8. '
' → logprob: -10.03669548034668
    9. '"""' → logprob: -10.16169548034668
    10. ':' → logprob: -10.16169548034668

Token 513: ' to' (ID: 316)
  Prédit: ' manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manager' → logprob: -1.349995493888855
    2. ':' → logprob: -1.474995493888855
    3. ':
' → logprob: -1.724995493888855
    4. ' for' → logprob: -1.849995493888855
    5. 'manager' → logprob: -1.974995493888855
    6. 'Manager' → logprob: -3.7249956130981445
    7. '   ' → logprob: -5.2249956130981445
    8. '):
' → logprob: -6.7249956130981445
    9. '```' → logprob: -6.9749956130981445
    10. '
' → logprob: -7.2249956130981445

Token 514: ' hold' (ID: 5060)
  Prédit: ' track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.41094091534614563
    2. 'track' → logprob: -2.9109408855438232
    3. 'expl' → logprob: -3.2859408855438232
    4. ' manage' → logprob: -3.4109408855438232
    5. 'provide' → logprob: -3.4109408855438232
    6. 'generate' → logprob: -3.6609408855438232
    7. ' provide' → logprob: -3.6609408855438232
    8. 'store' → logprob: -3.9109408855438232
    9. ' store' → logprob: -3.9109408855438232
    10. 'manage' → logprob: -4.035941123962402

Token 515: ' all' (ID: 722)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.5288992524147034
    2. ' the' → logprob: -2.0288991928100586
    3. ' primes' → logprob: -2.0288991928100586
    4. 'prime' → logprob: -2.6538991928100586
    5. ' information' → logprob: -3.7788991928100586
    6. ' current' → logprob: -4.028899192810059
    7. ' and' → logprob: -4.903899192810059
    8. '   ' → logprob: -4.903899192810059
    9. 'the' → logprob: -5.903899192810059
    10. ' a' → logprob: -6.028899192810059

Token 516: ' abstra' (ID: 186216)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.9251297116279602
    2. 'prime' → logprob: -1.3001296520233154
    3. ' the' → logprob: -2.5501296520233154
    4. '_prime' → logprob: -3.1751296520233154
    5. ' known' → logprob: -3.4251296520233154
    6. ' primes' → logprob: -3.5501296520233154
    7. 'pr' → logprob: -3.8001296520233154
    8. ' relevant' → logprob: -4.0501298904418945
    9. 'the' → logprob: -4.3001298904418945
    10. ' code' → logprob: -4.3001298904418945

Token 517: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.024921279400587082
    2. 'cts' → logprob: -3.774921178817749
    3. 'ctions' → logprob: -6.399921417236328
    4. 'cte' → logprob: -12.149921417236328
    5. 'ction' → logprob: -12.399921417236328
    6. '```' → logprob: -13.649921417236328
    7. '_ct' → logprob: -15.149921417236328
    8. 'class' → logprob: -15.274921417236328
    9. '(ct' → logprob: -15.524921417236328
    10. 'ctors' → logprob: -15.524921417236328

Token 518: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.510491132736206
    2. ' for' → logprob: -1.385491132736206
    3. 'and' → logprob: -2.510491132736206
    4. '   ' → logprob: -3.510491132736206
    5. 'class' → logprob: -4.260491371154785
    6. 'for' → logprob: -5.010491371154785
    7. ' to' → logprob: -5.010491371154785
    8. ' of' → logprob: -5.385491371154785
    9. '```' → logprob: -6.260491371154785
    10. ':
' → logprob: -7.510491371154785

Token 519: ' provide' (ID: 3587)
  Prédit: ' provide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' provide' → logprob: -0.6181883811950684
    2. ' facilitate' → logprob: -1.7431883811950684
    3. 'provide' → logprob: -2.9931883811950684
    4. ' methods' → logprob: -3.4931883811950684
    5. 'fac' → logprob: -3.7431883811950684
    6. ' data' → logprob: -3.8681883811950684
    7. ' their' → logprob: -3.9931883811950684
    8. ' utilities' → logprob: -4.368188381195068
    9. 'methods' → logprob: -4.618188381195068
    10. ' helper' → logprob: -4.618188381195068

Token 520: ' a' (ID: 261)
  Prédit: 'function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'function' → logprob: -1.4457967281341553
    2. 'prime' → logprob: -1.5707967281341553
    3. 'methods' → logprob: -1.6957967281341553
    4. ' methods' → logprob: -2.0707967281341553
    5. ' prime' → logprob: -2.8207967281341553
    6. ' functionality' → logprob: -3.3207967281341553
    7. 'utility' → logprob: -3.5707967281341553
    8. 'utilities' → logprob: -4.070796966552734
    9. 'query' → logprob: -4.445796966552734
    10. ' utility' → logprob: -4.945796966552734

Token 521: ' single' (ID: 4590)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8117780685424805
    2. 'con' → logprob: -1.9367780685424805
    3. 'com' → logprob: -2.9367780685424805
    4. 'method' → logprob: -3.0617780685424805
    5. 'complete' → logprob: -3.1867780685424805
    6. ' unified' → logprob: -3.3117780685424805
    7. ' comprehensive' → logprob: -3.4367780685424805
    8. ' method' → logprob: -3.4367780685424805
    9. 'interface' → logprob: -3.6867780685424805
    10. 'range' → logprob: -4.0617780685424805

Token 522: ' interface' (ID: 6225)
  Prédit: ' interface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interface' → logprob: -0.4388326108455658
    2. 'source' → logprob: -2.3138325214385986
    3. 'interface' → logprob: -2.3138325214385986
    4. ' source' → logprob: -2.8138325214385986
    5. 'point' → logprob: -3.1888325214385986
    6. ' entry' → logprob: -4.063832759857178
    7. ' point' → logprob: -4.188832759857178
    8. '   ' → logprob: -4.563832759857178
    9. 'entry' → logprob: -4.938832759857178
    10. ' access' → logprob: -6.438832759857178

Token 523: '."""

' (ID: 68934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20146965980529785
    2. ' for' → logprob: -1.8264696598052979
    3. ' to' → logprob: -4.201469421386719
    4. '```' → logprob: -5.951469421386719
    5. 'for' → logprob: -5.951469421386719
    6. ':' → logprob: -7.451469421386719
    7. 'to' → logprob: -9.076469421386719
    8. '
' → logprob: -9.201469421386719
    9. '  ' → logprob: -9.576469421386719
    10. ':
' → logprob: -9.576469421386719

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04094918817281723
    2. 'class' → logprob: -3.5409491062164307
    3. ' def' → logprob: -4.91594934463501
    4. 'def' → logprob: -5.91594934463501
    5. ' class' → logprob: -6.91594934463501
    6. '```' → logprob: -9.540948867797852
    7. '    ' → logprob: -10.040948867797852
    8. '    
' → logprob: -13.540948867797852
    9. '
' → logprob: -13.790948867797852
    10. ' ' → logprob: -15.040948867797852

Token 525: ' MAX' (ID: 16960)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20143885910511017
    2. 'def' → logprob: -1.7014389038085938
    3. '   ' → logprob: -10.701438903808594
    4. 'class' → logprob: -12.826438903808594
    5. '    ' → logprob: -15.701438903808594
    6. ' __' → logprob: -16.826438903808594
    7. '```' → logprob: -16.951438903808594
    8. '__' → logprob: -17.076438903808594
    9. ' class' → logprob: -17.326438903808594
    10. 'import' → logprob: -17.326438903808594

Token 526: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -0.000555416801944375
    2. ' =' → logprob: -8.875555038452148
    3. '_SIZE' → logprob: -8.875555038452148
    4. '=' → logprob: -9.500555038452148
    5. '_PR' → logprob: -9.500555038452148
    6. '_limit' → logprob: -10.250555038452148
    7. '_VALUE' → logprob: -10.875555038452148
    8. 'LIMIT' → logprob: -11.000555038452148
    9. '_G' → logprob: -11.750555038452148
    10. '_' → logprob: -11.750555038452148

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759621858596802
    2. '=' → logprob: -0.8259621858596802
    3. ':' → logprob: -10.70096206665039
    4. '   ' → logprob: -15.57596206665039
    5. ' :' → logprob: -17.45096206665039
    6. '=int' → logprob: -17.82596206665039
    7. ',' → logprob: -18.45096206665039
    8. ' ' → logprob: -18.70096206665039
    9. ':int' → logprob: -18.70096206665039
    10. '=}' → logprob: -19.82596206665039

Token 528: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02979990281164646
    2. '100' → logprob: -3.5297999382019043
    3. ' ' → logprob: -10.404799461364746
    4. '1' → logprob: -10.904799461364746
    5. '500' → logprob: -15.529799461364746
    6. '   ' → logprob: -15.654799461364746
    7. '  ' → logprob: -15.904799461364746
    8. '2' → logprob: -16.779800415039062
    9. '_' → logprob: -16.904800415039062
    10. '200' → logprob: -17.279800415039062

Token 529: '129' (ID: 16891)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023266326636075974
    2. '100' → logprob: -3.773266315460205
    3. '1' → logprob: -10.898266792297363
    4. ' ' → logprob: -13.148266792297363
    5. '500' → logprob: -15.898266792297363
    6. '2' → logprob: -16.648265838623047
    7. '200' → logprob: -17.148265838623047
    8. '_' → logprob: -17.648265838623047
    9. '  ' → logprob: -17.773265838623047
    10. '   ' → logprob: -17.773265838623047

Token 530: '970' (ID: 40087)
  Prédit: '970'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '970' → logprob: -0.8132520914077759
    2. '982' → logprob: -1.1882520914077759
    3. '981' → logprob: -2.3132519721984863
    4. '1' → logprob: -2.4382519721984863
    5. '971' → logprob: -4.063251972198486
    6. '+' → logprob: -4.313251972198486
    7. '7' → logprob: -4.438251972198486
    8. '6' → logprob: -4.938251972198486
    9. '0' → logprob: -5.313251972198486
    10. '972' → logprob: -6.063251972198486

Token 531: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00010080150241265073
    2. '1' → logprob: -9.750101089477539
    3. 'def' → logprob: -11.125101089477539
    4. '0' → logprob: -11.250101089477539
    5. '
' → logprob: -11.625101089477539
    6. '

' → logprob: -12.875101089477539
    7. ' ' → logprob: -14.000101089477539
    8. '```' → logprob: -14.500101089477539
    9. '   ' → logprob: -15.000101089477539
    10. '10' → logprob: -15.125101089477539

Token 532: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04103213921189308
    2. '   ' → logprob: -3.291032075881958
    3. '    
' → logprob: -6.166032314300537
    4. '

' → logprob: -7.916032314300537
    5. '
' → logprob: -8.791031837463379
    6. ' ' → logprob: -8.916031837463379
    7. '  
' → logprob: -9.416031837463379
    8. ' 
' → logprob: -10.166031837463379
    9. '<|end|>' → logprob: -10.541031837463379
    10. '```' → logprob: -11.166031837463379

Token 533: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11256073415279388
    2. '

' → logprob: -2.862560749053955
    3. '   ' → logprob: -3.112560749053955
    4. ' ' → logprob: -6.487560749053955
    5. '    
' → logprob: -6.737560749053955
    6. '<|end|>' → logprob: -7.237560749053955
    7. 'def' → logprob: -8.112560272216797
    8. ' #' → logprob: -8.487560272216797
    9. '
    
' → logprob: -8.737560272216797
    10. '#' → logprob: -8.737560272216797

Token 534: ' given' (ID: 4335)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16053961217403412
    2. '100' → logprob: -2.5355396270751953
    3. ' #' → logprob: -3.1605396270751953
    4. '   ' → logprob: -4.160539627075195
    5. '#' → logprob: -5.535539627075195
    6. '10' → logprob: -6.410539627075195
    7. '999' → logprob: -6.535539627075195
    8. '    ' → logprob: -7.660539627075195
    9. '1' → logprob: -7.910539627075195
    10. '104' → logprob: -8.160539627075195

Token 535: ' upper' (ID: 13057)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -2.079134225845337
    2. ' as' → logprob: -2.204134225845337
    3. '<|end|>' → logprob: -2.204134225845337
    4. '#' → logprob: -2.329134225845337
    5. '
' → logprob: -2.454134225845337
    6. 'class' → logprob: -2.704134225845337
    7. ' #' → logprob: -3.079134225845337
    8. 'limit' → logprob: -3.079134225845337
    9. ' ' → logprob: -3.079134225845337
    10. ' for' → logprob: -3.204134225845337

Token 536: ' bound' (ID: 11608)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.5535785555839539
    2. '_limit' → logprob: -1.0535786151885986
    3. 'limit' → logprob: -3.3035786151885986
    4. 'bound' → logprob: -3.9285786151885986
    5. ' bound' → logprob: -4.1785783767700195
    6. ' limit' → logprob: -5.8035783767700195
    7. '_' → logprob: -6.9285783767700195
    8. ' ' → logprob: -8.17857837677002
    9. '
' → logprob: -10.17857837677002
    10. '_bounds' → logprob: -10.17857837677002

Token 537: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3173852562904358
    2. '   ' → logprob: -1.317385196685791
    3. '<|end|>' → logprob: -6.317385196685791
    4. '

' → logprob: -6.692385196685791
    5. '    
' → logprob: -8.06738567352295
    6. 'def' → logprob: -8.44238567352295
    7. ',' → logprob: -8.56738567352295
    8. '<|end|>' → logprob: -9.19238567352295
    9. ':' → logprob: -9.56738567352295
    10. ',
' → logprob: -10.19238567352295

Token 538: ' problem' (ID: 4792)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.15678174793720245
    2. 'this' → logprob: -2.7817816734313965
    3. 'code' → logprob: -3.0317816734313965
    4. 'problem' → logprob: -3.5317816734313965
    5. 'doc' → logprob: -7.0317816734313965
    6. '#' → logprob: -7.4067816734313965
    7. 'comment' → logprob: -7.7817816734313965
    8. 'PE' → logprob: -8.031782150268555
    9. 'comments' → logprob: -8.031782150268555
    10. 'previous' → logprob: -8.281782150268555

Token 539: ' statement' (ID: 9710)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47772809863090515
    2. '   ' → logprob: -0.9777281284332275
    3. '    
' → logprob: -6.227727890014648
    4. '```' → logprob: -7.602727890014648
    5. '

' → logprob: -8.102727890014648
    6. '<|end|>' → logprob: -8.352727890014648
    7. 'def' → logprob: -8.977727890014648
    8. ',' → logprob: -9.102727890014648
    9. ':' → logprob: -9.227727890014648
    10. 'class' → logprob: -10.102727890014648

Token 540: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05570682883262634
    2. '   ' → logprob: -2.930706739425659
    3. '    
' → logprob: -7.805706977844238
    4. '

' → logprob: -8.805706977844238
    5. '<|end|>' → logprob: -9.180706977844238
    6. '
' → logprob: -9.305706977844238
    7. '```' → logprob: -10.680706977844238
    8. ')' → logprob: -11.055706977844238
    9. 'def' → logprob: -11.680706977844238
    10. '<|end|>' → logprob: -11.680706977844238

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0732656717300415
    2. '
' → logprob: -2.698265552520752
    3. 'def' → logprob: -6.073265552520752
    4. '    
' → logprob: -7.073265552520752
    5. '```' → logprob: -9.07326602935791
    6. ' def' → logprob: -10.57326602935791
    7. ':' → logprob: -11.82326602935791
    8. '<|end|>' → logprob: -12.07326602935791
    9. '

' → logprob: -12.19826602935791
    10. ' 
' → logprob: -13.44826602935791

Token 542: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12763817608356476
    2. ' def' → logprob: -2.127638101577759
    3. '   ' → logprob: -7.252638339996338
    4. '```' → logprob: -14.50263786315918
    5. 'class' → logprob: -15.25263786315918
    6. '
' → logprob: -15.62763786315918
    7. '_def' → logprob: -15.62763786315918
    8. ' ' → logprob: -15.75263786315918
    9. 'de' → logprob: -17.12763786315918
    10. '	def' → logprob: -17.12763786315918

Token 543: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.25263863801956177
    2. '__' → logprob: -1.502638578414917
    3. 'def' → logprob: -7.502638816833496
    4. ' def' → logprob: -9.502638816833496
    5. '___' → logprob: -9.502638816833496
    6. '_init' → logprob: -12.752638816833496
    7. '```' → logprob: -13.377638816833496
    8. '____' → logprob: -13.877638816833496
    9. '.__' → logprob: -14.002638816833496
    10. 'init' → logprob: -14.002638816833496

Token 544: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.875
    3. '```' → logprob: -19.125
    4. '_init' → logprob: -19.75
    5. 'def' → logprob: -20.0
    6. 'int' → logprob: -21.25
    7. '	init' → logprob: -21.75
    8. 'ini' → logprob: -22.0
    9. '.init' → logprob: -22.25
    10. '   ' → logprob: -22.25

Token 545: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00019412329129409045
    2. '__' → logprob: -9.000194549560547
    3. '(self' → logprob: -9.625194549560547
    4. '__(
' → logprob: -12.500194549560547
    5. '_(' → logprob: -14.500194549560547
    6. 'self' → logprob: -16.000194549560547
    7. '(' → logprob: -16.125194549560547
    8. ' (' → logprob: -16.375194549560547
    9. '__((' → logprob: -17.375194549560547
    10. '```' → logprob: -17.750194549560547

Token 546: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.542423165636137e-05
    2. ' self' → logprob: -9.750085830688477
    3. '
' → logprob: -10.875085830688477
    4. ')' → logprob: -12.000085830688477
    5. ',' → logprob: -14.375085830688477
    6. '   ' → logprob: -14.750085830688477
    7. '):
' → logprob: -15.000085830688477
    8. ')
' → logprob: -15.375085830688477
    9. ' ' → logprob: -15.625085830688477
    10. '(self' → logprob: -16.625085830688477

Token 547: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002918446552939713
    2. 'self' → logprob: -8.62529182434082
    3. ' ,' → logprob: -9.12529182434082
    4. ',self' → logprob: -12.87529182434082
    5. '   ' → logprob: -15.25029182434082
    6. ',
' → logprob: -15.37529182434082
    7. '(self' → logprob: -15.87529182434082
    8. '__,' → logprob: -16.50029182434082
    9. '_,' → logprob: -16.75029182434082
    10. ',int' → logprob: -16.87529182434082

Token 548: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009521841071546078
    2. '       ' → logprob: -4.884521961212158
    3. ' self' → logprob: -6.259521961212158
    4. '0' → logprob: -14.384521484375
    5. '(self' → logprob: -14.384521484375
    6. '   ' → logprob: -15.759521484375
    7. 'Prime' → logprob: -15.759521484375
    8. '
' → logprob: -15.884521484375
    9. '```' → logprob: -17.009521484375
    10. 'None' → logprob: -17.759521484375

Token 549: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012109491508454084
    2. '       ' → logprob: -6.751211166381836
    3. ' self' → logprob: -10.251211166381836
    4. '
' → logprob: -12.251211166381836
    5. 's' → logprob: -15.126211166381836
    6. '   ' → logprob: -15.376211166381836
    7. '        
' → logprob: -16.876211166381836
    8. '```' → logprob: -18.501211166381836
    9. '	self' → logprob: -19.001211166381836
    10. ' ' → logprob: -19.001211166381836

Token 550: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.36031922698020935
    2. '._' → logprob: -1.3603192567825317
    3. '.pr' → logprob: -3.110319137573242
    4. '.limit' → logprob: -7.485319137573242
    5. ' .' → logprob: -7.610319137573242
    6. '_s' → logprob: -9.360319137573242
    7. '.p' → logprob: -9.860319137573242
    8. '.' → logprob: -10.360319137573242
    9. 's' → logprob: -10.485319137573242
    10. '   ' → logprob: -10.485319137573242

Token 551: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.017622781917452812
    2. 'elf' → logprob: -4.267622947692871
    3. '_' → logprob: -5.767622947692871
    4. '   ' → logprob: -9.017622947692871
    5. '__' → logprob: -9.767622947692871
    6. 't' → logprob: -10.767622947692871
    7. 'e' → logprob: -11.017622947692871
    8. 'elve' → logprob: -11.017622947692871
    9. ' =' → logprob: -11.392622947692871
    10. '       ' → logprob: -12.142622947692871

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061983488500118256
    2. '=' → logprob: -2.811983585357666
    3. ':' → logprob: -11.061983108520508
    4. '   ' → logprob: -16.811983108520508
    5. '  ' → logprob: -17.436983108520508
    6. ' ' → logprob: -17.936983108520508
    7. 's' → logprob: -18.061983108520508
    8. '_' → logprob: -18.436983108520508
    9. 'd' → logprob: -18.561983108520508
    10. ' :' → logprob: -18.811983108520508

Token 553: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.0007099286303855479
    2. ' Prime' → logprob: -7.2507100105285645
    3. 'Prim' → logprob: -19.875709533691406
    4. '_prime' → logprob: -19.875709533691406
    5. '   ' → logprob: -21.250709533691406
    6. ' prime' → logprob: -21.500709533691406
    7. 'prime' → logprob: -21.750709533691406
    8. 'Primer' → logprob: -22.000709533691406
    9. 'Primary' → logprob: -22.500709533691406
    10. 'Pr' → logprob: -22.625709533691406

Token 554: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.512236498361744e-07
    2. ' S' → logprob: -15.000000953674316
    3. ' sieve' → logprob: -16.75
    4. 's' → logprob: -17.25
    5. '   ' → logprob: -17.5
    6. 'Prime' → logprob: -17.625
    7. 'Sie' → logprob: -18.5
    8. '	S' → logprob: -18.625
    9. '
' → logprob: -18.75
    10. '```' → logprob: -18.875

Token 555: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0005309910629875958
    2. 'ive' → logprob: -7.750531196594238
    3. 'S' → logprob: -10.000531196594238
    4. 'eve' → logprob: -10.750531196594238
    5. 't' → logprob: -11.500531196594238
    6. 'erve' → logprob: -11.875531196594238
    7. 'olve' → logprob: -12.750531196594238
    8. 'iev' → logprob: -13.000531196594238
    9. '   ' → logprob: -13.375531196594238
    10. 'ize' → logprob: -13.500531196594238

Token 556: '(' (ID: 7)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007244677981361747
    2. '(' → logprob: -7.2507243156433105
    3. '(
' → logprob: -11.500724792480469
    4. 'self' → logprob: -12.375724792480469
    5. '(P' → logprob: -17.25072479248047
    6. ' (' → logprob: -17.37572479248047
    7. '(Self' → logprob: -17.37572479248047
    8. '[self' → logprob: -17.62572479248047
    9. '(PR' → logprob: -17.62572479248047
    10. '(max' → logprob: -17.87572479248047

Token 557: 'Prime' (ID: 43017)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026574634830467403
    2. ' self' → logprob: -8.250266075134277
    3. 'Prime' → logprob: -12.375266075134277
    4. '(self' → logprob: -16.25026512145996
    5. '
' → logprob: -17.50026512145996
    6. 'Self' → logprob: -18.50026512145996
    7. ' Prime' → logprob: -18.87526512145996
    8. ')' → logprob: -19.87526512145996
    9. '	self' → logprob: -20.00026512145996
    10. '   ' → logprob: -20.12526512145996

Token 558: 'Gap' (ID: 17218)
  Prédit: 'Gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gap' → logprob: -0.031197629868984222
    2. 'S' → logprob: -3.5311975479125977
    3. 'Limit' → logprob: -7.906197547912598
    4. 'MAX' → logprob: -8.406197547912598
    5. 's' → logprob: -8.656197547912598
    6. '   ' → logprob: -9.406197547912598
    7. '_gap' → logprob: -9.656197547912598
    8. ' Gap' → logprob: -9.781197547912598
    9. '999' → logprob: -10.031197547912598
    10. '100' → logprob: -10.031197547912598

Token 559: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: -7.874882430769503e-05
    2. '.MAX' → logprob: -9.500079154968262
    3. 'self' → logprob: -12.875079154968262
    4. 'context' → logprob: -14.250079154968262
    5. 'Con' → logprob: -15.375079154968262
    6. 'MAX' → logprob: -15.875079154968262
    7. '.' → logprob: -16.625078201293945
    8. 'Cont' → logprob: -17.000078201293945
    9. '(MAX' → logprob: -17.375078201293945
    10. 'CON' → logprob: -17.500078201293945

Token 560: '.MAX' (ID: 25075)
  Prédit: '.MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MAX' → logprob: -8.65707261255011e-06
    2. 'MAX' → logprob: -12.000008583068848
    3. '(MAX' → logprob: -13.250008583068848
    4. '.' → logprob: -14.625008583068848
    5. '_MAX' → logprob: -16.625009536743164
    6. '.MIN' → logprob: -17.125009536743164
    7. ' .' → logprob: -17.375009536743164
    8. '.Max' → logprob: -18.750009536743164
    9. ' MAX' → logprob: -19.500009536743164
    10. '   ' → logprob: -19.750009536743164

Token 561: '_LIMIT' (ID: 64862)
  Prédit: '_LIMIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LIMIT' → logprob: -2.816093228830141e-06
    2. 'LIMIT' → logprob: -12.87500286102295
    3. 'Limit' → logprob: -15.87500286102295
    4. '   ' → logprob: -16.875001907348633
    5. '_limit' → logprob: -17.750001907348633
    6. '
' → logprob: -17.875001907348633
    7. '       ' → logprob: -19.875001907348633
    8. ' limit' → logprob: -19.875001907348633
    9. '(limit' → logprob: -20.125001907348633
    10. 'limit' → logprob: -20.125001907348633

Token 562: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.375003814697266
    4. '       ' → logprob: -15.000003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '<|end|>' → logprob: -17.500003814697266
    7. '),' → logprob: -18.125003814697266
    8. '))' → logprob: -18.125003814697266
    9. ')

' → logprob: -18.250003814697266
    10. ')}' → logprob: -18.875003814697266

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28362202644348145
    2. 'self' → logprob: -1.4086220264434814
    3. ' self' → logprob: -6.783621788024902
    4. '   ' → logprob: -7.283621788024902
    5. '<|end|>' → logprob: -7.908621788024902
    6. '
' → logprob: -8.533621788024902
    7. '```' → logprob: -10.283621788024902
    8. '	self' → logprob: -10.783621788024902
    9. '        
' → logprob: -11.908621788024902
    10. '(self' → logprob: -12.783621788024902

Token 564: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008270460180938244
    2. 'pr' → logprob: -5.008270263671875
    3. '       ' → logprob: -6.508270263671875
    4. ' self' → logprob: -9.883270263671875
    5. 'prime' → logprob: -12.883270263671875
    6. ' primes' → logprob: -12.883270263671875
    7. 'gap' → logprob: -12.883270263671875
    8. '   ' → logprob: -14.133270263671875
    9. '        
' → logprob: -14.258270263671875
    10. 'prim' → logprob: -14.383270263671875

Token 565: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.09833147376775742
    2. '.g' → logprob: -2.4733314514160156
    3. '._' → logprob: -4.973331451416016
    4. '.s' → logprob: -6.598331451416016
    5. ' .' → logprob: -8.223331451416016
    6. 'g' → logprob: -8.848331451416016
    7. '_pr' → logprob: -8.973331451416016
    8. 'pr' → logprob: -9.098331451416016
    9. '.p' → logprob: -9.098331451416016
    10. '.' → logprob: -9.723331451416016

Token 566: 'ime' (ID: 642)
  Prédit: 'imes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.008790888823568821
    2. 'ime' → logprob: -4.758790969848633
    3. 'im' → logprob: -10.133790969848633
    4. 'mes' → logprob: -10.383790969848633
    5. 'omes' → logprob: -11.196290969848633
    6. 'ims' → logprob: -11.946290969848633
    7. '#' → logprob: -12.258790969848633
    8. '
' → logprob: -12.446290969848633
    9. 'imest' → logprob: -12.446290969848633
    10. 'imates' → logprob: -12.633790969848633

Token 567: '_gap' (ID: 131234)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006435725372284651
    2. 'Gap' → logprob: -8.375643730163574
    3. 'g' → logprob: -9.125643730163574
    4. 'list' → logprob: -9.375643730163574
    5. '_gap' → logprob: -9.375643730163574
    6. 'gap' → logprob: -9.625643730163574
    7. 'G' → logprob: -10.625643730163574
    8. 'List' → logprob: -10.625643730163574
    9. '_list' → logprob: -11.750643730163574
    10. 'sg' → logprob: -12.625643730163574

Token 568: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0407734140753746
    2. ' =' → logprob: -3.290773391723633
    3. '=' → logprob: -5.915773391723633
    4. '_context' → logprob: -11.790773391723633
    5. ':' → logprob: -11.915773391723633
    6. '_s' → logprob: -12.415773391723633
    7. '=s' → logprob: -12.665773391723633
    8. 'context' → logprob: -12.665773391723633
    9. ' s' → logprob: -12.915773391723633
    10. '_map' → logprob: -13.665773391723633

Token 569: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.1002068892121315
    2. ' Prime' → logprob: -2.3502068519592285
    3. 'None' → logprob: -15.725207328796387
    4. '_prime' → logprob: -17.47520637512207
    5. '   ' → logprob: -18.10020637512207
    6. ' None' → logprob: -18.72520637512207
    7. ' prime' → logprob: -18.97520637512207
    8. '       ' → logprob: -19.10020637512207
    9. 'Prim' → logprob: -19.22520637512207
    10. 'prime' → logprob: -19.35020637512207

Token 570: 'Gap' (ID: 17218)
  Prédit: 'Gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gap' → logprob: -1.7954958821064793e-05
    2. 'gap' → logprob: -11.250018119812012
    3. '_gap' → logprob: -13.250018119812012
    4. ' Gap' → logprob: -13.625018119812012
    5. 'S' → logprob: -14.000018119812012
    6. 's' → logprob: -14.125018119812012
    7. 'G' → logprob: -15.875018119812012
    8. ' gap' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.000017166137695
    10. '-gap' → logprob: -17.125017166137695

Token 571: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.625018119812012
    3. '(s' → logprob: -11.750018119812012
    4. 'self' → logprob: -14.125018119812012
    5. '(
' → logprob: -16.375017166137695
    6. '((' → logprob: -16.750017166137695
    7. ' (' → logprob: -16.875017166137695
    8. '[self' → logprob: -17.250017166137695
    9. '       ' → logprob: -17.500017166137695
    10. 's' → logprob: -18.125017166137695

Token 572: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.007688731886446476
    2. 's' → logprob: -4.882688522338867
    3. '.' → logprob: -10.132688522338867
    4. 'self' → logprob: -10.257688522338867
    5. ' .' → logprob: -12.757688522338867
    6. '._' → logprob: -14.132688522338867
    7. '   ' → logprob: -14.257688522338867
    8. ').' → logprob: -14.257688522338867
    9. '.pr' → logprob: -14.757688522338867
    10. '       ' → logprob: -14.882688522338867

Token 573: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0015764019917696714
    2. '.s' → logprob: -7.1265764236450195
    3. 'elf' → logprob: -8.37657642364502
    4. '.' → logprob: -8.87657642364502
    5. 'f' → logprob: -9.37657642364502
    6. 'e' → logprob: -9.75157642364502
    7. 'ive' → logprob: -9.87657642364502
    8. 's' → logprob: -10.00157642364502
    9. 'eve' → logprob: -10.75157642364502
    10. '._' → logprob: -10.87657642364502

Token 574: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -3.173704271830502e-06
    2. '._' → logprob: -12.75000286102295
    3. ' .' → logprob: -15.62500286102295
    4. '.' → logprob: -16.500003814697266
    5. '.pe' → logprob: -18.000003814697266
    6. 'pr' → logprob: -18.375003814697266
    7. '(pr' → logprob: -19.125003814697266
    8. '.p' → logprob: -19.375003814697266
    9. '.Pr' → logprob: -19.750003814697266
    10. '	pr' → logprob: -19.875003814697266

Token 575: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -2.093505099765025e-05
    2. 'omes' → logprob: -12.375020980834961
    3. 'ime' → logprob: -12.625020980834961
    4. 'mes' → logprob: -13.125020980834961
    5. '[' → logprob: -13.250020980834961
    6. '_' → logprob: -13.625020980834961
    7. '```' → logprob: -13.625020980834961
    8. '
' → logprob: -14.250020980834961
    9. '   ' → logprob: -14.750020980834961
    10. '
' → logprob: -15.125020980834961

Token 576: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005441382061690092
    2. ')' → logprob: -5.255441188812256
    3. '()' → logprob: -8.880441665649414
    4. '())
' → logprob: -9.755441665649414
    5. ' ())' → logprob: -12.505441665649414
    6. '()))' → logprob: -12.755441665649414
    7. '())

' → logprob: -14.005441665649414
    8. '())
' → logprob: -14.255441665649414
    9. '[])' → logprob: -14.880441665649414
    10. '))' → logprob: -14.880441665649414

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24267825484275818
    2. '
' → logprob: -1.6176782846450806
    3. '<|end|>' → logprob: -4.617678165435791
    4. 'def' → logprob: -5.617678165435791
    5. '    
' → logprob: -5.867678165435791
    6. '```' → logprob: -8.11767864227295
    7. ' def' → logprob: -8.49267864227295
    8. '        
' → logprob: -9.99267864227295
    9. '

' → logprob: -10.24267864227295
    10. '<|end|>' → logprob: -10.36767864227295

Token 578: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012961853062734008
    2. '   ' → logprob: -6.876296043395996
    3. ' def' → logprob: -8.251296043395996
    4. '<|end|>' → logprob: -13.501296043395996
    5. '	def' → logprob: -15.001296043395996
    6. '```' → logprob: -15.126296043395996
    7. ' ' → logprob: -15.751296043395996
    8. '
' → logprob: -16.126296997070312
    9. '  ' → logprob: -17.251296997070312
    10. ')' → logprob: -17.251296997070312

Token 579: ' query' (ID: 5703)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.526439905166626
    2. ' gap' → logprob: -2.026439905166626
    3. 'is' → logprob: -2.276439905166626
    4. 'get' → logprob: -2.901439905166626
    5. 'prime' → logprob: -3.151439905166626
    6. ' is' → logprob: -3.776439905166626
    7. ' find' → logprob: -4.401439666748047
    8. 'find' → logprob: -4.401439666748047
    9. ' get' → logprob: -4.901439666748047
    10. 'nth' → logprob: -5.526439666748047

Token 580: '_gap' (ID: 131234)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00333349104039371
    2. '(' → logprob: -6.128333568572998
    3. '_gap' → logprob: -6.878333568572998
    4. '_length' → logprob: -10.00333309173584
    5. 'self' → logprob: -10.87833309173584
    6. '_' → logprob: -11.00333309173584
    7. '_start' → logprob: -11.25333309173584
    8. '_(' → logprob: -12.00333309173584
    9. ' (' → logprob: -12.75333309173584
    10. '_prime' → logprob: -12.87833309173584

Token 581: '_length' (ID: 11514)
  Prédit: '_cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cont' → logprob: -0.2274358570575714
    2. '(self' → logprob: -2.227435827255249
    3. '_length' → logprob: -2.352435827255249
    4. '(' → logprob: -7.977436065673828
    5. '_contains' → logprob: -9.727436065673828
    6. '(cont' → logprob: -10.102436065673828
    7. '(length' → logprob: -11.477436065673828
    8. 'Containing' → logprob: -12.602436065673828
    9. 'self' → logprob: -12.852436065673828
    10. '_len' → logprob: -13.102436065673828

Token 582: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.600714161526412e-05
    2. '(' → logprob: -9.500076293945312
    3. ' (' → logprob: -14.250076293945312
    4. '_cont' → logprob: -15.500076293945312
    5. 'self' → logprob: -16.375076293945312
    6. '(s' → logprob: -17.500076293945312
    7. '   ' → logprob: -17.625076293945312
    8. '(
' → logprob: -18.250076293945312
    9. '(cont' → logprob: -18.375076293945312
    10. '(sel' → logprob: -18.375076293945312

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005099030095152557
    2. 'self' → logprob: -7.625509738922119
    3. 'num' → logprob: -11.500510215759277
    4. ',num' → logprob: -12.125510215759277
    5. ' ,' → logprob: -13.250510215759277
    6. '(self' → logprob: -13.375510215759277
    7. '   ' → logprob: -13.750510215759277
    8. ')' → logprob: -13.875510215759277
    9. ' ' → logprob: -15.000510215759277
    10. '       ' → logprob: -15.625510215759277

Token 584: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04368923604488373
    2. ' num' → logprob: -3.668689250946045
    3. 'number' → logprob: -4.668689250946045
    4. 'n' → logprob: -5.543689250946045
    5. 'self' → logprob: -6.418689250946045
    6. ' number' → logprob: -6.668689250946045
    7. 'x' → logprob: -7.668689250946045
    8. ' n' → logprob: -8.043688774108887
    9. ' self' → logprob: -9.168688774108887
    10. ' x' → logprob: -10.043688774108887

Token 585: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.138441237155348e-05
    2. ')' → logprob: -9.375091552734375
    3. '):' → logprob: -12.750091552734375
    4. ':int' → logprob: -13.000091552734375
    5. '   ' → logprob: -13.750091552734375
    6. '):
' → logprob: -16.250091552734375
    7. ' :' → logprob: -16.250091552734375
    8. ' )' → logprob: -16.625091552734375
    9. 'int' → logprob: -18.375091552734375
    10. '_:' → logprob: -18.625091552734375

Token 586: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001929228543303907
    2. ' int' → logprob: -6.25192928314209
    3. ')' → logprob: -14.50192928314209
    4. 'Optional' → logprob: -15.75192928314209
    5. '   ' → logprob: -16.876928329467773
    6. ' Optional' → logprob: -18.876928329467773
    7. '[int' → logprob: -19.001928329467773
    8. '	int' → logprob: -19.376928329467773
    9. '(int' → logprob: -19.626928329467773
    10. ' ' → logprob: -19.626928329467773

Token 587: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.000000953674316
    4. ':' → logprob: -17.125
    5. '):' → logprob: -18.0
    6. '):
' → logprob: -20.0
    7. '`)' → logprob: -20.0
    8. '       ' → logprob: -20.25
    9. ',)' → logprob: -20.375
    10. '")' → logprob: -20.75

Token 588: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0359253883361816
    2. ' ->' → logprob: -1.0359253883361816
    3. '->' → logprob: -1.2859253883361816
    4. ')' → logprob: -4.410925388336182
    5. '   ' → logprob: -7.035925388336182
    6. ')->' → logprob: -7.910925388336182
    7. ':
' → logprob: -8.035924911499023
    8. '       ' → logprob: -9.910924911499023
    9. '()->' → logprob: -10.410924911499023
    10. '()' → logprob: -11.785924911499023

Token 589: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004078878089785576
    2. ' int' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.87907886505127
    4. 'self' → logprob: -16.129079818725586
    5. '[int' → logprob: -16.129079818725586
    6. '(int' → logprob: -16.379079818725586
    7. 'return' → logprob: -17.379079818725586
    8. ' ' → logprob: -17.504079818725586
    9. '	int' → logprob: -17.754079818725586
    10. ':int' → logprob: -18.504079818725586

Token 590: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012893837876617908
    2. ':
' → logprob: -4.3878936767578125
    3. '       ' → logprob: -8.012893676757812
    4. '   ' → logprob: -11.012893676757812
    5. '):' → logprob: -11.012893676757812
    6. '):
' → logprob: -11.637893676757812
    7. ':return' → logprob: -12.137893676757812
    8. ':
' → logprob: -13.512893676757812
    9. '():
' → logprob: -13.887893676757812
    10. '():' → logprob: -13.887893676757812

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009075298439711332
    2. ' return' → logprob: -7.3759074211120605
    3. 'return' → logprob: -8.250907897949219
    4. '   ' → logprob: -10.875907897949219
    5. '	return' → logprob: -14.375907897949219
    6. '```' → logprob: -16.00090789794922
    7. '
' → logprob: -17.12590789794922
    8. '	' → logprob: -17.25090789794922
    9. '{return' → logprob: -17.25090789794922
    10. '           ' → logprob: -17.50090789794922

Token 592: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00045200303429737687
    2. '       ' → logprob: -7.750452041625977
    3. ' return' → logprob: -11.250452041625977
    4. 'if' (adapté à ' if') → logprob: -11.750452041625977
    5. 'gap' → logprob: -15.375452041625977
    6. '```' → logprob: -16.375452041625977
    7. '   ' → logprob: -17.000452041625977
    8. '
' → logprob: -17.500452041625977
    9. 'result' → logprob: -17.875452041625977
    10. '	return' → logprob: -18.875452041625977

Token 593: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011906231753528118
    2. 'self' → logprob: -4.511906147003174
    3. ' num' → logprob: -7.761906147003174
    4. '1' → logprob: -8.761906623840332
    5. '2' → logprob: -8.761906623840332
    6. '0' → logprob: -9.636906623840332
    7. 'not' → logprob: -10.261906623840332
    8. ' self' → logprob: -11.761906623840332
    9. ' ' → logprob: -12.261906623840332
    10. '(num' → logprob: -13.386906623840332

Token 594: ' <=' (ID: 5017)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5850862860679626
    2. ' <' → logprob: -0.9600862860679626
    3. ' <=' → logprob: -3.5850863456726074
    4. '<' → logprob: -3.8350863456726074
    5. '<=' → logprob: -4.960086345672607
    6. '==' → logprob: -6.835086345672607
    7. 'in' → logprob: -6.960086345672607
    8. ' ==' → logprob: -7.210086345672607
    9. ' >' → logprob: -8.21008586883545
    10. '>' → logprob: -8.33508586883545

Token 595: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20318210124969482
    2. '0' → logprob: -1.9531821012496948
    3. 'Prime' → logprob: -3.2031822204589844
    4. ' self' → logprob: -6.703182220458984
    5. ' Prime' → logprob: -9.078182220458984
    6. ' ' → logprob: -9.578182220458984
    7. '   ' → logprob: -13.453182220458984
    8. 'Self' → logprob: -13.703182220458984
    9. '1' → logprob: -14.453182220458984
    10. 'prime' → logprob: -14.578182220458984

Token 596: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06273680180311203
    2. 'Prime' → logprob: -3.187736749649048
    3. '0' → logprob: -3.937736749649048
    4. ' self' → logprob: -10.187736511230469
    5. 'Self' → logprob: -12.062736511230469
    6. ' Prime' → logprob: -12.312736511230469
    7. '1' → logprob: -14.187736511230469
    8. 'prime' → logprob: -14.187736511230469
    9. '(self' → logprob: -14.437736511230469
    10. ' ' → logprob: -14.687736511230469

Token 597: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30199652910232544
    2. ' or' → logprob: -1.8019964694976807
    3. ':' → logprob: -2.5519964694976807
    4. ' and' → logprob: -4.67699670791626
    5. '       ' → logprob: -5.80199670791626
    6. '           ' → logprob: -5.92699670791626
    7. 'and' → logprob: -6.67699670791626
    8. 'or' → logprob: -7.55199670791626
    9. ':return' → logprob: -7.55199670791626
    10. '   ' → logprob: -7.92699670791626

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32755136489868164
    2. '       ' → logprob: -1.9525513648986816
    3. 'return' → logprob: -2.2025513648986816
    4. ' return' → logprob: -4.202551364898682
    5. '
' → logprob: -5.452551364898682
    6. '0' → logprob: -5.702551364898682
    7. ' and' → logprob: -6.452551364898682
    8. ' or' → logprob: -6.827551364898682
    9. ':
' → logprob: -7.452551364898682
    10. ':' → logprob: -7.577551364898682

Token 599: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002422748599201441
    2. ' return' → logprob: -6.25242280960083
    3. '           ' → logprob: -7.87742280960083
    4. '0' → logprob: -9.127422332763672
    5. '
' → logprob: -12.127422332763672
    6. ':return' → logprob: -15.627422332763672
    7. 'eturn' → logprob: -16.002422332763672
    8. '{return' → logprob: -16.127422332763672
    9. ' ' → logprob: -16.377422332763672
    10. '	return' → logprob: -16.502422332763672

Token 600: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004897649050690234
    2. ' ' → logprob: -7.625489711761475
    3. '1' → logprob: -13.375490188598633
    4. '-' → logprob: -16.000490188598633
    5. ' -' → logprob: -17.375490188598633
    6. '2' → logprob: -17.750490188598633
    7. 'self' → logprob: -17.875490188598633
    8. '  ' → logprob: -18.562990188598633
    9. '   ' → logprob: -18.687990188598633
    10. ' ' → logprob: -19.687990188598633

Token 601: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. '1' → logprob: -13.62500286102295
    3. ' ' → logprob: -13.62500286102295
    4. '-' → logprob: -14.37500286102295
    5. 'self' → logprob: -17.000003814697266
    6. '2' → logprob: -17.312503814697266
    7. '۰' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.812503814697266
    9. 'prime' → logprob: -19.000003814697266
    10. '```' → logprob: -19.187503814697266

Token 602: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04385090991854668
    2. '
' → logprob: -3.168850898742676
    3. '        
' → logprob: -8.168850898742676
    4. ' if' → logprob: -8.543850898742676
    5. '\n' → logprob: -9.293850898742676
    6. '<|end|>' → logprob: -9.418850898742676
    7. ' 
' → logprob: -10.043850898742676
    8. '    
' → logprob: -10.543850898742676
    9. '\
' → logprob: -10.918850898742676
    10. 'if' → logprob: -11.418850898742676

Token 603: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000541592831723392
    2. '
' → logprob: -8.125541687011719
    3. ' if' → logprob: -9.000541687011719
    4. '   ' → logprob: -10.125541687011719
    5. 'if' → logprob: -10.375541687011719
    6. '        
' → logprob: -10.875541687011719
    7. 'return' → logprob: -12.250541687011719
    8. 'elif' → logprob: -12.625541687011719
    9. '    
' → logprob: -12.875541687011719
    10. '      ' → logprob: -13.000541687011719

Token 604: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3278428018093109
    2. 'return' → logprob: -1.3278428316116333
    3. '       ' → logprob: -4.327842712402344
    4. ' if' → logprob: -7.452842712402344
    5. '   ' → logprob: -8.452842712402344
    6. 'gap' → logprob: -8.452842712402344
    7. ' return' → logprob: -8.952842712402344
    8. '```' → logprob: -9.827842712402344
    9. 'length' → logprob: -10.702842712402344
    10. 'prime' → logprob: -11.452842712402344

Token 605: ' self' (ID: 1051)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.02917870320379734
    2. 'self' → logprob: -3.6541786193847656
    3. ' num' → logprob: -6.029178619384766
    4. 'not' → logprob: -8.404178619384766
    5. ' self' → logprob: -8.404178619384766
    6. ' not' → logprob: -11.904178619384766
    7. '   ' → logprob: -12.154178619384766
    8. '	num' → logprob: -13.029178619384766
    9. '(num' → logprob: -14.029178619384766
    10. ' ' → logprob: -14.029178619384766

Token 606: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.001636024098843336
    2. '.' → logprob: -7.126636028289795
    3. 's' → logprob: -8.126635551452637
    4. '.num' → logprob: -8.126635551452637
    5. 'num' → logprob: -9.501635551452637
    6. ' .' → logprob: -9.751635551452637
    7. '.pr' → logprob: -9.876635551452637
    8. '.is' → logprob: -11.626635551452637
    9. 'MAX' → logprob: -11.751635551452637
    10. '.query' → logprob: -12.001635551452637

Token 607: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.016458243131637573
    2. '._' → logprob: -5.141458034515381
    3. 'elf' → logprob: -6.016458034515381
    4. '.s' → logprob: -6.141458034515381
    5. 'e' → logprob: -6.641458034515381
    6. 'ize' → logprob: -8.016458511352539
    7. '_' → logprob: -8.016458511352539
    8. '.is' → logprob: -8.266458511352539
    9. '.' → logprob: -8.391458511352539
    10. 'ive' → logprob: -8.703958511352539

Token 608: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -6.504040356958285e-05
    2. '.' → logprob: -10.375064849853516
    3. '._' → logprob: -10.750064849853516
    4. 'is' → logprob: -11.750064849853516
    5. ' .' → logprob: -12.500064849853516
    6. '.
' → logprob: -15.250064849853516
    7. '_.' → logprob: -16.250064849853516
    8. '.isnan' → logprob: -16.375064849853516
    9. '.s' → logprob: -17.250064849853516
    10. '.__' → logprob: -17.250064849853516

Token 609: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.2961512513575144e-05
    2. 'prime' → logprob: -11.875022888183594
    3. ' _' → logprob: -12.000022888183594
    4. '_' → logprob: -12.125022888183594
    5. '_pr' → logprob: -12.500022888183594
    6. ' prime' → logprob: -15.500022888183594
    7. '_p' → logprob: -16.375022888183594
    8. '_pal' → logprob: -16.500022888183594
    9. '_true' → logprob: -17.000022888183594
    10. '_private' → logprob: -17.000022888183594

Token 610: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -7.183501293184236e-05
    2. '(' → logprob: -9.62507152557373
    3. ' (' → logprob: -12.50007152557373
    4. '(n' → logprob: -13.62507152557373
    5. 'num' → logprob: -14.75007152557373
    6. '(
' → logprob: -15.37507152557373
    7. ',num' → logprob: -16.750072479248047
    8. '[num' → logprob: -17.250072479248047
    9. '((' → logprob: -17.750072479248047
    10. ' num' → logprob: -18.250072479248047

Token 611: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18076537549495697
    2. '):' → logprob: -1.8057653903961182
    3. ')' → logprob: -7.180765151977539
    4. ' ):
' → logprob: -9.430765151977539
    5. '):
' → logprob: -9.805765151977539
    6. '       ' → logprob: -9.930765151977539
    7. ' ):' → logprob: -10.555765151977539
    8. '   ' → logprob: -10.555765151977539
    9. '()):
' → logprob: -11.680765151977539
    10. '():
' → logprob: -13.055765151977539

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5783126354217529
    2. 'return' → logprob: -0.8283126354217529
    3. ' return' → logprob: -6.578312873840332
    4. '0' → logprob: -7.203312873840332
    5. '       ' → logprob: -8.453312873840332
    6. '   ' → logprob: -11.328312873840332
    7. '
' → logprob: -12.078312873840332
    8. '{return' → logprob: -13.453312873840332
    9. '1' → logprob: -14.328312873840332
    10. '	return' → logprob: -14.828312873840332

Token 613: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005212059244513512
    2. '0' → logprob: -6.25521183013916
    3. ' return' → logprob: -6.25521183013916
    4. '           ' → logprob: -6.63021183013916
    5. '       ' → logprob: -10.25521183013916
    6. ' ' → logprob: -13.88021183013916
    7. '1' → logprob: -14.75521183013916
    8. '   ' → logprob: -14.88021183013916
    9. '	return' → logprob: -14.88021183013916
    10. '
' → logprob: -16.005212783813477

Token 614: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013696423266083002
    2. ' ' → logprob: -6.626369476318359
    3. '1' → logprob: -10.25136947631836
    4. '2' → logprob: -12.50136947631836
    5. '-' → logprob: -12.87636947631836
    6. '   ' → logprob: -14.00136947631836
    7. ' -' → logprob: -14.31386947631836
    8. '  ' → logprob: -16.31386947631836
    9. '       ' → logprob: -16.56386947631836
    10. '4' → logprob: -17.12636947631836

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003827676991932094
    2. '-' → logprob: -8.000382423400879
    3. '1' → logprob: -10.750382423400879
    4. ' ' → logprob: -11.000382423400879
    5. '2' → logprob: -12.250382423400879
    6. ' -' → logprob: -13.687882423400879
    7. 'prime' → logprob: -14.250382423400879
    8. 'self' → logprob: -15.125382423400879
    9. '999' → logprob: -15.187882423400879
    10. '   ' → logprob: -15.750382423400879

Token 616: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00435226783156395
    2. '
' → logprob: -5.50435209274292
    3. '        
' → logprob: -8.379352569580078
    4. '    
' → logprob: -11.004352569580078
    5. '   ' → logprob: -11.379352569580078
    6. 'return' → logprob: -12.754352569580078
    7. '  
' → logprob: -12.879352569580078
    8. '       
' → logprob: -13.129352569580078
    9. ',' → logprob: -13.629352569580078
    10. '           ' → logprob: -13.879352569580078

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013146435376256704
    2. '
' → logprob: -7.001314640045166
    3. '   ' → logprob: -8.251315116882324
    4. '        
' → logprob: -9.626315116882324
    5. 'return' → logprob: -10.626315116882324
    6. '    
' → logprob: -11.126315116882324
    7. 'else' → logprob: -11.251315116882324
    8. '```' → logprob: -12.126315116882324
    9. 'if' → logprob: -12.376315116882324
    10. '  
' → logprob: -12.751315116882324

Token 618: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04890231415629387
    2. '       ' → logprob: -3.0489022731781006
    3. ' return' → logprob: -8.79890251159668
    4. '   ' → logprob: -9.42390251159668
    5. 'if' → logprob: -9.67390251159668
    6. '
' → logprob: -11.54890251159668
    7. '```' → logprob: -12.17390251159668
    8. 'gap' → logprob: -13.04890251159668
    9. '        
' → logprob: -14.04890251159668
    10. 'else' → logprob: -14.17390251159668

Token 619: ' num' (ID: 2269)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001375591498799622
    2. '       ' → logprob: -7.001375675201416
    3. ' return' → logprob: -7.876375675201416
    4. '   ' → logprob: -10.501375198364258
    5. 'if' → logprob: -10.751375198364258
    6. 'length' → logprob: -11.001375198364258
    7. 'gap' → logprob: -11.126375198364258
    8. '```' → logprob: -13.251375198364258
    9. 'result' → logprob: -14.126375198364258
    10. '
' → logprob: -14.751375198364258

Token 620: ' composite' (ID: 40773)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9366925954818726
    2. 'return' → logprob: -1.4366925954818726
    3. ' =' → logprob: -2.311692714691162
    4. '_gap' → logprob: -2.811692714691162
    5. 'in' → logprob: -3.311692714691162
    6. ' in' → logprob: -3.436692714691162
    7. '<=' → logprob: -3.436692714691162
    8. 'gap' → logprob: -3.686692714691162
    9. '>=' → logprob: -3.936692714691162
    10. '_length' → logprob: -5.061692714691162

Token 621: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0837634801864624
    2. 'return' → logprob: -3.333763599395752
    3. '
' → logprob: -3.833763599395752
    4. ' return' → logprob: -4.333763599395752
    5. '   ' → logprob: -4.708763599395752
    6. '        
' → logprob: -7.583763599395752
    7. '    
' → logprob: -8.458763122558594
    8. '	return' → logprob: -10.208763122558594
    9. '
' → logprob: -10.208763122558594
    10. '    ' → logprob: -10.583763122558594

Token 622: ' check' (ID: 2371)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.062090590596199036
    2. '       ' → logprob: -3.0620906352996826
    3. ' return' → logprob: -4.3120903968811035
    4. '   ' → logprob: -13.062090873718262
    5. 'if' → logprob: -13.687090873718262
    6. ' ' → logprob: -13.812090873718262
    7. '```' → logprob: -14.062090873718262
    8. '	return' → logprob: -14.187090873718262
    9. '
' → logprob: -15.062090873718262
    10. '        
' → logprob: -15.312090873718262

Token 623: ' prime' (ID: 9197)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11420754343271255
    2. ' return' → logprob: -2.6142075061798096
    3. '       ' → logprob: -3.3642075061798096
    4. 'self' → logprob: -9.36420726776123
    5. 'gap' → logprob: -11.11420726776123
    6. ' self' → logprob: -12.48920726776123
    7. ' gap' → logprob: -12.48920726776123
    8. '	return' → logprob: -13.48920726776123
    9. '
' → logprob: -13.86420726776123
    10. 'length' → logprob: -15.11420726776123

Token 624: ' gap' (ID: 19953)
  Prédit: '_gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.06240087002515793
    2. 'gap' → logprob: -2.8124008178710938
    3. ' gap' → logprob: -7.812400817871094
    4. 'g' → logprob: -11.687400817871094
    5. '       ' → logprob: -11.687400817871094
    6. '_g' → logprob: -12.437400817871094
    7. '_length' → logprob: -12.937400817871094
    8. '   ' → logprob: -13.187400817871094
    9. '_' → logprob: -13.812400817871094
    10. 'self' → logprob: -14.937400817871094

Token 625: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030728938058018684
    2. 'return' → logprob: -3.530729055404663
    3. ' return' → logprob: -7.655728816986084
    4. '   ' → logprob: -8.155729293823242
    5. 'length' → logprob: -8.655729293823242
    6. '
' → logprob: -11.530729293823242
    7. ' length' → logprob: -11.780729293823242
    8. ' ' → logprob: -12.280729293823242
    9. '           ' → logprob: -12.780729293823242
    10. '_length' → logprob: -12.780729293823242

Token 626: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042521651834249496
    2. 'return' → logprob: -3.2925217151641846
    3. ' return' → logprob: -5.9175214767456055
    4. '   ' → logprob: -6.4175214767456055
    5. '
' → logprob: -8.917521476745605
    6. '	return' → logprob: -12.667521476745605
    7. '           ' → logprob: -13.292521476745605
    8. '        
' → logprob: -13.292521476745605
    9. ' ' → logprob: -14.042521476745605
    10. ',' → logprob: -14.167521476745605

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00925730261951685
    2. 'return' → logprob: -4.7592573165893555
    3. '   ' → logprob: -7.6342573165893555
    4. ' return' → logprob: -8.759257316589355
    5. '	return' → logprob: -14.009257316589355
    6. '
' → logprob: -14.634257316589355
    7. '           ' → logprob: -15.259257316589355
    8. '        
' → logprob: -16.00925636291504
    9. ' ' → logprob: -16.13425636291504
    10. '```' → logprob: -16.13425636291504

Token 628: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01420182641595602
    2. '       ' → logprob: -4.264201641082764
    3. ' return' → logprob: -10.264202117919922
    4. '   ' → logprob: -12.764202117919922
    5. '```' → logprob: -14.639202117919922
    6. '	return' → logprob: -16.764202117919922
    7. '
' → logprob: -16.889202117919922
    8. 'gap' → logprob: -18.139202117919922
    9. '           ' → logprob: -19.264202117919922
    10. 'result' → logprob: -19.639202117919922

Token 629: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031777136027812958
    2. ' self' → logprob: -5.753177642822266
    3. '
' → logprob: -17.128177642822266
    4. '(self' → logprob: -17.753177642822266
    5. '       ' → logprob: -18.628177642822266
    6. '	self' → logprob: -19.003177642822266
    7. '`' → logprob: -20.128177642822266
    8. '=self' → logprob: -20.128177642822266
    9. '   ' → logprob: -20.253177642822266
    10. '[self' → logprob: -20.378177642822266

Token 630: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.002470186213031411
    2. '.s' → logprob: -6.127470016479492
    3. '.' → logprob: -9.002470016479492
    4. 'prime' → logprob: -9.377470016479492
    5. ' .' → logprob: -9.752470016479492
    6. '.p' → logprob: -12.627470016479492
    7. '   ' → logprob: -13.252470016479492
    8. '_.' → logprob: -13.377470016479492
    9. '_prime' → logprob: -13.377470016479492
    10. 's' → logprob: -13.752470016479492

Token 631: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -3.054500666621607e-06
    2. 'me' → logprob: -14.37500286102295
    3. '
' → logprob: -15.12500286102295
    4. 'ome' → logprob: -15.12500286102295
    5. 'im' → logprob: -15.25000286102295
    6. 'e' → logprob: -15.37500286102295
    7. 'prime' → logprob: -15.37500286102295
    8. 'IME' → logprob: -15.87500286102295
    9. 'ine' → logprob: -16.375003814697266
    10. 'imes' → logprob: -16.500003814697266

Token 632: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -3.702754474943504e-05
    2. 'gap' → logprob: -10.25003719329834
    3. '._' → logprob: -14.25003719329834
    4. '_g' → logprob: -14.50003719329834
    5. 'g' → logprob: -15.62503719329834
    6. '_' → logprob: -16.500036239624023
    7. '_gate' → logprob: -16.875036239624023
    8. ' _' → logprob: -16.875036239624023
    9. ' gap' → logprob: -17.500036239624023
    10. 'Gap' → logprob: -17.750036239624023

Token 633: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -2.15310683415737e-05
    2. ' .' → logprob: -11.000021934509277
    3. '.' → logprob: -13.125021934509277
    4. '.query' → logprob: -13.625021934509277
    5. '.start' → logprob: -15.000021934509277
    6. '.get' → logprob: -15.125021934509277
    7. '.git' → logprob: -15.500021934509277
    8. '.cont' → logprob: -15.750021934509277
    9. '   ' → logprob: -16.37502098083496
    10. '._' → logprob: -16.37502098083496

Token 634: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.2200749754119897e-06
    2. 'gap' → logprob: -13.250001907348633
    3. '_ap' → logprob: -15.875001907348633
    4. '_gap' → logprob: -15.875001907348633
    5. 'ап' → logprob: -16.875001907348633
    6. '	ap' → logprob: -17.250001907348633
    7. 'aps' → logprob: -18.000001907348633
    8. '
' → logprob: -18.000001907348633
    9. '(ap' → logprob: -18.000001907348633
    10. 'a' → logprob: -18.125001907348633

Token 635: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.1875571544806007e-05
    2. '_l' → logprob: -12.125011444091797
    3. '_len' → logprob: -12.125011444091797
    4. '_' → logprob: -15.500011444091797
    5. 'length' → logprob: -15.500011444091797
    6. '_start' → logprob: -15.750011444091797
    7. '_le' → logprob: -16.000011444091797
    8. '_lengths' → logprob: -16.375011444091797
    9. '_gap' → logprob: -16.750011444091797
    10. 'Length' → logprob: -17.125011444091797

Token 636: '_cont' (ID: 43788)
  Prédit: '_cont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cont' → logprob: -5.512236498361744e-07
    2. '_contains' → logprob: -15.625000953674316
    3. '_content' → logprob: -16.5
    4. '_length' → logprob: -16.875
    5. '_' → logprob: -17.125
    6. '_con' → logprob: -17.25
    7. ' _' → logprob: -17.5
    8. '_container' → logprob: -17.625
    9. '```' → logprob: -18.25
    10. '_start' → logprob: -18.5

Token 637: 'aining' (ID: 2649)
  Prédit: 'aining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aining' → logprob: -3.2617008400848135e-05
    2. 'a' → logprob: -10.625032424926758
    3. '[' → logprob: -12.625032424926758
    4. 'ining' → logprob: -13.750032424926758
    5. '(' → logprob: -14.125032424926758
    6. 'ain' → logprob: -14.375032424926758
    7. '_' → logprob: -14.625032424926758
    8. '

' → logprob: -14.875032424926758
    9. 'aning' → logprob: -14.875032424926758
    10. 'ai' → logprob: -15.250032424926758

Token 638: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -5.3954463510308415e-05
    2. '(' → logprob: -9.875054359436035
    3. ' (' → logprob: -13.875054359436035
    4. 'num' → logprob: -14.750054359436035
    5. '[num' → logprob: -14.750054359436035
    6. '(
' → logprob: -15.000054359436035
    7. '(n' → logprob: -15.000054359436035
    8. '(number' → logprob: -17.12505340576172
    9. ',num' → logprob: -17.62505340576172
    10. '(nums' → logprob: -17.62505340576172

Token 639: ')

' (ID: 1029)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(num' → logprob: -6.611323624383658e-05
    2. ')' → logprob: -10.250065803527832
    3. '[num' → logprob: -10.875065803527832
    4. '(' → logprob: -11.750065803527832
    5. ' (' → logprob: -12.750065803527832
    6. '(n' → logprob: -14.750065803527832
    7. ',num' → logprob: -15.500065803527832
    8. '   ' → logprob: -16.00006675720215
    9. 'num' → logprob: -16.50006675720215
    10. '(nums' → logprob: -17.37506675720215

Token 640: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 641: ' Input' (ID: 10090)
  Prédit: ' Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Prime' → logprob: -0.8858078122138977
    2. ' Solution' → logprob: -1.010807752609253
    3. 'Prime' → logprob: -2.510807752609253
    4. 'Solution' → logprob: -2.760807752609253
    5. ' Test' → logprob: -3.260807752609253
    6. 'Test' → logprob: -4.635807991027832
    7. ' Query' → logprob: -4.760807991027832
    8. ' Solver' → logprob: -5.010807991027832
    9. ' Range' → logprob: -6.260807991027832
    10. ' Gap' → logprob: -6.635807991027832

Token 642: 'Processor' (ID: 22334)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.6005643010139465
    2. 'Handler' → logprob: -1.1005642414093018
    3. 'Parser' → logprob: -3.1005642414093018
    4. 'Processor' → logprob: -3.4755642414093018
    5. 'Data' → logprob: -3.8505642414093018
    6. ':' → logprob: -5.350564479827881
    7. 'Iterator' → logprob: -5.475564479827881
    8. 'Buffer' → logprob: -5.725564479827881
    9. 'Provider' → logprob: -6.100564479827881
    10. 'Validator' → logprob: -6.725564479827881

Token 643: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009770254604518414
    2. ':
' → logprob: -4.634770393371582
    3. ':

' → logprob: -12.884770393371582
    4. '<|end|>' → logprob: -12.884770393371582
    5. '():' → logprob: -13.259770393371582
    6. ' :' → logprob: -13.384770393371582
    7. ':def' → logprob: -13.384770393371582
    8. '(object' → logprob: -14.009770393371582
    9. '(' → logprob: -14.384770393371582
    10. '):' → logprob: -14.384770393371582

Token 644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005745976231992245
    2. ' def' → logprob: -7.625574588775635
    3. 'def' → logprob: -10.375575065612793
    4. '<|end|>' → logprob: -10.500575065612793
    5. 'class' → logprob: -12.125575065612793
    6. '    
' → logprob: -12.250575065612793
    7. ':' → logprob: -12.250575065612793
    8. '    ' → logprob: -12.375575065612793
    9. ' class' → logprob: -13.000575065612793
    10. '<|end|>' → logprob: -13.375575065612793

Token 645: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4979292154312134
    2. 'def' (adapté à ' def') → logprob: -0.9979292154312134
    3. '   ' → logprob: -3.747929096221924
    4. '	def' → logprob: -13.497929573059082
    5. 'class' → logprob: -13.497929573059082
    6. ' ' → logprob: -15.622929573059082
    7. 'import' → logprob: -15.622929573059082
    8. ' """' → logprob: -16.122928619384766
    9. '"""' → logprob: -16.372928619384766
    10. '```' → logprob: -16.497928619384766

Token 646: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16592247784137726
    2. ' def' → logprob: -2.7909224033355713
    3. 'staticmethod' → logprob: -2.9159224033355713
    4. '__' → logprob: -4.54092264175415
    5. 'object' → logprob: -4.66592264175415
    6. ' __' → logprob: -5.66592264175415
    7. 'classmethod' → logprob: -5.66592264175415
    8. '   ' → logprob: -5.79092264175415
    9. '```' → logprob: -5.91592264175415
    10. '...' → logprob: -7.04092264175415

Token 647: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.125
    3. '```' → logprob: -18.5
    4. 'def' → logprob: -18.875
    5. 'next' → logprob: -20.125
    6. 'int' → logprob: -20.125
    7. '_init' → logprob: -20.375
    8. '(init' → logprob: -20.875
    9. 'inite' → logprob: -21.25
    10. 'call' → logprob: -21.5

Token 648: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.14342544972896576
    2. '(self' → logprob: -2.018425464630127
    3. '(' → logprob: -7.643425464630127
    4. '__' → logprob: -9.018424987792969
    5. '__(
' → logprob: -9.268424987792969
    6. 'self' → logprob: -10.518424987792969
    7. ' (' → logprob: -11.143424987792969
    8. '_(' → logprob: -12.393424987792969
    9. '<>(' → logprob: -13.143424987792969
    10. '```' → logprob: -13.518424987792969

Token 649: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021831797494087368
    2. ')' → logprob: -8.750218391418457
    3. ' self' → logprob: -10.125218391418457
    4. '):
' → logprob: -11.375218391418457
    5. '
' → logprob: -12.000218391418457
    6. '   ' → logprob: -13.375218391418457
    7. ')
' → logprob: -15.875218391418457
    8. '(self' → logprob: -16.37521743774414
    9. '),' → logprob: -16.62521743774414
    10. '):' → logprob: -16.62521743774414

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8424344062805176
    2. '):
' → logprob: -1.0924344062805176
    3. 'self' → logprob: -1.8424344062805176
    4. '):' → logprob: -2.5924344062805176
    5. '(self' → logprob: -8.09243392944336
    6. '   ' → logprob: -9.21743392944336
    7. '):
' → logprob: -9.46743392944336
    8. ',self' → logprob: -9.59243392944336
    9. '       ' → logprob: -10.46743392944336
    10. ')' → logprob: -10.59243392944336

Token 651: ' context' (ID: 3814)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9434028267860413
    2. 'self' → logprob: -1.1934027671813965
    3. 'inputs' → logprob: -1.9434027671813965
    4. 'lines' → logprob: -2.4434027671813965
    5. ')' → logprob: -3.8184027671813965
    6. 'queries' → logprob: -4.1934027671813965
    7. 'numbers' → logprob: -4.5684027671813965
    8. '):
' → logprob: -5.3184027671813965
    9. 'data' → logprob: -5.4434027671813965
    10. '):' → logprob: -5.6934027671813965

Token 652: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21831169724464417
    2. '):' → logprob: -1.7183116674423218
    3. '):
' → logprob: -4.093311786651611
    4. ' ):' → logprob: -9.968311309814453
    5. ',' → logprob: -12.218311309814453
    6. ')' → logprob: -12.218311309814453
    7. '):
' → logprob: -12.343311309814453
    8. ' :' → logprob: -12.468311309814453
    9. ' ):
' → logprob: -13.218311309814453
    10. '):

' → logprob: -13.343311309814453

Token 653: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.575941264629364
    2. ' Prime' → logprob: -0.825941264629364
    3. '_prime' → logprob: -13.70094108581543
    4. ')' → logprob: -14.95094108581543
    5. ' prime' → logprob: -15.45094108581543
    6. '   ' → logprob: -17.20094108581543
    7. ' ' → logprob: -17.32594108581543
    8. ' )' → logprob: -17.45094108581543
    9. 'Primitive' → logprob: -17.70094108581543
    10. '_Pr' → logprob: -17.82594108581543

Token 654: 'Gap' (ID: 17218)
  Prédit: 'Gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gap' → logprob: -2.339278580620885e-06
    2. '_gap' → logprob: -13.875001907348633
    3. ' Gap' → logprob: -13.875001907348633
    4. 'Context' → logprob: -15.375001907348633
    5. 'gap' → logprob: -16.000001907348633
    6. ' gap' → logprob: -17.625001907348633
    7. '-gap' → logprob: -19.500001907348633
    8. ' ' → logprob: -20.000001907348633
    9. ')' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.625001907348633

Token 655: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: -0.004648234229534864
    2. '):
' → logprob: -5.629648208618164
    3. '):' → logprob: -6.879648208618164
    4. 'context' → logprob: -11.754648208618164
    5. ' Context' → logprob: -13.129648208618164
    6. '):

' → logprob: -13.254648208618164
    7. '):
' → logprob: -13.379648208618164
    8. '_context' → logprob: -13.504648208618164
    9. ':' → logprob: -13.879648208618164
    10. '   ' → logprob: -14.129648208618164

Token 656: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2524111568927765
    2. '):' → logprob: -1.502411127090454
    3. ',' → logprob: -7.877411365509033
    4. ')' → logprob: -9.877410888671875
    5. '   ' → logprob: -10.502410888671875
    6. '):
' → logprob: -10.877410888671875
    7. '       ' → logprob: -12.752410888671875
    8. '):

' → logprob: -14.502410888671875
    9. ' ):
' → logprob: -14.502410888671875
    10. ':' → logprob: -15.002410888671875

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027827449142932892
    2. '   ' → logprob: -3.652827501296997
    3. 'self' → logprob: -6.777827262878418
    4. 'def' → logprob: -8.027827262878418
    5. ' self' → logprob: -10.152827262878418
    6. ' def' → logprob: -12.652827262878418
    7. '	   ' → logprob: -12.777827262878418
    8. '
' → logprob: -12.777827262878418
    9. '	self' → logprob: -13.277827262878418
    10. '        
' → logprob: -13.527827262878418

Token 658: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0057941703125834465
    2. '       ' → logprob: -5.255794048309326
    3. ' self' → logprob: -7.505794048309326
    4. '	self' → logprob: -11.755794525146484
    5. '   ' → logprob: -13.130794525146484
    6. '	' → logprob: -15.380794525146484
    7. '
' → logprob: -16.505794525146484
    8. '(self' → logprob: -18.005794525146484
    9. ' ' → logprob: -18.380794525146484
    10. '           ' → logprob: -18.505794525146484

Token 659: '.context' (ID: 14007)
  Prédit: '.context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.context' → logprob: -0.0010767532512545586
    2. '.' → logprob: -7.001076698303223
    3. 'context' → logprob: -8.751076698303223
    4. '._' → logprob: -12.876076698303223
    5. '.input' → logprob: -13.751076698303223
    6. ' .' → logprob: -13.751076698303223
    7. ' context' → logprob: -14.376076698303223
    8. '.ctx' → logprob: -15.001076698303223
    9. '_context' → logprob: -15.126076698303223
    10. '
' → logprob: -15.251076698303223

Token 660: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5409270524978638
    2. '=' → logprob: -0.9159270524978638
    3. '.context' → logprob: -4.665926933288574
    4. '   ' → logprob: -6.040926933288574
    5. '=context' → logprob: -6.040926933288574
    6. '.' → logprob: -6.415926933288574
    7. '       ' → logprob: -7.790926933288574
    8. ':' → logprob: -7.915926933288574
    9. '_context' → logprob: -7.915926933288574
    10. 'context' → logprob: -7.915926933288574

Token 661: ' context' (ID: 3814)
  Prédit: 'context'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.5759397745132446
    2. ' context' → logprob: -0.8259397745132446
    3. '	context' → logprob: -15.700940132141113
    4. '(context' → logprob: -16.075939178466797
    5. '=context' → logprob: -16.575939178466797
    6. '_context' → logprob: -16.825939178466797
    7. '<context' → logprob: -17.700939178466797
    8. '.context' → logprob: -18.325939178466797
    9. '"context' → logprob: -18.325939178466797
    10. ' contexto' → logprob: -19.075939178466797

Token 662: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20178693532943726
    2. '
' → logprob: -1.701786994934082
    3. '    
' → logprob: -8.451786994934082
    4. '<|end|>' → logprob: -9.326786994934082
    5. 'def' → logprob: -10.201786994934082
    6. '<|end|>' → logprob: -11.576786994934082
    7. '```' → logprob: -11.826786994934082
    8. ' def' → logprob: -12.201786994934082
    9. '

' → logprob: -12.826786994934082
    10. '
' → logprob: -13.326786994934082

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.322494238615036
    2. 'def' → logprob: -1.3224942684173584
    3. '
' → logprob: -4.822494029998779
    4. ' def' → logprob: -6.822494029998779
    5. '	def' → logprob: -10.572494506835938
    6. '    
' → logprob: -11.447494506835938
    7. '```' → logprob: -11.947494506835938
    8. ' ' → logprob: -12.447494506835938
    9. '<|end|>' → logprob: -13.197494506835938
    10. '  ' → logprob: -13.697494506835938

Token 664: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.125
    4. 'de' → logprob: -21.5
    5. 'from' → logprob: -21.75
    6. '	def' → logprob: -22.125
    7. '
' → logprob: -23.125
    8. 'async' → logprob: -23.625
    9. 'd' → logprob: -24.125
    10. 'import' → logprob: -24.375

Token 665: ' iter' (ID: 10621)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.005254983901977539
    2. ' process' → logprob: -5.255254745483398
    3. 'query' → logprob: -11.755254745483398
    4. 'read' → logprob: -11.755254745483398
    5. 'parse' → logprob: -12.505254745483398
    6. 'handle' → logprob: -14.255254745483398
    7. 'def' → logprob: -15.005254745483398
    8. 'run' → logprob: -15.255254745483398
    9. '_process' → logprob: -16.0052547454834
    10. '	process' → logprob: -16.2552547454834

Token 666: '_input' (ID: 12507)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -1.0748950242996216
    2. '_input' → logprob: -1.3248950242996216
    3. '_lines' → logprob: -1.6998950242996216
    4. '_inputs' → logprob: -2.199894905090332
    5. '_queries' → logprob: -2.699894905090332
    6. '(self' → logprob: -4.574894905090332
    7. '_query' → logprob: -5.324894905090332
    8. '_numbers' → logprob: -5.449894905090332
    9. '_' → logprob: -5.824894905090332
    10. 'ator' → logprob: -5.949894905090332

Token 667: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013393278641160578
    2. '(' → logprob: -9.125133514404297
    3. 'self' → logprob: -11.375133514404297
    4. 'er' → logprob: -12.625133514404297
    5. ' (' → logprob: -12.875133514404297
    6. 's' → logprob: -13.000133514404297
    7. '(s' → logprob: -13.375133514404297
    8. '(se' → logprob: -13.625133514404297
    9. '(sel' → logprob: -14.125133514404297
    10. 'ator' → logprob: -14.625133514404297

Token 668: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08517331629991531
    2. ',' → logprob: -2.7101733684539795
    3. 'self' → logprob: -4.2101731300354
    4. '(self' → logprob: -8.960173606872559
    5. '   ' → logprob: -9.460173606872559
    6. '       ' → logprob: -10.835173606872559
    7. ')->' → logprob: -11.210173606872559
    8. ':' → logprob: -11.710173606872559
    9. ',self' → logprob: -12.210173606872559
    10. '```' → logprob: -12.710173606872559

Token 669: ' inputs' (ID: 21963)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5671586394309998
    2. ' lines' → logprob: -1.4421586990356445
    3. 'self' → logprob: -2.5671586990356445
    4. ')' → logprob: -2.9421586990356445
    5. 'input' → logprob: -2.9421586990356445
    6. ' input' → logprob: -5.9421586990356445
    7. 'inputs' → logprob: -5.9421586990356445
    8. 'source' → logprob: -6.1921586990356445
    9. ' self' → logprob: -6.3171586990356445
    10. 'line' → logprob: -6.6921586990356445

Token 670: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2478657364845276
    2. 'self' → logprob: -1.8728656768798828
    3. '):' → logprob: -3.497865676879883
    4. '(self' → logprob: -3.747865676879883
    5. ':' → logprob: -5.247865676879883
    6. '):
' → logprob: -5.872865676879883
    7. '   ' → logprob: -5.872865676879883
    8. '       ' → logprob: -8.247865676879883
    9. ' ' → logprob: -8.497865676879883
    10. ',' → logprob: -8.622865676879883

Token 671: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.24364183843135834
    2. ')' → logprob: -1.8686418533325195
    3. 'List' → logprob: -2.8686418533325195
    4. ' Iterator' → logprob: -5.7436418533325195
    5. 'Iterable' → logprob: -7.1186418533325195
    6. ' )' → logprob: -7.8686418533325195
    7. 'Optional' → logprob: -8.74364185333252
    8. ' List' → logprob: -8.99364185333252
    9. '   ' → logprob: -9.74364185333252
    10. 'self' → logprob: -9.86864185333252

Token 672: '[str' (ID: 33439)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.001174747827462852
    2. '[str' → logprob: -6.7511749267578125
    3. 'int' → logprob: -12.376174926757812
    4. ')' → logprob: -15.501174926757812
    5. '
' → logprob: -16.751174926757812
    6. '<int' → logprob: -17.626174926757812
    7. '[' → logprob: -17.751174926757812
    8. '   ' → logprob: -18.126174926757812
    9. '):
' → logprob: -18.501174926757812
    10. '=int' → logprob: -18.626174926757812

Token 673: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008315438753925264
    2. '])' → logprob: -7.750831604003906
    3. '):
' → logprob: -7.875831604003906
    4. '   ' → logprob: -12.500831604003906
    5. ' )' → logprob: -12.500831604003906
    6. '`)' → logprob: -12.750831604003906
    7. '))' → logprob: -12.875831604003906
    8. '})' → logprob: -13.375831604003906
    9. '):' → logprob: -13.500831604003906
    10. '>)' → logprob: -13.625831604003906

Token 674: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.7735590934753418
    2. ':' → logprob: -1.2735590934753418
    3. ' ->' → logprob: -2.023559093475342
    4. '       ' → logprob: -2.398559093475342
    5. '   ' → logprob: -4.148559093475342
    6. ':
' → logprob: -5.023559093475342
    7. ')' → logprob: -5.398559093475342
    8. ')->' → logprob: -5.398559093475342
    9. '()->' → logprob: -6.148559093475342
    10. ',' → logprob: -7.523559093475342

Token 675: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.007234124466776848
    2. 'int' → logprob: -5.0072340965271
    3. ' Iterator' → logprob: -7.6322340965271
    4. 'List' → logprob: -11.257234573364258
    5. 'None' → logprob: -12.007234573364258
    6. 'Iterable' → logprob: -12.257234573364258
    7. '	Iterator' → logprob: -12.382234573364258
    8. 'Optional' → logprob: -12.507234573364258
    9. 'iterator' → logprob: -14.257234573364258
    10. ' int' → logprob: -14.632234573364258

Token 676: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.750003814697266
    3. 'int' → logprob: -14.500003814697266
    4. '[Int' → logprob: -17.250003814697266
    5. '[
' → logprob: -17.625003814697266
    6. '<int' → logprob: -18.375003814697266
    7. '[in' → logprob: -19.250003814697266
    8. '   ' → logprob: -19.500003814697266
    9. ' [' → logprob: -19.625003814697266
    10. '[str' → logprob: -21.000003814697266

Token 677: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37269341945648193
    2. ':
' → logprob: -1.497693419456482
    3. ':' → logprob: -3.1226935386657715
    4. '   ' → logprob: -3.7476935386657715
    5. ']:
' → logprob: -4.8726935386657715
    6. '):' → logprob: -5.1226935386657715
    7. '       ' → logprob: -5.4976935386657715
    8. '):
' → logprob: -7.2476935386657715
    9. '():
' → logprob: -7.3726935386657715
    10. ']:' → logprob: -8.622693061828613

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020950648467987776
    2. ' for' → logprob: -6.3770952224731445
    3. 'for' → logprob: -8.002095222473145
    4. ':' → logprob: -11.002095222473145
    5. '        
' → logprob: -11.502095222473145
    6. '   ' → logprob: -11.502095222473145
    7. ',' → logprob: -12.502095222473145
    8. '```' → logprob: -12.752095222473145
    9. 'tokens' → logprob: -12.752095222473145
    10. '<|end|>' → logprob: -13.127095222473145

Token 679: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6141586303710938
    2. 'for' (adapté à ' for') → logprob: -1.3641586303710938
    3. ' for' → logprob: -1.6141586303710938
    4. '   ' → logprob: -5.489158630371094
    5. ' ' → logprob: -9.239158630371094
    6. '	for' → logprob: -11.989158630371094
    7. '           ' → logprob: -12.239158630371094
    8. '    ' → logprob: -13.114158630371094
    9. '  ' → logprob: -13.114158630371094
    10. '```' → logprob: -13.614158630371094

Token 680: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011071168817579746
    2. ' line' → logprob: -4.51107120513916
    3. 'raw' → logprob: -11.38607120513916
    4. 'input' → logprob: -11.88607120513916
    5. 'inp' → logprob: -12.88607120513916
    6. ' raw' → logprob: -13.88607120513916
    7. 's' → logprob: -14.88607120513916
    8. '_line' → logprob: -15.26107120513916
    9. '	line' → logprob: -15.38607120513916
    10. 'num' → logprob: -15.51107120513916

Token 681: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005537479883059859
    2. 'in' → logprob: -7.500553607940674
    3. '_in' → logprob: -15.500554084777832
    4. ' ' → logprob: -15.625554084777832
    5. 'line' → logprob: -16.750553131103516
    6. '	in' → logprob: -16.750553131103516
    7. 'import' → logprob: -17.000553131103516
    8. '   ' → logprob: -17.250553131103516
    9. ' i' → logprob: -17.375553131103516
    10. '        ' → logprob: -17.375553131103516

Token 682: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.0009126556105911732
    2. ' inputs' → logprob: -7.000912666320801
    3. 'input' → logprob: -13.8759126663208
    4. '(inputs' → logprob: -16.500911712646484
    5. '.inputs' → logprob: -17.750911712646484
    6. ' ' → logprob: -18.000911712646484
    7. '   ' → logprob: -18.625911712646484
    8. 'lines' → logprob: -18.750911712646484
    9. 'outputs' → logprob: -19.125911712646484
    10. '_inputs' → logprob: -19.875911712646484

Token 683: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6389122009277344
    2. ':
' → logprob: -0.7639122009277344
    3. '.strip' → logprob: -5.763912200927734
    4. '       ' → logprob: -6.638912200927734
    5. '           ' → logprob: -6.888912200927734
    6. '.rstrip' → logprob: -8.388912200927734
    7. ',' → logprob: -8.763912200927734
    8. '():
' → logprob: -9.138912200927734
    9. '):
' → logprob: -9.263912200927734
    10. ':
' → logprob: -9.388912200927734

Token 684: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4259644558478612e-05
    2. 'yield' → logprob: -12.000014305114746
    3. '            
' → logprob: -12.875014305114746
    4. 'strip' → logprob: -13.625014305114746
    5. '```' → logprob: -13.625014305114746
    6. 'tokens' → logprob: -14.250014305114746
    7. ' stripped' → logprob: -15.250014305114746
    8. '.strip' → logprob: -15.250014305114746
    9. '		' → logprob: -15.375014305114746
    10. ',' → logprob: -15.500014305114746

Token 685: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7742422223091125
    2. 'num' → logprob: -0.7742422223091125
    3. ' line' → logprob: -3.3992421627044678
    4. 'line' (adapté à ' line') → logprob: -3.5242421627044678
    5. ' num' → logprob: -4.649242401123047
    6. 'yield' → logprob: -6.399242401123047
    7. ' stripped' → logprob: -6.899242401123047
    8. 'n' → logprob: -7.274242401123047
    9. '               ' → logprob: -7.399242401123047
    10. 'strip' → logprob: -7.774242401123047

Token 686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010033363476395607
    2. '.strip' → logprob: -5.260033130645752
    3. ' =' → logprob: -5.510033130645752
    4. '_strip' → logprob: -7.510033130645752
    5. 'strip' → logprob: -8.88503360748291
    6. '=line' → logprob: -10.51003360748291
    7. '=str' → logprob: -11.63503360748291
    8. '.rstrip' → logprob: -11.76003360748291
    9. '.' → logprob: -12.26003360748291
    10. '_str' → logprob: -12.76003360748291

Token 687: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0031777136027812958
    2. ' line' → logprob: -5.753177642822266
    3. '=line' → logprob: -17.753177642822266
    4. '(line' → logprob: -18.003177642822266
    5. '#line' → logprob: -18.753177642822266
    6. '	line' → logprob: -19.128177642822266
    7. 'Line' → logprob: -19.253177642822266
    8. '[line' → logprob: -20.378177642822266
    9. 'lin' → logprob: -21.003177642822266
    10. 'lines' → logprob: -22.253177642822266

Token 688: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0010524577228352427
    2. '.rstrip' → logprob: -7.376052379608154
    3. '.' → logprob: -7.876052379608154
    4. 'strip' → logprob: -10.001052856445312
    5. 'rstrip' → logprob: -15.126052856445312
    6. ' strip' → logprob: -15.376052856445312
    7. '_strip' → logprob: -16.001052856445312
    8. ' .' → logprob: -16.501052856445312
    9. '.readline' → logprob: -17.376052856445312
    10. '.l' → logprob: -17.501052856445312

Token 689: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020390336867421865
    2. 'if' → logprob: -7.002038955688477
    3. ' if' → logprob: -7.877038955688477
    4. '<|end|>' → logprob: -8.127038955688477
    5. '<|end|>' → logprob: -9.002038955688477
    6. '       ' → logprob: -9.377038955688477
    7. '               ' → logprob: -9.627038955688477
    8. ',' → logprob: -10.252038955688477
    9. '            
' → logprob: -10.377038955688477
    10. ':' → logprob: -11.127038955688477

Token 690: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8193366486229934e-05
    2. '<|end|>' → logprob: -12.000018119812012
    3. 'if' → logprob: -12.750018119812012
    4. ' if' → logprob: -13.000018119812012
    5. '            
' → logprob: -13.625018119812012
    6. '       ' → logprob: -13.625018119812012
    7. '	       ' → logprob: -13.750018119812012
    8. '<|end|>' → logprob: -14.125018119812012
    9. ',' → logprob: -14.375018119812012
    10. '		' → logprob: -14.750018119812012

Token 691: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.704065213445574e-05
    2. '           ' → logprob: -10.125046730041504
    3. ' if' → logprob: -11.875046730041504
    4. '       ' → logprob: -18.25004768371582
    5. 'yield' → logprob: -18.25004768371582
    6. '```' → logprob: -19.00004768371582
    7. 'If' → logprob: -19.12504768371582
    8. '   ' → logprob: -19.37504768371582
    9. ';if' → logprob: -19.37504768371582
    10. '	if' → logprob: -19.50004768371582

Token 692: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5817474126815796
    2. 'not' → logprob: -0.8317474126815796
    3. 'line' → logprob: -5.331747531890869
    4. ' line' → logprob: -6.956747531890869
    5. ' ' → logprob: -13.581747055053711
    6. '   ' → logprob: -15.081747055053711
    7. 'no' → logprob: -15.206747055053711
    8. '```' → logprob: -15.331747055053711
    9. '	not' → logprob: -15.581747055053711
    10. '
' → logprob: -15.956747055053711

Token 693: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6327342987060547
    2. '==' → logprob: -0.7577342987060547
    3. '.startswith' → logprob: -9.882734298706055
    4. '=' → logprob: -10.882734298706055
    5. ':' → logprob: -11.007734298706055
    6. '===' → logprob: -11.382734298706055
    7. '==
' → logprob: -11.882734298706055
    8. ']==' → logprob: -12.132734298706055
    9. ')==' → logprob: -12.257734298706055
    10. '()==' → logprob: -12.257734298706055

Token 694: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6210839748382568
    2. '""' → logprob: -0.8710839748382568
    3. '"' → logprob: -3.621083974838257
    4. ''' → logprob: -4.746084213256836
    5. '"":' → logprob: -4.746084213256836
    6. '"",' → logprob: -12.746084213256836
    7. ' ""' → logprob: -13.121084213256836
    8. ''',' → logprob: -13.371084213256836
    9. ''ex' → logprob: -13.871084213256836
    10. '''
' → logprob: -13.871084213256836

Token 695: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8603347539901733
    2. '':' → logprob: -0.9853347539901733
    3. ''' → logprob: -2.485334873199463
    4. 'END' → logprob: -2.735334873199463
    5. '':
' → logprob: -3.235334873199463
    6. '''' → logprob: -5.110334873199463
    7. 'end' → logprob: -6.235334873199463
    8. '-' → logprob: -6.985334873199463
    9. 'Q' → logprob: -7.235334873199463
    10. 'EOF' → logprob: -7.360334873199463

Token 696: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5781663656234741
    2. '':' → logprob: -0.8281663656234741
    3. '':
' → logprob: -6.203166484832764
    4. ''' → logprob: -8.703166007995605
    5. ':' → logprob: -11.078166007995605
    6. ''):
' → logprob: -11.828166007995605
    7. '           ' → logprob: -12.578166007995605
    8. ':
' → logprob: -13.203166007995605
    9. '\n' → logprob: -13.703166007995605
    10. '       ' → logprob: -13.828166007995605

Token 697: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004025481757707894
    2. '           ' → logprob: -8.375402450561523
    3. 'break' → logprob: -9.625402450561523
    4. 'return' → logprob: -10.125402450561523
    5. '                   ' → logprob: -10.625402450561523
    6. ' break' → logprob: -10.875402450561523
    7. ':return' → logprob: -12.125402450561523
    8. '	           ' → logprob: -12.500402450561523
    9. '```' → logprob: -13.125402450561523
    10. '              ' → logprob: -13.125402450561523

Token 698: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.09626534581184387
    2. 'return' → logprob: -2.5962653160095215
    3. ' break' → logprob: -4.8462653160095215
    4. '               ' → logprob: -4.8462653160095215
    5. '                   ' → logprob: -6.5962653160095215
    6. ' return' → logprob: -8.97126579284668
    7. '	break' → logprob: -11.97126579284668
    8. '                       ' → logprob: -12.34626579284668
    9. '
' → logprob: -12.84626579284668
    10. '```' → logprob: -13.34626579284668

Token 699: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008272562408819795
    2. '            
' → logprob: -7.250827312469482
    3. '<|end|>' → logprob: -10.000826835632324
    4. '
' → logprob: -11.000826835632324
    5. '          ' → logprob: -11.500826835632324
    6. 'yield' → logprob: -11.750826835632324
    7. '       ' → logprob: -11.750826835632324
    8. '            ' → logprob: -12.125826835632324
    9. '               ' → logprob: -12.250826835632324
    10. '		' → logprob: -12.625826835632324

Token 700: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6405310816480778e-05
    2. 'yield' → logprob: -11.750016212463379
    3. '            
' → logprob: -12.875016212463379
    4. '       ' → logprob: -13.250016212463379
    5. '          ' → logprob: -13.625016212463379
    6. ' yield' → logprob: -13.875016212463379
    7. '```' → logprob: -14.500016212463379
    8. '		' → logprob: -14.625016212463379
    9. '<|end|>' → logprob: -15.500016212463379
    10. '	       ' → logprob: -15.625016212463379

Token 701: ' try' (ID: 2075)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1306721270084381
    2. '           ' → logprob: -2.3806722164154053
    3. 'yield' → logprob: -4.005671977996826
    4. 'try' (adapté à ' try') → logprob: -5.130671977996826
    5. 'number' → logprob: -5.630671977996826
    6. 'n' → logprob: -6.880671977996826
    7. 'if' → logprob: -7.505671977996826
    8. ' num' → logprob: -8.255672454833984
    9. '       ' → logprob: -8.380672454833984
    10. 'value' → logprob: -9.255672454833984

Token 702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055737268179655075
    2. ':
' → logprob: -3.305737257003784
    3. '               ' → logprob: -4.055737495422363
    4. '           ' → logprob: -8.805737495422363
    5. ' :' → logprob: -10.805737495422363
    6. '       ' → logprob: -10.805737495422363
    7. '):
' → logprob: -12.180737495422363
    8. '   ' → logprob: -12.430737495422363
    9. '):' → logprob: -12.805737495422363
    10. '              ' → logprob: -12.930737495422363

Token 703: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03405239060521126
    2. ':' → logprob: -3.5340523719787598
    3. ':
' → logprob: -6.65905237197876
    4. 'int' → logprob: -6.90905237197876
    5. '           ' → logprob: -7.40905237197876
    6. '   ' → logprob: -8.284052848815918
    7. ':int' → logprob: -8.409052848815918
    8. 'num' → logprob: -8.534052848815918
    9. '              ' → logprob: -8.784052848815918
    10. '	           ' → logprob: -9.034052848815918

Token 704: ' val' (ID: 1459)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.012882540933787823
    2. 'n' → logprob: -4.637882709503174
    3. '                   ' → logprob: -6.262882709503174
    4. 'number' → logprob: -7.262882709503174
    5. ' num' → logprob: -7.887882709503174
    6. 'value' → logprob: -9.387882232666016
    7. '   ' → logprob: -10.387882232666016
    8. ' n' → logprob: -11.887882232666016
    9. '	num' → logprob: -12.262882232666016
    10. '               ' → logprob: -12.262882232666016

Token 705: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07909423857927322
    2. '=' → logprob: -2.579094171524048
    3. '=int' → logprob: -8.954093933105469
    4. '               ' → logprob: -10.579093933105469
    5. ':' → logprob: -10.829093933105469
    6. '                   ' → logprob: -11.829093933105469
    7. '           ' → logprob: -11.829093933105469
    8. '   ' → logprob: -12.204093933105469
    9. '       ' → logprob: -13.329093933105469
    10. 'u' → logprob: -14.079093933105469

Token 706: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004080062732100487
    2. ' int' → logprob: -5.504080295562744
    3. '[int' → logprob: -14.504079818725586
    4. '                   ' → logprob: -14.754079818725586
    5. '(int' → logprob: -15.254079818725586
    6. '   ' → logprob: -15.504079818725586
    7. '	int' → logprob: -16.129079818725586
    8. ':int' → logprob: -16.254079818725586
    9. '               ' → logprob: -17.004079818725586
    10. '=int' → logprob: -17.129079818725586

Token 707: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.250000953674316
    3. 'line' → logprob: -15.125000953674316
    4. ' line' → logprob: -17.000001907348633
    5. '#line' → logprob: -17.875001907348633
    6. '[line' → logprob: -18.500001907348633
    7. '=line' → logprob: -18.500001907348633
    8. ',line' → logprob: -20.125001907348633
    9. '(
' → logprob: -20.375001907348633
    10. '(Line' → logprob: -21.625001907348633

Token 708: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029820039868354797
    2. ')
' → logprob: -3.529819965362549
    3. '               ' → logprob: -9.904820442199707
    4. '           ' → logprob: -11.404820442199707
    5. ')
' → logprob: -11.904820442199707
    6. ')`
' → logprob: -14.279820442199707
    7. '                   ' → logprob: -15.029820442199707
    8. ' )' → logprob: -15.279820442199707
    9. ')`' → logprob: -15.904820442199707
    10. ')

' → logprob: -16.40481948852539

Token 709: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013953536108601838
    2. '           ' → logprob: -9.500139236450195
    3. '                
' → logprob: -10.500139236450195
    4. '                ' → logprob: -11.625139236450195
    5. 'except' → logprob: -11.750139236450195
    6. '              ' → logprob: -12.000139236450195
    7. '                   ' → logprob: -12.125139236450195
    8. ' except' → logprob: -12.375139236450195
    9. '	           ' → logprob: -14.250139236450195
    10. '<|end|>' → logprob: -14.375139236450195

Token 710: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5647985935211182
    2. ' yield' → logprob: -1.3147985935211182
    3. 'yield' → logprob: -1.8147985935211182
    4. '	yield' → logprob: -9.189798355102539
    5. '           ' → logprob: -11.189798355102539
    6. 'if' (adapté à ' if') → logprob: -12.939798355102539
    7. ' if' → logprob: -13.314798355102539
    8. 'result' → logprob: -13.564798355102539
    9. 'Yield' → logprob: -13.939798355102539
    10. '                
' → logprob: -14.064798355102539

Token 711: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0635794997215271
    2. ' val' → logprob: -2.813579559326172
    3. '0' → logprob: -6.563579559326172
    4. '1' → logprob: -8.688579559326172
    5. ' ' → logprob: -10.813579559326172
    6. '	val' → logprob: -12.063579559326172
    7. '   ' → logprob: -12.813579559326172
    8. '(val' → logprob: -14.188579559326172
    9. '           ' → logprob: -14.688579559326172
    10. 'not' → logprob: -15.438579559326172

Token 712: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3218570351600647
    2. '>' → logprob: -1.94685697555542
    3. ' >=' → logprob: -2.82185697555542
    4. ' <=' → logprob: -2.94685697555542
    5. '>=' → logprob: -4.57185697555542
    6. ' <' → logprob: -5.19685697555542
    7. '<=' → logprob: -5.69685697555542
    8. '<' → logprob: -7.19685697555542
    9. '<|end|>' → logprob: -8.071857452392578
    10. ' ' → logprob: -9.321857452392578

Token 713: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07080218940973282
    2. 'Prime' → logprob: -2.8208022117614746
    3. ' ' → logprob: -4.945802211761475
    4. ' Prime' → logprob: -6.445802211761475
    5. '1' → logprob: -10.570801734924316
    6. 'self' → logprob: -11.445801734924316
    7. '999' → logprob: -11.820801734924316
    8. '   ' → logprob: -12.445801734924316
    9. 'prime' → logprob: -12.508301734924316
    10. '100' → logprob: -12.820801734924316

Token 714: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0901385173201561
    2. 'Prime' → logprob: -2.4651384353637695
    3. ' ' → logprob: -7.3401384353637695
    4. '1' → logprob: -8.34013843536377
    5. ' Prime' → logprob: -8.46513843536377
    6. '2' → logprob: -10.84013843536377
    7. '999' → logprob: -11.46513843536377
    8. 'prime' → logprob: -12.15263843536377
    9. '100' → logprob: -12.27763843536377
    10. 'self' → logprob: -12.59013843536377

Token 715: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2898957431316376
    2. ':
' → logprob: -1.41489577293396
    3. ' and' → logprob: -5.164895534515381
    4. '               ' → logprob: -6.664895534515381
    5. '                   ' → logprob: -7.039895534515381
    6. '           ' → logprob: -7.539895534515381
    7. 'and' → logprob: -8.914896011352539
    8. '                       ' → logprob: -10.289896011352539
    9. '):
' → logprob: -10.414896011352539
    10. ',' → logprob: -10.664896011352539

Token 716: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016659092216286808
    2. '               ' → logprob: -9.000166893005371
    3. '                  ' → logprob: -11.375166893005371
    4. '                       ' → logprob: -12.000166893005371
    5. '                 ' → logprob: -12.125166893005371
    6. '                    
' → logprob: -12.250166893005371
    7. '	               ' → logprob: -12.750166893005371
    8. ':' → logprob: -13.375166893005371
    9. '                    ' → logprob: -13.625166893005371
    10. ',' → logprob: -13.875166893005371

Token 717: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.2699497640132904
    2. 'yield' (adapté à ' yield') → logprob: -1.6449497938156128
    3. '                   ' → logprob: -3.6449496746063232
    4. '               ' → logprob: -4.769949913024902
    5. '	yield' → logprob: -4.894949913024902
    6. '                       ' → logprob: -6.644949913024902
    7. '	               ' → logprob: -10.269949913024902
    8. ' ' → logprob: -10.644949913024902
    9. '```' → logprob: -10.769949913024902
    10. 'Yield' → logprob: -11.144949913024902

Token 718: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1147361472249031
    2. ' val' → logprob: -2.6147360801696777
    3. 'self' → logprob: -3.3647360801696777
    4. ' self' → logprob: -7.364736080169678
    5. '                   ' → logprob: -12.739736557006836
    6. '	val' → logprob: -12.739736557006836
    7. '(val' → logprob: -15.614736557006836
    8. 'v' → logprob: -15.614736557006836
    9. '_val' → logprob: -15.739736557006836
    10. '                    
' → logprob: -15.989736557006836

Token 719: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 720: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.280556321144104
    2. '<|end|>' → logprob: -1.530556321144104
    3. '                ' → logprob: -4.4055562019348145
    4. '           ' → logprob: -4.9055562019348145
    5. ' ' → logprob: -5.7805562019348145
    6. '<|end|>' → logprob: -7.1555562019348145
    7. '        ' → logprob: -7.2805562019348145
    8. '            ' → logprob: -7.4055562019348145
    9. '              ' → logprob: -7.5305562019348145
    10. '			' → logprob: -7.5305562019348145

Token 721: ' except' (ID: 6384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 722: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.11330417543649673
    2. ' Value' → logprob: -2.2383041381835938
    3. '(Value' → logprob: -7.988304138183594
    4. '	Value' → logprob: -9.738304138183594
    5. '.Value' → logprob: -10.613304138183594
    6. '<Value' → logprob: -10.863304138183594
    7. '<|end|>' → logprob: -11.238304138183594
    8. '_value' → logprob: -11.488304138183594
    9. '_Value' → logprob: -11.863304138183594
    10. ' ' → logprob: -12.113304138183594

Token 723: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.10020893067121506
    2. 'rror' → logprob: -2.3502089977264404
    3. 'LError' → logprob: -13.85020923614502
    4. 'SError' → logprob: -13.97520923614502
    5. 'Value' → logprob: -15.35020923614502
    6. '_Error' → logprob: -16.350208282470703
    7. 'error' → logprob: -16.600208282470703
    8. 'alue' → logprob: -17.225208282470703
    9. '.Error' → logprob: -17.475208282470703
    10. '	Error' → logprob: -17.600208282470703

Token 724: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052076708525419235
    2. '               ' → logprob: -5.755207538604736
    3. ':
' → logprob: -6.630207538604736
    4. '           ' → logprob: -7.505207538604736
    5. '<|end|>' → logprob: -9.630208015441895
    6. ' continue' → logprob: -11.255208015441895
    7. '):' → logprob: -11.505208015441895
    8. '       ' → logprob: -11.755208015441895
    9. '[' → logprob: -11.755208015441895
    10. ',' → logprob: -11.755208015441895

Token 725: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0433870293200016
    2. ':' → logprob: -3.918386936187744
    3. ' continue' → logprob: -4.043386936187744
    4. '           ' → logprob: -6.043386936187744
    5. 'continue' → logprob: -6.543386936187744
    6. '	continue' → logprob: -8.043387413024902
    7. '<|end|>' → logprob: -9.043387413024902
    8. '			' → logprob: -9.168387413024902
    9. ' continues' → logprob: -9.418387413024902
    10. '	           ' → logprob: -9.543387413024902

Token 726: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6063637137413025
    2. ' continue' → logprob: -1.1063637733459473
    3. '               ' → logprob: -2.1063637733459473
    4. '           ' → logprob: -6.856363773345947
    5. ' pass' → logprob: -7.231363773345947
    6. 'pass' → logprob: -8.106363296508789
    7. '                   ' → logprob: -9.231363296508789
    8. 'return' → logprob: -10.481363296508789
    9. 'break' → logprob: -11.856363296508789
    10. ' return' → logprob: -12.231363296508789

Token 727: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11137200146913528
    2. '<|end|>' → logprob: -2.4863719940185547
    3. '    
' → logprob: -4.736371994018555
    4. '
' → logprob: -4.861371994018555
    5. '<|end|>' → logprob: -5.361371994018555
    6. '  
' → logprob: -8.611371994018555
    7. '        
' → logprob: -8.611371994018555
    8. 'def' → logprob: -9.236371994018555
    9. ' ' → logprob: -9.361371994018555
    10. ' 
' → logprob: -9.361371994018555

Token 728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10668555647134781
    2. '<|end|>' → logprob: -2.4816856384277344
    3. 'def' → logprob: -4.106685638427734
    4. '```' → logprob: -7.981685638427734
    5. 'class' → logprob: -8.231685638427734
    6. ' ' → logprob: -8.606685638427734
    7. '#' → logprob: -8.981685638427734
    8. '<|end|>' → logprob: -8.981685638427734
    9. '  ' → logprob: -10.856685638427734
    10. '
' → logprob: -11.106685638427734

Token 729: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022733660880476236
    2. '   ' → logprob: -6.1272735595703125
    3. '<|end|>' → logprob: -9.877273559570312
    4. ' def' → logprob: -10.752273559570312
    5. 'class' → logprob: -11.627273559570312
    6. '	def' → logprob: -13.252273559570312
    7. ' ' → logprob: -13.752273559570312
    8. '#' → logprob: -13.752273559570312
    9. '```' → logprob: -14.502273559570312
    10. 'from' → logprob: -14.627273559570312

Token 730: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0023654208052903414
    2. ' process' → logprob: -6.627365589141846
    3. 'output' → logprob: -7.377365589141846
    4. 'print' → logprob: -8.377365112304688
    5. 'format' → logprob: -9.627365112304688
    6. 'handle' → logprob: -10.377365112304688
    7. 'produce' → logprob: -10.502365112304688
    8. 'run' → logprob: -11.127365112304688
    9. 'iter' → logprob: -11.377365112304688
    10. 'generate' → logprob: -12.127365112304688

Token 731: '(self' (ID: 2402)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0595276355743408
    2. '(self' → logprob: -1.1845276355743408
    3. '_inputs' → logprob: -1.5595276355743408
    4. '_queries' → logprob: -2.309527635574341
    5. '_query' → logprob: -3.934527635574341
    6. '(' → logprob: -4.684527397155762
    7. '_line' → logprob: -5.684527397155762
    8. '_' → logprob: -5.809527397155762
    9. '_values' → logprob: -6.809527397155762
    10. '_numbers' → logprob: -7.434527397155762

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6122499108314514
    2. '_inputs' → logprob: -1.4872498512268066
    3. '_input' → logprob: -1.6122498512268066
    4. ')' → logprob: -4.487249851226807
    5. 'inputs' → logprob: -5.112249851226807
    6. '_' → logprob: -5.237249851226807
    7. '_line' → logprob: -6.112249851226807
    8. '):' → logprob: -6.612249851226807
    9. '   ' → logprob: -6.737249851226807
    10. 'input' → logprob: -7.362249851226807

Token 733: ' inputs' (ID: 21963)
  Prédit: 'inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inputs' → logprob: -0.10112474113702774
    2. ' inputs' → logprob: -2.3511247634887695
    3. 'input' → logprob: -7.1011247634887695
    4. ' input' → logprob: -10.10112476348877
    5. 'lines' → logprob: -10.47612476348877
    6. ' lines' → logprob: -11.47612476348877
    7. 'outputs' → logprob: -12.85112476348877
    8. 'self' → logprob: -13.47612476348877
    9. '   ' → logprob: -13.60112476348877
    10. 'queries' → logprob: -13.72612476348877

Token 734: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19839772582054138
    2. ',' → logprob: -1.9483977556228638
    3. '       ' → logprob: -4.323397636413574
    4. ')' → logprob: -4.698397636413574
    5. '   ' → logprob: -5.198397636413574
    6. '):' → logprob: -5.573397636413574
    7. '(self' → logprob: -5.698397636413574
    8. 'self' → logprob: -6.323397636413574
    9. ' (' → logprob: -8.573397636413574
    10. ' :' → logprob: -9.073397636413574

Token 735: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.024811390787363052
    2. ' Iterator' → logprob: -4.399811267852783
    3. 'inputs' → logprob: -4.649811267852783
    4. 'self' → logprob: -7.024811267852783
    5. ' inputs' → logprob: -7.149811267852783
    6. 'Iterable' → logprob: -7.399811267852783
    7. 'List' → logprob: -8.649811744689941
    8. 'iter' → logprob: -9.774811744689941
    9. '   ' → logprob: -9.774811744689941
    10. '	Iterator' → logprob: -10.524811744689941

Token 736: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.693147599697113
    2. '[int' → logprob: -0.693147599697113
    3. '[' → logprob: -15.693147659301758
    4. 'int' → logprob: -16.068147659301758
    5. ')' → logprob: -16.318147659301758
    6. '[List' → logprob: -16.818147659301758
    7. '[Int' → logprob: -16.818147659301758
    8. '[
' → logprob: -17.943147659301758
    9. '<int' → logprob: -18.693147659301758
    10. '
' → logprob: -18.693147659301758

Token 737: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7133641196996905e-05
    2. ' )' → logprob: -11.00002670288086
    3. '   ' → logprob: -11.75002670288086
    4. '`)' → logprob: -13.75002670288086
    5. '):
' → logprob: -14.25002670288086
    6. '])' → logprob: -15.12502670288086
    7. '       ' → logprob: -16.00002670288086
    8. '")' → logprob: -16.87502670288086
    9. '))' → logprob: -17.12502670288086
    10. ' ' → logprob: -17.12502670288086

Token 738: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6944298148155212
    2. ' ->' → logprob: -0.9444298148155212
    3. '       ' → logprob: -2.444429874420166
    4. ':' → logprob: -4.694429874420166
    5. ')' → logprob: -5.444429874420166
    6. '   ' → logprob: -5.819429874420166
    7. '(' → logprob: -6.319429874420166
    8. ')->' → logprob: -6.444429874420166
    9. '()->' → logprob: -6.569429874420166
    10. ':
' → logprob: -6.569429874420166

Token 739: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.2216150015592575
    2. ' Iterator' → logprob: -1.846614956855774
    3. 'List' → logprob: -3.2216150760650635
    4. ' List' → logprob: -6.846614837646484
    5. 'int' → logprob: -10.596614837646484
    6. 'None' → logprob: -11.971614837646484
    7. '	Iterator' → logprob: -12.096614837646484
    8. 'list' → logprob: -12.471614837646484
    9. 'Iterable' → logprob: -12.596614837646484
    10. 'Generator' → logprob: -13.221614837646484

Token 740: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.981667537620524e-06
    2. 'int' → logprob: -13.250001907348633
    3. '[' → logprob: -16.750001907348633
    4. '[str' → logprob: -17.875001907348633
    5. '[Int' → logprob: -18.750001907348633
    6. '<int' → logprob: -19.125001907348633
    7. '[
' → logprob: -20.500001907348633
    8. '[in' → logprob: -20.625001907348633
    9. '   ' → logprob: -21.250001907348633
    10. '(int' → logprob: -21.750001907348633

Token 741: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05441511422395706
    2. '   ' → logprob: -3.929415225982666
    3. ']:
' → logprob: -3.929415225982666
    4. '       ' → logprob: -5.429415225982666
    5. '):' → logprob: -5.679415225982666
    6. ':
' → logprob: -5.679415225982666
    7. ':' → logprob: -6.929415225982666
    8. '():
' → logprob: -7.054415225982666
    9. ']:' → logprob: -7.804415225982666
    10. ')' → logprob: -9.679414749145508

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.727905979962088e-05
    2. ' for' → logprob: -10.00004768371582
    3. 'for' → logprob: -13.75004768371582
    4. '   ' → logprob: -14.87504768371582
    5. '```' → logprob: -15.25004768371582
    6. ':' → logprob: -16.75004768371582
    7. '      ' → logprob: -16.87504768371582
    8. '        
' → logprob: -17.12504768371582
    9. '           ' → logprob: -17.25004768371582
    10. ',' → logprob: -17.75004768371582

Token 743: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016673624515533447
    2. 'for' (adapté à ' for') → logprob: -4.266673564910889
    3. ' for' → logprob: -6.016673564910889
    4. '   ' → logprob: -9.641674041748047
    5. 'from' → logprob: -13.266674041748047
    6. ' ' → logprob: -14.266674041748047
    7. '	for' → logprob: -14.641674041748047
    8. '      ' → logprob: -14.766674041748047
    9. '           ' → logprob: -14.891674041748047
    10. '     ' → logprob: -16.016674041748047

Token 744: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.001021736185066402
    2. 'val' → logprob: -7.001021862030029
    3. ' num' → logprob: -9.626021385192871
    4. 'number' → logprob: -10.501021385192871
    5. 'value' → logprob: -11.876021385192871
    6. 'query' → logprob: -12.001021385192871
    7. 'n' → logprob: -13.126021385192871
    8. ' val' → logprob: -14.126021385192871
    9. '   ' → logprob: -14.626021385192871
    10. '       ' → logprob: -16.001022338867188

Token 745: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011057964526116848
    2. 'in' → logprob: -4.5110578536987305
    3. '	in' → logprob: -12.13605785369873
    4. '        ' → logprob: -14.38605785369873
    5. ' ' → logprob: -14.51105785369873
    6. '       ' → logprob: -14.76105785369873
    7. ' ' → logprob: -14.88605785369873
    8. '    ' → logprob: -15.13605785369873
    9. '_in' → logprob: -15.13605785369873
    10. '   ' → logprob: -15.13605785369873

Token 746: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20162977278232574
    2. ' self' → logprob: -1.7016297578811646
    3. 'inputs' → logprob: -8.701629638671875
    4. '       ' → logprob: -10.326629638671875
    5. ' inputs' → logprob: -11.451629638671875
    6. '(self' → logprob: -12.451629638671875
    7. '	self' → logprob: -13.326629638671875
    8. '           ' → logprob: -14.201629638671875
    9. '   ' → logprob: -15.826629638671875
    10. ' ' → logprob: -15.826629638671875

Token 747: '.iter' (ID: 42608)
  Prédit: '.context'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.context' → logprob: -0.0017446773126721382
    2. 'context' → logprob: -6.376744747161865
    3. '.inputs' → logprob: -11.126744270324707
    4. '.iter' → logprob: -11.876744270324707
    5. '<context' → logprob: -12.126744270324707
    6. '(context' → logprob: -12.626744270324707
    7. '	context' → logprob: -12.751744270324707
    8. '=context' → logprob: -13.001744270324707
    9. '.' → logprob: -13.501744270324707
    10. '   ' → logprob: -13.751744270324707

Token 748: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.153795766294934e-06
    2. '_inputs' → logprob: -12.250005722045898
    3. 'input' → logprob: -13.750005722045898
    4. '(input' → logprob: -15.875005722045898
    5. '_output' → logprob: -16.7500057220459
    6. '_' → logprob: -17.0000057220459
    7. 'put' → logprob: -17.2500057220459
    8. 'inputs' → logprob: -17.6250057220459
    9. '_in' → logprob: -18.8750057220459
    10. '_INPUT' → logprob: -19.0000057220459

Token 749: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -1.306760805164231e-05
    2. ' (' → logprob: -11.50001335144043
    3. '(outputs' → logprob: -13.62501335144043
    4. 'inputs' → logprob: -13.75001335144043
    5. '(input' → logprob: -15.87501335144043
    6. '(' → logprob: -15.87501335144043
    7. '       ' → logprob: -16.37501335144043
    8. ',' → logprob: -16.50001335144043
    9. '(objects' → logprob: -17.00001335144043
    10. '   ' → logprob: -17.12501335144043

Token 750: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0453614667057991
    2. '):' → logprob: -3.1703615188598633
    3. '       ' → logprob: -6.170361518859863
    4. ':' → logprob: -9.420361518859863
    5. '):
' → logprob: -9.545361518859863
    6. '():
' → logprob: -9.920361518859863
    7. '   ' → logprob: -10.420361518859863
    8. ':
' → logprob: -10.670361518859863
    9. '           ' → logprob: -11.670361518859863
    10. '():' → logprob: -13.795361518859863

Token 751: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007474825251847506
    2. '       ' → logprob: -5.757474899291992
    3. 'yield' → logprob: -6.382474899291992
    4. ':' → logprob: -7.257474899291992
    5. ':
' → logprob: -7.257474899291992
    6. 'return' → logprob: -8.007474899291992
    7. '```' → logprob: -8.257474899291992
    8. ' yield' → logprob: -9.007474899291992
    9. ',' → logprob: -9.257474899291992
    10. ' return' → logprob: -9.507474899291992

Token 752: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.47515204548835754
    2. 'yield' (adapté à ' yield') → logprob: -1.2251520156860352
    3. '           ' → logprob: -2.475152015686035
    4. '	yield' → logprob: -8.350152015686035
    5. '               ' → logprob: -9.600152015686035
    6. '
' → logprob: -10.475152015686035
    7. 'Yield' → logprob: -12.350152015686035
    8. 'y' → logprob: -12.600152015686035
    9. '```' → logprob: -12.850152015686035
    10. 'result' → logprob: -13.850152015686035

Token 753: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022422909736633
    2. ' self' → logprob: -1.910224199295044
    3. '(self' → logprob: -16.16022491455078
    4. '	self' → logprob: -18.91022491455078
    5. '[self' → logprob: -19.28522491455078
    6. '=self' → logprob: -19.66022491455078
    7. ' ' → logprob: -20.41022491455078
    8. '
' → logprob: -20.66022491455078
    9. '           ' → logprob: -20.66022491455078
    10. ' ' → logprob: -20.66022491455078

Token 754: '.context' (ID: 14007)
  Prédit: '.context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.context' → logprob: -0.0002636006975080818
    2. 'context' → logprob: -8.250263214111328
    3. '<context' → logprob: -13.500263214111328
    4. '=context' → logprob: -14.750263214111328
    5. '.' → logprob: -15.625263214111328
    6. '"context' → logprob: -16.125263214111328
    7. ' .' → logprob: -16.625263214111328
    8. '	context' → logprob: -16.875263214111328
    9. ' context' → logprob: -17.750263214111328
    10. '.con' → logprob: -18.375263214111328

Token 755: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -2.4987974029500037e-05
    2. '.' → logprob: -10.750024795532227
    3. ' .' → logprob: -12.625024795532227
    4. 'query' → logprob: -15.375024795532227
    5. ' query' → logprob: -17.500024795532227
    6. '	query' → logprob: -17.750024795532227
    7. '.Query' → logprob: -18.375024795532227
    8. '_query' → logprob: -19.875024795532227
    9. '=query' → logprob: -20.000024795532227
    10. '.q' → logprob: -20.375024795532227

Token 756: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.375000953674316
    3. '_g' → logprob: -16.375
    4. 'gap' → logprob: -19.875
    5. '```' → logprob: -20.375
    6. ' _' → logprob: -20.75
    7. 'Gap' → logprob: -20.875
    8. ' gap' → logprob: -21.125
    9. '_ga' → logprob: -21.125
    10. '_gate' → logprob: -21.25

Token 757: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.2664456789934775e-06
    2. '_l' → logprob: -13.875000953674316
    3. '_le' → logprob: -15.750000953674316
    4. '_' → logprob: -16.000001907348633
    5. ' _' → logprob: -18.625001907348633
    6. '_len' → logprob: -18.625001907348633
    7. '_lengths' → logprob: -19.125001907348633
    8. '_LENGTH' → logprob: -20.250001907348633
    9. '       ' → logprob: -20.500001907348633
    10. '```' → logprob: -20.625001907348633

Token 758: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. '(n' → logprob: -14.875059127807617
    4. ' (' → logprob: -16.125059127807617
    5. '(number' → logprob: -16.750059127807617
    6. '(
' → logprob: -17.000059127807617
    7. '[num' → logprob: -17.125059127807617
    8. 'num' → logprob: -17.250059127807617
    9. '(nums' → logprob: -18.500059127807617
    10. ',num' → logprob: -18.750059127807617

Token 759: ')

' (ID: 1029)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.47492289543151855
    2. ')' → logprob: -0.9749228954315186
    3. ',num' → logprob: -7.849923133850098
    4. ')
' → logprob: -8.599923133850098
    5. '[num' → logprob: -8.724923133850098
    6. '(' → logprob: -10.099923133850098
    7. 'num' → logprob: -10.849923133850098
    8. '   ' → logprob: -11.099923133850098
    9. ',' → logprob: -11.849923133850098
    10. '	num' → logprob: -12.224923133850098

Token 760: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001183204003609717
    2. ' run' → logprob: -6.876183032989502
    3. ' solve' → logprob: -10.00118350982666
    4. ' test' → logprob: -10.37618350982666
    5. 'main' → logprob: -10.62618350982666
    6. ' process' → logprob: -11.00118350982666
    7. ' _' → logprob: -11.25118350982666
    8. '_main' → logprob: -11.62618350982666
    9. '_' → logprob: -12.50118350982666
    10. ' __' → logprob: -13.37618350982666

Token 762: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.865583706414327e-05
    2. '():
' → logprob: -9.37509822845459
    3. ' ():' → logprob: -11.75009822845459
    4. '()' → logprob: -12.12509822845459
    5. '(' → logprob: -15.62509822845459
    6. '():
' → logprob: -16.125099182128906
    7. '():

' → logprob: -17.000099182128906
    8. '_' → logprob: -17.000099182128906
    9. '()>' → logprob: -17.250099182128906
    10. '(argv' → logprob: -17.250099182128906

Token 763: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1425073742866516
    2. ' context' → logprob: -2.642507314682007
    3. 'import' → logprob: -3.142507314682007
    4. 'context' → logprob: -4.517507553100586
    5. '   ' → logprob: -4.892507553100586
    6. ' ctx' → logprob: -11.642507553100586
    7. 'ctx' → logprob: -11.767507553100586
    8. '_context' → logprob: -11.892507553100586
    9. ' input' → logprob: -12.142507553100586
    10. '	import' → logprob: -12.642507553100586

Token 764: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.04894670844078064
    2. 'context' → logprob: -3.0489466190338135
    3. ' import' → logprob: -8.048946380615234
    4. '   ' → logprob: -10.423946380615234
    5. 'ctx' → logprob: -12.173946380615234
    6. ' context' → logprob: -12.423946380615234
    7. 'from' → logprob: -14.173946380615234
    8. '	import' → logprob: -16.548946380615234
    9. '_context' → logprob: -16.923946380615234
    10. '```' → logprob: -16.923946380615234

Token 765: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.7697225252486533e-06
    2. ' sys' → logprob: -12.500003814697266
    3. '=sys' → logprob: -18.250003814697266
    4. '	sys' → logprob: -19.625003814697266
    5. '(sys' → logprob: -20.750003814697266
    6. 'io' → logprob: -21.000003814697266
    7. '.sys' → logprob: -22.000003814697266
    8. 'stdin' → logprob: -22.125003814697266
    9. 'os' → logprob: -22.375003814697266
    10. '```' → logprob: -22.625003814697266

Token 766: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045611027628183365
    2. '    
' → logprob: -3.7956111431121826
    3. 'input' → logprob: -4.1706109046936035
    4. '
' → logprob: -5.6706109046936035
    5. 'inputs' → logprob: -6.2956109046936035
    6. 'for' → logprob: -7.0456109046936035
    7. ' for' → logprob: -8.795611381530762
    8. ' input' → logprob: -9.045611381530762
    9. '<|end|>' → logprob: -9.420611381530762
    10. '```' → logprob: -10.295611381530762

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0892491564154625
    2. 'inputs' → logprob: -2.7142491340637207
    3. ' inputs' → logprob: -4.714249134063721
    4. 'input' → logprob: -5.089249134063721
    5. 'context' → logprob: -6.339249134063721
    6. ' input' → logprob: -6.839249134063721
    7. ' for' → logprob: -7.714249134063721
    8. 'for' → logprob: -7.839249134063721
    9. ' context' → logprob: -8.339249610900879
    10. '    
' → logprob: -10.339249610900879

Token 768: ' context' (ID: 3814)
  Prédit: 'context'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' (adapté à ' context') → logprob: -0.022726934403181076
    2. '   ' → logprob: -4.522727012634277
    3. ' context' → logprob: -4.772727012634277
    4. 'ctx' → logprob: -6.397727012634277
    5. 'inputs' → logprob: -7.147727012634277
    6. 'input' → logprob: -7.397727012634277
    7. 'for' → logprob: -11.022727012634277
    8. ' inputs' → logprob: -11.022727012634277
    9. ' input' → logprob: -11.522727012634277
    10. '_context' → logprob: -11.647727012634277

Token 769: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4844609498977661
    2. '=' → logprob: -0.9844609498977661
    3. '.' → logprob: -4.984460830688477
    4. '=context' → logprob: -6.109460830688477
    5. '   ' → logprob: -6.859460830688477
    6. '.context' → logprob: -9.984460830688477
    7. ',' → logprob: -10.234460830688477
    8. ' ' → logprob: -10.359460830688477
    9. '_context' → logprob: -10.609460830688477
    10. ')' → logprob: -10.609460830688477

Token 770: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.00861456897109747
    2. ' Prime' → logprob: -4.758614540100098
    3. '_prime' → logprob: -19.758615493774414
    4. 'Prim' → logprob: -19.883615493774414
    5. ' prime' → logprob: -20.633615493774414
    6. 'Primer' → logprob: -21.258615493774414
    7. '_Pr' → logprob: -21.508615493774414
    8. '   ' → logprob: -21.883615493774414
    9. 'Primary' → logprob: -21.883615493774414
    10. ' ' → logprob: -21.883615493774414

Token 771: 'Gap' (ID: 17218)
  Prédit: 'Gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gap' → logprob: -1.9361264946837764e-07
    2. '_gap' → logprob: -16.875
    3. 'gap' → logprob: -17.875
    4. ' Gap' → logprob: -18.0
    5. 'S' → logprob: -18.125
    6. 'Context' → logprob: -18.5
    7. ' gap' → logprob: -20.125
    8. 'G' → logprob: -21.0
    9. '-gap' → logprob: -21.875
    10. 'Gate' → logprob: -22.5

Token 772: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: 0.0
    2. '(Context' → logprob: -19.375
    3. 'context' → logprob: -20.25
    4. 'Con' → logprob: -20.75
    5. '	Context' → logprob: -22.375
    6. '(context' → logprob: -22.875
    7. '_Context' → logprob: -23.125
    8. 'Cont' → logprob: -23.625
    9. '_context' → logprob: -23.75
    10. ' Context' → logprob: -23.75

Token 773: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015087933279573917
    2. '
' → logprob: -6.751508712768555
    3. 'input' → logprob: -8.501508712768555
    4. '    
' → logprob: -9.126508712768555
    5. 'inputs' → logprob: -11.751508712768555
    6. ' input' → logprob: -12.251508712768555
    7. 'context' → logprob: -12.501508712768555
    8. '_input' → logprob: -13.376508712768555
    9. 'processor' → logprob: -13.501508712768555
    10. '	input' → logprob: -13.751508712768555

Token 774: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031074881553649902
    2. ' for' → logprob: -6.87810754776001
    3. '    
' → logprob: -7.25310754776001
    4. '
' → logprob: -7.75310754776001
    5. 'for' → logprob: -8.128107070922852
    6. 'input' → logprob: -8.253107070922852
    7. 'inputs' → logprob: -8.628107070922852
    8. ' input' → logprob: -8.753107070922852
    9. ' inputs' → logprob: -10.753107070922852
    10. ' lines' → logprob: -11.253107070922852

Token 775: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.17228329181671143
    2. 'input' → logprob: -2.547283172607422
    3. 'inputs' → logprob: -2.922283172607422
    4. 'results' → logprob: -4.672283172607422
    5. 'for' → logprob: -4.672283172607422
    6. '   ' → logprob: -5.672283172607422
    7. ' processor' → logprob: -6.172283172607422
    8. 'result' → logprob: -7.172283172607422
    9. 'output' → logprob: -8.422283172607422
    10. ' input' → logprob: -8.547283172607422

Token 776: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975141443312168
    2. '=' → logprob: -3.5297513008117676
    3. '.process' → logprob: -14.779751777648926
    4. '   ' → logprob: -14.779751777648926
    5. ' ' → logprob: -16.40475082397461
    6. '(process' → logprob: -16.77975082397461
    7. 'process' → logprob: -17.15475082397461
    8. '  ' → logprob: -17.52975082397461
    9. '=context' → logprob: -18.77975082397461
    10. '.' → logprob: -19.02975082397461

Token 777: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.3132617771625519
    2. ' Input' → logprob: -1.3132617473602295
    3. '	Input' → logprob: -17.938261032104492
    4. ' input' → logprob: -19.688261032104492
    5. '_Input' → logprob: -19.813261032104492
    6. '   ' → logprob: -20.063261032104492
    7. '_input' → logprob: -20.188261032104492
    8. '<Input' → logprob: -20.438261032104492
    9. ' ' → logprob: -20.813261032104492
    10. '.Input' → logprob: -22.063261032104492

Token 778: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'Process' → logprob: -19.5
    3. ' Processor' → logprob: -21.0
    4. 'processor' → logprob: -21.25
    5. ' processor' → logprob: -22.625
    6. 'Proces' → logprob: -23.125
    7. '_processor' → logprob: -23.875
    8. 'Processors' → logprob: -24.875
    9. 'Producer' → logprob: -25.75
    10. 'Processed' → logprob: -25.875

Token 779: '(context' (ID: 9395)
  Prédit: '(context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(context' → logprob: -0.051416583359241486
    2. 'context' → logprob: -3.3014166355133057
    3. '   ' → logprob: -4.551416397094727
    4. '(process' → logprob: -6.426416397094727
    5. '(sys' → logprob: -7.426416397094727
    6. 'processor' → logprob: -7.801416397094727
    7. '(
' → logprob: -10.176416397094727
    8. ' context' → logprob: -10.676416397094727
    9. '(' → logprob: -11.051416397094727
    10. ' (' → logprob: -11.926416397094727

Token 780: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04911332577466965
    2. ')' → logprob: -3.0491132736206055
    3. ',' → logprob: -8.924113273620605
    4. '(' → logprob: -8.924113273620605
    5. ')
' → logprob: -9.799113273620605
    6. '(inputs' → logprob: -9.924113273620605
    7. '    
' → logprob: -10.049113273620605
    8. '(input' → logprob: -11.049113273620605
    9. '<|end|>' → logprob: -11.299113273620605
    10. '()' → logprob: -11.424113273620605

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021507383789867163
    2. 'for' → logprob: -6.752150535583496
    3. ' for' → logprob: -7.002150535583496
    4. '
' → logprob: -10.002150535583496
    5. '    
' → logprob: -10.627150535583496
    6. 'inputs' → logprob: -15.502150535583496
    7. 'input' → logprob: -16.002151489257812
    8. '    ' → logprob: -16.627151489257812
    9. '	for' → logprob: -17.002151489257812
    10. '```' → logprob: -17.252151489257812

Token 782: ' inputs' (ID: 21963)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011216417187824845
    2. ' for' → logprob: -7.251121520996094
    3. 'results' → logprob: -8.126121520996094
    4. 'outputs' → logprob: -9.751121520996094
    5. 'result' → logprob: -10.626121520996094
    6. '   ' → logprob: -10.751121520996094
    7. 'output' → logprob: -11.751121520996094
    8. ' results' → logprob: -13.126121520996094
    9. 'inputs' (adapté à ' inputs') → logprob: -14.376121520996094
    10. ' outputs' → logprob: -14.376121520996094

Token 783: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5767209529876709
    2. '=' → logprob: -0.8267209529876709
    3. '=sys' → logprob: -7.20172119140625
    4. '=
' → logprob: -11.20172119140625
    5. 'for' → logprob: -11.45172119140625
    6. ' =
' → logprob: -12.45172119140625
    7. '_' → logprob: -12.82672119140625
    8. ' ' → logprob: -13.70172119140625
    9. '_=' → logprob: -13.95172119140625
    10. '_iter' → logprob: -14.07672119140625

Token 784: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00031699295504949987
    2. ' sys' → logprob: -8.250316619873047
    3. '(sys' → logprob: -10.000316619873047
    4. 'iter' → logprob: -11.500316619873047
    5. '	sys' → logprob: -16.250316619873047
    6. '=sys' → logprob: -17.375316619873047
    7. ' iter' → logprob: -18.500316619873047
    8. 'map' → logprob: -20.250316619873047
    9. '_sys' → logprob: -20.875316619873047
    10. '   ' → logprob: -21.375316619873047

Token 785: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.2664456789934775e-06
    2. ' line' → logprob: -13.750000953674316
    3. 'l' → logprob: -16.750001907348633
    4. 'lin' → logprob: -18.750001907348633
    5. '	line' → logprob: -19.000001907348633
    6. '(line' → logprob: -19.625001907348633
    7. '
' → logprob: -20.000001907348633
    8. 'ln' → logprob: -20.375001907348633
    9. '```' → logprob: -20.625001907348633
    10. '

' → logprob: -21.500001907348633

Token 786: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012102590873837471
    2. 'for' → logprob: -5.1371026039123535
    3. '.rstrip' → logprob: -5.1371026039123535
    4. '.strip' → logprob: -8.637102127075195
    5. '
' → logprob: -10.262102127075195
    6. '.readline' → logprob: -11.137102127075195
    7. ' ' → logprob: -11.387102127075195
    8. 'in' → logprob: -11.762102127075195
    9. '   ' → logprob: -11.887102127075195
    10. 'rstrip' → logprob: -12.012102127075195

Token 787: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.12695877254009247
    2. ' line' → logprob: -2.1269588470458984
    3. '	line' → logprob: -10.501958847045898
    4. ' ' → logprob: -13.876958847045898
    5. '(line' → logprob: -14.751958847045898
    6. '_line' → logprob: -15.376958847045898
    7. 'in' → logprob: -15.501958847045898
    8. '=line' → logprob: -15.501958847045898
    9. ' in' → logprob: -15.876958847045898
    10. '#line' → logprob: -16.2519588470459

Token 788: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22579333186149597
    2. 'in' → logprob: -1.6007933616638184
    3. 'line' → logprob: -7.975793361663818
    4. ' line' → logprob: -11.60079288482666
    5. ' ' → logprob: -11.97579288482666
    6. '	in' → logprob: -12.10079288482666
    7. 's' → logprob: -12.60079288482666
    8. '_' → logprob: -12.72579288482666
    9. ' ' → logprob: -13.10079288482666
    10. '_in' → logprob: -13.47579288482666

Token 789: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005958048277534544
    2. ' sys' → logprob: -7.875595569610596
    3. 'import' → logprob: -9.250596046447754
    4. 'open' → logprob: -9.750596046447754
    5. 'iter' → logprob: -10.375596046447754
    6. '=sys' → logprob: -11.375596046447754
    7. 's' → logprob: -12.250596046447754
    8. 'line' → logprob: -12.875596046447754
    9. 'in' → logprob: -12.875596046447754
    10. '	sys' → logprob: -13.125596046447754

Token 790: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.228561349213123e-05
    2. '.' → logprob: -10.000052452087402
    3. 'stdin' → logprob: -12.750052452087402
    4. '.stdout' → logprob: -13.000052452087402
    5. ' .' → logprob: -14.375052452087402
    6. ' stdin' → logprob: -15.000052452087402
    7. '.argv' → logprob: -15.250052452087402
    8. '.std' → logprob: -15.375052452087402
    9. '(stdin' → logprob: -16.000051498413086
    10. '.stderr' → logprob: -16.125051498413086

Token 791: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.827200897736475e-05
    2. ' )' → logprob: -9.500078201293945
    3. 'if' → logprob: -13.875078201293945
    4. '),' → logprob: -14.375078201293945
    5. 'in' → logprob: -14.750078201293945
    6. ')
' → logprob: -15.000078201293945
    7. '.readline' → logprob: -15.125078201293945
    8. ' if' → logprob: -16.125078201293945
    9. '())' → logprob: -16.250078201293945
    10. ' ' → logprob: -16.625078201293945

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025135546922683716
    2. 'for' → logprob: -4.025135517120361
    3. ' for' → logprob: -5.025135517120361
    4. '    
' → logprob: -7.900135517120361
    5. '
' → logprob: -11.77513599395752
    6. '<|end|>' → logprob: -12.15013599395752
    7. 'output' → logprob: -13.52513599395752
    8. '	for' → logprob: -13.65013599395752
    9. '        
' → logprob: -14.15013599395752
    10. ' ' → logprob: -14.15013599395752

Token 793: ' results' (ID: 4376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034761743154376745
    2. ' for' → logprob: -5.753476142883301
    3. '   ' → logprob: -8.2534761428833
    4. 'results' (adapté à ' results') → logprob: -10.8784761428833
    5. 'outputs' → logprob: -11.3784761428833
    6. 'result' → logprob: -12.6284761428833
    7. '    
' → logprob: -13.3784761428833
    8. 'output' → logprob: -13.5034761428833
    9. '	for' → logprob: -14.5034761428833
    10. '
' → logprob: -14.6284761428833

Token 794: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697629630565643
    2. '=' → logprob: -2.126976251602173
    3. ' ' → logprob: -11.126976013183594
    4. ',' → logprob: -11.376976013183594
    5. ' =
' → logprob: -11.876976013183594
    6. 'for' → logprob: -12.376976013183594
    7. '_' → logprob: -12.501976013183594
    8. ':' → logprob: -13.126976013183594
    9. ' for' → logprob: -13.501976013183594
    10. '.' → logprob: -13.626976013183594

Token 795: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.03804241120815277
    2. ' processor' → logprob: -3.2880423069000244
    3. 'list' → logprob: -14.413042068481445
    4. ' list' → logprob: -15.663042068481445
    5. '(process' → logprob: -16.163042068481445
    6. 'process' → logprob: -17.038042068481445
    7. '_processor' → logprob: -17.163042068481445
    8. '   ' → logprob: -17.163042068481445
    9. '.processor' → logprob: -17.413042068481445
    10. 'processors' → logprob: -17.913042068481445

Token 796: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.125000953674316
    3. 'process' → logprob: -14.625000953674316
    4. '.pro' → logprob: -17.875001907348633
    5. ' .' → logprob: -18.250001907348633
    6. '	process' → logprob: -19.750001907348633
    7. '.perform' → logprob: -20.875001907348633
    8. '.processor' → logprob: -21.125001907348633
    9. '.proc' → logprob: -21.125001907348633
    10. '.generate' → logprob: -21.375001907348633

Token 797: '(inputs' (ID: 78697)
  Prédit: '(inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inputs' → logprob: -0.00045379105722531676
    2. '(results' → logprob: -7.750453948974609
    3. 'inputs' → logprob: -11.75045394897461
    4. '(' → logprob: -12.25045394897461
    5. '(lines' → logprob: -12.25045394897461
    6. '(outputs' → logprob: -12.37545394897461
    7. '(input' → logprob: -14.12545394897461
    8. '(inp' → logprob: -15.87545394897461
    9. '(in' → logprob: -16.50045394897461
    10. '((' → logprob: -16.50045394897461

Token 798: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07202810049057007
    2. ')' → logprob: -3.322028160095215
    3. ' for' → logprob: -3.822028160095215
    4. '    
' → logprob: -5.572028160095215
    5. '
' → logprob: -6.197028160095215
    6. 'for' → logprob: -6.447028160095215
    7. '<|end|>' → logprob: -6.447028160095215
    8. '<|end|>' → logprob: -7.197028160095215
    9. '  
' → logprob: -8.072028160095215
    10. ')
' → logprob: -8.197028160095215

Token 799: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001523790997453034
    2. 'for' → logprob: -6.501523971557617
    3. ' for' → logprob: -10.751523971557617
    4. '```' → logprob: -17.626523971557617
    5. '	for' → logprob: -18.501523971557617
    6. '       ' → logprob: -18.751523971557617
    7. '    
' → logprob: -18.876523971557617
    8. '
' → logprob: -19.626523971557617
    9. '   ' → logprob: -19.876523971557617
    10. ' ' → logprob: -20.501523971557617

Token 800: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03872763738036156
    2. '   ' → logprob: -3.2887275218963623
    3. ' for' → logprob: -7.288727760314941
    4. 'import' → logprob: -13.413727760314941
    5. '
' → logprob: -14.038727760314941
    6. '	for' → logprob: -15.163727760314941
    7. '```' → logprob: -16.413726806640625
    8. 'print' → logprob: -16.788726806640625
    9. '       ' → logprob: -17.538726806640625
    10. '    
' → logprob: -17.663726806640625

Token 801: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4101525843143463
    2. 'res' → logprob: -1.160152554512024
    3. ' result' → logprob: -4.160152435302734
    4. ' res' → logprob: -4.910152435302734
    5. 'length' → logprob: -10.410152435302734
    6. 'r' → logprob: -12.660152435302734
    7. ' length' → logprob: -13.410152435302734
    8. '   ' → logprob: -13.910152435302734
    9. ' r' → logprob: -15.910152435302734
    10. 'gap' → logprob: -16.160152435302734

Token 802: ' in' (ID: 306)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.04838135465979576
    2. ' in' → logprob: -3.5483813285827637
    3. 'ults' → logprob: -4.173381328582764
    4. 'ul' → logprob: -6.298381328582764
    5. 'ultat' → logprob: -7.673381328582764
    6. 'ulta' → logprob: -8.798381805419922
    7. 'ault' → logprob: -8.798381805419922
    8. 'ulti' → logprob: -8.923381805419922
    9. 'u' → logprob: -9.673381805419922
    10. 'ut' → logprob: -9.798381805419922

Token 803: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.011047814972698689
    2. ' results' → logprob: -4.511047840118408
    3. 'result' → logprob: -18.26104736328125
    4. 'Results' → logprob: -19.13604736328125
    5. '(results' → logprob: -19.26104736328125
    6. '	results' → logprob: -19.38604736328125
    7. 'res' → logprob: -20.26104736328125
    8. '_results' → logprob: -20.51104736328125
    9. '.results' → logprob: -21.51104736328125
    10. '
' → logprob: -22.63604736328125

Token 804: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.053848996758461
    2. '       ' → logprob: -3.4288489818573
    3. ':
' → logprob: -3.9288489818573
    4. '   ' → logprob: -9.053849220275879
    5. 'print' → logprob: -9.303849220275879
    6. ' print' → logprob: -10.678849220275879
    7. '<|end|>' → logprob: -10.678849220275879
    8. ',' → logprob: -11.053849220275879
    9. '.print' → logprob: -11.303849220275879
    10. '):' → logprob: -11.303849220275879

Token 805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005320089403539896
    2. 'print' → logprob: -5.255320072174072
    3. ' print' → logprob: -9.38032054901123
    4. '   ' → logprob: -13.38032054901123
    5. '           ' → logprob: -15.13032054901123
    6. '	print' → logprob: -16.880319595336914
    7. '      ' → logprob: -17.130319595336914
    8. '```' → logprob: -17.380319595336914
    9. '        
' → logprob: -17.880319595336914
    10. '     ' → logprob: -18.130319595336914

Token 806: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.080963092041202e-06
    2. ' print' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.500004768371582
    4. '```' → logprob: -20.2500057220459
    5. '       ' → logprob: -20.7500057220459
    6. '	print' → logprob: -21.2500057220459
    7. 'println' → logprob: -22.7500057220459
    8. '
' → logprob: -22.7500057220459
    9. '#print' → logprob: -24.0000057220459
    10. '_print' → logprob: -24.1250057220459

Token 807: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.226628895296017e-06
    2. 'res' → logprob: -12.375007629394531
    3. '(' → logprob: -12.750007629394531
    4. '()' → logprob: -16.62500762939453
    5. '(f' → logprob: -17.25000762939453
    6. ' res' → logprob: -18.12500762939453
    7. '(re' → logprob: -19.12500762939453
    8. ' (' → logprob: -19.62500762939453
    9. '$res' → logprob: -20.50000762939453
    10. '=res' → logprob: -20.62500762939453

Token 808: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.500001907348633
    3. '())' → logprob: -15.125001907348633
    4. ' )' → logprob: -15.750001907348633
    5. '()' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.250001907348633
    8. '))' → logprob: -17.500001907348633
    9. '```' → logprob: -17.750001907348633
    10. ')}' → logprob: -18.250001907348633

Token 809: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.507972572464496e-05
    2. '
' → logprob: -10.12509536743164
    3. '```' → logprob: -10.37509536743164
    4. ' if' → logprob: -11.25009536743164
    5. '<|end|>' → logprob: -12.37509536743164
    6. '#' → logprob: -12.50009536743164
    7. '    
' → logprob: -14.12509536743164
    8. '  
' → logprob: -14.62509536743164
    9. '\n' → logprob: -14.62509536743164
    10. 'If' → logprob: -15.62509536743164

Token 810: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20181265473365784
    2. '__' → logprob: -1.7018126249313354
    3. '_name' → logprob: -8.201812744140625
    4. '_' → logprob: -9.201812744140625
    5. '___' → logprob: -10.951812744140625
    6. 'name' → logprob: -13.451812744140625
    7. ' ' → logprob: -13.701812744140625
    8. ' _' → logprob: -13.701812744140625
    9. ' ___' → logprob: -14.701812744140625
    10. '_main' → logprob: -14.951812744140625

Token 811: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3627239167690277
    2. '==' → logprob: -1.36272394657135
    3. ' ==' → logprob: -3.1127238273620605
    4. '=="' → logprob: -6.2377238273620605
    5. '=='' → logprob: -6.4877238273620605
    6. '[' → logprob: -9.362724304199219
    7. ' __' → logprob: -9.987724304199219
    8. '=' → logprob: -10.487724304199219
    9. '__.__' → logprob: -10.612724304199219
    10. '_' → logprob: -10.737724304199219

Token 812: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7432603272027336e-06
    2. '__.__' → logprob: -13.500001907348633
    3. '==' → logprob: -15.750001907348633
    4. '__
' → logprob: -17.125001907348633
    5. '____' → logprob: -17.250001907348633
    6. '__.' → logprob: -17.500001907348633
    7. '___' → logprob: -17.625001907348633
    8. ' ==' → logprob: -17.750001907348633
    9. '__('' → logprob: -18.000001907348633
    10. 'name' → logprob: -19.250001907348633

Token 813: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02561265230178833
    2. '==' → logprob: -3.7756125926971436
    3. ' ==' → logprob: -6.275612831115723
    4. '=="' → logprob: -7.775612831115723
    5. '__.__' → logprob: -10.650612831115723
    6. '=='' → logprob: -10.775612831115723
    7. '_' → logprob: -11.775612831115723
    8. '.__' → logprob: -12.650612831115723
    9. '___' → logprob: -13.025612831115723
    10. '=' → logprob: -13.275612831115723

Token 814: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03805813565850258
    2. ''' → logprob: -3.288058042526245
    3. ' "__' → logprob: -11.163058280944824
    4. '__' → logprob: -13.288058280944824
    5. ' '__' → logprob: -14.788058280944824
    6. ''"' → logprob: -16.038057327270508
    7. '"user' → logprob: -16.413057327270508
    8. '"name' → logprob: -16.788057327270508
    9. '("__' → logprob: -17.413057327270508
    10. '"_' → logprob: -17.913057327270508

Token 815: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0011761783389374614
    2. '__' → logprob: -6.751176357269287
    3. '_main' → logprob: -12.876175880432129
    4. 'name' → logprob: -13.251175880432129
    5. ' main' → logprob: -15.001175880432129
    6. 'm' → logprob: -15.001175880432129
    7. 'built' → logprob: -15.376175880432129
    8. '__":
' → logprob: -15.501175880432129
    9. 'ma' → logprob: -16.001176834106445
    10. ' "__' → logprob: -16.626176834106445

Token 816: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.31540754437446594
    2. '__' → logprob: -1.3154075145721436
    3. '__':
' → logprob: -6.565407752990723
    4. '__.' → logprob: -7.440407752990723
    5. '__.__' → logprob: -9.315407752990723
    6. '__["' → logprob: -10.315407752990723
    7. '__
' → logprob: -11.565407752990723
    8. '__
' → logprob: -12.065407752990723
    9. '__:' → logprob: -12.315407752990723
    10. '__",' → logprob: -13.565407752990723

Token 817: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.038320884108543396
    2. '__' → logprob: -3.288320779800415
    3. '"' → logprob: -8.788320541381836
    4. ''' → logprob: -9.413320541381836
    5. ' main' → logprob: -10.913320541381836
    6. '_main' → logprob: -11.663320541381836
    7. '   ' → logprob: -12.038320541381836
    8. '____' → logprob: -12.288320541381836
    9. '	main' → logprob: -12.538320541381836
    10. '___' → logprob: -13.913320541381836

Token 818: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '	main' → logprob: -17.25
    4. '   ' → logprob: -18.875
    5. '_main' → logprob: -22.0
    6. '.main' → logprob: -23.375
    7. '(main' → logprob: -24.125
    8. 'ma' → logprob: -24.5
    9. 'mai' → logprob: -24.5
    10. 'maine' → logprob: -25.125

Token 819: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 817
Tokens correctement prédits (1ère position, stricte): 401
Tokens correctement prédits (1ère position, avec adaptation): 445
Tokens correctement prédits (top 10): 715
Précision stricte (1ère position): 49.08%
Précision adaptée (1ère position): 54.47%
Précision (top 10): 87.52%
================================================================================
