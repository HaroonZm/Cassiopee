================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class CircularWall:
    def __init__(self, length):
        self.length = length
        self._painted = [False] * length
    
    class Painter:
        def __init__(self, start, length, wall):
            self.start = start % wall.length
            self.length = length
            self.wall = wall
        
        def paint(self):
            n = self.wall.length
            end = (self.start + self.length) % n
            if self.length == n:
                # Paint the whole wall
                for i in range(n):
                    self.wall._painted[i] = True
            elif self.start < end:
                # Non wrap-around interval
                for i in range(self.start, end):
                    self.wall._painted[i] = True
            else:
                # Wrap-around interval
                for i in range(self.start, n):
                    self.wall._painted[i] = True
                for i in range(0, end):
                    self.wall._painted[i] = True
    
    def paint_intervals(self, intervals):
        painters = []
        for a, l in intervals:
            painter = CircularWall.Painter(a, l, self)
            painters.append(painter)
            painter.paint()
        return self._find_painted_intervals()
    
    def _find_painted_intervals(self):
        intervals = []
        n = self.length
        visited = [False] * n
        for i in range(n):
            if self._painted[i] and not visited[i]:
                length = 0
                idx = i
                while self._painted[idx] and not visited[idx]:
                    visited[idx] = True
                    length += 1
                    idx = (idx +1) % n
                    if idx == i:
                        break
                intervals.append(length)
        intervals.sort(reverse=True)
        return intervals

class IntervalAggregator:
    def __init__(self, intervals):
        self.intervals = intervals
    
    def aggregate(self):
        count_map = {}
        for length in self.intervals:
            count_map[length] = count_map.get(length, 0) +1
        result = sorted(count_map.items(), key=lambda x: -x[0])
        return result

class WhiteWallSolver:
    def __init__(self):
        self.wall = None
        self.intervals = []
    
    def input_data(self):
        import sys
        data = sys.stdin.read().strip().split()
        N, M = int(data[0]), int(data[1])
        self.wall = CircularWall(N)
        self.intervals = [(int(data[i*2 + 2]), int(data[i*2 +3])) for i in range(M)]
    
    def solve(self):
        painted_intervals = self.wall.paint_intervals(self.intervals)
        aggregator = IntervalAggregator(painted_intervals)
        aggregated = aggregator.aggregate()
        return aggregated
    
    def output_result(self, aggregated):
        for length, count in aggregated:
            print(length, count)

def main():
    solver = WhiteWallSolver()
    solver.input_data()
    result = solver.solve()
    solver.output_result(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Circular' (ID: 72772)
  → Token d'amorce (pas de prédiction)

Token 2: 'Wall' (ID: 35120)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7219287157058716
    2. '(' → logprob: -0.8469287157058716
    3. '{' → logprob: -2.471928596496582
    4. '(:' → logprob: -7.596928596496582
    5. ' {' → logprob: -8.471928596496582
    6. '({' → logprob: -9.596928596496582
    7. '```' → logprob: -9.721928596496582
    8. ' :' → logprob: -10.096928596496582
    9. '[' → logprob: -10.096928596496582
    10. '.' → logprob: -10.221928596496582

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014846005477011204
    2. ':' → logprob: -4.264845848083496
    3. '```' → logprob: -8.514845848083496
    4. '.' → logprob: -8.889845848083496
    5. '   ' → logprob: -9.264845848083496
    6. '():' → logprob: -9.764845848083496
    7. '(
' → logprob: -9.764845848083496
    8. '()' → logprob: -10.139845848083496
    9. ''' → logprob: -11.139845848083496
    10. '(:' → logprob: -11.514845848083496

Token 5: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4887503981590271
    2. ':' → logprob: -0.9887503981590271
    3. '   ' → logprob: -4.863750457763672
    4. '```' → logprob: -5.738750457763672
    5. '.' → logprob: -7.363750457763672
    6. ' ' → logprob: -7.988750457763672
    7. '\' → logprob: -7.988750457763672
    8. '():' → logprob: -8.113750457763672
    9. '()' → logprob: -8.363750457763672
    10. ' :' → logprob: -8.363750457763672

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5556790232658386
    2. '__' → logprob: -1.0556790828704834
    3. ' ' → logprob: -2.8056790828704834
    4. ' ' → logprob: -4.930678844451904
    5. '<|end|>' → logprob: -6.180678844451904
    6. '_' → logprob: -6.430678844451904
    7. ' add' → logprob: -6.680678844451904
    8. ' init' → logprob: -6.680678844451904
    9. ')' → logprob: -6.930678844451904
    10. ' )' → logprob: -7.180678844451904

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.700132997939363e-05
    2. ' init' → logprob: -11.000017166137695
    3. '_init' → logprob: -15.125017166137695
    4. '	init' → logprob: -17.750017166137695
    5. 'ini' → logprob: -17.750017166137695
    6. '_' → logprob: -19.250017166137695
    7. ' ' → logprob: -19.875017166137695
    8. 'int' → logprob: -20.000017166137695
    9. '  ' → logprob: -20.250017166137695
    10. 'in' → logprob: -20.375017166137695

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16088587045669556
    2. '__' → logprob: -1.9108858108520508
    3. '__(
' → logprob: -8.03588581085205
    4. '(' → logprob: -8.91088581085205
    5. '__((' → logprob: -9.41088581085205
    6. '(self' → logprob: -10.28588581085205
    7. '_' → logprob: -10.41088581085205
    8. '__('' → logprob: -10.41088581085205
    9. '__(*' → logprob: -11.66088581085205
    10. '_(' → logprob: -12.28588581085205

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01109309121966362
    2. ' self' → logprob: -4.5110931396484375
    3. ')' → logprob: -10.761093139648438
    4. '(self' → logprob: -10.886093139648438
    5. ' )' → logprob: -13.386093139648438
    6. ' ' → logprob: -13.511093139648438
    7. '	self' → logprob: -14.511093139648438
    8. '       ' → logprob: -14.761093139648438
    9. '   ' → logprob: -15.761093139648438
    10. 'space' → logprob: -16.011093139648438

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02096877433359623
    2. 'self' → logprob: -4.145968914031982
    3. ' ,' → logprob: -6.395968914031982
    4. ')' → logprob: -6.395968914031982
    5. '):' → logprob: -7.145968914031982
    6. '(self' → logprob: -8.145968437194824
    7. ' self' → logprob: -8.770968437194824
    8. '<|end|>' → logprob: -9.020968437194824
    9. ',self' → logprob: -9.645968437194824
    10. '(' → logprob: -10.770968437194824

Token 11: ' length' (ID: 5517)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.5510684847831726
    2. ' self' → logprob: -0.9260684847831726
    3. 'self' → logprob: -3.9260685443878174
    4. 'radius' → logprob: -5.176068305969238
    5. ' center' → logprob: -7.051068305969238
    6. ' x' → logprob: -7.801068305969238
    7. ')' → logprob: -8.426068305969238
    8. ' position' → logprob: -8.551068305969238
    9. ' )' → logprob: -8.926068305969238
    10. ' wall' → logprob: -9.301068305969238

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07758865505456924
    2. ',' → logprob: -2.8275885581970215
    3. ')' → logprob: -4.9525885581970215
    4. '=' → logprob: -5.4525885581970215
    5. ':' → logprob: -5.5775885581970215
    6. '):
' → logprob: -9.45258903503418
    7. '   ' → logprob: -9.82758903503418
    8. ')=' → logprob: -10.07758903503418
    9. '.' → logprob: -10.32758903503418
    10. '_' → logprob: -10.70258903503418

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008776946924626827
    2. '   ' → logprob: -6.008777141571045
    3. '    ' → logprob: -6.508777141571045
    4. '<|end|>' → logprob: -6.633777141571045
    5. '        ' → logprob: -7.258777141571045
    6. '(' → logprob: -7.633777141571045
    7. ':' → logprob: -7.883777141571045
    8. '        
' → logprob: -8.008776664733887
    9. 'self' → logprob: -8.008776664733887
    10. '\' → logprob: -8.383776664733887

Token 14: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6440213918685913
    2. ' self' → logprob: -1.1440213918685913
    3. '       ' → logprob: -2.019021511077881
    4. ' ' → logprob: -4.894021511077881
    5. '```' → logprob: -5.144021511077881
    6. ' ' → logprob: -6.019021511077881
    7. '        ' → logprob: -6.144021511077881
    8. '<|end|>' → logprob: -6.394021511077881
    9. '           ' → logprob: -6.519021511077881
    10. '   ' → logprob: -7.769021511077881

Token 15: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.31342920660972595
    2. '.' → logprob: -1.3134292364120483
    3. '._' → logprob: -10.43842887878418
    4. '.l' → logprob: -10.81342887878418
    5. ' .' → logprob: -10.81342887878418
    6. 'length' → logprob: -10.81342887878418
    7. '.LENGTH' → logprob: -11.06342887878418
    8. '.width' → logprob: -11.06342887878418
    9. '.len' → logprob: -11.43842887878418
    10. '.size' → logprob: -12.06342887878418

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931912899017334
    2. ' =' → logprob: -0.6931912899017334
    3. '<|end|>' → logprob: -10.318191528320312
    4. ' ' → logprob: -12.818191528320312
    5. ')' → logprob: -13.068191528320312
    6. '.' → logprob: -13.818191528320312
    7. ',' → logprob: -13.943191528320312
    8. '_' → logprob: -14.318191528320312
    9. ' =
' → logprob: -14.443191528320312
    10. '   ' → logprob: -14.568191528320312

Token 17: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.06197340786457062
    2. 'length' → logprob: -2.8119733333587646
    3. '(length' → logprob: -12.311973571777344
    4. '[length' → logprob: -14.811973571777344
    5. 'ength' → logprob: -15.186973571777344
    6. ' ' → logprob: -15.436973571777344
    7. '	length' → logprob: -15.936973571777344
    8. ',length' → logprob: -15.936973571777344
    9. 'leng' → logprob: -16.186973571777344
    10. ' lenght' → logprob: -16.811973571777344

Token 18: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.156921625137329
    2. '<|end|>' → logprob: -1.156921625137329
    3. '\' → logprob: -1.781921625137329
    4. '
' → logprob: -2.781921625137329
    5. '\n' → logprob: -3.031921625137329
    6. '   ' → logprob: -3.656921625137329
    7. '```' → logprob: -4.03192138671875
    8. ':' → logprob: -4.53192138671875
    9. ',' → logprob: -5.03192138671875
    10. ')' → logprob: -5.28192138671875

Token 19: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.145850419998169
    2. '\n' → logprob: -1.395850419998169
    3. ':' → logprob: -1.895850419998169
    4. '\' → logprob: -2.145850419998169
    5. '   ' → logprob: -2.895850419998169
    6. '```' → logprob: -3.395850419998169
    7. '<|end|>' → logprob: -3.895850419998169
    8. '.' → logprob: -4.02085018157959
    9. '    
' → logprob: -4.77085018157959
    10. '' → logprob: -4.89585018157959

Token 20: ' self' (ID: 1051)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7380545139312744
    2. '.' → logprob: -2.1130545139312744
    3. '\' → logprob: -2.1130545139312744
    4. ':' → logprob: -2.3630545139312744
    5. '<|end|>' → logprob: -2.6130545139312744
    6. '
' → logprob: -2.9880545139312744
    7. ')' → logprob: -4.113054275512695
    8. ',' → logprob: -4.363054275512695
    9. '_' → logprob: -5.113054275512695
    10. '   ' → logprob: -5.238054275512695

Token 21: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009134899592027068
    2. '._' → logprob: -7.750913619995117
    3. '.points' → logprob: -9.625913619995117
    4. '.length' → logprob: -9.750913619995117
    5. '.height' → logprob: -9.875913619995117
    6. ' .' → logprob: -9.875913619995117
    7. '.width' → logprob: -10.125913619995117
    8. '.wall' → logprob: -10.875913619995117
    9. '.w' → logprob: -11.250913619995117
    10. '.radius' → logprob: -11.375913619995117

Token 22: 'paint' (ID: 44758)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.8909897804260254
    2. 'radius' → logprob: -1.0159897804260254
    3. 'length' → logprob: -1.8909897804260254
    4. 'current' → logprob: -3.8909897804260254
    5. 'angle' → logprob: -4.265989780426025
    6. 'height' → logprob: -5.265989780426025
    7. 'positions' → logprob: -5.515989780426025
    8. 'segments' → logprob: -5.640989780426025
    9. 'walls' → logprob: -5.765989780426025
    10. 'wall' → logprob: -5.890989780426025

Token 23: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.009095840156078339
    2. '_' → logprob: -4.884095668792725
    3. 'er' → logprob: -8.259096145629883
    4. '_area' → logprob: -8.384096145629883
    5. '_length' → logprob: -8.509096145629883
    6. 'ing' → logprob: -9.009096145629883
    7. '_capacity' → logprob: -9.134096145629883
    8. '_amount' → logprob: -9.509096145629883
    9. '_ed' → logprob: -9.634096145629883
    10. '_color' → logprob: -9.759096145629883

Token 24: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4336246848106384
    2. '=' → logprob: -1.6836247444152832
    3. ' =' → logprob: -1.9336247444152832
    4. '_length' → logprob: -4.683624744415283
    5. '_area' → logprob: -5.683624744415283
    6. '_space' → logprob: -5.933624744415283
    7. 'ed' → logprob: -6.183624744415283
    8. '<|end|>' → logprob: -6.558624744415283
    9. ' ' → logprob: -7.308624744415283
    10. '_amount' → logprob: -7.683624744415283

Token 25: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23028050363063812
    2. ' ' → logprob: -1.7302805185317993
    3. ' [' → logprob: -3.9802803993225098
    4. ' set' → logprob: -5.60528039932251
    5. '[' → logprob: -5.85528039932251
    6. 'set' → logprob: -6.60528039932251
    7. '[]' → logprob: -7.35528039932251
    8. 'False' → logprob: -7.48028039932251
    9. ' False' → logprob: -7.85528039932251
    10. ' []' → logprob: -8.230280876159668

Token 26: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.17854882776737213
    2. '0' → logprob: -2.053548812866211
    3. ' False' → logprob: -3.428548812866211
    4. 'F' → logprob: -5.928548812866211
    5. '[' → logprob: -10.053548812866211
    6. ']' → logprob: -10.303548812866211
    7. ' ]' → logprob: -10.428548812866211
    8. ' ' → logprob: -11.303548812866211
    9. 'True' → logprob: -12.053548812866211
    10. ' F' → logprob: -12.803548812866211

Token 27: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014671577140688896
    2. ' ]' → logprob: -4.764671802520752
    3. ',' → logprob: -5.139671802520752
    4. '<|end|>' → logprob: -9.639671325683594
    5. ' for' → logprob: -10.139671325683594
    6. '[' → logprob: -10.639671325683594
    7. ' ,' → logprob: -11.514671325683594
    8. '][' → logprob: -12.014671325683594
    9. ')' → logprob: -12.014671325683594
    10. ' ' → logprob: -12.389671325683594

Token 28: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19024457037448883
    2. ' *' → logprob: -1.8152445554733276
    3. ' for' → logprob: -5.315244674682617
    4. '[' → logprob: -6.065244674682617
    5. '0' → logprob: -7.315244674682617
    6. ' ' → logprob: -7.440244674682617
    7. ']' → logprob: -7.440244674682617
    8. ' ]' → logprob: -7.690244674682617
    9. '<|end|>' → logprob: -8.565244674682617
    10. 'for' → logprob: -8.690244674682617

Token 29: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.386951208114624
    2. 'length' → logprob: -1.136951208114624
    3. ' self' → logprob: -10.261951446533203
    4. 'self' → logprob: -10.386951446533203
    5. '(length' → logprob: -11.511951446533203
    6. 'leng' → logprob: -13.011951446533203
    7. ' leng' → logprob: -14.011951446533203
    8. ' lenght' → logprob: -14.261951446533203
    9. ' ' → logprob: -15.136951446533203
    10. 'len' → logprob: -15.886951446533203

Token 30: '
    
' (ID: 15698)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.4267573058605194
    2. '
' → logprob: -2.176757335662842
    3. '.' → logprob: -2.801757335662842
    4. '   ' → logprob: -2.801757335662842
    5. '```' → logprob: -3.801757335662842
    6. '\n' → logprob: -3.801757335662842
    7. '' → logprob: -4.551757335662842
    8. '<|end|>' → logprob: -4.551757335662842
    9. '    
' → logprob: -4.801757335662842
    10. ' ' → logprob: -4.926757335662842

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.524125874042511
    2. 'd' → logprob: -1.0241258144378662
    3. ' ' → logprob: -3.649125814437866
    4. 'def' → logprob: -4.274126052856445
    5. '    ' → logprob: -6.149126052856445
    6. '    
' → logprob: -6.399126052856445
    7. ' 
' → logprob: -6.649126052856445
    8. ' def' → logprob: -6.774126052856445
    9. '  ' → logprob: -7.274126052856445
    10. '_' → logprob: -7.399126052856445

Token 32: ' class' (ID: 744)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16043269634246826
    2. 'def' → logprob: -1.9104326963424683
    3. '   ' → logprob: -8.910432815551758
    4. ' def' → logprob: -10.160432815551758
    5. ' ' → logprob: -10.785432815551758
    6. 'de' → logprob: -11.660432815551758
    7. '@' → logprob: -12.910432815551758
    8. ' d' → logprob: -14.035432815551758
    9. '    ' → logprob: -14.535432815551758
    10. '  ' → logprob: -14.910432815551758

Token 33: ' Painter' (ID: 181701)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3891106843948364
    2. ' Paint' → logprob: -1.8891106843948364
    3. ' Wall' → logprob: -3.014110565185547
    4. '_' → logprob: -3.264110565185547
    5. ' Painter' → logprob: -3.514110565185547
    6. ' Space' → logprob: -4.014110565185547
    7. ' _' → logprob: -4.889110565185547
    8. 'Painter' → logprob: -5.514110565185547
    9. ' Painting' → logprob: -5.514110565185547
    10. ' Segment' → logprob: -5.764110565185547

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008037914521992207
    2. ' :' → logprob: -7.3758039474487305
    3. '(' → logprob: -9.37580394744873
    4. ':
' → logprob: -9.62580394744873
    5. '():' → logprob: -11.37580394744873
    6. '):' → logprob: -12.00080394744873
    7. '(object' → logprob: -12.62580394744873
    8. '<|end|>' → logprob: -13.37580394744873
    9. ' :
' → logprob: -13.87580394744873
    10. '   ' → logprob: -15.00080394744873

Token 35: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6704239845275879
    2. '       ' → logprob: -1.670423984527588
    3. '(' → logprob: -2.295423984527588
    4. '    ' → logprob: -2.545423984527588
    5. ' ' → logprob: -3.795423984527588
    6. '<|end|>' → logprob: -4.170423984527588
    7. '    
' → logprob: -4.420423984527588
    8. '\' → logprob: -4.670423984527588
    9. 'def' → logprob: -4.670423984527588
    10. ' def' → logprob: -4.920423984527588

Token 36: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1618836522102356
    2. ' def' → logprob: -1.9118835926055908
    3. '   ' → logprob: -7.03688383102417
    4. '       ' → logprob: -7.53688383102417
    5. '    ' → logprob: -8.536883354187012
    6. '        ' → logprob: -11.286883354187012
    7. ' de' → logprob: -11.536883354187012
    8. 'de' → logprob: -11.911883354187012
    9. ' ' → logprob: -12.036883354187012
    10. 'd' → logprob: -12.661883354187012

Token 37: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016168680042028427
    2. ' paint' → logprob: -4.516168594360352
    3. '_' → logprob: -5.891168594360352
    4. ' ' → logprob: -7.016168594360352
    5. ' _' → logprob: -7.391168594360352
    6. '__' → logprob: -7.766168594360352
    7. ' ' → logprob: -8.391168594360352
    8. ' init' → logprob: -9.516168594360352
    9. 'paint' → logprob: -10.141168594360352
    10. ' ‌' → logprob: -11.141168594360352

Token 38: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.010768946260213852
    2. ' init' → logprob: -4.635768890380859
    3. 'i' → logprob: -7.635768890380859
    4. '   ' → logprob: -8.51076889038086
    5. ' i' → logprob: -8.76076889038086
    6. ' ' → logprob: -9.38576889038086
    7. '  ' → logprob: -10.63576889038086
    8. '_init' → logprob: -10.76076889038086
    9. '    ' → logprob: -11.88576889038086
    10. '	init' → logprob: -11.88576889038086

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07079387456178665
    2. '__' → logprob: -2.695793867111206
    3. '(' → logprob: -7.445794105529785
    4. '__(
' → logprob: -8.945794105529785
    5. '__((' → logprob: -9.570794105529785
    6. '__('' → logprob: -10.820794105529785
    7. '(self' → logprob: -10.945794105529785
    8. '__(*' → logprob: -11.320794105529785
    9. ' (' → logprob: -11.445794105529785
    10. '_(' → logprob: -12.695794105529785

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10025336593389511
    2. ' self' → logprob: -2.3502533435821533
    3. '(self' → logprob: -11.100253105163574
    4. ' wall' → logprob: -11.725253105163574
    5. ' ' → logprob: -11.850253105163574
    6. 'wall' → logprob: -11.975253105163574
    7. ')' → logprob: -13.350253105163574
    8. 'parent' → logprob: -13.350253105163574
    9. ' )' → logprob: -13.850253105163574
    10. '	self' → logprob: -14.225253105163574

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22569012641906738
    2. ' ,' → logprob: -1.6006901264190674
    3. 'self' → logprob: -9.100689888000488
    4. '(self' → logprob: -9.725689888000488
    5. ' self' → logprob: -10.475689888000488
    6. ',self' → logprob: -10.725689888000488
    7. '<|end|>' → logprob: -10.850689888000488
    8. ' ' → logprob: -11.475689888000488
    9. ' (' → logprob: -11.725689888000488
    10. ')' → logprob: -12.100689888000488

Token 42: ' start' (ID: 1604)
  Prédit: ' wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wall' → logprob: -0.2738395631313324
    2. ' outer' → logprob: -2.3988394737243652
    3. 'wall' → logprob: -2.6488394737243652
    4. ' circular' → logprob: -3.5238394737243652
    5. ' length' → logprob: -3.7738394737243652
    6. ' paint' → logprob: -5.148839473724365
    7. 'c' → logprob: -5.648839473724365
    8. 'outer' → logprob: -5.898839473724365
    9. ' self' → logprob: -6.023839473724365
    10. ' parent' → logprob: -6.523839473724365

Token 43: ',' (ID: 11)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.7867739200592041
    2. ',' → logprob: -1.161773920059204
    3. '_position' → logprob: -2.161773920059204
    4. '_index' → logprob: -2.786773920059204
    5. '_' → logprob: -3.286773920059204
    6. '_,' → logprob: -5.411773681640625
    7. ')' → logprob: -5.411773681640625
    8. '_point' → logprob: -5.911773681640625
    9. ' ,' → logprob: -6.286773681640625
    10. '):' → logprob: -6.536773681640625

Token 44: ' length' (ID: 5517)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.008285358548164368
    2. 'end' → logprob: -5.5082855224609375
    3. ' length' → logprob: -5.6332855224609375
    4. ' stop' → logprob: -8.883285522460938
    5. ' ' → logprob: -9.008285522460938
    6. ' finish' → logprob: -9.758285522460938
    7. ' color' → logprob: -10.258285522460938
    8. ' width' → logprob: -10.258285522460938
    9. 'length' → logprob: -10.633285522460938
    10. ' paint' → logprob: -10.883285522460938

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20207421481609344
    2. '):' → logprob: -1.7020741701126099
    3. ' ,' → logprob: -8.07707405090332
    4. ')' → logprob: -8.57707405090332
    5. '):
' → logprob: -9.95207405090332
    6. ' ):' → logprob: -9.95207405090332
    7. ',
' → logprob: -10.70207405090332
    8. '       ' → logprob: -10.95207405090332
    9. ':' → logprob: -12.20207405090332
    10. '           ' → logprob: -12.95207405090332

Token 46: ' wall' (ID: 9688)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.4555465579032898
    2. ' wall' → logprob: -1.3305466175079346
    3. ' paint' → logprob: -3.2055466175079346
    4. 'color' → logprob: -4.5805463790893555
    5. ' canvas' → logprob: -4.8305463790893555
    6. ' is' → logprob: -5.3305463790893555
    7. ' painted' → logprob: -5.3305463790893555
    8. ' circular' → logprob: -5.5805463790893555
    9. ' ' → logprob: -5.8305463790893555
    10. ' walls' → logprob: -5.9555463790893555

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013995219487696886
    2. '_length' → logprob: -7.501399517059326
    3. ':' → logprob: -8.376399993896484
    4. ')' → logprob: -8.876399993896484
    5. '):
' → logprob: -8.876399993896484
    6. ' ):' → logprob: -9.376399993896484
    7. ',' → logprob: -9.376399993896484
    8. '.' → logprob: -9.751399993896484
    9. '   ' → logprob: -10.376399993896484
    10. 'length' → logprob: -11.501399993896484

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14284971356391907
    2. ':' → logprob: -2.5178496837615967
    3. '<|end|>' → logprob: -4.642849922180176
    4. ')' → logprob: -4.767849922180176
    5. '       ' → logprob: -5.017849922180176
    6. ',' → logprob: -5.517849922180176
    7. '):' → logprob: -5.642849922180176
    8. '\' → logprob: -5.767849922180176
    9. '        ' → logprob: -5.892849922180176
    10. '            ' → logprob: -6.142849922180176

Token 49: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08693300187587738
    2. ' self' → logprob: -2.586932897567749
    3. 'start' → logprob: -5.461933135986328
    4. '               ' → logprob: -6.086933135986328
    5. ' ' → logprob: -7.711933135986328
    6. ' start' → logprob: -7.836933135986328
    7. '           ' → logprob: -8.336933135986328
    8. ' ' → logprob: -9.211933135986328
    9. '            ' → logprob: -9.336933135986328
    10. '                ' → logprob: -9.586933135986328

Token 50: '.start' (ID: 10181)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011029551737010479
    2. '.start' → logprob: -4.7610297203063965
    3. ' .' → logprob: -6.1360297203063965
    4. '._' → logprob: -8.761029243469238
    5. '.user' → logprob: -10.886029243469238
    6. '.current' → logprob: -11.386029243469238
    7. '.s' → logprob: -11.636029243469238
    8. '<|end|>' → logprob: -11.761029243469238
    9. '.startswith' → logprob: -11.886029243469238
    10. 'start' → logprob: -12.761029243469238

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7355887293815613
    2. ',' → logprob: -1.235588788986206
    3. ' =' → logprob: -1.985588788986206
    4. '<|end|>' → logprob: -2.485588788986206
    5. ')' → logprob: -5.360588550567627
    6. '<|end|>' → logprob: -5.985588550567627
    7. ' ,' → logprob: -6.985588550567627
    8. '_' → logprob: -7.485588550567627
    9. '+' → logprob: -8.610589027404785
    10. '_space' → logprob: -8.985589027404785

Token 52: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.1427118331193924
    2. 'start' → logprob: -2.017711877822876
    3. ' ' → logprob: -10.517711639404297
    4. ' ' → logprob: -12.517711639404297
    5. '0' → logprob: -12.892711639404297
    6. '[start' → logprob: -14.017711639404297
    7. '(start' → logprob: -14.267711639404297
    8. '	start' → logprob: -14.392711639404297
    9. '=start' → logprob: -15.392711639404297
    10. '_start' → logprob: -15.767711639404297

Token 53: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' wall' (ID: 9688)
  Prédit: ' wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wall' → logprob: -0.005137811880558729
    2. ' length' → logprob: -5.505137920379639
    3. 'wall' → logprob: -6.880137920379639
    4. ' self' → logprob: -11.00513744354248
    5. 'length' → logprob: -11.25513744354248
    6. ' len' → logprob: -14.38013744354248
    7. ' ' → logprob: -14.75513744354248
    8. ' w' → logprob: -16.005138397216797
    9. 'self' → logprob: -16.005138397216797
    10. ' wal' → logprob: -16.755138397216797

Token 55: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -3.810037742368877e-05
    2. '.' → logprob: -10.625038146972656
    3. 'length' → logprob: -11.250038146972656
    4. '.l' → logprob: -15.000038146972656
    5. ' length' → logprob: -15.875038146972656
    6. 'ength' → logprob: -16.000038146972656
    7. '.LENGTH' → logprob: -17.375038146972656
    8. '.size' → logprob: -17.625038146972656
    9. '.len' → logprob: -17.625038146972656
    10. '	length' → logprob: -17.625038146972656

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.052595362067222595
    2. '           ' → logprob: -3.177595376968384
    3. ' self' → logprob: -4.677595138549805
    4. 'length' → logprob: -9.427595138549805
    5. '            ' → logprob: -9.427595138549805
    6. '```' → logprob: -10.927595138549805
    7. ' ' → logprob: -11.427595138549805
    8. '   ' → logprob: -11.552595138549805
    9. ' wall' → logprob: -11.677595138549805
    10. '	self' → logprob: -12.052595138549805

Token 59: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0009820780251175165
    2. '.wall' → logprob: -7.375982284545898
    3. '.' → logprob: -8.500982284545898
    4. '.w' → logprob: -10.125982284545898
    5. ' .' → logprob: -10.250982284545898
    6. '.l' → logprob: -10.375982284545898
    7. '.start' → logprob: -12.125982284545898
    8. '.width' → logprob: -12.250982284545898
    9. '.end' → logprob: -12.625982284545898
    10. 'length' → logprob: -13.000982284545898

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0014527325984090567
    2. '=' → logprob: -6.751452922821045
    3. ' ' → logprob: -8.626452445983887
    4. '<|end|>' → logprob: -9.251452445983887
    5. '<|end|>' → logprob: -12.751452445983887
    6. ' ,' → logprob: -13.876452445983887
    7. ',' → logprob: -14.376452445983887
    8. ')' → logprob: -14.376452445983887
    9. '  ' → logprob: -15.001452445983887
    10. ' =)' → logprob: -15.126452445983887

Token 61: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.011048054322600365
    2. 'length' → logprob: -4.511047840118408
    3. '(length' → logprob: -16.63604736328125
    4. 'ength' → logprob: -17.51104736328125
    5. ' ' → logprob: -18.01104736328125
    6. '	length' → logprob: -18.13604736328125
    7. 'leng' → logprob: -18.38604736328125
    8. ' len' → logprob: -18.51104736328125
    9. ' lenght' → logprob: -18.76104736328125
    10. ',length' → logprob: -19.26104736328125

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' self' (ID: 1051)
  Prédit: ' wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wall' → logprob: -0.22683030366897583
    2. 'wall' → logprob: -1.601830244064331
    3. '           ' → logprob: -6.97683048248291
    4. 'self' (adapté à ' self') → logprob: -7.97683048248291
    5. ' self' → logprob: -9.35183048248291
    6. '
' → logprob: -11.10183048248291
    7. '            ' → logprob: -11.85183048248291
    8. '_wall' → logprob: -11.85183048248291
    9. '.wall' → logprob: -11.97683048248291
    10. ' ' → logprob: -12.22683048248291

Token 65: '.wall' (ID: 176423)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38374629616737366
    2. '.wall' → logprob: -1.2587462663650513
    3. '._' → logprob: -3.758746385574341
    4. ' .' → logprob: -4.758746147155762
    5. '.w' → logprob: -6.258746147155762
    6. '<|end|>' → logprob: -8.008746147155762
    7. ' wall' → logprob: -8.633746147155762
    8. '.user' → logprob: -9.633746147155762
    9. '<|end|>' → logprob: -9.883746147155762
    10. 'wall' → logprob: -10.258746147155762

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4579291343688965
    2. '=' → logprob: -1.0829291343688965
    3. '.' → logprob: -3.8329291343688965
    4. '<|end|>' → logprob: -5.0829291343688965
    5. '_' → logprob: -7.3329291343688965
    6. '<|end|>' → logprob: -9.332929611206055
    7. '.=' → logprob: -10.207929611206055
    8. ')' → logprob: -11.207929611206055
    9. '```' → logprob: -11.207929611206055
    10. '.wall' → logprob: -11.332929611206055

Token 67: ' wall' (ID: 9688)
  Prédit: ' wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wall' → logprob: -0.005234952084720135
    2. 'wall' → logprob: -5.255234718322754
    3. ' wal' → logprob: -14.255234718322754
    4. '.wall' → logprob: -14.755234718322754
    5. ' ' → logprob: -16.38023567199707
    6. '_wall' → logprob: -16.63023567199707
    7. '<|end|>' → logprob: -17.00523567199707
    8. ' ' → logprob: -17.88023567199707
    9. 'wal' → logprob: -18.00523567199707
    10. 'w' → logprob: -18.50523567199707

Token 68: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6616674065589905
    2. '<|end|>' → logprob: -1.0366673469543457
    3. ' 
' → logprob: -3.2866673469543457
    4. '       ' → logprob: -3.4116673469543457
    5. '    
' → logprob: -3.6616673469543457
    6. '        
' → logprob: -4.661667346954346
    7. '\' → logprob: -5.286667346954346
    8. '\n' → logprob: -5.411667346954346
    9. '   ' → logprob: -5.536667346954346
    10. '  
' → logprob: -6.161667346954346

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1263767033815384
    2. '
' → logprob: -2.8763766288757324
    3. '        
' → logprob: -3.7513766288757324
    4. '   ' → logprob: -4.001376628875732
    5. '    
' → logprob: -4.251376628875732
    6. 'def' → logprob: -5.251376628875732
    7. '            
' → logprob: -8.25137710571289
    8. ' 
' → logprob: -8.50137710571289
    9. '  
' → logprob: -9.00137710571289
    10. ' def' → logprob: -9.12637710571289

Token 70: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.039269015192985535
    2. '   ' → logprob: -4.164268970489502
    3. ' def' → logprob: -4.164268970489502
    4. '       ' → logprob: -4.914268970489502
    5. ' ' → logprob: -9.53926944732666
    6. '  ' → logprob: -12.16426944732666
    7. '    ' → logprob: -12.41426944732666
    8. '	def' → logprob: -13.91426944732666
    9. '     ' → logprob: -14.66426944732666
    10. '        ' → logprob: -14.91426944732666

Token 71: ' paint' (ID: 7907)
  Prédit: ' paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paint' → logprob: -0.01953304558992386
    2. 'paint' → logprob: -4.019533157348633
    3. ' ' → logprob: -7.269533157348633
    4. '_' → logprob: -8.769533157348633
    5. ' is' → logprob: -9.019533157348633
    6. ' _' → logprob: -9.394533157348633
    7. ' paints' → logprob: -9.894533157348633
    8. ' painted' → logprob: -9.894533157348633
    9. ' has' → logprob: -10.519533157348633
    10. '_p' → logprob: -10.644533157348633

Token 72: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08086764812469482
    2. '(self' → logprob: -2.9558677673339844
    3. '_' → logprob: -3.8308677673339844
    4. '_segment' → logprob: -7.205867767333984
    5. '_(' → logprob: -7.205867767333984
    6. '_area' → logprob: -7.205867767333984
    7. '_range' → logprob: -7.455867767333984
    8. '_self' → logprob: -8.580867767333984
    9. '_space' → logprob: -8.580867767333984
    10. '_line' → logprob: -9.080867767333984

Token 73: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032733429223299026
    2. ' ,' → logprob: -3.53273344039917
    3. ',start' → logprob: -6.28273344039917
    4. '):' → logprob: -7.03273344039917
    5. '_,' → logprob: -9.907732963562012
    6. '(start' → logprob: -10.407732963562012
    7. ')' → logprob: -10.532732963562012
    8. '[start' → logprob: -11.032732963562012
    9. ',length' → logprob: -11.282732963562012
    10. '_start' → logprob: -12.032732963562012

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039968185126781464
    2. '<|end|>' → logprob: -4.164968013763428
    3. ' ' → logprob: -4.914968013763428
    4. '\' → logprob: -5.164968013763428
    5. '        ' → logprob: -6.164968013763428
    6. '       ' → logprob: -6.289968013763428
    7. '               ' → logprob: -6.789968013763428
    8. '            ' → logprob: -7.289968013763428
    9. ',' → logprob: -7.414968013763428
    10. '```' → logprob: -7.664968013763428

Token 75: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05061568692326546
    2. 'for' → logprob: -3.3006157875061035
    3. ' i' → logprob: -4.6756157875061035
    4. 'i' → logprob: -6.3006157875061035
    5. ' start' → logprob: -7.5506157875061035
    6. ' ' → logprob: -8.800615310668945
    7. 'start' → logprob: -9.300615310668945
    8. 'n' (adapté à ' n') → logprob: -9.300615310668945
    9. '           ' → logprob: -9.425615310668945
    10. 's' → logprob: -9.425615310668945

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40098220109939575
    2. ' =' → logprob: -1.400982141494751
    3. 'o' → logprob: -3.025982141494751
    4. 'e' → logprob: -4.27598237991333
    5. '_' → logprob: -5.40098237991333
    6. 'um' → logprob: -5.65098237991333
    7. 't' → logprob: -6.15098237991333
    8. '```' → logprob: -6.40098237991333
    9. 'ot' → logprob: -6.52598237991333
    10. 'ew' → logprob: -6.65098237991333

Token 77: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4759945869445801
    2. 'self' → logprob: -0.9759945869445801
    3. ' len' → logprob: -6.60099458694458
    4. 'len' → logprob: -7.60099458694458
    5. ' ' → logprob: -10.475994110107422
    6. 'elf' → logprob: -11.350994110107422
    7. '1' → logprob: -12.475994110107422
    8. '0' → logprob: -12.600994110107422
    9. '	self' → logprob: -13.225994110107422
    10. '(self' → logprob: -13.225994110107422

Token 78: '.wall' (ID: 176423)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -7.755678961984813e-05
    2. '.wall' → logprob: -9.750077247619629
    3. '.w' → logprob: -11.750077247619629
    4. '.len' → logprob: -12.375077247619629
    5. '.l' → logprob: -12.625077247619629
    6. '.' → logprob: -13.375077247619629
    7. 'ength' → logprob: -14.000077247619629
    8. '.width' → logprob: -15.000077247619629
    9. '.start' → logprob: -15.000077247619629
    10. '.LENGTH' → logprob: -15.875077247619629

Token 79: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -1.0564331205387134e-05
    2. '._' → logprob: -12.00001049041748
    3. '.l' → logprob: -13.50001049041748
    4. ' .' → logprob: -14.00001049041748
    5. '.' → logprob: -14.50001049041748
    6. 'length' → logprob: -14.50001049041748
    7. '.len' → logprob: -15.25001049041748
    8. '.size' → logprob: -15.62501049041748
    9. '.LENGTH' → logprob: -15.75001049041748
    10. '.width' → logprob: -15.75001049041748

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19851307570934296
    2. '<|end|>' → logprob: -1.8235130310058594
    3. ' 
' → logprob: -4.948513031005859
    4. '<|end|>' → logprob: -5.948513031005859
    5. '           ' → logprob: -6.073513031005859
    6. ' for' → logprob: -6.073513031005859
    7. 'for' → logprob: -6.948513031005859
    8. '  
' → logprob: -7.073513031005859
    9. ')' → logprob: -7.323513031005859
    10. '            
' → logprob: -8.07351303100586

Token 81: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4789420962333679
    2. '<|end|>' → logprob: -1.4789421558380127
    3. '           ' → logprob: -1.9789421558380127
    4. ' 
' → logprob: -5.478941917419434
    5. '            
' → logprob: -5.978941917419434
    6. '  
' → logprob: -6.103941917419434
    7. '<|end|>' → logprob: -6.853941917419434
    8. '\n' → logprob: -6.853941917419434
    9. ' for' → logprob: -6.978941917419434
    10. '\' → logprob: -7.728941917419434

Token 82: ' end' (ID: 1268)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30539441108703613
    2. ' for' → logprob: -1.4303944110870361
    3. '           ' → logprob: -3.805394411087036
    4. 'end' (adapté à ' end') → logprob: -7.305394172668457
    5. 'start' → logprob: -8.055394172668457
    6. '```' → logprob: -8.055394172668457
    7. 'i' → logprob: -8.555394172668457
    8. '
' → logprob: -9.555394172668457
    9. 's' → logprob: -9.930394172668457
    10. '            
' → logprob: -11.180394172668457

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011284782551229
    2. '=' → logprob: -4.511284828186035
    3. '_' → logprob: -9.136284828186035
    4. ' ' → logprob: -9.761284828186035
    5. '_index' → logprob: -10.761284828186035
    6. '_idx' → logprob: -10.886284828186035
    7. ',' → logprob: -11.886284828186035
    8. ')' → logprob: -11.886284828186035
    9. 's' → logprob: -12.511284828186035
    10. '  ' → logprob: -13.011284828186035

Token 84: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.020572837442159653
    2. '(self' → logprob: -3.8955729007720947
    3. '(' → logprob: -11.395572662353516
    4. ' self' → logprob: -11.520572662353516
    5. ' ' → logprob: -11.895572662353516
    6. 'self' → logprob: -14.020572662353516
    7. '(this' → logprob: -14.145572662353516
    8. '(s' → logprob: -14.270572662353516
    9. '(
' → logprob: -15.770572662353516
    10. ' (
' → logprob: -16.145572662353516

Token 85: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11973272264003754
    2. ' self' → logprob: -2.244732618331909
    3. '(self' → logprob: -4.994732856750488
    4. '           ' → logprob: -9.494732856750488
    5. ' (' → logprob: -10.619732856750488
    6. '   ' → logprob: -12.619732856750488
    7. ')' → logprob: -12.744732856750488
    8. '[self' → logprob: -13.119732856750488
    9. ' ' → logprob: -13.494732856750488
    10. '(' → logprob: -14.119732856750488

Token 86: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.00016957100888248533
    2. '.' → logprob: -8.87516975402832
    3. 'start' → logprob: -11.25016975402832
    4. '.end' → logprob: -12.12516975402832
    5. ' .' → logprob: -12.25016975402832
    6. '.st' → logprob: -13.50016975402832
    7. '.s' → logprob: -14.12516975402832
    8. ')' → logprob: -14.25016975402832
    9. '.star' → logprob: -14.25016975402832
    10. '	start' → logprob: -15.00016975402832

Token 87: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023330263793468475
    2. '+' → logprob: -3.7733302116394043
    3. '+self' → logprob: -10.023330688476562
    4. ' ' → logprob: -10.773330688476562
    5. ' +
' → logprob: -11.148330688476562
    6. ' ' → logprob: -12.898330688476562
    7. '+
' → logprob: -14.648330688476562
    8. ' +

' → logprob: -14.648330688476562
    9. '<|end|>' → logprob: -15.148330688476562
    10. ' +
' → logprob: -15.398330688476562

Token 88: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38690268993377686
    2. 'self' → logprob: -1.1369026899337769
    3. '           ' → logprob: -11.261902809143066
    4. '<|end|>' → logprob: -11.761902809143066
    5. ' ' → logprob: -12.511902809143066
    6. ')' → logprob: -12.886902809143066
    7. '	self' → logprob: -14.011902809143066
    8. 'Self' → logprob: -14.261902809143066
    9. 'length' → logprob: -14.386902809143066
    10. '(self' → logprob: -14.511902809143066

Token 89: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -7.584239938296378e-06
    2. '.' → logprob: -12.000007629394531
    3. '.l' → logprob: -14.500007629394531
    4. '.len' → logprob: -15.000007629394531
    5. ' .' → logprob: -15.750007629394531
    6. 'ength' → logprob: -16.75000762939453
    7. '.LENGTH' → logprob: -17.00000762939453
    8. 'length' → logprob: -17.00000762939453
    9. '.width' → logprob: -17.25000762939453
    10. ').' → logprob: -17.25000762939453

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06022154167294502
    2. ' )' → logprob: -2.9352214336395264
    3. ')%' → logprob: -5.5602216720581055
    4. '<|end|>' → logprob: -6.6852216720581055
    5. '<|end|>' → logprob: -9.685221672058105
    6. ' ' → logprob: -9.935221672058105
    7. ')n' → logprob: -10.185221672058105
    8. ' %' → logprob: -10.560221672058105
    9. '%' → logprob: -11.060221672058105
    10. ')
' → logprob: -11.685221672058105

Token 91: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2014761120080948
    2. '<|end|>' → logprob: -2.3264760971069336
    3. '%' → logprob: -2.5764760971069336
    4. ' ' → logprob: -5.451476097106934
    5. '<|end|>' → logprob: -5.951476097106934
    6. '%n' → logprob: -7.076476097106934
    7. '
' → logprob: -7.826476097106934
    8. ')' → logprob: -8.076476097106934
    9. '```' → logprob: -9.951476097106934
    10. ')%' → logprob: -10.201476097106934

Token 92: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740801155567169
    2. ' n' → logprob: -0.9740800857543945
    3. 'self' → logprob: -13.599080085754395
    4. '	n' → logprob: -14.099080085754395
    5. ' ' → logprob: -15.224080085754395
    6. ' self' → logprob: -15.349080085754395
    7. '<|end|>' → logprob: -15.349080085754395
    8. '(n' → logprob: -15.849080085754395
    9. ')n' → logprob: -16.34908103942871
    10. '   ' → logprob: -17.09908103942871

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35309675335884094
    2. ' 
' → logprob: -2.7280967235565186
    3. '           ' → logprob: -2.8530967235565186
    4. '<|end|>' → logprob: -2.8530967235565186
    5. '  
' → logprob: -3.6030967235565186
    6. '\n' → logprob: -3.9780967235565186
    7. '            
' → logprob: -4.103096961975098
    8. 'n' → logprob: -4.853096961975098
    9. '```' → logprob: -4.853096961975098
    10. ' for' → logprob: -4.978096961975098

Token 94: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30239930748939514
    2. '           ' → logprob: -2.1773993968963623
    3. ' 
' → logprob: -2.9273993968963623
    4. '            
' → logprob: -3.4273993968963623
    5. '<|end|>' → logprob: -3.8023993968963623
    6. '\n' → logprob: -4.427399158477783
    7. '  
' → logprob: -4.927399158477783
    8. '    
' → logprob: -5.427399158477783
    9. ' if' → logprob: -6.052399158477783
    10. '\' → logprob: -6.052399158477783

Token 95: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2500442266464233
    2. 'if' (adapté à ' if') → logprob: -1.6250442266464233
    3. 'i' → logprob: -1.7500442266464233
    4. ' if' → logprob: -1.7500442266464233
    5. ' i' → logprob: -2.250044345855713
    6. ' for' → logprob: -3.375044345855713
    7. 'for' → logprob: -3.625044345855713
    8. '            ' → logprob: -7.000044345855713
    9. '            
' → logprob: -7.875044345855713
    10. '```' → logprob: -7.875044345855713

Token 96: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.000581388536375016
    2. 'self' → logprob: -7.50058126449585
    3. ' ' → logprob: -11.500581741333008
    4. ' (' → logprob: -11.875581741333008
    5. ' not' → logprob: -12.375581741333008
    6. '(self' → logprob: -13.000581741333008
    7. ' ' → logprob: -13.250581741333008
    8. '	self' → logprob: -14.000581741333008
    9. '            ' → logprob: -14.250581741333008
    10. ' end' → logprob: -15.125581741333008

Token 97: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.28608590364456177
    2. '.start' → logprob: -1.786085844039917
    3. '.' → logprob: -2.536085844039917
    4. ' .' → logprob: -6.536086082458496
    5. '.end' → logprob: -8.286086082458496
    6. '._' → logprob: -9.286086082458496
    7. 'start' → logprob: -9.911086082458496
    8. '.s' → logprob: -10.161086082458496
    9. '.l' → logprob: -11.036086082458496
    10. '.starts' → logprob: -11.411086082458496

Token 98: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40892529487609863
    2. ' >' → logprob: -1.7839252948760986
    3. ' <=' → logprob: -2.2839252948760986
    4. ' ' → logprob: -2.9089252948760986
    5. ' >=' → logprob: -4.6589250564575195
    6. '==' → logprob: -6.7839250564575195
    7. ' <' → logprob: -8.15892505645752
    8. ':' → logprob: -9.15892505645752
    9. '>' → logprob: -9.28392505645752
    10. '<=' → logprob: -10.53392505645752

Token 99: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132641315460205
    2. '0' → logprob: -1.3132641315460205
    3. ' ' → logprob: -14.063263893127441
    4. '  ' → logprob: -14.188263893127441
    5. '<|end|>' → logprob: -14.938263893127441
    6. '۰' → logprob: -15.813263893127441
    7. 'n' → logprob: -16.063264846801758
    8. '
' → logprob: -16.063264846801758
    9. ' n' → logprob: -16.813264846801758
    10. '

' → logprob: -17.000764846801758

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002763390773907304
    2. ':
' → logprob: -6.127763271331787
    3. ' :' → logprob: -7.627763271331787
    4. ' or' → logprob: -9.752763748168945
    5. ' :
' → logprob: -11.377763748168945
    6. '):' → logprob: -11.627763748168945
    7. ':return' → logprob: -12.252763748168945
    8. ',' → logprob: -13.127763748168945
    9. '<|end|>' → logprob: -13.502763748168945
    10. '           ' → logprob: -13.627763748168945

Token 101: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18255864083766937
    2. '               ' → logprob: -2.182558536529541
    3. '           ' → logprob: -4.057558536529541
    4. ':
' → logprob: -4.182558536529541
    5. '<|end|>' → logprob: -4.807558536529541
    6. '
' → logprob: -5.057558536529541
    7. '):' → logprob: -6.807558536529541
    8. '  
' → logprob: -6.807558536529541
    9. '\n' → logprob: -6.932558536529541
    10. '            
' → logprob: -7.182558536529541

Token 102: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4085173010826111
    2. '               ' → logprob: -1.6585173606872559
    3. ' self' → logprob: -2.283517360687256
    4. ' for' → logprob: -3.658517360687256
    5. 'for' → logprob: -4.533517360687256
    6. '           ' → logprob: -6.158517360687256
    7. '                   ' → logprob: -6.533517360687256
    8. '
' → logprob: -6.908517360687256
    9. '[self' → logprob: -7.533517360687256
    10. '```' → logprob: -7.658517360687256

Token 103: ' Paint' (ID: 25341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2413712590932846
    2. 'for' → logprob: -2.4913711547851562
    3. ' self' → logprob: -2.7413711547851562
    4. 'self' → logprob: -2.7413711547851562
    5. '           ' → logprob: -6.616371154785156
    6. '               ' → logprob: -6.991371154785156
    7. '                   ' → logprob: -9.241371154785156
    8. ' return' → logprob: -9.741371154785156
    9. 'return' → logprob: -9.866371154785156
    10. '```' → logprob: -10.241371154785156

Token 104: ' the' (ID: 290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0234240293502808
    2. ' all' → logprob: -1.2734240293502808
    3. '               ' → logprob: -1.7734240293502808
    4. ' self' → logprob: -2.5234241485595703
    5. 'self' → logprob: -2.7734241485595703
    6. '<|end|>' → logprob: -4.52342414855957
    7. ' for' → logprob: -4.77342414855957
    8. ' the' → logprob: -5.14842414855957
    9. 'all' → logprob: -5.27342414855957
    10. '                   ' → logprob: -5.52342414855957

Token 105: ' whole' (ID: 6062)
  Prédit: ' entire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entire' → logprob: -0.2029382586479187
    2. ' whole' → logprob: -1.8279383182525635
    3. 'whole' → logprob: -4.327938079833984
    4. 'ent' → logprob: -4.827938079833984
    5. ' wall' → logprob: -6.952938079833984
    6. '_ent' → logprob: -8.577938079833984
    7. ' ' → logprob: -8.952938079833984
    8. 'wall' → logprob: -9.077938079833984
    9. '[' → logprob: -9.577938079833984
    10. '_wh' → logprob: -9.702938079833984

Token 106: ' wall' (ID: 9688)
  Prédit: ' wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wall' → logprob: -0.006847269367426634
    2. 'wall' → logprob: -5.006847381591797
    3. '_wall' → logprob: -9.256847381591797
    4. ' circular' → logprob: -12.256847381591797
    5. 'Wall' → logprob: -12.506847381591797
    6. ' ' → logprob: -12.506847381591797
    7. ' segment' → logprob: -12.631847381591797
    8. 'self' → logprob: -13.131847381591797
    9. ' circle' → logprob: -13.131847381591797
    10. ' self' → logprob: -13.381847381591797

Token 107: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5955094695091248
    2. '
' → logprob: -1.5955095291137695
    3. '           ' → logprob: -2.3455095291137695
    4. ':' → logprob: -2.3455095291137695
    5. ':
' → logprob: -3.3455095291137695
    6. '\n' → logprob: -5.2205095291137695
    7. '<|end|>' → logprob: -6.2205095291137695
    8. ',' → logprob: -6.3455095291137695
    9. '                   ' → logprob: -6.4705095291137695
    10. '  
' → logprob: -6.9705095291137695

Token 108: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008496735244989395
    2. '           ' → logprob: -5.5084967613220215
    3. ' for' → logprob: -5.8834967613220215
    4. 'self' → logprob: -7.8834967613220215
    5. '                   ' → logprob: -8.758496284484863
    6. '```' → logprob: -8.883496284484863
    7. 'for' → logprob: -9.008496284484863
    8. '   ' → logprob: -9.258496284484863
    9. '<|end|>' → logprob: -9.258496284484863
    10. ':' → logprob: -9.383496284484863

Token 109: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10768312215805054
    2. 'for' (adapté à ' for') → logprob: -2.3576831817626953
    3. ' for' → logprob: -5.482683181762695
    4. ' self' → logprob: -5.982683181762695
    5. '               ' → logprob: -7.732683181762695
    6. '           ' → logprob: -8.107683181762695
    7. '                   ' → logprob: -10.982683181762695
    8. 'return' → logprob: -12.232683181762695
    9. '```' → logprob: -12.732683181762695
    10. ' ' → logprob: -13.732683181762695

Token 110: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023245826363563538
    2. ' i' → logprob: -3.7732458114624023
    3. '	i' → logprob: -15.398245811462402
    4. ' ' → logprob: -15.773245811462402
    5. '   ' → logprob: -17.52324676513672
    6. '```' → logprob: -17.77324676513672
    7. 'idx' → logprob: -18.39824676513672
    8. '`' → logprob: -18.89824676513672
    9. ' idx' → logprob: -19.02324676513672
    10. '_i' → logprob: -19.14824676513672

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005936978850513697
    2. 'in' → logprob: -5.130937099456787
    3. ' ' → logprob: -12.380936622619629
    4. ',' → logprob: -13.880936622619629
    5. '0' → logprob: -14.255936622619629
    6. '<|end|>' → logprob: -14.755936622619629
    7. 'i' → logprob: -15.380936622619629
    8. '
' → logprob: -15.380936622619629
    9. '_' → logprob: -15.505936622619629
    10. 's' → logprob: -15.630936622619629

Token 112: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193676352500916
    2. 'range' → logprob: -1.5019367933273315
    3. '   ' → logprob: -13.126936912536621
    4. '	range' → logprob: -13.126936912536621
    5. 'ange' → logprob: -13.626936912536621
    6. '    ' → logprob: -14.751936912536621
    7. ' ' → logprob: -14.751936912536621
    8. 'self' → logprob: -15.251936912536621
    9. '  ' → logprob: -15.376936912536621
    10. '```' → logprob: -15.626936912536621

Token 113: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010924381203949451
    2. '(' → logprob: -5.010924339294434
    3. '(self' → logprob: -5.510924339294434
    4. ' (' → logprob: -9.385924339294434
    5. 'n' → logprob: -10.510924339294434
    6. '(
' → logprob: -10.885924339294434
    7. '               ' → logprob: -12.385924339294434
    8. '           ' → logprob: -12.885924339294434
    9. 'self' → logprob: -12.885924339294434
    10. '(s' → logprob: -13.010924339294434

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019037840887904167
    2. '):
' → logprob: -4.01903772354126
    3. ' ):' → logprob: -7.39403772354126
    4. ':' → logprob: -8.519038200378418
    5. '):
' → logprob: -10.644038200378418
    6. ')' → logprob: -11.144038200378418
    7. ' ):
' → logprob: -11.144038200378418
    8. ']:' → logprob: -12.394038200378418
    9. '           ' → logprob: -12.394038200378418
    10. '       ' → logprob: -12.769038200378418

Token 115: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18603649735450745
    2. ':' → logprob: -2.6860365867614746
    3. '               ' → logprob: -2.6860365867614746
    4. ':
' → logprob: -4.561036586761475
    5. ' self' → logprob: -4.936036586761475
    6. '                       ' → logprob: -5.686036586761475
    7. '<|end|>' → logprob: -5.686036586761475
    8. 'self' → logprob: -6.436036586761475
    9. '           ' → logprob: -6.436036586761475
    10. '   ' → logprob: -6.936036586761475

Token 116: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6678845286369324
    2. 'self' (adapté à ' self') → logprob: -0.7928845286369324
    3. '                       ' → logprob: -3.792884588241577
    4. '                   ' → logprob: -5.042884349822998
    5. '               ' → logprob: -5.542884349822998
    6. '	self' → logprob: -7.417884349822998
    7. '   ' → logprob: -8.042884826660156
    8. '<|end|>' → logprob: -9.042884826660156
    9. '```' → logprob: -9.042884826660156
    10. '           ' → logprob: -9.167884826660156

Token 117: '.wall' (ID: 176423)
  Prédit: '.wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wall' → logprob: -0.00030733743915334344
    2. '.' → logprob: -8.250307083129883
    3. '.w' → logprob: -10.375307083129883
    4. ' .' → logprob: -11.500307083129883
    5. '           ' → logprob: -13.500307083129883
    6. '​.' → logprob: -14.875307083129883
    7. '```' → logprob: -15.125307083129883
    8. '.wave' → logprob: -15.125307083129883
    9. '.water' → logprob: -15.500307083129883

Token 118: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.000981243560090661
    2. '.wall' → logprob: -7.250981330871582
    3. '.' → logprob: -8.500981330871582
    4. '.paint' → logprob: -10.125981330871582
    5. ')._' → logprob: -11.625981330871582
    6. ']._' → logprob: -11.750981330871582
    7. ' .' → logprob: -12.375981330871582
    8. '```' → logprob: -13.250981330871582
    9. '_wall' → logprob: -13.750981330871582
    10. '.p' → logprob: -14.000981330871582

Token 119: 'paint' (ID: 44758)
  Prédit: 'paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: 0.0
    2. 'pain' → logprob: -17.375
    3. '-painted' → logprob: -17.875
    4. 'wall' → logprob: -18.0
    5. 'pa' → logprob: -18.75
    6. '```' → logprob: -19.0
    7. '.paint' → logprob: -19.125
    8. '_p' → logprob: -19.5
    9. 'painting' → logprob: -19.5
    10. '   ' → logprob: -20.125

Token 120: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -12.375009536743164
    3. '_ed' → logprob: -13.875009536743164
    4. 'e' → logprob: -14.250009536743164
    5. '   ' → logprob: -14.750009536743164
    6. '[self' → logprob: -15.125009536743164
    7. 'edt' → logprob: -15.375009536743164
    8. '       ' → logprob: -15.500009536743164
    9. 'edas' → logprob: -15.500009536743164
    10. 'eds' → logprob: -15.625009536743164

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2257022112607956
    2. '[' → logprob: -1.600702166557312
    3. ' [' → logprob: -8.975702285766602
    4. '[
' → logprob: -10.100702285766602
    5. '```' → logprob: -10.600702285766602
    6. '[I' → logprob: -11.225702285766602
    7. '[s' → logprob: -11.350702285766602
    8. '[in' → logprob: -11.475702285766602
    9. '[int' → logprob: -11.975702285766602
    10. '[index' → logprob: -11.975702285766602

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0043656788766384125
    2. ' ]' → logprob: -5.62936544418335
    3. ']=' → logprob: -7.25436544418335
    4. ' =' → logprob: -10.379365921020508
    5. '           ' → logprob: -11.629365921020508
    6. '=' → logprob: -11.879365921020508
    7. '=True' → logprob: -13.004365921020508
    8. ')' → logprob: -13.254365921020508
    9. ']
' → logprob: -13.629365921020508
    10. '       ' → logprob: -13.754365921020508

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021906346082687
    2. ' =' → logprob: -2.3502190113067627
    3. '=True' → logprob: -11.475218772888184
    4. '[' → logprob: -13.725218772888184
    5. ' ' → logprob: -15.475218772888184
    6. '=
' → logprob: -15.725218772888184
    7. '<|end|>' → logprob: -16.3502197265625
    8. ']' → logprob: -16.4752197265625
    9. ' =
' → logprob: -16.6002197265625
    10. '=

' → logprob: -16.7252197265625

Token 124: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -18.631715774536133
    4. '=True' → logprob: -19.131715774536133
    5. '.True' → logprob: -20.131715774536133
    6. '                   ' → logprob: -20.131715774536133
    7. '               ' → logprob: -21.256715774536133
    8. 'Tr' → logprob: -21.381715774536133
    9. 'true' → logprob: -21.756715774536133
    10. '_true' → logprob: -22.131715774536133

Token 125: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5646683573722839
    2. '
' → logprob: -1.3146684169769287
    3. 'elif' → logprob: -2.3146684169769287
    4. 'else' → logprob: -4.06466817855835
    5. '\n' → logprob: -4.18966817855835
    6. '               ' → logprob: -5.06466817855835
    7. '```' → logprob: -5.43966817855835
    8. '            
' → logprob: -5.68966817855835
    9. 'return' → logprob: -5.81466817855835
    10. '<|end|>' → logprob: -5.81466817855835

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08008790016174316
    2. 'elif' → logprob: -3.205087900161743
    3. '
' → logprob: -4.080087661743164
    4. '               ' → logprob: -4.955087661743164
    5. 'else' → logprob: -5.330087661743164
    6. 'return' → logprob: -6.705087661743164
    7. '       ' → logprob: -6.705087661743164
    8. '```' → logprob: -6.955087661743164
    9. ' elif' → logprob: -7.080087661743164
    10. '            
' → logprob: -7.080087661743164

Token 127: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.507430374622345
    2. 'else' → logprob: -1.2574303150177002
    3. ' else' → logprob: -2.7574303150177
    4. ' elif' → logprob: -3.0074303150177
    5. '           ' → logprob: -7.507430553436279
    6. '       ' → logprob: -9.632430076599121
    7. '
' → logprob: -10.382430076599121
    8. '	elif' → logprob: -11.007430076599121
    9. '            
' → logprob: -11.382430076599121
    10. 'e' → logprob: -11.882430076599121

Token 128: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06521208584308624
    2. 'self' → logprob: -2.8152120113372803
    3. ' end' → logprob: -6.565212249755859
    4. ' (' → logprob: -6.815212249755859
    5. 'end' → logprob: -7.565212249755859
    6. '(self' → logprob: -9.31521224975586
    7. ' ' → logprob: -9.94021224975586
    8. '(' → logprob: -11.06521224975586
    9. '(end' → logprob: -11.19021224975586
    10. '           ' → logprob: -11.31521224975586

Token 129: '.start' (ID: 10181)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.022358031943440437
    2. '.start' → logprob: -4.147357940673828
    3. '.' → logprob: -5.522357940673828
    4. ' .' → logprob: -6.147357940673828
    5. 'start' → logprob: -10.897357940673828
    6. '.wall' → logprob: -10.897357940673828
    7. 'length' → logprob: -11.022357940673828
    8. '.l' → logprob: -11.022357940673828
    9. '._' → logprob: -11.022357940673828
    10. ' ' → logprob: -11.772357940673828

Token 130: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5057132244110107
    2. ' <' → logprob: -1.0057132244110107
    3. ' ' → logprob: -3.6307132244110107
    4. ' >' → logprob: -6.00571346282959
    5. ' +' → logprob: -7.13071346282959
    6. '<=' → logprob: -7.63071346282959
    7. '+' → logprob: -8.13071346282959
    8. ' >=' → logprob: -8.38071346282959
    9. ' ==' → logprob: -9.13071346282959
    10. '<' → logprob: -9.13071346282959

Token 131: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.14767177402973175
    2. ' end' → logprob: -2.147671699523926
    3. 'self' → logprob: -4.022671699523926
    4. ' self' → logprob: -6.022671699523926
    5. '=end' → logprob: -8.897671699523926
    6. '=' → logprob: -10.147671699523926
    7. ' ' → logprob: -12.147671699523926
    8. '(end' → logprob: -12.272671699523926
    9. '_end' → logprob: -12.522671699523926
    10. '	end' → logprob: -12.772671699523926

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005846070707775652
    2. ':
' → logprob: -7.500584602355957
    3. ' :' → logprob: -10.625584602355957
    4. '           ' → logprob: -12.750584602355957
    5. '               ' → logprob: -13.500584602355957
    6. '):' → logprob: -13.500584602355957
    7. '       ' → logprob: -15.000584602355957
    8. ':

' → logprob: -15.250584602355957
    9. ' and' → logprob: -15.375584602355957
    10. ' :
' → logprob: -15.625584602355957

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6191294193267822
    2. ':' → logprob: -0.8691294193267822
    3. '           ' → logprob: -3.9941294193267822
    4. ':
' → logprob: -4.369129180908203
    5. '
' → logprob: -5.119129180908203
    6. '<|end|>' → logprob: -6.619129180908203
    7. '                
' → logprob: -6.994129180908203
    8. '            
' → logprob: -7.494129180908203
    9. ' for' → logprob: -7.869129180908203
    10. '       ' → logprob: -8.369129180908203

Token 134: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6248235702514648
    2. '
' → logprob: -1.4998235702514648
    3. ' for' → logprob: -1.8748235702514648
    4. ' 
' → logprob: -3.374823570251465
    5. 'for' → logprob: -4.124823570251465
    6. '           ' → logprob: -4.124823570251465
    7. '                
' → logprob: -4.999823570251465
    8. '                ' → logprob: -5.624823570251465
    9. '\n' → logprob: -5.624823570251465
    10. '            
' → logprob: -5.999823570251465

Token 135: ' Non' (ID: 13763)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47439470887184143
    2. 'for' → logprob: -0.974394679069519
    3. '               ' → logprob: -8.224394798278809
    4. '           ' → logprob: -10.974394798278809
    5. 'For' → logprob: -11.724394798278809
    6. '                   ' → logprob: -12.099394798278809
    7. '#' → logprob: -12.349394798278809
    8. ' #' → logprob: -12.724394798278809
    9. '	for' → logprob: -12.849394798278809
    10. '
' → logprob: -12.974394798278809

Token 136: ' wrap' (ID: 20404)
  Prédit: ' wrap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrap' → logprob: -0.582079291343689
    2. ' wrapping' → logprob: -1.582079291343689
    3. ' circular' → logprob: -2.4570794105529785
    4. '-wrap' → logprob: -3.3320794105529785
    5. '-w' → logprob: -3.7070794105529785
    6. ' wrapped' → logprob: -3.7070794105529785
    7. 'wrap' → logprob: -3.8320794105529785
    8. 'c' → logprob: -4.2070794105529785
    9. '_wr' → logprob: -5.0820794105529785
    10. '-c' → logprob: -5.5820794105529785

Token 137: '-around' (ID: 74344)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.47806885838508606
    2. '-around' → logprob: -1.3530688285827637
    3. '               ' → logprob: -2.4780688285827637
    4. ' around' → logprob: -4.478068828582764
    5. '-' → logprob: -4.603068828582764
    6. '           ' → logprob: -4.853068828582764
    7. '   ' → logprob: -5.478068828582764
    8. ' -' → logprob: -7.103068828582764
    9. ' ' → logprob: -7.228068828582764
    10. '                ' → logprob: -7.353068828582764

Token 138: ' interval' (ID: 17116)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2834028005599976
    2. ' for' → logprob: -1.4084028005599976
    3. '               ' → logprob: -1.4084028005599976
    4. '           ' → logprob: -2.158402919769287
    5. 'for' → logprob: -2.408402919769287
    6. ':
' → logprob: -3.908402919769287
    7. '                   ' → logprob: -5.283402919769287
    8. '   ' → logprob: -7.533402919769287
    9. '                ' → logprob: -7.533402919769287
    10. '            ' → logprob: -7.658402919769287

Token 139: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07344456762075424
    2. ' for' → logprob: -3.1984446048736572
    3. ':' → logprob: -4.323444366455078
    4. '           ' → logprob: -4.573444366455078
    5. '                   ' → logprob: -5.948444366455078
    6. ':
' → logprob: -6.948444366455078
    7. '                
' → logprob: -7.073444366455078
    8. 'for' → logprob: -7.448444366455078
    9. '                ' → logprob: -7.698444366455078
    10. '            
' → logprob: -8.698444366455078

Token 140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006982356775552034
    2. ':' → logprob: -5.756982326507568
    3. ' for' → logprob: -6.131982326507568
    4. '                   ' → logprob: -7.881982326507568
    5. ':
' → logprob: -7.881982326507568
    6. '           ' → logprob: -8.131982803344727
    7. '                
' → logprob: -8.256982803344727
    8. 'for' → logprob: -9.256982803344727
    9. '                ' → logprob: -9.506982803344727
    10. '    
' → logprob: -10.756982803344727

Token 141: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2529442310333252
    2. ' for' → logprob: -1.5029442310333252
    3. '               ' → logprob: -7.127943992614746
    4. '                   ' → logprob: -8.627943992614746
    5. '   ' → logprob: -11.127943992614746
    6. '	for' → logprob: -11.627943992614746
    7. '           ' → logprob: -12.127943992614746
    8. ' ' → logprob: -13.252943992614746
    9. '```' → logprob: -14.002943992614746
    10. '	           ' → logprob: -14.752943992614746

Token 142: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2255699783563614
    2. 'i' → logprob: -1.6005699634552002
    3. ' self' → logprob: -9.725569725036621
    4. ' ' → logprob: -9.850569725036621
    5. 'self' → logprob: -11.100569725036621
    6. '   ' → logprob: -11.350569725036621
    7. ' in' → logprob: -12.225569725036621
    8. '	i' → logprob: -12.350569725036621
    9. ' range' → logprob: -13.100569725036621
    10. '    ' → logprob: -13.225569725036621

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023014359176158905
    2. ' ' → logprob: -6.627301216125488
    3. 'in' → logprob: -7.002301216125488
    4. '                ' → logprob: -10.002301216125488
    5. '            ' → logprob: -11.752301216125488
    6. '                    ' → logprob: -13.502301216125488
    7. '        ' → logprob: -13.752301216125488
    8. '    ' → logprob: -14.127301216125488
    9. '<|end|>' → logprob: -14.127301216125488
    10. ' =' → logprob: -14.252301216125488

Token 144: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04860473424196243
    2. 'range' → logprob: -3.048604726791382
    3. ' ' → logprob: -11.548604965209961
    4. '	range' → logprob: -12.673604965209961
    5. '   ' → logprob: -12.923604965209961
    6. '(range' → logprob: -14.298604965209961
    7. '    ' → logprob: -14.423604965209961
    8. '  ' → logprob: -15.298604965209961
    9. '```' → logprob: -15.923604965209961
    10. '
' → logprob: -16.04860496520996

Token 145: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015477105043828487
    2. 'self' → logprob: -6.876547813415527
    3. ' self' → logprob: -7.751547813415527
    4. ' (' → logprob: -10.501547813415527
    5. '               ' → logprob: -10.501547813415527
    6. '(' → logprob: -10.876547813415527
    7. '           ' → logprob: -11.876547813415527
    8. '	self' → logprob: -14.376547813415527
    9. '[self' → logprob: -14.501547813415527
    10. '                   ' → logprob: -14.501547813415527

Token 146: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.003337886882945895
    2. 'start' → logprob: -5.753337860107422
    3. '.' → logprob: -9.253337860107422
    4. ' .' → logprob: -10.003337860107422
    5. '.wall' → logprob: -12.628337860107422
    6. '.paint' → logprob: -13.253337860107422
    7. ' ' → logprob: -13.503337860107422
    8. '_start' → logprob: -13.628337860107422
    9. ').' → logprob: -13.628337860107422
    10. '.length' → logprob: -13.753337860107422

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07728084921836853
    2. ' ,' → logprob: -2.7022807598114014
    3. ',end' → logprob: -5.2022809982299805
    4. ' ' → logprob: -8.07728099822998
    5. '                ' → logprob: -8.20228099822998
    6. '            ' → logprob: -8.20228099822998
    7. '+' → logprob: -8.32728099822998
    8. '                   ' → logprob: -8.82728099822998
    9. '               ' → logprob: -8.82728099822998
    10. '           ' → logprob: -9.20228099822998

Token 148: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16022585332393646
    2. ' end' → logprob: -1.9102258682250977
    3. '	end' → logprob: -14.785225868225098
    4. '(end' → logprob: -15.035225868225098
    5. '           ' → logprob: -15.160225868225098
    6. '[end' → logprob: -15.785225868225098
    7. '               ' → logprob: -15.910225868225098
    8. '=end' → logprob: -16.41022491455078
    9. '_end' → logprob: -16.53522491455078
    10. ',end' → logprob: -16.66022491455078

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07030940800905228
    2. '):
' → logprob: -2.6953094005584717
    3. ':' → logprob: -9.19530963897705
    4. ' ):' → logprob: -9.19530963897705
    5. '+' → logprob: -9.32030963897705
    6. '               ' → logprob: -10.19530963897705
    7. '):
' → logprob: -11.44530963897705
    8. '           ' → logprob: -11.82030963897705
    9. '                   ' → logprob: -11.94530963897705
    10. ' ):
' → logprob: -12.07030963897705

Token 150: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027645176276564598
    2. ' self' → logprob: -4.152645111083984
    3. 'self' → logprob: -5.152645111083984
    4. '               ' → logprob: -5.777645111083984
    5. '   ' → logprob: -6.652645111083984
    6. '                       ' → logprob: -6.902645111083984
    7. '           ' → logprob: -9.277645111083984
    8. ':' → logprob: -9.527645111083984
    9. '[self' → logprob: -10.402645111083984
    10. '	self' → logprob: -10.527645111083984

Token 151: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11511307209730148
    2. 'self' (adapté à ' self') → logprob: -2.2401130199432373
    3. '                   ' → logprob: -6.240113258361816
    4. '                    ' → logprob: -8.615113258361816
    5. '                       ' → logprob: -9.615113258361816
    6. '                ' → logprob: -10.740113258361816
    7. '	self' → logprob: -10.990113258361816
    8. ' ' → logprob: -11.115113258361816
    9. '               ' → logprob: -11.865113258361816
    10. ' ' → logprob: -12.240113258361816

Token 152: '.wall' (ID: 176423)
  Prédit: '.wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wall' → logprob: -0.000518482003826648
    2. 'wall' → logprob: -7.750518321990967
    3. '.' → logprob: -9.750518798828125
    4. ' .' → logprob: -10.750518798828125
    5. ' wall' → logprob: -12.375518798828125
    6. '_wall' → logprob: -14.250518798828125
    7. '.w' → logprob: -14.375518798828125
    8. '.wave' → logprob: -14.875518798828125
    9. '```' → logprob: -15.000518798828125
    10. '-wall' → logprob: -15.375518798828125

Token 153: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.4034345187828876e-05
    2. '.wall' → logprob: -11.62502384185791
    3. ']._' → logprob: -12.00002384185791
    4. ')._' → logprob: -12.37502384185791
    5. '.' → logprob: -13.00002384185791
    6. '_wall' → logprob: -13.50002384185791
    7. ' .' → logprob: -14.37502384185791
    8. '."_' → logprob: -16.375024795532227
    9. '       ' → logprob: -16.625024795532227
    10. '   ' → logprob: -17.375024795532227

Token 154: 'paint' (ID: 44758)
  Prédit: 'paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -2.2200749754119897e-06
    2. '.paint' → logprob: -14.125001907348633
    3. 'pa' → logprob: -14.500001907348633
    4. 'pain' → logprob: -15.125001907348633
    5. 'painting' → logprob: -16.000001907348633
    6. '```' → logprob: -16.250001907348633
    7. '_p' → logprob: -16.500001907348633
    8. ' painted' → logprob: -16.875001907348633
    9. '-painted' → logprob: -16.875001907348633
    10. 'Paint' → logprob: -17.625001907348633

Token 155: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -3.845798710244708e-05
    2. '[' → logprob: -10.875038146972656
    3. 'ед' → logprob: -12.250038146972656
    4. 'eded' → logprob: -13.000038146972656
    5. 'ted' → logprob: -13.250038146972656
    6. 'ated' → logprob: -13.250038146972656
    7. '   ' → logprob: -14.250038146972656
    8. '_ed' → logprob: -14.500038146972656
    9. 'edas' → logprob: -14.625038146972656
    10. 'edback' → logprob: -14.625038146972656

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007628519553691149
    2. '[' → logprob: -4.882628440856934
    3. ' [' → logprob: -11.132628440856934
    4. '[
' → logprob: -13.007628440856934
    5. '[I' → logprob: -13.507628440856934
    6. '```' → logprob: -13.757628440856934
    7. ' ' → logprob: -14.632628440856934
    8. '[self' → logprob: -15.132628440856934
    9. '\[' → logprob: -15.132628440856934
    10. '[int' → logprob: -15.132628440856934

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003552463313098997
    2. ' ]' → logprob: -8.37535572052002
    3. ']=' → logprob: -9.12535572052002
    4. '=' → logprob: -11.87535572052002
    5. ' =' → logprob: -12.12535572052002
    6. ')' → logprob: -13.25035572052002
    7. '[' → logprob: -14.50035572052002
    8. ']
' → logprob: -14.75035572052002
    9. '=True' → logprob: -15.75035572052002
    10. '           ' → logprob: -16.250354766845703

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741535782814026
    2. '=' → logprob: -0.9741535782814026
    3. ']' → logprob: -9.974153518676758
    4. '[' → logprob: -11.474153518676758
    5. '=True' → logprob: -11.724153518676758
    6. ' ' → logprob: -12.349153518676758
    7. ']=' → logprob: -13.099153518676758
    8. '                   ' → logprob: -13.599153518676758
    9. '               ' → logprob: -13.724153518676758
    10. '           ' → logprob: -14.349153518676758

Token 159: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750484973192215
    2. ' True' → logprob: -3.5297505855560303
    3. '=True' → logprob: -17.90475082397461
    4. '(True' → logprob: -17.90475082397461
    5. '.True' → logprob: -19.77975082397461
    6. 'true' → logprob: -21.02975082397461
    7. '1' → logprob: -21.15475082397461
    8. ' ' → logprob: -21.65475082397461
    9. '   ' → logprob: -21.65475082397461
    10. '_true' → logprob: -21.65475082397461

Token 160: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0090460991486907
    2. 'else' → logprob: -5.0090460777282715
    3. ' else' → logprob: -6.8840460777282715
    4. 'elif' → logprob: -7.1340460777282715
    5. '            
' → logprob: -8.38404655456543
    6. '               ' → logprob: -10.25904655456543
    7. '<|end|>' → logprob: -10.38404655456543
    8. '    
' → logprob: -10.38404655456543
    9. '\n' → logprob: -10.50904655456543
    10. '		' → logprob: -10.50904655456543

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006374398712068796
    2. 'else' → logprob: -5.256374359130859
    3. ' else' → logprob: -7.631374359130859
    4. 'elif' → logprob: -7.631374359130859
    5. '            
' → logprob: -9.88137435913086
    6. '               ' → logprob: -10.38137435913086
    7. ' elif' → logprob: -11.13137435913086
    8. '    
' → logprob: -11.13137435913086
    9. '```' → logprob: -11.50637435913086
    10. '       ' → logprob: -11.50637435913086

Token 162: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01477013248950243
    2. '           ' → logprob: -4.514770030975342
    3. ' else' → logprob: -5.639770030975342
    4. 'elif' → logprob: -8.7647705078125
    5. '	else' → logprob: -12.7647705078125
    6. '       ' → logprob: -14.0147705078125
    7. ' elif' → logprob: -14.6397705078125
    8. '		' → logprob: -14.6397705078125
    9. 'el' → logprob: -15.1397705078125
    10. 'e' → logprob: -15.1397705078125

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1288032978773117
    2. ':
' → logprob: -2.128803253173828
    3. '               ' → logprob: -6.503803253173828
    4. '           ' → logprob: -8.003803253173828
    5. '            ' → logprob: -11.753803253173828
    6. ' :' → logprob: -11.878803253173828
    7. ',' → logprob: -12.003803253173828
    8. ' :
' → logprob: -12.253803253173828
    9. '{' → logprob: -12.378803253173828
    10. ':
' → logprob: -12.753803253173828

Token 164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026013687252998352
    2. ' for' → logprob: -4.0260138511657715
    3. 'for' → logprob: -4.9010138511657715
    4. '           ' → logprob: -7.9010138511657715
    5. '            ' → logprob: -11.526013374328613
    6. '             ' → logprob: -12.776013374328613
    7. '              ' → logprob: -12.776013374328613
    8. '                ' → logprob: -13.151013374328613
    9. '			' → logprob: -13.776013374328613
    10. '	for' → logprob: -14.026013374328613

Token 165: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34400832653045654
    2. ' for' → logprob: -1.5940083265304565
    3. '               ' → logprob: -2.469008445739746
    4. '           ' → logprob: -5.844008445739746
    5. '#' (adapté à ' #') → logprob: -8.094008445739746
    6. ' #' → logprob: -10.219008445739746
    7. '   ' → logprob: -11.344008445739746
    8. '                   ' → logprob: -11.594008445739746
    9. '                ' → logprob: -12.094008445739746
    10. '            ' → logprob: -12.094008445739746

Token 166: ' Wrap' (ID: 60850)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22756735980510712
    2. ' for' → logprob: -1.8525673151016235
    3. '#' → logprob: -3.227567434310913
    4. ' #' → logprob: -5.227567195892334
    5. '               ' → logprob: -6.727567195892334
    6. '           ' → logprob: -8.602567672729492
    7. 'For' → logprob: -8.977567672729492
    8. ' ' → logprob: -9.227567672729492
    9. ' For' → logprob: -11.102567672729492
    10. '   ' → logprob: -11.352567672729492

Token 167: '-around' (ID: 74344)
  Prédit: '-around'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-around' → logprob: -0.2725319564342499
    2. '               ' → logprob: -1.6475319862365723
    3. 'around' → logprob: -3.1475319862365723
    4. '   ' → logprob: -7.147531986236572
    5. '-' → logprob: -7.522531986236572
    6. ' around' → logprob: -7.897531986236572
    7. '                   ' → logprob: -8.022531509399414
    8. '_' → logprob: -8.147531509399414
    9. 'Around' → logprob: -8.147531509399414
    10. '           ' → logprob: -8.397531509399414

Token 168: ' interval' (ID: 17116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5826151371002197
    2. ' for' → logprob: -1.3326151371002197
    3. 'for' → logprob: -2.2076151371002197
    4. '           ' → logprob: -2.7076151371002197
    5. '
' → logprob: -7.207614898681641
    6. '                   ' → logprob: -9.20761489868164
    7. '                
' → logprob: -10.08261489868164
    8. '            
' → logprob: -10.20761489868164
    9. '```' → logprob: -10.45761489868164
    10. '    
' → logprob: -10.45761489868164

Token 169: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35090386867523193
    2. ' for' → logprob: -1.600903868675232
    3. 'for' → logprob: -2.6009039878845215
    4. '           ' → logprob: -4.2259039878845215
    5. '
' → logprob: -5.8509039878845215
    6. '                   ' → logprob: -6.6009039878845215
    7. '                
' → logprob: -7.9759039878845215
    8. '  
' → logprob: -8.725903511047363
    9. '```' → logprob: -8.850903511047363
    10. '    
' → logprob: -8.850903511047363

Token 170: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6011765599250793
    2. '               ' → logprob: -1.2261765003204346
    3. '           ' → logprob: -2.4761765003204346
    4. ' for' → logprob: -2.6011765003204346
    5. '
' → logprob: -9.726176261901855
    6. '```' → logprob: -9.851176261901855
    7. '                   ' → logprob: -10.476176261901855
    8. '   ' → logprob: -11.976176261901855
    9. '	for' → logprob: -12.101176261901855
    10. '       ' → logprob: -12.226176261901855

Token 171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3876190483570099
    2. ' for' → logprob: -1.1376190185546875
    3. '               ' → logprob: -7.2626190185546875
    4. '           ' → logprob: -10.137619018554688
    5. '                   ' → logprob: -13.012619018554688
    6. '```' → logprob: -13.137619018554688
    7. ' ' → logprob: -14.012619018554688
    8. '   ' → logprob: -14.137619018554688
    9. '	for' → logprob: -14.512619018554688
    10. '                ' → logprob: -15.387619018554688

Token 172: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03366414085030556
    2. 'i' → logprob: -3.4086642265319824
    3. ' ' → logprob: -12.158663749694824
    4. '   ' → logprob: -12.658663749694824
    5. '	i' → logprob: -13.033663749694824
    6. '  ' → logprob: -13.533663749694824
    7. '```' → logprob: -13.533663749694824
    8. '    ' → logprob: -13.658663749694824
    9. 'range' → logprob: -13.783663749694824
    10. 'I' → logprob: -14.658663749694824

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20149217545986176
    2. 'in' → logprob: -1.701492190361023
    3. '   ' → logprob: -11.201492309570312
    4. ' ' → logprob: -11.451492309570312
    5. 'self' → logprob: -11.701492309570312
    6. 'In' → logprob: -11.951492309570312
    7. '
' → logprob: -12.076492309570312
    8. 'n' → logprob: -12.076492309570312
    9. '    ' → logprob: -12.451492309570312
    10. '  ' → logprob: -12.701492309570312

Token 174: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20144745707511902
    2. ' range' → logprob: -1.7014474868774414
    3. '(range' → logprob: -11.326447486877441
    4. 'list' → logprob: -11.701447486877441
    5. '   ' → logprob: -11.951447486877441
    6. ' ' → logprob: -12.951447486877441
    7. ' list' → logprob: -13.326447486877441
    8. '  ' → logprob: -13.951447486877441
    9. '    ' → logprob: -13.951447486877441
    10. '	range' → logprob: -14.576447486877441

Token 175: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.125015258789062
    4. '(s' → logprob: -15.500015258789062
    5. 'self' → logprob: -17.375015258789062
    6. ' self' → logprob: -18.750015258789062
    7. '(sel' → logprob: -19.000015258789062
    8. '(
' → logprob: -19.250015258789062
    9. '(n' → logprob: -19.625015258789062
    10. '[self' → logprob: -19.875015258789062

Token 176: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.04415982589125633
    2. 'start' → logprob: -3.1691598892211914
    3. 'self' → logprob: -7.169159889221191
    4. ',' → logprob: -9.544159889221191
    5. '       ' → logprob: -9.919159889221191
    6. '_start' → logprob: -9.919159889221191
    7. '           ' → logprob: -10.044159889221191
    8. '(self' → logprob: -10.169159889221191
    9. ' start' → logprob: -10.294159889221191
    10. '               ' → logprob: -10.669159889221191

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014764121442567557
    2. ',n' → logprob: -9.250147819519043
    3. ' ,' → logprob: -10.000147819519043
    4. 'n' → logprob: -12.125147819519043
    5. ',
' → logprob: -14.625147819519043
    6. ',len' → logprob: -16.500146865844727
    7. ',

' → logprob: -17.125146865844727
    8. ')' → logprob: -18.000146865844727
    9. 'self' → logprob: -18.000146865844727
    10. '),' → logprob: -18.000146865844727

Token 178: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007908092229627073
    2. 'self' → logprob: -7.250790596008301
    3. ' n' → logprob: -9.7507905960083
    4. 'len' → logprob: -10.7507905960083
    5. ' self' → logprob: -15.1257905960083
    6. '           ' → logprob: -15.6257905960083
    7. ')n' → logprob: -15.6257905960083
    8. '_n' → logprob: -16.000791549682617
    9. ')' → logprob: -16.500791549682617
    10. '	n' → logprob: -16.875791549682617

Token 179: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20148320496082306
    2. '):' → logprob: -1.7014832496643066
    3. '                   ' → logprob: -10.701482772827148
    4. '):
' → logprob: -10.826482772827148
    5. '               ' → logprob: -11.451482772827148
    6. '           ' → logprob: -12.076482772827148
    7. ':' → logprob: -12.576482772827148
    8. '):

' → logprob: -12.701482772827148
    9. '       ' → logprob: -13.076482772827148
    10. ':
' → logprob: -14.451482772827148

Token 180: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018419621512293816
    2. 'self' → logprob: -4.6434197425842285
    3. '               ' → logprob: -5.1434197425842285
    4. ' self' → logprob: -6.2684197425842285
    5. '                       ' → logprob: -7.2684197425842285
    6. '   ' → logprob: -9.26841926574707
    7. '           ' → logprob: -10.51841926574707
    8. ':' → logprob: -10.64341926574707
    9. ':self' → logprob: -10.76841926574707
    10. '[self' → logprob: -11.39341926574707

Token 181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07153593003749847
    2. ' self' → logprob: -2.69653582572937
    3. '                   ' → logprob: -6.571536064147949
    4. '                       ' → logprob: -9.32153606414795
    5. '               ' → logprob: -9.44653606414795
    6. '	self' → logprob: -11.44653606414795
    7. '   ' → logprob: -11.82153606414795
    8. '[self' → logprob: -12.32153606414795
    9. '           ' → logprob: -12.69653606414795
    10. ' ' → logprob: -13.32153606414795

Token 182: '.wall' (ID: 176423)
  Prédit: '.wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wall' → logprob: -0.004271546378731728
    2. '._' → logprob: -5.629271507263184
    3. ' .' → logprob: -7.754271507263184
    4. '.' → logprob: -9.004271507263184
    5. '_wall' → logprob: -9.754271507263184
    6. 'wall' → logprob: -10.379271507263184
    7. '           ' → logprob: -11.879271507263184
    8. '       ' → logprob: -11.879271507263184
    9. ' wall' → logprob: -12.254271507263184
    10. '   ' → logprob: -12.629271507263184

Token 183: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001507405104348436
    2. '.wall' → logprob: -9.750150680541992
    3. '.' → logprob: -10.125150680541992
    4. ']._' → logprob: -10.625150680541992
    5. ' .' → logprob: -11.125150680541992
    6. '_wall' → logprob: -12.500150680541992
    7. ')._' → logprob: -12.750150680541992
    8. '           ' → logprob: -13.250150680541992
    9. '   ' → logprob: -13.500150680541992
    10. '       ' → logprob: -13.500150680541992

Token 184: 'paint' (ID: 44758)
  Prédit: 'paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -1.4259644558478612e-05
    2. 'wall' → logprob: -11.500014305114746
    3. '.paint' → logprob: -13.750014305114746
    4. 'pain' → logprob: -14.000014305114746
    5. 'pa' → logprob: -14.250014305114746
    6. '```' → logprob: -15.375014305114746
    7. '-painted' → logprob: -15.750014305114746
    8. '_wall' → logprob: -16.12501335144043
    9. ' paint' → logprob: -16.12501335144043
    10. 'painting' → logprob: -16.25001335144043

Token 185: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0002128382766386494
    2. 'ted' → logprob: -8.625212669372559
    3. 'ated' → logprob: -11.000212669372559
    4. '[' → logprob: -11.625212669372559
    5. '[i' → logprob: -13.250212669372559
    6. 'ед' → logprob: -14.125212669372559
    7. '   ' → logprob: -14.375212669372559
    8. 't' → logprob: -14.375212669372559
    9. 'eded' → logprob: -14.625212669372559
    10. 'ited' → logprob: -14.875212669372559

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005563704180531204
    2. '[' → logprob: -7.500556468963623
    3. ' [' → logprob: -13.250555992126465
    4. '[I' → logprob: -14.125555992126465
    5. 'i' → logprob: -15.125555992126465
    6. 'True' → logprob: -15.375555992126465
    7. '[
' → logprob: -16.25055694580078
    8. '[self' → logprob: -16.50055694580078
    9. '(i' → logprob: -16.50055694580078
    10. '```' → logprob: -17.62555694580078

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002174170222133398
    2. '=' → logprob: -6.752174377441406
    3. ' =' → logprob: -7.627174377441406
    4. ']=' → logprob: -7.877174377441406
    5. ' ]' → logprob: -9.002174377441406
    6. ')' → logprob: -12.002174377441406
    7. '                   ' → logprob: -12.877174377441406
    8. '           ' → logprob: -13.627174377441406
    9. '               ' → logprob: -13.752174377441406
    10. '[' → logprob: -14.002174377441406

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602337658405304
    2. ' =' → logprob: -1.910233736038208
    3. '=True' → logprob: -11.910233497619629
    4. ']' → logprob: -13.910233497619629
    5. '[' → logprob: -14.160233497619629
    6. ']=' → logprob: -15.285233497619629
    7. ' =
' → logprob: -15.660233497619629
    8. '           ' → logprob: -15.785233497619629
    9. '               ' → logprob: -15.910233497619629
    10. '                   ' → logprob: -15.910233497619629

Token 189: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '(True' → logprob: -19.50007438659668
    4. '=True' → logprob: -20.37507438659668
    5. '   ' → logprob: -21.50007438659668
    6. '.True' → logprob: -21.62507438659668
    7. '
' → logprob: -22.50007438659668
    8. 'true' → logprob: -23.25007438659668
    9. ' ' → logprob: -23.75007438659668
    10. '[' → logprob: -23.87507438659668

Token 190: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1975175440311432
    2. '           ' → logprob: -3.0725176334381104
    3. '
' → logprob: -3.1975176334381104
    4. 'for' → logprob: -3.3225176334381104
    5. ' for' → logprob: -4.072517395019531
    6. ' 
' → logprob: -4.447517395019531
    7. '                
' → logprob: -4.447517395019531
    8. '  
' → logprob: -5.447517395019531
    9. '\n' → logprob: -5.697517395019531
    10. '            
' → logprob: -5.947517395019531

Token 191: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06283587217330933
    2. ' for' → logprob: -3.187835931777954
    3. 'for' → logprob: -4.312835693359375
    4. '           ' → logprob: -6.062835693359375
    5. '                
' → logprob: -6.312835693359375
    6. '                   ' → logprob: -7.687835693359375
    7. '       ' → logprob: -7.812835693359375
    8. ' 
' → logprob: -7.937835693359375
    9. '
' → logprob: -8.437835693359375
    10. '    
' → logprob: -8.562835693359375

Token 192: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011135423555970192
    2. ' for' → logprob: -4.511135578155518
    3. '               ' → logprob: -9.38613510131836
    4. '           ' → logprob: -12.63613510131836
    5. '	for' → logprob: -16.26113510131836
    6. '       ' → logprob: -16.26113510131836
    7. '```' → logprob: -16.63613510131836
    8. ' ' → logprob: -17.13613510131836
    9. '   ' → logprob: -17.38613510131836
    10. '                   ' → logprob: -17.88613510131836

Token 193: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06994055211544037
    2. ' i' → logprob: -2.6949405670166016
    3. '   ' → logprob: -13.569940567016602
    4. ' ' → logprob: -13.694940567016602
    5. '	i' → logprob: -14.444940567016602
    6. 'I' → logprob: -14.819940567016602
    7. '  ' → logprob: -14.944940567016602
    8. '    ' → logprob: -15.819940567016602
    9. '```' → logprob: -16.1949405670166
    10. 'in' → logprob: -16.4449405670166

Token 194: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5822144150733948
    2. ' in' → logprob: -0.8322144150733948
    3. '(' → logprob: -5.08221435546875
    4. ' (' → logprob: -10.70721435546875
    5. '(in' → logprob: -11.70721435546875
    6. '0' → logprob: -11.83221435546875
    7. ')' → logprob: -12.95721435546875
    8. ' ' → logprob: -13.33221435546875
    9. '[' → logprob: -13.45721435546875
    10. 'n' → logprob: -13.70721435546875

Token 195: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004244485404342413
    2. ' range' → logprob: -5.504244327545166
    3. '0' → logprob: -8.754244804382324
    4. '(' → logprob: -12.129244804382324
    5. ' ' → logprob: -13.379244804382324
    6. '(range' → logprob: -13.629244804382324
    7. '	range' → logprob: -15.754244804382324
    8. '   ' → logprob: -17.254243850708008
    9. 'rang' → logprob: -18.129243850708008
    10. 'ran' → logprob: -19.254243850708008

Token 196: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5768750905990601
    2. '(end' → logprob: -0.8268750905990601
    3. '0' → logprob: -7.20187520980835
    4. 'end' → logprob: -8.576874732971191
    5. ':end' → logprob: -14.326874732971191
    6. ',end' → logprob: -15.326874732971191
    7. ' (' → logprob: -15.826874732971191
    8. '[end' → logprob: -15.826874732971191
    9. '=end' → logprob: -16.326875686645508
    10. ''end' → logprob: -16.451875686645508

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132990896701813
    2. 'end' → logprob: -1.3132990598678589
    3. ' end' → logprob: -10.688299179077148
    4. ' ' → logprob: -11.813299179077148
    5. '   ' → logprob: -12.313299179077148
    6. '(end' → logprob: -14.313299179077148
    7. ',end' → logprob: -15.063299179077148
    8. '           ' → logprob: -15.188299179077148
    9. '       ' → logprob: -15.563299179077148
    10. ''end' → logprob: -15.813299179077148

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005468063056468964
    2. ',end' → logprob: -5.255467891693115
    3. ' ,' → logprob: -8.380468368530273
    4. 'end' → logprob: -13.005468368530273
    5. '               ' → logprob: -13.380468368530273
    6. '           ' → logprob: -14.755468368530273
    7. '                   ' → logprob: -15.255468368530273
    8. ',
' → logprob: -15.255468368530273
    9. '[end' → logprob: -16.880468368530273
    10. 'to' → logprob: -17.255468368530273

Token 199: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.002475777640938759
    2. ' end' → logprob: -6.002475738525391
    3. '[end' → logprob: -16.50247573852539
    4. '               ' → logprob: -16.75247573852539
    5. '           ' → logprob: -17.37747573852539
    6. '(end' → logprob: -17.75247573852539
    7. '	end' → logprob: -18.00247573852539
    8. '                   ' → logprob: -19.00247573852539
    9. ''end' → logprob: -19.00247573852539
    10. '=end' → logprob: -19.00247573852539

Token 200: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38714873790740967
    2. '):' → logprob: -1.1371487379074097
    3. '):
' → logprob: -8.7621488571167
    4. '                   ' → logprob: -9.5121488571167
    5. ':' → logprob: -10.8871488571167
    6. '               ' → logprob: -11.7621488571167
    7. ':
' → logprob: -12.2621488571167
    8. ' ):
' → logprob: -12.3871488571167
    9. ')' → logprob: -12.6371488571167
    10. '):

' → logprob: -12.8871488571167

Token 201: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02460215799510479
    2. 'self' → logprob: -3.899602174758911
    3. ' self' → logprob: -6.149601936340332
    4. '                       ' → logprob: -6.899601936340332
    5. '               ' → logprob: -7.649601936340332
    6. '   ' → logprob: -8.024601936340332
    7. '           ' → logprob: -9.649601936340332
    8. '       ' → logprob: -11.274601936340332
    9. '[self' → logprob: -11.399601936340332
    10. '                  ' → logprob: -12.524601936340332

Token 202: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00044401636114344
    2. ' self' → logprob: -7.750443935394287
    3. '                   ' → logprob: -11.375444412231445
    4. '                       ' → logprob: -13.625444412231445
    5. '   ' → logprob: -15.125444412231445
    6. '               ' → logprob: -15.500444412231445
    7. '	self' → logprob: -15.750444412231445
    8. '           ' → logprob: -17.250444412231445
    9. '       ' → logprob: -17.250444412231445
    10. '[self' → logprob: -17.375444412231445

Token 203: '.wall' (ID: 176423)
  Prédit: '.wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wall' → logprob: -0.029764611274003983
    2. 'wall' → logprob: -3.5297646522521973
    3. ' .' → logprob: -12.279764175415039
    4. '.' → logprob: -12.404764175415039
    5. ' wall' → logprob: -12.654764175415039
    6. '_wall' → logprob: -14.529764175415039
    7. '.w' → logprob: -14.779764175415039
    8. '           ' → logprob: -15.279764175415039
    9. 'walls' → logprob: -15.404764175415039
    10. 'wal' → logprob: -16.15476417541504

Token 204: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.5048530030981055e-06
    2. ']._' → logprob: -14.500001907348633
    3. '.' → logprob: -14.875001907348633
    4. ')._' → logprob: -15.500001907348633
    5. ' .' → logprob: -15.625001907348633
    6. '.[' → logprob: -16.250001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '_' → logprob: -17.750001907348633
    9. '[' → logprob: -18.125001907348633
    10. '       ' → logprob: -18.125001907348633

Token 205: 'paint' (ID: 44758)
  Prédit: 'paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -3.054500666621607e-06
    2. '.paint' → logprob: -13.37500286102295
    3. '_p' → logprob: -14.87500286102295
    4. 'pa' → logprob: -15.00000286102295
    5. 'pain' → logprob: -15.62500286102295
    6. ' painted' → logprob: -15.87500286102295
    7. 'wall' → logprob: -16.125003814697266
    8. '```' → logprob: -16.500003814697266
    9. '-painted' → logprob: -16.750003814697266
    10. ' paint' → logprob: -16.750003814697266

Token 206: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00046868418576195836
    2. 'ted' → logprob: -7.750468730926514
    3. 'ated' → logprob: -10.250468254089355
    4. '[' → logprob: -13.875468254089355
    5. 'd' → logprob: -14.875468254089355
    6. 't' → logprob: -15.000468254089355
    7. 'ед' → logprob: -15.375468254089355
    8. '[i' → logprob: -16.250469207763672
    9. 'eded' → logprob: -16.375469207763672
    10. 'anted' → logprob: -16.625469207763672

Token 207: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -16.25000762939453
    4. '```' → logprob: -17.00000762939453
    5. 'i' → logprob: -17.12500762939453
    6. '[
' → logprob: -17.25000762939453
    7. '[I' → logprob: -18.25000762939453
    8. '                   ' → logprob: -18.50000762939453
    9. '   ' → logprob: -18.50000762939453
    10. '
' → logprob: -19.25000762939453

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017825623974204063
    2. '=' → logprob: -4.267825603485107
    3. ' =' → logprob: -6.142825603485107
    4. ']=' → logprob: -6.642825603485107
    5. ')' → logprob: -8.767826080322266
    6. ' ]' → logprob: -10.017826080322266
    7. '[' → logprob: -14.017826080322266
    8. ' ' → logprob: -14.517826080322266
    9. ')=' → logprob: -14.892826080322266
    10. '                   ' → logprob: -14.892826080322266

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020720958709717
    2. ' =' → logprob: -2.3502073287963867
    3. '=True' → logprob: -15.225207328796387
    4. '[' → logprob: -16.35020637512207
    5. ']' → logprob: -16.35020637512207
    6. '                   ' → logprob: -16.97520637512207
    7. ' ' → logprob: -17.47520637512207
    8. ']=' → logprob: -17.60020637512207
    9. '=
' → logprob: -18.10020637512207
    10. ')' → logprob: -18.22520637512207

Token 210: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00033546582562848926
    2. ' True' → logprob: -8.000335693359375
    3. '=True' → logprob: -19.000335693359375
    4. '(True' → logprob: -20.000335693359375
    5. '   ' → logprob: -20.625335693359375
    6. '.True' → logprob: -21.500335693359375
    7. '           ' → logprob: -22.375335693359375
    8. '                   ' → logprob: -22.625335693359375
    9. '
' → logprob: -22.625335693359375
    10. '               ' → logprob: -23.000335693359375

Token 211: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21834811568260193
    2. '<|end|>' → logprob: -2.4683480262756348
    3. '    
' → logprob: -2.9683480262756348
    4. '       ' → logprob: -3.2183480262756348
    5. '
' → logprob: -4.593348026275635
    6. 'def' → logprob: -5.218348026275635
    7. '        
' → logprob: -6.093348026275635
    8. 'class' → logprob: -7.218348026275635
    9. '    ' → logprob: -7.968348026275635
    10. '```' → logprob: -8.718348503112793

Token 213: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3954327404499054
    2. '   ' → logprob: -1.145432710647583
    3. ' def' → logprob: -5.520432949066162
    4. '    
' → logprob: -6.020432949066162
    5. '       ' → logprob: -7.645432949066162
    6. '<|end|>' → logprob: -8.145432472229004
    7. '	def' → logprob: -8.520432472229004
    8. '#' → logprob: -8.895432472229004
    9. '        
' → logprob: -8.895432472229004
    10. '  ' → logprob: -8.895432472229004

Token 214: ' paint' (ID: 7907)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.870785653591156
    2. 'is' → logprob: -1.3707857131958008
    3. ' is' → logprob: -2.120785713195801
    4. ' painted' → logprob: -2.370785713195801
    5. 'get' → logprob: -3.370785713195801
    6. ' get' → logprob: -3.870785713195801
    7. 'total' → logprob: -3.870785713195801
    8. ' total' → logprob: -4.120785713195801
    9. ' paint' → logprob: -5.620785713195801
    10. ' painter' → logprob: -5.745785713195801

Token 215: '_inter' (ID: 16818)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1271376609802246
    2. '(' → logprob: -2.1271376609802246
    3. '(
' → logprob: -8.752138137817383
    4. 'self' → logprob: -10.752138137817383
    5. ' (' → logprob: -11.877138137817383
    6. '_range' → logprob: -11.877138137817383
    7. '(s' → logprob: -12.627138137817383
    8. '_(' → logprob: -12.752138137817383
    9. '_area' → logprob: -13.127138137817383
    10. '(

' → logprob: -13.627138137817383

Token 216: 'vals' (ID: 44567)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.003189478302374482
    2. 'vals' → logprob: -5.878189563751221
    3. ' val' → logprob: -9.128189086914062
    4. '(val' → logprob: -9.253189086914062
    5. 'sect' → logprob: -10.003189086914062
    6. 'v' → logprob: -10.628189086914062
    7. 'vall' → logprob: -11.128189086914062
    8. 'face' → logprob: -11.503189086914062
    9. 'erval' → logprob: -11.628189086914062
    10. '	val' → logprob: -11.878189086914062

Token 217: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011736786691471934
    2. '(' → logprob: -6.751173496246338
    3. ' (' → logprob: -13.126173973083496
    4. '(
' → logprob: -13.751173973083496
    5. 'self' → logprob: -14.876173973083496
    6. '(s' → logprob: -17.12617301940918
    7. '   ' → logprob: -17.25117301940918
    8. '       ' → logprob: -17.62617301940918
    9. '(Self' → logprob: -17.62617301940918
    10. ' self' → logprob: -17.87617301940918

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5816066265106201
    2. '(self' → logprob: -0.8316066265106201
    3. 'self' → logprob: -5.706606864929199
    4. ',self' → logprob: -7.081606864929199
    5. '       ' → logprob: -7.831606864929199
    6. '(' → logprob: -8.0816068649292
    7. '):' → logprob: -8.9566068649292
    8. ' ,' → logprob: -9.0816068649292
    9. '):
' → logprob: -9.2066068649292
    10. ' (' → logprob: -9.2066068649292

Token 219: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.34911468625068665
    2. 'interval' → logprob: -1.2241146564483643
    3. 'paint' → logprob: -7.974114894866943
    4. ' self' → logprob: -9.349114418029785
    5. ' paint' → logprob: -9.474114418029785
    6. 'self' → logprob: -9.724114418029785
    7. ' painter' → logprob: -10.849114418029785
    8. ' interval' → logprob: -10.974114418029785
    9. '   ' → logprob: -11.349114418029785
    10. 'p' → logprob: -11.724114418029785

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033902134746313095
    2. '):
' → logprob: -3.408902168273926
    3. 'self' → logprob: -9.283902168273926
    4. ',' → logprob: -9.908902168273926
    5. '       ' → logprob: -10.408902168273926
    6. '   ' → logprob: -10.533902168273926
    7. '):
' → logprob: -11.033902168273926
    8. ':' → logprob: -11.283902168273926
    9. '(self' → logprob: -11.658902168273926
    10. ')' → logprob: -12.408902168273926

Token 221: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5817456841468811
    2. '       ' → logprob: -0.8317456841468811
    3. ',' → logprob: -6.456745624542236
    4. ':
' → logprob: -6.456745624542236
    5. '():' → logprob: -7.206745624542236
    6. '(self' → logprob: -7.331745624542236
    7. '):' → logprob: -7.956745624542236
    8. '```' → logprob: -8.581746101379395
    9. '(' → logprob: -8.831746101379395
    10. '   ' → logprob: -9.081746101379395

Token 222: ' painters' (ID: 123131)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15861649811267853
    2. 'for' → logprob: -2.783616542816162
    3. '       ' → logprob: -2.908616542816162
    4. 'p' → logprob: -4.283616542816162
    5. ' p' → logprob: -4.908616542816162
    6. ' total' → logprob: -5.908616542816162
    7. ' painted' → logprob: -6.283616542816162
    8. ' painter' → logprob: -6.658616542816162
    9. 'total' → logprob: -7.408616542816162
    10. '```' → logprob: -7.783616542816162

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008767137303948402
    2. '=' → logprob: -4.758767127990723
    3. '_' → logprob: -9.508767127990723
    4. '.' → logprob: -9.758767127990723
    5. ' ' → logprob: -12.508767127990723
    6. 's' → logprob: -12.633767127990723
    7. ')' → logprob: -12.883767127990723
    8. '   ' → logprob: -13.133767127990723
    9. ':' → logprob: -13.383767127990723
    10. '[' → logprob: -13.383767127990723

Token 224: ' []
' (ID: 8911)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.8577683568000793
    2. '[' → logprob: -1.1077682971954346
    3. '[C' → logprob: -2.1077682971954346
    4. '[]' → logprob: -2.3577682971954346
    5. '[]
' → logprob: -3.8577682971954346
    6. ' [' → logprob: -4.857768535614014
    7. ' []' → logprob: -9.232768058776855
    8. '[
' → logprob: -9.232768058776855
    9. '[class' → logprob: -9.232768058776855
    10. '[]

' → logprob: -9.607768058776855

Token 225: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36984896659851074
    2. '       ' → logprob: -1.2448489665985107
    3. 'for' → logprob: -3.9948489665985107
    4. ' 
' → logprob: -7.24484920501709
    5. '        
' → logprob: -7.49484920501709
    6. '[' → logprob: -7.99484920501709
    7. '   ' → logprob: -8.11984920501709
    8. ' ' → logprob: -8.49484920501709
    9. '<|end|>' → logprob: -8.86984920501709
    10. '    
' → logprob: -9.24484920501709

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06199401617050171
    2. ' for' → logprob: -2.8119940757751465
    3. '       ' → logprob: -10.686993598937988
    4. '
' → logprob: -12.686993598937988
    5. '   ' → logprob: -15.936993598937988
    6. 'result' → logprob: -16.561994552612305
    7. '	for' → logprob: -16.686994552612305
    8. '```' → logprob: -16.811994552612305
    9. '        
' → logprob: -17.186994552612305
    10. '        ' → logprob: -17.811994552612305

Token 227: ' a' (ID: 261)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09024689346551895
    2. ' start' → logprob: -2.4652469158172607
    3. 'interval' → logprob: -7.340246677398682
    4. '(start' → logprob: -7.590246677398682
    5. ' (' → logprob: -9.59024715423584
    6. ' interval' → logprob: -10.21524715423584
    7. '   ' → logprob: -11.34024715423584
    8. 's' → logprob: -11.71524715423584
    9. ' ' → logprob: -11.84024715423584
    10. '(' → logprob: -11.96524715423584

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000798788561951369
    2. ',b' → logprob: -7.37579870223999
    3. ' ,' → logprob: -9.000799179077148
    4. 'b' → logprob: -12.250799179077148
    5. 'n' → logprob: -12.375799179077148
    6. 'i' → logprob: -12.625799179077148
    7. ',p' → logprob: -12.750799179077148
    8. 'd' → logprob: -12.875799179077148
    9. ',d' → logprob: -12.875799179077148
    10. ',v' → logprob: -13.000799179077148

Token 229: ' l' (ID: 305)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004625341854989529
    2. 'l' → logprob: -5.75462532043457
    3. ' b' → logprob: -6.62962532043457
    4. 'length' → logprob: -9.12962532043457
    5. ' l' → logprob: -11.37962532043457
    6. ' length' → logprob: -12.87962532043457
    7. 'L' → logprob: -13.50462532043457
    8. 'bl' → logprob: -14.75462532043457
    9. ' ' → logprob: -15.00462532043457
    10. 'w' → logprob: -15.25462532043457

Token 230: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0315275639295578
    2. 'in' → logprob: -3.781527519226074
    3. 'ength' → logprob: -5.031527519226074
    4. 'en' → logprob: -6.781527519226074
    5. 'a' → logprob: -9.531527519226074
    6. 'ine' → logprob: -9.531527519226074
    7. 'e' → logprob: -9.781527519226074
    8. 'o' → logprob: -10.156527519226074
    9. ',' → logprob: -10.406527519226074
    10. 'ambda' → logprob: -10.531527519226074

Token 231: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00026169343618676066
    2. ' intervals' → logprob: -8.250261306762695
    3. '(interval' → logprob: -15.500261306762695
    4. '   ' → logprob: -16.500261306762695
    5. 'int' → logprob: -18.875261306762695
    6. '[' → logprob: -19.000261306762695
    7. ' ' → logprob: -19.625261306762695
    8. '
' → logprob: -19.625261306762695
    9. '```' → logprob: -19.625261306762695
    10. ' interval' → logprob: -20.000261306762695

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038096800446510315
    2. ':
' → logprob: -3.2880969047546387
    3. '):
' → logprob: -11.03809642791748
    4. ',' → logprob: -11.03809642791748
    5. ' :' → logprob: -11.78809642791748
    6. '       ' → logprob: -12.78809642791748
    7. ':
' → logprob: -12.91309642791748
    8. '           ' → logprob: -13.16309642791748
    9. ' :
' → logprob: -13.16309642791748
    10. ':

' → logprob: -13.28809642791748

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006559623870998621
    2. '            
' → logprob: -8.125656127929688
    3. '(p' → logprob: -9.000656127929688
    4. '
' → logprob: -10.125656127929688
    5. '            ' → logprob: -10.125656127929688
    6. 'p' → logprob: -10.375656127929688
    7. ' 
' → logprob: -10.750656127929688
    8. '    
' → logprob: -11.375656127929688
    9. '        
' → logprob: -11.500656127929688
    10. ',p' → logprob: -11.500656127929688

Token 234: ' painter' (ID: 53541)
  Prédit: ' painters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' painters' → logprob: -0.03177691623568535
    2. 'p' → logprob: -4.0317769050598145
    3. '           ' → logprob: -4.9067769050598145
    4. 'pain' → logprob: -5.4067769050598145
    5. ' p' → logprob: -7.4067769050598145
    6. ' painter' → logprob: -7.4067769050598145
    7. ' pain' → logprob: -9.281777381896973
    8. '            ' → logprob: -9.406777381896973
    9. '               ' → logprob: -9.406777381896973
    10. 'paint' → logprob: -10.281777381896973

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023163497447968
    2. '=' → logprob: -1.910231590270996
    3. 's' → logprob: -11.910231590270996
    4. '.=' → logprob: -15.410231590270996
    5. '.' → logprob: -15.535231590270996
    6. ' ' → logprob: -16.160232543945312
    7. ' =
' → logprob: -16.410232543945312
    8. '   ' → logprob: -16.785232543945312
    9. 'er' → logprob: -17.535232543945312
    10. '=
' → logprob: -17.660232543945312

Token 236: ' Circular' (ID: 72772)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16998249292373657
    2. 'self' → logprob: -1.9199824333190918
    3. ' Circular' → logprob: -4.794982433319092
    4. 'Circular' → logprob: -6.544982433319092
    5. ' circular' → logprob: -14.04498291015625
    6. 'Self' → logprob: -14.91998291015625
    7. '   ' → logprob: -15.16998291015625
    8. '	self' → logprob: -15.41998291015625
    9. ' ' → logprob: -15.54498291015625
    10. '(self' → logprob: -15.66998291015625

Token 237: 'Wall' (ID: 35120)
  Prédit: 'Wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Wall' → logprob: -8.180258191714529e-06
    2. 'Wal' → logprob: -12.750008583068848
    3. 'Walls' → logprob: -13.125008583068848
    4. 'Painter' → logprob: -13.875008583068848
    5. 'wall' → logprob: -14.250008583068848
    6. 'W' → logprob: -14.375008583068848
    7. '.wall' → logprob: -15.500008583068848
    8. '.' → logprob: -15.500008583068848
    9. '.W' → logprob: -15.625008583068848
    10. '_wall' → logprob: -16.12500762939453

Token 238: '.P' (ID: 2007)
  Prédit: '.P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.P' → logprob: -0.002484692493453622
    2. '.' → logprob: -6.1274847984313965
    3. '.Paint' → logprob: -8.252484321594238
    4. 'Painter' → logprob: -11.127484321594238
    5. ' .' → logprob: -11.877484321594238
    6. '   ' → logprob: -11.877484321594238
    7. '.П' → logprob: -12.752484321594238
    8. '       ' → logprob: -13.502484321594238
    9. '.Point' → logprob: -13.502484321594238
    10. '.Writer' → logprob: -14.252484321594238

Token 239: 'ainter' (ID: 48368)
  Prédit: 'ainter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainter' → logprob: -1.1756367712223437e-05
    2. 'aint' → logprob: -12.000011444091797
    3. 'ainer' → logprob: -13.250011444091797
    4. 'Painter' → logprob: -13.250011444091797
    5. 'a' → logprob: -14.250011444091797
    6. 'ain' → logprob: -14.375011444091797
    7. 'inter' → logprob: -15.375011444091797
    8. 'ainte' → logprob: -15.375011444091797
    9. 'ointer' → logprob: -15.750011444091797
    10. 'ait' → logprob: -16.625011444091797

Token 240: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02338547073304653
    2. '(self' → logprob: -3.773385524749756
    3. 'self' → logprob: -9.648385047912598
    4. '(' → logprob: -9.898385047912598
    5. 'a' → logprob: -10.773385047912598
    6. '(
' → logprob: -13.023385047912598
    7. '(len' → logprob: -14.023385047912598
    8. ' self' → logprob: -14.898385047912598
    9. ' (' → logprob: -15.148385047912598
    10. '((' → logprob: -15.273385047912598

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032443818636238575
    2. ',l' → logprob: -5.753244400024414
    3. ' ,' → logprob: -9.753244400024414
    4. ',len' → logprob: -12.253244400024414
    5. '           ' → logprob: -13.253244400024414
    6. ',length' → logprob: -14.003244400024414
    7. ',self' → logprob: -15.128244400024414
    8. ',ll' → logprob: -15.128244400024414
    9. '       ' → logprob: -16.003244400024414
    10. ',
' → logprob: -16.003244400024414

Token 242: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0019288709154352546
    2. ' l' → logprob: -6.251928806304932
    3. '           ' → logprob: -15.62692928314209
    4. '       ' → logprob: -18.126928329467773
    5. ' ' → logprob: -18.251928329467773
    6. '<|end|>' → logprob: -18.376928329467773
    7. '	l' → logprob: -18.501928329467773
    8. '   ' → logprob: -19.001928329467773
    9. '            ' → logprob: -19.376928329467773
    10. '        ' → logprob: -19.501928329467773

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020914296328555793
    2. ',self' → logprob: -8.625208854675293
    3. 'self' → logprob: -10.750208854675293
    4. ' ,' → logprob: -11.875208854675293
    5. ',
' → logprob: -14.500208854675293
    6. '           ' → logprob: -15.500208854675293
    7. ' self' → logprob: -15.875208854675293
    8. ')' → logprob: -16.37520980834961
    9. '       ' → logprob: -16.87520980834961
    10. '(self' → logprob: -16.87520980834961

Token 244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804229199886322
    2. ' self' → logprob: -3.2880423069000244
    3. '       ' → logprob: -14.413042068481445
    4. '           ' → logprob: -15.538042068481445
    5. '   ' → logprob: -17.788042068481445
    6. '(self' → logprob: -17.913042068481445
    7. '	self' → logprob: -18.413042068481445
    8. '
' → logprob: -19.163042068481445
    9. '=self' → logprob: -19.413042068481445
    10. '```' → logprob: -19.413042068481445

Token 245: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2519332468509674
    2. ')' → logprob: -1.501933217048645
    3. ')

' → logprob: -12.876933097839355
    4. ')
' → logprob: -13.501933097839355
    5. ' )
' → logprob: -15.376933097839355
    6. ' )' → logprob: -17.876934051513672
    7. '),' → logprob: -18.501934051513672
    8. ')this' → logprob: -19.626934051513672
    9. ')set' → logprob: -20.001934051513672
    10. '
' → logprob: -20.501934051513672

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.2576454335358e-05
    2. 'p' → logprob: -9.750092506408691
    3. ' painters' → logprob: -10.750092506408691
    4. 'paint' → logprob: -12.500092506408691
    5. '               ' → logprob: -12.875092506408691
    6. '       ' → logprob: -13.250092506408691
    7. 'pain' → logprob: -13.750092506408691
    8. '   ' → logprob: -14.500092506408691
    9. ' painter' → logprob: -14.500092506408691
    10. '            
' → logprob: -14.750092506408691

Token 247: ' painters' (ID: 123131)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5043050050735474
    2. ' painter' → logprob: -1.7543050050735474
    3. ' painters' → logprob: -2.629304885864258
    4. '           ' → logprob: -2.879304885864258
    5. 'pain' → logprob: -3.004304885864258
    6. 'paint' → logprob: -3.129304885864258
    7. ' p' → logprob: -7.879304885864258
    8. ' paint' → logprob: -8.254304885864258
    9. 'pai' → logprob: -8.754304885864258
    10. 'Painter' → logprob: -9.004304885864258

Token 248: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.061988864094018936
    2. '.' → logprob: -2.8119888305664062
    3. '.app' → logprob: -11.186988830566406
    4. '.push' → logprob: -13.311988830566406
    5. ' .' → logprob: -13.436988830566406
    6. '.extend' → logprob: -13.686988830566406
    7. 'append' → logprob: -13.686988830566406
    8. '.ap' → logprob: -14.561988830566406
    9. '.Append' → logprob: -14.686988830566406
    10. '.
' → logprob: -15.436988830566406

Token 249: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. 'p' → logprob: -17.00002670288086
    4. '(
' → logprob: -18.25002670288086
    5. '((' → logprob: -20.37502670288086
    6. '()' → logprob: -20.75002670288086
    7. '(

' → logprob: -21.25002670288086
    8. ' (' → logprob: -21.75002670288086
    9. 'Painter' → logprob: -22.75002670288086
    10. ')p' → logprob: -22.87502670288086

Token 250: 'ainter' (ID: 48368)
  Prédit: 'ainter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainter' → logprob: -4.36574100604048e-06
    2. 'aint' → logprob: -12.500004768371582
    3. 'ain' → logprob: -15.750004768371582
    4. 'a' → logprob: -16.125003814697266
    5. 'inter' → logprob: -16.125003814697266
    6. 'ainte' → logprob: -16.625003814697266
    7. 'ainer' → logprob: -16.750003814697266
    8. 'Painter' → logprob: -17.125003814697266
    9. '   ' → logprob: -17.375003814697266
    10. 'ainted' → logprob: -18.250003814697266

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051601145416498184
    2. '           ' → logprob: -3.1766011714935303
    3. ')
' → logprob: -5.426600933074951
    4. '       ' → logprob: -5.801600933074951
    5. '<|end|>' → logprob: -7.551600933074951
    6. '
' → logprob: -8.55160140991211
    7. '    
' → logprob: -9.55160140991211
    8. '   ' → logprob: -9.55160140991211
    9. '<|end|>' → logprob: -9.55160140991211
    10. '	       ' → logprob: -10.05160140991211

Token 252: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0516631603240967
    2. '       ' → logprob: -1.0516631603240967
    3. ' 
' → logprob: -2.1766631603240967
    4. '           ' → logprob: -2.4266631603240967
    5. '        
' → logprob: -3.1766631603240967
    6. '    
' → logprob: -3.6766631603240967
    7. '<|end|>' → logprob: -4.176663398742676
    8. '  
' → logprob: -5.301663398742676
    9. '            
' → logprob: -6.426663398742676
    10. '    ' → logprob: -6.801663398742676

Token 253: ' painter' (ID: 53541)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0824015736579895
    2. ' painter' → logprob: -2.5824015140533447
    3. 'paint' → logprob: -5.957401752471924
    4. '           ' → logprob: -7.207401752471924
    5. ' p' → logprob: -10.082401275634766
    6. 'for' → logprob: -10.082401275634766
    7. 'painting' → logprob: -10.957401275634766
    8. '   ' → logprob: -11.207401275634766
    9. ' for' → logprob: -11.457401275634766
    10. '
' → logprob: -11.582401275634766

Token 254: '.paint' (ID: 113759)
  Prédit: '.paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.paint' → logprob: -0.0015135504072532058
    2. '.' → logprob: -6.501513481140137
    3. ' .' → logprob: -11.876513481140137
    4. '.
' → logprob: -13.001513481140137
    5. 'paint' → logprob: -14.126513481140137
    6. ' paint' → logprob: -14.376513481140137
    7. '.Paint' → logprob: -14.626513481140137
    8. '.print' → logprob: -16.126514434814453
    9. '.save' → logprob: -17.626514434814453
    10. '.visit' → logprob: -17.751514434814453

Token 255: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.106736039626412e-05
    2. '()
' → logprob: -11.000031471252441
    3. '(' → logprob: -11.375031471252441
    4. '()`' → logprob: -13.875031471252441
    5. '()

' → logprob: -14.875031471252441
    6. ' ()' → logprob: -15.000031471252441
    7. '())' → logprob: -15.375031471252441
    8. '()\' → logprob: -15.625031471252441
    9. '()]' → logprob: -15.875031471252441
    10. '();' → logprob: -16.000030517578125

Token 256: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6226924657821655
    2. ' return' → logprob: -0.8726924657821655
    3. '       ' → logprob: -3.247692584991455
    4. ' painted' → logprob: -5.622692584991455
    5. '<|end|>' → logprob: -6.622692584991455
    6. '   ' → logprob: -7.872692584991455
    7. 'paint' → logprob: -8.372692108154297
    8. ' covered' → logprob: -8.497692108154297
    9. ' coverage' → logprob: -8.872692108154297
    10. 'def' → logprob: -9.122692108154297

Token 258: ' self' (ID: 1051)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.5829790830612183
    2. 'self' → logprob: -1.4579790830612183
    3. 'all' → logprob: -2.582979202270508
    4. ' any' → logprob: -2.957979202270508
    5. 'sum' → logprob: -3.707979202270508
    6. '[self' → logprob: -3.707979202270508
    7. ' self' → logprob: -3.832979202270508
    8. ' all' → logprob: -5.457979202270508
    9. ' sum' → logprob: -6.082979202270508
    10. '[' → logprob: -6.332979202270508

Token 259: '._' (ID: 2697)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0839695930480957
    2. '<|end|>' → logprob: -1.0839695930480957
    3. 'def' → logprob: -1.4589695930480957
    4. ' def' → logprob: -2.9589695930480957
    5. ' ' → logprob: -4.208969593048096
    6. '_' → logprob: -4.333969593048096
    7. '.' → logprob: -5.583969593048096
    8. '	def' → logprob: -6.583969593048096
    9. '    
' → logprob: -6.708969593048096
    10. ' _' → logprob: -6.958969593048096

Token 260: 'find' (ID: 6555)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paint' → logprob: -3.128163257315464e-07
    2. '-painted' → logprob: -15.125
    3. ' painted' → logprob: -18.0
    4. 'ainted' → logprob: -18.375
    5. 'Paint' → logprob: -19.0
    6. 'printed' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. 'pain' → logprob: -20.25
    9. '_p' → logprob: -20.5
    10. 'pa' → logprob: -20.5

Token 261: '_p' (ID: 1359)
  Prédit: '_un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.5699254870414734
    2. '_g' → logprob: -1.6949255466461182
    3. '_cont' → logprob: -1.9449255466461182
    4. '_p' → logprob: -3.569925546646118
    5. '_long' → logprob: -4.444925308227539
    6. '_f' → logprob: -4.694925308227539
    7. '_all' → logprob: -4.694925308227539
    8. 'ed' → logprob: -4.944925308227539
    9. '_' → logprob: -5.069925308227539
    10. '_first' → logprob: -5.069925308227539

Token 262: 'ainted' (ID: 110226)
  Prédit: 'ainted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainted' → logprob: -0.0029879247304052114
    2. 'art' → logprob: -6.502987861633301
    3. 'er' → logprob: -7.377987861633301
    4. 'ointed' → logprob: -7.877987861633301
    5. 'aint' → logprob: -9.0029878616333
    6. 'ro' → logprob: -9.1279878616333
    7. 'r' → logprob: -10.3779878616333
    8. 'ain' → logprob: -10.5029878616333
    9. 'os' → logprob: -10.7529878616333
    10. 'oint' → logprob: -10.8779878616333

Token 263: '_inter' (ID: 16818)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0034944696817547083
    2. '(' → logprob: -6.3784942626953125
    3. '_' → logprob: -7.1284942626953125
    4. '_segments' → logprob: -7.7534942626953125
    5. '_area' → logprob: -8.753494262695312
    6. '<|end|>' → logprob: -10.003494262695312
    7. '_tokens' → logprob: -10.378494262695312
    8. '```' → logprob: -10.628494262695312
    9. '_points' → logprob: -10.753494262695312
    10. '_parts' → logprob: -10.878494262695312

Token 264: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.014610839076340199
    2. 'val' → logprob: -4.264610767364502
    3. ' vals' → logprob: -8.38961124420166
    4. 'als' → logprob: -10.13961124420166
    5. '   ' → logprob: -10.26461124420166
    6. '```' → logprob: -10.51461124420166
    7. 'v' → logprob: -10.76461124420166
    8. '#' → logprob: -11.76461124420166
    9. '
' → logprob: -12.13961124420166
    10. '[' → logprob: -12.45211124420166

Token 265: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023253632709383965
    2. '(' → logprob: -3.8982536792755127
    3. '_' → logprob: -6.148253440856934
    4. '(self' → logprob: -8.023253440856934
    5. '(_' → logprob: -10.023253440856934
    6. '()`' → logprob: -10.398253440856934
    7. ' ()' → logprob: -10.523253440856934
    8. '()(' → logprob: -10.898253440856934
    9. '(
' → logprob: -11.023253440856934
    10. '().__' → logprob: -11.148253440856934

Token 266: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6242368221282959
    2. 'def' → logprob: -1.124236822128296
    3. '   ' → logprob: -2.374236822128296
    4. '    
' → logprob: -3.124236822128296
    5. ' def' → logprob: -6.874237060546875
    6. '  
' → logprob: -7.499237060546875
    7. '

' → logprob: -8.624237060546875
    8. ' 
' → logprob: -8.874237060546875
    9. '        
' → logprob: -8.874237060546875
    10. '<|end|>' → logprob: -8.874237060546875

Token 267: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011774055659770966
    2. '   ' → logprob: -4.511774063110352
    3. ' def' → logprob: -7.261774063110352
    4. '
' → logprob: -11.136774063110352
    5. '    
' → logprob: -11.636774063110352
    6. '_def' → logprob: -15.011774063110352
    7. '	def' → logprob: -15.886774063110352
    8. ' ' → logprob: -16.01177406311035
    9. '  ' → logprob: -16.76177406311035
    10. '        
' → logprob: -17.01177406311035

Token 268: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.630610641877865e-06
    2. ' def' → logprob: -12.000006675720215
    3. '_def' → logprob: -14.750006675720215
    4. '
' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.6250057220459
    6. '_find' → logprob: -18.6250057220459
    7. '    
' → logprob: -19.1250057220459
    8. '	def' → logprob: -19.2500057220459
    9. ' ' → logprob: -21.0000057220459
    10. '  
' → logprob: -22.2500057220459

Token 269: ' _' (ID: 1175)
  Prédit: '_find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_find' → logprob: -1.3902033970225602e-05
    2. ' _' → logprob: -12.125014305114746
    3. '_p' → logprob: -12.500014305114746
    4. '_get' → logprob: -12.750014305114746
    5. 'def' → logprob: -13.750014305114746
    6. '_def' → logprob: -15.500014305114746
    7. '_Find' → logprob: -16.12501335144043
    8. 'find' → logprob: -16.25001335144043
    9. '_' → logprob: -16.37501335144043
    10. '_found' → logprob: -16.87501335144043

Token 270: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.9385402993066236e-05
    2. '_find' → logprob: -10.875019073486328
    3. ' find' → logprob: -15.875019073486328
    4. 'get' → logprob: -16.500019073486328
    5. 'paint' → logprob: -16.500019073486328
    6. '	find' → logprob: -17.250019073486328
    7. '(find' → logprob: -18.500019073486328
    8. '_' → logprob: -18.750019073486328
    9. '.find' → logprob: -19.000019073486328
    10. 'def' → logprob: -19.125019073486328

Token 271: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00012451570364646614
    2. '_' → logprob: -9.12512493133545
    3. ' _' → logprob: -11.12512493133545
    4. '_a' → logprob: -16.125123977661133
    5. '_s' → logprob: -16.375123977661133
    6. '_finished' → logprob: -16.500123977661133
    7. '_inter' → logprob: -16.750123977661133
    8. '_c' → logprob: -16.750123977661133
    9. '_cont' → logprob: -17.125123977661133
    10. '_possible' → logprob: -17.250123977661133

Token 272: 'ainted' (ID: 110226)
  Prédit: 'ainted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainted' → logprob: -6.599403423024341e-05
    2. 'aint' → logprob: -10.000065803527832
    3. 'a' → logprob: -11.250065803527832
    4. '_' → logprob: -12.875065803527832
    5. 'ained' → logprob: -13.375065803527832
    6. 'ait' → logprob: -14.250065803527832
    7. 'ainte' → logprob: -14.500065803527832
    8. '_a' → logprob: -14.625065803527832
    9. 'paint' → logprob: -14.750065803527832
    10. '
' → logprob: -15.250065803527832

Token 273: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.00011427151912357658
    2. '(self' → logprob: -9.750114440917969
    3. '_ranges' → logprob: -11.125114440917969
    4. '_' → logprob: -11.375114440917969
    5. '_segments' → logprob: -11.625114440917969
    6. 'inter' → logprob: -11.875114440917969
    7. 'interval' → logprob: -12.625114440917969
    8. '```' → logprob: -12.750114440917969
    9. 'self' → logprob: -13.375114440917969
    10. 'Intervals' → logprob: -14.000114440917969

Token 274: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0043748170137405396
    2. 'val' → logprob: -5.629374980926514
    3. 'als' → logprob: -7.379374980926514
    4. ' vals' → logprob: -9.879374504089355
    5. '```' → logprob: -10.504374504089355
    6. '   ' → logprob: -11.629374504089355
    7. 'erv' → logprob: -11.629374504089355
    8. 's' → logprob: -12.004374504089355
    9. '_' → logprob: -12.129374504089355
    10. 't' → logprob: -12.129374504089355

Token 275: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002834707498550415
    2. '(' → logprob: -5.877834796905518
    3. 'self' → logprob: -11.50283432006836
    4. '       ' → logprob: -11.62783432006836
    5. '   ' → logprob: -12.12783432006836
    6. ' (' → logprob: -13.25283432006836
    7. '(
' → logprob: -13.25283432006836
    8. '(s' → logprob: -14.00283432006836
    9. ' self' → logprob: -15.00283432006836
    10. 'def' → logprob: -15.87783432006836

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.688549816608429
    2. '):
' → logprob: -1.0635497570037842
    3. 'self' → logprob: -2.063549757003784
    4. '(self' → logprob: -4.063549995422363
    5. ',' → logprob: -5.313549995422363
    6. '   ' → logprob: -6.563549995422363
    7. '       ' → logprob: -7.063549995422363
    8. ')' → logprob: -8.063549995422363
    9. '):

' → logprob: -8.563549995422363
    10. ' self' → logprob: -8.688549995422363

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028230365365743637
    2. ' painted' → logprob: -3.9032304286956787
    3. 'paint' → logprob: -4.9032301902771
    4. ' intervals' → logprob: -9.153230667114258
    5. 'result' → logprob: -10.028230667114258
    6. ' Painted' → logprob: -10.653230667114258
    7. 'n' → logprob: -11.153230667114258
    8. '-painted' → logprob: -11.653230667114258
    9. 'interval' → logprob: -11.903230667114258
    10. ' paint' → logprob: -12.028230667114258

Token 278: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.09852809458971024
    2. 'paint' → logprob: -3.0985281467437744
    3. 'result' → logprob: -3.8485281467437744
    4. ' intervals' → logprob: -3.8485281467437744
    5. ' painted' → logprob: -5.223527908325195
    6. '       ' → logprob: -7.598527908325195
    7. 'res' → logprob: -9.473527908325195
    8. 'results' → logprob: -10.223527908325195
    9. '   ' → logprob: -10.473527908325195
    10. ' result' → logprob: -11.098527908325195

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10047926008701324
    2. '=' → logprob: -2.3504793643951416
    3. '=[]' → logprob: -8.225479125976562
    4. '   ' → logprob: -13.600479125976562
    5. '[]' → logprob: -13.725479125976562
    6. '=[]
' → logprob: -14.100479125976562
    7. 's' → logprob: -14.475479125976562
    8. ',' → logprob: -15.100479125976562
    9. '=[' → logprob: -15.100479125976562
    10. ' ' → logprob: -15.475479125976562

Token 280: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.474137544631958
    2. '[]' → logprob: -0.974137544631958
    3. ' []
' → logprob: -9.974137306213379
    4. ' []' → logprob: -11.224137306213379
    5. '[]

' → logprob: -14.474137306213379
    6. '[' → logprob: -16.349138259887695
    7. '   ' → logprob: -18.099138259887695
    8. '[
' → logprob: -18.849138259887695
    9. '[]"' → logprob: -19.099138259887695
    10. ' ' → logprob: -19.099138259887695

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0445222333073616
    2. ' i' → logprob: -3.294522285461426
    3. 'i' → logprob: -5.669522285461426
    4. 'start' → logprob: -7.044522285461426
    5. ' start' → logprob: -7.044522285461426
    6. ' length' → logprob: -8.044522285461426
    7. ' n' → logprob: -8.169522285461426
    8. 'n' → logprob: -8.544522285461426
    9. ' in' → logprob: -8.669522285461426
    10. ' current' → logprob: -9.544522285461426

Token 282: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.50954270362854
    2. 'i' → logprob: -1.25954270362854
    3. 'in' → logprob: -3.00954270362854
    4. 'start' → logprob: -3.00954270362854
    5. '       ' → logprob: -4.134542465209961
    6. 'inside' → logprob: -8.259542465209961
    7. 'started' → logprob: -8.509542465209961
    8. ' n' → logprob: -8.884542465209961
    9. ' i' → logprob: -9.759542465209961
    10. 'current' → logprob: -10.259542465209961

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04302293807268143
    2. '=' → logprob: -3.168022871017456
    3. '       ' → logprob: -11.418023109436035
    4. '=len' → logprob: -12.668023109436035
    5. '        ' → logprob: -13.168023109436035
    6. '   ' → logprob: -13.418023109436035
    7. ' ' → logprob: -13.668023109436035
    8. ',' → logprob: -13.793023109436035
    9. ' =
' → logprob: -13.918023109436035
    10. '    ' → logprob: -13.918023109436035

Token 284: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804860636591911
    2. ' self' → logprob: -3.288048505783081
    3. 'len' → logprob: -12.53804874420166
    4. '       ' → logprob: -13.28804874420166
    5. '   ' → logprob: -13.91304874420166
    6. ' len' → logprob: -14.28804874420166
    7. '           ' → logprob: -16.163047790527344
    8. '	self' → logprob: -16.788047790527344
    9. '(self' → logprob: -17.663047790527344
    10. ' ' → logprob: -18.038047790527344

Token 285: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -6.704273118884885e-07
    2. 'length' → logprob: -14.875000953674316
    3. '.' → logprob: -16.375
    4. '.size' → logprob: -17.0
    5. '.len' → logprob: -17.5
    6. '.wall' → logprob: -18.125
    7. '.width' → logprob: -18.375
    8. 'self' → logprob: -19.375
    9. '       ' → logprob: -19.75
    10. ':length' → logprob: -19.875

Token 286: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1069231778383255
    2. '       ' → logprob: -2.3569231033325195
    3. '        
' → logprob: -5.2319231033325195
    4. '  
' → logprob: -7.9819231033325195
    5. ',' → logprob: -8.23192310333252
    6. '
' → logprob: -8.60692310333252
    7. ' 
' → logprob: -8.73192310333252
    8. '    
' → logprob: -8.73192310333252
    9. '```' → logprob: -9.85692310333252
    10. '   
' → logprob: -10.23192310333252

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6255559921264648
    2. ' i' → logprob: -1.2505559921264648
    3. 'i' → logprob: -1.7505559921264648
    4. 'start' → logprob: -5.625555992126465
    5. ' start' → logprob: -7.875555992126465
    6. '```' → logprob: -8.750555992126465
    7. 'index' → logprob: -8.875555992126465
    8. 'idx' → logprob: -9.125555992126465
    9. '        
' → logprob: -9.375555992126465
    10. '
' → logprob: -9.500555992126465

Token 288: ' visited' (ID: 18416)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008641162887215614
    2. 'start' → logprob: -5.133641242980957
    3. 'in' → logprob: -6.258641242980957
    4. '       ' → logprob: -7.508641242980957
    5. 'started' → logprob: -9.883641242980957
    6. ' i' → logprob: -10.258641242980957
    7. 'idx' → logprob: -10.383641242980957
    8. 'paint' → logprob: -10.508641242980957
    9. 'inside' → logprob: -10.508641242980957
    10. 'visited' (adapté à ' visited') → logprob: -11.008641242980957

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25206056237220764
    2. '=' → logprob: -1.5020605325698853
    3. ',' → logprob: -9.002060890197754
    4. ' ' → logprob: -12.127060890197754
    5. '=False' → logprob: -14.002060890197754
    6. ')' → logprob: -14.377060890197754
    7. '_' → logprob: -14.502060890197754
    8. '[' → logprob: -14.877060890197754
    9. '   ' → logprob: -16.127059936523438
    10. '=True' → logprob: -16.377059936523438

Token 290: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024342858232557774
    2. ' [' → logprob: -6.127434253692627
    3. 'False' → logprob: -8.502434730529785
    4. '[n' → logprob: -10.627434730529785
    5. '0' → logprob: -11.252434730529785
    6. '   ' → logprob: -12.377434730529785
    7. ' False' → logprob: -13.252434730529785
    8. 'n' → logprob: -14.252434730529785
    9. '[self' → logprob: -14.252434730529785
    10. ' ' → logprob: -14.377434730529785

Token 291: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.5048530030981055e-06
    2. ' False' → logprob: -13.500001907348633
    3. '0' → logprob: -20.000001907348633
    4. 'True' → logprob: -21.375001907348633
    5. '(False' → logprob: -21.500001907348633
    6. '
' → logprob: -21.750001907348633
    7. '   ' → logprob: -22.250001907348633
    8. ']' → logprob: -22.875001907348633
    9. 'false' → logprob: -23.625001907348633
    10. '.False' → logprob: -24.000001907348633

Token 292: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000517886015586555
    2. ']*' → logprob: -8.000517845153809
    3. ' ]' → logprob: -8.625517845153809
    4. ',' → logprob: -14.125517845153809
    5. ' for' → logprob: -14.250517845153809
    6. ' *' → logprob: -14.375517845153809
    7. '*' → logprob: -15.000517845153809
    8. ']*(' → logprob: -15.125517845153809
    9. '   ' → logprob: -15.875517845153809
    10. ']+' → logprob: -16.500518798828125

Token 293: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4266502559185028
    2. ' *' → logprob: -1.3016502857208252
    3. ']*' → logprob: -3.551650285720825
    4. ']' → logprob: -3.676650285720825
    5. '*n' → logprob: -3.926650285720825
    6. ' for' → logprob: -6.926650047302246
    7. 'for' → logprob: -8.676650047302246
    8. '(n' → logprob: -9.176650047302246
    9. ' ]' → logprob: -9.676650047302246
    10. ' n' → logprob: -10.301650047302246

Token 294: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007958084461279213
    2. '(n' → logprob: -7.250795841217041
    3. '(' → logprob: -9.625795364379883
    4. ' n' → logprob: -11.125795364379883
    5. ' (' → logprob: -12.625795364379883
    6. 'self' → logprob: -13.875795364379883
    7. '       ' → logprob: -14.500795364379883
    8. '(self' → logprob: -15.250795364379883
    9. '   ' → logprob: -16.125795364379883
    10. '           ' → logprob: -17.375795364379883

Token 295: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05400441959500313
    2. '       ' → logprob: -3.054004430770874
    3. ',' → logprob: -6.179004192352295
    4. '        
' → logprob: -6.304004192352295
    5. '  
' → logprob: -7.554004192352295
    6. ' 
' → logprob: -8.304004669189453
    7. '
' → logprob: -8.804004669189453
    8. '<|end|>' → logprob: -8.804004669189453
    9. ',
' → logprob: -8.929004669189453
    10. '    
' → logprob: -9.554004669189453

Token 296: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4783334732055664
    2. '       ' → logprob: -1.2283334732055664
    3. ' i' → logprob: -2.6033334732055664
    4. 'start' → logprob: -4.603333473205566
    5. 'idx' → logprob: -7.228333473205566
    6. 'for' → logprob: -7.603333473205566
    7. ' start' → logprob: -7.603333473205566
    8. ' for' → logprob: -7.603333473205566
    9. 'index' → logprob: -8.103333473205566
    10. 'current' → logprob: -8.353333473205566

Token 297: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010846072807908058
    2. 'start' → logprob: -5.010846138000488
    3. 'for' (adapté à ' for') → logprob: -6.135846138000488
    4. 'in' → logprob: -7.135846138000488
    5. '       ' → logprob: -7.885846138000488
    6. ' i' → logprob: -8.260846138000488
    7. 'idx' → logprob: -8.385846138000488
    8. 'index' → logprob: -9.010846138000488
    9. 'current' → logprob: -9.635846138000488
    10. 'inside' → logprob: -10.760846138000488

Token 298: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022595763206482
    2. ' i' → logprob: -1.9102259874343872
    3. '0' → logprob: -14.785225868225098
    4. ' ' → logprob: -15.035225868225098
    5. '	i' → logprob: -15.535225868225098
    6. 'idx' → logprob: -15.535225868225098
    7. '   ' → logprob: -15.660225868225098
    8. ' idx' → logprob: -16.285226821899414
    9. 'index' → logprob: -16.535226821899414
    10. ')' → logprob: -16.910226821899414

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006860651075839996
    2. 'in' → logprob: -5.006860733032227
    3. ' ' → logprob: -9.131860733032227
    4. '<|end|>' → logprob: -10.631860733032227
    5. '	in' → logprob: -12.631860733032227
    6. ',' → logprob: -13.006860733032227
    7. '  ' → logprob: -13.756860733032227
    8. ' ,' → logprob: -14.131860733032227
    9. 'In' → logprob: -14.506860733032227
    10. ' =' → logprob: -14.631860733032227

Token 300: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141665637493134
    2. ' range' → logprob: -1.7014166116714478
    3. '(range' → logprob: -13.326416969299316
    4. '   ' → logprob: -13.826416969299316
    5. ' ' → logprob: -14.951416969299316
    6. '	range' → logprob: -14.951416969299316
    7. '
' → logprob: -17.326416015625
    8. ' xrange' → logprob: -17.701416015625
    9. '  ' → logprob: -18.076416015625
    10. '       ' → logprob: -18.576416015625

Token 301: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7356117367744446
    2. '(n' → logprob: -0.7356117367744446
    3. ' n' → logprob: -3.2356116771698
    4. '(' → logprob: -6.235611915588379
    5. ' (' → logprob: -8.985611915588379
    6. '	n' → logprob: -9.735611915588379
    7. '   ' → logprob: -10.235611915588379
    8. '       ' → logprob: -10.235611915588379
    9. ')n' → logprob: -11.360611915588379
    10. ',' → logprob: -12.735611915588379

Token 302: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04884180799126625
    2. '):' → logprob: -3.048841714859009
    3. ' ):
' → logprob: -8.67384147644043
    4. ' ):' → logprob: -10.54884147644043
    5. '):
' → logprob: -10.67384147644043
    6. '       ' → logprob: -11.42384147644043
    7. ')' → logprob: -11.67384147644043
    8. '):

' → logprob: -12.29884147644043
    9. '   ' → logprob: -12.42384147644043
    10. ':' → logprob: -12.67384147644043

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11988785117864609
    2. ' if' → logprob: -2.3698878288269043
    3. 'if' → logprob: -4.494887828826904
    4. '<|end|>' → logprob: -5.119887828826904
    5. '       ' → logprob: -7.869887828826904
    6. ' ' → logprob: -8.119888305664062
    7. '            
' → logprob: -8.244888305664062
    8. '```' → logprob: -8.244888305664062
    9. '   ' → logprob: -8.744888305664062
    10. ',' → logprob: -8.869888305664062

Token 304: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01885840855538845
    2. ' if' → logprob: -4.018858432769775
    3. '           ' → logprob: -7.268858432769775
    4. '               ' → logprob: -12.518857955932617
    5. '       ' → logprob: -12.643857955932617
    6. 'while' → logprob: -13.143857955932617
    7. '   ' → logprob: -14.018857955932617
    8. '
' → logprob: -14.643857955932617
    9. ' ' → logprob: -15.143857955932617
    10. '            
' → logprob: -15.768857955932617

Token 305: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24029874801635742
    2. ' self' → logprob: -1.6152987480163574
    3. ' not' → logprob: -4.740298748016357
    4. 'not' → logprob: -5.115298748016357
    5. '           ' → logprob: -11.240299224853516
    6. '(self' → logprob: -11.865299224853516
    7. '       ' → logprob: -12.490299224853516
    8. '   ' → logprob: -12.490299224853516
    9. ' ' → logprob: -12.740299224853516
    10. '	self' → logprob: -13.740299224853516

Token 306: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.2166411478538066e-05
    2. '.wall' → logprob: -10.125052452087402
    3. ' .' → logprob: -12.125052452087402
    4. '.' → logprob: -12.750052452087402
    5. '_wall' → logprob: -13.000052452087402
    6. '.paint' → logprob: -14.750052452087402
    7. '   ' → logprob: -15.375052452087402
    8. ' ' → logprob: -16.000051498413086
    9. '.\' → logprob: -16.250051498413086
    10. '       ' → logprob: -16.375051498413086

Token 307: 'paint' (ID: 44758)
  Prédit: 'paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -5.512236498361744e-07
    2. '-painted' → logprob: -14.875000953674316
    3. 'visited' → logprob: -17.5
    4. '```' → logprob: -17.625
    5. ' painted' → logprob: -17.75
    6. '
' → logprob: -18.25
    7. 'pain' → logprob: -18.75
    8. '.paint' → logprob: -19.375
    9. '_p' → logprob: -19.375
    10. 'painting' → logprob: -19.625

Token 308: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.750000953674316
    3. '[i' → logprob: -15.250000953674316
    4. 'ED' → logprob: -16.500001907348633
    5. 'ед' → logprob: -16.875001907348633
    6. 'eded' → logprob: -16.875001907348633
    7. '_ed' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.250001907348633
    9. 'ted' → logprob: -17.625001907348633
    10. '       ' → logprob: -17.750001907348633

Token 309: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.921253225300461e-05
    2. ' and' → logprob: -10.625069618225098
    3. '[' → logprob: -10.750069618225098
    4. 'and' → logprob: -11.250069618225098
    5. ' [' → logprob: -11.625069618225098
    6. '[
' → logprob: -14.000069618225098
    7. ' ' → logprob: -15.000069618225098
    8. '   ' → logprob: -15.750069618225098
    9. '[I' → logprob: -17.25006866455078
    10. '       ' → logprob: -17.50006866455078

Token 310: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18427997827529907
    2. 'and' → logprob: -1.8092799186706543
    3. ']' → logprob: -5.434279918670654
    4. ' ]' → logprob: -9.434280395507812
    5. ' ' → logprob: -9.684280395507812
    6. ')' → logprob: -12.434280395507812
    7. '        ' → logprob: -13.059280395507812
    8. 'not' → logprob: -13.184280395507812
    9. '           ' → logprob: -13.684280395507812
    10. '    ' → logprob: -13.684280395507812

Token 311: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269354522228241
    2. 'and' → logprob: -2.1269354820251465
    3. ' ' → logprob: -12.001935005187988
    4. '==' → logprob: -14.501935005187988
    5. 'not' → logprob: -15.001935005187988
    6. ' not' → logprob: -16.626935958862305
    7. '        ' → logprob: -16.876935958862305
    8. '
' → logprob: -17.001935958862305
    9. '           ' → logprob: -17.251935958862305
    10. 'is' → logprob: -17.376935958862305

Token 312: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16182565689086914
    2. '(not' → logprob: -2.161825656890869
    3. ' not' → logprob: -3.411825656890869
    4. '(i' → logprob: -7.161825656890869
    5. ' (' → logprob: -7.911825656890869
    6. '(n' → logprob: -10.536825180053711
    7. '
' → logprob: -10.536825180053711
    8. 'visited' → logprob: -10.911825180053711
    9. '(' → logprob: -11.036825180053711
    10. 'i' → logprob: -11.411825180053711

Token 313: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0002613358374219388
    2. ' visited' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. 'visit' → logprob: -19.250261306762695
    5. 'vis' → logprob: -19.500261306762695
    6. 'visible' → logprob: -19.625261306762695
    7. '       ' → logprob: -20.500261306762695
    8. ' ' → logprob: -20.875261306762695
    9. 'Visited' → logprob: -21.000261306762695
    10. '
' → logprob: -21.250261306762695

Token 314: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.375004768371582
    3. ' [' → logprob: -14.625004768371582
    4. '[
' → logprob: -15.125004768371582
    5. '
' → logprob: -17.5000057220459
    6. '[I' → logprob: -18.8750057220459
    7. '[a' → logprob: -19.0000057220459
    8. 'i' → logprob: -19.0000057220459
    9. '```' → logprob: -19.0000057220459
    10. ' ' → logprob: -19.3750057220459

Token 315: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.20215892791748047
    2. ']:
' → logprob: -1.7021589279174805
    3. ']' → logprob: -7.7021589279174805
    4. ' ]' → logprob: -8.70215892791748
    5. ']:
' → logprob: -9.82715892791748
    6. ':' → logprob: -10.20215892791748
    7. ']:

' → logprob: -10.45215892791748
    8. ']:


' → logprob: -13.32715892791748
    9. ':
' → logprob: -13.32715892791748
    10. ']]:
' → logprob: -14.70215892791748

Token 316: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4458945691585541
    2. ':
' → logprob: -1.3208945989608765
    3. '               ' → logprob: -2.445894479751587
    4. '           ' → logprob: -5.945894718170166
    5. '):
' → logprob: -6.445894718170166
    6. ',' → logprob: -7.070894718170166
    7. '<|end|>' → logprob: -7.820894718170166
    8. ' and' → logprob: -8.695894241333008
    9. '```' → logprob: -9.195894241333008
    10. ':

' → logprob: -9.945894241333008

Token 317: ' length' (ID: 5517)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16272565722465515
    2. ' start' → logprob: -1.9127256870269775
    3. 'end' → logprob: -6.162725448608398
    4. ' end' → logprob: -8.912725448608398
    5. 'j' → logprob: -9.037725448608398
    6. ' j' → logprob: -10.287725448608398
    7. '                   ' → logprob: -10.412725448608398
    8. 'interval' → logprob: -10.412725448608398
    9. 'length' (adapté à ' length') → logprob: -11.662725448608398
    10. '   ' → logprob: -11.662725448608398

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07010927051305771
    2. '=' → logprob: -2.6951093673706055
    3. ' ' → logprob: -8.695109367370605
    4. ',' → logprob: -13.070109367370605
    5. '   ' → logprob: -14.195109367370605
    6. '  ' → logprob: -15.320109367370605
    7. '_' → logprob: -15.445109367370605
    8. '    ' → logprob: -15.445109367370605
    9. '               ' → logprob: -15.445109367370605
    10. '```' → logprob: -15.445109367370605

Token 319: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6211543679237366
    2. '0' → logprob: -0.9961543679237366
    3. ' ' → logprob: -2.371154308319092
    4. '   ' → logprob: -12.24615478515625
    5. '  ' → logprob: -14.99615478515625
    6. '
' → logprob: -15.12115478515625
    7. '           ' → logprob: -15.30865478515625
    8. '               ' → logprob: -15.80865478515625
    9. '                   ' → logprob: -16.37115478515625
    10. '```' → logprob: -16.37115478515625

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5765981078147888
    2. '1' → logprob: -0.8265981078147888
    3. ' ' → logprob: -7.326598167419434
    4. '   ' → logprob: -14.576598167419434
    5. '
' → logprob: -17.076597213745117
    6. '  ' → logprob: -17.826597213745117
    7. '```' → logprob: -18.076597213745117
    8. '2' → logprob: -20.076597213745117
    9. '`' → logprob: -20.389097213745117
    10. '    ' → logprob: -20.639097213745117

Token 321: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11037223041057587
    2. '
' → logprob: -2.610372304916382
    3. '<|end|>' → logprob: -4.735372066497803
    4. '                   ' → logprob: -5.110372066497803
    5. '           ' → logprob: -5.235372066497803
    6. ',' → logprob: -5.860372066497803
    7. '                
' → logprob: -6.735372066497803
    8. '       ' → logprob: -7.360372066497803
    9. '                ' → logprob: -7.360372066497803
    10. ' ' → logprob: -7.360372066497803

Token 322: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: ' idx' (ID: 14016)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.09916157275438309
    2. 'start' → logprob: -2.7241616249084473
    3. ' j' → logprob: -3.7241616249084473
    4. 'idx' (adapté à ' idx') → logprob: -5.849161624908447
    5. 'pos' → logprob: -7.474161624908447
    6. 'current' → logprob: -7.849161624908447
    7. ' start' → logprob: -8.099161148071289
    8. 'index' → logprob: -8.599161148071289
    9. '                   ' → logprob: -8.724161148071289
    10. '               ' → logprob: -9.974161148071289

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025667413137853146
    2. '=' → logprob: -6.002566814422607
    3. '=i' → logprob: -9.37756633758545
    4. ' ' → logprob: -13.12756633758545
    5. ',' → logprob: -13.25256633758545
    6. '<|end|>' → logprob: -13.25256633758545
    7. 'i' → logprob: -15.75256633758545
    8. ')' → logprob: -16.002567291259766
    9. ' i' → logprob: -16.252567291259766
    10. ' =
' → logprob: -16.377567291259766

Token 325: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02975083328783512
    2. ' i' → logprob: -3.5297508239746094
    3. '(i' → logprob: -16.15475082397461
    4. '
' → logprob: -16.15475082397461
    5. '	i' → logprob: -16.90475082397461
    6. '           ' → logprob: -17.15475082397461
    7. ' ' → logprob: -17.52975082397461
    8. ' (' → logprob: -17.90475082397461
    9. '   ' → logprob: -17.90475082397461
    10. '```' → logprob: -18.27975082397461

Token 326: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0787377581000328
    2. '               ' → logprob: -3.203737735748291
    3. '<|end|>' → logprob: -3.953737735748291
    4. 'while' → logprob: -4.828737735748291
    5. '                
' → logprob: -5.703737735748291
    6. '  
' → logprob: -6.453737735748291
    7. ' while' → logprob: -6.578737735748291
    8. '<|end|>' → logprob: -7.703737735748291
    9. ' 
' → logprob: -8.32873821258545
    10. '            
' → logprob: -8.82873821258545

Token 327: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23064225912094116
    2. '
' → logprob: -1.980642318725586
    3. '                
' → logprob: -3.480642318725586
    4. '<|end|>' → logprob: -3.980642318725586
    5. ' while' → logprob: -4.855642318725586
    6. '  
' → logprob: -5.105642318725586
    7. ' 
' → logprob: -6.355642318725586
    8. 'while' → logprob: -7.355642318725586
    9. '           ' → logprob: -7.980642318725586
    10. '            
' → logprob: -8.230642318725586

Token 328: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1022472009062767
    2. ' while' → logprob: -2.3522472381591797
    3. '               ' → logprob: -6.35224723815918
    4. '
' → logprob: -9.22724723815918
    5. '```' → logprob: -9.60224723815918
    6. '                   ' → logprob: -9.72724723815918
    7. '           ' → logprob: -10.10224723815918
    8. '	while' → logprob: -11.85224723815918
    9. 'While' → logprob: -11.97724723815918
    10. ' ' → logprob: -11.97724723815918

Token 329: ' self' (ID: 1051)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.23202991485595703
    2. 'self' → logprob: -2.357029914855957
    3. '(idx' → logprob: -2.482029914855957
    4. ' idx' → logprob: -4.357029914855957
    5. '(self' → logprob: -4.982029914855957
    6. ' self' → logprob: -5.482029914855957
    7. ' (' → logprob: -6.732029914855957
    8. 'not' → logprob: -6.732029914855957
    9. '(not' → logprob: -7.482029914855957
    10. 'True' → logprob: -7.857029914855957

Token 330: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0002819544170051813
    2. '.wall' → logprob: -9.000282287597656
    3. '_wall' → logprob: -10.000282287597656
    4. '.length' → logprob: -10.250282287597656
    5. '.' → logprob: -10.250282287597656
    6. '.paint' → logprob: -11.250282287597656
    7. '_' → logprob: -12.625282287597656
    8. ' ' → logprob: -13.125282287597656
    9. '_length' → logprob: -13.125282287597656
    10. '   ' → logprob: -13.250282287597656

Token 331: 'paint' (ID: 44758)
  Prédit: 'paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -1.0087516784551553e-05
    2. ' painted' → logprob: -12.00001049041748
    3. '-painted' → logprob: -12.75001049041748
    4. '_p' → logprob: -15.87501049041748
    5. 'ainted' → logprob: -15.87501049041748
    6. '
' → logprob: -16.000009536743164
    7. '```' → logprob: -16.125009536743164
    8. 'painting' → logprob: -16.375009536743164
    9. 'wall' → logprob: -16.500009536743164
    10. '.paint' → logprob: -16.625009536743164

Token 332: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00010235115041723475
    2. '[i' → logprob: -9.375102043151855
    3. '[' → logprob: -12.000102043151855
    4. 'ted' → logprob: -13.000102043151855
    5. '[self' → logprob: -13.375102043151855
    6. '[index' → logprob: -13.375102043151855
    7. 'ainted' → logprob: -13.375102043151855
    8. 'ated' → logprob: -14.375102043151855
    9. '_ed' → logprob: -14.750102043151855
    10. 'eded' → logprob: -14.750102043151855

Token 333: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00011522514978423715
    2. 'idx' → logprob: -9.125115394592285
    3. '[' → logprob: -13.000115394592285
    4. '[
' → logprob: -13.625115394592285
    5. ' idx' → logprob: -13.875115394592285
    6. '(idx' → logprob: -13.875115394592285
    7. '```' → logprob: -15.625115394592285
    8. '[(' → logprob: -15.625115394592285
    9. '	idx' → logprob: -15.875115394592285
    10. ' [' → logprob: -16.50011444091797

Token 334: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6421588063240051
    2. ']' → logprob: -0.8921588063240051
    3. 'and' → logprob: -2.7671587467193604
    4. ' ]' → logprob: -7.1421589851379395
    5. ']==' → logprob: -8.642158508300781
    6. ']:
' → logprob: -9.267158508300781
    7. ']:' → logprob: -10.142158508300781
    8. '               ' → logprob: -10.517158508300781
    9. ']:

' → logprob: -10.892158508300781
    10. '           ' → logprob: -10.892158508300781

Token 335: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5233801007270813
    2. 'and' → logprob: -0.8983801007270813
    3. '==' → logprob: -9.023380279541016
    4. '           ' → logprob: -9.523380279541016
    5. ':
' → logprob: -11.148380279541016
    6. '               ' → logprob: -11.398380279541016
    7. ' ' → logprob: -11.523380279541016
    8. ':' → logprob: -12.148380279541016
    9. '       ' → logprob: -13.023380279541016
    10. '                   ' → logprob: -13.023380279541016

Token 336: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1156146377325058
    2. ' not' → logprob: -2.740614652633667
    3. 'idx' → logprob: -3.365614652633667
    4. '(not' → logprob: -5.365614414215088
    5. 'length' → logprob: -5.990614414215088
    6. '(idx' → logprob: -6.490614414215088
    7. ' idx' → logprob: -6.990614414215088
    8. ' (' → logprob: -8.865614891052246
    9. '(length' → logprob: -8.990614891052246
    10. 'True' → logprob: -9.490614891052246

Token 337: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0007108822464942932
    2. ' visited' → logprob: -7.250710964202881
    3. '   ' → logprob: -14.250710487365723
    4. '       ' → logprob: -16.50071144104004
    5. '           ' → logprob: -16.75071144104004
    6. ' ' → logprob: -17.50071144104004
    7. '
' → logprob: -17.50071144104004
    8. '                   ' → logprob: -17.75071144104004
    9. 'Visited' → logprob: -18.37571144104004
    10. '    ' → logprob: -18.50071144104004

Token 338: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004629007540643215
    2. '[' → logprob: -5.379629135131836
    3. ' [' → logprob: -12.629629135131836
    4. '[i' → logprob: -13.879629135131836
    5. '[
' → logprob: -13.879629135131836
    6. '[index' → logprob: -14.379629135131836
    7. '```' → logprob: -14.504629135131836
    8. 'idx' → logprob: -14.629629135131836
    9. '[ind' → logprob: -14.629629135131836
    10. '[id' → logprob: -15.504629135131836

Token 339: ']:
' (ID: 22152)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00024275471514556557
    2. 'idx' → logprob: -9.125243186950684
    3. '[' → logprob: -9.375243186950684
    4. ']' → logprob: -10.750243186950684
    5. ' idx' → logprob: -11.875243186950684
    6. '][' → logprob: -12.375243186950684
    7. '[
' → logprob: -12.500243186950684
    8. '
' → logprob: -13.000243186950684
    9. ' [' → logprob: -13.000243186950684
    10. '	idx' → logprob: -13.375243186950684

Token 340: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00325459660962224
    2. '                    
' → logprob: -7.253254413604736
    3. '               ' → logprob: -7.503254413604736
    4. '                    ' → logprob: -7.628254413604736
    5. '<|end|>' → logprob: -8.128254890441895
    6. ' ' → logprob: -8.503254890441895
    7. '                  ' → logprob: -8.628254890441895
    8. '                ' → logprob: -8.878254890441895
    9. '           ' → logprob: -9.003254890441895
    10. '                       ' → logprob: -9.128254890441895

Token 341: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.07147432863712311
    2. 'visited' (adapté à ' visited') → logprob: -3.071474313735962
    3. '                   ' → logprob: -3.821474313735962
    4. ' length' → logprob: -8.696474075317383
    5. '                    
' → logprob: -9.196474075317383
    6. '                       ' → logprob: -9.196474075317383
    7. ' 
' → logprob: -9.321474075317383
    8. '
' → logprob: -9.571474075317383
    9. '               ' → logprob: -9.946474075317383
    10. ' ' → logprob: -10.196474075317383

Token 342: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004097277764230967
    2. '[' → logprob: -5.5040974617004395
    3. ' [' → logprob: -12.004096984863281
    4. 'idx' → logprob: -12.504096984863281
    5. '```' → logprob: -12.879096984863281
    6. '[
' → logprob: -13.629096984863281
    7. '[i' → logprob: -13.754096984863281
    8. '[int' → logprob: -14.504096984863281
    9. '[index' → logprob: -14.629096984863281
    10. '[token' → logprob: -14.879096984863281

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005314396694302559
    2. '[idx' → logprob: -5.630314350128174
    3. ']=' → logprob: -6.880314350128174
    4. '[i' → logprob: -8.255314826965332
    5. '=' → logprob: -8.380314826965332
    6. ' ]' → logprob: -9.755314826965332
    7. 'idx' → logprob: -10.130314826965332
    8. '[' → logprob: -10.380314826965332
    9. ' =' → logprob: -10.380314826965332
    10. '   ' → logprob: -11.380314826965332

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006440026219934225
    2. ' =' → logprob: -5.256440162658691
    3. '[idx' → logprob: -7.006440162658691
    4. ']' → logprob: -8.506440162658691
    5. ']=' → logprob: -9.756440162658691
    6. '=True' → logprob: -10.756440162658691
    7. '[i' → logprob: -11.881440162658691
    8. '[' → logprob: -11.881440162658691
    9. 'idx' → logprob: -13.631440162658691
    10. '=
' → logprob: -13.881440162658691

Token 345: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.547789674485102e-05
    2. ' True' → logprob: -10.250035285949707
    3. '(True' → logprob: -20.375036239624023
    4. '
' → logprob: -22.125036239624023
    5. 'False' → logprob: -22.125036239624023
    6. '=True' → logprob: -22.500036239624023
    7. 'true' → logprob: -22.625036239624023
    8. '   ' → logprob: -23.500036239624023
    9. '.True' → logprob: -23.625036239624023
    10. '[' → logprob: -25.875036239624023

Token 346: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03384048864245415
    2. '
' → logprob: -4.283840656280518
    3. '                    
' → logprob: -4.533840656280518
    4. ' 
' → logprob: -5.408840656280518
    5. '                    ' → logprob: -6.533840656280518
    6. ' idx' → logprob: -7.158840656280518
    7. 'idx' → logprob: -7.533840656280518
    8. '<|end|>' → logprob: -8.03384017944336
    9. '               ' → logprob: -8.15884017944336
    10. '    
' → logprob: -9.03384017944336

Token 347: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27118679881095886
    2. 'idx' → logprob: -1.8961868286132812
    3. ' idx' → logprob: -2.5211868286132812
    4. ' 
' → logprob: -6.021186828613281
    5. '                    
' → logprob: -6.146186828613281
    6. '                    ' → logprob: -7.021186828613281
    7. '               ' → logprob: -7.271186828613281
    8. ' ' → logprob: -8.771186828613281
    9. '                ' → logprob: -9.021186828613281
    10. '
' → logprob: -9.146186828613281

Token 348: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.16506768763065338
    2. 'idx' → logprob: -1.9150676727294922
    3. ' length' → logprob: -5.540067672729492
    4. ' idx' → logprob: -7.040067672729492
    5. 'index' → logprob: -10.790067672729492
    6. '                   ' → logprob: -12.290067672729492
    7. '                    
' → logprob: -13.665067672729492
    8. '	length' → logprob: -14.165067672729492
    9. '```' → logprob: -14.665067672729492
    10. '	idx' → logprob: -14.790067672729492

Token 349: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6932337880134583
    2. '+=' → logprob: -0.6932337880134583
    3. '```' → logprob: -10.068233489990234
    4. '+' → logprob: -11.068233489990234
    5. ']+=' → logprob: -11.943233489990234
    6. '                   ' → logprob: -12.318233489990234
    7. '=' → logprob: -12.568233489990234
    8. ' ' → logprob: -13.318233489990234
    9. '   ' → logprob: -13.318233489990234
    10. '<|end|>' → logprob: -13.443233489990234

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.000431060791016
    4. '
' → logprob: -19.125431060791016
    5. '```' → logprob: -19.125431060791016
    6. ' ' → logprob: -19.875431060791016
    7. '  ' → logprob: -20.500431060791016
    8. '`' → logprob: -21.750431060791016
    9. '۱' → logprob: -21.812931060791016
    10. '+' → logprob: -22.000431060791016

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -18.3750057220459
    4. '   ' → logprob: -18.6250057220459
    5. '```' → logprob: -20.1250057220459
    6. '  ' → logprob: -21.7500057220459
    7. '۱' → logprob: -22.0000057220459
    8. '

' → logprob: -22.5000057220459
    9. '<|end|>' → logprob: -22.5000057220459
    10. '１' → logprob: -22.6250057220459

Token 352: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4363475739955902
    2. '
' → logprob: -1.0613476037979126
    3. 'idx' → logprob: -5.436347484588623
    4. ' 
' → logprob: -7.186347484588623
    5. '               ' → logprob: -7.436347484588623
    6. ' idx' → logprob: -7.686347484588623
    7. '                    
' → logprob: -7.811347484588623
    8. '           ' → logprob: -8.436347961425781
    9. '  
' → logprob: -8.811347961425781
    10. '   ' → logprob: -8.936347961425781

Token 353: '                   ' (ID: 699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7154452800750732
    2. '                   ' → logprob: -0.7154452800750732
    3. 'idx' → logprob: -4.840445518493652
    4. ' idx' → logprob: -4.965445518493652
    5. ' 
' → logprob: -5.840445518493652
    6. '               ' → logprob: -6.840445518493652
    7. '                    
' → logprob: -6.840445518493652
    8. '  
' → logprob: -7.715445518493652
    9. '
' → logprob: -7.840445518493652
    10. '           ' → logprob: -8.090445518493652

Token 354: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -3.7146746763028204e-05
    2. '                   ' → logprob: -11.00003719329834
    3. '(idx' → logprob: -11.25003719329834
    4. ' idx' → logprob: -11.87503719329834
    5. 'index' → logprob: -15.25003719329834
    6. '(' → logprob: -16.250036239624023
    7. '
' → logprob: -17.750036239624023
    8. '```' → logprob: -18.250036239624023
    9. '	idx' → logprob: -18.625036239624023
    10. ' (' → logprob: -19.000036239624023

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002557949395850301
    2. ' =' → logprob: -6.002557754516602
    3. '+=' → logprob: -9.502557754516602
    4. '%=' → logprob: -12.002557754516602
    5. ' +=' → logprob: -13.627557754516602
    6. '=
' → logprob: -16.5025577545166
    7. '=(' → logprob: -16.7525577545166
    8. '%' → logprob: -17.6275577545166
    9. '+' → logprob: -17.7525577545166
    10. ' %=' → logprob: -18.0025577545166

Token 356: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.08116786926984787
    2. ' (' → logprob: -2.5811679363250732
    3. '(index' → logprob: -6.331167697906494
    4. '(' → logprob: -8.331168174743652
    5. '(ans' → logprob: -9.456168174743652
    6. '(id' → logprob: -9.831168174743652
    7. '(i' → logprob: -10.206168174743652
    8. '(img' → logprob: -10.831168174743652
    9. '(ix' → logprob: -11.081168174743652
    10. '(indices' → logprob: -11.206168174743652

Token 357: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.011139190755784512
    2. '(idx' → logprob: -4.511139392852783
    3. ' idx' → logprob: -9.386138916015625
    4. '[idx' → logprob: -12.011138916015625
    5. '	idx' → logprob: -14.386138916015625
    6. ' (' → logprob: -14.511138916015625
    7. '_idx' → logprob: -15.761138916015625
    8. 'index' → logprob: -16.386138916015625
    9. '           ' → logprob: -17.761138916015625
    10. 'id' → logprob: -18.261138916015625

Token 358: ' +' (ID: 659)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.08404902368783951
    2. ' idx' → logprob: -2.5840489864349365
    3. '(idx' → logprob: -5.334049224853516
    4. '[idx' → logprob: -8.084049224853516
    5. ' (' → logprob: -11.959049224853516
    6. '	idx' → logprob: -12.584049224853516
    7. '_idx' → logprob: -13.209049224853516
    8. '+' → logprob: -14.209049224853516
    9. ' +' → logprob: -14.959049224853516
    10. ')' → logprob: -15.209049224853516

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -21.25000762939453
    4. ')' → logprob: -21.75000762939453
    5. '```' → logprob: -21.87500762939453
    6. '
' → logprob: -22.00000762939453
    7. '           ' → logprob: -23.62500762939453
    8. '<|end|>' → logprob: -24.25000762939453
    9. '                   ' → logprob: -24.37500762939453
    10. '۱' → logprob: -24.62500762939453

Token 360: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.5649528298527e-05
    2. ')%' → logprob: -10.125075340270996
    3. ' )' → logprob: -10.250075340270996
    4. ')
' → logprob: -16.375076293945312
    5. ')

' → logprob: -18.375076293945312
    6. '%' → logprob: -19.375076293945312
    7. '),' → logprob: -19.375076293945312
    8. '）' → logprob: -20.000076293945312
    9. ']' → logprob: -21.000076293945312
    10. ' ' → logprob: -21.000076293945312

Token 361: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01763625256717205
    2. '%' → logprob: -4.142636299133301
    3. '%n' → logprob: -6.892636299133301
    4. ' ' → logprob: -8.1426362991333
    5. ')' → logprob: -8.3926362991333
    6. ')%' → logprob: -9.7676362991333
    7. ' )' → logprob: -12.5176362991333
    8. ' ' → logprob: -12.7676362991333
    9. '<|end|>' → logprob: -13.3926362991333
    10. '%i' → logprob: -14.6426362991333

Token 362: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.615255839889869e-05
    2. ' n' → logprob: -9.250096321105957
    3. 'self' → logprob: -17.75009536743164
    4. '	n' → logprob: -19.62509536743164
    5. '<|end|>' → logprob: -20.37509536743164
    6. ')n' → logprob: -20.87509536743164
    7. '   ' → logprob: -21.37509536743164
    8. '```' → logprob: -21.75009536743164
    9. ' ' → logprob: -21.87509536743164
    10. ' self' → logprob: -22.00009536743164

Token 363: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6310442090034485
    2. '                   ' → logprob: -0.8810442090034485
    3. '               ' → logprob: -3.1310441493988037
    4. '           ' → logprob: -5.131044387817383
    5. ' if' → logprob: -5.631044387817383
    6. '```' → logprob: -8.506044387817383
    7. '       ' → logprob: -9.256044387817383
    8. '                       ' → logprob: -9.631044387817383
    9. '   ' → logprob: -10.381044387817383
    10. ' ' → logprob: -11.256044387817383

Token 366: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0036106400657445192
    2. ' idx' → logprob: -5.628610610961914
    3. 'length' → logprob: -12.128610610961914
    4. '(idx' → logprob: -13.128610610961914
    5. '	idx' → logprob: -13.753610610961914
    6. 'not' → logprob: -14.253610610961914
    7. 'index' → logprob: -14.878610610961914
    8. ' length' → logprob: -15.253610610961914
    9. ' not' → logprob: -15.753610610961914
    10. 'visited' → logprob: -16.003610610961914

Token 367: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931540966033936
    2. ' ==' → logprob: -0.6931540966033936
    3. '==
' → logprob: -12.443154335021973
    4. ')==' → logprob: -13.568154335021973
    5. ']==' → logprob: -13.943154335021973
    6. '=' → logprob: -14.693154335021973
    7. ')' → logprob: -15.693154335021973
    8. ' ==
' → logprob: -16.193153381347656
    9. '==(' → logprob: -16.943153381347656
    10. '```' → logprob: -16.943153381347656

Token 368: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '           ' → logprob: -17.62520408630371
    4. '                   ' → logprob: -17.62520408630371
    5. '               ' → logprob: -18.62520408630371
    6. '	i' → logprob: -18.62520408630371
    7. '   ' → logprob: -18.75020408630371
    8. '
' → logprob: -19.12520408630371
    9. ' ' → logprob: -19.87520408630371
    10. 'I' → logprob: -20.25020408630371

Token 369: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24004240334033966
    2. ':
' → logprob: -1.6150424480438232
    3. '               ' → logprob: -4.615042209625244
    4. '                       ' → logprob: -5.740042209625244
    5. '                   ' → logprob: -7.615042209625244
    6. '       ' → logprob: -7.615042209625244
    7. '           ' → logprob: -8.490042686462402
    8. '):
' → logprob: -9.115042686462402
    9. '<|end|>' → logprob: -10.740042686462402
    10. '):' → logprob: -11.240042686462402

Token 370: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018800150603055954
    2. ' break' → logprob: -4.643800258636475
    3. 'break' → logprob: -4.768800258636475
    4. '                   ' → logprob: -7.768800258636475
    5. '               ' → logprob: -10.268799781799316
    6. '                           ' → logprob: -10.768799781799316
    7. '	break' → logprob: -11.518799781799316
    8. '   ' → logprob: -11.643799781799316
    9. '       ' → logprob: -12.018799781799316
    10. '           ' → logprob: -12.018799781799316

Token 371: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04988401010632515
    2. ' break' → logprob: -3.049884080886841
    3. '                       ' → logprob: -6.799883842468262
    4. '                           ' → logprob: -9.174883842468262
    5. '                   ' → logprob: -9.799883842468262
    6. '               ' → logprob: -11.674883842468262
    7. '	break' → logprob: -12.174883842468262
    8. '   ' → logprob: -12.674883842468262
    9. '                               ' → logprob: -13.049883842468262
    10. '
' → logprob: -13.424883842468262

Token 372: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07308230549097061
    2. '               ' → logprob: -3.198082208633423
    3. '<|end|>' → logprob: -4.823082447052002
    4. '  
' → logprob: -5.073082447052002
    5. ' 
' → logprob: -5.323082447052002
    6. '       ' → logprob: -5.448082447052002
    7. '        
' → logprob: -6.198082447052002
    8. '    
' → logprob: -6.573082447052002
    9. '                
' → logprob: -7.198082447052002
    10. '\n' → logprob: -7.323082447052002

Token 373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08228509873151779
    2. '
' → logprob: -3.957285165786743
    3. '<|end|>' → logprob: -4.082284927368164
    4. ' 
' → logprob: -4.332284927368164
    5. '       ' → logprob: -4.457284927368164
    6. '  
' → logprob: -4.832284927368164
    7. '                
' → logprob: -5.457284927368164
    8. '        
' → logprob: -5.707284927368164
    9. '           ' → logprob: -7.332284927368164
    10. '    
' → logprob: -7.707284927368164

Token 374: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.8074630498886108
    2. '       ' → logprob: -1.4324630498886108
    3. 'interval' → logprob: -1.8074630498886108
    4. '               ' → logprob: -2.1824631690979004
    5. '           ' → logprob: -4.0574631690979
    6. ' if' → logprob: -4.1824631690979
    7. '
' → logprob: -6.1824631690979
    8. '```' → logprob: -6.3074631690979
    9. 'if' → logprob: -6.6824631690979
    10. 'inter' → logprob: -8.182462692260742

Token 375: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0052392068319022655
    2. '.' → logprob: -5.255239009857178
    3. '.extend' → logprob: -13.130239486694336
    4. ',' → logprob: -13.880239486694336
    5. '.Append' → logprob: -14.380239486694336
    6. '.app' → logprob: -14.505239486694336
    7. ' .' → logprob: -14.880239486694336
    8. '.push' → logprob: -15.005239486694336
    9. 'append' → logprob: -15.005239486694336
    10. '.add' → logprob: -16.255239486694336

Token 376: '(length' (ID: 47037)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1017024964094162
    2. '(' → logprob: -2.3517024517059326
    3. '(i' → logprob: -6.601702690124512
    4. '(self' → logprob: -8.976702690124512
    5. '([' → logprob: -11.976702690124512
    6. '(
' → logprob: -13.101702690124512
    7. '(((' → logprob: -14.101702690124512
    8. ' (' → logprob: -14.726702690124512
    9. '(True' → logprob: -14.851702690124512
    10. ' ((' → logprob: -15.851702690124512

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008608423522673547
    2. ' )' → logprob: -7.750860691070557
    3. ',' → logprob: -8.000861167907715
    4. ')
' → logprob: -9.625861167907715
    5. ',)' → logprob: -11.000861167907715
    6. '
' → logprob: -13.000861167907715
    7. '<|end|>' → logprob: -13.250861167907715
    8. ',
' → logprob: -13.375861167907715
    9. '),' → logprob: -13.875861167907715
    10. '```' → logprob: -14.000861167907715

Token 378: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24975734949111938
    2. '       ' → logprob: -1.8747572898864746
    3. ' 
' → logprob: -3.6247572898864746
    4. ' return' → logprob: -4.499757289886475
    5. 'return' → logprob: -4.624757289886475
    6. '        
' → logprob: -4.874757289886475
    7. '\n' → logprob: -5.374757289886475
    8. '  
' → logprob: -6.624757289886475
    9. '[' → logprob: -6.749757289886475
    10. '    
' → logprob: -6.749757289886475

Token 379: ' intervals' (ID: 49900)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06017416715621948
    2. 'return' → logprob: -3.3101742267608643
    3. ' return' → logprob: -4.185173988342285
    4. '
' → logprob: -5.060173988342285
    5. '        
' → logprob: -8.935173988342285
    6. '   ' → logprob: -9.685173988342285
    7. '	return' → logprob: -10.560173988342285
    8. '```' → logprob: -10.935173988342285
    9. ')' → logprob: -11.060173988342285
    10. ' 
' → logprob: -11.560173988342285

Token 380: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004547846503555775
    2. '()
' → logprob: -5.504548072814941
    3. '(reverse' → logprob: -7.754548072814941
    4. '(' → logprob: -10.379548072814941
    5. '()

' → logprob: -13.379548072814941
    6. 'reverse' → logprob: -13.629548072814941
    7. '(return' → logprob: -14.004548072814941
    8. '()
' → logprob: -14.129548072814941
    9. '(
' → logprob: -14.504548072814941
    10. '())' → logprob: -14.629548072814941

Token 382: '=True' (ID: 7827)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19090302288532257
    2. '())' → logprob: -2.0659029483795166
    3. ')' → logprob: -3.0659029483795166
    4. '()
' → logprob: -8.065902709960938
    5. '())
' → logprob: -9.565902709960938
    6. '()]' → logprob: -10.065902709960938
    7. '(' → logprob: -11.565902709960938
    8. ' ())' → logprob: -12.065902709960938
    9. '()>' → logprob: -12.190902709960938
    10. '(True' → logprob: -12.315902709960938

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004480692732613534
    2. ')
' → logprob: -8.375448226928711
    3. '       ' → logprob: -8.500448226928711
    4. ')return' → logprob: -11.875448226928711
    5. '<|end|>' → logprob: -12.875448226928711
    6. ' )' → logprob: -13.000448226928711
    7. '()' → logprob: -14.750448226928711
    8. '))' → logprob: -15.375448226928711
    9. '),' → logprob: -15.625448226928711
    10. ',' → logprob: -15.875448226928711

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09715135395526886
    2. '
' → logprob: -2.472151279449463
    3. 'return' → logprob: -5.347151279449463
    4. ' return' → logprob: -6.347151279449463
    5. '        
' → logprob: -7.097151279449463
    6. '   ' → logprob: -8.097151756286621
    7. ' 
' → logprob: -9.597151756286621
    8. '```' → logprob: -9.597151756286621
    9. '    
' → logprob: -9.847151756286621
    10. '  
' → logprob: -9.972151756286621

Token 385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012472548987716436
    2. ' return' → logprob: -7.001247406005859
    3. '       ' → logprob: -8.00124740600586
    4. '	return' → logprob: -14.62624740600586
    5. ':return' → logprob: -16.25124740600586
    6. '   ' → logprob: -16.62624740600586
    7. '{return' → logprob: -16.62624740600586
    8. '
' → logprob: -17.87624740600586
    9. ')return' → logprob: -19.00124740600586
    10. '.return' → logprob: -19.00124740600586

Token 386: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1269315630197525
    2. ' intervals' → logprob: -2.126931667327881
    3. '(interval' → logprob: -13.501931190490723
    4. '[' → logprob: -13.626931190490723
    5. ' [' → logprob: -14.376931190490723
    6. ' interval' → logprob: -15.126931190490723
    7. 'Intervals' → logprob: -18.75193214416504
    8. '[
' → logprob: -19.00193214416504
    9. '[]' → logprob: -19.12693214416504
    10. '[int' → logprob: -19.25193214416504

Token 387: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: ' Interval' (ID: 80693)
  Prédit: ' Circular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Circular' → logprob: -0.04602275788784027
    2. ' Painter' → logprob: -3.421022653579712
    3. ' Wall' → logprob: -5.421022891998291
    4. 'Circular' → logprob: -5.796022891998291
    5. ' Painted' → logprob: -6.796022891998291
    6. ' Circle' → logprob: -7.046022891998291
    7. ' Paint' → logprob: -7.171022891998291
    8. 'Painter' → logprob: -7.796022891998291
    9. ' Test' → logprob: -8.171022415161133
    10. ' C' → logprob: -9.171022415161133

Token 390: 'Aggregator' (ID: 127714)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07544518262147903
    2. 'List' → logprob: -3.9504451751708984
    3. '(' → logprob: -4.075445175170898
    4. 'Set' → logprob: -4.325445175170898
    5. 'Splitter' → logprob: -5.075445175170898
    6. 'Manager' → logprob: -5.950445175170898
    7. 's' → logprob: -6.200445175170898
    8. 'Sizer' → logprob: -6.325445175170898
    9. 'Painter' → logprob: -6.700445175170898
    10. 'Sorter' → logprob: -6.825445175170898

Token 391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0509798564016819
    2. ':
' → logprob: -3.0509798526763916
    3. ' :' → logprob: -6.175980091094971
    4. ' :
' → logprob: -8.175979614257812
    5. '   ' → logprob: -11.175979614257812
    6. ':def' → logprob: -12.300979614257812
    7. ':

' → logprob: -12.675979614257812
    8. '):' → logprob: -13.550979614257812
    9. '(' → logprob: -13.800979614257812
    10. '):
' → logprob: -14.300979614257812

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014492657966911793
    2. ' def' → logprob: -4.264492511749268
    3. 'def' → logprob: -8.139492988586426
    4. '    
' → logprob: -11.139492988586426
    5. '```' → logprob: -11.514492988586426
    6. '    ' → logprob: -12.139492988586426
    7. '
' → logprob: -13.639492988586426
    8. '<|end|>' → logprob: -13.764492988586426
    9. 'class' → logprob: -13.889492988586426
    10. ' ' → logprob: -14.139492988586426

Token 393: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1281047761440277
    2. 'def' (adapté à ' def') → logprob: -2.1281046867370605
    3. '   ' → logprob: -6.7531046867370605
    4. 'class' → logprob: -11.753105163574219
    5. '	def' → logprob: -14.878105163574219
    6. '```' → logprob: -15.503105163574219
    7. ' class' → logprob: -15.753105163574219
    8. ' ' → logprob: -16.00310516357422
    9. '
' → logprob: -16.37810516357422
    10. ':def' → logprob: -17.37810516357422

Token 394: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -4.5252596464706585e-05
    2. ' ' → logprob: -10.750044822692871
    3. ' def' → logprob: -11.500044822692871
    4. '__' → logprob: -11.750044822692871
    5. ' _' → logprob: -13.125044822692871
    6. ' init' → logprob: -13.250044822692871
    7. ' ' → logprob: -14.000044822692871
    8. ' ___' → logprob: -14.125044822692871
    9. '_init' → logprob: -15.375044822692871
    10. '_' → logprob: -16.125045776367188

Token 395: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.931863051955588e-05
    2. 'iter' → logprob: -11.000059127807617
    3. 'it' → logprob: -11.375059127807617
    4. 'class' → logprob: -11.750059127807617
    5. 'def' → logprob: -11.750059127807617
    6. '(init' → logprob: -12.375059127807617
    7. ' init' → logprob: -12.500059127807617
    8. '```' → logprob: -13.250059127807617
    9. '   ' → logprob: -13.625059127807617
    10. 'int' → logprob: -14.250059127807617

Token 396: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008725190535187721
    2. '(self' → logprob: -4.758725166320801
    3. '__' → logprob: -9.8837251663208
    4. '(' → logprob: -10.6337251663208
    5. '__(
' → logprob: -10.8837251663208
    6. '_(' → logprob: -11.3837251663208
    7. 'self' → logprob: -13.1337251663208
    8. ' (' → logprob: -13.7587251663208
    9. '__((' → logprob: -13.7587251663208
    10. '   ' → logprob: -15.0087251663208

Token 397: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004856074519921094
    2. ')' → logprob: -8.25048542022705
    3. ' self' → logprob: -9.00048542022705
    4. '):
' → logprob: -9.50048542022705
    5. '
' → logprob: -11.12548542022705
    6. '   ' → logprob: -12.25048542022705
    7. ')
' → logprob: -12.75048542022705
    8. '       ' → logprob: -13.50048542022705
    9. '):

' → logprob: -14.62548542022705
    10. '),' → logprob: -15.25048542022705

Token 398: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49135273694992065
    2. ',' → logprob: -0.9913527369499207
    3. ' self' → logprob: -4.741352558135986
    4. '(self' → logprob: -5.991352558135986
    5. ' ,' → logprob: -6.741352558135986
    6. '   ' → logprob: -6.741352558135986
    7. '):
' → logprob: -6.866352558135986
    8. ')' → logprob: -6.991352558135986
    9. ' (' → logprob: -7.616352558135986
    10. ',self' → logprob: -7.991352558135986

Token 399: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.8960385322570801
    2. ' intervals' → logprob: -1.39603853225708
    3. 'length' → logprob: -1.89603853225708
    4. ' wall' → logprob: -3.14603853225708
    5. ' length' → logprob: -3.39603853225708
    6. 'wall' → logprob: -3.77103853225708
    7. ' lengths' → logprob: -4.27103853225708
    8. ' total' → logprob: -4.39603853225708
    9. '):' → logprob: -4.52103853225708
    10. 'max' → logprob: -4.64603853225708

Token 400: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1278351992368698
    2. '):
' → logprob: -2.127835273742676
    3. '       ' → logprob: -7.752835273742676
    4. ',' → logprob: -8.627835273742676
    5. ' ):' → logprob: -8.752835273742676
    6. ':' → logprob: -10.127835273742676
    7. '   ' → logprob: -10.252835273742676
    8. '=[]' → logprob: -10.752835273742676
    9. '):
' → logprob: -11.252835273742676
    10. '[]):' → logprob: -11.627835273742676

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.639096970204264e-05
    2. ':' → logprob: -9.875096321105957
    3. 'self' → logprob: -11.000096321105957
    4. ',' → logprob: -11.375096321105957
    5. '<|end|>' → logprob: -12.500096321105957
    6. '   ' → logprob: -12.625096321105957
    7. ' self' → logprob: -12.625096321105957
    8. '(self' → logprob: -13.750096321105957
    9. '        
' → logprob: -14.000096321105957
    10. 'def' → logprob: -14.250096321105957

Token 402: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02635139226913452
    2. ' self' → logprob: -3.7763514518737793
    3. '       ' → logprob: -5.776351451873779
    4. '	self' → logprob: -14.526350975036621
    5. '   ' → logprob: -14.901350975036621
    6. ' ' → logprob: -16.651351928710938
    7. '(self' → logprob: -16.776351928710938
    8. '[self' → logprob: -17.151351928710938
    9. ' ' → logprob: -18.276351928710938
    10. '﻿' → logprob: -19.026351928710938

Token 403: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.03522692620754242
    2. '.' → logprob: -3.910226821899414
    3. ' .' → logprob: -4.285226821899414
    4. '_inter' → logprob: -7.535226821899414
    5. '   ' → logprob: -9.160226821899414
    6. '._' → logprob: -9.785226821899414
    7. '.interval' → logprob: -10.285226821899414
    8. '.length' → logprob: -11.160226821899414
    9. 'interval' → logprob: -11.410226821899414
    10. '.period' → logprob: -11.535226821899414

Token 404: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.00853455439209938
    2. '   ' → logprob: -6.3835344314575195
    3. 'als' → logprob: -6.3835344314575195
    4. 'erv' → logprob: -6.5085344314575195
    5. 'val' → logprob: -6.6335344314575195
    6. '```' → logprob: -6.8835344314575195
    7. '_' → logprob: -8.25853443145752
    8. '=' → logprob: -8.38353443145752
    9. '__' → logprob: -8.38353443145752
    10. ' vals' → logprob: -9.13353443145752

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10094154626131058
    2. '=' → logprob: -2.3509416580200195
    3. '=[]' → logprob: -7.7259416580200195
    4. ' ' → logprob: -9.72594165802002
    5. '       ' → logprob: -10.10094165802002
    6. '   ' → logprob: -10.22594165802002
    7. '.' → logprob: -10.60094165802002
    8. '    ' → logprob: -10.60094165802002
    9. ')' → logprob: -10.85094165802002
    10. '.extend' → logprob: -10.97594165802002

Token 406: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.12717808783054352
    2. ' intervals' → logprob: -2.127178192138672
    3. '[' → logprob: -9.127178192138672
    4. '[]' → logprob: -10.002178192138672
    5. 'list' → logprob: -10.252178192138672
    6. ' [' → logprob: -10.752178192138672
    7. ' list' → logprob: -11.127178192138672
    8. '(interval' → logprob: -12.127178192138672
    9. ' interval' → logprob: -12.252178192138672
    10. '[]
' → logprob: -12.627178192138672

Token 407: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07601100206375122
    2. '   ' → logprob: -3.4510109424591064
    3. '    
' → logprob: -3.4510109424591064
    4. '<|end|>' → logprob: -4.7010111808776855
    5. 'def' → logprob: -8.076010704040527
    6. ' 
' → logprob: -9.076010704040527
    7. '        
' → logprob: -9.451010704040527
    8. ' def' → logprob: -9.826010704040527
    9. '<|end|>' → logprob: -10.201010704040527
    10. '  
' → logprob: -11.076010704040527

Token 408: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06588488072156906
    2. '   ' → logprob: -3.065884828567505
    3. ' def' → logprob: -4.065885066986084
    4. '	def' → logprob: -14.315884590148926
    5. '
' → logprob: -15.190884590148926
    6. ' ' → logprob: -17.190885543823242
    7. '       ' → logprob: -17.565885543823242
    8. 'class' → logprob: -18.065885543823242
    9. 'de' → logprob: -18.315885543823242
    10. '_def' → logprob: -18.565885543823242

Token 409: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001860174525063485
    2. ' def' → logprob: -8.6251859664917
    3. '   ' → logprob: -12.3751859664917
    4. 'length' → logprob: -14.6251859664917
    5. 'total' → logprob: -14.7501859664917
    6. '
' → logprob: -15.1251859664917
    7. 'from' → logprob: -15.3751859664917
    8. ' ' → logprob: -15.5001859664917
    9. 'paint' → logprob: -16.125186920166016
    10. 'class' → logprob: -16.375186920166016

Token 410: ' aggregate' (ID: 37989)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.4403717517852783
    2. 'aggregate' → logprob: -1.4403717517852783
    3. ' aggregate' → logprob: -1.5653717517852783
    4. ' total' → logprob: -1.6903717517852783
    5. ' sum' → logprob: -3.0653717517852783
    6. 'total' → logprob: -3.3153717517852783
    7. 'get' → logprob: -3.6903717517852783
    8. 'sum' → logprob: -3.9403717517852783
    9. ' def' → logprob: -6.315371513366699
    10. ' max' → logprob: -7.565371513366699

Token 411: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015085549093782902
    2. '(' → logprob: -6.626508712768555
    3. ' (' → logprob: -9.501508712768555
    4. '_inter' → logprob: -9.751508712768555
    5. '_' → logprob: -10.751508712768555
    6. '_(' → logprob: -11.126508712768555
    7. 'self' → logprob: -12.751508712768555
    8. '   ' → logprob: -12.876508712768555
    9. '(
' → logprob: -13.001508712768555
    10. '_interval' → logprob: -14.001508712768555

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6192811727523804
    2. ',' → logprob: -0.9942811727523804
    3. '):
' → logprob: -2.74428129196167
    4. ' ,' → logprob: -4.24428129196167
    5. ' ):' → logprob: -4.74428129196167
    6. 'self' → logprob: -6.24428129196167
    7. '(self' → logprob: -7.49428129196167
    8. '       ' → logprob: -7.61928129196167
    9. '   ' → logprob: -8.244280815124512
    10. ' ):
' → logprob: -8.369280815124512

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005337524227797985
    2. 'result' → logprob: -6.255337715148926
    3. 'total' → logprob: -6.755337715148926
    4. 'if' → logprob: -7.005337715148926
    5. ' if' → logprob: -7.505337715148926
    6. 'length' → logprob: -8.630337715148926
    7. 'max' → logprob: -8.880337715148926
    8. ' total' → logprob: -9.630337715148926
    9. 'sum' → logprob: -9.880337715148926
    10. 'return' → logprob: -10.130337715148926

Token 414: ' count' (ID: 3605)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9868208169937134
    2. ' total' → logprob: -1.3618208169937134
    3. '       ' → logprob: -2.361820697784424
    4. ' if' → logprob: -2.486820697784424
    5. 'result' → logprob: -2.486820697784424
    6. 'if' → logprob: -2.611820697784424
    7. ' result' → logprob: -4.111820697784424
    8. 'length' → logprob: -5.236820697784424
    9. 'count' (adapté à ' count') → logprob: -5.361820697784424
    10. ' length' → logprob: -6.111820697784424

Token 415: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011279122903943062
    2. '=' → logprob: -4.511279106140137
    3. 's' → logprob: -9.261279106140137
    4. ' ' → logprob: -9.886279106140137
    5. ',' → logprob: -10.011279106140137
    6. '_' → logprob: -10.636279106140137
    7. '   ' → logprob: -12.386279106140137
    8. ' ,' → logprob: -13.011279106140137
    9. '  ' → logprob: -13.261279106140137
    10. '(' → logprob: -13.511279106140137

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004626768175512552
    2. '=' → logprob: -5.379626750946045
    3. ' ' → logprob: -12.379627227783203
    4. '[' → logprob: -14.379627227783203
    5. ' ={' → logprob: -14.379627227783203
    6. '={}' → logprob: -14.504627227783203
    7. '   ' → logprob: -15.879627227783203
    8. '.setdefault' → logprob: -16.129627227783203
    9. ' =[' → logprob: -16.254627227783203
    10. 's' → logprob: -17.129627227783203

Token 417: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.07910843938589096
    2. ' {}' → logprob: -2.579108476638794
    3. '{}
' → logprob: -8.829108238220215
    4. ' {}
' → logprob: -9.579108238220215
    5. ' defaultdict' → logprob: -14.079108238220215
    6. 'dict' → logprob: -14.454108238220215
    7. ' dict' → logprob: -14.829108238220215
    8. '={}' → logprob: -15.079108238220215
    9. '{}

' → logprob: -15.454108238220215
    10. '{}\' → logprob: -15.579108238220215

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002768263453617692
    2. '
' → logprob: -6.877768039703369
    3. '<|end|>' → logprob: -7.377768039703369
    4. ' ' → logprob: -7.877768039703369
    5. ' for' → logprob: -8.002768516540527
    6. '	' → logprob: -8.627768516540527
    7. ' 
' → logprob: -10.127768516540527
    8. '        
' → logprob: -10.127768516540527
    9. '   ' → logprob: -10.377768516540527
    10. '        ' → logprob: -10.627768516540527

Token 419: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762512683868408
    2. 'for' (adapté à ' for') → logprob: -0.8262512683868408
    3. '       ' → logprob: -8.076251029968262
    4. '	for' → logprob: -14.701251029968262
    5. ' ' → logprob: -15.951251029968262
    6. '   ' → logprob: -16.201251983642578
    7. ' ' → logprob: -16.826251983642578
    8. '
' → logprob: -16.826251983642578
    9. '        
' → logprob: -16.826251983642578
    10. '        ' → logprob: -16.951251983642578

Token 420: ' length' (ID: 5517)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1513039767742157
    2. ' interval' → logprob: -2.151304006576538
    3. 'length' → logprob: -4.026303768157959
    4. ' length' → logprob: -5.401303768157959
    5. 'ival' → logprob: -7.526303768157959
    6. 'i' → logprob: -7.776303768157959
    7. 'l' → logprob: -8.026304244995117
    8. 'val' → logprob: -9.401304244995117
    9. 'iv' → logprob: -9.776304244995117
    10. ' i' → logprob: -10.151304244995117

Token 421: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22629588842391968
    2. 'in' → logprob: -1.6012959480285645
    3. ' ' → logprob: -7.1012959480285645
    4. ',' → logprob: -10.476295471191406
    5. ' ,' → logprob: -10.976295471191406
    6. '	in' → logprob: -13.101295471191406
    7. '  ' → logprob: -13.226295471191406
    8. '_in' → logprob: -13.726295471191406
    9. ' i' → logprob: -13.726295471191406
    10. 'import' → logprob: -13.976295471191406

Token 422: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06196914613246918
    2. ' self' → logprob: -2.811969041824341
    3. '   ' → logprob: -14.436968803405762
    4. ' ' → logprob: -14.561968803405762
    5. '       ' → logprob: -15.061968803405762
    6. '(self' → logprob: -16.436969757080078
    7. '	self' → logprob: -16.811969757080078
    8. '    ' → logprob: -17.061969757080078
    9. 'sorted' → logprob: -18.186969757080078
    10. '
' → logprob: -18.186969757080078

Token 423: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0007514976896345615
    2. ' .' → logprob: -8.000751495361328
    3. 'inter' → logprob: -8.875751495361328
    4. 'self' → logprob: -9.500751495361328
    5. ' self' → logprob: -9.500751495361328
    6. '.' → logprob: -10.000751495361328
    7. ' intervals' → logprob: -10.000751495361328
    8. 'interval' → logprob: -11.375751495361328
    9. '_inter' → logprob: -11.625751495361328
    10. '   ' → logprob: -12.000751495361328

Token 424: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.03882716968655586
    2. 'als' → logprob: -3.4138271808624268
    3. '```' → logprob: -6.038826942443848
    4. '   ' → logprob: -6.663826942443848
    5. 's' → logprob: -7.538826942443848
    6. 'erv' → logprob: -8.788826942443848
    7. 'val' → logprob: -9.038826942443848
    8. 'self' → logprob: -9.163826942443848
    9. '`' → logprob: -9.413826942443848
    10. '       ' → logprob: -9.663826942443848

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003967266529798508
    2. ' :' → logprob: -6.12896728515625
    3. ':
' → logprob: -6.37896728515625
    4. ' :
' → logprob: -10.62896728515625
    5. ',' → logprob: -10.87896728515625
    6. '):' → logprob: -11.37896728515625
    7. '       ' → logprob: -11.75396728515625
    8. '=' → logprob: -11.75396728515625
    9. '):
' → logprob: -12.37896728515625
    10. '        ' → logprob: -13.00396728515625

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00263249222189188
    2. ':' → logprob: -6.6276326179504395
    3. ' :' → logprob: -7.0026326179504395
    4. '            ' → logprob: -8.377632141113281
    5. '        ' → logprob: -9.877632141113281
    6. ':
' → logprob: -10.877632141113281
    7. '       ' → logprob: -10.877632141113281
    8. '          ' → logprob: -11.002632141113281
    9. '```' → logprob: -11.377632141113281
    10. ' :
' → logprob: -11.627632141113281

Token 427: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3520558178424835
    2. ' if' → logprob: -1.4770557880401611
    3. 'count' (adapté à ' count') → logprob: -2.977055788040161
    4. '           ' → logprob: -4.22705602645874
    5. 'if' → logprob: -5.85205602645874
    6. '       ' → logprob: -11.852055549621582
    7. '	count' → logprob: -11.977055549621582
    8. '[count' → logprob: -12.102055549621582
    9. '            ' → logprob: -12.727055549621582
    10. '(count' → logprob: -12.852055549621582

Token 428: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.545223593711853
    2. '=' → logprob: -1.670223593711853
    3. ' =' → logprob: -1.670223593711853
    4. '_' → logprob: -3.1702237129211426
    5. '[length' → logprob: -6.920223712921143
    6. ' ' → logprob: -7.670223712921143
    7. '_=' → logprob: -9.170223236083984
    8. '=count' → logprob: -9.170223236083984
    9. '=_' → logprob: -10.295223236083984
    10. 's' → logprob: -10.420223236083984

Token 429: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -3.8219583075260743e-05
    2. '[' → logprob: -11.125038146972656
    3. '.setdefault' → logprob: -11.500038146972656
    4. ' [' → logprob: -11.750038146972656
    5. '[len' → logprob: -13.125038146972656
    6. '=' → logprob: -13.375038146972656
    7. 'length' → logprob: -14.875038146972656
    8. ' =' → logprob: -14.875038146972656
    9. '[l' → logprob: -15.125038146972656
    10. '.' → logprob: -15.625038146972656

Token 430: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7680681943893433
    2. ']' → logprob: -1.2680681943893433
    3. ' =' → logprob: -1.5180681943893433
    4. ']=' → logprob: -3.393068313598633
    5. ' ]' → logprob: -6.268068313598633
    6. ']+=' → logprob: -9.893068313598633
    7. '        ' → logprob: -11.518068313598633
    8. ' ' → logprob: -12.143068313598633
    9. ')' → logprob: -12.518068313598633
    10. '    ' → logprob: -12.893068313598633

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968132853507996
    2. ' =' → logprob: -2.8119680881500244
    3. '+=' → logprob: -14.811967849731445
    4. ' +=' → logprob: -16.811967849731445
    5. '=
' → logprob: -17.186967849731445
    6. '=count' → logprob: -17.436967849731445
    7. '=

' → logprob: -17.686967849731445
    8. ' ' → logprob: -17.811967849731445
    9. '＝' → logprob: -19.311967849731445
    10. '        ' → logprob: -19.561967849731445

Token 432: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16022534668445587
    2. ' count' → logprob: -1.9102253913879395
    3. '	count' → logprob: -14.535224914550781
    4. '1' → logprob: -15.660224914550781
    5. '(count' → logprob: -15.785224914550781
    6. '$count' → logprob: -15.785224914550781
    7. ' ' → logprob: -16.41022491455078
    8. '<count' → logprob: -16.91022491455078
    9. '=count' → logprob: -17.28522491455078
    10. '.count' → logprob: -17.78522491455078

Token 433: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -4.246537173457909e-06
    2. 'map' → logprob: -12.875003814697266
    3. '_' → logprob: -13.500003814697266
    4. 'Map' → logprob: -16.375003814697266
    5. '+' → logprob: -16.875003814697266
    6. 'count' → logprob: -17.125003814697266
    7. ' ' → logprob: -17.500003814697266
    8. '_count' → logprob: -17.750003814697266
    9. ' _' → logprob: -17.875003814697266
    10. '_MAP' → logprob: -18.125003814697266

Token 434: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.847109812544659e-05
    2. '.' → logprob: -10.250048637390137
    3. ' .' → logprob: -11.375048637390137
    4. 'get' → logprob: -13.375048637390137
    5. '.setdefault' → logprob: -17.87504768371582
    6. '[length' → logprob: -17.87504768371582
    7. '   ' → logprob: -18.62504768371582
    8. '           ' → logprob: -18.87504768371582
    9. '       ' → logprob: -19.00004768371582
    10. '```' → logprob: -19.37504768371582

Token 435: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.875003814697266
    3. 'length' → logprob: -13.875003814697266
    4. '[length' → logprob: -16.250003814697266
    5. ',length' → logprob: -16.375003814697266
    6. ' length' → logprob: -17.750003814697266
    7. ' (' → logprob: -18.500003814697266
    8. '(len' → logprob: -18.750003814697266
    9. '(l' → logprob: -19.250003814697266
    10. '(
' → logprob: -21.000003814697266

Token 436: ',' (ID: 11)
  Prédit: ',length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',length' → logprob: -0.337166428565979
    2. '(length' → logprob: -1.837166428565979
    3. ',' → logprob: -2.0871663093566895
    4. 'length' → logprob: -6.2121663093566895
    5. '[length' → logprob: -7.0871663093566895
    6. ' ,' → logprob: -10.337166786193848
    7. ' length' → logprob: -10.712166786193848
    8. ':length' → logprob: -11.962166786193848
    9. '	length' → logprob: -14.212166786193848
    10. '.length' → logprob: -15.337166786193848

Token 437: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ')' → logprob: -17.625019073486328
    4. '<|end|>' → logprob: -18.250019073486328
    5. '1' → logprob: -20.250019073486328
    6. ' 
' → logprob: -21.375019073486328
    7. '۰' → logprob: -21.375019073486328
    8. '
' → logprob: -22.375019073486328
    9. '+' → logprob: -23.375019073486328
    10. '  ' → logprob: -23.875019073486328

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.250009536743164
    4. '۰' → logprob: -19.125009536743164
    5. ')' → logprob: -19.250009536743164
    6. '1' → logprob: -20.312509536743164
    7. '  ' → logprob: -20.500009536743164
    8. '    ' → logprob: -20.687509536743164
    9. '

' → logprob: -20.875009536743164
    10. '```' → logprob: -20.937509536743164

Token 439: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5014188799541444e-05
    2. ')+' → logprob: -10.250044822692871
    3. '+' → logprob: -12.125044822692871
    4. ' )' → logprob: -12.500044822692871
    5. '0' → logprob: -15.625044822692871
    6. ' +' → logprob: -16.125045776367188
    7. ']' → logprob: -16.375045776367188
    8. '}' → logprob: -16.625045776367188
    9. ',' → logprob: -16.625045776367188
    10. '+)' → logprob: -17.125045776367188

Token 440: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5771896839141846
    2. '+' → logprob: -0.8271896839141846
    3. '0' → logprob: -6.8271894454956055
    4. ')' → logprob: -9.702189445495605
    5. ')+' → logprob: -9.702189445495605
    6. '1' → logprob: -11.077189445495605
    7. ' ' → logprob: -11.077189445495605
    8. ']+' → logprob: -12.702189445495605
    9. '()+' → logprob: -12.827189445495605
    10. ' ' → logprob: -13.077189445495605

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.379077911376953
    4. '```' → logprob: -19.504077911376953
    5. '  ' → logprob: -19.879077911376953
    6. ' ' → logprob: -20.254077911376953
    7. '    ' → logprob: -21.004077911376953
    8. '           ' → logprob: -21.379077911376953
    9. '0' → logprob: -21.879077911376953
    10. '
' → logprob: -21.879077911376953

Token 442: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22817863523960114
    2. '       ' → logprob: -1.60317862033844
    3. '        
' → logprob: -6.60317850112915
    4. '    
' → logprob: -8.103178977966309
    5. ' 
' → logprob: -8.103178977966309
    6. '<|end|>' → logprob: -8.228178977966309
    7. 'return' → logprob: -9.103178977966309
    8. '  
' → logprob: -9.478178977966309
    9. '' → logprob: -9.603178977966309
    10. '        ' → logprob: -9.728178977966309

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.826111376285553
    2. '
' → logprob: -1.0761113166809082
    3. '<|end|>' → logprob: -1.8261113166809082
    4. '        
' → logprob: -3.451111316680908
    5. ' 
' → logprob: -4.076111316680908
    6. '  
' → logprob: -5.701111316680908
    7. '        ' → logprob: -5.951111316680908
    8. ' ' → logprob: -6.076111316680908
    9. '    
' → logprob: -7.326111316680908
    10. '<|end|>' → logprob: -7.576111316680908

Token 444: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.28216925263404846
    2. '       ' → logprob: -1.532169222831726
    3. ' return' → logprob: -3.5321693420410156
    4. 'for' → logprob: -8.532169342041016
    5. ' for' → logprob: -8.782169342041016
    6. 'result' (adapté à ' result') → logprob: -9.532169342041016
    7. '   ' → logprob: -10.032169342041016
    8. ' ' → logprob: -10.657169342041016
    9. '
' → logprob: -11.157169342041016
    10. '        
' → logprob: -11.407169342041016

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494581535458565
    2. '=' → logprob: -2.929945707321167
    3. '[' → logprob: -10.179945945739746
    4. ' ' → logprob: -11.054945945739746
    5. '.' → logprob: -13.054945945739746
    6. ' =[' → logprob: -13.304945945739746
    7. ' =
' → logprob: -13.929945945739746
    8. ',' → logprob: -14.054945945739746
    9. '=[]' → logprob: -14.054945945739746
    10. '={}' → logprob: -14.304945945739746

Token 446: ' sorted' (ID: 20099)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4572811722755432
    2. '[]' → logprob: -1.9572811126708984
    3. ' {}' → logprob: -2.0822811126708984
    4. '{}' → logprob: -2.3322811126708984
    5. ' []
' → logprob: -6.332281112670898
    6. '[]
' → logprob: -6.582281112670898
    7. ' {}
' → logprob: -7.707281112670898
    8. '{}
' → logprob: -8.207281112670898
    9. ' {' → logprob: -10.082281112670898
    10. ' ' → logprob: -10.207281112670898

Token 447: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0008165352046489716
    2. '(' → logprob: -7.250816345214844
    3. '((' → logprob: -9.625816345214844
    4. '(
' → logprob: -10.625816345214844
    5. '([(' → logprob: -11.125816345214844
    6. '(((' → logprob: -14.375816345214844
    7. 'count' → logprob: -14.875816345214844
    8. '(list' → logprob: -15.125816345214844
    9. '(self' → logprob: -16.250816345214844
    10. '([' → logprob: -16.625816345214844

Token 448: '_map' (ID: 11824)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.09056597948074341
    2. '_map' → logprob: -3.2155659198760986
    3. '(result' → logprob: -3.8405659198760986
    4. '(' → logprob: -4.840566158294678
    5. '((' → logprob: -5.215566158294678
    6. 'items' → logprob: -5.590566158294678
    7. '_items' → logprob: -6.090566158294678
    8. '([(' → logprob: -6.715566158294678
    9. '=count' → logprob: -6.965566158294678
    10. 'result' → logprob: -7.090566158294678

Token 449: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.25478824973106384
    2. '().' → logprob: -1.6297882795333862
    3. '(items' → logprob: -3.7547881603240967
    4. '(' → logprob: -6.379788398742676
    5. 'items' → logprob: -7.254788398742676
    6. ' .' → logprob: -7.379788398742676
    7. '())' → logprob: -7.379788398742676
    8. ')' → logprob: -7.879788398742676
    9. '()' → logprob: -8.004788398742676
    10. '(key' → logprob: -8.379788398742676

Token 450: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.40073859691619873
    2. '())' → logprob: -1.1507385969161987
    3. '()' → logprob: -4.400738716125488
    4. '(key' → logprob: -6.900738716125488
    5. ' ())' → logprob: -8.525738716125488
    6. '(' → logprob: -9.150738716125488
    7. ')' → logprob: -10.025738716125488
    8. '(reverse' → logprob: -10.275738716125488
    9. ' (),' → logprob: -10.400738716125488
    10. ' ()' → logprob: -10.900738716125488

Token 451: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.31426724791526794
    2. ' key' → logprob: -1.3142672777175903
    3. 'reverse' → logprob: -7.064267158508301
    4. ' reverse' → logprob: -9.4392671585083
    5. '(key' → logprob: -9.6892671585083
    6. 'lambda' → logprob: -12.8142671585083
    7. ')' → logprob: -13.1892671585083
    8. '   ' → logprob: -13.5642671585083
    9. ',key' → logprob: -14.0642671585083
    10. '	key' → logprob: -14.6892671585083

Token 452: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -3.547789674485102e-05
    2. '=' → logprob: -10.250035285949707
    3. 'lambda' → logprob: -17.750036239624023
    4. '=
' → logprob: -19.500036239624023
    5. '=item' → logprob: -19.625036239624023
    6. '=self' → logprob: -20.500036239624023
    7. '(lambda' → logprob: -21.000036239624023
    8. '=str' → logprob: -21.625036239624023
    9. '=_' → logprob: -21.750036239624023
    10. '=len' → logprob: -21.875036239624023

Token 453: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31723493337631226
    2. 'x' → logprob: -1.317234992980957
    3. ' item' → logprob: -6.317234992980957
    4. 'item' → logprob: -6.942234992980957
    5. ' lambda' → logprob: -7.067234992980957
    6. 'lambda' → logprob: -8.067234992980957
    7. 'kv' → logprob: -11.067234992980957
    8. ' kv' → logprob: -11.942234992980957
    9. '=lambda' → logprob: -12.567234992980957
    10. '   ' → logprob: -14.192234992980957

Token 454: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022022522171027958
    2. ':x' → logprob: -9.00022029876709
    3. ' :' → logprob: -9.50022029876709
    4. 'x' → logprob: -10.87522029876709
    5. ':
' → logprob: -13.50022029876709
    6. ' x' → logprob: -14.00022029876709
    7. '=' → logprob: -15.12522029876709
    8. ':(' → logprob: -16.250219345092773
    9. '[' → logprob: -16.500219345092773
    10. '(' → logprob: -16.625219345092773

Token 455: ' -' (ID: 533)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4231490194797516
    2. 'x' → logprob: -1.7981489896774292
    3. ' -' → logprob: -2.4231491088867188
    4. '-x' → logprob: -2.9231491088867188
    5. '-' → logprob: -3.6731491088867188
    6. ' (-' → logprob: -4.673149108886719
    7. ' x' → logprob: -6.173149108886719
    8. '(x' → logprob: -8.923149108886719
    9. '(' → logprob: -10.423149108886719
    10. '   ' → logprob: -11.798149108886719

Token 456: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.250000953674316
    3. '	x' → logprob: -24.0
    4. '(x' → logprob: -24.5
    5. ')x' → logprob: -25.125
    6. '   ' → logprob: -25.875
    7. '$x' → logprob: -27.25
    8. '{x' → logprob: -28.125
    9. 'xref' → logprob: -28.5
    10. '_x' → logprob: -28.625

Token 457: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -18.5
    3. '[
' → logprob: -19.625
    4. '0' → logprob: -20.0
    5. '1' → logprob: -21.375
    6. '```' → logprob: -21.625
    7. 'x' → logprob: -22.375
    8. '[]' → logprob: -22.625
    9. ' ' → logprob: -22.625
    10. ')[' → logprob: -22.75

Token 458: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12787266075611115
    2. 'x' → logprob: -2.1278727054595947
    3. '[' → logprob: -7.502872467041016
    4. '0' → logprob: -7.877872467041016
    5. ' x' → logprob: -11.252872467041016
    6. ' ' → logprob: -15.002872467041016
    7. '   ' → logprob: -16.627872467041016
    8. '(x' → logprob: -17.002872467041016
    9. ')x' → logprob: -17.252872467041016
    10. '```' → logprob: -17.627872467041016

Token 459: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07212459295988083
    2. ')[' → logprob: -2.697124481201172
    3. '[' → logprob: -6.947124481201172
    4. '),' → logprob: -7.072124481201172
    5. ' )' → logprob: -8.322124481201172
    6. ' )[' → logprob: -9.947124481201172
    7. '))' → logprob: -10.197124481201172
    8. ',' → logprob: -10.947124481201172
    9. ')
' → logprob: -11.947124481201172
    10. '   ' → logprob: -12.572124481201172

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30025073885917664
    2. ',' → logprob: -2.050250768661499
    3. ')' → logprob: -3.050250768661499
    4. '
' → logprob: -3.175250768661499
    5. ',
' → logprob: -4.42525053024292
    6. ')
' → logprob: -5.05025053024292
    7. '(' → logprob: -5.17525053024292
    8. '        
' → logprob: -5.17525053024292
    9. ':' → logprob: -6.30025053024292
    10. '()' → logprob: -6.67525053024292

Token 461: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33296582102775574
    2. '       ' → logprob: -1.9579658508300781
    3. '
' → logprob: -2.457965850830078
    4. ' return' → logprob: -2.957965850830078
    5. '        
' → logprob: -5.707965850830078
    6. ' 
' → logprob: -7.832965850830078
    7. '   ' → logprob: -8.582965850830078
    8. '    
' → logprob: -9.082965850830078
    9. 'for' → logprob: -9.457965850830078
    10. '  
' → logprob: -9.457965850830078

Token 462: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.008129647001624107
    2. ' result' → logprob: -5.258129596710205
    3. '[(' → logprob: -6.008129596710205
    4. '[result' → logprob: -8.008130073547363
    5. ' [(' → logprob: -10.383130073547363
    6. '{' → logprob: -10.383130073547363
    7. '[' → logprob: -10.758130073547363
    8. '[count' → logprob: -12.133130073547363
    9. 'dict' → logprob: -12.508130073547363
    10. 'count' → logprob: -12.633130073547363

Token 463: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' White' (ID: 10558)
  Prédit: ' Wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Wall' → logprob: -0.3796800374984741
    2. ' Interval' → logprob: -2.1296801567077637
    3. ' Paint' → logprob: -2.5046801567077637
    4. ' Circular' → logprob: -3.2546801567077637
    5. ' Painter' → logprob: -3.2546801567077637
    6. ' Painted' → logprob: -5.254680156707764
    7. ' Solution' → logprob: -5.379680156707764
    8. ' Coverage' → logprob: -5.379680156707764
    9. 'Wall' → logprob: -5.504680156707764
    10. ' Result' → logprob: -5.754680156707764

Token 466: 'Wall' (ID: 35120)
  Prédit: 'Wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Wall' → logprob: -0.048046696931123734
    2. 'Space' → logprob: -3.798046588897705
    3. 'board' → logprob: -4.923046588897705
    4. 'Circular' → logprob: -5.423046588897705
    5. 'wall' → logprob: -5.548046588897705
    6. 'Circle' → logprob: -6.298046588897705
    7. 'Board' → logprob: -6.423046588897705
    8. 'Walls' → logprob: -6.548046588897705
    9. 'out' → logprob: -6.798046588897705
    10. 'Walker' → logprob: -7.798046588897705

Token 467: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005871102912351489
    2. ':
' → logprob: -7.500586986541748
    3. '(C' → logprob: -10.500587463378906
    4. '(' → logprob: -12.250587463378906
    5. ':C' → logprob: -14.375587463378906
    6. ' :' → logprob: -15.000587463378906
    7. ':

' → logprob: -15.125587463378906
    8. '):' → logprob: -15.875587463378906
    9. '():' → logprob: -15.875587463378906
    10. '<|end|>' → logprob: -16.125587463378906

Token 468: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00977178942412138
    2. ':
' → logprob: -4.634771823883057
    3. ' :' → logprob: -12.509771347045898
    4. '(' → logprob: -12.509771347045898
    5. '):' → logprob: -13.759771347045898
    6. '(C' → logprob: -13.759771347045898
    7. '():' → logprob: -13.884771347045898
    8. ':def' → logprob: -13.884771347045898
    9. '<|end|>' → logprob: -14.009771347045898
    10. ':

' → logprob: -14.134771347045898

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013707150937989354
    2. ' def' → logprob: -6.626370906829834
    3. 'def' → logprob: -10.626370429992676
    4. '    
' → logprob: -11.626370429992676
    5. '   ' → logprob: -12.626370429992676
    6. 'class' → logprob: -12.751370429992676
    7. '```' → logprob: -13.626370429992676
    8. ' class' → logprob: -13.751370429992676
    9. '
' → logprob: -13.876370429992676
    10. '	def' → logprob: -14.001370429992676

Token 470: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.41188356280326843
    2. 'def' (adapté à ' def') → logprob: -1.6618835926055908
    3. '   ' → logprob: -1.9118835926055908
    4. ':' → logprob: -12.161883354187012
    5. 'class' → logprob: -12.911883354187012
    6. ':def' → logprob: -13.286883354187012
    7. '	def' → logprob: -13.536883354187012
    8. '    ' → logprob: -13.536883354187012
    9. '```' → logprob: -13.661883354187012
    10. ' ' → logprob: -13.786883354187012

Token 471: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012308672070503235
    2. '__' → logprob: -4.512308597564697
    3. ' def' → logprob: -7.137308597564697
    4. 'init' → logprob: -8.262309074401855
    5. ' init' → logprob: -9.887309074401855
    6. '_init' → logprob: -9.887309074401855
    7. 'def' → logprob: -10.262309074401855
    8. ' ' → logprob: -10.387309074401855
    9. ' _' → logprob: -11.262309074401855
    10. ' solve' → logprob: -11.637309074401855

Token 472: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -16.5
    3. 'def' → logprob: -17.0
    4. 'int' → logprob: -18.0
    5. 'ini' → logprob: -19.125
    6. '(init' → logprob: -19.625
    7. 'in' → logprob: -20.5
    8. 'class' → logprob: -20.625
    9. '__' → logprob: -20.625
    10. '_init' → logprob: -21.125

Token 473: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025776250287890434
    2. '(' → logprob: -3.9007761478424072
    3. '__(' → logprob: -5.400776386260986
    4. ' (' → logprob: -7.650776386260986
    5. ',' → logprob: -9.400775909423828
    6. ')(' → logprob: -9.900775909423828
    7. 'self' → logprob: -10.150775909423828
    8. ' ' → logprob: -11.400775909423828
    9. '   ' → logprob: -11.400775909423828
    10. '_(' → logprob: -11.525775909423828

Token 474: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009595814626663923
    2. ',' → logprob: -7.750959396362305
    3. ' self' → logprob: -7.750959396362305
    4. 'length' → logprob: -10.250959396362305
    5. ')' → logprob: -10.625959396362305
    6. '
' → logprob: -11.250959396362305
    7. '   ' → logprob: -11.375959396362305
    8. ',self' → logprob: -12.625959396362305
    9. '(self' → logprob: -12.875959396362305
    10. '):
' → logprob: -13.000959396362305

Token 475: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0055198660120368
    2. 'self' → logprob: -5.255519866943359
    3. ' self' → logprob: -9.75551986694336
    4. ',self' → logprob: -9.88051986694336
    5. '(self' → logprob: -9.88051986694336
    6. ' ,' → logprob: -9.88051986694336
    7. '<|end|>' → logprob: -10.00551986694336
    8. ')' → logprob: -11.75551986694336
    9. '   ' → logprob: -12.00551986694336
    10. 'class' → logprob: -12.63051986694336

Token 476: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004972001072019339
    2. ' self' → logprob: -5.879971981048584
    3. '   ' → logprob: -6.754971981048584
    4. '0' → logprob: -8.129972457885742
    5. '       ' → logprob: -8.254972457885742
    6. 'length' → logprob: -8.629972457885742
    7. '
' → logprob: -9.254972457885742
    8. ',' → logprob: -10.879972457885742
    9. '```' → logprob: -10.879972457885742
    10. '100' → logprob: -10.879972457885742

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4082409143447876
    2. '       ' → logprob: -1.4082409143447876
    3. 'pass' → logprob: -2.783240795135498
    4. ' pass' → logprob: -4.158240795135498
    5. ' self' → logprob: -4.408240795135498
    6. '   ' → logprob: -7.408240795135498
    7. '
' → logprob: -8.283241271972656
    8. 'def' → logprob: -10.783241271972656
    9. '	pass' → logprob: -11.533241271972656
    10. '           ' → logprob: -11.658241271972656

Token 478: '.wall' (ID: 176423)
  Prédit: '.length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.2394045740365982
    2. '._' → logprob: -2.2394046783447266
    3. '.wall' → logprob: -2.8644046783447266
    4. '.' → logprob: -4.239404678344727
    5. '.inter' → logprob: -4.489404678344727
    6. '.w' → logprob: -4.739404678344727
    7. '.circular' → logprob: -5.864404678344727
    8. ' .' → logprob: -6.489404678344727
    9. '.c' → logprob: -6.739404678344727
    10. 'length' → logprob: -6.739404678344727

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38703522086143494
    2. ' =' → logprob: -1.1370352506637573
    3. '=None' → logprob: -9.137035369873047
    4. '_length' → logprob: -10.887035369873047
    5. 'length' → logprob: -10.887035369873047
    6. '<|end|>' → logprob: -11.762035369873047
    7. ' ' → logprob: -12.637035369873047
    8. 's' → logprob: -13.137035369873047
    9. ':' → logprob: -13.262035369873047
    10. '=

' → logprob: -14.012035369873047

Token 480: ' None' (ID: 4662)
  Prédit: 'Circular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circular' → logprob: -0.17567063868045807
    2. 'None' → logprob: -2.300670623779297
    3. ' Circular' → logprob: -2.925670623779297
    4. ' None' → logprob: -4.925670623779297
    5. ' circular' → logprob: -12.175670623779297
    6. 'Circ' → logprob: -12.425670623779297
    7. ' ' → logprob: -12.800670623779297
    8. 'Circle' → logprob: -12.925670623779297
    9. 'C' → logprob: -12.925670623779297
    10. 'c' → logprob: -13.550670623779297

Token 481: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6352459788322449
    2. '   ' → logprob: -1.0102460384368896
    3. '    
' → logprob: -2.2602460384368896
    4. '<|end|>' → logprob: -6.7602458000183105
    5. '        
' → logprob: -8.760246276855469
    6. 'def' → logprob: -9.010246276855469
    7. '	
' → logprob: -9.510246276855469
    8. ' 
' → logprob: -10.010246276855469
    9. '<|end|>' → logprob: -10.260246276855469
    10. '	def' → logprob: -10.385246276855469

Token 482: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07923520356416702
    2. '
' → logprob: -2.829235315322876
    3. '    
' → logprob: -4.079235076904297
    4. '        
' → logprob: -9.329235076904297
    5. 'def' → logprob: -9.454235076904297
    6. ' def' → logprob: -11.704235076904297
    7. ' 
' → logprob: -11.954235076904297
    8. '<|end|>' → logprob: -12.079235076904297
    9. '   
' → logprob: -13.204235076904297
    10. '       ' → logprob: -13.454235076904297

Token 483: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035630115307867527
    2. '   ' → logprob: -6.128562927246094
    3. '
' → logprob: -6.878562927246094
    4. 'self' (adapté à ' self') → logprob: -8.253562927246094
    5. ' def' → logprob: -9.878562927246094
    6. '    
' → logprob: -11.128562927246094
    7. '       ' → logprob: -11.128562927246094
    8. '        
' → logprob: -12.253562927246094
    9. '

' → logprob: -14.628562927246094
    10. ' self' → logprob: -15.503562927246094

Token 484: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.04570213705301285
    2. '.paint' → logprob: -4.04570198059082
    3. '._' → logprob: -4.79570198059082
    4. '.p' → logprob: -5.29570198059082
    5. '.' → logprob: -6.04570198059082
    6. '.results' → logprob: -6.17070198059082
    7. '.interval' → logprob: -6.79570198059082
    8. '.initial' → logprob: -6.79570198059082
    9. '.wall' → logprob: -7.04570198059082
    10. '.s' → logprob: -7.42070198059082

Token 485: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.008304277434945107
    2. 'val' → logprob: -5.008304119110107
    3. '```' → logprob: -7.258304119110107
    4. '   ' → logprob: -8.633304595947266
    5. 'als' → logprob: -9.633304595947266
    6. '	' → logprob: -9.758304595947266
    7. 'erv' → logprob: -10.258304595947266
    8. 'interval' → logprob: -10.383304595947266
    9. '#' → logprob: -10.383304595947266
    10. ' vals' → logprob: -10.383304595947266

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01823902688920498
    2. '=' → logprob: -4.0182390213012695
    3. '=[]' → logprob: -9.89323902130127
    4. ' ' → logprob: -11.39323902130127
    5. '   ' → logprob: -11.76823902130127
    6. '<|end|>' → logprob: -11.89323902130127
    7. '_' → logprob: -12.39323902130127
    8. 's' → logprob: -13.39323902130127
    9. ':' → logprob: -13.64323902130127
    10. '  ' → logprob: -13.76823902130127

Token 487: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006725317798554897
    2. ' []' → logprob: -5.006725311279297
    3. '[]
' → logprob: -11.881725311279297
    4. '[]

' → logprob: -13.631725311279297
    5. '[]}' → logprob: -14.131725311279297
    6. '[' → logprob: -14.381725311279297
    7. 'None' → logprob: -15.006725311279297
    8. '[],' → logprob: -16.256725311279297
    9. ' []
' → logprob: -16.756725311279297
    10. ' None' → logprob: -17.256725311279297

Token 488: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.948528528213501
    2. '   ' → logprob: -1.073528528213501
    3. '    
' → logprob: -1.323528528213501
    4. '<|end|>' → logprob: -5.573528289794922
    5. '        
' → logprob: -7.573528289794922
    6. ' 
' → logprob: -8.448528289794922
    7. '<|end|>' → logprob: -10.323528289794922
    8. 'def' → logprob: -10.448528289794922
    9. '  
' → logprob: -10.573528289794922
    10. '	
' → logprob: -10.698528289794922

Token 489: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004675761330872774
    2. ' def' → logprob: -5.75467586517334
    3. '   ' → logprob: -6.50467586517334
    4. '	def' → logprob: -14.87967586517334
    5. '
' → logprob: -16.254674911499023
    6. ' ' → logprob: -17.754674911499023
    7. '    
' → logprob: -18.754674911499023
    8. '  ' → logprob: -19.754674911499023
    9. '```' → logprob: -19.879674911499023
    10. '_def' → logprob: -20.129674911499023

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.935296834039036e-06
    2. ' def' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.250003814697266
    4. 'de' → logprob: -23.500003814697266
    5. '
' → logprob: -23.875003814697266
    6. '	def' → logprob: -25.250003814697266
    7. 'd' → logprob: -25.750003814697266
    8. 'class' → logprob: -26.000003814697266
    9. '

' → logprob: -27.250003814697266
    10. '@' → logprob: -27.375003814697266

Token 491: ' input' (ID: 3422)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.016302466392517
    2. 'solve' → logprob: -1.391302466392517
    3. 'set' → logprob: -1.641302466392517
    4. ' add' → logprob: -2.1413025856018066
    5. ' set' → logprob: -3.1413025856018066
    6. ' solve' → logprob: -3.8913025856018066
    7. 'setup' → logprob: -5.016302585601807
    8. 'load' → logprob: -6.266302585601807
    9. 'reset' → logprob: -7.141302585601807
    10. ' load' → logprob: -7.141302585601807

Token 492: '_data' (ID: 3537)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.028523864224553108
    2. '(' → logprob: -3.7785239219665527
    3. '_' → logprob: -6.153523921966553
    4. '_data' → logprob: -6.653523921966553
    5. '_line' → logprob: -7.778523921966553
    6. '_(' → logprob: -7.778523921966553
    7. 'self' → logprob: -8.153523445129395
    8. '_self' → logprob: -8.403523445129395
    9. '_wall' → logprob: -9.153523445129395
    10. ' (' → logprob: -9.528523445129395

Token 493: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004094547126442194
    2. '(' → logprob: -5.50409460067749
    3. ' (' → logprob: -11.129094123840332
    4. 'self' → logprob: -13.754094123840332
    5. '(
' → logprob: -15.254094123840332
    6. '   ' → logprob: -17.25409507751465
    7. ' self' → logprob: -17.50409507751465
    8. '	self' → logprob: -18.62909507751465
    9. '(Self' → logprob: -18.62909507751465
    10. '       ' → logprob: -18.75409507751465

Token 494: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007867562817409635
    2. '):' → logprob: -7.250786781311035
    3. ',data' → logprob: -10.875786781311035
    4. ' ,' → logprob: -11.375786781311035
    5. ',line' → logprob: -11.375786781311035
    6. ',self' → logprob: -11.750786781311035
    7. ',input' → logprob: -11.875786781311035
    8. '):
' → logprob: -11.875786781311035
    9. 'self' → logprob: -12.000786781311035
    10. ',s' → logprob: -13.000786781311035

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007621031254529953
    2. 'self' → logprob: -8.125761985778809
    3. ' self' → logprob: -8.250761985778809
    4. ' lines' → logprob: -9.375761985778809
    5. '   ' → logprob: -10.750761985778809
    6. 'import' → logprob: -11.250761985778809
    7. ' line' → logprob: -11.375761985778809
    8. 'n' → logprob: -11.625761985778809
    9. '```' → logprob: -11.625761985778809
    10. '(self' → logprob: -11.750761985778809

Token 496: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2882916033267975
    2. 'n' → logprob: -1.538291573524475
    3. 'import' (adapté à ' import') → logprob: -4.9132914543151855
    4. '       ' → logprob: -5.1632914543151855
    5. ' line' → logprob: -5.4132914543151855
    6. ' lines' → logprob: -5.6632914543151855
    7. ' import' → logprob: -5.7882914543151855
    8. ' size' → logprob: -5.9132914543151855
    9. ' self' → logprob: -6.2882914543151855
    10. ' length' → logprob: -6.5382914543151855

Token 497: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018151935189962387
    2. 'sys' → logprob: -4.018151760101318
    3. '=sys' → logprob: -13.268152236938477
    4. '	sys' → logprob: -15.268152236938477
    5. '_sys' → logprob: -17.268152236938477
    6. '(sys' → logprob: -18.393152236938477
    7. '.sys' → logprob: -19.893152236938477
    8. ' math' → logprob: -20.268152236938477
    9. ' ' → logprob: -20.768152236938477
    10. 's' → logprob: -22.143152236938477

Token 498: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0897747278213501
    2. '
' → logprob: -2.5897746086120605
    3. '        
' → logprob: -4.8397746086120605
    4. 'input' → logprob: -7.4647746086120605
    5. '<|end|>' → logprob: -7.7147746086120605
    6. ' 
' → logprob: -8.089775085449219
    7. '.readline' → logprob: -8.339775085449219
    8. ',' → logprob: -8.464775085449219
    9. '        ' → logprob: -8.964775085449219
    10. '    
' → logprob: -9.464775085449219

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016981529770419002
    2. ' line' → logprob: -7.376698017120361
    3. ' lines' → logprob: -7.501698017120361
    4. 'line' → logprob: -8.37669849395752
    5. '        
' → logprob: -9.75169849395752
    6. '
' → logprob: -10.12669849395752
    7. 'n' → logprob: -10.37669849395752
    8. 'data' → logprob: -10.50169849395752
    9. 'input' → logprob: -11.12669849395752
    10. 'lines' → logprob: -11.25169849395752

Token 500: ' data' (ID: 1238)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7057628035545349
    2. 'data' (adapté à ' data') → logprob: -1.0807628631591797
    3. '       ' → logprob: -2.3307628631591797
    4. 'lines' → logprob: -3.2057628631591797
    5. ' data' → logprob: -4.08076286315918
    6. 'line' → logprob: -5.45576286315918
    7. 'input' → logprob: -5.70576286315918
    8. 'for' → logprob: -6.45576286315918
    9. 'n' → logprob: -6.58076286315918
    10. ' line' → logprob: -7.33076286315918

Token 501: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023270051926374435
    2. ' =' → logprob: -3.7732701301574707
    3. '_' → logprob: -11.523269653320312
    4. '_=' → logprob: -12.023269653320312
    5. '_line' → logprob: -12.773269653320312
    6. '=sys' → logprob: -13.023269653320312
    7. '   ' → logprob: -14.398269653320312
    8. '_lines' → logprob: -14.398269653320312
    9. '=
' → logprob: -14.398269653320312
    10. '=line' → logprob: -14.398269653320312

Token 502: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01815006136894226
    2. ' sys' → logprob: -4.0181498527526855
    3. '=sys' → logprob: -16.768150329589844
    4. '	sys' → logprob: -17.643150329589844
    5. '(sys' → logprob: -18.393150329589844
    6. 'list' → logprob: -19.143150329589844
    7. '[' → logprob: -21.518150329589844
    8. '.sys' → logprob: -21.893150329589844
    9. '_sys' → logprob: -22.018150329589844
    10. ' list' → logprob: -23.143150329589844

Token 503: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.8074162653647363e-05
    2. '.' → logprob: -11.625018119812012
    3. '.argv' → logprob: -12.500018119812012
    4. '.stdout' → logprob: -12.875018119812012
    5. 'stdin' → logprob: -13.000018119812012
    6. '.std' → logprob: -15.000018119812012
    7. '.st' → logprob: -16.500017166137695
    8. ' stdin' → logprob: -16.625017166137695
    9. '.stderr' → logprob: -17.125017166137695
    10. ' .' → logprob: -17.500017166137695

Token 504: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2615499794483185
    2. 'read' → logprob: -1.511549949645996
    3. '.read' → logprob: -4.761549949645996
    4. '.readlines' → logprob: -7.011549949645996
    5. '.' → logprob: -10.136549949645996
    6. '_read' → logprob: -10.511549949645996
    7. ' readline' → logprob: -10.761549949645996
    8. 'buffer' → logprob: -10.761549949645996
    9. 'rea' → logprob: -12.636549949645996
    10. 're' → logprob: -13.636549949645996

Token 505: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.038046542555093765
    2. '()' → logprob: -3.2880465984344482
    3. '()
' → logprob: -12.663046836853027
    4. '(' → logprob: -13.538046836853027
    5. '()

' → logprob: -15.538046836853027
    6. ' ().' → logprob: -15.538046836853027
    7. ' ()' → logprob: -15.913046836853027
    8. '())' → logprob: -16.78804588317871
    9. '()).' → logprob: -16.78804588317871
    10. '()\' → logprob: -16.91304588317871

Token 506: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.252376914024353
    2. 'split' → logprob: -1.502376914024353
    3. 'decode' → logprob: -7.752377033233643
    4. 'rstrip' → logprob: -11.127376556396484
    5. 'replace' → logprob: -13.127376556396484
    6. 'read' → logprob: -13.752376556396484
    7. '(split' → logprob: -16.627376556396484
    8. ' split' → logprob: -16.877376556396484
    9. '()' → logprob: -17.627376556396484
    10. ' strip' → logprob: -17.877376556396484

Token 507: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018154270946979523
    2. '()' → logprob: -4.018154144287109
    3. '()
' → logprob: -12.76815414428711
    4. '()\' → logprob: -14.64315414428711
    5. '(' → logprob: -14.89315414428711
    6. '()

' → logprob: -15.01815414428711
    7. ' ().' → logprob: -15.51815414428711
    8. ' ()' → logprob: -17.01815414428711
    9. 'split' → logprob: -17.39315414428711
    10. '('\' → logprob: -17.76815414428711

Token 508: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.5
    3. '(split' → logprob: -18.625
    4. 'spl' → logprob: -20.375
    5. 'decode' → logprob: -21.375
    6. 'replace' → logprob: -22.5
    7. '.split' → logprob: -23.125
    8. 'rstrip' → logprob: -23.375
    9. 'strip' → logprob: -23.625
    10. 'sp' → logprob: -23.625

Token 509: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.031068207696080208
    2. '()
' → logprob: -4.281068325042725
    3. '       ' → logprob: -4.531068325042725
    4. '(' → logprob: -5.281068325042725
    5. '   ' → logprob: -7.906068325042725
    6. '()\' → logprob: -8.531067848205566
    7. '()[' → logprob: -9.656067848205566
    8. '        
' → logprob: -9.906067848205566
    9. '(
' → logprob: -10.031067848205566
    10. '('\' → logprob: -10.031067848205566

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015248668380081654
    2. '
' → logprob: -4.890248775482178
    3. '        
' → logprob: -5.140248775482178
    4. '<|end|>' → logprob: -7.140248775482178
    5. '   ' → logprob: -8.89024829864502
    6. '[' → logprob: -8.89024829864502
    7. ' ' → logprob: -9.51524829864502
    8. '[
' → logprob: -9.64024829864502
    9. '      ' → logprob: -9.76524829864502
    10. '  
' → logprob: -9.76524829864502

Token 511: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3530450463294983
    2. 'self' → logprob: -1.3530449867248535
    3. ' self' → logprob: -3.9780449867248535
    4. ' n' → logprob: -4.3530449867248535
    5. '       ' → logprob: -5.1030449867248535
    6. 'length' → logprob: -7.8530449867248535
    7. 'size' → logprob: -8.603045463562012
    8. 'l' → logprob: -8.853045463562012
    9. 'm' → logprob: -9.103045463562012
    10. 'L' → logprob: -9.228045463562012

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9792446494102478
    2. ' =' → logprob: -1.1042447090148926
    3. '=' → logprob: -1.2292447090148926
    4. ' ,' → logprob: -8.479244232177734
    5. '=int' → logprob: -9.104244232177734
    6. '<|end|>' → logprob: -10.729244232177734
    7. ' ' → logprob: -10.854244232177734
    8. ')' → logprob: -10.979244232177734
    9. ',N' → logprob: -12.104244232177734
    10. '   ' → logprob: -12.104244232177734

Token 513: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.06639378517866135
    2. 'K' → logprob: -2.8163938522338867
    3. ' M' → logprob: -5.691393852233887
    4. 'Q' → logprob: -7.441393852233887
    5. ' K' → logprob: -8.566393852233887
    6. 'k' → logprob: -8.816393852233887
    7. 'T' → logprob: -10.191393852233887
    8. ' ' → logprob: -10.566393852233887
    9. 'W' → logprob: -10.691393852233887
    10. 'S' → logprob: -12.566393852233887

Token 514: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016150381416082382
    2. '=' → logprob: -4.14115047454834
    3. ',' → logprob: -9.14115047454834
    4. ' ' → logprob: -12.14115047454834
    5. ' =
' → logprob: -13.14115047454834
    6. '=int' → logprob: -14.39115047454834
    7. '  ' → logprob: -15.89115047454834
    8. '[' → logprob: -15.89115047454834
    9. ' ,' → logprob: -15.89115047454834
    10. '    ' → logprob: -16.016149520874023

Token 515: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05634400248527527
    2. ' int' → logprob: -3.0563440322875977
    3. 'map' → logprob: -5.556344032287598
    4. ' map' → logprob: -5.556344032287598
    5. '[int' → logprob: -14.556344032287598
    6. 'data' → logprob: -15.431344032287598
    7. ' ' → logprob: -16.18134307861328
    8. '(int' → logprob: -16.68134307861328
    9. ' data' → logprob: -17.05634307861328
    10. '	int' → logprob: -18.43134307861328

Token 516: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0006344011635519564
    2. '(' → logprob: -7.75063419342041
    3. 'data' → logprob: -8.50063419342041
    4. ' data' → logprob: -15.00063419342041
    5. ')data' → logprob: -17.000635147094727
    6. ' (' → logprob: -17.500635147094727
    7. '(
' → logprob: -17.625635147094727
    8. '=data' → logprob: -18.500635147094727
    9. ',data' → logprob: -18.625635147094727
    10. '[data' → logprob: -19.250635147094727

Token 517: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.240481914370321e-05
    2. '0' → logprob: -10.250052452087402
    3. '(' → logprob: -11.000052452087402
    4. ' ' → logprob: -16.000051498413086
    5. ' [' → logprob: -16.125051498413086
    6. '   ' → logprob: -17.375051498413086
    7. ')' → logprob: -17.750051498413086
    8. ')[' → logprob: -18.750051498413086
    9. '```' → logprob: -18.750051498413086
    10. '[
' → logprob: -18.875051498413086

Token 518: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.00000286102295
    3. '[' → logprob: -14.12500286102295
    4. '1' → logprob: -16.375003814697266
    5. '
' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.375003814697266
    7. '  ' → logprob: -19.250003814697266
    8. '

' → logprob: -19.625003814697266
    9. ')' → logprob: -19.750003814697266
    10. '```' → logprob: -20.000003814697266

Token 519: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11753920465707779
    2. ']),' → logprob: -2.242539167404175
    3. ')' → logprob: -5.742539405822754
    4. '],' → logprob: -6.867539405822754
    5. '])' → logprob: -8.617539405822754
    6. ')],' → logprob: -8.742539405822754
    7. ' ),' → logprob: -9.617539405822754
    8. ' ' → logprob: -10.617539405822754
    9. ']' → logprob: -11.242539405822754
    10. ',' → logprob: -12.742539405822754

Token 520: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47407931089401245
    2. ' int' → logprob: -0.9740793108940125
    3. '[int' → logprob: -13.474079132080078
    4. '=int' → logprob: -14.349079132080078
    5. '<int' → logprob: -15.974079132080078
    6. '(int' → logprob: -16.099079132080078
    7. '	int' → logprob: -17.474079132080078
    8. ':int' → logprob: -18.224079132080078
    9. ' ' → logprob: -18.224079132080078
    10. ' 
' → logprob: -18.349079132080078

Token 521: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.020115060731768608
    2. 'data' → logprob: -4.020114898681641
    3. ' data' → logprob: -6.270114898681641
    4. '(' → logprob: -10.27011489868164
    5. ')data' → logprob: -11.14511489868164
    6. 'int' → logprob: -12.27011489868164
    7. ' ' → logprob: -12.39511489868164
    8. '[data' → logprob: -12.52011489868164
    9. '=data' → logprob: -12.52011489868164
    10. ')' → logprob: -12.77011489868164

Token 522: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011868956498801708
    2. '1' → logprob: -6.751186847686768
    3. '[
' → logprob: -11.876187324523926
    4. ' [' → logprob: -13.001187324523926
    5. '
' → logprob: -13.126187324523926
    6. '])' → logprob: -13.501187324523926
    7. '```' → logprob: -13.626187324523926
    8. ']' → logprob: -13.751187324523926
    9. '2' → logprob: -14.751187324523926
    10. ')' → logprob: -15.251187324523926

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -16.875
    4. '```' → logprob: -17.125
    5. '   ' → logprob: -17.5
    6. '[' → logprob: -18.25
    7. '-' → logprob: -18.375
    8. '0' → logprob: -18.5
    9. '2' → logprob: -18.625
    10. '``' → logprob: -19.75

Token 524: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026848804554902017
    2. '])' → logprob: -8.375268936157227
    3. '),' → logprob: -11.625268936157227
    4. ')
' → logprob: -11.750268936157227
    5. ']' → logprob: -12.000268936157227
    6. ')]' → logprob: -12.250268936157227
    7. ')])' → logprob: -12.500268936157227
    8. '<|end|>' → logprob: -13.000268936157227
    9. ' )' → logprob: -13.125268936157227
    10. '）' → logprob: -15.125268936157227

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015268140472471714
    2. '<|end|>' → logprob: -4.515268325805664
    3. '        
' → logprob: -6.015268325805664
    4. '
' → logprob: -7.140268325805664
    5. ',' → logprob: -8.640268325805664
    6. ' for' → logprob: -9.140268325805664
    7. '<|end|>' → logprob: -9.390268325805664
    8. 'tokens' → logprob: -9.515268325805664
    9. ' intervals' → logprob: -9.765268325805664
    10. '      ' → logprob: -9.890268325805664

Token 526: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08944614231586456
    2. '       ' → logprob: -3.2144460678100586
    3. 'idx' → logprob: -4.214446067810059
    4. 'for' → logprob: -4.589446067810059
    5. 'pos' → logprob: -4.589446067810059
    6. 'interval' → logprob: -5.089446067810059
    7. 'index' → logprob: -5.964446067810059
    8. 'offset' → logprob: -7.464446067810059
    9. 'ptr' → logprob: -7.464446067810059
    10. 'i' → logprob: -9.089446067810059

Token 527: '.wall' (ID: 176423)
  Prédit: '.wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wall' → logprob: -1.1994775377388578e-05
    2. '.' → logprob: -12.125012397766113
    3. '.w' → logprob: -13.125012397766113
    4. ' .' → logprob: -13.125012397766113
    5. '.inter' → logprob: -13.375012397766113
    6. '.water' → logprob: -15.000012397766113
    7. '.wave' → logprob: -15.875012397766113
    8. 'wall' → logprob: -16.000011444091797
    9. '.n' → logprob: -16.625011444091797
    10. '.user' → logprob: -17.125011444091797

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.099077224731445
    4. '.' → logprob: -16.724077224731445
    5. ' =
' → logprob: -17.724077224731445
    6. '=
' → logprob: -17.849077224731445
    7. '＝' → logprob: -17.974077224731445
    8. ')' → logprob: -18.349077224731445
    9. '.=' → logprob: -18.349077224731445
    10. '=create' → logprob: -18.349077224731445

Token 529: ' Circular' (ID: 72772)
  Prédit: 'Circular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circular' → logprob: -0.061968132853507996
    2. ' Circular' → logprob: -2.8119680881500244
    3. 'C' → logprob: -14.811967849731445
    4. ' circular' → logprob: -16.061967849731445
    5. '	C' → logprob: -17.686967849731445
    6. 'c' → logprob: -17.936967849731445
    7. 'Circ' → logprob: -17.936967849731445
    8. 'Circle' → logprob: -19.061967849731445
    9. '(C' → logprob: -19.561967849731445
    10. '.circular' → logprob: -20.186967849731445

Token 530: 'Wall' (ID: 35120)
  Prédit: 'Wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Wall' → logprob: 0.0
    2. 'Wal' → logprob: -18.5
    3. 'Walls' → logprob: -19.625
    4. ' Wall' → logprob: -20.375
    5. '_wall' → logprob: -20.75
    6. 'wall' → logprob: -20.875
    7. 'W' → logprob: -21.125
    8. ' wall' → logprob: -21.5
    9. 'Wallpaper' → logprob: -23.125
    10. '-wall' → logprob: -23.25

Token 531: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.625015258789062
    3. 'N' → logprob: -12.125015258789062
    4. ' (' → logprob: -15.125015258789062
    5. '(
' → logprob: -15.500015258789062
    6. '((' → logprob: -17.375015258789062
    7. '(n' → logprob: -18.250015258789062
    8. '(M' → logprob: -19.000015258789062
    9. '(int' → logprob: -19.125015258789062
    10. '```' → logprob: -19.500015258789062

Token 532: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2014927715063095
    2. ')' → logprob: -1.7014927864074707
    3. ')
' → logprob: -9.576492309570312
    4. '       ' → logprob: -12.201492309570312
    5. ')

' → logprob: -12.326492309570312
    6. ' )
' → logprob: -14.951492309570312
    7. '
' → logprob: -15.701492309570312
    8. '   ' → logprob: -16.826492309570312
    9. ' )' → logprob: -17.201492309570312
    10. '<|end|>' → logprob: -17.451492309570312

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06180139631032944
    2. 'idx' → logprob: -3.6868014335632324
    3. 'index' → logprob: -4.186801433563232
    4. 'pos' → logprob: -4.436801433563232
    5. 'i' → logprob: -5.811801433563232
    6. 'for' → logprob: -6.061801433563232
    7. ' idx' → logprob: -7.186801433563232
    8. ' for' → logprob: -7.311801433563232
    9. 'ptr' → logprob: -8.686800956726074
    10. ' pos' → logprob: -8.811800956726074

Token 534: ' self' (ID: 1051)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1660971641540527
    2. 'pos' → logprob: -1.6660971641540527
    3. 'for' → logprob: -1.7910971641540527
    4. '       ' → logprob: -2.0410971641540527
    5. 'self' (adapté à ' self') → logprob: -2.0410971641540527
    6. 'index' → logprob: -2.9160971641540527
    7. 'offset' → logprob: -4.916097164154053
    8. 'interval' → logprob: -4.916097164154053
    9. 'ptr' → logprob: -5.666097164154053
    10. 'pointer' → logprob: -8.916097640991211

Token 535: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -9.794061770662665e-05
    2. 'interval' → logprob: -10.00009822845459
    3. '.' → logprob: -10.62509822845459
    4. 'inter' → logprob: -11.25009822845459
    5. '_inter' → logprob: -12.00009822845459
    6. ' .' → logprob: -12.37509822845459
    7. '_.' → logprob: -13.25009822845459
    8. '.interval' → logprob: -13.37509822845459
    9. '.wall' → logprob: -15.75009822845459
    10. '._' → logprob: -15.87509822845459

Token 536: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0014541632262989879
    2. 'als' → logprob: -7.3764543533325195
    3. 'val' → logprob: -8.37645435333252
    4. '=' → logprob: -9.00145435333252
    5. '   ' → logprob: -9.25145435333252
    6. '```' → logprob: -9.37645435333252
    7. 'vel' → logprob: -10.12645435333252
    8. 's' → logprob: -10.12645435333252
    9. 'data' → logprob: -10.75145435333252
    10. 'p' → logprob: -11.37645435333252

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18165308237075806
    2. '=' → logprob: -1.8066530227661133
    3. '.extend' → logprob: -6.306653022766113
    4. '.append' → logprob: -9.931653022766113
    5. ' +=' → logprob: -11.306653022766113
    6. '=[]' → logprob: -11.806653022766113
    7. '.clear' → logprob: -12.431653022766113
    8. ' =
' → logprob: -13.056653022766113
    9. '+=' → logprob: -13.056653022766113
    10. '[:]' → logprob: -13.806653022766113

Token 538: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.334533878136426e-05
    2. ' [(' → logprob: -10.875042915344238
    3. '[((' → logprob: -11.125042915344238
    4. '[]' → logprob: -12.250042915344238
    5. '[[' → logprob: -13.750042915344238
    6. '[' → logprob: -13.750042915344238
    7. '[
' → logprob: -13.875042915344238
    8. '[]
' → logprob: -14.125042915344238
    9. '[int' → logprob: -14.625042915344238
    10. '[list' → logprob: -14.875042915344238

Token 539: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.749814019713085e-06
    2. '(int' → logprob: -12.250006675720215
    3. ' int' → logprob: -13.250006675720215
    4. '[int' → logprob: -16.25000762939453
    5. ')' → logprob: -16.62500762939453
    6. '   ' → logprob: -18.25000762939453
    7. '
' → logprob: -18.75000762939453
    8. ']int' → logprob: -19.12500762939453
    9. ',int' → logprob: -19.25000762939453
    10. '<int' → logprob: -20.00000762939453

Token 540: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.16037096083164215
    2. 'data' → logprob: -1.910370945930481
    3. ')data' → logprob: -10.035370826721191
    4. ')(' → logprob: -10.910370826721191
    5. '(x' → logprob: -11.035370826721191
    6. 'x' → logprob: -11.160370826721191
    7. ')' → logprob: -11.160370826721191
    8. ' data' → logprob: -11.660370826721191
    9. '(d' → logprob: -11.910370826721191
    10. '(' → logprob: -12.160370826721191

Token 541: '[i' (ID: 1768)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.07421629130840302
    2. '[data' → logprob: -3.074216365814209
    3. '[i' → logprob: -4.324216365814209
    4. 'data' → logprob: -4.824216365814209
    5. '[' → logprob: -6.074216365814209
    6. '),' → logprob: -7.449216365814209
    7. ')' → logprob: -7.574216365814209
    8. ')data' → logprob: -8.44921588897705
    9. '
' → logprob: -8.82421588897705
    10. '(i' → logprob: -9.57421588897705

Token 542: '*' (ID: 9)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18156082928180695
    2. '*' → logprob: -1.9315608739852905
    3. '],' → logprob: -4.05656099319458
    4. ']),' → logprob: -6.18156099319458
    5. '+' → logprob: -7.30656099319458
    6. '2' → logprob: -7.43156099319458
    7. '3' → logprob: -8.806560516357422
    8. ')' → logprob: -9.431560516357422
    9. ' *' → logprob: -9.556560516357422
    10. '(' → logprob: -9.681560516357422

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022892709239386022
    2. ' ' → logprob: -8.500228881835938
    3. '3' → logprob: -10.750228881835938
    4. '   ' → logprob: -13.250228881835938
    5. '1' → logprob: -14.000228881835938
    6. '    ' → logprob: -14.875228881835938
    7. '  ' → logprob: -15.000228881835938
    8. '
' → logprob: -15.125228881835938
    9. '4' → logprob: -15.375228881835938
    10. '     ' → logprob: -16.250228881835938

Token 544: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003973677754402161
    2. ' +' → logprob: -6.253973484039307
    3. '2' → logprob: -6.503973484039307
    4. '],' → logprob: -7.628973484039307
    5. ']),' → logprob: -10.753973960876465
    6. '),' → logprob: -11.003973960876465
    7. '   ' → logprob: -12.003973960876465
    8. '3' → logprob: -12.253973960876465
    9. '+
' → logprob: -12.378973960876465
    10. ' ' → logprob: -13.503973960876465

Token 545: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.7994282795116305e-05
    2. ' ' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.12504768371582
    4. '    ' → logprob: -15.75004768371582
    5. '  ' → logprob: -15.87504768371582
    6. '0' → logprob: -16.00004768371582
    7. '
' → logprob: -16.37504768371582
    8. '1' → logprob: -16.75004768371582
    9. '4' → logprob: -17.12504768371582
    10. '```' → logprob: -17.37504768371582

Token 546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -10.000052452087402
    3. '   ' → logprob: -12.625052452087402
    4. '1' → logprob: -13.250052452087402
    5. '
' → logprob: -14.625052452087402
    6. '4' → logprob: -14.750052452087402
    7. '0' → logprob: -15.000052452087402
    8. '3' → logprob: -15.500052452087402
    9. '  ' → logprob: -15.500052452087402
    10. '    ' → logprob: -15.812552452087402

Token 547: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03895479440689087
    2. '],' → logprob: -3.288954734802246
    3. ']),' → logprob: -7.288954734802246
    4. ')' → logprob: -9.413954734802246
    5. ',' → logprob: -9.538954734802246
    6. ' ),' → logprob: -10.663954734802246
    7. ')],' → logprob: -11.413954734802246
    8. '),
' → logprob: -11.663954734802246
    9. ']' → logprob: -11.788954734802246
    10. ' ' → logprob: -12.163954734802246

Token 548: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009115827269852161
    2. ' int' → logprob: -7.000911712646484
    3. '(int' → logprob: -16.875911712646484
    4. '[int' → logprob: -17.125911712646484
    5. '<int' → logprob: -17.250911712646484
    6. ']int' → logprob: -18.125911712646484
    7. '    ' → logprob: -18.375911712646484
    8. '=int' → logprob: -18.375911712646484
    9. '   ' → logprob: -18.625911712646484
    10. ')' → logprob: -18.625911712646484

Token 549: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.023350762203335762
    2. 'data' → logprob: -3.773350715637207
    3. '[data' → logprob: -9.648350715637207
    4. ')data' → logprob: -10.898350715637207
    5. ' data' → logprob: -11.773350715637207
    6. '(' → logprob: -12.023350715637207
    7. '<data' → logprob: -12.523350715637207
    8. '=data' → logprob: -13.023350715637207
    9. '$data' → logprob: -14.648350715637207
    10. '\data' → logprob: -14.773350715637207

Token 550: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007393499254249036
    2. 'i' → logprob: -7.250739574432373
    3. '(i' → logprob: -10.625739097595215
    4. '[' → logprob: -13.250739097595215
    5. '
' → logprob: -14.000739097595215
    6. '{i' → logprob: -14.000739097595215
    7. '*i' → logprob: -14.250739097595215
    8. '1' → logprob: -14.875739097595215
    9. '[
' → logprob: -15.750739097595215
    10. '2' → logprob: -15.875739097595215

Token 551: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03365953266620636
    2. '2' → logprob: -3.4086594581604004
    3. '1' → logprob: -12.158659934997559
    4. ' *' → logprob: -12.533659934997559
    5. '
' → logprob: -13.158659934997559
    6. '3' → logprob: -13.908659934997559
    7. 'i' → logprob: -14.783659934997559
    8. '   ' → logprob: -15.158659934997559
    9. '4' → logprob: -15.533659934997559
    10. '*
' → logprob: -15.533659934997559

Token 552: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001205893131555058
    2. '1' → logprob: -9.625120162963867
    3. '3' → logprob: -10.625120162963867
    4. ' ' → logprob: -10.625120162963867
    5. '
' → logprob: -13.375120162963867
    6. '   ' → logprob: -14.500120162963867
    7. '

' → logprob: -14.562620162963867
    8. 'i' → logprob: -14.625120162963867
    9. '4' → logprob: -15.187620162963867
    10. '0' → logprob: -15.312620162963867

Token 553: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08679169416427612
    2. '2' → logprob: -2.836791753768921
    3. '3' → logprob: -4.711791515350342
    4. '+' → logprob: -4.836791515350342
    5. ' ' → logprob: -4.961791515350342
    6. ' +' → logprob: -7.586791515350342
    7. '   ' → logprob: -9.7117919921875
    8. '0' → logprob: -11.7117919921875
    9. '5' → logprob: -12.3367919921875
    10. '  ' → logprob: -12.5867919921875

Token 554: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0029679536819458008
    2. ' ' → logprob: -5.877967834472656
    3. '2' → logprob: -8.752967834472656
    4. '1' → logprob: -13.002967834472656
    5. '   ' → logprob: -13.002967834472656
    6. '  ' → logprob: -14.752967834472656
    7. '    ' → logprob: -16.252967834472656
    8. '     ' → logprob: -16.502967834472656
    9. '4' → logprob: -17.627967834472656
    10. ')' → logprob: -17.752967834472656

Token 555: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00014299227041192353
    2. ' ))' → logprob: -9.000143051147461
    3. ')]' → logprob: -11.500143051147461
    4. ')' → logprob: -12.125143051147461
    5. '))
' → logprob: -13.750143051147461
    6. ' ' → logprob: -14.125143051147461
    7. '   ' → logprob: -14.500143051147461
    8. ')))' → logprob: -14.750143051147461
    9. '       ' → logprob: -15.125143051147461
    10. '    ' → logprob: -15.250143051147461

Token 556: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.024386605247855186
    2. 'for' → logprob: -3.7743866443634033
    3. '       ' → logprob: -7.524386405944824
    4. ')' → logprob: -8.399386405944824
    5. '           ' → logprob: -9.024386405944824
    6. '        ' → logprob: -9.274386405944824
    7. '	for' → logprob: -9.774386405944824
    8. '               ' → logprob: -10.899386405944824
    9. '          ' → logprob: -11.274386405944824
    10. ' ' → logprob: -11.274386405944824

Token 557: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005257356911897659
    2. ' i' → logprob: -5.2552571296691895
    3. 'range' → logprob: -11.255257606506348
    4. ' range' → logprob: -11.630257606506348
    5. ' in' → logprob: -14.005257606506348
    6. ' ' → logprob: -14.755257606506348
    7. 'in' → logprob: -14.880257606506348
    8. '	i' → logprob: -16.25525665283203
    9. ')' → logprob: -16.88025665283203
    10. '
' → logprob: -17.25525665283203

Token 558: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005235648714005947
    2. 'in' → logprob: -5.25523567199707
    3. ' i' → logprob: -14.50523567199707
    4. 'range' → logprob: -14.50523567199707
    5. 'i' → logprob: -15.00523567199707
    6. ' ' → logprob: -15.13023567199707
    7. '<|end|>' → logprob: -16.75523567199707
    8. 'import' → logprob: -17.00523567199707
    9. 'inthe' → logprob: -17.25523567199707
    10. '
' → logprob: -17.38023567199707

Token 559: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -19.250045776367188
    4. '
' → logprob: -21.375045776367188
    5. '	range' → logprob: -21.625045776367188
    6. ' ' → logprob: -23.125045776367188
    7. '   ' → logprob: -23.625045776367188
    8. 'rang' → logprob: -23.875045776367188
    9. '  ' → logprob: -24.500045776367188
    10. ')' → logprob: -24.500045776367188

Token 560: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.02977536804974079
    2. 'M' → logprob: -3.529775381088257
    3. ' M' → logprob: -10.904775619506836
    4. '(' → logprob: -12.029775619506836
    5. '0' → logprob: -15.404775619506836
    6. '(
' → logprob: -16.029775619506836
    7. '	M' → logprob: -16.529775619506836
    8. '1' → logprob: -16.654775619506836
    9. ' (' → logprob: -16.904775619506836
    10. ',M' → logprob: -17.029775619506836

Token 561: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025458165910094976
    2. ')' → logprob: -6.2525458335876465
    3. ']' → logprob: -7.7525458335876465
    4. ' )' → logprob: -8.877545356750488
    5. ' ]' → logprob: -10.002545356750488
    6. '])' → logprob: -14.252545356750488
    7. ')])' → logprob: -14.377545356750488
    8. ')],' → logprob: -15.377545356750488
    9. '   ' → logprob: -15.502545356750488
    10. '       ' → logprob: -15.502545356750488

Token 562: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6286842226982117
    2. 'def' → logprob: -1.2536842823028564
    3. '   ' → logprob: -1.8786842823028564
    4. '
' → logprob: -3.7536842823028564
    5. '    
' → logprob: -5.503684043884277
    6. '<|end|>' → logprob: -7.753684043884277
    7. '```' → logprob: -8.878684043884277
    8. ' 
' → logprob: -9.128684043884277
    9. '	def' → logprob: -9.378684043884277
    10. '        
' → logprob: -9.878684043884277

Token 564: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.68022444692906e-05
    2. ' def' → logprob: -10.000046730041504
    3. '   ' → logprob: -13.750046730041504
    4. '
' → logprob: -15.125046730041504
    5. '    
' → logprob: -18.00004768371582
    6. '	def' → logprob: -18.00004768371582
    7. 'd' → logprob: -18.87504768371582
    8. '```' → logprob: -20.50004768371582
    9. '        
' → logprob: -22.12504768371582
    10. '

' → logprob: -22.12504768371582

Token 565: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.00617810245603323
    2. 'run' → logprob: -5.75617790222168
    3. 'process' → logprob: -6.38117790222168
    4. ' solve' → logprob: -7.25617790222168
    5. 'paint' → logprob: -7.63117790222168
    6. 'def' → logprob: -9.75617790222168
    7. 'compute' → logprob: -11.00617790222168
    8. ' paint' → logprob: -11.50617790222168
    9. 'execute' → logprob: -11.88117790222168
    10. ' run' → logprob: -11.88117790222168

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.0629870858974755e-05
    2. '(' → logprob: -9.75006103515625
    3. '   ' → logprob: -14.25006103515625
    4. ' (' → logprob: -14.37506103515625
    5. 'self' → logprob: -14.62506103515625
    6. '       ' → logprob: -15.12506103515625
    7. '(s' → logprob: -16.00006103515625
    8. '(
' → logprob: -16.50006103515625
    9. '(Self' → logprob: -17.12506103515625
    10. ' self' → logprob: -18.37506103515625

Token 567: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004850172903388739
    2. '):
' → logprob: -5.379850387573242
    3. ',' → logprob: -9.504850387573242
    4. 'self' → logprob: -9.629850387573242
    5. '(self' → logprob: -10.254850387573242
    6. '   ' → logprob: -10.754850387573242
    7. '       ' → logprob: -11.129850387573242
    8. '):
' → logprob: -11.754850387573242
    9. ' ):' → logprob: -12.254850387573242
    10. '():' → logprob: -12.754850387573242

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024707785341888666
    2. 'paint' → logprob: -6.627470970153809
    3. ' painted' → logprob: -7.377470970153809
    4. 'self' → logprob: -8.002470970153809
    5. 'result' → logprob: -8.877470970153809
    6. '   ' → logprob: -11.502470970153809
    7. ' self' → logprob: -11.752470970153809
    8. '        
' → logprob: -12.002470970153809
    9. 'results' → logprob: -12.377470970153809
    10. ' result' → logprob: -12.627470970153809

Token 569: ' painted' (ID: 33842)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.2914945185184479
    2. '       ' → logprob: -2.541494607925415
    3. ' painted' → logprob: -2.541494607925415
    4. 'result' → logprob: -2.916494607925415
    5. 'results' → logprob: -3.916494607925415
    6. 'interval' → logprob: -4.291494369506836
    7. ' intervals' → logprob: -5.916494369506836
    8. 'self' → logprob: -6.166494369506836
    9. 'res' → logprob: -7.166494369506836
    10. ' result' → logprob: -7.416494369506836

Token 570: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.00495207030326128
    2. '_lengths' → logprob: -6.1299519538879395
    3. ' =' → logprob: -6.5049519538879395
    4. '=' → logprob: -6.8799519538879395
    5. 'interval' → logprob: -9.379952430725098
    6. '=_' → logprob: -9.629952430725098
    7. 's' → logprob: -10.004952430725098
    8. 'inter' → logprob: -10.879952430725098
    9. 'length' → logprob: -11.504952430725098
    10. '_ranges' → logprob: -12.754952430725098

Token 571: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.003691524500027299
    2. 'als' → logprob: -5.753691673278809
    3. '=' → logprob: -8.628691673278809
    4. 'val' → logprob: -9.003691673278809
    5. ' vals' → logprob: -9.753691673278809
    6. ' =' → logprob: -10.628691673278809
    7. '```' → logprob: -10.628691673278809
    8. 'erv' → logprob: -10.628691673278809
    9. '   ' → logprob: -11.378691673278809
    10. 's' → logprob: -11.378691673278809

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269291490316391
    2. '=' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.87692928314209
    4. 's' → logprob: -15.12692928314209
    5. '_' → logprob: -16.376928329467773
    6. '＝' → logprob: -16.376928329467773
    7. ')' → logprob: -16.501928329467773
    8. ' ' → logprob: -16.751928329467773
    9. ' =
' → logprob: -17.126928329467773
    10. '=

' → logprob: -17.251928329467773

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804768621921539
    2. ' self' → logprob: -3.2880477905273438
    3. '       ' → logprob: -12.038047790527344
    4. '=self' → logprob: -16.163047790527344
    5. '(self' → logprob: -16.413047790527344
    6. '	self' → logprob: -16.663047790527344
    7. '   ' → logprob: -16.663047790527344
    8. '           ' → logprob: -18.288047790527344
    9. '[self' → logprob: -18.913047790527344
    10. ' ' → logprob: -19.038047790527344

Token 574: '.wall' (ID: 176423)
  Prédit: '.wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wall' → logprob: -3.650518920039758e-06
    2. 'wall' → logprob: -12.625003814697266
    3. '.' → logprob: -15.125003814697266
    4. '.w' → logprob: -17.125003814697266
    5. '   ' → logprob: -17.375003814697266
    6. ' .' → logprob: -17.625003814697266
    7. '.water' → logprob: -17.750003814697266
    8. ' wall' → logprob: -17.875003814697266
    9. '_wall' → logprob: -18.125003814697266
    10. '       ' → logprob: -18.125003814697266

Token 575: '.paint' (ID: 113759)
  Prédit: '.paint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.paint' → logprob: -2.2723104848410003e-05
    2. '.' → logprob: -11.250022888183594
    3. ' .' → logprob: -12.750022888183594
    4. 'paint' → logprob: -13.000022888183594
    5. '.p' → logprob: -13.250022888183594
    6. '.Paint' → logprob: -13.750022888183594
    7. '.repaint' → logprob: -14.750022888183594
    8. ' =' → logprob: -15.125022888183594
    9. ' paint' → logprob: -15.250022888183594
    10. '.print' → logprob: -15.625022888183594

Token 576: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. 's' → logprob: -18.875
    4. '_in' → logprob: -19.125
    5. 'inter' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. '_ranges' → logprob: -20.125
    8. '_int' → logprob: -20.125
    9. '(_' → logprob: -20.25
    10. '(inter' → logprob: -20.375

Token 577: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.1079079881310463
    2. 'erv' → logprob: -2.857908010482788
    3. 'ter' → logprob: -3.482908010482788
    4. 't' → logprob: -4.732907772064209
    5. 'als' → logprob: -6.357907772064209
    6. 'r' → logprob: -7.107907772064209
    7. '_' → logprob: -7.232907772064209
    8. 'val' → logprob: -7.232907772064209
    9. '```' → logprob: -7.857907772064209
    10. 'ters' → logprob: -8.982908248901367

Token 578: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. '((' → logprob: -19.5
    4. '(
' → logprob: -20.125
    5. ' (' → logprob: -20.375
    6. 'self' → logprob: -20.5
    7. '       ' → logprob: -20.875
    8. '[self' → logprob: -21.375
    9. '(this' → logprob: -21.5
    10. ' self' → logprob: -23.25

Token 579: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0041661337018013
    2. '(self' → logprob: -6.004166126251221
    3. 'self' → logprob: -6.754166126251221
    4. 'interval' → logprob: -7.754166126251221
    5. 'inter' → logprob: -10.129166603088379
    6. '(interval' → logprob: -10.754166603088379
    7. '.interval' → logprob: -11.629166603088379
    8. '_inter' → logprob: -12.129166603088379
    9. '(inter' → logprob: -12.254166603088379
    10. '.self' → logprob: -12.504166603088379

Token 580: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.08909028768539429
    2. 'vals' → logprob: -2.464090347290039
    3. 'erv' → logprob: -10.339090347290039
    4. '```' → logprob: -10.464090347290039
    5. '   ' → logprob: -10.964090347290039
    6. '[' → logprob: -11.214090347290039
    7. 's' → logprob: -11.214090347290039
    8. 'val' → logprob: -11.464090347290039
    9. '
' → logprob: -12.214090347290039
    10. 'al' → logprob: -12.339090347290039

Token 581: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16168834269046783
    2. ')' → logprob: -1.9116883277893066
    3. '       ' → logprob: -6.536688327789307
    4. ')
' → logprob: -11.286688804626465
    5. '
' → logprob: -14.661688804626465
    6. ')

' → logprob: -14.786688804626465
    7. '   ' → logprob: -16.03668785095215
    8. ' )
' → logprob: -16.03668785095215
    9. '()
' → logprob: -16.16168785095215
    10. ')return' → logprob: -16.53668785095215

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034617946948856115
    2. '
' → logprob: -6.003461837768555
    3. 'aggreg' → logprob: -7.128461837768555
    4. 'result' → logprob: -9.628461837768555
    5. 'return' → logprob: -10.003461837768555
    6. '        
' → logprob: -10.503461837768555
    7. 'aggregate' → logprob: -11.628461837768555
    8. '   ' → logprob: -12.003461837768555
    9. 'ag' → logprob: -12.128461837768555
    10. ' result' → logprob: -12.253461837768555

Token 583: ' aggregator' (ID: 179549)
  Prédit: 'aggreg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aggreg' → logprob: -0.001325241639278829
    2. '       ' → logprob: -7.5013251304626465
    3. ' aggregator' → logprob: -7.5013251304626465
    4. 'agg' → logprob: -8.626325607299805
    5. 'aggregate' → logprob: -10.876325607299805
    6. '   ' → logprob: -12.126325607299805
    7. '        
' → logprob: -12.501325607299805
    8. 'result' → logprob: -12.626325607299805
    9. 'aggregation' → logprob: -13.126325607299805
    10. 'return' → logprob: -13.251325607299805

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615042082965374
    2. '=' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.133615493774414
    4. ' ' → logprob: -16.758615493774414
    5. '  ' → logprob: -16.883615493774414
    6. '.' → logprob: -17.258615493774414
    7. '    ' → logprob: -17.758615493774414
    8. 's' → logprob: -18.383615493774414
    9. ' =
' → logprob: -18.883615493774414
    10. '	' → logprob: -19.508615493774414

Token 585: ' Interval' (ID: 80693)
  Prédit: ' Interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Interval' → logprob: -0.029750484973192215
    2. 'Interval' → logprob: -3.5297505855560303
    3. ' interval' → logprob: -18.52975082397461
    4. '_interval' → logprob: -19.27975082397461
    5. '       ' → logprob: -19.40475082397461
    6. '.Interval' → logprob: -20.65475082397461
    7. ' Inter' → logprob: -20.77975082397461
    8. 'interval' → logprob: -21.27975082397461
    9. '   ' → logprob: -21.27975082397461
    10. 'Intervals' → logprob: -21.52975082397461

Token 586: 'Aggregator' (ID: 127714)
  Prédit: 'Aggregator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Aggregator' → logprob: 0.0
    2. 'Aggregate' → logprob: -18.5
    3. ' aggregator' → logprob: -20.125
    4. 'aggreg' → logprob: -20.75
    5. 'Allocator' → logprob: -20.75
    6. 'Aggreg' → logprob: -20.875
    7. 'Agg' → logprob: -21.125
    8. 'Ag' → logprob: -21.875
    9. 'Integrator' → logprob: -21.875
    10. '.Aggreg' → logprob: -22.0

Token 587: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.500011444091797
    3. ' (' → logprob: -13.875011444091797
    4. '       ' → logprob: -15.750011444091797
    5. 'paint' → logprob: -16.000011444091797
    6. '(
' → logprob: -16.125011444091797
    7. '(pa' → logprob: -16.625011444091797
    8. '   ' → logprob: -17.125011444091797
    9. '((' → logprob: -17.500011444091797
    10. '(py' → logprob: -18.875011444091797

Token 588: 'ainted' (ID: 110226)
  Prédit: 'ainted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainted' → logprob: -0.00048298496403731406
    2. 'aint' → logprob: -8.375482559204102
    3. 'paint' → logprob: -8.625482559204102
    4. 'a' → logprob: -10.625482559204102
    5. 'ained' → logprob: -10.750482559204102
    6. 'ainter' → logprob: -11.875482559204102
    7. '[' → logprob: -12.500482559204102
    8. '```' → logprob: -12.875482559204102
    9. '_' → logprob: -13.375482559204102
    10. 'ait' → logprob: -13.375482559204102

Token 589: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -4.1318875446449965e-05
    2. 'interval' → logprob: -10.250041007995605
    3. 'inter' → logprob: -12.625041007995605
    4. 's' → logprob: -13.500041007995605
    5. 'Intervals' → logprob: -14.500041007995605
    6. ')' → logprob: -15.625041007995605
    7. '_interval' → logprob: -15.750041007995605
    8. ' intervals' → logprob: -16.250041961669922
    9. '```' → logprob: -16.250041961669922
    10. '_' → logprob: -16.875041961669922

Token 590: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.35054975748062134
    2. 'vals' → logprob: -1.2255496978759766
    3. 'val' → logprob: -6.975549697875977
    4. 's' → logprob: -8.475549697875977
    5. '   ' → logprob: -8.600549697875977
    6. '       ' → logprob: -8.725549697875977
    7. 'ator' → logprob: -8.975549697875977
    8. 'al' → logprob: -9.225549697875977
    9. '```' → logprob: -9.475549697875977
    10. 'erv' → logprob: -9.475549697875977

Token 591: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8862283825874329
    2. ')
' → logprob: -1.136228322982788
    3. '       ' → logprob: -1.511228322982788
    4. '()
' → logprob: -3.136228322982788
    5. '()' → logprob: -6.511228561401367
    6. '
' → logprob: -8.136228561401367
    7. ').' → logprob: -8.386228561401367
    8. '<|end|>' → logprob: -9.261228561401367
    9. '())
' → logprob: -9.261228561401367
    10. '(' → logprob: -9.386228561401367

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34838780760765076
    2. 'result' → logprob: -1.4733878374099731
    3. ' result' → logprob: -3.4733877182006836
    4. 'return' → logprob: -3.5983877182006836
    5. ' return' → logprob: -5.598387718200684
    6. '
' → logprob: -6.473387718200684
    7. 'results' → logprob: -7.723387718200684
    8. 'count' → logprob: -7.848387718200684
    9. 'counts' → logprob: -8.223387718200684
    10. ' counts' → logprob: -9.473387718200684

Token 593: ' aggregated' (ID: 128447)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08416968584060669
    2. ' result' → logprob: -3.834169626235962
    3. 'counts' → logprob: -3.834169626235962
    4. 'return' → logprob: -4.459169864654541
    5. 'results' → logprob: -4.459169864654541
    6. '       ' → logprob: -5.209169864654541
    7. 'aggreg' → logprob: -5.834169864654541
    8. 'count' → logprob: -6.084169864654541
    9. 'for' → logprob: -6.709169864654541
    10. ' counts' → logprob: -6.959169864654541

Token 594: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22424453496932983
    2. '_counts' → logprob: -2.0992445945739746
    3. '_inter' → logprob: -3.5992445945739746
    4. '_result' → logprob: -3.7242445945739746
    5. '_results' → logprob: -4.349244594573975
    6. '=' → logprob: -4.724244594573975
    7. 's' → logprob: -6.224244594573975
    8. 'result' → logprob: -6.474244594573975
    9. '_data' → logprob: -7.724244594573975
    10. '_items' → logprob: -7.974244594573975

Token 595: ' aggregator' (ID: 179549)
  Prédit: 'aggreg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aggreg' → logprob: -0.00038300611777231097
    2. ' aggregator' → logprob: -7.875382900238037
    3. ' aggreg' → logprob: -13.500383377075195
    4. 'aggregate' → logprob: -14.125383377075195
    5. 'agg' → logprob: -14.750383377075195
    6. 'ag' → logprob: -15.625383377075195
    7. '   ' → logprob: -16.625383377075195
    8. ' aggregated' → logprob: -17.375383377075195
    9. ' агрег' → logprob: -17.500383377075195
    10. 'agr' → logprob: -17.500383377075195

Token 596: '.aggregate' (ID: 181004)
  Prédit: '.aggregate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.aggregate' → logprob: -3.054500666621607e-06
    2. 'aggregate' → logprob: -13.50000286102295
    3. '.' → logprob: -13.62500286102295
    4. '.ag' → logprob: -15.75000286102295
    5. ' .' → logprob: -16.000003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '().' → logprob: -18.500003814697266
    8. '.Aggreg' → logprob: -18.625003814697266
    9. ' aggregate' → logprob: -19.000003814697266
    10. '.concatenate' → logprob: -19.000003814697266

Token 597: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2317577451467514
    2. '()' → logprob: -1.6067577600479126
    3. '
' → logprob: -5.856757640838623
    4. '       ' → logprob: -5.981757640838623
    5. 'return' → logprob: -7.606757640838623
    6. '<|end|>' → logprob: -9.481758117675781
    7. '()
' → logprob: -9.731758117675781
    8. '(
' → logprob: -9.856758117675781
    9. '(' → logprob: -9.856758117675781
    10. '()[' → logprob: -10.231758117675781

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017420548247173429
    2. 'return' → logprob: -7.001741886138916
    3. '
' → logprob: -7.251741886138916
    4. ' return' → logprob: -10.126742362976074
    5. '        
' → logprob: -10.126742362976074
    6. '   ' → logprob: -11.001742362976074
    7. '[' → logprob: -12.001742362976074
    8. '<|end|>' → logprob: -12.251742362976074
    9. 'for' → logprob: -13.126742362976074
    10. '    
' → logprob: -13.251742362976074

Token 599: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25512978434562683
    2. 'return' (adapté à ' return') → logprob: -1.5051298141479492
    3. '       ' → logprob: -6.130129814147949
    4. ' for' → logprob: -7.005129814147949
    5. ' return' → logprob: -9.25512981414795
    6. 'print' → logprob: -11.13012981414795
    7. '
' → logprob: -14.25512981414795
    8. '```' → logprob: -14.88012981414795
    9. '	for' → logprob: -15.75512981414795
    10. '        
' → logprob: -16.005128860473633

Token 600: ' aggregated' (ID: 128447)
  Prédit: 'aggreg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aggreg' → logprob: -0.03808600828051567
    2. ' aggregated' → logprob: -3.2880859375
    3. '[(' → logprob: -10.5380859375
    4. '[' → logprob: -11.6630859375
    5. 'aggregate' → logprob: -12.0380859375
    6. '   ' → logprob: -13.9130859375
    7. 'agg' → logprob: -14.4130859375
    8. 'ag' → logprob: -14.6630859375
    9. '[
' → logprob: -15.0380859375
    10. ' [' → logprob: -15.0380859375

Token 601: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12694081664085388
    2. 'if' → logprob: -2.1269407272338867
    3. ' if' → logprob: -12.001940727233887
    4. '#' → logprob: -12.376940727233887
    5. '   ' → logprob: -13.751940727233887
    6. ' def' → logprob: -13.751940727233887
    7. 'import' → logprob: -16.001941680908203
    8. '```' → logprob: -16.001941680908203
    9. 'd' → logprob: -17.626941680908203
    10. '    
' → logprob: -18.751941680908203

Token 604: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2236267775297165
    2. ' print' → logprob: -2.4736268520355225
    3. ' output' → logprob: -2.9736268520355225
    4. ' main' → logprob: -3.7236268520355225
    5. 'main' → logprob: -3.7236268520355225
    6. 'output' → logprob: -4.473626613616943
    7. 'display' → logprob: -5.848626613616943
    8. ' display' → logprob: -6.473626613616943
    9. ' run' → logprob: -7.598626613616943
    10. 'run' → logprob: -8.098627090454102

Token 605: '_result' (ID: 11623)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06656880676746368
    2. '(' → logprob: -2.8165688514709473
    3. '_data' → logprob: -6.191568851470947
    4. '_' → logprob: -6.816568851470947
    5. 'self' → logprob: -7.316568851470947
    6. '_(' → logprob: -8.066568374633789
    7. '(
' → logprob: -8.816568374633789
    8. '   ' → logprob: -8.941568374633789
    9. '_result' → logprob: -9.941568374633789
    10. '_line' → logprob: -9.941568374633789

Token 606: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011099346913397312
    2. '(' → logprob: -4.511099338531494
    3. ' (' → logprob: -11.011099815368652
    4. '   ' → logprob: -11.386099815368652
    5. '(
' → logprob: -11.386099815368652
    6. 'self' → logprob: -11.761099815368652
    7. '       ' → logprob: -12.636099815368652
    8. ' self' → logprob: -15.136099815368652
    9. '	self' → logprob: -15.261099815368652
    10. ' ' → logprob: -15.511099815368652

Token 607: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019699273630976677
    2. '):
' → logprob: -4.5196990966796875
    3. ',' → logprob: -4.7696990966796875
    4. 'self' → logprob: -10.019699096679688
    5. '):
' → logprob: -10.019699096679688
    6. ')' → logprob: -10.769699096679688
    7. '(self' → logprob: -11.894699096679688
    8. '   ' → logprob: -12.519699096679688
    9. ' ):' → logprob: -12.644699096679688
    10. ',self' → logprob: -12.644699096679688

Token 608: ' aggregated' (ID: 128447)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11721324175596237
    2. 'aggreg' → logprob: -2.867213249206543
    3. 'out' → logprob: -3.492213249206543
    4. ' result' → logprob: -5.117213249206543
    5. 'output' → logprob: -5.617213249206543
    6. 'res' → logprob: -5.617213249206543
    7. ' aggregated' → logprob: -6.117213249206543
    8. '):' → logprob: -6.242213249206543
    9. ')' → logprob: -6.242213249206543
    10. 'results' → logprob: -6.492213249206543

Token 609: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25233301520347595
    2. '):
' → logprob: -1.5023330450057983
    3. '):
' → logprob: -8.00233268737793
    4. ')' → logprob: -10.50233268737793
    5. '       ' → logprob: -11.00233268737793
    6. '   ' → logprob: -11.50233268737793
    7. 'self' → logprob: -11.62733268737793
    8. '):

' → logprob: -13.50233268737793
    9. ' ):' → logprob: -13.62733268737793
    10. ':' → logprob: -13.87733268737793

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012201975914649665
    2. 'self' → logprob: -10.3751220703125
    3. '
' → logprob: -10.7501220703125
    4. '        
' → logprob: -11.3751220703125
    5. ',' → logprob: -11.5001220703125
    6. '(self' → logprob: -11.6251220703125
    7. '```' → logprob: -11.8751220703125
    8. ' for' → logprob: -12.2501220703125
    9. '	' → logprob: -12.5001220703125
    10. 'for' → logprob: -12.8751220703125

Token 611: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4782636761665344
    2. ' for' → logprob: -0.9782636761665344
    3. '       ' → logprob: -5.478263854980469
    4. 'if' → logprob: -14.978263854980469
    5. 'import' → logprob: -14.978263854980469
    6. '```' → logprob: -15.228263854980469
    7. '	for' → logprob: -15.728263854980469
    8. ' if' → logprob: -15.728263854980469
    9. '   ' → logprob: -16.35326385498047
    10. '
' → logprob: -17.97826385498047

Token 612: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2014687955379486
    2. ' length' → logprob: -1.701468825340271
    3. 'count' → logprob: -10.826468467712402
    4. 'size' → logprob: -11.576468467712402
    5. 'interval' → logprob: -11.701468467712402
    6. 'value' → logprob: -11.951468467712402
    7. ' size' → logprob: -12.826468467712402
    8. '(length' → logprob: -13.326468467712402
    9. '   ' → logprob: -13.451468467712402
    10. 'l' → logprob: -13.701468467712402

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023393042385578156
    2. ',count' → logprob: -3.773393154144287
    3. ' ,' → logprob: -8.898392677307129
    4. ',size' → logprob: -12.523392677307129
    5. ',num' → logprob: -12.648392677307129
    6. 'count' → logprob: -13.773392677307129
    7. ',value' → logprob: -14.648392677307129
    8. ',length' → logprob: -15.023392677307129
    9. ',f' → logprob: -15.148392677307129
    10. ',n' → logprob: -15.273392677307129

Token 614: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0004311460361350328
    2. ' count' → logprob: -7.750431060791016
    3. 'cnt' → logprob: -14.875431060791016
    4. 'freq' → logprob: -16.375431060791016
    5. 'frequency' → logprob: -17.750431060791016
    6. '	count' → logprob: -19.000431060791016
    7. 'Count' → logprob: -19.875431060791016
    8. '_count' → logprob: -20.125431060791016
    9. 'counts' → logprob: -20.125431060791016
    10. '   ' → logprob: -20.375431060791016

Token 615: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006722706835716963
    2. 'in' → logprob: -5.006722927093506
    3. ',' → logprob: -12.506722450256348
    4. '	in' → logprob: -13.131722450256348
    5. ' ' → logprob: -13.631722450256348
    6. '_in' → logprob: -16.506723403930664
    7. ' i' → logprob: -16.756723403930664
    8. '  ' → logprob: -16.881723403930664
    9. '```' → logprob: -16.881723403930664
    10. '<|end|>' → logprob: -17.006723403930664

Token 616: ' aggregated' (ID: 128447)
  Prédit: 'aggreg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aggreg' → logprob: -0.3132622241973877
    2. ' aggregated' → logprob: -1.3132622241973877
    3. '
' → logprob: -15.563261985778809
    4. ' ' → logprob: -16.188262939453125
    5. 'aggregate' → logprob: -16.938262939453125
    6. '   ' → logprob: -17.188262939453125
    7. ' ' → logprob: -17.688262939453125
    8. 'Aggreg' → logprob: -18.188262939453125
    9. ' 
' → logprob: -18.938262939453125
    10. 'agg' → logprob: -18.938262939453125

Token 617: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020698022097349167
    2. ':
' → logprob: -3.895698070526123
    3. ',' → logprob: -9.145697593688965
    4. '):
' → logprob: -11.020697593688965
    5. '<|end|>' → logprob: -11.645697593688965
    6. '):' → logprob: -12.270697593688965
    7. '():
' → logprob: -12.270697593688965
    8. ':

' → logprob: -12.895697593688965
    9. ' in' → logprob: -13.020697593688965
    10. ':
' → logprob: -13.645697593688965

Token 618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011804660316556692
    2. ':' → logprob: -7.251180648803711
    3. ' print' → logprob: -8.251180648803711
    4. 'print' → logprob: -9.376180648803711
    5. ':
' → logprob: -9.626180648803711
    6. '<|end|>' → logprob: -11.126180648803711
    7. '       ' → logprob: -12.001180648803711
    8. '            
' → logprob: -12.001180648803711
    9. ',' → logprob: -12.251180648803711
    10. '   ' → logprob: -12.626180648803711

Token 619: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8115553855895996
    2. '           ' → logprob: -1.0615553855895996
    3. 'print' (adapté à ' print') → logprob: -1.5615553855895996
    4. '   ' → logprob: -9.936555862426758
    5. '	print' → logprob: -10.811555862426758
    6. '               ' → logprob: -10.936555862426758
    7. '       ' → logprob: -11.186555862426758
    8. '```' → logprob: -13.686555862426758
    9. ' ' → logprob: -13.811555862426758
    10. '
' → logprob: -14.186555862426758

Token 620: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.576359212398529
    2. '(f' → logprob: -0.826359212398529
    3. 'length' → logprob: -7.826359272003174
    4. '(' → logprob: -10.951358795166016
    5. 'f' → logprob: -12.951358795166016
    6. ' length' → logprob: -15.326358795166016
    7. '('' → logprob: -16.076358795166016
    8. '("{}' → logprob: -16.076358795166016
    9. '('{}' → logprob: -16.451358795166016
    10. '(len' → logprob: -17.076358795166016

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022213248303160071
    2. ',count' → logprob: -8.625222206115723
    3. ' ,' → logprob: -10.125222206115723
    4. ',length' → logprob: -13.375222206115723
    5. ',end' → logprob: -14.375222206115723
    6. ',f' → logprob: -16.250221252441406
    7. '   ' → logprob: -16.875221252441406
    8. ',c' → logprob: -17.375221252441406
    9. ',len' → logprob: -17.750221252441406
    10. '[count' → logprob: -18.000221252441406

Token 622: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -7.493430894101039e-05
    2. ' count' → logprob: -9.500075340270996
    3. '(count' → logprob: -17.87507438659668
    4. '$count' → logprob: -19.12507438659668
    5. ''' → logprob: -19.62507438659668
    6. ',count' → logprob: -19.75007438659668
    7. ')' → logprob: -20.00007438659668
    8. '[count' → logprob: -20.00007438659668
    9. '	count' → logprob: -20.25007438659668
    10. '
' → logprob: -20.25007438659668

Token 623: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004951290902681649
    2. '<|end|>' → logprob: -7.625494956970215
    3. ')
' → logprob: -12.625494956970215
    4. ' )' → logprob: -13.500494956970215
    5. '")' → logprob: -14.375494956970215
    6. ')#' → logprob: -14.750494956970215
    7. '```' → logprob: -15.250494956970215
    8. '')' → logprob: -15.375494956970215
    9. '       ' → logprob: -15.625494956970215
    10. '<|end|>' → logprob: -15.875494956970215

Token 624: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07202677428722382
    2. 'def' → logprob: -2.6970267295837402
    3. '<|end|>' → logprob: -6.82202672958374
    4. ' if' → logprob: -7.57202672958374
    5. '#' → logprob: -8.322027206420898
    6. '   ' → logprob: -9.447027206420898
    7. '```' → logprob: -9.447027206420898
    8. '    
' → logprob: -10.947027206420898
    9. '
' → logprob: -11.072027206420898
    10. '<|end|>' → logprob: -11.697027206420898

Token 625: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00016539888747502118
    2. 'main' → logprob: -9.375164985656738
    3. '_main' → logprob: -9.750164985656738
    4. ' run' → logprob: -12.000164985656738
    5. ' solve' → logprob: -12.125164985656738
    6. ' white' → logprob: -12.875164985656738
    7. '	main' → logprob: -13.250164985656738
    8. ' ' → logprob: -13.500164985656738
    9. '_' → logprob: -13.625164985656738
    10. ' _' → logprob: -13.750164985656738

Token 626: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001561009994475171
    2. ' ():' → logprob: -9.37515640258789
    3. '():
' → logprob: -9.62515640258789
    4. '()' → logprob: -12.25015640258789
    5. '():
' → logprob: -15.75015640258789
    6. '(' → logprob: -16.00015640258789
    7. ':' → logprob: -16.50015640258789
    8. '()>' → logprob: -18.25015640258789
    9. ' ()' → logprob: -18.37515640258789
    10. '():

' → logprob: -18.62515640258789

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006596576422452927
    2. '    
' → logprob: -8.125659942626953
    3. '```' → logprob: -8.750659942626953
    4. '
' → logprob: -9.375659942626953
    5. '()' → logprob: -10.250659942626953
    6. 'import' → logprob: -10.875659942626953
    7. '():
' → logprob: -11.375659942626953
    8. '():' → logprob: -11.375659942626953
    9. 'def' → logprob: -11.375659942626953
    10. '   ' → logprob: -11.625659942626953

Token 628: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.29607856273651123
    2. ' solver' → logprob: -1.4210785627365112
    3. '   ' → logprob: -4.796078681945801
    4. 'import' → logprob: -5.296078681945801
    5. ' import' → logprob: -6.546078681945801
    6. 'w' → logprob: -10.1710786819458
    7. ' ' → logprob: -11.5460786819458
    8. ' w' → logprob: -11.6710786819458
    9. '_solver' → logprob: -11.9210786819458
    10. 'W' → logprob: -12.1710786819458

Token 629: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01137117575854063
    2. '=' → logprob: -4.51137113571167
    3. '()' → logprob: -9.011371612548828
    4. '().' → logprob: -9.261371612548828
    5. '.' → logprob: -9.386371612548828
    6. ' ' → logprob: -11.261371612548828
    7. '   ' → logprob: -12.636371612548828
    8. '	' → logprob: -13.386371612548828
    9. '.solve' → logprob: -13.386371612548828
    10. ' .' → logprob: -14.136371612548828

Token 630: ' White' (ID: 10558)
  Prédit: ' White'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' White' → logprob: -0.2519303858280182
    2. 'White' → logprob: -1.5019303560256958
    3. ' white' → logprob: -13.751930236816406
    4. '.White' → logprob: -16.876930236816406
    5. '_white' → logprob: -17.501930236816406
    6. 'Whitespace' → logprob: -17.626930236816406
    7. ' ' → logprob: -18.501930236816406
    8. ' Whites' → logprob: -18.751930236816406
    9. 'white' → logprob: -19.376930236816406
    10. '_WHITE' → logprob: -19.501930236816406

Token 631: 'Wall' (ID: 35120)
  Prédit: 'Wall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Wall' → logprob: -1.9361264946837764e-07
    2. 'Wal' → logprob: -16.625
    3. 'Walls' → logprob: -18.625
    4. ' Wall' → logprob: -18.875
    5. 'wall' → logprob: -21.125
    6. 'W' → logprob: -21.125
    7. '_wall' → logprob: -21.375
    8. 'Walk' → logprob: -22.25
    9. 'Wa' → logprob: -22.375
    10. ' wall' → logprob: -22.375

Token 632: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -5.200166469876422e-06
    2. 'solver' → logprob: -12.250004768371582
    3. 'Sol' → logprob: -15.750004768371582
    4. '_solver' → logprob: -16.1250057220459
    5. 'Solve' → logprob: -16.3750057220459
    6. ' solver' → logprob: -17.1250057220459
    7. '()' → logprob: -17.3750057220459
    8. ' Solver' → logprob: -17.6250057220459
    9. 'olver' → logprob: -18.8750057220459
    10. 'Solved' → logprob: -19.1250057220459

Token 633: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.23910877108573914
    2. '()' → logprob: -2.1141088008880615
    3. '
' → logprob: -2.7391088008880615
    4. '   ' → logprob: -3.6141088008880615
    5. '(
' → logprob: -9.73910903930664
    6. '    
' → logprob: -9.73910903930664
    7. '<|end|>' → logprob: -9.73910903930664
    8. 'def' → logprob: -10.36410903930664
    9. '()\' → logprob: -10.86410903930664
    10. '  
' → logprob: -10.86410903930664

Token 634: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4910251796245575
    2. '   ' → logprob: -0.9910252094268799
    3. 'solver' → logprob: -4.741024971008301
    4. '	s' → logprob: -5.491024971008301
    5. '    
' → logprob: -6.491024971008301
    6. ' solver' → logprob: -6.866024971008301
    7. '_solver' → logprob: -7.866024971008301
    8. '(s' → logprob: -8.8660249710083
    9. ' 
' → logprob: -8.9910249710083
    10. '
' → logprob: -8.9910249710083

Token 635: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -6.265633419388905e-05
    2. ' solver' → logprob: -9.750062942504883
    3. '   ' → logprob: -12.375062942504883
    4. '_solver' → logprob: -17.875062942504883
    5. 'scheduler' → logprob: -18.000062942504883
    6. '```' → logprob: -18.125062942504883
    7. '	s' → logprob: -18.625062942504883
    8. '
' → logprob: -18.875062942504883
    9. 's' → logprob: -19.125062942504883
    10. '    
' → logprob: -19.750062942504883

Token 636: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.00014036978245712817
    2. '.' → logprob: -8.875140190124512
    3. ' .' → logprob: -15.000140190124512
    4. 'input' → logprob: -17.000141143798828
    5. '.output' → logprob: -17.000141143798828
    6. '.user' → logprob: -18.875141143798828
    7. '.inputs' → logprob: -19.375141143798828
    8. '\.' → logprob: -19.500141143798828
    9. '=input' → logprob: -19.750141143798828
    10. ' input' → logprob: -19.750141143798828

Token 637: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.8908587662735954e-05
    2. '_' → logprob: -11.000019073486328
    3. '_Data' → logprob: -13.125019073486328
    4. ' _' → logprob: -17.125019073486328
    5. ')_' → logprob: -17.250019073486328
    6. '_DATA' → logprob: -17.625019073486328
    7. '\' → logprob: -18.250019073486328
    8. '##_' → logprob: -18.375019073486328
    9. '"_' → logprob: -18.500019073486328
    10. '```' → logprob: -18.625019073486328

Token 638: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002986392646562308
    2. '()
' → logprob: -8.125298500061035
    3. '()\' → logprob: -13.500298500061035
    4. '()

' → logprob: -14.875298500061035
    5. '()
' → logprob: -15.000298500061035
    6. '()`' → logprob: -15.750298500061035
    7. '();' → logprob: -16.37529945373535
    8. ' ()' → logprob: -16.50029945373535
    9. '()"' → logprob: -17.37529945373535
    10. '())' → logprob: -17.75029945373535

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011096131056547165
    2. 'solver' → logprob: -7.251109600067139
    3. '    
' → logprob: -8.876110076904297
    4. '
' → logprob: -8.876110076904297
    5. ' solver' → logprob: -9.751110076904297
    6. 'aggreg' → logprob: -11.001110076904297
    7. '_solver' → logprob: -11.251110076904297
    8. '```' → logprob: -11.376110076904297
    9. '  ' → logprob: -11.876110076904297
    10. '<|end|>' → logprob: -12.251110076904297

Token 640: ' result' (ID: 1534)
  Prédit: 'aggreg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aggreg' → logprob: -0.2018810510635376
    2. 'result' (adapté à ' result') → logprob: -1.7018810510635376
    3. ' aggregated' → logprob: -7.951880931854248
    4. 'agg' → logprob: -9.951881408691406
    5. ' result' → logprob: -10.076881408691406
    6. '   ' → logprob: -11.326881408691406
    7. 'res' → logprob: -12.451881408691406
    8. 'results' → logprob: -12.576881408691406
    9. 'output' → logprob: -12.826881408691406
    10. '```' → logprob: -13.451881408691406

Token 641: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022473573684692
    2. '=' → logprob: -1.9102246761322021
    3. ' =
' → logprob: -15.535224914550781
    4. '_' → logprob: -15.660224914550781
    5. ' ' → logprob: -16.53522491455078
    6. ' ' → logprob: -17.28522491455078
    7. ' =)' → logprob: -17.41022491455078
    8. '＝' → logprob: -17.66022491455078
    9. '   ' → logprob: -17.66022491455078
    10. 's' → logprob: -17.66022491455078

Token 642: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.20141343772411346
    2. ' solver' → logprob: -1.7014133930206299
    3. '_solver' → logprob: -16.701414108276367
    4. 'sol' → logprob: -16.951414108276367
    5. '   ' → logprob: -17.076414108276367
    6. 's' → logprob: -18.576414108276367
    7. '(s' → logprob: -19.451414108276367
    8. 'Solver' → logprob: -19.451414108276367
    9. 'solve' → logprob: -19.576414108276367
    10. '	s' → logprob: -19.701414108276367

Token 643: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.723973582556937e-05
    2. '.' → logprob: -11.000017166137695
    3. ' .' → logprob: -15.000017166137695
    4. 'solve' → logprob: -16.125017166137695
    5. '.sol' → logprob: -17.375017166137695
    6. '.s' → logprob: -18.500017166137695
    7. '.
' → logprob: -19.500017166137695
    8. '.save' → logprob: -19.875017166137695
    9. '.S' → logprob: -20.875017166137695
    10. '.resolve' → logprob: -21.000017166137695

Token 644: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5146640539169312
    2. '
' → logprob: -1.3896640539169312
    3. '()' → logprob: -2.5146641731262207
    4. '   ' → logprob: -2.6396641731262207
    5. '<|end|>' → logprob: -8.014663696289062
    6. '    
' → logprob: -8.264663696289062
    7. '  
' → logprob: -9.389663696289062
    8. '()\' → logprob: -10.139663696289062
    9. '```' → logprob: -10.139663696289062
    10. 'solver' → logprob: -10.889663696289062

Token 645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011138956062495708
    2. 'solver' → logprob: -4.511138916015625
    3. ' solver' → logprob: -9.761138916015625
    4. '
' → logprob: -10.636138916015625
    5. '_solver' → logprob: -12.511138916015625
    6. '```' → logprob: -13.011138916015625
    7. '	s' → logprob: -13.386138916015625
    8. '    
' → logprob: -13.761138916015625
    9. '  ' → logprob: -14.761138916015625
    10. ' ' → logprob: -15.761138916015625

Token 646: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -9.17420256882906e-05
    2. '   ' → logprob: -9.500091552734375
    3. ' solver' → logprob: -11.000091552734375
    4. '```' → logprob: -17.500091552734375
    5. '_solver' → logprob: -17.750091552734375
    6. 'sol' → logprob: -18.000091552734375
    7. '    
' → logprob: -18.875091552734375
    8. '
' → logprob: -18.875091552734375
    9. 'scheduler' → logprob: -19.875091552734375
    10. '  ' → logprob: -20.000091552734375

Token 647: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -15.000000953674316
    3. 'output' → logprob: -16.25
    4. ' .' → logprob: -16.875
    5. '.input' → logprob: -18.875
    6. '.print' → logprob: -20.75
    7. '.out' → logprob: -20.75
    8. '
' → logprob: -20.875
    9. '$output' → logprob: -20.875
    10. '\.' → logprob: -21.25

Token 648: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -4.320199877838604e-07
    2. 'Result' → logprob: -15.375
    3. 'result' → logprob: -16.375
    4. '_RESULT' → logprob: -18.375
    5. '_results' → logprob: -19.25
    6. '
' → logprob: -19.25
    7. '_Result' → logprob: -19.5
    8. '\' → logprob: -20.375
    9. '_res' → logprob: -20.375
    10. '   ' → logprob: -20.625

Token 649: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -9.750059127807617
    3. '(
' → logprob: -14.125059127807617
    4. '(results' → logprob: -16.000059127807617
    5. 'result' → logprob: -16.750059127807617
    6. '(resultado' → logprob: -18.500059127807617
    7. '(res' → logprob: -18.875059127807617
    8. '()' → logprob: -19.250059127807617
    9. ' (' → logprob: -19.625059127807617
    10. '(return' → logprob: -19.875059127807617

Token 650: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031568460166454315
    2. '()' → logprob: -3.5315685272216797
    3. '())' → logprob: -6.40656852722168
    4. '()
' → logprob: -9.65656852722168
    5. ')
' → logprob: -9.90656852722168
    6. '<|end|>' → logprob: -10.53156852722168
    7. ' )' → logprob: -11.78156852722168
    8. '```' → logprob: -12.03156852722168
    9. ')

' → logprob: -12.90656852722168
    10. '
' → logprob: -12.90656852722168

Token 651: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12769630551338196
    2. 'if' → logprob: -2.1276962757110596
    3. '\n' → logprob: -7.252696514129639
    4. ' if' → logprob: -11.37769603729248
    5. '\
' → logprob: -11.37769603729248
    6. '
' → logprob: -11.75269603729248
    7. '```' → logprob: -11.87769603729248
    8. '' → logprob: -12.25269603729248
    9. '    
' → logprob: -12.62769603729248
    10. '  
' → logprob: -12.62769603729248

Token 652: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03810712695121765
    2. '__' → logprob: -3.28810715675354
    3. '_' → logprob: -10.663106918334961
    4. '_name' → logprob: -10.788106918334961
    5. '___' → logprob: -11.913106918334961
    6. ' ' → logprob: -12.413106918334961
    7. ' ' → logprob: -12.413106918334961
    8. 'name' → logprob: -12.913106918334961
    9. ' _' → logprob: -13.663106918334961
    10. ' ___' → logprob: -14.288106918334961

Token 653: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00862627848982811
    2. ' __' → logprob: -5.258626461029053
    3. ' ==' → logprob: -6.258626461029053
    4. '==' → logprob: -6.633626461029053
    5. '.__' → logprob: -9.883625984191895
    6. '__.__' → logprob: -10.383625984191895
    7. '_' → logprob: -11.508625984191895
    8. '[' → logprob: -11.633625984191895
    9. '__[' → logprob: -11.883625984191895
    10. '__.' → logprob: -12.008625984191895

Token 654: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.107425062713446e-06
    2. '==' → logprob: -12.500006675720215
    3. '__.__' → logprob: -13.000006675720215
    4. ' ==' → logprob: -14.750006675720215
    5. '___' → logprob: -15.375006675720215
    6. '__.' → logprob: -15.500006675720215
    7. '=="' → logprob: -16.12500762939453
    8. '____' → logprob: -16.50000762939453
    9. '__
' → logprob: -17.37500762939453
    10. ' __' → logprob: -18.50000762939453

Token 655: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18740306794643402
    2. '==' → logprob: -2.0624029636383057
    3. ' ==' → logprob: -3.3124029636383057
    4. '=="' → logprob: -4.937403202056885
    5. '=='' → logprob: -9.812402725219727
    6. '_' → logprob: -10.062402725219727
    7. '___' → logprob: -11.312402725219727
    8. '=' → logprob: -11.937402725219727
    9. '===' → logprob: -12.437402725219727
    10. '__.__' → logprob: -12.562402725219727

Token 656: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029762759804725647
    2. ''' → logprob: -3.5297627449035645
    3. ' "__' → logprob: -11.779763221740723
    4. '__' → logprob: -12.404763221740723
    5. '"name' → logprob: -15.529763221740723
    6. ' '__' → logprob: -15.654763221740723
    7. '"user' → logprob: -17.029762268066406
    8. ''"' → logprob: -17.154762268066406
    9. '("__' → logprob: -18.029762268066406
    10. '"class' → logprob: -18.154762268066406

Token 657: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011204498820006847
    2. '__' → logprob: -4.511204719543457
    3. '"' → logprob: -8.886204719543457
    4. 'name' → logprob: -11.636204719543457
    5. ''' → logprob: -11.761204719543457
    6. '_main' → logprob: -14.261204719543457
    7. 'built' → logprob: -15.136204719543457
    8. ' main' → logprob: -15.511204719543457
    9. '__
' → logprob: -16.13620376586914
    10. '-main' → logprob: -16.51120376586914

Token 658: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.13013297319412231
    2. '__' → logprob: -2.1301329135894775
    3. '__.' → logprob: -6.630133152008057
    4. '__':
' → logprob: -7.005133152008057
    5. '__.__' → logprob: -7.380133152008057
    6. '__["' → logprob: -8.130132675170898
    7. '__
' → logprob: -10.630132675170898
    8. '__
' → logprob: -11.130132675170898
    9. '__[' → logprob: -11.630132675170898
    10. '.' → logprob: -13.130132675170898

Token 659: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12717095017433167
    2. '__' → logprob: -2.127171039581299
    3. '"' → logprob: -9.00217056274414
    4. ' main' → logprob: -9.37717056274414
    5. ''' → logprob: -11.12717056274414
    6. '_main' → logprob: -11.37717056274414
    7. '   ' → logprob: -12.62717056274414
    8. '____' → logprob: -13.37717056274414
    9. '__":
' → logprob: -14.00217056274414
    10. '__
' → logprob: -14.25217056274414

Token 660: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -19.25
    4. '_main' → logprob: -23.75
    5. '   ' → logprob: -23.875
    6. '.main' → logprob: -24.375
    7. '(main' → logprob: -24.625
    8. 'import' → logprob: -24.875
    9. '
' → logprob: -25.375
    10. 'ma' → logprob: -27.5

Token 661: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 659
Tokens correctement prédits (1ère position, stricte): 329
Tokens correctement prédits (1ère position, avec adaptation): 366
Tokens correctement prédits (top 10): 591
Précision stricte (1ère position): 49.92%
Précision adaptée (1ère position): 55.54%
Précision (top 10): 89.68%
================================================================================
