================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == '0 0':
        break
    n, m = map(int, line.split())
    taro = []
    hanako = []
    for _ in range(n):
        taro.append(int(input()))
    for _ in range(m):
        hanako.append(int(input()))
    sum_taro = sum(taro)
    sum_hanako = sum(hanako)
    found = False
    min_sum = None
    result = (-1,)
    for t in taro:
        for h in hanako:
            new_taro = sum_taro - t + h
            new_hanako = sum_hanako - h + t
            if new_taro == new_hanako:
                s = t + h
                if (not found) or (s < min_sum):
                    found = True
                    min_sum = s
                    result = (t, h)
    if found:
        print(result[0], result[1])
    else:
        print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6169739961624146
    2. '    ' → logprob: -2.241973876953125
    3. '    
' → logprob: -2.616973876953125
    4. '\' → logprob: -2.866973876953125
    5. '\n' → logprob: -2.866973876953125
    6. ' ' → logprob: -3.241973876953125
    7. '```' → logprob: -3.241973876953125
    8. ' 
' → logprob: -3.616973876953125
    9. '  
' → logprob: -4.116973876953125
    10. '     
' → logprob: -4.241973876953125

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3108775019645691
    2. '    ' → logprob: -1.6858775615692139
    3. '```' → logprob: -3.435877561569214
    4. ' ' → logprob: -3.810877561569214
    5. '       ' → logprob: -4.810877323150635
    6. '    
' → logprob: -5.935877323150635
    7. '  ' → logprob: -6.185877323150635
    8. '\' → logprob: -6.185877323150635
    9. '\n' → logprob: -6.685877323150635
    10. '\t' → logprob: -6.810877323150635

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0398576445877552
    2. '=' → logprob: -3.7898576259613037
    3. 's' → logprob: -4.789857864379883
    4. '.' → logprob: -6.289857864379883
    5. '[' → logprob: -6.664857864379883
    6. '[:]' → logprob: -7.289857864379883
    7. '.startswith' → logprob: -7.289857864379883
    8. ' ' → logprob: -7.414857864379883
    9. '       ' → logprob: -7.414857864379883
    10. '   ' → logprob: -7.789857864379883

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08903401345014572
    2. 'input' → logprob: -2.464034080505371
    3. ' ' → logprob: -9.714034080505371
    4. ' f' → logprob: -10.964034080505371
    5. '=input' → logprob: -12.589034080505371
    6. ' readline' → logprob: -12.714034080505371
    7. ' file' → logprob: -12.839034080505371
    8. '   ' → logprob: -13.589034080505371
    9. ' s' → logprob: -14.089034080505371
    10. 'file' → logprob: -14.464034080505371

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002948935842141509
    2. '()' → logprob: -6.502948760986328
    3. '('' → logprob: -6.752948760986328
    4. '("("' → logprob: -8.752948760986328
    5. ''' → logprob: -10.252948760986328
    6. '```' → logprob: -10.502948760986328
    7. ')' → logprob: -11.252948760986328
    8. ''s' → logprob: -11.752948760986328
    9. '("")' → logprob: -12.002948760986328
    10. '(
' → logprob: -12.627948760986328

Token 8: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1274094581604004
    2. '<|end|>' → logprob: -1.1274094581604004
    3. ' ' → logprob: -1.7524094581604004
    4. '   ' → logprob: -2.3774094581604004
    5. '    ' → logprob: -4.0024094581604
    6. '.' → logprob: -4.5024094581604
    7. '.strip' → logprob: -4.6274094581604
    8. '<|end|>' → logprob: -4.6274094581604
    9. 'if' → logprob: -5.1274094581604
    10. '\n' → logprob: -5.1274094581604

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2029114067554474
    2. '   ' → logprob: -2.577911376953125
    3. ' ' → logprob: -2.952911376953125
    4. '<|end|>' → logprob: -3.952911376953125
    5. '    ' → logprob: -4.077911376953125
    6. 'if' (adapté à ' if') → logprob: -4.452911376953125
    7. '\n' → logprob: -5.827911376953125
    8. '  ' → logprob: -7.202911376953125
    9. '\r' → logprob: -7.452911376953125
    10. '    
' → logprob: -7.577911376953125

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05100409686565399
    2. ' line' → logprob: -3.05100417137146
    3. ' ' → logprob: -6.551003932952881
    4. 'not' → logprob: -7.051003932952881
    5. 'line' → logprob: -9.426004409790039
    6. ' len' → logprob: -11.176004409790039
    7. '  ' → logprob: -11.676004409790039
    8. '<|end|>' → logprob: -12.301004409790039
    9. '    ' → logprob: -13.051004409790039
    10. ' lines' → logprob: -13.801004409790039

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13073374330997467
    2. '.' → logprob: -3.0057337284088135
    3. '.startswith' → logprob: -3.5057337284088135
    4. '==' → logprob: -3.5057337284088135
    5. '.strip' → logprob: -5.005733966827393
    6. ' .' → logprob: -6.505733966827393
    7. ' ' → logprob: -6.755733966827393
    8. '    ' → logprob: -7.380733966827393
    9. '<|end|>' → logprob: -7.505733966827393
    10. '<|end|>' → logprob: -7.755733966827393

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38332247734069824
    2. ''' → logprob: -1.8833224773406982
    3. '""' → logprob: -2.1333224773406982
    4. '''' → logprob: -3.2583224773406982
    5. ' ""' → logprob: -5.758322715759277
    6. ' "' → logprob: -5.883322715759277
    7. ' ''' → logprob: -6.508322715759277
    8. ' '' → logprob: -6.758322715759277
    9. '"":' → logprob: -8.008322715759277
    10. ' ' → logprob: -8.383322715759277

Token 13: '0' (ID: 15)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -1.3497978448867798
    2. ''' → logprob: -1.4747978448867798
    3. '':' → logprob: -1.4747978448867798
    4. 'quit' → logprob: -1.4747978448867798
    5. '\n' → logprob: -3.2247977256774902
    6. ''\' → logprob: -5.84979772567749
    7. 'break' → logprob: -6.22479772567749
    8. ''ex' → logprob: -6.22479772567749
    9. '```' → logprob: -7.09979772567749
    10. '"' → logprob: -7.22479772567749

Token 14: ' ' (ID: 220)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1638757437467575
    2. ''' → logprob: -1.913875699043274
    3. ':' → logprob: -6.038875579833984
    4. '\n' → logprob: -7.288875579833984
    5. ' ':' → logprob: -8.663875579833984
    6. '':
' → logprob: -8.788875579833984
    7. ' '' → logprob: -10.163875579833984
    8. '':
' → logprob: -10.163875579833984
    9. '0' → logprob: -10.413875579833984
    10. ' or' → logprob: -10.538875579833984

Token 15: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5557151436805725
    2. '0' → logprob: -1.5557150840759277
    3. ' ' → logprob: -1.8057150840759277
    4. ''' → logprob: -3.3057150840759277
    5. '\n' → logprob: -4.930715084075928
    6. ':' → logprob: -6.305715084075928
    7. ' ':' → logprob: -6.430715084075928
    8. '':
' → logprob: -6.805715084075928
    9. ' '' → logprob: -7.430715084075928
    10. ' break' → logprob: -7.555715084075928

Token 16: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.024948956444859505
    2. '\n' → logprob: -4.149949073791504
    3. ':' → logprob: -5.274949073791504
    4. ''' → logprob: -6.524949073791504
    5. '':
' → logprob: -6.774949073791504
    6. '':
' → logprob: -8.274949073791504
    7. ''):' → logprob: -8.399949073791504
    8. '0' → logprob: -8.774949073791504
    9. ' ':' → logprob: -9.274949073791504
    10. '<|end|>' → logprob: -10.024949073791504

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022194879129529
    2. ':' → logprob: -7.0022196769714355
    3. '   ' → logprob: -7.6272196769714355
    4. ' break' → logprob: -7.7522196769714355
    5. '\n' → logprob: -9.252219200134277
    6. '
' → logprob: -9.752219200134277
    7. '	break' → logprob: -10.252219200134277
    8. '        
' → logprob: -10.502219200134277
    9. ':
' → logprob: -10.627219200134277
    10. '    ' → logprob: -10.752219200134277

Token 18: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6974160671234131
    2. ' break' → logprob: -0.6974160671234131
    3. 'break' (adapté à ' break') → logprob: -5.572416305541992
    4. '   ' → logprob: -8.072416305541992
    5. '	break' → logprob: -9.197416305541992
    6. '\n' → logprob: -11.322416305541992
    7. '           ' → logprob: -11.322416305541992
    8. '    ' → logprob: -12.572416305541992
    9. '_break' → logprob: -12.572416305541992
    10. '-break' → logprob: -12.822416305541992

Token 19: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7901343703269958
    2. '\n' → logprob: -1.1651344299316406
    3. '
' → logprob: -2.2901344299316406
    4. '    
' → logprob: -2.9151344299316406
    5. '<|end|>' → logprob: -2.9151344299316406
    6. '  
' → logprob: -4.540134429931641
    7. ' ' → logprob: -6.040134429931641
    8. '\' → logprob: -6.040134429931641
    9. '<|end|>' → logprob: -6.290134429931641
    10. ')' → logprob: -6.415134429931641

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12072781473398209
    2. '    
' → logprob: -2.495727777481079
    3. '\n' → logprob: -4.120728015899658
    4. '  
' → logprob: -5.245728015899658
    5. '   
' → logprob: -5.620728015899658
    6. '  ' → logprob: -6.620728015899658
    7. '```' → logprob: -6.870728015899658
    8. '
' → logprob: -7.245728015899658
    9. ' ' → logprob: -7.620728015899658
    10. ' 
' → logprob: -7.745728015899658

Token 21: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05976630747318268
    2. '\n' → logprob: -4.1847662925720215
    3. '    
' → logprob: -4.3097662925720215
    4. '```' → logprob: -5.1847662925720215
    5. 'n' (adapté à ' n') → logprob: -5.3097662925720215
    6. 'a' → logprob: -5.8097662925720215
    7. ' ' → logprob: -6.0597662925720215
    8. '    ' → logprob: -6.3097662925720215
    9. 'tokens' → logprob: -6.6847662925720215
    10. '[' → logprob: -6.6847662925720215

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05637070909142494
    2. ' ,' → logprob: -3.556370735168457
    3. ' =' → logprob: -3.806370735168457
    4. '=' → logprob: -5.806370735168457
    5. ' ' → logprob: -7.431370735168457
    6. 'um' → logprob: -9.681370735168457
    7. 'umbers' → logprob: -9.806370735168457
    8. '   ' → logprob: -10.056370735168457
    9. 'umber' → logprob: -10.431370735168457
    10. '  ' → logprob: -10.556370735168457

Token 23: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.30017411708831787
    2. ' m' → logprob: -1.5501741170883179
    3. ' k' → logprob: -3.8001742362976074
    4. 'k' → logprob: -4.300174236297607
    5. ' ' → logprob: -5.300174236297607
    6. 'space' → logprob: -6.300174236297607
    7. 's' → logprob: -6.675174236297607
    8. 'w' → logprob: -7.925174236297607
    9. 'x' → logprob: -8.30017375946045
    10. 'line' → logprob: -8.67517375946045

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012623718939721584
    2. '=' → logprob: -4.3876237869262695
    3. ',' → logprob: -9.26262378692627
    4. ' ' → logprob: -11.13762378692627
    5. ' ,' → logprob: -13.01262378692627
    6. ')' → logprob: -14.01262378692627
    7. '    ' → logprob: -15.26262378692627
    8. ' =
' → logprob: -15.26262378692627
    9. '   ' → logprob: -15.51262378692627
    10. '  ' → logprob: -16.387622833251953

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.010631667450070381
    2. 'map' → logprob: -4.635631561279297
    3. ' line' → logprob: -7.135631561279297
    4. ' [' → logprob: -10.510631561279297
    5. ' list' → logprob: -11.010631561279297
    6. 'line' → logprob: -11.135631561279297
    7. '[' → logprob: -11.260631561279297
    8. ' ' → logprob: -13.510631561279297
    9. '[line' → logprob: -13.635631561279297
    10. '   ' → logprob: -13.760631561279297

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1648145616054535
    2. '(' → logprob: -1.9148145914077759
    3. '(str' → logprob: -5.414814472198486
    4. '(lambda' → logprob: -9.164814949035645
    5. '(input' → logprob: -11.664814949035645
    6. '(
' → logprob: -12.039814949035645
    7. 'int' → logprob: -12.789814949035645
    8. '(list' → logprob: -13.664814949035645
    9. '()' → logprob: -13.914814949035645
    10. '<int' → logprob: -14.164814949035645

Token 27: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.17172139883041382
    2. ',' → logprob: -2.2967214584350586
    3. ')' → logprob: -3.7967214584350586
    4. ',line' → logprob: -3.9217214584350586
    5. ' line' → logprob: -4.421721458435059
    6. '(' → logprob: -6.546721458435059
    7. 'line' → logprob: -6.921721458435059
    8. ' ,' → logprob: -9.046721458435059
    9. '   ' → logprob: -9.421721458435059
    10. '	line' → logprob: -9.671721458435059

Token 28: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.22560642659664154
    2. 'line' → logprob: -1.6006064414978027
    3. '	line' → logprob: -9.600605964660645
    4. ')' → logprob: -9.850605964660645
    5. '(line' → logprob: -10.350605964660645
    6. '[line' → logprob: -11.225605964660645
    7. '#line' → logprob: -11.725605964660645
    8. '=line' → logprob: -11.850605964660645
    9. '   ' → logprob: -12.475605964660645
    10. ',line' → logprob: -12.725605964660645

Token 29: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2859235405921936
    2. '.split' → logprob: -1.4109234809875488
    3. '.strip' → logprob: -5.660923480987549
    4. '().' → logprob: -7.035923480987549
    5. ' .' → logprob: -8.660923957824707
    6. '.rstrip' → logprob: -9.410923957824707
    7. ')' → logprob: -9.785923957824707
    8. '.readline' → logprob: -9.910923957824707
    9. ').' → logprob: -10.660923957824707
    10. '   ' → logprob: -11.910923957824707

Token 30: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08102265745401382
    2. '())' → logprob: -2.5810227394104004
    3. '()' → logprob: -6.3310227394104
    4. '(' → logprob: -8.706022262573242
    5. '(','' → logprob: -9.581022262573242
    6. '()))' → logprob: -9.706022262573242
    7. ')' → logprob: -10.706022262573242
    8. '("' → logprob: -11.206022262573242
    9. '())
' → logprob: -12.706022262573242
    10. '(',' → logprob: -12.831022262573242

Token 31: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3076794147491455
    2. '
' → logprob: -1.6826794147491455
    3. ')' → logprob: -2.3076794147491455
    4. ' ' → logprob: -2.3076794147491455
    5. ':' → logprob: -2.5576794147491455
    6. ' 
' → logprob: -3.0576794147491455
    7. '<|end|>' → logprob: -3.1826794147491455
    8. '[' → logprob: -3.3076794147491455
    9. '\' → logprob: -3.8076794147491455
    10. '   ' → logprob: -4.307679176330566

Token 32: ' tar' (ID: 7057)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9082601070404053
    2. 'graph' → logprob: -2.4082601070404053
    3. ' graph' → logprob: -2.5332601070404053
    4. 'matrix' → logprob: -2.9082601070404053
    5. ' matrix' → logprob: -3.1582601070404053
    6. '[' → logprob: -3.1582601070404053
    7. 'a' → logprob: -3.4082601070404053
    8. 'dp' → logprob: -3.5332601070404053
    9. ' 
' → logprob: -3.6582601070404053
    10. 'd' → logprob: -3.6582601070404053

Token 33: 'o' (ID: 78)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5235178470611572
    2. 'gets' → logprob: -0.8985178470611572
    3. '	get' → logprob: -9.273517608642578
    4. 'gr' → logprob: -9.648517608642578
    5. 'g' → logprob: -10.398517608642578
    6. 'GET' → logprob: -10.898517608642578
    7. '	' → logprob: -10.898517608642578
    8. '``' → logprob: -11.023517608642578
    9. '```' → logprob: -11.148517608642578
    10. 'Get' → logprob: -11.398517608642578

Token 34: ' =' (ID: 314)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.1331672668457031
    2. ' =' → logprob: -1.7581672668457031
    3. '_' → logprob: -2.258167266845703
    4. '_count' → logprob: -2.383167266845703
    5. 's' → logprob: -3.133167266845703
    6. '_list' → logprob: -3.258167266845703
    7. '_m' → logprob: -4.258167266845703
    8. '_hand' → logprob: -4.258167266845703
    9. '_counts' → logprob: -4.383167266845703
    10. '_sum' → logprob: -4.758167266845703

Token 35: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4302843511104584
    2. '[' → logprob: -1.9302843809127808
    3. ' list' → logprob: -2.930284261703491
    4. ' []' → logprob: -3.430284261703491
    5. 'list' → logprob: -3.430284261703491
    6. '[]' → logprob: -3.555284261703491
    7. '[n' → logprob: -4.18028450012207
    8. '[list' → logprob: -4.30528450012207
    9. '[input' → logprob: -5.43028450012207
    10. '0' → logprob: -5.55528450012207

Token 36: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3311389088630676
    2. ' for' → logprob: -2.206138849258423
    3. '   ' → logprob: -2.456138849258423
    4. '<|end|>' → logprob: -2.831138849258423
    5. 'while' → logprob: -4.956139087677002
    6. '[' → logprob: -5.206139087677002
    7. '    
' → logprob: -5.831139087677002
    8. '\' → logprob: -6.581139087677002
    9. ' 
' → logprob: -6.831139087677002
    10. '[]' → logprob: -6.831139087677002

Token 37: ' han' (ID: 6648)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47103893756866455
    2. '   ' → logprob: -1.7210389375686646
    3. ' for' → logprob: -1.8460389375686646
    4. '[' → logprob: -3.846038818359375
    5. 't' → logprob: -5.346038818359375
    6. ' ' → logprob: -6.346038818359375
    7. '    ' → logprob: -6.471038818359375
    8. 'while' → logprob: -6.471038818359375
    9. '    
' → logprob: -6.846038818359375
    10. 'tar' → logprob: -7.346038818359375

Token 38: 'ako' (ID: 5938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.71266770362854
    2. 'ako' → logprob: -0.71266770362854
    3. 'ak' → logprob: -4.837667465209961
    4. 'd' → logprob: -5.587667465209961
    5. 'ami' → logprob: -6.587667465209961
    6. 'as' → logprob: -6.962667465209961
    7. 'k' → logprob: -7.337667465209961
    8. '```' → logprob: -7.337667465209961
    9. 's' → logprob: -7.462667465209961
    10. 'aku' → logprob: -7.712667465209961

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0809088721871376
    2. '=' → logprob: -2.58090877532959
    3. '.append' → logprob: -6.33090877532959
    4. '=[]' → logprob: -9.33090877532959
    5. '[:]' → logprob: -10.33090877532959
    6. ' ' → logprob: -10.70590877532959
    7. '.' → logprob: -10.95590877532959
    8. '.extend' → logprob: -10.95590877532959
    9. '   ' → logprob: -11.83090877532959
    10. ' +=' → logprob: -11.95590877532959

Token 40: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4747907817363739
    2. ' []' → logprob: -0.9747908115386963
    3. ' ' → logprob: -7.599790573120117
    4. '[]}' → logprob: -9.849790573120117
    5. '[]
' → logprob: -10.224790573120117
    6. '[' → logprob: -10.224790573120117
    7. ' []
' → logprob: -11.224790573120117
    8. '=[]' → logprob: -11.349790573120117
    9. '[]>' → logprob: -11.349790573120117
    10. '<|end|>' → logprob: -11.974790573120117

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31950482726097107
    2. 'for' → logprob: -1.8195048570632935
    3. ' for' → logprob: -2.944504737854004
    4. '    
' → logprob: -3.944504737854004
    5. '<|end|>' → logprob: -4.194504737854004
    6. '\n' → logprob: -5.194504737854004
    7. '[' → logprob: -5.944504737854004
    8. 'while' → logprob: -6.194504737854004
    9. '  
' → logprob: -6.194504737854004
    10. '\' → logprob: -6.319504737854004

Token 42: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5500497817993164
    2. '   ' → logprob: -1.8000497817993164
    3. ' for' → logprob: -1.8000497817993164
    4. '\n' → logprob: -3.9250497817993164
    5. '    
' → logprob: -4.175049781799316
    6. 'n' → logprob: -4.425049781799316
    7. '<|end|>' → logprob: -4.550049781799316
    8. '\' → logprob: -5.050049781799316
    9. ' ' → logprob: -5.300049781799316
    10. '[' → logprob: -5.300049781799316

Token 43: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.798004150390625
    2. ' _' → logprob: -1.048004150390625
    3. ' i' → logprob: -1.673004150390625
    4. ' ' → logprob: -4.548004150390625
    5. 'i' → logprob: -7.173004150390625
    6. '_i' → logprob: -10.173004150390625
    7. ' range' → logprob: -10.673004150390625
    8. ' in' → logprob: -11.923004150390625
    9. ' ' → logprob: -12.048004150390625
    10. ' I' → logprob: -12.173004150390625

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004361879080533981
    2. 'in' → logprob: -5.629362106323242
    3. ' ' → logprob: -7.254362106323242
    4. 'range' → logprob: -10.629362106323242
    5. '<|end|>' → logprob: -11.504362106323242
    6. 'n' → logprob: -11.754362106323242
    7. '  ' → logprob: -12.129362106323242
    8. ' range' → logprob: -13.504362106323242
    9. ' _' → logprob: -13.629362106323242
    10. '	in' → logprob: -14.129362106323242

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005948237143456936
    2. ' range' → logprob: -5.130948066711426
    3. 'ran' → logprob: -12.130948066711426
    4. '	range' → logprob: -12.880948066711426
    5. 'ange' → logprob: -13.005948066711426
    6. '(range' → logprob: -13.005948066711426
    7. 'rang' → logprob: -13.630948066711426
    8. 't' → logprob: -13.880948066711426
    9. ' ' → logprob: -14.005948066711426
    10. ')' → logprob: -14.255948066711426

Token 46: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010058973915874958
    2. '(' → logprob: -5.260058879852295
    3. '(m' → logprob: -5.760058879852295
    4. ' n' → logprob: -6.885058879852295
    5. ' (' → logprob: -7.635058879852295
    6. 'n' → logprob: -9.260059356689453
    7. ' m' → logprob: -10.010059356689453
    8. 'm' → logprob: -11.260059356689453
    9. ' ' → logprob: -13.635059356689453
    10. '   ' → logprob: -14.635059356689453

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001675302512012422
    2. ')' → logprob: -6.501675128936768
    3. ' ):' → logprob: -9.376675605773926
    4. '):
' → logprob: -10.251675605773926
    5. ':' → logprob: -10.501675605773926
    6. '   ' → logprob: -11.126675605773926
    7. '+' → logprob: -12.876675605773926
    8. ',' → logprob: -13.501675605773926
    9. '-' → logprob: -13.751675605773926
    10. ' )' → logprob: -13.876675605773926

Token 48: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2232370376586914
    2. '       ' → logprob: -1.7232370376586914
    3. 't' → logprob: -4.473237037658691
    4. '<|end|>' → logprob: -5.598237037658691
    5. '    ' → logprob: -6.723237037658691
    6. ' ' → logprob: -6.848237037658691
    7. '	t' → logprob: -6.973237037658691
    8. ' tar' → logprob: -6.973237037658691
    9. 'tar' → logprob: -7.723237037658691
    10. '  ' → logprob: -7.973237037658691

Token 49: ' tar' (ID: 7057)
  Prédit: ' tar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tar' → logprob: -0.17888452112674713
    2. 't' → logprob: -1.928884506225586
    3. 'tar' (adapté à ' tar') → logprob: -4.803884506225586
    4. '   ' → logprob: -5.928884506225586
    5. ' line' → logprob: -6.428884506225586
    6. 'a' → logprob: -6.428884506225586
    7. 's' → logprob: -6.928884506225586
    8. ' t' → logprob: -7.178884506225586
    9. ' data' → logprob: -7.803884506225586
    10. 'x' → logprob: -8.053884506225586

Token 50: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -2.5776860184123507e-06
    2. 'ou' → logprob: -14.50000286102295
    3. 'о' → logprob: -14.62500286102295
    4. 'oi' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.00000286102295
    6. '```' → logprob: -15.93750286102295
    7. '  ' → logprob: -16.000001907348633
    8. 'ow' → logprob: -16.437501907348633
    9. 'ο' → logprob: -16.875001907348633
    10. ' o' → logprob: -17.312501907348633

Token 51: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012524607591331005
    2. '.' → logprob: -4.387524604797363
    3. '.extend' → logprob: -12.262524604797363
    4. ' .' → logprob: -12.637524604797363
    5. 'append' → logprob: -12.887524604797363
    6. '.ap' → logprob: -13.512524604797363
    7. ' +=' → logprob: -14.137524604797363
    8. '.app' → logprob: -14.262524604797363
    9. '+=' → logprob: -14.387524604797363
    10. '_append' → logprob: -14.887524604797363

Token 52: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.9330378770828247
    2. '(tuple' → logprob: -1.0580378770828247
    3. '(int' → logprob: -1.5580378770828247
    4. '(' → logprob: -3.058037757873535
    5. '(input' → logprob: -6.308037757873535
    6. '(map' → logprob: -10.058037757873535
    7. '(sum' → logprob: -10.683037757873535
    8. '(float' → logprob: -10.808037757873535
    9. ' (' → logprob: -11.308037757873535
    10. '(
' → logprob: -11.308037757873535

Token 53: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031986311078071594
    2. '(' → logprob: -5.753198623657227
    3. 'input' → logprob: -11.753198623657227
    4. ')' → logprob: -12.253198623657227
    5. '(
' → logprob: -13.003198623657227
    6. '(

' → logprob: -13.378198623657227
    7. ' input' → logprob: -13.628198623657227
    8. ' (' → logprob: -13.628198623657227
    9. ' ' → logprob: -14.378198623657227
    10. '()' → logprob: -14.503198623657227

Token 54: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3149246871471405
    2. '())' → logprob: -1.314924716949463
    3. '()' → logprob: -6.814924716949463
    4. '().' → logprob: -7.939924716949463
    5. '()))
' → logprob: -9.189924240112305
    6. '(' → logprob: -10.064924240112305
    7. '())
' → logprob: -11.064924240112305
    8. '()))

' → logprob: -11.064924240112305
    9. '())))' → logprob: -11.689924240112305
    10. '()));' → logprob: -12.314924240112305

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8024082183837891
    2. '
' → logprob: -1.927408218383789
    3. '<|end|>' → logprob: -2.052408218383789
    4. ' 
' → logprob: -2.802408218383789
    5. '    
' → logprob: -2.802408218383789
    6. ' for' → logprob: -3.177408218383789
    7. ' ' → logprob: -3.302408218383789
    8. '  
' → logprob: -3.302408218383789
    9. 'for' → logprob: -4.052408218383789
    10. '   
' → logprob: -5.177408218383789

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.130480408668518
    2. '
' → logprob: -1.380480408668518
    3. ' 
' → logprob: -1.880480408668518
    4. '   ' → logprob: -2.6304802894592285
    5. 'for' (adapté à ' for') → logprob: -2.8804802894592285
    6. '  
' → logprob: -3.1304802894592285
    7. '\n' → logprob: -3.1304802894592285
    8. '    
' → logprob: -3.8804802894592285
    9. ' ' → logprob: -4.1304802894592285
    10. '<|end|>' → logprob: -4.3804802894592285

Token 57: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1270887404680252
    2. '_' → logprob: -2.127088785171509
    3. ' range' → logprob: -9.50208854675293
    4. ' ' → logprob: -9.50208854675293
    5. ' in' → logprob: -11.75208854675293
    6. ' ' → logprob: -13.50208854675293
    7. 'range' → logprob: -14.25208854675293
    8. '_range' → logprob: -14.25208854675293
    9. ' i' → logprob: -14.87708854675293
    10. '  ' → logprob: -17.00208854675293

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1833665519952774
    2. ' _' → logprob: -2.933366537094116
    3. ' ' → logprob: -3.183366537094116
    4. 'in' → logprob: -3.308366537094116
    5. '_' → logprob: -3.933366537094116
    6. 'range' → logprob: -5.183366775512695
    7. ' range' → logprob: -5.433366775512695
    8. 'm' → logprob: -6.308366775512695
    9. ' m' → logprob: -6.433366775512695
    10. ' n' → logprob: -7.058366775512695

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25330036878585815
    2. ' range' → logprob: -1.503300428390503
    3. 'm' → logprob: -6.628300189971924
    4. '(range' → logprob: -10.378300666809082
    5. ' m' → logprob: -11.128300666809082
    6. '	range' → logprob: -14.003300666809082
    7. ' ' → logprob: -14.378300666809082
    8. ' xrange' → logprob: -15.378300666809082
    9. 'ran' → logprob: -16.003299713134766
    10. 'rang' → logprob: -16.003299713134766

Token 60: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.000855001388117671
    2. '(' → logprob: -7.250854969024658
    3. ' (' → logprob: -8.875855445861816
    4. ' m' → logprob: -12.375855445861816
    5. 'm' → logprob: -13.875855445861816
    6. '(n' → logprob: -16.1258544921875
    7. ' ' → logprob: -18.0008544921875
    8. '(M' → logprob: -18.2508544921875
    9. '(s' → logprob: -18.2508544921875
    10. '(
' → logprob: -18.3758544921875

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030661222990602255
    2. '):
' → logprob: -6.003066062927246
    3. ')' → logprob: -7.753066062927246
    4. ':' → logprob: -9.003066062927246
    5. '   ' → logprob: -10.628066062927246
    6. ' ):' → logprob: -12.128066062927246
    7. '       ' → logprob: -12.878066062927246
    8. '):
' → logprob: -13.128066062927246
    9. '():' → logprob: -13.378066062927246
    10. '+' → logprob: -14.628066062927246

Token 62: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49567699432373047
    2. 'han' → logprob: -1.1206769943237305
    3. ' han' → logprob: -2.7456769943237305
    4. '       ' → logprob: -9.24567699432373
    5. '   ' → logprob: -9.24567699432373
    6. '    ' → logprob: -9.99567699432373
    7. '    
' → logprob: -9.99567699432373
    8. ' ' → logprob: -10.12067699432373
    9. ' ' → logprob: -10.49567699432373
    10. '```' → logprob: -10.87067699432373

Token 63: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' (adapté à ' han') → logprob: -0.001949344645254314
    2. ' han' → logprob: -6.251949310302734
    3. '   ' → logprob: -11.751949310302734
    4. 'hen' → logprob: -12.626949310302734
    5. ' ' → logprob: -13.626949310302734
    6. 'hana' → logprob: -13.626949310302734
    7. 'h' → logprob: -14.001949310302734
    8. '```' → logprob: -14.126949310302734
    9. 'ha' → logprob: -14.376949310302734
    10. 'Han' → logprob: -14.501949310302734

Token 64: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.0032921400852501392
    2. 'a' → logprob: -6.128292083740234
    3. 'ak' → logprob: -7.003292083740234
    4. '_' → logprob: -9.128292083740234
    5. '.append' → logprob: -10.003292083740234
    6. '   ' → logprob: -11.253292083740234
    7. '```' → logprob: -11.628292083740234
    8. 'akao' → logprob: -12.753292083740234
    9. 'akoa' → logprob: -12.878292083740234
    10. '  ' → logprob: -13.253292083740234

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011236425780225545
    2. '.' → logprob: -9.125112533569336
    3. 'append' → logprob: -13.375112533569336
    4. '.add' → logprob: -14.500112533569336
    5. ').' → logprob: -15.000112533569336
    6. ' .' → logprob: -15.125112533569336
    7. '.extend' → logprob: -15.125112533569336
    8. '.setdefault' → logprob: -15.875112533569336
    9. '.app' → logprob: -16.250112533569336
    10. '.ap' → logprob: -16.375112533569336

Token 66: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.750003814697266
    3. 'int' → logprob: -14.500003814697266
    4. '(in' → logprob: -15.125003814697266
    5. ' (' → logprob: -16.000003814697266
    6. '<int' → logprob: -16.625003814697266
    7. '[int' → logprob: -17.625003814697266
    8. '(i' → logprob: -18.250003814697266
    9. '=int' → logprob: -18.875003814697266
    10. '(input' → logprob: -19.375003814697266

Token 67: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0004020713677164167
    2. '(int' → logprob: -8.000402450561523
    3. '(' → logprob: -9.625402450561523
    4. ' (' → logprob: -15.125402450561523
    5. 'input' → logprob: -16.125402450561523
    6. '(in' → logprob: -16.250402450561523
    7. '(inp' → logprob: -17.125402450561523
    8. '=input' → logprob: -17.250402450561523
    9. '(
' → logprob: -17.375402450561523
    10. '<input' → logprob: -17.625402450561523

Token 68: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.049360718578100204
    2. '())' → logprob: -3.049360752105713
    3. '()))
' → logprob: -8.049360275268555
    4. '()' → logprob: -8.174360275268555
    5. '))' → logprob: -8.924360275268555
    6. '())
' → logprob: -11.424360275268555
    7. '(' → logprob: -11.674360275268555
    8. '()))

' → logprob: -11.924360275268555
    9. ')' → logprob: -12.049360275268555
    10. ' ())' → logprob: -13.299360275268555

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7183730006217957
    2. '
' → logprob: -1.0933730602264404
    3. '    
' → logprob: -2.5933730602264404
    4. 't' → logprob: -3.4683730602264404
    5. 'tar' → logprob: -3.8433730602264404
    6. '<|end|>' → logprob: -4.093372821807861
    7. ' 
' → logprob: -5.093372821807861
    8. '  
' → logprob: -5.218372821807861
    9. 's' → logprob: -6.093372821807861
    10. '   
' → logprob: -6.218372821807861

Token 70: ' sum' (ID: 4215)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13771015405654907
    2. 'tar' → logprob: -2.7627100944519043
    3. '   ' → logprob: -3.3877100944519043
    4. 'i' → logprob: -5.387710094451904
    5. 'result' → logprob: -5.762710094451904
    6. 'count' → logprob: -5.762710094451904
    7. 's' → logprob: -6.012710094451904
    8. 'intersection' → logprob: -6.387710094451904
    9. 'c' → logprob: -6.637710094451904
    10. 'if' → logprob: -6.637710094451904

Token 71: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21342289447784424
    2. 's' → logprob: -2.0884227752685547
    3. '_t' → logprob: -3.0884227752685547
    4. '_s' → logprob: -4.713422775268555
    5. '1' → logprob: -5.338422775268555
    6. '(' → logprob: -5.588422775268555
    7. '_a' → logprob: -6.838422775268555
    8. '_tar' → logprob: -7.463422775268555
    9. '_sum' → logprob: -7.588422775268555
    10. 'T' → logprob: -7.713422775268555

Token 72: 'aro' (ID: 8421)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.8249510526657104
    2. '_' → logprob: -1.1999510526657104
    3. 'aro' → logprob: -2.199951171875
    4. 'ar' → logprob: -2.699951171875
    5. 'a' → logprob: -3.074951171875
    6. '_t' → logprob: -4.449951171875
    7. ' =' → logprob: -4.949951171875
    8. 't' → logprob: -5.199951171875
    9. '_o' → logprob: -5.324951171875
    10. 's' → logprob: -5.824951171875

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13423317670822144
    2. ' +=' → logprob: -2.509233236312866
    3. '=' → logprob: -3.259233236312866
    4. ' ' → logprob: -6.134232997894287
    5. ',' → logprob: -7.009232997894287
    6. ' >' → logprob: -7.634232997894287
    7. '+=' → logprob: -7.634232997894287
    8. '_' → logprob: -8.009233474731445
    9. ' ,' → logprob: -8.259233474731445
    10. '[' → logprob: -8.634233474731445

Token 74: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.40939387679100037
    2. 'sum' → logprob: -1.2843939065933228
    3. '0' → logprob: -2.909393787384033
    4. ' ' → logprob: -5.409393787384033
    5. ' max' → logprob: -9.909394264221191
    6. '   ' → logprob: -10.409394264221191
    7. 'max' → logprob: -11.409394264221191
    8. '(sum' → logprob: -11.534394264221191
    9. '	sum' → logprob: -11.659394264221191
    10. '  ' → logprob: -12.034394264221191

Token 75: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.07889506965875626
    2. '(' → logprob: -2.578895092010498
    3. '(s' → logprob: -13.70389461517334
    4. '(
' → logprob: -13.70389461517334
    5. ' (' → logprob: -14.32889461517334
    6. '()' → logprob: -14.57889461517334
    7. '((' → logprob: -15.32889461517334
    8. '(sum' → logprob: -15.32889461517334
    9. 't' → logprob: -15.45389461517334
    10. '(`' → logprob: -15.57889461517334

Token 76: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.006143630016595125
    2. '_' → logprob: -6.631143569946289
    3. 'o' → logprob: -6.631143569946289
    4. 't' → logprob: -6.756143569946289
    5. 'ar' → logprob: -7.006143569946289
    6. 'a' → logprob: -7.631143569946289
    7. '_t' → logprob: -7.881143569946289
    8. ')' → logprob: -8.381143569946289
    9. 'аро' → logprob: -9.756143569946289
    10. 'tar' → logprob: -10.256143569946289

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03261725232005119
    2. ' )' → logprob: -4.407617092132568
    3. '+' → logprob: -4.907617092132568
    4. ' +' → logprob: -5.032617092132568
    5. '>' → logprob: -6.407617092132568
    6. ' >' → logprob: -6.532617092132568
    7. ' ==' → logprob: -6.907617092132568
    8. '==' → logprob: -7.282617092132568
    9. '   ' → logprob: -7.782617092132568
    10. ' ' → logprob: -9.032617568969727

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04001995921134949
    2. '    
' → logprob: -4.540019989013672
    3. '+' → logprob: -4.665019989013672
    4. 'sum' → logprob: -5.165019989013672
    5. '
' → logprob: -5.415019989013672
    6. '<|end|>' → logprob: -6.040019989013672
    7. ' 
' → logprob: -6.290019989013672
    8. ' ' → logprob: -6.665019989013672
    9. ' sum' → logprob: -7.290019989013672
    10. ' +' → logprob: -7.915019989013672

Token 79: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.0022918060421943665
    2. '   ' → logprob: -7.502291679382324
    3. 'diff' → logprob: -8.127291679382324
    4. 'max' → logprob: -8.502291679382324
    5. 'prefix' → logprob: -8.627291679382324
    6. 'for' → logprob: -8.877291679382324
    7. 'count' → logprob: -8.877291679382324
    8. 'dp' → logprob: -9.127291679382324
    9. 'total' → logprob: -9.502291679382324
    10. 'print' → logprob: -9.627291679382324

Token 80: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.16087165474891663
    2. '_' → logprob: -1.9108716249465942
    3. '_m' → logprob: -7.410871505737305
    4. ' _' → logprob: -10.910871505737305
    5. '_
' → logprob: -13.160871505737305
    6. '_hand' → logprob: -13.285871505737305
    7. '_t' → logprob: -13.410871505737305
    8. ')_' → logprob: -13.410871505737305
    9. '_=' → logprob: -13.410871505737305
    10. '__' → logprob: -13.785871505737305

Token 81: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0060510896146297455
    2. 'ana' → logprob: -5.631051063537598
    3. 'a' → logprob: -6.881051063537598
    4. 'anayo' → logprob: -7.506051063537598
    5. 'anak' → logprob: -8.131051063537598
    6. 'anato' → logprob: -8.756051063537598
    7. '   ' → logprob: -9.006051063537598
    8. 'anao' → logprob: -9.381051063537598
    9. '    ' → logprob: -10.756051063537598
    10. '_an' → logprob: -10.756051063537598

Token 82: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.0024096618872135878
    2. 'a' → logprob: -6.7524094581604
    3. 'ak' → logprob: -6.7524094581604
    4. '   ' → logprob: -11.377409934997559
    5. 'ko' → logprob: -11.377409934997559
    6. '```' → logprob: -11.752409934997559
    7. 'akoa' → logprob: -12.002409934997559
    8. 'oko' → logprob: -12.377409934997559
    9. 'ако' → logprob: -12.877409934997559
    10. '_' → logprob: -13.002409934997559

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896378427743912
    2. '=' → logprob: -2.463963747024536
    3. ' ' → logprob: -11.338963508605957
    4. '<|end|>' → logprob: -12.088963508605957
    5. ',' → logprob: -13.088963508605957
    6. '  ' → logprob: -13.588963508605957
    7. ')' → logprob: -14.088963508605957
    8. ' +=' → logprob: -14.713963508605957
    9. '_' → logprob: -14.963963508605957
    10. '.' → logprob: -15.088963508605957

Token 84: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4288003444671631
    2. ' sum' → logprob: -1.053800344467163
    3. '0' → logprob: -9.678800582885742
    4. ' ' → logprob: -10.928800582885742
    5. '   ' → logprob: -12.053800582885742
    6. '(sum' → logprob: -12.428800582885742
    7. '	sum' → logprob: -12.678800582885742
    8. '  ' → logprob: -12.928800582885742
    9. '=sum' → logprob: -13.678800582885742
    10. 's' → logprob: -14.053800582885742

Token 85: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.002602291526272893
    2. '(' → logprob: -6.0026021003723145
    3. ' (' → logprob: -9.877602577209473
    4. 'han' → logprob: -10.127602577209473
    5. '(hand' → logprob: -11.127602577209473
    6. ' han' → logprob: -11.752602577209473
    7. '_' → logprob: -12.502602577209473
    8. '(
' → logprob: -12.877602577209473
    9. ' ' → logprob: -13.002602577209473
    10. '(sum' → logprob: -14.377602577209473

Token 86: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0094886664301157
    2. 'ako' → logprob: -5.009488582611084
    3. 'ano' → logprob: -7.759488582611084
    4. '_' → logprob: -8.009489059448242
    5. 'anko' → logprob: -8.009489059448242
    6. '   ' → logprob: -8.259489059448242
    7. 'a' → logprob: -8.259489059448242
    8. 'ak' → logprob: -8.384489059448242
    9. 'ko' → logprob: -8.884489059448242
    10. ')' → logprob: -9.259489059448242

Token 87: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.0002908910100813955
    2. 'ak' → logprob: -8.250290870666504
    3. 'a' → logprob: -10.625290870666504
    4. '```' → logprob: -13.625290870666504
    5. 'ако' → logprob: -14.000290870666504
    6. '   ' → logprob: -14.000290870666504
    7. 'akoa' → logprob: -14.250290870666504
    8. '_' → logprob: -14.625290870666504
    9. 'ko' → logprob: -15.000290870666504
    10. 'oko' → logprob: -15.750290870666504

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00881215836852789
    2. '   ' → logprob: -5.008811950683594
    3. '
' → logprob: -6.633811950683594
    4. ')
' → logprob: -7.883811950683594
    5. ' )' → logprob: -8.383811950683594
    6. '<|end|>' → logprob: -10.508811950683594
    7. ' if' → logprob: -11.008811950683594
    8. 'if' → logprob: -11.258811950683594
    9. '+' → logprob: -11.508811950683594
    10. ' ' → logprob: -11.508811950683594

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0989237129688263
    2. ' if' → logprob: -3.598923683166504
    3. 'if' → logprob: -4.348923683166504
    4. 'i' → logprob: -4.598923683166504
    5. ' i' → logprob: -5.098923683166504
    6. '    
' → logprob: -5.223923683166504
    7. '    ' → logprob: -5.348923683166504
    8. ' while' → logprob: -5.973923683166504
    9. ' 
' → logprob: -6.098923683166504
    10. '
' → logprob: -6.098923683166504

Token 90: ' found' (ID: 2491)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2697775959968567
    2. 'while' → logprob: -2.769777536392212
    3. 'i' → logprob: -3.269777536392212
    4. 'dp' → logprob: -3.394777536392212
    5. 'diff' → logprob: -3.519777536392212
    6. '   ' → logprob: -3.894777536392212
    7. 'idx' → logprob: -4.894777774810791
    8. 'd' → logprob: -5.269777774810791
    9. 'for' → logprob: -5.269777774810791
    10. 'answer' → logprob: -5.269777774810791

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3348938524723053
    2. '_' → logprob: -1.334893822669983
    3. '=' → logprob: -4.209893703460693
    4. ' ' → logprob: -5.334893703460693
    5. ' _' → logprob: -7.459893703460693
    6. '_space' → logprob: -8.334894180297852
    7. '_=' → logprob: -8.959894180297852
    8. '(' → logprob: -8.959894180297852
    9. ',' → logprob: -9.209894180297852
    10. '<|end|>' → logprob: -9.584894180297852

Token 92: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5763508677482605
    2. 'False' → logprob: -0.8263508677482605
    3. ' True' → logprob: -8.576351165771484
    4. 'True' → logprob: -9.201351165771484
    5. '0' → logprob: -9.951351165771484
    6. ' ' → logprob: -10.201351165771484
    7. '-' → logprob: -11.326351165771484
    8. '   ' → logprob: -11.701351165771484
    9. '(False' → logprob: -12.826351165771484
    10. ' -' → logprob: -13.076351165771484

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1422695815563202
    2. ' 
' → logprob: -3.2672696113586426
    3. '   ' → logprob: -3.5172696113586426
    4. '<|end|>' → logprob: -3.6422696113586426
    5. '    
' → logprob: -4.642269611358643
    6. '\n' → logprob: -4.642269611358643
    7. '  
' → logprob: -4.767269611358643
    8. ' ' → logprob: -6.392269611358643
    9. 'for' → logprob: -6.392269611358643
    10. ' for' → logprob: -6.892269611358643

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5506039261817932
    2. ' 
' → logprob: -1.8006038665771484
    3. '   ' → logprob: -2.6756038665771484
    4. ' for' → logprob: -3.1756038665771484
    5. 'for' → logprob: -3.3006038665771484
    6. '\n' → logprob: -3.3006038665771484
    7. '    
' → logprob: -3.4256038665771484
    8. '  
' → logprob: -4.175603866577148
    9. '<|end|>' → logprob: -4.800603866577148
    10. '\' → logprob: -5.425603866577148

Token 95: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3063845634460449
    2. ' for' → logprob: -1.431384563446045
    3. '   ' → logprob: -3.931384563446045
    4. 'if' → logprob: -6.806384563446045
    5. ' 
' → logprob: -6.806384563446045
    6. '```' → logprob: -6.931384563446045
    7. '    
' → logprob: -7.556384563446045
    8. 'i' → logprob: -7.681384563446045
    9. '    ' → logprob: -8.181385040283203
    10. '\n' → logprob: -8.431385040283203

Token 96: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2364581674337387
    2. '_diff' → logprob: -1.6114581823349
    3. '_difference' → logprob: -5.4864583015441895
    4. '_len' → logprob: -6.9864583015441895
    5. '_gap' → logprob: -6.9864583015441895
    6. ' _' → logprob: -7.1114583015441895
    7. '_swap' → logprob: -7.3614583015441895
    8. '_length' → logprob: -7.3614583015441895
    9. '_sum' → logprob: -7.6114583015441895
    10. '_d' → logprob: -7.9864583015441895

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.67722088098526
    2. '=' → logprob: -0.92722088098526
    3. '_' → logprob: -2.5522208213806152
    4. '_diff' → logprob: -4.927220821380615
    5. 's' → logprob: -5.302220821380615
    6. 'diff' → logprob: -6.052220821380615
    7. '_=' → logprob: -6.427220821380615
    8. ' ' → logprob: -7.302220821380615
    9. '_difference' → logprob: -8.052221298217773
    10. ',' → logprob: -8.302221298217773

Token 98: ' None' (ID: 4662)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6572262644767761
    2. 'float' → logprob: -1.782226324081421
    3. '10' → logprob: -2.657226324081421
    4. ' sum' → logprob: -2.782226324081421
    5. 'sum' → logprob: -2.782226324081421
    6. ' max' → logprob: -3.157226324081421
    7. 'abs' → logprob: -3.657226324081421
    8. ' abs' → logprob: -3.907226324081421
    9. 'max' → logprob: -4.532226085662842
    10. ' ' → logprob: -4.532226085662842

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8631497621536255
    2. '   ' → logprob: -1.1131497621536255
    3. '<|end|>' → logprob: -1.4881497621536255
    4. ' ' → logprob: -4.863149642944336
    5. '    
' → logprob: -5.363149642944336
    6. ' 
' → logprob: -5.738149642944336
    7. '\n' → logprob: -6.113149642944336
    8. ':' → logprob: -6.363149642944336
    9. '  
' → logprob: -6.988149642944336
    10. '  ' → logprob: -7.488149642944336

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09431707113981247
    2. '<|end|>' → logprob: -3.5943169593811035
    3. ' ' → logprob: -3.8443169593811035
    4. '    
' → logprob: -4.3443169593811035
    5. '
' → logprob: -4.3443169593811035
    6. ' 
' → logprob: -5.2193169593811035
    7. '    ' → logprob: -5.5943169593811035
    8. '  
' → logprob: -6.4693169593811035
    9. '  ' → logprob: -6.8443169593811035
    10. '\n' → logprob: -7.4693169593811035

Token 101: ' result' (ID: 1534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037632737308740616
    2. ' for' → logprob: -3.787632703781128
    3. '   ' → logprob: -4.287632942199707
    4. 'i' → logprob: -8.037632942199707
    5. 'if' → logprob: -8.662632942199707
    6. ' i' → logprob: -11.412632942199707
    7. 'while' → logprob: -12.037632942199707
    8. '```' → logprob: -12.287632942199707
    9. ' ' → logprob: -12.537632942199707
    10. ' if' → logprob: -12.787632942199707

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024808133020997047
    2. '=' → logprob: -3.774808168411255
    3. '_' → logprob: -6.649807929992676
    4. ' ' → logprob: -8.899807929992676
    5. 's' → logprob: -10.649807929992676
    6. ':' → logprob: -11.149807929992676
    7. ' _' → logprob: -11.274807929992676
    8. ',' → logprob: -11.399807929992676
    9. ' =
' → logprob: -11.399807929992676
    10. '[' → logprob: -11.774807929992676

Token 103: ' (-' (ID: 21382)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6266688108444214
    2. ' []' → logprob: -1.0016688108444214
    3. ' None' → logprob: -2.876668930053711
    4. 'None' → logprob: -3.876668930053711
    5. ' ()' → logprob: -5.251668930053711
    6. '()' → logprob: -5.251668930053711
    7. '""' → logprob: -5.626668930053711
    8. ' ""' → logprob: -6.751668930053711
    9. ' ' → logprob: -6.876668930053711
    10. '(' → logprob: -6.876668930053711

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. '2' → logprob: -11.625025749206543
    3. '100' → logprob: -12.375025749206543
    4. '10' → logprob: -12.875025749206543
    5. 'n' → logprob: -13.250025749206543
    6. '-' → logprob: -13.500025749206543
    7. '0' → logprob: -13.625025749206543
    8. '999' → logprob: -13.750025749206543
    9. ' ' → logprob: -14.125025749206543
    10. ')' → logprob: -14.125025749206543

Token 105: ',)
' (ID: 129004)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033328952267766
    2. ')' → logprob: -6.37833309173584
    3. '1' → logprob: -6.75333309173584
    4. ',-' → logprob: -8.00333309173584
    5. ',)' → logprob: -9.87833309173584
    6. ' ,' → logprob: -10.50333309173584
    7. ',
' → logprob: -10.87833309173584
    8. ',None' → logprob: -11.50333309173584
    9. '<|end|>' → logprob: -11.87833309173584
    10. '<|end|>' → logprob: -13.12833309173584

Token 106: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4700806140899658
    2. '
' → logprob: -1.5950806140899658
    3. ' for' → logprob: -2.220080614089966
    4. '   ' → logprob: -2.970080614089966
    5. 'while' → logprob: -5.595080375671387
    6. ' 
' → logprob: -6.345080375671387
    7. '    
' → logprob: -6.470080375671387
    8. ')' → logprob: -6.595080375671387
    9. '  
' → logprob: -7.470080375671387
    10. '<|end|>' → logprob: -7.470080375671387

Token 107: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.933932900428772
    2. 'for' (adapté à ' for') → logprob: -0.933932900428772
    3. ' for' → logprob: -1.933932900428772
    4. '   ' → logprob: -3.0589327812194824
    5. '\n' → logprob: -5.058932781219482
    6. ' 
' → logprob: -5.183932781219482
    7. '    
' → logprob: -5.558932781219482
    8. '<|end|>' → logprob: -6.308932781219482
    9. '  
' → logprob: -6.683932781219482
    10. '\' → logprob: -7.558932781219482

Token 108: ' t' (ID: 260)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0328514464199543
    2. 'i' → logprob: -3.782851457595825
    3. ' t' → logprob: -4.782851219177246
    4. ' tar' → logprob: -8.157851219177246
    5. 't' → logprob: -8.282851219177246
    6. ' x' → logprob: -8.782851219177246
    7. ' a' → logprob: -8.782851219177246
    8. ' ' → logprob: -9.157851219177246
    9. '	i' → logprob: -10.282851219177246
    10. '   ' → logprob: -10.345351219177246

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38830235600471497
    2. '_i' → logprob: -2.2633023262023926
    3. '_index' → logprob: -2.3883023262023926
    4. 'i' → logprob: -2.6383023262023926
    5. '_idx' → logprob: -3.1383023262023926
    6. 'ar' → logprob: -5.888302326202393
    7. 'aro' → logprob: -6.013302326202393
    8. ' i' → logprob: -6.263302326202393
    9. 'in' → logprob: -6.763302326202393
    10. '_' → logprob: -7.013302326202393

Token 110: ' tar' (ID: 7057)
  Prédit: ' tar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tar' → logprob: -0.56471186876297
    2. ' range' → logprob: -1.1897118091583252
    3. 't' → logprob: -2.939711809158325
    4. 'range' → logprob: -3.189711809158325
    5. 'tar' → logprob: -3.439711809158325
    6. ' ' → logprob: -8.564711570739746
    7. 'r' → logprob: -9.189711570739746
    8. ' t' → logprob: -9.627211570739746
    9. '   ' → logprob: -9.877211570739746
    10. '  ' → logprob: -10.064711570739746

Token 111: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0005603004829026759
    2. 'in' → logprob: -8.125560760498047
    3. ' in' → logprob: -10.125560760498047
    4. 'on' → logprob: -10.250560760498047
    5. 'jo' → logprob: -10.250560760498047
    6. 'ge' → logprob: -11.125560760498047
    7. 'an' → logprob: -11.250560760498047
    8. 'ange' → logprob: -11.250560760498047
    9. 't' → logprob: -11.250560760498047
    10. 'о' → logprob: -11.375560760498047

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010047047398984432
    2. ' in' → logprob: -7.376004695892334
    3. 'in' → logprob: -8.876005172729492
    4. ':
' → logprob: -10.001005172729492
    5. '   ' → logprob: -10.126005172729492
    6. '[' → logprob: -10.251005172729492
    7. ',' → logprob: -10.376005172729492
    8. ' :' → logprob: -10.501005172729492
    9. ')' → logprob: -11.126005172729492
    10. '):' → logprob: -11.501005172729492

Token 113: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8655071258544922
    2. '       ' → logprob: -1.3655071258544922
    3. '   ' → logprob: -2.240507125854492
    4. ' for' → logprob: -2.615507125854492
    5. '<|end|>' → logprob: -3.115507125854492
    6. ' ' → logprob: -3.240507125854492
    7. '    ' → logprob: -3.490507125854492
    8. ' :' → logprob: -4.990507125854492
    9. ' 
' → logprob: -5.115507125854492
    10. '
' → logprob: -5.990507125854492

Token 114: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7104031443595886
    2. ' for' → logprob: -0.7104031443595886
    3. 'for' (adapté à ' for') → logprob: -4.960402965545654
    4. ' 
' → logprob: -5.085402965545654
    5. '    ' → logprob: -5.835402965545654
    6. '   ' → logprob: -8.210403442382812
    7. '<|end|>' → logprob: -8.710403442382812
    8. '  ' → logprob: -9.460403442382812
    9. '     
' → logprob: -9.585403442382812
    10. '    
' → logprob: -9.710403442382812

Token 115: ' h' (ID: 312)
  Prédit: ' han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' han' → logprob: -0.035671167075634
    2. ' h' → logprob: -3.6606712341308594
    3. 'han' → logprob: -4.910671234130859
    4. 'h' → logprob: -7.285671234130859
    5. ' hans' → logprob: -7.910671234130859
    6. ' ' → logprob: -8.03567123413086
    7. ' hana' → logprob: -8.16067123413086
    8. ' ha' → logprob: -9.53567123413086
    9. '   ' → logprob: -10.03567123413086
    10. ' hen' → logprob: -10.16067123413086

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002315833931788802
    2. 'in' → logprob: -6.127315998077393
    3. ' ' → logprob: -9.252315521240234
    4. '    ' → logprob: -11.377315521240234
    5. '   ' → logprob: -11.877315521240234
    6. '        ' → logprob: -12.627315521240234
    7. '	in' → logprob: -13.002315521240234
    8. '  ' → logprob: -13.252315521240234
    9. 's' → logprob: -13.502315521240234
    10. 'n' → logprob: -13.752315521240234

Token 117: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' → logprob: -0.055043868720531464
    2. ' han' → logprob: -2.930043935775757
    3. ' ' → logprob: -9.430044174194336
    4. '   ' → logprob: -10.180044174194336
    5. 'an' → logprob: -11.305044174194336
    6. '  ' → logprob: -11.430044174194336
    7. 'h' → logprob: -12.930044174194336
    8. 'hen' → logprob: -12.930044174194336
    9. '    ' → logprob: -13.430044174194336
    10. ' hana' → logprob: -13.617544174194336

Token 118: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -4.2987729102605954e-05
    2. 'ko' → logprob: -10.625042915344238
    3. 'ak' → logprob: -11.250042915344238
    4. 'ако' → logprob: -12.750042915344238
    5. '   ' → logprob: -13.500042915344238
    6. 'akoa' → logprob: -14.750042915344238
    7. '```' → logprob: -15.625042915344238
    8. 'oko' → logprob: -15.750042915344238
    9. 'akao' → logprob: -15.750042915344238
    10. ' ako' → logprob: -16.625043869018555

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01306152530014515
    2. ':
' → logprob: -4.8880615234375
    3. '       ' → logprob: -5.5130615234375
    4. '<|end|>' → logprob: -7.3880615234375
    5. '   ' → logprob: -8.6380615234375
    6. ' if' → logprob: -8.7630615234375
    7. '           ' → logprob: -9.2630615234375
    8. ',' → logprob: -9.5130615234375
    9. '<|end|>' → logprob: -10.1380615234375
    10. ' :' → logprob: -10.1380615234375

Token 120: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' new' (ID: 620)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8283053636550903
    2. '               ' → logprob: -0.8283053636550903
    3. ' if' → logprob: -3.078305244445801
    4. '            ' → logprob: -3.578305244445801
    5. '           ' → logprob: -3.953305244445801
    6. '                ' → logprob: -4.203305244445801
    7. ' 
' → logprob: -5.328305244445801
    8. '                
' → logprob: -5.703305244445801
    9. 'if' → logprob: -6.203305244445801
    10. '       ' → logprob: -6.328305244445801

Token 122: '_t' (ID: 838)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0024345240090042353
    2. '_t' → logprob: -6.127434730529785
    3. '_' → logprob: -8.752434730529785
    4. '_s' → logprob: -9.627434730529785
    5. 'sum' → logprob: -10.877434730529785
    6. ' _' → logprob: -12.627434730529785
    7. '   ' → logprob: -14.127434730529785
    8. '_total' → logprob: -14.502434730529785
    9. '__' → logprob: -15.502434730529785
    10. 't' → logprob: -15.502434730529785

Token 123: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.4161229431629181
    2. 'o' → logprob: -1.6661229133605957
    3. '_sum' → logprob: -2.9161229133605957
    4. '_' → logprob: -3.4161229133605957
    5. 'ro' → logprob: -3.5411229133605957
    6. '_ro' → logprob: -4.791122913360596
    7. '_o' → logprob: -4.916122913360596
    8. ' =' → logprob: -5.791122913360596
    9. '_s' → logprob: -5.791122913360596
    10. '=' → logprob: -6.041122913360596

Token 124: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.025627296417951584
    2. '=' → logprob: -4.025627136230469
    3. ' =' → logprob: -5.150627136230469
    4. '_' → logprob: -7.025627136230469
    5. 'sum' → logprob: -7.275627136230469
    6. '=sum' → logprob: -10.650627136230469
    7. '=_' → logprob: -10.775627136230469
    8. '_val' → logprob: -11.775627136230469
    9. ' _' → logprob: -11.775627136230469
    10. '_s' → logprob: -12.650627136230469

Token 125: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4745144844055176
    2. 'sum' → logprob: -0.9745144844055176
    3. '   ' → logprob: -7.974514484405518
    4. ' ' → logprob: -9.59951400756836
    5. '(sum' → logprob: -11.22451400756836
    6. '  ' → logprob: -12.47451400756836
    7. '	sum' → logprob: -12.97451400756836
    8. '    ' → logprob: -13.34951400756836
    9. '           ' → logprob: -14.22451400756836
    10. ' (' → logprob: -14.22451400756836

Token 126: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00010676169040380046
    2. '_' → logprob: -9.375106811523438
    3. ' _' → logprob: -12.000106811523438
    4. 't' → logprob: -12.750106811523438
    5. '_tar' → logprob: -12.875106811523438
    6. ' -' → logprob: -13.375106811523438
    7. ')_' → logprob: -13.375106811523438
    8. '-' → logprob: -13.625106811523438
    9. '-t' → logprob: -13.625106811523438
    10. ')' → logprob: -13.625106811523438

Token 127: 'aro' (ID: 8421)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.6474024653434753
    2. 't' → logprob: -1.1474025249481201
    3. 'aro' → logprob: -1.8974025249481201
    4. '-' → logprob: -6.147402286529541
    5. 'ar' → logprob: -6.522402286529541
    6. '-t' → logprob: -6.772402286529541
    7. '   ' → logprob: -6.772402286529541
    8. '_' → logprob: -7.272402286529541
    9. 'o' → logprob: -7.397402286529541
    10. 'ro' → logprob: -8.0224027633667

Token 128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014218159019947052
    2. '-' → logprob: -4.264218330383301
    3. ' ' → logprob: -10.5142183303833
    4. '-t' → logprob: -11.5142183303833
    5. ' +' → logprob: -11.7642183303833
    6. '<|end|>' → logprob: -12.1392183303833
    7. '+' → logprob: -13.7642183303833
    8. ' ' → logprob: -14.3892183303833
    9. ' t' → logprob: -14.7642183303833
    10. '   ' → logprob: -14.8892183303833

Token 129: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10020806640386581
    2. ' t' → logprob: -2.350208044052124
    3. '           ' → logprob: -13.850208282470703
    4. '	t' → logprob: -15.600208282470703
    5. '`t' → logprob: -16.100208282470703
    6. '   ' → logprob: -16.600208282470703
    7. ' ' → logprob: -17.225208282470703
    8. '(t' → logprob: -17.475208282470703
    9. '    ' → logprob: -18.350208282470703
    10. '               ' → logprob: -18.475208282470703

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.636691689491272
    2. ' +' → logprob: -0.761691689491272
    3. '+h' → logprob: -6.511691570281982
    4. '<|end|>' → logprob: -6.636691570281982
    5. '           ' → logprob: -7.136691570281982
    6. ' ' → logprob: -9.01169204711914
    7. '<|end|>' → logprob: -9.63669204711914
    8. '+t' → logprob: -9.76169204711914
    9. '            ' → logprob: -10.13669204711914
    10. 'new' → logprob: -10.26169204711914

Token 131: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.016037186607718468
    2. ' h' → logprob: -4.1410369873046875
    3. ' ' → logprob: -13.891036987304688
    4. '"h' → logprob: -14.641036987304688
    5. '   ' → logprob: -14.766036987304688
    6. '"' → logprob: -15.766036987304688
    7. '  ' → logprob: -15.891036987304688
    8. '    ' → logprob: -15.891036987304688
    9. ''h' → logprob: -16.141036987304688
    10. ''' → logprob: -16.266036987304688

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01318246778100729
    2. '<|end|>' → logprob: -5.263182640075684
    3. '            ' → logprob: -6.138182640075684
    4. ' if' → logprob: -6.388182640075684
    5. '            
' → logprob: -7.138182640075684
    6. ' 
' → logprob: -7.263182640075684
    7. ' new' → logprob: -7.638182640075684
    8. ' ' → logprob: -7.638182640075684
    9. '
' → logprob: -8.013182640075684
    10. '               ' → logprob: -8.263182640075684

Token 134: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5821912884712219
    2. 'new' (adapté à ' new') → logprob: -0.8321912884712219
    3. ' if' → logprob: -5.832191467285156
    4. '           ' → logprob: -6.457191467285156
    5. 'if' → logprob: -6.457191467285156
    6. '_new' → logprob: -9.957191467285156
    7. 'newline' → logprob: -10.332191467285156
    8. ' ' → logprob: -11.082191467285156
    9. '$new' → logprob: -11.332191467285156
    10. '            ' → logprob: -11.332191467285156

Token 135: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.21863459050655365
    2. '_t' → logprob: -1.8436346054077148
    3. '_' → logprob: -3.468634605407715
    4. '_space' → logprob: -5.593634605407715
    5. ' _' → logprob: -6.468634605407715
    6. '_m' → logprob: -7.718634605407715
    7. '_tar' → logprob: -7.718634605407715
    8. 'space' → logprob: -9.093634605407715
    9. '_s' → logprob: -9.468634605407715
    10. ''_' → logprob: -9.843634605407715

Token 136: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.07882391661405563
    2. '_' → logprob: -3.2038238048553467
    3. '_an' → logprob: -3.4538238048553467
    4. '=' → logprob: -6.078824043273926
    5. ' =' → logprob: -7.578824043273926
    6. ' _' → logprob: -8.453824043273926
    7. 'ana' → logprob: -9.453824043273926
    8. 'ano' → logprob: -9.828824043273926
    9. '=_' → logprob: -9.953824043273926
    10. '_sum' → logprob: -10.328824043273926

Token 137: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.0008274946012534201
    2. '=' → logprob: -8.25082778930664
    3. '   ' → logprob: -9.00082778930664
    4. '_' → logprob: -9.00082778930664
    5. ' =' → logprob: -9.00082778930664
    6. 'ak' → logprob: -9.75082778930664
    7. 'ko' → logprob: -9.87582778930664
    8. 'h' → logprob: -11.12582778930664
    9. 'a' → logprob: -11.37582778930664
    10. 'ако' → logprob: -11.62582778930664

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231276154518127
    2. '=' → logprob: -0.8981276154518127
    3. ' ' → logprob: -12.648127555847168
    4. '<|end|>' → logprob: -14.898127555847168
    5. ',' → logprob: -15.523127555847168
    6. '_' → logprob: -16.273128509521484
    7. 's' → logprob: -16.398128509521484
    8. '>' → logprob: -16.398128509521484
    9. ')' → logprob: -16.648128509521484
    10. '＝' → logprob: -17.273128509521484

Token 139: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.38693371415138245
    2. ' sum' → logprob: -1.13693368434906
    3. ' ' → logprob: -10.261933326721191
    4. '(sum' → logprob: -11.261933326721191
    5. '	sum' → logprob: -11.761933326721191
    6. '=sum' → logprob: -12.886933326721191
    7. '<|end|>' → logprob: -13.261933326721191
    8. '_sum' → logprob: -14.386933326721191
    9. ' suma' → logprob: -14.511933326721191
    10. ',sum' → logprob: -15.011933326721191

Token 140: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00010783452307805419
    2. '_' → logprob: -9.750107765197754
    3. 'sum' → logprob: -10.375107765197754
    4. '_sum' → logprob: -11.125107765197754
    5. 'h' → logprob: -13.500107765197754
    6. '_m' → logprob: -14.500107765197754
    7. ' _' → logprob: -15.000107765197754
    8. '_t' → logprob: -15.500107765197754
    9. '(sum' → logprob: -15.625107765197754
    10. ' sum' → logprob: -15.750107765197754

Token 141: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.024913372471928596
    2. 'ako' → logprob: -3.8999133110046387
    3. 'ano' → logprob: -6.024913311004639
    4. 'ko' → logprob: -7.649913311004639
    5. 'oko' → logprob: -8.149913787841797
    6. '-' → logprob: -8.399913787841797
    7. '   ' → logprob: -9.024913787841797
    8. '_an' → logprob: -9.149913787841797
    9. '_h' → logprob: -9.649913787841797
    10. 'h' → logprob: -9.899913787841797

Token 142: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.00018363336857873946
    2. 'ko' → logprob: -9.375184059143066
    3. 'oko' → logprob: -9.625184059143066
    4. 'ak' → logprob: -11.000184059143066
    5. 'ако' → logprob: -12.625184059143066
    6. '   ' → logprob: -12.750184059143066
    7. 'akoa' → logprob: -13.625184059143066
    8. '_' → logprob: -13.750184059143066
    9. '```' → logprob: -13.875184059143066
    10. 'k' → logprob: -14.625184059143066

Token 143: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.695214569568634
    2. ' -' → logprob: -0.695214569568634
    3. '+' → logprob: -6.820214748382568
    4. ' +' → logprob: -6.945214748382568
    5. ' ' → logprob: -12.07021427154541
    6. '<|end|>' → logprob: -12.94521427154541
    7. ')' → logprob: -14.44521427154541
    8. '=' → logprob: -15.19521427154541
    9. '-
' → logprob: -15.32021427154541
    10. ',' → logprob: -15.57021427154541

Token 144: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0014158309204503894
    2. ' h' → logprob: -6.626415729522705
    3. 't' → logprob: -9.376416206359863
    4. ' t' → logprob: -13.376416206359863
    5. '<|end|>' → logprob: -13.751416206359863
    6. ' ' → logprob: -14.001416206359863
    7. '   ' → logprob: -14.626416206359863
    8. '    ' → logprob: -14.876416206359863
    9. 's' → logprob: -16.001415252685547
    10. '_h' → logprob: -16.126415252685547

Token 145: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5766146183013916
    2. '+' → logprob: -0.8266146183013916
    3. '+t' → logprob: -7.3266143798828125
    4. '+
' → logprob: -12.076614379882812
    5. ' +
' → logprob: -12.201614379882812
    6. '+c' → logprob: -13.826614379882812
    7. '+p' → logprob: -13.951614379882812
    8. '+h' → logprob: -14.326614379882812
    9. '+k' → logprob: -14.576614379882812
    10. ' ' → logprob: -14.576614379882812

Token 146: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014166327193379402
    2. ' t' → logprob: -4.264166355133057
    3. ' ' → logprob: -13.389165878295898
    4. '<|end|>' → logprob: -14.014165878295898
    5. '	t' → logprob: -15.264165878295898
    6. 's' → logprob: -16.2641658782959
    7. ')t' → logprob: -17.1391658782959
    8. '`t' → logprob: -17.2641658782959
    9. '    ' → logprob: -17.5141658782959
    10. '_t' → logprob: -17.6391658782959

Token 147: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004710295703262091
    2. '
' → logprob: -6.1297101974487305
    3. '<|end|>' → logprob: -6.8797101974487305
    4. ' if' → logprob: -7.1297101974487305
    5. ' 
' → logprob: -8.87971019744873
    6. 'if' → logprob: -9.00471019744873
    7. '       ' → logprob: -9.50471019744873
    8. '            
' → logprob: -9.62971019744873
    9. '<|end|>' → logprob: -9.62971019744873
    10. '          ' → logprob: -10.37971019744873

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46430692076683044
    2. '<|end|>' → logprob: -2.3393068313598633
    3. '
' → logprob: -2.7143068313598633
    4. ' if' → logprob: -2.8393068313598633
    5. '   ' → logprob: -2.8393068313598633
    6. ' ' → logprob: -3.0893068313598633
    7. '       ' → logprob: -4.589306831359863
    8. ' 
' → logprob: -4.589306831359863
    9. '    ' → logprob: -5.589306831359863
    10. 'if' → logprob: -5.714306831359863

Token 149: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4197111427783966
    2. 'if' (adapté à ' if') → logprob: -1.4197111129760742
    3. ' if' → logprob: -2.294711112976074
    4. '   ' → logprob: -9.919711112976074
    5. '       ' → logprob: -10.294711112976074
    6. '
' → logprob: -10.544711112976074
    7. ' ' → logprob: -10.794711112976074
    8. '               ' → logprob: -10.919711112976074
    9. '            
' → logprob: -11.544711112976074
    10. '            ' → logprob: -11.794711112976074

Token 150: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.0890248641371727
    2. 'new' → logprob: -2.714024782180786
    3. ' abs' → logprob: -4.589025020599365
    4. ' not' → logprob: -5.339025020599365
    5. ' min' → logprob: -6.214025020599365
    6. 'abs' → logprob: -6.714025020599365
    7. 'not' → logprob: -7.714025020599365
    8. ' (' → logprob: -9.089024543762207
    9. 'min' → logprob: -9.339024543762207
    10. '(new' → logprob: -10.964024543762207

Token 151: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -9.603335638530552e-05
    2. '_' → logprob: -10.250096321105957
    3. 't' → logprob: -10.625096321105957
    4. '_min' → logprob: -11.500096321105957
    5. '_h' → logprob: -12.125096321105957
    6. '   ' → logprob: -13.000096321105957
    7. '==' → logprob: -13.000096321105957
    8. '_sum' → logprob: -13.125096321105957
    9. '_max' → logprob: -13.250096321105957
    10. '_tar' → logprob: -13.500096321105957

Token 152: 'aro' (ID: 8421)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.8956171870231628
    2. 'in' → logprob: -2.0206172466278076
    3. 'ax' → logprob: -2.1456172466278076
    4. '==' → logprob: -2.5206172466278076
    5. '_' → logprob: -3.0206172466278076
    6. 'if' → logprob: -3.1456172466278076
    7. 'ar' → logprob: -3.5206172466278076
    8. '   ' → logprob: -3.7706172466278076
    9. ' ==' → logprob: -3.7706172466278076
    10. 'for' → logprob: -4.0206170082092285

Token 153: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22815226018428802
    2. ' ==' → logprob: -1.6031522750854492
    3. '>' → logprob: -6.603152275085449
    4. '=' → logprob: -6.978152275085449
    5. '<' → logprob: -8.47815227508545
    6. ' >' → logprob: -9.22815227508545
    7. ' <' → logprob: -9.97815227508545
    8. ' =' → logprob: -11.10315227508545
    9. '<=' → logprob: -11.10315227508545
    10. '>=' → logprob: -11.10315227508545

Token 154: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004093004856258631
    2. ' new' → logprob: -5.504093170166016
    3. '   ' → logprob: -12.254093170166016
    4. '           ' → logprob: -12.754093170166016
    5. ' ' → logprob: -13.129093170166016
    6. '               ' → logprob: -13.629093170166016
    7. '                   ' → logprob: -14.129093170166016
    8. '    ' → logprob: -14.379093170166016
    9. '       ' → logprob: -14.504093170166016
    10. '	new' → logprob: -15.004093170166016

Token 155: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -3.4121114822482923e-06
    2. 'h' → logprob: -13.250003814697266
    3. '_t' → logprob: -13.750003814697266
    4. '_' → logprob: -15.500003814697266
    5. 'han' → logprob: -16.375003814697266
    6. 'new' → logprob: -16.625003814697266
    7. ' _' → logprob: -16.875003814697266
    8. 't' → logprob: -17.375003814697266
    9. '_s' → logprob: -18.250003814697266
    10. '_new' → logprob: -18.625003814697266

Token 156: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -9.591415437171236e-05
    2. 'a' → logprob: -10.875096321105957
    3. '_an' → logprob: -11.250096321105957
    4. 'ano' → logprob: -11.375096321105957
    5. '_' → logprob: -12.000096321105957
    6. 'ank' → logprob: -12.250096321105957
    7. 'anayo' → logprob: -12.750096321105957
    8. 'anato' → logprob: -12.875096321105957
    9. '```' → logprob: -12.875096321105957
    10. '   ' → logprob: -13.125096321105957

Token 157: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.0014382082736119628
    2. '_' → logprob: -7.876438140869141
    3. '   ' → logprob: -7.876438140869141
    4. 'ak' → logprob: -7.876438140869141
    5. '```' → logprob: -9.50143814086914
    6. 'ако' → logprob: -10.00143814086914
    7. 't' → logprob: -10.62643814086914
    8. 'ko' → logprob: -10.75143814086914
    9. '       ' → logprob: -11.37643814086914
    10. '           ' → logprob: -11.50143814086914

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010737698525190353
    2. ':
' → logprob: -4.635737895965576
    3. ' and' → logprob: -7.010737895965576
    4. 'and' → logprob: -10.510737419128418
    5. '               ' → logprob: -10.760737419128418
    6. '           ' → logprob: -10.885737419128418
    7. ' or' → logprob: -12.510737419128418
    8. ':

' → logprob: -13.260737419128418
    9. ',' → logprob: -13.510737419128418
    10. '):' → logprob: -13.760737419128418

Token 159: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021698584780097008
    2. ':' → logprob: -4.396698474884033
    3. ':
' → logprob: -4.896698474884033
    4. '           ' → logprob: -6.771698474884033
    5. '):
' → logprob: -9.146698951721191
    6. ',' → logprob: -9.646698951721191
    7. ' and' → logprob: -9.771698951721191
    8. ' :' → logprob: -10.021698951721191
    9. '                   ' → logprob: -10.396698951721191
    10. '                
' → logprob: -10.646698951721191

Token 160: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5711097717285156
    2. 'result' → logprob: -1.8211097717285156
    3. 'if' → logprob: -2.1961097717285156
    4. '               ' → logprob: -2.3211097717285156
    5. ' result' → logprob: -3.3211097717285156
    6. ' min' → logprob: -5.071109771728516
    7. 'min' → logprob: -5.571109771728516
    8. '   ' → logprob: -5.571109771728516
    9. '       ' → logprob: -5.696109771728516
    10. 'found' → logprob: -5.696109771728516

Token 161: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.6692818403244019
    2. '           ' → logprob: -2.1692819595336914
    3. ' if' → logprob: -2.6692819595336914
    4. 'e' → logprob: -2.7942819595336914
    5. ' =' → logprob: -2.9192819595336914
    6. '=' → logprob: -2.9192819595336914
    7. 'if' → logprob: -3.4192819595336914
    8. ' min' → logprob: -4.544281959533691
    9. '               ' → logprob: -4.544281959533691
    10. '            ' → logprob: -4.544281959533691

Token 162: ' t' (ID: 260)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04073106870055199
    2. 't' → logprob: -3.7907309532165527
    3. ' new' → logprob: -4.540730953216553
    4. 'sum' → logprob: -5.290730953216553
    5. 'min' → logprob: -7.040730953216553
    6. ' t' → logprob: -7.540730953216553
    7. ' min' → logprob: -9.790731430053711
    8. ' sum' → logprob: -9.915731430053711
    9. '   ' → logprob: -10.540731430053711
    10. ' ' → logprob: -11.165731430053711

Token 163: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28396743535995483
    2. '+' → logprob: -1.4089674949645996
    3. '+h' → logprob: -5.9089674949646
    4. '+t' → logprob: -9.783967018127441
    5. 'um' → logprob: -11.033967018127441
    6. '+s' → logprob: -12.283967018127441
    7. '+i' → logprob: -12.658967018127441
    8. '+p' → logprob: -12.783967018127441
    9. '+m' → logprob: -13.158967018127441
    10. '+w' → logprob: -13.533967018127441

Token 164: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0036048211622983217
    2. ' h' → logprob: -5.628604888916016
    3. ' ' → logprob: -12.628604888916016
    4. '   ' → logprob: -13.878604888916016
    5. '"h' → logprob: -15.503604888916016
    6. '	h' → logprob: -16.378604888916016
    7. '    ' → logprob: -16.503604888916016
    8. '  ' → logprob: -16.878604888916016
    9. '           ' → logprob: -18.378604888916016
    10. ''h' → logprob: -18.441104888916016

Token 165: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1506439447402954
    2. '           ' → logprob: -2.025643825531006
    3. ' if' → logprob: -5.650643825531006
    4. '
' → logprob: -6.275643825531006
    5. 'if' → logprob: -6.900643825531006
    6. '       ' → logprob: -7.900643825531006
    7. '   ' → logprob: -8.025644302368164
    8. ')' → logprob: -8.400644302368164
    9. '                   ' → logprob: -8.650644302368164
    10. ':
' → logprob: -9.400644302368164

Token 166: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.531367838382721
    2. '               ' → logprob: -1.0313677787780762
    3. '
' → logprob: -3.906367778778076
    4. ' if' → logprob: -4.156367778778076
    5. 'if' → logprob: -4.906367778778076
    6. '   ' → logprob: -5.781367778778076
    7. '                   ' → logprob: -5.906367778778076
    8. '       ' → logprob: -6.156367778778076
    9. ':' → logprob: -7.406367778778076
    10. ':
' → logprob: -7.406367778778076

Token 167: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034666673745959997
    2. ' if' → logprob: -5.753466606140137
    3. 'if' (adapté à ' if') → logprob: -8.628466606140137
    4. ')' → logprob: -11.003466606140137
    5. '                
' → logprob: -11.003466606140137
    6. ',' → logprob: -11.253466606140137
    7. '
' → logprob: -11.503466606140137
    8. ':
' → logprob: -11.503466606140137
    9. '           ' → logprob: -11.628466606140137
    10. '<|end|>' → logprob: -12.003466606140137

Token 168: ' (' (ID: 350)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.02443244680762291
    2. 'min' → logprob: -3.774432420730591
    3. ' not' → logprob: -6.89943265914917
    4. ' (' → logprob: -9.274432182312012
    5. '(min' → logprob: -9.524432182312012
    6. 'not' → logprob: -11.774432182312012
    7. ' ' → logprob: -13.774432182312012
    8. '(' → logprob: -13.899432182312012
    9. '	min' → logprob: -14.524432182312012
    10. ' found' → logprob: -15.524432182312012

Token 169: 'not' (ID: 2878)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2519952654838562
    2. ' min' → logprob: -1.501995325088501
    3. ' not' → logprob: -10.251995086669922
    4. 'not' → logprob: -11.251995086669922
    5. '(min' → logprob: -11.251995086669922
    6. '   ' → logprob: -12.501995086669922
    7. ' (' → logprob: -14.751995086669922
    8. '	min' → logprob: -15.251995086669922
    9. 'm' → logprob: -15.751995086669922
    10. ' ' → logprob: -16.001995086669922

Token 170: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.634494960308075
    2. 'min' → logprob: -1.1344950199127197
    3. ' found' → logprob: -2.3844950199127197
    4. ' min' → logprob: -2.8844950199127197
    5. '(min' → logprob: -9.13449478149414
    6. '(found' → logprob: -10.25949478149414
    7. 'Found' → logprob: -11.88449478149414
    8. 'find' → logprob: -12.00949478149414
    9. ')' → logprob: -12.25949478149414
    10. ' ' → logprob: -12.38449478149414

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011677795089781284
    2. ' or' → logprob: -4.6366777420043945
    3. ' )' → logprob: -6.3866777420043945
    4. 'or' → logprob: -8.386677742004395
    5. '        ' → logprob: -13.636677742004395
    6. '                   ' → logprob: -13.761677742004395
    7. ' and' → logprob: -13.886677742004395
    8. ' ' → logprob: -14.136677742004395
    9. '       ' → logprob: -14.136677742004395
    10. '    ' → logprob: -14.386677742004395

Token 172: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003210865193977952
    2. 'or' → logprob: -5.75321102142334
    3. ' ' → logprob: -11.75321102142334
    4. '                   ' → logprob: -11.87821102142334
    5. '	or' → logprob: -11.87821102142334
    6. '               ' → logprob: -12.25321102142334
    7. '                ' → logprob: -13.50321102142334
    8. '   ' → logprob: -14.12821102142334
    9. '              ' → logprob: -14.25321102142334
    10. '<|end|>' → logprob: -14.50321102142334

Token 173: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.060250502079725266
    2. 's' → logprob: -2.9352505207061768
    3. ' (' → logprob: -5.685250282287598
    4. '(s' → logprob: -6.310250282287598
    5. '                   ' → logprob: -9.935250282287598
    6. '(' → logprob: -10.185250282287598
    7. '               ' → logprob: -10.560250282287598
    8. ' ' → logprob: -12.185250282287598
    9. '   ' → logprob: -12.435250282287598
    10. '                ' → logprob: -12.560250282287598

Token 174: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5231540203094482
    2. ' s' → logprob: -0.8981540203094482
    3. '   ' → logprob: -11.773154258728027
    4. '                   ' → logprob: -12.148154258728027
    5. '<s' → logprob: -12.648154258728027
    6. '               ' → logprob: -13.023154258728027
    7. 'min' → logprob: -13.148154258728027
    8. '
' → logprob: -13.523154258728027
    9. '(s' → logprob: -13.523154258728027
    10. '	s' → logprob: -13.648154258728027

Token 175: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.055035293102264404
    2. '<' → logprob: -2.930035352706909
    3. ' ' → logprob: -9.680035591125488
    4. ' >' → logprob: -10.055035591125488
    5. ')' → logprob: -11.055035591125488
    6. '<|end|>' → logprob: -11.430035591125488
    7. '<s' → logprob: -12.055035591125488
    8. '>' → logprob: -12.680035591125488
    9. 's' → logprob: -13.430035591125488
    10. ' <
' → logprob: -13.930035591125488

Token 176: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.007612066809087992
    2. ' min' → logprob: -4.882612228393555
    3. 's' → logprob: -12.507612228393555
    4. '(min' → logprob: -14.382612228393555
    5. 'result' → logprob: -14.507612228393555
    6. '_min' → logprob: -14.632612228393555
    7. 'sum' → logprob: -15.257612228393555
    8. '   ' → logprob: -15.632612228393555
    9. ' s' → logprob: -15.757612228393555
    10. '	min' → logprob: -16.507612228393555

Token 177: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.633853652398102e-05
    2. '_s' → logprob: -10.125056266784668
    3. 'sum' → logprob: -11.375056266784668
    4. ')' → logprob: -13.375056266784668
    5. 's' → logprob: -13.875056266784668
    6. '_min' → logprob: -14.125056266784668
    7. '_' → logprob: -14.750056266784668
    8. '   ' → logprob: -15.000056266784668
    9. ')_' → logprob: -15.125056266784668
    10. ' _' → logprob: -16.125057220458984

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14423784613609314
    2. '):
' → logprob: -2.019237756729126
    3. ':' → logprob: -6.644237995147705
    4. ')' → logprob: -9.144237518310547
    5. '):
' → logprob: -9.644237518310547
    6. ' ):' → logprob: -10.394237518310547
    7. ' and' → logprob: -10.894237518310547
    8. ' ):
' → logprob: -11.394237518310547
    9. ':
' → logprob: -11.644237518310547
    10. '):

' → logprob: -12.144237518310547

Token 179: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00033713103039190173
    2. '               ' → logprob: -9.125337600708008
    3. ' min' → logprob: -9.500337600708008
    4. '                       ' → logprob: -9.625337600708008
    5. 'min' → logprob: -10.250337600708008
    6. '           ' → logprob: -11.125337600708008
    7. '                  ' → logprob: -11.125337600708008
    8. '                    
' → logprob: -12.500337600708008
    9. ' found' → logprob: -12.625337600708008
    10. '   ' → logprob: -13.250337600708008

Token 180: ' found' (ID: 2491)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7304364442825317
    2. ' found' → logprob: -1.2304364442825317
    3. '                   ' → logprob: -2.105436325073242
    4. 'found' (adapté à ' found') → logprob: -3.105436325073242
    5. 'min' → logprob: -3.230436325073242
    6. '                       ' → logprob: -4.105436325073242
    7. '       ' → logprob: -6.730436325073242
    8. '   ' → logprob: -7.105436325073242
    9. '           ' → logprob: -7.355436325073242
    10. '               ' → logprob: -7.855436325073242

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016057360917329788
    2. '=' → logprob: -4.14105749130249
    3. '=True' → logprob: -10.766057014465332
    4. ' ' → logprob: -14.141057014465332
    5. ',' → logprob: -14.641057014465332
    6. '    ' → logprob: -15.266057014465332
    7. ' =
' → logprob: -15.266057014465332
    8. ' True' → logprob: -15.766057014465332
    9. '   ' → logprob: -16.51605796813965
    10. 'True' → logprob: -17.51605796813965

Token 182: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. '(True' → logprob: -17.504077911376953
    4. '=True' → logprob: -18.004077911376953
    5. '   ' → logprob: -19.004077911376953
    6. 'Tr' → logprob: -19.629077911376953
    7. 'true' → logprob: -20.504077911376953
    8. ' ' → logprob: -20.504077911376953
    9. 'False' → logprob: -21.754077911376953
    10. ' Tru' → logprob: -22.004077911376953

Token 183: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005230080569162965
    2. ' min' → logprob: -8.00052261352539
    3. '           ' → logprob: -9.25052261352539
    4. '               ' → logprob: -10.25052261352539
    5. 'min' → logprob: -10.37552261352539
    6. '                    
' → logprob: -12.12552261352539
    7. '
' → logprob: -12.25052261352539
    8. '       ' → logprob: -12.87552261352539
    9. ',' → logprob: -12.87552261352539
    10. '				' → logprob: -13.00052261352539

Token 184: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003339671529829502
    2. ' min' → logprob: -5.878339767456055
    3. 'min' → logprob: -8.253339767456055
    4. '           ' → logprob: -8.878339767456055
    5. '               ' → logprob: -9.753339767456055
    6. '				' → logprob: -10.378339767456055
    7. '       ' → logprob: -11.253339767456055
    8. '   ' → logprob: -11.628339767456055
    9. '                       ' → logprob: -11.753339767456055
    10. '                    
' → logprob: -12.878339767456055

Token 185: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.023246178403496742
    2. 'min' (adapté à ' min') → logprob: -3.7732462882995605
    3. '                   ' → logprob: -14.273245811462402
    4. '	min' → logprob: -17.27324676513672
    5. '_min' → logprob: -17.39824676513672
    6. '   ' → logprob: -19.14824676513672
    7. '                       ' → logprob: -19.27324676513672
    8. '(min' → logprob: -19.27324676513672
    9. ' minimum' → logprob: -19.39824676513672
    10. '                    ' → logprob: -19.52324676513672

Token 186: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.961759259458631e-06
    2. '_s' → logprob: -12.375004768371582
    3. 'sum' → logprob: -14.875004768371582
    4. '_min' → logprob: -15.500004768371582
    5. ' _' → logprob: -18.0000057220459
    6. '_' → logprob: -18.2500057220459
    7. '=_' → logprob: -18.6250057220459
    8. '_set' → logprob: -19.0000057220459
    9. 's' → logprob: -19.2500057220459
    10. '_score' → logprob: -19.5000057220459

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06208689138293266
    2. '=' → logprob: -2.812086820602417
    3. '=s' → logprob: -9.062087059020996
    4. ' ' → logprob: -13.187087059020996
    5. ' s' → logprob: -14.187087059020996
    6. 's' → logprob: -14.562087059020996
    7. '＝' → logprob: -16.18708610534668
    8. ' =
' → logprob: -16.31208610534668
    9. '=

' → logprob: -17.81208610534668
    10. ',' → logprob: -18.06208610534668

Token 188: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804171830415726
    2. ' s' → logprob: -3.288041830062866
    3. '   ' → logprob: -16.663042068481445
    4. '                   ' → logprob: -16.788042068481445
    5. ' ' → logprob: -16.913042068481445
    6. '	s' → logprob: -17.163042068481445
    7. '_s' → logprob: -17.788042068481445
    8. '(s' → logprob: -18.413042068481445
    9. ' ' → logprob: -18.413042068481445
    10. '               ' → logprob: -18.538042068481445

Token 189: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016209072200581431
    2. 'result' → logprob: -6.501620769500732
    3. ' result' → logprob: -10.00162124633789
    4. '   ' → logprob: -10.50162124633789
    5. '               ' → logprob: -11.00162124633789
    6. '           ' → logprob: -11.50162124633789
    7. '       ' → logprob: -12.00162124633789
    8. '                  ' → logprob: -12.62662124633789
    9. ',' → logprob: -12.87662124633789
    10. '                       ' → logprob: -13.62662124633789

Token 190: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012513063848018646
    2. 'result' → logprob: -4.512513160705566
    3. ' result' → logprob: -6.762513160705566
    4. '           ' → logprob: -9.262513160705566
    5. '               ' → logprob: -9.762513160705566
    6. '       ' → logprob: -9.887513160705566
    7. '   ' → logprob: -10.887513160705566
    8. '				' → logprob: -11.137513160705566
    9. ',' → logprob: -11.262513160705566
    10. '                    
' → logprob: -11.262513160705566

Token 191: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00011677479778882116
    2. ' result' → logprob: -9.125116348266602
    3. '                   ' → logprob: -12.000116348266602
    4. '   ' → logprob: -13.375116348266602
    5. ' ' → logprob: -17.1251163482666
    6. '	result' → logprob: -17.1251163482666
    7. '  ' → logprob: -18.7501163482666
    8. 'results' → logprob: -19.5001163482666
    9. '(result' → logprob: -19.5001163482666
    10. '_result' → logprob: -19.5001163482666

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386875182390213
    2. '=' → logprob: -1.1368751525878906
    3. '=(' → logprob: -13.38687515258789
    4. ' =(' → logprob: -13.38687515258789
    5. ' ' → logprob: -15.01187515258789
    6. '(' → logprob: -15.88687515258789
    7. ')' → logprob: -15.88687515258789
    8. ',' → logprob: -16.38687515258789
    9. '＝' → logprob: -16.38687515258789
    10. '<|end|>' → logprob: -16.76187515258789

Token 193: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.004576326813548803
    2. ' (' → logprob: -5.504576206207275
    3. '(' → logprob: -7.879576206207275
    4. '   ' → logprob: -9.879576683044434
    5. ' t' → logprob: -10.754576683044434
    6. 't' → logprob: -11.004576683044434
    7. ' ' → logprob: -11.629576683044434
    8. '(s' → logprob: -12.004576683044434
    9. '((' → logprob: -12.004576683044434
    10. '(h' → logprob: -12.379576683044434

Token 194: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009284949628636241
    2. ' t' → logprob: -7.1259284019470215
    3. '   ' → logprob: -9.37592887878418
    4. 's' → logprob: -10.87592887878418
    5. 'h' → logprob: -11.75092887878418
    6. ' ' → logprob: -13.12592887878418
    7. ')' → logprob: -13.25092887878418
    8. '	t' → logprob: -13.62592887878418
    9. 'min' → logprob: -14.12592887878418
    10. '0' → logprob: -14.12592887878418

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029880192130804062
    2. ',h' → logprob: -3.5298802852630615
    3. ' ,' → logprob: -9.15488052368164
    4. ',
' → logprob: -10.77988052368164
    5. 'h' → logprob: -13.40488052368164
    6. ',

' → logprob: -14.77988052368164
    7. ')' → logprob: -15.52988052368164
    8. '   ' → logprob: -15.90488052368164
    9. ' h' → logprob: -16.02988052368164
    10. '),' → logprob: -16.27988052368164

Token 196: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2519479990005493
    2. ' h' → logprob: -1.5019479990005493
    3. ' ' → logprob: -11.626948356628418
    4. ')' → logprob: -12.126948356628418
    5. '   ' → logprob: -13.501948356628418
    6. ' 
' → logprob: -14.126948356628418
    7. '	h' → logprob: -14.626948356628418
    8. '    ' → logprob: -15.001948356628418
    9. ' ' → logprob: -15.001948356628418
    10. ' )' → logprob: -15.126948356628418

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6047699318733066e-05
    2. ')
' → logprob: -11.125016212463379
    3. ' )' → logprob: -13.875016212463379
    4. ',)' → logprob: -16.875015258789062
    5. ')

' → logprob: -17.125015258789062
    6. ',' → logprob: -17.250015258789062
    7. ')return' → logprob: -17.875015258789062
    8. '   ' → logprob: -17.875015258789062
    9. '       ' → logprob: -18.000015258789062
    10. '),' → logprob: -18.000015258789062

Token 198: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2954103946685791
    2. 'print' → logprob: -1.545410394668579
    3. '   ' → logprob: -3.295410394668579
    4. ' if' → logprob: -5.42041015625
    5. '
' → logprob: -7.29541015625
    6. 'for' → logprob: -8.67041015625
    7. '    
' → logprob: -9.17041015625
    8. ' print' → logprob: -9.29541015625
    9. '       ' → logprob: -12.04541015625
    10. '                    
' → logprob: -12.29541015625

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20397402346134186
    2. 'print' → logprob: -1.7039740085601807
    3. ' if' → logprob: -6.32897424697876
    4. '   ' → logprob: -7.45397424697876
    5. '    
' → logprob: -9.328973770141602
    6. '
' → logprob: -9.953973770141602
    7. ' print' → logprob: -10.203973770141602
    8. 'for' → logprob: -11.703973770141602
    9. '```' → logprob: -12.453973770141602
    10. ' 
' → logprob: -12.953973770141602

Token 200: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.2526371479034424
    2. 'found' → logprob: -1.5026371479034424
    3. ' not' → logprob: -7.377636909484863
    4. 'not' → logprob: -10.377636909484863
    5. ' result' → logprob: -10.502636909484863
    6. 'result' → logprob: -10.752636909484863
    7. '(found' → logprob: -13.252636909484863
    8. '	found' → logprob: -14.252636909484863
    9. ' ' → logprob: -16.37763786315918
    10. 'Found' → logprob: -16.75263786315918

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015152193373069167
    2. ':
' → logprob: -6.5015153884887695
    3. '   ' → logprob: -11.87651538848877
    4. ' ==' → logprob: -13.75151538848877
    5. '==' → logprob: -14.00151538848877
    6. 'print' → logprob: -14.00151538848877
    7. '       ' → logprob: -14.37651538848877
    8. ' :' → logprob: -14.37651538848877
    9. '[' → logprob: -14.50151538848877
    10. ',' → logprob: -14.75151538848877

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043817906407639384
    2. ' print' → logprob: -8.00043773651123
    3. '   ' → logprob: -9.87543773651123
    4. 'print' → logprob: -10.12543773651123
    5. ':' → logprob: -12.00043773651123
    6. ',' → logprob: -13.37543773651123
    7. '     ' → logprob: -14.12543773651123
    8. ':
' → logprob: -14.37543773651123
    9. '           ' → logprob: -14.62543773651123
    10. '        
' → logprob: -14.62543773651123

Token 203: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.016941243782639503
    2. '       ' → logprob: -4.266941070556641
    3. ' print' → logprob: -5.891941070556641
    4. '   ' → logprob: -11.64194107055664
    5. 'for' → logprob: -13.64194107055664
    6. '           ' → logprob: -13.76694107055664
    7. '	print' → logprob: -13.89194107055664
    8. '```' → logprob: -16.14194107055664
    9. 'pr' → logprob: -17.01694107055664
    10. ' ' → logprob: -17.01694107055664

Token 204: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.039289187639951706
    2. '(*' → logprob: -3.2892892360687256
    3. '(f' → logprob: -6.7892889976501465
    4. '(' → logprob: -9.164289474487305
    5. 'result' → logprob: -11.789289474487305
    6. '('' → logprob: -12.289289474487305
    7. '("{}' → logprob: -13.914289474487305
    8. '((' → logprob: -14.164289474487305
    9. '("' → logprob: -14.289289474487305
    10. '('{}' → logprob: -14.414289474487305

Token 205: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.619311974034645e-05
    2. ')' → logprob: -10.375036239624023
    3. '(' → logprob: -13.000036239624023
    4. '0' → logprob: -13.125036239624023
    5. ' ' → logprob: -15.625036239624023
    6. ',' → logprob: -15.875036239624023
    7. ' [' → logprob: -15.875036239624023
    8. ' )' → logprob: -16.625036239624023
    9. '   ' → logprob: -16.875036239624023
    10. ')
' → logprob: -17.375036239624023

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.750003814697266
    3. '1' → logprob: -13.875003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '00' → logprob: -17.750003814697266
    6. '-' → logprob: -17.937503814697266
    7. ')' → logprob: -18.062503814697266
    8. '2' → logprob: -18.187503814697266
    9. '۰' → logprob: -18.437503814697266
    10. '```' → logprob: -18.500003814697266

Token 207: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001192490803077817
    2. ',result' → logprob: -7.376192569732666
    3. ' ,' → logprob: -7.501192569732666
    4. ',end' → logprob: -11.376192092895508
    5. ')' → logprob: -14.376192092895508
    6. ',h' → logprob: -15.501192092895508
    7. ' ' → logprob: -15.501192092895508
    8. ',r' → logprob: -16.001192092895508
    9. ',f' → logprob: -16.001192092895508
    10. ',
' → logprob: -16.251192092895508

Token 208: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -6.2729995988775045e-06
    2. ' result' → logprob: -12.000006675720215
    3. '(result' → logprob: -20.3750057220459
    4. '$result' → logprob: -21.2500057220459
    5. ' ' → logprob: -21.8750057220459
    6. '   ' → logprob: -22.0000057220459
    7. ')' → logprob: -22.1250057220459
    8. ''' → logprob: -22.1250057220459
    9. ',result' → logprob: -22.5000057220459
    10. '     ' → logprob: -22.6250057220459

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00035119339008815587
    2. '1' → logprob: -8.000350952148438
    3. ')' → logprob: -11.875350952148438
    4. '0' → logprob: -12.750350952148438
    5. '])' → logprob: -13.000350952148438
    6. ']' → logprob: -13.375350952148438
    7. ' [' → logprob: -13.875350952148438
    8. '```' → logprob: -14.000350952148438
    9. ' ' → logprob: -15.875350952148438
    10. '   ' → logprob: -16.375350952148438

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -18.5
    4. '```' → logprob: -18.75
    5. '])' → logprob: -18.875
    6. ')' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. 'result' → logprob: -19.75
    9. ']' → logprob: -20.375
    10. '
' → logprob: -20.875

Token 211: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.750008583068848
    4. '))' → logprob: -16.375009536743164
    5. '')' → logprob: -16.375009536743164
    6. ')`' → logprob: -17.125009536743164
    7. '})' → logprob: -17.750009536743164
    8. '())' → logprob: -17.875009536743164
    9. ')}' → logprob: -18.000009536743164
    10. '`)' → logprob: -18.250009536743164

Token 212: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011250240728259087
    2. '   ' → logprob: -4.886250019073486
    3. ' else' → logprob: -5.636250019073486
    4. 'elif' → logprob: -10.386250495910645
    5. '<|end|>' → logprob: -10.386250495910645
    6. '	else' → logprob: -11.761250495910645
    7. '```' → logprob: -14.886250495910645
    8. '_else' → logprob: -15.261250495910645
    9. '  ' → logprob: -15.261250495910645
    10. '<|end|>' → logprob: -15.511250495910645

Token 213: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.003179975086823106
    2. ' else' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.628179550170898
    4. '	else' → logprob: -14.378179550170898
    5. 'elif' → logprob: -15.753179550170898
    6. '<|end|>' → logprob: -16.0031795501709
    7. '_else' → logprob: -16.5031795501709
    8. 'elses' → logprob: -17.1281795501709
    9. '```' → logprob: -17.2531795501709
    10. 'elser' → logprob: -17.7531795501709

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038186315447092056
    2. ':
' → logprob: -3.4131863117218018
    3. '       ' → logprob: -5.413186550140381
    4. '   ' → logprob: -9.788186073303223
    5. ' :' → logprob: -11.913186073303223
    6. ' :
' → logprob: -13.163186073303223
    7. ':
' → logprob: -13.288186073303223
    8. '():
' → logprob: -13.913186073303223
    9. ' print' → logprob: -14.163186073303223
    10. '           ' → logprob: -14.288186073303223

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.255448579788208
    2. '   ' → logprob: -1.505448579788208
    3. 'print' → logprob: -6.130448341369629
    4. ' print' → logprob: -6.630448341369629
    5. '    ' → logprob: -12.380448341369629
    6. '	print' → logprob: -12.630448341369629
    7. '	   ' → logprob: -12.880448341369629
    8. '     ' → logprob: -13.005448341369629
    9. '           ' → logprob: -13.255448341369629
    10. ' ' → logprob: -14.130448341369629

Token 216: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02202608436346054
    2. '   ' → logprob: -3.8970260620117188
    3. ' print' → logprob: -6.522026062011719
    4. '	print' → logprob: -12.272026062011719
    5. '  ' → logprob: -12.647026062011719
    6. ' ' → logprob: -12.897026062011719
    7. '    ' → logprob: -14.272026062011719
    8. '       ' → logprob: -14.272026062011719
    9. '```' → logprob: -15.522026062011719
    10. '    
' → logprob: -16.39702606201172

Token 217: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.1423251628875732
    2. '('' → logprob: -1.2673251628875732
    3. '("' → logprob: -1.3923251628875732
    4. '(' → logprob: -2.0173251628875732
    5. '('?' → logprob: -4.392325401306152
    6. '("?' → logprob: -5.767325401306152
    7. '-' → logprob: -6.892325401306152
    8. '()' → logprob: -7.392325401306152
    9. '("-' → logprob: -8.267325401306152
    10. '0' → logprob: -9.142325401306152

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '-' → logprob: -16.25
    4. '2' → logprob: -17.25
    5. '１' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. '4' → logprob: -20.0
    8. '3' → logprob: -20.0
    9. ' -' → logprob: -20.125
    10. ')' → logprob: -20.1875

Token 219: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.625000953674316
    3. '))' → logprob: -16.125
    4. ')`' → logprob: -17.25
    5. ')
' → logprob: -17.5
    6. '`)' → logprob: -17.75
    7. '())' → logprob: -17.875
    8. '')' → logprob: -18.25
    9. ')}' → logprob: -19.375
    10. '})' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 217
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 112
Tokens correctement prédits (top 10): 193
Précision stricte (1ère position): 47.93%
Précision adaptée (1ère position): 51.61%
Précision (top 10): 88.94%
================================================================================
