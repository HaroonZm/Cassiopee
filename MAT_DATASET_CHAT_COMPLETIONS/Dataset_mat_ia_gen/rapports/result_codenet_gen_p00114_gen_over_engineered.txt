================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import gcd
from functools import reduce

class ElectronFlyParameters:
    def __init__(self, a1: int, m1: int, a2: int, m2: int, a3: int, m3: int):
        self.a1 = a1
        self.m1 = m1
        self.a2 = a2
        self.m2 = m2
        self.a3 = a3
        self.m3 = m3
        self._validate()

    def _validate(self):
        if not (1 < self.a1 < 2**15 and 1 < self.m1 < 2**15 and
                1 < self.a2 < 2**15 and 1 < self.m2 < 2**15 and
                1 < self.a3 < 2**15 and 1 < self.m3 < 2**15):
            raise ValueError("Parameters out of bounds")
        if gcd(self.a1, self.m1) != 1 or gcd(self.a2, self.m2) != 1 or gcd(self.a3, self.m3) != 1:
            # The problem states these being coprime guarantees return
            pass

class ModularCycleFinder:
    def __init__(self, a: int, m: int):
        assert gcd(a, m) == 1, "a and m must be coprime"
        self.a = a
        self.m = m

    def cycle_length(self) -> int:
        """
        Finds the smallest positive integer k such that a^k ≡ 1 (mod m)
        This is the multiplicative order of a modulo m.
        """
        # Since a and m are coprime, multiplicative order exists.
        # We can use a method to find multiplicative order:
        # Order divides Euler's totient function φ(m)
        phi = self._euler_totient(self.m)
        # Find divisors of phi to test them in ascending order
        for d in self._divisors(phi):
            if pow(self.a, d, self.m) == 1:
                return d
        # Fallback (should not happen for coprime)
        return phi

    def _euler_totient(self, n: int) -> int:
        result = n
        p = 2
        temp = n
        while p * p <= temp:
            if temp % p == 0:
                while temp % p == 0:
                    temp //= p
                result -= result // p
            p += 1 if p == 2 else 2
        if temp > 1:
            result -= result // temp
        return result

    def _divisors(self, n: int):
        divs = []
        i = 1
        while i * i <= n:
            if n % i == 0:
                divs.append(i)
                if i != n // i:
                    divs.append(n // i)
            i += 1
        divs.sort()
        return divs

class ElectronFlyCycleController:
    def __init__(self, params: ElectronFlyParameters):
        self.params = params
        self.cycle_finders = [
            ModularCycleFinder(params.a1, params.m1),
            ModularCycleFinder(params.a2, params.m2),
            ModularCycleFinder(params.a3, params.m3),
        ]

    def compute_minimum_return_time(self) -> int:
        # Calculate order for each coordinate transition
        orders = [finder.cycle_length() for finder in self.cycle_finders]
        # The fly returns to (1, 1, 1) when all three coordinates simultaneously return to 1
        # The overall cycle length is the lcm of these orders
        return self._lcm_multiple(orders)

    def _lcm(self, x: int, y: int) -> int:
        return x * y // gcd(x, y)

    def _lcm_multiple(self, values):
        return reduce(self._lcm, values, 1)

class InputProcessor:
    def __init__(self):
        self.data_sets = []

    def read_input(self):
        while True:
            line = input().strip()
            if line == '':
                continue
            parts = list(map(int, line.split()))
            if len(parts) != 6:
                # Ignore malformed input (should not happen)
                continue
            if parts == [0, 0, 0, 0, 0, 0]:
                break
            self.data_sets.append(parts)

    def get_data_sets(self):
        for data in self.data_sets:
            yield ElectronFlyParameters(*data)

class OutputPresenter:
    def __init__(self):
        self.results = []

    def collect(self, result: int):
        self.results.append(result)

    def display(self):
        for result in self.results:
            print(result)

def main():
    processor = InputProcessor()
    processor.read_input()
    presenter = OutputPresenter()
    for params in processor.get_data_sets():
        controller = ElectronFlyCycleController(params)
        result = controller.compute_minimum_return_time()
        presenter.collect(result)
    presenter.display()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.17044492065906525
    2. ' sqrt' → logprob: -2.045444965362549
    3. 'pow' → logprob: -4.545444965362549
    4. 'sin' → logprob: -4.795444965362549
    5. 'pi' → logprob: -5.545444965362549
    6. ' pi' → logprob: -6.045444965362549
    7. ' sin' → logprob: -7.420444965362549
    8. 'ceil' → logprob: -7.420444965362549
    9. 'cos' → logprob: -8.67044448852539
    10. ' ceil' → logprob: -8.67044448852539

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012622561771422625
    2. '\(' → logprob: -7.001262187957764
    3. ' (' → logprob: -9.126262664794922
    4. '(
' → logprob: -9.126262664794922
    5. ',' → logprob: -9.626262664794922
    6. '```' → logprob: -11.001262664794922
    7. 'a' → logprob: -11.376262664794922
    8. '\' → logprob: -11.876262664794922
    9. '.' → logprob: -12.001262664794922
    10. '\n' → logprob: -12.251262664794922

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01349912490695715
    2. '(
' → logprob: -4.6384992599487305
    3. '\(' → logprob: -6.0134992599487305
    4. 'def' → logprob: -7.2634992599487305
    5. '\' → logprob: -9.26349925994873
    6. 'a' → logprob: -9.38849925994873
    7. '\n' → logprob: -9.51349925994873
    8. ',' → logprob: -9.63849925994873
    9. '#' → logprob: -9.76349925994873
    10. '
' → logprob: -9.88849925994873

Token 6: ' functools' (ID: 142636)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.16677533090114594
    2. ' fractions' → logprob: -1.9167753458023071
    3. ' functools' → logprob: -5.541775226593018
    4. 'fun' → logprob: -6.416775226593018
    5. 'math' → logprob: -7.666775226593018
    6. ' sys' → logprob: -9.416775703430176
    7. 'sys' → logprob: -9.416775703430176
    8. ' typing' → logprob: -9.541775703430176
    9. ' itertools' → logprob: -9.666775703430176
    10. 'typing' → logprob: -10.041775703430176

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08009175211191177
    2. 'import' → logprob: -2.580091714859009
    3. '.' → logprob: -7.580091953277588
    4. '_import' → logprob: -8.08009147644043
    5. ' ' → logprob: -8.95509147644043
    6. '	import' → logprob: -9.20509147644043
    7. '_' → logprob: -9.83009147644043
    8. '.import' → logprob: -10.33009147644043
    9. ' .' → logprob: -11.08009147644043
    10. ' _' → logprob: -11.33009147644043

Token 8: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.009429153054952621
    2. 'l' → logprob: -5.009428977966309
    3. ' reduce' → logprob: -6.134428977966309
    4. ' l' → logprob: -8.384428977966309
    5. 'wrap' → logprob: -8.884428977966309
    6. 'redu' → logprob: -9.759428977966309
    7. 'cache' → logprob: -9.884428977966309
    8. 'partial' → logprob: -10.134428977966309
    9. 'cached' → logprob: -11.259428977966309
    10. '```' → logprob: -12.509428977966309

Token 9: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35183045268058777
    2. '\' → logprob: -2.10183048248291
    3. '(
' → logprob: -2.60183048248291
    4. '(' → logprob: -2.60183048248291
    5. '\n' → logprob: -4.60183048248291
    6. ',' → logprob: -5.60183048248291
    7. '```' → logprob: -5.60183048248291
    8. ',
' → logprob: -5.97683048248291
    9. '`' → logprob: -6.72683048248291
    10. '
' → logprob: -7.22683048248291

Token 10: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0831778049468994
    2. '(' → logprob: -1.2081778049468994
    3. '(
' → logprob: -1.3331778049468994
    4. '\' → logprob: -2.8331778049468994
    5. '\n' → logprob: -4.08317756652832
    6. '```' → logprob: -4.20817756652832
    7. '(def' → logprob: -6.08317756652832
    8. '`' → logprob: -6.70817756652832
    9. '(

' → logprob: -7.08317756652832
    10. '
' → logprob: -7.58317756652832

Token 11: ' Electron' (ID: 131282)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6304035186767578
    2. ' Fraction' → logprob: -1.0054035186767578
    3. ' Rational' → logprob: -3.755403518676758
    4. ' G' → logprob: -4.005403518676758
    5. ' Number' → logprob: -4.630403518676758
    6. ' My' → logprob: -5.005403518676758
    7. ' Eu' → logprob: -5.005403518676758
    8. ' Factor' → logprob: -5.005403518676758
    9. ' Math' → logprob: -5.255403518676758
    10. 'Fraction' → logprob: -5.255403518676758

Token 12: 'Fly' (ID: 60154)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04509897530078888
    2. '(' → logprob: -3.1700990200042725
    3. ' :' → logprob: -6.920098781585693
    4. '```' → logprob: -8.295099258422852
    5. '):' → logprob: -8.670099258422852
    6. '():' → logprob: -9.045099258422852
    7. ':**' → logprob: -9.170099258422852
    8. ''s' → logprob: -9.420099258422852
    9. ',' → logprob: -9.545099258422852
    10. '.' → logprob: -10.420099258422852

Token 13: 'Parameters' (ID: 10167)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5428240299224854
    2. 't' → logprob: -1.4178240299224854
    3. 'er' → logprob: -3.0428240299224854
    4. '():' → logprob: -3.0428240299224854
    5. 'r' → logprob: -3.4178240299224854
    6. '(' → logprob: -4.167823791503906
    7. 'ing' → logprob: -4.542823791503906
    8. '```' → logprob: -5.167823791503906
    9. 'ght' → logprob: -5.417823791503906
    10. 'T' → logprob: -5.917823791503906

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016217945143580437
    2. '(' → logprob: -4.1412177085876465
    3. '(:' → logprob: -9.266218185424805
    4. '():' → logprob: -9.766218185424805
    5. ':**' → logprob: -11.766218185424805
    6. '):' → logprob: -12.391218185424805
    7. '```' → logprob: -12.516218185424805
    8. ':def' → logprob: -13.016218185424805
    9. '(":' → logprob: -13.516218185424805
    10. ' :' → logprob: -13.891218185424805

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18429724872112274
    2. '    ' → logprob: -2.1842973232269287
    3. '    
' → logprob: -3.6842973232269287
    4. '(' → logprob: -4.18429708480835
    5. '(n' → logprob: -5.93429708480835
    6. ' 
' → logprob: -6.05929708480835
    7. ' ' → logprob: -6.18429708480835
    8. '     
' → logprob: -6.68429708480835
    9. ' (' → logprob: -6.93429708480835
    10. '<|end|>' → logprob: -6.93429708480835

Token 16: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11042261123657227
    2. ' def' → logprob: -3.8604226112365723
    3. '    
' → logprob: -3.8604226112365723
    4. '\n' → logprob: -4.360422611236572
    5. '```' → logprob: -4.735422611236572
    6. '\' → logprob: -4.860422611236572
    7. 'def' (adapté à ' def') → logprob: -4.860422611236572
    8. '    ' → logprob: -5.110422611236572
    9. '(' → logprob: -5.610422611236572
    10. ' 
' → logprob: -5.610422611236572

Token 17: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007766696624457836
    2. '__' → logprob: -5.6327667236328125
    3. ' init' → logprob: -6.3827667236328125
    4. ' _' → logprob: -7.0077667236328125
    5. 'init' → logprob: -7.1327667236328125
    6. '_init' → logprob: -7.5077667236328125
    7. '_' → logprob: -9.257766723632812
    8. ' ' → logprob: -10.132766723632812
    9. ' def' → logprob: -10.507766723632812
    10. ' ' → logprob: -10.882766723632812

Token 18: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -15.25
    3. '_init' → logprob: -18.625
    4. 'in' → logprob: -19.125
    5. 'int' → logprob: -19.25
    6. ' init' → logprob: -19.875
    7. 'inite' → logprob: -21.0
    8. 'innit' → logprob: -21.625
    9. 'i' → logprob: -22.0
    10. '-init' → logprob: -22.625

Token 19: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.054342519491910934
    2. '__' → logprob: -3.55434250831604
    3. '(' → logprob: -3.80434250831604
    4. '__(
' → logprob: -6.679342746734619
    5. '__((' → logprob: -8.679342269897461
    6. '__('' → logprob: -8.804342269897461
    7. '(self' → logprob: -9.179342269897461
    8. '_' → logprob: -9.429342269897461
    9. '__(*' → logprob: -9.429342269897461
    10. '_(' → logprob: -9.554342269897461

Token 20: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030412263004109263
    2. ' self' → logprob: -8.125304222106934
    3. ')' → logprob: -12.125304222106934
    4. 'parameters' → logprob: -13.375304222106934
    5. 'params' → logprob: -15.000304222106934
    6. '(self' → logprob: -16.000303268432617
    7. 's' → logprob: -16.625303268432617
    8. '0' → logprob: -16.625303268432617
    9. '       ' → logprob: -16.625303268432617
    10. '	self' → logprob: -16.875303268432617

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06841763854026794
    2. ' ,' → logprob: -3.068417549133301
    3. 'self' → logprob: -4.568417549133301
    4. ' self' → logprob: -5.568417549133301
    5. ')' → logprob: -6.068417549133301
    6. ' )' → logprob: -6.318417549133301
    7. ' ' → logprob: -8.0684175491333
    8. '_self' → logprob: -8.0684175491333
    9. ',self' → logprob: -8.9434175491333
    10. '_' → logprob: -9.1934175491333

Token 22: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7743586897850037
    2. 'self' → logprob: -0.7743586897850037
    3. ' n' → logprob: -4.774358749389648
    4. ' params' → logprob: -5.399358749389648
    5. 'n' → logprob: -5.461858749389648
    6. ' parameters' → logprob: -5.649358749389648
    7. 'parameters' → logprob: -5.899358749389648
    8. ' num' → logprob: -6.086858749389648
    9. 'params' → logprob: -6.149358749389648
    10. 'num' → logprob: -6.274358749389648

Token 23: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10962659120559692
    2. '):' → logprob: -2.859626531600952
    3. ':' → logprob: -4.234626770019531
    4. ')' → logprob: -4.734626770019531
    5. '_' → logprob: -4.859626770019531
    6. '_n' → logprob: -6.859626770019531
    7. ',b' → logprob: -6.859626770019531
    8. '1' → logprob: -6.984626770019531
    9. 'm' → logprob: -7.109626770019531
    10. 'a' → logprob: -7.109626770019531

Token 24: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01852342300117016
    2. ':' → logprob: -5.018523216247559
    3. ')' → logprob: -5.643523216247559
    4. '):' → logprob: -5.893523216247559
    5. ' ,' → logprob: -6.268523216247559
    6. '=' → logprob: -7.268523216247559
    7. ',a' → logprob: -7.393523216247559
    8. 'a' → logprob: -7.518523216247559
    9. '_' → logprob: -8.268523216247559
    10. '[' → logprob: -8.643523216247559

Token 25: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28203609585762024
    2. ' int' → logprob: -1.6570360660552979
    3. 'float' → logprob: -3.532036066055298
    4. ' float' → logprob: -3.782036066055298
    5. ' tuple' → logprob: -6.907036304473877
    6. 'tuple' → logprob: -6.907036304473877
    7. ' list' → logprob: -7.782036304473877
    8. 'list' → logprob: -8.157035827636719
    9. ' str' → logprob: -9.282035827636719
    10. 'str' → logprob: -9.532035827636719

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006065905559808016
    2. ')' → logprob: -5.756065845489502
    3. ' ,' → logprob: -6.631065845489502
    4. '):' → logprob: -6.756065845489502
    5. ',a' → logprob: -8.88106632232666
    6. '=' → logprob: -9.13106632232666
    7. 'a' → logprob: -9.38106632232666
    8. ':' → logprob: -10.50606632232666
    9. ' )' → logprob: -11.38106632232666
    10. '   ' → logprob: -12.25606632232666

Token 27: ' m' (ID: 284)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6431053280830383
    2. ' a' → logprob: -0.7681053280830383
    3. ' b' → logprob: -5.018105506896973
    4. 'b' → logprob: -5.768105506896973
    5. ' ' → logprob: -7.518105506896973
    6. ' ' → logprob: -10.143105506896973
    7. ')' → logprob: -11.205605506896973
    8. ',' → logprob: -11.205605506896973
    9. '    ' → logprob: -11.643105506896973
    10. 'n' → logprob: -11.893105506896973

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41271770000457764
    2. 'a' → logprob: -1.6627177000045776
    3. 'ax' → logprob: -2.412717819213867
    4. ',' → logprob: -4.412717819213867
    5. '_a' → logprob: -4.787717819213867
    6. 'ultip' → logprob: -4.787717819213867
    7. ')' → logprob: -5.162717819213867
    8. 'ultiply' → logprob: -5.287717819213867
    9. 'u' → logprob: -5.912717819213867
    10. ':' → logprob: -6.037717819213867

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1964561939239502
    2. '):' → logprob: -1.9464561939239502
    3. ',' → logprob: -3.44645619392395
    4. ')' → logprob: -6.196455955505371
    5. ' ):' → logprob: -7.196455955505371
    6. '1' → logprob: -8.071455955505371
    7. ':int' → logprob: -8.696455955505371
    8. '):
' → logprob: -8.821455955505371
    9. ' :' → logprob: -9.821455955505371
    10. ' )' → logprob: -10.071455955505371

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3496902585029602
    2. 'int' → logprob: -1.2246901988983154
    3. ')' → logprob: -7.9746904373168945
    4. ':int' → logprob: -8.099690437316895
    5. ' ' → logprob: -8.599690437316895
    6. 'a' → logprob: -9.349690437316895
    7. ' )' → logprob: -9.974690437316895
    8. '=int' → logprob: -10.099690437316895
    9. ' a' → logprob: -10.349690437316895
    10. ',int' → logprob: -10.349690437316895

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036415498703718185
    2. '):' → logprob: -3.5364155769348145
    3. ')' → logprob: -5.0364155769348145
    4. '),' → logprob: -10.036415100097656
    5. ' ,' → logprob: -10.161415100097656
    6. '):
' → logprob: -10.911415100097656
    7. '   ' → logprob: -11.036415100097656
    8. '=' → logprob: -12.411415100097656
    9. ':' → logprob: -12.536415100097656
    10. ',
' → logprob: -12.661415100097656

Token 32: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.35651323199272156
    2. 'a' → logprob: -1.356513261795044
    3. ' ' → logprob: -3.231513261795044
    4. ' ' → logprob: -6.606513023376465
    5. ' )' → logprob: -7.731513023376465
    6. ')' → logprob: -7.981513023376465
    7. ' ,' → logprob: -9.106513023376465
    8. ' m' → logprob: -9.481513023376465
    9. ',' → logprob: -9.481513023376465
    10. 'm' → logprob: -9.731513023376465

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001789881061995402
    2. '1' → logprob: -8.875179290771484
    3. ',' → logprob: -10.875179290771484
    4. '0' → logprob: -11.625179290771484
    5. ' ' → logprob: -12.625179290771484
    6. ')' → logprob: -13.687679290771484
    7. 'a' → logprob: -13.687679290771484
    8. ':' → logprob: -14.062679290771484
    9. '_' → logprob: -14.187679290771484
    10. '=' → logprob: -14.312679290771484

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002394170151092112
    2. ' :' → logprob: -8.625239372253418
    3. ',' → logprob: -10.250239372253418
    4. ':int' → logprob: -11.500239372253418
    5. ')' → logprob: -11.625239372253418
    6. '=' → logprob: -12.875239372253418
    7. '):' → logprob: -13.625239372253418
    8. ' ,' → logprob: -14.875239372253418
    9. '   ' → logprob: -15.125239372253418
    10. '_:' → logprob: -15.625239372253418

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.43828219175338745
    2. 'int' → logprob: -1.0632822513580322
    3. ' ' → logprob: -5.313282012939453
    4. ' ' → logprob: -6.063282012939453
    5. '<|end|>' → logprob: -7.063282012939453
    6. '=int' → logprob: -7.438282012939453
    7. 'space' → logprob: -8.438282012939453
    8. '<|end|>' → logprob: -9.063282012939453
    9. ')' → logprob: -9.563282012939453
    10. '(int' → logprob: -9.688282012939453

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033677343162707984
    2. ' ,' → logprob: -8.625336647033691
    3. ':' → logprob: -8.875336647033691
    4. ')' → logprob: -11.375336647033691
    5. ',int' → logprob: -13.125336647033691
    6. '):' → logprob: -13.250336647033691
    7. ':int' → logprob: -13.750336647033691
    8. '   ' → logprob: -14.875336647033691
    9. ' ' → logprob: -15.250336647033691
    10. ',
' → logprob: -16.125337600708008

Token 37: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.04102550446987152
    2. 'm' → logprob: -3.416025400161743
    3. ' ' → logprob: -5.166025638580322
    4. ' ' → logprob: -6.791025638580322
    5. ')' → logprob: -8.166025161743164
    6. ' a' → logprob: -9.541025161743164
    7. 'space' → logprob: -10.666025161743164
    8. '<|end|>' → logprob: -10.916025161743164
    9. 's' → logprob: -11.291025161743164
    10. ' ,' → logprob: -11.291025161743164

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003878934367094189
    2. '1' → logprob: -7.875387668609619
    3. '_' → logprob: -12.375388145446777
    4. ' ' → logprob: -13.750388145446777
    5. '3' → logprob: -14.500388145446777
    6. '₂' → logprob: -14.687888145446777
    7. ')' → logprob: -14.875388145446777
    8. '0' → logprob: -15.250388145446777
    9. '```' → logprob: -15.250388145446777
    10. 'a' → logprob: -16.06288719177246

Token 39: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09450049698352814
    2. ')' → logprob: -2.4695005416870117
    3. ',' → logprob: -5.344500541687012
    4. ':' → logprob: -7.219500541687012
    5. '):
' → logprob: -11.094500541687012
    6. ' ):' → logprob: -11.594500541687012
    7. '   ' → logprob: -12.094500541687012
    8. '```' → logprob: -13.469500541687012
    9. '),' → logprob: -13.594500541687012
    10. ' ' → logprob: -13.844500541687012

Token 40: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014939253218472004
    2. 'int' → logprob: -4.264939308166504
    3. ')' → logprob: -7.889939308166504
    4. ' )' → logprob: -8.139939308166504
    5. ' ' → logprob: -9.639939308166504
    6. '=int' → logprob: -10.889939308166504
    7. ':int' → logprob: -11.639939308166504
    8. '[int' → logprob: -12.514939308166504
    9. ']int' → logprob: -12.764939308166504
    10. ' ' → logprob: -13.264939308166504

Token 41: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002057000296190381
    2. ')' → logprob: -6.252057075500488
    3. ',' → logprob: -9.127057075500488
    4. ':' → logprob: -11.502057075500488
    5. '):
' → logprob: -11.877057075500488
    6. ' ):' → logprob: -13.252057075500488
    7. '   ' → logprob: -14.752057075500488
    8. ' ' → logprob: -16.877056121826172
    9. '```' → logprob: -16.877056121826172
    10. '),' → logprob: -17.002056121826172

Token 42: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6602895259857178
    2. ' n' → logprob: -2.1602895259857178
    3. ' ' → logprob: -2.5352895259857178
    4. 'a' → logprob: -3.4102895259857178
    5. ' d' → logprob: -3.5352895259857178
    6. ' b' → logprob: -3.6602895259857178
    7. ' m' → logprob: -3.7852895259857178
    8. ' N' → logprob: -3.9102895259857178
    9. ' t' → logprob: -4.160289764404297
    10. ' c' → logprob: -4.160289764404297

Token 43: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0571150965988636
    2. '1' → logprob: -2.932115077972412
    3. ')' → logprob: -6.807115077972412
    4. '_' → logprob: -8.05711555480957
    5. '2' → logprob: -8.43211555480957
    6. '0' → logprob: -9.93211555480957
    7. 'a' → logprob: -10.05711555480957
    8. ',' → logprob: -10.24461555480957
    9. 's' → logprob: -10.30711555480957
    10. 'e' → logprob: -11.11961555480957

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014923651469871402
    2. ' :' → logprob: -6.876492500305176
    3. ')' → logprob: -8.126492500305176
    4. ':int' → logprob: -9.251492500305176
    5. '):' → logprob: -10.251492500305176
    6. ',' → logprob: -11.501492500305176
    7. '_:' → logprob: -11.501492500305176
    8. '=' → logprob: -12.251492500305176
    9. '_' → logprob: -13.376492500305176
    10. '`:' → logprob: -14.251492500305176

Token 45: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5248027443885803
    2. ' int' → logprob: -0.8998027443885803
    3. '=int' → logprob: -7.1498026847839355
    4. '[int' → logprob: -8.524803161621094
    5. '<|end|>' → logprob: -8.649803161621094
    6. ':int' → logprob: -8.649803161621094
    7. '(int' → logprob: -9.274803161621094
    8. ',int' → logprob: -9.774803161621094
    9. ' ' → logprob: -9.774803161621094
    10. '<int' → logprob: -10.524803161621094

Token 46: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059591349214315414
    2. '):' → logprob: -3.434591293334961
    3. ')' → logprob: -4.059591293334961
    4. ',' → logprob: -4.934591293334961
    5. ':int' → logprob: -7.309591293334961
    6. ' :' → logprob: -8.559591293334961
    7. '=' → logprob: -9.309591293334961
    8. '<|end|>' → logprob: -9.809591293334961
    9. '`:' → logprob: -10.309591293334961
    10. '   ' → logprob: -10.934591293334961

Token 47: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.743428111076355
    2. ' int' → logprob: -1.243428111076355
    3. 'int' → logprob: -2.1184282302856445
    4. ' m' → logprob: -2.9934282302856445
    5. '<|end|>' → logprob: -3.4934282302856445
    6. 'm' → logprob: -4.2434282302856445
    7. ' ' → logprob: -4.8684282302856445
    8. 'space' → logprob: -5.9934282302856445
    9. '```' → logprob: -5.9934282302856445
    10. ')' → logprob: -6.6184282302856445

Token 48: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.097437315271236e-05
    2. '1' → logprob: -10.12505054473877
    3. '_' → logprob: -11.50005054473877
    4. ')' → logprob: -14.75005054473877
    5. ' ' → logprob: -15.00005054473877
    6. '=' → logprob: -17.625051498413086
    7. '```' → logprob: -17.625051498413086
    8. ':' → logprob: -18.187551498413086
    9. '   ' → logprob: -18.250051498413086
    10. '):' → logprob: -18.812551498413086

Token 49: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0979798287153244
    2. ':' → logprob: -2.847979784011841
    3. ')' → logprob: -3.347979784011841
    4. '):
' → logprob: -9.097979545593262
    5. ' ):' → logprob: -10.222979545593262
    6. ',' → logprob: -10.347979545593262
    7. '   ' → logprob: -10.972979545593262
    8. '```' → logprob: -12.097979545593262
    9. '):

' → logprob: -13.472979545593262
    10. ':int' → logprob: -13.472979545593262

Token 50: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17977319657802582
    2. ' int' → logprob: -1.804773211479187
    3. ')' → logprob: -11.179773330688477
    4. ':int' → logprob: -12.054773330688477
    5. '	int' → logprob: -13.554773330688477
    6. '=int' → logprob: -13.554773330688477
    7. '```' → logprob: -13.554773330688477
    8. '(int' → logprob: -13.804773330688477
    9. '[int' → logprob: -13.804773330688477
    10. ']int' → logprob: -14.179773330688477

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0079043535515666
    2. ')' → logprob: -4.882904529571533
    3. ':' → logprob: -9.132904052734375
    4. '):
' → logprob: -9.382904052734375
    5. ',' → logprob: -9.507904052734375
    6. ' ):' → logprob: -10.882904052734375
    7. '   ' → logprob: -11.757904052734375
    8. '):
' → logprob: -13.507904052734375
    9. '```' → logprob: -13.757904052734375
    10. ''):' → logprob: -14.132904052734375

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009845776949077845
    2. ':' → logprob: -8.500984191894531
    3. '<|end|>' → logprob: -8.500984191894531
    4. '\n' → logprob: -9.125984191894531
    5. '```' → logprob: -9.125984191894531
    6. '        
' → logprob: -9.125984191894531
    7. '   ' → logprob: -9.500984191894531
    8. '\' → logprob: -10.500984191894531
    9. 'newline' → logprob: -10.750984191894531
    10. '
' → logprob: -11.250984191894531

Token 53: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35417988896369934
    2. 'self' (adapté à ' self') → logprob: -1.354179859161377
    3. ' self' → logprob: -3.604179859161377
    4. '        ' → logprob: -5.354179859161377
    5. '```' → logprob: -5.854179859161377
    6. '        
' → logprob: -6.854179859161377
    7. '
' → logprob: -7.104179859161377
    8. '   ' → logprob: -7.229179859161377
    9. '           ' → logprob: -7.604179859161377
    10. '    ' → logprob: -8.354180335998535

Token 54: '.a' (ID: 8772)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0028602739330381155
    2. '.a' → logprob: -5.877860069274902
    3. ' .' → logprob: -9.877860069274902
    4. 'a' → logprob: -13.002860069274902
    5. 'self' → logprob: -15.377860069274902
    6. '​.' → logprob: -15.502860069274902
    7. ' a' → logprob: -15.627860069274902
    8. '.ai' → logprob: -15.877860069274902
    9. '.py' → logprob: -16.37786102294922
    10. '.self' → logprob: -16.37786102294922

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '_' → logprob: -11.375012397766113
    3. 'a' → logprob: -15.500012397766113
    4. ' =' → logprob: -15.750012397766113
    5. ' ' → logprob: -16.125011444091797
    6. '_values' → logprob: -17.250011444091797
    7. '=' → logprob: -17.375011444091797
    8. 's' → logprob: -18.000011444091797
    9. '```' → logprob: -18.000011444091797
    10. ' _' → logprob: -18.375011444091797

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28643104434013367
    2. '=' → logprob: -1.411431074142456
    3. ',' → logprob: -5.286430835723877
    4. ' ,' → logprob: -8.536431312561035
    5. ')' → logprob: -13.036431312561035
    6. ' ' → logprob: -13.286431312561035
    7. '_' → logprob: -13.286431312561035
    8. ' =)' → logprob: -14.411431312561035
    9. '=int' → logprob: -14.536431312561035
    10. '=}' → logprob: -14.536431312561035

Token 57: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3868713676929474
    2. 'a' → logprob: -1.136871337890625
    3. '	a' → logprob: -15.386871337890625
    4. ' ' → logprob: -16.761871337890625
    5. ' ' → logprob: -17.011871337890625
    6. '_a' → logprob: -17.386871337890625
    7. ')a' → logprob: -18.386871337890625
    8. '    ' → logprob: -18.636871337890625
    9. '>a' → logprob: -19.761871337890625
    10. '   ' → logprob: -20.761871337890625

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -13.250005722045898
    3. 'a' → logprob: -14.375005722045898
    4. ' ' → logprob: -14.375005722045898
    5. '3' → logprob: -14.875005722045898
    6. ',' → logprob: -15.375005722045898
    7. 'm' → logprob: -15.500005722045898
    8. 'r' → logprob: -15.500005722045898
    9. 'i' → logprob: -15.875005722045898
    10. 'b' → logprob: -16.1250057220459

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1439485400915146
    2. '<|end|>' → logprob: -2.268948554992676
    3. '        ' → logprob: -3.893948554992676
    4. ' ' → logprob: -5.018948554992676
    5. ',' → logprob: -6.893948554992676
    6. '      ' → logprob: -7.268948554992676
    7. '    ' → logprob: -7.393948554992676
    8. '<|end|>' → logprob: -8.018948554992676
    9. '   ' → logprob: -8.643948554992676
    10. '     ' → logprob: -8.643948554992676

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10046038776636124
    2. '<|end|>' → logprob: -2.7254602909088135
    3. ' ' → logprob: -4.475460529327393
    4. '        ' → logprob: -4.600460529327393
    5. '        
' → logprob: -5.975460529327393
    6. ' 
' → logprob: -6.350460529327393
    7. '
' → logprob: -6.475460529327393
    8. '    ' → logprob: -7.475460529327393
    9. 'm' → logprob: -7.850460529327393
    10. '    
' → logprob: -7.975460529327393

Token 61: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5385437607765198
    2. 'm' → logprob: -1.538543701171875
    3. ',' → logprob: -3.163543701171875
    4. '        ' → logprob: -3.413543701171875
    5. '       ' → logprob: -3.413543701171875
    6. '        
' → logprob: -3.788543701171875
    7. ' 
' → logprob: -3.913543701171875
    8. ' self' → logprob: -4.163543701171875
    9. ' ' → logprob: -4.663543701171875
    10. ' ,' → logprob: -4.788543701171875

Token 62: '.m' (ID: 1021)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7053362131118774
    2. '.m' → logprob: -0.7053362131118774
    3. 'm' → logprob: -4.580336093902588
    4. 'a' → logprob: -7.330336093902588
    5. ' .' → logprob: -7.455336093902588
    6. ' m' → logprob: -8.080336570739746
    7. '.a' → logprob: -8.455336570739746
    8. '1' → logprob: -10.455336570739746
    9. '.g' → logprob: -11.330336570739746
    10. ' ' → logprob: -11.580336570739746

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '3' → logprob: -15.000000953674316
    3. '_' → logprob: -16.0
    4. '=' → logprob: -18.0
    5. '```' → logprob: -18.875
    6. '2' → logprob: -19.25
    7. ' =' → logprob: -19.25
    8. 'm' → logprob: -20.625
    9. '۱' → logprob: -20.625
    10. ')' → logprob: -21.0

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023245453834534
    2. '=' → logprob: -1.910232424736023
    3. ' ' → logprob: -13.160232543945312
    4. '<|end|>' → logprob: -13.285232543945312
    5. ' =
' → logprob: -13.410232543945312
    6. ',' → logprob: -13.660232543945312
    7. '=m' → logprob: -14.410232543945312
    8. ')' → logprob: -15.160232543945312
    9. '    ' → logprob: -15.160232543945312
    10. '   ' → logprob: -15.285232543945312

Token 65: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3868723213672638
    2. ' m' → logprob: -1.1368722915649414
    3. ' ' → logprob: -13.886872291564941
    4. ' ' → logprob: -15.761872291564941
    5. '	m' → logprob: -16.761873245239258
    6. '   ' → logprob: -17.386873245239258
    7. 'a' → logprob: -17.449373245239258
    8. 'g' → logprob: -18.011873245239258
    9. '  ' → logprob: -18.449373245239258
    10. '    ' → logprob: -19.074373245239258

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003049570368602872
    2. '2' → logprob: -8.75030517578125
    3. '3' → logprob: -8.87530517578125
    4. '_' → logprob: -13.25030517578125
    5. '```' → logprob: -13.50030517578125
    6. '   ' → logprob: -13.62530517578125
    7. 'odel' → logprob: -14.87530517578125
    8. 'm' → logprob: -15.00030517578125
    9. ' ' → logprob: -15.25030517578125
    10. 'od' → logprob: -15.37530517578125

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0165781881660223
    2. '        
' → logprob: -5.016578197479248
    3. '<|end|>' → logprob: -5.516578197479248
    4. '   ' → logprob: -6.766578197479248
    5. '    
' → logprob: -6.891578197479248
    6. ' 
' → logprob: -6.891578197479248
    7. '  
' → logprob: -7.516578197479248
    8. '
' → logprob: -7.766578197479248
    9. ',' → logprob: -8.14157772064209
    10. 'self' → logprob: -8.39157772064209

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001030903891660273
    2. 'self' → logprob: -7.751030921936035
    3. '        
' → logprob: -8.126030921936035
    4. '   ' → logprob: -9.251030921936035
    5. '<|end|>' → logprob: -9.751030921936035
    6. '        ' → logprob: -10.376030921936035
    7. '
' → logprob: -11.126030921936035
    8. '     ' → logprob: -11.251030921936035
    9. '\' → logprob: -11.501030921936035
    10. ' ' → logprob: -11.501030921936035

Token 69: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35236579179763794
    2. 'self' (adapté à ' self') → logprob: -1.2273657321929932
    3. '        
' → logprob: -6.477365970611572
    4. ' self' → logprob: -7.352365970611572
    5. '   ' → logprob: -7.477365970611572
    6. '
' → logprob: -7.852365970611572
    7. ' ' → logprob: -8.727365493774414
    8. '        ' → logprob: -9.102365493774414
    9. '    
' → logprob: -9.352365493774414
    10. ' 
' → logprob: -9.352365493774414

Token 70: '.a' (ID: 8772)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007950837723910809
    2. '.a' → logprob: -5.132950782775879
    3. '2' → logprob: -7.507950782775879
    4. ' .' → logprob: -7.632950782775879
    5. '=' → logprob: -8.007950782775879
    6. 'a' → logprob: -8.507950782775879
    7. '.m' → logprob: -9.007950782775879
    8. ' =' → logprob: -9.257950782775879
    9. 'm' → logprob: -9.507950782775879
    10. '.g' → logprob: -10.882950782775879

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016110315918922424
    2. '3' → logprob: -6.626611232757568
    3. '1' → logprob: -8.37661075592041
    4. '=' → logprob: -11.37661075592041
    5. '_' → logprob: -11.87661075592041
    6. ' ' → logprob: -11.87661075592041
    7. ' =' → logprob: -12.12661075592041
    8. ',' → logprob: -12.25161075592041
    9. '4' → logprob: -12.93911075592041
    10. '   ' → logprob: -13.00161075592041

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02327110432088375
    2. '=' → logprob: -3.773271083831787
    3. ' ' → logprob: -11.398271560668945
    4. '<|end|>' → logprob: -12.273271560668945
    5. '   ' → logprob: -13.148271560668945
    6. '<|end|>' → logprob: -13.273271560668945
    7. '    ' → logprob: -13.398271560668945
    8. ',' → logprob: -14.148271560668945
    9. ' =)' → logprob: -14.148271560668945
    10. ' ,' → logprob: -14.398271560668945

Token 73: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31333500146865845
    2. 'a' → logprob: -1.3133349418640137
    3. ' ' → logprob: -10.313335418701172
    4. ' m' → logprob: -10.688335418701172
    5. 'm' → logprob: -11.938335418701172
    6. ' ' → logprob: -12.938335418701172
    7. '_a' → logprob: -13.188335418701172
    8. ',a' → logprob: -13.313335418701172
    9. ''a' → logprob: -13.813335418701172
    10. '	a' → logprob: -13.813335418701172

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.250041007995605
    3. 'm' → logprob: -13.500041007995605
    4. 'i' → logprob: -13.500041007995605
    5. 'n' → logprob: -15.000041007995605
    6. 'nd' → logprob: -15.125041007995605
    7. 'I' → logprob: -15.250041007995605
    8. '   ' → logprob: -15.375041007995605
    9. '=' → logprob: -15.437541007995605
    10. 'r' → logprob: -16.000041961669922

Token 75: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022359317168593407
    2. '<|end|>' → logprob: -4.272359371185303
    3. '```' → logprob: -6.147359371185303
    4. 'self' → logprob: -6.522359371185303
    5. ',' → logprob: -6.772359371185303
    6. 'm' → logprob: -7.022359371185303
    7. ' ' → logprob: -7.272359371185303
    8. '        
' → logprob: -8.022358894348145
    9. ' ' → logprob: -8.147358894348145
    10. ')' → logprob: -8.397358894348145

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24998584389686584
    2. '<|end|>' → logprob: -1.8749858140945435
    3. 'self' → logprob: -3.499985933303833
    4. ' ' → logprob: -3.749985933303833
    5. ' 
' → logprob: -5.374985694885254
    6. '        
' → logprob: -5.749985694885254
    7. '        ' → logprob: -6.999985694885254
    8. '=' → logprob: -7.124985694885254
    9. ' self' → logprob: -7.249985694885254
    10. '   ' → logprob: -7.249985694885254

Token 77: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18680472671985626
    2. 'm' → logprob: -1.9368047714233398
    3. '       ' → logprob: -3.68680477142334
    4. ' self' → logprob: -6.81180477142334
    5. '   ' → logprob: -9.93680477142334
    6. '_m' → logprob: -11.81180477142334
    7. ' m' → logprob: -12.56180477142334
    8. '
' → logprob: -12.81180477142334
    9. '```' → logprob: -13.06180477142334
    10. ' ' → logprob: -13.18680477142334

Token 78: '.m' (ID: 1021)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5793027281761169
    2. '.m' → logprob: -0.8293027281761169
    3. 'm' → logprob: -5.704302787780762
    4. ' .' → logprob: -11.204302787780762
    5. '.
' → logprob: -13.079302787780762
    6. '.м' → logprob: -13.579302787780762
    7. '=m' → logprob: -13.954302787780762
    8. '_m' → logprob: -14.079302787780762
    9. '	m' → logprob: -14.204302787780762
    10. ' m' → logprob: -14.454302787780762

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -13.375003814697266
    3. '3' → logprob: -13.500003814697266
    4. ' ' → logprob: -15.125003814697266
    5. '_' → logprob: -16.125003814697266
    6. '₂' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.687503814697266
    8. '=' → logprob: -17.937503814697266
    9. '  ' → logprob: -18.187503814697266
    10. '۲' → logprob: -18.750003814697266

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198034808039665
    2. '=' → logprob: -2.8119802474975586
    3. '=m' → logprob: -12.061980247497559
    4. '<|end|>' → logprob: -12.811980247497559
    5. 'm' → logprob: -13.186980247497559
    6. ' ' → logprob: -13.436980247497559
    7. ')' → logprob: -15.561980247497559
    8. '   ' → logprob: -15.561980247497559
    9. '<|end|>' → logprob: -16.061981201171875
    10. ' m' → logprob: -16.686981201171875

Token 81: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.048587825149297714
    2. ' m' → logprob: -3.0485877990722656
    3. '	m' → logprob: -15.923587799072266
    4. ' м' → logprob: -16.298587799072266
    5. '   ' → logprob: -16.423587799072266
    6. ' ' → logprob: -16.673587799072266
    7. 'м' → logprob: -17.423587799072266
    8. ' ' → logprob: -17.548587799072266
    9. ')m' → logprob: -17.923587799072266
    10. '$m' → logprob: -17.923587799072266

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '   ' → logprob: -17.000001907348633
    5. '3' → logprob: -17.250001907348633
    6. '  ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'm' → logprob: -18.500001907348633
    9. '₂' → logprob: -18.625001907348633
    10. '_' → logprob: -18.625001907348633

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010068533942103386
    2. 'self' → logprob: -4.635068416595459
    3. ' self' → logprob: -8.760068893432617
    4. '```' → logprob: -8.885068893432617
    5. '   ' → logprob: -12.260068893432617
    6. '
' → logprob: -12.635068893432617
    7. '        
' → logprob: -12.760068893432617
    8. '``' → logprob: -13.260068893432617
    9. ' ' → logprob: -13.760068893432617
    10. '	self' → logprob: -14.260068893432617

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002358409110456705
    2. 'self' → logprob: -8.500235557556152
    3. '```' → logprob: -10.500235557556152
    4. '   ' → logprob: -13.000235557556152
    5. ' self' → logprob: -13.250235557556152
    6. '``' → logprob: -15.375235557556152
    7. '      ' → logprob: -16.25023651123047
    8. '	' → logprob: -16.37523651123047
    9. '`' → logprob: -16.50023651123047
    10. '           ' → logprob: -16.62523651123047

Token 85: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13201484084129333
    2. '       ' → logprob: -2.132014751434326
    3. ' self' → logprob: -5.632014751434326
    4. '```' → logprob: -6.632014751434326
    5. '   ' → logprob: -9.382015228271484
    6. ' ' → logprob: -10.507015228271484
    7. '        
' → logprob: -11.007015228271484
    8. '        ' → logprob: -11.757015228271484
    9. '	self' → logprob: -11.882015228271484
    10. '
' → logprob: -12.007015228271484

Token 86: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.058733582496643
    2. '3' → logprob: -1.183733582496643
    3. '.' → logprob: -1.433733582496643
    4. '.a' → logprob: -2.3087334632873535
    5. '_' → logprob: -5.3087334632873535
    6. '._' → logprob: -6.5587334632873535
    7. '_a' → logprob: -6.9337334632873535
    8. '```' → logprob: -7.4337334632873535
    9. '=' → logprob: -7.8087334632873535
    10. ' a' → logprob: -8.683733940124512

Token 87: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '۳' → logprob: -18.0
    3. '_' → logprob: -18.875
    4. '３' → logprob: -19.5
    5. ' ' → logprob: -19.625
    6. '=' → logprob: -19.875
    7. '³' → logprob: -20.0
    8. '٣' → logprob: -20.0
    9. '৩' → logprob: -20.125
    10. '३' → logprob: -20.5

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575968325138092
    2. ' =' → logprob: -0.825968325138092
    3. '<|end|>' → logprob: -10.825968742370605
    4. ' ' → logprob: -11.950968742370605
    5. ')' → logprob: -14.575968742370605
    6. ',' → logprob: -14.950968742370605
    7. '<|end|>' → logprob: -14.950968742370605
    8. '_' → logprob: -15.075968742370605
    9. ' =)' → logprob: -15.700968742370605
    10. '`' → logprob: -16.57596778869629

Token 89: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519335150718689
    2. ' a' → logprob: -1.5019335746765137
    3. 'm' → logprob: -13.001933097839355
    4. ' ' → logprob: -14.126933097839355
    5. '	a' → logprob: -14.376933097839355
    6. ' m' → logprob: -14.626933097839355
    7. '_a' → logprob: -15.626933097839355
    8. '<|end|>' → logprob: -16.376934051513672
    9. ' ' → logprob: -16.751934051513672
    10. '3' → logprob: -17.376934051513672

Token 90: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -13.250003814697266
    3. 'm' → logprob: -13.750003814697266
    4. '  ' → logprob: -15.500003814697266
    5. '1' → logprob: -15.625003814697266
    6. '   ' → logprob: -16.000003814697266
    7. '_' → logprob: -16.125003814697266
    8. '۳' → logprob: -17.187503814697266
    9. '     ' → logprob: -17.250003814697266
    10. 's' → logprob: -17.312503814697266

Token 91: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.880915641784668
    2. '       ' → logprob: -0.880915641784668
    3. '<|end|>' → logprob: -2.380915641784668
    4. 'self' → logprob: -3.505915641784668
    5. ' ' → logprob: -3.880915641784668
    6. ' m' → logprob: -4.630915641784668
    7. ' self' → logprob: -4.630915641784668
    8. ',' → logprob: -6.505915641784668
    9. ')' → logprob: -6.630915641784668
    10. ' ' → logprob: -6.880915641784668

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4336540997028351
    2. 'm' → logprob: -1.4336540699005127
    3. 'self' → logprob: -2.6836540699005127
    4. '<|end|>' → logprob: -3.8086540699005127
    5. ' ' → logprob: -4.183654308319092
    6. ' self' → logprob: -5.308654308319092
    7. ' m' → logprob: -6.933654308319092
    8. ' ' → logprob: -7.683654308319092
    9. 's' → logprob: -8.433653831481934
    10. '   ' → logprob: -8.433653831481934

Token 93: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025179961696267128
    2. ' self' → logprob: -3.775179862976074
    3. 'm' → logprob: -6.775179862976074
    4. '       ' → logprob: -7.150179862976074
    5. '   ' → logprob: -13.025179862976074
    6. ' m' → logprob: -13.400179862976074
    7. '```' → logprob: -13.650179862976074
    8. ' ' → logprob: -14.150179862976074
    9. '	self' → logprob: -16.15018081665039
    10. '        ' → logprob: -16.77518081665039

Token 94: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.03541460633277893
    2. '.' → logprob: -4.035414695739746
    3. 'm' → logprob: -4.660414695739746
    4. '_m' → logprob: -4.910414695739746
    5. '_' → logprob: -8.535414695739746
    6. ' .' → logprob: -10.535414695739746
    7. '._' → logprob: -11.160414695739746
    8. '	m' → logprob: -11.285414695739746
    9. ' m' → logprob: -11.410414695739746
    10. '3' → logprob: -11.910414695739746

Token 95: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '_' → logprob: -17.25
    3. ' ' → logprob: -18.25
    4. '۳' → logprob: -18.5
    5. 'm' → logprob: -19.0
    6. '_three' → logprob: -19.875
    7. '=' → logprob: -20.125
    8. '৩' → logprob: -20.25
    9. '３' → logprob: -20.25
    10. '३' → logprob: -21.0625

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474087655544281
    2. '=' → logprob: -0.974087655544281
    3. '=m' → logprob: -11.599087715148926
    4. ' ' → logprob: -14.099087715148926
    5. '   ' → logprob: -14.849087715148926
    6. 'm' → logprob: -15.599087715148926
    7. ' =
' → logprob: -17.09908676147461
    8. '<|end|>' → logprob: -17.22408676147461
    9. ')' → logprob: -17.72408676147461
    10. '=
' → logprob: -18.34908676147461

Token 97: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.048589076846838
    2. ' m' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.923588752746582
    4. ' ' → logprob: -14.923588752746582
    5. 'a' → logprob: -15.798588752746582
    6. '	m' → logprob: -15.923588752746582
    7. '   ' → logprob: -16.2985897064209
    8. 'м' → logprob: -17.1735897064209
    9. ' м' → logprob: -17.6735897064209
    10. '3' → logprob: -17.6735897064209

Token 98: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.75
    3. '   ' → logprob: -16.125
    4. ' ' → logprob: -16.5
    5. '```' → logprob: -18.25
    6. '_' → logprob: -18.375
    7. '۳' → logprob: -18.75
    8. '  ' → logprob: -18.75
    9. 'm' → logprob: -19.125
    10. '３' → logprob: -19.375

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16878654062747955
    2. '   ' → logprob: -2.1687865257263184
    3. '    
' → logprob: -4.043786525726318
    4. 'def' → logprob: -4.543786525726318
    5. '<|end|>' → logprob: -4.918786525726318
    6. ':' → logprob: -6.918786525726318
    7. '       ' → logprob: -7.293786525726318
    8. '        
' → logprob: -7.418786525726318
    9. '  
' → logprob: -7.543786525726318
    10. ',' → logprob: -7.793786525726318

Token 100: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09004493802785873
    2. '   ' → logprob: -2.9650449752807617
    3. '<|end|>' → logprob: -4.215044975280762
    4. '    
' → logprob: -4.715044975280762
    5. 'def' → logprob: -5.215044975280762
    6. '  
' → logprob: -6.840044975280762
    7. ',' → logprob: -7.090044975280762
    8. ' 
' → logprob: -7.090044975280762
    9. ':' → logprob: -7.215044975280762
    10. '

' → logprob: -8.090044975280762

Token 101: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.057689368724823
    2. 'def' → logprob: -3.5576894283294678
    3. '    
' → logprob: -4.432689189910889
    4. '   ' → logprob: -4.557689189910889
    5. ' def' → logprob: -5.807689189910889
    6. '        
' → logprob: -6.932689189910889
    7. '

' → logprob: -7.932689189910889
    8. '  
' → logprob: -8.307689666748047
    9. ' 
' → logprob: -8.432689666748047
    10. '       ' → logprob: -8.557689666748047

Token 102: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5733981728553772
    2. '._' → logprob: -1.9483981132507324
    3. '.g' → logprob: -2.4483981132507324
    4. '.m' → logprob: -3.1983981132507324
    5. ' .' → logprob: -3.5733981132507324
    6. '.n' → logprob: -3.5733981132507324
    7. '.a' → logprob: -4.323398113250732
    8. '.l' → logprob: -4.323398113250732
    9. '.mod' → logprob: -4.448398113250732
    10. '.period' → logprob: -4.448398113250732

Token 103: 'validate' (ID: 12611)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.4302791357040405
    2. 'g' → logprob: -1.6802791357040405
    3. 'l' → logprob: -1.6802791357040405
    4. 'validate' → logprob: -2.55527925491333
    5. 'cache' → logprob: -2.68027925491333
    6. 'check' → logprob: -3.05527925491333
    7. 'den' → logprob: -3.43027925491333
    8. 'params' → logprob: -3.43027925491333
    9. 'period' → logprob: -3.68027925491333
    10. 'compute' → logprob: -3.93027925491333

Token 104: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.025311550125479698
    2. '_params' → logprob: -4.275311470031738
    3. '_parameters' → logprob: -4.650311470031738
    4. '_' → logprob: -7.025311470031738
    5. '(' → logprob: -8.150311470031738
    6. '_values' → logprob: -9.150311470031738
    7. '_constraints' → logprob: -9.650311470031738
    8. 'params' → logprob: -10.400311470031738
    9. '()
' → logprob: -10.900311470031738
    10. '_args' → logprob: -11.275311470031738

Token 105: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023986559361219406
    2. 'def' → logprob: -4.023986339569092
    3. '   ' → logprob: -6.023986339569092
    4. '    
' → logprob: -6.773986339569092
    5. ' def' → logprob: -7.148986339569092
    6. '  
' → logprob: -7.148986339569092
    7. '<|end|>' → logprob: -8.14898681640625
    8. ' 
' → logprob: -8.39898681640625
    9. '```' → logprob: -9.89898681640625
    10. '

' → logprob: -10.02398681640625

Token 106: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0027783699333667755
    2. ' def' → logprob: -6.37777853012085
    3. '   ' → logprob: -7.37777853012085
    4. '
' → logprob: -8.002778053283691
    5. ' ' → logprob: -10.127778053283691
    6. '<|end|>' → logprob: -10.252778053283691
    7. '    
' → logprob: -10.502778053283691
    8. '  
' → logprob: -12.127778053283691
    9. ':def' → logprob: -12.877778053283691
    10. '	def' → logprob: -13.502778053283691

Token 107: ' _' (ID: 1175)
  Prédit: '_validate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_validate' → logprob: -0.0009420731803402305
    2. ' _' → logprob: -7.000942230224609
    3. '_' → logprob: -10.75094223022461
    4. '_validation' → logprob: -13.25094223022461
    5. '_valid' → logprob: -13.50094223022461
    6. 'def' → logprob: -14.12594223022461
    7. '_val' → logprob: -14.37594223022461
    8. '_get' → logprob: -14.37594223022461
    9. '_define' → logprob: -14.62594223022461
    10. '_generate' → logprob: -14.87594223022461

Token 108: 'validate' (ID: 12611)
  Prédit: 'validate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'validate' → logprob: -2.816093228830141e-06
    2. 'def' → logprob: -14.12500286102295
    3. '_validate' → logprob: -14.12500286102295
    4. '	validate' → logprob: -14.37500286102295
    5. 'val' → logprob: -15.25000286102295
    6. ' validate' → logprob: -15.50000286102295
    7. '.validate' → logprob: -15.75000286102295
    8. 'check' → logprob: -16.500001907348633
    9. 'valid' → logprob: -17.375001907348633
    10. 'init' → logprob: -17.500001907348633

Token 109: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.029847231227905e-05
    2. '(' → logprob: -9.750080108642578
    3. 'self' → logprob: -10.750080108642578
    4. ' (' → logprob: -15.625080108642578
    5. '   ' → logprob: -15.875080108642578
    6. ' self' → logprob: -16.500080108642578
    7. '(
' → logprob: -17.125080108642578
    8. '	self' → logprob: -17.500080108642578
    9. ' ' → logprob: -17.625080108642578
    10. 'def' → logprob: -18.375080108642578

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009112500585615635
    2. '):
' → logprob: -4.759112358093262
    3. 'self' → logprob: -8.634112358093262
    4. ' ):' → logprob: -8.759112358093262
    5. ')' → logprob: -9.134112358093262
    6. ',' → logprob: -10.634112358093262
    7. ':' → logprob: -11.259112358093262
    8. '   ' → logprob: -12.134112358093262
    9. '):

' → logprob: -12.634112358093262
    10. '):
' → logprob: -12.759112358093262

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012047011114191264
    2. 'if' → logprob: -9.625120162963867
    3. ' if' → logprob: -10.250120162963867
    4. 'def' → logprob: -12.250120162963867
    5. '        
' → logprob: -13.000120162963867
    6. '#' → logprob: -13.375120162963867
    7. 'assert' → logprob: -13.500120162963867
    8. '   ' → logprob: -13.500120162963867
    9. 'for' → logprob: -13.625120162963867
    10. 'div' → logprob: -14.125120162963867

Token 112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44329774379730225
    2. 'mods' → logprob: -2.193297863006592
    3. '       ' → logprob: -2.318297863006592
    4. 'for' → logprob: -2.568297863006592
    5. 'mod' → logprob: -3.193297863006592
    6. 'assert' → logprob: -4.568297863006592
    7. 'def' → logprob: -4.568297863006592
    8. '#' → logprob: -5.693297863006592
    9. 'params' → logprob: -5.943297863006592
    10. 'ms' → logprob: -6.818297863006592

Token 113: ' not' (ID: 625)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8624571561813354
    2. ' not' → logprob: -1.2374571561813354
    3. ' any' → logprob: -1.4874571561813354
    4. 'self' → logprob: -3.612457275390625
    5. ' gcd' → logprob: -3.737457275390625
    6. 'g' → logprob: -5.737457275390625
    7. 'not' → logprob: -5.737457275390625
    8. ' (' → logprob: -6.362457275390625
    9. 'any' → logprob: -6.487457275390625
    10. ' reduce' → logprob: -7.612457275390625

Token 114: ' (' (ID: 350)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.18917101621627808
    2. ' (' → logprob: -2.314171075820923
    3. ' isinstance' → logprob: -3.064171075820923
    4. '(' → logprob: -4.064170837402344
    5. 'all' → logprob: -5.189170837402344
    6. '(all' → logprob: -5.564170837402344
    7. '(is' → logprob: -9.564170837402344
    8. ' ' → logprob: -9.689170837402344
    9. ' (
' → logprob: -10.689170837402344
    10. ' self' → logprob: -11.189170837402344

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6286572217941284
    2. '0' → logprob: -1.1286572217941284
    3. 'self' → logprob: -2.253657341003418
    4. 'is' → logprob: -4.378657341003418
    5. 'all' → logprob: -4.503657341003418
    6. '(' → logprob: -4.628657341003418
    7. 'g' → logprob: -6.628657341003418
    8. ' ' → logprob: -6.753657341003418
    9. ' isinstance' → logprob: -7.378657341003418
    10. ' all' → logprob: -7.503657341003418

Token 116: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.023322343826293945
    2. '<=' → logprob: -3.773322343826294
    3. ' <' → logprob: -9.773322105407715
    4. '<' → logprob: -12.148322105407715
    5. ',' → logprob: -13.023322105407715
    6. ' ' → logprob: -13.273322105407715
    7. 'le' → logprob: -13.398322105407715
    8. ' ≤' → logprob: -13.398322105407715
    9. 'e' → logprob: -13.523322105407715
    10. 'self' → logprob: -13.773322105407715

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3134114146232605
    2. ' self' → logprob: -1.3134114742279053
    3. 'abs' → logprob: -9.938411712646484
    4. '=self' → logprob: -10.313411712646484
    5. '	self' → logprob: -10.938411712646484
    6. '(self' → logprob: -11.438411712646484
    7. ' abs' → logprob: -11.563411712646484
    8. 'min' → logprob: -12.188411712646484
    9. '
' → logprob: -12.313411712646484
    10. ' ' → logprob: -12.563411712646484

Token 118: '.a' (ID: 8772)
  Prédit: '.m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.10033132135868073
    2. '.a' → logprob: -2.3503313064575195
    3. '.' → logprob: -9.47533130645752
    4. 'm' → logprob: -11.10033130645752
    5. ' .' → logprob: -11.35033130645752
    6. 'a' → logprob: -11.35033130645752
    7. '._' → logprob: -13.10033130645752
    8. '.s' → logprob: -13.10033130645752
    9. '.g' → logprob: -13.60033130645752
    10. '.i' → logprob: -14.47533130645752

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '3' → logprob: -13.125003814697266
    3. '2' → logprob: -14.250003814697266
    4. 'a' → logprob: -15.750003814697266
    5. 'self' → logprob: -15.875003814697266
    6. '
' → logprob: -16.437503814697266
    7. '```' → logprob: -16.562503814697266
    8. ')' → logprob: -16.687503814697266
    9. '

' → logprob: -17.375003814697266
    10. ',' → logprob: -17.562503814697266

Token 120: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2021728754043579
    2. ' <' → logprob: -1.702172875404358
    3. 'and' → logprob: -8.327173233032227
    4. ' and' → logprob: -8.452173233032227
    5. '<=' → logprob: -8.827173233032227
    6. ' <=' → logprob: -9.952173233032227
    7. '%' → logprob: -10.577173233032227
    8. '<m' → logprob: -11.077173233032227
    9. ' ' → logprob: -11.202173233032227
    10. '<n' → logprob: -11.327173233032227

Token 121: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026338033378124237
    2. ' self' → logprob: -3.6513381004333496
    3. ' ' → logprob: -11.026337623596191
    4. '=self' → logprob: -11.276337623596191
    5. '10' → logprob: -13.151337623596191
    6. '=' → logprob: -13.651337623596191
    7. '3' → logprob: -13.901337623596191
    8. '100' → logprob: -14.026337623596191
    9. '2' → logprob: -14.526337623596191
    10. '20' → logprob: -14.901337623596191

Token 122: '2' (ID: 17)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036235929001122713
    2. ' self' → logprob: -5.6286234855651855
    3. ' ' → logprob: -11.753623962402344
    4. '=self' → logprob: -12.128623962402344
    5. '3' → logprob: -13.628623962402344
    6. '   ' → logprob: -13.753623962402344
    7. '10' → logprob: -13.753623962402344
    8. '  ' → logprob: -14.378623962402344
    9. '100' → logprob: -14.378623962402344
    10. '	self' → logprob: -14.628623962402344

Token 123: '**' (ID: 410)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3028072118759155
    2. '**' → logprob: -2.552807331085205
    3. 'and' → logprob: -2.927807331085205
    4. '*' → logprob: -3.302807331085205
    5. '*m' → logprob: -3.802807331085205
    6. '0' → logprob: -4.677807331085205
    7. '56' → logprob: -4.802807331085205
    8. ' *' → logprob: -4.927807331085205
    9. '):' → logprob: -4.927807331085205
    10. '):
' → logprob: -5.052807331085205

Token 124: '15' (ID: 1055)
  Prédit: '63'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '63' → logprob: -0.299104779958725
    2. '64' → logprob: -2.174104690551758
    3. '31' → logprob: -2.174104690551758
    4. '32' → logprob: -4.174104690551758
    5. '53' → logprob: -4.299104690551758
    6. '30' → logprob: -7.549104690551758
    7. '16' → logprob: -7.799104690551758
    8. '61' → logprob: -7.799104690551758
    9. '62' → logprob: -8.049104690551758
    10. '60' → logprob: -8.674104690551758

Token 125: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08537506312131882
    2. '):' → logprob: -2.8353750705718994
    3. '):
' → logprob: -4.46037483215332
    4. ')' → logprob: -5.33537483215332
    5. 'and' → logprob: -5.46037483215332
    6. ' ):' → logprob: -7.08537483215332
    7. ' ' → logprob: -7.21037483215332
    8. ' ):
' → logprob: -7.96037483215332
    9. '       ' → logprob: -8.21037483215332
    10. ' )' → logprob: -8.46037483215332

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06382233649492264
    2. ' ' → logprob: -2.8138222694396973
    3. '0' → logprob: -7.563822269439697
    4. 'self' → logprob: -7.688822269439697
    5. ' isinstance' → logprob: -8.313822746276855
    6. ' all' → logprob: -9.063822746276855
    7. ' self' → logprob: -9.188822746276855
    8. 'is' → logprob: -9.438822746276855
    9. 'g' → logprob: -9.688822746276855
    10. 'all' → logprob: -9.688822746276855

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008265409851446748
    2. 'self' → logprob: -7.625826358795166
    3. ' ' → logprob: -8.250826835632324
    4. '0' → logprob: -10.000826835632324
    5. 'is' → logprob: -11.625826835632324
    6. 'a' → logprob: -12.250826835632324
    7. '2' → logprob: -12.250826835632324
    8. ' self' → logprob: -12.375826835632324
    9. 'g' → logprob: -12.375826835632324
    10. ' isinstance' → logprob: -13.250826835632324

Token 128: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04880434647202492
    2. '<' → logprob: -3.04880428314209
    3. ' <=' → logprob: -9.17380428314209
    4. 'and' → logprob: -10.67380428314209
    5. 'a' → logprob: -11.17380428314209
    6. '<=' → logprob: -11.17380428314209
    7. ' ' → logprob: -11.29880428314209
    8. '1' → logprob: -11.79880428314209
    9. '<|end|>' → logprob: -11.79880428314209
    10. ' and' → logprob: -12.42380428314209

Token 129: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16025611758232117
    2. ' self' → logprob: -1.9102561473846436
    3. '=self' → logprob: -10.910256385803223
    4. '	self' → logprob: -12.785256385803223
    5. ' ' → logprob: -12.910256385803223
    6. '(self' → logprob: -13.035256385803223
    7. 'Self' → logprob: -13.910256385803223
    8. '_self' → logprob: -14.160256385803223
    9. '[self' → logprob: -14.410256385803223
    10. '2' → logprob: -14.785256385803223

Token 130: '.m' (ID: 1021)
  Prédit: '.a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.03294903039932251
    2. '.m' → logprob: -3.5329489707946777
    3. '.' → logprob: -5.907948970794678
    4. ' .' → logprob: -7.907948970794678
    5. 'a' → logprob: -9.282949447631836
    6. ' a' → logprob: -12.282949447631836
    7. 'm' → logprob: -12.532949447631836
    8. ' ' → logprob: -13.907949447631836
    9. '`.' → logprob: -14.032949447631836
    10. '.s' → logprob: -14.532949447631836

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '3' → logprob: -13.750001907348633
    3. '2' → logprob: -14.125001907348633
    4. '_' → logprob: -15.875001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ' ' → logprob: -17.312501907348633
    7. '<|end|>' → logprob: -17.375001907348633
    8. '```' → logprob: -17.812501907348633
    9. '۱' → logprob: -18.312501907348633
    10. '  ' → logprob: -18.625001907348633

Token 132: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.044528380036354065
    2. '<' → logprob: -3.1695284843444824
    3. ' and' → logprob: -7.044528484344482
    4. 'and' → logprob: -8.419528007507324
    5. ' ' → logprob: -8.544528007507324
    6. '<|end|>' → logprob: -8.669528007507324
    7. ')' → logprob: -10.419528007507324
    8. ')<' → logprob: -11.294528007507324
    9. '):
' → logprob: -12.044528007507324
    10. ' <
' → logprob: -12.669528007507324

Token 133: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002823181450366974
    2. ' ' → logprob: -5.877823352813721
    3. '10' → logprob: -11.877822875976562
    4. '   ' → logprob: -12.127822875976562
    5. '>' → logprob: -12.877822875976562
    6. '  ' → logprob: -13.877822875976562
    7. '3' → logprob: -14.690322875976562
    8. '(' → logprob: -14.877822875976562
    9. '1' → logprob: -15.252822875976562
    10. '100' → logprob: -15.690322875976562

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.2987729102605954e-05
    2. ' ' → logprob: -10.125042915344238
    3. '10' → logprob: -13.375042915344238
    4. '   ' → logprob: -15.125042915344238
    5. '3' → logprob: -15.375042915344238
    6. '(' → logprob: -15.500042915344238
    7. '1' → logprob: -16.562543869018555
    8. '  ' → logprob: -16.750043869018555
    9. '655' → logprob: -17.437543869018555
    10. '>' → logprob: -17.562543869018555

Token 135: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.315079003572464
    2. '**' → logprob: -1.3150789737701416
    3. '31' → logprob: -7.065079212188721
    4. '16' → logprob: -7.690079212188721
    5. '30' → logprob: -8.940078735351562
    6. '*' → logprob: -9.315078735351562
    7. '63' → logprob: -9.565078735351562
    8. '32' → logprob: -9.815078735351562
    9. '```' → logprob: -10.190078735351562
    10. '35' → logprob: -10.815078735351562

Token 136: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.12721942365169525
    2. '31' → logprob: -2.2522194385528564
    3. '16' → logprob: -5.127219200134277
    4. '63' → logprob: -5.127219200134277
    5. '30' → logprob: -7.002219200134277
    6. '32' → logprob: -7.002219200134277
    7. '64' → logprob: -8.877219200134277
    8. '62' → logprob: -9.252219200134277
    9. '60' → logprob: -9.877219200134277
    10. '48' → logprob: -9.877219200134277

Token 137: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013140345923602581
    2. '):' → logprob: -5.1381402015686035
    3. 'and' → logprob: -5.5131402015686035
    4. '):
' → logprob: -6.3881402015686035
    5. '       ' → logprob: -7.0131402015686035
    6. ')' → logprob: -8.513140678405762
    7. ' ):' → logprob: -8.888140678405762
    8. ' ):
' → logprob: -9.138140678405762
    9. ' ' → logprob: -9.763140678405762
    10. ' )' → logprob: -10.638140678405762

Token 138: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31338492035865784
    2. ' ' → logprob: -1.3133848905563354
    3. ' isinstance' → logprob: -10.688385009765625
    4. '   ' → logprob: -10.813385009765625
    5. '
' → logprob: -10.938385009765625
    6. '\
' → logprob: -11.438385009765625
    7. '  ' → logprob: -11.813385009765625
    8. '       ' → logprob: -11.813385009765625
    9. 'self' → logprob: -12.188385009765625
    10. '           ' → logprob: -12.313385009765625

Token 139: '               ' (ID: 506)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6345421075820923
    2. ' ' → logprob: -0.7595421075820923
    3. '    ' → logprob: -7.384541988372803
    4. '        ' → logprob: -7.384541988372803
    5. '          ' → logprob: -8.759542465209961
    6. '            ' → logprob: -8.884542465209961
    7. '           ' → logprob: -9.134542465209961
    8. '         ' → logprob: -9.259542465209961
    9. '   ' → logprob: -10.259542465209961
    10. '       ' → logprob: -10.259542465209961

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003373694489710033
    2. ' ' → logprob: -8.000337600708008
    3. '   ' → logprob: -14.125337600708008
    4. '  ' → logprob: -15.125337600708008
    5. '           ' → logprob: -15.625337600708008
    6. '0' → logprob: -16.125337600708008
    7. '2' → logprob: -16.250337600708008
    8. '               ' → logprob: -16.375337600708008
    9. '       ' → logprob: -16.625337600708008
    10. '
' → logprob: -17.000337600708008

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.875041007995605
    4. '  ' → logprob: -15.125041007995605
    5. '2' → logprob: -15.250041007995605
    6. 'is' → logprob: -15.875041007995605
    7. 'self' → logprob: -17.250041961669922
    8. '0' → logprob: -17.500041961669922
    9. ' isinstance' → logprob: -17.562541961669922
    10. '    ' → logprob: -17.625041961669922

Token 142: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1269410252571106
    2. '<' → logprob: -2.126940965652466
    3. ' ' → logprob: -12.626940727233887
    4. '<|end|>' → logprob: -13.751940727233887
    5. ' <=' → logprob: -14.001940727233887
    6. ' <
' → logprob: -14.126940727233887
    7. '               ' → logprob: -14.376940727233887
    8. '<
' → logprob: -14.501940727233887
    9. '<int' → logprob: -14.751940727233887
    10. '<class' → logprob: -14.814440727233887

Token 143: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07890477031469345
    2. ' self' → logprob: -2.578904867172241
    3. ' ' → logprob: -12.45390510559082
    4. '       ' → logprob: -12.95390510559082
    5. '	self' → logprob: -13.20390510559082
    6. '   ' → logprob: -13.32890510559082
    7. '           ' → logprob: -13.95390510559082
    8. '(self' → logprob: -14.20390510559082
    9. '               ' → logprob: -14.32890510559082
    10. '[self' → logprob: -14.70390510559082

Token 144: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.00020628207130357623
    2. 'a' → logprob: -8.500205993652344
    3. '.m' → logprob: -13.875205993652344
    4. '.' → logprob: -14.125205993652344
    5. '_a' → logprob: -14.750205993652344
    6. ' .' → logprob: -15.000205993652344
    7. '._' → logprob: -16.000205993652344
    8. '   ' → logprob: -16.375205993652344
    9. 'm' → logprob: -16.625205993652344
    10. 'self' → logprob: -16.750205993652344

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012526480481028557
    2. '1' → logprob: -4.387526512145996
    3. '3' → logprob: -11.137526512145996
    4. '   ' → logprob: -14.762526512145996
    5. '```' → logprob: -14.762526512145996
    6. '_' → logprob: -14.950026512145996
    7. '
' → logprob: -15.825026512145996
    8. ' ' → logprob: -15.950026512145996
    9. ')' → logprob: -16.07502555847168
    10. 'a' → logprob: -16.82502555847168

Token 146: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07907011359930038
    2. '<' → logprob: -2.5790700912475586
    3. 'and' → logprob: -9.579070091247559
    4. ' and' → logprob: -9.704070091247559
    5. ' ' → logprob: -10.454070091247559
    6. '<|end|>' → logprob: -11.454070091247559
    7. ')' → logprob: -12.704070091247559
    8. ')<' → logprob: -13.079070091247559
    9. ' <
' → logprob: -13.954070091247559
    10. ' ' → logprob: -14.204070091247559

Token 147: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023245712742209435
    2. ' ' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.273245811462402
    4. '  ' → logprob: -17.523244857788086
    5. '```' → logprob: -18.898244857788086
    6. '    ' → logprob: -19.023244857788086
    7. '
' → logprob: -19.023244857788086
    8. '(' → logprob: -19.523244857788086
    9. ' ' → logprob: -19.523244857788086
    10. '256' → logprob: -19.710744857788086

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.662937372922897e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.125096321105957
    4. '
' → logprob: -16.875097274780273
    5. '  ' → logprob: -17.125097274780273
    6. '```' → logprob: -17.375097274780273
    7. '(' → logprob: -17.750097274780273
    8. '       ' → logprob: -18.687597274780273
    9. '1' → logprob: -18.687597274780273
    10. '256' → logprob: -18.875097274780273

Token 149: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0028278196696192026
    2. '15' → logprob: -5.8778276443481445
    3. '*' → logprob: -11.252827644348145
    4. '```' → logprob: -12.252827644348145
    5. '2' → logprob: -13.502827644348145
    6. '^' → logprob: -13.752827644348145
    7. ' **' → logprob: -14.252827644348145
    8. '>' → logprob: -15.002827644348145
    9. '`' → logprob: -15.127827644348145
    10. '**
' → logprob: -15.252827644348145

Token 150: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -3.173704271830502e-06
    2. '16' → logprob: -13.37500286102295
    3. '14' → logprob: -14.87500286102295
    4. '```' → logprob: -15.25000286102295
    5. ' ' → logprob: -15.62500286102295
    6. '31' → logprob: -16.000003814697266
    7. '30' → logprob: -16.125003814697266
    8. '25' → logprob: -17.125003814697266
    9. '13' → logprob: -17.312503814697266
    10. '1' → logprob: -17.312503814697266

Token 151: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01605982705950737
    2. 'and' → logprob: -4.141059875488281
    3. ' ' → logprob: -11.016059875488281
    4. '               ' → logprob: -12.516059875488281
    5. '                ' → logprob: -12.891059875488281
    6. ')' → logprob: -13.891059875488281
    7. '```' → logprob: -14.641059875488281
    8. '              ' → logprob: -15.141059875488281
    9. '            ' → logprob: -15.391059875488281
    10. '           ' → logprob: -15.891059875488281

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076728761196136475
    2. ' ' → logprob: -4.8826727867126465
    3. '               ' → logprob: -9.757673263549805
    4. '   ' → logprob: -12.882673263549805
    5. '           ' → logprob: -13.257673263549805
    6. '2' → logprob: -13.757673263549805
    7. 'self' → logprob: -13.882673263549805
    8. '                   ' → logprob: -14.507673263549805
    9. '  ' → logprob: -14.757673263549805
    10. '                ' → logprob: -14.882673263549805

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008216609712690115
    2. ' ' → logprob: -7.125821590423584
    3. '               ' → logprob: -11.750822067260742
    4. 'self' → logprob: -12.500822067260742
    5. '2' → logprob: -13.500822067260742
    6. '           ' → logprob: -13.625822067260742
    7. '   ' → logprob: -13.875822067260742
    8. '                   ' → logprob: -14.750822067260742
    9. '       ' → logprob: -15.375822067260742
    10. '                 ' → logprob: -15.375822067260742

Token 154: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5233141183853149
    2. '<' → logprob: -0.8983141183853149
    3. '<m' → logprob: -8.898314476013184
    4. ' ' → logprob: -10.898314476013184
    5. '               ' → logprob: -11.398314476013184
    6. '<
' → logprob: -12.523314476013184
    7. 'a' → logprob: -12.898314476013184
    8. '           ' → logprob: -13.148314476013184
    9. 'and' → logprob: -13.148314476013184
    10. '   ' → logprob: -13.523314476013184

Token 155: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021901142317801714
    2. ' self' → logprob: -6.127190113067627
    3. '(self' → logprob: -13.127190589904785
    4. '               ' → logprob: -13.502190589904785
    5. '           ' → logprob: -14.627190589904785
    6. ' ' → logprob: -15.502190589904785
    7. '                   ' → logprob: -15.627190589904785
    8. '       ' → logprob: -15.627190589904785
    9. '2' → logprob: -15.877190589904785
    10. '   ' → logprob: -16.00218963623047

Token 156: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.00011331788846291602
    2. '.' → logprob: -9.375113487243652
    3. ' .' → logprob: -10.875113487243652
    4. '._' → logprob: -12.250113487243652
    5. 'm' → logprob: -12.625113487243652
    6. '   ' → logprob: -15.250113487243652
    7. '_m' → logprob: -15.375113487243652
    8. ').' → logprob: -15.750113487243652
    9. '```' → logprob: -16.375112533569336
    10. '	m' → logprob: -16.500112533569336

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.500000953674316
    3. '_' → logprob: -15.625000953674316
    4. '3' → logprob: -16.25
    5. '```' → logprob: -16.625
    6. '   ' → logprob: -17.0
    7. ' ' → logprob: -17.75
    8. '
' → logprob: -18.1875
    9. '#' → logprob: -18.6875
    10. '₂' → logprob: -18.75

Token 158: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38695019483566284
    2. '<' → logprob: -1.1369502544403076
    3. '2' → logprob: -10.761950492858887
    4. 'and' → logprob: -10.886950492858887
    5. ')<' → logprob: -11.511950492858887
    6. ')' → logprob: -11.636950492858887
    7. ' ' → logprob: -12.011950492858887
    8. ' and' → logprob: -12.011950492858887
    9. '()<' → logprob: -13.886950492858887
    10. '```' → logprob: -14.136950492858887

Token 159: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889419049024582
    2. ' ' → logprob: -2.5788941383361816
    3. '   ' → logprob: -13.07889461517334
    4. '(' → logprob: -14.57889461517334
    5. '1' → logprob: -14.70389461517334
    6. '  ' → logprob: -15.89139461517334
    7. '    ' → logprob: -16.016393661499023
    8. '```' → logprob: -16.016393661499023
    9. '           ' → logprob: -16.203893661499023
    10. '       ' → logprob: -16.516393661499023

Token 160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012606535165105015
    2. ' ' → logprob: -9.000125885009766
    3. '   ' → logprob: -14.000125885009766
    4. '
' → logprob: -14.625125885009766
    5. '```' → logprob: -15.062625885009766
    6. '(' → logprob: -15.500125885009766
    7. '  ' → logprob: -15.562625885009766
    8. '15' → logprob: -16.250125885009766
    9. '`' → logprob: -16.687625885009766
    10. '    ' → logprob: -16.875125885009766

Token 161: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.023272152990102768
    2. '**' → logprob: -3.7732720375061035
    3. '```' → logprob: -11.023272514343262
    4. '*' → logprob: -12.648272514343262
    5. '^' → logprob: -13.648272514343262
    6. '015' → logprob: -14.023272514343262
    7. '' → logprob: -14.523272514343262
    8. '>' → logprob: -14.648272514343262
    9. '5' → logprob: -14.773272514343262
    10. ' ' → logprob: -14.898272514343262

Token 162: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -14.812501907348633
    3. ' ' → logprob: -15.250001907348633
    4. '(' → logprob: -15.312501907348633
    5. '015' → logprob: -15.437501907348633
    6. '' → logprob: -15.687501907348633
    7. '16' → logprob: -16.000001907348633
    8. '14' → logprob: -16.875001907348633
    9. 'm' → logprob: -17.000001907348633
    10. '۱۵' → logprob: -17.062501907348633

Token 163: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007294012699276209
    2. 'and' → logprob: -5.007294178009033
    3. '               ' → logprob: -7.507294178009033
    4. '                ' → logprob: -11.757293701171875
    5. '           ' → logprob: -12.132293701171875
    6. '              ' → logprob: -12.507293701171875
    7. ' ' → logprob: -13.132293701171875
    8. ')' → logprob: -13.257293701171875
    9. '       ' → logprob: -13.382293701171875
    10. '):
' → logprob: -13.507293701171875

Token 164: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3406592607498169
    2. '1' → logprob: -1.340659260749817
    3. ' ' → logprob: -3.8406591415405273
    4. '                ' → logprob: -5.840659141540527
    5. '           ' → logprob: -6.715659141540527
    6. '       ' → logprob: -8.090659141540527
    7. '              ' → logprob: -8.090659141540527
    8. '                   ' → logprob: -8.465659141540527
    9. '   ' → logprob: -8.590659141540527
    10. '    ' → logprob: -9.465659141540527

Token 165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019702304154634476
    2. '1' → logprob: -4.644702434539795
    3. '                ' → logprob: -5.144702434539795
    4. ' ' → logprob: -6.144702434539795
    5. '           ' → logprob: -7.394702434539795
    6. '              ' → logprob: -8.019701957702637
    7. '       ' → logprob: -8.394701957702637
    8. '                   ' → logprob: -8.519701957702637
    9. '        ' → logprob: -9.019701957702637
    10. '   ' → logprob: -9.394701957702637

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010367410723119974
    2. ' ' → logprob: -6.876036643981934
    3. '               ' → logprob: -13.001036643981934
    4. '   ' → logprob: -14.126036643981934
    5. '           ' → logprob: -14.876036643981934
    6. '       ' → logprob: -15.751036643981934
    7. '
' → logprob: -15.876036643981934
    8. '  ' → logprob: -16.37603759765625
    9. '                   ' → logprob: -16.50103759765625
    10. '```' → logprob: -17.50103759765625

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003215261036530137
    2. ' ' → logprob: -5.753215312957764
    3. '               ' → logprob: -11.003214836120605
    4. '   ' → logprob: -11.378214836120605
    5. '           ' → logprob: -12.878214836120605
    6. '  ' → logprob: -13.003214836120605
    7. '       ' → logprob: -13.753214836120605
    8. '    ' → logprob: -14.628214836120605
    9. '                   ' → logprob: -14.753214836120605
    10. '                ' → logprob: -14.878214836120605

Token 168: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1269291490316391
    2. '<' → logprob: -2.1269290447235107
    3. ' ' → logprob: -15.50192928314209
    4. 'a' → logprob: -16.001928329467773
    5. 'self' → logprob: -16.376928329467773
    6. '               ' → logprob: -16.501928329467773
    7. '           ' → logprob: -16.626928329467773
    8. '<class' → logprob: -16.876928329467773
    9. ' ' → logprob: -16.876928329467773
    10. '<
' → logprob: -17.001928329467773

Token 169: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003601617179811001
    2. ' self' → logprob: -5.628601551055908
    3. '(self' → logprob: -14.878602027893066
    4. '
' → logprob: -15.003602027893066
    5. '       ' → logprob: -15.128602027893066
    6. '   ' → logprob: -15.378602027893066
    7. ' ' → logprob: -16.00360107421875
    8. '	self' → logprob: -16.75360107421875
    9. '```' → logprob: -16.75360107421875
    10. 's' → logprob: -17.00360107421875

Token 170: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0006366660236380994
    2. 'a' → logprob: -7.375636577606201
    3. '.' → logprob: -11.75063705444336
    4. ' .' → logprob: -13.62563705444336
    5. ' a' → logprob: -15.00063705444336
    6. '.m' → logprob: -15.00063705444336
    7. '_a' → logprob: -15.87563705444336
    8. '#a' → logprob: -16.62563705444336
    9. '```' → logprob: -17.25063705444336
    10. '	a' → logprob: -17.37563705444336

Token 171: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8193366486229934e-05
    2. '1' → logprob: -11.000018119812012
    3. '2' → logprob: -14.375018119812012
    4. 'a' → logprob: -15.125018119812012
    5. '   ' → logprob: -15.812518119812012
    6. '```' → logprob: -16.312519073486328
    7. ' ' → logprob: -16.375019073486328
    8. '  ' → logprob: -16.750019073486328
    9. '
' → logprob: -16.812519073486328
    10. '

' → logprob: -17.187519073486328

Token 172: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02630668506026268
    2. '<' → logprob: -3.651306629180908
    3. ' ' → logprob: -12.901307106018066
    4. '<|end|>' → logprob: -13.526307106018066
    5. ' <
' → logprob: -14.776307106018066
    6. ')' → logprob: -14.901307106018066
    7. ' and' → logprob: -15.026307106018066
    8. 'and' → logprob: -15.026307106018066
    9. '<class' → logprob: -15.151307106018066
    10. ')<' → logprob: -15.651307106018066

Token 173: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26179370284080505
    2. '2' → logprob: -1.6367937326431274
    3. ' self' → logprob: -3.511793613433838
    4. ' ' → logprob: -5.136793613433838
    5. '   ' → logprob: -12.886794090270996
    6. '    ' → logprob: -14.011794090270996
    7. '(self' → logprob: -14.511794090270996
    8. '  ' → logprob: -14.636794090270996
    9. '       ' → logprob: -15.011794090270996
    10. '     ' → logprob: -15.261794090270996

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '
' → logprob: -15.375140190124512
    4. '   ' → logprob: -16.000141143798828
    5. '  ' → logprob: -17.750141143798828
    6. '(' → logprob: -18.125141143798828
    7. '    ' → logprob: -18.812641143798828
    8. '

' → logprob: -18.812641143798828
    9. '       ' → logprob: -18.937641143798828
    10. '```' → logprob: -19.062641143798828

Token 175: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.02981077879667282
    2. '**' → logprob: -3.529810667037964
    3. '```' → logprob: -10.779810905456543
    4. ' ' → logprob: -12.154810905456543
    5. '2' → logprob: -12.404810905456543
    6. '*' → logprob: -12.529810905456543
    7. '
' → logprob: -12.529810905456543
    8. '   ' → logprob: -12.779810905456543
    9. '(' → logprob: -12.779810905456543
    10. '^' → logprob: -13.342310905456543

Token 176: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -5.512236498361744e-07
    2. '31' → logprob: -15.875000953674316
    3. '16' → logprob: -16.375
    4. '30' → logprob: -16.75
    5. '```' → logprob: -16.75
    6. '5' → logprob: -17.0
    7. ' ' → logprob: -17.25
    8. '25' → logprob: -17.375
    9. '015' → logprob: -17.5
    10. '14' → logprob: -17.9375

Token 177: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.008642109110951424
    2. 'and' → logprob: -4.758642196655273
    3. '               ' → logprob: -11.508642196655273
    4. ' ' → logprob: -11.508642196655273
    5. '           ' → logprob: -13.258642196655273
    6. '                ' → logprob: -14.133642196655273
    7. '       ' → logprob: -14.258642196655273
    8. '```' → logprob: -14.508642196655273
    9. '              ' → logprob: -14.508642196655273
    10. '          ' → logprob: -14.633642196655273

Token 178: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14274181425571442
    2. '1' → logprob: -2.0177419185638428
    3. '               ' → logprob: -11.017742156982422
    4. '                ' → logprob: -11.142742156982422
    5. '0' → logprob: -12.017742156982422
    6. ' ' → logprob: -12.392742156982422
    7. '2' → logprob: -12.767742156982422
    8. 'self' → logprob: -12.767742156982422
    9. ' self' → logprob: -12.892742156982422
    10. '            ' → logprob: -13.142742156982422

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04635490104556084
    2. ' ' → logprob: -3.1713550090789795
    3. 'self' → logprob: -5.7963547706604
    4. ' self' → logprob: -8.171355247497559
    5. '   ' → logprob: -11.671355247497559
    6. '       ' → logprob: -12.546355247497559
    7. '  ' → logprob: -12.671355247497559
    8. '           ' → logprob: -12.796355247497559
    9. '               ' → logprob: -13.171355247497559
    10. '2' → logprob: -13.171355247497559

Token 180: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1797606647014618
    2. '<' → logprob: -1.8047606945037842
    3. '<m' → logprob: -12.179760932922363
    4. ' ' → logprob: -12.179760932922363
    5. '<
' → logprob: -13.429760932922363
    6. ' <
' → logprob: -14.054760932922363
    7. '<|end|>' → logprob: -14.304760932922363
    8. ' ' → logprob: -14.679760932922363
    9. '>' → logprob: -14.929760932922363
    10. '<class' → logprob: -15.304760932922363

Token 181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759558081626892
    2. ' self' → logprob: -0.8259558081626892
    3. ' ' → logprob: -11.575955390930176
    4. '(self' → logprob: -13.450955390930176
    5. '	self' → logprob: -14.200955390930176
    6. '       ' → logprob: -14.325955390930176
    7. ' ' → logprob: -14.325955390930176
    8. 's' → logprob: -14.450955390930176
    9. '   ' → logprob: -14.575955390930176
    10. '           ' → logprob: -14.950955390930176

Token 182: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.00047214110963977873
    2. '.' → logprob: -7.750472068786621
    3. ' .' → logprob: -10.375472068786621
    4. 'm' → logprob: -12.125472068786621
    5. '._' → logprob: -12.875472068786621
    6. '.a' → logprob: -13.500472068786621
    7. ' ' → logprob: -15.875472068786621
    8. '_m' → logprob: -15.875472068786621
    9. '   ' → logprob: -16.375473022460938
    10. '
' → logprob: -16.875473022460938

Token 183: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -14.125003814697266
    3. '_' → logprob: -14.250003814697266
    4. '   ' → logprob: -14.375003814697266
    5. '1' → logprob: -14.500003814697266
    6. '2' → logprob: -14.875003814697266
    7. ' ' → logprob: -15.125003814697266
    8. 'm' → logprob: -15.687503814697266
    9. '
' → logprob: -15.937503814697266
    10. '``' → logprob: -16.750003814697266

Token 184: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.17976951599121094
    2. ' <' → logprob: -1.804769515991211
    3. ')' → logprob: -11.554769515991211
    4. ')<' → logprob: -12.054769515991211
    5. ' ' → logprob: -12.679769515991211
    6. 'and' → logprob: -13.304769515991211
    7. '2' → logprob: -13.679769515991211
    8. ' and' → logprob: -14.929769515991211
    9. '```' → logprob: -15.054769515991211
    10. '<class' → logprob: -15.429769515991211

Token 185: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5759496688842773
    2. ' ' → logprob: -0.8259496688842773
    3. '   ' → logprob: -12.450949668884277
    4. '  ' → logprob: -13.200949668884277
    5. '    ' → logprob: -13.575949668884277
    6. '
' → logprob: -14.450949668884277
    7. '(' → logprob: -15.138449668884277
    8. '        ' → logprob: -15.138449668884277
    9. '           ' → logprob: -15.388449668884277
    10. '       ' → logprob: -15.388449668884277

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.746380237629637e-05
    2. ' ' → logprob: -9.250097274780273
    3. '(' → logprob: -14.375097274780273
    4. '   ' → logprob: -14.500097274780273
    5. '  ' → logprob: -16.500097274780273
    6. '```' → logprob: -17.562597274780273
    7. '
' → logprob: -17.937597274780273
    8. '    ' → logprob: -18.000097274780273
    9. '`' → logprob: -18.312597274780273
    10. '         ' → logprob: -18.375097274780273

Token 187: '**' (ID: 410)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -8.828512363834307e-05
    2. '**' → logprob: -9.375088691711426
    3. '```' → logprob: -14.750088691711426
    4. '' → logprob: -15.000088691711426
    5. '015' → logprob: -15.000088691711426
    6. '16' → logprob: -15.125088691711426
    7. '153' → logprob: -15.500088691711426
    8. '315' → logprob: -15.500088691711426
    9. '35' → logprob: -15.750088691711426
    10. '>' → logprob: -15.750088691711426

Token 188: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -4.60414821645827e-06
    2. '16' → logprob: -13.125004768371582
    3. '31' → logprob: -14.375004768371582
    4. '30' → logprob: -14.500004768371582
    5. ' ' → logprob: -14.875004768371582
    6. '```' → logprob: -15.562504768371582
    7. '5' → logprob: -16.062503814697266
    8. '25' → logprob: -16.312503814697266
    9. '1' → logprob: -16.375003814697266
    10. '' → logprob: -16.437503814697266

Token 189: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.27885472774505615
    2. '):' → logprob: -1.5288547277450562
    3. ' and' → logprob: -4.028854846954346
    4. '       ' → logprob: -5.028854846954346
    5. ')' → logprob: -7.403854846954346
    6. 'and' → logprob: -7.528854846954346
    7. ' ):
' → logprob: -7.653854846954346
    8. '           ' → logprob: -8.528854370117188
    9. ':' → logprob: -8.653854370117188
    10. '):
' → logprob: -9.403854370117188

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003408231772482395
    2. '
' → logprob: -6.128408432006836
    3. 'raise' → logprob: -7.378408432006836
    4. ' raise' → logprob: -7.628408432006836
    5. '       ' → logprob: -9.878408432006836
    6. '            
' → logprob: -10.378408432006836
    7. '          ' → logprob: -11.628408432006836
    8. '	raise' → logprob: -12.378408432006836
    9. '               ' → logprob: -12.628408432006836
    10. '```' → logprob: -13.253408432006836

Token 191: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.16798901557922363
    2. ' raise' → logprob: -1.9179890155792236
    3. '           ' → logprob: -4.9179887771606445
    4. '
' → logprob: -8.417988777160645
    5. '	raise' → logprob: -8.792988777160645
    6. 'Raise' → logprob: -10.542988777160645
    7. '_raise' → logprob: -11.417988777160645
    8. '   ' → logprob: -12.667988777160645
    9. '               ' → logprob: -12.792988777160645
    10. '       ' → logprob: -13.167988777160645

Token 192: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.07890179008245468
    2. 'Value' → logprob: -2.578901767730713
    3. '	Value' → logprob: -12.703902244567871
    4. '_value' → logprob: -12.828902244567871
    5. ' ' → logprob: -12.828902244567871
    6. '_Value' → logprob: -13.328902244567871
    7. 'value' → logprob: -14.078902244567871
    8. '(Value' → logprob: -15.203902244567871
    9. '```' → logprob: -15.828902244567871
    10. '<Value' → logprob: -15.953902244567871

Token 193: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0011723674833774567
    2. 'rror' → logprob: -6.7511725425720215
    3. 'ror' → logprob: -13.126172065734863
    4. 'r' → logprob: -16.25117301940918
    5. 'Value' → logprob: -16.87617301940918
    6. 'alue' → logprob: -19.75117301940918
    7. 'error' → logprob: -19.87617301940918
    8. '```' → logprob: -20.75117301940918
    9. 'SError' → logprob: -20.87617301940918
    10. 'Er' → logprob: -21.00117301940918

Token 194: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0036145627964287996
    2. '(' → logprob: -5.75361442565918
    3. '('' → logprob: -8.00361442565918
    4. '(
' → logprob: -9.25361442565918
    5. '(f' → logprob: -12.12861442565918
    6. '("'' → logprob: -15.12861442565918
    7. ':' → logprob: -15.50361442565918
    8. '       ' → logprob: -15.75361442565918
    9. '(
' → logprob: -15.75361442565918
    10. '"' → logprob: -16.00361442565918

Token 195: 'Parameters' (ID: 10167)
  Prédit: 'Parameters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parameters' → logprob: -0.4206252694129944
    2. 'All' → logprob: -1.1706252098083496
    3. 'Parameter' → logprob: -4.42062520980835
    4. ' All' → logprob: -4.79562520980835
    5. 'Values' → logprob: -5.04562520980835
    6. ' Parameters' → logprob: -5.42062520980835
    7. 'Each' → logprob: -7.42062520980835
    8. 'Invalid' → logprob: -7.54562520980835
    9. 'Coe' → logprob: -8.545625686645508
    10. ' all' → logprob: -8.670625686645508

Token 196: ' out' (ID: 842)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.0086130416020751
    2. ' out' → logprob: -5.383613109588623
    3. ' values' → logprob: -6.133613109588623
    4. 'must' → logprob: -6.508613109588623
    5. ' should' → logprob: -8.383612632751465
    6. ' a' → logprob: -10.383612632751465
    7. ' are' → logprob: -10.633612632751465
    8. 'out' → logprob: -11.508612632751465
    9. ' parameters' → logprob: -11.883612632751465
    10. ' ' → logprob: -12.133612632751465

Token 197: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.006797082256525755
    2. 'of' → logprob: -5.0067973136901855
    3. ' range' → logprob: -9.881796836853027
    4. '<|end|>' → logprob: -11.256796836853027
    5. '  ' → logprob: -12.631796836853027
    6. 'range' → logprob: -12.631796836853027
    7. ' ' → logprob: -13.006796836853027
    8. '_of' → logprob: -13.631796836853027
    9. '   ' → logprob: -13.756796836853027
    10. '1' → logprob: -14.131796836853027

Token 198: ' bounds' (ID: 30227)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1010377407073975
    2. 'range' → logprob: -1.3510377407073975
    3. ' valid' → logprob: -1.7260377407073975
    4. ' allowed' → logprob: -2.2260377407073975
    5. 'allowed' → logprob: -2.6010377407073975
    6. 'valid' → logprob: -3.4760377407073975
    7. ' bounds' → logprob: -5.101037979125977
    8. 'bounds' → logprob: -5.726037979125977
    9. ' acceptable' → logprob: -5.976037979125977
    10. 'acceptable' → logprob: -6.601037979125977

Token 199: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.001431905198842287
    2. ')")' → logprob: -6.876431941986084
    3. '.")' → logprob: -8.251431465148926
    4. '")
' → logprob: -10.626431465148926
    5. ')' → logprob: -10.751431465148926
    6. ' for' → logprob: -10.751431465148926
    7. '}")' → logprob: -11.251431465148926
    8. ' ")' → logprob: -11.376431465148926
    9. ':' → logprob: -11.626431465148926
    10. 'def' → logprob: -11.626431465148926

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017365772277116776
    2. '<|end|>' → logprob: -4.2673659324646
    3. '
' → logprob: -6.0173659324646
    4. '        
' → logprob: -8.392365455627441
    5. 'def' → logprob: -9.142365455627441
    6. '   ' → logprob: -9.267365455627441
    7. ')' → logprob: -9.392365455627441
    8. '```' → logprob: -9.392365455627441
    9. '<|end|>' → logprob: -9.767365455627441
    10. ' if' → logprob: -10.892365455627441

Token 201: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7127115726470947
    2. 'if' (adapté à ' if') → logprob: -0.9627115726470947
    3. ' if' → logprob: -2.4627115726470947
    4. 'def' → logprob: -3.8377115726470947
    5. '   ' → logprob: -4.712711334228516
    6. '#' → logprob: -4.962711334228516
    7. 'for' → logprob: -5.837711334228516
    8. 'mod' → logprob: -7.712711334228516
    9. ' for' → logprob: -8.337711334228516
    10. 't' → logprob: -8.587711334228516

Token 202: ' gcd' (ID: 106918)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.773983359336853
    2. ' reduce' → logprob: -1.773983359336853
    3. ' any' → logprob: -2.1489834785461426
    4. ' gcd' → logprob: -2.2739834785461426
    5. ' not' → logprob: -2.5239834785461426
    6. 'reduce' → logprob: -4.148983478546143
    7. 'self' → logprob: -4.148983478546143
    8. 'g' → logprob: -4.148983478546143
    9. ' len' → logprob: -4.398983478546143
    10. ' (' → logprob: -5.898983478546143

Token 203: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002212346764281392
    2. '(' → logprob: -6.1272125244140625
    3. 'self' → logprob: -11.252212524414062
    4. '(
' → logprob: -11.502212524414062
    5. '((' → logprob: -13.877212524414062
    6. '(this' → logprob: -13.877212524414062
    7. ' (' → logprob: -14.377212524414062
    8. '(s' → logprob: -14.752212524414062
    9. ',' → logprob: -15.127212524414062
    10. ')(' → logprob: -15.377212524414062

Token 204: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.010667411610484123
    2. '.m' → logprob: -4.760667324066162
    3. '(self' → logprob: -6.885667324066162
    4. 'self' → logprob: -7.385667324066162
    5. '.' → logprob: -9.01066780090332
    6. ').' → logprob: -9.26066780090332
    7. 'a' → logprob: -10.01066780090332
    8. '.s' → logprob: -10.38566780090332
    9. '.self' → logprob: -10.88566780090332
    10. '(a' → logprob: -10.88566780090332

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ',' → logprob: -12.125008583068848
    3. ' ' → logprob: -13.875008583068848
    4. '2' → logprob: -14.250008583068848
    5. '3' → logprob: -14.500008583068848
    6. ' ,' → logprob: -14.625008583068848
    7. 'a' → logprob: -14.750008583068848
    8. '<|end|>' → logprob: -15.500008583068848
    9. ')' → logprob: -15.750008583068848
    10. '   ' → logprob: -17.187509536743164

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033860031981021166
    2. '-' → logprob: -6.6283860206604
    3. 'self' → logprob: -6.8783860206604
    4. ',self' → logprob: -7.7533860206604
    5. ' ,' → logprob: -7.8783860206604
    6. ' -' → logprob: -8.753385543823242
    7. '(self' → logprob: -10.753385543823242
    8. ' self' → logprob: -11.503385543823242
    9. ',
' → logprob: -11.628385543823242
    10. '```' → logprob: -12.253385543823242

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008626513183116913
    2. ' self' → logprob: -4.758626461029053
    3. '2' → logprob: -12.008626937866211
    4. '       ' → logprob: -13.633626937866211
    5. ')' → logprob: -13.883626937866211
    6. '(self' → logprob: -14.008626937866211
    7. ' ' → logprob: -14.008626937866211
    8. '   ' → logprob: -14.133626937866211
    9. '    ' → logprob: -15.383626937866211
    10. '[self' → logprob: -15.758626937866211

Token 208: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.00025084958178922534
    2. '.' → logprob: -8.750250816345215
    3. '.a' → logprob: -10.250250816345215
    4. ' .' → logprob: -11.000250816345215
    5. 'm' → logprob: -11.125250816345215
    6. '1' → logprob: -11.750250816345215
    7. 'a' → logprob: -12.000250816345215
    8. '.
' → logprob: -12.625250816345215
    9. '   ' → logprob: -13.500250816345215
    10. '._' → logprob: -13.875250816345215

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ')' → logprob: -13.250003814697266
    3. 'self' → logprob: -13.500003814697266
    4. '_' → logprob: -16.187503814697266
    5. '   ' → logprob: -16.562503814697266
    6. '3' → logprob: -16.687503814697266
    7. ' ' → logprob: -16.812503814697266
    8. '```' → logprob: -17.437503814697266
    9. ',' → logprob: -17.562503814697266
    10. 'a' → logprob: -17.562503814697266

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009488568175584078
    2. ')!=' → logprob: -7.000948905944824
    3. ' )' → logprob: -10.500948905944824
    4. ')==' → logprob: -11.875948905944824
    5. '!=' → logprob: -13.375948905944824
    6. '```' → logprob: -15.125948905944824
    7. '   ' → logprob: -15.875948905944824
    8. '）' → logprob: -16.000947952270508
    9. '=' → logprob: -16.375947952270508
    10. ')=' → logprob: -16.500947952270508

Token 211: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1806299388408661
    2. ')!=' → logprob: -2.4306299686431885
    3. ')' → logprob: -3.1806299686431885
    4. ' !=' → logprob: -3.4306299686431885
    5. '()!=' → logprob: -6.055629730224609
    6. ']!=' → logprob: -7.305629730224609
    7. '==' → logprob: -8.93062973022461
    8. '=' → logprob: -9.80562973022461
    9. '>' → logprob: -10.18062973022461
    10. '!==' → logprob: -10.80562973022461

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002805940806865692
    2. ' ' → logprob: -5.877805709838867
    3. '   ' → logprob: -14.377805709838867
    4. '  ' → logprob: -15.752805709838867
    5. '
' → logprob: -16.002805709838867
    6. 'g' → logprob: -16.565305709838867
    7. '```' → logprob: -16.627805709838867
    8. ' ' → logprob: -17.190305709838867
    9. '

' → logprob: -17.502805709838867
    10. '2' → logprob: -17.690305709838867

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.625001907348633
    4. 'g' → logprob: -18.500001907348633
    5. '```' → logprob: -19.187501907348633
    6. '१' → logprob: -19.687501907348633
    7. '
' → logprob: -19.750001907348633
    8. '۱' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.250001907348633
    10. '' → logprob: -20.312501907348633

Token 214: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6754685640335083
    2. ':
' → logprob: -0.9254685640335083
    3. ' or' → logprob: -2.4254684448242188
    4. '       ' → logprob: -5.175468444824219
    5. '           ' → logprob: -8.175468444824219
    6. ',' → logprob: -9.175468444824219
    7. '):
' → logprob: -9.300468444824219
    8. ' and' → logprob: -9.425468444824219
    9. 'or' → logprob: -9.925468444824219
    10. '):' → logprob: -11.300468444824219

Token 215: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03842012584209442
    2. ' gcd' → logprob: -3.2884202003479004
    3. '       ' → logprob: -8.038419723510742
    4. '           ' → logprob: -10.663419723510742
    5. '   ' → logprob: -11.038419723510742
    6. ' ' → logprob: -12.913419723510742
    7. '    ' → logprob: -13.163419723510742
    8. '        ' → logprob: -13.288419723510742
    9. '               ' → logprob: -13.538419723510742
    10. '      ' → logprob: -13.538419723510742

Token 216: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.383526149671525e-05
    2. '(' → logprob: -9.875053405761719
    3. 'self' → logprob: -13.375053405761719
    4. '(s' → logprob: -15.250053405761719
    5. '(
' → logprob: -15.250053405761719
    6. ' (' → logprob: -15.750053405761719
    7. '(this' → logprob: -15.750053405761719
    8. '[self' → logprob: -17.50005340576172
    9. ',self' → logprob: -18.25005340576172
    10. ' self' → logprob: -18.25005340576172

Token 217: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.00024192029377445579
    2. '.' → logprob: -9.125242233276367
    3. 'a' → logprob: -9.250242233276367
    4. ' .' → logprob: -10.500242233276367
    5. 'self' → logprob: -12.125242233276367
    6. '   ' → logprob: -13.875242233276367
    7. ' ' → logprob: -14.125242233276367
    8. ' a' → logprob: -14.500242233276367
    9. ').' → logprob: -14.750242233276367
    10. '().' → logprob: -14.875242233276367

Token 218: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015002528380136937
    2. '3' → logprob: -9.125149726867676
    3. 'a' → logprob: -10.250149726867676
    4. 'self' → logprob: -12.500149726867676
    5. '1' → logprob: -14.750149726867676
    6. '
' → logprob: -15.500149726867676
    7. 's' → logprob: -15.562649726867676
    8. 'def' → logprob: -15.562649726867676
    9. ' ' → logprob: -16.062650680541992
    10. '```' → logprob: -16.562650680541992

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04782364144921303
    2. '(self' → logprob: -3.172823667526245
    3. '(' → logprob: -5.422823429107666
    4. ',self' → logprob: -8.422823905944824
    5. ' ,' → logprob: -9.797823905944824
    6. '(
' → logprob: -10.172823905944824
    7. 'self' → logprob: -10.172823905944824
    8. ')' → logprob: -11.297823905944824
    9. '(s' → logprob: -12.297823905944824
    10. ' (' → logprob: -12.297823905944824

Token 220: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06219017878174782
    2. ' self' → logprob: -2.812190294265747
    3. '(self' → logprob: -8.437190055847168
    4. '	self' → logprob: -13.437190055847168
    5. '[self' → logprob: -13.687190055847168
    6. '       ' → logprob: -14.187190055847168
    7. ' ' → logprob: -14.437190055847168
    8. '```' → logprob: -14.687190055847168
    9. '=self' → logprob: -15.187190055847168
    10. '1' → logprob: -15.312190055847168

Token 221: '.m' (ID: 1021)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009947025682777166
    2. '.m' → logprob: -7.000994682312012
    3. 'self' → logprob: -10.250994682312012
    4. ' m' → logprob: -10.625994682312012
    5. 'a' → logprob: -11.500994682312012
    6. '   ' → logprob: -12.125994682312012
    7. ' ' → logprob: -12.750994682312012
    8. '  ' → logprob: -14.250994682312012
    9. 'м' → logprob: -14.250994682312012
    10. '
' → logprob: -15.000994682312012

Token 222: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. '1' → logprob: -12.375006675720215
    3. '   ' → logprob: -13.750006675720215
    4. ' ' → logprob: -14.750006675720215
    5. 'm' → logprob: -14.875006675720215
    6. '3' → logprob: -15.375006675720215
    7. 'self' → logprob: -16.00000762939453
    8. ')' → logprob: -16.37500762939453
    9. '_' → logprob: -16.50000762939453
    10. '
' → logprob: -16.62500762939453

Token 223: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022758657578378916
    2. ')!=' → logprob: -6.8772759437561035
    3. ' !=' → logprob: -7.0022759437561035
    4. ' )' → logprob: -8.252275466918945
    5. '!=' → logprob: -9.627275466918945
    6. '()' → logprob: -13.252275466918945
    7. '`)' → logprob: -14.252275466918945
    8. '()!=' → logprob: -14.502275466918945
    9. '())' → logprob: -15.002275466918945
    10. ']!=' → logprob: -15.127275466918945

Token 224: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3922301232814789
    2. '!=' → logprob: -1.1422301530838013
    3. ')' → logprob: -6.017230033874512
    4. ')!=' → logprob: -6.017230033874512
    5. '()!=' → logprob: -7.767230033874512
    6. ']!=' → logprob: -10.767230033874512
    7. '()' → logprob: -12.642230033874512
    8. ' ' → logprob: -12.767230033874512
    9. '!=-' → logprob: -12.767230033874512
    10. '!=(' → logprob: -12.767230033874512

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.000261306762695
    4. '```' → logprob: -17.500261306762695
    5. '
' → logprob: -17.750261306762695
    6. '  ' → logprob: -18.562761306762695
    7. '       ' → logprob: -18.625261306762695
    8. '           ' → logprob: -19.125261306762695
    9. ')' → logprob: -19.125261306762695
    10. '

' → logprob: -19.187761306762695

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -18.875001907348633
    4. '```' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '

' → logprob: -19.750001907348633
    7. ')' → logprob: -20.375001907348633
    8. '  ' → logprob: -20.812501907348633
    9. '' → logprob: -21.500001907348633
    10. '۱' → logprob: -21.625001907348633

Token 227: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0031791406217962503
    2. 'or' → logprob: -5.75317907333374
    3. ' ' → logprob: -13.753179550170898
    4. '	or' → logprob: -15.878179550170898
    5. '           ' → logprob: -16.3781795501709
    6. '       ' → logprob: -16.3781795501709
    7. '          ' → logprob: -18.0031795501709
    8. '        ' → logprob: -18.0031795501709
    9. ',' → logprob: -18.5031795501709
    10. '   ' → logprob: -18.7531795501709

Token 228: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.16023743152618408
    2. 'g' → logprob: -1.910237431526184
    3. ' ' → logprob: -12.660237312316895
    4. '   ' → logprob: -13.160237312316895
    5. '       ' → logprob: -13.535237312316895
    6. '	g' → logprob: -13.660237312316895
    7. '(g' → logprob: -13.660237312316895
    8. 'c' → logprob: -14.035237312316895
    9. '```' → logprob: -14.410237312316895
    10. '/g' → logprob: -15.035237312316895

Token 229: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.37501335144043
    3. 'self' → logprob: -13.87501335144043
    4. ' (' → logprob: -15.00001335144043
    5. '(
' → logprob: -17.00001335144043
    6. '(s' → logprob: -19.00001335144043
    7. '(this' → logprob: -19.00001335144043
    8. '```' → logprob: -19.00001335144043
    9. ')' → logprob: -19.87501335144043
    10. '[self' → logprob: -20.00001335144043

Token 230: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -3.4285862057004124e-05
    2. 'a' → logprob: -10.75003433227539
    3. '.' → logprob: -11.37503433227539
    4. 'self' → logprob: -14.62503433227539
    5. ' .' → logprob: -14.87503433227539
    6. '(self' → logprob: -15.62503433227539
    7. ' a' → logprob: -17.00003433227539
    8. '(a' → logprob: -17.00003433227539
    9. '.m' → logprob: -17.37503433227539
    10. '.g' → logprob: -17.87503433227539

Token 231: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00010425841173855588
    2. '2' → logprob: -9.750103950500488
    3. 'a' → logprob: -10.875103950500488
    4. 'self' → logprob: -11.250103950500488
    5. 'm' → logprob: -12.500103950500488
    6. '   ' → logprob: -13.125103950500488
    7. ' ' → logprob: -13.250103950500488
    8. '1' → logprob: -13.500103950500488
    9. '```' → logprob: -14.000103950500488
    10. '_' → logprob: -14.375103950500488

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4293866455554962
    2. '(self' → logprob: -1.0543866157531738
    3. '(' → logprob: -8.054387092590332
    4. 'self' → logprob: -8.804387092590332
    5. ')' → logprob: -9.304387092590332
    6. ',self' → logprob: -9.429387092590332
    7. ' ,' → logprob: -10.929387092590332
    8. '(
' → logprob: -11.804387092590332
    9. ' (' → logprob: -11.929387092590332
    10. '),' → logprob: -12.179387092590332

Token 233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10028915852308273
    2. ' self' → logprob: -2.3502891063690186
    3. '(self' → logprob: -9.600289344787598
    4. '1' → logprob: -12.475289344787598
    5. ' ' → logprob: -12.600289344787598
    6. '       ' → logprob: -13.475289344787598
    7. '
' → logprob: -13.850289344787598
    8. '	self' → logprob: -13.850289344787598
    9. '           ' → logprob: -14.475289344787598
    10. 'def' → logprob: -14.600289344787598

Token 234: '.m' (ID: 1021)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.061372436583042145
    2. '.m' → logprob: -2.9363725185394287
    3. '_m' → logprob: -5.93637228012085
    4. '3' → logprob: -6.68637228012085
    5. ',' → logprob: -7.18637228012085
    6. 'self' → logprob: -7.18637228012085
    7. ' m' → logprob: -7.81137228012085
    8. ',m' → logprob: -8.811372756958008
    9. '(self' → logprob: -9.186372756958008
    10. ')' → logprob: -9.436372756958008

Token 235: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.253090865968261e-06
    2. '_' → logprob: -13.000009536743164
    3. ')' → logprob: -13.250009536743164
    4. '1' → logprob: -13.250009536743164
    5. ' ' → logprob: -13.250009536743164
    6. '   ' → logprob: -14.125009536743164
    7. '2' → logprob: -15.000009536743164
    8. 'm' → logprob: -16.875009536743164
    9. '  ' → logprob: -17.062509536743164
    10. '```' → logprob: -17.125009536743164

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002541872672736645
    2. ')!=' → logprob: -8.75025463104248
    3. ' )' → logprob: -10.00025463104248
    4. '!=' → logprob: -10.87525463104248
    5. '()' → logprob: -11.00025463104248
    6. ' !=' → logprob: -11.25025463104248
    7. '}' → logprob: -14.50025463104248
    8. '()!=' → logprob: -15.50025463104248
    9. ']' → logprob: -15.75025463104248
    10. '）' → logprob: -16.000253677368164

Token 237: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5236361622810364
    2. '!=' → logprob: -0.8986361622810364
    3. ')!=' → logprob: -7.898636341094971
    4. ')' → logprob: -9.148635864257812
    5. '()!=' → logprob: -10.773635864257812
    6. ']!=' → logprob: -12.273635864257812
    7. '!=-' → logprob: -13.273635864257812
    8. '```' → logprob: -13.273635864257812
    9. ' ' → logprob: -13.398635864257812
    10. '<|end|>' → logprob: -13.773635864257812

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020544573664665222
    2. ' ' → logprob: -3.8955445289611816
    3. '```' → logprob: -14.02054500579834
    4. '   ' → logprob: -14.52054500579834
    5. ' ' → logprob: -15.39554500579834
    6. '
' → logprob: -15.45804500579834
    7. '  ' → logprob: -15.58304500579834
    8. '0' → logprob: -16.208044052124023
    9. '`' → logprob: -16.708044052124023
    10. '

' → logprob: -16.770544052124023

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002973280206788331
    2. ' ' → logprob: -8.125297546386719
    3. '
' → logprob: -14.375297546386719
    4. '```' → logprob: -15.000297546386719
    5. '

' → logprob: -16.43779754638672
    6. '   ' → logprob: -16.50029754638672
    7. '  ' → logprob: -16.93779754638672
    8. '`' → logprob: -17.68779754638672
    9. ')' → logprob: -17.87529754638672
    10. ' ' → logprob: -18.18779754638672

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12729333341121674
    2. ':
' → logprob: -2.127293348312378
    3. '):' → logprob: -8.877293586730957
    4. ' :' → logprob: -9.127293586730957
    5. '):
' → logprob: -9.502293586730957
    6. ' :
' → logprob: -10.252293586730957
    7. ' or' → logprob: -13.127293586730957
    8. ')' → logprob: -13.252293586730957
    9. ':
' → logprob: -13.877293586730957
    10. '       ' → logprob: -14.127293586730957

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005082195159047842
    2. ':' → logprob: -6.505082130432129
    3. ' raise' → logprob: -6.505082130432129
    4. '       ' → logprob: -7.505082130432129
    5. '            ' → logprob: -8.130082130432129
    6. '          ' → logprob: -8.130082130432129
    7. 'raise' → logprob: -8.630082130432129
    8. '
' → logprob: -8.630082130432129
    9. '        ' → logprob: -9.130082130432129
    10. ':
' → logprob: -9.380082130432129

Token 242: ' #' (ID: 1069)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.5873714685440063
    2. 'raise' → logprob: -0.8373714685440063
    3. '           ' → logprob: -4.587371349334717
    4. '	raise' → logprob: -7.462371349334717
    5. '
' → logprob: -7.712371349334717
    6. '   ' → logprob: -9.462371826171875
    7. '               ' → logprob: -10.087371826171875
    8. '       ' → logprob: -11.087371826171875
    9. 'Raise' → logprob: -11.087371826171875
    10. '            
' → logprob: -12.587371826171875

Token 243: ' The' (ID: 623)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.010039615444839
    2. ' raise' → logprob: -4.760039806365967
    3. '           ' → logprob: -6.635039806365967
    4. 'Raise' → logprob: -9.635039329528809
    5. '
' → logprob: -11.010039329528809
    6. '	raise' → logprob: -11.885039329528809
    7. '   ' → logprob: -11.885039329528809
    8. '       ' → logprob: -12.135039329528809
    9. '```' → logprob: -12.885039329528809
    10. '               ' → logprob: -13.010039329528809

Token 244: ' problem' (ID: 4792)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.909233570098877
    2. ' parameters' → logprob: -1.534233570098877
    3. 'raise' → logprob: -1.784233570098877
    4. 'parameters' → logprob: -2.159233570098877
    5. ' next' → logprob: -3.409233570098877
    6. ' code' → logprob: -5.409233570098877
    7. ' raised' → logprob: -5.409233570098877
    8. 'next' → logprob: -5.659233570098877
    9. 'a' → logprob: -6.034233570098877
    10. ' class' → logprob: -6.096733570098877

Token 245: ' states' (ID: 9407)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.609818160533905
    2. ':' → logprob: -1.6098182201385498
    3. ' is' → logprob: -3.35981822013855
    4. '       ' → logprob: -3.48481822013855
    5. ' raise' → logprob: -3.48481822013855
    6. ' raises' → logprob: -3.60981822013855
    7. 'raise' → logprob: -3.85981822013855
    8. '               ' → logprob: -3.98481822013855
    9. ' continues' → logprob: -3.98481822013855
    10. 'raises' → logprob: -4.609817981719971

Token 246: ' these' (ID: 1879)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6378452181816101
    2. 'raise' → logprob: -1.5128452777862549
    3. ' that' → logprob: -2.137845277786255
    4. '           ' → logprob: -2.637845277786255
    5. 'that' → logprob: -3.262845277786255
    6. '#' → logprob: -4.012845039367676
    7. '               ' → logprob: -5.887845039367676
    8. '            ' → logprob: -7.512845039367676
    9. ' the' → logprob: -8.012845039367676
    10. 'That' → logprob: -8.387845039367676

Token 247: ' being' (ID: 2447)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.1172075271606445
    2. 'parameters' → logprob: -1.6172075271606445
    3. ' parameters' → logprob: -1.7422075271606445
    4. ' conditions' → logprob: -2.3672075271606445
    5. 'are' → logprob: -2.7422075271606445
    6. ' should' → logprob: -3.4922075271606445
    7. 'conditions' → logprob: -3.6172075271606445
    8. ' must' → logprob: -3.8672075271606445
    9. ')' → logprob: -4.6172075271606445
    10. '#' → logprob: -4.6172075271606445

Token 248: ' cop' (ID: 8039)
  Prédit: 'necessary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'necessary' → logprob: -1.1121540069580078
    2. ' necessary' → logprob: -1.8621540069580078
    3. '"' → logprob: -2.487154006958008
    4. 'true' → logprob: -2.862154006958008
    5. ' cop' → logprob: -3.112154006958008
    6. 'co' → logprob: -3.112154006958008
    7. 'rel' → logprob: -3.237154006958008
    8. 'required' → logprob: -3.362154006958008
    9. 'mut' → logprob: -3.612154006958008
    10. 'cr' → logprob: -3.987154006958008

Token 249: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003372502396814525
    2. 'rim' → logprob: -8.750337600708008
    3. 'ime' → logprob: -8.875337600708008
    4. '```' → logprob: -11.500337600708008
    5. ' r' → logprob: -12.375337600708008
    6. 'ri' → logprob: -12.625337600708008
    7. '#' → logprob: -13.375337600708008
    8. '
' → logprob: -13.500337600708008
    9. '   ' → logprob: -13.625337600708008
    10. '       ' → logprob: -13.937837600708008

Token 250: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.0009724444826133549
    2. '
' → logprob: -9.250972747802734
    3. 'imes' → logprob: -9.313472747802734
    4. '```' → logprob: -9.313472747802734
    5. '

' → logprob: -9.500972747802734
    6. '   ' → logprob: -9.750972747802734
    7. '1' → logprob: -9.938472747802734
    8. '{' → logprob: -10.313472747802734
    9. 'me' → logprob: -10.500972747802734
    10. '**' → logprob: -10.750972747802734

Token 251: ' guarantees' (ID: 49460)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0382654666900635
    2. '       ' → logprob: -1.4132654666900635
    3. ')' → logprob: -1.7882654666900635
    4. '):' → logprob: -2.5382654666900635
    5. ',' → logprob: -2.9132654666900635
    6. ':
' → logprob: -3.2882654666900635
    7. '
' → logprob: -4.038265228271484
    8. '           ' → logprob: -4.663265228271484
    9. ')
' → logprob: -4.663265228271484
    10. '):
' → logprob: -5.038265228271484

Token 252: ' return' (ID: 622)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3393631875514984
    2. ' that' → logprob: -2.8393630981445312
    3. ' correct' → logprob: -3.4643630981445312
    4. ' maximal' → logprob: -3.4643630981445312
    5. ' a' → logprob: -3.5893630981445312
    6. ' uniqueness' → logprob: -3.8393630981445312
    7. ' valid' → logprob: -3.9643630981445312
    8. ' their' → logprob: -3.9643630981445312
    9. ' unique' → logprob: -4.214363098144531
    10. ' good' → logprob: -4.464363098144531

Token 253: '
' (ID: 198)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5428701639175415
    2. 'True' → logprob: -0.9178701639175415
    3. ' None' → logprob: -5.792870044708252
    4. ' ' → logprob: -5.917870044708252
    5. 'None' → logprob: -6.042870044708252
    6. '
' → logprob: -6.167870044708252
    7. '<|end|>' → logprob: -6.542870044708252
    8. 'False' → logprob: -6.667870044708252
    9. ' values' → logprob: -6.917870044708252
    10. 's' → logprob: -7.042870044708252

Token 254: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' pass' (ID: 1853)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.07412254065275192
    2. 'raise' → logprob: -2.824122428894043
    3. '           ' → logprob: -4.449122428894043
    4. '       ' → logprob: -9.074122428894043
    5. ')' → logprob: -9.324122428894043
    6. '            ' → logprob: -10.324122428894043
    7. '#' → logprob: -10.449122428894043
    8. ' return' → logprob: -10.574122428894043
    9. '               ' → logprob: -10.699122428894043
    10. ',' → logprob: -10.949122428894043

Token 256: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18509653210639954
    2. '           ' → logprob: -2.060096502304077
    3. ' raise' → logprob: -4.060096740722656
    4. 'raise' → logprob: -4.060096740722656
    5. '<|end|>' → logprob: -5.560096740722656
    6. '   ' → logprob: -7.435096740722656
    7. '	raise' → logprob: -7.435096740722656
    8. '```' → logprob: -7.435096740722656
    9. 'else' → logprob: -7.935096740722656
    10. '               ' → logprob: -8.435096740722656

Token 257: 'class' (ID: 1444)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5584010481834412
    2. '           ' → logprob: -1.058401107788086
    3. ' raise' → logprob: -3.308401107788086
    4. 'raise' → logprob: -3.308401107788086
    5. '   ' → logprob: -5.808401107788086
    6. '	raise' → logprob: -7.183401107788086
    7. '               ' → logprob: -7.683401107788086
    8. '        ' → logprob: -8.058401107788086
    9. '#' → logprob: -8.058401107788086
    10. ' ' → logprob: -8.183401107788086

Token 258: ' Modular' (ID: 137262)
  Prédit: ' Electron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Electron' → logprob: -0.10085662454366684
    2. 'Electron' → logprob: -2.4758565425872803
    3. ' Quantum' → logprob: -5.225856781005859
    4. ' Electronic' → logprob: -7.475856781005859
    5. ' electron' → logprob: -7.600856781005859
    6. ' Electric' → logprob: -7.600856781005859
    7. 'Quantum' → logprob: -7.975856781005859
    8. ' Particle' → logprob: -8.22585678100586
    9. ' L' → logprob: -8.28835678100586
    10. ' Orbit' → logprob: -8.28835678100586

Token 259: 'Cycle' (ID: 43162)
  Prédit: 'Arithmetic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Arithmetic' → logprob: -1.2668111324310303
    2. 'Inverse' → logprob: -1.5168111324310303
    3. 'Cong' → logprob: -1.7668111324310303
    4. 'System' → logprob: -2.1418111324310303
    5. 'Equation' → logprob: -2.1418111324310303
    6. 'Solver' → logprob: -3.6418111324310303
    7. 'Linear' → logprob: -4.266811370849609
    8. 'Constraint' → logprob: -5.016811370849609
    9. 'Fly' → logprob: -5.266811370849609
    10. 'Integer' → logprob: -5.516811370849609

Token 260: 'Finder' (ID: 42976)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10719040781259537
    2. ':
' → logprob: -2.3571903705596924
    3. 'Parameters' → logprob: -5.4821906089782715
    4. 'Iterator' → logprob: -7.3571906089782715
    5. 'Cycle' → logprob: -7.7321906089782715
    6. 'Finder' → logprob: -7.7321906089782715
    7. 'Generator' → logprob: -8.232190132141113
    8. 'Calculator' → logprob: -8.607190132141113
    9. 'Analyzer' → logprob: -9.232190132141113
    10. 'Lengths' → logprob: -9.232190132141113

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002211516024544835
    2. ':
' → logprob: -6.127211570739746
    3. ':def' → logprob: -10.752211570739746
    4. ' :' → logprob: -13.127211570739746
    5. '   ' → logprob: -14.127211570739746
    6. '(' → logprob: -14.252211570739746
    7. '():' → logprob: -14.752211570739746
    8. '(object' → logprob: -15.002211570739746
    9. 'def' → logprob: -15.002211570739746
    10. '):' → logprob: -15.502211570739746

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07012182474136353
    2. ' def' → logprob: -2.8201217651367188
    3. '    
' → logprob: -5.445121765136719
    4. 'def' → logprob: -6.445121765136719
    5. ':' → logprob: -7.195121765136719
    6. '	def' → logprob: -7.445121765136719
    7. ' 
' → logprob: -8.320121765136719
    8. '<|end|>' → logprob: -8.570121765136719
    9. '
' → logprob: -9.320121765136719
    10. ':def' → logprob: -10.070121765136719

Token 263: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20237891376018524
    2. 'def' (adapté à ' def') → logprob: -1.7023788690567017
    3. '   ' → logprob: -6.952378749847412
    4. ' ' → logprob: -12.70237922668457
    5. '```' → logprob: -12.82737922668457
    6. '	def' → logprob: -13.95237922668457
    7. 'de' → logprob: -14.07737922668457
    8. 'class' → logprob: -15.20237922668457
    9. '    ' → logprob: -15.32737922668457
    10. '  ' → logprob: -16.07737922668457

Token 264: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007380863185971975
    2. '__' → logprob: -5.007380962371826
    3. '_init' → logprob: -8.132380485534668
    4. ' def' → logprob: -8.632380485534668
    5. ' init' → logprob: -9.132380485534668
    6. 'init' → logprob: -9.507380485534668
    7. 'def' → logprob: -12.632380485534668
    8. ' _' → logprob: -13.132380485534668
    9. ' ' → logprob: -13.382380485534668
    10. '```' → logprob: -13.882380485534668

Token 265: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.375
    3. '```' → logprob: -17.75
    4. 'def' → logprob: -18.0
    5. 'int' → logprob: -18.875
    6. '   ' → logprob: -19.125
    7. 'inite' → logprob: -20.125
    8. '_init' → logprob: -20.125
    9. '(init' → logprob: -20.125
    10. '
' → logprob: -20.625

Token 266: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09848392009735107
    2. '(self' → logprob: -2.4734840393066406
    3. '(' → logprob: -4.973484039306641
    4. ' (' → logprob: -6.723484039306641
    5. '__(
' → logprob: -7.348484039306641
    6. ',' → logprob: -8.09848403930664
    7. '_(' → logprob: -8.72348403930664
    8. ')(' → logprob: -9.47348403930664
    9. '__' → logprob: -9.72348403930664
    10. 'self' → logprob: -10.34848403930664

Token 267: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014299227041192353
    2. ' self' → logprob: -9.125143051147461
    3. 'parameters' → logprob: -11.625143051147461
    4. 'a' → logprob: -12.000143051147461
    5. '
' → logprob: -12.125143051147461
    6. ',' → logprob: -12.125143051147461
    7. ')' → logprob: -13.000143051147461
    8. '):
' → logprob: -13.125143051147461
    9. 'params' → logprob: -13.500143051147461
    10. '       ' → logprob: -14.000143051147461

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.32654589228332e-05
    2. '):' → logprob: -9.875073432922363
    3. ' ,' → logprob: -11.375073432922363
    4. 'self' → logprob: -12.250073432922363
    5. ',
' → logprob: -12.500073432922363
    6. '):
' → logprob: -14.625073432922363
    7. ',a' → logprob: -15.000073432922363
    8. ',self' → logprob: -15.500073432922363
    9. '   ' → logprob: -15.875073432922363
    10. '       ' → logprob: -16.000072479248047

Token 269: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1860605478286743
    2. 'params' → logprob: -1.5610605478286743
    3. ' a' → logprob: -1.8110605478286743
    4. ' params' → logprob: -1.9360605478286743
    5. ' parameters' → logprob: -2.5610604286193848
    6. 'parameters' → logprob: -2.5610604286193848
    7. ' electron' → logprob: -5.561060428619385
    8. ' n' → logprob: -6.061060428619385
    9. ' p' → logprob: -6.061060428619385
    10. 'p' → logprob: -6.311060428619385

Token 270: ':' (ID: 25)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12787191569805145
    2. ',' → logprob: -2.1278719902038574
    3. 's' → logprob: -8.0028715133667
    4. ' ,' → logprob: -8.3778715133667
    5. ',a' → logprob: -9.0028715133667
    6. 'a' → logprob: -9.6278715133667
    7. ',m' → logprob: -9.6278715133667
    8. ':' → logprob: -9.8778715133667
    9. '):' → logprob: -11.2528715133667
    10. ')' → logprob: -11.6278715133667

Token 271: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002545448951423168
    2. ' int' → logprob: -8.37525463104248
    3. ',' → logprob: -11.12525463104248
    4. 'a' → logprob: -13.00025463104248
    5. ',int' → logprob: -13.12525463104248
    6. '[int' → logprob: -13.37525463104248
    7. ':int' → logprob: -14.25025463104248
    8. '1' → logprob: -14.37525463104248
    9. ')' → logprob: -14.50025463104248
    10. '   ' → logprob: -14.50025463104248

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002705145161598921
    2. ' ,' → logprob: -8.25027084350586
    3. ',m' → logprob: -11.87527084350586
    4. '   ' → logprob: -13.75027084350586
    5. ',int' → logprob: -15.50027084350586
    6. ')' → logprob: -15.75027084350586
    7. '‌,' → logprob: -15.87527084350586
    8. ':' → logprob: -16.00027084350586
    9. '_,' → logprob: -16.00027084350586
    10. ',a' → logprob: -16.00027084350586

Token 273: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0059496560133993626
    2. ' m' → logprob: -5.1309494972229
    3. '   ' → logprob: -11.880949974060059
    4. 'mod' → logprob: -12.005949974060059
    5. 'b' → logprob: -12.755949974060059
    6. ' ' → logprob: -13.755949974060059
    7. 'n' → logprob: -13.755949974060059
    8. 'a' → logprob: -14.255949974060059
    9. '       ' → logprob: -14.630949974060059
    10. 'M' → logprob: -15.505949974060059

Token 274: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1446528136730194
    2. ':' → logprob: -2.019652843475342
    3. '):
' → logprob: -6.894652843475342
    4. ')' → logprob: -7.769652843475342
    5. ',' → logprob: -8.269652366638184
    6. ':int' → logprob: -8.894652366638184
    7. ' ):' → logprob: -9.019652366638184
    8. '):
' → logprob: -11.519652366638184
    9. '):

' → logprob: -12.769652366638184
    10. '}:' → logprob: -13.269652366638184

Token 275: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016037650406360626
    2. ' int' → logprob: -4.141037464141846
    3. ')' → logprob: -13.766037940979004
    4. ':int' → logprob: -13.766037940979004
    5. '[int' → logprob: -14.891037940979004
    6. '	int' → logprob: -15.391037940979004
    7. '=int' → logprob: -15.641037940979004
    8. '<int' → logprob: -16.016036987304688
    9. '```' → logprob: -16.391036987304688
    10. '(int' → logprob: -16.516036987304688

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005699523026123643
    2. ')' → logprob: -8.000570297241211
    3. '):
' → logprob: -8.500570297241211
    4. '):
' → logprob: -11.500570297241211
    5. ' ):' → logprob: -11.500570297241211
    6. ',' → logprob: -11.625570297241211
    7. ':' → logprob: -13.500570297241211
    8. '   ' → logprob: -15.125570297241211
    9. '):

' → logprob: -16.87557029724121
    10. '**' → logprob: -17.00057029724121

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006114058778621256
    2. '):
' → logprob: -8.375611305236816
    3. 'self' → logprob: -9.250611305236816
    4. '):' → logprob: -9.375611305236816
    5. ':' → logprob: -9.625611305236816
    6. ')' → logprob: -10.000611305236816
    7. ',' → logprob: -10.375611305236816
    8. '
' → logprob: -10.875611305236816
    9. '   ' → logprob: -11.250611305236816
    10. ' self' → logprob: -11.750611305236816

Token 278: ' assert' (ID: 3696)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03817953169345856
    2. '       ' → logprob: -3.538179636001587
    3. ' self' → logprob: -4.788179397583008
    4. '   ' → logprob: -10.038179397583008
    5. 'from' → logprob: -12.038179397583008
    6. '	self' → logprob: -12.538179397583008
    7. ' ' → logprob: -12.913179397583008
    8. '      ' → logprob: -13.413179397583008
    9. '
' → logprob: -13.538179397583008
    10. 'def' → logprob: -13.663179397583008

Token 279: ' gcd' (ID: 106918)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0875496044754982
    2. ' ' → logprob: -2.7125496864318848
    3. '0' → logprob: -4.837549686431885
    4. 'a' → logprob: -4.962549686431885
    5. 'm' → logprob: -6.837549686431885
    6. ' a' → logprob: -7.337549686431885
    7. ' isinstance' → logprob: -7.712549686431885
    8. ' m' → logprob: -8.712549209594727
    9. 'g' → logprob: -10.087549209594727
    10. '(a' → logprob: -10.462549209594727

Token 280: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0005576779949478805
    2. '(' → logprob: -7.500557899475098
    3. ' (' → logprob: -12.625557899475098
    4. 'a' → logprob: -14.625557899475098
    5. '(
' → logprob: -15.375557899475098
    6. '(m' → logprob: -15.500557899475098
    7. '(self' → logprob: -15.750557899475098
    8. '(g' → logprob: -15.875557899475098
    9. '<|end|>' → logprob: -17.00055694580078
    10. '(s' → logprob: -17.75055694580078

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012544850818812847
    2. ',m' → logprob: -4.512544631958008
    3. ' ,' → logprob: -7.012544631958008
    4. '(a' → logprob: -8.387544631958008
    5. ',a' → logprob: -8.512544631958008
    6. '(m' → logprob: -9.387544631958008
    7. 'a' → logprob: -9.887544631958008
    8. 'm' → logprob: -10.762544631958008
    9. '(' → logprob: -12.137544631958008
    10. ',
' → logprob: -13.262544631958008

Token 282: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078639671206474
    2. ' m' → logprob: -5.5040788650512695
    3. ')' → logprob: -16.129077911376953
    4. ')m' → logprob: -16.879077911376953
    5. ' ' → logprob: -17.379077911376953
    6. '   ' → logprob: -18.129077911376953
    7. '	m' → logprob: -18.754077911376953
    8. ',' → logprob: -19.504077911376953
    9. ',m' → logprob: -19.879077911376953
    10. '1' → logprob: -20.004077911376953

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030066570616327226
    2. ')==' → logprob: -8.500300407409668
    3. ' )' → logprob: -9.250300407409668
    4. ')=' → logprob: -14.875300407409668
    5. '   ' → logprob: -15.500300407409668
    6. ')
' → logprob: -15.875300407409668
    7. '())' → logprob: -16.375301361083984
    8. '==' → logprob: -16.625301361083984
    9. '()' → logprob: -16.750301361083984
    10. '）' → logprob: -17.000301361083984

Token 284: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1291731745004654
    2. '==' → logprob: -2.1291732788085938
    3. ')' → logprob: -6.754173278808594
    4. ' ' → logprob: -7.504173278808594
    5. '1' → logprob: -8.879173278808594
    6. '()' → logprob: -9.254173278808594
    7. '=' → logprob: -9.254173278808594
    8. ')==' → logprob: -9.254173278808594
    9. '()==' → logprob: -9.879173278808594
    10. ' )' → logprob: -11.129173278808594

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.750179290771484
    4. '  ' → logprob: -19.500179290771484
    5. '
' → logprob: -19.750179290771484
    6. '```' → logprob: -21.000179290771484
    7. '	' → logprob: -21.750179290771484
    8. ' ' → logprob: -22.000179290771484
    9. '

' → logprob: -22.187679290771484
    10. '    ' → logprob: -22.312679290771484

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.500001907348633
    4. '```' → logprob: -21.625001907348633
    5. '' → logprob: -21.750001907348633
    6. '  ' → logprob: -22.000001907348633
    7. '
' → logprob: -22.375001907348633
    8. '

' → logprob: -22.875001907348633
    9. '۱' → logprob: -23.250001907348633
    10. '１' → logprob: -23.875001907348633

Token 287: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1230038404464722
    2. ' "' → logprob: -1.8730038404464722
    3. ' True' → logprob: -1.8730038404464722
    4. ' self' → logprob: -2.1230039596557617
    5. '       ' → logprob: -2.1230039596557617
    6. ' a' → logprob: -2.9980039596557617
    7. 'a' → logprob: -4.123003959655762
    8. '1' → logprob: -4.623003959655762
    9. ')' → logprob: -4.748003959655762
    10. 'True' → logprob: -4.998003959655762

Token 289: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08131691068410873
    2. 'Parameters' → logprob: -2.5813169479370117
    3. 'The' → logprob: -6.956316947937012
    4. ' a' → logprob: -7.081316947937012
    5. 'Input' → logprob: -8.831316947937012
    6. 'Initial' → logprob: -9.081316947937012
    7. 'Parameter' → logprob: -9.706316947937012
    8. ' Parameters' → logprob: -9.831316947937012
    9. 'Invalid' → logprob: -9.831316947937012
    10. '(a' → logprob: -10.456316947937012

Token 290: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.775346040725708
    2. ' ,' → logprob: -1.025346040725708
    3. ' and' → logprob: -2.025346040725708
    4. ' must' → logprob: -3.150346040725708
    5. ' a' → logprob: -6.400345802307129
    6. ')' → logprob: -6.775345802307129
    7. ' ' → logprob: -7.025345802307129
    8. ' )' → logprob: -7.150345802307129
    9. ' should' → logprob: -7.275345802307129
    10. ' is' → logprob: -8.650345802307129

Token 291: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5759417414665222
    2. 'm' → logprob: -0.8259417414665222
    3. ' ' → logprob: -14.075942039489746
    4. '```' → logprob: -14.950942039489746
    5. '<|end|>' → logprob: -15.200942039489746
    6. ')' → logprob: -15.575942039489746
    7. '	m' → logprob: -15.700942039489746
    8. ',' → logprob: -16.20094108581543
    9. ')m' → logprob: -16.20094108581543
    10. '       ' → logprob: -16.32594108581543

Token 292: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.06378654390573502
    2. ' are' → logprob: -2.813786506652832
    3. ')' → logprob: -6.813786506652832
    4. ' should' → logprob: -7.938786506652832
    5. 'must' → logprob: -8.313786506652832
    6. ' have' → logprob: -9.438786506652832
    7. '<|end|>' → logprob: -11.438786506652832
    8. 'are' → logprob: -11.688786506652832
    9. ' need' → logprob: -11.813786506652832
    10. ' ' → logprob: -12.938786506652832

Token 293: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.005961741786450148
    2. 'be' → logprob: -5.130961894989014
    3. '<|end|>' → logprob: -11.005961418151855
    4. ')' → logprob: -11.755961418151855
    5. '	be' → logprob: -13.130961418151855
    6. ' not' → logprob: -13.255961418151855
    7. ' ' → logprob: -13.880961418151855
    8. ' have' → logprob: -14.380961418151855
    9. ' gcd' → logprob: -14.505961418151855
    10. ',' → logprob: -14.755961418151855

Token 294: ' cop' (ID: 8039)
  Prédit: ' cop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cop' → logprob: -0.20287127792835236
    2. 'cop' → logprob: -1.702871322631836
    3. ' ' → logprob: -6.952871322631836
    4. '1' → logprob: -8.952871322631836
    5. 'co' → logprob: -9.077871322631836
    6. 'c' → logprob: -9.202871322631836
    7. ' co' → logprob: -9.452871322631836
    8. ' relatively' → logprob: -10.202871322631836
    9. 'rel' → logprob: -11.827871322631836
    10. '
' → logprob: -12.577871322631836

Token 295: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.729906196298543e-06
    2. 'ime' → logprob: -11.625009536743164
    3. 'rim' → logprob: -14.375009536743164
    4. '```' → logprob: -16.375009536743164
    5. 'ri' → logprob: -17.250009536743164
    6. ' r' → logprob: -17.375009536743164
    7. 'rine' → logprob: -17.750009536743164
    8. '

' → logprob: -18.625009536743164
    9. 'р' → logprob: -18.750009536743164
    10. 'e' → logprob: -19.125009536743164

Token 296: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.00011117222311440855
    2. 'r' → logprob: -10.62511157989502
    3. '   ' → logprob: -10.75011157989502
    4. '```' → logprob: -10.87511157989502
    5. 'imes' → logprob: -12.00011157989502
    6. '

' → logprob: -12.25011157989502
    7. 'e' → logprob: -12.37511157989502
    8. '1' → logprob: -12.75011157989502
    9. 'me' → logprob: -12.75011157989502
    10. '
' → logprob: -13.00011157989502

Token 297: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014036919921636581
    2. ')"' → logprob: -4.389037132263184
    3. '"
' → logprob: -7.014037132263184
    4. '")' → logprob: -7.514037132263184
    5. ')' → logprob: -10.014037132263184
    6. '."' → logprob: -11.139037132263184
    7. ')"
' → logprob: -11.514037132263184
    8. '"
' → logprob: -12.389037132263184
    9. '"`' → logprob: -12.889037132263184
    10. '```' → logprob: -13.639037132263184

Token 298: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0355193093419075
    2. '       ' → logprob: -3.5355193614959717
    3. ' self' → logprob: -5.160519123077393
    4. '	self' → logprob: -12.53551959991455
    5. '   ' → logprob: -12.78551959991455
    6. 'def' → logprob: -13.16051959991455
    7. '
' → logprob: -13.41051959991455
    8. 'from' → logprob: -14.16051959991455
    9. 'import' → logprob: -14.16051959991455
    10. 'class' → logprob: -14.78551959991455

Token 300: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -9.162282367469743e-05
    2. '.' → logprob: -9.625091552734375
    3. ' .' → logprob: -11.000091552734375
    4. '._' → logprob: -12.125091552734375
    5. 'a' → logprob: -13.125091552734375
    6. '.ai' → logprob: -15.250091552734375
    7. '.s' → logprob: -16.000091552734375
    8. '.an' → logprob: -16.000091552734375
    9. '..' → logprob: -16.250091552734375
    10. '.m' → logprob: -16.500091552734375

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35022616386413574
    2. '=' → logprob: -1.2252261638641357
    3. ',' → logprob: -6.350226402282715
    4. '=a' → logprob: -11.350226402282715
    5. 'a' → logprob: -11.850226402282715
    6. ' ' → logprob: -12.725226402282715
    7. '<|end|>' → logprob: -12.725226402282715
    8. ')' → logprob: -12.725226402282715
    9. ' a' → logprob: -13.600226402282715
    10. ' =
' → logprob: -14.100226402282715

Token 302: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ' a' → logprob: -11.25001335144043
    3. '	a' → logprob: -19.50001335144043
    4. '_a' → logprob: -21.87501335144043
    5. '$a' → logprob: -22.87501335144043
    6. '(a' → logprob: -24.62501335144043
    7. 'а' → logprob: -24.87501335144043
    8. '#a' → logprob: -24.87501335144043
    9. ')a' → logprob: -25.00001335144043
    10. '>a' → logprob: -25.25001335144043

Token 303: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9337204098701477
    2. '
' → logprob: -1.058720350265503
    3. '       ' → logprob: -1.558720350265503
    4. ',' → logprob: -3.433720350265503
    5. ' self' → logprob: -4.683720588684082
    6. '<|end|>' → logprob: -6.308720588684082
    7. 'm' → logprob: -6.808720588684082
    8. '	self' → logprob: -7.183720588684082
    9. '        
' → logprob: -7.308720588684082
    10. '   ' → logprob: -7.558720588684082

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0100822448730469
    2. 'self' → logprob: -1.0100822448730469
    3. '
' → logprob: -1.6350822448730469
    4. 'm' → logprob: -3.260082244873047
    5. ' self' → logprob: -3.760082244873047
    6. ',' → logprob: -4.385082244873047
    7. 'def' → logprob: -7.385082244873047
    8. '   ' → logprob: -8.010082244873047
    9. '```' → logprob: -8.385082244873047
    10. '
' → logprob: -8.510082244873047

Token 305: ' self' (ID: 1051)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.226628895296017e-06
    2. ' m' → logprob: -11.875007629394531
    3. 'self' (adapté à ' self') → logprob: -16.37500762939453
    4. 'a' → logprob: -16.75000762939453
    5. '   ' → logprob: -16.87500762939453
    6. 'mod' → logprob: -18.12500762939453
    7. '       ' → logprob: -18.50000762939453
    8. '
' → logprob: -18.75000762939453
    9. '	m' → logprob: -18.75000762939453
    10. 'b' → logprob: -19.50000762939453

Token 306: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.013547585345804691
    2. '.' → logprob: -4.763547420501709
    3. 'm' → logprob: -5.513547420501709
    4. 'a' → logprob: -8.388547897338867
    5. ' .' → logprob: -8.888547897338867
    6. '
' → logprob: -9.013547897338867
    7. '.a' → logprob: -9.263547897338867
    8. ' m' → logprob: -9.513547897338867
    9. '_m' → logprob: -10.263547897338867
    10. ',' → logprob: -10.638547897338867

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519506812095642
    2. ' =' → logprob: -1.501950740814209
    3. ' ' → logprob: -12.25195026397705
    4. ' =
' → logprob: -12.37695026397705
    5. '<|end|>' → logprob: -12.37695026397705
    6. ')' → logprob: -12.50195026397705
    7. '=
' → logprob: -13.62695026397705
    8. 'm' → logprob: -13.75195026397705
    9. ',' → logprob: -14.25195026397705
    10. ' ' → logprob: -14.87695026397705

Token 308: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.012512121349573135
    2. ' m' → logprob: -4.38751220703125
    3. 'a' → logprob: -13.26251220703125
    4. '1' → logprob: -15.13751220703125
    5. ' ' → logprob: -15.88751220703125
    6. '	m' → logprob: -16.38751220703125
    7. '
' → logprob: -16.63751220703125
    8. ' a' → logprob: -17.01251220703125
    9. '   ' → logprob: -17.13751220703125
    10. 'self' → logprob: -17.63751220703125

Token 309: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015506336465477943
    2. '   ' → logprob: -4.640506267547607
    3. '    
' → logprob: -6.140506267547607
    4. '  
' → logprob: -6.890506267547607
    5. '<|end|>' → logprob: -7.015506267547607
    6. ' 
' → logprob: -7.515506267547607
    7. ' def' → logprob: -7.640506267547607
    8. 'def' → logprob: -8.515506744384766
    9. '   
' → logprob: -9.515506744384766
    10. '```' → logprob: -9.515506744384766

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016410160809755325
    2. '    
' → logprob: -5.0164103507995605
    3. 'def' → logprob: -5.2664103507995605
    4. '
' → logprob: -5.7664103507995605
    5. ' def' → logprob: -7.3914103507995605
    6. '       ' → logprob: -8.266409873962402
    7. ')' → logprob: -8.641409873962402
    8. '  
' → logprob: -9.141409873962402
    9. '        
' → logprob: -9.141409873962402
    10. '   
' → logprob: -11.141409873962402

Token 311: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.180258191714529e-06
    2. ' def' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.750008583068848
    4. 'd' → logprob: -15.500008583068848
    5. 'period' → logprob: -15.500008583068848
    6. '    
' → logprob: -16.37500762939453
    7. 'current' → logprob: -16.37500762939453
    8. 'cycle' → logprob: -18.12500762939453
    9. '	def' → logprob: -18.37500762939453
    10. '       ' → logprob: -18.50000762939453

Token 312: ' cycle' (ID: 15839)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5293259620666504
    2. 'find' → logprob: -0.9043259620666504
    3. 'cycle' → logprob: -5.52932596206665
    4. ' cycle' → logprob: -6.77932596206665
    5. 'length' → logprob: -8.029325485229492
    6. 'get' → logprob: -9.154325485229492
    7. ' length' → logprob: -9.154325485229492
    8. '_find' → logprob: -9.279325485229492
    9. ' get' → logprob: -9.404325485229492
    10. 'period' → logprob: -9.404325485229492

Token 313: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0007272057700902224
    2. '_' → logprob: -7.50072717666626
    3. '_size' → logprob: -9.500727653503418
    4. 'length' → logprob: -10.000727653503418
    5. '_len' → logprob: -10.125727653503418
    6. '(self' → logprob: -12.125727653503418
    7. '_l' → logprob: -12.375727653503418
    8. '_start' → logprob: -13.375727653503418
    9. '_period' → logprob: -14.625727653503418
    10. '_lengths' → logprob: -14.625727653503418

Token 314: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019404153572395444
    2. '(' → logprob: -6.2519402503967285
    3. ' (' → logprob: -11.501940727233887
    4. '   ' → logprob: -14.751940727233887
    5. '(s' → logprob: -14.751940727233887
    6. 'self' → logprob: -15.001940727233887
    7. '(
' → logprob: -15.251940727233887
    8. 's' → logprob: -16.50193977355957
    9. 'def' → logprob: -16.62693977355957
    10. ' ' → logprob: -17.12693977355957

Token 315: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23391588032245636
    2. '(self' → logprob: -2.3589158058166504
    3. '):
' → logprob: -2.4839158058166504
    4. 'self' → logprob: -3.8589158058166504
    5. ')' → logprob: -4.98391580581665
    6. ')(' → logprob: -6.48391580581665
    7. ' ):' → logprob: -7.73391580581665
    8. ',' → logprob: -8.358916282653809
    9. '   ' → logprob: -8.733916282653809
    10. '(' → logprob: -9.608916282653809

Token 316: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00019185843120794743
    2. '(' → logprob: -8.625191688537598
    3. 'self' → logprob: -11.625191688537598
    4. '       ' → logprob: -13.500191688537598
    5. '   ' → logprob: -14.000191688537598
    6. ' (' → logprob: -14.500191688537598
    7. 'def' → logprob: -15.625191688537598
    8. ' self' → logprob: -15.875191688537598
    9. ':' → logprob: -16.500192642211914
    10. '(
' → logprob: -17.000192642211914

Token 317: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014163863845169544
    2. ' int' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.764163970947266
    4. '(int' → logprob: -15.889163970947266
    5. ':int' → logprob: -16.514163970947266
    6. '[int' → logprob: -17.764163970947266
    7. ' ' → logprob: -18.014163970947266
    8. '	int' → logprob: -18.514163970947266
    9. '1' → logprob: -18.764163970947266
    10. '<int' → logprob: -19.264163970947266

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003210865193977952
    2. ':
' → logprob: -5.75321102142334
    3. '():' → logprob: -10.75321102142334
    4. '):' → logprob: -12.50321102142334
    5. '       ' → logprob: -12.62821102142334
    6. ':def' → logprob: -13.50321102142334
    7. '():
' → logprob: -14.25321102142334
    8. '):
' → logprob: -14.50321102142334
    9. '   ' → logprob: -14.75321102142334
    10. '(self' → logprob: -15.00321102142334

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033008549362421036
    2. 'n' → logprob: -3.658008575439453
    3. ' n' → logprob: -6.158008575439453
    4. ' k' → logprob: -6.533008575439453
    5. 'x' → logprob: -7.533008575439453
    6. 'k' → logprob: -7.533008575439453
    7. 'i' → logprob: -7.783008575439453
    8. ' current' → logprob: -8.158008575439453
    9. ' i' → logprob: -8.158008575439453
    10. '   ' → logprob: -8.533008575439453

Token 320: ' """
' (ID: 7037)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9099105000495911
    2. 'length' → logprob: -1.5349104404449463
    3. 'x' → logprob: -1.7849104404449463
    4. 'count' → logprob: -2.7849104404449463
    5. 'visited' → logprob: -3.1599104404449463
    6. 'value' → logprob: -3.6599104404449463
    7. 'order' → logprob: -4.284910678863525
    8. 'seen' → logprob: -4.534910678863525
    9. 'k' → logprob: -4.659910678863525
    10. 'val' → logprob: -4.784910678863525

Token 321: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9298566579818726
    2. 'length' → logprob: -1.6798566579818726
    3. 'result' → logprob: -2.179856777191162
    4. 'count' → logprob: -2.429856777191162
    5. 'current' → logprob: -2.429856777191162
    6. 'res' → logprob: -3.679856777191162
    7. 'seen' → logprob: -3.929856777191162
    8. 'visited' → logprob: -3.929856777191162
    9. 'n' → logprob: -4.429856777191162
    10. 'k' → logprob: -4.554856777191162

Token 322: ' Finds' (ID: 113426)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7389938831329346
    2. 'length' → logprob: -2.3639938831329346
    3. 'res' → logprob: -2.7389938831329346
    4. 'n' → logprob: -2.7389938831329346
    5. 'count' → logprob: -2.7389938831329346
    6. 'current' → logprob: -2.7389938831329346
    7. 'result' → logprob: -3.3639938831329346
    8. 'val' → logprob: -3.6139938831329346
    9. 'value' → logprob: -3.8639938831329346
    10. 'curr' → logprob: -4.3639936447143555

Token 323: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6633238196372986
    2. 'k' → logprob: -2.1633238792419434
    3. 't' → logprob: -2.1633238792419434
    4. 'x' → logprob: -3.1633238792419434
    5. 'the' → logprob: -3.1633238792419434
    6. '       ' → logprob: -3.2883238792419434
    7. 'order' → logprob: -3.5383238792419434
    8. ' order' → logprob: -3.7883238792419434
    9. ' k' → logprob: -4.163323879241943
    10. '   ' → logprob: -4.663323879241943

Token 324: ' smallest' (ID: 42173)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5418069362640381
    2. 'order' → logprob: -1.791806936264038
    3. 'x' → logprob: -1.916806936264038
    4. 'current' → logprob: -3.166806936264038
    5. 'k' → logprob: -4.291807174682617
    6. 'result' → logprob: -4.541807174682617
    7. 't' → logprob: -5.166807174682617
    8. ' order' → logprob: -5.291807174682617
    9. '   ' → logprob: -5.291807174682617
    10. ' length' → logprob: -5.666807174682617

Token 325: ' positive' (ID: 8841)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5306257009506226
    2. ' k' → logprob: -0.9056257009506226
    3. 'n' → logprob: -5.530625820159912
    4. ' n' → logprob: -5.780625820159912
    5. ' positive' → logprob: -8.155625343322754
    6. ' t' → logprob: -10.780625343322754
    7. '   ' → logprob: -10.780625343322754
    8. 't' → logprob: -11.155625343322754
    9. '```' → logprob: -11.155625343322754
    10. 'positive' → logprob: -11.530625343322754

Token 326: ' integer' (ID: 16336)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004596507176756859
    2. ' k' → logprob: -5.879596710205078
    3. 'n' → logprob: -6.629596710205078
    4. 'integer' → logprob: -8.129596710205078
    5. ' integer' → logprob: -8.754596710205078
    6. ' n' → logprob: -11.879596710205078
    7. 't' → logprob: -12.504596710205078
    8. 'i' → logprob: -13.629596710205078
    9. 'x' → logprob: -13.879596710205078
    10. 'int' → logprob: -14.004596710205078

Token 327: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38711315393447876
    2. ' k' → logprob: -1.137113094329834
    3. 'n' → logprob: -8.887113571166992
    4. ' n' → logprob: -9.262113571166992
    5. ' ' → logprob: -12.137113571166992
    6. '```' → logprob: -14.137113571166992
    7. '   ' → logprob: -14.512113571166992
    8. '`' → logprob: -14.637113571166992
    9. 'l' → logprob: -14.762113571166992
    10. ' `' → logprob: -14.762113571166992

Token 328: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.17414550483226776
    2. '<|end|>' → logprob: -2.424145460128784
    3. ' that' → logprob: -4.049145698547363
    4. ':' → logprob: -4.174145698547363
    5. ' for' → logprob: -4.174145698547363
    6. '<|end|>' → logprob: -5.174145698547363
    7. ' ' → logprob: -5.299145698547363
    8. '
' → logprob: -6.299145698547363
    9. '       ' → logprob: -6.549145698547363
    10. '=' → logprob: -6.549145698547363

Token 329: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.1490270346403122
    2. 'that' → logprob: -2.149027109146118
    3. '=' → logprob: -4.024026870727539
    4. '<|end|>' → logprob: -6.524026870727539
    5. '_that' → logprob: -7.524026870727539
    6. ' k' → logprob: -7.899026870727539
    7. 'That' → logprob: -8.274026870727539
    8. 's' → logprob: -8.524026870727539
    9. 'k' → logprob: -9.149026870727539
    10. '=k' → logprob: -9.274026870727539

Token 330: ' a' (ID: 261)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5097429752349854
    2. ' pow' → logprob: -1.2597429752349854
    3. ' (' → logprob: -3.2597429752349854
    4. '(pow' → logprob: -3.5097429752349854
    5. ' self' → logprob: -3.7597429752349854
    6. '(self' → logprob: -4.509742736816406
    7. 'self' → logprob: -4.509742736816406
    8. ' a' → logprob: -7.509742736816406
    9. '(a' → logprob: -7.884742736816406
    10. ' k' → logprob: -8.009742736816406

Token 331: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.17351432144641876
    2. 'k' → logprob: -2.1735143661499023
    3. ' k' → logprob: -3.5485143661499023
    4. ' **' → logprob: -5.048514366149902
    5. '^' → logprob: -5.548514366149902
    6. '```' → logprob: -5.798514366149902
    7. '*k' → logprob: -6.298514366149902
    8. '<|end|>' → logprob: -7.923514366149902
    9. 'pow' → logprob: -8.548514366149902
    10. '
' → logprob: -8.923514366149902

Token 332: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.981667537620524e-06
    2. ' k' → logprob: -13.250001907348633
    3. '```' → logprob: -16.125001907348633
    4. '
' → logprob: -17.000001907348633
    5. '{k' → logprob: -17.375001907348633
    6. '_k' → logprob: -17.875001907348633
    7. '(k' → logprob: -20.625001907348633
    8. 'kx' → logprob: -21.000001907348633
    9. '	k' → logprob: -21.125001907348633
    10. '[k' → logprob: -21.250001907348633

Token 333: ' �' (ID: 42308)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.001536166062578559
    2. '%' → logprob: -6.5015363693237305
    3. ' ==' → logprob: -11.00153636932373
    4. ' ' → logprob: -12.25153636932373
    5. ' %=' → logprob: -12.37653636932373
    6. ' %
' → logprob: -12.87653636932373
    7. ' \xe2\x89' → logprob: -13.62653636932373
    8. '%c' → logprob: -14.12653636932373
    9. '```' → logprob: -14.37653636932373
    10. '%n' → logprob: -14.62653636932373

Token 334: '�' (ID: 94)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5799908638000488
    2. ' %' → logprob: -0.8299908638000488
    3. ' ==' → logprob: -6.079990863800049
    4. '==' → logprob: -7.204990863800049
    5. '=' → logprob: -7.954990863800049
    6. ' ' → logprob: -8.45499038696289
    7. ' \xe2\x89' → logprob: -9.20499038696289
    8. ' %=' → logprob: -9.32999038696289
    9. ' ' → logprob: -9.95499038696289
    10. '%=' → logprob: -10.45499038696289

Token 335: ' ' (ID: 220)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4994867146015167
    2. '%' → logprob: -1.3744866847991943
    3. '=' → logprob: -2.3744866847991943
    4. ' \xe2\x89' → logprob: -3.8744866847991943
    5. '\xe2\x89' → logprob: -5.124486923217773
    6. '==' → logprob: -5.124486923217773
    7. '1' → logprob: -5.624486923217773
    8. ' ==' → logprob: -5.874486923217773
    9. ' =' → logprob: -6.249486923217773
    10. ' ' → logprob: -6.749486923217773

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6114938259124756
    2. ' ' → logprob: -1.1114938259124756
    3. '=' → logprob: -2.6114938259124756
    4. '%' → logprob: -3.2364938259124756
    5. ' %' → logprob: -4.611494064331055
    6. '==' → logprob: -6.236494064331055
    7. ' =' → logprob: -6.861494064331055
    8. ' k' → logprob: -6.986494064331055
    9. ' ==' → logprob: -7.986494064331055
    10. 'mod' → logprob: -8.486494064331055

Token 337: ' (' (ID: 350)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4352273643016815
    2. '%' → logprob: -1.060227394104004
    3. ' mod' → logprob: -5.935227394104004
    4. ' modulo' → logprob: -6.185227394104004
    5. ' ' → logprob: -7.060227394104004
    6. ' (' → logprob: -7.935227394104004
    7. ' ' → logprob: -8.185227394104004
    8. 'mod' → logprob: -9.060227394104004
    9. '(' → logprob: -9.685227394104004
    10. ' %=' → logprob: -10.810227394104004

Token 338: 'mod' (ID: 4847)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.14185930788516998
    2. '%' → logprob: -2.641859292984009
    3. ' mod' → logprob: -3.016859292984009
    4. ' ' → logprob: -5.766859531402588
    5. ')' → logprob: -6.141859531402588
    6. ' (' → logprob: -6.141859531402588
    7. ' ' → logprob: -6.141859531402588
    8. ' modulo' → logprob: -6.391859531402588
    9. 'mod' → logprob: -7.516859531402588
    10. ' %)' → logprob: -9.51685905456543

Token 339: ' m' (ID: 284)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.052070140838623
    2. ' self' → logprob: -1.427070140838623
    3. ' m' → logprob: -1.802070140838623
    4. 'self' → logprob: -2.302070140838623
    5. 'm' → logprob: -2.927070140838623
    6. ' )' → logprob: -2.927070140838623
    7. ' ' → logprob: -3.427070140838623
    8. ' ' → logprob: -5.552070140838623
    9. '<|end|>' → logprob: -6.927070140838623
    10. '(self' → logprob: -8.552070617675781

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000642499653622508
    2. ' )' → logprob: -7.7506422996521
    3. ')
' → logprob: -9.250642776489258
    4. '=' → logprob: -10.500642776489258
    5. '
' → logprob: -10.875642776489258
    6. ' ' → logprob: -11.625642776489258
    7. ').' → logprob: -11.750642776489258
    8. '       ' → logprob: -11.750642776489258
    9. '==' → logprob: -12.250642776489258
    10. ')=' → logprob: -12.500642776489258

Token 341: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7050737738609314
    2. ')' → logprob: -1.0800738334655762
    3. ' ==' → logprob: -2.580073833465576
    4. '==' → logprob: -2.705073833465576
    5. ' =' → logprob: -4.205073833465576
    6. ' ' → logprob: -5.955073833465576
    7. ' )' → logprob: -6.330073833465576
    8. ' ' → logprob: -7.330073833465576
    9. ',' → logprob: -7.455073833465576
    10. ' \xe2\x89' → logprob: -7.455073833465576

Token 342: ' This' (ID: 1328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6252273321151733
    2. '       ' → logprob: -1.8752273321151733
    3. '==' → logprob: -2.250227451324463
    4. '```' → logprob: -2.375227451324463
    5. ')' → logprob: -2.625227451324463
    6. ' return' → logprob: -2.750227451324463
    7. '
' → logprob: -2.875227451324463
    8. '**' → logprob: -2.875227451324463
    9. '=' → logprob: -3.000227451324463
    10. 'return' → logprob: -3.125227451324463

Token 343: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.28217267990112305
    2. ' def' → logprob: -2.282172679901123
    3. ' can' → logprob: -3.657172679901123
    4. ' code' → logprob: -3.907172679901123
    5. ' method' → logprob: -4.157172679901123
    6. '
' → logprob: -4.282172679901123
    7. ' return' → logprob: -4.657172679901123
    8. ' represents' → logprob: -5.157172679901123
    9. ' returns' → logprob: -5.282172679901123
    10. ')' → logprob: -5.282172679901123

Token 344: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10833714157342911
    2. ' called' → logprob: -2.858337163925171
    3. '       ' → logprob: -3.858337163925171
    4. ' a' → logprob: -4.608336925506592
    5. 'the' → logprob: -5.233336925506592
    6. ' known' → logprob: -5.608336925506592
    7. ' an' → logprob: -7.108336925506592
    8. '   ' → logprob: -7.483336925506592
    9. '```' → logprob: -7.983336925506592
    10. '
' → logprob: -8.10833740234375

Token 345: ' multiplic' (ID: 67929)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.6656509637832642
    2. ' next' → logprob: -1.5406509637832642
    3. ' code' → logprob: -2.5406508445739746
    4. '\n' → logprob: -3.1656508445739746
    5. ' multiplic' → logprob: -3.5406508445739746
    6. 'n' → logprob: -4.540650844573975
    7. ' smallest' → logprob: -4.540650844573975
    8. ' length' → logprob: -4.790650844573975
    9. ' def' → logprob: -4.915650844573975
    10. '\' → logprob: -4.915650844573975

Token 346: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.00031162876985035837
    2. 'ic' → logprob: -9.875311851501465
    3. '  ' → logprob: -10.000311851501465
    4. 'lic' → logprob: -10.250311851501465
    5. 'ive' → logprob: -10.625311851501465
    6. 'ativer' → logprob: -11.000311851501465
    7. 'r' → logprob: -11.375311851501465
    8. '   ' → logprob: -11.500311851501465
    9. 'order' → logprob: -11.500311851501465
    10. 'itive' → logprob: -11.500311851501465

Token 347: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.02103390544652939
    2. 'order' → logprob: -3.896034002304077
    3. '_order' → logprob: -7.771033763885498
    4. ' ' → logprob: -10.646034240722656
    5. ' group' → logprob: -11.396034240722656
    6. '	order' → logprob: -11.396034240722656
    7. ' ' → logprob: -12.646034240722656
    8. '(order' → logprob: -13.021034240722656
    9. ')' → logprob: -13.146034240722656
    10. '
' → logprob: -13.146034240722656

Token 348: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.190760850906372
    2. ',' → logprob: -1.565760850906372
    3. '(' → logprob: -2.065760850906372
    4. ' of' → logprob: -2.815760850906372
    5. ':' → logprob: -3.065760850906372
    6. '=' → logprob: -3.065760850906372
    7. '   ' → logprob: -3.440760850906372
    8. ')' → logprob: -3.565760850906372
    9. '       ' → logprob: -4.065760612487793
    10. '_' → logprob: -4.190760612487793

Token 349: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16182616353034973
    2. 'a' → logprob: -2.1618261337280273
    3. ' self' → logprob: -3.4118261337280273
    4. ' a' → logprob: -6.661826133728027
    5. '(self' → logprob: -11.161826133728027
    6. '   ' → logprob: -12.036826133728027
    7. ' ' → logprob: -12.911826133728027
    8. '	self' → logprob: -13.036826133728027
    9. ')' → logprob: -13.161826133728027
    10. '```' → logprob: -13.661826133728027

Token 350: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -1.0282570123672485
    2. '%' → logprob: -1.5282570123672485
    3. ' %' → logprob: -2.028256893157959
    4. ',' → logprob: -2.153256893157959
    5. ' mod' → logprob: -2.778256893157959
    6. ')' → logprob: -2.903256893157959
    7. 'mod' → logprob: -3.653256893157959
    8. '       ' → logprob: -4.403256893157959
    9. ' ' → logprob: -5.278256893157959
    10. '   ' → logprob: -5.778256893157959

Token 351: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.36861276626586914
    2. 'm' → logprob: -1.2436127662658691
    3. ' self' → logprob: -4.118612766265869
    4. 'self' → logprob: -5.743612766265869
    5. ' ' → logprob: -8.743612289428711
    6. '`' → logprob: -9.118612289428711
    7. ' ' → logprob: -9.743612289428711
    8. ''' → logprob: -10.493612289428711
    9. '"' → logprob: -10.493612289428711
    10. ' `' → logprob: -10.868612289428711

Token 352: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10795251280069351
    2. ',' → logprob: -3.60795259475708
    3. ')' → logprob: -3.85795259475708
    4. '.' → logprob: -4.23295259475708
    5. ':
' → logprob: -4.35795259475708
    6. '=' → logprob: -5.60795259475708
    7. '**' → logprob: -5.98295259475708
    8. '^' → logprob: -6.10795259475708
    9. '):' → logprob: -6.10795259475708
    10. ' ' → logprob: -6.23295259475708

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25362974405288696
    2. ':' → logprob: -1.6286296844482422
    3. '
' → logprob: -4.628629684448242
    4. ':
' → logprob: -5.628629684448242
    5. '):' → logprob: -6.128629684448242
    6. ',' → logprob: -6.253629684448242
    7. '   ' → logprob: -6.253629684448242
    8. '=' → logprob: -6.378629684448242
    9. ')' → logprob: -6.378629684448242
    10. '):
' → logprob: -7.503629684448242

Token 354: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33939144015312195
    2. ':' → logprob: -2.2143914699554443
    3. ')' → logprob: -2.5893914699554443
    4. '   ' → logprob: -3.7143914699554443
    5. '
' → logprob: -4.214391231536865
    6. '\n' → logprob: -4.339391231536865
    7. '=' → logprob: -4.464391231536865
    8. ':
' → logprob: -4.964391231536865
    9. '"' → logprob: -5.339391231536865
    10. '\' → logprob: -5.589391231536865

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01183143351227045
    2. 'n' → logprob: -4.886831283569336
    3. '=' → logprob: -6.386831283569336
    4. '   ' → logprob: -7.011831283569336
    5. 'i' → logprob: -8.511831283569336
    6. ',' → logprob: -8.761831283569336
    7. 'x' → logprob: -9.011831283569336
    8. ' =' → logprob: -9.136831283569336
    9. '        
' → logprob: -9.261831283569336
    10. 'a' → logprob: -9.386831283569336

Token 356: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8827235698699951
    2. 'current' → logprob: -1.0077235698699951
    3. 'result' → logprob: -2.507723569869995
    4. 'value' → logprob: -2.507723569869995
    5. 'x' → logprob: -4.007723808288574
    6. 'order' → logprob: -4.507723808288574
    7. 'power' → logprob: -5.382723808288574
    8. 'pow' → logprob: -5.382723808288574
    9. 'val' → logprob: -5.507723808288574
    10. 'if' → logprob: -5.632723808288574

Token 357: ' Since' (ID: 12265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2792472839355469
    2. 'current' → logprob: -1.6542472839355469
    3. 'order' → logprob: -4.154247283935547
    4. 'value' → logprob: -4.404247283935547
    5. 'result' → logprob: -4.529247283935547
    6. 'x' → logprob: -5.529247283935547
    7. ' current' → logprob: -6.279247283935547
    8. 'for' → logprob: -6.404247283935547
    9. 'val' → logprob: -7.279247283935547
    10. ' k' → logprob: -7.404247283935547

Token 358: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.284212201833725
    2. 'pow' → logprob: -2.034212112426758
    3. ' ' → logprob: -2.534212112426758
    4. 'k' → logprob: -4.284212112426758
    5. 'a' → logprob: -5.159212112426758
    6. 'x' → logprob: -5.659212112426758
    7. ' k' → logprob: -5.659212112426758
    8. ' pow' → logprob: -5.909212112426758
    9. ' a' → logprob: -6.534212112426758
    10. 'self' → logprob: -6.784212112426758

Token 359: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.495473027229309
    2. '=' → logprob: -1.745473027229309
    3. '       ' → logprob: -1.995473027229309
    4. 'pow' → logprob: -2.3704729080200195
    5. '_pow' → logprob: -2.6204729080200195
    6. ':' → logprob: -3.6204729080200195
    7. '   ' → logprob: -3.7454729080200195
    8. ',' → logprob: -3.7454729080200195
    9. '_mod' → logprob: -3.7454729080200195
    10. '%' → logprob: -3.9954729080200195

Token 360: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3879677355289459
    2. ' m' → logprob: -1.1379677057266235
    3. ' self' → logprob: -7.512967586517334
    4. 'self' → logprob: -7.512967586517334
    5. ' ' → logprob: -13.637968063354492
    6. '1' → logprob: -14.887968063354492
    7. ' ' → logprob: -14.887968063354492
    8. '2' → logprob: -15.262968063354492
    9. 'mod' → logprob: -15.262968063354492
    10. '```' → logprob: -15.387968063354492

Token 361: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.40567919611930847
    2. 'are' → logprob: -1.1556792259216309
    3. '=' → logprob: -4.155679225921631
    4. ' have' → logprob: -7.280679225921631
    5. ' =' → logprob: -7.780679225921631
    6. '       ' → logprob: -8.155678749084473
    7. '
' → logprob: -8.155678749084473
    8. ',' → logprob: -8.530678749084473
    9. ')' → logprob: -8.780678749084473
    10. 'have' → logprob: -9.030678749084473

Token 362: ' cop' (ID: 8039)
  Prédit: 'cop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cop' → logprob: -0.6044174432754517
    2. ' cop' → logprob: -0.9794174432754517
    3. '1' → logprob: -2.729417324066162
    4. 'g' → logprob: -5.229417324066162
    5. ' ' → logprob: -5.354417324066162
    6. ' gcd' → logprob: -7.354417324066162
    7. '   ' → logprob: -7.479417324066162
    8. 'c' → logprob: -7.604417324066162
    9. '       ' → logprob: -9.10441780090332
    10. ' relatively' → logprob: -9.10441780090332

Token 363: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.037062447518110275
    2. 'os' → logprob: -4.412062644958496
    3. '1' → logprob: -5.162062644958496
    4. 'm' → logprob: -5.287062644958496
    5. 't' → logprob: -5.912062644958496
    6. 'ut' → logprob: -6.662062644958496
    7. 'y' → logprob: -7.162062644958496
    8. 'at' → logprob: -7.287062644958496
    9. 'mod' → logprob: -7.412062644958496
    10. 'ot' → logprob: -7.537062644958496

Token 364: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.013666229322552681
    2. '   ' → logprob: -5.263666152954102
    3. '```' → logprob: -6.388666152954102
    4. 'e' → logprob: -6.763666152954102
    5. '       ' → logprob: -7.013666152954102
    6. 'a' → logprob: -8.076166152954102
    7. ' ' → logprob: -8.326166152954102
    8. '    ' → logprob: -8.326166152954102
    9. '      ' → logprob: -8.326166152954102
    10. '           ' → logprob: -8.513666152954102

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018433310091495514
    2. '       ' → logprob: -4.268433094024658
    3. ',
' → logprob: -5.643433094024658
    4. ':' → logprob: -7.643433094024658
    5. ':
' → logprob: -9.143433570861816
    6. ' ,' → logprob: -10.643433570861816
    7. '
' → logprob: -10.893433570861816
    8. '   ' → logprob: -11.018433570861816
    9. '=' → logprob: -11.518433570861816
    10. ',\
' → logprob: -11.768433570861816

Token 366: ' multiplic' (ID: 67929)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.213151216506958
    2. 'k' → logprob: -1.463151216506958
    3. ' k' → logprob: -1.963151216506958
    4. 'r' → logprob: -2.713151216506958
    5. ' current' → logprob: -2.838151216506958
    6. ' r' → logprob: -3.713151216506958
    7. ' result' → logprob: -3.838151216506958
    8. 'current' → logprob: -3.838151216506958
    9. 'phi' → logprob: -4.088150978088379
    10. 'result' → logprob: -4.088150978088379

Token 367: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.11616318672895432
    2. '   ' → logprob: -2.9911632537841797
    3. '       ' → logprob: -3.9911632537841797
    4. 'e' → logprob: -5.11616325378418
    5. '  ' → logprob: -5.11616325378418
    6. 'ic' → logprob: -5.61616325378418
    7. ' =' → logprob: -5.74116325378418
    8. 'r' → logprob: -5.86616325378418
    9. 'ativity' → logprob: -5.86616325378418
    10. ' ' → logprob: -6.61616325378418

Token 368: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.27253594994544983
    2. ' order' → logprob: -1.5225359201431274
    3. '_order' → logprob: -3.897536039352417
    4. 'def' → logprob: -10.147536277770996
    5. '	order' → logprob: -10.397536277770996
    6. '   ' → logprob: -11.647536277770996
    7. ' ' → logprob: -11.772536277770996
    8. 'inverse' → logprob: -13.022536277770996
    9. 'orders' → logprob: -13.147536277770996
    10. '_inverse' → logprob: -13.147536277770996

Token 369: ' exists' (ID: 13031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3507585823535919
    2. '=' → logprob: -1.3507585525512695
    3. '       ' → logprob: -3.4757585525512695
    4. 'def' → logprob: -6.1007585525512695
    5. ' is' → logprob: -6.2257585525512695
    6. ':' → logprob: -7.8507585525512695
    7. ' def' → logprob: -7.8507585525512695
    8. ' can' → logprob: -9.10075855255127
    9. ',' → logprob: -9.22575855255127
    10. '   ' → logprob: -9.35075855255127

Token 370: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004144407343119383
    2. 'n' → logprob: -6.754144191741943
    3. ',' → logprob: -6.879144191741943
    4. '
' → logprob: -7.879144191741943
    5. 'def' → logprob: -7.879144191741943
    6. 'k' → logprob: -8.129144668579102
    7. '=' → logprob: -8.254144668579102
    8. '        
' → logprob: -8.754144668579102
    9. '   ' → logprob: -8.879144668579102
    10. ':' → logprob: -9.754144668579102

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002058307873085141
    2. 'k' → logprob: -7.002058506011963
    3. 'n' → logprob: -7.377058506011963
    4. 'i' → logprob: -9.127058029174805
    5. '   ' → logprob: -9.502058029174805
    6. ' k' → logprob: -9.502058029174805
    7. '        
' → logprob: -9.752058029174805
    8. 'x' → logprob: -10.377058029174805
    9. '
' → logprob: -10.877058029174805
    10. 'a' → logprob: -10.877058029174805

Token 372: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5158026814460754
    2. 'result' → logprob: -1.7658026218414307
    3. '       ' → logprob: -1.8908026218414307
    4. 'current' → logprob: -3.2658026218414307
    5. 'x' → logprob: -4.01580286026001
    6. 'order' → logprob: -4.76580286026001
    7. 'value' → logprob: -4.89080286026001
    8. 'res' → logprob: -6.26580286026001
    9. ' result' → logprob: -6.76580286026001
    10. ' k' → logprob: -6.76580286026001

Token 373: ' We' (ID: 1416)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.840314507484436
    2. 'current' → logprob: -1.090314507484436
    3. 'result' → logprob: -1.840314507484436
    4. 'value' → logprob: -3.7153143882751465
    5. 'order' → logprob: -4.0903143882751465
    6. 'x' → logprob: -4.5903143882751465
    7. 'res' → logprob: -5.2153143882751465
    8. 'def' → logprob: -5.4653143882751465
    9. '       ' → logprob: -5.7153143882751465
    10. 'val' → logprob: -6.0903143882751465

Token 374: ' can' (ID: 665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5306335091590881
    2. 'n' → logprob: -2.4056334495544434
    3. 'def' → logprob: -2.5306334495544434
    4. ' i' → logprob: -3.1556334495544434
    5. 'i' → logprob: -3.1556334495544434
    6. '   ' → logprob: -3.9056334495544434
    7. ' =' → logprob: -4.030633449554443
    8. ' def' → logprob: -4.155633449554443
    9. ' n' → logprob: -4.280633449554443
    10. '=' → logprob: -4.280633449554443

Token 375: ' use' (ID: 1199)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5605477690696716
    2. 'def' → logprob: -2.0605478286743164
    3. ' k' → logprob: -2.4355478286743164
    4. 'result' → logprob: -3.1855478286743164
    5. ' def' → logprob: -3.4355478286743164
    6. 'n' → logprob: -3.6855478286743164
    7. 'count' → logprob: -3.6855478286743164
    8. 'return' → logprob: -4.435547828674316
    9. 'start' → logprob: -4.685547828674316
    10. 'res' → logprob: -4.810547828674316

Token 376: ' a' (ID: 261)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8761816024780273
    2. 'order' → logprob: -1.1261816024780273
    3. '1' → logprob: -2.3761816024780273
    4. 'k' → logprob: -2.5011816024780273
    5. 'result' → logprob: -4.126181602478027
    6. 'current' → logprob: -4.251181602478027
    7. ' order' → logprob: -4.626181602478027
    8. 'def' → logprob: -4.751181602478027
    9. 'multip' → logprob: -5.126181602478027
    10. ' pow' → logprob: -5.251181602478027

Token 377: ' method' (ID: 2595)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6604917049407959
    2. 'for' → logprob: -1.660491704940796
    3. 'def' → logprob: -2.285491704940796
    4. 'k' → logprob: -2.410491704940796
    5. ' def' → logprob: -3.160491704940796
    6. ' k' → logprob: -3.910491704940796
    7. 'n' → logprob: -5.285491943359375
    8. 'pow' → logprob: -5.535491943359375
    9. ' current' → logprob: -5.660491943359375
    10. ' result' → logprob: -5.660491943359375

Token 378: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26830047369003296
    2. '       ' → logprob: -1.7683005332946777
    3. ' =' → logprob: -3.2683005332946777
    4. 'def' → logprob: -4.768300533294678
    5. ':' → logprob: -5.018300533294678
    6. ' to' → logprob: -6.143300533294678
    7. '   ' → logprob: -6.268300533294678
    8. ' for' → logprob: -6.393300533294678
    9. ' of' → logprob: -7.268300533294678
    10. '        
' → logprob: -7.393300533294678

Token 379: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.20183253288269043
    2. ' find' → logprob: -1.9518325328826904
    3. 'def' → logprob: -3.9518325328826904
    4. 'compute' → logprob: -4.8268327713012695
    5. ' def' → logprob: -5.4518327713012695
    6. 'pow' → logprob: -6.4518327713012695
    7. ' compute' → logprob: -6.7018327713012695
    8. 'k' → logprob: -6.8268327713012695
    9. 'calculate' → logprob: -7.2018327713012695
    10. '```' → logprob: -7.2018327713012695

Token 380: ' multiplic' (ID: 67929)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.41435372829437256
    2. '1' → logprob: -1.1643537282943726
    3. ' k' → logprob: -3.914353847503662
    4. 'for' → logprob: -6.289353847503662
    5. 'the' → logprob: -6.664353847503662
    6. ' the' → logprob: -6.789353847503662
    7. ' ' → logprob: -7.164353847503662
    8. 'pow' → logprob: -7.414353847503662
    9. 'order' → logprob: -7.789353847503662
    10. ' for' → logprob: -8.414353370666504

Token 381: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.0006768120219931006
    2. 'ate' → logprob: -8.000677108764648
    3. '
' → logprob: -9.250677108764648
    4. 'e' → logprob: -9.500677108764648
    5. 'at' → logprob: -10.625677108764648
    6. 'a' → logprob: -10.875677108764648
    7. ' at' → logprob: -11.375677108764648
    8. '   ' → logprob: -11.750677108764648
    9. '```' → logprob: -12.000677108764648
    10. '  ' → logprob: -12.000677108764648

Token 382: ' order' (ID: 2569)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.20905160903930664
    2. 'order' → logprob: -2.2090516090393066
    3. ' order' → logprob: -2.7090516090393066
    4. '_' → logprob: -4.959051609039307
    5. '   ' → logprob: -6.334051609039307
    6. '_orders' → logprob: -7.209051609039307
    7. 'def' → logprob: -7.709051609039307
    8. ' ' → logprob: -8.084051132202148
    9. ' _' → logprob: -8.209051132202148
    10. '       ' → logprob: -8.459051132202148

Token 383: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3159424662590027
    2. '=' → logprob: -1.9409425258636475
    3. ':' → logprob: -2.5659425258636475
    4. ' =' → logprob: -4.190942287445068
    5. ',' → logprob: -4.440942287445068
    6. '   ' → logprob: -4.815942287445068
    7. '(' → logprob: -5.815942287445068
    8. '        
' → logprob: -5.940942287445068
    9. ' ' → logprob: -6.315942287445068
    10. ':
' → logprob: -6.565942287445068

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024965232238173485
    2. ' k' → logprob: -4.399965286254883
    3. 'k' → logprob: -5.024965286254883
    4. 'n' → logprob: -5.899965286254883
    5. ' for' → logprob: -7.274965286254883
    6. 'pow' → logprob: -7.399965286254883
    7. 'def' → logprob: -8.274965286254883
    8. '   ' → logprob: -8.524965286254883
    9. 'i' → logprob: -8.899965286254883
    10. 'x' → logprob: -8.899965286254883

Token 385: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4648260176181793
    2. ' k' → logprob: -2.2148261070251465
    3. '       ' → logprob: -2.2148261070251465
    4. 'result' → logprob: -3.3398261070251465
    5. 'current' → logprob: -3.7148261070251465
    6. ' current' → logprob: -3.7148261070251465
    7. ' result' → logprob: -4.0898261070251465
    8. 'order' → logprob: -4.4648261070251465
    9. ' for' → logprob: -4.5898261070251465
    10. 'res' → logprob: -5.2148261070251465

Token 386: ' Order' (ID: 10735)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2584470808506012
    2. 'current' → logprob: -1.8834470510482788
    3. 'result' → logprob: -3.8834471702575684
    4. 'order' → logprob: -4.008447170257568
    5. 'for' → logprob: -4.508447170257568
    6. 'value' → logprob: -4.758447170257568
    7. ' current' → logprob: -5.758447170257568
    8. ' k' → logprob: -6.008447170257568
    9. '   ' → logprob: -6.133447170257568
    10. 'x' → logprob: -6.258447170257568

Token 387: ' divides' (ID: 144028)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5244036316871643
    2. '=' → logprob: -0.8994036316871643
    3. '       ' → logprob: -7.8994035720825195
    4. '   ' → logprob: -8.02440357208252
    5. 's' → logprob: -9.02440357208252
    6. '_' → logprob: -9.14940357208252
    7. '(' → logprob: -9.27440357208252
    8. ',' → logprob: -9.64940357208252
    9. ' ' → logprob: -10.27440357208252
    10. 'def' → logprob: -10.27440357208252

Token 388: ' Euler' (ID: 167577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05165831744670868
    2. ' self' → logprob: -3.0516583919525146
    3. '       ' → logprob: -6.6766581535339355
    4. '(self' → logprob: -6.6766581535339355
    5. '=self' → logprob: -8.801658630371094
    6. ' (' → logprob: -9.926658630371094
    7. ' =' → logprob: -9.926658630371094
    8. 'm' → logprob: -10.051658630371094
    9. 'n' → logprob: -10.051658630371094
    10. 's' → logprob: -10.426658630371094

Token 389: ''s' (ID: 885)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.8863176107406616
    2. '_phi' → logprob: -1.0113176107406616
    3. ''s' → logprob: -1.8863176107406616
    4. '(self' → logprob: -4.386317729949951
    5. '(' → logprob: -4.636317729949951
    6. '(phi' → logprob: -4.761317729949951
    7. '       ' → logprob: -5.136317729949951
    8. 'tot' → logprob: -5.136317729949951
    9. 'Phi' → logprob: -5.261317729949951
    10. ' phi' → logprob: -5.386317729949951

Token 390: ' tot' (ID: 2417)
  Prédit: ' tot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tot' → logprob: -0.5469473004341125
    2. 'phi' → logprob: -1.0469472408294678
    3. 'tot' → logprob: -2.9219472408294678
    4. ' phi' → logprob: -4.421947479248047
    5. '_phi' → logprob: -6.296947479248047
    6. '   ' → logprob: -7.296947479248047
    7. '\xcf' → logprob: -7.546947479248047
    8. '       ' → logprob: -7.546947479248047
    9. 'Phi' → logprob: -7.796947479248047
    10. '_tot' → logprob: -9.296947479248047

Token 391: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0011197380954399705
    2. 'phi' → logprob: -7.501119613647461
    3. 'ent' → logprob: -8.376119613647461
    4. '_phi' → logprob: -9.001119613647461
    5. 'function' → logprob: -9.876119613647461
    6. 'def' → logprob: -10.126119613647461
    7. 'et' → logprob: -10.376119613647461
    8. '(' → logprob: -11.376119613647461
    9. ' phi' → logprob: -11.376119613647461
    10. '   ' → logprob: -11.876119613647461

Token 392: ' function' (ID: 1114)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2761383652687073
    2. '(' → logprob: -3.1511383056640625
    3. 'phi' → logprob: -3.1511383056640625
    4. 'def' → logprob: -3.2761383056640625
    5. '<|end|>' → logprob: -4.0261383056640625
    6. '_phi' → logprob: -4.2761383056640625
    7. ' (' → logprob: -4.5261383056640625
    8. '(n' → logprob: -4.5261383056640625
    9. '(phi' → logprob: -4.5261383056640625
    10. '()' → logprob: -4.6511383056640625

Token 393: ' φ' (ID: 16290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.755449116230011
    2. '(' → logprob: -1.5054490566253662
    3. '()' → logprob: -2.880449056625366
    4. '(self' → logprob: -3.130449056625366
    5. '<|end|>' → logprob: -3.130449056625366
    6. ')' → logprob: -3.255449056625366
    7. ',' → logprob: -3.755449056625366
    8. 'def' → logprob: -3.755449056625366
    9. '.' → logprob: -4.130449295043945
    10. 'import' → logprob: -4.380449295043945

Token 394: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.430301696062088
    2. '(m' → logprob: -1.4303016662597656
    3. '(
' → logprob: -2.8053016662597656
    4. '(self' → logprob: -3.0553016662597656
    5. '       ' → logprob: -7.180301666259766
    6. 'm' → logprob: -7.430301666259766
    7. ' (' → logprob: -8.180301666259766
    8. 'self' → logprob: -8.430301666259766
    9. ',' → logprob: -8.680301666259766
    10. '(

' → logprob: -9.055301666259766

Token 395: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019343988969922066
    2. ')
' → logprob: -4.019343852996826
    3. '())' → logprob: -7.644343852996826
    4. '       ' → logprob: -8.394344329833984
    5. '()' → logprob: -8.644344329833984
    6. 'def' → logprob: -9.019344329833984
    7. ').' → logprob: -10.019344329833984
    8. '())
' → logprob: -10.144344329833984
    9. ')

' → logprob: -10.269344329833984
    10. ')`' → logprob: -11.519344329833984

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009501535445451736
    2. '        ' → logprob: -6.3845014572143555
    3. '        
' → logprob: -6.3845014572143555
    4. '<|end|>' → logprob: -6.3845014572143555
    5. ',' → logprob: -6.8845014572143555
    6. 'from' → logprob: -7.2595014572143555
    7. 'import' → logprob: -7.2595014572143555
    8. '.' → logprob: -8.509501457214355
    9. 'def' → logprob: -8.509501457214355
    10. '      ' → logprob: -8.634501457214355

Token 397: ' phi' (ID: 40391)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020821787416934967
    2. '        
' → logprob: -4.895821571350098
    3. 'from' → logprob: -5.645821571350098
    4. 'import' → logprob: -6.145821571350098
    5. ':' → logprob: -6.520821571350098
    6. ',' → logprob: -6.520821571350098
    7. 'n' → logprob: -7.145821571350098
    8. 'def' → logprob: -7.270821571350098
    9. '   ' → logprob: -7.895821571350098
    10. 'return' → logprob: -8.145821571350098

Token 398: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05611129850149155
    2. '=' → logprob: -3.0561113357543945
    3. '_m' → logprob: -5.6811113357543945
    4. 'm' → logprob: -6.6811113357543945
    5. '(m' → logprob: -7.1811113357543945
    6. '(' → logprob: -7.3061113357543945
    7. '_value' → logprob: -7.4311113357543945
    8. '_val' → logprob: -8.306111335754395
    9. '_values' → logprob: -8.681111335754395
    10. '_' → logprob: -9.306111335754395

Token 399: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02120339125394821
    2. ' self' → logprob: -3.8962032794952393
    3. '(self' → logprob: -8.02120304107666
    4. 'reduce' → logprob: -8.64620304107666
    5. '1' → logprob: -9.77120304107666
    6. '       ' → logprob: -11.02120304107666
    7. '
' → logprob: -11.39620304107666
    8. '0' → logprob: -11.52120304107666
    9. 'mod' → logprob: -11.89620304107666
    10. 'm' → logprob: -12.02120304107666

Token 400: '._' (ID: 2697)
  Prédit: '.m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.013647767715156078
    2. '._' → logprob: -5.638647556304932
    3. 'phi' → logprob: -5.888647556304932
    4. 'm' → logprob: -6.138647556304932
    5. '_m' → logprob: -6.138647556304932
    6. '_phi' → logprob: -6.513647556304932
    7. 'def' → logprob: -8.01364803314209
    8. 'a' → logprob: -8.38864803314209
    9. '.ph' → logprob: -9.01364803314209
    10. '_mod' → logprob: -9.51364803314209

Token 401: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.182051420211792
    2. 'tot' → logprob: -2.557051420211792
    3. 'phi' → logprob: -3.182051420211792
    4. 'compute' → logprob: -3.932051420211792
    5. '_e' → logprob: -4.182051658630371
    6. '_phi' → logprob: -4.932051658630371
    7. '_tot' → logprob: -5.682051658630371
    8. '_compute' → logprob: -7.307051658630371
    9. 'calculate' → logprob: -7.932051658630371
    10. '_m' → logprob: -8.307051658630371

Token 402: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0018694984028115869
    2. 'iler' → logprob: -6.7518696784973145
    3. 'm' → logprob: -8.876869201660156
    4. 'phi' → logprob: -9.751869201660156
    5. 'l' → logprob: -9.876869201660156
    6. 'xp' → logprob: -10.001869201660156
    7. 'ulers' → logprob: -10.001869201660156
    8. '(m' → logprob: -10.126869201660156
    9. 'ler' → logprob: -10.251869201660156
    10. 'ller' → logprob: -10.376869201660156

Token 403: '_tot' (ID: 87201)
  Prédit: '_phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_phi' → logprob: -0.23693940043449402
    2. 'phi' → logprob: -1.6119394302368164
    3. '(phi' → logprob: -5.111939430236816
    4. 'Phi' → logprob: -5.986939430236816
    5. '_tot' → logprob: -6.611939430236816
    6. '(m' → logprob: -7.111939430236816
    7. ' phi' → logprob: -7.986939430236816
    8. 'tot' → logprob: -8.611939430236816
    9. '(self' → logprob: -9.236939430236816
    10. 'φ' → logprob: -10.111939430236816

Token 404: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.01806541718542576
    2. 'ent' → logprob: -4.393065452575684
    3. '```' → logprob: -6.518065452575684
    4. '   ' → logprob: -7.018065452575684
    5. 't' → logprob: -7.143065452575684
    6. '#' → logprob: -8.143065452575684
    7. '_phi' → logprob: -8.518065452575684
    8. '(' → logprob: -8.768065452575684
    9. '_ent' → logprob: -8.893065452575684
    10. '       ' → logprob: -9.018065452575684

Token 405: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018082220340147614
    2. '()' → logprob: -6.626808166503906
    3. '(m' → logprob: -7.751808166503906
    4. '(' → logprob: -10.501808166503906
    5. 'self' → logprob: -10.876808166503906
    6. '(
' → logprob: -12.876808166503906
    7. '()
' → logprob: -13.126808166503906
    8. ' self' → logprob: -15.001808166503906
    9. '=self' → logprob: -15.876808166503906
    10. '()

' → logprob: -15.876808166503906

Token 406: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.12709219753742218
    2. 'm' → logprob: -2.127092123031616
    3. '.' → logprob: -9.377092361450195
    4. ')' → logprob: -10.752092361450195
    5. ').' → logprob: -10.752092361450195
    6. ')m' → logprob: -11.627092361450195
    7. ' .' → logprob: -12.377092361450195
    8. ',m' → logprob: -12.689592361450195
    9. ' m' → logprob: -12.752092361450195
    10. '	m' → logprob: -13.252092361450195

Token 407: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38719087839126587
    2. ')' → logprob: -1.137190818786621
    3. ')
' → logprob: -8.762190818786621
    4. '       ' → logprob: -9.012190818786621
    5. ')

' → logprob: -10.262190818786621
    6. ')`
' → logprob: -12.887190818786621
    7. ' )
' → logprob: -13.512190818786621
    8. '   ' → logprob: -14.137190818786621
    9. ')`' → logprob: -15.012190818786621
    10. ' )' → logprob: -15.387190818786621

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011065982282161713
    2. 'n' → logprob: -5.13606595993042
    3. '
' → logprob: -6.01106595993042
    4. '        
' → logprob: -6.63606595993042
    5. ',' → logprob: -7.88606595993042
    6. 'next' → logprob: -8.386066436767578
    7. '<|end|>' → logprob: -9.386066436767578
    8. 'k' → logprob: -9.511066436767578
    9. '```' → logprob: -9.636066436767578
    10. 'def' → logprob: -9.761066436767578

Token 409: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044850535690784454
    2. '       ' → logprob: -4.2948503494262695
    3. ' for' → logprob: -4.5448503494262695
    4. 'order' → logprob: -4.7948503494262695
    5. 'result' → logprob: -5.2948503494262695
    6. 'n' → logprob: -5.7948503494262695
    7. 'div' → logprob: -6.1698503494262695
    8. 'def' → logprob: -7.6698503494262695
    9. 'k' → logprob: -8.54485034942627
    10. 'res' → logprob: -8.79485034942627

Token 410: ' Find' (ID: 9764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003963569179177284
    2. '       ' → logprob: -8.625396728515625
    3. 'order' → logprob: -8.875396728515625
    4. 'def' → logprob: -10.625396728515625
    5. 'div' → logprob: -10.875396728515625
    6. ' for' → logprob: -11.250396728515625
    7. 'result' → logprob: -12.375396728515625
    8. 'possible' → logprob: -12.500396728515625
    9. 'candidate' → logprob: -13.000396728515625
    10. 'k' → logprob: -13.375396728515625

Token 411: ' divis' (ID: 37826)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8498532772064209
    2. ' k' → logprob: -0.9748532772064209
    3. 'k' → logprob: -2.349853277206421
    4. 'for' → logprob: -2.974853277206421
    5. ' next' → logprob: -3.974853277206421
    6. ' i' → logprob: -3.974853277206421
    7. 'i' → logprob: -6.099853515625
    8. 'next' → logprob: -6.474853515625
    9. ' the' → logprob: -6.599853515625
    10. 'div' → logprob: -6.974853515625

Token 412: 'ors' (ID: 914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6677165031433105
    2. 'is' → logprob: -0.7927165031433105
    3. 'ors' → logprob: -4.4177165031433105
    4. '=' → logprob: -5.9177165031433105
    5. 'isor' → logprob: -5.9177165031433105
    6. 'tors' → logprob: -5.9177165031433105
    7. '   ' → logprob: -6.0427165031433105
    8. 'itors' → logprob: -6.4177165031433105
    9. '       ' → logprob: -6.6677165031433105
    10. 'ectors' → logprob: -7.1677165031433105

Token 413: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3858013153076172
    2. ' of' → logprob: -1.8858013153076172
    3. '(' → logprob: -2.010801315307617
    4. ':' → logprob: -2.010801315307617
    5. '       ' → logprob: -2.010801315307617
    6. 'for' → logprob: -3.510801315307617
    7. ' for' → logprob: -3.635801315307617
    8. '=' → logprob: -3.760801315307617
    9. 's' → logprob: -4.010801315307617
    10. 'phi' → logprob: -4.260801315307617

Token 414: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.0005610156804323196
    2. ' phi' → logprob: -7.500561237335205
    3. '(phi' → logprob: -11.750560760498047
    4. '_phi' → logprob: -15.750560760498047
    5. '       ' → logprob: -16.625560760498047
    6. '
' → logprob: -17.125560760498047
    7. 'php' → logprob: -19.625560760498047
    8. '```' → logprob: -19.625560760498047
    9. 'Phi' → logprob: -19.875560760498047
    10. 'psi' → logprob: -19.875560760498047

Token 415: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006462643854320049
    2. ',' → logprob: -6.256462574005127
    3. ':' → logprob: -6.506462574005127
    4. 'div' → logprob: -7.381462574005127
    5. 'def' → logprob: -7.506462574005127
    6. '=' → logprob: -8.131463050842285
    7. 'phi' → logprob: -8.381463050842285
    8. '        
' → logprob: -8.756463050842285
    9. '<|end|>' → logprob: -9.006463050842285
    10. '()' → logprob: -9.256463050842285

Token 416: ' test' (ID: 1746)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.3390971422195435
    2. ' for' → logprob: -2.089097023010254
    3. ' test' → logprob: -2.089097023010254
    4. 'sorted' → logprob: -2.089097023010254
    5. 'for' → logprob: -2.214097023010254
    6. 'self' → logprob: -2.964097023010254
    7. ' sorted' → logprob: -3.339097023010254
    8. 'check' → logprob: -3.589097023010254
    9. '_sorted' → logprob: -3.589097023010254
    10. 'sort' → logprob: -3.714097023010254

Token 417: ' them' (ID: 1373)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4653644561767578
    2. '
' → logprob: -1.5903644561767578
    3. ':' → logprob: -2.840364456176758
    4. ' for' → logprob: -2.840364456176758
    5. '        
' → logprob: -4.090364456176758
    6. ',' → logprob: -4.840364456176758
    7. 'for' → logprob: -4.965364456176758
    8. '  
' → logprob: -5.840364456176758
    9. ':
' → logprob: -5.965364456176758
    10. '<|end|>' → logprob: -6.090364456176758

Token 418: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03137578070163727
    2. ':' → logprob: -4.906375885009766
    3. '
' → logprob: -5.031375885009766
    4. ',' → logprob: -5.031375885009766
    5. ' for' → logprob: -5.781375885009766
    6. '        
' → logprob: -5.906375885009766
    7. '=' → logprob: -6.906375885009766
    8. 'for' → logprob: -7.281375885009766
    9. 'def' → logprob: -7.281375885009766
    10. ' =' → logprob: -7.531375885009766

Token 419: ' ascending' (ID: 75564)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.30640077590942383
    2. 'order' → logprob: -1.8064007759094238
    3. 'div' → logprob: -2.431400775909424
    4. 'for' → logprob: -5.806400775909424
    5. 'range' → logprob: -5.931400775909424
    6. 'phi' → logprob: -6.556400775909424
    7. 'ascending' → logprob: -6.556400775909424
    8. '       ' → logprob: -6.806400775909424
    9. ' sorted' → logprob: -6.806400775909424
    10. ' order' → logprob: -8.056400299072266

Token 420: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.44420960545539856
    2. 'order' → logprob: -1.0692095756530762
    3. 'div' → logprob: -4.819209575653076
    4. '_order' → logprob: -5.819209575653076
    5. '       ' → logprob: -6.569209575653076
    6. 'sorted' → logprob: -6.944209575653076
    7. ')' → logprob: -7.819209575653076
    8. '   ' → logprob: -8.194210052490234
    9. 'for' → logprob: -8.194210052490234
    10. '_div' → logprob: -8.319210052490234

Token 421: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4761905372142792
    2. '
' → logprob: -1.4761905670166016
    3. ':' → logprob: -2.3511905670166016
    4. ',' → logprob: -3.9761905670166016
    5. '        
' → logprob: -4.351190567016602
    6. ':
' → logprob: -4.976190567016602
    7. '\n' → logprob: -5.226190567016602
    8. '=' → logprob: -6.351190567016602
    9. '<|end|>' → logprob: -6.976190567016602
    10. '   ' → logprob: -7.101190567016602

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007952123996801674
    2. '        
' → logprob: -8.500795364379883
    3. 'div' → logprob: -8.625795364379883
    4. 'def' → logprob: -9.500795364379883
    5. ',' → logprob: -9.625795364379883
    6. ':' → logprob: -9.750795364379883
    7. '<|end|>' → logprob: -9.750795364379883
    8. ' for' → logprob: -10.250795364379883
    9. '   ' → logprob: -10.875795364379883
    10. '
' → logprob: -11.125795364379883

Token 423: ' for' (ID: 395)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.09163423627614975
    2. '       ' → logprob: -3.2166342735290527
    3. 'def' → logprob: -3.5916342735290527
    4. ' divis' → logprob: -4.591634273529053
    5. ' div' → logprob: -4.966634273529053
    6. ' def' → logprob: -6.466634273529053
    7. 'd' → logprob: -6.966634273529053
    8. '	div' → logprob: -9.591633796691895
    9. 'import' → logprob: -9.716633796691895
    10. '_div' → logprob: -10.091633796691895

Token 424: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.487842857837677
    2. 'd' → logprob: -0.987842857837677
    3. 'div' → logprob: -4.987843036651611
    4. 'k' → logprob: -5.237843036651611
    5. ' k' → logprob: -7.237843036651611
    6. ' i' → logprob: -8.237842559814453
    7. ' divisor' → logprob: -8.362842559814453
    8. 'i' → logprob: -8.737842559814453
    9. ' div' → logprob: -8.987842559814453
    10. '   ' → logprob: -10.612842559814453

Token 425: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000937547127250582
    2. 'in' → logprob: -7.000937461853027
    3. ' ' → logprob: -10.750937461853027
    4. 'd' → logprob: -12.750937461853027
    5. 's' → logprob: -14.000937461853027
    6. '_in' → logprob: -15.250937461853027
    7. '  ' → logprob: -15.500937461853027
    8. '	in' → logprob: -16.250938415527344
    9. '    ' → logprob: -17.000938415527344
    10. ' ' → logprob: -17.000938415527344

Token 426: ' self' (ID: 1051)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.24292980134487152
    2. 'self' → logprob: -2.117929697036743
    3. ' sorted' → logprob: -2.492929697036743
    4. ' self' → logprob: -4.867929935455322
    5. 'range' → logprob: -5.742929935455322
    6. ' range' → logprob: -6.742929935455322
    7. 'div' → logprob: -8.117929458618164
    8. '(sorted' → logprob: -8.242929458618164
    9. '[' → logprob: -10.117929458618164
    10. '(self' → logprob: -11.117929458618164

Token 427: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0524376779794693
    2. '_div' → logprob: -3.1774377822875977
    3. 'div' → logprob: -4.927437782287598
    4. '.div' → logprob: -6.552437782287598
    5. '_sorted' → logprob: -8.927437782287598
    6. '.' → logprob: -9.677437782287598
    7. 'sorted' → logprob: -9.927437782287598
    8. '_' → logprob: -10.427437782287598
    9. '.get' → logprob: -10.427437782287598
    10. 'Div' → logprob: -10.677437782287598

Token 428: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.21720807254314423
    2. '_div' → logprob: -2.21720814704895
    3. 'sorted' → logprob: -2.46720814704895
    4. '_sorted' → logprob: -6.717207908630371
    5. 'get' → logprob: -8.842207908630371
    6. ' divis' → logprob: -9.842207908630371
    7. 'generate' → logprob: -10.092207908630371
    8. 'self' → logprob: -11.467207908630371
    9. '_get' → logprob: -11.592207908630371
    10. 'find' → logprob: -11.592207908630371

Token 429: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0029198264237493277
    2. 's' → logprob: -6.002919673919678
    3. 'ors' → logprob: -9.127920150756836
    4. '[' → logprob: -10.252920150756836
    5. 'div' → logprob: -10.252920150756836
    6. '_' → logprob: -10.627920150756836
    7. 'isible' → logprob: -10.627920150756836
    8. 'tors' → logprob: -10.752920150756836
    9. 'phi' → logprob: -11.002920150756836
    10. '(phi' → logprob: -11.002920150756836

Token 430: 'ors' (ID: 914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05590558424592018
    2. 'ors' → logprob: -2.93090558052063
    3. 'tors' → logprob: -7.305905818939209
    4. 'd' → logprob: -9.55590534210205
    5. 'vors' → logprob: -9.80590534210205
    6. 'sort' → logprob: -9.93090534210205
    7. 'is' → logprob: -10.43090534210205
    8. 'rs' → logprob: -11.05590534210205
    9. 'e' → logprob: -11.18090534210205
    10. 'si' → logprob: -11.18090534210205

Token 431: '(phi' (ID: 122099)
  Prédit: '(phi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(phi' → logprob: -0.00038801267510280013
    2. '(' → logprob: -7.875388145446777
    3. 'phi' → logprob: -12.500388145446777
    4. ' (' → logprob: -12.625388145446777
    5. ' phi' → logprob: -15.000388145446777
    6. '(pi' → logprob: -15.375388145446777
    7. '(
' → logprob: -16.12538719177246
    8. '(theta' → logprob: -16.37538719177246
    9. '(ph' → logprob: -16.62538719177246
    10. '((' → logprob: -16.87538719177246

Token 432: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001383805531077087
    2. '):
' → logprob: -6.6263837814331055
    3. ' ):' → logprob: -10.251383781433105
    4. '():' → logprob: -11.626383781433105
    5. '):
' → logprob: -12.626383781433105
    6. '       ' → logprob: -12.751383781433105
    7. '   ' → logprob: -13.126383781433105
    8. ')' → logprob: -13.376383781433105
    9. ':' → logprob: -13.626383781433105
    10. '()):
' → logprob: -14.251383781433105

Token 433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4335179626941681
    2. ':' → logprob: -1.0585179328918457
    3. ':
' → logprob: -5.683517932891846
    4. '       ' → logprob: -6.683517932891846
    5. ',' → logprob: -10.433518409729004
    6. '               ' → logprob: -11.058518409729004
    7. ' :' → logprob: -11.058518409729004
    8. '():' → logprob: -11.308518409729004
    9. '<|end|>' → logprob: -11.433518409729004
    10. '	       ' → logprob: -11.933518409729004

Token 434: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5494425892829895
    2. '           ' → logprob: -1.1744425296783447
    3. 'if' (adapté à ' if') → logprob: -2.1744425296783447
    4. '   ' → logprob: -10.549442291259766
    5. '               ' → logprob: -11.424442291259766
    6. '          ' → logprob: -12.299442291259766
    7. ' ' → logprob: -12.549442291259766
    8. '            
' → logprob: -12.549442291259766
    9. '       ' → logprob: -12.799442291259766
    10. '
' → logprob: -12.924442291259766

Token 435: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01817476563155651
    2. ' pow' → logprob: -4.018174648284912
    3. '(pow' → logprob: -10.64317512512207
    4. '   ' → logprob: -14.26817512512207
    5. 'self' → logprob: -16.51817512512207
    6. '_pow' → logprob: -17.01817512512207
    7. 'power' → logprob: -17.51817512512207
    8. '(' → logprob: -17.51817512512207
    9. ' ' → logprob: -17.51817512512207
    10. ' ' → logprob: -17.64317512512207

Token 436: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026217024424113333
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -14.250262260437012
    4. 'self' → logprob: -15.625262260437012
    5. '(a' → logprob: -18.125261306762695
    6. '       ' → logprob: -19.125261306762695
    7. 'a' → logprob: -19.500261306762695
    8. '(this' → logprob: -19.750261306762695
    9. '(

' → logprob: -19.875261306762695
    10. ' (' → logprob: -20.000261306762695

Token 437: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.00030424181022681296
    2. 'a' → logprob: -8.125304222106934
    3. '.' → logprob: -12.125304222106934
    4. ' .' → logprob: -13.375304222106934
    5. '(a' → logprob: -14.500304222106934
    6. ').' → logprob: -15.000304222106934
    7. ' a' → logprob: -16.62530517578125
    8. '```' → logprob: -16.62530517578125
    9. '().' → logprob: -16.87530517578125
    10. ',a' → logprob: -17.00030517578125

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06213652342557907
    2. ',d' → logprob: -2.81213641166687
    3. ' ,' → logprob: -9.68713665008545
    4. '(d' → logprob: -9.68713665008545
    5. 'd' → logprob: -10.06213665008545
    6. ',
' → logprob: -13.81213665008545
    7. '%d' → logprob: -15.31213665008545
    8. ' d' → logprob: -16.062135696411133
    9. 'a' → logprob: -16.312135696411133
    10. '[d' → logprob: -16.437135696411133

Token 439: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013263145228847861
    2. ' d' → logprob: -6.626326084136963
    3. ')d' → logprob: -15.251326560974121
    4. '           ' → logprob: -16.501325607299805
    5. '	d' → logprob: -17.376325607299805
    6. ' ' → logprob: -17.751325607299805
    7. ')' → logprob: -17.876325607299805
    8. '   ' → logprob: -18.251325607299805
    9. '(d' → logprob: -18.626325607299805
    10. '_d' → logprob: -18.876325607299805

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3199920178740285e-05
    2. ' ,' → logprob: -11.500022888183594
    3. ',self' → logprob: -11.500022888183594
    4. 'self' → logprob: -13.375022888183594
    5. ',m' → logprob: -15.000022888183594
    6. ',
' → logprob: -15.000022888183594
    7. '(self' → logprob: -16.125022888183594
    8. '%' → logprob: -16.250022888183594
    9. '```' → logprob: -16.250022888183594
    10. ')' → logprob: -16.500022888183594

Token 441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002036595979006961
    2. ' self' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.00020408630371
    4. '       ' → logprob: -17.00020408630371
    5. '           ' → logprob: -17.62520408630371
    6. '(self' → logprob: -18.00020408630371
    7. 'm' → logprob: -19.12520408630371
    8. ' ' → logprob: -19.37520408630371
    9. '
' → logprob: -19.62520408630371
    10. '[self' → logprob: -19.62520408630371

Token 442: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -2.935296834039036e-06
    2. 'm' → logprob: -13.12500286102295
    3. '.' → logprob: -14.25000286102295
    4. ')' → logprob: -15.25000286102295
    5. 'self' → logprob: -19.000003814697266
    6. '[m' → logprob: -20.000003814697266
    7. ',m' → logprob: -20.125003814697266
    8. ').' → logprob: -20.250003814697266
    9. ')m' → logprob: -20.250003814697266
    10. ' .' → logprob: -21.125003814697266

Token 443: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.656383680412546e-05
    2. ')==' → logprob: -10.000046730041504
    3. ' )' → logprob: -14.125046730041504
    4. '==' → logprob: -15.625046730041504
    5. ')
' → logprob: -17.125045776367188
    6. '```' → logprob: -17.250045776367188
    7. ' ==' → logprob: -17.875045776367188
    8. '}' → logprob: -18.000045776367188
    9. '   ' → logprob: -18.375045776367188
    10. '

' → logprob: -18.625045776367188

Token 444: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3487781584262848
    2. ' ==' → logprob: -1.2237781286239624
    3. ')' → logprob: -8.973777770996094
    4. '=' → logprob: -9.348777770996094
    5. ')==' → logprob: -9.473777770996094
    6. ']==' → logprob: -11.098777770996094
    7. '===' → logprob: -11.598777770996094
    8. ' ' → logprob: -12.348777770996094
    9. '```' → logprob: -12.473777770996094
    10. '()==' → logprob: -12.973777770996094

Token 445: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.500036239624023
    4. '```' → logprob: -20.875036239624023
    5. '  ' → logprob: -21.125036239624023
    6. '۱' → logprob: -21.375036239624023
    7. '    ' → logprob: -22.375036239624023
    8. '' → logprob: -22.500036239624023
    9. '<|end|>' → logprob: -23.062536239624023
    10. ')' → logprob: -23.437536239624023

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -22.625
    4. '```' → logprob: -23.75
    5. '۱' → logprob: -23.875
    6. 'a' → logprob: -25.625
    7. '
' → logprob: -25.875
    8. '१' → logprob: -26.0
    9. '１' → logprob: -26.125
    10. '' → logprob: -26.25

Token 447: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031067516654729843
    2. ':
' → logprob: -3.5310676097869873
    3. ':return' → logprob: -6.656067371368408
    4. '               ' → logprob: -10.906067848205566
    5. ':
' → logprob: -11.906067848205566
    6. '           ' → logprob: -13.156067848205566
    7. '):' → logprob: -13.781067848205566
    8. '):
' → logprob: -14.156067848205566
    9. 'return' → logprob: -15.031067848205566
    10. ':

' → logprob: -15.406067848205566

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021675245836377144
    2. ':' → logprob: -4.021675109863281
    3. ':
' → logprob: -6.646675109863281
    4. ' return' → logprob: -7.146675109863281
    5. ':return' → logprob: -7.146675109863281
    6. 'return' → logprob: -7.646675109863281
    7. '           ' → logprob: -8.896675109863281
    8. '              ' → logprob: -11.396675109863281
    9. '
' → logprob: -12.396675109863281
    10. '                   ' → logprob: -13.021675109863281

Token 449: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07703585177659988
    2. '               ' → logprob: -3.077035903930664
    3. ' return' → logprob: -3.577035903930664
    4. '           ' → logprob: -9.827035903930664
    5. ':return' → logprob: -11.077035903930664
    6. '
' → logprob: -11.327035903930664
    7. '	return' → logprob: -12.702035903930664
    8. '{return' → logprob: -13.577035903930664
    9. '                   ' → logprob: -13.827035903930664
    10. '   ' → logprob: -13.952035903930664

Token 450: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.061967797577381134
    2. ' d' → logprob: -2.8119678497314453
    3. '           ' → logprob: -16.436967849731445
    4. '	d' → logprob: -16.561967849731445
    5. ' ' → logprob: -17.311967849731445
    6. '               ' → logprob: -17.561967849731445
    7. '                   ' → logprob: -18.561967849731445
    8. '   ' → logprob: -18.936967849731445
    9. '_d' → logprob: -19.186967849731445
    10. '       ' → logprob: -19.561967849731445

Token 451: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03959552198648453
    2. '
' → logprob: -3.414595603942871
    3. '        
' → logprob: -6.039595603942871
    4. '    
' → logprob: -6.414595603942871
    5. '   ' → logprob: -6.789595603942871
    6. 'def' → logprob: -8.164595603942871
    7. '<|end|>' → logprob: -9.164595603942871
    8. 'import' → logprob: -9.414595603942871
    9. '\n' → logprob: -9.914595603942871
    10. '  
' → logprob: -10.289595603942871

Token 452: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6764804720878601
    2. '       ' → logprob: -0.8014804720878601
    3. '   ' → logprob: -3.426480531692505
    4. 'def' → logprob: -4.676480293273926
    5. '    
' → logprob: -7.676480293273926
    6. '        
' → logprob: -7.926480293273926
    7. ' def' → logprob: -9.051480293273926
    8. '```' → logprob: -9.926480293273926
    9. '

' → logprob: -11.051480293273926
    10. '           ' → logprob: -11.051480293273926

Token 453: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4441942870616913
    2. '   ' → logprob: -1.1941943168640137
    3. 'def' → logprob: -3.5691943168640137
    4. '
' → logprob: -4.069194316864014
    5. 'raise' → logprob: -4.694194316864014
    6. 'return' → logprob: -7.569194316864014
    7. ' raise' → logprob: -8.069193840026855
    8. '    
' → logprob: -8.819193840026855
    9. '        
' → logprob: -8.819193840026855
    10. '           ' → logprob: -10.069193840026855

Token 454: ' F' (ID: 454)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.5152983069419861
    2. 'return' → logprob: -1.0152983665466309
    3. '       ' → logprob: -3.265298366546631
    4. ' raise' → logprob: -6.265298366546631
    5. ' return' → logprob: -8.265297889709473
    6. '#' → logprob: -10.640297889709473
    7. 'def' → logprob: -11.265297889709473
    8. '   ' → logprob: -13.890297889709473
    9. 'Raise' → logprob: -14.640297889709473
    10. 'assert' → logprob: -15.265297889709473

Token 455: 'allback' (ID: 13054)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.041458010673523
    2. 'allback' → logprob: -1.166458010673523
    3. 'raise' → logprob: -2.0414581298828125
    4. '#' → logprob: -2.0414581298828125
    5. 'alse' → logprob: -3.1664581298828125
    6. 'inal' → logprob: -4.1664581298828125
    7. 'or' → logprob: -4.5414581298828125
    8. 'irst' → logprob: -6.0414581298828125
    9. 'rom' → logprob: -6.6664581298828125
    10. 'ind' → logprob: -6.9164581298828125

Token 456: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4566008746623993
    2. ' self' → logprob: -2.3316009044647217
    3. ' return' → logprob: -2.4566009044647217
    4. ' -' → logprob: -3.3316009044647217
    5. ':' → logprob: -3.4566009044647217
    6. ' phi' → logprob: -3.4566009044647217
    7. 'self' → logprob: -3.8316009044647217
    8. ',' → logprob: -3.9566009044647217
    9. 'return' → logprob: -4.206600666046143
    10. '1' → logprob: -4.956600666046143

Token 457: 'should' (ID: 10618)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0622648000717163
    2. ' raise' → logprob: -1.4372648000717163
    3. 'raise' → logprob: -1.8122648000717163
    4. ' return' → logprob: -2.062264919281006
    5. 'return' → logprob: -2.312264919281006
    6. ' phi' → logprob: -4.562264919281006
    7. 'phi' → logprob: -4.937264919281006
    8. 'self' → logprob: -5.187264919281006
    9. ' self' → logprob: -6.312264919281006
    10. ')' → logprob: -6.812264919281006

Token 458: ' not' (ID: 625)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.05060413479804993
    2. ' not' → logprob: -3.4256041049957275
    3. 'raise' → logprob: -4.425604343414307
    4. ' return' → logprob: -5.550604343414307
    5. '_raise' → logprob: -8.175603866577148
    6. 'not' → logprob: -8.300603866577148
    7. ' never' → logprob: -8.675603866577148
    8. 'return' → logprob: -9.300603866577148
    9. '.raise' → logprob: -10.175603866577148
    10. 'n't' → logprob: -10.300603866577148

Token 459: ' happen' (ID: 5659)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.275075227022171
    2. ' happen' → logprob: -1.5250751972198486
    3. ' ' → logprob: -4.900075435638428
    4. ' be' → logprob: -5.025075435638428
    5. ' occur' → logprob: -5.775075435638428
    6. 'raise' → logprob: -5.775075435638428
    7. ' ever' → logprob: -6.275075435638428
    8. '_raise' → logprob: -8.27507495880127
    9. ' return' → logprob: -8.65007495880127
    10. ' usually' → logprob: -9.77507495880127

Token 460: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4560709297657013
    2. '       ' → logprob: -1.456070899963379
    3. ' raise' → logprob: -3.581070899963379
    4. 'raise' → logprob: -3.706070899963379
    5. ':' → logprob: -3.831070899963379
    6. ',' → logprob: -4.581070899963379
    7. '
' → logprob: -4.831070899963379
    8. ' )' → logprob: -4.956070899963379
    9. ' ' → logprob: -5.081070899963379
    10. '        
' → logprob: -5.331070899963379

Token 461: ' cop' (ID: 8039)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0162646770477295
    2. 'a' → logprob: -1.5162646770477295
    3. ' cop' → logprob: -2.0162646770477295
    4. ' ' → logprob: -2.7662646770477295
    5. ' valid' → logprob: -3.2662646770477295
    6. ' gcd' → logprob: -3.2662646770477295
    7. 'cop' → logprob: -3.3912646770477295
    8. ' m' → logprob: -3.6412646770477295
    9. 'm' → logprob: -3.8912646770477295
    10. 'valid' → logprob: -4.766264915466309

Token 462: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00012892624363303185
    2. 'ime' → logprob: -9.500128746032715
    3. 'rim' → logprob: -10.250128746032715
    4. 'y' → logprob: -11.375128746032715
    5. 'ym' → logprob: -13.875128746032715
    6. 'ri' → logprob: -14.375128746032715
    7. ' r' → logprob: -14.500128746032715
    8. 'irm' → logprob: -14.500128746032715
    9. '
' → logprob: -14.750128746032715
    10. '#' → logprob: -14.875128746032715

Token 463: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -8.41129949549213e-05
    2. '   ' → logprob: -10.625083923339844
    3. '       ' → logprob: -12.250083923339844
    4. '```' → logprob: -12.500083923339844
    5. 'imes' → logprob: -12.500083923339844
    6. ')' → logprob: -12.625083923339844
    7. '**' → logprob: -12.875083923339844
    8. '#' → logprob: -12.875083923339844
    9. 'me' → logprob: -12.875083923339844
    10. '
' → logprob: -13.125083923339844

Token 464: ')
' (ID: 446)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2094016671180725
    2. ')' → logprob: -1.9594016075134277
    3. ' a' → logprob: -3.4594016075134277
    4. ' )' → logprob: -5.084401607513428
    5. '):' → logprob: -5.334401607513428
    6. '(a' → logprob: -5.459401607513428
    7. '(' → logprob: -7.459401607513428
    8. ' (' → logprob: -8.709402084350586
    9. ' ):' → logprob: -8.709402084350586
    10. ')a' → logprob: -8.709402084350586

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01837070658802986
    2. 'raise' → logprob: -5.018370628356934
    3. ' raise' → logprob: -5.268370628356934
    4. ' return' → logprob: -5.768370628356934
    5. 'return' → logprob: -6.018370628356934
    6. '1' → logprob: -7.893370628356934
    7. ' ' → logprob: -9.518370628356934
    8. '0' → logprob: -9.643370628356934
    9. '        
' → logprob: -10.268370628356934
    10. ' None' → logprob: -10.268370628356934

Token 466: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0633842721581459
    2. 'phi' → logprob: -3.3133842945098877
    3. ' return' → logprob: -4.313384056091309
    4. 'raise' → logprob: -4.688384056091309
    5. '       ' → logprob: -6.688384056091309
    6. ' phi' → logprob: -7.188384056091309
    7. '0' → logprob: -8.438384056091309
    8. ' raise' → logprob: -8.938384056091309
    9. 'self' → logprob: -10.063384056091309
    10. '1' → logprob: -11.188384056091309

Token 467: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.000958627846557647
    2. '1' → logprob: -7.250958442687988
    3. ' phi' → logprob: -9.000958442687988
    4. 'self' → logprob: -9.250958442687988
    5. 'None' → logprob: -11.125958442687988
    6. '0' → logprob: -11.625958442687988
    7. '-' → logprob: -13.250958442687988
    8. '(phi' → logprob: -14.125958442687988
    9. '_phi' → logprob: -14.250958442687988
    10. '       ' → logprob: -14.375958442687988

Token 468: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02426304668188095
    2. '
' → logprob: -4.14926290512085
    3. 'def' → logprob: -5.14926290512085
    4. '    
' → logprob: -6.14926290512085
    5. ' def' → logprob: -8.899263381958008
    6. '```' → logprob: -10.149263381958008
    7. '        
' → logprob: -10.524263381958008
    8. '<|end|>' → logprob: -10.774263381958008
    9. '	def' → logprob: -11.899263381958008
    10. '  
' → logprob: -12.274263381958008

Token 469: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.648969292640686
    2. '   ' → logprob: -0.773969292640686
    3. 'def' → logprob: -4.2739691734313965
    4. '_' → logprob: -7.1489691734313965
    5. '    
' → logprob: -7.5239691734313965
    6. ' def' → logprob: -8.523969650268555
    7. '\n' → logprob: -8.648969650268555
    8. '

' → logprob: -8.773969650268555
    9. ' ' → logprob: -9.273969650268555
    10. '
' → logprob: -9.898969650268555

Token 470: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03992477431893349
    2. '   ' → logprob: -3.2899248600006104
    3. ' def' → logprob: -6.414924621582031
    4. '
' → logprob: -8.539924621582031
    5. '    
' → logprob: -10.414924621582031
    6. '@' → logprob: -11.039924621582031
    7. 'import' → logprob: -13.664924621582031
    8. '        
' → logprob: -14.664924621582031
    9. '

' → logprob: -14.914924621582031
    10. ' 
' → logprob: -15.039924621582031

Token 471: ' _' (ID: 1175)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.1293114572763443
    2. ' _' → logprob: -2.2543115615844727
    3. '_div' → logprob: -4.129311561584473
    4. '_' → logprob: -8.504311561584473
    5. ' ' → logprob: -10.629311561584473
    6. '_a' → logprob: -12.004311561584473
    7. 'e' → logprob: -12.504311561584473
    8. '_def' → logprob: -12.504311561584473
    9. ' ' → logprob: -13.129311561584473
    10. '_iter' → logprob: -13.254311561584473

Token 472: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0028190165758132935
    2. 'div' → logprob: -5.877819061279297
    3. 'def' → logprob: -11.877819061279297
    4. '_e' → logprob: -12.127819061279297
    5. '_div' → logprob: -14.252819061279297
    6. ' e' → logprob: -15.502819061279297
    7. 'eu' → logprob: -15.752819061279297
    8. 'is' → logprob: -16.252819061279297
    9. 'g' → logprob: -16.502819061279297
    10. 'Euler' → logprob: -16.752819061279297

Token 473: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -8.280175097752362e-05
    2. 'ulers' → logprob: -9.875082969665527
    3. '_' → logprob: -11.625082969665527
    4. '_e' → logprob: -12.375082969665527
    5. 'e' → logprob: -12.500082969665527
    6. 'ler' → logprob: -13.125082969665527
    7. 'ul' → logprob: -13.250082969665527
    8. 'ule' → logprob: -13.250082969665527
    9. '```' → logprob: -13.500082969665527
    10. 'uel' → logprob: -13.750082969665527

Token 474: '_tot' (ID: 87201)
  Prédit: '_tot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tot' → logprob: -3.690834273584187e-05
    2. 'tot' → logprob: -10.87503719329834
    3. '_phi' → logprob: -11.12503719329834
    4. '_tol' → logprob: -14.00003719329834
    5. ' tot' → logprob: -14.50003719329834
    6. 'Tot' → logprob: -14.62503719329834
    7. '_' → logprob: -15.37503719329834
    8. ' _' → logprob: -15.37503719329834
    9. '   ' → logprob: -15.87503719329834
    10. '_val' → logprob: -16.000036239624023

Token 475: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -7.600714161526412e-05
    2. '_phi' → logprob: -10.250076293945312
    3. 'phi' → logprob: -12.250076293945312
    4. '   ' → logprob: -12.375076293945312
    5. '```' → logprob: -12.375076293945312
    6. '       ' → logprob: -12.875076293945312
    7. '_' → logprob: -13.000076293945312
    8. 'IENT' → logprob: -13.125076293945312
    9. '(' → logprob: -13.250076293945312
    10. '__' → logprob: -13.250076293945312

Token 476: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003886086633428931
    2. '(' → logprob: -7.8753886222839355
    3. 'self' → logprob: -12.125388145446777
    4. ' (' → logprob: -14.125388145446777
    5. '<|end|>' → logprob: -14.125388145446777
    6. '(
' → logprob: -14.375388145446777
    7. ' self' → logprob: -14.750388145446777
    8. 'def' → logprob: -15.250388145446777
    9. '	self' → logprob: -17.000389099121094
    10. '[self' → logprob: -17.250389099121094

Token 477: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024933140724897385
    2. ')' → logprob: -4.024933338165283
    3. '(' → logprob: -5.149933338165283
    4. 'self' → logprob: -7.649933338165283
    5. 'def' → logprob: -8.524932861328125
    6. ')(' → logprob: -8.524932861328125
    7. ' (' → logprob: -10.399932861328125
    8. ' def' → logprob: -11.024932861328125
    9. ' self' → logprob: -11.399932861328125
    10. '(
' → logprob: -11.649932861328125

Token 478: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11398132145404816
    2. 'self' → logprob: -2.363981246948242
    3. 'm' → logprob: -4.363981246948242
    4. ' n' → logprob: -7.613981246948242
    5. ' self' → logprob: -7.738981246948242
    6. ')' → logprob: -11.363981246948242
    7. 'def' → logprob: -12.738981246948242
    8. ' m' → logprob: -12.738981246948242
    9. '   ' → logprob: -12.863981246948242
    10. 'x' → logprob: -14.238981246948242

Token 479: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.262251615524292
    2. '):' → logprob: -1.512251615524292
    3. '):
' → logprob: -4.637251853942871
    4. ':' → logprob: -7.512251853942871
    5. ' )' → logprob: -11.137251853942871
    6. ' ):' → logprob: -11.262251853942871
    7. '):
' → logprob: -12.512251853942871
    8. '):

' → logprob: -12.887251853942871
    9. '   ' → logprob: -13.637251853942871
    10. 'def' → logprob: -13.887251853942871

Token 480: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.97024549683556e-05
    2. ' int' → logprob: -9.875080108642578
    3. 'n' → logprob: -10.625080108642578
    4. ')' → logprob: -12.500080108642578
    5. ':int' → logprob: -16.750080108642578
    6. '=int' → logprob: -16.750080108642578
    7. '(int' → logprob: -17.000080108642578
    8. '```' → logprob: -17.250080108642578
    9. '):
' → logprob: -17.750080108642578
    10. 'def' → logprob: -17.750080108642578

Token 481: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '):' → logprob: -12.625005722045898
    3. '):
' → logprob: -13.875005722045898
    4. ' )' → logprob: -14.375005722045898
    5. ':' → logprob: -15.500005722045898
    6. ')->' → logprob: -16.7500057220459
    7. '   ' → logprob: -18.1250057220459
    8. '`)' → logprob: -19.1250057220459
    9. '):

' → logprob: -19.5000057220459
    10. ')
' → logprob: -19.7500057220459

Token 482: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015439033741131425
    2. ':
' → logprob: -6.501543998718262
    3. 'def' → logprob: -11.501543998718262
    4. '->' → logprob: -11.876543998718262
    5. '   ' → logprob: -12.126543998718262
    6. '):' → logprob: -12.376543998718262
    7. ':def' → logprob: -12.376543998718262
    8. ' ->' → logprob: -13.126543998718262
    9. ' :' → logprob: -13.501543998718262
    10. '       ' → logprob: -13.626543998718262

Token 483: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3782830137643032e-05
    2. 'n' → logprob: -11.62501335144043
    3. ' int' → logprob: -12.25001335144043
    4. '=int' → logprob: -19.75001335144043
    5. ':int' → logprob: -19.87501335144043
    6. '(int' → logprob: -20.12501335144043
    7. '[int' → logprob: -20.75001335144043
    8. '	int' → logprob: -21.12501335144043
    9. '
' → logprob: -22.00001335144043
    10. ' n' → logprob: -22.25001335144043

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003294513560831547
    2. ':
' → logprob: -5.753294467926025
    3. '):' → logprob: -9.753294944763184
    4. '):
' → logprob: -10.128294944763184
    5. '       ' → logprob: -11.503294944763184
    6. ':def' → logprob: -13.378294944763184
    7. ' :' → logprob: -13.628294944763184
    8. ':return' → logprob: -13.753294944763184
    9. '   ' → logprob: -14.003294944763184
    10. ':int' → logprob: -14.003294944763184

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1389499455690384
    2. ':' → logprob: -2.8889498710632324
    3. 'n' → logprob: -3.7639498710632324
    4. 'count' → logprob: -4.388949871063232
    5. '   ' → logprob: -4.638949871063232
    6. '<|end|>' → logprob: -4.888949871063232
    7. ',' → logprob: -5.513949871063232
    8. ':
' → logprob: -5.638949871063232
    9. 'e' → logprob: -6.513949871063232
    10. '=' → logprob: -6.888949871063232

Token 486: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0007753237732686102
    2. ' result' → logprob: -7.750775337219238
    3. 'res' → logprob: -8.125775337219238
    4. '       ' → logprob: -10.250775337219238
    5. '   ' → logprob: -12.750775337219238
    6. 'def' → logprob: -12.875775337219238
    7. 'phi' → logprob: -13.125775337219238
    8. '	result' → logprob: -13.250775337219238
    9. 'ans' → logprob: -13.625775337219238
    10. 'count' → logprob: -14.000775337219238

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687217235565186
    2. '=' → logprob: -1.1368721723556519
    3. ' ' → logprob: -13.886872291564941
    4. ',' → logprob: -15.636872291564941
    5. ' =
' → logprob: -17.011871337890625
    6. '=int' → logprob: -17.636871337890625
    7. '=n' → logprob: -17.886871337890625
    8. ' ' → logprob: -17.886871337890625
    9. 'n' → logprob: -19.011871337890625
    10. ')' → logprob: -19.136871337890625

Token 488: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. ' n' → logprob: -18.625
    3. '	n' → logprob: -19.75
    4. '1' → logprob: -23.125
    5. 'int' → logprob: -23.5
    6. '
' → logprob: -23.5
    7. '   ' → logprob: -24.875
    8. '```' → logprob: -24.875
    9. 'n't' → logprob: -25.125
    10. ')n' → logprob: -25.375

Token 489: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07345718890428543
    2. 'for' → logprob: -2.8234572410583496
    3. '<|end|>' → logprob: -5.44845724105835
    4. 'while' → logprob: -5.57345724105835
    5. ' for' → logprob: -7.32345724105835
    6. '       ' → logprob: -7.44845724105835
    7. '        
' → logprob: -7.57345724105835
    8. ' 
' → logprob: -8.198456764221191
    9. '  
' → logprob: -8.448456764221191
    10. '=' → logprob: -8.573456764221191

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05218766629695892
    2. 'for' → logprob: -3.67718768119812
    3. ' for' → logprob: -3.80218768119812
    4. '	' → logprob: -6.177187442779541
    5. '   ' → logprob: -7.677187442779541
    6. ',' → logprob: -8.8021879196167
    7. '	for' → logprob: -9.1771879196167
    8. '=' → logprob: -9.8021879196167
    9. '	   ' → logprob: -9.8021879196167
    10. ' i' → logprob: -9.9271879196167

Token 491: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0012038042768836021
    2. '       ' → logprob: -7.376204013824463
    3. 'i' → logprob: -8.126203536987305
    4. '   ' → logprob: -8.376203536987305
    5. ' p' → logprob: -10.001203536987305
    6. 'for' → logprob: -13.001203536987305
    7. '	p' → logprob: -13.626203536987305
    8. '        
' → logprob: -13.626203536987305
    9. '2' → logprob: -15.751203536987305
    10. '```' → logprob: -15.751203536987305

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009759632870554924
    2. ' =' → logprob: -4.634759426116943
    3. 'for' → logprob: -13.384759902954102
    4. '=p' → logprob: -14.509759902954102
    5. ' in' → logprob: -14.634759902954102
    6. ' ' → logprob: -15.134759902954102
    7. ' for' → logprob: -15.384759902954102
    8. 'from' → logprob: -16.5097599029541
    9. 'p' → logprob: -16.6347599029541
    10. 'r' → logprob: -16.7597599029541

Token 493: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.625
    4. '۲' → logprob: -20.875
    5. '２' → logprob: -21.375
    6. '[' → logprob: -21.625
    7. '```' → logprob: -22.0
    8. '  ' → logprob: -22.375
    9. '
' → logprob: -22.75
    10. '٢' → logprob: -22.875

Token 494: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -20.75
    4. '２' → logprob: -21.125
    5. '
' → logprob: -21.375
    6. '۲' → logprob: -21.375
    7. '[' → logprob: -21.5
    8. '```' → logprob: -21.875
    9. '٢' → logprob: -22.625
    10. '3' → logprob: -23.0

Token 495: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2736033797264099
    2. 'while' → logprob: -1.5236034393310547
    3. ' while' → logprob: -4.148603439331055
    4. '       ' → logprob: -6.023603439331055
    5. '<|end|>' → logprob: -6.023603439331055
    6. '	while' → logprob: -7.648603439331055
    7. '   ' → logprob: -9.523603439331055
    8. ' 
' → logprob: -9.898603439331055
    9. '        
' → logprob: -10.148603439331055
    10. 'While' → logprob: -10.273603439331055

Token 496: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5785028338432312
    2. '       ' → logprob: -0.9535028338432312
    3. ' while' → logprob: -3.078502893447876
    4. '	while' → logprob: -5.828502655029297
    5. '
' → logprob: -5.953502655029297
    6. '<|end|>' → logprob: -6.203502655029297
    7. '	' → logprob: -9.078502655029297
    8. ':' → logprob: -10.703502655029297
    9. 'While' → logprob: -10.703502655029297
    10. '   ' → logprob: -10.703502655029297

Token 497: ' temp' (ID: 5484)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2025623470544815
    2. ' while' → logprob: -1.7025623321533203
    3. '       ' → logprob: -6.82756233215332
    4. '	while' → logprob: -9.70256233215332
    5. '
' → logprob: -12.82756233215332
    6. '	' → logprob: -15.07756233215332
    7. 'While' → logprob: -15.57756233215332
    8. ' 
' → logprob: -15.70256233215332
    9. '```' → logprob: -15.70256233215332
    10. '        
' → logprob: -16.32756233215332

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975442260503769
    2. '=' → logprob: -3.529754400253296
    3. '=n' → logprob: -13.029754638671875
    4. ' ' → logprob: -13.904754638671875
    5. 'n' → logprob: -14.904754638671875
    6. ' n' → logprob: -15.279754638671875
    7. ',' → logprob: -15.779754638671875
    8. 'while' → logprob: -16.779754638671875
    9. '   ' → logprob: -17.154754638671875
    10. ':' → logprob: -17.154754638671875

Token 499: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023245595395565033
    2. ' n' → logprob: -3.7732455730438232
    3. '	n' → logprob: -15.898245811462402
    4. '$n' → logprob: -19.648244857788086
    5. 'int' → logprob: -19.773244857788086
    6. '_n' → logprob: -19.898244857788086
    7. '```' → logprob: -20.273244857788086
    8. ' ' → logprob: -20.273244857788086
    9. '       ' → logprob: -20.523244857788086
    10. '1' → logprob: -21.148244857788086

Token 500: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16308513283729553
    2. '
' → logprob: -2.6630852222442627
    3. ' while' → logprob: -2.7880852222442627
    4. '<|end|>' → logprob: -4.038084983825684
    5. '	while' → logprob: -7.538084983825684
    6. ' 
' → logprob: -8.288084983825684
    7. '<|end|>' → logprob: -8.288084983825684
    8. 'While' → logprob: -8.913084983825684
    9. '       ' → logprob: -8.913084983825684
    10. ' ' → logprob: -10.163084983825684

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.405151903629303
    2. 'while' → logprob: -1.6551518440246582
    3. ' while' → logprob: -2.155151844024658
    4. '<|end|>' → logprob: -4.280151844024658
    5. '
' → logprob: -4.905151844024658
    6. '	while' → logprob: -5.780151844024658
    7. '<|end|>' → logprob: -7.905151844024658
    8. '   ' → logprob: -7.905151844024658
    9. '        
' → logprob: -8.530152320861816
    10. '	' → logprob: -8.530152320861816

Token 502: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5334373712539673
    2. 'while' (adapté à ' while') → logprob: -0.9084373712539673
    3. '       ' → logprob: -4.783437252044678
    4. '	while' → logprob: -7.033437252044678
    5. '
' → logprob: -7.408437252044678
    6. '   ' → logprob: -9.283437728881836
    7. '<|end|>' → logprob: -9.408437728881836
    8. ' 
' → logprob: -9.533437728881836
    9. ' ' → logprob: -10.158437728881836
    10. ':' → logprob: -10.408437728881836

Token 503: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03738678991794586
    2. ' p' → logprob: -3.537386894226074
    3. 'temp' → logprob: -4.912386894226074
    4. ' temp' → logprob: -8.287386894226074
    5. '(p' → logprob: -15.287386894226074
    6. '	p' → logprob: -15.537386894226074
    7. 'pow' → logprob: -16.287385940551758
    8. '   ' → logprob: -16.912385940551758
    9. 'tmp' → logprob: -17.037385940551758
    10. ' ' → logprob: -17.162385940551758

Token 504: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.287393718957901
    2. '*p' → logprob: -1.5373936891555786
    3. '*' → logprob: -3.412393808364868
    4. ' <=' → logprob: -6.537393569946289
    5. '<=' → logprob: -7.912393569946289
    6. 'p' → logprob: -9.787393569946289
    7. '**' → logprob: -12.037393569946289
    8. ' p' → logprob: -13.162393569946289
    9. '*s' → logprob: -14.412393569946289
    10. '*q' → logprob: -14.787393569946289

Token 505: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.128163257315464e-07
    2. ' p' → logprob: -15.875
    3. '2' → logprob: -16.5
    4. '*p' → logprob: -18.5
    5. '	p' → logprob: -19.0
    6. '<p' → logprob: -19.25
    7. '
' → logprob: -19.375
    8. '<=' → logprob: -20.0
    9. '_p' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 506: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4740777611732483
    2. '<=' → logprob: -0.9740777611732483
    3. ')<=' → logprob: -15.474078178405762
    4. ']<=' → logprob: -15.724078178405762
    5. ' ' → logprob: -16.099077224731445
    6. ' ≤' → logprob: -16.974077224731445
    7. '≤' → logprob: -16.974077224731445
    8. '```' → logprob: -17.349077224731445
    9. 'le' → logprob: -17.599077224731445
    10. ' ' → logprob: -17.724077224731445

Token 507: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0040785204619169235
    2. ' temp' → logprob: -5.504078388214111
    3. 'tmp' → logprob: -17.129077911376953
    4. '	temp' → logprob: -17.879077911376953
    5. 'n' → logprob: -19.504077911376953
    6. '(temp' → logprob: -20.254077911376953
    7. '_temp' → logprob: -20.379077911376953
    8. 'tem' → logprob: -20.629077911376953
    9. '$temp' → logprob: -20.629077911376953
    10. '   ' → logprob: -20.879077911376953

Token 508: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3133391737937927
    2. ':' → logprob: -1.3133392333984375
    3. ' and' → logprob: -10.438339233398438
    4. '):
' → logprob: -11.063339233398438
    5. '       ' → logprob: -11.313339233398438
    6. ':

' → logprob: -11.938339233398438
    7. ':
' → logprob: -12.688339233398438
    8. '           ' → logprob: -12.938339233398438
    9. '<|end|>' → logprob: -13.063339233398438
    10. '<|end|>' → logprob: -13.313339233398438

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006168863270431757
    2. ':' → logprob: -5.506168842315674
    3. ':
' → logprob: -6.756168842315674
    4. '       ' → logprob: -7.881168842315674
    5. '<|end|>' → logprob: -8.631169319152832
    6. '<|end|>' → logprob: -9.256169319152832
    7. ',' → logprob: -9.381169319152832
    8. ' if' → logprob: -9.631169319152832
    9. '```' → logprob: -10.506169319152832
    10. '   ' → logprob: -10.756169319152832

Token 510: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43648308515548706
    2. 'if' (adapté à ' if') → logprob: -1.0614831447601318
    3. '       ' → logprob: -5.436482906341553
    4. '           ' → logprob: -5.811482906341553
    5. '<|end|>' → logprob: -8.186483383178711
    6. '<|end|>' → logprob: -10.311483383178711
    7. '   ' → logprob: -10.561483383178711
    8. ' ' → logprob: -11.186483383178711
    9. 'while' → logprob: -11.186483383178711
    10. '               ' → logprob: -11.436483383178711

Token 511: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0011708177626132965
    2. ' temp' → logprob: -6.751170635223389
    3. '(temp' → logprob: -14.501171112060547
    4. '	temp' → logprob: -16.751171112060547
    5. '   ' → logprob: -17.126171112060547
    6. 'tmp' → logprob: -17.501171112060547
    7. 'n' → logprob: -17.876171112060547
    8. ' ' → logprob: -18.126171112060547
    9. '$temp' → logprob: -18.876171112060547
    10. '_temp' → logprob: -19.501171112060547

Token 512: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12698638439178467
    2. ' %' → logprob: -2.126986503601074
    3. '%e' → logprob: -9.876986503601074
    4. '%E' → logprob: -12.376986503601074
    5. ' ' → logprob: -14.501986503601074
    6. '%i' → logprob: -14.626986503601074
    7. '%n' → logprob: -14.876986503601074
    8. ' %=' → logprob: -15.001986503601074
    9. '%x' → logprob: -15.376986503601074
    10. '%d' → logprob: -15.501986503601074

Token 513: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. '2' → logprob: -18.0000057220459
    4. '<p' → logprob: -19.1250057220459
    5. '   ' → logprob: -19.1250057220459
    6. '	p' → logprob: -19.8750057220459
    7. '{' → logprob: -20.5000057220459
    8. ' ' → logprob: -20.8750057220459
    9. '_p' → logprob: -21.2500057220459
    10. '[p' → logprob: -21.6250057220459

Token 514: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10025239735841751
    2. ' ==' → logprob: -2.350252389907837
    3. '=' → logprob: -10.225252151489258
    4. '===' → logprob: -12.600252151489258
    5. '==
' → logprob: -12.600252151489258
    6. ')==' → logprob: -13.225252151489258
    7. ']==' → logprob: -15.350252151489258
    8. '0' → logprob: -15.350252151489258
    9. '```' → logprob: -15.850252151489258
    10. ' ' → logprob: -16.225252151489258

Token 515: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -19.625003814697266
    4. '   ' → logprob: -20.500003814697266
    5. 'p' → logprob: -20.750003814697266
    6. '=' → logprob: -21.625003814697266
    7. ' ' → logprob: -22.375003814697266
    8. '```' → logprob: -22.437503814697266
    9. '٠' → logprob: -22.562503814697266
    10. '<|end|>' → logprob: -22.625003814697266

Token 516: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'p' → logprob: -19.125
    4. '۰' → logprob: -21.0
    5. '   ' → logprob: -22.375
    6. '０' → logprob: -23.25
    7. '2' → logprob: -23.375
    8. '
' → logprob: -23.5
    9. '

' → logprob: -23.5625
    10. '```' → logprob: -23.625

Token 517: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1603476107120514
    2. ':' → logprob: -1.910347580909729
    3. '):
' → logprob: -9.785347938537598
    4. '               ' → logprob: -10.035347938537598
    5. '           ' → logprob: -11.535347938537598
    6. ':

' → logprob: -11.785347938537598
    7. ' :
' → logprob: -13.410347938537598
    8. ':
' → logprob: -13.660347938537598
    9. '       ' → logprob: -13.910347938537598
    10. '=' → logprob: -14.660347938537598

Token 518: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16660642623901367
    2. '           ' → logprob: -2.2916064262390137
    3. ':
' → logprob: -3.2916064262390137
    4. ':' → logprob: -4.916606426239014
    5. ',' → logprob: -5.791606426239014
    6. 'result' → logprob: -6.166606426239014
    7. '<|end|>' → logprob: -7.041606426239014
    8. '<|end|>' → logprob: -7.666606426239014
    9. ',result' → logprob: -8.166606903076172
    10. ' result' → logprob: -8.541606903076172

Token 519: ' while' (ID: 2049)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12024275213479996
    2. 'while' (adapté à ' while') → logprob: -2.6202428340911865
    3. ' result' → logprob: -3.3702428340911865
    4. ' while' → logprob: -5.120242595672607
    5. '               ' → logprob: -8.995243072509766
    6. '           ' → logprob: -10.620243072509766
    7. '       ' → logprob: -12.620243072509766
    8. '```' → logprob: -14.745243072509766
    9. ',result' → logprob: -14.870243072509766
    10. '[result' → logprob: -15.370243072509766

Token 520: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.25192955136299133
    2. 'temp' → logprob: -1.501929521560669
    3. '(temp' → logprob: -15.00192928314209
    4. '	temp' → logprob: -16.751930236816406
    5. ' ' → logprob: -18.751930236816406
    6. '_temp' → logprob: -18.751930236816406
    7. '$temp' → logprob: -18.751930236816406
    8. 'tmp' → logprob: -19.001930236816406
    9. '[temp' → logprob: -19.126930236816406
    10. 'tem' → logprob: -20.001930236816406

Token 521: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.042457208037376404
    2. '%=' → logprob: -3.667457103729248
    3. '//=' → logprob: -4.542457103729248
    4. ' %=' → logprob: -5.417457103729248
    5. ' %' → logprob: -7.292457103729248
    6. '%d' → logprob: -9.417457580566406
    7. '%s' → logprob: -9.917457580566406
    8. '%i' → logprob: -10.667457580566406
    9. ' //' → logprob: -10.792457580566406
    10. '%e' → logprob: -10.917457580566406

Token 522: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0206720617134124e-05
    2. ' p' → logprob: -11.50001049041748
    3. '<p' → logprob: -18.750009536743164
    4. '2' → logprob: -18.875009536743164
    5. '	p' → logprob: -20.375009536743164
    6. '_p' → logprob: -20.625009536743164
    7. '(p' → logprob: -21.750009536743164
    8. '           ' → logprob: -21.875009536743164
    9. '[p' → logprob: -22.375009536743164
    10. '   ' → logprob: -22.625009536743164

Token 523: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011053833179175854
    2. ' ==' → logprob: -4.511054039001465
    3. '=' → logprob: -12.636054039001465
    4. '0' → logprob: -13.511054039001465
    5. '===' → logprob: -14.386054039001465
    6. '==
' → logprob: -14.761054039001465
    7. ' ' → logprob: -15.886054039001465
    8. ')==' → logprob: -16.76105308532715
    9. '```' → logprob: -17.13605308532715
    10. '()==' → logprob: -17.38605308532715

Token 524: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.000179290771484
    4. 'p' → logprob: -18.500179290771484
    5. '  ' → logprob: -19.250179290771484
    6. '```' → logprob: -20.125179290771484
    7. '۰' → logprob: -20.500179290771484
    8. '00' → logprob: -21.000179290771484
    9. 's' → logprob: -21.375179290771484
    10. '=' → logprob: -21.375179290771484

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.750019073486328
    4. 'p' → logprob: -17.375019073486328
    5. '  ' → logprob: -19.125019073486328
    6. '```' → logprob: -19.375019073486328
    7. '    ' → logprob: -19.500019073486328
    8. '     ' → logprob: -21.125019073486328
    9. '۰' → logprob: -21.312519073486328
    10. '       ' → logprob: -21.437519073486328

Token 526: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10272211581468582
    2. ':' → logprob: -2.85272216796875
    3. '                   ' → logprob: -3.22772216796875
    4. '           ' → logprob: -9.22772216796875
    5. '               ' → logprob: -9.47772216796875
    6. ',' → logprob: -9.97772216796875
    7. ' and' → logprob: -11.10272216796875
    8. '):
' → logprob: -11.47772216796875
    9. ':

' → logprob: -11.47772216796875
    10. ':
' → logprob: -12.22772216796875

Token 527: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0029397865291684866
    2. 'temp' → logprob: -6.502939701080322
    3. ' temp' → logprob: -7.002939701080322
    4. '           ' → logprob: -8.50294017791748
    5. '               ' → logprob: -8.75294017791748
    6. '		           ' → logprob: -9.87794017791748
    7. ':
' → logprob: -10.75294017791748
    8. '<|end|>' → logprob: -11.37794017791748
    9. '<|end|>' → logprob: -11.37794017791748
    10. ',' → logprob: -11.75294017791748

Token 528: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.011093802750110626
    2. ' temp' → logprob: -4.511093616485596
    3. '                   ' → logprob: -10.261094093322754
    4. '                       ' → logprob: -12.011094093322754
    5. '               ' → logprob: -13.261094093322754
    6. '	temp' → logprob: -13.386094093322754
    7. 'tmp' → logprob: -14.761094093322754
    8. '[temp' → logprob: -15.136094093322754
    9. '```' → logprob: -15.636094093322754
    10. '$temp' → logprob: -16.136093139648438

Token 529: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.5759548544883728
    2. ' //' → logprob: -0.8259548544883728
    3. '=' → logprob: -11.45095443725586
    4. '//' → logprob: -12.45095443725586
    5. '/=' → logprob: -15.07595443725586
    6. ' ' → logprob: -15.32595443725586
    7. ' ' → logprob: -16.20095443725586
    8. ' =' → logprob: -16.32595443725586
    9. '%=' → logprob: -16.57595443725586
    10. '   ' → logprob: -17.45095443725586

Token 530: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.2166411478538066e-05
    2. '=p' → logprob: -9.875052452087402
    3. 'p' → logprob: -14.625052452087402
    4. '=
' → logprob: -16.625051498413086
    5. ' p' → logprob: -17.625051498413086
    6. '=}' → logprob: -18.625051498413086
    7. '=

' → logprob: -19.625051498413086
    8. '='' → logprob: -19.875051498413086
    9. '=_' → logprob: -19.875051498413086
    10. '=.' → logprob: -20.750051498413086

Token 531: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007099286303855479
    2. ' p' → logprob: -7.2507100105285645
    3. '2' → logprob: -20.000709533691406
    4. '	p' → logprob: -20.000709533691406
    5. '<p' → logprob: -22.750709533691406
    6. ' ' → logprob: -23.125709533691406
    7. '
' → logprob: -23.625709533691406
    8. '   ' → logprob: -23.625709533691406
    9. '_p' → logprob: -23.625709533691406
    10. ''p' → logprob: -24.000709533691406

Token 532: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026026805862784386
    2. '
' → logprob: -3.901026725769043
    3. '                   ' → logprob: -5.651026725769043
    4. '           ' → logprob: -6.651026725769043
    5. 'p' → logprob: -8.026026725769043
    6. '       ' → logprob: -9.526026725769043
    7. ',' → logprob: -9.651026725769043
    8. '                
' → logprob: -9.776026725769043
    9. ' p' → logprob: -10.776026725769043
    10. '<|end|>' → logprob: -11.151026725769043

Token 533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013367865234613419
    2. '           ' → logprob: -4.763367652893066
    3. '                   ' → logprob: -5.638367652893066
    4. '
' → logprob: -7.638367652893066
    5. ',' → logprob: -8.513367652893066
    6. 'p' → logprob: -9.013367652893066
    7. '       ' → logprob: -9.138367652893066
    8. '<|end|>' → logprob: -9.763367652893066
    9. '                
' → logprob: -9.888367652893066
    10. ',
' → logprob: -10.513367652893066

Token 534: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.3149755001068115
    2. ' result' → logprob: -1.3149755001068115
    3. '               ' → logprob: -6.439975738525391
    4. '                   ' → logprob: -9.18997573852539
    5. '_result' → logprob: -12.56497573852539
    6. ',result' → logprob: -12.68997573852539
    7. '=result' → logprob: -13.43997573852539
    8. '[result' → logprob: -13.93997573852539
    9. '```' → logprob: -14.06497573852539
    10. '           ' → logprob: -14.43997573852539

Token 535: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.583122968673706
    2. ' -=' → logprob: -0.833122968673706
    3. '-' → logprob: -5.708123207092285
    4. ' -' → logprob: -6.208123207092285
    5. '=' → logprob: -6.333123207092285
    6. ' =' → logprob: -10.458123207092285
    7. '*=' → logprob: -10.958123207092285
    8. ' *=' → logprob: -14.083123207092285
    9. '//=' → logprob: -14.083123207092285
    10. '   ' → logprob: -14.333123207092285

Token 536: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -9.639096970204264e-05
    2. ' result' → logprob: -9.250096321105957
    3. '(result' → logprob: -15.500096321105957
    4. '	result' → logprob: -19.125097274780273
    5. '$result' → logprob: -19.625097274780273
    6. 'response' → logprob: -20.250097274780273
    7. '=result' → logprob: -20.375097274780273
    8. '   ' → logprob: -21.250097274780273
    9. '[result' → logprob: -21.750097274780273
    10. '
' → logprob: -21.750097274780273

Token 537: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.05522628128528595
    2. ' //' → logprob: -2.9302263259887695
    3. '*' → logprob: -8.80522632598877
    4. '```' → logprob: -10.05522632598877
    5. '   ' → logprob: -10.18022632598877
    6. '               ' → logprob: -10.43022632598877
    7. '#' → logprob: -10.80522632598877
    8. ' ' → logprob: -11.30522632598877
    9. '           ' → logprob: -11.30522632598877
    10. '                   ' → logprob: -11.93022632598877

Token 538: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7610454708337784e-05
    2. ' p' → logprob: -10.500027656555176
    3. '	p' → logprob: -19.87502670288086
    4. '_p' → logprob: -21.12502670288086
    5. '*p' → logprob: -21.12502670288086
    6. '<p' → logprob: -21.37502670288086
    7. '   ' → logprob: -22.25002670288086
    8. '$p' → logprob: -23.00002670288086
    9. '[p' → logprob: -23.50002670288086
    10. '&p' → logprob: -23.50002670288086

Token 539: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008487156592309475
    2. 'p' → logprob: -5.383487224578857
    3. '
' → logprob: -5.633487224578857
    4. ' p' → logprob: -8.7584867477417
    5. '               ' → logprob: -10.3834867477417
    6. '            
' → logprob: -10.3834867477417
    7. '       ' → logprob: -10.5084867477417
    8. '   ' → logprob: -11.5084867477417
    9. ',' → logprob: -11.8834867477417
    10. ',p' → logprob: -12.7584867477417

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001164864981546998
    2. ' p' → logprob: -7.37616491317749
    3. 'p' → logprob: -8.376164436340332
    4. '               ' → logprob: -8.876164436340332
    5. '       ' → logprob: -9.251164436340332
    6. ' ' → logprob: -11.626164436340332
    7. ',' → logprob: -11.751164436340332
    8. '          ' → logprob: -11.751164436340332
    9. ',p' → logprob: -11.876164436340332
    10. '   ' → logprob: -11.876164436340332

Token 541: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04112379252910614
    2. 'p' (adapté à ' p') → logprob: -3.416123867034912
    3. ' p' → logprob: -5.041123867034912
    4. '       ' → logprob: -7.166123867034912
    5. '   ' → logprob: -9.666123390197754
    6. '```' → logprob: -10.416123390197754
    7. '
' → logprob: -10.666123390197754
    8. ' ' → logprob: -10.916123390197754
    9. ',' → logprob: -11.041123390197754
    10. '            
' → logprob: -11.291123390197754

Token 542: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011951587162911892
    2. ' +=' → logprob: -4.511951446533203
    3. '=' → logprob: -7.011951446533203
    4. ' =' → logprob: -13.386951446533203
    5. '+' → logprob: -14.886951446533203
    6. ']+=' → logprob: -15.761951446533203
    7. ' ' → logprob: -16.136951446533203
    8. '```' → logprob: -17.011951446533203
    9. '+='' → logprob: -17.386951446533203
    10. '++' → logprob: -17.761951446533203

Token 543: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۱' → logprob: -21.250001907348633
    4. '```' → logprob: -21.437501907348633
    5. '   ' → logprob: -21.875001907348633
    6. '１' → logprob: -22.125001907348633
    7. '  ' → logprob: -22.187501907348633
    8. '(' → logprob: -22.937501907348633
    9. '१' → logprob: -22.937501907348633
    10. '১' → logprob: -23.062501907348633

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۱' → logprob: -21.125
    4. '```' → logprob: -21.4375
    5. '１' → logprob: -21.5625
    6. '  ' → logprob: -22.3125
    7. '१' → logprob: -22.3125
    8. '   ' → logprob: -22.4375
    9. '১' → logprob: -22.625
    10. '(' → logprob: -23.0

Token 545: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001584850688232109
    2. ' p' → logprob: -8.750158309936523
    3. '1' → logprob: -18.125158309936523
    4. '	p' → logprob: -19.000158309936523
    5. '==' → logprob: -19.125158309936523
    6. '2' → logprob: -19.500158309936523
    7. '(p' → logprob: -19.750158309936523
    8. '$p' → logprob: -20.125158309936523
    9. '_p' → logprob: -20.250158309936523
    10. '   ' → logprob: -20.375158309936523

Token 547: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -5.2166411478538066e-05
    2. ' ==' → logprob: -9.875052452087402
    3. '===' → logprob: -14.625052452087402
    4. '==
' → logprob: -15.875052452087402
    5. '=' → logprob: -17.250051498413086
    6. ']==' → logprob: -18.375051498413086
    7. 'p' → logprob: -18.500051498413086
    8. '()==' → logprob: -18.875051498413086
    9. '```' → logprob: -18.875051498413086
    10. '2' → logprob: -19.250051498413086

Token 548: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '1' → logprob: -18.75
    4. '3' → logprob: -20.25
    5. '{' → logprob: -21.875
    6. '۲' → logprob: -22.625
    7. '   ' → logprob: -22.875
    8. '₂' → logprob: -23.125
    9. '#' → logprob: -23.25
    10. '```' → logprob: -23.25

Token 549: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '3' → logprob: -20.375
    4. '1' → logprob: -20.75
    5. '{' → logprob: -23.375
    6. '=' → logprob: -23.5
    7. '۲' → logprob: -23.75
    8. '#' → logprob: -23.875
    9. '  ' → logprob: -24.25
    10. '   ' → logprob: -24.5

Token 550: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3868771195411682
    2. ' else' → logprob: -1.1368770599365234
    3. '2' → logprob: -12.511877059936523
    4. '3' → logprob: -14.261877059936523
    5. '0' → logprob: -14.761877059936523
    6. '1' → logprob: -14.886877059936523
    7. '	else' → logprob: -15.261877059936523
    8. '6' → logprob: -15.511877059936523
    9. ',' → logprob: -16.511877059936523
    10. '_else' → logprob: -16.511877059936523

Token 551: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.50000762939453
    4. '1' → logprob: -17.00000762939453
    5. '6' → logprob: -19.37500762939453
    6. '```' → logprob: -19.37500762939453
    7. '+' → logprob: -19.75000762939453
    8. '۲' → logprob: -20.12500762939453
    9. '\
' → logprob: -20.25000762939453
    10. '    ' → logprob: -20.25000762939453

Token 552: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.25000286102295
    3. '1' → logprob: -14.37500286102295
    4. '6' → logprob: -19.500001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '+' → logprob: -19.875001907348633
    7. '4' → logprob: -20.375001907348633
    8. '```' → logprob: -20.500001907348633
    9. '  ' → logprob: -21.437501907348633
    10. '	' → logprob: -21.437501907348633

Token 553: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001221774611622095
    2. 'return' → logprob: -6.876221656799316
    3. '
' → logprob: -9.376221656799316
    4. '<|end|>' → logprob: -10.126221656799316
    5. '```' → logprob: -10.501221656799316
    6. ' return' → logprob: -10.876221656799316
    7. '   ' → logprob: -12.501221656799316
    8. '	' → logprob: -12.751221656799316
    9. '           ' → logprob: -12.876221656799316
    10. '        
' → logprob: -13.126221656799316

Token 555: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007854326628148556
    2. 'return' → logprob: -4.882854461669922
    3. ' return' → logprob: -8.882854461669922
    4. 'if' (adapté à ' if') → logprob: -10.132854461669922
    5. ' if' → logprob: -10.132854461669922
    6. '	' → logprob: -11.632854461669922
    7. '	return' → logprob: -11.882854461669922
    8. '   ' → logprob: -12.257854461669922
    9. '<|end|>' → logprob: -12.257854461669922
    10. '```' → logprob: -14.132854461669922

Token 556: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0015024791937321424
    2. ' temp' → logprob: -6.501502513885498
    3. 'tmp' → logprob: -16.251502990722656
    4. '	temp' → logprob: -16.751502990722656
    5. '   ' → logprob: -18.626502990722656
    6. '$temp' → logprob: -18.626502990722656
    7. '(temp' → logprob: -19.001502990722656
    8. ' ' → logprob: -19.626502990722656
    9. 'tem' → logprob: -19.751502990722656
    10. '[temp' → logprob: -19.876502990722656

Token 557: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.048590321093797684
    2. ' >' → logprob: -3.0485904216766357
    3. ' ' → logprob: -13.423590660095215
    4. ' ' → logprob: -13.798590660095215
    5. ' !=' → logprob: -15.923590660095215
    6. '   ' → logprob: -16.0485897064209
    7. '!=' → logprob: -16.7985897064209
    8. '&gt' → logprob: -16.9235897064209
    9. '1' → logprob: -17.2985897064209
    10. '```' → logprob: -17.4235897064209

Token 558: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. ' ' → logprob: -20.62502098083496
    4. '```' → logprob: -20.62502098083496
    5. '۱' → logprob: -21.25002098083496
    6. '   ' → logprob: -21.50002098083496
    7. '2' → logprob: -22.00002098083496
    8. '...' → logprob: -22.25002098083496
    9. '>' → logprob: -22.25002098083496
    10. '１' → logprob: -22.37502098083496

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -19.875
    4. '۱' → logprob: -20.125
    5. '１' → logprob: -21.0
    6. '   ' → logprob: -21.0
    7. '...' → logprob: -21.125
    8. '>' → logprob: -22.125
    9. '१' → logprob: -22.125
    10. '{' → logprob: -22.3125

Token 560: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2519461214542389
    2. ':' → logprob: -1.5019460916519165
    3. '           ' → logprob: -11.876946449279785
    4. ':
' → logprob: -12.376946449279785
    5. '       ' → logprob: -13.126946449279785
    6. ':

' → logprob: -13.501946449279785
    7. '=' → logprob: -13.751946449279785
    8. '):
' → logprob: -14.376946449279785
    9. ' :
' → logprob: -14.751946449279785
    10. '   ' → logprob: -16.00194549560547

Token 561: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003076950670219958
    2. ' result' → logprob: -8.6253080368042
    3. 'result' → logprob: -9.1253080368042
    4. ':
' → logprob: -11.2503080368042
    5. '
' → logprob: -13.0003080368042
    6. '```' → logprob: -13.2503080368042
    7. ',result' → logprob: -14.6253080368042
    8. '       ' → logprob: -15.0003080368042
    9. ':' → logprob: -15.1253080368042
    10. '               ' → logprob: -15.5003080368042

Token 562: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.38692235946655273
    2. ' result' → logprob: -1.1369223594665527
    3. '           ' → logprob: -10.011922836303711
    4. '               ' → logprob: -13.136922836303711
    5. '       ' → logprob: -13.386922836303711
    6. '```' → logprob: -13.511922836303711
    7. '	result' → logprob: -14.261922836303711
    8. '   ' → logprob: -15.011922836303711
    9. ',result' → logprob: -15.761922836303711
    10. '[result' → logprob: -16.01192283630371

Token 563: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5760164856910706
    2. '-=' → logprob: -0.8260164856910706
    3. '=' → logprob: -9.701016426086426
    4. '-' → logprob: -11.576016426086426
    5. '*=' → logprob: -12.701016426086426
    6. '   ' → logprob: -13.201016426086426
    7. ' =' → logprob: -14.826016426086426
    8. ' -' → logprob: -15.076016426086426
    9. ' *=' → logprob: -15.201016426086426
    10. '    ' → logprob: -15.826016426086426

Token 564: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004078639671206474
    2. ' result' → logprob: -5.5040788650512695
    3. '(result' → logprob: -15.87907886505127
    4. '	result' → logprob: -16.629077911376953
    5. '$result' → logprob: -18.254077911376953
    6. '=result' → logprob: -18.504077911376953
    7. '1' → logprob: -19.629077911376953
    8. '[result' → logprob: -19.629077911376953
    9. ' ' → logprob: -20.254077911376953
    10. '.result' → logprob: -20.879077911376953

Token 565: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1602294147014618
    2. ' //' → logprob: -1.9102294445037842
    3. '#' → logprob: -13.285229682922363
    4. ' ' → logprob: -13.535229682922363
    5. '   ' → logprob: -14.410229682922363
    6. ' ' → logprob: -14.410229682922363
    7. '```' → logprob: -14.535229682922363
    8. '/' → logprob: -15.535229682922363
    9. '*' → logprob: -16.160228729248047
    10. '...' → logprob: -16.160228729248047

Token 566: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -2.7729658540920354e-05
    2. ' temp' → logprob: -10.500027656555176
    3. 'tmp' → logprob: -16.125028610229492
    4. '(temp' → logprob: -19.750028610229492
    5. '	temp' → logprob: -20.000028610229492
    6. '[temp' → logprob: -21.125028610229492
    7. '$temp' → logprob: -21.250028610229492
    8. 'result' → logprob: -21.500028610229492
    9. '_temp' → logprob: -21.500028610229492
    10. 'tem' → logprob: -21.625028610229492

Token 567: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04286135360598564
    2. 'return' → logprob: -3.2928614616394043
    3. ' return' → logprob: -6.042861461639404
    4. '
' → logprob: -6.167861461639404
    5. '<|end|>' → logprob: -8.917860984802246
    6. '   ' → logprob: -9.167860984802246
    7. '	return' → logprob: -10.292860984802246
    8. '	' → logprob: -10.667860984802246
    9. '```' → logprob: -11.792860984802246
    10. ':return' → logprob: -12.042860984802246

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024788661394268274
    2. 'return' → logprob: -6.377479076385498
    3. ' return' → logprob: -7.752479076385498
    4. '
' → logprob: -8.75247859954834
    5. '	return' → logprob: -9.62747859954834
    6. '	' → logprob: -9.75247859954834
    7. '<|end|>' → logprob: -10.00247859954834
    8. '   ' → logprob: -11.75247859954834
    9. ':return' → logprob: -13.12747859954834
    10. '        
' → logprob: -13.50247859954834

Token 569: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16884616017341614
    2. 'return' (adapté à ' return') → logprob: -1.9188461303710938
    3. ' return' → logprob: -4.793846130371094
    4. '   ' → logprob: -9.043846130371094
    5. '	return' → logprob: -9.293846130371094
    6. '
' → logprob: -9.543846130371094
    7. '	' → logprob: -11.293846130371094
    8. '```' → logprob: -12.543846130371094
    9. ':return' → logprob: -12.918846130371094
    10. ' ' → logprob: -13.793846130371094

Token 570: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0001584850688232109
    2. ' result' → logprob: -8.750158309936523
    3. 'int' → logprob: -19.625158309936523
    4. '(result' → logprob: -19.875158309936523
    5. '	result' → logprob: -20.875158309936523
    6. '$result' → logprob: -22.125158309936523
    7. '=result' → logprob: -22.375158309936523
    8. 'res' → logprob: -22.625158309936523
    9. ' ' → logprob: -22.750158309936523
    10. 'return' → logprob: -23.000158309936523

Token 571: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19314882159233093
    2. '
' → logprob: -1.8181488513946533
    3. '    
' → logprob: -5.193148612976074
    4. '<|end|>' → logprob: -5.443148612976074
    5. 'def' → logprob: -6.318148612976074
    6. '```' → logprob: -7.193148612976074
    7. ' def' → logprob: -8.318148612976074
    8. '<|end|>' → logprob: -8.443148612976074
    9. '        
' → logprob: -9.193148612976074
    10. '  
' → logprob: -9.193148612976074

Token 572: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13244178891181946
    2. '   ' → logprob: -2.382441759109497
    3. '
' → logprob: -4.007441997528076
    4. ' def' → logprob: -4.382441997528076
    5. '    
' → logprob: -7.382441997528076
    6. '	def' → logprob: -8.882441520690918
    7. '```' → logprob: -9.507441520690918
    8. '        
' → logprob: -10.007441520690918
    9. '<|end|>' → logprob: -10.257441520690918
    10. 'import' → logprob: -10.382441520690918

Token 573: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.97024549683556e-05
    2. ' def' → logprob: -9.500080108642578
    3. '   ' → logprob: -12.250080108642578
    4. '
' → logprob: -17.875080108642578
    5. '    
' → logprob: -19.125080108642578
    6. '_def' → logprob: -19.500080108642578
    7. '	def' → logprob: -19.625080108642578
    8. '@' → logprob: -20.375080108642578
    9. '```' → logprob: -20.500080108642578
    10. ' ' → logprob: -21.000080108642578

Token 574: ' _' (ID: 1175)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -3.976922744186595e-05
    2. ' _' → logprob: -10.250040054321289
    3. '_def' → logprob: -12.375040054321289
    4. '_' → logprob: -16.25004005432129
    5. '_dis' → logprob: -17.12504005432129
    6. '_dist' → logprob: -17.50004005432129
    7. '_mod' → logprob: -18.12504005432129
    8. '_DIV' → logprob: -18.62504005432129
    9. '_del' → logprob: -18.62504005432129
    10. '_de' → logprob: -19.00004005432129

Token 575: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.306760805164231e-05
    2. '_div' → logprob: -11.25001335144043
    3. ' divis' → logprob: -16.75001335144043
    4. 'def' → logprob: -17.37501335144043
    5. '	div' → logprob: -20.62501335144043
    6. '-div' → logprob: -21.00001335144043
    7. 'Div' → logprob: -21.25001335144043
    8. '.div' → logprob: -21.37501335144043
    9. '(div' → logprob: -21.50001335144043
    10. '<div' → logprob: -21.87501335144043

Token 576: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00024168188974726945
    2. 's' → logprob: -8.50024127960205
    3. '_is' → logprob: -11.37524127960205
    4. '_div' → logprob: -11.75024127960205
    5. 'isible' → logprob: -12.37524127960205
    6. '_' → logprob: -12.75024127960205
    7. '```' → logprob: -12.87524127960205
    8. 'iors' → logprob: -14.00024127960205
    9. 'ers' → logprob: -14.12524127960205
    10. 'idors' → logprob: -14.25024127960205

Token 577: 'ors' (ID: 914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012000000104308128
    2. 'is' → logprob: -4.63700008392334
    3. 'ors' → logprob: -6.13700008392334
    4. '_s' → logprob: -10.38700008392334
    5. 'tors' → logprob: -11.26200008392334
    6. 'rs' → logprob: -12.26200008392334
    7. '_' → logprob: -12.38700008392334
    8. 'iors' → logprob: -12.51200008392334
    9. '   ' → logprob: -13.01200008392334
    10. '```' → logprob: -13.13700008392334

Token 578: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018189631402492523
    2. '(' → logprob: -4.018189430236816
    3. '(phi' → logprob: -10.393189430236816
    4. ' (' → logprob: -12.268189430236816
    5. '(
' → logprob: -12.768189430236816
    6. '(s' → logprob: -13.768189430236816
    7. 'self' → logprob: -15.018189430236816
    8. '(Self' → logprob: -17.143190383911133
    9. '(sel' → logprob: -17.268190383911133
    10. '(

' → logprob: -17.643190383911133

Token 579: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012952389661222696
    2. '(' → logprob: -6.75129508972168
    3. 'self' → logprob: -9.50129508972168
    4. ')' → logprob: -11.00129508972168
    5. ' (' → logprob: -11.37629508972168
    6. ')(' → logprob: -11.87629508972168
    7. '(n' → logprob: -12.25129508972168
    8. '(phi' → logprob: -12.37629508972168
    9. ',' → logprob: -12.87629508972168
    10. ' self' → logprob: -13.37629508972168

Token 580: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025739942211657763
    2. 'n' → logprob: -6.0025739669799805
    3. ' self' → logprob: -9.25257396697998
    4. 'phi' → logprob: -13.37757396697998
    5. '   ' → logprob: -15.00257396697998
    6. ')' → logprob: -15.50257396697998
    7. ' n' → logprob: -15.75257396697998
    8. '(self' → logprob: -16.252574920654297
    9. 's' → logprob: -16.877574920654297
    10. '
' → logprob: -17.127574920654297

Token 581: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18522995710372925
    2. '):' → logprob: -2.185230016708374
    3. 'self' → logprob: -3.560230016708374
    4. '):
' → logprob: -4.685229778289795
    5. '(self' → logprob: -4.685229778289795
    6. '   ' → logprob: -4.810229778289795
    7. ':' → logprob: -7.060229778289795
    8. '       ' → logprob: -8.435230255126953
    9. ' self' → logprob: -8.560230255126953
    10. 'def' → logprob: -8.810230255126953

Token 582: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.7120533811976202e-05
    2. ' int' → logprob: -11.125017166137695
    3. 'n' → logprob: -13.250017166137695
    4. ')' → logprob: -14.375017166137695
    5. '   ' → logprob: -18.750017166137695
    6. '```' → logprob: -18.750017166137695
    7. '(int' → logprob: -19.000017166137695
    8. ':int' → logprob: -19.125017166137695
    9. '[int' → logprob: -19.375017166137695
    10. '
' → logprob: -20.250017166137695

Token 583: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001408686046488583
    2. '):
' → logprob: -6.751408576965332
    3. '):' → logprob: -8.376408576965332
    4. 'self' → logprob: -12.126408576965332
    5. '):
' → logprob: -13.876408576965332
    6. '   ' → logprob: -14.126408576965332
    7. ')->' → logprob: -14.876408576965332
    8. ' )' → logprob: -15.251408576965332
    9. ':' → logprob: -16.25140953063965
    10. '(self' → logprob: -16.37640953063965

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028777492698282003
    2. '   ' → logprob: -6.877877712249756
    3. 'd' → logprob: -7.627877712249756
    4. 'div' → logprob: -7.877877712249756
    5. 'for' → logprob: -8.377878189086914
    6. 'yield' → logprob: -8.377878189086914
    7. ' for' → logprob: -8.627878189086914
    8. 'n' → logprob: -9.127878189086914
    9. '```' → logprob: -9.627878189086914
    10. 'def' → logprob: -10.002878189086914

Token 585: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' (adapté à ' div') → logprob: -0.15816931426525116
    2. '   ' → logprob: -2.6581692695617676
    3. '       ' → logprob: -3.4081692695617676
    4. 'i' → logprob: -3.5331692695617676
    5. ' divis' → logprob: -5.158169269561768
    6. 'res' → logprob: -5.908169269561768
    7. 'd' → logprob: -6.283169269561768
    8. ' div' → logprob: -6.408169269561768
    9. 'result' → logprob: -7.033169269561768
    10. ' i' → logprob: -7.533169269561768

Token 586: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12698669731616974
    2. 'is' → logprob: -2.1269867420196533
    3. '=' → logprob: -11.126986503601074
    4. ' =' → logprob: -11.251986503601074
    5. '   ' → logprob: -12.501986503601074
    6. '_list' → logprob: -12.626986503601074
    7. 'isor' → logprob: -12.626986503601074
    8. '=[]' → logprob: -12.626986503601074
    9. '_' → logprob: -13.001986503601074
    10. '_s' → logprob: -13.251986503601074

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05715281516313553
    2. '=' → logprob: -2.93215274810791
    3. '=[]
' → logprob: -6.68215274810791
    4. '=[]' → logprob: -7.05715274810791
    5. '   ' → logprob: -9.05715274810791
    6. '=[]
' → logprob: -11.43215274810791
    7. '_' → logprob: -12.30715274810791
    8. '       ' → logprob: -12.55715274810791
    9. '=set' → logprob: -12.55715274810791
    10. '_list' → logprob: -12.93215274810791

Token 588: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08372236043214798
    2. '{' → logprob: -2.8337223529815674
    3. '[]' → logprob: -4.3337225914001465
    4. '[]
' → logprob: -4.8337225914001465
    5. 'set' → logprob: -7.9587225914001465
    6. ' [' → logprob: -9.833722114562988
    7. '[n' → logprob: -11.083722114562988
    8. ' set' → logprob: -12.083722114562988
    9. ' []' → logprob: -12.208722114562988
    10. '[i' → logprob: -12.583722114562988

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001514557225164026
    2. ' for' → logprob: -9.500151634216309
    3. 'for' → logprob: -9.625151634216309
    4. '   ' → logprob: -11.875151634216309
    5. '	' → logprob: -13.500151634216309
    6. 'import' → logprob: -14.125151634216309
    7. '           ' → logprob: -15.125151634216309
    8. '
' → logprob: -15.250151634216309
    9. ',' → logprob: -15.250151634216309
    10. '	   ' → logprob: -15.500151634216309

Token 590: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02328857034444809
    2. 'for' → logprob: -3.7732884883880615
    3. '       ' → logprob: -11.27328872680664
    4. '   ' → logprob: -11.52328872680664
    5. ' for' → logprob: -11.64828872680664
    6. ' i' → logprob: -11.89828872680664
    7. 'limit' → logprob: -13.27328872680664
    8. 'import' → logprob: -13.52328872680664
    9. 'sqrt' → logprob: -14.52328872680664
    10. 'd' → logprob: -14.77328872680664

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04302351549267769
    2. ' =' → logprob: -3.1680235862731934
    3. 'n' → logprob: -10.918023109436035
    4. ' in' → logprob: -13.043023109436035
    5. 'nt' → logprob: -13.543023109436035
    6. ' ' → logprob: -13.918023109436035
    7. ',' → logprob: -15.043023109436035
    8. 'in' → logprob: -15.168023109436035
    9. '   ' → logprob: -15.293023109436035
    10. 'import' → logprob: -15.418023109436035

Token 592: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030886884778738022
    2. '2' → logprob: -3.5308868885040283
    3. ' ' → logprob: -6.780886650085449
    4. '   ' → logprob: -14.90588665008545
    5. '0' → logprob: -17.155887603759766
    6. '  ' → logprob: -17.280887603759766
    7. '    ' → logprob: -17.280887603759766
    8. '       ' → logprob: -17.905887603759766
    9. '=' → logprob: -18.030887603759766
    10. '```' → logprob: -18.155887603759766

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04858850687742233
    2. '2' → logprob: -3.048588514328003
    3. ' ' → logprob: -13.673588752746582
    4. 'int' → logprob: -17.798587799072266
    5. 'i' → logprob: -19.048587799072266
    6. '   ' → logprob: -19.423587799072266
    7. '=' → logprob: -19.548587799072266
    8. '0' → logprob: -19.798587799072266
    9. '```' → logprob: -20.048587799072266
    10. '3' → logprob: -20.548587799072266

Token 594: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10845897346735
    2. '       ' → logprob: -2.483458995819092
    3. 'while' → logprob: -5.233458995819092
    4. '<|end|>' → logprob: -5.983458995819092
    5. ' 
' → logprob: -6.108458995819092
    6. '        
' → logprob: -6.858458995819092
    7. '=' → logprob: -6.983458995819092
    8. ' while' → logprob: -6.983458995819092
    9. ':' → logprob: -7.108458995819092
    10. ' =' → logprob: -7.108458995819092

Token 595: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06767136603593826
    2. '       ' → logprob: -2.942671298980713
    3. 'while' → logprob: -4.817671298980713
    4. ' while' → logprob: -7.317671298980713
    5. ' 
' → logprob: -7.442671298980713
    6. ':' → logprob: -7.567671298980713
    7. '=' → logprob: -7.567671298980713
    8. '        
' → logprob: -7.692671298980713
    9. ':
' → logprob: -8.442671775817871
    10. '<|end|>' → logprob: -8.567671775817871

Token 596: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5333585143089294
    2. ' while' → logprob: -0.9083585143089294
    3. '
' → logprob: -5.033358573913574
    4. '       ' → logprob: -6.033358573913574
    5. 'import' → logprob: -8.033358573913574
    6. 'i' → logprob: -8.283358573913574
    7. 'n' → logprob: -8.658358573913574
    8. '	while' → logprob: -9.033358573913574
    9. ' i' → logprob: -9.158358573913574
    10. '```' → logprob: -9.408358573913574

Token 597: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38688692450523376
    2. ' i' → logprob: -1.1368869543075562
    3. '(i' → logprob: -11.261886596679688
    4. '	i' → logprob: -13.511886596679688
    5. ' ' → logprob: -14.386886596679688
    6. '   ' → logprob: -14.511886596679688
    7. 'True' → logprob: -15.136886596679688
    8. '{i' → logprob: -16.261886596679688
    9. '$i' → logprob: -17.011886596679688
    10. '  ' → logprob: -17.261886596679688

Token 598: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.3501557409763336
    2. ' *' → logprob: -1.8501557111740112
    3. '<=' → logprob: -2.600155830383301
    4. '*' → logprob: -3.225155830383301
    5. ' <=' → logprob: -3.725155830383301
    6. '**' → logprob: -9.4751558303833
    7. 'i' → logprob: -11.9751558303833
    8. ' i' → logprob: -13.3501558303833
    9. '[i' → logprob: -14.2251558303833
    10. ' ' → logprob: -14.3501558303833

Token 599: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '	i' → logprob: -18.750001907348633
    5. '*i' → logprob: -19.000001907348633
    6. ' ' → logprob: -19.875001907348633
    7. '_i' → logprob: -20.250001907348633
    8. '```' → logprob: -20.375001907348633
    9. '
' → logprob: -20.625001907348633
    10. '{i' → logprob: -20.750001907348633

Token 600: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.25192990899086
    2. ' <=' → logprob: -1.5019298791885376
    3. ')<=' → logprob: -14.751930236816406
    4. ']<=' → logprob: -15.501930236816406
    5. '≤' → logprob: -15.876930236816406
    6. ' ' → logprob: -17.251930236816406
    7. ' ≤' → logprob: -17.251930236816406
    8. '<' → logprob: -18.001930236816406
    9. '```' → logprob: -18.001930236816406
    10. '<|end|>' → logprob: -19.001930236816406

Token 601: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023095356300473213
    2. ' n' → logprob: -8.37523078918457
    3. '	n' → logprob: -15.00023078918457
    4. '(n' → logprob: -19.12523078918457
    5. '$n' → logprob: -19.12523078918457
    6. '   ' → logprob: -19.50023078918457
    7. '_n' → logprob: -19.62523078918457
    8. '[n' → logprob: -19.87523078918457
    9. '```' → logprob: -20.12523078918457
    10. ')n' → logprob: -20.37523078918457

Token 602: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4743975102901459
    2. ':' → logprob: -0.9743975400924683
    3. '       ' → logprob: -8.349397659301758
    4. '):
' → logprob: -10.224397659301758
    5. ':
' → logprob: -10.974397659301758
    6. '           ' → logprob: -11.849397659301758
    7. ' :
' → logprob: -12.349397659301758
    8. ':i' → logprob: -12.474397659301758
    9. ' and' → logprob: -13.099397659301758
    10. ':

' → logprob: -13.224397659301758

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05332551151514053
    2. '       ' → logprob: -3.0533254146575928
    3. ':
' → logprob: -6.053325653076172
    4. ':' → logprob: -6.303325653076172
    5. ' if' → logprob: -9.303325653076172
    6. '```' → logprob: -9.303325653076172
    7. '   ' → logprob: -9.428325653076172
    8. ',' → logprob: -9.678325653076172
    9. '<|end|>' → logprob: -10.053325653076172
    10. '
' → logprob: -10.053325653076172

Token 604: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4644034206867218
    2. ' if' → logprob: -1.4644033908843994
    3. 'if' (adapté à ' if') → logprob: -1.9644033908843994
    4. '
' → logprob: -11.96440315246582
    5. '   ' → logprob: -12.08940315246582
    6. '```' → logprob: -12.08940315246582
    7. ' i' → logprob: -12.96440315246582
    8. '       ' → logprob: -12.96440315246582
    9. '               ' → logprob: -13.21440315246582
    10. 'i' → logprob: -13.21440315246582

Token 605: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07888989895582199
    2. ' n' → logprob: -2.578889846801758
    3. '	n' → logprob: -15.828889846801758
    4. '           ' → logprob: -18.203889846801758
    5. '(n' → logprob: -18.203889846801758
    6. '   ' → logprob: -18.328889846801758
    7. ' ' → logprob: -18.703889846801758
    8. '       ' → logprob: -19.203889846801758
    9. '_n' → logprob: -20.453889846801758
    10. ' ' → logprob: -20.453889846801758

Token 606: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07897131145000458
    2. '%' → logprob: -2.5789713859558105
    3. '%i' → logprob: -9.453970909118652
    4. ' ' → logprob: -12.953970909118652
    5. '%n' → logprob: -14.703970909118652
    6. ' ' → logprob: -16.70397186279297
    7. '%e' → logprob: -16.82897186279297
    8. '%s' → logprob: -16.95397186279297
    9. '```' → logprob: -16.95397186279297
    10. '%d' → logprob: -17.20397186279297

Token 607: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.014684110297821e-06
    2. ' i' → logprob: -11.625008583068848
    3. '	i' → logprob: -17.500009536743164
    4. '{i' → logprob: -17.875009536743164
    5. '[i' → logprob: -18.625009536743164
    6. '   ' → logprob: -19.250009536743164
    7. '(i' → logprob: -19.625009536743164
    8. '%i' → logprob: -20.500009536743164
    9. ')i' → logprob: -20.625009536743164
    10. '*i' → logprob: -20.750009536743164

Token 608: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.126929372549057
    2. ' ==' → logprob: -2.12692928314209
    3. '=' → logprob: -14.37692928314209
    4. '===' → logprob: -14.75192928314209
    5. '==
' → logprob: -15.75192928314209
    6. ')==' → logprob: -16.251930236816406
    7. '()==' → logprob: -17.001930236816406
    8. ']==' → logprob: -17.251930236816406
    9. '0' → logprob: -17.876930236816406
    10. '```' → logprob: -19.376930236816406

Token 609: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'i' → logprob: -16.125028610229492
    4. '   ' → logprob: -19.750028610229492
    5. ' i' → logprob: -20.750028610229492
    6. '```' → logprob: -21.000028610229492
    7. '۰' → logprob: -21.375028610229492
    8. '  ' → logprob: -21.875028610229492
    9. '	' → logprob: -23.250028610229492
    10. '=' → logprob: -23.437528610229492

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'i' → logprob: -14.500005722045898
    4. '   ' → logprob: -20.3750057220459
    5. '۰' → logprob: -20.7500057220459
    6. ' i' → logprob: -21.0000057220459
    7. '```' → logprob: -21.5000057220459
    8. 'o' → logprob: -22.1250057220459
    9. '  ' → logprob: -22.6875057220459
    10. 's' → logprob: -22.7500057220459

Token 611: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04889925196766853
    2. ':' → logprob: -3.0488991737365723
    3. '               ' → logprob: -8.54889965057373
    4. '           ' → logprob: -9.79889965057373
    5. '):
' → logprob: -10.04889965057373
    6. '       ' → logprob: -12.54889965057373
    7. ':

' → logprob: -12.54889965057373
    8. ':
' → logprob: -12.67389965057373
    9. '```' → logprob: -12.92389965057373
    10. '{
' → logprob: -13.29889965057373

Token 612: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012889248318970203
    2. '           ' → logprob: -6.751288890838623
    3. '```' → logprob: -9.626289367675781
    4. ':
' → logprob: -11.376289367675781
    5. '       ' → logprob: -11.876289367675781
    6. '              ' → logprob: -12.126289367675781
    7. ',' → logprob: -12.376289367675781
    8. ':' → logprob: -12.376289367675781
    9. '{
' → logprob: -12.501289367675781
    10. '[' → logprob: -13.001289367675781

Token 613: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' (adapté à ' div') → logprob: -0.005836130119860172
    2. ' div' → logprob: -5.255836009979248
    3. '               ' → logprob: -7.505836009979248
    4. '           ' → logprob: -10.005836486816406
    5. 'yield' → logprob: -12.880836486816406
    6. 'if' → logprob: -13.005836486816406
    7. '	div' → logprob: -13.255836486816406
    8. '                   ' → logprob: -15.380836486816406
    9. '<div' → logprob: -15.505836486816406
    10. '
' → logprob: -16.130836486816406

Token 614: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -14.250000953674316
    3. '       ' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '           ' → logprob: -17.125001907348633
    6. ' s' → logprob: -17.875001907348633
    7. '.' → logprob: -18.000001907348633
    8. 'ss' → logprob: -19.250001907348633
    9. '.s' → logprob: -19.375001907348633
    10. '        ' → logprob: -19.500001907348633

Token 615: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008619539439678192
    2. '.' → logprob: -4.75861930847168
    3. ' .' → logprob: -13.63361930847168
    4. '.app' → logprob: -13.75861930847168
    5. '.extend' → logprob: -13.88361930847168
    6. '.ap' → logprob: -14.00861930847168
    7. '.Append' → logprob: -14.88361930847168
    8. 'append' → logprob: -14.88361930847168
    9. '.py' → logprob: -15.63361930847168
    10. '.insert' → logprob: -17.75861930847168

Token 616: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03809209540486336
    2. 'i' → logprob: -3.2880921363830566
    3. ' i' → logprob: -9.913091659545898
    4. '(' → logprob: -14.413091659545898
    5. '(
' → logprob: -15.663091659545898
    6. ' (' → logprob: -15.788091659545898
    7. '	i' → logprob: -16.0380916595459
    8. '   ' → logprob: -17.0380916595459
    9. '1' → logprob: -18.1630916595459
    10. '{i' → logprob: -19.5380916595459

Token 617: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00531013123691082
    2. ')' → logprob: -5.25531005859375
    3. '               ' → logprob: -9.63031005859375
    4. '           ' → logprob: -12.25531005859375
    5. ')
' → logprob: -13.00531005859375
    6. ');
' → logprob: -13.38031005859375
    7. ')

' → logprob: -14.38031005859375
    8. '                   ' → logprob: -14.63031005859375
    9. 'if' → logprob: -15.00531005859375
    10. '       ' → logprob: -16.13031005859375

Token 618: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010653139092028141
    2. '
' → logprob: -5.760653018951416
    3. '           ' → logprob: -5.760653018951416
    4. '                
' → logprob: -6.385653018951416
    5. '                   ' → logprob: -6.760653018951416
    6. '            
' → logprob: -7.885653018951416
    7. 'div' → logprob: -8.510653495788574
    8. '```' → logprob: -8.760653495788574
    9. '                ' → logprob: -8.885653495788574
    10. '[' → logprob: -9.010653495788574

Token 619: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.0629870858974755e-05
    2. ' if' → logprob: -9.75006103515625
    3. '               ' → logprob: -13.00006103515625
    4. '           ' → logprob: -17.12506103515625
    5. '
' → logprob: -18.37506103515625
    6. '                   ' → logprob: -18.87506103515625
    7. '```' → logprob: -19.50006103515625
    8. '                
' → logprob: -19.62506103515625
    9. 'If' → logprob: -20.25006103515625
    10. '	if' → logprob: -20.37506103515625

Token 620: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010809217346832156
    2. ' i' → logprob: -6.8760809898376465
    3. 'n' → logprob: -10.626080513000488
    4. '   ' → logprob: -11.376080513000488
    5. '(i' → logprob: -11.501080513000488
    6. ' (' → logprob: -14.626080513000488
    7. ' ' → logprob: -14.626080513000488
    8. '	i' → logprob: -14.751080513000488
    9. ' n' → logprob: -15.501080513000488
    10. ' ' → logprob: -15.751080513000488

Token 621: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1490161418914795
    2. ' !=' → logprob: -2.6490161418914795
    3. '*i' → logprob: -3.2740161418914795
    4. '*' → logprob: -3.5240161418914795
    5. ' *' → logprob: -8.024016380310059
    6. '!==' → logprob: -11.024016380310059
    7. 'i' → logprob: -11.399016380310059
    8. '!=(' → logprob: -11.899016380310059
    9. '**' → logprob: -12.274016380310059
    10. ']!=' → logprob: -12.399016380310059

Token 622: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023512568441219628
    2. ' n' → logprob: -8.375235557556152
    3. '   ' → logprob: -13.250235557556152
    4. '	n' → logprob: -13.500235557556152
    5. '(n' → logprob: -13.625235557556152
    6. '\' → logprob: -16.875234603881836
    7. '  ' → logprob: -17.000234603881836
    8. ' ' → logprob: -17.000234603881836
    9. ' ' → logprob: -17.125234603881836
    10. '    ' → logprob: -17.375234603881836

Token 623: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.023250602185726166
    2. ' //' → logprob: -3.7732505798339844
    3. ' ' → logprob: -12.648250579833984
    4. '/' → logprob: -14.523250579833984
    5. '/i' → logprob: -15.023250579833984
    6. '```' → logprob: -15.148250579833984
    7. ' ' → logprob: -15.148250579833984
    8. '#' → logprob: -15.523250579833984
    9. '   ' → logprob: -15.523250579833984
    10. '//=' → logprob: -17.523250579833984

Token 624: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009114635176956654
    2. ' i' → logprob: -7.000911235809326
    3. '	i' → logprob: -17.125911712646484
    4. '   ' → logprob: -20.500911712646484
    5. ' ' → logprob: -20.750911712646484
    6. '_i' → logprob: -20.875911712646484
    7. '*i' → logprob: -21.625911712646484
    8. '{i' → logprob: -22.000911712646484
    9. '=i' → logprob: -22.750911712646484
    10. ',i' → logprob: -22.750911712646484

Token 625: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1164940595626831
    2. ':' → logprob: -2.4914941787719727
    3. ' and' → logprob: -3.7414941787719727
    4. '               ' → logprob: -6.991494178771973
    5. '                   ' → logprob: -6.991494178771973
    6. 'and' → logprob: -7.366494178771973
    7. '):
' → logprob: -7.491494178771973
    8. ',' → logprob: -8.741494178771973
    9. '           ' → logprob: -9.116494178771973
    10. '                       ' → logprob: -10.241494178771973

Token 626: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005885370774194598
    2. '               ' → logprob: -7.500588417053223
    3. '                  ' → logprob: -11.500588417053223
    4. ' div' → logprob: -12.000588417053223
    5. '                       ' → logprob: -12.375588417053223
    6. '```' → logprob: -12.375588417053223
    7. 'div' → logprob: -12.750588417053223
    8. '
' → logprob: -13.250588417053223
    9. '		           ' → logprob: -13.750588417053223
    10. '           ' → logprob: -13.875588417053223

Token 627: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.07549668848514557
    2. 'div' (adapté à ' div') → logprob: -2.8254966735839844
    3. '                   ' → logprob: -4.325496673583984
    4. '	div' → logprob: -9.200496673583984
    5. '               ' → logprob: -9.325496673583984
    6. '                       ' → logprob: -11.450496673583984
    7. '```' → logprob: -13.075496673583984
    8. '<div' → logprob: -13.450496673583984
    9. '                ' → logprob: -13.575496673583984
    10. '(div' → logprob: -13.575496673583984

Token 628: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0280383548888494e-06
    2. 'is' → logprob: -14.375000953674316
    3. 'div' → logprob: -15.125000953674316
    4. 'ivs' → logprob: -16.625001907348633
    5. 'iv' → logprob: -17.875001907348633
    6. '.append' → logprob: -19.375001907348633
    7. '```' → logprob: -20.000001907348633
    8. '       ' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.375001907348633
    10. 'isor' → logprob: -21.375001907348633

Token 629: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004309411160647869
    2. '.' → logprob: -5.504309177398682
    3. 's' → logprob: -8.62930965423584
    4. 'div' → logprob: -10.37930965423584
    5. '           ' → logprob: -12.25430965423584
    6. '.div' → logprob: -12.87930965423584
    7. '.extend' → logprob: -13.00430965423584
    8. '                   ' → logprob: -13.50430965423584
    9. '```' → logprob: -13.62930965423584
    10. ' .' → logprob: -13.75430965423584

Token 630: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5690089639974758e-05
    2. 'n' → logprob: -11.250015258789062
    3. '(' → logprob: -12.875015258789062
    4. '(
' → logprob: -16.625015258789062
    5. '((' → logprob: -18.625015258789062
    6. ' n' → logprob: -19.250015258789062
    7. '	n' → logprob: -19.750015258789062
    8. ' (' → logprob: -19.875015258789062
    9. '   ' → logprob: -21.125015258789062
    10. '[n' → logprob: -22.875015258789062

Token 631: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.201427161693573
    2. '//' → logprob: -1.7014272212982178
    3. ' ' → logprob: -11.201427459716797
    4. ' ' → logprob: -15.951427459716797
    5. '#' → logprob: -17.076427459716797
    6. '   ' → logprob: -17.451427459716797
    7. '```' → logprob: -17.826427459716797
    8. ' /' → logprob: -18.201427459716797
    9. '	' → logprob: -18.201427459716797
    10. ' #' → logprob: -18.576427459716797

Token 632: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015920029545668513
    2. ' i' → logprob: -8.75015926361084
    3. '	i' → logprob: -14.50015926361084
    4. '(i' → logprob: -17.125158309936523
    5. '_i' → logprob: -17.500158309936523
    6. '   ' → logprob: -17.750158309936523
    7. '```' → logprob: -17.750158309936523
    8. '[i' → logprob: -18.875158309936523
    9. ',i' → logprob: -18.875158309936523
    10. ')i' → logprob: -19.125158309936523

Token 633: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01958552934229374
    2. '           ' → logprob: -4.019585609436035
    3. ')
' → logprob: -6.894585609436035
    4. '       ' → logprob: -8.394585609436035
    5. '               ' → logprob: -9.269585609436035
    6. '<|end|>' → logprob: -10.019585609436035
    7. ']' → logprob: -10.769585609436035
    8. '.' → logprob: -11.894585609436035
    9. ')return' → logprob: -12.394585609436035
    10. '                   ' → logprob: -12.769585609436035

Token 634: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017863049288280308
    2. '       ' → logprob: -9.500178337097168
    3. '
' → logprob: -10.125178337097168
    4. '               ' → logprob: -10.875178337097168
    5. '		' → logprob: -11.125178337097168
    6. '```' → logprob: -11.875178337097168
    7. ',' → logprob: -12.750178337097168
    8. '\n' → logprob: -12.875178337097168
    9. '                   ' → logprob: -12.875178337097168
    10. 'i' → logprob: -12.875178337097168

Token 635: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03997448459267616
    2. 'i' (adapté à ' i') → logprob: -3.4149744510650635
    3. ' i' → logprob: -5.664974689483643
    4. '       ' → logprob: -6.289974689483643
    5. '   ' → logprob: -7.664974689483643
    6. '
' → logprob: -7.789974689483643
    7. '```' → logprob: -10.539974212646484
    8. '(i' → logprob: -10.789974212646484
    9. 'n' → logprob: -11.539974212646484
    10. '[i' → logprob: -11.664974212646484

Token 636: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269298940896988
    2. ' +=' → logprob: -2.126929998397827
    3. '=' → logprob: -13.376930236816406
    4. '+' → logprob: -15.501930236816406
    5. ']+=' → logprob: -16.376930236816406
    6. ' ' → logprob: -17.626930236816406
    7. '   ' → logprob: -18.626930236816406
    8. '+=(' → logprob: -18.876930236816406
    9. '1' → logprob: -19.001930236816406
    10. '+="' → logprob: -19.126930236816406

Token 637: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.250001907348633
    4. '```' → logprob: -19.625001907348633
    5. '  ' → logprob: -20.250001907348633
    6. '۱' → logprob: -20.875001907348633
    7. '１' → logprob: -21.187501907348633
    8. '
' → logprob: -21.750001907348633
    9. '2' → logprob: -21.937501907348633
    10. ' ' → logprob: -22.500001907348633

Token 638: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.5
    5. '۱' → logprob: -21.625
    6. '१' → logprob: -23.3125
    7. '１' → logprob: -23.3125
    8. '
' → logprob: -23.625
    9. '১' → logprob: -23.625
    10. '2' → logprob: -23.6875

Token 639: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008110555354505777
    2. '
' → logprob: -7.5008111000061035
    3. '	' → logprob: -8.875810623168945
    4. '<|end|>' → logprob: -10.625810623168945
    5. '        
' → logprob: -11.000810623168945
    6. '   ' → logprob: -11.000810623168945
    7. '```' → logprob: -11.875810623168945
    8. ',' → logprob: -12.000810623168945
    9. 'return' → logprob: -12.125810623168945
    10. ' ' → logprob: -12.250810623168945

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004309076175559312
    2. '
' → logprob: -8.250431060791016
    3. '        
' → logprob: -10.125431060791016
    4. ',' → logprob: -10.250431060791016
    5. '<|end|>' → logprob: -10.875431060791016
    6. 'return' → logprob: -11.000431060791016
    7. '	' → logprob: -11.125431060791016
    8. '[' → logprob: -11.625431060791016
    9. '```' → logprob: -12.000431060791016
    10. '   ' → logprob: -12.125431060791016

Token 641: ' div' (ID: 4223)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48434045910835266
    2. 'div' (adapté à ' div') → logprob: -0.9843404293060303
    3. 'return' → logprob: -4.859340667724609
    4. ' div' → logprob: -6.109340667724609
    5. '   ' → logprob: -8.60934066772461
    6. ' return' → logprob: -10.23434066772461
    7. '	div' → logprob: -11.60934066772461
    8. '```' → logprob: -12.73434066772461
    9. '(div' → logprob: -14.10934066772461
    10. '           ' → logprob: -14.35934066772461

Token 642: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001427538663847372
    2. 'sort' → logprob: -8.875143051147461
    3. '.sort' → logprob: -13.375143051147461
    4. 'div' → logprob: -14.875143051147461
    5. 'sorted' → logprob: -14.875143051147461
    6. 'is' → logprob: -15.375143051147461
    7. 'ors' → logprob: -16.37514305114746
    8. '=' → logprob: -17.00014305114746
    9. '.append' → logprob: -17.00014305114746
    10. '```' → logprob: -17.12514305114746

Token 643: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00013977376511320472
    2. '.' → logprob: -9.250140190124512
    3. 'sort' → logprob: -10.125140190124512
    4. '=' → logprob: -12.750140190124512
    5. ' .' → logprob: -15.375140190124512
    6. '	sort' → logprob: -15.625140190124512
    7. ' sort' → logprob: -16.125139236450195
    8. '.s' → logprob: -17.000139236450195
    9. '.Sort' → logprob: -17.125139236450195
    10. ' =' → logprob: -18.250139236450195

Token 644: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002482434967532754
    2. '()
' → logprob: -6.0024824142456055
    3. '()
' → logprob: -13.002482414245605
    4. '()\' → logprob: -13.627482414245605
    5. '(' → logprob: -13.752482414245605
    6. 'return' → logprob: -13.877482414245605
    7. ' ()' → logprob: -14.502482414245605
    8. '()

' → logprob: -14.877482414245605
    9. '()`' → logprob: -15.502482414245605
    10. '();' → logprob: -15.627482414245605

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001367977005429566
    2. 'return' → logprob: -6.751368045806885
    3. '```' → logprob: -9.376367568969727
    4. ' return' → logprob: -10.001367568969727
    5. '   ' → logprob: -10.376367568969727
    6. '	return' → logprob: -11.126367568969727
    7. '<|end|>' → logprob: -11.876367568969727
    8. '	' → logprob: -12.626367568969727
    9. ':return' → logprob: -13.376367568969727
    10. '           ' → logprob: -13.501367568969727

Token 646: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007451152894645929
    2. '       ' → logprob: -5.007451057434082
    3. ' return' → logprob: -7.257451057434082
    4. 'yield' → logprob: -11.257451057434082
    5. '   ' → logprob: -11.382451057434082
    6. '	return' → logprob: -12.757451057434082
    7. '```' → logprob: -13.007451057434082
    8. ':return' → logprob: -14.507451057434082
    9. '
' → logprob: -15.132451057434082
    10. '{return' → logprob: -15.757451057434082

Token 647: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0007100477814674377
    2. ' div' → logprob: -7.2507100105285645
    3. '	div' → logprob: -17.875709533691406
    4. '(div' → logprob: -18.875709533691406
    5. '<div' → logprob: -20.625709533691406
    6. '```' → logprob: -21.875709533691406
    7. '   ' → logprob: -22.375709533691406
    8. '[' → logprob: -22.375709533691406
    9. 'Div' → logprob: -22.750709533691406
    10. '_div' → logprob: -23.375709533691406

Token 648: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00017541198758408427
    2. 'div' → logprob: -8.750175476074219
    3. '[n' → logprob: -12.500175476074219
    4. '[' → logprob: -13.000175476074219
    5. 'vs' → logprob: -13.250175476074219
    6. '```' → logprob: -13.375175476074219
    7. '[s' → logprob: -13.750175476074219
    8. 'ivs' → logprob: -14.000175476074219
    9. '[]' → logprob: -14.500175476074219
    10. '[
' → logprob: -14.500175476074219

Token 649: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29536089301109314
    2. '<|end|>' → logprob: -1.4203609228134155
    3. '   ' → logprob: -4.670361042022705
    4. 'class' → logprob: -6.420361042022705
    5. '<|end|>' → logprob: -6.545361042022705
    6. '    
' → logprob: -7.170361042022705
    7. 'def' → logprob: -8.295360565185547
    8. '

' → logprob: -8.670360565185547
    9. '  
' → logprob: -9.045360565185547
    10. '```' → logprob: -9.045360565185547

Token 650: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20266826450824738
    2. '   ' → logprob: -1.952668309211731
    3. 'class' → logprob: -3.4526681900024414
    4. '<|end|>' → logprob: -4.702668190002441
    5. ' def' → logprob: -8.577668190002441
    6. '<|end|>' → logprob: -8.827668190002441
    7. '#' → logprob: -9.077668190002441
    8. '
' → logprob: -9.202668190002441
    9. 'from' → logprob: -9.327668190002441
    10. '```' → logprob: -10.202668190002441

Token 651: ' Electron' (ID: 131282)
  Prédit: ' Electron'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Electron' → logprob: -0.0349288173019886
    2. 'Electron' → logprob: -4.284928798675537
    3. ' Combined' → logprob: -5.159928798675537
    4. ' Modular' → logprob: -5.784928798675537
    5. ' Composite' → logprob: -6.034928798675537
    6. ' Quantum' → logprob: -6.909928798675537
    7. ' Triple' → logprob: -6.909928798675537
    8. ' Period' → logprob: -7.534928798675537
    9. ' Electronic' → logprob: -7.659928798675537
    10. ' Parameter' → logprob: -7.909928798675537

Token 652: 'Fly' (ID: 60154)
  Prédit: 'Fly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fly' → logprob: -0.0483846515417099
    2. 'Cycle' → logprob: -4.173384666442871
    3. 'Trajectory' → logprob: -4.673384666442871
    4. 'Flight' → logprob: -4.798384666442871
    5. 'Orbit' → logprob: -5.798384666442871
    6. 'Path' → logprob: -6.048384666442871
    7. 'Parameters' → logprob: -7.048384666442871
    8. 'Trip' → logprob: -7.173384666442871
    9. 'Chain' → logprob: -7.423384666442871
    10. 'Flow' → logprob: -7.673384666442871

Token 653: 'Cycle' (ID: 43162)
  Prédit: 'Parameters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parameters' → logprob: -1.072189211845398
    2. ':
' → logprob: -1.447189211845398
    3. ':' → logprob: -1.697189211845398
    4. 'Cycle' → logprob: -2.8221893310546875
    5. 'Orbit' → logprob: -3.1971893310546875
    6. 'Trajectory' → logprob: -3.1971893310546875
    7. '(' → logprob: -4.0721893310546875
    8. 'Simulator' → logprob: -4.3221893310546875
    9. 'Path' → logprob: -4.8221893310546875
    10. 'Generator' → logprob: -4.8221893310546875

Token 654: 'Controller' (ID: 2947)
  Prédit: 'Parameters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parameters' → logprob: -0.31978175044059753
    2. ':' → logprob: -1.44478178024292
    3. 'Finder' → logprob: -3.56978178024292
    4. ':
' → logprob: -4.94478178024292
    5. 'Calculator' → logprob: -7.06978178024292
    6. 'Length' → logprob: -7.19478178024292
    7. 'Detector' → logprob: -7.69478178024292
    8. 'Lengths' → logprob: -8.444781303405762
    9. '(' → logprob: -9.444781303405762
    10. 'Params' → logprob: -9.569781303405762

Token 655: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001617035741219297
    2. ':
' → logprob: -8.875162124633789
    3. ' :' → logprob: -11.625162124633789
    4. '(E' → logprob: -12.125162124633789
    5. '(' → logprob: -13.000162124633789
    6. ':def' → logprob: -13.000162124633789
    7. '():' → logprob: -13.500162124633789
    8. '(object' → logprob: -15.375162124633789
    9. ':

' → logprob: -15.375162124633789
    10. '):' → logprob: -15.875162124633789

Token 656: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001433324534446001
    2. 'def' → logprob: -7.001433372497559
    3. ' def' → logprob: -7.626433372497559
    4. 'class' → logprob: -10.501433372497559
    5. '```' → logprob: -12.376433372497559
    6. ':' → logprob: -13.251433372497559
    7. ' class' → logprob: -15.501433372497559
    8. '   ' → logprob: -16.126432418823242
    9. '	def' → logprob: -16.251432418823242
    10. '    
' → logprob: -16.376432418823242

Token 657: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47609761357307434
    2. ' def' → logprob: -0.976097583770752
    3. '   ' → logprob: -6.226097583770752
    4. 'class' → logprob: -10.35109806060791
    5. '	def' → logprob: -11.72609806060791
    6. '```' → logprob: -13.85109806060791
    7. ':def' → logprob: -16.476097106933594
    8. '
' → logprob: -17.101097106933594
    9. ' ' → logprob: -17.101097106933594
    10. 'from' → logprob: -17.101097106933594

Token 658: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.02522807940840721
    2. '__' → logprob: -4.025228023529053
    3. ' __' → logprob: -5.025228023529053
    4. ' init' → logprob: -7.900228023529053
    5. 'def' → logprob: -9.400228500366211
    6. '_init' → logprob: -10.650228500366211
    7. '```' → logprob: -12.650228500366211
    8. ' def' → logprob: -13.275228500366211
    9. 'class' → logprob: -15.400228500366211
    10. '_' → logprob: -15.525228500366211

Token 659: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.000000953674316
    3. ' init' → logprob: -15.750000953674316
    4. 'def' → logprob: -16.5
    5. '__' → logprob: -17.25
    6. '(init' → logprob: -17.25
    7. '_init' → logprob: -17.75
    8. 'int' → logprob: -18.125
    9. 'class' → logprob: -18.125
    10. '`' → logprob: -18.5

Token 660: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.577621579170227
    2. '(self' → logprob: -0.827621579170227
    3. '(' → logprob: -6.7026214599609375
    4. ' (' → logprob: -8.577621459960938
    5. '__' → logprob: -8.952621459960938
    6. '__(
' → logprob: -9.577621459960938
    7. '_(' → logprob: -10.452621459960938
    8. 'self' → logprob: -10.952621459960938
    9. '   ' → logprob: -11.702621459960938
    10. ',' → logprob: -12.452621459960938

Token 661: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003476209531072527
    2. 'parameters' → logprob: -8.375348091125488
    3. ' self' → logprob: -9.875348091125488
    4. 'params' → logprob: -9.875348091125488
    5. '       ' → logprob: -12.000348091125488
    6. 'a' → logprob: -12.750348091125488
    7. '   ' → logprob: -13.500348091125488
    8. 'Parameters' → logprob: -14.125348091125488
    9. ' parameters' → logprob: -14.125348091125488
    10. ',' → logprob: -14.375348091125488

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04966578632593155
    2. 'self' → logprob: -3.049665689468384
    3. '(self' → logprob: -7.049665927886963
    4. ' self' → logprob: -9.924665451049805
    5. '       ' → logprob: -10.299665451049805
    6. ',self' → logprob: -10.424665451049805
    7. ',
' → logprob: -10.799665451049805
    8. '   ' → logprob: -10.799665451049805
    9. ' ,' → logprob: -11.174665451049805
    10. '
' → logprob: -11.424665451049805

Token 663: ' params' (ID: 7039)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.13892588019371033
    2. 'parameters' → logprob: -2.263925790786743
    3. ' params' → logprob: -3.888925790786743
    4. ' parameters' → logprob: -5.513926029205322
    5. 'a' → logprob: -7.638926029205322
    6. 'self' → logprob: -7.763926029205322
    7. 'param' → logprob: -8.763925552368164
    8. 'fly' → logprob: -10.013925552368164
    9. 'electron' → logprob: -10.138925552368164
    10. 'e' → logprob: -10.763925552368164

Token 664: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031937702442519367
    2. '):' → logprob: -8.125319480895996
    3. '):
' → logprob: -11.250319480895996
    4. ' :' → logprob: -11.750319480895996
    5. '_:' → logprob: -15.000319480895996
    6. 'self' → logprob: -15.125319480895996
    7. '__:' → logprob: -15.250319480895996
    8. 'parameters' → logprob: -15.250319480895996
    9. 'params' → logprob: -15.625319480895996
    10. '       ' → logprob: -15.750319480895996

Token 665: ' Electron' (ID: 131282)
  Prédit: 'Electron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Electron' → logprob: -0.02975187823176384
    2. ' Electron' → logprob: -3.529751777648926
    3. 'Elect' → logprob: -13.904751777648926
    4. 'Electronic' → logprob: -15.404751777648926
    5. ' electron' → logprob: -16.154752731323242
    6. 'electron' → logprob: -16.279752731323242
    7. 'Electric' → logprob: -18.779752731323242
    8. ' Electronic' → logprob: -18.904752731323242
    9. ')' → logprob: -19.154752731323242
    10. '   ' → logprob: -20.279752731323242

Token 666: 'Fly' (ID: 60154)
  Prédit: 'Fly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fly' → logprob: -3.128163257315464e-07
    2. ' Fly' → logprob: -15.375
    3. 'fly' → logprob: -16.75
    4. 'Electron' → logprob: -19.0
    5. '```' → logprob: -19.25
    6. 'Fl' → logprob: -19.25
    7. 'Flip' → logprob: -19.5
    8. 'Flight' → logprob: -19.625
    9. '.fly' → logprob: -19.625
    10. ')' → logprob: -20.75

Token 667: 'Parameters' (ID: 10167)
  Prédit: 'Parameters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parameters' → logprob: -1.27099974633893e-05
    2. 'parameters' → logprob: -11.375012397766113
    3. '_parameters' → logprob: -14.250012397766113
    4. '_PARAMETERS' → logprob: -15.125012397766113
    5. ' parameters' → logprob: -16.37501335144043
    6. ' Parameters' → logprob: -16.37501335144043
    7. '.Parameters' → logprob: -17.87501335144043
    8. '.parameters' → logprob: -18.62501335144043
    9. 'Fly' → logprob: -18.87501335144043
    10. 'Params' → logprob: -19.25001335144043

Token 668: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869260847568512
    2. '):' → logprob: -1.1369260549545288
    3. '):
' → logprob: -10.63692569732666
    4. '       ' → logprob: -10.76192569732666
    5. '   ' → logprob: -11.76192569732666
    6. ':' → logprob: -14.26192569732666
    7. ')' → logprob: -14.38692569732666
    8. '):

' → logprob: -15.01192569732666
    9. ',' → logprob: -15.38692569732666
    10. ' ):
' → logprob: -15.88692569732666

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00438549043610692
    2. 'self' → logprob: -5.504385471343994
    3. ' self' → logprob: -8.129385948181152
    4. '   ' → logprob: -12.004385948181152
    5. '(self' → logprob: -13.004385948181152
    6. '	self' → logprob: -14.254385948181152
    7. 'def' → logprob: -14.379385948181152
    8. '<|end|>' → logprob: -14.504385948181152
    9. '):
' → logprob: -14.629385948181152
    10. ',' → logprob: -15.004385948181152

Token 670: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004558175278361887
    2. '       ' → logprob: -7.750455856323242
    3. ' self' → logprob: -10.625455856323242
    4. 'from' → logprob: -15.000455856323242
    5. '   ' → logprob: -15.250455856323242
    6. 'import' → logprob: -16.000455856323242
    7. '#' → logprob: -17.500455856323242
    8. 'params' → logprob: -17.625455856323242
    9. '	self' → logprob: -18.125455856323242
    10. 'def' → logprob: -18.250455856323242

Token 671: '.params' (ID: 16316)
  Prédit: '.params'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.params' → logprob: -0.04922126606106758
    2. '.a' → logprob: -3.0492212772369385
    3. 'params' → logprob: -7.424221038818359
    4. '.parameters' → logprob: -11.42422103881836
    5. 'a' → logprob: -11.67422103881836
    6. '.param' → logprob: -12.17422103881836
    7. '.' → logprob: -12.67422103881836
    8. ' .' → logprob: -13.29922103881836
    9. '	params' → logprob: -13.29922103881836
    10. '._' → logprob: -13.54922103881836

Token 672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023284733295440674
    2. '=' → logprob: -3.773284673690796
    3. '=params' → logprob: -10.523284912109375
    4. '   ' → logprob: -11.648284912109375
    5. ' ' → logprob: -13.148284912109375
    6. '       ' → logprob: -15.148284912109375
    7. '    ' → logprob: -15.398284912109375
    8. 'a' → logprob: -15.523284912109375
    9. '  ' → logprob: -15.648284912109375
    10. 'params' → logprob: -15.773284912109375

Token 673: ' params' (ID: 7039)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.00317783304490149
    2. ' params' → logprob: -5.753177642822266
    3. '(params' → logprob: -15.878177642822266
    4. '	params' → logprob: -17.628177642822266
    5. 'param' → logprob: -17.753177642822266
    6. 'parameters' → logprob: -18.378177642822266
    7. '$params' → logprob: -19.003177642822266
    8. '=params' → logprob: -19.503177642822266
    9. '       ' → logprob: -20.753177642822266
    10. '   ' → logprob: -20.753177642822266

Token 674: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5208556056022644
    2. '
' → logprob: -1.3958556652069092
    3. '   ' → logprob: -2.145855665206909
    4. 'def' → logprob: -3.895855665206909
    5. '<|end|>' → logprob: -4.14585542678833
    6. ' def' → logprob: -6.27085542678833
    7. '```' → logprob: -6.64585542678833
    8. 'self' → logprob: -7.52085542678833
    9. '        
' → logprob: -8.020855903625488
    10. ' self' → logprob: -8.020855903625488

Token 675: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07473424077033997
    2. '       ' → logprob: -2.8247342109680176
    3. '
' → logprob: -4.949734210968018
    4. 'def' → logprob: -5.574734210968018
    5. '<|end|>' → logprob: -6.949734210968018
    6. '```' → logprob: -7.824734210968018
    7. '    
' → logprob: -8.449734687805176
    8. '        
' → logprob: -9.574734687805176
    9. ' def' → logprob: -10.074734687805176
    10. 'self' → logprob: -10.324734687805176

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01747530698776245
    2. 'def' → logprob: -4.142475128173828
    3. '       ' → logprob: -6.767475128173828
    4. '   ' → logprob: -8.517475128173828
    5. ' self' → logprob: -10.392475128173828
    6. '#' → logprob: -11.142475128173828
    7. 'fc' → logprob: -12.142475128173828
    8. '
' → logprob: -12.267475128173828
    9. 'cf' → logprob: -12.392475128173828
    10. 'from' → logprob: -12.642475128173828

Token 677: '.c' (ID: 1081)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.9223423004150391
    2. '.c' → logprob: -1.172342300415039
    3. '.mod' → logprob: -2.172342300415039
    4. '.a' → logprob: -2.672342300415039
    5. '.fly' → logprob: -2.922342300415039
    6. '.m' → logprob: -3.797342300415039
    7. '.cy' → logprob: -4.547342300415039
    8. '.param' → logprob: -5.797342300415039
    9. '.find' → logprob: -6.047342300415039
    10. '.f' → logprob: -6.172342300415039

Token 678: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -0.19642239809036255
    2. 'ycles' → logprob: -2.0714223384857178
    3. 'f' → logprob: -3.6964223384857178
    4. 'ycl' → logprob: -4.071422576904297
    5. 'y' → logprob: -6.696422576904297
    6. 'yc' → logprob: -6.821422576904297
    7. 'yf' → logprob: -6.946422576904297
    8. 'l' → logprob: -7.071422576904297
    9. '1' → logprob: -7.196422576904297
    10. 'lf' → logprob: -7.196422576904297

Token 679: '_f' (ID: 1337)
  Prédit: '_lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.08613055944442749
    2. '_f' → logprob: -2.9611306190490723
    3. '_length' → logprob: -3.8361306190490723
    4. 's' → logprob: -4.836130619049072
    5. '_l' → logprob: -6.961130619049072
    6. 'length' → logprob: -8.711130142211914
    7. 'finder' → logprob: -10.211130142211914
    8. '_len' → logprob: -10.461130142211914
    9. '_cal' → logprob: -10.711130142211914
    10. ' =' → logprob: -11.836130142211914

Token 680: 'inders' (ID: 41077)
  Prédit: 'inder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.0003384422743692994
    2. 'inders' → logprob: -8.375338554382324
    3. 'ind' → logprob: -9.250338554382324
    4. 'ilter' → logprob: -12.625338554382324
    5. 'orm' → logprob: -13.250338554382324
    6. 'inds' → logprob: -13.750338554382324
    7. 'inde' → logprob: -14.250338554382324
    8. 'inal' → logprob: -14.500338554382324
    9. 'l' → logprob: -14.750338554382324
    10. 'or' → logprob: -14.875338554382324

Token 681: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868809938430786
    2. '=' → logprob: -1.1368809938430786
    3. '1' → logprob: -12.386880874633789
    4. ':' → logprob: -13.386880874633789
    5. 's' → logprob: -13.511880874633789
    6. '_' → logprob: -14.011880874633789
    7. '[' → logprob: -14.261880874633789
    8. '=[' → logprob: -14.511880874633789
    9. '   ' → logprob: -14.636880874633789
    10. '=[]' → logprob: -15.761880874633789

Token 682: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.013588618487119675
    2. '[' → logprob: -4.5135884284973145
    3. ' [
' → logprob: -6.5135884284973145
    4. '{
' → logprob: -6.8885884284973145
    5. ' [' → logprob: -11.138588905334473
    6. '{' → logprob: -11.513588905334473
    7. '(
' → logprob: -12.138588905334473
    8. '[]' → logprob: -13.513588905334473
    9. '[E' → logprob: -13.763588905334473
    10. ' {
' → logprob: -13.888588905334473

Token 683: '           ' (ID: 352)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.014496540650725365
    2. '           ' → logprob: -4.389496326446533
    3. ' Modular' → logprob: -6.264496326446533
    4. '       ' → logprob: -10.139496803283691
    5. '(Mod' → logprob: -11.264496803283691
    6. '               ' → logprob: -11.389496803283691
    7. 'Module' → logprob: -12.639496803283691
    8. 'Modulo' → logprob: -12.639496803283691
    9. '_Mod' → logprob: -13.014496803283691
    10. '   ' → logprob: -13.139496803283691

Token 684: ' Modular' (ID: 137262)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00038896629121154547
    2. '           ' → logprob: -8.000389099121094
    3. ' Modular' → logprob: -10.125389099121094
    4. '               ' → logprob: -11.750389099121094
    5. '       ' → logprob: -13.500389099121094
    6. '(Mod' → logprob: -13.500389099121094
    7. '   ' → logprob: -13.750389099121094
    8. '                   ' → logprob: -15.125389099121094
    9. 'Modulo' → logprob: -15.125389099121094
    10. 'mod' → logprob: -15.625389099121094

Token 685: 'Cycle' (ID: 43162)
  Prédit: 'Cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cycle' → logprob: -4.320199877838604e-07
    2. 'Cycl' → logprob: -15.5
    3. 'Fly' → logprob: -17.25
    4. 'cycle' → logprob: -17.375
    5. '_cycle' → logprob: -17.375
    6. 'Cycles' → logprob: -17.5
    7. ' Cycle' → logprob: -18.0
    8. 'ycle' → logprob: -18.625
    9. 'Cube' → logprob: -19.0
    10. 'Cy' → logprob: -19.0

Token 686: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -1.9361264946837764e-07
    2. 'Find' → logprob: -16.25
    3. 'finder' → logprob: -17.25
    4. ' Finder' → logprob: -17.625
    5. ' finder' → logprob: -19.125
    6. 'Finding' → logprob: -20.875
    7. 'Fetcher' → logprob: -20.875
    8. 'F' → logprob: -20.875
    9. 'Fly' → logprob: -21.125
    10. 'inder' → logprob: -21.75

Token 687: '(params' (ID: 18813)
  Prédit: '(params'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(params' → logprob: -0.0016863665077835321
    2. '(self' → logprob: -6.5016865730285645
    3. '(' → logprob: -8.626686096191406
    4. 'params' → logprob: -12.751686096191406
    5. '(
' → logprob: -14.001686096191406
    6. '(param' → logprob: -14.251686096191406
    7. 'self' → logprob: -16.126686096191406
    8. '(p' → logprob: -16.251686096191406
    9. '((' → logprob: -17.126686096191406
    10. '=params' → logprob: -17.376686096191406

Token 688: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -6.749814019713085e-06
    2. 'a' → logprob: -12.000006675720215
    3. ').' → logprob: -15.500006675720215
    4. '.' → logprob: -15.625006675720215
    5. ' .' → logprob: -16.00000762939453
    6. 'self' → logprob: -18.87500762939453
    7. '   ' → logprob: -19.00000762939453
    8. '.s' → logprob: -19.25000762939453
    9. ' a' → logprob: -19.37500762939453
    10. '#a' → logprob: -19.87500762939453

Token 689: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'self' → logprob: -18.25
    3. 'a' → logprob: -18.375
    4. ' ' → logprob: -18.625
    5. '```' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. ',' → logprob: -19.375
    8. ')' → logprob: -20.0
    9. '[' → logprob: -20.125
    10. '3' → logprob: -20.3125

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.452426608419046e-05
    2. ' ,' → logprob: -10.50003433227539
    3. 'params' → logprob: -12.12503433227539
    4. ',
' → logprob: -15.00003433227539
    5. '),' → logprob: -15.37503433227539
    6. ',param' → logprob: -15.37503433227539
    7. '=params' → logprob: -15.87503433227539
    8. '`,' → logprob: -15.87503433227539
    9. '(params' → logprob: -16.12503433227539
    10. ' params' → logprob: -16.25003433227539

Token 691: ' params' (ID: 7039)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.00014013137842994183
    2. ' params' → logprob: -8.875140190124512
    3. '(params' → logprob: -16.125139236450195
    4. 'param' → logprob: -16.500139236450195
    5. '$params' → logprob: -18.000139236450195
    6. '	params' → logprob: -18.125139236450195
    7. '```' → logprob: -18.750139236450195
    8. '   ' → logprob: -19.000139236450195
    9. '=params' → logprob: -19.375139236450195
    10. 'parameters' → logprob: -19.375139236450195

Token 692: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.006054759491235018
    2. 'm' → logprob: -5.131054878234863
    3. 'params' → logprob: -9.381054878234863
    4. '1' → logprob: -11.006054878234863
    5. '.' → logprob: -11.131054878234863
    6. '   ' → logprob: -13.006054878234863
    7. '.params' → logprob: -13.131054878234863
    8. '_m' → logprob: -14.131054878234863
    9. '```' → logprob: -14.381054878234863
    10. 'a' → logprob: -14.506054878234863

Token 693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -17.875
    3. '۱' → logprob: -19.625
    4. '```' → logprob: -19.75
    5. '' → logprob: -20.0
    6. '১' → logprob: -20.25
    7. '१' → logprob: -20.3125
    8. 'self' → logprob: -20.5
    9. 's' → logprob: -20.5625
    10. '１' → logprob: -20.5625

Token 694: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.014232615008950233
    2. '),' → logprob: -4.264232635498047
    3. '),
' → logprob: -10.139232635498047
    4. '       ' → logprob: -10.639232635498047
    5. '),

' → logprob: -12.514232635498047
    6. ')' → logprob: -13.764232635498047
    7. '   ' → logprob: -15.014232635498047
    8. ' ),
' → logprob: -15.139232635498047
    9. '           ' → logprob: -15.764232635498047
    10. ')
' → logprob: -16.889232635498047

Token 695: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04100640118122101
    2. 'Mod' → logprob: -3.791006326675415
    3. ' Modular' → logprob: -4.041006565093994
    4. '       ' → logprob: -11.291006088256836
    5. ' Mod' → logprob: -12.166006088256836
    6. '   ' → logprob: -13.041006088256836
    7. '               ' → logprob: -13.791006088256836
    8. 'Module' → logprob: -14.041006088256836
    9. ' ' → logprob: -14.166006088256836
    10. ' modular' → logprob: -14.166006088256836

Token 696: ' Modular' (ID: 137262)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.02413877099752426
    2. ' Modular' → logprob: -3.7741386890411377
    3. '           ' → logprob: -7.024138927459717
    4. ' Mod' → logprob: -13.649138450622559
    5. ' modular' → logprob: -14.149138450622559
    6. '               ' → logprob: -15.774138450622559
    7. '   ' → logprob: -15.899138450622559
    8. 'Modulo' → logprob: -15.899138450622559
    9. '(Mod' → logprob: -16.149139404296875
    10. '_Mod' → logprob: -16.274139404296875

Token 697: 'Cycle' (ID: 43162)
  Prédit: 'Cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cycle' → logprob: -9.968312951968983e-06
    2. 'Mod' → logprob: -11.750009536743164
    3. 'Cycl' → logprob: -14.125009536743164
    4. ' Cycle' → logprob: -14.750009536743164
    5. 'cycle' → logprob: -15.750009536743164
    6. 'Fly' → logprob: -15.875009536743164
    7. '_cycle' → logprob: -16.000009536743164
    8. 'Cycles' → logprob: -16.000009536743164
    9. 'Curve' → logprob: -16.375009536743164
    10. 'Cube' → logprob: -16.375009536743164

Token 698: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.0005730479606427252
    2. 'Fly' → logprob: -7.50057315826416
    3. 'Find' → logprob: -10.87557315826416
    4. 'finder' → logprob: -13.87557315826416
    5. ' finder' → logprob: -16.000572204589844
    6. 'Cycle' → logprob: -16.875572204589844
    7. 'Found' → logprob: -17.375572204589844
    8. 'Founder' → logprob: -17.625572204589844
    9. ' Finder' → logprob: -18.000572204589844
    10. '(' → logprob: -18.875572204589844

Token 699: '(params' (ID: 18813)
  Prédit: '(params'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(params' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -15.625
    3. '(' → logprob: -17.0
    4. '=params' → logprob: -18.25
    5. 'params' → logprob: -20.25
    6. '(props' → logprob: -20.5
    7. ' params' → logprob: -21.0
    8. '(
' → logprob: -21.125
    9. '(parameters' → logprob: -22.0
    10. '(param' → logprob: -22.125

Token 700: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.005234356038272381
    2. 'a' → logprob: -5.255234241485596
    3. '.' → logprob: -15.255234718322754
    4. 'A' → logprob: -15.880234718322754
    5. '	a' → logprob: -16.880233764648438
    6. '```' → logprob: -17.130233764648438
    7. '   ' → logprob: -17.505233764648438
    8. '#a' → logprob: -17.880233764648438
    9. ' .' → logprob: -18.380233764648438
    10. ' a' → logprob: -18.380233764648438

Token 701: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -13.87500286102295
    3. '3' → logprob: -14.50000286102295
    4. 'params' → logprob: -14.62500286102295
    5. ' ' → logprob: -14.87500286102295
    6. 'a' → logprob: -15.50000286102295
    7. '   ' → logprob: -16.125003814697266
    8. '```' → logprob: -16.625003814697266
    9. '.' → logprob: -16.875003814697266
    10. '
' → logprob: -17.062503814697266

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. 'params' → logprob: -12.500009536743164
    3. ' ,' → logprob: -12.500009536743164
    4. '(params' → logprob: -13.625009536743164
    5. ',param' → logprob: -14.875009536743164
    6. '=params' → logprob: -15.250009536743164
    7. ',
' → logprob: -16.000009536743164
    8. ' params' → logprob: -16.500009536743164
    9. '),' → logprob: -16.750009536743164
    10. ',p' → logprob: -17.750009536743164

Token 703: ' params' (ID: 7039)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.10021431744098663
    2. ' params' → logprob: -2.3502142429351807
    3. '(params' → logprob: -11.975214004516602
    4. '	params' → logprob: -14.475214004516602
    5. '$params' → logprob: -14.600214004516602
    6. '.params' → logprob: -15.600214004516602
    7. '=params' → logprob: -15.850214004516602
    8. '```' → logprob: -16.9752140045166
    9. 'param' → logprob: -17.3502140045166
    10. 'self' → logprob: -17.4752140045166

Token 704: '.m' (ID: 1021)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06987074017524719
    2. '.m' → logprob: -2.819870710372925
    3. 'm' → logprob: -5.569870948791504
    4. ',m' → logprob: -5.694870948791504
    5. '2' → logprob: -8.194870948791504
    6. 'params' → logprob: -8.819870948791504
    7. ' ,' → logprob: -8.944870948791504
    8. ')' → logprob: -10.319870948791504
    9. '),' → logprob: -10.694870948791504
    10. '.params' → logprob: -10.819870948791504

Token 705: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. ')' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '1' → logprob: -18.250001907348633
    6. '_' → logprob: -18.562501907348633
    7. '۲' → logprob: -18.687501907348633
    8. '```' → logprob: -18.812501907348633
    9. '₂' → logprob: -18.937501907348633
    10. ',' → logprob: -19.187501907348633

Token 706: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.0492561049759388
    2. '),' → logprob: -3.0492560863494873
    3. '           ' → logprob: -7.924256324768066
    4. '       ' → logprob: -8.299256324768066
    5. ')' → logprob: -10.424256324768066
    6. '),

' → logprob: -11.299256324768066
    7. '),
' → logprob: -11.924256324768066
    8. '   ' → logprob: -12.424256324768066
    9. ',' → logprob: -13.674256324768066
    10. ',
' → logprob: -14.049256324768066

Token 707: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12973254919052124
    2. 'Mod' → logprob: -2.129732608795166
    3. ' Modular' → logprob: -5.879732608795166
    4. '       ' → logprob: -13.629732131958008
    5. ' modular' → logprob: -13.879732131958008
    6. '   ' → logprob: -14.004732131958008
    7. '               ' → logprob: -14.379732131958008
    8. ' Mod' → logprob: -14.504732131958008
    9. '(Mod' → logprob: -15.379732131958008
    10. 'Modulo' → logprob: -15.754732131958008

Token 708: ' Modular' (ID: 137262)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.030123477801680565
    2. '           ' → logprob: -3.530123472213745
    3. ' Modular' → logprob: -7.905123710632324
    4. '   ' → logprob: -13.905123710632324
    5. '               ' → logprob: -14.280123710632324
    6. '(Mod' → logprob: -14.780123710632324
    7. '       ' → logprob: -14.905123710632324
    8. '_Mod' → logprob: -15.155123710632324
    9. 'mod' → logprob: -15.530123710632324
    10. '          ' → logprob: -15.530123710632324

Token 709: 'Cycle' (ID: 43162)
  Prédit: 'Cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cycle' → logprob: -0.0700455829501152
    2. 'Fly' → logprob: -2.6950454711914062
    3. 'Cycl' → logprob: -10.070045471191406
    4. 'Mod' → logprob: -11.820045471191406
    5. ' Cycle' → logprob: -11.820045471191406
    6. '_F' → logprob: -12.195045471191406
    7. 'Cube' → logprob: -12.195045471191406
    8. 'fly' → logprob: -12.570045471191406
    9. 'Cycles' → logprob: -12.570045471191406
    10. 'Flight' → logprob: -12.695045471191406

Token 710: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -0.006840049289166927
    2. 'Fly' → logprob: -5.006840229034424
    3. 'Find' → logprob: -9.006839752197266
    4. 'finder' → logprob: -13.881839752197266
    5. '(' → logprob: -15.506839752197266
    6. '[' → logprob: -15.756839752197266
    7. 'Fetcher' → logprob: -15.881839752197266
    8. 'Found' → logprob: -16.131839752197266
    9. 'F' → logprob: -17.006839752197266
    10. 'Factory' → logprob: -17.131839752197266

Token 711: '(params' (ID: 18813)
  Prédit: '(params'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(params' → logprob: -0.003030236577615142
    2. '(Mod' → logprob: -5.878030300140381
    3. '(E' → logprob: -8.503029823303223
    4. '(' → logprob: -11.003029823303223
    5. 'params' → logprob: -13.128029823303223
    6. '(Module' → logprob: -13.628029823303223
    7. '=params' → logprob: -13.878029823303223
    8. ' (' → logprob: -15.128029823303223
    9. 'E' → logprob: -15.253029823303223
    10. '(
' → logprob: -15.378029823303223

Token 712: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.00012296605564188212
    2. 'a' → logprob: -9.125123023986816
    3. '.' → logprob: -12.000123023986816
    4. 'params' → logprob: -12.125123023986816
    5. '.m' → logprob: -13.625123023986816
    6. ',a' → logprob: -15.000123023986816
    7. '.params' → logprob: -15.250123023986816
    8. ' a' → logprob: -16.0001220703125
    9. '.s' → logprob: -16.1251220703125
    10. ')' → logprob: -16.7501220703125

Token 713: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.87500286102295
    3. '2' → logprob: -14.25000286102295
    4. '
' → logprob: -14.62500286102295
    5. '_' → logprob: -14.93750286102295
    6. '1' → logprob: -15.18750286102295
    7. '```' → logprob: -15.18750286102295
    8. ')' → logprob: -15.56250286102295
    9. ',' → logprob: -16.750003814697266
    10. '   ' → logprob: -16.875003814697266

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014799882774241269
    2. ' ,' → logprob: -9.125147819519043
    3. ',
' → logprob: -10.500147819519043
    4. 'params' → logprob: -12.750147819519043
    5. '(params' → logprob: -13.125147819519043
    6. '),' → logprob: -13.125147819519043
    7. ',param' → logprob: -13.625147819519043
    8. ',p' → logprob: -14.125147819519043
    9. ')' → logprob: -14.375147819519043
    10. '=params' → logprob: -14.750147819519043

Token 715: ' params' (ID: 7039)
  Prédit: ' params'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' params' → logprob: -0.38687679171562195
    2. 'params' → logprob: -1.1368768215179443
    3. '(params' → logprob: -12.386877059936523
    4. '	params' → logprob: -14.386877059936523
    5. '$params' → logprob: -14.886877059936523
    6. '=params' → logprob: -15.261877059936523
    7. 'self' → logprob: -15.511877059936523
    8. '.params' → logprob: -16.136877059936523
    9. 'param' → logprob: -16.886877059936523
    10. '   ' → logprob: -17.636877059936523

Token 716: '.m' (ID: 1021)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008847023360431194
    2. '3' → logprob: -5.633847236633301
    3. '.m' → logprob: -5.633847236633301
    4. ' m' → logprob: -7.008847236633301
    5. ',' → logprob: -8.3838472366333
    6. ')' → logprob: -8.5088472366333
    7. '_m' → logprob: -9.5088472366333
    8. '```' → logprob: -9.8838472366333
    9. ',m' → logprob: -9.8838472366333
    10. '	m' → logprob: -10.3838472366333

Token 717: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. ')' → logprob: -16.875
    4. '   ' → logprob: -17.0
    5. ' ' → logprob: -17.0
    6. '```' → logprob: -17.875
    7. '_' → logprob: -18.3125
    8. '
' → logprob: -18.75
    9. '6' → logprob: -18.75
    10. '  ' → logprob: -18.9375

Token 718: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09439605474472046
    2. ')]' → logprob: -2.9693961143493652
    3. '       ' → logprob: -3.3443961143493652
    4. ']' → logprob: -6.719396114349365
    5. '),' → logprob: -6.969396114349365
    6. ')])' → logprob: -7.719396114349365
    7. '])' → logprob: -8.094395637512207
    8. ')
' → logprob: -8.219395637512207
    9. '   ' → logprob: -8.469395637512207
    10. ')],' → logprob: -10.344395637512207

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12794020771980286
    2. ']' → logprob: -2.1279401779174805
    3. '   ' → logprob: -8.37794017791748
    4. '           ' → logprob: -8.50294017791748
    5. ' ]' → logprob: -8.62794017791748
    6. ')' → logprob: -8.87794017791748
    7. ' Modular' → logprob: -9.25294017791748
    8. ']
' → logprob: -9.37794017791748
    9. '```' → logprob: -10.37794017791748
    10. '<|end|>' → logprob: -11.25294017791748

Token 720: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035138337407261133
    2. '       ' → logprob: -6.003513813018799
    3. '   ' → logprob: -7.753513813018799
    4. ']
' → logprob: -8.003514289855957
    5. ' ]' → logprob: -8.878514289855957
    6. ']

' (adapté à ' ]

') → logprob: -9.253514289855957
    7. ')' → logprob: -10.378514289855957
    8. '])' → logprob: -13.253514289855957
    9. 'def' → logprob: -13.378514289855957
    10. '           ' → logprob: -13.753514289855957

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02529527246952057
    2. '
' → logprob: -4.400295257568359
    3. 'def' → logprob: -4.400295257568359
    4. ' def' → logprob: -7.900295257568359
    5. '    
' → logprob: -10.27529525756836
    6. '

' → logprob: -11.40029525756836
    7. '       ' → logprob: -12.27529525756836
    8. '	def' → logprob: -12.40029525756836
    9. '        
' → logprob: -13.15029525756836
    10. ' ' → logprob: -14.15029525756836

Token 722: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.981667537620524e-06
    2. ' def' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '@property' → logprob: -18.625001907348633
    5. '	def' → logprob: -21.125001907348633
    6. '
' → logprob: -21.500001907348633
    7. 'from' → logprob: -22.000001907348633
    8. '    
' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.875001907348633
    10. 'self' → logprob: -23.125001907348633

Token 723: ' compute' (ID: 23864)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.164447546005249
    2. ' get' → logprob: -1.414447546005249
    3. 'get' → logprob: -1.539447546005249
    4. 'find' → logprob: -2.164447546005249
    5. 'compute' → logprob: -3.539447546005249
    6. ' combined' → logprob: -4.039447784423828
    7. 'combined' → logprob: -4.039447784423828
    8. ' compute' → logprob: -4.414447784423828
    9. ' l' → logprob: -5.289447784423828
    10. ' overall' → logprob: -5.414447784423828

Token 724: '_min' (ID: 15950)
  Prédit: '_cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.050797563046216965
    2. '_cycles' → logprob: -4.050797462463379
    3. '_total' → logprob: -4.175797462463379
    4. '(self' → logprob: -5.300797462463379
    5. '_max' → logprob: -5.300797462463379
    6. '_full' → logprob: -6.300797462463379
    7. '_l' → logprob: -6.925797462463379
    8. '_' → logprob: -7.300797462463379
    9. '_final' → logprob: -7.550797462463379
    10. '_all' → logprob: -7.675797462463379

Token 725: 'imum' (ID: 4556)
  Prédit: '_cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.16135413944721222
    2. 'imal' → logprob: -2.2863540649414062
    3. '_cycles' → logprob: -4.036354064941406
    4. 'imum' → logprob: -4.161354064941406
    5. '_period' → logprob: -5.161354064941406
    6. '_common' → logprob: -6.036354064941406
    7. '_' → logprob: -6.536354064941406
    8. '_steps' → logprob: -6.911354064941406
    9. '_length' → logprob: -8.036354064941406
    10. '_step' → logprob: -8.536354064941406

Token 726: '_return' (ID: 29287)
  Prédit: '_cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.14279380440711975
    2. '_period' → logprob: -3.142793893814087
    3. '_return' → logprob: -3.642793893814087
    4. '_cycles' → logprob: -3.892793893814087
    5. '_common' → logprob: -4.017793655395508
    6. '_steps' → logprob: -5.517793655395508
    7. '_f' → logprob: -5.642793655395508
    8. '_' → logprob: -5.642793655395508
    9. '_time' → logprob: -6.142793655395508
    10. '_step' → logprob: -6.642793655395508

Token 727: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.12515129148960114
    2. '_cycle' → logprob: -2.5001513957977295
    3. '_period' → logprob: -3.7501513957977295
    4. '_step' → logprob: -4.75015115737915
    5. '_steps' → logprob: -6.87515115737915
    6. '(self' → logprob: -7.25015115737915
    7. '_cycles' → logprob: -7.37515115737915
    8. '_times' → logprob: -8.250151634216309
    9. '_value' → logprob: -8.625151634216309
    10. '_interval' → logprob: -9.125151634216309

Token 728: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018458699923940003
    2. '(' → logprob: -8.625185012817383
    3. 'self' → logprob: -13.125185012817383
    4. ' (' → logprob: -13.375185012817383
    5. '   ' → logprob: -14.500185012817383
    6. '(s' → logprob: -14.500185012817383
    7. '(
' → logprob: -15.000185012817383
    8. 's' → logprob: -17.125185012817383
    9. '       ' → logprob: -17.250185012817383
    10. '(Self' → logprob: -17.750185012817383

Token 729: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9698963761329651
    2. ')' → logprob: -1.4698963165283203
    3. '):' → logprob: -1.7198963165283203
    4. '):
' → logprob: -1.8448963165283203
    5. 'self' → logprob: -2.9698963165283203
    6. '   ' → logprob: -7.21989631652832
    7. ')->' → logprob: -8.09489631652832
    8. '       ' → logprob: -8.21989631652832
    9. ',' → logprob: -8.59489631652832
    10. '):
' → logprob: -8.84489631652832

Token 730: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.15441757265944e-05
    2. 'self' → logprob: -11.125031471252441
    3. '(' → logprob: -11.625031471252441
    4. '   ' → logprob: -12.500031471252441
    5. '       ' → logprob: -12.750031471252441
    6. '(
' → logprob: -14.875031471252441
    7. 'def' → logprob: -15.125031471252441
    8. ' (' → logprob: -16.250032424926758
    9. '[self' → logprob: -16.250032424926758
    10. '	self' → logprob: -16.500032424926758

Token 731: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10021087527275085
    2. ' int' → logprob: -2.3502109050750732
    3. '(int' → logprob: -12.725211143493652
    4. '   ' → logprob: -14.350211143493652
    5. 'self' → logprob: -14.600211143493652
    6. '[int' → logprob: -15.600211143493652
    7. ':int' → logprob: -16.975210189819336
    8. '	int' → logprob: -17.350210189819336
    9. ' self' → logprob: -17.350210189819336
    10. '1' → logprob: -17.600210189819336

Token 732: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04716658219695091
    2. '       ' → logprob: -3.422166585922241
    3. '(
' → logprob: -5.172166347503662
    4. '(' → logprob: -5.172166347503662
    5. '   ' → logprob: -7.047166347503662
    6. ':
' → logprob: -7.297166347503662
    7. ':' → logprob: -8.29716682434082
    8. 'self' → logprob: -8.79716682434082
    9. '():
' → logprob: -10.17216682434082
    10. '```' → logprob: -10.54716682434082

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4021237802808173e-05
    2. '```' → logprob: -12.250014305114746
    3. 'return' → logprob: -12.375014305114746
    4. 'result' → logprob: -13.750014305114746
    5. 'n' → logprob: -14.000014305114746
    6. 'a' → logprob: -14.625014305114746
    7. '   ' → logprob: -14.750014305114746
    8. '        
' → logprob: -15.125014305114746
    9. '
' → logprob: -15.375014305114746
    10. '#' → logprob: -15.875014305114746

Token 734: ' #' (ID: 1069)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.11075284332036972
    2. '       ' → logprob: -2.735752820968628
    3. 'cycle' → logprob: -3.860752820968628
    4. ' lengths' → logprob: -4.360753059387207
    5. 'return' → logprob: -5.485753059387207
    6. 'cycles' → logprob: -6.985753059387207
    7. ' cycle' → logprob: -8.235753059387207
    8. 'period' → logprob: -8.360753059387207
    9. '_lengths' → logprob: -8.610753059387207
    10. 'orders' → logprob: -8.985753059387207

Token 735: ' Calculate' (ID: 38942)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.04678567498922348
    2. 'cycle' → logprob: -3.796785593032837
    3. ' lengths' → logprob: -4.921785831451416
    4. '       ' → logprob: -4.921785831451416
    5. 'cycles' → logprob: -4.921785831451416
    6. 'return' → logprob: -7.296785831451416
    7. 'period' → logprob: -8.171785354614258
    8. ' cycle' → logprob: -9.046785354614258
    9. 'times' → logprob: -9.421785354614258
    10. ' cycles' → logprob: -9.921785354614258

Token 736: ' order' (ID: 2569)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.38309773802757263
    2. 'cycle' → logprob: -2.1330976486206055
    3. ' lengths' → logprob: -2.3830976486206055
    4. 'cycles' → logprob: -2.3830976486206055
    5. 'return' → logprob: -5.5080976486206055
    6. '       ' → logprob: -5.6330976486206055
    7. ' cycles' → logprob: -5.8830976486206055
    8. ' cycle' → logprob: -6.1330976486206055
    9. 'times' → logprob: -7.7580976486206055
    10. 'l' → logprob: -8.133097648620605

Token 737: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0021105282939970493
    2. '_lengths' → logprob: -7.002110481262207
    3. ' =' → logprob: -7.627110481262207
    4. ' s' → logprob: -7.752110481262207
    5. '       ' → logprob: -8.502110481262207
    6. '_s' → logprob: -10.252110481262207
    7. '=' → logprob: -11.127110481262207
    8. '(' → logprob: -11.752110481262207
    9. 'length' → logprob: -12.252110481262207
    10. ' lengths' → logprob: -12.877110481262207

Token 738: ' each' (ID: 2454)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.36558935046195984
    2. 'cf' → logprob: -1.3655893802642822
    3. 'cycle' → logprob: -3.3655893802642822
    4. 'self' → logprob: -5.240589141845703
    5. ' finder' → logprob: -5.740589141845703
    6. ' cf' → logprob: -5.865589141845703
    7. 'f' → logprob: -6.115589141845703
    8. 'length' → logprob: -7.240589141845703
    9. ' cycle' → logprob: -7.740589141845703
    10. 'find' → logprob: -7.865589141845703

Token 739: ' coordinate' (ID: 30380)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.8087102174758911
    2. 'cycle' → logprob: -0.8087102174758911
    3. 'finder' → logprob: -2.5587100982666016
    4. ' finder' → logprob: -4.058710098266602
    5. 'length' → logprob: -5.183710098266602
    6. 'cf' → logprob: -6.308710098266602
    7. ' length' → logprob: -6.433710098266602
    8. 'return' → logprob: -7.058710098266602
    9. '       ' → logprob: -7.683710098266602
    10. '   ' → logprob: -7.683710098266602

Token 740: ' transition' (ID: 14463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060060597024858
    2. 'length' → logprob: -5.756006240844727
    3. ' lengths' → logprob: -7.256006240844727
    4. 'orders' → logprob: -7.506006240844727
    5. 'return' → logprob: -7.881006240844727
    6. '_lengths' → logprob: -8.256006240844727
    7. 'times' → logprob: -8.381006240844727
    8. 's' → logprob: -8.631006240844727
    9. 'order' → logprob: -9.131006240844727
    10. 'tokens' → logprob: -9.381006240844727

Token 741: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011271579191088676
    2. 'length' → logprob: -5.7612714767456055
    3. ' lengths' → logprob: -6.0112714767456055
    4. 's' → logprob: -6.0112714767456055
    5. '_lengths' → logprob: -6.8862714767456055
    6. 'return' → logprob: -7.6362714767456055
    7. 'times' → logprob: -7.8862714767456055
    8. 'orders' → logprob: -8.136271476745605
    9. '```' → logprob: -8.886271476745605
    10. ',' → logprob: -9.136271476745605

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009232515469193459
    2. 'length' → logprob: -5.509232521057129
    3. 'return' → logprob: -6.384232521057129
    4. 'orders' → logprob: -6.509232521057129
    5. 'times' → logprob: -7.259232521057129
    6. ' lengths' → logprob: -7.884232521057129
    7. 'order' → logprob: -8.009232521057129
    8. '_lengths' → logprob: -8.884232521057129
    9. 'cycle' → logprob: -9.259232521057129
    10. '```' → logprob: -9.509232521057129

Token 743: ' orders' (ID: 12528)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7193706631660461
    2. 'orders' (adapté à ' orders') → logprob: -0.7193706631660461
    3. '       ' → logprob: -4.4693708419799805
    4. 'order' → logprob: -5.2193708419799805
    5. 'cycles' → logprob: -5.9693708419799805
    6. 'cycle' → logprob: -6.0943708419799805
    7. 'return' → logprob: -6.0943708419799805
    8. ' lengths' → logprob: -6.9693708419799805
    9. 'results' → logprob: -7.7193708419799805
    10. ' orders' → logprob: -8.59437084197998

Token 744: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165629632771015
    2. '=' → logprob: -4.26416540145874
    3. '=[]' → logprob: -14.139165878295898
    4. ' =[' → logprob: -14.264165878295898
    5. '   ' → logprob: -14.889165878295898
    6. '=[' → logprob: -16.2641658782959
    7. '[' → logprob: -16.3891658782959
    8. 's' → logprob: -16.5141658782959
    9. '[:]' → logprob: -16.7641658782959
    10. '[]' → logprob: -17.3891658782959

Token 745: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14352139830589294
    2. '[self' → logprob: -2.143521308898926
    3. '[
' → logprob: -4.143521308898926
    4. '[result' → logprob: -8.393521308898926
    5. ' [' → logprob: -9.268521308898926
    6. '[list' → logprob: -10.268521308898926
    7. '[]
' → logprob: -10.393521308898926
    8. '[int' → logprob: -10.643521308898926
    9. '[event' → logprob: -11.018521308898926
    10. '[to' → logprob: -11.393521308898926

Token 746: 'finder' (ID: 54491)
  Prédit: 'finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.47498252987861633
    2. 'cf' → logprob: -0.974982500076294
    3. ' cf' → logprob: -8.474982261657715
    4. ' finder' → logprob: -8.474982261657715
    5. 'self' → logprob: -8.724982261657715
    6. 'f' → logprob: -8.724982261657715
    7. 'cycle' → logprob: -9.349982261657715
    8. 'c' → logprob: -10.599982261657715
    9. 'fc' → logprob: -11.349982261657715
    10. 'clf' → logprob: -11.474982261657715

Token 747: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -9.984787902794778e-05
    2. '.' → logprob: -9.625100135803223
    3. ' .' → logprob: -10.625100135803223
    4. '().' → logprob: -11.625100135803223
    5. '.cy' → logprob: -15.500100135803223
    6. 'cycle' → logprob: -16.500099182128906
    7. '.chain' → logprob: -17.125099182128906
    8. '   ' → logprob: -17.125099182128906
    9. '.circle' → logprob: -17.625099182128906
    10. '(c' → logprob: -18.000099182128906

Token 748: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -2.696889623621246e-06
    2. 'cycle' → logprob: -12.87500286102295
    3. 'ycl' → logprob: -17.750001907348633
    4. 'ircle' → logprob: -18.375001907348633
    5. 'YCLE' → logprob: -18.750001907348633
    6. 'y' → logprob: -19.000001907348633
    7. 'yle' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.750001907348633
    9. 'ycles' → logprob: -20.125001907348633
    10. ' cycle' → logprob: -20.625001907348633

Token 749: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.7432603272027336e-06
    2. '_l' → logprob: -13.375001907348633
    3. 'length' → logprob: -16.000001907348633
    4. '_' → logprob: -17.875001907348633
    5. '_len' → logprob: -18.125001907348633
    6. '_le' → logprob: -18.500001907348633
    7. '_lengths' → logprob: -18.875001907348633
    8. 'ength' → logprob: -20.250001907348633
    9. 'Length' → logprob: -21.125001907348633
    10. '_leg' → logprob: -21.250001907348633

Token 750: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024801772087812424
    2. '()]' → logprob: -6.0024800300598145
    3. '()
' → logprob: -13.002480506896973
    4. '()`' → logprob: -14.252480506896973
    5. ' ()' → logprob: -14.502480506896973
    6. '()]
' → logprob: -14.627480506896973
    7. ']()' → logprob: -15.502480506896973
    8. '(),' → logprob: -15.752480506896973
    9. '())' → logprob: -16.502479553222656
    10. '()
' → logprob: -16.502479553222656

Token 751: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01872340217232704
    2. 'for' → logprob: -4.268723487854004
    3. '()' → logprob: -5.518723487854004
    4. ']' → logprob: -8.143723487854004
    5. ')' → logprob: -8.518723487854004
    6. '       ' → logprob: -10.268723487854004
    7. '()]' → logprob: -12.518723487854004
    8. '   ' → logprob: -13.018723487854004
    9. '           ' → logprob: -13.768723487854004
    10. '```' → logprob: -13.893723487854004

Token 752: ' finder' (ID: 61306)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.00671584764495492
    2. ' finder' → logprob: -5.006715774536133
    3. 'f' → logprob: -15.256715774536133
    4. 'find' → logprob: -16.256715774536133
    5. 'found' → logprob: -16.506715774536133
    6. 'finding' → logprob: -17.506715774536133
    7. '	f' → logprob: -17.756715774536133
    8. '
' → logprob: -17.881715774536133
    9. 'Finder' → logprob: -18.131715774536133
    10. ' ' → logprob: -18.131715774536133

Token 753: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25202247500419617
    2. 'in' → logprob: -1.5020225048065186
    3. 'finder' → logprob: -10.252022743225098
    4. '<|end|>' → logprob: -11.502022743225098
    5. ' ' → logprob: -11.627022743225098
    6. ']' → logprob: -11.752022743225098
    7. '	in' → logprob: -11.752022743225098
    8. '.' → logprob: -12.252022743225098
    9. '<|end|>' → logprob: -12.627022743225098
    10. 's' → logprob: -13.002022743225098

Token 754: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008048642775975168
    2. ' self' → logprob: -7.125804901123047
    3. '(self' → logprob: -16.125804901123047
    4. '
' → logprob: -16.750804901123047
    5. '       ' → logprob: -16.875804901123047
    6. '   ' → logprob: -17.125804901123047
    7. '           ' → logprob: -17.500804901123047
    8. '[self' → logprob: -18.250804901123047
    9. ' ' → logprob: -18.750804901123047
    10. '	self' → logprob: -18.875804901123047

Token 755: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.250005722045898
    3. ' .' → logprob: -13.875005722045898
    4. '.chain' → logprob: -17.1250057220459
    5. 'cycle' → logprob: -17.2500057220459
    6. ').' → logprob: -18.1250057220459
    7. '.cy' → logprob: -18.3750057220459
    8. '..' → logprob: -18.5000057220459
    9. '_cycle' → logprob: -18.8750057220459
    10. ' ' → logprob: -19.3750057220459

Token 756: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -0.00031508569372817874
    2. 'cycle' → logprob: -8.125314712524414
    3. 'yle' → logprob: -12.000314712524414
    4. 'ircle' → logprob: -13.000314712524414
    5. 'self' → logprob: -13.250314712524414
    6. '   ' → logprob: -13.500314712524414
    7. 'l' → logprob: -14.000314712524414
    8. 'y' → logprob: -14.500314712524414
    9. 'c' → logprob: -14.500314712524414
    10. 'ycl' → logprob: -14.875314712524414

Token 757: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -4.68022444692906e-05
    2. 'find' → logprob: -10.250046730041504
    3. 's' → logprob: -11.500046730041504
    4. '_find' → logprob: -14.625046730041504
    5. ')' → logprob: -14.750046730041504
    6. '_s' → logprob: -16.25004768371582
    7. 'f' → logprob: -16.75004768371582
    8. '[' → logprob: -16.87504768371582
    9. ' find' → logprob: -17.00004768371582
    10. '_' → logprob: -17.25004768371582

Token 758: 'inders' (ID: 41077)
  Prédit: 'inders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inders' → logprob: -0.06201877072453499
    2. 'inder' → logprob: -2.812018871307373
    3. 'ind' → logprob: -10.187018394470215
    4. 'nders' → logprob: -11.437018394470215
    5. 'find' → logprob: -13.562018394470215
    6. 'onders' → logprob: -15.187018394470215
    7. 'iners' → logprob: -15.437018394470215
    8. 'unders' → logprob: -15.437018394470215
    9. '_ind' → logprob: -15.562018394470215
    10. 'iders' → logprob: -16.06201934814453

Token 759: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008062236942350864
    2. ']
' → logprob: -5.008062362670898
    3. '       ' → logprob: -6.633062362670898
    4. ' ]' → logprob: -10.883062362670898
    5. ']
' → logprob: -12.133062362670898
    6. ')' → logprob: -13.133062362670898
    7. '
' → logprob: -13.508062362670898
    8. ')]' → logprob: -14.508062362670898
    9. '   ' → logprob: -14.633062362670898
    10. ']

' → logprob: -14.633062362670898

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43900924921035767
    2. '
' → logprob: -1.064009189605713
    3. 'return' → logprob: -4.939009189605713
    4. '        
' → logprob: -6.314009189605713
    5. ' return' → logprob: -7.439009189605713
    6. 'g' → logprob: -8.564009666442871
    7. '
' → logprob: -9.189009666442871
    8. ' 
' → logprob: -9.314009666442871
    9. '```' → logprob: -9.814009666442871
    10. '  
' → logprob: -10.064009666442871

Token 761: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6363518238067627
    2. '       ' → logprob: -1.1363518238067627
    3. 'from' → logprob: -2.6363518238067627
    4. 'def' → logprob: -3.2613518238067627
    5. 'result' → logprob: -3.8863518238067627
    6. 'l' → logprob: -4.011351585388184
    7. ' return' → logprob: -7.886351585388184
    8. '```' → logprob: -8.261351585388184
    9. ' from' → logprob: -8.386351585388184
    10. '   ' → logprob: -9.761351585388184

Token 762: ' The' (ID: 623)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11128784716129303
    2. 'def' → logprob: -3.236287832260132
    3. 'from' → logprob: -3.861287832260132
    4. 'result' → logprob: -4.236288070678711
    5. ' return' → logprob: -4.361288070678711
    6. 'l' → logprob: -4.486288070678711
    7. '       ' → logprob: -5.486288070678711
    8. ' l' → logprob: -7.236288070678711
    9. ' from' → logprob: -7.611288070678711
    10. ' result' → logprob: -8.486288070678711

Token 763: ' fly' (ID: 14360)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44373607635498047
    2. 'l' → logprob: -2.3187360763549805
    3. ' return' → logprob: -2.3187360763549805
    4. 'from' → logprob: -3.0687360763549805
    5. 'result' → logprob: -3.3187360763549805
    6. 'def' → logprob: -3.4437360763549805
    7. ' l' → logprob: -3.8187360763549805
    8. ' from' → logprob: -4.1937360763549805
    9. ' result' → logprob: -5.0687360763549805
    10. ' def' → logprob: -6.8187360763549805

Token 764: ' returns' (ID: 7377)
  Prédit: '_return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.44621387124061584
    2. ' return' → logprob: -1.8212138414382935
    3. 'return' → logprob: -3.071213960647583
    4. '_time' → logprob: -3.321213960647583
    5. '   ' → logprob: -3.446213960647583
    6. '_returns' → logprob: -4.196213722229004
    7. ' from' → logprob: -4.696213722229004
    8. '       ' → logprob: -4.821213722229004
    9. '_' → logprob: -4.821213722229004
    10. ''s' → logprob: -4.946213722229004

Token 765: ' to' (ID: 316)
  Prédit: ' orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orders' → logprob: -0.11199761182069778
    2. ' to' → logprob: -2.986997604370117
    3. 'orders' → logprob: -3.236997604370117
    4. ' times' → logprob: -4.986997604370117
    5. ' at' → logprob: -5.486997604370117
    6. ' self' → logprob: -6.736997604370117
    7. ' ' → logprob: -7.111997604370117
    8. 'times' → logprob: -7.361997604370117
    9. ' when' → logprob: -7.611997604370117
    10. ' reduce' → logprob: -7.861997604370117

Token 766: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9365819692611694
    2. 'reduce' → logprob: -1.1865819692611694
    3. ' reduce' → logprob: -2.061582088470459
    4. ' the' → logprob: -3.061582088470459
    5. ' ' → logprob: -3.686582088470459
    6. 'the' → logprob: -3.936582088470459
    7. 'orders' → logprob: -4.061582088470459
    8. '0' → logprob: -4.311582088470459
    9. 'self' → logprob: -4.561582088470459
    10. 'positions' → logprob: -4.936582088470459

Token 767: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0102220568805933
    2. ' ' → logprob: -4.6352219581604
    3. '(' → logprob: -8.385222434997559
    4. ' (' → logprob: -9.010222434997559
    5. '   ' → logprob: -10.135222434997559
    6. ')' → logprob: -10.385222434997559
    7. '           ' → logprob: -11.260222434997559
    8. '       ' → logprob: -11.635222434997559
    9. '1' → logprob: -12.260222434997559
    10. 'self' → logprob: -12.510222434997559

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18061602115631104
    2. ')' → logprob: -1.930616021156311
    3. '0' → logprob: -5.1806159019470215
    4. ' )' → logprob: -5.6806159019470215
    5. ' ,' → logprob: -5.6806159019470215
    6. ',
' → logprob: -6.3056159019470215
    7. ',)' → logprob: -6.6806159019470215
    8. '1' → logprob: -6.8056159019470215
    9. ')
' → logprob: -7.1806159019470215
    10. '       ' → logprob: -7.8056159019470215

Token 769: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0053202081471681595
    2. ' ' → logprob: -5.255320072174072
    3. '0' → logprob: -10.38032054901123
    4. ')' → logprob: -10.63032054901123
    5. ',' → logprob: -11.13032054901123
    6. '
' → logprob: -11.50532054901123
    7. '   ' → logprob: -13.25532054901123
    8. '```' → logprob: -13.63032054901123
    9. '

' → logprob: -14.19282054901123
    10. '  ' → logprob: -14.88032054901123

Token 770: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006111674592830241
    2. ' ' → logprob: -7.750611305236816
    3. ',' → logprob: -9.125611305236816
    4. '0' → logprob: -10.375611305236816
    5. ')' → logprob: -11.125611305236816
    6. '   ' → logprob: -11.500611305236816
    7. '
' → logprob: -12.000611305236816
    8. '...' → logprob: -13.000611305236816
    9. '```' → logprob: -13.688111305236816
    10. '),' → logprob: -14.313111305236816

Token 771: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6367769241333008
    2. ',' → logprob: -0.7617769241333008
    3. ')
' → logprob: -6.136776924133301
    4. ' ,' → logprob: -7.136776924133301
    5. 'mod' → logprob: -7.761776924133301
    6. '       ' → logprob: -8.2617769241333
    7. ' )' → logprob: -9.0117769241333
    8. '),' → logprob: -9.2617769241333
    9. ' modulo' → logprob: -10.5117769241333
    10. ')`' → logprob: -10.5117769241333

Token 772: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013415542198345065
    2. ' ' → logprob: -6.626341342926025
    3. '   ' → logprob: -11.876341819763184
    4. ')' → logprob: -12.751341819763184
    5. ',' → logprob: -13.438841819763184
    6. '  ' → logprob: -13.938841819763184
    7. '    ' → logprob: -14.313841819763184
    8. '
' → logprob: -14.563841819763184
    9. '       ' → logprob: -14.751341819763184
    10. '```' → logprob: -14.751341819763184

Token 773: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019357812125235796
    2. ' ' → logprob: -6.251935958862305
    3. ')' → logprob: -13.001935958862305
    4. '   ' → logprob: -13.564435958862305
    5. ',' → logprob: -14.064435958862305
    6. '```' → logprob: -14.064435958862305
    7. '  ' → logprob: -15.064435958862305
    8. '...' → logprob: -15.314435958862305
    9. '       ' → logprob: -15.376935958862305
    10. '
' → logprob: -15.376935958862305

Token 774: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004643603693693876
    2. ')
' → logprob: -5.629643440246582
    3. ' )' → logprob: -7.629643440246582
    4. ',' → logprob: -8.004643440246582
    5. '       ' → logprob: -9.379643440246582
    6. 'position' → logprob: -11.004643440246582
    7. 'mod' → logprob: -11.129643440246582
    8. '),' → logprob: -11.629643440246582
    9. 'state' → logprob: -11.629643440246582
    10. ',)' → logprob: -11.629643440246582

Token 775: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01231338456273079
    2. 'return' → logprob: -5.012313365936279
    3. ' return' → logprob: -5.512313365936279
    4. '
' → logprob: -6.887313365936279
    5. ',' → logprob: -8.512313842773438
    6. ' after' → logprob: -9.387313842773438
    7. ' in' → logprob: -9.512313842773438
    8. ' at' → logprob: -9.637313842773438
    9. '        
' → logprob: -11.012313842773438
    10. ' and' → logprob: -11.512313842773438

Token 776: ' all' (ID: 722)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.17139896750450134
    2. ' reduce' → logprob: -2.046398878097534
    3. ' the' → logprob: -4.421399116516113
    4. '       ' → logprob: -4.546399116516113
    5. '   ' → logprob: -6.171399116516113
    6. 'the' → logprob: -6.296399116516113
    7. 'return' → logprob: -7.421399116516113
    8. ' orders' → logprob: -8.421399116516113
    9. 'orders' → logprob: -8.421399116516113
    10. ' return' → logprob: -9.046399116516113

Token 777: ' three' (ID: 3407)
  Prédit: 'orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orders' → logprob: -0.012763085775077343
    2. ' orders' → logprob: -4.512763023376465
    3. 'order' → logprob: -7.512763023376465
    4. ' three' → logprob: -7.637763023376465
    5. 'three' → logprob: -8.012763023376465
    6. 'coordinates' → logprob: -8.387763023376465
    7. ' coordinates' → logprob: -10.762763023376465
    8. 'cycles' → logprob: -10.887763023376465
    9. '       ' → logprob: -11.262763023376465
    10. 'ord' → logprob: -11.762763023376465

Token 778: ' coordinates' (ID: 27933)
  Prédit: 'orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orders' → logprob: -0.5266227722167969
    2. ' orders' → logprob: -0.9016227722167969
    3. ' return' → logprob: -6.651622772216797
    4. ' cycles' → logprob: -7.276622772216797
    5. 'order' → logprob: -7.651622772216797
    6. 'return' → logprob: -8.401622772216797
    7. 'cycles' → logprob: -8.401622772216797
    8. ' periods' → logprob: -8.651622772216797
    9. ' order' → logprob: -9.026622772216797
    10. ' coordinates' → logprob: -10.026622772216797

Token 779: ' simultaneously' (ID: 38328)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.3098108768463135
    2. ' simultaneously' → logprob: -1.4348108768463135
    3. ' are' → logprob: -1.5598108768463135
    4. 'return' → logprob: -1.8098108768463135
    5. ' align' → logprob: -3.3098108768463135
    6. ' have' → logprob: -3.5598108768463135
    7. 'are' → logprob: -4.559810638427734
    8. ' multiply' → logprob: -4.684810638427734
    9. ' coincide' → logprob: -5.434810638427734
    10. 'align' → logprob: -5.434810638427734

Token 780: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8142148852348328
    2. ' return' → logprob: -0.9392148852348328
    3. ' have' → logprob: -2.4392149448394775
    4. ' are' → logprob: -3.4392149448394775
    5. '       ' → logprob: -4.314214706420898
    6. 'have' → logprob: -5.189214706420898
    7. ' cycle' → logprob: -5.439214706420898
    8. ''s' → logprob: -5.814214706420898
    9. 'are' → logprob: -6.064214706420898
    10. 'cycle' → logprob: -6.314214706420898

Token 781: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003852216759696603
    2. ' to' → logprob: -6.253852367401123
    3. ',' → logprob: -6.878852367401123
    4. 'return' → logprob: -7.378852367401123
    5. 'to' → logprob: -9.253851890563965
    6. '
' → logprob: -10.503851890563965
    7. ' (' → logprob: -10.878851890563965
    8. ' return' → logprob: -10.878851890563965
    9. 'times' → logprob: -10.878851890563965
    10. '        
' → logprob: -11.253851890563965

Token 782: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003636065172031522
    2. ' ' → logprob: -5.628635883331299
    3. 'their' → logprob: -11.128636360168457
    4. ' their' → logprob: -11.753636360168457
    5. '```' → logprob: -12.503636360168457
    6. '   ' → logprob: -12.753636360168457
    7. 'the' → logprob: -13.128636360168457
    8. '`' → logprob: -13.878636360168457
    9. ' the' → logprob: -14.003636360168457
    10. '0' → logprob: -14.753636360168457

Token 783: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001766040368238464
    2. 'their' → logprob: -9.375176429748535
    3. ' ' → logprob: -9.500176429748535
    4. 'the' → logprob: -12.250176429748535
    5. '```' → logprob: -12.750176429748535
    6. '   ' → logprob: -12.875176429748535
    7. ' their' → logprob: -12.875176429748535
    8. '
' → logprob: -13.500176429748535
    9. '`' → logprob: -15.125176429748535
    10. 'one' → logprob: -15.125176429748535

Token 784: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032392668072134256
    2. '
' → logprob: -6.378239154815674
    3. 'return' → logprob: -7.128239154815674
    4. ',' → logprob: -7.753239154815674
    5. '        
' → logprob: -9.003239631652832
    6. '.' → logprob: -9.628239631652832
    7. '.
' → logprob: -10.003239631652832
    8. ' return' → logprob: -11.253239631652832
    9. ',
' → logprob: -12.003239631652832
    10. ' =' → logprob: -12.003239631652832

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004425132647156715
    2. 'return' → logprob: -5.754425048828125
    3. '
' → logprob: -6.879425048828125
    4. '        
' → logprob: -9.004425048828125
    5. ' return' → logprob: -9.504425048828125
    6. 'import' → logprob: -12.004425048828125
    7. 'from' → logprob: -12.254425048828125
    8. 'result' → logprob: -13.504425048828125
    9. ',' → logprob: -13.629425048828125
    10. '   ' → logprob: -13.754425048828125

Token 786: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07192404568195343
    2. 'return' → logprob: -2.6969239711761475
    3. 'from' → logprob: -6.946924209594727
    4. ' return' → logprob: -7.071924209594727
    5. 'result' → logprob: -9.196924209594727
    6. ' from' → logprob: -10.696924209594727
    7. '
' → logprob: -11.321924209594727
    8. '```' → logprob: -11.321924209594727
    9. 'l' → logprob: -11.696924209594727
    10. 'import' → logprob: -11.821924209594727

Token 787: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8351247310638428
    2. 'return' → logprob: -0.8351247310638428
    3. ' return' → logprob: -2.8351247310638428
    4. 'from' → logprob: -2.8351247310638428
    5. ' from' → logprob: -5.085124969482422
    6. ' l' → logprob: -5.835124969482422
    7. 'l' → logprob: -6.085124969482422
    8. '
' → logprob: -6.460124969482422
    9. 'result' → logprob: -6.710124969482422
    10. 'def' → logprob: -8.085124969482422

Token 788: ' overall' (ID: 10705)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9162091016769409
    2. 'from' → logprob: -1.541209101676941
    3. ' from' → logprob: -1.791209101676941
    4. ' return' → logprob: -1.916209101676941
    5. 'def' → logprob: -3.2912092208862305
    6. 'l' → logprob: -4.1662092208862305
    7. ' l' → logprob: -4.2912092208862305
    8. ' def' → logprob: -6.0412092208862305
    9. 'import' → logprob: -6.6662092208862305
    10. '       ' → logprob: -6.9162092208862305

Token 789: ' cycle' (ID: 15839)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1320379376411438
    2. 'return' → logprob: -2.132037878036499
    3. ' time' → logprob: -5.632038116455078
    4. '_return' → logprob: -7.757038116455078
    5. ' result' → logprob: -8.382038116455078
    6. 'time' → logprob: -9.007038116455078
    7. ' minimum' → logprob: -9.132038116455078
    8. ' order' → logprob: -9.382038116455078
    9. 'import' → logprob: -9.507038116455078
    10. '_time' → logprob: -9.632038116455078

Token 790: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.914115846157074
    2. ' length' → logprob: -1.6641159057617188
    3. 'length' → logprob: -1.7891159057617188
    4. ' =' → logprob: -1.9141159057617188
    5. '=' → logprob: -3.0391159057617188
    6. ' is' → logprob: -4.289115905761719
    7. '_time' → logprob: -4.414115905761719
    8. ' time' → logprob: -4.539115905761719
    9. 'time' → logprob: -5.289115905761719
    10. '       ' → logprob: -5.414115905761719

Token 791: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16599014401435852
    2. '=' → logprob: -1.9159901142120361
    3. ' is' → logprob: -5.415990352630615
    4. '       ' → logprob: -6.665990352630615
    5. '   ' → logprob: -12.290989875793457
    6. 'is' → logprob: -12.415989875793457
    7. ' return' → logprob: -12.540989875793457
    8. 'return' → logprob: -12.540989875793457
    9. ' ' → logprob: -12.915989875793457
    10. 's' → logprob: -13.040989875793457

Token 792: ' the' (ID: 290)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.1605016440153122
    2. ' reduce' → logprob: -1.9105015993118286
    3. '       ' → logprob: -8.285501480102539
    4. '   ' → logprob: -11.410501480102539
    5. '    ' → logprob: -12.160501480102539
    6. 'redu' → logprob: -12.910501480102539
    7. '.reduce' → logprob: -13.160501480102539
    8. '           ' → logprob: -13.910501480102539
    9. '        ' → logprob: -13.910501480102539
    10. ' ' → logprob: -14.410501480102539

Token 793: ' l' (ID: 305)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0013048797845840454
    2. ' reduce' → logprob: -6.751305103302002
    3. '1' → logprob: -9.501304626464844
    4. 'orders' → logprob: -10.626304626464844
    5. '   ' → logprob: -11.001304626464844
    6. ' ' → logprob: -11.376304626464844
    7. ' orders' → logprob: -13.251304626464844
    8. 'l' → logprob: -13.501304626464844
    9. '.reduce' → logprob: -13.501304626464844
    10. 'redu' → logprob: -14.001304626464844

Token 794: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.005930813029408455
    2. 'ambda' → logprob: -5.3809309005737305
    3. 'CM' → logprob: -7.8809309005737305
    4. 'reduce' → logprob: -8.25593090057373
    5. 'oad' → logprob: -8.75593090057373
    6. '   ' → logprob: -9.13093090057373
    7. 'ength' → logprob: -9.38093090057373
    8. '1' → logprob: -9.88093090057373
    9. 'eft' → logprob: -10.13093090057373
    10. '_cm' → logprob: -10.63093090057373

Token 795: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5549988150596619
    2. '(
' → logprob: -1.0549988746643066
    3. '       ' → logprob: -3.9299988746643066
    4. 'def' → logprob: -4.054998874664307
    5. ' =' → logprob: -4.429998874664307
    6. '_' → logprob: -4.554998874664307
    7. '=' → logprob: -5.554998874664307
    8. 'import' → logprob: -5.804998874664307
    9. ' (' → logprob: -5.929998874664307
    10. ' of' → logprob: -6.054998874664307

Token 796: ' these' (ID: 1879)
  Prédit: 'orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orders' → logprob: -0.0015487833879888058
    2. ' orders' → logprob: -7.126548767089844
    3. 'reduce' → logprob: -7.626548767089844
    4. '*' → logprob: -8.376548767089844
    5. '   ' → logprob: -11.001548767089844
    6. 'order' → logprob: -12.876548767089844
    7. '(*' → logprob: -13.376548767089844
    8. '       ' → logprob: -13.626548767089844
    9. ' reduce' → logprob: -13.626548767089844
    10. ' *' → logprob: -14.251548767089844

Token 797: ' orders' (ID: 12528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2918173372745514
    2. 'orders' → logprob: -1.541817307472229
    3. ' orders' → logprob: -4.5418171882629395
    4. '(
' → logprob: -4.7918171882629395
    5. ' of' → logprob: -5.0418171882629395
    6. '[' → logprob: -5.7918171882629395
    7. '[
' → logprob: -6.0418171882629395
    8. '([' → logprob: -6.1668171882629395
    9. 'of' → logprob: -6.5418171882629395
    10. '(ord' → logprob: -6.9168171882629395

Token 798: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010376152582466602
    2. '
' → logprob: -4.7603759765625
    3. '        
' → logprob: -7.0103759765625
    4. 'return' → logprob: -7.5103759765625
    5. 'def' → logprob: -8.7603759765625
    6. 'from' → logprob: -10.0103759765625
    7. 'import' → logprob: -10.3853759765625
    8. '    
' → logprob: -11.3853759765625
    9. '       
' → logprob: -11.3853759765625
    10. ',' → logprob: -11.5103759765625

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031508569372817874
    2. '        
' → logprob: -8.500314712524414
    3. '
' → logprob: -10.625314712524414
    4. 'def' → logprob: -10.750314712524414
    5. 'from' → logprob: -11.000314712524414
    6. 'return' → logprob: -11.250314712524414
    7. 'import' → logprob: -11.375314712524414
    8. ' from' → logprob: -12.250314712524414
    9. ' =' → logprob: -12.375314712524414
    10. ',' → logprob: -12.875314712524414

Token 800: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25995421409606934
    2. 'def' → logprob: -1.6349542140960693
    3. 'from' → logprob: -3.7599542140960693
    4. ' from' → logprob: -5.384954452514648
    5. ' def' → logprob: -6.384954452514648
    6. 'return' (adapté à ' return') → logprob: -6.384954452514648
    7. 'result' → logprob: -6.634954452514648
    8. '        
' → logprob: -7.634954452514648
    9. ' return' → logprob: -8.384954452514648
    10. ' result' → logprob: -8.384954452514648

Token 801: ' self' (ID: 1051)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5233203172683716
    2. ' reduce' → logprob: -0.8983203172683716
    3. '   ' → logprob: -9.148320198059082
    4. ' ' → logprob: -10.398320198059082
    5. ' orders' → logprob: -10.773320198059082
    6. 'orders' → logprob: -10.898320198059082
    7. '1' → logprob: -12.523320198059082
    8. 'redu' → logprob: -12.523320198059082
    9. '    ' → logprob: -12.773320198059082
    10. '  ' → logprob: -13.148320198059082

Token 802: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10485576093196869
    2. '._' → logprob: -2.47985577583313
    3. ' .' → logprob: -5.729855537414551
    4. '.l' → logprob: -5.979855537414551
    5. '.return' → logprob: -6.479855537414551
    6. '.compute' → logprob: -6.604855537414551
    7. '.orders' → logprob: -6.604855537414551
    8. '.m' → logprob: -7.354855537414551
    9. '.g' → logprob: -7.604855537414551
    10. '.math' → logprob: -7.604855537414551

Token 803: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0013351208763197064
    2. '_l' → logprob: -6.751335144042969
    3. 'lc' → logprob: -9.126335144042969
    4. 'reduce' → logprob: -9.876335144042969
    5. 'least' → logprob: -13.376335144042969
    6. '_' → logprob: -14.376335144042969
    7. 'compute' → logprob: -14.751335144042969
    8. 'lcd' → logprob: -14.876335144042969
    9. '_reduce' → logprob: -14.876335144042969
    10. '.l' → logprob: -15.126335144042969

Token 804: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -7.896309739408025e-07
    2. 'c' → logprob: -15.125000953674316
    3. 'cms' → logprob: -15.250000953674316
    4. '_cm' → logprob: -16.5
    5. '   ' → logprob: -17.375
    6. 'l' → logprob: -17.625
    7. 'cmp' → logprob: -17.875
    8. 'cmd' → logprob: -18.375
    9. ' cm' → logprob: -18.5
    10. 'cd' → logprob: -18.5

Token 805: '_multiple' (ID: 111487)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008367881178855896
    2. '(*' → logprob: -5.633368015289307
    3. '(
' → logprob: -5.633368015289307
    4. 'reduce' → logprob: -8.133367538452148
    5. '_reduce' → logprob: -8.383367538452148
    6. '.reduce' → logprob: -8.633367538452148
    7. '(re' → logprob: -9.258367538452148
    8. ' (' → logprob: -9.508367538452148
    9. '([' → logprob: -10.133367538452148
    10. '(ord' → logprob: -10.383367538452148

Token 806: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003121056070085615
    2. '([' → logprob: -8.250311851501465
    3. '(ord' → logprob: -10.500311851501465
    4. '(
' → logprob: -11.625311851501465
    5. ' (' → logprob: -11.625311851501465
    6. '[' → logprob: -12.875311851501465
    7. 'orders' → logprob: -14.250311851501465
    8. '((' → logprob: -14.750311851501465
    9. '```' → logprob: -15.125311851501465
    10. '([
' → logprob: -15.375311851501465

Token 807: 'orders' (ID: 13243)
  Prédit: 'orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orders' → logprob: -1.7432603272027336e-06
    2. ' orders' → logprob: -13.625001907348633
    3. '[' → logprob: -15.250001907348633
    4. ')' → logprob: -15.875001907348633
    5. '*' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '       ' → logprob: -18.375001907348633
    8. 'order' → logprob: -18.750001907348633
    9. '.orders' → logprob: -18.750001907348633
    10. '
' → logprob: -19.500001907348633

Token 808: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037352300714701414
    2. ')
' → logprob: -6.128735065460205
    3. ')

' → logprob: -7.378735065460205
    4. '       ' → logprob: -7.378735065460205
    5. '   ' → logprob: -8.128735542297363
    6. ' )' → logprob: -13.128735542297363
    7. ' ' → logprob: -14.003735542297363
    8. ')
' → logprob: -14.878735542297363
    9. ')

' → logprob: -15.378735542297363
    10. '  ' → logprob: -15.503735542297363

Token 809: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015818264335393906
    2. '
' → logprob: -4.390818119049072
    3. 'def' → logprob: -6.390818119049072
    4. '```' → logprob: -6.515818119049072
    5. '    
' → logprob: -9.01581859588623
    6. ' def' → logprob: -11.26581859588623
    7. '``' → logprob: -13.14081859588623
    8. ' ' → logprob: -13.26581859588623
    9. '<|end|>' → logprob: -13.76581859588623
    10. '  ' → logprob: -14.14081859588623

Token 810: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005305266007781029
    2. '   ' → logprob: -5.255305290222168
    3. ' def' → logprob: -10.505305290222168
    4. '
' → logprob: -10.505305290222168
    5. '@' → logprob: -11.005305290222168
    6. '    
' → logprob: -17.50530433654785
    7. '```' → logprob: -17.88030433654785
    8. '	def' → logprob: -18.00530433654785
    9. ' ' → logprob: -18.88030433654785
    10. '  ' → logprob: -19.00530433654785

Token 811: ' _' (ID: 1175)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.2847755551338196
    2. ' _' → logprob: -1.4097754955291748
    3. '_' → logprob: -5.659775733947754
    4. '_a' → logprob: -10.784775733947754
    5. ' def' → logprob: -11.034775733947754
    6. 'def' → logprob: -11.159775733947754
    7. '_s' → logprob: -11.159775733947754
    8. ' ' → logprob: -11.534775733947754
    9. '_r' → logprob: -11.909775733947754
    10. '_L' → logprob: -11.909775733947754

Token 812: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00012356207298580557
    2. '_l' → logprob: -9.000123977661133
    3. 'lc' → logprob: -16.875123977661133
    4. 'def' → logprob: -16.875123977661133
    5. ' l' → logprob: -19.375123977661133
    6. 'g' → logprob: -20.500123977661133
    7. 'from' → logprob: -20.750123977661133
    8. '*l' → logprob: -21.750123977661133
    9. 'lcd' → logprob: -21.875123977661133
    10. '	l' → logprob: -21.875123977661133

Token 813: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.8889261304575484e-06
    2. '_cm' → logprob: -12.500003814697266
    3. '_c' → logprob: -16.625003814697266
    4. 'cms' → logprob: -18.000003814697266
    5. 'c' → logprob: -18.375003814697266
    6. '_' → logprob: -18.500003814697266
    7. ' cm' → logprob: -19.250003814697266
    8. '   ' → logprob: -20.000003814697266
    9. 'l' → logprob: -20.375003814697266
    10. 'CM' → logprob: -20.500003814697266

Token 814: '(self' (ID: 2402)
  Prédit: '_multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.003545901272445917
    2. '(self' → logprob: -6.128545761108398
    3. '_m' → logprob: -7.253545761108398
    4. '_' → logprob: -7.753545761108398
    5. '_mul' → logprob: -9.253545761108398
    6. '_single' → logprob: -10.753545761108398
    7. '_many' → logprob: -11.128545761108398
    8. '(a' → logprob: -11.253545761108398
    9. '_(' → logprob: -11.378545761108398
    10. '(' → logprob: -11.628545761108398

Token 815: ',' (ID: 11)
  Prédit: '_multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.0014935573562979698
    2. '_m' → logprob: -7.126493453979492
    3. '_' → logprob: -8.001493453979492
    4. ')_' → logprob: -9.251493453979492
    5. '_mul' → logprob: -9.376493453979492
    6. '(self' → logprob: -9.876493453979492
    7. '_many' → logprob: -10.751493453979492
    8. '_multi' → logprob: -11.001493453979492
    9. '_self' → logprob: -11.251493453979492
    10. 'a' → logprob: -11.376493453979492

Token 816: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015236093662679195
    2. 'x' → logprob: -4.515235900878906
    3. 'self' → logprob: -5.515235900878906
    4. ' a' → logprob: -9.015235900878906
    5. ' x' → logprob: -10.640235900878906
    6. '   ' → logprob: -12.140235900878906
    7. ' self' → logprob: -12.890235900878906
    8. '	a' → logprob: -14.390235900878906
    9. '       ' → logprob: -15.265235900878906
    10. ' ' → logprob: -16.265235900878906

Token 817: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.232493564719334e-05
    2. ' ,' → logprob: -9.625082015991211
    3. ',y' → logprob: -11.375082015991211
    4. '   ' → logprob: -13.125082015991211
    5. ',x' → logprob: -14.000082015991211
    6. ',int' → logprob: -14.750082015991211
    7. ':' → logprob: -15.000082015991211
    8. ':int' → logprob: -15.250082015991211
    9. 'self' → logprob: -15.500082015991211
    10. '       ' → logprob: -15.500082015991211

Token 818: ' int' (ID: 677)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.33171895146369934
    2. 'int' → logprob: -1.331718921661377
    3. ' y' → logprob: -4.331718921661377
    4. ',' → logprob: -5.706718921661377
    5. ' int' → logprob: -6.456718921661377
    6. ' ' → logprob: -9.706719398498535
    7. '<|end|>' → logprob: -9.831719398498535
    8. ',int' → logprob: -10.081719398498535
    9. ',y' → logprob: -10.706719398498535
    10. '[int' → logprob: -11.081719398498535

Token 819: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.250004768371582
    3. ',y' → logprob: -15.875004768371582
    4. ',
' → logprob: -16.8750057220459
    5. ',int' → logprob: -16.8750057220459
    6. '   ' → logprob: -19.0000057220459
    7. ')' → logprob: -19.3750057220459
    8. ',x' → logprob: -19.8750057220459
    9. '```' → logprob: -19.8750057220459
    10. '‌,' → logprob: -20.1250057220459

Token 820: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020678490400314
    2. ' y' → logprob: -2.3502068519592285
    3. '	y' → logprob: -15.72520637512207
    4. ' ' → logprob: -17.60020637512207
    5. '   ' → logprob: -18.22520637512207
    6. '    ' → logprob: -18.72520637512207
    7. '<|end|>' → logprob: -18.85020637512207
    8. '  ' → logprob: -19.47520637512207
    9. ''y' → logprob: -20.60020637512207
    10. ',y' → logprob: -20.97520637512207

Token 821: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44513770937919617
    2. ':' → logprob: -1.4451377391815186
    3. ')' → logprob: -2.1951377391815186
    4. '):
' → logprob: -4.4451375007629395
    5. ' ):' → logprob: -8.445137977600098
    6. ':int' → logprob: -9.445137977600098
    7. '   ' → logprob: -9.695137977600098
    8. ' )' → logprob: -10.070137977600098
    9. '):

' → logprob: -10.320137977600098
    10. ',' → logprob: -11.570137977600098

Token 822: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008619066327810287
    2. ' int' → logprob: -4.7586188316345215
    3. ')' → logprob: -12.50861930847168
    4. ':int' → logprob: -15.13361930847168
    5. '[int' → logprob: -15.63361930847168
    6. '(int' → logprob: -15.88361930847168
    7. ' ' → logprob: -15.88361930847168
    8. '   ' → logprob: -16.63361930847168
    9. '=int' → logprob: -16.75861930847168
    10. '	int' → logprob: -17.50861930847168

Token 823: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022477959282696247
    2. '):' → logprob: -6.1272478103637695
    3. '):
' → logprob: -9.87724781036377
    4. ' )' → logprob: -11.50224781036377
    5. ')->' → logprob: -14.75224781036377
    6. ' ):' → logprob: -15.37724781036377
    7. '):

' → logprob: -15.50224781036377
    8. '):
' → logprob: -15.62724781036377
    9. ':' → logprob: -15.87724781036377
    10. ')=' → logprob: -16.752246856689453

Token 824: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012630375567823648
    2. ':
' → logprob: -9.250125885009766
    3. ':return' → logprob: -11.250125885009766
    4. ' :' → logprob: -12.000125885009766
    5. ':int' → logprob: -12.500125885009766
    6. '):' → logprob: -13.000125885009766
    7. '=' → logprob: -13.375125885009766
    8. '   ' → logprob: -13.625125885009766
    9. '):
' → logprob: -15.000125885009766
    10. ',' → logprob: -15.000125885009766

Token 825: ' int' (ID: 677)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1271471083164215
    2. ' x' → logprob: -2.1271471977233887
    3. 'int' → logprob: -9.00214672088623
    4. '(x' → logprob: -9.62714672088623
    5. ' (' → logprob: -10.50214672088623
    6. ' int' → logprob: -14.25214672088623
    7. '(int' → logprob: -14.50214672088623
    8. '(' → logprob: -14.50214672088623
    9. ' ' → logprob: -15.00214672088623
    10. '	x' → logprob: -15.12714672088623

Token 826: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02977536804974079
    2. ':
' → logprob: -3.529775381088257
    3. '):
' → logprob: -12.029775619506836
    4. ':return' → logprob: -12.154775619506836
    5. ':
' → logprob: -12.529775619506836
    6. '       ' → logprob: -12.529775619506836
    7. '   ' → logprob: -13.279775619506836
    8. '):' → logprob: -13.904775619506836
    9. ',' → logprob: -13.904775619506836
    10. '=' → logprob: -14.029775619506836

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49086877703666687
    2. ' return' → logprob: -1.3658688068389893
    3. ' x' → logprob: -2.7408688068389893
    4. 'return' → logprob: -2.7408688068389893
    5. 'x' → logprob: -6.11586856842041
    6. ' 
' → logprob: -7.61586856842041
    7. '   ' → logprob: -8.99086856842041
    8. ' if' → logprob: -8.99086856842041
    9. ' gcd' → logprob: -9.11586856842041
    10. '        ' → logprob: -9.49086856842041

Token 828: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04893263429403305
    2. ' return' → logprob: -3.0489325523376465
    3. '       ' → logprob: -8.548933029174805
    4. ' x' → logprob: -9.048933029174805
    5. 'x' → logprob: -10.673933029174805
    6. '	return' → logprob: -12.423933029174805
    7. '        ' → logprob: -12.798933029174805
    8. '   ' → logprob: -13.173933029174805
    9. '        
' → logprob: -14.298933029174805
    10. '    ' → logprob: -14.423933029174805

Token 829: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012694577686488628
    2. '(x' → logprob: -4.762694358825684
    3. ' x' → logprob: -5.512694358825684
    4. ' (' → logprob: -10.262694358825684
    5. '(' → logprob: -14.137694358825684
    6. '   ' → logprob: -15.012694358825684
    7. '	x' → logprob: -15.637694358825684
    8. '```' → logprob: -16.5126953125
    9. ' ' → logprob: -16.6376953125
    10. '  ' → logprob: -16.8876953125

Token 830: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08166566491127014
    2. ' *' → logprob: -2.5816657543182373
    3. '*y' → logprob: -6.206665515899658
    4. '//' → logprob: -7.706665515899658
    5. '*x' → logprob: -8.206665992736816
    6. '*l' → logprob: -10.831665992736816
    7. ' //' → logprob: -11.956665992736816
    8. '*j' → logprob: -13.831665992736816
    9. '*k' → logprob: -13.831665992736816
    10. '*b' → logprob: -13.956665992736816

Token 831: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.676981345459353e-06
    2. ' y' → logprob: -12.625005722045898
    3. '(y' → logprob: -13.000005722045898
    4. '   ' → logprob: -18.5000057220459
    5. '(' → logprob: -19.0000057220459
    6. '//' → logprob: -19.3750057220459
    7. '#' → logprob: -20.1250057220459
    8. ''y' → logprob: -20.2500057220459
    9. '	y' → logprob: -20.6250057220459
    10. '```' → logprob: -20.7500057220459

Token 832: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25193437933921814
    2. '//' → logprob: -1.5019344091415405
    3. '   ' → logprob: -13.001934051513672
    4. ' ' → logprob: -13.626934051513672
    5. '```' → logprob: -14.501934051513672
    6. '#' → logprob: -14.626934051513672
    7. ' ' → logprob: -14.626934051513672
    8. '  ' → logprob: -15.501934051513672
    9. '       ' → logprob: -15.751934051513672
    10. '    ' → logprob: -17.001934051513672

Token 833: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' gcd' → logprob: -16.0
    3. '   ' → logprob: -20.5
    4. '(g' → logprob: -21.5
    5. '       ' → logprob: -22.5
    6. '	g' → logprob: -22.875
    7. '_g' → logprob: -23.375
    8. '/g' → logprob: -23.375
    9. '```' → logprob: -23.625
    10. '[g' → logprob: -23.75

Token 834: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.875008583068848
    3. 'x' → logprob: -13.625008583068848
    4. '(
' → logprob: -16.25000762939453
    5. ' (' → logprob: -19.12500762939453
    6. '```' → logprob: -21.75000762939453
    7. '(y' → logprob: -22.75000762939453
    8. '{x' → logprob: -23.00000762939453
    9. ',x' → logprob: -23.12500762939453
    10. '\(' → logprob: -23.50000762939453

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019042402505874634
    2. ',y' → logprob: -4.019042491912842
    3. 'y' → logprob: -7.144042491912842
    4. ' ,' → logprob: -9.894042015075684
    5. '(y' → logprob: -10.894042015075684
    6. ' y' → logprob: -11.019042015075684
    7. '(' → logprob: -12.144042015075684
    8. '(x' → logprob: -12.394042015075684
    9. ',
' → logprob: -12.519042015075684
    10. ',x' → logprob: -13.394042015075684

Token 836: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3871414065361023
    2. 'x' → logprob: -1.137141466140747
    3. ' y' → logprob: -8.262141227722168
    4. ' x' → logprob: -11.512141227722168
    5. '(x' → logprob: -13.387141227722168
    6. ')' → logprob: -15.512141227722168
    7. 'xy' → logprob: -15.762141227722168
    8. '   ' → logprob: -16.262142181396484
    9. '(y' → logprob: -16.262142181396484
    10. ' ' → logprob: -16.762142181396484

Token 837: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.50000286102295
    3. '<|end|>' → logprob: -14.00000286102295
    4. ' )' → logprob: -15.25000286102295
    5. '   ' → logprob: -16.500001907348633
    6. '}' → logprob: -16.875001907348633
    7. '       ' → logprob: -17.000001907348633
    8. ')x' → logprob: -17.500001907348633
    9. ')return' → logprob: -17.500001907348633
    10. ')}' → logprob: -18.250001907348633

Token 838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010899257846176624
    2. '
' → logprob: -4.760899066925049
    3. 'def' → logprob: -6.135899066925049
    4. '    
' → logprob: -9.260899543762207
    5. ' def' → logprob: -11.510899543762207
    6. '```' → logprob: -11.635899543762207
    7. '	def' → logprob: -13.885899543762207
    8. '  
' → logprob: -13.885899543762207
    9. '        
' → logprob: -14.510899543762207
    10. '  ' → logprob: -14.885899543762207

Token 839: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000452241423772648
    2. '   ' → logprob: -7.750452041625977
    3. ' def' → logprob: -10.750452041625977
    4. '
' → logprob: -16.500452041625977
    5. '	def' → logprob: -16.750452041625977
    6. '```' → logprob: -18.250452041625977
    7. '_def' → logprob: -20.250452041625977
    8. '    
' → logprob: -20.500452041625977
    9. 'from' → logprob: -21.375452041625977
    10. ' ' → logprob: -23.500452041625977

Token 840: ' _' (ID: 1175)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.45848218582978e-06
    2. ' _' → logprob: -13.00000286102295
    3. '_L' → logprob: -16.625001907348633
    4. '_ll' → logprob: -16.750001907348633
    5. '_c' → logprob: -17.250001907348633
    6. '_ls' → logprob: -17.875001907348633
    7. '_' → logprob: -18.250001907348633
    8. '_r' → logprob: -18.500001907348633
    9. '_f' → logprob: -18.625001907348633
    10. '\' → logprob: -18.750001907348633

Token 841: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.320199877838604e-07
    2. '_l' → logprob: -15.5
    3. 'lc' → logprob: -15.625
    4. 'def' → logprob: -18.125
    5. ' l' → logprob: -18.5
    6. 'lcd' → logprob: -19.75
    7. '	l' → logprob: -21.0
    8. 'from' → logprob: -22.25
    9. 'lambda' → logprob: -23.0
    10. 'll' → logprob: -23.0

Token 842: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.173704271830502e-06
    2. '_cm' → logprob: -13.62500286102295
    3. 'c' → logprob: -13.87500286102295
    4. 'cms' → logprob: -14.62500286102295
    5. 'l' → logprob: -15.50000286102295
    6. '   ' → logprob: -15.62500286102295
    7. 'm' → logprob: -16.875003814697266
    8. '_c' → logprob: -17.250003814697266
    9. ' cm' → logprob: -17.750003814697266
    10. '_' → logprob: -18.375003814697266

Token 843: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -9.531813702778891e-05
    2. '(self' → logprob: -9.87509536743164
    3. '_' → logprob: -11.25009536743164
    4. '_m' → logprob: -11.50009536743164
    5. 'multiple' → logprob: -11.87509536743164
    6. 'self' → logprob: -12.25009536743164
    7. '_many' → logprob: -12.75009536743164
    8. '_multi' → logprob: -13.12509536743164
    9. '_self' → logprob: -13.62509536743164
    10. 's' → logprob: -14.12509536743164

Token 844: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.696077227592468e-05
    2. 'self' → logprob: -10.000077247619629
    3. '(' → logprob: -10.375077247619629
    4. ' (' → logprob: -16.000076293945312
    5. '   ' → logprob: -16.500076293945312
    6. '(
' → logprob: -17.625076293945312
    7. '       ' → logprob: -17.875076293945312
    8. 's' → logprob: -17.875076293945312
    9. 'def' → logprob: -18.375076293945312
    10. '(s' → logprob: -18.875076293945312

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3666055202484131
    2. '(self' → logprob: -1.366605520248413
    3. 'self' → logprob: -2.991605520248413
    4. ',self' → logprob: -6.866605758666992
    5. ' (' → logprob: -8.241605758666992
    6. ' ,' → logprob: -8.991605758666992
    7. ',(' → logprob: -9.366605758666992
    8. '   ' → logprob: -9.741605758666992
    9. '(' → logprob: -9.866605758666992
    10. '       ' → logprob: -10.491605758666992

Token 846: ' values' (ID: 4824)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002187852980569005
    2. ' self' → logprob: -6.502187728881836
    3. 'numbers' → logprob: -7.377187728881836
    4. 'nums' → logprob: -10.752187728881836
    5. ' numbers' → logprob: -11.002187728881836
    6. 'lst' → logprob: -12.002187728881836
    7. 'values' → logprob: -12.002187728881836
    8. '   ' → logprob: -12.127187728881836
    9. '(self' → logprob: -13.377187728881836
    10. '       ' → logprob: -14.252187728881836

Token 847: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.745150089263916
    2. '(self' → logprob: -0.745150089263916
    3. ',' → logprob: -3.245150089263916
    4. '       ' → logprob: -5.370150089263916
    5. ' self' → logprob: -5.370150089263916
    6. '   ' → logprob: -6.495150089263916
    7. ')' → logprob: -7.495150089263916
    8. ' (' → logprob: -8.745149612426758
    9. '):' → logprob: -9.495149612426758
    10. '[' → logprob: -10.870149612426758

Token 848: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7065253257751465
    2. 'self' → logprob: -0.7065253257751465
    3. '(self' → logprob: -4.5815253257751465
    4. ' self' → logprob: -5.8315253257751465
    5. '   ' → logprob: -9.706525802612305
    6. '(' → logprob: -11.331525802612305
    7. ',' → logprob: -11.831525802612305
    8. '	self' → logprob: -12.081525802612305
    9. 'return' → logprob: -12.081525802612305
    10. ' (' → logprob: -12.206525802612305

Token 849: ' return' (ID: 622)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05889434739947319
    2. ' result' → logprob: -3.433894395828247
    3. '       ' → logprob: -4.433894157409668
    4. 'l' → logprob: -4.558894157409668
    5. 'res' → logprob: -6.433894157409668
    6. 'from' → logprob: -7.183894157409668
    7. 'lc' → logprob: -9.808894157409668
    8. ' from' → logprob: -10.433894157409668
    9. 'return' (adapté à ' return') → logprob: -10.558894157409668
    10. 'ans' → logprob: -10.683894157409668

Token 850: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0015061709564179182
    2. ' reduce' → logprob: -6.501506328582764
    3. '   ' → logprob: -12.751505851745605
    4. '1' → logprob: -14.626505851745605
    5. ' ' → logprob: -15.251505851745605
    6. '_reduce' → logprob: -16.751506805419922
    7. '    ' → logprob: -17.001506805419922
    8. '  ' → logprob: -17.251506805419922
    9. '.reduce' → logprob: -17.626506805419922
    10. ' ' → logprob: -17.751506805419922

Token 851: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006402950268238783
    2. '(lambda' → logprob: -5.256402969360352
    3. '(' → logprob: -6.756402969360352
    4. ' (' → logprob: -12.506402969360352
    5. 'self' → logprob: -14.006402969360352
    6. ' self' → logprob: -15.006402969360352
    7. '(
' → logprob: -15.756402969360352
    8. 'lambda' → logprob: -16.00640296936035
    9. '```' → logprob: -18.13140296936035
    10. ',' → logprob: -18.13140296936035

Token 852: '._' (ID: 2697)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1807134449481964
    2. '_lambda' → logprob: -2.555713415145874
    3. '_l' → logprob: -2.930713415145874
    4. '(lambda' → logprob: -4.055713653564453
    5. '._' → logprob: -5.305713653564453
    6. 'lambda' → logprob: -6.055713653564453
    7. ' _' → logprob: -6.305713653564453
    8. ')' → logprob: -6.555713653564453
    9. 'self' → logprob: -6.680713653564453
    10. '_,' → logprob: -6.930713653564453

Token 853: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.704273118884885e-07
    2. '_l' → logprob: -15.000000953674316
    3. 'lc' → logprob: -15.375000953674316
    4. '   ' → logprob: -18.0
    5. '	l' → logprob: -18.0
    6. ' l' → logprob: -18.25
    7. '(l' → logprob: -18.375
    8. '```' → logprob: -18.5
    9. '  ' → logprob: -18.625
    10. '
' → logprob: -18.75

Token 854: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -4.961759259458631e-06
    2. 'm' → logprob: -12.750004768371582
    3. 'c' → logprob: -13.375004768371582
    4. '   ' → logprob: -15.875004768371582
    5. 'l' → logprob: -16.2500057220459
    6. 'cms' → logprob: -16.2500057220459
    7. '
' → logprob: -16.3750057220459
    8. 'g' → logprob: -18.0000057220459
    9. ' cm' → logprob: -18.1250057220459
    10. 'cd' → logprob: -18.2500057220459

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9743012671824545e-05
    2. ' ,' → logprob: -10.875020027160645
    3. '(values' → logprob: -15.250020027160645
    4. 'values' → logprob: -15.500020027160645
    5. '‌,' → logprob: -15.625020027160645
    6. '<|end|>' → logprob: -17.875019073486328
    7. ',value' → logprob: -18.000019073486328
    8. ',
' → logprob: -18.250019073486328
    9. '```' → logprob: -18.500019073486328
    10. ' ' → logprob: -18.875019073486328

Token 856: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.0031777136027812958
    2. ' values' → logprob: -5.753177642822266
    3. '(values' → logprob: -17.753177642822266
    4. '	values' → logprob: -17.878177642822266
    5. '.values' → logprob: -19.003177642822266
    6. '_values' → logprob: -20.503177642822266
    7. '           ' → logprob: -20.753177642822266
    8. '   ' → logprob: -21.753177642822266
    9. 'value' → logprob: -22.253177642822266
    10. '       ' → logprob: -22.253177642822266

Token 857: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ' )' → logprob: -11.62501335144043
    3. '       ' → logprob: -13.12501335144043
    4. '   ' → logprob: -14.12501335144043
    5. ',' → logprob: -14.37501335144043
    6. ')
' → logprob: -14.50001335144043
    7. '<|end|>' → logprob: -15.50001335144043
    8. ')}' → logprob: -16.50001335144043
    9. ')return' → logprob: -17.00001335144043
    10. ' ' → logprob: -17.12501335144043

Token 858: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -19.25
    4. '  ' → logprob: -22.625
    5. ')' → logprob: -22.625
    6. '       ' → logprob: -22.75
    7. '```' → logprob: -22.875
    8. '
' → logprob: -23.375
    9. '           ' → logprob: -23.5
    10. '    ' → logprob: -24.0

Token 859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -21.75
    4. ')' → logprob: -23.25
    5. '```' → logprob: -24.625
    6. '۱' → logprob: -25.375
    7. '       ' → logprob: -25.5
    8. '１' → logprob: -25.625
    9. '  ' → logprob: -26.125
    10. '           ' → logprob: -26.625

Token 860: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '<|end|>' → logprob: -13.625003814697266
    3. '       ' → logprob: -13.750003814697266
    4. ' )' → logprob: -13.875003814697266
    5. ')
' → logprob: -14.375003814697266
    6. '   ' → logprob: -15.250003814697266
    7. ')return' → logprob: -16.625003814697266
    8. '}' → logprob: -17.500003814697266
    9. ')}' → logprob: -17.875003814697266
    10. ')#' → logprob: -18.000003814697266

Token 861: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 862: ' Input' (ID: 10090)
  Prédit: 'Electron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Electron' → logprob: -0.021305497735738754
    2. ' Electron' → logprob: -4.771305561065674
    3. 'Test' → logprob: -5.646305561065674
    4. 'Solution' → logprob: -5.646305561065674
    5. 'Quantum' → logprob: -6.271305561065674
    6. 'Fly' → logprob: -7.271305561065674
    7. 'Particle' → logprob: -7.771305561065674
    8. 'Electric' → logprob: -8.271305084228516
    9. 'Unit' → logprob: -8.771305084228516
    10. 'Orbit' → logprob: -9.271305084228516

Token 863: 'Processor' (ID: 22334)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.9859880805015564
    2. 'Handler' → logprob: -1.3609881401062012
    3. 'Parser' → logprob: -1.3609881401062012
    4. 'Processor' → logprob: -2.485988140106201
    5. ':' → logprob: -5.110988140106201
    6. 'Data' → logprob: -5.235988140106201
    7. 'Provider' → logprob: -5.610988140106201
    8. 'Output' → logprob: -5.735988140106201
    9. 'Generator' → logprob: -5.735988140106201
    10. 'Manager' → logprob: -5.860988140106201

Token 864: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007152927573770285
    2. ':
' → logprob: -7.250715255737305
    3. ':def' → logprob: -12.750715255737305
    4. ':

' → logprob: -14.250715255737305
    5. '():' → logprob: -14.500715255737305
    6. '):' → logprob: -14.625715255737305
    7. '<|end|>' → logprob: -14.750715255737305
    8. ' :' → logprob: -15.500715255737305
    9. '(object' → logprob: -16.375715255737305
    10. ':**' → logprob: -16.750715255737305

Token 865: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09930609911680222
    2. ' def' → logprob: -2.474306106567383
    3. 'def' → logprob: -4.599306106567383
    4. '```' → logprob: -8.849306106567383
    5. 'class' → logprob: -9.724306106567383
    6. 'import' → logprob: -10.349306106567383
    7. ' class' → logprob: -11.849306106567383
    8. '	def' → logprob: -12.099306106567383
    9. 'classmethod' → logprob: -14.099306106567383
    10. ' import' → logprob: -14.224306106567383

Token 866: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009333016350865364
    2. ' def' → logprob: -4.75933313369751
    3. '@' → logprob: -7.25933313369751
    4. '   ' → logprob: -11.634332656860352
    5. ' @' → logprob: -12.634332656860352
    6. 'staticmethod' → logprob: -13.759332656860352
    7. 'class' → logprob: -14.259332656860352
    8. '
' → logprob: -14.509332656860352
    9. '```' → logprob: -15.384332656860352
    10. 'import' → logprob: -16.63433265686035

Token 867: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.6083646416664124
    2. 'init' → logprob: -0.8583646416664124
    3. ' init' → logprob: -4.483364582061768
    4. ' def' → logprob: -4.733364582061768
    5. 'def' → logprob: -5.608364582061768
    6. ' __' → logprob: -5.733364582061768
    7. ' static' → logprob: -6.233364582061768
    8. '__' → logprob: -6.733364582061768
    9. 'static' → logprob: -7.608364582061768
    10. 'process' → logprob: -7.608364582061768

Token 868: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'call' → logprob: -13.750000953674316
    3. ' init' → logprob: -17.750001907348633
    4. 'def' → logprob: -19.250001907348633
    5. '_init' → logprob: -20.875001907348633
    6. 'new' → logprob: -20.875001907348633
    7. '(init' → logprob: -21.000001907348633
    8. 'int' → logprob: -21.625001907348633
    9. 'next' → logprob: -22.000001907348633
    10. 'inite' → logprob: -22.750001907348633

Token 869: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20285484194755554
    2. '(self' → logprob: -1.702854871749878
    3. '__(
' → logprob: -7.077854633331299
    4. '(' → logprob: -8.327855110168457
    5. 'self' → logprob: -8.577855110168457
    6. '__' → logprob: -9.327855110168457
    7. ' (' → logprob: -10.327855110168457
    8. '<|end|>' → logprob: -11.577855110168457
    9. '__((' → logprob: -11.827855110168457
    10. '
' → logprob: -12.452855110168457

Token 870: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005627985578030348
    2. ')' → logprob: -5.7556281089782715
    3. '):
' → logprob: -6.2556281089782715
    4. '):' → logprob: -7.8806281089782715
    5. '
' → logprob: -9.130627632141113
    6. ' self' → logprob: -11.255627632141113
    7. '(self' → logprob: -11.505627632141113
    8. '   ' → logprob: -12.130627632141113
    9. '):

' → logprob: -12.630627632141113
    10. '	self' → logprob: -13.380627632141113

Token 871: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5334622263908386
    2. '):' → logprob: -1.4084622859954834
    3. '):
' → logprob: -1.7834622859954834
    4. 'self' → logprob: -8.408462524414062
    5. '<|end|>' → logprob: -8.658462524414062
    6. ',input' → logprob: -9.158462524414062
    7. '():
' → logprob: -9.908462524414062
    8. '   ' → logprob: -10.283462524414062
    9. '():' → logprob: -10.408462524414062
    10. ',user' → logprob: -10.908462524414062

Token 872: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.058992899954319
    2. ' self' → logprob: -3.558992862701416
    3. 'def' → logprob: -4.433992862701416
    4. '   ' → logprob: -4.433992862701416
    5. '       ' → logprob: -6.058992862701416
    6. ' def' → logprob: -6.183992862701416
    7. '(self' → logprob: -8.433993339538574
    8. '
' → logprob: -8.433993339538574
    9. '	self' → logprob: -9.433993339538574
    10. '```' → logprob: -9.683993339538574

Token 873: ' self' (ID: 1051)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3930848240852356
    2. 'self' (adapté à ' self') → logprob: -1.1430847644805908
    3. 'def' → logprob: -5.51808500289917
    4. '       ' → logprob: -7.01808500289917
    5. ' pass' → logprob: -7.14308500289917
    6. '   ' → logprob: -8.268084526062012
    7. ' self' → logprob: -9.018084526062012
    8. 'import' → logprob: -9.768084526062012
    9. '
' → logprob: -10.268084526062012
    10. '	pass' → logprob: -11.268084526062012

Token 874: '.data' (ID: 3885)
  Prédit: '.inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inputs' → logprob: -1.1420973539352417
    2. '.data' → logprob: -1.5170973539352417
    3. '.buffer' → logprob: -1.6420973539352417
    4. '.lines' → logprob: -2.6420974731445312
    5. '.input' → logprob: -3.0170974731445312
    6. '.params' → logprob: -3.0170974731445312
    7. '._' → logprob: -3.5170974731445312
    8. '.' → logprob: -4.142097473144531
    9. '.parameters' → logprob: -4.142097473144531
    10. '.values' → logprob: -4.642097473144531

Token 875: '_sets' (ID: 56707)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055458974093198776
    2. ' =' → logprob: -2.9304590225219727
    3. '=[]' → logprob: -7.680459022521973
    4. '<|end|>' → logprob: -9.430459022521973
    5. '=[]
' → logprob: -11.555459022521973
    6. ':' → logprob: -12.305459022521973
    7. 'import' → logprob: -12.805459022521973
    8. ' ' → logprob: -12.930459022521973
    9. '   ' → logprob: -13.180459022521973
    10. '=None' → logprob: -13.180459022521973

Token 876: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134757876396179
    2. ' =' → logprob: -1.3134758472442627
    3. '=[]' → logprob: -8.688475608825684
    4. ':' → logprob: -10.563475608825684
    5. '   ' → logprob: -11.688475608825684
    6. '<|end|>' → logprob: -11.813475608825684
    7. '=[]
' → logprob: -13.063475608825684
    8. ' ' → logprob: -14.563475608825684
    9. ')' → logprob: -15.438475608825684
    10. '       ' → logprob: -15.688475608825684

Token 877: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00034821697045117617
    2. ' []' → logprob: -8.000348091125488
    3. '[]
' → logprob: -11.750348091125488
    4. '[' → logprob: -12.625348091125488
    5. '[]

' → logprob: -14.000348091125488
    6. '[]}' → logprob: -14.750348091125488
    7. 'list' → logprob: -15.625348091125488
    8. '([]' → logprob: -16.750349044799805
    9. '[]"' → logprob: -16.750349044799805
    10. '[]>' → logprob: -16.875349044799805

Token 878: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019103118684142828
    2. 'def' → logprob: -6.876910209655762
    3. '
' → logprob: -7.626910209655762
    4. ' def' → logprob: -8.001910209655762
    5. '<|end|>' → logprob: -10.376910209655762
    6. '    
' → logprob: -10.876910209655762
    7. '```' → logprob: -13.626910209655762
    8. '<|end|>' → logprob: -13.626910209655762
    9. '	def' → logprob: -14.251910209655762
    10. '        
' → logprob: -14.501910209655762

Token 879: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.5597102396423e-05
    2. ' def' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.875035285949707
    4. '
' → logprob: -19.125036239624023
    5. '	def' → logprob: -20.375036239624023
    6. 'de' → logprob: -20.875036239624023
    7. 'class' → logprob: -21.875036239624023
    8. '```' → logprob: -22.000036239624023
    9. '    
' → logprob: -22.500036239624023
    10. 'd' → logprob: -22.625036239624023

Token 880: ' read' (ID: 1729)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.22067292034626007
    2. 'read' → logprob: -2.220672845840454
    3. 'add' → logprob: -2.470672845840454
    4. 'load' → logprob: -6.095673084259033
    5. 'parse' → logprob: -6.470673084259033
    6. ' process' → logprob: -6.970673084259033
    7. ' add' → logprob: -9.470672607421875
    8. 'append' → logprob: -9.595672607421875
    9. ' read' → logprob: -9.970672607421875
    10. 'receive' → logprob: -11.970672607421875

Token 881: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03672419860959053
    2. '_line' → logprob: -3.536724090576172
    3. 'line' → logprob: -5.411724090576172
    4. 'self' → logprob: -6.286724090576172
    5. '_input' → logprob: -7.786724090576172
    6. '(' → logprob: -9.161724090576172
    7. '_data' → logprob: -10.661724090576172
    8. 'input' → logprob: -10.786724090576172
    9. 'lines' → logprob: -11.036724090576172
    10. '()' → logprob: -11.411724090576172

Token 882: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014478032244369388
    2. '(' → logprob: -8.875144958496094
    3. 'self' → logprob: -12.625144958496094
    4. '(
' → logprob: -13.750144958496094
    5. ' (' → logprob: -14.750144958496094
    6. '():
' → logprob: -16.625144958496094
    7. '   ' → logprob: -17.125144958496094
    8. '(s' → logprob: -18.125144958496094
    9. '	self' → logprob: -18.250144958496094
    10. '()' → logprob: -18.250144958496094

Token 883: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040083058178424835
    2. '):' → logprob: -3.790083169937134
    3. '):
' → logprob: -4.790082931518555
    4. 'self' → logprob: -4.790082931518555
    5. '(self' → logprob: -10.290082931518555
    6. ',self' → logprob: -11.290082931518555
    7. 's' → logprob: -11.665082931518555
    8. ')' → logprob: -11.915082931518555
    9. ' self' → logprob: -12.915082931518555
    10. '):
' → logprob: -13.040082931518555

Token 884: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022368512582033873
    2. 'self' → logprob: -6.377236843109131
    3. ' self' → logprob: -8.502237319946289
    4. 'import' → logprob: -9.002237319946289
    5. '   ' → logprob: -9.752237319946289
    6. '(self' → logprob: -10.002237319946289
    7. '()' → logprob: -10.627237319946289
    8. '```' → logprob: -10.752237319946289
    9. 'n' → logprob: -11.627237319946289
    10. ' for' → logprob: -12.127237319946289

Token 885: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09208020567893982
    2. 'while' (adapté à ' while') → logprob: -2.8420801162719727
    3. 'n' → logprob: -4.217080116271973
    4. 'try' → logprob: -5.092080116271973
    5. ' while' → logprob: -5.842080116271973
    6. '       ' → logprob: -6.217080116271973
    7. ' import' → logprob: -6.717080116271973
    8. 'for' → logprob: -6.842080116271973
    9. ' n' → logprob: -7.842080116271973
    10. 'self' → logprob: -8.092080116271973

Token 886: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3133043944835663
    2. ' True' → logprob: -1.3133044242858887
    3. '(True' → logprob: -10.06330394744873
    4. 'true' → logprob: -17.063304901123047
    5. '=True' → logprob: -18.188304901123047
    6. '(' → logprob: -19.063304901123047
    7. '1' → logprob: -19.188304901123047
    8. '
' → logprob: -19.188304901123047
    9. ' ' → logprob: -19.688304901123047
    10. '   ' → logprob: -20.313304901123047

Token 887: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2372293323278427
    2. '           ' → logprob: -1.862229347229004
    3. ':
' → logprob: -3.612229347229004
    4. '():' → logprob: -4.362229347229004
    5. '():
' → logprob: -5.112229347229004
    6. '       ' → logprob: -5.237229347229004
    7. ' line' → logprob: -6.987229347229004
    8. 'input' → logprob: -7.112229347229004
    9. 's' → logprob: -7.612229347229004
    10. ',' → logprob: -7.737229347229004

Token 888: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014522619545459747
    2. 'try' → logprob: -4.889522552490234
    3. ' line' → logprob: -5.764522552490234
    4. ' try' → logprob: -6.264522552490234
    5. '       ' → logprob: -6.514522552490234
    6. 'line' → logprob: -8.264522552490234
    7. '   ' → logprob: -9.639522552490234
    8. '```' → logprob: -10.639522552490234
    9. 'input' → logprob: -12.264522552490234
    10. '	   ' → logprob: -12.264522552490234

Token 889: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.08157765865325928
    2. ' line' → logprob: -2.581577777862549
    3. '           ' → logprob: -6.331577777862549
    4. 'try' → logprob: -7.081577777862549
    5. ' try' → logprob: -9.70657730102539
    6. '   ' → logprob: -13.08157730102539
    7. '	line' → logprob: -13.95657730102539
    8. 's' → logprob: -15.08157730102539
    9. '(line' → logprob: -15.58157730102539
    10. 'raw' → logprob: -16.33157730102539

Token 890: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=line' → logprob: -16.380233764648438
    4. '=
' → logprob: -17.255233764648438
    5. 's' → logprob: -18.505233764648438
    6. '   ' → logprob: -18.880233764648438
    7. '.=' → logprob: -19.130233764648438
    8. '＝' → logprob: -19.880233764648438
    9. '=input' → logprob: -20.755233764648438
    10. '=

' → logprob: -20.880233764648438

Token 891: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001234428636962548
    2. ' input' → logprob: -9.000123023986816
    3. '(input' → logprob: -18.500123977661133
    4. '=input' → logprob: -19.375123977661133
    5. '
' → logprob: -22.375123977661133
    6. '_input' → logprob: -22.500123977661133
    7. '```' → logprob: -22.625123977661133
    8. '   ' → logprob: -22.625123977661133
    9. '<input' → logprob: -22.875123977661133
    10. '	input' → logprob: -23.000123977661133

Token 892: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2560375928878784
    2. '().' → logprob: -1.5060375928878784
    3. '()
' → logprob: -5.506037712097168
    4. '=' → logprob: -10.631037712097168
    5. ' =' → logprob: -12.381037712097168
    6. '(' → logprob: -13.131037712097168
    7. '()

' → logprob: -13.256037712097168
    8. ' ()' → logprob: -14.006037712097168
    9. '();' → logprob: -14.256037712097168
    10. '=""' → logprob: -14.256037712097168

Token 893: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'rstrip' → logprob: -16.5
    3. ' strip' → logprob: -18.75
    4. 'split' → logprob: -20.875
    5. '_strip' → logprob: -21.125
    6. '.strip' → logprob: -21.25
    7. '-strip' → logprob: -21.875
    8. '(strip' → logprob: -22.0
    9. 'str' → logprob: -25.875
    10. 'startswith' → logprob: -26.0

Token 894: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5759785771369934
    2. '()' → logprob: -0.8259785771369934
    3. '()
' → logprob: -11.70097827911377
    4. '())' → logprob: -11.95097827911377
    5. '():
' → logprob: -12.45097827911377
    6. '())
' → logprob: -12.45097827911377
    7. '()

' → logprob: -12.57597827911377
    8. '           ' → logprob: -12.82597827911377
    9. '()\' → logprob: -13.32597827911377
    10. ')' → logprob: -13.70097827911377

Token 895: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032247265335172415
    2. '       ' → logprob: -8.125322341918945
    3. '<|end|>' → logprob: -11.000322341918945
    4. 'if' → logprob: -12.750322341918945
    5. '<|end|>' → logprob: -13.375322341918945
    6. '   ' → logprob: -13.500322341918945
    7. '               ' → logprob: -14.250322341918945
    8. '	       ' → logprob: -14.375322341918945
    9. '		' → logprob: -14.500322341918945
    10. '          ' → logprob: -14.625322341918945

Token 896: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.630610641877865e-06
    2. ' if' → logprob: -12.500006675720215
    3. '           ' → logprob: -12.750006675720215
    4. '
' → logprob: -19.5000057220459
    5. '            
' → logprob: -19.8750057220459
    6. 'If' → logprob: -21.3750057220459
    7. '               ' → logprob: -21.3750057220459
    8. '       ' → logprob: -22.0000057220459
    9. ';if' → logprob: -22.6250057220459
    10. '	if' → logprob: -22.7500057220459

Token 897: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8206346035003662
    2. 'not' → logprob: -1.0706346035003662
    3. ' not' → logprob: -1.5706346035003662
    4. ' line' → logprob: -4.695634841918945
    5. '#line' → logprob: -12.695634841918945
    6. '(line' → logprob: -13.070634841918945
    7. '[line' → logprob: -13.820634841918945
    8. '	line' → logprob: -13.945634841918945
    9. '=line' → logprob: -14.820634841918945
    10. '!' → logprob: -14.945634841918945

Token 898: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006741065997630358
    2. ' ==' → logprob: -5.006741046905518
    3. '()==' → logprob: -11.256741523742676
    4. '===' → logprob: -12.256741523742676
    5. '==
' → logprob: -12.256741523742676
    6. '=' → logprob: -13.131741523742676
    7. '=="' → logprob: -14.631741523742676
    8. '=='' → logprob: -15.131741523742676
    9. ')==' → logprob: -15.131741523742676
    10. ']==' → logprob: -15.506741523742676

Token 899: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.9757804274559021
    2. '"' → logprob: -1.4757804870605469
    3. '"":' → logprob: -1.4757804870605469
    4. '""' → logprob: -2.225780487060547
    5. ''' → logprob: -2.850780487060547
    6. '":' → logprob: -10.225780487060547
    7. ''ex' → logprob: -10.850780487060547
    8. ''end' → logprob: -10.975780487060547
    9. ' "":
' → logprob: -11.725780487060547
    10. ' '':
' → logprob: -11.725780487060547

Token 900: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016833937261253595
    2. ':' → logprob: -7.251683235168457
    3. ':
' → logprob: -7.626683235168457
    4. '           ' → logprob: -8.001683235168457
    5. ' or' → logprob: -9.126683235168457
    6. 'break' → logprob: -11.626683235168457
    7. '                   ' → logprob: -11.876683235168457
    8. '       ' → logprob: -12.126683235168457
    9. '              ' → logprob: -12.251683235168457
    10. ',' → logprob: -12.751683235168457

Token 901: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00013035668234806508
    2. '               ' → logprob: -9.250130653381348
    3. ' break' → logprob: -10.500130653381348
    4. 'return' → logprob: -12.000130653381348
    5. '           ' → logprob: -15.250130653381348
    6. '	break' → logprob: -15.375130653381348
    7. '                   ' → logprob: -17.12512969970703
    8. '
' → logprob: -17.37512969970703
    9. '_break' → logprob: -17.50012969970703
    10. 'Break' → logprob: -18.87512969970703

Token 902: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004827465454582125
    2. 'if' → logprob: -7.750482559204102
    3. ' if' → logprob: -10.250482559204102
    4. 'elif' → logprob: -12.500482559204102
    5. '
' → logprob: -12.875482559204102
    6. '<|end|>' → logprob: -13.125482559204102
    7. '       ' → logprob: -13.250482559204102
    8. '```' → logprob: -13.500482559204102
    9. '            
' → logprob: -13.875482559204102
    10. ' or' → logprob: -14.250482559204102

Token 903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04885418340563774
    2. 'if' → logprob: -3.048854112625122
    3. ' if' → logprob: -8.798853874206543
    4. '       ' → logprob: -10.173853874206543
    5. 'elif' → logprob: -10.173853874206543
    6. '
' → logprob: -10.798853874206543
    7. 'try' → logprob: -11.673853874206543
    8. '```' → logprob: -12.548853874206543
    9. '               ' → logprob: -13.173853874206543
    10. '            
' → logprob: -13.173853874206543

Token 904: ' parts' (ID: 7881)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003704933915287256
    2. ' if' → logprob: -8.750370025634766
    3. 'try' → logprob: -9.000370025634766
    4. '           ' → logprob: -10.000370025634766
    5. 'tokens' → logprob: -10.750370025634766
    6. 'parts' (adapté à ' parts') → logprob: -11.500370025634766
    7. 'n' → logprob: -11.625370025634766
    8. 'values' → logprob: -14.250370025634766
    9. 'nums' → logprob: -14.250370025634766
    10. 'numbers' → logprob: -14.750370025634766

Token 905: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019291093340143561
    2. ' =' → logprob: -6.25192928314209
    3. '=line' → logprob: -14.62692928314209
    4. '＝' → logprob: -17.501928329467773
    5. 'tokens' → logprob: -18.751928329467773
    6. '=list' → logprob: -18.751928329467773
    7. '=
' → logprob: -19.001928329467773
    8. '_tokens' → logprob: -19.876928329467773
    9. '=int' → logprob: -20.001928329467773
    10. '=len' → logprob: -20.251928329467773

Token 906: ' list' (ID: 1562)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0002787359117064625
    2. 'list' → logprob: -8.50027847290039
    3. ' line' → logprob: -9.50027847290039
    4. '[line' → logprob: -15.00027847290039
    5. ' list' → logprob: -18.12527847290039
    6. '(line' → logprob: -19.87527847290039
    7. '[' → logprob: -20.50027847290039
    8. '=line' → logprob: -21.62527847290039
    9. '	line' → logprob: -21.75027847290039
    10. '#line' → logprob: -22.75027847290039

Token 907: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009119403548538685
    2. 'map' → logprob: -7.000911712646484
    3. '(' → logprob: -14.875911712646484
    4. '(
' → logprob: -16.875911712646484
    5. ' map' → logprob: -17.500911712646484
    6. '
' → logprob: -17.625911712646484
    7. '	map' → logprob: -17.750911712646484
    8. '(int' → logprob: -18.500911712646484
    9. '.map' → logprob: -18.750911712646484
    10. '_map' → logprob: -19.000911712646484

Token 908: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012736850185319781
    2. 'int' → logprob: -6.7512736320495605
    3. '(str' → logprob: -9.251274108886719
    4. '(' → logprob: -12.376274108886719
    5. 'str' → logprob: -12.876274108886719
    6. ' int' → logprob: -15.251274108886719
    7. ',int' → logprob: -15.501274108886719
    8. '[int' → logprob: -16.75127410888672
    9. '=int' → logprob: -17.12627410888672
    10. '   ' → logprob: -17.25127410888672

Token 909: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0009501680615358055
    2. ',' → logprob: -7.875950336456299
    3. '(input' → logprob: -8.00094985961914
    4. '(' → logprob: -8.87594985961914
    5. ',line' → logprob: -9.37594985961914
    6. ' (' → logprob: -12.62594985961914
    7. '(
' → logprob: -13.12594985961914
    8. ',input' → logprob: -13.50094985961914
    9. '=line' → logprob: -14.00094985961914
    10. 'line' → logprob: -14.25094985961914

Token 910: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0052708727307617664
    2. ' line' → logprob: -5.255270957946777
    3. 'input' → logprob: -10.380270957946777
    4. '(line' → logprob: -12.130270957946777
    5. ' input' → logprob: -15.380270957946777
    6. '[line' → logprob: -15.630270957946777
    7. '=line' → logprob: -15.880270957946777
    8. '	line' → logprob: -17.13027000427246
    9. '#line' → logprob: -18.00527000427246
    10. '
' → logprob: -18.38027000427246

Token 911: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.024051029235124588
    2. '.split' → logprob: -3.7740509510040283
    3. '.strip' → logprob: -7.149051189422607
    4. '()' → logprob: -11.64905071258545
    5. '.' → logprob: -12.52405071258545
    6. 'split' → logprob: -13.27405071258545
    7. '()))' → logprob: -13.39905071258545
    8. '())' → logprob: -13.77405071258545
    9. '.readline' → logprob: -14.14905071258545
    10. ' .' → logprob: -14.39905071258545

Token 912: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3149035573005676
    2. '()))
' → logprob: -1.3149034976959229
    3. '()' → logprob: -6.939903736114502
    4. '('' → logprob: -7.689903736114502
    5. '))' → logprob: -9.314903259277344
    6. '(' → logprob: -10.064903259277344
    7. '()))
' → logprob: -10.939903259277344
    8. '())' → logprob: -11.064903259277344
    9. '(','' → logprob: -11.189903259277344
    10. '()))

' → logprob: -11.314903259277344

Token 913: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05874081328511238
    2. 'if' → logprob: -2.9337408542633057
    3. ' if' → logprob: -6.308740615844727
    4. '       ' → logprob: -7.308740615844727
    5. '<|end|>' → logprob: -7.433740615844727
    6. '```' → logprob: -8.183740615844727
    7. '[' → logprob: -8.558740615844727
    8. '<|end|>' → logprob: -8.933740615844727
    9. ';if' → logprob: -10.808740615844727
    10. '	       ' → logprob: -11.058740615844727

Token 914: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06282579898834229
    2. '           ' → logprob: -2.8128256797790527
    3. ' if' → logprob: -7.062825679779053
    4. '       ' → logprob: -13.937826156616211
    5. '	if' → logprob: -15.812826156616211
    6. '```' → logprob: -15.812826156616211
    7. '               ' → logprob: -15.937826156616211
    8. 'If' → logprob: -16.68782615661621
    9. '   ' → logprob: -17.43782615661621
    10. '
' → logprob: -17.68782615661621

Token 915: ' len' (ID: 4631)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.1488850861787796
    2. 'len' → logprob: -2.1488850116729736
    3. ' parts' → logprob: -4.148885250091553
    4. ' len' → logprob: -5.148885250091553
    5. 'not' → logprob: -9.773884773254395
    6. ' not' → logprob: -9.898884773254395
    7. '(parts' → logprob: -11.773884773254395
    8. 'all' → logprob: -11.898884773254395
    9. 'part' → logprob: -12.523884773254395
    10. '(len' → logprob: -13.398884773254395

Token 916: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0002613358374219388
    2. 'parts' → logprob: -8.250261306762695
    3. ' parts' → logprob: -18.875261306762695
    4. '_parts' → logprob: -20.375261306762695
    5. '(points' → logprob: -21.250261306762695
    6. '(' → logprob: -21.500261306762695
    7. '.parts' → logprob: -21.625261306762695
    8. '(part' → logprob: -21.750261306762695
    9. '==' → logprob: -21.875261306762695
    10. 'Parts' → logprob: -22.000261306762695

Token 917: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8226370811462402
    2. '==' → logprob: -1.4476370811462402
    3. '<' → logprob: -1.8226370811462402
    4. '!=' → logprob: -2.0726370811462402
    5. ' !=' → logprob: -4.69763708114624
    6. ')!=' → logprob: -4.94763708114624
    7. ' ==' → logprob: -5.19763708114624
    8. '<|end|>' → logprob: -5.44763708114624
    9. ')==' → logprob: -5.57263708114624
    10. ')<' → logprob: -5.82263708114624

Token 918: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.414986252784729
    2. '<' → logprob: -1.289986252784729
    3. '!=' → logprob: -3.2899861335754395
    4. ' ==' → logprob: -3.7899861335754395
    5. ' !=' → logprob: -5.6649861335754395
    6. ' <' → logprob: -8.039986610412598
    7. '[' → logprob: -8.789986610412598
    8. '```' → logprob: -8.914986610412598
    9. '<int' → logprob: -9.414986610412598
    10. '           ' → logprob: -9.539986610412598

Token 919: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.187501907348633
    3. '0' → logprob: -14.750001907348633
    4. '```' → logprob: -14.937501907348633
    5. '٦' → logprob: -16.500001907348633
    6. '7' → logprob: -16.750001907348633
    7. '' → logprob: -17.062501907348633
    8. '   ' → logprob: -17.062501907348633
    9. '3' → logprob: -17.062501907348633
    10. '=' → logprob: -17.187501907348633

Token 920: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.875000953674316
    3. '7' → logprob: -16.0625
    4. '0' → logprob: -17.0625
    5. '1' → logprob: -17.8125
    6. ' ' → logprob: -18.0625
    7. '٦' → logprob: -18.1875
    8. '5' → logprob: -18.1875
    9. '3' → logprob: -18.3125
    10. '2' → logprob: -18.375

Token 921: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.323786199092865
    2. ':' → logprob: -1.9487862586975098
    3. '               ' → logprob: -2.6987862586975098
    4. ' or' → logprob: -2.8237862586975098
    5. '           ' → logprob: -5.07378625869751
    6. ':return' → logprob: -8.073785781860352
    7. '):
' → logprob: -8.323785781860352
    8. 'or' → logprob: -8.448785781860352
    9. 'and' → logprob: -8.573785781860352
    10. ' and' → logprob: -9.073785781860352

Token 922: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0056644948199391365
    2. ':
' → logprob: -5.755664348602295
    3. 'and' → logprob: -6.630664348602295
    4. '           ' → logprob: -7.630664348602295
    5. ' or' → logprob: -8.380664825439453
    6. ':' → logprob: -8.755664825439453
    7. ' and' → logprob: -9.380664825439453
    8. 'break' → logprob: -9.505664825439453
    9. 'or' → logprob: -10.005664825439453
    10. '                   ' → logprob: -10.380664825439453

Token 923: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.002011314034461975
    2. '               ' → logprob: -7.002011299133301
    3. ' break' → logprob: -7.252011299133301
    4. 'return' → logprob: -8.5020112991333
    5. '           ' → logprob: -8.6270112991333
    6. '	break' → logprob: -12.2520112991333
    7. '
' → logprob: -13.0020112991333
    8. '                   ' → logprob: -14.3770112991333
    9. '_break' → logprob: -15.7520112991333
    10. '                       ' → logprob: -16.252012252807617

Token 924: ' Ignore' (ID: 84342)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0002933942887466401
    2. 'return' → logprob: -8.250293731689453
    3. 'if' → logprob: -10.500293731689453
    4. ' break' → logprob: -13.000293731689453
    5. '           ' → logprob: -13.500293731689453
    6. '               ' → logprob: -13.875293731689453
    7. 'continue' → logprob: -17.125293731689453
    8. '#' → logprob: -17.125293731689453
    9. '                   ' → logprob: -18.000293731689453
    10. 'Break' → logprob: -18.125293731689453

Token 925: ' malformed' (ID: 152298)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20168611407279968
    2. 'break' → logprob: -2.076686143875122
    3. '               ' → logprob: -3.076686143875122
    4. '           ' → logprob: -4.701685905456543
    5. ' continue' → logprob: -6.451685905456543
    6. 'return' → logprob: -8.076685905456543
    7. ' break' → logprob: -8.951685905456543
    8. '                   ' → logprob: -10.326685905456543
    9. 'if' → logprob: -11.076685905456543
    10. '
' → logprob: -11.326685905456543

Token 926: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.028528615832328796
    2. ' lines' → logprob: -3.7785286903381348
    3. 'input' → logprob: -5.653528690338135
    4. 'line' → logprob: -6.653528690338135
    5. 'inputs' → logprob: -8.403528213500977
    6. 'continue' → logprob: -8.528528213500977
    7. ' input' → logprob: -10.153528213500977
    8. ' line' → logprob: -12.528528213500977
    9. '
' → logprob: -12.653528213500977
    10. ' inputs' → logprob: -13.278528213500977

Token 927: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010161882266402245
    2. '           ' → logprob: -4.760161876678467
    3. 'continue' → logprob: -6.635161876678467
    4. ' continue' → logprob: -8.635162353515625
    5. '                   ' → logprob: -10.135162353515625
    6. ',' → logprob: -12.385162353515625
    7. '
' → logprob: -12.635162353515625
    8. ' or' → logprob: -13.135162353515625
    9. '_continue' → logprob: -13.760162353515625
    10. '	continue' → logprob: -14.010162353515625

Token 928: 'should' (ID: 10618)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7653283476829529
    2. 'continue' → logprob: -0.7653283476829529
    3. '               ' → logprob: -3.2653284072875977
    4. ' break' → logprob: -4.265328407287598
    5. ' continue' → logprob: -4.765328407287598
    6. '           ' → logprob: -5.265328407287598
    7. 'return' → logprob: -5.890328407287598
    8. ')' → logprob: -7.390328407287598
    9. '                   ' → logprob: -8.515328407287598
    10. ' or' → logprob: -9.390328407287598

Token 929: ' not' (ID: 625)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.05803161486983299
    2. 'continue' → logprob: -3.6830315589904785
    3. ' break' → logprob: -3.8080315589904785
    4. 'not' → logprob: -5.5580315589904785
    5. 'return' → logprob: -5.6830315589904785
    6. '               ' → logprob: -6.9330315589904785
    7. 'be' → logprob: -8.308032035827637
    8. ' not' → logprob: -8.808032035827637
    9. '_break' → logprob: -9.183032035827637
    10. ')' → logprob: -9.433032035827637

Token 930: ' happen' (ID: 5659)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.45118123292922974
    2. 'continue' → logprob: -1.201181173324585
    3. ' break' → logprob: -3.076181173324585
    4. 'occur' → logprob: -4.951181411743164
    5. 'raise' → logprob: -5.826181411743164
    6. 'return' → logprob: -6.576181411743164
    7. ')' → logprob: -6.701181411743164
    8. '
' → logprob: -6.826181411743164
    9. ' happen' → logprob: -7.451181411743164
    10. ' continue' → logprob: -7.451181411743164

Token 931: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11639761179685593
    2. ')' → logprob: -3.1163976192474365
    3. ')
' → logprob: -3.3663976192474365
    4. '           ' → logprob: -3.4913976192474365
    5. ',' → logprob: -8.116397857666016
    6. ' or' → logprob: -9.241397857666016
    7. 'continue' → logprob: -9.366397857666016
    8. ' continue' → logprob: -10.366397857666016
    9. '                   ' → logprob: -10.741397857666016
    10. '):
' → logprob: -10.991397857666016

Token 932: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031377444975078106
    2. 'continue' → logprob: -8.750313758850098
    3. '                   ' → logprob: -9.625313758850098
    4. 'break' → logprob: -9.875313758850098
    5. '           ' → logprob: -10.500313758850098
    6. 'return' → logprob: -12.125313758850098
    7. ' continue' → logprob: -12.750313758850098
    8. ' break' → logprob: -14.625313758850098
    9. '```' → logprob: -14.625313758850098
    10. '                       ' → logprob: -15.500313758850098

Token 933: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.320360392332077
    2. 'break' → logprob: -1.3203604221343994
    3. '               ' → logprob: -5.57036018371582
    4. 'return' → logprob: -5.82036018371582
    5. ' continue' → logprob: -8.57036018371582
    6. ' break' → logprob: -9.82036018371582
    7. '           ' → logprob: -9.94536018371582
    8. '                   ' → logprob: -12.57036018371582
    9. '```' → logprob: -13.44536018371582
    10. '	continue' → logprob: -14.69536018371582

Token 934: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.9160102712921798e-05
    2. '
' → logprob: -11.125029563903809
    3. 'if' → logprob: -12.125029563903809
    4. '            
' → logprob: -12.125029563903809
    5. '       ' → logprob: -13.750029563903809
    6. '```' → logprob: -14.500029563903809
    7. '               ' → logprob: -15.000029563903809
    8. 'import' → logprob: -15.250029563903809
    9. '<|end|>' → logprob: -15.375029563903809
    10. '          ' → logprob: -15.375029563903809

Token 935: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2842308680992573e-05
    2. '       ' → logprob: -11.625022888183594
    3. 'if' → logprob: -11.625022888183594
    4. '```' → logprob: -13.000022888183594
    5. '<|end|>' → logprob: -13.875022888183594
    6. 'import' → logprob: -15.250022888183594
    7. '          ' → logprob: -15.375022888183594
    8. '<|end|>' → logprob: -15.500022888183594
    9. '            
' → logprob: -16.000022888183594
    10. 'elif' → logprob: -16.000022888183594

Token 936: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11128624528646469
    2. 'params' → logprob: -2.486286163330078
    3. '           ' → logprob: -3.986286163330078
    4. 'a' → logprob: -6.611286163330078
    5. 'return' → logprob: -6.861286163330078
    6. 'param' → logprob: -7.986286163330078
    7. ' if' → logprob: -8.111286163330078
    8. 'self' → logprob: -8.861286163330078
    9. '       ' → logprob: -9.111286163330078
    10. 'electron' → logprob: -9.486286163330078

Token 937: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.47663450241088867
    2. 'all' → logprob: -0.9766345024108887
    3. ' parts' → logprob: -6.726634502410889
    4. ' all' → logprob: -6.851634502410889
    5. 'sum' → logprob: -8.476634979248047
    6. 'any' → logprob: -10.476634979248047
    7. 'set' → logprob: -10.476634979248047
    8. '(parts' → logprob: -11.851634979248047
    9. '0' → logprob: -12.101634979248047
    10. 'not' → logprob: -12.476634979248047

Token 938: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8115599155426025
    2. '[' → logprob: -1.0615599155426025
    3. ' ==' → logprob: -1.5615599155426025
    4. '[-' → logprob: -10.436559677124023
    5. '==-' → logprob: -10.436559677124023
    6. '==(' → logprob: -10.811559677124023
    7. '==
' → logprob: -11.561559677124023
    8. ']==' → logprob: -12.311559677124023
    9. '       ' → logprob: -12.686559677124023
    10. '()==' → logprob: -12.811559677124023

Token 939: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. '[-' → logprob: -12.625004768371582
    3. '0' → logprob: -14.125004768371582
    4. ' [' → logprob: -15.000004768371582
    5. '[...,' → logprob: -20.250003814697266
    6. '[
' → logprob: -20.500003814697266
    7. '['' → logprob: -20.750003814697266
    8. '   ' → logprob: -21.250003814697266
    9. 'EOF' → logprob: -21.375003814697266
    10. '[]' → logprob: -22.000003814697266

Token 940: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003385614836588502
    2. '-' → logprob: -8.000338554382324
    3. '])' → logprob: -13.875338554382324
    4. ']' → logprob: -14.250338554382324
    5. '1' → logprob: -14.625338554382324
    6. ' ' → logprob: -15.000338554382324
    7. '[' → logprob: -15.375338554382324
    8. '#' → logprob: -16.12533950805664
    9. '
' → logprob: -16.25033950805664
    10. ' -' → logprob: -16.75033950805664

Token 941: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032221528235822916
    2. '0' → logprob: -5.7532219886779785
    3. ']' → logprob: -10.378222465515137
    4. ' ,' → logprob: -12.128222465515137
    5. ']*' → logprob: -12.253222465515137
    6. ',
' → logprob: -13.253222465515137
    7. ' ' → logprob: -14.003222465515137
    8. ']:
' → logprob: -15.503222465515137
    9. '000' → logprob: -16.62822151184082
    10. ']:' → logprob: -17.12822151184082

Token 942: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010390079842181876
    2. ' ' → logprob: -9.375103950500488
    3. ']' → logprob: -10.875103950500488
    4. '<|end|>' → logprob: -16.000102996826172
    5. '  ' → logprob: -18.000102996826172
    6. '1' → logprob: -19.375102996826172
    7. '000' → logprob: -19.375102996826172
    8. ')' → logprob: -19.500102996826172
    9. '   ' → logprob: -19.625102996826172
    10. ']>' → logprob: -19.750102996826172

Token 943: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ']' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '000' → logprob: -20.875
    5. '1' → logprob: -21.125
    6. '[' → logprob: -21.25
    7. '<|end|>' → logprob: -21.25
    8. ')' → logprob: -22.0
    9. '۰' → logprob: -22.375
    10. '00' → logprob: -22.5

Token 944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016778295685071498
    2. '0' → logprob: -8.875167846679688
    3. ' ,' → logprob: -10.500167846679688
    4. ',
' → logprob: -15.000167846679688
    5. ' ' → logprob: -17.375167846679688
    6. '
' → logprob: -18.250167846679688
    7. ']' → logprob: -18.625167846679688
    8. '<|end|>' → logprob: -18.750167846679688
    9. '```' → logprob: -18.875167846679688
    10. '000' → logprob: -19.750167846679688

Token 945: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.125001907348633
    4. '  ' → logprob: -21.000001907348633
    5. '000' → logprob: -21.250001907348633
    6. '
' → logprob: -21.500001907348633
    7. '     ' → logprob: -21.750001907348633
    8. '    ' → logprob: -22.000001907348633
    9. '```' → logprob: -22.125001907348633
    10. '       ' → logprob: -22.375001907348633

Token 946: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -17.875001907348633
    4. '000' → logprob: -18.125001907348633
    5. ']' → logprob: -18.875001907348633
    6. '00' → logprob: -19.125001907348633
    7. ',' → logprob: -19.250001907348633
    8. '```' → logprob: -19.375001907348633
    9. '1' → logprob: -19.687501907348633
    10. '  ' → logprob: -19.812501907348633

Token 947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010950337309623137
    2. '0' → logprob: -9.375109672546387
    3. ' ,' → logprob: -10.625109672546387
    4. ' ' → logprob: -16.37510871887207
    5. ',
' → logprob: -16.62510871887207
    6. '```' → logprob: -18.25010871887207
    7. '   ' → logprob: -18.50010871887207
    8. '000' → logprob: -18.87510871887207
    9. ']' → logprob: -19.12510871887207
    10. '<|end|>' → logprob: -19.25010871887207

Token 948: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -20.375003814697266
    4. '<|end|>' → logprob: -20.375003814697266
    5. '00' → logprob: -20.875003814697266
    6. '۰' → logprob: -21.625003814697266
    7. '000' → logprob: -22.125003814697266
    8. '  ' → logprob: -22.125003814697266
    9. '   ' → logprob: -22.250003814697266
    10. '
' → logprob: -22.500003814697266

Token 949: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. ',' → logprob: -19.125
    4. '
' → logprob: -19.75
    5. '00' → logprob: -19.75
    6. '۰' → logprob: -20.25
    7. '<|end|>' → logprob: -20.4375
    8. '   ' → logprob: -20.5625
    9. '```' → logprob: -20.5625
    10. '  ' → logprob: -21.125

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013512482109945267
    2. '0' → logprob: -9.00013542175293
    3. ' ,' → logprob: -11.37513542175293
    4. ' ' → logprob: -15.87513542175293
    5. ',
' → logprob: -16.62513542175293
    6. '```' → logprob: -18.25013542175293
    7. '00' → logprob: -18.87513542175293
    8. '000' → logprob: -19.50013542175293
    9. ']' → logprob: -20.12513542175293
    10. '   ' → logprob: -20.25013542175293

Token 951: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.375001907348633
    4. '۰' → logprob: -20.375001907348633
    5. '```' → logprob: -20.500001907348633
    6. '
' → logprob: -20.750001907348633
    7. '00' → logprob: -21.062501907348633
    8. '#' → logprob: -21.687501907348633
    9. '           ' → logprob: -21.812501907348633
    10. '000' → logprob: -21.812501907348633

Token 952: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. ',' → logprob: -16.625001907348633
    4. '<|end|>' → logprob: -17.812501907348633
    5. ']' → logprob: -18.312501907348633
    6. '...' → logprob: -18.437501907348633
    7. '
' → logprob: -18.437501907348633
    8. '۰' → logprob: -18.625001907348633
    9. '```' → logprob: -18.687501907348633
    10. '<|end|>' → logprob: -19.125001907348633

Token 953: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.214019307051785e-05
    2. '0' → logprob: -10.500032424926758
    3. ' ,' → logprob: -12.375032424926758
    4. ' ' → logprob: -15.125032424926758
    5. ',
' → logprob: -17.000032424926758
    6. '<|end|>' → logprob: -17.500032424926758
    7. ']' → logprob: -18.125032424926758
    8. '```' → logprob: -18.250032424926758
    9. '000' → logprob: -18.625032424926758
    10. 'import' → logprob: -19.250032424926758

Token 954: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. ']' → logprob: -18.125
    4. '
' → logprob: -18.5
    5. '```' → logprob: -19.3125
    6. '۰' → logprob: -19.5
    7. '[' → logprob: -20.75
    8. '০' → logprob: -21.0625
    9. '1' → logprob: -21.1875
    10. '

' → logprob: -21.3125

Token 955: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. ']' → logprob: -16.875
    4. '<|end|>' → logprob: -16.875
    5. '۰' → logprob: -17.25
    6. '০' → logprob: -18.25
    7. '<|end|>' → logprob: -18.4375
    8. '
' → logprob: -18.8125
    9. ')' → logprob: -19.3125
    10. '```' → logprob: -19.375

Token 956: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0013388125225901604
    2. ']:' → logprob: -6.626338958740234
    3. ']:
' → logprob: -11.626338958740234
    4. ']' → logprob: -13.001338958740234
    5. ']:

' → logprob: -14.626338958740234
    6. '):
' → logprob: -14.626338958740234
    7. '']:
' → logprob: -15.501338958740234
    8. '"]:
' → logprob: -15.876338958740234
    9. ']
' → logprob: -16.251338958740234
    10. ']]:
' → logprob: -16.501338958740234

Token 957: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.329167369287461e-05
    2. '           ' → logprob: -9.375093460083008
    3. '                   ' → logprob: -12.750093460083008
    4. ':' → logprob: -13.625093460083008
    5. 'break' → logprob: -13.750093460083008
    6. ':
' → logprob: -14.000093460083008
    7. '	           ' → logprob: -14.375093460083008
    8. '       ' → logprob: -14.750093460083008
    9. ',' → logprob: -15.125093460083008
    10. '              ' → logprob: -15.375093460083008

Token 958: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01755261979997158
    2. '           ' → logprob: -4.267552852630615
    3. ' break' → logprob: -5.767552852630615
    4. '               ' → logprob: -8.517552375793457
    5. 'return' → logprob: -10.142552375793457
    6. '	break' → logprob: -11.517552375793457
    7. '       ' → logprob: -12.142552375793457
    8. '_break' → logprob: -13.767552375793457
    9. '		' → logprob: -16.142553329467773
    10. '
' → logprob: -16.392553329467773

Token 959: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018852073117159307
    2. '            
' → logprob: -9.125188827514648
    3. '
' → logprob: -10.125188827514648
    4. '       ' → logprob: -11.500188827514648
    5. '<|end|>' → logprob: -11.625188827514648
    6. '    
' → logprob: -12.375188827514648
    7. 'continue' → logprob: -12.625188827514648
    8. 'import' → logprob: -12.875188827514648
    9. '        
' → logprob: -13.500188827514648
    10. '               ' → logprob: -14.000188827514648

Token 960: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005395700572989881
    2. '       ' → logprob: -7.750539779663086
    3. '<|end|>' → logprob: -10.125539779663086
    4. 'params' → logprob: -10.875539779663086
    5. '            
' → logprob: -11.250539779663086
    6. '
' → logprob: -11.875539779663086
    7. '```' → logprob: -12.500539779663086
    8. 'param' → logprob: -12.750539779663086
    9. '<|end|>' → logprob: -12.750539779663086
    10. 'electron' → logprob: -13.250539779663086

Token 961: ' self' (ID: 1051)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.0029413290321826935
    2. ' params' → logprob: -6.252941131591797
    3. 'self' (adapté à ' self') → logprob: -7.127941131591797
    4. 'param' → logprob: -8.752941131591797
    5. '           ' → logprob: -10.502941131591797
    6. 'parameters' → logprob: -11.627941131591797
    7. 'p' → logprob: -11.877941131591797
    8. ' self' → logprob: -13.002941131591797
    9. '            
' → logprob: -13.002941131591797
    10. '
' → logprob: -13.752941131591797

Token 962: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -2.339278580620885e-06
    2. 'data' → logprob: -13.000001907348633
    3. '.process' → logprob: -19.000001907348633
    4. ' .' → logprob: -19.875001907348633
    5. '}.' → logprob: -20.250001907348633
    6. '
' → logprob: -20.375001907348633
    7. '__.' → logprob: -20.625001907348633
    8. '.' → logprob: -20.750001907348633
    9. ')data' → logprob: -21.000001907348633
    10. ').' → logprob: -21.125001907348633

Token 963: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -5.438573680294212e-06
    2. 'sets' → logprob: -13.000005722045898
    3. '_processors' → logprob: -13.500005722045898
    4. '_processor' → logprob: -14.250005722045898
    5. ' sets' → logprob: -15.125005722045898
    6. '           ' → logprob: -15.375005722045898
    7. 'Sets' → logprob: -15.500005722045898
    8. '_set' → logprob: -16.2500057220459
    9. '_' → logprob: -16.3750057220459
    10. 's' → logprob: -17.2500057220459

Token 964: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.9146995327901095e-05
    2. '.' → logprob: -11.375019073486328
    3. '.extend' → logprob: -13.375019073486328
    4. '.app' → logprob: -13.500019073486328
    5. '.setdefault' → logprob: -13.625019073486328
    6. ' .' → logprob: -13.875019073486328
    7. '.py' → logprob: -14.250019073486328
    8. '.add' → logprob: -14.250019073486328
    9. '.pyplot' → logprob: -14.875019073486328
    10. '.ap' → logprob: -15.500019073486328

Token 965: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.022609803825616837
    2. '(E' → logprob: -4.272609710693359
    3. '(tuple' → logprob: -5.522609710693359
    4. '(params' → logprob: -5.522609710693359
    5. '((' → logprob: -8.27260971069336
    6. '(' → logprob: -9.77260971069336
    7. 'parts' → logprob: -10.02260971069336
    8. '(line' → logprob: -10.02260971069336
    9. 'tuple' → logprob: -12.02260971069336
    10. 'params' → logprob: -13.14760971069336

Token 966: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000611763505730778
    2. ')
' → logprob: -8.500611305236816
    3. '       ' → logprob: -8.625611305236816
    4. '<|end|>' → logprob: -8.625611305236816
    5. '           ' → logprob: -10.750611305236816
    6. '<|end|>' → logprob: -11.875611305236816
    7. '())' → logprob: -12.500611305236816
    8. ' )' → logprob: -12.625611305236816
    9. '   ' → logprob: -12.875611305236816
    10. '
' → logprob: -13.750611305236816

Token 967: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3365042805671692
    2. 'def' → logprob: -1.3365042209625244
    3. '
' → logprob: -4.0865044593811035
    4. ' def' → logprob: -5.3365044593811035
    5. '<|end|>' → logprob: -7.2115044593811035
    6. '    
' → logprob: -8.586503982543945
    7. '```' → logprob: -8.711503982543945
    8. '       ' → logprob: -8.961503982543945
    9. '<|end|>' → logprob: -10.211503982543945
    10. 'class' → logprob: -10.336503982543945

Token 968: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007970004808157682
    2. '
' → logprob: -7.250796794891357
    3. ' def' → logprob: -9.750797271728516
    4. '   ' → logprob: -10.500797271728516
    5. 'from' → logprob: -14.875797271728516
    6. '	def' → logprob: -15.000797271728516
    7. '    
' → logprob: -15.375797271728516
    8. '```' → logprob: -15.750797271728516
    9. 'class' → logprob: -16.875797271728516
    10. '

' → logprob: -17.000797271728516

Token 969: ' get' (ID: 717)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.0018235737225040793
    2. 'get' → logprob: -7.001823425292969
    3. 'generate' → logprob: -7.251823425292969
    4. '__' → logprob: -8.751823425292969
    5. 'parse' → logprob: -10.251823425292969
    6. 'produce' → logprob: -12.126823425292969
    7. 'yield' → logprob: -13.376823425292969
    8. 'solve' → logprob: -14.376823425292969
    9. 'create' → logprob: -14.626823425292969
    10. 'output' → logprob: -15.126823425292969

Token 970: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.42418554425239563
    2. '_parameters' → logprob: -1.1741855144500732
    3. '_params' → logprob: -4.174185752868652
    4. 'data' → logprob: -5.049185752868652
    5. 'parameters' → logprob: -5.299185752868652
    6. '_next' → logprob: -5.424185752868652
    7. '_d' → logprob: -5.674185752868652
    8. '_e' → logprob: -7.299185752868652
    9. 'params' → logprob: -8.424185752868652
    10. '_batches' → logprob: -8.424185752868652

Token 971: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0468914620578289
    2. '(self' → logprob: -3.296891450881958
    3. 'sets' → logprob: -6.046891689300537
    4. 's' → logprob: -6.046891689300537
    5. 'self' → logprob: -6.546891689300537
    6. '_set' → logprob: -6.921891689300537
    7. '(' → logprob: -8.046891212463379
    8. 'set' → logprob: -8.296891212463379
    9. '_' → logprob: -8.546891212463379
    10. '():
' → logprob: -8.671891212463379

Token 972: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001567353610880673
    2. 'self' → logprob: -6.751567363739014
    3. '(
' → logprob: -8.626566886901855
    4. '(' → logprob: -9.876566886901855
    5. '   ' → logprob: -10.001566886901855
    6. '       ' → logprob: -10.626566886901855
    7. '	self' → logprob: -10.751566886901855
    8. 's' → logprob: -11.126566886901855
    9. 'def' → logprob: -11.251566886901855
    10. ' self' → logprob: -11.501566886901855

Token 973: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0848543643951416
    2. 'self' → logprob: -2.7098543643951416
    3. '):
' → logprob: -4.9598541259765625
    4. '):' → logprob: -5.2098541259765625
    5. ')' → logprob: -6.8348541259765625
    6. '():
' → logprob: -8.209854125976562
    7. '   ' → logprob: -8.459854125976562
    8. 'def' → logprob: -9.084854125976562
    9. ' self' → logprob: -9.209854125976562
    10. '(' → logprob: -9.209854125976562

Token 974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011915372451767325
    2. 'return' → logprob: -6.87619161605835
    3. ' return' → logprob: -9.001191139221191
    4. '
' → logprob: -11.126191139221191
    5. '   ' → logprob: -11.751191139221191
    6. '	return' → logprob: -12.501191139221191
    7. '{return' → logprob: -13.501191139221191
    8. '```' → logprob: -13.751191139221191
    9. 'self' → logprob: -13.876191139221191
    10. ':
' → logprob: -14.001191139221191

Token 975: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01081776898354292
    2. ' return' → logprob: -5.010818004608154
    3. '       ' → logprob: -5.510818004608154
    4. '
' → logprob: -10.010817527770996
    5. 'for' (adapté à ' for') → logprob: -13.260817527770996
    6. '{return' → logprob: -13.260817527770996
    7. '	return' → logprob: -13.635817527770996
    8. '   ' → logprob: -14.510817527770996
    9. ':return' → logprob: -15.135817527770996
    10. ' ' → logprob: -15.385817527770996

Token 976: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5944658517837524
    2. 'params' → logprob: -1.4694658517837524
    3. 'ds' → logprob: -2.469465732574463
    4. ' data' → logprob: -2.844465732574463
    5. ' params' → logprob: -3.344465732574463
    6. 'dataset' → logprob: -3.594465732574463
    7. ' ds' → logprob: -5.469465732574463
    8. 'parts' → logprob: -5.594465732574463
    9. ' dataset' → logprob: -6.094465732574463
    10. '   ' → logprob: -7.219465732574463

Token 977: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.40328913927078247
    2. 'in' → logprob: -1.2782890796661377
    3. '_set' → logprob: -3.0282890796661377
    4. 'set' → logprob: -5.528289318084717
    5. '   ' → logprob: -7.278289318084717
    6. 'Set' → logprob: -9.778288841247559
    7. '_sets' → logprob: -9.903288841247559
    8. '       ' → logprob: -9.903288841247559
    9. '_in' → logprob: -9.903288841247559
    10. '_' → logprob: -10.028288841247559

Token 978: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007121934904716909
    2. ' self' → logprob: -7.2507123947143555
    3. '   ' → logprob: -13.375712394714355
    4. '       ' → logprob: -14.875712394714355
    5. '[self' → logprob: -15.750712394714355
    6. '           ' → logprob: -16.37571144104004
    7. '
' → logprob: -16.75071144104004
    8. '(self' → logprob: -17.00071144104004
    9. '	self' → logprob: -17.87571144104004
    10. '[' → logprob: -19.12571144104004

Token 979: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.1697435826063156
    2. 'data' → logprob: -2.544743537902832
    3. 'self' → logprob: -2.669743537902832
    4. '_sets' → logprob: -5.044743537902832
    5. 'sets' → logprob: -7.794743537902832
    6. '._' → logprob: -8.169743537902832
    7. '   ' → logprob: -8.419743537902832
    8. '_data' → logprob: -8.794743537902832
    9. '
' → logprob: -9.044743537902832
    10. 's' → logprob: -9.294743537902832

Token 980: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -2.4153549020411447e-05
    2. 's' → logprob: -11.62502384185791
    3. 'sets' → logprob: -12.12502384185791
    4. 'ets' → logprob: -12.25002384185791
    5. '_' → logprob: -13.75002384185791
    6. 'Sets' → logprob: -14.25002384185791
    7. '_s' → logprob: -14.37502384185791
    8. '```' → logprob: -15.00002384185791
    9. '   ' → logprob: -15.12502384185791
    10. '_set' → logprob: -15.25002384185791

Token 981: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6387320756912231
    2. ':' → logprob: -0.7637320756912231
    3. '       ' → logprob: -5.263731956481934
    4. ',' → logprob: -8.138731956481934
    5. '):
' → logprob: -8.138731956481934
    6. '():
' → logprob: -8.763731956481934
    7. ':return' → logprob: -9.638731956481934
    8. '[' → logprob: -10.763731956481934
    9. 'yield' → logprob: -10.763731956481934
    10. '):' → logprob: -10.888731956481934

Token 982: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019562290981411934
    2. '           ' → logprob: -7.251956462860107
    3. '        
' → logprob: -8.00195598602295
    4. ':' → logprob: -8.37695598602295
    5. 'yield' → logprob: -8.75195598602295
    6. ' yield' → logprob: -9.12695598602295
    7. '```' → logprob: -9.25195598602295
    8. ',' → logprob: -9.50195598602295
    9. '	yield' → logprob: -9.87695598602295
    10. '<|end|>' → logprob: -9.87695598602295

Token 983: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.03679072484374046
    2. '           ' → logprob: -3.786790609359741
    3. ' yield' → logprob: -4.53679084777832
    4. '	yield' → logprob: -5.91179084777832
    5. '       ' → logprob: -10.41179084777832
    6. 'Yield' → logprob: -12.53679084777832
    7. '               ' → logprob: -12.66179084777832
    8. '```' → logprob: -14.16179084777832
    9. '   ' → logprob: -14.91179084777832
    10. '
' → logprob: -15.03679084777832

Token 984: ' Electron' (ID: 131282)
  Prédit: 'Electron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Electron' → logprob: -0.03917146846652031
    2. 'data' → logprob: -3.4141714572906494
    3. ' Electron' → logprob: -5.2891716957092285
    4. ' data' → logprob: -8.16417121887207
    5. 'Elect' → logprob: -9.03917121887207
    6. 'Electronic' → logprob: -10.28917121887207
    7. 'tuple' → logprob: -11.41417121887207
    8. '           ' → logprob: -12.53917121887207
    9. 'Electric' → logprob: -13.28917121887207
    10. 'electron' → logprob: -13.41417121887207

Token 985: 'Fly' (ID: 60154)
  Prédit: 'Fly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fly' → logprob: -1.0280383548888494e-06
    2. ' Fly' → logprob: -14.000000953674316
    3. 'Electron' → logprob: -16.750001907348633
    4. 'fly' → logprob: -17.625001907348633
    5. 'Flight' → logprob: -19.125001907348633
    6. 'Fl' → logprob: -20.250001907348633
    7. 'Flip' → logprob: -20.250001907348633
    8. ' fly' → logprob: -20.500001907348633
    9. '.fly' → logprob: -20.750001907348633
    10. '```' → logprob: -20.875001907348633

Token 986: 'Parameters' (ID: 10167)
  Prédit: 'Fly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fly' → logprob: -1.1472419600977446e-06
    2. 'Parameters' → logprob: -14.625000953674316
    3. 'Flight' → logprob: -15.250000953674316
    4. 'fly' → logprob: -15.250000953674316
    5. ' Fly' → logprob: -16.125001907348633
    6. 'Electron' → logprob: -17.625001907348633
    7. 'Flying' → logprob: -17.875001907348633
    8. 'Flip' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. 'Fl' → logprob: -18.000001907348633

Token 987: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0035297556314617395
    2. '(data' → logprob: -5.7535295486450195
    3. '(' → logprob: -8.25352954864502
    4. '(
' → logprob: -9.37852954864502
    5. 'data' → logprob: -12.00352954864502
    6. '(**' → logprob: -15.00352954864502
    7. '*' → logprob: -15.12852954864502
    8. '(*(' → logprob: -15.75352954864502
    9. '((*' → logprob: -16.503530502319336
    10. '(

' → logprob: -16.878530502319336

Token 988: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.9361264946837764e-07
    2. ' data' → logprob: -15.875
    3. '
' → logprob: -17.625
    4. '   ' → logprob: -19.25
    5. 'tuple' → logprob: -19.375
    6. '(data' → logprob: -19.875
    7. 'dat' → logprob: -20.125
    8. '[' → logprob: -20.375
    9. '	data' → logprob: -20.625
    10. '```' → logprob: -21.5

Token 989: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.125003814697266
    3. '       ' → logprob: -14.250003814697266
    4. '<|end|>' → logprob: -14.625003814697266
    5. ' )' → logprob: -16.375003814697266
    6. '           ' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.375003814697266
    8. ')}' → logprob: -17.875003814697266
    9. '),' → logprob: -18.000003814697266
    10. '())' → logprob: -18.125003814697266

Token 990: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03005049005150795
    2. 'if' → logprob: -3.53005051612854
    3. '```' → logprob: -8.155050277709961
    4. 'import' → logprob: -12.030050277709961
    5. ' if' → logprob: -13.155050277709961
    6. 'from' → logprob: -13.530050277709961
    7. 'class' → logprob: -13.655050277709961
    8. '#' → logprob: -13.655050277709961
    9. ' def' → logprob: -14.530050277709961
    10. '<|end|>' → logprob: -15.155050277709961

Token 991: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.08749345690011978
    2. 'Electron' → logprob: -3.587493419647217
    3. 'Main' → logprob: -4.212493419647217
    4. 'Solution' → logprob: -4.587493419647217
    5. 'Cycle' → logprob: -4.712493419647217
    6. 'Result' → logprob: -4.962493419647217
    7. 'Runner' → logprob: -5.212493419647217
    8. 'Processor' → logprob: -5.712493419647217
    9. 'Solver' → logprob: -6.212493419647217
    10. 'Fly' → logprob: -6.837493419647217

Token 992: 'Presenter' (ID: 35179)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.24167229235172272
    2. 'Processor' → logprob: -1.9916722774505615
    3. 'Handler' → logprob: -2.8666722774505615
    4. 'Generator' → logprob: -4.116672515869141
    5. 'ter' → logprob: -5.616672515869141
    6. 'Printer' → logprob: -7.116672515869141
    7. 'Manager' → logprob: -8.36667251586914
    8. 'Builder' → logprob: -9.24167251586914
    9. 'Formatter' → logprob: -9.36667251586914
    10. 'Producer' → logprob: -9.74167251586914

Token 993: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02073550596833229
    2. ':
' → logprob: -3.895735502243042
    3. 'class' → logprob: -9.520735740661621
    4. '```' → logprob: -10.520735740661621
    5. '<|end|>' → logprob: -10.770735740661621
    6. '():
' → logprob: -10.895735740661621
    7. '<class' → logprob: -11.645735740661621
    8. ':def' → logprob: -11.645735740661621
    9. '(object' → logprob: -12.520735740661621
    10. ':

' → logprob: -12.645735740661621

Token 994: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11337228864431381
    2. '   ' → logprob: -2.238372325897217
    3. ' class' → logprob: -8.238371849060059
    4. '```' → logprob: -8.363371849060059
    5. 'def' → logprob: -10.488371849060059
    6. '<class' → logprob: -11.113371849060059
    7. '@dat' → logprob: -13.363371849060059
    8. '	class' → logprob: -13.613371849060059
    9. 'classmethod' → logprob: -13.738371849060059
    10. '<|end|>' → logprob: -13.863371849060059

Token 995: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020520923135336488
    2. 'class' → logprob: -8.500205039978027
    3. '@' → logprob: -13.750205039978027
    4. ' def' → logprob: -14.500205039978027
    5. '   ' → logprob: -16.750205993652344
    6. '```' → logprob: -16.875205993652344
    7. 'staticmethod' → logprob: -19.750205993652344
    8. '	def' → logprob: -20.500205993652344
    9. 'classmethod' → logprob: -21.375205993652344
    10. '
' → logprob: -22.000205993652344

Token 996: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029251066967844963
    2. 'staticmethod' → logprob: -3.6542510986328125
    3. 'class' → logprob: -6.5292510986328125
    4. 'init' → logprob: -7.4042510986328125
    5. 'classmethod' → logprob: -7.4042510986328125
    6. ' def' → logprob: -8.529251098632812
    7. '__' → logprob: -9.904251098632812
    8. '```' → logprob: -11.154251098632812
    9. '	def' → logprob: -13.029251098632812
    10. 'python' → logprob: -13.904251098632812

Token 997: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.65707261255011e-06
    2. 'iter' → logprob: -12.000008583068848
    3. 'int' → logprob: -13.250008583068848
    4. 'staticmethod' → logprob: -15.375008583068848
    5. 'class' → logprob: -15.500008583068848
    6. 'call' → logprob: -16.000009536743164
    7. 'def' → logprob: -16.625009536743164
    8. 'nit' → logprob: -16.750009536743164
    9. '__' → logprob: -16.875009536743164
    10. ' init' → logprob: -16.875009536743164

Token 998: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02494709938764572
    2. '__(' → logprob: -4.149947166442871
    3. '   ' → logprob: -5.524947166442871
    4. 'self' → logprob: -6.274947166442871
    5. 'class' → logprob: -6.524947166442871
    6. '
' → logprob: -7.774947166442871
    7. 'def' → logprob: -8.149947166442871
    8. '__' → logprob: -8.774947166442871
    9. '```' → logprob: -9.149947166442871
    10. ':
' → logprob: -9.274947166442871

Token 999: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017452733591198921
    2. '):
' → logprob: -6.626745223999023
    3. ')' → logprob: -8.126745223999023
    4. '   ' → logprob: -9.626745223999023
    5. '):' → logprob: -10.126745223999023
    6. '       ' → logprob: -12.251745223999023
    7. '
' → logprob: -12.501745223999023
    8. '(self' → logprob: -12.751745223999023
    9. ' self' → logprob: -13.376745223999023
    10. ')(' → logprob: -13.501745223999023

Token 1000: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1163327768445015
    2. '):' → logprob: -2.241332769393921
    3. ',' → logprob: -6.3663330078125
    4. '   ' → logprob: -6.4913330078125
    5. '():
' → logprob: -9.7413330078125
    6. 'self' → logprob: -10.1163330078125
    7. ')' → logprob: -10.4913330078125
    8. ':
' → logprob: -10.7413330078125
    9. '):
' → logprob: -10.7413330078125
    10. '(self' → logprob: -11.1163330078125

Token 1001: '       ' (ID: 309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12989598512649536
    2. '   ' → logprob: -2.6298959255218506
    3. 'self' → logprob: -3.1298959255218506
    4. 'def' → logprob: -5.12989616394043
    5. '
' → logprob: -10.37989616394043
    6. '```' → logprob: -10.37989616394043
    7. ')' → logprob: -11.00489616394043
    8. 'from' → logprob: -12.75489616394043
    9. '<|end|>' → logprob: -13.75489616394043
    10. ' ' → logprob: -13.87989616394043

Token 1002: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1545248180627823
    2. '
' → logprob: -2.779524803161621
    3. '   ' → logprob: -3.029524803161621
    4. 'def' → logprob: -3.904524803161621
    5. '       ' → logprob: -4.654524803161621
    6. 'pass' → logprob: -5.904524803161621
    7. ' self' → logprob: -8.404524803161621
    8. 'class' → logprob: -10.279524803161621
    9. ' def' → logprob: -11.029524803161621
    10. '    
' → logprob: -11.029524803161621

Token 1003: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.45510441064834595
    2. '.data' → logprob: -1.8301043510437012
    3. 'results' → logprob: -2.455104351043701
    4. '.outputs' → logprob: -3.205104351043701
    5. 'def' → logprob: -3.955104351043701
    6. '.parameters' → logprob: -4.080104351043701
    7. '.def' → logprob: -4.205104351043701
    8. 'data' → logprob: -5.330104351043701
    9. '.lines' → logprob: -5.455104351043701
    10. '._' → logprob: -5.455104351043701

Token 1004: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4756055474281311
    2. '=' → logprob: -0.9756055474281311
    3. '=[]' → logprob: -6.725605487823486
    4. '   ' → logprob: -8.100605964660645
    5. '<|end|>' → logprob: -11.725605964660645
    6. '=[]
' → logprob: -12.350605964660645
    7. '[]' → logprob: -12.725605964660645
    8. '.append' → logprob: -12.975605964660645
    9. ':' → logprob: -12.975605964660645
    10. 'def' → logprob: -13.975605964660645

Token 1005: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.5776860184123507e-06
    2. '[]
' → logprob: -13.00000286102295
    3. '[]

' → logprob: -15.25000286102295
    4. '[' → logprob: -18.375001907348633
    5. '[]"' → logprob: -18.500001907348633
    6. '[]}' → logprob: -18.625001907348633
    7. '[])' → logprob: -19.250001907348633
    8. ' []' → logprob: -19.375001907348633
    9. '[],' → logprob: -20.750001907348633
    10. '[]>' → logprob: -21.000001907348633

Token 1006: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023392226547002792
    2. 'def' → logprob: -3.7733922004699707
    3. ' def' → logprob: -8.898392677307129
    4. '```' → logprob: -12.398392677307129
    5. '
' → logprob: -12.898392677307129
    6. '<|end|>' → logprob: -13.273392677307129
    7. '	def' → logprob: -14.648392677307129
    8. '    
' → logprob: -15.148392677307129
    9. ' ' → logprob: -15.523392677307129
    10. '  ' → logprob: -15.648392677307129

Token 1007: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000249061529757455
    2. ' def' → logprob: -8.500248908996582
    3. '   ' → logprob: -10.000248908996582
    4. '	def' → logprob: -16.5002498626709
    5. '
' → logprob: -16.6252498626709
    6. ' ' → logprob: -18.7502498626709
    7. '```' → logprob: -19.2502498626709
    8. '    
' → logprob: -19.8752498626709
    9. 'class' → logprob: -20.2502498626709
    10. '  ' → logprob: -20.2502498626709

Token 1008: ' collect' (ID: 7916)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.08836521208286285
    2. 'present' → logprob: -2.838365316390991
    3. 'append' → logprob: -3.838365316390991
    4. 'display' → logprob: -5.838365077972412
    5. 'store' → logprob: -6.838365077972412
    6. 'print' → logprob: -8.21336555480957
    7. 'record' → logprob: -9.08836555480957
    8. 'show' → logprob: -9.83836555480957
    9. 'format' → logprob: -10.46336555480957
    10. 'output' → logprob: -10.83836555480957

Token 1009: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0031983929220587015
    2. '(' → logprob: -6.628198623657227
    3. '_results' → logprob: -7.003198623657227
    4. '_result' → logprob: -7.378198623657227
    5. 'results' → logprob: -8.503198623657227
    6. 'result' → logprob: -9.503198623657227
    7. 'def' → logprob: -10.378198623657227
    8. 'self' → logprob: -11.003198623657227
    9. '(results' → logprob: -12.878198623657227
    10. '(
' → logprob: -13.003198623657227

Token 1010: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6435796618461609
    2. '(' → logprob: -0.8935796618461609
    3. '_result' → logprob: -3.0185797214508057
    4. '_results' → logprob: -4.393579483032227
    5. ' (' → logprob: -6.893579483032227
    6. ')' → logprob: -7.018579483032227
    7. '(
' → logprob: -7.018579483032227
    8. 'result' → logprob: -8.393579483032227
    9. 'results' → logprob: -8.643579483032227
    10. 'self' → logprob: -8.893579483032227

Token 1011: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0023641132283955812
    2. 'value' → logprob: -7.252364158630371
    3. 'cycle' → logprob: -7.252364158630371
    4. 'time' → logprob: -7.502364158630371
    5. ' result' → logprob: -9.002364158630371
    6. 'param' → logprob: -9.127364158630371
    7. 'answer' → logprob: -9.877364158630371
    8. 'n' → logprob: -10.252364158630371
    9. 'params' → logprob: -10.502364158630371
    10. 'cycles' → logprob: -11.252364158630371

Token 1012: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11152864992618561
    2. ',' → logprob: -2.9865286350250244
    3. '):
' → logprob: -2.9865286350250244
    4. 'self' → logprob: -6.1115288734436035
    5. ')' → logprob: -7.1115288734436035
    6. '   ' → logprob: -7.7365288734436035
    7. '(self' → logprob: -8.111528396606445
    8. '(' → logprob: -8.236528396606445
    9. ' ):' → logprob: -8.736528396606445
    10. ':' → logprob: -8.986528396606445

Token 1013: ' int' (ID: 677)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10491050779819489
    2. ' result' → logprob: -2.3549106121063232
    3. ')' → logprob: -5.979910373687744
    4. 'int' → logprob: -6.229910373687744
    5. ' int' → logprob: -9.104910850524902
    6. ' )' → logprob: -9.604910850524902
    7. '(result' → logprob: -12.104910850524902
    8. ')
' → logprob: -13.354910850524902
    9. '):
' → logprob: -13.354910850524902
    10. ' ' → logprob: -13.854910850524902

Token 1014: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5763628482818604
    2. '):' → logprob: -0.8263628482818604
    3. ')' → logprob: -7.826362609863281
    4. '):
' → logprob: -11.201362609863281
    5. '   ' → logprob: -11.701362609863281
    6. '       ' → logprob: -14.451362609863281
    7. ' ):
' → logprob: -14.451362609863281
    8. '):

' → logprob: -14.576362609863281
    9. ' ):' → logprob: -15.451362609863281
    10. ')
' → logprob: -15.451362609863281

Token 1015: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3875918686389923
    2. 'self' → logprob: -1.13759183883667
    3. ' self' → logprob: -7.26259183883667
    4. '   ' → logprob: -11.512592315673828
    5. '```' → logprob: -12.762592315673828
    6. '	self' → logprob: -12.887592315673828
    7. '(self' → logprob: -13.137592315673828
    8. '	' → logprob: -14.012592315673828
    9. '
' → logprob: -14.762592315673828
    10. '[self' → logprob: -15.762592315673828

Token 1016: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0032177609391510487
    2. ' self' → logprob: -5.753217697143555
    3. '       ' → logprob: -10.128217697143555
    4. '	self' → logprob: -16.628217697143555
    5. '   ' → logprob: -16.878217697143555
    6. '
' → logprob: -17.378217697143555
    7. '(self' → logprob: -17.878217697143555
    8. '        
' → logprob: -17.878217697143555
    9. ' ' → logprob: -18.628217697143555
    10. '```' → logprob: -19.128217697143555

Token 1017: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.0020810244604945183
    2. 'results' → logprob: -6.502080917358398
    3. '.' → logprob: -7.502080917358398
    4. ' .' → logprob: -11.002080917358398
    5. '.append' → logprob: -12.002080917358398
    6. '	results' → logprob: -13.502080917358398
    7. ' results' → logprob: -14.002080917358398
    8. '._' → logprob: -14.877080917358398
    9. '_results' → logprob: -15.127080917358398
    10. '.
' → logprob: -15.127080917358398

Token 1018: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -12.250006675720215
    3. 'append' → logprob: -13.750006675720215
    4. '.extend' → logprob: -14.625006675720215
    5. '.app' → logprob: -18.2500057220459
    6. '.push' → logprob: -19.1250057220459
    7. '_append' → logprob: -19.2500057220459
    8. ' .' → logprob: -19.7500057220459
    9. '.Append' → logprob: -20.1250057220459
    10. '.add' → logprob: -20.5000057220459

Token 1019: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.018151111900806427
    2. 'result' → logprob: -4.01815128326416
    3. '(' → logprob: -13.76815128326416
    4. '(f' → logprob: -16.018150329589844
    5. '(str' → logprob: -17.143150329589844
    6. ' result' → logprob: -17.268150329589844
    7. '(
' → logprob: -18.018150329589844
    8. '=result' → logprob: -19.268150329589844
    9. '[result' → logprob: -19.268150329589844
    10. '((' → logprob: -19.643150329589844

Token 1020: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012565418146550655
    2. '
' → logprob: -7.251256465911865
    3. '   ' → logprob: -8.251256942749023
    4. ')
' → logprob: -8.876256942749023
    5. '<|end|>' → logprob: -9.251256942749023
    6. '    
' → logprob: -11.126256942749023
    7. ' )' → logprob: -11.501256942749023
    8. '       ' → logprob: -11.876256942749023
    9. '`)' → logprob: -12.876256942749023
    10. '  
' → logprob: -13.626256942749023

Token 1021: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08502901345491409
    2. '
' → logprob: -3.085029125213623
    3. '   ' → logprob: -3.335029125213623
    4. '```' → logprob: -9.460028648376465
    5. ' def' → logprob: -9.710028648376465
    6. 'class' → logprob: -10.710028648376465
    7. '    
' → logprob: -11.960028648376465
    8. '	def' → logprob: -12.710028648376465
    9. '

' → logprob: -14.835028648376465
    10. 'import' → logprob: -14.835028648376465

Token 1022: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.630610641877865e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.500006675720215
    4. '	def' → logprob: -16.2500057220459
    5. '
' → logprob: -16.6250057220459
    6. '```' → logprob: -17.6250057220459
    7. '    
' → logprob: -21.2500057220459
    8. 'class' → logprob: -21.2500057220459
    9. 'Def' → logprob: -21.8750057220459
    10. '`' → logprob: -22.7500057220459

Token 1023: ' display' (ID: 4589)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1372806280851364
    2. 'display' → logprob: -2.1372807025909424
    3. 'present' → logprob: -4.637280464172363
    4. 'output' → logprob: -7.637280464172363
    5. 'write' → logprob: -9.887280464172363
    6. 'show' → logprob: -10.137280464172363
    7. 'flush' → logprob: -10.887280464172363
    8. 'format' → logprob: -11.762280464172363
    9. ' print' → logprob: -12.262280464172363
    10. ' display' → logprob: -12.387280464172363

Token 1024: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06674835085868835
    2. '()' → logprob: -2.9417483806610107
    3. '_results' → logprob: -4.566748142242432
    4. '(' → logprob: -6.941748142242432
    5. '(
' → logprob: -9.44174861907959
    6. '_all' → logprob: -9.44174861907959
    7. '()
' → logprob: -9.69174861907959
    8. 'self' → logprob: -9.81674861907959
    9. 'results' → logprob: -9.94174861907959
    10. 'def' → logprob: -10.56674861907959

Token 1025: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13152846693992615
    2. '):
' → logprob: -2.881528377532959
    3. '_results' → logprob: -3.256528377532959
    4. ')' → logprob: -4.006528377532959
    5. '(self' → logprob: -5.256528377532959
    6. 'def' → logprob: -6.881528377532959
    7. 'self' → logprob: -7.131528377532959
    8. '   ' → logprob: -7.256528377532959
    9. '()' → logprob: -7.381528377532959
    10. '():' → logprob: -7.631528377532959

Token 1026: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030424181022681296
    2. 'for' → logprob: -8.625304222106934
    3. '   ' → logprob: -9.125304222106934
    4. ' for' → logprob: -11.125304222106934
    5. '```' → logprob: -14.750304222106934
    6. 'def' → logprob: -14.875304222106934
    7. '           ' → logprob: -16.00030517578125
    8. '()' → logprob: -16.50030517578125
    9. 'self' → logprob: -17.00030517578125
    10. '      ' → logprob: -17.87530517578125

Token 1027: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002967320033349097
    2. '       ' → logprob: -8.250296592712402
    3. ' for' → logprob: -10.250296592712402
    4. 'if' → logprob: -17.12529754638672
    5. '   ' → logprob: -17.87529754638672
    6. '	for' → logprob: -19.12529754638672
    7. '```' → logprob: -20.00029754638672
    8. 'import' → logprob: -20.37529754638672
    9. '
' → logprob: -22.00029754638672
    10. ' ' → logprob: -23.00029754638672

Token 1028: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38822564482688904
    2. 'res' → logprob: -1.1382256746292114
    3. 'r' → logprob: -6.638225555419922
    4. ' res' → logprob: -10.638225555419922
    5. ' result' → logprob: -10.888225555419922
    6. 'i' → logprob: -13.763225555419922
    7. ' r' → logprob: -14.513225555419922
    8. 'idx' → logprob: -16.888225555419922
    9. '```' → logprob: -18.513225555419922
    10. 'index' → logprob: -18.763225555419922

Token 1029: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012523079290986061
    2. 'in' → logprob: -4.387523174285889
    3. '       ' → logprob: -12.51252269744873
    4. '   ' → logprob: -12.51252269744873
    5. 'self' → logprob: -13.13752269744873
    6. 'result' → logprob: -13.76252269744873
    7. '()' → logprob: -14.51252269744873
    8. '```' → logprob: -14.63752269744873
    9. '	in' → logprob: -15.13752269744873
    10. 's' → logprob: -15.13752269744873

Token 1030: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7120533811976202e-05
    2. ' self' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.250017166137695
    4. '(self' → logprob: -15.875017166137695
    5. '
' → logprob: -17.625017166137695
    6. '[self' → logprob: -18.500017166137695
    7. '       ' → logprob: -18.750017166137695
    8. '```' → logprob: -19.000017166137695
    9. '	self' → logprob: -19.750017166137695
    10. 'range' → logprob: -19.875017166137695

Token 1031: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.011061146855354309
    2. 'results' → logprob: -4.511061191558838
    3. '._' → logprob: -12.26106071472168
    4. ':
' → logprob: -13.13606071472168
    5. ' results' → logprob: -13.76106071472168
    6. '.' → logprob: -13.88606071472168
    7. '   ' → logprob: -13.88606071472168
    8. '	results' → logprob: -14.01106071472168
    9. ' .' → logprob: -14.38606071472168
    10. '(results' → logprob: -14.51106071472168

Token 1032: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0513485670089722
    2. ':
' → logprob: -1.0513485670089722
    3. '           ' → logprob: -2.0513486862182617
    4. 'print' → logprob: -2.3013486862182617
    5. '       ' → logprob: -3.0513486862182617
    6. '():
' → logprob: -4.301348686218262
    7. ',' → logprob: -5.676348686218262
    8. ' print' → logprob: -5.801348686218262
    9. '.print' → logprob: -7.051348686218262
    10. '.' → logprob: -7.176348686218262

Token 1033: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1541033834218979
    2. 'print' → logprob: -2.0291032791137695
    3. '       ' → logprob: -4.7791032791137695
    4. ' print' → logprob: -5.9041032791137695
    5. '   ' → logprob: -9.02910327911377
    6. '```' → logprob: -9.52910327911377
    7. '	       ' → logprob: -10.90410327911377
    8. '	print' → logprob: -11.65410327911377
    9. '.print' → logprob: -13.02910327911377
    10. '	   ' → logprob: -13.02910327911377

Token 1034: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -13.750000953674316
    3. '           ' → logprob: -16.250001907348633
    4. '```' → logprob: -20.375001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '       ' → logprob: -21.750001907348633
    7. '	print' → logprob: -22.375001907348633
    8. '
' → logprob: -24.625001907348633
    9. 'println' → logprob: -24.625001907348633
    10. '               ' → logprob: -24.750001907348633

Token 1035: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0015023599844425917
    2. 'result' → logprob: -6.501502513885498
    3. '(' → logprob: -17.376502990722656
    4. '(f' → logprob: -17.501502990722656
    5. ' result' → logprob: -18.751502990722656
    6. '=result' → logprob: -18.751502990722656
    7. ',result' → logprob: -18.876502990722656
    8. '$result' → logprob: -20.376502990722656
    9. '[result' → logprob: -20.376502990722656
    10. '	result' → logprob: -20.501502990722656

Token 1036: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9875325708417222e-05
    2. '())' → logprob: -11.125029563903809
    3. ')
' → logprob: -11.625029563903809
    4. '()' → logprob: -12.125029563903809
    5. '       ' → logprob: -15.500029563903809
    6. ' )' → logprob: -15.875029563903809
    7. '   ' → logprob: -16.000030517578125
    8. '`)' → logprob: -16.125030517578125
    9. '))' → logprob: -16.875030517578125
    10. '<|end|>' → logprob: -16.875030517578125

Token 1037: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1269284337759018
    2. 'if' → logprob: -2.1269283294677734
    3. 'class' → logprob: -15.501928329467773
    4. ' if' → logprob: -16.626928329467773
    5. '```' → logprob: -16.626928329467773
    6. 'from' → logprob: -16.876928329467773
    7. 'import' → logprob: -17.501928329467773
    8. ' def' → logprob: -18.001928329467773
    9. '#' → logprob: -18.251928329467773
    10. '
' → logprob: -20.001928329467773

Token 1038: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2014152854681015
    2. 'main' → logprob: -1.7014153003692627
    3. 'def' → logprob: -13.701415061950684
    4. ' run' → logprob: -14.326415061950684
    5. '	main' → logprob: -15.451415061950684
    6. 'run' → logprob: -15.826415061950684
    7. 'process' → logprob: -16.826416015625
    8. ' process' → logprob: -17.451416015625
    9. '_main' → logprob: -17.576416015625
    10. ' def' → logprob: -17.951416015625

Token 1039: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000297685619443655
    2. '():
' → logprob: -8.125297546386719
    3. ' ():' → logprob: -13.625297546386719
    4. '()' → logprob: -15.375297546386719
    5. '():
' → logprob: -15.750297546386719
    6. '():

' → logprob: -18.25029754638672
    7. ':' → logprob: -19.62529754638672
    8. '()>' → logprob: -19.87529754638672
    9. '().' → logprob: -20.50029754638672
    10. 'def' → logprob: -20.75029754638672

Token 1040: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004992394242435694
    2. 'processor' → logprob: -6.504992485046387
    3. ' processor' → logprob: -6.629992485046387
    4. 'input' → logprob: -6.754992485046387
    5. ' input' → logprob: -7.004992485046387
    6. 'ip' → logprob: -9.629992485046387
    7. ' ip' → logprob: -10.879992485046387
    8. 'inp' → logprob: -13.504992485046387
    9. '   ' → logprob: -13.504992485046387
    10. 'import' → logprob: -13.754992485046387

Token 1041: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.4760890305042267
    2. 'input' → logprob: -0.9760890007019043
    3. '   ' → logprob: -6.726089000701904
    4. 'ip' → logprob: -7.476089000701904
    5. 'inp' → logprob: -8.976089477539062
    6. ' processor' → logprob: -9.226089477539062
    7. ' input' → logprob: -11.101089477539062
    8. 'reader' → logprob: -13.351089477539062
    9. 'import' → logprob: -13.726089477539062
    10. 'inputs' → logprob: -14.976089477539062

Token 1042: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20146849751472473
    2. ' =' → logprob: -1.7014684677124023
    3. '   ' → logprob: -10.576468467712402
    4. '()' → logprob: -10.701468467712402
    5. '().' → logprob: -12.201468467712402
    6. '=
' → logprob: -14.451468467712402
    7. '.' → logprob: -15.326468467712402
    8. '  ' → logprob: -15.576468467712402
    9. ' ' → logprob: -15.701468467712402
    10. '.process' → logprob: -15.826468467712402

Token 1043: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -18.25
    3. 'input' → logprob: -22.0
    4. '	Input' → logprob: -22.5
    5. '_input' → logprob: -22.875
    6. '<Input' → logprob: -23.25
    7. '\Input' → logprob: -24.125
    8. '_Input' → logprob: -24.125
    9. 'INPUT' → logprob: -24.875
    10. 'Inp' → logprob: -26.125

Token 1044: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -1.9361264946837764e-07
    2. 'processor' → logprob: -16.5
    3. '_processor' → logprob: -19.875
    4. ' Processor' → logprob: -21.125
    5. 'Process' → logprob: -21.75
    6. ' processor' → logprob: -22.25
    7. 'Processors' → logprob: -22.375
    8. 'Parser' → logprob: -23.0
    9. 'Provider' → logprob: -24.125
    10. 'Reader' → logprob: -24.5

Token 1045: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038574778591282666
    2. '
' → logprob: -8.500385284423828
    3. '    
' → logprob: -8.875385284423828
    4. 'processor' → logprob: -10.625385284423828
    5. 'output' → logprob: -11.750385284423828
    6. '<|end|>' → logprob: -12.500385284423828
    7. '  ' → logprob: -13.375385284423828
    8. '  
' → logprob: -13.500385284423828
    9. '   
' → logprob: -14.000385284423828
    10. ' processor' → logprob: -14.750385284423828

Token 1046: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053733219392597675
    2. 'processor' → logprob: -5.255373477935791
    3. ' processor' → logprob: -8.880373001098633
    4. '.processor' → logprob: -16.130373001098633
    5. '
' → logprob: -16.505373001098633
    6. '  ' → logprob: -16.880373001098633
    7. '    
' → logprob: -17.130373001098633
    8. 'process' → logprob: -17.130373001098633
    9. '```' → logprob: -17.130373001098633
    10. '   ' → logprob: -17.255373001098633

Token 1047: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.0004998935619369149
    2. '   ' → logprob: -8.125499725341797
    3. ' processor' → logprob: -8.500499725341797
    4. 'process' → logprob: -16.125499725341797
    5. '.processor' → logprob: -16.500499725341797
    6. '
' → logprob: -17.000499725341797
    7. 'processors' → logprob: -17.125499725341797
    8. 'Processor' → logprob: -17.375499725341797
    9. '```' → logprob: -18.000499725341797
    10. 'while' → logprob: -18.750499725341797

Token 1048: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -3.7697225252486533e-06
    2. 'read' → logprob: -12.625003814697266
    3. '.' → logprob: -15.250003814697266
    4. '.readline' → logprob: -16.000003814697266
    5. '.readlines' → logprob: -18.500003814697266
    6. ' .' → logprob: -20.000003814697266
    7. '.write' → logprob: -20.125003814697266
    8. '	read' → logprob: -21.000003814697266
    9. ' read' → logprob: -21.250003814697266
    10. '   ' → logprob: -21.500003814697266

Token 1049: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -8.65707261255011e-06
    2. 'input' → logprob: -12.000008583068848
    3. '()' → logprob: -14.125008583068848
    4. 'Input' → logprob: -14.250008583068848
    5. '```' → logprob: -14.625008583068848
    6. '()
' → logprob: -15.750008583068848
    7. '_' → logprob: -15.875008583068848
    8. '_output' → logprob: -16.000009536743164
    9. '_line' → logprob: -17.000009536743164
    10. '_inputs' → logprob: -17.125009536743164

Token 1050: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.288163083605468e-05
    2. 'present' → logprob: -10.250052452087402
    3. 'controller' → logprob: -11.125052452087402
    4. 'output' → logprob: -14.000052452087402
    5. ' presenter' → logprob: -14.375052452087402
    6. '
' → logprob: -14.500052452087402
    7. '    
' → logprob: -14.750052452087402
    8. 'for' → logprob: -15.000052452087402
    9. '   ' → logprob: -16.25005340576172
    10. '```' → logprob: -17.37505340576172

Token 1051: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028622815385460854
    2. 'present' → logprob: -4.028622627258301
    3. ' presenter' → logprob: -5.153622627258301
    4. 'controller' → logprob: -5.403622627258301
    5. ' controller' → logprob: -9.5286226272583
    6. 'output' → logprob: -10.0286226272583
    7. 'Presenter' → logprob: -12.0286226272583
    8. ' output' → logprob: -12.7786226272583
    9. ' present' → logprob: -13.1536226272583
    10. '   ' → logprob: -13.1536226272583

Token 1052: ' presenter' (ID: 60409)
  Prédit: 'present'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'present' → logprob: -0.0050836107693612576
    2. 'output' → logprob: -5.6300835609436035
    3. 'controller' → logprob: -7.2550835609436035
    4. 'for' → logprob: -7.6300835609436035
    5. ' presenter' → logprob: -8.255084037780762
    6. '   ' → logprob: -10.880084037780762
    7. 'outputs' → logprob: -12.630084037780762
    8. 'p' → logprob: -13.380084037780762
    9. 'Presenter' → logprob: -13.505084037780762
    10. 'presentation' → logprob: -13.755084037780762

Token 1053: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018320847302675247
    2. '=' → logprob: -4.6433210372924805
    3. '   ' → logprob: -4.7683210372924805
    4. '    
' → logprob: -11.01832103729248
    5. '  ' → logprob: -12.01832103729248
    6. '=
' → logprob: -13.14332103729248
    7. '<|end|>' → logprob: -13.26832103729248
    8. '
' → logprob: -13.39332103729248
    9. ' =
' → logprob: -14.26832103729248
    10. ' ' → logprob: -14.26832103729248

Token 1054: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.0001584850688232109
    2. ' Output' → logprob: -8.750158309936523
    3. 'Input' → logprob: -19.250158309936523
    4. '   ' → logprob: -19.625158309936523
    5. '	Output' → logprob: -20.000158309936523
    6. 'output' → logprob: -23.125158309936523
    7. ' output' → logprob: -23.625158309936523
    8. ' ' → logprob: -23.750158309936523
    9. '(Output' → logprob: -23.750158309936523
    10. '_Output' → logprob: -24.000158309936523

Token 1055: 'Presenter' (ID: 35179)
  Prédit: 'Presenter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Presenter' → logprob: -1.0280383548888494e-06
    2. 'Processor' → logprob: -14.125000953674316
    3. ' Presenter' → logprob: -15.250000953674316
    4. 'resenter' → logprob: -18.625001907348633
    5. 'Presented' → logprob: -19.000001907348633
    6. 'present' → logprob: -19.500001907348633
    7. '
' → logprob: -19.875001907348633
    8. 'Producer' → logprob: -20.000001907348633
    9. 'Painter' → logprob: -20.125001907348633
    10. 'Present' → logprob: -20.125001907348633

Token 1056: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026407750556245446
    2. 'for' → logprob: -8.375264167785645
    3. '
' → logprob: -10.625264167785645
    4. ' for' → logprob: -12.375264167785645
    5. '    
' → logprob: -12.375264167785645
    6. 'controller' → logprob: -14.250264167785645
    7. '   ' → logprob: -16.625263214111328
    8. '```' → logprob: -17.125263214111328
    9. '       ' → logprob: -17.375263214111328
    10. '  ' → logprob: -18.625263214111328

Token 1057: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0684826597571373
    2. 'for' → logprob: -2.8184826374053955
    3. 'controller' → logprob: -5.068482875823975
    4. ' for' → logprob: -8.568482398986816
    5. '```' → logprob: -12.193482398986816
    6. ' controller' → logprob: -13.068482398986816
    7. '
' → logprob: -13.068482398986816
    8. '    
' → logprob: -13.443482398986816
    9. 'finder' → logprob: -15.068482398986816
    10. 'fly' → logprob: -15.693482398986816

Token 1058: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06196959316730499
    2. 'controller' → logprob: -2.811969518661499
    3. '   ' → logprob: -13.686969757080078
    4. ' for' → logprob: -15.186969757080078
    5. 'cycle' → logprob: -15.186969757080078
    6. '```' → logprob: -15.811969757080078
    7. 'cycler' → logprob: -17.061969757080078
    8. ' controller' → logprob: -17.561969757080078
    9. '    
' → logprob: -18.061969757080078
    10. 'from' → logprob: -18.311969757080078

Token 1059: ' params' (ID: 7039)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.00037681119283661246
    2. ' params' → logprob: -8.37537670135498
    3. 'parameters' → logprob: -9.25037670135498
    4. 'data' → logprob: -10.25037670135498
    5. 'param' → logprob: -11.75037670135498
    6. 'electron' → logprob: -13.12537670135498
    7. 'dataset' → logprob: -13.37537670135498
    8. '   ' → logprob: -13.62537670135498
    9. 'e' → logprob: -14.00037670135498
    10. 'elect' → logprob: -14.50037670135498

Token 1060: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00760887423530221
    2. 'in' → logprob: -4.882608890533447
    3. '	in' → logprob: -13.132608413696289
    4. '   ' → logprob: -15.632608413696289
    5. 'inthe' → logprob: -16.13260841369629
    6. '
' → logprob: -16.13260841369629
    7. 'import' → logprob: -16.38260841369629
    8. '_in' → logprob: -16.63260841369629
    9. 'params' → logprob: -16.88260841369629
    10. ' ' → logprob: -17.13260841369629

Token 1061: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.00043102685594931245
    2. ' processor' → logprob: -7.750431060791016
    3. 'Processor' → logprob: -16.500431060791016
    4. '   ' → logprob: -16.625431060791016
    5. 'process' → logprob: -16.625431060791016
    6. 'processors' → logprob: -18.750431060791016
    7. '.processor' → logprob: -18.875431060791016
    8. '(process' → logprob: -19.250431060791016
    9. 'generator' → logprob: -19.625431060791016
    10. '
' → logprob: -19.875431060791016

Token 1062: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0006351164192892611
    2. 'get' → logprob: -7.375635147094727
    3. '   ' → logprob: -11.750635147094727
    4. '
' → logprob: -15.125635147094727
    5. '       ' → logprob: -15.625635147094727
    6. '.' → logprob: -16.125635147094727
    7. ' .' → logprob: -16.750635147094727
    8. '_get' → logprob: -17.500635147094727
    9. ' ' → logprob: -17.625635147094727
    10. '@get' → logprob: -17.625635147094727

Token 1063: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -8.061054359131958e-06
    2. 'data' → logprob: -12.000007629394531
    3. 'Data' → logprob: -14.875007629394531
    4. '```' → logprob: -15.125007629394531
    5. '_parameters' → logprob: -15.250007629394531
    6. '_params' → logprob: -15.375007629394531
    7. '\' → logprob: -15.500007629394531
    8. '(_' → logprob: -16.25000762939453
    9. '_input' → logprob: -16.37500762939453
    10. '_Data' → logprob: -16.62500762939453

Token 1064: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -2.816093228830141e-06
    2. 'Sets' → logprob: -13.62500286102295
    3. 'ets' → logprob: -14.12500286102295
    4. 'sets' → logprob: -14.25000286102295
    5. '_' → logprob: -16.750001907348633
    6. 's' → logprob: -17.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. '_set' → logprob: -17.500001907348633
    9. ' sets' → logprob: -17.875001907348633
    10. '_processors' → logprob: -17.875001907348633

Token 1065: '():
' (ID: 8595)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6345098614692688
    2. ':' → logprob: -0.7595098614692688
    3. '       ' → logprob: -6.509510040283203
    4. '   ' → logprob: -8.384510040283203
    5. '):
' → logprob: -9.134510040283203
    6. '():
' → logprob: -10.009510040283203
    7. ',' → logprob: -11.509510040283203
    8. '<|end|>' → logprob: -11.884510040283203
    9. ' :
' → logprob: -12.009510040283203
    10. '):' → logprob: -12.384510040283203

Token 1066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004158534109592438
    2. '   ' → logprob: -5.7541584968566895
    3. 'controller' → logprob: -7.1291584968566895
    4. ' controller' → logprob: -8.879158973693848
    5. 'fly' → logprob: -11.379158973693848
    6. ' fly' → logprob: -11.879158973693848
    7. '```' → logprob: -12.504158973693848
    8. '	controller' → logprob: -12.879158973693848
    9. 'cycler' → logprob: -13.504158973693848
    10. '    
' → logprob: -13.629158973693848

Token 1067: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -0.043548405170440674
    2. '       ' → logprob: -3.543548345565796
    3. ' controller' → logprob: -4.293548583984375
    4. 'cycle' → logprob: -10.418548583984375
    5. '   ' → logprob: -11.793548583984375
    6. '	controller' → logprob: -12.793548583984375
    7. 'ctrl' → logprob: -13.418548583984375
    8. 'cycler' → logprob: -13.793548583984375
    9. ' cycle' → logprob: -13.918548583984375
    10. '_controller' → logprob: -14.793548583984375

Token 1068: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014180317521095276
    2. '=' → logprob: -4.2641801834106445
    3. '<|end|>' → logprob: -12.639180183410645
    4. ' =
' → logprob: -12.764180183410645
    5. '       ' → logprob: -12.764180183410645
    6. '=
' → logprob: -13.014180183410645
    7. '   ' → logprob: -13.139180183410645
    8. '.' → logprob: -13.889180183410645
    9. '<|end|>' → logprob: -14.389180183410645
    10. '        ' → logprob: -14.889180183410645

Token 1069: ' Electron' (ID: 131282)
  Prédit: 'Electron'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Electron' → logprob: -0.00033546582562848926
    2. ' Electron' → logprob: -8.000335693359375
    3. 'Electronic' → logprob: -18.375335693359375
    4. 'Elect' → logprob: -19.625335693359375
    5. 'electron' → logprob: -21.500335693359375
    6. '   ' → logprob: -22.125335693359375
    7. ' electron' → logprob: -22.125335693359375
    8. 'Electric' → logprob: -22.250335693359375
    9. '       ' → logprob: -25.750335693359375
    10. 'Elektr' → logprob: -26.000335693359375

Token 1070: 'Fly' (ID: 60154)
  Prédit: 'Fly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fly' → logprob: -3.128163257315464e-07
    2. ' Fly' → logprob: -15.125
    3. 'fly' → logprob: -18.25
    4. '
' → logprob: -20.0
    5. 'Flight' → logprob: -20.0
    6. 'Electron' → logprob: -20.25
    7. 'Flip' → logprob: -20.5
    8. 'Fl' → logprob: -20.875
    9. '```' → logprob: -21.375
    10. '.fly' → logprob: -21.5

Token 1071: 'Cycle' (ID: 43162)
  Prédit: 'Cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cycle' → logprob: -0.00014132341311778873
    2. 'Fly' → logprob: -8.875141143798828
    3. 'cycle' → logprob: -14.625141143798828
    4. 'fly' → logprob: -15.500141143798828
    5. 'Controller' → logprob: -16.000141143798828
    6. '_cycle' → logprob: -16.250141143798828
    7. 'ycle' → logprob: -16.375141143798828
    8. 'Flight' → logprob: -16.375141143798828
    9. 'Cycl' → logprob: -16.875141143798828
    10. ' Cycle' → logprob: -17.000141143798828

Token 1072: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: -0.00012987985974177718
    2. 'Finder' → logprob: -9.000129699707031
    3. 'controller' → logprob: -12.375129699707031
    4. '   ' → logprob: -14.125129699707031
    5. '       ' → logprob: -14.500129699707031
    6. 'Control' → logprob: -14.875129699707031
    7. '@Controller' → logprob: -15.875129699707031
    8. '_controller' → logprob: -16.25012969970703
    9. 'finder' → logprob: -16.25012969970703
    10. 'Checker' → logprob: -17.00012969970703

Token 1073: '(params' (ID: 18813)
  Prédit: '(params'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(params' → logprob: -0.0009144435753114522
    2. 'params' → logprob: -7.000914573669434
    3. '(' → logprob: -13.375914573669434
    4. '       ' → logprob: -13.750914573669434
    5. '=params' → logprob: -15.375914573669434
    6. ' params' → logprob: -16.375913619995117
    7. '(controller' → logprob: -17.000913619995117
    8. '   ' → logprob: -17.500913619995117
    9. '(parameters' → logprob: -17.750913619995117
    10. '(
' → logprob: -18.000913619995117

Token 1074: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2073037028312683
    2. ')' → logprob: -1.957303762435913
    3. '       ' → logprob: -3.082303762435913
    4. '   ' → logprob: -9.207304000854492
    5. ')
' → logprob: -10.457304000854492
    6. ').' → logprob: -13.582304000854492
    7. '           ' → logprob: -13.582304000854492
    8. '())
' → logprob: -14.332304000854492
    9. '()
' → logprob: -14.707304000854492
    10. ' )
' → logprob: -15.582304000854492

Token 1075: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011086373589932919
    2. 'result' → logprob: -4.511086463928223
    3. '   ' → logprob: -10.636086463928223
    4. ' result' → logprob: -11.261086463928223
    5. '```' → logprob: -14.886086463928223
    6. '	result' → logprob: -15.261086463928223
    7. '           ' → logprob: -15.261086463928223
    8. 'response' → logprob: -15.386086463928223
    9. 'results' → logprob: -15.761086463928223
    10. '<|end|>' → logprob: -16.136085510253906

Token 1076: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.001519503304734826
    2. 'time' → logprob: -7.376519680023193
    3. '       ' → logprob: -7.501519680023193
    4. ' result' → logprob: -8.251519203186035
    5. 'cycle' → logprob: -9.751519203186035
    6. 'minimum' → logprob: -11.751519203186035
    7. 'res' → logprob: -12.126519203186035
    8. 'answer' → logprob: -12.501519203186035
    9. 'duration' → logprob: -13.876519203186035
    10. 'return' → logprob: -14.251519203186035

Token 1077: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023913532495499
    2. '=' → logprob: -2.3502390384674072
    3. ')' → logprob: -11.350238800048828
    4. '.' → logprob: -11.600238800048828
    5. '   ' → logprob: -11.850238800048828
    6. '       ' → logprob: -13.600238800048828
    7. ' =
' → logprob: -13.975238800048828
    8. '=
' → logprob: -14.975238800048828
    9. '    ' → logprob: -15.100238800048828
    10. '.=' → logprob: -15.225238800048828

Token 1078: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' → logprob: -2.7610454708337784e-05
    2. ' controller' → logprob: -10.500027656555176
    3. '       ' → logprob: -18.37502670288086
    4. 'control' → logprob: -20.25002670288086
    5. 'container' → logprob: -20.87502670288086
    6. '   ' → logprob: -21.00002670288086
    7. '	controller' → logprob: -21.25002670288086
    8. 'ctrl' → logprob: -22.62502670288086
    9. '(controller' → logprob: -22.62502670288086
    10. '_controller' → logprob: -23.12502670288086

Token 1079: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -2.3557529857498594e-05
    2. 'compute' → logprob: -11.12502384185791
    3. '.' → logprob: -12.25002384185791
    4. '.collect' → logprob: -13.00002384185791
    5. '.calculate' → logprob: -13.50002384185791
    6. '   ' → logprob: -15.62502384185791
    7. '.
' → logprob: -17.000022888183594
    8. ' .' → logprob: -17.250022888183594
    9. '_compute' → logprob: -17.750022888183594
    10. '       ' → logprob: -18.500022888183594

Token 1080: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.3856492842023727e-06
    2. 'minimum' → logprob: -13.625000953674316
    3. '_max' → logprob: -17.125001907348633
    4. 'min' → logprob: -17.500001907348633
    5. '_return' → logprob: -17.500001907348633
    6. ' minimum' → logprob: -17.875001907348633
    7. '```' → logprob: -18.250001907348633
    8. 'Minimum' → logprob: -18.500001907348633
    9. '.minimum' → logprob: -18.750001907348633
    10. 'return' → logprob: -18.875001907348633

Token 1081: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.00016325322212651372
    2. 'um' → logprob: -8.875163078308105
    3. '   ' → logprob: -11.750163078308105
    4. 'ute' → logprob: -12.000163078308105
    5. '       ' → logprob: -12.375163078308105
    6. '_' → logprob: -13.875163078308105
    7. '_time' → logprob: -13.875163078308105
    8. 'return' → logprob: -14.250163078308105
    9. 'eturn' → logprob: -14.875163078308105
    10. '        ' → logprob: -15.250163078308105

Token 1082: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.00033581978641450405
    2. 'return' → logprob: -8.000335693359375
    3. ' return' → logprob: -16.125335693359375
    4. '
' → logprob: -16.875335693359375
    5. '_' → logprob: -16.875335693359375
    6. '_time' → logprob: -17.375335693359375
    7. 'Return' → logprob: -17.500335693359375
    8. '_re' → logprob: -18.250335693359375
    9. '_RETURN' → logprob: -18.375335693359375
    10. '\' → logprob: -18.500335693359375

Token 1083: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.4849443838757e-06
    2. '_times' → logprob: -12.625004768371582
    3. '_value' → logprob: -14.625004768371582
    4. '_to' → logprob: -15.375004768371582
    5. '_code' → logprob: -16.000003814697266
    6. '_token' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.500003814697266
    8. '_' → logprob: -16.625003814697266
    9. '```' → logprob: -17.500003814697266
    10. 's' → logprob: -17.500003814697266

Token 1084: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4034345187828876e-05
    2. '
' → logprob: -11.00002384185791
    3. '<|end|>' → logprob: -13.37502384185791
    4. '        
' → logprob: -13.50002384185791
    5. '()' → logprob: -13.87502384185791
    6. '()
' → logprob: -14.25002384185791
    7. '   ' → logprob: -14.50002384185791
    8. ',' → logprob: -14.87502384185791
    9. '	' → logprob: -15.00002384185791
    10. '```' → logprob: -15.00002384185791

Token 1085: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.676981345459353e-06
    2. '   ' → logprob: -12.125005722045898
    3. '```' → logprob: -16.6250057220459
    4. 'present' → logprob: -17.0000057220459
    5. '
' → logprob: -17.3750057220459
    6. '        
' → logprob: -17.8750057220459
    7. '	' → logprob: -18.0000057220459
    8. '           ' → logprob: -18.3750057220459
    9. '      ' → logprob: -19.0000057220459
    10. '<|end|>' → logprob: -19.1250057220459

Token 1086: ' presenter' (ID: 60409)
  Prédit: 'present'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'present' → logprob: -0.014175502583384514
    2. '       ' → logprob: -4.2641754150390625
    3. ' presenter' → logprob: -11.639175415039062
    4. 'presentation' → logprob: -13.139175415039062
    5. '   ' → logprob: -14.139175415039062
    6. '.presenter' → logprob: -15.139175415039062
    7. 'pres' → logprob: -16.889175415039062
    8. 'Presenter' → logprob: -17.639175415039062
    9. '```' → logprob: -17.889175415039062
    10. '           ' → logprob: -18.014175415039062

Token 1087: '.collect' (ID: 48094)
  Prédit: '.collect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.collect' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -11.750007629394531
    3. 'collect' → logprob: -18.75000762939453
    4. '.col' → logprob: -19.12500762939453
    5. ' .' → logprob: -19.50000762939453
    6. '.collection' → logprob: -19.75000762939453
    7. '   ' → logprob: -20.25000762939453
    8. '.coll' → logprob: -21.12500762939453
    9. '.consume' → logprob: -22.75000762939453
    10. 'Collect' → logprob: -22.87500762939453

Token 1088: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0031777136027812958
    2. 'result' → logprob: -5.753177642822266
    3. '(' → logprob: -17.378177642822266
    4. ' result' → logprob: -19.128177642822266
    5. '=result' → logprob: -20.503177642822266
    6. '[result' → logprob: -21.003177642822266
    7. '(
' → logprob: -21.253177642822266
    8. ',result' → logprob: -22.003177642822266
    9. '	result' → logprob: -22.503177642822266
    10. '(results' → logprob: -23.503177642822266

Token 1089: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06262180954217911
    2. '       ' → logprob: -3.062621831893921
    3. '()' → logprob: -4.937621593475342
    4. ')
' → logprob: -5.562621593475342
    5. '<|end|>' → logprob: -6.937621593475342
    6. '   ' → logprob: -7.062621593475342
    7. '())' → logprob: -7.312621593475342
    8. '()
' → logprob: -8.4376220703125
    9. '<|end|>' → logprob: -9.6876220703125
    10. '
' → logprob: -10.1876220703125

Token 1090: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.657694418914616e-05
    2. 'present' → logprob: -9.875056266784668
    3. ' presenter' → logprob: -13.125056266784668
    4. '```' → logprob: -13.375056266784668
    5. '
' → logprob: -13.500056266784668
    6. '.presenter' → logprob: -16.750057220458984
    7. '    
' → logprob: -17.625057220458984
    8. '       ' → logprob: -17.625057220458984
    9. '``' → logprob: -18.250057220458984
    10. '   ' → logprob: -18.625057220458984

Token 1091: ' presenter' (ID: 60409)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2018137276172638
    2. 'present' → logprob: -1.7018136978149414
    3. ' presenter' → logprob: -7.951813697814941
    4. '
' → logprob: -11.076813697814941
    5. '```' → logprob: -11.576813697814941
    6. '  ' → logprob: -12.201813697814941
    7. '.presenter' → logprob: -12.201813697814941
    8. 'presentation' → logprob: -12.576813697814941
    9. 'pres' → logprob: -12.701813697814941
    10. ' ' → logprob: -12.826813697814941

Token 1092: '.display' (ID: 14597)
  Prédit: '.display'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.display' → logprob: -0.00010247035970678553
    2. 'display' → logprob: -9.250102043151855
    3. '.' → logprob: -12.000102043151855
    4. '.show' → logprob: -16.875102996826172
    5. '	display' → logprob: -17.625102996826172
    6. '.print' → logprob: -17.875102996826172
    7. '.
' → logprob: -18.000102996826172
    8. '"display' → logprob: -18.000102996826172
    9. '```' → logprob: -18.500102996826172
    10. ' .' → logprob: -18.500102996826172

Token 1093: '()

' (ID: 5874)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005388548015616834
    2. '
' → logprob: -7.7505388259887695
    3. '<|end|>' → logprob: -10.00053882598877
    4. '```' → logprob: -10.37553882598877
    5. ' if' → logprob: -10.50053882598877
    6. '#' → logprob: -13.87553882598877
    7. '__' → logprob: -14.50053882598877
    8. '\n' → logprob: -14.50053882598877
    9. '\' → logprob: -14.75053882598877
    10. '[' → logprob: -15.25053882598877

Token 1094: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.246537173457909e-06
    2. '```' → logprob: -12.875003814697266
    3. ' if' → logprob: -13.375003814697266
    4. '
' → logprob: -16.625003814697266
    5. '#' → logprob: -18.250003814697266
    6. 'main' → logprob: -18.250003814697266
    7. '<|end|>' → logprob: -18.875003814697266
    8. '	if' → logprob: -19.000003814697266
    9. '    
' → logprob: -19.500003814697266
    10. '  
' → logprob: -19.625003814697266

Token 1095: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11290419846773148
    2. ' __' → logprob: -2.2379043102264404
    3. 'name' → logprob: -9.61290454864502
    4. '_name' → logprob: -11.61290454864502
    5. '___' → logprob: -13.11290454864502
    6. 'Name' → logprob: -13.73790454864502
    7. ' ' → logprob: -14.36290454864502
    8. '```' → logprob: -14.36290454864502
    9. '/__' → logprob: -14.86290454864502
    10. ' name' → logprob: -15.48790454864502

Token 1096: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11279823631048203
    2. ' ==' → logprob: -2.7377982139587402
    3. '==' → logprob: -3.6127982139587402
    4. 'name' → logprob: -4.61279821395874
    5. ' __' → logprob: -5.98779821395874
    6. 'if' → logprob: -7.11279821395874
    7. '=='' → logprob: -7.36279821395874
    8. '=="' → logprob: -7.36279821395874
    9. '.__' → logprob: -8.862798690795898
    10. '_name' → logprob: -9.112798690795898

Token 1097: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.251091377227567e-05
    2. '__.__' → logprob: -10.250042915344238
    3. '==' → logprob: -12.375042915344238
    4. '__["' → logprob: -14.375042915344238
    5. '__.' → logprob: -14.375042915344238
    6. '__('' → logprob: -14.875042915344238
    7. ' ==' → logprob: -15.125042915344238
    8. '=="' → logprob: -15.375042915344238
    9. '___' → logprob: -15.500042915344238
    10. '____' → logprob: -15.500042915344238

Token 1098: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4835529625415802
    2. '__' → logprob: -1.3585529327392578
    3. ' ==' → logprob: -2.233552932739258
    4. '=="' → logprob: -4.483552932739258
    5. '=='' → logprob: -4.858552932739258
    6. '__.__' → logprob: -10.358552932739258
    7. '[' → logprob: -10.483552932739258
    8. '===' → logprob: -10.608552932739258
    9. '==
' → logprob: -10.858552932739258
    10. '['' → logprob: -10.983552932739258

Token 1099: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07889584451913834
    2. ''' → logprob: -2.5788958072662354
    3. '__' → logprob: -12.078895568847656
    4. ' "__' → logprob: -15.203895568847656
    5. '"name' → logprob: -17.578895568847656
    6. ' '__' → logprob: -18.078895568847656
    7. '"user' → logprob: -18.078895568847656
    8. '"class' → logprob: -18.078895568847656
    9. ''"' → logprob: -18.703895568847656
    10. 'main' → logprob: -19.078895568847656

Token 1100: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.030890922993421555
    2. '"' → logprob: -4.030890941619873
    3. 'main' → logprob: -4.530890941619873
    4. ''' → logprob: -6.280890941619873
    5. 'name' → logprob: -11.905890464782715
    6. '__":
' → logprob: -13.155890464782715
    7. '"name' → logprob: -13.155890464782715
    8. '___' → logprob: -13.280890464782715
    9. '```' → logprob: -13.655890464782715
    10. '_main' → logprob: -14.030890464782715

Token 1101: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2561834752559662
    2. '__":
' → logprob: -1.5061835050582886
    3. '__
' → logprob: -6.506183624267578
    4. '__.__' → logprob: -7.256183624267578
    5. '__':
' → logprob: -7.381183624267578
    6. '__.' → logprob: -7.506183624267578
    7. '__["' → logprob: -7.881183624267578
    8. '__
' → logprob: -8.131183624267578
    9. '__[' → logprob: -9.756183624267578
    10. '.__' → logprob: -9.756183624267578

Token 1102: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.8351892473874614e-05
    2. '__' → logprob: -10.000048637390137
    3. ' main' → logprob: -13.750048637390137
    4. '   ' → logprob: -14.000048637390137
    5. '	main' → logprob: -14.250048637390137
    6. '```' → logprob: -15.500048637390137
    7. '_main' → logprob: -16.37504768371582
    8. '(main' → logprob: -17.12504768371582
    9. 'Main' → logprob: -18.25004768371582
    10. 'import' → logprob: -18.75004768371582

Token 1103: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. 'import' → logprob: -19.75
    4. '	main' → logprob: -20.0
    5. '   ' → logprob: -20.25
    6. '.main' → logprob: -25.625
    7. '(main' → logprob: -25.75
    8. '_main' → logprob: -25.75
    9. '
' → logprob: -26.375
    10. '```' → logprob: -27.125

Token 1104: '()' (ID: 416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7251124978065491
    2. '<|end|>' → logprob: -0.9751124978065491
    3. ')' → logprob: -3.4751124382019043
    4. '\u' → logprob: -3.9751124382019043
    5. ' ' → logprob: -4.100112438201904
    6. '­' → logprob: -4.225112438201904
    7. '```' → logprob: -4.850112438201904
    8. '​' → logprob: -4.975112438201904
    9. '‌' → logprob: -5.850112438201904
    10. 'â' → logprob: -5.850112438201904


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1102
Tokens correctement prédits (1ère position, stricte): 491
Tokens correctement prédits (1ère position, avec adaptation): 545
Tokens correctement prédits (top 10): 949
Précision stricte (1ère position): 44.56%
Précision adaptée (1ère position): 49.46%
Précision (top 10): 86.12%
================================================================================
