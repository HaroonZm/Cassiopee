================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def parse_expression(s):
    # Parses the expression string into list of clauses, each clause is list of literals
    # Example: "(B&B&f)|(~d&~i&i)|(~v&i&~V)"
    clauses = []
    i = 0
    n = len(s)
    while i < n:
        if s[i] == '(':
            j = i+1
            cnt = 1
            while j < n and cnt > 0:
                if s[j] == '(':
                    cnt += 1
                elif s[j] == ')':
                    cnt -= 1
                j += 1
            clause_str = s[i+1:j-1]  # inside parentheses
            literals = clause_str.split('&')
            clauses.append(literals)
            i = j
            if i < n and s[i] == '|':
                i += 1
        else:
            i += 1
    return clauses

def solve_sat_en_3(clauses):
    # Each clause has exactly 3 literals combined with '&' (AND).
    # The whole expression is clauses combined with '|' (OR).
    # expression = OR of AND of 3 literals.
    # We want to see if there exists an assignment to variables to make expression True,
    # i.e. at least one clause is True.
    # A clause is True iff all 3 literals are True.
    # So find if there exists an assignment making at least one clause True.
    
    # We'll try each clause independently:
    # for each clause (AND of 3 literals), can we find an assignment that makes all literals True?
    # If yes, then overall expression is True.
    
    # For a clause l1 & l2 & l3,
    # each literal is either var or ~var.
    # To satisfy literal:
    #   var means variable True
    #   ~var means variable False
    # Check for conflicts inside clause:
    # For clause to be satisfiable: no variable conflicts inside the clause
    
    for clause in clauses:
        assignment = {}
        satisfiable = True
        for lit in clause:
            if lit.startswith('~'):
                var = lit[1]
                val = False
            else:
                var = lit[0]
                val = True
            if var in assignment:
                if assignment[var] != val:
                    satisfiable = False
                    break
            else:
                assignment[var] = val
        if satisfiable:
            return True
    return False

def main():
    input = sys.stdin.read().splitlines()
    for line in input:
        if line == '#':
            break
        clauses = parse_expression(line)
        print("yes" if solve_sat_en_3(clauses) else "no")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013851531781256199
    2. ' space' → logprob: -6.388851642608643
    3. ' main' → logprob: -6.388851642608643
    4. ' ' → logprob: -6.888851642608643
    5. '<|end|>' → logprob: -6.888851642608643
    6. ' process' → logprob: -7.013851642608643
    7. '  ' → logprob: -7.013851642608643
    8. ' a' → logprob: -7.263851642608643
    9. ' sys' → logprob: -7.638851642608643
    10. '_' → logprob: -7.763851642608643

Token 5: '_expression' (ID: 69265)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.284392774105072
    2. '(' → logprob: -1.4093928337097168
    3. '_line' → logprob: -6.909392833709717
    4. '_:' → logprob: -7.284392833709717
    5. '_token' → logprob: -7.409392833709717
    6. '_name' → logprob: -8.909392356872559
    7. ':' → logprob: -9.284392356872559
    8. '_data' → logprob: -9.784392356872559
    9. '```' → logprob: -9.784392356872559
    10. '_input' → logprob: -9.784392356872559

Token 6: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011173540260642767
    2. '_' → logprob: -7.62611722946167
    3. '(:' → logprob: -8.251117706298828
    4. ':' → logprob: -9.251117706298828
    5. '():' → logprob: -9.751117706298828
    6. '("("' → logprob: -10.001117706298828
    7. '(_:' → logprob: -10.501117706298828
    8. '('' → logprob: -10.501117706298828
    9. ' (' → logprob: -10.626117706298828
    10. '```' → logprob: -11.126117706298828

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01171950250864029
    2. ')' → logprob: -4.511719703674316
    3. ':' → logprob: -8.011719703674316
    4. '[' → logprob: -8.636719703674316
    5. '):
' → logprob: -9.386719703674316
    6. 's' → logprob: -10.761719703674316
    7. ' ):' → logprob: -11.136719703674316
    8. ',' → logprob: -11.386719703674316
    9. '(' → logprob: -11.386719703674316
    10. ')：' → logprob: -12.636719703674316

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12306685745716095
    2. ':' → logprob: -2.6230669021606445
    3. ' :' → logprob: -4.2480669021606445
    4. '    ' → logprob: -4.3730669021606445
    5. ' ' → logprob: -4.8730669021606445
    6. '(' → logprob: -5.2480669021606445
    7. ''' → logprob: -7.2480669021606445
    8. '  ' → logprob: -7.3730669021606445
    9. '():' → logprob: -7.9980669021606445
    10. '    
' → logprob: -8.373066902160645

Token 9: ' #' (ID: 1069)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9204592704772949
    2. ' ' → logprob: -1.170459270477295
    3. '   ' → logprob: -1.795459270477295
    4. ' return' → logprob: -3.420459270477295
    5. ' if' → logprob: -3.545459270477295
    6. ' tokens' → logprob: -4.045459270477295
    7. 'tokens' → logprob: -4.795459270477295
    8. ' token' → logprob: -4.920459270477295
    9. 'return' → logprob: -5.295459270477295
    10. ' i' → logprob: -5.295459270477295

Token 10: ' Parses' (ID: 179117)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.8815819621086121
    2. '   ' → logprob: -1.0065820217132568
    3. ' return' → logprob: -2.506582021713257
    4. 'tokens' → logprob: -3.131582021713257
    5. ' pass' → logprob: -4.006581783294678
    6. ' if' → logprob: -4.381581783294678
    7. ' s' → logprob: -4.381581783294678
    8. ' #' → logprob: -4.881581783294678
    9. 'return' → logprob: -5.006581783294678
    10. '    ' → logprob: -5.131581783294678

Token 11: ' the' (ID: 290)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.046051025390625
    2. ' ' → logprob: -1.546051025390625
    3. ' the' → logprob: -1.671051025390625
    4. 's' → logprob: -2.171051025390625
    5. ' s' → logprob: -2.796051025390625
    6. ' a' → logprob: -3.421051025390625
    7. ')' → logprob: -4.796051025390625
    8. 'the' → logprob: -5.171051025390625
    9. ' expression' → logprob: -5.296051025390625
    10. ' an' → logprob: -5.421051025390625

Token 12: ' expression' (ID: 12973)
  Prédit: ' expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.3444584906101227
    2. ' next' → logprob: -2.59445858001709
    3. ' ' → logprob: -2.71945858001709
    4. ' input' → logprob: -3.09445858001709
    5. ' token' → logprob: -3.46945858001709
    6. 'expression' → logprob: -3.96945858001709
    7. ' string' → logprob: -4.59445858001709
    8. ' s' → logprob: -4.96945858001709
    9. 's' → logprob: -5.09445858001709
    10. ' tokens' → logprob: -5.21945858001709

Token 13: ' string' (ID: 1621)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4818441569805145
    2. ':' → logprob: -1.106844186782837
    3. '   ' → logprob: -3.606844186782837
    4. ' :' → logprob: -4.606843948364258
    5. '(
' → logprob: -5.856843948364258
    6. '):' → logprob: -6.106843948364258
    7. ''' → logprob: -6.481843948364258
    8. '():' → logprob: -6.856843948364258
    9. '.' → logprob: -7.231843948364258
    10. ',' → logprob: -7.481843948364258

Token 14: ' into' (ID: 1511)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0515437126159668
    2. '   ' → logprob: -1.1765437126159668
    3. '(' → logprob: -1.5515437126159668
    4. '):' → logprob: -2.926543712615967
    5. ' :' → logprob: -2.926543712615967
    6. ')' → logprob: -5.301543712615967
    7. '    ' → logprob: -6.051543712615967
    8. ''' → logprob: -6.051543712615967
    9. '():' → logprob: -6.301543712615967
    10. ' (' → logprob: -6.301543712615967

Token 15: ' list' (ID: 1562)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6032572388648987
    2. ' tokens' → logprob: -1.353257179260254
    3. ' an' → logprob: -1.853257179260254
    4. 'tokens' → logprob: -3.603257179260254
    5. ' the' → logprob: -5.103257179260254
    6. 'a' → logprob: -6.103257179260254
    7. ' )' → logprob: -7.728257179260254
    8. 'an' → logprob: -8.103257179260254
    9. 's' → logprob: -8.603257179260254
    10. ')' → logprob: -8.603257179260254

Token 16: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32995808124542236
    2. '[' → logprob: -1.4549580812454224
    3. 's' → logprob: -4.579957962036133
    4. ',' → logprob: -4.829957962036133
    5. '_' → logprob: -5.579957962036133
    6. ':' → logprob: -5.954957962036133
    7. '   ' → logprob: -5.954957962036133
    8. ' of' → logprob: -5.954957962036133
    9. ')' → logprob: -6.204957962036133
    10. '```' → logprob: -6.454957962036133

Token 17: ' clauses' (ID: 99572)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.11467523872852325
    2. 'tokens' → logprob: -2.239675283432007
    3. ''' → logprob: -7.739675045013428
    4. '_tokens' → logprob: -7.864675045013428
    5. ''s' → logprob: -8.114675521850586
    6. ' '' → logprob: -9.239675521850586
    7. ''t' → logprob: -9.364675521850586
    8. '('' → logprob: -9.614675521850586
    9. '(tokens' → logprob: -9.989675521850586
    10. ' tuples' → logprob: -10.114675521850586

Token 18: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3984200060367584
    2. '   ' → logprob: -1.148419976234436
    3. ' :' → logprob: -5.5234198570251465
    4. '```' → logprob: -6.5234198570251465
    5. ':
' → logprob: -6.6484198570251465
    6. '[' → logprob: -6.7734198570251465
    7. '    ' → logprob: -7.1484198570251465
    8. '    
' → logprob: -7.6484198570251465
    9. '(' → logprob: -7.8984198570251465
    10. ',' → logprob: -8.273420333862305

Token 19: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.2938971519470215
    2. ' tokens' → logprob: -2.5438971519470215
    3. 'each' → logprob: -2.7938971519470215
    4. '    ' → logprob: -3.1688971519470215
    5. 'tokens' → logprob: -4.0438971519470215
    6. '   ' → logprob: -4.2938971519470215
    7. ' ' → logprob: -4.6688971519470215
    8. '[' → logprob: -5.2938971519470215
    9. ''' → logprob: -5.7938971519470215
    10. ' where' → logprob: -6.0438971519470215

Token 20: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.060133885592222214
    2. ' token' → logprob: -3.310133934020996
    3. '_clause' → logprob: -5.560133934020996
    4. ' clauses' → logprob: -5.810133934020996
    5. ' tokens' → logprob: -6.060133934020996
    6. ' of' → logprob: -6.560133934020996
    7. ' as' → logprob: -6.810133934020996
    8. ' ' → logprob: -6.935133934020996
    9. ' is' → logprob: -6.935133934020996
    10. 'token' → logprob: -7.060133934020996

Token 21: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20469500124454498
    2. ' =' → logprob: -2.079694986343384
    3. '<|end|>' → logprob: -3.829694986343384
    4. ' ' → logprob: -4.829695224761963
    5. ' consists' → logprob: -5.579695224761963
    6. '=' → logprob: -5.704695224761963
    7. ')' → logprob: -6.079695224761963
    8. 's' → logprob: -6.204695224761963
    9. ' ,' → logprob: -6.579695224761963
    10. '[]' → logprob: -6.579695224761963

Token 22: ' list' (ID: 1562)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07240982353687286
    2. 'a' → logprob: -2.9474098682403564
    3. '[]' → logprob: -4.572409629821777
    4. ' []' → logprob: -5.322409629821777
    5. '[' → logprob: -6.697409629821777
    6. ' [' → logprob: -7.572409629821777
    7. ' an' → logprob: -8.322409629821777
    8. '['' → logprob: -10.697409629821777
    9. ' ['' → logprob: -10.697409629821777
    10. '[a' → logprob: -10.822409629821777

Token 23: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.009497757069766521
    2. '[' → logprob: -5.00949764251709
    3. 'of' → logprob: -6.38449764251709
    4. '<|end|>' → logprob: -8.38449764251709
    5. '   ' → logprob: -8.75949764251709
    6. '(' → logprob: -8.88449764251709
    7. ')' → logprob: -9.13449764251709
    8. ' ' → logprob: -9.25949764251709
    9. '```' → logprob: -9.25949764251709
    10. '<|end|>' → logprob: -10.38449764251709

Token 24: ' literals' (ID: 193569)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.3339427411556244
    2. 'tokens' → logprob: -1.7089427709579468
    3. ' literals' → logprob: -2.7089426517486572
    4. ' lists' → logprob: -4.458942890167236
    5. ' terms' → logprob: -4.833942890167236
    6. ' strings' → logprob: -5.208942890167236
    7. ' clauses' → logprob: -6.333942890167236
    8. ' variables' → logprob: -6.458942890167236
    9. 'strings' → logprob: -7.208942890167236
    10. ' list' → logprob: -7.208942890167236

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6885113716125488
    2. ':' → logprob: -0.8135113716125488
    3. ',' → logprob: -4.813511371612549
    4. '
' → logprob: -4.938511371612549
    5. ' :' → logprob: -5.188511371612549
    6. '    
' → logprob: -5.438511371612549
    7. '[' → logprob: -5.563511371612549
    8. ':
' → logprob: -5.688511371612549
    9. '```' → logprob: -5.688511371612549
    10. '\' → logprob: -5.938511371612549

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43692877888679504
    2. ':' → logprob: -1.0619287490844727
    3. '```' → logprob: -6.061928749084473
    4. ':
' → logprob: -6.811928749084473
    5. ' :' → logprob: -7.061928749084473
    6. '    
' → logprob: -7.061928749084473
    7. '    ' → logprob: -7.561928749084473
    8. '
' → logprob: -7.936928749084473
    9. '):' → logprob: -8.186928749084473
    10. '':' → logprob: -8.436928749084473

Token 27: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14240451157093048
    2. 'tokens' → logprob: -2.767404556274414
    3. '    
' → logprob: -4.267404556274414
    4. '
' → logprob: -4.267404556274414
    5. '\n' → logprob: -4.392404556274414
    6. ' tokens' → logprob: -5.142404556274414
    7. '    ' → logprob: -5.267404556274414
    8. 'n' → logprob: -5.892404556274414
    9. 'newline' → logprob: -5.892404556274414
    10. '```' → logprob: -6.017404556274414

Token 28: ' Example' (ID: 24855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06972632557153702
    2. 'tokens' → logprob: -3.4447262287139893
    3. ' lines' → logprob: -3.9447262287139893
    4. ' tokens' → logprob: -5.069726467132568
    5. '    ' → logprob: -5.194726467132568
    6. ' #' → logprob: -7.319726467132568
    7. '    
' → logprob: -7.569726467132568
    8. 'lines' → logprob: -7.694726467132568
    9. ' clauses' → logprob: -8.31972599029541
    10. ' if' → logprob: -8.56972599029541

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4002491533756256
    2. '(' → logprob: -1.4002491235733032
    3. ' :' → logprob: -2.9002492427825928
    4. '[' → logprob: -5.400249004364014
    5. '   ' → logprob: -5.650249004364014
    6. '```' → logprob: -5.650249004364014
    7. ' (' → logprob: -5.775249004364014
    8. '(s' → logprob: -5.775249004364014
    9. 'def' → logprob: -5.900249004364014
    10. ',' → logprob: -6.525249004364014

Token 30: ' "(' (ID: 29149)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7304796576499939
    2. '[' → logprob: -1.1054797172546387
    3. ' [
' → logprob: -2.7304797172546387
    4. ' ['' → logprob: -3.7304797172546387
    5. ' [('' → logprob: -3.8554797172546387
    6. '[
' → logprob: -4.230479717254639
    7. ' return' → logprob: -4.355479717254639
    8. '['' → logprob: -4.730479717254639
    9. ' [['' → logprob: -4.855479717254639
    10. '[['' → logprob: -5.105479717254639

Token 31: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7130398154258728
    2. 'a' → logprob: -0.7130398154258728
    3. 'x' → logprob: -4.838039875030518
    4. 'not' → logprob: -5.838039875030518
    5. 'p' → logprob: -5.963039875030518
    6. '(A' → logprob: -6.963039875030518
    7. 'foo' → logprob: -7.463039875030518
    8. ' A' → logprob: -7.463039875030518
    9. '(not' → logprob: -7.588039875030518
    10. '(a' → logprob: -7.713039875030518

Token 32: '&B' (ID: 48945)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06162174046039581
    2. ' |' → logprob: -3.81162166595459
    3. 'or' → logprob: -3.93662166595459
    4. ' OR' → logprob: -5.18662166595459
    5. '|' → logprob: -5.43662166595459
    6. 'v' → logprob: -6.43662166595459
    7. ' v' → logprob: -6.56162166595459
    8. '∨' → logprob: -6.81162166595459
    9. '+' → logprob: -7.18662166595459
    10. ' ' → logprob: -7.43662166595459

Token 33: '&' (ID: 5)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4890334904193878
    2. ')"' → logprob: -1.9890334606170654
    3. ')|' → logprob: -2.1140334606170654
    4. '|' → logprob: -2.4890334606170654
    5. ')&' → logprob: -4.1140336990356445
    6. ')|(' → logprob: -4.1140336990356445
    7. ' )' → logprob: -5.3640336990356445
    8. ')")' → logprob: -6.1140336990356445
    9. ' |' → logprob: -6.3640336990356445
    10. '&' → logprob: -6.6140336990356445

Token 34: 'f' (ID: 69)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0873892605304718
    2. 'A' → logprob: -2.7123892307281494
    3. '!' → logprob: -5.3373894691467285
    4. 'B' → logprob: -5.4623894691467285
    5. '~' → logprob: -5.5873894691467285
    6. ' C' → logprob: -6.4623894691467285
    7. ')' → logprob: -7.2123894691467285
    8. 'D' → logprob: -7.9623894691467285
    9. ' A' → logprob: -8.21238899230957
    10. '¬' → logprob: -8.71238899230957

Token 35: ')|' (ID: 47976)
  Prédit: 'alse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alse' → logprob: -0.46681851148605347
    2. ')' → logprob: -1.3418185710906982
    3. 'f' → logprob: -4.216818332672119
    4. 'orm' → logprob: -4.341818332672119
    5. 'a' → logprob: -4.591818332672119
    6. 'A' → logprob: -4.841818332672119
    7. 'o' → logprob: -4.841818332672119
    8. ')`' → logprob: -4.966818332672119
    9. 'or' → logprob: -5.091818332672119
    10. ')&' → logprob: -5.216818332672119

Token 36: '(~' (ID: 114991)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7564738392829895
    2. '(C' → logprob: -0.8814738392829895
    3. '(' → logprob: -3.6314737796783447
    4. '(E' → logprob: -4.131474018096924
    5. '(F' → logprob: -4.256474018096924
    6. 'C' → logprob: -4.381474018096924
    7. 'A' → logprob: -4.381474018096924
    8. '(B' → logprob: -4.506474018096924
    9. '(~' → logprob: -4.631474018096924
    10. '(D' → logprob: -5.631474018096924

Token 37: 'd' (ID: 67)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3895222544670105
    2. 'C' → logprob: -1.2645223140716553
    3. 'B' → logprob: -3.5145223140716553
    4. 'f' → logprob: -5.139522075653076
    5. 'D' → logprob: -6.014522075653076
    6. 'E' → logprob: -7.014522075653076
    7. 'F' → logprob: -7.514522075653076
    8. ')' → logprob: -9.514522552490234
    9. 'a' → logprob: -9.514522552490234
    10. '(A' → logprob: -9.827022552490234

Token 38: '&' (ID: 5)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.07272954285144806
    2. ')' → logprob: -2.9477295875549316
    3. ')|' → logprob: -5.197729587554932
    4. '|' → logprob: -5.322729587554932
    5. ')")' → logprob: -5.947729587554932
    6. '&' → logprob: -6.447729587554932
    7. ')&' → logprob: -6.947729587554932
    8. '")' → logprob: -7.197729587554932
    9. '"' → logprob: -8.197729110717773
    10. ')">' → logprob: -8.322729110717773

Token 39: '~' (ID: 93)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.4411895275115967
    2. 'D' → logprob: -1.4411895275115967
    3. 'f' → logprob: -2.0661895275115967
    4. 'F' → logprob: -2.4411895275115967
    5. 'd' → logprob: -2.4411895275115967
    6. 'A' → logprob: -2.8161895275115967
    7. '~' → logprob: -3.0661895275115967
    8. 'c' → logprob: -3.3161895275115967
    9. 'B' → logprob: -3.5661895275115967
    10. 'E' → logprob: -4.066189765930176

Token 40: 'i' (ID: 72)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.4936156272888184
    2. 'f' → logprob: -1.6186156272888184
    3. 'd' → logprob: -2.1186156272888184
    4. 'A' → logprob: -2.1186156272888184
    5. 'e' → logprob: -2.2436156272888184
    6. 'c' → logprob: -2.4936156272888184
    7. 'C' → logprob: -2.7436156272888184
    8. 'a' → logprob: -2.7436156272888184
    9. 'x' → logprob: -5.368615627288818
    10. 'g' → logprob: -5.493615627288818

Token 41: '&i' (ID: 118260)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.052999626845121384
    2. ')' → logprob: -3.30299973487854
    3. ')")' → logprob: -5.427999496459961
    4. '|' → logprob: -5.677999496459961
    5. '&' → logprob: -5.802999496459961
    6. ')|' → logprob: -6.552999496459961
    7. '")' → logprob: -6.677999496459961
    8. ')&' → logprob: -7.677999496459961
    9. '"' → logprob: -8.427999496459961
    10. ')">' → logprob: -8.927999496459961

Token 42: ')|' (ID: 47976)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.03683680295944214
    2. ')' → logprob: -3.661836862564087
    3. '&' → logprob: -5.786836624145508
    4. '|' → logprob: -5.911836624145508
    5. ')|' → logprob: -6.161836624145508
    6. ')&' → logprob: -7.786836624145508
    7. 'f' → logprob: -7.786836624145508
    8. '")' → logprob: -7.911836624145508
    9. '"' → logprob: -8.036836624145508
    10. ')")' → logprob: -8.036836624145508

Token 43: '(~' (ID: 114991)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.5619124174118042
    2. '(A' → logprob: -2.0619125366210938
    3. '"' → logprob: -2.1869125366210938
    4. '(~' → logprob: -2.3119125366210938
    5. '"(' → logprob: -2.4369125366210938
    6. '(B' → logprob: -2.5619125366210938
    7. 'f' → logprob: -3.0619125366210938
    8. '~' → logprob: -3.5619125366210938
    9. '(E' → logprob: -3.8119125366210938
    10. '(C' → logprob: -3.9369125366210938

Token 44: 'v' (ID: 85)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1938793659210205
    2. 'B' → logprob: -1.9438793659210205
    3. 'a' → logprob: -2.3188793659210205
    4. 'A' → logprob: -2.5688793659210205
    5. 'f' → logprob: -2.5688793659210205
    6. 'C' → logprob: -3.4438793659210205
    7. 'D' → logprob: -3.5688793659210205
    8. 'i' → logprob: -3.6938793659210205
    9. 'e' → logprob: -3.6938793659210205
    10. 'c' → logprob: -3.9438793659210205

Token 45: '&i' (ID: 118260)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.37802281975746155
    2. ')' → logprob: -1.5030227899551392
    3. ')"' → logprob: -3.2530229091644287
    4. '|' → logprob: -4.25302267074585
    5. '&)' → logprob: -5.00302267074585
    6. ')&' → logprob: -5.50302267074585
    7. '&D' → logprob: -5.62802267074585
    8. '&B' → logprob: -5.87802267074585
    9. '")' → logprob: -6.00302267074585
    10. '&A' → logprob: -6.12802267074585

Token 46: '&' (ID: 5)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.258522093296051
    2. '&' → logprob: -1.6335220336914062
    3. ')' → logprob: -4.008522033691406
    4. ')&' → logprob: -5.508522033691406
    5. '|' → logprob: -5.633522033691406
    6. '")' → logprob: -5.883522033691406
    7. '')"' → logprob: -6.883522033691406
    8. '&)' → logprob: -7.008522033691406
    9. ')")' → logprob: -7.508522033691406
    10. '')' → logprob: -8.133522033691406

Token 47: '~' (ID: 93)
  Prédit: '~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -1.2500910758972168
    2. 'f' → logprob: -1.8750910758972168
    3. 'd' → logprob: -2.375091075897217
    4. 'v' → logprob: -2.625091075897217
    5. 's' → logprob: -3.000091075897217
    6. 'B' → logprob: -3.375091075897217
    7. 't' → logprob: -3.375091075897217
    8. 'o' → logprob: -3.500091075897217
    9. 'u' → logprob: -4.000091075897217
    10. 'i' → logprob: -4.000091075897217

Token 48: 'V' (ID: 53)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.6813186407089233
    2. 'f' → logprob: -1.8063186407089233
    3. 'v' → logprob: -1.9313186407089233
    4. 's' → logprob: -2.931318759918213
    5. 'i' → logprob: -3.306318759918213
    6. 'B' → logprob: -3.306318759918213
    7. 'c' → logprob: -3.431318759918213
    8. 'a' → logprob: -3.431318759918213
    9. 't' → logprob: -3.431318759918213
    10. 'k' → logprob: -3.681318759918213

Token 49: ')"
' (ID: 37223)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.10471728444099426
    2. '&' → logprob: -3.104717254638672
    3. ')' → logprob: -3.104717254638672
    4. ')&' → logprob: -6.229717254638672
    5. '")' → logprob: -6.229717254638672
    6. '|' → logprob: -6.354717254638672
    7. ')")' → logprob: -6.479717254638672
    8. ')|' → logprob: -7.354717254638672
    9. '')"' → logprob: -7.729717254638672
    10. '"' → logprob: -8.229717254638672

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12060355395078659
    2. ':' → logprob: -2.620603561401367
    3. 'tokens' → logprob: -4.495603561401367
    4. ')' → logprob: -4.745603561401367
    5. '
' → logprob: -5.745603561401367
    6. '```' → logprob: -5.870603561401367
    7. '    
' → logprob: -6.370603561401367
    8. ' tokens' → logprob: -6.370603561401367
    9. 'n' → logprob: -6.745603561401367
    10. ' :' → logprob: -6.870603561401367

Token 51: ' clauses' (ID: 99572)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5499254465103149
    2. '   ' → logprob: -1.174925446510315
    3. ')' → logprob: -3.5499253273010254
    4. ' :' → logprob: -3.7999253273010254
    5. ' ' → logprob: -4.299925327301025
    6. '
' → logprob: -4.924925327301025
    7. '):' → logprob: -5.299925327301025
    8. ' 
' → logprob: -5.549925327301025
    9. '```' → logprob: -5.674925327301025
    10. ':
' → logprob: -5.799925327301025

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013429699465632439
    2. '=' → logprob: -6.6263427734375
    3. 's' → logprob: -12.2513427734375
    4. ')' → logprob: -12.6263427734375
    5. '=[]' → logprob: -12.8763427734375
    6. ' =
' → logprob: -13.0013427734375
    7. ' =)' → logprob: -14.0013427734375
    8. ' =[' → logprob: -14.5013427734375
    9. '<|end|>' → logprob: -14.6263427734375
    10. '[:]' → logprob: -15.0013427734375

Token 53: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.17679385840892792
    2. '[]' → logprob: -2.1767938137054443
    3. ' s' → logprob: -3.4267938137054443
    4. ' [' → logprob: -4.676794052124023
    5. 's' → logprob: -5.051794052124023
    6. '[' → logprob: -8.551794052124023
    7. '[s' → logprob: -8.676794052124023
    8. ' [[]' → logprob: -10.301794052124023
    9. ' [];' → logprob: -11.426794052124023
    10. ' ' → logprob: -11.551794052124023

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1873517781496048
    2. ' pos' → logprob: -3.312351703643799
    3. 'tokens' → logprob: -3.562351703643799
    4. ' current' → logprob: -3.937351703643799
    5. ' for' → logprob: -4.062351703643799
    6. ' i' → logprob: -4.312351703643799
    7. 'current' → logprob: -4.562351703643799
    8. 'pos' → logprob: -4.687351703643799
    9. 'for' → logprob: -4.687351703643799
    10. ' tokens' → logprob: -4.937351703643799

Token 55: ' i' (ID: 575)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.6246481537818909
    2. 'tokens' → logprob: -2.124648094177246
    3. 'current' → logprob: -2.374648094177246
    4. 'for' → logprob: -2.624648094177246
    5. 'pos' → logprob: -2.999648094177246
    6. 'stack' → logprob: -3.374648094177246
    7. ' clause' → logprob: -3.999648094177246
    8. ' for' → logprob: -4.499648094177246
    9. 'i' (adapté à ' i') → logprob: -4.624648094177246
    10. ' current' → logprob: -4.749648094177246

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.768876314163208
    2. 'n' → logprob: -0.768876314163208
    3. ' =' → logprob: -2.893876314163208
    4. 's' → logprob: -5.268876075744629
    5. 'f' → logprob: -5.393876075744629
    6. 'nd' → logprob: -6.018876075744629
    7. 'nt' → logprob: -6.268876075744629
    8. ' n' → logprob: -6.893876075744629
    9. ' ' → logprob: -7.143876075744629
    10. 't' → logprob: -8.268876075744629

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25207141041755676
    2. ' ' → logprob: -1.5020713806152344
    3. '1' → logprob: -8.877071380615234
    4. ' ' → logprob: -14.002071380615234
    5. '2' → logprob: -14.127071380615234
    6. '  ' → logprob: -15.189571380615234
    7. '```' → logprob: -16.064571380615234
    8. '3' → logprob: -16.189571380615234
    9. '۰' → logprob: -16.439571380615234
    10. ' len' → logprob: -16.627071380615234

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.191489642835222e-05
    2. ' ' → logprob: -10.125041961669922
    3. '1' → logprob: -13.250041961669922
    4. '   ' → logprob: -17.500041961669922
    5. '2' → logprob: -17.750041961669922
    6. '  ' → logprob: -18.187541961669922
    7. '```' → logprob: -18.375041961669922
    8. '۰' → logprob: -18.500041961669922
    9. '`' → logprob: -19.812541961669922
    10. 's' → logprob: -20.125041961669922

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.29148614406585693
    2. 'while' → logprob: -1.416486144065857
    3. '   ' → logprob: -5.2914862632751465
    4. 'n' → logprob: -6.1664862632751465
    5. ' n' → logprob: -6.6664862632751465
    6. '    ' → logprob: -6.9164862632751465
    7. '	while' → logprob: -8.416485786437988
    8. ' ' → logprob: -8.541485786437988
    9. 'length' → logprob: -8.916485786437988
    10. ' length' → logprob: -8.916485786437988

Token 61: ' n' (ID: 297)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.22534562647342682
    2. 'while' → logprob: -1.8503456115722656
    3. ' n' → logprob: -3.4753456115722656
    4. 'n' (adapté à ' n') → logprob: -4.350345611572266
    5. ' length' → logprob: -8.100345611572266
    6. '   ' → logprob: -8.725345611572266
    7. 'length' → logprob: -9.475345611572266
    8. ' s' → logprob: -9.725345611572266
    9. 's' → logprob: -10.725345611572266
    10. ' len' → logprob: -10.850345611572266

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16452518105506897
    2. '=' → logprob: -1.9145251512527466
    3. ' ' → logprob: -5.664525032043457
    4. '  ' → logprob: -7.914525032043457
    5. '=len' → logprob: -9.789525032043457
    6. ' s' → logprob: -10.039525032043457
    7. '   ' → logprob: -10.164525032043457
    8. ' >' → logprob: -10.164525032043457
    9. '<|end|>' → logprob: -10.289525032043457
    10. 's' → logprob: -10.414525032043457

Token 63: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.03804194927215576
    2. 'len' → logprob: -3.2880420684814453
    3. '=len' → logprob: -15.413042068481445
    4. '(len' → logprob: -15.788042068481445
    5. ' ' → logprob: -16.413042068481445
    6. '[len' → logprob: -16.913042068481445
    7. '<len' → logprob: -17.913042068481445
    8. '	len' → logprob: -18.413042068481445
    9. ',len' → logprob: -18.663042068481445
    10. ' s' → logprob: -19.663042068481445

Token 64: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003368926409166306
    2. '(' → logprob: -8.000336647033691
    3. 's' → logprob: -13.875336647033691
    4. ' (' → logprob: -14.875336647033691
    5. '(n' → logprob: -16.875337600708008
    6. '(
' → logprob: -17.125337600708008
    7. ')' → logprob: -17.500337600708008
    8. ' s' → logprob: -18.750337600708008
    9. '(S' → logprob: -19.625337600708008
    10. ' ' → logprob: -19.625337600708008

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. ' )' → logprob: -10.750028610229492
    3. ')
' → logprob: -12.625028610229492
    4. '   ' → logprob: -13.500028610229492
    5. ')s' → logprob: -14.125028610229492
    6. '')' → logprob: -14.750028610229492
    7. ' ' → logprob: -15.000028610229492
    8. ')n' → logprob: -15.500028610229492
    9. '`)' → logprob: -15.625028610229492
    10. ')i' → logprob: -16.000028610229492

Token 66: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8746708035469055
    2. ' ' → logprob: -0.9996708035469055
    3. 'while' → logprob: -2.3746707439422607
    4. '   ' → logprob: -2.6246707439422607
    5. ' 
' → logprob: -4.24967098236084
    6. '    
' → logprob: -4.74967098236084
    7. '    ' → logprob: -4.99967098236084
    8. '     
' → logprob: -5.24967098236084
    9. '   
' → logprob: -5.74967098236084
    10. '  ' → logprob: -6.12467098236084

Token 67: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3546716570854187
    2. 'while' (adapté à ' while') → logprob: -1.3546717166900635
    3. ' ' → logprob: -4.729671478271484
    4. 'tokens' → logprob: -4.729671478271484
    5. 'wh' → logprob: -5.229671478271484
    6. ' tokens' → logprob: -5.479671478271484
    7. '   ' → logprob: -5.479671478271484
    8. '```' → logprob: -6.479671478271484
    9. 'w' → logprob: -7.229671478271484
    10. ' ```' → logprob: -7.229671478271484

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006907532922923565
    2. 'i' → logprob: -5.0069074630737305
    3. ' ' → logprob: -8.75690746307373
    4. ' True' → logprob: -11.00690746307373
    5. ' n' → logprob: -12.25690746307373
    6. '  ' → logprob: -12.25690746307373
    7. 'True' → logprob: -13.25690746307373
    8. '	i' → logprob: -13.38190746307373
    9. 'n' → logprob: -13.63190746307373
    10. '    ' → logprob: -13.75690746307373

Token 69: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.079603411257267
    2. '<' → logprob: -2.579603433609009
    3. ' ' → logprob: -7.57960319519043
    4. '<len' → logprob: -9.20460319519043
    5. ' <=' → logprob: -9.70460319519043
    6. '<=' → logprob: -11.20460319519043
    7. '[' → logprob: -11.57960319519043
    8. '<n' → logprob: -12.32960319519043
    9. '<|end|>' → logprob: -13.57960319519043
    10. ' <
' → logprob: -13.82960319519043

Token 70: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326213479042053
    2. 'n' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.438261985778809
    4. '	n' → logprob: -15.938261985778809
    5. ')n' → logprob: -17.063262939453125
    6. 's' → logprob: -17.313262939453125
    7. 'len' → logprob: -17.563262939453125
    8. '<n' → logprob: -17.813262939453125
    9. '```' → logprob: -17.938262939453125
    10. '_n' → logprob: -19.063262939453125

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011366429971531034
    2. ':
' → logprob: -7.001136779785156
    3. ' :' → logprob: -8.626136779785156
    4. ' and' → logprob: -10.501136779785156
    5. '   ' → logprob: -12.001136779785156
    6. '):' → logprob: -12.876136779785156
    7. ':**' → logprob: -13.376136779785156
    8. '=' → logprob: -13.501136779785156
    9. 'and' → logprob: -13.626136779785156
    10. ',' → logprob: -13.751136779785156

Token 72: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9186576008796692
    2. ' ' → logprob: -1.2936575412750244
    3. ' if' → logprob: -1.6686575412750244
    4. '    ' → logprob: -3.1686575412750244
    5. '       ' → logprob: -3.1686575412750244
    6. '  ' → logprob: -3.6686575412750244
    7. 'if' → logprob: -3.7936575412750244
    8. 's' → logprob: -7.0436577796936035
    9. 'i' → logprob: -7.5436577796936035
    10. '     ' → logprob: -7.7936577796936035

Token 73: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34568116068840027
    2. 'if' (adapté à ' if') → logprob: -1.3456811904907227
    3. ' ' → logprob: -4.595681190490723
    4. '   ' → logprob: -5.095681190490723
    5. 'token' → logprob: -5.470681190490723
    6. '  ' → logprob: -5.720681190490723
    7. 'c' → logprob: -6.095681190490723
    8. '       ' → logprob: -6.720681190490723
    9. ' c' → logprob: -6.720681190490723
    10. '    ' → logprob: -7.095681190490723

Token 74: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.011495156213641167
    2. 's' → logprob: -4.761495113372803
    3. ' (' → logprob: -6.261495113372803
    4. ' ' → logprob: -7.011495113372803
    5. '(' → logprob: -10.386495590209961
    6. '  ' → logprob: -11.761495590209961
    7. '(s' → logprob: -12.136495590209961
    8. '<|end|>' → logprob: -12.261495590209961
    9. ' '('' → logprob: -12.386495590209961
    10. ' ' → logprob: -12.886495590209961

Token 75: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02717520110309124
    2. '[i' → logprob: -4.027175426483154
    3. '==' → logprob: -5.277175426483154
    4. ' ==' → logprob: -5.652175426483154
    5. '[
' → logprob: -9.777174949645996
    6. '.startswith' → logprob: -9.902174949645996
    7. '=' → logprob: -10.402174949645996
    8. '[int' → logprob: -10.527174949645996
    9. '```' → logprob: -11.027174949645996
    10. '[start' → logprob: -11.027174949645996

Token 76: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.284414142370224
    2. ' ==' → logprob: -1.4094141721725464
    3. '=='' → logprob: -6.659414291381836
    4. ' in' → logprob: -7.409414291381836
    5. '=' → logprob: -7.659414291381836
    6. ''' → logprob: -8.159414291381836
    7. '(' → logprob: -8.284414291381836
    8. '[' → logprob: -9.784414291381836
    9. ']==' → logprob: -10.034414291381836
    10. 'in' → logprob: -10.159414291381836

Token 77: ' ==' (ID: 951)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1905840635299683
    2. '==' → logprob: -1.1905840635299683
    3. ' ==' → logprob: -1.3155840635299683
    4. '(' → logprob: -2.440584182739258
    5. '=' → logprob: -4.315584182739258
    6. '=='' → logprob: -4.940584182739258
    7. ' (' → logprob: -5.440584182739258
    8. ' in' → logprob: -5.565584182739258
    9. '"' → logprob: -6.190584182739258
    10. '[' → logprob: -6.315584182739258

Token 78: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05976395308971405
    2. ' '('' → logprob: -2.9347639083862305
    3. '"' → logprob: -6.0597639083862305
    4. ' '' → logprob: -6.4347639083862305
    5. '(' → logprob: -7.1847639083862305
    6. ' (' → logprob: -9.43476390838623
    7. '('' → logprob: -10.43476390838623
    8. ' "("' → logprob: -10.43476390838623
    9. ''(' → logprob: -10.68476390838623
    10. ' ' → logprob: -12.43476390838623

Token 79: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010777086950838566
    2. 'i' → logprob: -5.385776996612549
    3. '           ' → logprob: -6.135776996612549
    4. '   ' → logprob: -6.260776996612549
    5. ' i' → logprob: -6.510776996612549
    6. '        ' → logprob: -8.260777473449707
    7. '    ' → logprob: -9.135777473449707
    8. '      ' → logprob: -9.885777473449707
    9. '<|end|>' → logprob: -10.510777473449707
    10. '	   ' → logprob: -11.010777473449707

Token 81: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5209070444107056
    2. ' i' → logprob: -1.6459070444107056
    3. '           ' → logprob: -2.270906925201416
    4. '       ' → logprob: -3.270906925201416
    5. ' clause' → logprob: -3.270906925201416
    6. ')' → logprob: -4.395906925201416
    7. 'cl' → logprob: -5.020906925201416
    8. '   ' → logprob: -5.145906925201416
    9. '        ' → logprob: -6.020906925201416
    10. '_clause' → logprob: -6.270906925201416

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.893775999546051
    2. '<|end|>' → logprob: -1.2687759399414062
    3. '=' → logprob: -2.0187759399414062
    4. '+' → logprob: -2.6437759399414062
    5. ' +=' → logprob: -3.0187759399414062
    6. '+=' → logprob: -3.0187759399414062
    7. ' ' → logprob: -5.393775939941406
    8. '<|end|>' → logprob: -6.143775939941406
    9. '++' → logprob: -7.893775939941406
    10. ')' → logprob: -8.268775939941406

Token 83: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6941204071044922
    2. ' i' → logprob: -0.6941204071044922
    3. 's' → logprob: -7.569120407104492
    4. ' s' → logprob: -7.694120407104492
    5. ' ' → logprob: -15.694120407104492
    6. 'j' → logprob: -16.006620407104492
    7. '```' → logprob: -16.194120407104492
    8. '   ' → logprob: -16.444120407104492
    9. '	i' → logprob: -16.506620407104492
    10. 'I' → logprob: -16.569120407104492

Token 84: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012526365928351879
    2. ' +' → logprob: -4.387526512145996
    3. '<|end|>' → logprob: -11.137526512145996
    4. '+
' → logprob: -13.887526512145996
    5. '<|end|>' → logprob: -14.512526512145996
    6. ' +
' → logprob: -15.262526512145996
    7. ' ' → logprob: -16.01252555847168
    8. '+j' → logprob: -16.13752555847168
    9. ' +=' → logprob: -16.51252555847168
    10. '+=' → logprob: -16.51252555847168

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.015305552864447e-05
    2. ' ' → logprob: -9.750060081481934
    3. '<|end|>' → logprob: -13.375060081481934
    4. '2' → logprob: -15.625060081481934
    5. '```' → logprob: -16.75006103515625
    6. '<|end|>' → logprob: -16.75006103515625
    7. '7' → logprob: -17.62506103515625
    8. '
' → logprob: -18.00006103515625
    9. '۱' → logprob: -18.62506103515625
    10. '(' → logprob: -19.06256103515625

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' cnt' (ID: 27340)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03508777916431427
    2. ' while' → logprob: -3.785087823867798
    3. 'count' → logprob: -5.535087585449219
    4. 'depth' → logprob: -5.660087585449219
    5. 'paren' → logprob: -6.285087585449219
    6. 'balance' → logprob: -7.160087585449219
    7. '           ' → logprob: -7.910087585449219
    8. ')' → logprob: -8.035087585449219
    9. 'level' → logprob: -8.785087585449219
    10. 'stack' → logprob: -8.910087585449219

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05530896782875061
    2. ' =' → logprob: -2.9303090572357178
    3. '<|end|>' → logprob: -7.930308818817139
    4. ')' → logprob: -10.430309295654297
    5. ' ' → logprob: -11.555309295654297
    6. '_' → logprob: -12.180309295654297
    7. '  ' → logprob: -12.430309295654297
    8. '<|end|>' → logprob: -12.805309295654297
    9. 's' → logprob: -12.930309295654297
    10. ' +=' → logprob: -13.180309295654297

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001217974815517664
    2. ' ' → logprob: -6.751217842102051
    3. '0' → logprob: -10.00121784210205
    4. '<|end|>' → logprob: -14.00121784210205
    5. '  ' → logprob: -14.50121784210205
    6. '(' → logprob: -15.12621784210205
    7. '   ' → logprob: -15.25121784210205
    8. '```' → logprob: -16.126218795776367
    9. ')' → logprob: -16.188718795776367
    10. '`' → logprob: -17.251218795776367

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9862216504407115e-05
    2. '0' → logprob: -11.125020027160645
    3. ' ' → logprob: -12.250020027160645
    4. '(' → logprob: -16.625019073486328
    5. '```' → logprob: -16.750019073486328
    6. '' → logprob: -17.062519073486328
    7. '   ' → logprob: -17.437519073486328
    8. ')' → logprob: -17.625019073486328
    9. '  ' → logprob: -18.125019073486328
    10. '-' → logprob: -18.250019073486328

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.18596909940242767
    2. ' while' → logprob: -2.435969114303589
    3. '<|end|>' → logprob: -2.560969114303589
    4. '	while' → logprob: -6.56096887588501
    5. '<|end|>' → logprob: -6.68596887588501
    6. '
' → logprob: -7.18596887588501
    7. ' ' → logprob: -7.43596887588501
    8. 'While' → logprob: -7.81096887588501
    9. '```' → logprob: -9.310969352722168
    10. '   ' → logprob: -9.310969352722168

Token 95: ' j' (ID: 441)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5841478705406189
    2. 'j' → logprob: -0.8341478705406189
    3. ' j' → logprob: -5.334147930145264
    4. ' cnt' → logprob: -5.709147930145264
    5. '(cnt' → logprob: -11.334147453308105
    6. ' ' → logprob: -11.834147453308105
    7. '	cnt' → logprob: -11.959147453308105
    8. '   ' → logprob: -12.834147453308105
    9. '	j' → logprob: -13.334147453308105
    10. 'not' → logprob: -13.584147453308105

Token 96: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6232920289039612
    2. '<n' → logprob: -1.2482919692993164
    3. ' <' → logprob: -1.7482919692993164
    4. '<=' → logprob: -6.748291969299316
    5. '<len' → logprob: -7.623291969299316
    6. 'n' → logprob: -7.998291969299316
    7. '<|end|>' → logprob: -8.373291969299316
    8. '<s' → logprob: -8.498291969299316
    9. ' <=' → logprob: -8.748291969299316
    10. '<count' → logprob: -10.373291969299316

Token 97: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022545099258423
    2. ' n' → logprob: -1.9102253913879395
    3. '	n' → logprob: -14.035225868225098
    4. '<|end|>' → logprob: -15.785225868225098
    5. ' ' → logprob: -16.28522491455078
    6. ')n' → logprob: -16.41022491455078
    7. '_n' → logprob: -17.28522491455078
    8. '<n' → logprob: -17.78522491455078
    9. ' н' → logprob: -18.03522491455078
    10. 'nd' → logprob: -18.03522491455078

Token 98: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005263760685920715
    2. 'and' → logprob: -5.255263805389404
    3. ' ' → logprob: -11.005263328552246
    4. '           ' → logprob: -11.755263328552246
    5. '<|end|>' → logprob: -12.755263328552246
    6. '               ' → logprob: -14.005263328552246
    7. '            ' → logprob: -14.630263328552246
    8. ':
' → logprob: -15.505263328552246
    9. '```' → logprob: -15.505263328552246
    10. '	and' → logprob: -15.755263328552246

Token 99: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6931635141372681
    2. 'cnt' → logprob: -0.6931635141372681
    3. '(cnt' → logprob: -11.318163871765137
    4. '	cnt' → logprob: -12.443163871765137
    5. '[cnt' → logprob: -16.19316291809082
    6. 'count' → logprob: -16.69316291809082
    7. '_cnt' → logprob: -16.94316291809082
    8. ' ' → logprob: -17.94316291809082
    9. '   ' → logprob: -17.94316291809082
    10. 'Cnt' → logprob: -19.19316291809082

Token 100: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.15757878124713898
    2. '>' → logprob: -2.032578706741333
    3. ' !=' → logprob: -4.407578945159912
    4. '!=' → logprob: -6.282578945159912
    5. '<|end|>' → logprob: -7.407578945159912
    6. '<|end|>' → logprob: -9.282578468322754
    7. ' ' → logprob: -12.032578468322754
    8. ' ' → logprob: -12.282578468322754
    9. '&gt' → logprob: -12.532578468322754
    10. '0' → logprob: -12.657578468322754

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269291490316391
    2. ' ' → logprob: -2.1269290447235107
    3. '<|end|>' → logprob: -14.37692928314209
    4. '  ' → logprob: -15.25192928314209
    5. '1' → logprob: -15.87692928314209
    6. '   ' → logprob: -16.751928329467773
    7. '    ' → logprob: -17.376928329467773
    8. ' ' → logprob: -17.376928329467773
    9. '<|end|>' → logprob: -17.626928329467773
    10. '```' → logprob: -18.126928329467773

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -17.50006675720215
    4. '  ' → logprob: -18.75006675720215
    5. '۰' → logprob: -18.87506675720215
    6. '1' → logprob: -19.37506675720215
    7. '<|end|>' → logprob: -20.00006675720215
    8. '   ' → logprob: -20.75006675720215
    9. '```' → logprob: -20.75006675720215
    10. '    ' → logprob: -20.87506675720215

Token 103: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.24047131836414337
    2. ':' → logprob: -1.615471363067627
    3. '<|end|>' → logprob: -4.365471363067627
    4. '<|end|>' → logprob: -7.240471363067627
    5. '):
' → logprob: -7.740471363067627
    6. '               ' → logprob: -7.990471363067627
    7. ' and' → logprob: -8.115470886230469
    8. '           ' → logprob: -8.990470886230469
    9. ':

' → logprob: -9.365470886230469
    10. ' :
' → logprob: -9.615470886230469

Token 104: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06379850953817368
    2. '<|end|>' → logprob: -2.938798427581787
    3. ' if' → logprob: -5.188798427581787
    4. '<|end|>' → logprob: -6.063798427581787
    5. ':
' → logprob: -8.313798904418945
    6. ' ' → logprob: -9.063798904418945
    7. 'if' → logprob: -9.313798904418945
    8. '           ' → logprob: -9.438798904418945
    9. '              ' → logprob: -9.688798904418945
    10. '```' → logprob: -10.188798904418945

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17708159983158112
    2. 'if' (adapté à ' if') → logprob: -1.92708158493042
    3. ' ' → logprob: -5.05208158493042
    4. '<|end|>' → logprob: -5.17708158493042
    5. '               ' → logprob: -5.67708158493042
    6. '<|end|>' → logprob: -8.427082061767578
    7. '                ' → logprob: -8.677082061767578
    8. '   ' → logprob: -8.802082061767578
    9. 's' → logprob: -9.052082061767578
    10. '                   ' → logprob: -9.302082061767578

Token 106: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.023248156532645226
    2. 's' → logprob: -3.7732481956481934
    3. ' ' → logprob: -13.523247718811035
    4. '	s' → logprob: -14.648247718811035
    5. '(s' → logprob: -14.898247718811035
    6. '<|end|>' → logprob: -15.148247718811035
    7. '_s' → logprob: -16.14824867248535
    8. '    ' → logprob: -17.08574867248535
    9. '`s' → logprob: -17.39824867248535
    10. '(' → logprob: -17.46074867248535

Token 107: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5048530030981055e-06
    2. 'j' → logprob: -14.000001907348633
    3. '[' → logprob: -14.875001907348633
    4. '```' → logprob: -15.875001907348633
    5. '[i' → logprob: -16.625001907348633
    6. '[js' → logprob: -17.750001907348633
    7. '[
' → logprob: -17.875001907348633
    8. '	j' → logprob: -18.750001907348633
    9. '[s' → logprob: -19.250001907348633
    10. ' [' → logprob: -19.375001907348633

Token 108: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14624062180519104
    2. ' ==' → logprob: -2.021240711212158
    3. '(' → logprob: -6.146240711212158
    4. '=='' → logprob: -7.271240711212158
    5. '()==' → logprob: -8.021240234375
    6. '()' → logprob: -9.396240234375
    7. ']==' → logprob: -9.771240234375
    8. '==(' → logprob: -9.771240234375
    9. ')' → logprob: -10.271240234375
    10. ''' → logprob: -10.271240234375

Token 109: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04824040085077286
    2. '(' → logprob: -3.2982404232025146
    3. ' ==' → logprob: -4.6732401847839355
    4. '=='' → logprob: -7.9232401847839355
    5. '==(' → logprob: -8.423240661621094
    6. '()==' → logprob: -9.048240661621094
    7. ''' → logprob: -9.923240661621094
    8. '==
' → logprob: -11.048240661621094
    9. ' (' → logprob: -11.548240661621094
    10. '=' → logprob: -11.673240661621094

Token 110: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002564122434705496
    2. '(' → logprob: -6.002563953399658
    3. '"' → logprob: -10.502564430236816
    4. ' '('' → logprob: -10.502564430236816
    5. '('' → logprob: -10.627564430236816
    6. ''(' → logprob: -12.127564430236816
    7. '')' → logprob: -12.877564430236816
    8. '(
' → logprob: -14.502564430236816
    9. ')' → logprob: -15.002564430236816
    10. '`' → logprob: -15.252564430236816

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.17738938331604
    2. ' or' → logprob: -1.30238938331604
    3. '<|end|>' → logprob: -1.42738938331604
    4. ':
' → logprob: -1.92738938331604
    5. ')' → logprob: -3.80238938331604
    6. '<|end|>' → logprob: -5.677389144897461
    7. '               ' → logprob: -5.802389144897461
    8. '                   ' → logprob: -6.177389144897461
    9. '):
' → logprob: -7.177389144897461
    10. '):' → logprob: -7.302389144897461

Token 112: '                   ' (ID: 699)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4830702245235443
    2. ' cnt' → logprob: -1.2330702543258667
    3. '                   ' → logprob: -2.733070135116577
    4. '               ' → logprob: -4.608070373535156
    5. '	cnt' → logprob: -5.733070373535156
    6. '<|end|>' → logprob: -5.858070373535156
    7. '[cnt' → logprob: -5.983070373535156
    8. '
' → logprob: -6.108070373535156
    9. '(cnt' → logprob: -6.108070373535156
    10. '                    
' → logprob: -6.608070373535156

Token 113: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.16040700674057007
    2. ' cnt' → logprob: -1.9104070663452148
    3. '	cnt' → logprob: -9.160407066345215
    4. '(cnt' → logprob: -10.035407066345215
    5. '[cnt' → logprob: -10.535407066345215
    6. '_cnt' → logprob: -12.910407066345215
    7. '                   ' → logprob: -13.535407066345215
    8. '
' → logprob: -13.660407066345215
    9. '               ' → logprob: -14.285407066345215
    10. 'count' → logprob: -14.785407066345215

Token 114: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.047391485422849655
    2. ' +=' → logprob: -3.422391414642334
    3. '+' → logprob: -4.297391414642334
    4. '=' → logprob: -11.047391891479492
    5. '<|end|>' → logprob: -11.672391891479492
    6. ' +' → logprob: -11.922391891479492
    7. '+='' → logprob: -12.047391891479492
    8. ']+=' → logprob: -12.422391891479492
    9. '++' → logprob: -12.672391891479492
    10. '+="' → logprob: -13.297391891479492

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -18.001502990722656
    4. '```' → logprob: -19.626502990722656
    5. '   ' → logprob: -19.751502990722656
    6. '
' → logprob: -20.251502990722656
    7. '  ' → logprob: -21.001502990722656
    8. ' ' → logprob: -21.001502990722656
    9. '۱' → logprob: -21.564002990722656
    10. '+' → logprob: -21.751502990722656

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -18.750001907348633
    4. '```' → logprob: -19.750001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '۱' → logprob: -22.875001907348633
    7. '-' → logprob: -23.125001907348633
    8. '+' → logprob: -23.125001907348633
    9. '`' → logprob: -23.625001907348633
    10. ')' → logprob: -23.750001907348633

Token 117: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04171132296323776
    2. 'elif' → logprob: -3.2917113304138184
    3. ' elif' → logprob: -7.166711330413818
    4. ')' → logprob: -7.166711330413818
    5. '
' → logprob: -7.541711330413818
    6. '<|end|>' → logprob: -7.541711330413818
    7. '```' → logprob: -7.541711330413818
    8. '                
' → logprob: -9.29171085357666
    9. '           ' → logprob: -9.29171085357666
    10. '                   ' → logprob: -9.29171085357666

Token 118: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024136094376444817
    2. 'elif' → logprob: -3.8991360664367676
    3. 'j' → logprob: -6.774136066436768
    4. '<|end|>' → logprob: -7.149136066436768
    5. '```' → logprob: -7.649136066436768
    6. '                   ' → logprob: -8.024136543273926
    7. ')' → logprob: -8.149136543273926
    8. '           ' → logprob: -9.149136543273926
    9. '                ' → logprob: -9.399136543273926
    10. ' elif' → logprob: -9.399136543273926

Token 119: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.018172889947891235
    2. ' elif' → logprob: -4.018172740936279
    3. '               ' → logprob: -11.018173217773438
    4. 'if' → logprob: -12.518173217773438
    5. ' if' → logprob: -13.643173217773438
    6. '```' → logprob: -14.393173217773438
    7. '	elif' → logprob: -14.768173217773438
    8. 'elseif' → logprob: -15.393173217773438
    9. 'else' → logprob: -15.893173217773438
    10. ' ' → logprob: -16.018173217773438

Token 120: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43711546063423157
    2. ' s' → logprob: -1.0621154308319092
    3. '')' → logprob: -5.312115669250488
    4. ')' → logprob: -6.312115669250488
    5. ' ')'' → logprob: -7.062115669250488
    6. ' ')' → logprob: -7.312115669250488
    7. ' ' → logprob: -10.187115669250488
    8. ')s' → logprob: -10.312115669250488
    9. '   ' → logprob: -11.562115669250488
    10. ' )' → logprob: -11.812115669250488

Token 121: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.87500286102295
    3. 'j' → logprob: -15.12500286102295
    4. '[
' → logprob: -15.87500286102295
    5. '[i' → logprob: -17.250003814697266
    6. '```' → logprob: -18.250003814697266
    7. '	j' → logprob: -19.250003814697266
    8. ']' → logprob: -19.250003814697266
    9. '   ' → logprob: -19.875003814697266
    10. 's' → logprob: -20.250003814697266

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0055528320372104645
    2. ']==' → logprob: -5.255552768707275
    3. '==' → logprob: -8.755553245544434
    4. '[j' → logprob: -8.880553245544434
    5. '[' → logprob: -11.505553245544434
    6. '']' → logprob: -12.755553245544434
    7. ' ==' → logprob: -12.755553245544434
    8. '[i' → logprob: -13.005553245544434
    9. ']=='' → logprob: -13.505553245544434
    10. ']=' → logprob: -14.005553245544434

Token 123: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.024773480370640755
    2. ' ==' → logprob: -3.774773597717285
    3. ')' → logprob: -7.274773597717285
    4. '')' → logprob: -7.899773597717285
    5. '=' → logprob: -8.149773597717285
    6. ']==' → logprob: -9.649773597717285
    7. ']' → logprob: -10.274773597717285
    8. ')==' → logprob: -10.399773597717285
    9. '']' → logprob: -11.524773597717285
    10. ''' → logprob: -11.899773597717285

Token 124: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0006475062109529972
    2. ')' → logprob: -7.37564754486084
    3. ' ')' → logprob: -11.25064754486084
    4. ' ')'' → logprob: -12.50064754486084
    5. '")' → logprob: -13.00064754486084
    6. ''' → logprob: -13.37564754486084
    7. ')'' → logprob: -16.250646591186523
    8. ''):' → logprob: -16.250646591186523
    9. '']' → logprob: -16.750646591186523
    10. ''>' → logprob: -16.875646591186523

Token 125: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8722183108329773
    2. ':
' → logprob: -0.9972183108329773
    3. '               ' → logprob: -2.872218370437622
    4. '<|end|>' → logprob: -2.997218370437622
    5. ':' → logprob: -3.122218370437622
    6. '):
' → logprob: -3.247218370437622
    7. ')' → logprob: -5.372218132019043
    8. ''):
' → logprob: -5.497218132019043
    9. '<|end|>' → logprob: -5.497218132019043
    10. '):' → logprob: -6.122218132019043

Token 126: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06682250648736954
    2. 'cnt' → logprob: -2.8168225288391113
    3. ' cnt' → logprob: -6.066822528839111
    4. '               ' → logprob: -6.441822528839111
    5. '                       ' → logprob: -8.316822052001953
    6. '[cnt' → logprob: -8.566822052001953
    7. '(cnt' → logprob: -8.691822052001953
    8. '	cnt' → logprob: -9.316822052001953
    9. '                  ' → logprob: -9.566822052001953
    10. '           ' → logprob: -9.941822052001953

Token 127: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.06229917332530022
    2. ' cnt' → logprob: -2.8122992515563965
    3. '                   ' → logprob: -8.062298774719238
    4. '	cnt' → logprob: -12.437298774719238
    5. '(cnt' → logprob: -12.562298774719238
    6. '               ' → logprob: -12.562298774719238
    7. '[cnt' → logprob: -12.812298774719238
    8. '                       ' → logprob: -12.937298774719238
    9. '
' → logprob: -16.437299728393555
    10. '_cnt' → logprob: -16.937299728393555

Token 128: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.05183763429522514
    2. '-=' → logprob: -3.051837682723999
    3. '-' → logprob: -5.80183744430542
    4. '                   ' → logprob: -8.676837921142578
    5. '               ' → logprob: -10.551837921142578
    6. ' -' → logprob: -12.176837921142578
    7. '   ' → logprob: -12.676837921142578
    8. '=' → logprob: -12.676837921142578
    9. '           ' → logprob: -12.676837921142578
    10. '                       ' → logprob: -13.551837921142578

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326204538345337
    2. ' ' → logprob: -1.3132619857788086
    3. '<|end|>' → logprob: -15.688261985778809
    4. '```' → logprob: -16.563262939453125
    5. '   ' → logprob: -17.063262939453125
    6. ' ' → logprob: -17.063262939453125
    7. '0' → logprob: -17.875762939453125
    8. '           ' → logprob: -18.125762939453125
    9. ')' → logprob: -18.313262939453125
    10. '                   ' → logprob: -18.375762939453125

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -18.87506675720215
    4. '<|end|>' → logprob: -19.75006675720215
    5. '   ' → logprob: -20.37506675720215
    6. '0' → logprob: -21.00006675720215
    7. ')' → logprob: -21.25006675720215
    8. '۱' → logprob: -21.37506675720215
    9. ' ' → logprob: -21.81256675720215
    10. '１' → logprob: -21.93756675720215

Token 131: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008634188212454319
    2. '
' → logprob: -5.508634090423584
    3. '                   ' → logprob: -5.758634090423584
    4. '           ' → logprob: -7.508634090423584
    5. '<|end|>' → logprob: -8.258634567260742
    6. ')' → logprob: -8.633634567260742
    7. '                
' → logprob: -9.258634567260742
    8. ':
' → logprob: -9.633634567260742
    9. '```' → logprob: -9.633634567260742
    10. '<|end|>' → logprob: -10.258634567260742

Token 132: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016476840246468782
    2. '                   ' → logprob: -6.626647472381592
    3. '           ' → logprob: -8.87664794921875
    4. ')' → logprob: -9.87664794921875
    5. '
' → logprob: -9.87664794921875
    6. '                
' → logprob: -11.12664794921875
    7. ',' → logprob: -11.50164794921875
    8. ' j' → logprob: -11.62664794921875
    9. 'j' → logprob: -11.75164794921875
    10. '):
' → logprob: -12.50164794921875

Token 133: ' j' (ID: 441)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020833346992731094
    2. '                   ' → logprob: -4.895833492279053
    3. ' j' → logprob: -5.145833492279053
    4. 'j' (adapté à ' j') → logprob: -5.270833492279053
    5. '           ' → logprob: -6.770833492279053
    6. '[j' → logprob: -8.145833015441895
    7. '   ' → logprob: -8.520833015441895
    8. ')' → logprob: -9.395833015441895
    9. '
' → logprob: -9.395833015441895
    10. '                
' → logprob: -9.770833015441895

Token 134: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.055091824382543564
    2. ' +=' → logprob: -3.1800918579101562
    3. '+' → logprob: -4.430091857910156
    4. '=' → logprob: -9.805091857910156
    5. '++' → logprob: -10.805091857910156
    6. ' +' → logprob: -11.805091857910156
    7. '<|end|>' → logprob: -11.805091857910156
    8. ')' → logprob: -12.555091857910156
    9. ']+=' → logprob: -12.555091857910156
    10. '+
' → logprob: -13.055091857910156

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '```' → logprob: -16.750179290771484
    4. '   ' → logprob: -20.125179290771484
    5. '
' → logprob: -20.187679290771484
    6. '１' → logprob: -20.250179290771484
    7. '۱' → logprob: -20.375179290771484
    8. '`' → logprob: -20.875179290771484
    9. '+' → logprob: -21.312679290771484
    10. '``' → logprob: -21.750179290771484

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.000001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '１' → logprob: -20.875001907348633
    6. '
' → logprob: -21.000001907348633
    7. '۱' → logprob: -21.562501907348633
    8. '`' → logprob: -21.875001907348633
    9. '-' → logprob: -22.750001907348633
    10. '' → logprob: -22.812501907348633

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5306398272514343
    2. '       ' → logprob: -1.155639886856079
    3. '<|end|>' → logprob: -3.280639886856079
    4. '           ' → logprob: -3.780639886856079
    5. ' 
' → logprob: -4.0306396484375
    6. '  
' → logprob: -5.4056396484375
    7. ')' → logprob: -6.0306396484375
    8. '        
' → logprob: -6.0306396484375
    9. ' ' → logprob: -6.2806396484375
    10. '\n' → logprob: -6.4056396484375

Token 138: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.925571084022522
    2. '
' → logprob: -1.300571084022522
    3. '       ' → logprob: -1.800571084022522
    4. '           ' → logprob: -2.1755709648132324
    5. '<|end|>' → logprob: -4.425570964813232
    6. '  
' → logprob: -4.675570964813232
    7. ')' → logprob: -4.800570964813232
    8. ' ' → logprob: -5.175570964813232
    9. '        
' → logprob: -5.550570964813232
    10. '\n' → logprob: -6.050570964813232

Token 139: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.12419091165065765
    2. ' clause' → logprob: -2.8741908073425293
    3. '       ' → logprob: -3.6241908073425293
    4. '           ' → logprob: -4.874190807342529
    5. 'expr' → logprob: -4.999190807342529
    6. 'sub' → logprob: -5.249190807342529
    7. ' cl' → logprob: -5.624190807342529
    8. 'segment' → logprob: -5.749190807342529
    9. ' segment' → logprob: -6.624190807342529
    10. ')' → logprob: -6.749190807342529

Token 140: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5517406463623047
    2. '=' → logprob: -1.0517406463623047
    3. 's' → logprob: -2.8017406463623047
    4. '_str' → logprob: -4.301740646362305
    5. '_content' → logprob: -9.176740646362305
    6. '_s' → logprob: -9.426740646362305
    7. '_text' → logprob: -9.426740646362305
    8. '_' → logprob: -9.551740646362305
    9. '_string' → logprob: -9.551740646362305
    10. '_contents' → logprob: -10.551740646362305

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11293358355760574
    2. '=' → logprob: -2.23793363571167
    3. 's' → logprob: -9.612933158874512
    4. '=s' → logprob: -10.112933158874512
    5. ' ' → logprob: -12.862933158874512
    6. ' s' → logprob: -15.112933158874512
    7. ')' → logprob: -15.237933158874512
    8. ',' → logprob: -15.612933158874512
    9. ' =
' → logprob: -15.737933158874512
    10. '=
' → logprob: -17.237934112548828

Token 142: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12692810595035553
    2. 's' → logprob: -2.1269280910491943
    3. '	s' → logprob: -18.501928329467773
    4. '_s' → logprob: -18.876928329467773
    5. '(s' → logprob: -19.001928329467773
    6. ' ' → logprob: -20.001928329467773
    7. ' ' → logprob: -20.126928329467773
    8. '`s' → logprob: -20.501928329467773
    9. '```' → logprob: -21.001928329467773
    10. '"s' → logprob: -21.376928329467773

Token 143: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.763666947837919e-05
    2. '[' → logprob: -10.00004768371582
    3. 'i' → logprob: -13.37504768371582
    4. '[j' → logprob: -15.00004768371582
    5. ' [' → logprob: -16.37504768371582
    6. '[I' → logprob: -16.50004768371582
    7. '(i' → logprob: -17.50004768371582
    8. '[
' → logprob: -17.87504768371582
    9. '```' → logprob: -18.37504768371582
    10. ',i' → logprob: -18.75004768371582

Token 144: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033677343162707984
    2. ':j' → logprob: -8.375336647033691
    3. ' +' → logprob: -9.625336647033691
    4. '+j' → logprob: -10.500336647033691
    5. '1' → logprob: -11.375336647033691
    6. ':' → logprob: -14.125336647033691
    7. '+
' → logprob: -15.250336647033691
    8. 'j' → logprob: -16.125337600708008
    9. ':i' → logprob: -17.500337600708008
    10. '+:' → logprob: -17.500337600708008

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '0' → logprob: -12.250009536743164
    3. ' ' → logprob: -12.625009536743164
    4. '2' → logprob: -14.000009536743164
    5. '```' → logprob: -14.500009536743164
    6. 'i' → logprob: -16.125009536743164
    7. '3' → logprob: -16.625009536743164
    8. '   ' → logprob: -17.125009536743164
    9. 'len' → logprob: -17.687509536743164
    10. '１' → logprob: -18.437509536743164

Token 146: ':j' (ID: 123557)
  Prédit: ':j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':j' → logprob: -0.0005001319805160165
    2. ':' → logprob: -7.625500202178955
    3. ' :' → logprob: -12.125499725341797
    4. 'j' → logprob: -12.750499725341797
    5. ',j' → logprob: -12.750499725341797
    6. ',' → logprob: -15.250499725341797
    7. ' j' → logprob: -15.250499725341797
    8. '	j' → logprob: -15.375499725341797
    9. ' ' → logprob: -16.375499725341797
    10. ';j' → logprob: -16.500499725341797

Token 147: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.1008713702030946e-06
    2. ' -' → logprob: -13.125001907348633
    3. '1' → logprob: -17.125001907348633
    4. '```' → logprob: -18.375001907348633
    5. ']' → logprob: -20.125001907348633
    6. ']-' → logprob: -20.875001907348633
    7. '−' → logprob: -21.125001907348633
    8. '–' → logprob: -21.750001907348633
    9. '[' → logprob: -21.875001907348633
    10. '()-' → logprob: -22.000001907348633

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ')' → logprob: -17.375
    4. '0' → logprob: -17.5
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -19.25
    7. '2' → logprob: -19.375
    8. ']' → logprob: -19.875
    9. '۱' → logprob: -20.25
    10. '１' → logprob: -20.25

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035210796631872654
    2. ']
' → logprob: -6.003520965576172
    3. '].' → logprob: -6.878520965576172
    4. ']
' → logprob: -11.878520965576172
    5. ')' → logprob: -12.878520965576172
    6. ']

' → logprob: -13.003520965576172
    7. ' ]' → logprob: -13.003520965576172
    8. '];' → logprob: -15.503520965576172
    9. ']string' → logprob: -16.128520965576172
    10. '.split' → logprob: -16.378520965576172

Token 150: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10451909154653549
    2. '
' → logprob: -3.3545191287994385
    3. '.split' → logprob: -3.8545191287994385
    4. ')' → logprob: -4.354518890380859
    5. '<|end|>' → logprob: -4.604518890380859
    6. '<|end|>' → logprob: -4.854518890380859
    7. '       ' → logprob: -5.479518890380859
    8. '               ' → logprob: -6.854518890380859
    9. '            
' → logprob: -6.854518890380859
    10. ']' → logprob: -7.229518890380859

Token 151: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2894527018070221
    2. '
' → logprob: -1.4144526720046997
    3. '.split' → logprob: -6.16445255279541
    4. ')' → logprob: -6.53945255279541
    5. '<|end|>' → logprob: -6.78945255279541
    6. '
' → logprob: -7.16445255279541
    7. '<|end|>' → logprob: -7.41445255279541
    8. '       ' → logprob: -7.78945255279541
    9. '            
' → logprob: -7.91445255279541
    10. '#' → logprob: -8.41445255279541

Token 152: ' inside' (ID: 6772)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.7408121228218079
    2. 'tokens' → logprob: -1.990812063217163
    3. '           ' → logprob: -2.365812063217163
    4. '
' → logprob: -2.490812063217163
    5. ' split' → logprob: -2.865812063217163
    6. ' tokens' → logprob: -3.490812063217163
    7. 'spl' → logprob: -3.615812063217163
    8. '       ' → logprob: -4.115812301635742
    9. ' ' → logprob: -4.365812301635742
    10. ' splits' → logprob: -5.115812301635742

Token 153: ' parentheses' (ID: 180602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3390292823314667
    2. ' parentheses' → logprob: -2.089029312133789
    3. '<|end|>' → logprob: -2.714029312133789
    4. '           ' → logprob: -3.589029312133789
    5. ' the' → logprob: -3.964029312133789
    6. '<|end|>' → logprob: -4.464029312133789
    7. ' spaces' → logprob: -4.839029312133789
    8. ' of' → logprob: -5.214029312133789
    9. ' space' → logprob: -5.464029312133789
    10. 'the' → logprob: -5.839029312133789

Token 154: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.652312159538269
    2. '           ' → logprob: -0.777312159538269
    3. '<|end|>' → logprob: -4.652312278747559
    4. '<|end|>' → logprob: -5.402312278747559
    5. '            
' → logprob: -6.027312278747559
    6. ')' → logprob: -7.277312278747559
    7. '\n' → logprob: -7.277312278747559
    8. '       ' → logprob: -7.652312278747559
    9. '
' → logprob: -8.152312278747559
    10. ',' → logprob: -8.777312278747559

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12720316648483276
    2. '
' → logprob: -2.2522032260894775
    3. '<|end|>' → logprob: -5.502202987670898
    4. '            
' → logprob: -6.127202987670898
    5. 'tokens' → logprob: -6.127202987670898
    6. '<|end|>' → logprob: -6.377202987670898
    7. '       ' → logprob: -7.127202987670898
    8. '_tokens' → logprob: -7.252202987670898
    9. ')' → logprob: -8.377202987670898
    10. ' tokens' → logprob: -8.502202987670898

Token 156: ' literals' (ID: 193569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9825834035873413
    2. '
' → logprob: -2.107583522796631
    3. '_literals' → logprob: -2.107583522796631
    4. ' literals' → logprob: -2.107583522796631
    5. ' clauses' → logprob: -2.357583522796631
    6. 'cl' → logprob: -2.607583522796631
    7. 'l' → logprob: -3.732583522796631
    8. 'tokens' → logprob: -3.732583522796631
    9. 'cla' → logprob: -3.982583522796631
    10. '       ' → logprob: -5.607583522796631

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005239445250481367
    2. '=' → logprob: -5.255239486694336
    3. '_' → logprob: -12.880239486694336
    4. 's' → logprob: -13.755239486694336
    5. ')' → logprob: -13.880239486694336
    6. ' _' → logprob: -15.630239486694336
    7. '=[]' → logprob: -15.880239486694336
    8. '_tokens' → logprob: -16.255239486694336
    9. '_list' → logprob: -16.380239486694336
    10. ' ' → logprob: -16.880239486694336

Token 158: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.06079636141657829
    2. ' clause' → logprob: -3.1857962608337402
    3. '[]' → logprob: -4.56079626083374
    4. '[' → logprob: -5.56079626083374
    5. ' []' → logprob: -5.93579626083374
    6. ' [' → logprob: -7.68579626083374
    7. '[]
' → logprob: -9.560796737670898
    8. ' cl' → logprob: -10.685796737670898
    9. 'cla' → logprob: -10.685796737670898
    10. '[class' → logprob: -10.810796737670898

Token 159: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0006156971794553101
    2. 's' → logprob: -7.50061559677124
    3. 'str' → logprob: -9.875616073608398
    4. 'r' → logprob: -13.000616073608398
    5. '_strings' → logprob: -13.625616073608398
    6. '_list' → logprob: -14.250616073608398
    7. 'es' → logprob: -14.625616073608398
    8. 'split' → logprob: -14.750616073608398
    9. '```' → logprob: -14.750616073608398
    10. '_s' → logprob: -14.750616073608398

Token 160: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.00018232580623589456
    2. '.' → logprob: -8.750182151794434
    3. ' .' → logprob: -11.500182151794434
    4. '.strip' → logprob: -11.625182151794434
    5. '.replace' → logprob: -12.375182151794434
    6. '.rstrip' → logprob: -15.625182151794434
    7. 'split' → logprob: -16.25018310546875
    8. '.Split' → logprob: -16.25018310546875
    9. '.findall' → logprob: -16.87518310546875
    10. '.s' → logprob: -17.50018310546875

Token 161: '('&' (ID: 126989)
  Prédit: '('&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('&' → logprob: -0.0004744023026432842
    2. '("&' → logprob: -8.250473976135254
    3. '('' → logprob: -8.500473976135254
    4. ''' → logprob: -11.750473976135254
    5. '&' → logprob: -14.125473976135254
    6. '("("' → logprob: -15.000473976135254
    7. '"&' → logprob: -15.750473976135254
    8. ' ' → logprob: -16.12547492980957
    9. ' ('' → logprob: -16.12547492980957
    10. '(' → logprob: -16.37547492980957

Token 162: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2527795433998108
    2. ')' → logprob: -1.502779483795166
    3. '&' → logprob: -7.127779483795166
    4. '")' → logprob: -10.502779960632324
    5. '')
' → logprob: -12.127779960632324
    6. ')&' → logprob: -12.502779960632324
    7. ''' → logprob: -13.252779960632324
    8. '<|end|>' → logprob: -13.252779960632324
    9. '')"' → logprob: -14.127779960632324
    10. ']' → logprob: -14.127779960632324

Token 163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02090841718018055
    2. '
' → logprob: -4.020908355712891
    3. '<|end|>' → logprob: -7.145908355712891
    4. '            
' → logprob: -7.270908355712891
    5. ')' → logprob: -7.520908355712891
    6. '       ' → logprob: -8.14590835571289
    7. '<|end|>' → logprob: -8.89590835571289
    8. '    
' → logprob: -10.39590835571289
    9. ')
' → logprob: -10.52090835571289
    10. 'newline' → logprob: -10.64590835571289

Token 164: ' clauses' (ID: 99572)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.2839280366897583
    2. '           ' → logprob: -1.4089280366897583
    3. ' clauses' → logprob: -6.158927917480469
    4. 'cl' → logprob: -7.658927917480469
    5. '       ' → logprob: -9.158927917480469
    6. '   ' → logprob: -10.658927917480469
    7. '```' → logprob: -11.283927917480469
    8. '.cl' → logprob: -11.658927917480469
    9. ')' → logprob: -11.783927917480469
    10. '               ' → logprob: -12.408927917480469

Token 165: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0028262771666049957
    2. '.' → logprob: -5.87782621383667
    3. '.Append' → logprob: -12.002826690673828
    4. '.add' → logprob: -12.502826690673828
    5. ').' → logprob: -12.627826690673828
    6. '.ap' → logprob: -12.877826690673828
    7. '.app' → logprob: -13.127826690673828
    8. 'append' → logprob: -14.002826690673828
    9. '.extend' → logprob: -14.002826690673828
    10. '.setdefault' → logprob: -14.627826690673828

Token 166: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. ' (' → logprob: -16.500009536743164
    4. '(list' → logprob: -16.875009536743164
    5. '_literals' → logprob: -17.750009536743164
    6. '(li' → logprob: -18.250009536743164
    7. '(m' → logprob: -18.750009536743164
    8. '(L' → logprob: -19.125009536743164
    9. '(line' → logprob: -19.125009536743164
    10. '(log' → logprob: -19.375009536743164

Token 167: 'iterals' (ID: 79754)
  Prédit: 'iterals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iterals' → logprob: -0.00030066570616327226
    2. 'iter' → logprob: -8.125300407409668
    3. '_literals' → logprob: -13.750300407409668
    4. 'l' → logprob: -13.875300407409668
    5. 'iteral' → logprob: -14.375300407409668
    6. 'it' → logprob: -14.375300407409668
    7. 'itar' → logprob: -14.750300407409668
    8. 'iters' → logprob: -14.750300407409668
    9. ' literals' → logprob: -15.625300407409668
    10. 'itera' → logprob: -16.500301361083984

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018164340406656265
    2. ')
' → logprob: -4.018164157867432
    3. '       ' → logprob: -12.01816463470459
    4. '           ' → logprob: -12.89316463470459
    5. ')return' → logprob: -13.64316463470459
    6. ')i' → logprob: -13.64316463470459
    7. '   ' → logprob: -14.14316463470459
    8. ')
' → logprob: -14.14316463470459
    9. ')n' → logprob: -15.39316463470459
    10. ')

' → logprob: -15.64316463470459

Token 169: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3927954137325287
    2. '       ' → logprob: -1.892795443534851
    3. '           ' → logprob: -2.2677953243255615
    4. '
' → logprob: -3.0177953243255615
    5. '    
' → logprob: -4.517795562744141
    6. 'i' → logprob: -5.517795562744141
    7. '<|end|>' → logprob: -5.892795562744141
    8. '\n' → logprob: -7.517795562744141
    9. '```' → logprob: -7.642795562744141
    10. '    ' → logprob: -7.892795562744141

Token 170: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.061306633055210114
    2. '           ' → logprob: -3.1863067150115967
    3. ' i' → logprob: -4.061306476593018
    4. '       ' → logprob: -7.436306476593018
    5. '   ' → logprob: -8.311306953430176
    6. '
' → logprob: -10.311306953430176
    7. '	i' → logprob: -11.561306953430176
    8. '```' → logprob: -11.811306953430176
    9. '            
' → logprob: -12.186306953430176
    10. '    ' → logprob: -12.311306953430176

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975199744105339
    2. ' =' → logprob: -3.529752016067505
    3. '=j' → logprob: -13.904751777648926
    4. '+=' → logprob: -14.529751777648926
    5. ' +=' → logprob: -16.404752731323242
    6. '=}' → logprob: -18.904752731323242
    7. '=
' → logprob: -19.154752731323242
    8. ' ' → logprob: -19.529752731323242
    9. '＝' → logprob: -19.779752731323242
    10. '=

' → logprob: -20.029752731323242

Token 172: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141403377056122
    2. ' j' → logprob: -1.7014139890670776
    3. '$j' → logprob: -15.076414108276367
    4. '	j' → logprob: -15.451414108276367
    5. ' ' → logprob: -16.076414108276367
    6. '<|end|>' → logprob: -17.826414108276367
    7. '_j' → logprob: -18.201414108276367
    8. '[j' → logprob: -18.201414108276367
    9. '=j' → logprob: -18.326414108276367
    10. ':j' → logprob: -18.326414108276367

Token 173: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3148179352283478
    2. 'elif' → logprob: -1.3148179054260254
    3. ' elif' → logprob: -6.564817905426025
    4. '
' → logprob: -9.689818382263184
    5. '	elif' → logprob: -10.689818382263184
    6. '   ' → logprob: -11.064818382263184
    7. 'else' → logprob: -11.439818382263184
    8. '+' → logprob: -11.439818382263184
    9. '```' → logprob: -11.939818382263184
    10. ')' → logprob: -12.939818382263184

Token 174: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05543055385351181
    2. 'elif' → logprob: -2.9304306507110596
    3. ' elif' → logprob: -8.18043041229248
    4. '   ' → logprob: -8.68043041229248
    5. '```' → logprob: -10.18043041229248
    6. '	elif' → logprob: -10.80543041229248
    7. '
' → logprob: -11.05543041229248
    8. '<|end|>' → logprob: -11.43043041229248
    9. 'else' → logprob: -12.55543041229248
    10. '        
' → logprob: -13.55543041229248

Token 175: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25228816270828247
    2. 'elif' → logprob: -1.5022881031036377
    3. ' elif' → logprob: -8.502287864685059
    4. '
' → logprob: -9.377287864685059
    5. '   ' → logprob: -10.627287864685059
    6. 'continue' → logprob: -11.627287864685059
    7. '```' → logprob: -11.752287864685059
    8. '           ' → logprob: -12.002287864685059
    9. ')' → logprob: -12.002287864685059
    10. 'el' → logprob: -12.877287864685059

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02324850670993328
    2. ' i' → logprob: -3.7732484340667725
    3. 's' → logprob: -13.773248672485352
    4. ' s' → logprob: -14.398248672485352
    5. ' ' → logprob: -14.523248672485352
    6. 'j' → logprob: -14.648248672485352
    7. '   ' → logprob: -15.773248672485352
    8. '	i' → logprob: -15.898248672485352
    9. '(i' → logprob: -16.89824867248535
    10. ' ' → logprob: -17.14824867248535

Token 177: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.28962546586990356
    2. ' <' → logprob: -1.4146254062652588
    3. '<len' → logprob: -4.914625644683838
    4. ' ' → logprob: -7.164625644683838
    5. '>=' → logprob: -10.03962516784668
    6. '<n' → logprob: -10.03962516784668
    7. '<|end|>' → logprob: -10.16462516784668
    8. '==' → logprob: -10.16462516784668
    9. 'and' → logprob: -10.53962516784668
    10. 's' → logprob: -10.78962516784668

Token 178: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008422967977821827
    2. ' n' → logprob: -5.2584228515625
    3. 'len' → logprob: -5.7584228515625
    4. ' len' → logprob: -10.5084228515625
    5. ' ' → logprob: -15.5084228515625
    6. '   ' → logprob: -15.7584228515625
    7. '	n' → logprob: -15.8834228515625
    8. '<n' → logprob: -16.8834228515625
    9. '```' → logprob: -17.3834228515625
    10. '_n' → logprob: -17.6334228515625

Token 179: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931480169296265
    2. 'and' → logprob: -0.6931480169296265
    3. ' ' → logprob: -14.318147659301758
    4. '	and' → logprob: -15.818147659301758
    5. '   ' → logprob: -16.943147659301758
    6. '1' → logprob: -17.818147659301758
    7. '  ' → logprob: -18.818147659301758
    8. '7' → logprob: -18.943147659301758
    9. ' и' → logprob: -19.068147659301758
    10. '
' → logprob: -19.318147659301758

Token 180: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02325339801609516
    2. ' s' → logprob: -3.7732534408569336
    3. ' ' → logprob: -12.398253440856934
    4. '   ' → logprob: -13.023253440856934
    5. '(s' → logprob: -13.898253440856934
    6. '  ' → logprob: -15.523253440856934
    7. '	s' → logprob: -15.648253440856934
    8. '`s' → logprob: -16.148252487182617
    9. '    ' → logprob: -16.398252487182617
    10. ''s' → logprob: -16.523252487182617

Token 181: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.098748053773306e-05
    2. '[' → logprob: -10.50006103515625
    3. '```' → logprob: -10.87506103515625
    4. '`' → logprob: -11.75006103515625
    5. '|' → logprob: -13.12506103515625
    6. 'i' → logprob: -13.25006103515625
    7. '``' → logprob: -14.62506103515625
    8. '[
' → logprob: -14.75006103515625
    9. '(i' → logprob: -14.87506103515625
    10. '[I' → logprob: -15.37506103515625

Token 182: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.37425798177719116
    2. ']' → logprob: -1.249258041381836
    3. '==' → logprob: -3.874258041381836
    4. ' ==' → logprob: -6.374258041381836
    5. '|' → logprob: -6.374258041381836
    6. ']=='' → logprob: -7.374258041381836
    7. '']' → logprob: -8.624258041381836
    8. '']==' → logprob: -8.749258041381836
    9. '<|end|>' → logprob: -9.374258041381836
    10. ')==' → logprob: -9.874258041381836

Token 183: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09212195873260498
    2. ' ==' → logprob: -2.5921220779418945
    3. '|' → logprob: -4.4671220779418945
    4. ']==' → logprob: -7.3421220779418945
    5. '=='' → logprob: -7.4671220779418945
    6. '=' → logprob: -9.342122077941895
    7. ' ' → logprob: -9.467122077941895
    8. ')==' → logprob: -9.467122077941895
    9. ' in' → logprob: -9.717122077941895
    10. ''' → logprob: -10.967122077941895

Token 184: ' '|' (ID: 113654)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003595376620069146
    2. ''||' → logprob: -8.250359535217285
    3. '|' → logprob: -9.875359535217285
    4. ' '' → logprob: -11.375359535217285
    5. '')' → logprob: -11.375359535217285
    6. '('|' → logprob: -12.000359535217285
    7. '"|' → logprob: -12.125359535217285
    8. ''or' → logprob: -12.625359535217285
    9. '"' → logprob: -12.875359535217285
    10. '|'' → logprob: -12.875359535217285

Token 185: '':
' (ID: 7669)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.003324103308841586
    2. ' |' → logprob: -6.753324031829834
    3. ''' → logprob: -7.253324031829834
    4. ' ' → logprob: -7.628324031829834
    5. ':' → logprob: -8.378324508666992
    6. '('|' → logprob: -9.128324508666992
    7. '):' → logprob: -9.253324508666992
    8. ')' → logprob: -9.253324508666992
    9. ' '|' → logprob: -9.503324508666992
    10. '<|end|>' → logprob: -9.628324508666992

Token 186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33705323934555054
    2. ' i' → logprob: -1.4620532989501953
    3. 'i' → logprob: -2.9620532989501953
    4. '           ' → logprob: -6.462053298950195
    5. '<|end|>' → logprob: -7.712053298950195
    6. '                
' → logprob: -9.212053298950195
    7. '       ' → logprob: -9.587053298950195
    8. ' 
' → logprob: -9.962053298950195
    9. '                   ' → logprob: -10.212053298950195
    10. '   ' → logprob: -10.337053298950195

Token 187: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.12699531018733978
    2. ' i' → logprob: -2.126995325088501
    3. '               ' → logprob: -9.751995086669922
    4. '           ' → logprob: -11.751995086669922
    5. '                   ' → logprob: -14.876995086669922
    6. ' 
' → logprob: -15.376995086669922
    7. '
' → logprob: -15.376995086669922
    8. '	i' → logprob: -16.251995086669922
    9. '                
' → logprob: -16.376995086669922
    10. '       ' → logprob: -16.376995086669922

Token 188: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003583456273190677
    2. ' +=' → logprob: -8.000358581542969
    3. '=' → logprob: -11.000358581542969
    4. '+' → logprob: -12.125358581542969
    5. ']+=' → logprob: -14.125358581542969
    6. '+='' → logprob: -17.62535858154297
    7. '+="' → logprob: -18.25035858154297
    8. '++' → logprob: -18.87535858154297
    9. '```' → logprob: -19.00035858154297
    10. '   ' → logprob: -19.50035858154297

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -19.125045776367188
    4. '１' → logprob: -19.875045776367188
    5. '۱' → logprob: -20.375045776367188
    6. '   ' → logprob: -21.125045776367188
    7. '+' → logprob: -21.625045776367188
    8. ' ' → logprob: -22.000045776367188
    9. '१' → logprob: -22.125045776367188
    10. '0' → logprob: -22.125045776367188

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.250001907348633
    4. '１' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.750001907348633
    6. '۱' → logprob: -20.812501907348633
    7. '  ' → logprob: -21.812501907348633
    8. '0' → logprob: -22.250001907348633
    9. '१' → logprob: -22.250001907348633
    10. '১' → logprob: -22.375001907348633

Token 191: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002227098448202014
    2. '   ' → logprob: -6.252227306365967
    3. 'else' → logprob: -8.877226829528809
    4. 'return' → logprob: -9.627226829528809
    5. '           ' → logprob: -10.127226829528809
    6. ' else' → logprob: -10.877226829528809
    7. '<|end|>' → logprob: -12.002226829528809
    8. '	return' → logprob: -12.127226829528809
    9. ' return' → logprob: -12.377226829528809
    10. 'elif' → logprob: -12.627226829528809

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25029104948043823
    2. 'return' → logprob: -2.250291109085083
    3. '   ' → logprob: -2.375291109085083
    4. 'else' → logprob: -3.875291109085083
    5. ' return' → logprob: -7.000290870666504
    6. ' else' → logprob: -7.125290870666504
    7. '	return' → logprob: -8.875290870666504
    8. 'continue' → logprob: -9.250290870666504
    9. '           ' → logprob: -9.375290870666504
    10. '```' → logprob: -9.375290870666504

Token 193: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04828491806983948
    2. 'else' (adapté à ' else') → logprob: -3.6732850074768066
    3. 'return' → logprob: -3.9232850074768066
    4. ' else' → logprob: -6.423285007476807
    5. ' return' → logprob: -8.173284530639648
    6. 'elif' → logprob: -10.423284530639648
    7. '       ' → logprob: -10.798284530639648
    8. '	else' → logprob: -12.798284530639648
    9. '	return' → logprob: -13.548284530639648
    10. ' ' → logprob: -13.673284530639648

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35129600763320923
    2. '   ' → logprob: -1.8512959480285645
    3. '       ' → logprob: -2.7262959480285645
    4. '           ' → logprob: -3.1012959480285645
    5. 'i' → logprob: -4.8512959480285645
    6. ':
' → logprob: -5.1012959480285645
    7. ' :' → logprob: -5.3512959480285645
    8. ' i' → logprob: -5.4762959480285645
    9. '    ' → logprob: -6.1012959480285645
    10. '    
' → logprob: -6.9762959480285645

Token 195: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7416984438896179
    2. 'i' → logprob: -1.6166985034942627
    3. '   ' → logprob: -1.8666985034942627
    4. ' i' → logprob: -2.2416985034942627
    5. '           ' → logprob: -2.8666985034942627
    6. ' raise' → logprob: -6.366698265075684
    7. '#' → logprob: -6.616698265075684
    8. ' if' → logprob: -6.741698265075684
    9. 'if' → logprob: -6.991698265075684
    10. 'raise' → logprob: -7.616698265075684

Token 196: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.044235896319150925
    2. ' i' → logprob: -4.169235706329346
    3. '#' → logprob: -4.544235706329346
    4. '   ' → logprob: -4.919235706329346
    5. 'break' → logprob: -6.169235706329346
    6. 'raise' → logprob: -6.294235706329346
    7. ' raise' → logprob: -6.419235706329346
    8. ' break' → logprob: -6.419235706329346
    9. '       ' → logprob: -6.919235706329346
    10. '           ' → logprob: -7.294235706329346

Token 197: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16038435697555542
    2. ' +=' → logprob: -1.9103844165802002
    3. '=' → logprob: -9.035384178161621
    4. '+' → logprob: -10.160384178161621
    5. ' ' → logprob: -14.035384178161621
    6. ' =' → logprob: -14.285384178161621
    7. ']+=' → logprob: -15.285384178161621
    8. ' +' → logprob: -15.535384178161621
    9. '+='' → logprob: -15.660384178161621
    10. ')' → logprob: -16.160385131835938

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '```' → logprob: -17.875295639038086
    4. '   ' → logprob: -19.500295639038086
    5. '
' → logprob: -20.375295639038086
    6. '  ' → logprob: -21.250295639038086
    7. '<|end|>' → logprob: -21.250295639038086
    8. '１' → logprob: -21.750295639038086
    9. '0' → logprob: -21.750295639038086
    10. '۱' → logprob: -21.750295639038086

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -22.875
    5. '１' → logprob: -23.0
    6. '
' → logprob: -23.375
    7. '0' → logprob: -23.75
    8. '۱' → logprob: -23.875
    9. '`' → logprob: -24.0
    10. '﻿' → logprob: -24.125

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3255549371242523
    2. '   ' → logprob: -1.5755549669265747
    3. 'return' → logprob: -2.950554847717285
    4. '<|end|>' → logprob: -4.700554847717285
    5. '    
' → logprob: -5.200554847717285
    6. '	return' → logprob: -6.825554847717285
    7. ' return' → logprob: -6.950554847717285
    8. '\n' → logprob: -7.200554847717285
    9. '```' → logprob: -8.075554847717285
    10. '#' → logprob: -9.075554847717285

Token 201: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8244168162345886
    2. '<|end|>' → logprob: -0.8244168162345886
    3. 'return' → logprob: -3.1994168758392334
    4. '   ' → logprob: -3.1994168758392334
    5. '    
' → logprob: -3.9494168758392334
    6. '\n' → logprob: -5.574416637420654
    7. '```' → logprob: -5.574416637420654
    8. '<|end|>' → logprob: -5.699416637420654
    9. ')' → logprob: -6.199416637420654
    10. '  
' → logprob: -6.324416637420654

Token 202: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20202404260635376
    2. 'return' (adapté à ' return') → logprob: -1.702023983001709
    3. ' return' → logprob: -7.702023983001709
    4. '    
' → logprob: -9.577024459838867
    5. '	return' → logprob: -10.327024459838867
    6. '
' → logprob: -11.452024459838867
    7. '```' → logprob: -11.702024459838867
    8. '<|end|>' → logprob: -11.827024459838867
    9. ':return' → logprob: -11.827024459838867
    10. ')' → logprob: -12.202024459838867

Token 203: ' clauses' (ID: 99572)
  Prédit: ' clauses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clauses' → logprob: -0.0067154900170862675
    2. 'cla' → logprob: -5.006715297698975
    3. 'Cla' → logprob: -16.006715774536133
    4. 'cl' → logprob: -16.756715774536133
    5. 'cls' → logprob: -18.256715774536133
    6. ' clause' → logprob: -18.506715774536133
    7. ' cla' → logprob: -18.631715774536133
    8. ' ' → logprob: -19.006715774536133
    9. '[]' → logprob: -19.131715774536133
    10. ' cláus' → logprob: -19.381715774536133

Token 204: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6326487064361572
    2. '
' → logprob: -1.3826487064361572
    3. '(' → logprob: -2.3826487064361572
    4. 'def' → logprob: -2.6326487064361572
    5. '<|end|>' → logprob: -4.132648468017578
    6. '\n' → logprob: -4.757648468017578
    7. '```' → logprob: -4.757648468017578
    8. '(
' → logprob: -5.882648468017578
    9. '[' → logprob: -6.132648468017578
    10. '' → logprob: -6.382648468017578

Token 206: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.154617041349411
    2. ' evaluate' → logprob: -2.4046170711517334
    3. ' simplify' → logprob: -4.029616832733154
    4. 'main' → logprob: -4.779616832733154
    5. ' parse' → logprob: -5.404616832733154
    6. ' is' → logprob: -5.404616832733154
    7. 'evaluate' → logprob: -5.529616832733154
    8. ' solve' → logprob: -5.779616832733154
    9. ' eval' → logprob: -5.904616832733154
    10. ' check' → logprob: -6.279616832733154

Token 207: '_sat' (ID: 157440)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03079117275774479
    2. '(s' → logprob: -3.6557912826538086
    3. '_' → logprob: -6.155791282653809
    4. '():' → logprob: -6.530791282653809
    5. ' (' → logprob: -7.655791282653809
    6. '_(' → logprob: -9.280791282653809
    7. '```' → logprob: -10.280791282653809
    8. '()' → logprob: -10.655791282653809
    9. '(line' → logprob: -10.905791282653809
    10. '(input' → logprob: -11.030791282653809

Token 208: '_en' (ID: 12483)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5876384377479553
    2. '(' → logprob: -0.8376384377479553
    3. '():' → logprob: -5.2126383781433105
    4. '(input' → logprob: -6.9626383781433105
    5. '()' → logprob: -7.3376383781433105
    6. '(problem' → logprob: -8.087638854980469
    7. '(expr' → logprob: -8.087638854980469
    8. '(_' → logprob: -8.212638854980469
    9. '(p' → logprob: -8.462638854980469
    10. '(expression' → logprob: -8.462638854980469

Token 209: '_' (ID: 62)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.8242754340171814
    2. 'umer' → logprob: -1.1992754936218262
    3. 'um' → logprob: -2.199275493621826
    4. 'try' → logprob: -3.074275493621826
    5. 'able' → logprob: -3.949275493621826
    6. 'coder' → logprob: -3.949275493621826
    7. 't' → logprob: -4.074275493621826
    8. 'coded' → logprob: -4.199275493621826
    9. 'coding' → logprob: -4.449275493621826
    10. 'd' → logprob: -5.324275493621826

Token 210: '3' (ID: 18)
  Prédit: 'umer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umer' → logprob: -0.7808129787445068
    2. 'code' → logprob: -1.5308129787445068
    3. 'um' → logprob: -2.405812978744507
    4. 'g' → logprob: -2.780812978744507
    5. 'coded' → logprob: -2.905812978744507
    6. 's' → logprob: -3.405812978744507
    7. 'coding' → logprob: -3.780812978744507
    8. 'cn' → logprob: -4.905813217163086
    9. 'm' → logprob: -5.155813217163086
    10. 'try' → logprob: -5.280813217163086

Token 211: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9109472036361694
    2. '_c' → logprob: -2.410947322845459
    3. '(' → logprob: -2.535947322845459
    4. 'code' → logprob: -3.160947322845459
    5. 'SAT' → logprob: -3.410947322845459
    6. '_sat' → logprob: -3.410947322845459
    7. '3' → logprob: -3.785947322845459
    8. 'sat' → logprob: -3.785947322845459
    9. '(a' → logprob: -4.035947322845459
    10. 'umer' → logprob: -4.285947322845459

Token 212: 'cla' (ID: 16530)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -1.07701575756073
    2. 's' → logprob: -1.45201575756073
    3. 'formula' → logprob: -1.70201575756073
    4. 'cla' → logprob: -2.2020158767700195
    5. 'expression' → logprob: -2.8270158767700195
    6. ' clauses' → logprob: -4.2020158767700195
    7. ' formula' → logprob: -5.0770158767700195
    8. ' s' → logprob: -5.0770158767700195
    9. 'problem' → logprob: -5.2020158767700195
    10. ' expr' → logprob: -5.3270158767700195

Token 213: 'uses' (ID: 5977)
  Prédit: 'uses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.2198241651058197
    2. 'use' → logprob: -1.844824194908142
    3. ')' → logprob: -4.344824314117432
    4. 'u' → logprob: -4.844824314117432
    5. '   ' → logprob: -5.344824314117432
    6. 'us' → logprob: -6.344824314117432
    7. '(' → logprob: -6.469824314117432
    8. '       ' → logprob: -6.719824314117432
    9. '):' → logprob: -6.719824314117432
    10. 'def' → logprob: -6.719824314117432

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003032881941180676
    2. '):
' → logprob: -8.125303268432617
    3. ':' → logprob: -13.000303268432617
    4. ',' → logprob: -13.250303268432617
    5. ' ):' → logprob: -13.500303268432617
    6. ')' → logprob: -14.000303268432617
    7. '):
' → logprob: -14.625303268432617
    8. '   ' → logprob: -15.000303268432617
    9. '[]):' → logprob: -16.250303268432617
    10. '):

' → logprob: -16.875303268432617

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017420548247173429
    2. '    ' → logprob: -7.001741886138916
    3. '    
' → logprob: -7.751741886138916
    4. '   ' → logprob: -9.751742362976074
    5. '```' → logprob: -10.001742362976074
    6. '
' → logprob: -10.126742362976074
    7. ' counter' → logprob: -10.626742362976074
    8. ' indentation' → logprob: -10.626742362976074
    9. 'def' → logprob: -10.751742362976074
    10. ')' → logprob: -10.876742362976074

Token 216: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2484358549118042
    2. ' ' → logprob: -1.3734358549118042
    3. '    ' → logprob: -1.3734358549118042
    4. ' import' → logprob: -2.7484359741210938
    5. ' def' → logprob: -3.1234359741210938
    6. ' from' → logprob: -3.3734359741210938
    7. ' n' → logprob: -4.498435974121094
    8. ' 
' → logprob: -4.498435974121094
    9. ' #' → logprob: -4.998435974121094
    10. ' ' → logprob: -5.373435974121094

Token 217: ' Each' (ID: 11555)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.2647968530654907
    2. 'def' → logprob: -1.5147968530654907
    3. ' from' → logprob: -1.6397968530654907
    4. '   ' → logprob: -2.514796733856201
    5. ' for' → logprob: -2.764796733856201
    6. ' import' → logprob: -2.764796733856201
    7. ' #' → logprob: -3.514796733856201
    8. 'from' → logprob: -3.514796733856201
    9. '#' → logprob: -5.014796733856201
    10. 'import' → logprob: -5.264796733856201

Token 218: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.028167197480797768
    2. 'cl' → logprob: -3.903167247772217
    3. ' literal' → logprob: -5.653167247772217
    4. ' variable' → logprob: -7.028167247772217
    5. '_clause' → logprob: -7.153167247772217
    6. ' token' → logprob: -7.653167247772217
    7. 'def' → logprob: -7.778167247772217
    8. ' clauses' → logprob: -8.403166770935059
    9. 'literal' → logprob: -8.528166770935059
    10. ' cl' → logprob: -8.653166770935059

Token 219: ' has' (ID: 853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7607467770576477
    2. ' =' → logprob: -0.8857467770576477
    3. 'is' → logprob: -3.010746717453003
    4. '=' → logprob: -3.385746717453003
    5. ' must' → logprob: -4.385746955871582
    6. ' consists' → logprob: -5.010746955871582
    7. 'must' → logprob: -5.760746955871582
    8. ' contains' → logprob: -6.135746955871582
    9. ' represents' → logprob: -6.385746955871582
    10. 'def' → logprob: -6.635746955871582

Token 220: ' exactly' (ID: 9707)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.111371248960495
    2. ' a' → logprob: -2.6113712787628174
    3. 'at' → logprob: -4.861371040344238
    4. ' literals' → logprob: -4.861371040344238
    5. ' three' → logprob: -5.486371040344238
    6. ' ' → logprob: -6.236371040344238
    7. ' to' → logprob: -6.361371040344238
    8. ' clauses' → logprob: -6.486371040344238
    9. 'a' → logprob: -6.611371040344238
    10. ' exactly' → logprob: -6.986371040344238

Token 221: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0050373561680316925
    2. 'three' → logprob: -5.755037307739258
    3. ' ' → logprob: -6.630037307739258
    4. ' three' → logprob: -7.630037307739258
    5. '2' → logprob: -11.505037307739258
    6. '1' → logprob: -11.880037307739258
    7. '   ' → logprob: -12.005037307739258
    8. 'len' → logprob: -12.130037307739258
    9. 'exact' → logprob: -12.130037307739258
    10. 'k' → logprob: -12.505037307739258

Token 222: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0011260485043749213
    2. ' ' → logprob: -7.001125812530518
    3. 'three' → logprob: -8.876126289367676
    4. ' three' → logprob: -9.626126289367676
    5. 'exact' → logprob: -12.001126289367676
    6. 'k' → logprob: -14.126126289367676
    7. '1' → logprob: -14.751126289367676
    8. ' exactly' → logprob: -15.251126289367676
    9. '   ' → logprob: -15.376126289367676
    10. 'len' → logprob: -15.501126289367676

Token 223: ' literals' (ID: 193569)
  Prédit: ' literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' literals' → logprob: -0.16284874081611633
    2. '_literals' → logprob: -1.912848711013794
    3. ' clauses' → logprob: -7.162848949432373
    4. '_' → logprob: -8.037848472595215
    5. ' tokens' → logprob: -8.162848472595215
    6. ' space' → logprob: -8.287848472595215
    7. ' _' → logprob: -8.662848472595215
    8. ' ' → logprob: -9.287848472595215
    9. ' spaces' → logprob: -9.287848472595215
    10. 'l' → logprob: -9.412848472595215

Token 224: ' combined' (ID: 15890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12001948803663254
    2. '   ' → logprob: -2.3700194358825684
    3. ':
' → logprob: -4.370019435882568
    4. '
' → logprob: -5.745019435882568
    5. 'def' → logprob: -6.870019435882568
    6. ',' → logprob: -7.120019435882568
    7. '(' → logprob: -8.370019912719727
    8. '    
' → logprob: -8.620019912719727
    9. '<|end|>' → logprob: -8.745019912719727
    10. ' :' → logprob: -8.870019912719727

Token 225: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0001261234283447
    2. ' with' → logprob: -1.2501261234283447
    3. ' for' → logprob: -2.6251261234283447
    4. 'import' → logprob: -3.0001261234283447
    5. '    ' → logprob: -3.1251261234283447
    6. ' if' → logprob: -3.5001261234283447
    7. 'def' → logprob: -3.5001261234283447
    8. ',' → logprob: -4.000125885009766
    9. 'with' → logprob: -4.375125885009766
    10. ' _' → logprob: -4.375125885009766

Token 226: ' '&' (ID: 35856)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07236502319574356
    2. ' '&' → logprob: -3.0723650455474854
    3. '&' → logprob: -3.9473650455474854
    4. ' '' → logprob: -6.197364807128906
    5. ' &' → logprob: -7.322364807128906
    6. '"' → logprob: -7.947364807128906
    7. '"&' → logprob: -7.947364807128906
    8. 'and' → logprob: -8.197364807128906
    9. '&&' → logprob: -9.197364807128906
    10. '&amp' → logprob: -9.697364807128906

Token 227: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10663262009620667
    2. ')' → logprob: -2.856632709503174
    3. 'def' → logprob: -4.731632709503174
    4. '.' → logprob: -4.981632709503174
    5. ',' → logprob: -5.356632709503174
    6. '
' → logprob: -5.481632709503174
    7. ''' → logprob: -5.481632709503174
    8. '\n' → logprob: -5.606632709503174
    9. '')' → logprob: -5.856632709503174
    10. ')
' → logprob: -6.356632709503174

Token 228: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5644627213478088
    2. ':' → logprob: -0.9394627213478088
    3. '
' → logprob: -3.814462661743164
    4. '<|end|>' → logprob: -4.689462661743164
    5. ':
' → logprob: -5.814462661743164
    6. 'def' → logprob: -6.814462661743164
    7. '    
' → logprob: -6.814462661743164
    8. '<|end|>' → logprob: -7.064462661743164
    9. '(' → logprob: -7.814462661743164
    10. ',' → logprob: -8.064462661743164

Token 229: 'AND' (ID: 6758)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.16315267980098724
    2. ')' → logprob: -1.9131526947021484
    3. '   ' → logprob: -6.913152694702148
    4. ' )
' → logprob: -7.788152694702148
    5. 'def' → logprob: -8.663152694702148
    6. ' 
' → logprob: -8.913152694702148
    7. ' ' → logprob: -9.038152694702148
    8. '    ' → logprob: -9.038152694702148
    9. ' return' → logprob: -9.163152694702148
    10. ' ):
' → logprob: -9.163152694702148

Token 230: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0206513199955225
    2. '):' → logprob: -4.270651340484619
    3. '   ' → logprob: -5.520651340484619
    4. '):
' → logprob: -7.520651340484619
    5. ',' → logprob: -7.645651340484619
    6. ' )' → logprob: -8.145650863647461
    7. ')
' → logprob: -8.145650863647461
    8. 'def' → logprob: -8.270650863647461
    9. '')' → logprob: -8.645650863647461
    10. '),' → logprob: -9.270650863647461

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054154179990291595
    2. 'def' → logprob: -4.304154396057129
    3. ' def' → logprob: -4.304154396057129
    4. ' n' → logprob: -4.679154396057129
    5. '
' → logprob: -4.929154396057129
    6. '    
' → logprob: -5.554154396057129
    7. ' 
' → logprob: -7.054154396057129
    8. '    ' → logprob: -7.179154396057129
    9. 'n' → logprob: -7.429154396057129
    10. ' from' → logprob: -7.429154396057129

Token 232: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14124104380607605
    2. ' n' → logprob: -2.8912410736083984
    3. ' def' → logprob: -3.6412410736083984
    4. ' from' → logprob: -3.7662410736083984
    5. 'def' → logprob: -4.516241073608398
    6. ' #' → logprob: -5.891241073608398
    7. ' for' → logprob: -5.891241073608398
    8. 'from' → logprob: -6.141241073608398
    9. '
' → logprob: -6.391241073608398
    10. 'n' → logprob: -6.766241073608398

Token 233: ' The' (ID: 623)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.4615278244018555
    2. 'def' → logprob: -1.5865278244018555
    3. ' from' → logprob: -1.7115278244018555
    4. 'from' → logprob: -2.3365278244018555
    5. ' def' → logprob: -2.4615278244018555
    6. '   ' → logprob: -2.5865278244018555
    7. '#' → logprob: -3.4615278244018555
    8. ' #' → logprob: -3.4615278244018555
    9. 'n' → logprob: -4.0865278244018555
    10. ' import' → logprob: -4.5865278244018555

Token 234: ' whole' (ID: 6062)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19925612211227417
    2. ' def' → logprob: -2.824256181716919
    3. ' result' → logprob: -3.199256181716919
    4. 'from' → logprob: -3.824256181716919
    5. ' from' → logprob: -4.44925594329834
    6. 'import' → logprob: -4.57425594329834
    7. '#' → logprob: -4.94925594329834
    8. 'result' → logprob: -5.19925594329834
    9. ' import' → logprob: -5.57425594329834
    10. 'n' → logprob: -5.82425594329834

Token 235: ' expression' (ID: 12973)
  Prédit: ' formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.5926048755645752
    2. ' expression' → logprob: -0.9676048755645752
    3. 'formula' → logprob: -3.342604875564575
    4. 'expression' → logprob: -3.967604875564575
    5. ' problem' → logprob: -4.842604637145996
    6. ' function' → logprob: -6.092604637145996
    7. '_formula' → logprob: -7.467604637145996
    8. 'def' → logprob: -7.467604637145996
    9. 'expr' → logprob: -7.592604637145996
    10. 'problem' → logprob: -8.592604637145996

Token 236: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.020673736929893494
    2. 'is' → logprob: -4.020673751831055
    3. ' represents' → logprob: -7.020673751831055
    4. ' ' → logprob: -7.895673751831055
    5. '   ' → logprob: -8.395673751831055
    6. ' can' → logprob: -8.395673751831055
    7. 's' → logprob: -8.520673751831055
    8. '_is' → logprob: -9.020673751831055
    9. 'def' → logprob: -9.395673751831055
    10. ' =' → logprob: -9.770673751831055

Token 237: ' clauses' (ID: 99572)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9802277088165283
    2. ' combined' → logprob: -1.4802277088165283
    3. 'combined' → logprob: -2.3552277088165283
    4. ' a' → logprob: -2.4802277088165283
    5. '"' → logprob: -2.8552277088165283
    6. ' connected' → logprob: -3.1052277088165283
    7. ' '' → logprob: -3.8552277088165283
    8. 'connected' → logprob: -3.8552277088165283
    9. 'a' → logprob: -3.8552277088165283
    10. 'cla' → logprob: -4.855227470397949

Token 238: ' combined' (ID: 15890)
  Prédit: ' combined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combined' → logprob: -0.30906474590301514
    2. 'combined' → logprob: -1.4340647459030151
    3. '_comb' → logprob: -4.809064865112305
    4. ' =' → logprob: -4.809064865112305
    5. '   ' → logprob: -6.059064865112305
    6. '=' → logprob: -6.809064865112305
    7. ' connected' → logprob: -7.059064865112305
    8. 'connected' → logprob: -7.309064865112305
    9. 'joined' → logprob: -7.434064865112305
    10. ')' → logprob: -7.434064865112305

Token 239: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5760614275932312
    2. 'with' → logprob: -0.8260614275932312
    3. '   ' → logprob: -9.576061248779297
    4. '_with' → logprob: -10.701061248779297
    5. '	with' → logprob: -11.451061248779297
    6. ' by' → logprob: -11.576061248779297
    7. 'by' → logprob: -12.576061248779297
    8. '_' → logprob: -13.076061248779297
    9. ' ' → logprob: -13.701061248779297
    10. ')' → logprob: -14.076061248779297

Token 240: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03685622662305832
    2. ' '' → logprob: -3.411856174468994
    3. '|' → logprob: -6.286856174468994
    4. ' '|' → logprob: -7.661856174468994
    5. ' |' → logprob: -8.286856651306152
    6. '|'' → logprob: -8.786856651306152
    7. '"' → logprob: -9.036856651306152
    8. '('|' → logprob: -9.161856651306152
    9. ''||' → logprob: -9.286856651306152
    10. ''or' → logprob: -9.786856651306152

Token 241: '|'' (ID: 89955)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6738778948783875
    2. '|'' → logprob: -0.7988778948783875
    3. ''' → logprob: -3.6738779544830322
    4. ' |' → logprob: -4.298877716064453
    5. ' '' → logprob: -7.548877716064453
    6. ')' → logprob: -8.173877716064453
    7. ' '|' → logprob: -8.798877716064453
    8. ')|' → logprob: -9.048877716064453
    9. ')'' → logprob: -9.173877716064453
    10. '('|' → logprob: -9.298877716064453

Token 242: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.711595892906189
    2. '   ' → logprob: -1.461595892906189
    3. 'def' → logprob: -1.711595892906189
    4. ':' → logprob: -2.9615960121154785
    5. '<|end|>' → logprob: -3.9615960121154785
    6. '  
' → logprob: -5.4615960121154785
    7. ' def' → logprob: -5.5865960121154785
    8. '    
' → logprob: -5.7115960121154785
    9. ':
' → logprob: -6.0865960121154785
    10. ',' → logprob: -6.0865960121154785

Token 243: 'OR' (ID: 1301)
  Prédit: 'OR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OR' → logprob: -0.008866757154464722
    2. ' OR' → logprob: -4.758866786956787
    3. ')' → logprob: -8.383866310119629
    4. 'or' → logprob: -11.008866310119629
    5. 'AND' → logprob: -12.758866310119629
    6. ' or' → logprob: -13.758866310119629
    7. '_OR' → logprob: -13.758866310119629
    8. ' (' → logprob: -14.383866310119629
    9. ' )' → logprob: -14.883866310119629
    10. ' ' → logprob: -14.883866310119629

Token 244: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7220076322555542
    2. '):' → logprob: -0.9720076322555542
    3. '):
' → logprob: -2.0970077514648438
    4. '   ' → logprob: -5.222007751464844
    5. ')
' → logprob: -5.597007751464844
    6. ').' → logprob: -6.347007751464844
    7. '):

' → logprob: -6.722007751464844
    8. ',' → logprob: -8.097007751464844
    9. 'def' → logprob: -8.597007751464844
    10. '),' → logprob: -8.722007751464844

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008624739944934845
    2. '
' → logprob: -5.13362455368042
    3. '    
' → logprob: -7.50862455368042
    4. ' 
' → logprob: -7.63362455368042
    5. 'def' → logprob: -7.75862455368042
    6. ' def' → logprob: -7.88362455368042
    7. '    ' → logprob: -8.758625030517578
    8. ' indentation' → logprob: -9.133625030517578
    9. ' n' → logprob: -9.258625030517578
    10. 'n' → logprob: -9.383625030517578

Token 246: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3993814289569855
    2. ' n' → logprob: -2.399381399154663
    3. ' from' → logprob: -2.649381399154663
    4. ' def' → logprob: -2.774381399154663
    5. ' #' → logprob: -3.774381399154663
    6. 'def' → logprob: -4.274381637573242
    7. ' result' → logprob: -4.899381637573242
    8. ' for' → logprob: -4.899381637573242
    9. 'n' → logprob: -5.024381637573242
    10. ' pass' → logprob: -5.149381637573242

Token 247: ' expression' (ID: 12973)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.1261879205703735
    2. 'def' → logprob: -1.3761879205703735
    3. 'from' → logprob: -1.7511879205703735
    4. '   ' → logprob: -2.001187801361084
    5. ' def' → logprob: -3.126187801361084
    6. ' n' → logprob: -3.751187801361084
    7. '#' → logprob: -4.376187801361084
    8. 'import' → logprob: -4.626187801361084
    9. ' #' → logprob: -5.126187801361084
    10. 'n' → logprob: -5.251187801361084

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024170377291738987
    2. '=' → logprob: -6.127417087554932
    3. 's' → logprob: -9.627416610717773
    4. '_' → logprob: -10.002416610717773
    5. ' ' → logprob: -10.127416610717773
    6. '_tokens' → logprob: -10.877416610717773
    7. '_parts' → logprob: -11.502416610717773
    8. ' =
' → logprob: -11.752416610717773
    9. ' s' → logprob: -11.877416610717773
    10. ' is' → logprob: -12.252416610717773

Token 249: ' OR' (ID: 4917)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8776444792747498
    2. ''' → logprob: -1.5026445388793945
    3. ' []' → logprob: -2.2526445388793945
    4. '"' → logprob: -2.3776445388793945
    5. ' clauses' → logprob: -2.6276445388793945
    6. 'cla' → logprob: -2.8776445388793945
    7. '[' → logprob: -4.5026445388793945
    8. ' '' → logprob: -5.1276445388793945
    9. ' [' → logprob: -5.6276445388793945
    10. ' "' → logprob: -5.7526445388793945

Token 250: ' of' (ID: 328)
  Prédit: ' clauses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clauses' → logprob: -0.9222084283828735
    2. ' (' → logprob: -1.0472084283828735
    3. '(' → logprob: -2.172208309173584
    4. ' of' → logprob: -2.672208309173584
    5. ' [' → logprob: -4.672208309173584
    6. '_' → logprob: -4.672208309173584
    7. 'ed' → logprob: -5.297208309173584
    8. 'cla' → logprob: -5.297208309173584
    9. '[' → logprob: -5.297208309173584
    10. ' ' → logprob: -5.422208309173584

Token 251: ' AND' (ID: 6178)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.316531240940094
    2. ' clauses' → logprob: -2.066531181335449
    3. 'all' → logprob: -2.816531181335449
    4. ' all' → logprob: -3.691531181335449
    5. '[' → logprob: -3.691531181335449
    6. 'cl' → logprob: -3.941531181335449
    7. 'each' → logprob: -5.566531181335449
    8. ' clause' → logprob: -5.816531181335449
    9. ' each' → logprob: -6.191531181335449
    10. ' [' → logprob: -6.191531181335449

Token 252: ' of' (ID: 328)
  Prédit: ' clauses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clauses' → logprob: -0.4338485598564148
    2. 's' → logprob: -1.9338486194610596
    3. ' of' → logprob: -2.1838486194610596
    4. 'cla' → logprob: -3.8088486194610596
    5. '(' → logprob: -4.1838483810424805
    6. ' s' → logprob: -4.3088483810424805
    7. 'ed' → logprob: -4.5588483810424805
    8. '_literals' → logprob: -4.5588483810424805
    9. ' (' → logprob: -5.1838483810424805
    10. '(s' → logprob: -6.0588483810424805

Token 253: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5060802698135376
    2. ' literals' → logprob: -1.5060802698135376
    3. 'cla' → logprob: -2.006080150604248
    4. ' clauses' → logprob: -4.256080150604248
    5. 'cl' → logprob: -4.506080150604248
    6. 'all' → logprob: -5.131080150604248
    7. '_literals' → logprob: -6.006080150604248
    8. ' all' → logprob: -6.256080150604248
    9. 'each' → logprob: -6.756080150604248
    10. ' each' → logprob: -7.131080150604248

Token 254: '3' (ID: 18)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24649491906166077
    2. 'cla' → logprob: -1.6214948892593384
    3. ' literals' → logprob: -4.371494770050049
    4. 'cl' → logprob: -5.496494770050049
    5. ' clauses' → logprob: -6.121494770050049
    6. 'all' → logprob: -7.246494770050049
    7. 'each' → logprob: -7.871494770050049
    8. 'the' → logprob: -8.746495246887207
    9. '[l' → logprob: -8.871495246887207
    10. '_literals' → logprob: -8.996495246887207

Token 255: ' literals' (ID: 193569)
  Prédit: '_literals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -0.5655894875526428
    2. ' literals' → logprob: -0.9405894875526428
    3. 'l' → logprob: -3.315589427947998
    4. ' clauses' → logprob: -6.315589427947998
    5. 'tokens' → logprob: -7.440589427947998
    6. '_l' → logprob: -7.565589427947998
    7. 'cla' → logprob: -7.565589427947998
    8. '-l' → logprob: -7.565589427947998
    9. '_literal' → logprob: -8.815589904785156
    10. '_' → logprob: -8.815589904785156

Token 256: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04003381356596947
    2. 'def' → logprob: -4.16503381729126
    3. '
' → logprob: -5.16503381729126
    4. ':
' → logprob: -5.54003381729126
    5. ':' → logprob: -5.66503381729126
    6. 'import' → logprob: -6.04003381729126
    7. 'from' → logprob: -6.04003381729126
    8. ' def' → logprob: -6.79003381729126
    9. '    
' → logprob: -7.04003381729126
    10. ' from' → logprob: -7.29003381729126

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026581034064292908
    2. '
' → logprob: -4.401580810546875
    3. '    
' → logprob: -5.151580810546875
    4. ' def' → logprob: -6.276580810546875
    5. 'def' → logprob: -6.276580810546875
    6. ' 
' → logprob: -6.401580810546875
    7. '    ' → logprob: -6.776580810546875
    8. ' ' → logprob: -8.526580810546875
    9. ' for' → logprob: -8.526580810546875
    10. ' n' → logprob: -8.901580810546875

Token 258: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12647755444049835
    2. ' n' → logprob: -2.5014774799346924
    3. 'n' → logprob: -4.7514777183532715
    4. ' def' → logprob: -4.7514777183532715
    5. ' indentation' → logprob: -5.1264777183532715
    6. ' 
' → logprob: -6.1264777183532715
    7. '    
' → logprob: -6.2514777183532715
    8. ' indent' → logprob: -6.6264777183532715
    9. ' #' → logprob: -6.8764777183532715
    10. 'def' → logprob: -7.1264777183532715

Token 259: ' We' (ID: 1416)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.49443519115448
    2. ' from' → logprob: -1.61943519115448
    3. 'def' → logprob: -1.74443519115448
    4. ' n' → logprob: -1.99443519115448
    5. '   ' → logprob: -2.3694353103637695
    6. 'from' → logprob: -2.8694353103637695
    7. ' result' → logprob: -3.6194353103637695
    8. ' #' → logprob: -4.2444353103637695
    9. '#' → logprob: -4.4944353103637695
    10. ' import' → logprob: -4.6194353103637695

Token 260: ' want' (ID: 1682)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7736231684684753
    2. ' def' → logprob: -1.5236232280731201
    3. ' want' → logprob: -2.02362322807312
    4. ' need' → logprob: -3.02362322807312
    5. '   ' → logprob: -3.14862322807312
    6. ' #' → logprob: -3.89862322807312
    7. '_' → logprob: -4.148622989654541
    8. ' return' → logprob: -4.148622989654541
    9. ' can' → logprob: -4.523622989654541
    10. ' continue' → logprob: -5.023622989654541

Token 261: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0009994633728638291
    2. 'to' → logprob: -7.375999450683594
    3. ' a' → logprob: -8.625999450683594
    4. ' True' → logprob: -9.250999450683594
    5. ' all' → logprob: -9.750999450683594
    6. 'def' → logprob: -11.250999450683594
    7. ' def' → logprob: -11.750999450683594
    8. ' ' → logprob: -12.375999450683594
    9. '   ' → logprob: -12.875999450683594
    10. ' t' → logprob: -13.250999450683594

Token 262: ' see' (ID: 1921)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.1469455361366272
    2. ' check' → logprob: -2.6469454765319824
    3. ' return' → logprob: -3.0219454765319824
    4. ' determine' → logprob: -4.396945476531982
    5. ' generate' → logprob: -7.021945476531982
    6. ' try' → logprob: -7.146945476531982
    7. 'find' → logprob: -7.646945476531982
    8. ' enumerate' → logprob: -7.646945476531982
    9. 'return' → logprob: -8.02194595336914
    10. ' print' → logprob: -8.27194595336914

Token 263: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009449226781725883
    2. 'if' → logprob: -4.759449005126953
    3. ' whether' → logprob: -7.134449005126953
    4. 'whether' → logprob: -11.134449005126953
    5. ' ' → logprob: -11.759449005126953
    6. '   ' → logprob: -12.259449005126953
    7. ' ' → logprob: -12.884449005126953
    8. '    ' → logprob: -13.509449005126953
    9. ' how' → logprob: -13.759449005126953
    10. '	if' → logprob: -13.884449005126953

Token 264: ' there' (ID: 1354)
  Prédit: ' there'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.1370335966348648
    2. ' any' → logprob: -2.262033700942993
    3. ' the' → logprob: -4.137033462524414
    4. ' ' → logprob: -5.512033462524414
    5. ' a' → logprob: -6.137033462524414
    6. ' there's' → logprob: -7.262033462524414
    7. ' all' → logprob: -8.262033462524414
    8. 'there' → logprob: -8.512033462524414
    9. ' an' → logprob: -9.012033462524414
    10. ' clauses' → logprob: -9.262033462524414

Token 265: ' exists' (ID: 13031)
  Prédit: ' exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.57216876745224
    2. ' is' → logprob: -1.1971688270568848
    3. 'exists' → logprob: -2.1971688270568848
    4. 'is' → logprob: -3.8221688270568848
    5. ''s' → logprob: -7.572168827056885
    6. 'Exists' → logprob: -10.197168350219727
    7. 'exist' → logprob: -10.447168350219727
    8. ' exist' → logprob: -10.697168350219727
    9. '_exists' → logprob: -10.947168350219727
    10. '```' → logprob: -12.447168350219727

Token 266: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.00761017482727766
    2. ' an' → logprob: -5.507610321044922
    3. 'a' → logprob: -5.882610321044922
    4. ' ' → logprob: -8.132610321044922
    5. ' tokens' → logprob: -8.507610321044922
    6. ' some' → logprob: -9.757610321044922
    7. 'tokens' → logprob: -10.257610321044922
    8. ' any' → logprob: -10.507610321044922
    9. ' space' → logprob: -10.507610321044922
    10. '<|end|>' → logprob: -10.757610321044922

Token 267: ' assignment' (ID: 24618)
  Prédit: ' assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assignment' → logprob: -0.04952399432659149
    2. 'y' → logprob: -3.5495240688323975
    3. 'assignment' → logprob: -4.049523830413818
    4. ' y' → logprob: -7.049523830413818
    5. ' interpretation' → logprob: -7.799523830413818
    6. ' assignments' → logprob: -8.799524307250977
    7. ' arrangement' → logprob: -9.549524307250977
    8. '_assignment' → logprob: -9.674524307250977
    9. ' a' → logprob: -9.799524307250977
    10. 'a' → logprob: -9.799524307250977

Token 268: ' to' (ID: 316)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.151320680975914
    2. ' for' → logprob: -2.776320695877075
    3. ' to' → logprob: -3.651320695877075
    4. ' of' → logprob: -3.776320695877075
    5. '   ' → logprob: -4.026320457458496
    6. 'that' → logprob: -5.151320457458496
    7. ' ' → logprob: -5.651320457458496
    8. 'for' → logprob: -7.151320457458496
    9. '_' → logprob: -8.526320457458496
    10. 'to' → logprob: -8.901320457458496

Token 269: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.4191564917564392
    2. 'variables' → logprob: -1.794156551361084
    3. ' the' → logprob: -2.044156551361084
    4. ' literals' → logprob: -3.669156551361084
    5. 'the' → logprob: -3.919156551361084
    6. ' each' → logprob: -7.794156551361084
    7. ' all' → logprob: -8.044156074523926
    8. ' any' → logprob: -8.169156074523926
    9. 'all' → logprob: -10.044156074523926
    10. 'each' → logprob: -10.294156074523926

Token 270: ' to' (ID: 316)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.1331251859664917
    2. '   ' → logprob: -2.8831253051757812
    3. 'that' → logprob: -2.8831253051757812
    4. ' such' → logprob: -4.883125305175781
    5. ' for' → logprob: -6.133125305175781
    6. ' to' → logprob: -6.508125305175781
    7. 'for' → logprob: -8.383125305175781
    8. 'def' → logprob: -8.633125305175781
    9. ' so' → logprob: -8.758125305175781
    10. ',' → logprob: -8.758125305175781

Token 271: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.514132559299469
    2. ' make' → logprob: -1.1391324996948242
    3. ' satisfy' → logprob: -3.139132499694824
    4. 's' → logprob: -3.264132499694824
    5. ' ' → logprob: -9.389132499694824
    6. 'True' → logprob: -10.139132499694824
    7. ' sat' → logprob: -10.264132499694824
    8. ' satisf' → logprob: -10.389132499694824
    9. ' True' → logprob: -10.764132499694824
    10. 'evaluate' → logprob: -10.764132499694824

Token 272: ' expression' (ID: 12973)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3900202214717865
    2. 'the' → logprob: -1.1400202512741089
    3. ' expression' → logprob: -6.140020370483398
    4. ' all' → logprob: -7.765020370483398
    5. 'expression' → logprob: -8.390020370483398
    6. 'all' → logprob: -8.515020370483398
    7. ' at' → logprob: -9.140020370483398
    8. 'at' → logprob: -11.640020370483398
    9. 'expr' → logprob: -12.390020370483398
    10. ' ' → logprob: -12.765020370483398

Token 273: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.009999016299843788
    2. ' true' → logprob: -5.259998798370361
    3. 'True' → logprob: -5.384998798370361
    4. '_true' → logprob: -9.38499927520752
    5. 'true' → logprob: -10.25999927520752
    6. '=True' → logprob: -11.13499927520752
    7. ' evaluate' → logprob: -11.13499927520752
    8. '   ' → logprob: -11.25999927520752
    9. ' =' → logprob: -13.75999927520752
    10. ' ' → logprob: -13.75999927520752

Token 274: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17383989691734314
    2. '   ' → logprob: -2.048839807510376
    3. ',' → logprob: -4.173840045928955
    4. 'def' → logprob: -5.048840045928955
    5. '.' → logprob: -5.173840045928955
    6. ':
' → logprob: -6.923840045928955
    7. '):' → logprob: -7.173840045928955
    8. 'import' → logprob: -8.298839569091797
    9. ' :' → logprob: -8.423839569091797
    10. ')' → logprob: -8.673839569091797

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006188891362398863
    2. '    ' → logprob: -6.506188869476318
    3. ' ' → logprob: -7.256188869476318
    4. '#' → logprob: -7.381188869476318
    5. ' but' → logprob: -7.506188869476318
    6. ' and' → logprob: -7.631188869476318
    7. '    
' → logprob: -7.756188869476318
    8. 'def' → logprob: -8.006189346313477
    9. '
' → logprob: -8.256189346313477
    10. 'import' → logprob: -8.631189346313477

Token 276: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1798885315656662
    2. '    ' → logprob: -2.5548884868621826
    3. ' or' → logprob: -3.3048884868621826
    4. ' ' → logprob: -4.429888725280762
    5. ' return' → logprob: -4.679888725280762
    6. '#' (adapté à ' #') → logprob: -5.429888725280762
    7. ' None' → logprob: -5.554888725280762
    8. '    
' → logprob: -6.179888725280762
    9. ' True' → logprob: -6.304888725280762
    10. '
' → logprob: -6.429888725280762

Token 277: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3000931143760681
    2. '#' → logprob: -1.925093173980713
    3. ' #' → logprob: -3.425093173980713
    4. ' so' → logprob: -3.925093173980713
    5. 'def' → logprob: -4.300093173980713
    6. ' and' → logprob: -4.675093173980713
    7. ' return' → logprob: -4.925093173980713
    8. ' or' → logprob: -5.300093173980713
    9. ' def' → logprob: -5.300093173980713
    10. '
' → logprob: -5.675093173980713

Token 278: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03138941526412964
    2. 'n' → logprob: -3.7813894748687744
    3. 'm' → logprob: -4.906389236450195
    4. 't' → logprob: -7.406389236450195
    5. 's' → logprob: -9.656389236450195
    6. ' f' → logprob: -11.156389236450195
    7. '#' → logprob: -11.281389236450195
    8. '=' → logprob: -12.531389236450195
    9. ' ' → logprob: -12.781389236450195
    10. '   ' → logprob: -13.781389236450195

Token 279: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.252953052520752
    2. ' ' → logprob: -1.252953052520752
    3. ' ,' → logprob: -2.252953052520752
    4. 'x' → logprob: -3.127953052520752
    5. ' True' → logprob: -3.627953052520752
    6. ' a' → logprob: -3.627953052520752
    7. ' =' → logprob: -4.002953052520752
    8. ' for' → logprob: -4.002953052520752
    9. ' if' → logprob: -4.252953052520752
    10. ' def' → logprob: -4.377953052520752

Token 280: ' at' (ID: 540)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.09015453606843948
    2. ' any' → logprob: -3.2151546478271484
    3. ' at' → logprob: -3.7151546478271484
    4. ' for' → logprob: -4.715154647827148
    5. ' a' → logprob: -6.215154647827148
    6. ' the' → logprob: -6.340154647827148
    7. ' all' → logprob: -6.465154647827148
    8. ' some' → logprob: -6.715154647827148
    9. ' each' → logprob: -6.715154647827148
    10. ' we' → logprob: -6.840154647827148

Token 281: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.020923011004924774
    2. 'least' → logprob: -3.895922899246216
    3. '_le' → logprob: -8.270922660827637
    4. '   ' → logprob: -10.895922660827637
    5. ' ' → logprob: -11.020922660827637
    6. ' l' → logprob: -11.270922660827637
    7. ' leas' → logprob: -11.395922660827637
    8. 'Least' → logprob: -11.395922660827637
    9. ' any' → logprob: -11.645922660827637
    10. '    ' → logprob: -11.770922660827637

Token 282: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.07889188081026077
    2. 'one' → logprob: -2.5788919925689697
    3. '_one' → logprob: -13.32889175415039
    4. ' ' → logprob: -15.70389175415039
    5. 'One' → logprob: -16.07889175415039
    6. '   ' → logprob: -16.20389175415039
    7. '1' → logprob: -16.45389175415039
    8. '```' → logprob: -18.20389175415039
    9. '(one' → logprob: -18.20389175415039
    10. ')' → logprob: -18.70389175415039

Token 283: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.000776634959038347
    2. 'cl' → logprob: -7.375776767730713
    3. '_clause' → logprob: -9.125776290893555
    4. ' of' → logprob: -10.625776290893555
    5. '(cl' → logprob: -12.125776290893555
    6. ' cl' → logprob: -12.500776290893555
    7. ' cláus' → logprob: -13.000776290893555
    8. ' claus' → logprob: -13.250776290893555
    9. 'cla' → logprob: -13.500776290893555
    10. ')' → logprob: -15.125776290893555

Token 284: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.684420645236969
    2. ' to' → logprob: -1.8094205856323242
    3. ' that' → logprob: -2.559420585632324
    4. '   ' → logprob: -2.934420585632324
    5. ' =' → logprob: -3.559420585632324
    6. ' can' → logprob: -3.809420585632324
    7. ' if' → logprob: -3.809420585632324
    8. ':' → logprob: -3.934420585632324
    9. ' for' → logprob: -3.934420585632324
    10. ' True' → logprob: -3.934420585632324

Token 285: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20308469235897064
    2. ' True' → logprob: -1.7030847072601318
    3. 'true' → logprob: -7.203084468841553
    4. 's' → logprob: -7.578084468841553
    5. ' true' → logprob: -8.453084945678711
    6. ' satisfied' → logprob: -9.578084945678711
    7. 'evalu' → logprob: -10.078084945678711
    8. ' satisf' → logprob: -10.453084945678711
    9. '_true' → logprob: -10.953084945678711
    10. ' all' → logprob: -11.078084945678711

Token 286: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037115514278411865
    2. ':' → logprob: -3.6621155738830566
    3. ',' → logprob: -5.287115573883057
    4. 'def' → logprob: -5.537115573883057
    5. '.' → logprob: -8.412115097045898
    6. '<|end|>' → logprob: -8.662115097045898
    7. ':
' → logprob: -8.912115097045898
    8. '(' → logprob: -8.912115097045898
    9. ' for' → logprob: -8.912115097045898
    10. 'import' → logprob: -8.912115097045898

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003263153601437807
    2. '    
' → logprob: -6.628262996673584
    3. '
' → logprob: -7.503262996673584
    4. ' 
' → logprob: -7.753262996673584
    5. '    ' → logprob: -8.003263473510742
    6. ',' → logprob: -8.628263473510742
    7. ':' → logprob: -9.878263473510742
    8. 'import' → logprob: -10.128263473510742
    9. ' import' → logprob: -10.253263473510742
    10. '     
' → logprob: -10.378263473510742

Token 288: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019962813705205917
    2. ' for' → logprob: -4.894962787628174
    3. ' variables' → logprob: -6.144962787628174
    4. ' def' → logprob: -6.269962787628174
    5. '
' → logprob: -6.394962787628174
    6. ' from' → logprob: -6.894962787628174
    7. ' n' → logprob: -7.269962787628174
    8. ' import' → logprob: -7.644962787628174
    9. 'def' → logprob: -7.644962787628174
    10. ' #' → logprob: -7.644962787628174

Token 289: ' A' (ID: 355)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variables' → logprob: -1.0476388931274414
    2. ' vars' → logprob: -2.0476388931274414
    3. ' from' → logprob: -2.1726388931274414
    4. '   ' → logprob: -2.6726388931274414
    5. ' import' → logprob: -2.7976388931274414
    6. ' #' → logprob: -2.9226388931274414
    7. ' def' → logprob: -2.9226388931274414
    8. 'def' → logprob: -3.1726388931274414
    9. 'from' → logprob: -3.7976388931274414
    10. ' for' → logprob: -3.7976388931274414

Token 290: ' clause' (ID: 45470)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.6456860899925232
    2. 'll' → logprob: -0.7706860899925232
    3. ' ll' → logprob: -5.020686149597168
    4. '   ' → logprob: -6.145686149597168
    5. ' ss' → logprob: -6.645686149597168
    6. 'from' → logprob: -7.770686149597168
    7. 'def' → logprob: -7.770686149597168
    8. ' def' → logprob: -7.770686149597168
    9. ' s' → logprob: -8.145686149597168
    10. 'llo' → logprob: -8.270686149597168

Token 291: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.034088678658008575
    2. 'is' → logprob: -3.409088611602783
    3. '   ' → logprob: -9.034089088439941
    4. ' can' → logprob: -9.534089088439941
    5. ' must' → logprob: -9.534089088439941
    6. '=' → logprob: -10.159089088439941
    7. ' =' → logprob: -10.409089088439941
    8. '_is' → logprob: -10.534089088439941
    9. 's' → logprob: -10.909089088439941
    10. 'must' → logprob: -11.409089088439941

Token 292: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2551005780696869
    2. ' True' → logprob: -1.5051006078720093
    3. ' all' → logprob: -7.130100727081299
    4. 'true' → logprob: -7.255100727081299
    5. 'all' → logprob: -7.380100727081299
    6. ' true' → logprob: -7.505100727081299
    7. 'False' → logprob: -8.63010025024414
    8. '_true' → logprob: -8.63010025024414
    9. ' a' → logprob: -10.00510025024414
    10. 'a' → logprob: -10.63010025024414

Token 293: ' iff' (ID: 165577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01575736328959465
    2. 'if' → logprob: -4.2657575607299805
    3. ' iff' → logprob: -6.6407575607299805
    4. ' only' → logprob: -8.26575756072998
    5. 'iff' → logprob: -11.01575756072998
    6. 'def' → logprob: -12.14075756072998
    7. '   ' → logprob: -12.64075756072998
    8. ' ' → logprob: -12.76575756072998
    9. 'only' → logprob: -14.14075756072998
    10. ' when' → logprob: -15.51575756072998

Token 294: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.0004715450922958553
    2. 'all' → logprob: -7.750471591949463
    3. ' any' → logprob: -10.125471115112305
    4. ' True' → logprob: -15.750471115112305
    5. ' each' → logprob: -16.000471115112305
    6. ' the' → logprob: -16.375471115112305
    7. ' every' → logprob: -16.625471115112305
    8. 'any' → logprob: -16.625471115112305
    9. ' not' → logprob: -17.000471115112305
    10. ' at' → logprob: -17.250471115112305

Token 295: ' ' (ID: 220)
  Prédit: ' literals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' literals' → logprob: -0.11944184452295303
    2. 'l' → logprob: -2.2444417476654053
    3. ' its' → logprob: -5.744441986083984
    4. '_literals' → logprob: -6.369441986083984
    5. ' three' → logprob: -7.369441986083984
    6. '   ' → logprob: -7.494441986083984
    7. ' l' → logprob: -8.244441986083984
    8. ' the' → logprob: -8.994441986083984
    9. ' tokens' → logprob: -10.744441986083984
    10. 'its' → logprob: -10.869441986083984

Token 296: '3' (ID: 18)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0398278646171093
    2. ' literals' → logprob: -3.289827823638916
    3. 'its' → logprob: -6.664827823638916
    4. ' its' → logprob: -8.664828300476074
    5. '_literals' → logprob: -9.289828300476074
    6. '   ' → logprob: -9.414828300476074
    7. 'the' → logprob: -10.289828300476074
    8. ' l' → logprob: -10.664828300476074
    9. 'literal' → logprob: -10.914828300476074
    10. 'three' → logprob: -11.039828300476074

Token 297: ' literals' (ID: 193569)
  Prédit: ' literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' literals' → logprob: -0.1280745565891266
    2. 'l' → logprob: -2.1280746459960938
    3. '_literals' → logprob: -7.878074645996094
    4. ' its' → logprob: -8.003074645996094
    5. ' l' → logprob: -8.878074645996094
    6. ' of' → logprob: -9.378074645996094
    7. '   ' → logprob: -9.503074645996094
    8. ' tokens' → logprob: -9.878074645996094
    9. ' the' → logprob: -10.503074645996094
    10. 'tokens' → logprob: -11.128074645996094

Token 298: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.03337317332625389
    2. ' in' → logprob: -3.5333731174468994
    3. 'are' → logprob: -6.0333733558654785
    4. ' True' → logprob: -8.40837287902832
    5. 'True' → logprob: -8.53337287902832
    6. '_are' → logprob: -8.65837287902832
    7. ')' → logprob: -9.15837287902832
    8. ' is' → logprob: -9.40837287902832
    9. 'in' → logprob: -9.53337287902832
    10. '=True' → logprob: -9.90837287902832

Token 299: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07946909964084625
    2. ' True' → logprob: -2.5794692039489746
    3. 'true' → logprob: -8.329468727111816
    4. '_true' → logprob: -8.454468727111816
    5. ' true' → logprob: -9.079468727111816
    6. '_TRUE' → logprob: -12.954468727111816
    7. 's' → logprob: -13.329468727111816
    8. 'evalu' → logprob: -13.329468727111816
    9. '.True' → logprob: -13.829468727111816
    10. '(True' → logprob: -13.954468727111816

Token 300: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02043759450316429
    2. '
' → logprob: -4.395437717437744
    3. 'def' → logprob: -6.020437717437744
    4. ':' → logprob: -6.395437717437744
    5. '    
' → logprob: -6.395437717437744
    6. ',' → logprob: -7.520437717437744
    7. '.' → logprob: -8.020437240600586
    8. '<|end|>' → logprob: -8.020437240600586
    9. ':
' → logprob: -8.520437240600586
    10. ')' → logprob: -8.520437240600586

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03938546031713486
    2. '
' → logprob: -3.7893855571746826
    3. '    
' → logprob: -4.6643853187561035
    4. 'def' → logprob: -5.6643853187561035
    5. ' 
' → logprob: -6.4143853187561035
    6. '  
' → logprob: -8.164385795593262
    7. '    ' → logprob: -8.414385795593262
    8. ' def' → logprob: -8.414385795593262
    9. '   
' → logprob: -8.789385795593262
    10. 'import' → logprob: -9.039385795593262

Token 302: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0675540491938591
    2. ' variables' → logprob: -3.817553997039795
    3. ' vars' → logprob: -4.567553997039795
    4. ' from' → logprob: -5.067553997039795
    5. 'def' → logprob: -5.067553997039795
    6. 'variables' → logprob: -5.192553997039795
    7. 'vars' → logprob: -5.942553997039795
    8. 'from' → logprob: -6.192553997039795
    9. ' def' → logprob: -6.317553997039795
    10. '
' → logprob: -6.567553997039795

Token 303: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1984009742736816
    2. 'def' → logprob: -1.5734009742736816
    3. 'variables' → logprob: -2.3234009742736816
    4. ' variables' → logprob: -2.4484009742736816
    5. ' vars' → logprob: -2.6984009742736816
    6. 'vars' → logprob: -2.8234009742736816
    7. 'from' → logprob: -3.0734009742736816
    8. ' from' → logprob: -3.4484009742736816
    9. '#' → logprob: -3.5734009742736816
    10. ' def' → logprob: -3.6984009742736816

Token 304: ' find' (ID: 1646)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1386549472808838
    2. ' def' → logprob: -2.888654947280884
    3. '   ' → logprob: -3.513654947280884
    4. ' all' → logprob: -4.013654708862305
    5. 'def' → logprob: -5.513654708862305
    6. ' from' → logprob: -5.513654708862305
    7. 'for' → logprob: -5.638654708862305
    8. ' variables' → logprob: -5.638654708862305
    9. '    ' → logprob: -6.388654708862305
    10. ' we' → logprob: -6.513654708862305

Token 305: ' if' (ID: 538)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5472598075866699
    2. ' any' → logprob: -1.92225980758667
    3. ' all' → logprob: -1.92225980758667
    4. ' an' → logprob: -2.79725980758667
    5. ' if' → logprob: -3.79725980758667
    6. ' the' → logprob: -4.04725980758667
    7. 'all' → logprob: -4.92225980758667
    8. ' clauses' → logprob: -5.42225980758667
    9. ' variables' → logprob: -5.79725980758667
    10. 'a' → logprob: -5.79725980758667

Token 306: ' there' (ID: 1354)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.007577989250421524
    2. ' there' → logprob: -5.007577896118164
    3. ' at' → logprob: -7.757577896118164
    4. 'any' → logprob: -8.257577896118164
    5. ' a' → logprob: -9.632577896118164
    6. ' ' → logprob: -9.632577896118164
    7. ' an' → logprob: -11.382577896118164
    8. ' one' → logprob: -11.632577896118164
    9. ' exists' → logprob: -12.257577896118164
    10. ' some' → logprob: -12.507577896118164

Token 307: ' exists' (ID: 13031)
  Prédit: ' exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.0845942422747612
    2. 'exists' → logprob: -2.584594249725342
    3. ' is' → logprob: -5.209594249725342
    4. 'is' → logprob: -8.709593772888184
    5. ''s' → logprob: -10.834593772888184
    6. '_exists' → logprob: -10.834593772888184
    7. 'exist' → logprob: -11.959593772888184
    8. 'Exists' → logprob: -11.959593772888184
    9. ' exist' → logprob: -13.209593772888184
    10. '```' → logprob: -13.584593772888184

Token 308: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04029811546206474
    2. ' an' → logprob: -3.5402982234954834
    3. ' at' → logprob: -5.415297985076904
    4. 'a' → logprob: -5.665297985076904
    5. ' any' → logprob: -6.665297985076904
    6. ' clause' → logprob: -7.665297985076904
    7. ' one' → logprob: -7.915297985076904
    8. ' some' → logprob: -8.540298461914062
    9. ' clauses' → logprob: -9.915298461914062
    10. ' i' → logprob: -9.915298461914062

Token 309: ' assignment' (ID: 24618)
  Prédit: ' assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assignment' → logprob: -0.0599304735660553
    2. 'assignment' → logprob: -3.5599305629730225
    3. ' clause' → logprob: -4.184930324554443
    4. ' i' → logprob: -4.809930324554443
    5. '_clause' → logprob: -6.434930324554443
    6. 'i' → logprob: -6.559930324554443
    7. ' OR' → logprob: -7.934930324554443
    8. 'y' → logprob: -7.934930324554443
    9. ' existing' → logprob: -8.059930801391602
    10. 'import' → logprob: -8.059930801391602

Token 310: ' making' (ID: 4137)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6440377831459045
    2. ' ' → logprob: -1.0190377235412598
    3. '<|end|>' → logprob: -3.7690377235412598
    4. ' to' → logprob: -4.01903772354126
    5. '   ' → logprob: -4.39403772354126
    6. ' =' → logprob: -4.51903772354126
    7. ',' → logprob: -4.64403772354126
    8. '_' → logprob: -5.01903772354126
    9. ' ,' → logprob: -5.01903772354126
    10. ' for' → logprob: -5.14403772354126

Token 311: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.7361081838607788
    2. 'any' → logprob: -0.7361081838607788
    3. ' at' → logprob: -3.6111083030700684
    4. 'one' → logprob: -4.986108303070068
    5. ' any' → logprob: -5.361108303070068
    6. 'a' → logprob: -6.236108303070068
    7. 'cl' → logprob: -6.736108303070068
    8. 'some' → logprob: -8.86110782623291
    9. ' one' → logprob: -9.61110782623291
    10. 'True' → logprob: -9.73610782623291

Token 312: ' least' (ID: 5153)
  Prédit: ' least'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' least' → logprob: -0.39814722537994385
    2. 'least' → logprob: -1.1481472253799438
    3. '_le' → logprob: -4.523147106170654
    4. '_' → logprob: -8.398147583007812
    5. 'Least' → logprob: -10.398147583007812
    6. 'lease' → logprob: -10.523147583007812
    7. '    ' → logprob: -11.273147583007812
    8. 'lest' → logprob: -11.398147583007812
    9. 'le' → logprob: -11.523147583007812
    10. 'l' → logprob: -11.773147583007812

Token 313: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.2519353926181793
    2. ' one' → logprob: -1.501935362815857
    3. '_one' → logprob: -12.251935005187988
    4. '```' → logprob: -14.001935005187988
    5. '   ' → logprob: -14.751935005187988
    6. 'One' → logprob: -16.126935958862305
    7. '1' → logprob: -16.251935958862305
    8. ' ' → logprob: -18.001935958862305
    9. ' 하나' → logprob: -18.126935958862305
    10. '    ' → logprob: -18.376935958862305

Token 314: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.04353402554988861
    2. 'cl' → logprob: -3.16853404045105
    3. '_clause' → logprob: -7.793533802032471
    4. ' of' → logprob: -9.793534278869629
    5. 'cla' → logprob: -10.668534278869629
    6. '(cl' → logprob: -11.918534278869629
    7. ' literal' → logprob: -12.043534278869629
    8. ' claus' → logprob: -12.043534278869629
    9. ' cl' → logprob: -12.293534278869629
    10. ' cláus' → logprob: -12.418534278869629

Token 315: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.04188990220427513
    2. 'True' → logprob: -3.4168899059295654
    3. ' true' → logprob: -5.041889667510986
    4. '_true' → logprob: -6.791889667510986
    5. ' all' → logprob: -7.916889667510986
    6. '   ' → logprob: -9.166890144348145
    7. 'true' → logprob: -9.541890144348145
    8. ' clause' → logprob: -11.166890144348145
    9. ' clauses' → logprob: -11.291890144348145
    10. ' in' → logprob: -11.666890144348145

Token 316: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05326888710260391
    2. ':' → logprob: -3.5532689094543457
    3. 'def' → logprob: -4.553268909454346
    4. ',' → logprob: -4.928268909454346
    5. '.' → logprob: -5.428268909454346
    6. ' for' → logprob: -8.553268432617188
    7. '    
' → logprob: -8.928268432617188
    8. '
' → logprob: -9.053268432617188
    9. ' def' → logprob: -9.178268432617188
    10. 'import' → logprob: -9.553268432617188

Token 317: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027315914630889893
    2. '    
' → logprob: -4.152316093444824
    3. '
' → logprob: -4.652316093444824
    4. ' 
' → logprob: -7.277316093444824
    5. 'def' → logprob: -7.652316093444824
    6. '    ' → logprob: -9.402316093444824
    7. 'from' → logprob: -9.777316093444824
    8. 'import' → logprob: -10.027316093444824
    9. '   
' → logprob: -10.027316093444824
    10. '     
' → logprob: -10.152316093444824

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035371133126318455
    2. ' variables' → logprob: -7.003537178039551
    3. ' from' → logprob: -7.128537178039551
    4. 'def' → logprob: -7.503537178039551
    5. 'from' → logprob: -7.878537178039551
    6. 'variables' → logprob: -8.50353717803955
    7. ' def' → logprob: -8.75353717803955
    8. ' all' → logprob: -9.00353717803955
    9. ' vars' → logprob: -9.00353717803955
    10. ' for' → logprob: -9.62853717803955

Token 319: ' #' (ID: 1069)
  Prédit: 'vars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vars' → logprob: -0.9624523520469666
    2. 'variables' → logprob: -1.2124524116516113
    3. 'from' → logprob: -1.5874524116516113
    4. 'def' → logprob: -2.7124524116516113
    5. '#' (adapté à ' #') → logprob: -3.9624524116516113
    6. 'all' → logprob: -4.462452411651611
    7. 'var' → logprob: -4.837452411651611
    8. '   ' → logprob: -4.962452411651611
    9. 'import' → logprob: -6.087452411651611
    10. 'for' → logprob: -6.712452411651611

Token 320: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1611762046813965
    2. 'vars' → logprob: -1.2861762046813965
    3. 'variables' → logprob: -1.4111762046813965
    4. 'def' → logprob: -2.9111762046813965
    5. 'var' → logprob: -3.0361762046813965
    6. '#' → logprob: -3.7861762046813965
    7. 'all' → logprob: -3.9111762046813965
    8. 'import' → logprob: -4.5361762046813965
    9. '   ' → logprob: -5.2861762046813965
    10. 'assign' → logprob: -5.7861762046813965

Token 321: ' try' (ID: 2075)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6921926736831665
    2. 'try' → logprob: -1.6921926736831665
    3. 'use' → logprob: -2.692192554473877
    4. ' try' → logprob: -2.817192554473877
    5. ' import' → logprob: -3.442192554473877
    6. 'collect' → logprob: -3.942192554473877
    7. 'implement' → logprob: -3.942192554473877
    8. ' use' → logprob: -4.067192554473877
    9. 'convert' → logprob: -4.067192554473877
    10. ' implement' → logprob: -4.317192554473877

Token 322: ' each' (ID: 2454)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.08262374997138977
    2. ' to' → logprob: -2.7076237201690674
    3. 'all' → logprob: -4.4576239585876465
    4. 'to' → logprob: -7.2076239585876465
    5. '   ' → logprob: -8.832623481750488
    6. ' each' → logprob: -10.082623481750488
    7. 'import' → logprob: -10.707623481750488
    8. ' a' → logprob: -10.832623481750488
    9. ' for' → logprob: -11.707623481750488
    10. ' import' → logprob: -11.707623481750488

Token 323: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.012667743489146233
    2. 'cl' → logprob: -4.762667655944824
    3. ' possible' → logprob: -6.762667655944824
    4. ' variable' → logprob: -7.512667655944824
    5. 'import' → logprob: -7.637667655944824
    6. '_clause' → logprob: -7.637667655944824
    7. ' combination' → logprob: -7.887667655944824
    8. 'possible' → logprob: -8.012667655944824
    9. ' assignment' → logprob: -8.387667655944824
    10. 'assignment' → logprob: -9.387667655944824

Token 324: ' independently' (ID: 38341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6352058053016663
    2. ' for' → logprob: -1.2602057456970215
    3. 'for' → logprob: -2.5102057456970215
    4. ':' → logprob: -2.8852057456970215
    5. ' in' → logprob: -3.1352057456970215
    6. ',' → logprob: -5.6352057456970215
    7. 'in' → logprob: -7.2602057456970215
    8. ' and' → logprob: -7.8852057456970215
    9. ' =' → logprob: -8.01020622253418
    10. ' to' → logprob: -8.51020622253418

Token 325: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03913387283682823
    2. ',' → logprob: -3.9141337871551514
    3. ' for' → logprob: -4.7891340255737305
    4. ':' → logprob: -4.9141340255737305
    5. 'for' → logprob: -6.6641340255737305
    6. '.' → logprob: -7.2891340255737305
    7. ' and' → logprob: -7.4141340255737305
    8. 'and' → logprob: -9.78913402557373
    9. ' to' → logprob: -10.66413402557373
    10. 'import' → logprob: -10.78913402557373

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034451649989932775
    2. ' for' → logprob: -5.753445148468018
    3. 'for' → logprob: -8.253445625305176
    4. 'import' → logprob: -13.128445625305176
    5. '    
' → logprob: -13.503445625305176
    6. '
' → logprob: -13.503445625305176
    7. 'def' → logprob: -13.628445625305176
    8. ' import' → logprob: -14.503445625305176
    9. ' def' → logprob: -15.503445625305176
    10. '```' → logprob: -15.878445625305176

Token 327: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2830256223678589
    2. 'for' → logprob: -1.5330256223678589
    3. '   ' → logprob: -3.6580257415771484
    4. ' result' → logprob: -7.158025741577148
    5. ' results' → logprob: -7.158025741577148
    6. 'result' → logprob: -7.408025741577148
    7. 'results' → logprob: -7.533025741577148
    8. ' res' → logprob: -7.658025741577148
    9. 'def' → logprob: -7.783025741577148
    10. ' assignments' → logprob: -8.158025741577148

Token 328: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2935689687728882
    2. '   ' → logprob: -1.9185689687728882
    3. 'for' → logprob: -2.4185690879821777
    4. ' results' → logprob: -5.043569087982178
    5. ' result' → logprob: -5.293569087982178
    6. 'result' → logprob: -6.293569087982178
    7. 'results' → logprob: -6.418569087982178
    8. ' res' → logprob: -7.043569087982178
    9. ' assignments' → logprob: -7.793569087982178
    10. 'def' → logprob: -7.918569087982178

Token 329: ' each' (ID: 2454)
  Prédit: ' clause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.3487302362918854
    2. 'cl' → logprob: -1.223730206489563
    3. 'cla' → logprob: -9.723730087280273
    4. ' cl' → logprob: -9.848730087280273
    5. 'c' → logprob: -10.223730087280273
    6. '_clause' → logprob: -10.223730087280273
    7. ' clauses' → logprob: -11.348730087280273
    8. ' c' → logprob: -11.348730087280273
    9. 'cls' → logprob: -11.348730087280273
    10. 'lit' → logprob: -11.598730087280273

Token 330: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.07921858131885529
    2. 'cl' → logprob: -2.579218626022339
    3. '_clause' → logprob: -9.329218864440918
    4. 'cla' → logprob: -9.704218864440918
    5. ' claus' → logprob: -9.829218864440918
    6. ' cl' → logprob: -9.954218864440918
    7. ' clauses' → logprob: -10.704218864440918
    8. 'c' → logprob: -10.954218864440918
    9. '   ' → logprob: -11.704218864440918
    10. 'cls' → logprob: -12.579218864440918

Token 331: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11526350677013397
    2. '   ' → logprob: -2.2402634620666504
    3. ',' → logprob: -6.36526346206665
    4. ' in' → logprob: -8.365263938903809
    5. ' for' → logprob: -8.740263938903809
    6. '       ' → logprob: -8.990263938903809
    7. ':
' → logprob: -9.740263938903809
    8. 'for' → logprob: -10.240263938903809
    9. '):' → logprob: -10.615263938903809
    10. '    ' → logprob: -10.865263938903809

Token 332: 'AND' (ID: 6758)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.45351892709732056
    2. ' clause' → logprob: -1.0785188674926758
    3. ')' → logprob: -4.828518867492676
    4. '   ' → logprob: -5.328518867492676
    5. ' literals' → logprob: -5.453518867492676
    6. ' in' → logprob: -5.703518867492676
    7. 'c' → logprob: -7.328518867492676
    8. ' cl' → logprob: -7.578518867492676
    9. ' for' → logprob: -7.578518867492676
    10. ' c' → logprob: -7.828518867492676

Token 333: ' of' (ID: 328)
  Prédit: '_literals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_literals' → logprob: -0.9851033687591553
    2. ' of' → logprob: -1.1101033687591553
    3. ' literals' → logprob: -1.4851033687591553
    4. ')' → logprob: -3.9851033687591553
    5. '   ' → logprob: -3.9851033687591553
    6. 'of' → logprob: -4.360103607177734
    7. 'ed' → logprob: -5.735103607177734
    8. '):' → logprob: -6.110103607177734
    9. '_literal' → logprob: -6.110103607177734
    10. '),' → logprob: -6.235103607177734

Token 334: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.017010381445288658
    2. ' three' → logprob: -4.64201021194458
    3. 'three' → logprob: -5.76701021194458
    4. 'l' → logprob: -6.26701021194458
    5. ' ' → logprob: -6.64201021194458
    6. ' literals' → logprob: -7.26701021194458
    7. '[' → logprob: -9.392010688781738
    8. '   ' → logprob: -10.767010688781738
    9. '['' → logprob: -11.017010688781738
    10. ')' → logprob: -11.017010688781738

Token 335: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.25833791494369507
    2. 'l' → logprob: -1.6333379745483398
    3. 'three' → logprob: -3.88333797454834
    4. ' three' → logprob: -5.13333797454834
    5. ' literals' → logprob: -5.88333797454834
    6. '[' → logprob: -6.63333797454834
    7. '[l' → logprob: -7.38333797454834
    8. ' ' → logprob: -7.75833797454834
    9. '['' → logprob: -8.63333797454834
    10. 'literal' → logprob: -8.88333797454834

Token 336: ' literals' (ID: 193569)
  Prédit: ' literals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' literals' → logprob: -0.003401451976969838
    2. '_literals' → logprob: -5.753401279449463
    3. 'l' → logprob: -9.128401756286621
    4. ')' → logprob: -9.628401756286621
    5. ' )' → logprob: -11.128401756286621
    6. ' literal' → logprob: -11.503401756286621
    7. ' ' → logprob: -11.628401756286621
    8. '_l' → logprob: -12.753401756286621
    9. 'literal' → logprob: -13.128401756286621
    10. ' liter' → logprob: -13.378401756286621

Token 337: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3262713551521301
    2. '),' → logprob: -1.3262712955474854
    3. '   ' → logprob: -4.9512715339660645
    4. '):
' → logprob: -5.8262715339660645
    5. ')' → logprob: -6.3262715339660645
    6. ',' → logprob: -7.0762715339660645
    7. ':' → logprob: -8.701271057128906
    8. ' ),' → logprob: -10.701271057128906
    9. '):

' → logprob: -11.326271057128906
    10. ' ):' → logprob: -11.326271057128906

Token 338: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35469332337379456
    2. ' for' → logprob: -1.4796932935714722
    3. 'def' → logprob: -3.2296934127807617
    4. 'for' → logprob: -4.729693412780762
    5. ' #' → logprob: -4.979693412780762
    6. ' def' → logprob: -5.354693412780762
    7. '#' → logprob: -5.354693412780762
    8. ' variables' → logprob: -6.229693412780762
    9. ' we' → logprob: -6.354693412780762
    10. ' import' → logprob: -7.479693412780762

Token 339: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.05491546168923378
    2. ' find' → logprob: -4.304915428161621
    3. ' you' → logprob: -4.554915428161621
    4. ' be' → logprob: -4.804915428161621
    5. ' it' → logprob: -5.179915428161621
    6. ' all' → logprob: -5.304915428161621
    7. 'we' → logprob: -5.554915428161621
    8. ' the' → logprob: -6.804915428161621
    9. ' assign' → logprob: -7.429915428161621
    10. ' there' → logprob: -7.804915428161621

Token 340: ' find' (ID: 1646)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.209625005722046
    2. ' assign' → logprob: -1.334625005722046
    3. ' find' → logprob: -1.334625005722046
    4. 'make' → logprob: -2.709625005722046
    5. ' make' → logprob: -3.084625005722046
    6. ' set' → logprob: -3.709625005722046
    7. ' satisfy' → logprob: -3.709625005722046
    8. 'find' → logprob: -4.584625244140625
    9. 'set' → logprob: -6.084625244140625
    10. 's' → logprob: -7.584625244140625

Token 341: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.08212488889694214
    2. ' a' → logprob: -3.082124948501587
    3. 'an' → logprob: -3.582124948501587
    4. 'a' → logprob: -5.332124710083008
    5. ' assignments' → logprob: -8.457124710083008
    6. ' assignment' → logprob: -10.207124710083008
    7. 'assign' → logprob: -11.332124710083008
    8. '   ' → logprob: -11.582124710083008
    9. 'def' → logprob: -11.957124710083008
    10. ' True' → logprob: -11.957124710083008

Token 342: ' assignment' (ID: 24618)
  Prédit: ' assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assignment' → logprob: -0.34989264607429504
    2. 'assignment' → logprob: -1.2248926162719727
    3. 'assign' → logprob: -6.599892616271973
    4. ' ' → logprob: -10.599892616271973
    5. 'import' → logprob: -11.099892616271973
    6. ' assign' → logprob: -11.474892616271973
    7. '_assignment' → logprob: -11.724892616271973
    8. ' assignments' → logprob: -12.599892616271973
    9. 'interpret' → logprob: -12.849892616271973
    10. ' variable' → logprob: -12.849892616271973

Token 343: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.01879570074379444
    2. 'that' → logprob: -4.518795490264893
    3. ' making' → logprob: -6.268795490264893
    4. ' to' → logprob: -6.268795490264893
    5. '#' → logprob: -6.393795490264893
    6. '<|end|>' → logprob: -7.268795490264893
    7. ' for' → logprob: -7.518795490264893
    8. '   ' → logprob: -8.26879596710205
    9. ' #' → logprob: -8.76879596710205
    10. ' where' → logprob: -9.14379596710205

Token 344: ' makes' (ID: 4787)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5704970955848694
    2. 'makes' → logprob: -1.1954970359802246
    3. ' satisfies' → logprob: -2.6954970359802246
    4. ' makes' → logprob: -2.8204970359802246
    5. ' sets' → logprob: -5.820497035980225
    6. 'sets' → logprob: -7.195497035980225
    7. ' ' → logprob: -7.820497035980225
    8. 'does' → logprob: -8.070497512817383
    9. 'make' → logprob: -8.820497512817383
    10. ' does' → logprob: -9.070497512817383

Token 345: ' all' (ID: 722)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.39156800508499146
    2. 'all' → logprob: -1.3915679454803467
    3. ' it' → logprob: -3.1415679454803467
    4. ' all' → logprob: -4.016568183898926
    5. 'that' → logprob: -5.141568183898926
    6. 'them' → logprob: -5.641568183898926
    7. 'the' → logprob: -5.891568183898926
    8. 'cl' → logprob: -7.141568183898926
    9. ' that' → logprob: -7.391568183898926
    10. ' them' → logprob: -8.266568183898926

Token 346: ' literals' (ID: 193569)
  Prédit: ' three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.6567058563232422
    2. 'l' → logprob: -1.0317058563232422
    3. ' literals' → logprob: -2.781705856323242
    4. '3' → logprob: -3.531705856323242
    5. 'three' → logprob: -3.656705856323242
    6. '   ' → logprob: -5.656705856323242
    7. ' of' → logprob: -6.281705856323242
    8. ' ' → logprob: -6.906705856323242
    9. ' l' → logprob: -8.031705856323242
    10. ' the' → logprob: -8.031705856323242

Token 347: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4690752923488617
    2. ' true' → logprob: -1.594075322151184
    3. 'True' → logprob: -1.844075322151184
    4. 'true' → logprob: -4.4690752029418945
    5. '_true' → logprob: -7.0940752029418945
    6. ' in' → logprob: -7.2190752029418945
    7. '   ' → logprob: -10.469075202941895
    8. ' simultaneously' → logprob: -10.594075202941895
    9. ' of' → logprob: -10.719075202941895
    10. '=True' → logprob: -11.219075202941895

Token 348: '?
' (ID: 3901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06646763533353806
    2. '?' → logprob: -3.066467523574829
    3. ':' → logprob: -4.441467761993408
    4. ',' → logprob: -6.066467761993408
    5. 'def' → logprob: -6.191467761993408
    6. ' for' → logprob: -6.816467761993408
    7. '):' → logprob: -9.69146728515625
    8. '.' → logprob: -9.94146728515625
    9. '    
' → logprob: -9.94146728515625
    10. ')' → logprob: -9.94146728515625

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019866520538926125
    2. '    
' → logprob: -4.019866466522217
    3. '
' → logprob: -6.644866466522217
    4. '<|end|>' → logprob: -8.519866943359375
    5. '<|end|>' → logprob: -10.144866943359375
    6. 'import' → logprob: -10.769866943359375
    7. '    
    
' → logprob: -10.894866943359375
    8. 'def' → logprob: -10.894866943359375
    9. '    ' → logprob: -10.894866943359375
    10. '  
' → logprob: -11.019866943359375

Token 350: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004573480691760778
    2. '
' → logprob: -6.629573345184326
    3. ' for' → logprob: -6.629573345184326
    4. '    
' → logprob: -6.879573345184326
    5. 'for' → logprob: -7.129573345184326
    6. 'import' → logprob: -10.504573822021484
    7. 'def' → logprob: -10.754573822021484
    8. '#' (adapté à ' #') → logprob: -12.379573822021484
    9. 'from' → logprob: -12.504573822021484
    10. '    ' → logprob: -12.629573822021484

Token 351: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03780069574713707
    2. ' for' → logprob: -4.0378007888793945
    3. 'for' → logprob: -4.6628007888793945
    4. 'def' → logprob: -6.4128007888793945
    5. 'assign' → logprob: -6.4128007888793945
    6. 'result' → logprob: -7.1628007888793945
    7. ' assignments' → logprob: -7.2878007888793945
    8. '
' → logprob: -7.6628007888793945
    9. '#' → logprob: -7.6628007888793945
    10. 'from' → logprob: -7.7878007888793945

Token 352: ' yes' (ID: 14531)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9990864396095276
    2. ' True' → logprob: -1.4990863800048828
    3. 'True' → logprob: -1.4990863800048828
    4. ' any' → logprob: -2.374086380004883
    5. ' yes' → logprob: -3.499086380004883
    6. ' all' → logprob: -4.124086380004883
    7. 'yes' → logprob: -4.624086380004883
    8. ' len' → logprob: -4.999086380004883
    9. ' clauses' → logprob: -4.999086380004883
    10. 'any' → logprob: -4.999086380004883

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.594283938407898
    2. ':' → logprob: -0.844283938407898
    3. '   ' → logprob: -4.2192840576171875
    4. ':return' → logprob: -6.8442840576171875
    5. '       ' → logprob: -7.2192840576171875
    6. ':
' → logprob: -7.5942840576171875
    7. ' for' → logprob: -8.094284057617188
    8. ' ,' → logprob: -8.219284057617188
    9. ' :' → logprob: -8.969284057617188
    10. '    ' → logprob: -8.969284057617188

Token 354: ' then' (ID: 1815)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08464473485946655
    2. 'return' → logprob: -2.5846447944641113
    3. '       ' → logprob: -5.209644794464111
    4. '   ' → logprob: -8.834644317626953
    5. ' for' → logprob: -9.209644317626953
    6. '#' → logprob: -11.834644317626953
    7. '	return' → logprob: -11.834644317626953
    8. 'for' → logprob: -12.209644317626953
    9. ' #' → logprob: -12.709644317626953
    10. 'def' → logprob: -13.459644317626953

Token 355: ' overall' (ID: 10705)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20457035303115845
    2. ' return' → logprob: -1.7045702934265137
    3. '   ' → logprob: -6.204570293426514
    4. '       ' → logprob: -6.954570293426514
    5. ' for' → logprob: -9.204570770263672
    6. 'for' → logprob: -10.204570770263672
    7. '	return' → logprob: -10.954570770263672
    8. '#' → logprob: -11.954570770263672
    9. '           ' → logprob: -12.204570770263672
    10. 'def' → logprob: -12.954570770263672

Token 356: ' expression' (ID: 12973)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48262324929237366
    2. 'return' → logprob: -0.9826232194900513
    3. '   ' → logprob: -4.857623100280762
    4. ' True' → logprob: -7.607623100280762
    5. ' expression' → logprob: -8.857623100280762
    6. 'True' → logprob: -10.357623100280762
    7. 'expression' → logprob: -10.357623100280762
    8. '
' → logprob: -12.107623100280762
    9. ':return' → logprob: -12.107623100280762
    10. '       ' → logprob: -12.607623100280762

Token 357: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3456572890281677
    2. ' return' → logprob: -1.7206573486328125
    3. 'return' → logprob: -2.5956573486328125
    4. 'is' → logprob: -3.7206573486328125
    5. '   ' → logprob: -4.8456573486328125
    6. ' can' → logprob: -5.3456573486328125
    7. ' returns' → logprob: -7.7206573486328125
    8. '#' → logprob: -7.8456573486328125
    9. ' has' → logprob: -7.8456573486328125
    10. ' will' → logprob: -9.095657348632812

Token 358: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0789315402507782
    2. ' True' → logprob: -2.5789315700531006
    3. 'true' → logprob: -10.70393180847168
    4. 'return' → logprob: -11.70393180847168
    5. '   ' → logprob: -12.07893180847168
    6. '"' → logprob: -12.95393180847168
    7. '```' → logprob: -14.45393180847168
    8. ''' → logprob: -14.70393180847168
    9. ' true' → logprob: -14.95393180847168
    10. '`' → logprob: -14.95393180847168

Token 359: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018383220303803682
    2. '.' → logprob: -7.376838207244873
    3. '    
' → logprob: -7.876838207244873
    4. ',' → logprob: -8.251838684082031
    5. 'def' → logprob: -8.626838684082031
    6. ' for' → logprob: -8.751838684082031
    7. ':' → logprob: -9.501838684082031
    8. 'import' → logprob: -9.626838684082031
    9. '
' → logprob: -9.876838684082031
    10. 'for' → logprob: -11.501838684082031

Token 360: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034660715609788895
    2. '    
' → logprob: -6.5034661293029785
    3. ' for' → logprob: -7.0034661293029785
    4. '
' → logprob: -7.1284661293029785
    5. 'for' → logprob: -8.50346565246582
    6. 'def' → logprob: -11.12846565246582
    7. '    ' → logprob: -11.87846565246582
    8. '        
' → logprob: -12.25346565246582
    9. 'import' → logprob: -12.37846565246582
    10. '    
    
' → logprob: -12.62846565246582

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.469590491382405e-05
    2. 'def' → logprob: -10.87507438659668
    3. 'import' → logprob: -11.50007438659668
    4. '
' → logprob: -11.50007438659668
    5. 'for' → logprob: -11.50007438659668
    6. 'from' → logprob: -11.75007438659668
    7. '    
' → logprob: -11.87507438659668
    8. ' for' → logprob: -11.87507438659668
    9. 'variables' → logprob: -13.00007438659668
    10. ' from' → logprob: -14.50007438659668

Token 362: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5727250576019287
    2. 'for' → logprob: -1.3227250576019287
    3. ' for' → logprob: -1.9477250576019287
    4. 'def' → logprob: -4.322725296020508
    5. 'variables' → logprob: -5.322725296020508
    6. 'var' → logprob: -5.822725296020508
    7. 'variable' → logprob: -7.197725296020508
    8. 'from' → logprob: -7.197725296020508
    9. '#' (adapté à ' #') → logprob: -7.447725296020508
    10. 'assign' → logprob: -7.822725296020508

Token 363: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39803633093833923
    2. 'variables' → logprob: -1.8980363607406616
    3. 'vars' → logprob: -3.148036241531372
    4. 'def' → logprob: -3.273036241531372
    5. 'var' → logprob: -3.648036241531372
    6. '   ' → logprob: -3.648036241531372
    7. 'from' → logprob: -4.398036479949951
    8. ' for' → logprob: -4.648036479949951
    9. 'assign' → logprob: -4.648036479949951
    10. '#' → logprob: -4.773036479949951

Token 364: ' a' (ID: 261)
  Prédit: ' clause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.04661628603935242
    2. 'cl' → logprob: -3.671616315841675
    3. ' l' → logprob: -4.671616077423096
    4. ' cl' → logprob: -5.921616077423096
    5. ' c' → logprob: -6.046616077423096
    6. ' literal' → logprob: -6.171616077423096
    7. ' lit' → logprob: -6.421616077423096
    8. ' each' → logprob: -7.671616077423096
    9. ' var' → logprob: -7.796616077423096
    10. 'lit' → logprob: -7.921616077423096

Token 365: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.06824908405542374
    2. 'cl' → logprob: -3.193248987197876
    3. 'll' → logprob: -4.568249225616455
    4. 'l' → logprob: -5.443249225616455
    5. ' c' → logprob: -5.818249225616455
    6. ' l' → logprob: -6.318249225616455
    7. 'c' → logprob: -6.693249225616455
    8. ' ll' → logprob: -6.693249225616455
    9. ' literal' → logprob: -7.193249225616455
    10. 'literal' → logprob: -7.693249225616455

Token 366: ' l' (ID: 305)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021665559615939856
    2. '   ' → logprob: -6.502166748046875
    3. ',' → logprob: -8.252166748046875
    4. ':' → logprob: -8.877166748046875
    5. 'in' → logprob: -9.252166748046875
    6. ' for' → logprob: -10.127166748046875
    7. '    ' → logprob: -10.627166748046875
    8. ' clause' → logprob: -11.002166748046875
    9. ' to' → logprob: -11.127166748046875
    10. ' ' → logprob: -11.127166748046875

Token 367: '1' (ID: 16)
  Prédit: 'iterals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iterals' → logprob: -0.5863980054855347
    2. '   ' → logprob: -2.211398124694824
    3. 'iteral' → logprob: -2.211398124694824
    4. 'ist' → logprob: -2.336398124694824
    5. ' =' → logprob: -3.836398124694824
    6. 'i' → logprob: -3.961398124694824
    7. 'iter' → logprob: -3.961398124694824
    8. 'ength' → logprob: -4.336398124694824
    9. 'e' → logprob: -4.586398124694824
    10. 'en' → logprob: -5.211398124694824

Token 368: ' &' (ID: 827)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21429131925106049
    2. ' in' → logprob: -1.9642913341522217
    3. 's' → logprob: -4.089291095733643
    4. ' ,' → logprob: -4.589291095733643
    5. '   ' → logprob: -4.589291095733643
    6. ' =' → logprob: -5.464291095733643
    7. '=' → logprob: -6.089291095733643
    8. ' for' → logprob: -6.464291095733643
    9. 'iterals' → logprob: -7.089291095733643
    10. 'if' → logprob: -7.339291095733643

Token 369: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10023168474435806
    2. ' l' → logprob: -2.350231647491455
    3. '_' → logprob: -11.600232124328613
    4. '&' → logprob: -11.600232124328613
    5. '_l' → logprob: -12.475232124328613
    6. ' ' → logprob: -13.850232124328613
    7. ' &' → logprob: -14.475232124328613
    8. '	l' → logprob: -14.975232124328613
    9. ' _' → logprob: -15.100232124328613
    10. '   ' → logprob: -15.975232124328613

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011552204377949238
    2. 'l' → logprob: -7.501155376434326
    3. 'i' → logprob: -8.501154899597168
    4. 'it' → logprob: -8.626154899597168
    5. 'iteral' → logprob: -8.751154899597168
    6. '_' → logprob: -10.251154899597168
    7. 'iterals' → logprob: -11.876154899597168
    8. '&' → logprob: -12.126154899597168
    9. '3' → logprob: -12.751154899597168
    10. '_i' → logprob: -13.126154899597168

Token 371: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.10022737830877304
    2. '&' → logprob: -2.3502273559570312
    3. ' ' → logprob: -12.725227355957031
    4. ' &_' → logprob: -13.100227355957031
    5. ' &
' → logprob: -13.100227355957031
    6. '   ' → logprob: -13.225227355957031
    7. ' &=' → logprob: -13.850227355957031
    8. '...' → logprob: -13.975227355957031
    9. '&amp' → logprob: -14.100227355957031
    10. '&nbsp' → logprob: -14.100227355957031

Token 372: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.12693314254283905
    2. 'l' → logprob: -2.1269330978393555
    3. ' ' → logprob: -12.751933097839355
    4. '&' → logprob: -14.376933097839355
    5. '_' → logprob: -14.876933097839355
    6. '	l' → logprob: -15.501933097839355
    7. '   ' → logprob: -15.751933097839355
    8. ' ' → logprob: -15.876933097839355
    9. '_l' → logprob: -16.376934051513672
    10. ' &' → logprob: -16.501934051513672

Token 373: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002644351334311068
    2. '_' → logprob: -8.875264167785645
    3. 'iteral' → logprob: -10.125264167785645
    4. 'i' → logprob: -10.250264167785645
    5. 'it' → logprob: -10.875264167785645
    6. 'iter' → logprob: -11.125264167785645
    7. '_i' → logprob: -12.500264167785645
    8. '2' → logprob: -12.500264167785645
    9. 'l' → logprob: -13.000264167785645
    10. 'iterals' → logprob: -13.375264167785645

Token 374: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6969584822654724
    2. ',' → logprob: -0.8219584822654724
    3. '   ' → logprob: -2.821958541870117
    4. ':
' → logprob: -6.821958541870117
    5. 'def' → logprob: -7.946958541870117
    6. ' :' → logprob: -7.946958541870117
    7. ' ,' → logprob: -8.071958541870117
    8. ' in' → logprob: -9.071958541870117
    9. '):' → logprob: -9.071958541870117
    10. ' for' → logprob: -9.196958541870117

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049277544021606445
    2. '#' → logprob: -5.504927635192871
    3. ' #' → logprob: -7.629927635192871
    4. 'def' → logprob: -8.504927635192871
    5. '    
' → logprob: -9.754927635192871
    6. ' for' → logprob: -10.504927635192871
    7. '    ' → logprob: -10.629927635192871
    8. 'tokens' → logprob: -12.004927635192871
    9. ' ' → logprob: -12.254927635192871
    10. ':' → logprob: -12.379927635192871

Token 376: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12768076360225677
    2. '#' (adapté à ' #') → logprob: -2.377680778503418
    3. ' #' → logprob: -4.127680778503418
    4. 'def' → logprob: -5.002680778503418
    5. ' for' → logprob: -6.002680778503418
    6. 'for' → logprob: -8.127680778503418
    7. ' variables' → logprob: -8.252680778503418
    8. 'variables' → logprob: -8.377680778503418
    9. '    
' → logprob: -8.502680778503418
    10. ' def' → logprob: -8.752680778503418

Token 377: ' each' (ID: 2454)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.399645447731018
    2. '   ' → logprob: -1.649645447731018
    3. '#' → logprob: -1.774645447731018
    4. 'def' → logprob: -2.5246453285217285
    5. ' #' → logprob: -3.0246453285217285
    6. 'assign' → logprob: -3.0246453285217285
    7. 'for' → logprob: -3.1496453285217285
    8. ' variables' → logprob: -3.2746453285217285
    9. ' assignments' → logprob: -3.2746453285217285
    10. 'variables' → logprob: -4.0246453285217285

Token 378: ' literal' (ID: 41271)
  Prédit: ' literal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' literal' → logprob: -0.006665519904345274
    2. 'literal' → logprob: -5.1316657066345215
    3. ' l' → logprob: -8.256665229797363
    4. '_literal' → logprob: -8.506665229797363
    5. ' token' → logprob: -8.881665229797363
    6. 'l' → logprob: -10.131665229797363
    7. ' of' → logprob: -10.131665229797363
    8. '_' → logprob: -11.381665229797363
    9. ' variable' → logprob: -11.631665229797363
    10. ' clause' → logprob: -12.256665229797363

Token 379: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.44724708795547485
    2. ' =' → logprob: -1.82224702835083
    3. ' is' → logprob: -1.82224702835083
    4. ' may' → logprob: -4.32224702835083
    5. 'can' → logprob: -5.32224702835083
    6. ' must' → logprob: -5.82224702835083
    7. '=' → logprob: -5.82224702835083
    8. ' could' → logprob: -5.94724702835083
    9. ' has' → logprob: -6.07224702835083
    10. ' either' → logprob: -6.57224702835083

Token 380: ' either' (ID: 4784)
  Prédit: ' either'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' either' → logprob: -0.3930516541004181
    2. 'either' → logprob: -1.2680516242980957
    3. 'a' → logprob: -3.2680516242980957
    4. ' a' → logprob: -5.268051624298096
    5. 'e' → logprob: -9.393052101135254
    6. '   ' → logprob: -9.643052101135254
    7. 'variable' → logprob: -10.268052101135254
    8. 'var' → logprob: -10.643052101135254
    9. '(variable' → logprob: -10.768052101135254
    10. ' ' → logprob: -11.143052101135254

Token 381: ' var' (ID: 972)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08352500200271606
    2. ' a' → logprob: -3.7085249423980713
    3. 'positive' → logprob: -3.7085249423980713
    4. 'neg' → logprob: -3.9585249423980713
    5. 'variable' → logprob: -5.33352518081665
    6. ' positive' → logprob: -5.70852518081665
    7. ' neg' → logprob: -5.95852518081665
    8. 'var' → logprob: -7.08352518081665
    9. ' variable' → logprob: -8.708524703979492
    10. '   ' → logprob: -9.583524703979492

Token 382: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4346162676811218
    2. 'iable' → logprob: -1.0596163272857666
    3. ',' → logprob: -6.1846160888671875
    4. 'or' → logprob: -7.0596160888671875
    5. ' ' → logprob: -7.4346160888671875
    6. '=' → logprob: -7.4346160888671875
    7. '   ' → logprob: -8.184616088867188
    8. 'name' → logprob: -8.184616088867188
    9. 'ar' → logprob: -8.434616088867188
    10. '_name' → logprob: -8.559616088867188

Token 383: ' ~' (ID: 6574)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -0.01904473640024662
    2. ''' → logprob: -4.769044876098633
    3. ' ~' → logprob: -5.394044876098633
    4. 'not' → logprob: -5.644044876098633
    5. 'neg' → logprob: -7.019044876098633
    6. ' not' → logprob: -7.269044876098633
    7. '!' → logprob: -8.269044876098633
    8. ' '~' → logprob: -8.894044876098633
    9. ' neg' → logprob: -9.269044876098633
    10. '"' → logprob: -9.894044876098633

Token 384: 'var' (ID: 1465)
  Prédit: 'var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.002490045502781868
    2. ' var' → logprob: -6.002490043640137
    3. ')var' → logprob: -11.877490043640137
    4. 'variable' → logprob: -12.627490043640137
    5. '_var' → logprob: -13.752490043640137
    6. '[var' → logprob: -14.002490043640137
    7. '<|end|>' → logprob: -14.252490043640137
    8. ' ' → logprob: -15.752490043640137
    9. '(var' → logprob: -15.877490043640137
    10. '	var' → logprob: -15.877490043640137

Token 385: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009045863524079323
    2. 'def' → logprob: -5.5090460777282715
    3. '    
' → logprob: -5.8840460777282715
    4. '
' → logprob: -6.3840460777282715
    5. 'variables' → logprob: -9.134045600891113
    6. ',' → logprob: -9.259045600891113
    7. 'import' → logprob: -9.884045600891113
    8. ' variables' → logprob: -10.259045600891113
    9. '.' → logprob: -10.259045600891113
    10. '<|end|>' → logprob: -10.884045600891113

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004799749702215195
    2. 'def' → logprob: -6.504799842834473
    3. 'variables' → logprob: -7.004799842834473
    4. '    
' → logprob: -7.254799842834473
    5. ' variables' → logprob: -7.629799842834473
    6. 'tokens' → logprob: -7.879799842834473
    7. ' for' → logprob: -8.504799842834473
    8. '#' → logprob: -8.504799842834473
    9. ' tokens' → logprob: -9.129799842834473
    10. '
' → logprob: -9.754799842834473

Token 387: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00877127330750227
    2. ' variables' → logprob: -5.5087714195251465
    3. '    
' → logprob: -6.2587714195251465
    4. 'variables' → logprob: -6.5087714195251465
    5. 'def' → logprob: -8.008770942687988
    6. ' vars' → logprob: -8.258770942687988
    7. ' for' → logprob: -8.883770942687988
    8. '
' → logprob: -9.758770942687988
    9. 'vars' → logprob: -9.758770942687988
    10. ' variable' → logprob: -10.008770942687988

Token 388: ' To' (ID: 2514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26685410737991333
    2. 'variables' → logprob: -2.7668540477752686
    3. 'def' → logprob: -2.7668540477752686
    4. 'vars' → logprob: -3.0168540477752686
    5. ' variables' → logprob: -3.7668540477752686
    6. ' vars' → logprob: -3.8918540477752686
    7. 'var' → logprob: -5.516854286193848
    8. ' def' → logprob: -5.766854286193848
    9. 'from' → logprob: -6.391854286193848
    10. ' var' → logprob: -6.516854286193848

Token 389: ' satisfy' (ID: 35441)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -1.2818183898925781
    2. ' check' → logprob: -1.6568183898925781
    3. ' make' → logprob: -2.156818389892578
    4. ' satisfy' → logprob: -2.156818389892578
    5. 'solve' → logprob: -2.656818389892578
    6. 's' → logprob: -2.906818389892578
    7. 'check' → logprob: -3.156818389892578
    8. ' find' → logprob: -3.406818389892578
    9. 'def' → logprob: -3.656818389892578
    10. 'assign' → logprob: -4.156818389892578

Token 390: ' literal' (ID: 41271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9763197302818298
    2. 'the' → logprob: -1.2263197898864746
    3. 'all' → logprob: -2.7263197898864746
    4. ' the' → logprob: -2.7263197898864746
    5. ' a' → logprob: -2.9763197898864746
    6. 'each' → logprob: -2.9763197898864746
    7. 'cl' → logprob: -3.2263197898864746
    8. ' all' → logprob: -3.4763197898864746
    9. ' each' → logprob: -4.476319789886475
    10. 'it' → logprob: -4.976319789886475

Token 391: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1697864532470703
    2. ' ,' → logprob: -2.1697864532470703
    3. ' ' → logprob: -3.6697864532470703
    4. ''' → logprob: -5.16978645324707
    5. '_' → logprob: -5.66978645324707
    6. ' l' → logprob: -6.29478645324707
    7. ' '' → logprob: -6.29478645324707
    8. 's' → logprob: -7.16978645324707
    9. ' _' → logprob: -7.91978645324707
    10. ' s' → logprob: -7.91978645324707

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05233699828386307
    2. ' #' → logprob: -3.9273369312286377
    3. ' if' → logprob: -4.427337169647217
    4. '#' → logprob: -5.177337169647217
    5. ' for' → logprob: -5.302337169647217
    6. '       ' → logprob: -6.052337169647217
    7. ',' → logprob: -6.177337169647217
    8. '    ' → logprob: -6.552337169647217
    9. ' variable' → logprob: -7.802337169647217
    10. ' var' → logprob: -8.177336692810059

Token 393: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28884026408195496
    2. ' if' → logprob: -1.5388402938842773
    3. ' for' → logprob: -4.288840293884277
    4. ' #' → logprob: -5.163840293884277
    5. 'if' → logprob: -5.538840293884277
    6. '#' (adapté à ' #') → logprob: -5.538840293884277
    7. '       ' → logprob: -6.413840293884277
    8. '    ' → logprob: -6.538840293884277
    9. ' var' → logprob: -6.788840293884277
    10. ' variable' → logprob: -6.913840293884277

Token 394: '  ' (ID: 256)
  Prédit: ' var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.7106739282608032
    2. '   ' → logprob: -1.2106739282608032
    3. ' if' → logprob: -2.4606738090515137
    4. ' variable' → logprob: -3.3356738090515137
    5. ' for' → logprob: -3.4606738090515137
    6. 'var' → logprob: -4.085673809051514
    7. ' return' → logprob: -4.210673809051514
    8. ' #' → logprob: -5.085673809051514
    9. '#' → logprob: -5.585673809051514
    10. '    ' → logprob: -5.960673809051514

Token 395: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -0.48423269391059875
    2. ' var' → logprob: -1.3592326641082764
    3. 'if' → logprob: -2.6092326641082764
    4. ' if' → logprob: -3.2342326641082764
    5. 'If' → logprob: -5.7342329025268555
    6. '   ' → logprob: -5.8592329025268555
    7. 'v' → logprob: -6.6092329025268555
    8. 'variable' → logprob: -6.7342329025268555
    9. ' variable' → logprob: -6.8592329025268555
    10. 'for' → logprob: -6.9842329025268555

Token 396: ' means' (ID: 4748)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5853018760681152
    2. '=' → logprob: -1.0853018760681152
    3. ' must' → logprob: -3.5853018760681152
    4. '==' → logprob: -3.7103018760681152
    5. ' ==' → logprob: -3.9603018760681152
    6. '=True' → logprob: -4.460301876068115
    7. ' is' → logprob: -4.585301876068115
    8. ' should' → logprob: -5.335301876068115
    9. ' ' → logprob: -6.085301876068115
    10. 'must' → logprob: -6.335301876068115

Token 397: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.7438361644744873
    2. 'var' → logprob: -0.9938361644744873
    3. 'the' → logprob: -3.1188361644744873
    4. 'assign' → logprob: -3.1188361644744873
    5. ' variable' → logprob: -3.4938361644744873
    6. ' the' → logprob: -4.993836402893066
    7. 'True' → logprob: -5.118836402893066
    8. ' var' → logprob: -5.243836402893066
    9. 'that' → logprob: -5.618836402893066
    10. ' that' → logprob: -6.118836402893066

Token 398: ' True' (ID: 6432)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3068823218345642
    2. ' =' → logprob: -1.806882381439209
    3. ' is' → logprob: -3.431882381439209
    4. ' should' → logprob: -3.806882381439209
    5. '=True' → logprob: -3.931882381439209
    6. '==' → logprob: -4.681882381439209
    7. ' must' → logprob: -5.056882381439209
    8. ' ==' → logprob: -5.306882381439209
    9. ' True' → logprob: -6.181882381439209
    10. '<|end|>' → logprob: -7.431882381439209

Token 399: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03425619378685951
    2. ' or' → logprob: -3.7842562198638916
    3. ',' → logprob: -4.9092559814453125
    4. '    
' → logprob: -7.0342559814453125
    5. '
' → logprob: -7.1592559814453125
    6. '       ' → logprob: -7.7842559814453125
    7. '  ' → logprob: -8.159255981445312
    8. ',
' → logprob: -8.159255981445312
    9. '.' → logprob: -8.409255981445312
    10. ' ' → logprob: -8.659255981445312

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32438021898269653
    2. '#' → logprob: -1.3243801593780518
    3. ',' → logprob: -5.199380397796631
    4. ' or' → logprob: -6.199380397796631
    5. '       ' → logprob: -6.574380397796631
    6. ' ' → logprob: -7.449380397796631
    7. ' #' → logprob: -7.449380397796631
    8. '  ' → logprob: -8.199379920959473
    9. '.' → logprob: -8.699379920959473
    10. '           ' → logprob: -9.074379920959473

Token 401: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1446932554244995
    2. '   ' → logprob: -2.019693374633789
    3. ',' → logprob: -7.644693374633789
    4. ' ' → logprob: -7.894693374633789
    5. ' #' → logprob: -7.894693374633789
    6. '       ' → logprob: -8.144693374633789
    7. ' or' → logprob: -8.394693374633789
    8. '  ' → logprob: -8.894693374633789
    9. ''' → logprob: -10.644693374633789
    10. '    ' → logprob: -10.644693374633789

Token 402: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046656664460897446
    2. ' ' → logprob: -3.421656608581543
    3. ' or' → logprob: -4.796656608581543
    4. '  ' → logprob: -6.796656608581543
    5. ',' → logprob: -6.921656608581543
    6. '#' → logprob: -8.171656608581543
    7. ' next' → logprob: -8.296656608581543
    8. 'token' → logprob: -8.296656608581543
    9. '       ' → logprob: -8.421656608581543
    10. '    ' → logprob: -8.921656608581543

Token 403: ' ~' (ID: 6574)
  Prédit: '~'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' (adapté à ' ~') → logprob: -0.002519061556085944
    2. ' ~' → logprob: -6.127519130706787
    3. ''' → logprob: -8.377518653869629
    4. 'var' → logprob: -10.627518653869629
    5. '~
' → logprob: -10.877518653869629
    6. ' ' → logprob: -11.377518653869629
    7. 'not' → logprob: -11.377518653869629
    8. '=' → logprob: -11.752518653869629
    9. ' '~' → logprob: -12.002518653869629
    10. ' not' → logprob: -12.002518653869629

Token 404: 'var' (ID: 1465)
  Prédit: 'var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.00011999329581158236
    2. ' var' → logprob: -9.125120162963867
    3. 'variable' → logprob: -11.875120162963867
    4. 'v' → logprob: -13.250120162963867
    5. ')var' → logprob: -14.000120162963867
    6. '<|end|>' → logprob: -14.500120162963867
    7. '[var' → logprob: -15.125120162963867
    8. 'vara' → logprob: -15.250120162963867
    9. ' ' → logprob: -16.125120162963867
    10. 'vars' → logprob: -16.500120162963867

Token 405: ' means' (ID: 4748)
  Prédit: ' means'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' means' → logprob: -0.12695415318012238
    2. 'means' → logprob: -2.1269540786743164
    3. 'mean' → logprob: -11.251954078674316
    4. ' ' → logprob: -11.876954078674316
    5. ' mean' → logprob: -12.626954078674316
    6. ' ' → logprob: -13.751954078674316
    7. 'Means' → logprob: -14.501954078674316
    8. ',' → logprob: -15.251954078674316
    9. 'meaning' → logprob: -15.751954078674316
    10. '<|end|>' → logprob: -16.001955032348633

Token 406: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.10027308762073517
    2. 'variable' → logprob: -2.3502731323242188
    3. 'var' → logprob: -10.350273132324219
    4. 'False' → logprob: -11.350273132324219
    5. ' False' → logprob: -11.600273132324219
    6. ' ' → logprob: -11.850273132324219
    7. 'not' → logprob: -13.225273132324219
    8. ' not' → logprob: -13.225273132324219
    9. ' var' → logprob: -13.350273132324219
    10. '  ' → logprob: -14.600273132324219

Token 407: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12697693705558777
    2. ' False' → logprob: -2.12697696685791
    3. '=False' → logprob: -10.25197696685791
    4. ' is' → logprob: -11.50197696685791
    5. '(False' → logprob: -14.00197696685791
    6. 'True' → logprob: -14.37697696685791
    7. '_false' → logprob: -14.75197696685791
    8. '==' → logprob: -14.75197696685791
    9. ' must' → logprob: -15.00197696685791
    10. 'is' → logprob: -15.37697696685791

Token 408: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10690753161907196
    2. 'def' → logprob: -2.856907606124878
    3. '    
' → logprob: -3.606907606124878
    4. '
' → logprob: -4.231907367706299
    5. 'variables' → logprob: -7.106907367706299
    6. '  
' → logprob: -7.856907367706299
    7. ' def' → logprob: -8.606907844543457
    8. '   
' → logprob: -8.606907844543457
    9. ' variables' → logprob: -8.856907844543457
    10. 'from' → logprob: -9.606907844543457

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032898937352001667
    2. '    
' → logprob: -6.253289699554443
    3. 'def' → logprob: -7.003289699554443
    4. 'variables' → logprob: -8.253290176391602
    5. ' variables' → logprob: -9.503290176391602
    6. '
' → logprob: -10.003290176391602
    7. '#' → logprob: -10.753290176391602
    8. 'from' → logprob: -11.503290176391602
    9. ' for' → logprob: -12.128290176391602
    10. 'import' → logprob: -12.378290176391602

Token 410: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006517121568322182
    2. '    
' → logprob: -6.131516933441162
    3. 'variables' → logprob: -6.631516933441162
    4. 'def' → logprob: -6.881516933441162
    5. ' variables' → logprob: -6.881516933441162
    6. ' assignments' → logprob: -9.13151741027832
    7. ' vars' → logprob: -9.38151741027832
    8. 'assign' → logprob: -9.50651741027832
    9. ' variable' → logprob: -9.50651741027832
    10. 'vars' → logprob: -9.63151741027832

Token 411: ' Check' (ID: 6208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048671167343854904
    2. 'def' → logprob: -3.923671245574951
    3. 'variables' → logprob: -4.798671245574951
    4. 'vars' → logprob: -4.923671245574951
    5. 'assign' → logprob: -5.173671245574951
    6. 'var' → logprob: -5.548671245574951
    7. '    
' → logprob: -7.298671245574951
    8. 'assigned' → logprob: -7.923671245574951
    9. 'assignment' → logprob: -8.048670768737793
    10. ' vars' → logprob: -8.298670768737793

Token 412: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5948922634124756
    2. ' for' → logprob: -0.9698922634124756
    3. ' each' → logprob: -3.9698922634124756
    4. ' all' → logprob: -4.094892501831055
    5. 'for' → logprob: -4.469892501831055
    6. '   ' → logprob: -4.719892501831055
    7. ' clauses' → logprob: -5.594892501831055
    8. ' variables' → logprob: -5.969892501831055
    9. 'if' → logprob: -6.719892501831055
    10. ' from' → logprob: -6.719892501831055

Token 413: ' conflicts' (ID: 50037)
  Prédit: ' conflicts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflicts' → logprob: -0.3996277451515198
    2. 'conf' → logprob: -2.149627685546875
    3. ' contradictions' → logprob: -2.649627685546875
    4. ' each' → logprob: -2.774627685546875
    5. 'each' → logprob: -3.649627685546875
    6. 'contr' → logprob: -3.899627685546875
    7. ' contradiction' → logprob: -4.649627685546875
    8. ' conflict' → logprob: -4.649627685546875
    9. ' clause' → logprob: -5.774627685546875
    10. 'cons' → logprob: -6.899627685546875

Token 414: ' inside' (ID: 6772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5863034725189209
    2. ' for' → logprob: -0.8363034725189209
    3. 'def' → logprob: -5.4613037109375
    4. ':' → logprob: -6.8363037109375
    5. ' in' → logprob: -6.8363037109375
    6. 'for' → logprob: -6.8363037109375
    7. ' def' → logprob: -6.9613037109375
    8. ' =' → logprob: -7.3363037109375
    9. ' variables' → logprob: -8.5863037109375
    10. ' from' → logprob: -8.7113037109375

Token 415: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.2553216814994812
    2. 'def' → logprob: -1.880321741104126
    3. 'cla' → logprob: -3.380321741104126
    4. '   ' → logprob: -4.630321502685547
    5. 'for' → logprob: -4.630321502685547
    6. 'the' → logprob: -4.755321502685547
    7. 'each' → logprob: -5.005321502685547
    8. ' clause' → logprob: -6.130321502685547
    9. ' the' → logprob: -7.880321502685547
    10. ' each' → logprob: -8.255321502685547

Token 416: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025248879101127386
    2. 'def' → logprob: -6.3775248527526855
    3. '    
' → logprob: -7.8775248527526855
    4. ' for' → logprob: -8.002525329589844
    5. '
' → logprob: -10.252525329589844
    6. 'for' → logprob: -11.002525329589844
    7. ' def' → logprob: -11.252525329589844
    8. ',' → logprob: -11.627525329589844
    9. 'variables' → logprob: -12.377525329589844
    10. ' =' → logprob: -12.502525329589844

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3319124011322856e-05
    2. 'def' → logprob: -11.500022888183594
    3. '    
' → logprob: -11.625022888183594
    4. ' for' → logprob: -13.125022888183594
    5. 'for' → logprob: -14.250022888183594
    6. '
' → logprob: -14.625022888183594
    7. '```' → logprob: -15.000022888183594
    8. '       ' → logprob: -15.125022888183594
    9. '    ' → logprob: -15.250022888183594
    10. ' def' → logprob: -15.750022888183594

Token 418: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029557161033153534
    2. ' for' → logprob: -7.377955913543701
    3. ' vars' → logprob: -7.502955913543701
    4. ' variables' → logprob: -7.627955913543701
    5. 'def' → logprob: -7.752955913543701
    6. 'variables' → logprob: -7.877955913543701
    7. 'vars' → logprob: -8.377955436706543
    8. 'for' → logprob: -9.002955436706543
    9. 'var' → logprob: -10.752955436706543
    10. ' var' → logprob: -10.877955436706543

Token 419: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05036010593175888
    2. 'for' → logprob: -3.6753602027893066
    3. ' for' → logprob: -4.175360202789307
    4. 'def' → logprob: -4.800360202789307
    5. 'variables' → logprob: -9.550359725952148
    6. ' def' → logprob: -9.675359725952148
    7. ' variables' → logprob: -10.800359725952148
    8. '
' → logprob: -12.425359725952148
    9. '  ' → logprob: -12.800359725952148
    10. '```' → logprob: -12.800359725952148

Token 420: ' clause' (ID: 45470)
  Prédit: ' clause'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clause' → logprob: -0.5644633769989014
    2. 'cl' → logprob: -1.5644633769989014
    3. ' literal' → logprob: -2.4394633769989014
    4. 'literal' → logprob: -2.5644633769989014
    5. 'lit' → logprob: -3.1894633769989014
    6. ' lit' → logprob: -5.1894636154174805
    7. ' cl' → logprob: -5.4394636154174805
    8. ' each' → logprob: -6.1894636154174805
    9. 'l' → logprob: -6.6894636154174805
    10. ' l' → logprob: -6.9394636154174805

Token 421: ' to' (ID: 316)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.211897611618042
    2. '   ' → logprob: -2.086897611618042
    3. ',' → logprob: -4.086897850036621
    4. ':' → logprob: -4.086897850036621
    5. '_literals' → logprob: -4.711897850036621
    6. '_vars' → logprob: -4.961897850036621
    7. 'in' → logprob: -5.211897850036621
    8. 'variables' → logprob: -6.461897850036621
    9. ' literals' → logprob: -6.461897850036621
    10. ' variables' → logprob: -6.586897850036621

Token 422: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6384669542312622
    2. 'be' → logprob: -0.7634669542312622
    3. 's' → logprob: -5.513466835021973
    4. 'pass' → logprob: -7.888466835021973
    5. ' satisfy' → logprob: -8.263466835021973
    6. 'continue' → logprob: -8.763466835021973
    7. 'not' → logprob: -8.888466835021973
    8. ' not' → logprob: -8.888466835021973
    9. 'evaluate' → logprob: -8.888466835021973
    10. ' pass' → logprob: -9.013466835021973

Token 423: ' satisf' (ID: 8824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4774516224861145
    2. ' satisf' → logprob: -1.4774515628814697
    3. 'True' → logprob: -2.2274515628814697
    4. ' True' → logprob: -3.3524515628814697
    5. 'valid' → logprob: -5.852451801300049
    6. 'true' → logprob: -6.227451801300049
    7. 'possible' → logprob: -6.977451801300049
    8. 'sat' → logprob: -6.977451801300049
    9. ' satisfied' → logprob: -7.352451801300049
    10. 'fe' → logprob: -8.10245132446289

Token 424: 'iable' (ID: 144206)
  Prédit: 'iable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iable' → logprob: -0.3488405644893646
    2. 'ied' → logprob: -1.223840594291687
    3. 'i' → logprob: -8.348840713500977
    4. 'able' → logprob: -9.473840713500977
    5. '```' → logprob: -10.723840713500977
    6. 'ed' → logprob: -11.723840713500977
    7. 'ified' → logprob: -11.848840713500977
    8. 'y' → logprob: -12.098840713500977
    9. '#' → logprob: -12.223840713500977
    10. '
' → logprob: -12.598840713500977

Token 425: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01754126325249672
    2. '   ' → logprob: -4.392541408538818
    3. ':' → logprob: -5.642541408538818
    4. 'for' → logprob: -7.017541408538818
    5. ' for' → logprob: -7.892541408538818
    6. 'def' → logprob: -9.89254093170166
    7. ' ,' → logprob: -10.39254093170166
    8. 'each' → logprob: -11.14254093170166
    9. '=' → logprob: -11.26754093170166
    10. ',
' → logprob: -11.51754093170166

Token 426: ' no' (ID: 860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004714445676654577
    2. 'def' → logprob: -5.879714488983154
    3. '       ' → logprob: -7.129714488983154
    4. 'variables' → logprob: -8.129714012145996
    5. ' variables' → logprob: -8.504714012145996
    6. ' for' → logprob: -8.629714012145996
    7. 'for' → logprob: -8.879714012145996
    8. ' def' → logprob: -9.379714012145996
    9. '```' → logprob: -10.004714012145996
    10. 'vars' → logprob: -10.254714012145996

Token 427: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.9238148331642151
    2. 'conf' → logprob: -1.7988147735595703
    3. ' conflicting' → logprob: -2.0488147735595703
    4. ' conflicts' → logprob: -2.2988147735595703
    5. ' conflict' → logprob: -2.6738147735595703
    6. 'variable' → logprob: -2.7988147735595703
    7. ' pair' → logprob: -3.6738147735595703
    8. ' two' → logprob: -3.9238147735595703
    9. ' contradictory' → logprob: -4.92381477355957
    10. 'contr' → logprob: -5.04881477355957

Token 428: ' conflicts' (ID: 50037)
  Prédit: ' appears'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appears' → logprob: -0.5347986221313477
    2. ' in' → logprob: -1.6597986221313477
    3. ' assigned' → logprob: -2.6597986221313477
    4. ' is' → logprob: -2.7847986221313477
    5. ' has' → logprob: -2.9097986221313477
    6. ' can' → logprob: -4.159798622131348
    7. 'appe' → logprob: -5.159798622131348
    8. ' occurs' → logprob: -5.909798622131348
    9. ' conflicts' → logprob: -6.034798622131348
    10. ' should' → logprob: -6.159798622131348

Token 429: ' inside' (ID: 6772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004926446825265884
    2. ' for' → logprob: -5.879926681518555
    3. ',' → logprob: -7.129926681518555
    4. '    
' → logprob: -7.879926681518555
    5. 'def' → logprob: -8.629926681518555
    6. 'for' → logprob: -8.754926681518555
    7. '.' → logprob: -8.879926681518555
    8. ' in' → logprob: -9.129926681518555
    9. ':' → logprob: -10.004926681518555
    10. '       ' → logprob: -10.129926681518555

Token 430: ' the' (ID: 290)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.1538861095905304
    2. ' clause' → logprob: -2.028886079788208
    3. ' for' → logprob: -5.528886318206787
    4. '   ' → logprob: -5.528886318206787
    5. 'for' → logprob: -6.903886318206787
    6. ' the' → logprob: -7.028886318206787
    7. 'literal' → logprob: -8.403885841369629
    8. 'l' → logprob: -8.528885841369629
    9. 'the' → logprob: -8.653885841369629
    10. ' literals' → logprob: -8.653885841369629

Token 431: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.0024700670037418604
    2. ' clause' → logprob: -6.127470016479492
    3. '3' → logprob: -8.752470016479492
    4. 'cla' → logprob: -9.377470016479492
    5. 'same' → logprob: -10.877470016479492
    6. ' ' → logprob: -12.002470016479492
    7. 'l' → logprob: -12.127470016479492
    8. ' three' → logprob: -12.752470016479492
    9. ' same' → logprob: -13.127470016479492
    10. 'three' → logprob: -13.377470016479492

Token 432: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007916301488876343
    2. '    
' → logprob: -5.257916450500488
    3. 'def' → logprob: -6.132916450500488
    4. '
' → logprob: -8.507916450500488
    5. ' for' → logprob: -9.132916450500488
    6. '   
' → logprob: -9.382916450500488
    7. ',' → logprob: -10.882916450500488
    8. '  
' → logprob: -10.882916450500488
    9. 'for' → logprob: -11.132916450500488
    10. ' def' → logprob: -11.257916450500488

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025987226981669664
    2. '    
' → logprob: -6.002598762512207
    3. '
' → logprob: -9.377598762512207
    4. 'def' → logprob: -10.752598762512207
    5. '   
' → logprob: -12.002598762512207
    6. '  
' → logprob: -12.877598762512207
    7. '    
    
' → logprob: -12.877598762512207
    8. '        
' → logprob: -13.377598762512207
    9. ' for' → logprob: -13.877598762512207
    10. '       ' → logprob: -14.627598762512207

Token 434: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008712020353414118
    2. 'def' → logprob: -7.500871181488037
    3. 'for' (adapté à ' for') → logprob: -8.500871658325195
    4. ' for' → logprob: -9.250871658325195
    5. '
' → logprob: -11.875871658325195
    6. '    
' → logprob: -12.625871658325195
    7. 'result' → logprob: -12.875871658325195
    8. 'results' → logprob: -13.125871658325195
    9. ' def' → logprob: -13.500871658325195
    10. 'variables' → logprob: -14.000871658325195

Token 435: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.2519815266132355
    2. ' clause' → logprob: -1.501981496810913
    3. 'cla' → logprob: -10.501981735229492
    4. 'cls' → logprob: -11.251981735229492
    5. ' cl' → logprob: -11.876981735229492
    6. '_clause' → logprob: -12.876981735229492
    7. 'c' → logprob: -14.626981735229492
    8. '   ' → logprob: -14.751981735229492
    9. ' claus' → logprob: -14.751981735229492
    10. '	cl' → logprob: -15.001981735229492

Token 436: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009798472747206688
    2. 'in' → logprob: -4.634798526763916
    3. '   ' → logprob: -10.384798049926758
    4. '  ' → logprob: -12.509798049926758
    5. ' ' → logprob: -13.384798049926758
    6. '	in' → logprob: -13.759798049926758
    7. '_in' → logprob: -13.884798049926758
    8. ')' → logprob: -14.009798049926758
    9. '_' → logprob: -14.259798049926758
    10. ':' → logprob: -14.259798049926758

Token 437: ' clauses' (ID: 99572)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.31330883502960205
    2. ' clauses' → logprob: -1.313308835029602
    3. '[' → logprob: -10.438308715820312
    4. '   ' → logprob: -11.688308715820312
    5. 'cl' → logprob: -12.688308715820312
    6. ')' → logprob: -13.188308715820312
    7. ' ' → logprob: -14.063308715820312
    8. '[]' → logprob: -14.563308715820312
    9. ' [' → logprob: -14.688308715820312
    10. '(' → logprob: -14.813308715820312

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005680450703948736
    2. '):' → logprob: -8.250568389892578
    3. ':
' → logprob: -8.250568389892578
    4. '       ' → logprob: -11.125568389892578
    5. '   ' → logprob: -11.250568389892578
    6. ' :' → logprob: -11.750568389892578
    7. '):
' → logprob: -12.875568389892578
    8. '=' → logprob: -13.250568389892578
    9. ' =' → logprob: -13.750568389892578
    10. '[' → logprob: -14.250568389892578

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003967071825172752
    2. '   ' → logprob: -8.250396728515625
    3. '        
' → logprob: -9.375396728515625
    4. '    ' → logprob: -11.000396728515625
    5. '      ' → logprob: -12.125396728515625
    6. '    
' → logprob: -12.125396728515625
    7. '	   ' → logprob: -12.250396728515625
    8. '<|end|>' → logprob: -12.625396728515625
    9. '     ' → logprob: -13.125396728515625
    10. '           ' → logprob: -13.500396728515625

Token 440: ' assignment' (ID: 24618)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16875049471855164
    2. 'vars' → logprob: -2.043750524520874
    3. ' vars' → logprob: -3.918750524520874
    4. 'assign' → logprob: -6.168750286102295
    5. 'variables' → logprob: -6.543750286102295
    6. 'var' → logprob: -6.668750286102295
    7. ' variables' → logprob: -8.293750762939453
    8. '   ' → logprob: -8.793750762939453
    9. ' var' → logprob: -9.293750762939453
    10. ' assignments' → logprob: -9.543750762939453

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759426355361938
    2. ' =' → logprob: -0.8259426355361938
    3. 's' → logprob: -13.200942993164062
    4. '   ' → logprob: -14.950942993164062
    5. ' ' → logprob: -15.075942993164062
    6. '={}' → logprob: -15.700942993164062
    7. '_' → logprob: -15.950942993164062
    8. ')' → logprob: -16.700942993164062
    9. '_=' → logprob: -16.700942993164062
    10. ',' → logprob: -16.825942993164062

Token 442: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.650518920039758e-06
    2. 'dict' → logprob: -13.000003814697266
    3. '{}
' → logprob: -13.750003814697266
    4. '{' → logprob: -15.750003814697266
    5. ' {}' → logprob: -16.375003814697266
    6. '{}

' → logprob: -17.625003814697266
    7. '{})' → logprob: -18.375003814697266
    8. '{}\' → logprob: -18.500003814697266
    9. '{},' → logprob: -19.250003814697266
    10. '={}' → logprob: -19.625003814697266

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00542383873835206
    2. ' for' → logprob: -5.5054240226745605
    3. '        
' → logprob: -6.8804240226745605
    4. '\' → logprob: -10.130423545837402
    5. '
' → logprob: -10.130423545837402
    6. '<|end|>' → logprob: -10.255423545837402
    7. 'for' → logprob: -10.380423545837402
    8. ' 
' → logprob: -10.380423545837402
    9. '   ' → logprob: -10.755423545837402
    10. '           ' → logprob: -11.380423545837402

Token 444: ' satisf' (ID: 8824)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.07069379091262817
    2. '       ' → logprob: -2.9456937313079834
    3. ' conflict' → logprob: -4.8206939697265625
    4. 'for' → logprob: -5.9456939697265625
    5. '           ' → logprob: -6.4456939697265625
    6. 'can' → logprob: -6.6956939697265625
    7. 'possible' → logprob: -7.3206939697265625
    8. ' satisf' → logprob: -8.070693969726562
    9. ' for' → logprob: -8.070693969726562
    10. 'valid' → logprob: -8.070693969726562

Token 445: 'iable' (ID: 144206)
  Prédit: 'iable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iable' → logprob: -0.016231313347816467
    2. 'ies' → logprob: -4.391231536865234
    3. 'i' → logprob: -6.016231536865234
    4. 'y' → logprob: -6.891231536865234
    5. 'ied' → logprob: -9.266231536865234
    6. '   ' → logprob: -9.516231536865234
    7. '```' → logprob: -10.766231536865234
    8. '       ' → logprob: -11.016231536865234
    9. 'a' → logprob: -11.641231536865234
    10. 'able' → logprob: -11.891231536865234

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741034209728241
    2. '=' → logprob: -0.9741034507751465
    3. '=True' → logprob: -10.974102973937988
    4. ':' → logprob: -12.224102973937988
    5. ' ' → logprob: -13.099102973937988
    6. ',' → logprob: -14.224102973937988
    7. '=False' → logprob: -14.349102973937988
    8. '   ' → logprob: -15.349102973937988
    9. '[' → logprob: -15.974102973937988
    10. '_' → logprob: -16.099103927612305

Token 447: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.258615493774414
    4. '=True' → logprob: -18.758615493774414
    5. '(True' → logprob: -19.008615493774414
    6. 'true' → logprob: -20.758615493774414
    7. '1' → logprob: -22.008615493774414
    8. '       ' → logprob: -23.008615493774414
    9. '    ' → logprob: -23.633615493774414
    10. '_true' → logprob: -23.758615493774414

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022558939235750586
    2. '
' → logprob: -9.125226020812988
    3. '        
' → logprob: -9.500226020812988
    4. ' for' → logprob: -10.625226020812988
    5. '<|end|>' → logprob: -12.375226020812988
    6. '	' → logprob: -12.750226020812988
    7. 'for' → logprob: -12.750226020812988
    8. '  
' → logprob: -13.375226020812988
    9. '           ' → logprob: -14.375226020812988
    10. '   ' → logprob: -14.375226020812988

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005104990559630096
    2. '
' → logprob: -8.250510215759277
    3. '        
' → logprob: -8.500510215759277
    4. ' for' → logprob: -11.000510215759277
    5. '	' → logprob: -11.375510215759277
    6. '  
' → logprob: -12.375510215759277
    7. '		
' → logprob: -13.000510215759277
    8. '    
' → logprob: -13.250510215759277
    9. '<|end|>' → logprob: -13.375510215759277
    10. '	   ' → logprob: -13.500510215759277

Token 450: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35195472836494446
    2. '       ' → logprob: -1.601954698562622
    3. ' for' → logprob: -2.351954698562622
    4. '   ' → logprob: -13.726954460144043
    5. ' ' → logprob: -14.601954460144043
    6. '	for' → logprob: -14.851954460144043
    7. ' ' → logprob: -15.351954460144043
    8. '        
' → logprob: -15.601954460144043
    9. '           ' → logprob: -15.601954460144043
    10. '    ' → logprob: -16.22695541381836

Token 451: ' lit' (ID: 11980)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.10802270472049713
    2. 'literal' → logprob: -2.358022689819336
    3. ' literal' → logprob: -5.108022689819336
    4. ' lit' → logprob: -6.358022689819336
    5. 'l' → logprob: -12.483022689819336
    6. 'liter' → logprob: -14.233022689819336
    7. '_literal' → logprob: -15.108022689819336
    8. 'Literal' → logprob: -15.858022689819336
    9. '.literal' → logprob: -17.483022689819336
    10. 'li' → logprob: -18.358022689819336

Token 452: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0578663349151611
    2. ' in' → logprob: -1.3078663349151611
    3. '[' → logprob: -2.307866334915161
    4. 'er' → logprob: -2.432866334915161
    5. ')' → logprob: -2.932866334915161
    6. ' =' → logprob: -3.432866334915161
    7. '       ' → logprob: -3.932866334915161
    8. ']' → logprob: -4.682866096496582
    9. '        ' → logprob: -4.682866096496582
    10. 's' → logprob: -4.807866096496582

Token 453: ' clause' (ID: 45470)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.16024626791477203
    2. ' clause' → logprob: -1.9102462530136108
    3. 'lit' → logprob: -11.160245895385742
    4. '_clause' → logprob: -12.910245895385742
    5. ' cl' → logprob: -13.285245895385742
    6. ' lit' → logprob: -14.535245895385742
    7. 'cla' → logprob: -14.535245895385742
    8. '[' → logprob: -14.535245895385742
    9. '(cl' → logprob: -14.535245895385742
    10. '   ' → logprob: -14.660245895385742

Token 454: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04881320521235466
    2. ':
' → logprob: -3.0488131046295166
    3. '           ' → logprob: -9.048812866210938
    4. '):
' → logprob: -9.923812866210938
    5. '       ' → logprob: -10.548812866210938
    6. '):' → logprob: -10.923812866210938
    7. ':
' → logprob: -12.923812866210938
    8. ':

' → logprob: -13.173812866210938
    9. '.strip' → logprob: -13.423812866210938
    10. '[' → logprob: -13.548812866210938

Token 455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005391464568674564
    2. '        ' → logprob: -6.005391597747803
    3. '       ' → logprob: -6.130391597747803
    4. '            ' → logprob: -8.755391120910645
    5. '            
' → logprob: -9.130391120910645
    6. '          ' → logprob: -9.630391120910645
    7. '<|end|>' → logprob: -9.755391120910645
    8. '        
' → logprob: -10.005391120910645
    9. ' if' → logprob: -10.255391120910645
    10. '[' → logprob: -10.255391120910645

Token 456: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5676830410957336
    2. ' lit' → logprob: -1.4426829814910889
    3. 'lit' → logprob: -1.8176829814910889
    4. ' if' → logprob: -3.442682981491089
    5. 'if' (adapté à ' if') → logprob: -6.692683219909668
    6. ' stripped' → logprob: -7.692683219909668
    7. 'trim' → logprob: -8.067683219909668
    8. 'var' → logprob: -9.192683219909668
    9. 'strip' → logprob: -9.442683219909668
    10. ' l' → logprob: -9.692683219909668

Token 457: ' lit' (ID: 11980)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.1434849500656128
    2. ' lit' → logprob: -2.0184850692749023
    3. 'len' → logprob: -7.643485069274902
    4. ' not' → logprob: -8.768485069274902
    5. ' len' → logprob: -9.268485069274902
    6. 'not' → logprob: -10.268485069274902
    7. '   ' → logprob: -11.018485069274902
    8. ''' → logprob: -11.393485069274902
    9. ' ' → logprob: -12.643485069274902
    10. 'l' → logprob: -12.893485069274902

Token 458: '.startswith' (ID: 64340)
  Prédit: '.startswith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.2931130826473236
    2. '[' → logprob: -1.418113112449646
    3. ' ==' → logprob: -5.0431132316589355
    4. '==' → logprob: -5.4181132316589355
    5. 'startswith' → logprob: -7.2931132316589355
    6. '.' → logprob: -9.543112754821777
    7. '=' → logprob: -9.793112754821777
    8. '.strip' → logprob: -9.793112754821777
    9. '=='' → logprob: -10.668112754821777
    10. ' =' → logprob: -10.918112754821777

Token 459: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16332076489925385
    2. ''' → logprob: -1.913320779800415
    3. '~' → logprob: -6.038320541381836
    4. '("' → logprob: -7.663320541381836
    5. '"' → logprob: -9.163320541381836
    6. ' '~' → logprob: -9.288320541381836
    7. '(' → logprob: -11.163320541381836
    8. '   ' → logprob: -11.788320541381836
    9. 'til' → logprob: -12.038320541381836
    10. '['' → logprob: -13.038320541381836

Token 460: '~' (ID: 93)
  Prédit: '~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '~' → logprob: -6.749814019713085e-06
    2. ''' → logprob: -12.000006675720215
    3. '~
' → logprob: -14.750006675720215
    4. '~":"' → logprob: -17.12500762939453
    5. ' ~' → logprob: -17.75000762939453
    6. '~

' → logprob: -17.87500762939453
    7. '~=' → logprob: -18.12500762939453
    8. '"' → logprob: -18.12500762939453
    9. '~~' → logprob: -18.50000762939453
    10. '   ' → logprob: -18.87500762939453

Token 461: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.6640709638595581
    2. ''):' → logprob: -0.7890709638595581
    3. '')' → logprob: -3.5390710830688477
    4. ''' → logprob: -7.289071083068848
    5. ''):
' → logprob: -7.664071083068848
    6. '<|end|>' → logprob: -8.039071083068848
    7. '"):' → logprob: -9.414071083068848
    8. '');' → logprob: -9.789071083068848
    9. '('' → logprob: -9.914071083068848
    10. '):' → logprob: -10.289071083068848

Token 462: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0415059328079224
    2. ' var' → logprob: -1.0415059328079224
    3. 'var' → logprob: -1.2915059328079224
    4. '           ' → logprob: -4.791505813598633
    5. ' variable' → logprob: -5.416505813598633
    6. 'variable' → logprob: -5.916505813598633
    7. ',var' → logprob: -7.041505813598633
    8. ')var' → logprob: -7.541505813598633
    9. '):
' → logprob: -7.666505813598633
    10. '[var' → logprob: -7.666505813598633

Token 463: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -0.024731839075684547
    2. 'v' → logprob: -3.7747318744659424
    3. ' var' → logprob: -6.524731636047363
    4. '           ' → logprob: -11.649731636047363
    5. ' v' → logprob: -11.899731636047363
    6. '               ' → logprob: -13.274731636047363
    7. 'variable' → logprob: -14.899731636047363
    8. 'name' → logprob: -15.274731636047363
    9. 'val' → logprob: -15.649731636047363
    10. 'key' → logprob: -15.899731636047363

Token 464: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193390250205994
    2. ' =' → logprob: -1.5019339323043823
    3. 'name' → logprob: -12.876934051513672
    4. '_name' → logprob: -14.001934051513672
    5. 'var' → logprob: -14.001934051513672
    6. ' ' → logprob: -15.751934051513672
    7. ')' → logprob: -16.126934051513672
    8. '_=' → logprob: -16.751934051513672
    9. 's' → logprob: -17.126934051513672
    10. ',' → logprob: -17.126934051513672

Token 465: ' lit' (ID: 11980)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -9.014684110297821e-06
    2. ' lit' → logprob: -11.625008583068848
    3. 'lig' → logprob: -18.000009536743164
    4. 'l' → logprob: -19.000009536743164
    5. 'lot' → logprob: -20.250009536743164
    6. 'liter' → logprob: -21.250009536743164
    7. 'let' → logprob: -21.375009536743164
    8. 'lic' → logprob: -21.625009536743164
    9. 'Lit' → logprob: -21.625009536743164
    10. '   ' → logprob: -21.750009536743164

Token 466: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.000000953674316
    3. '=' → logprob: -15.875000953674316
    4. '           ' → logprob: -16.625001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'var' → logprob: -17.875001907348633
    7. '[
' → logprob: -18.125001907348633
    8. '[len' → logprob: -18.375001907348633
    9. '(' → logprob: -18.500001907348633
    10. ' [' → logprob: -18.750001907348633

Token 467: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.25
    4. '```' → logprob: -18.25
    5. '0' → logprob: -18.875
    6. '2' → logprob: -20.125
    7. '-' → logprob: -20.1875
    8. '...' → logprob: -20.375
    9. '１' → logprob: -20.5
    10. ':' → logprob: -20.5

Token 468: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038188375532627106
    2. ':]' → logprob: -3.2881884574890137
    3. ' ]' → logprob: -9.913187980651855
    4. ' :]' → logprob: -10.413187980651855
    5. ':].' → logprob: -10.413187980651855
    6. ':' → logprob: -11.413187980651855
    7. ']
' → logprob: -11.538187980651855
    8. ':]
' → logprob: -11.788187980651855
    9. '()]' → logprob: -13.288187980651855
    10. '0' → logprob: -13.538187980651855

Token 469: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005800455342978239
    2. '=' → logprob: -6.005800247192383
    3. '           ' → logprob: -7.130800247192383
    4. ' =' → logprob: -7.755800247192383
    5. '                
' → logprob: -7.755800247192383
    6. ')' → logprob: -8.130800247192383
    7. '
' → logprob: -8.380800247192383
    8. '                ' → logprob: -8.505800247192383
    9. '<|end|>' → logprob: -8.755800247192383
    10. '```' → logprob: -8.880800247192383

Token 470: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19684268534183502
    2. 'val' (adapté à ' val') → logprob: -2.321842670440674
    3. ' if' → logprob: -3.321842670440674
    4. '               ' → logprob: -3.696842670440674
    5. 'value' → logprob: -4.571842670440674
    6. ' val' → logprob: -4.821842670440674
    7. 'assignment' → logprob: -7.696842670440674
    8. ' value' → logprob: -8.571843147277832
    9. 'assign' → logprob: -8.696843147277832
    10. '                
' → logprob: -9.321843147277832

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614808320999146
    2. ' =' → logprob: -4.758615016937256
    3. '=True' → logprob: -15.383614540100098
    4. ' ' → logprob: -16.883615493774414
    5. '=
' → logprob: -18.008615493774414
    6. ')' → logprob: -18.008615493774414
    7. '=False' → logprob: -18.133615493774414
    8. 'alse' → logprob: -19.133615493774414
    9. '=

' → logprob: -19.258615493774414
    10. '＝' → logprob: -19.383615493774414

Token 472: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001502598519437015
    2. ' False' → logprob: -6.501502513885498
    3. '0' → logprob: -15.876502990722656
    4. '(False' → logprob: -16.751502990722656
    5. '=False' → logprob: -17.626502990722656
    6. 'false' → logprob: -18.626502990722656
    7. '.False' → logprob: -20.001502990722656
    8. '   ' → logprob: -20.251502990722656
    9. 'FALSE' → logprob: -20.751502990722656
    10. 'F' → logprob: -20.751502990722656

Token 473: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019941816572099924
    2. '
' → logprob: -6.5019941329956055
    3. ' else' → logprob: -8.251994132995605
    4. 'else' → logprob: -8.876994132995605
    5. '            
' → logprob: -10.376994132995605
    6. '               ' → logprob: -10.751994132995605
    7. ' 
' → logprob: -11.876994132995605
    8. '                
' → logprob: -12.001994132995605
    9. '       ' → logprob: -12.251994132995605
    10. '  
' → logprob: -12.376994132995605

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.861651490908116e-05
    2. ' else' → logprob: -10.625068664550781
    3. 'else' → logprob: -11.125068664550781
    4. '               ' → logprob: -11.125068664550781
    5. '
' → logprob: -11.625068664550781
    6. '            
' → logprob: -13.375068664550781
    7. '       ' → logprob: -14.125068664550781
    8. '```' → logprob: -14.375068664550781
    9. '                
' → logprob: -14.625068664550781
    10. 'elif' → logprob: -15.000068664550781

Token 475: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9440064430236816
    2. 'else' (adapté à ' else') → logprob: -1.0690064430236816
    3. '           ' → logprob: -1.3190064430236816
    4. ':
' → logprob: -9.319005966186523
    5. '	else' → logprob: -11.069005966186523
    6. '       ' → logprob: -11.194005966186523
    7. '
' → logprob: -11.319005966186523
    8. '               ' → logprob: -11.569005966186523
    9. ':' → logprob: -12.319005966186523
    10. ')' → logprob: -12.694005966186523

Token 476: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7843276858329773
    2. '               ' → logprob: -1.034327745437622
    3. ':' → logprob: -2.534327745437622
    4. 'var' → logprob: -2.659327745437622
    5. ' var' → logprob: -3.409327745437622
    6. '           ' → logprob: -5.784327507019043
    7. '                ' → logprob: -8.159327507019043
    8. ' =' → logprob: -8.159327507019043
    9. '            ' → logprob: -8.409327507019043
    10. '=' → logprob: -8.659327507019043

Token 477: '               ' (ID: 506)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' → logprob: -0.008804479613900185
    2. ' var' → logprob: -4.7588043212890625
    3. 'lit' → logprob: -8.633804321289062
    4. ' lit' → logprob: -11.383804321289062
    5. '[var' → logprob: -15.133804321289062
    6. '               ' → logprob: -16.133804321289062
    7. '           ' → logprob: -16.258804321289062
    8. 'val' → logprob: -16.883804321289062
    9. ')var' → logprob: -17.883804321289062
    10. '(var' → logprob: -18.508804321289062

Token 478: ' var' (ID: 972)
  Prédit: 'var'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'var' (adapté à ' var') → logprob: -0.10225085914134979
    2. ' var' → logprob: -2.352250814437866
    3. 'lit' → logprob: -6.477251052856445
    4. ' lit' → logprob: -7.602251052856445
    5. 'val' → logprob: -12.602251052856445
    6. ' val' → logprob: -14.227251052856445
    7. 'v' → logprob: -15.852251052856445
    8. '[var' → logprob: -15.977251052856445
    9. '_var' → logprob: -16.227251052856445
    10. '(var' → logprob: -16.602251052856445

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132629096508026
    2. ' =' → logprob: -1.313262939453125
    3. ' ' → logprob: -13.938262939453125
    4. '=s' → logprob: -16.688262939453125
    5. 's' → logprob: -17.063262939453125
    6. '<|end|>' → logprob: -17.313262939453125
    7. '=
' → logprob: -17.938262939453125
    8. ')' → logprob: -18.188262939453125
    9. '＝' → logprob: -18.188262939453125
    10. '[' → logprob: -18.313262939453125

Token 480: ' lit' (ID: 11980)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -9.615255839889869e-05
    2. ' lit' → logprob: -9.250096321105957
    3. 'l' → logprob: -18.62509536743164
    4. 'Lit' → logprob: -21.37509536743164
    5. '   ' → logprob: -21.87509536743164
    6. 'liter' → logprob: -21.87509536743164
    7. 'li' → logprob: -22.00009536743164
    8. ' ' → logprob: -22.25009536743164
    9. 'literal' → logprob: -22.25009536743164
    10. 'lig' → logprob: -22.37509536743164

Token 481: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.862962229410186e-05
    2. '0' → logprob: -9.500078201293945
    3. '<|end|>' → logprob: -13.500078201293945
    4. '[-' → logprob: -14.375078201293945
    5. '[len' → logprob: -15.000078201293945
    6. '1' → logprob: -15.000078201293945
    7. ' ' → logprob: -15.625078201293945
    8. '```' → logprob: -15.875078201293945
    9. ')' → logprob: -16.000078201293945
    10. 's' → logprob: -16.500078201293945

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '[' → logprob: -17.375
    4. '1' → logprob: -18.125
    5. '۰' → logprob: -18.125
    6. '   ' → logprob: -18.875
    7. '#' → logprob: -19.6875
    8. ']' → logprob: -20.125
    9. ')' → logprob: -20.1875
    10. '...' → logprob: -20.5625

Token 483: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10815068334341049
    2. ']' → logprob: -2.3581507205963135
    3. '               ' → logprob: -5.233150482177734
    4. '           ' → logprob: -6.858150482177734
    5. ')
' → logprob: -7.108150482177734
    6. ')' → logprob: -8.233150482177734
    7. '
' → logprob: -8.733150482177734
    8. ' ]
' → logprob: -10.233150482177734
    9. '']
' → logprob: -10.358150482177734
    10. '       ' → logprob: -10.983150482177734

Token 484: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25169408321380615
    2. 'val' → logprob: -2.0016942024230957
    3. '               ' → logprob: -2.7516942024230957
    4. ' val' → logprob: -4.376694202423096
    5. '
' → logprob: -4.876694202423096
    6. '            
' → logprob: -6.251694202423096
    7. ' 
' → logprob: -7.626694202423096
    8. '                
' → logprob: -8.126693725585938
    9. ',val' → logprob: -8.501693725585938
    10. '            ' → logprob: -9.251693725585938

Token 485: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0015024791937321424
    2. ' val' → logprob: -6.501502513885498
    3. '           ' → logprob: -16.001502990722656
    4. '_val' → logprob: -16.626502990722656
    5. '	val' → logprob: -17.001502990722656
    6. '[val' → logprob: -19.001502990722656
    7. '               ' → logprob: -19.126502990722656
    8. 'Val' → logprob: -19.251502990722656
    9. '.val' → logprob: -20.001502990722656
    10. ',val' → logprob: -20.126502990722656

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519325911998749
    2. ' =' → logprob: -1.5019326210021973
    3. '=True' → logprob: -12.626932144165039
    4. ')' → logprob: -16.75193214416504
    5. ' True' → logprob: -17.00193214416504
    6. ' =
' → logprob: -17.37693214416504
    7. ' ' → logprob: -17.50193214416504
    8. '==' → logprob: -17.62693214416504
    9. ' ==' → logprob: -18.00193214416504
    10. '=
' → logprob: -18.50193214416504

Token 487: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '(True' → logprob: -20.26104736328125
    4. '=True' → logprob: -22.01104736328125
    5. 'true' → logprob: -23.38604736328125
    6. '.True' → logprob: -25.63604736328125
    7. '_true' → logprob: -25.76104736328125
    8. '1' → logprob: -25.76104736328125
    9. 'TRUE' → logprob: -25.76104736328125
    10. 'False' → logprob: -25.88604736328125

Token 488: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011872532777488232
    2. '
' → logprob: -7.376187324523926
    3. '            
' → logprob: -8.501187324523926
    4. 'if' → logprob: -9.376187324523926
    5. ' if' → logprob: -9.501187324523926
    6. '<|end|>' → logprob: -9.626187324523926
    7. '       ' → logprob: -10.501187324523926
    8. '  
' → logprob: -10.501187324523926
    9. '		' → logprob: -11.126187324523926
    10. '               ' → logprob: -11.376187324523926

Token 489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.24179228907451e-05
    2. '            
' → logprob: -10.875061988830566
    3. '<|end|>' → logprob: -11.250061988830566
    4. ' if' → logprob: -11.625061988830566
    5. 'if' → logprob: -11.875061988830566
    6. '       ' → logprob: -12.500061988830566
    7. '
' → logprob: -13.250061988830566
    8. '               ' → logprob: -13.375061988830566
    9. '```' → logprob: -13.500061988830566
    10. '          ' → logprob: -13.750061988830566

Token 490: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2707456946372986
    2. '           ' → logprob: -1.5207457542419434
    3. ' if' → logprob: -4.020745754241943
    4. '       ' → logprob: -7.270745754241943
    5. '          ' → logprob: -13.645745277404785
    6. '   ' → logprob: -13.895745277404785
    7. '#' → logprob: -14.395745277404785
    8. '               ' → logprob: -14.520745277404785
    9. '	       ' → logprob: -14.770745277404785
    10. '	if' → logprob: -15.020745277404785

Token 491: ' var' (ID: 972)
  Prédit: ' var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' var' → logprob: -0.03804149478673935
    2. 'var' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.413042068481445
    4. '(var' → logprob: -17.788042068481445
    5. '[var' → logprob: -18.413042068481445
    6. ')var' → logprob: -19.288042068481445
    7. ' val' → logprob: -19.538042068481445
    8. ' ' → logprob: -19.663042068481445
    9. '   ' → logprob: -19.913042068481445
    10. '	var' → logprob: -20.538042068481445

Token 492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019487487152218819
    2. 'in' → logprob: -6.251948833465576
    3. ' not' → logprob: -10.876948356628418
    4. 'not' → logprob: -14.751948356628418
    5. ']' → logprob: -15.001948356628418
    6. ')' → logprob: -15.251948356628418
    7. '<|end|>' → logprob: -15.751948356628418
    8. ' ' → logprob: -16.001949310302734
    9. '<|end|>' → logprob: -17.626949310302734
    10. '	in' → logprob: -18.001949310302734

Token 493: ' assignment' (ID: 24618)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -1.306760805164231e-05
    2. ' assignment' → logprob: -11.25001335144043
    3. '.assignment' → logprob: -19.50001335144043
    4. '_assignment' → logprob: -21.87501335144043
    5. 'appointment' → logprob: -22.25001335144043
    6. 'allocation' → logprob: -22.37501335144043
    7. 'assign' → logprob: -22.87501335144043
    8. '   ' → logprob: -23.25001335144043
    9. 'assessment' → logprob: -23.62501335144043
    10. ' ' → logprob: -23.62501335144043

Token 494: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09194603562355042
    2. 'and' → logprob: -2.4669461250305176
    3. ':
' → logprob: -6.091946125030518
    4. ':' → logprob: -7.591946125030518
    5. '=' → logprob: -8.71694564819336
    6. ':

' → logprob: -10.21694564819336
    7. '!=' → logprob: -11.21694564819336
    8. '           ' → logprob: -12.09194564819336
    9. '<|end|>' → logprob: -12.59194564819336
    10. ')' → logprob: -12.59194564819336

Token 495: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013279400765895844
    2. '               ' → logprob: -5.013279438018799
    3. '           ' → logprob: -5.513279438018799
    4. 'and' → logprob: -6.888279438018799
    5. '<|end|>' → logprob: -6.888279438018799
    6. ' =' → logprob: -9.13827896118164
    7. '=' → logprob: -9.51327896118164
    8. '            ' → logprob: -9.51327896118164
    9. ' ==' → logprob: -10.38827896118164
    10. '```' → logprob: -10.76327896118164

Token 496: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15404687821865082
    2. ' if' → logprob: -2.1540467739105225
    3. '           ' → logprob: -3.7790467739105225
    4. 'if' (adapté à ' if') → logprob: -6.279047012329102
    5. '<|end|>' → logprob: -7.279047012329102
    6. ' ' → logprob: -7.779047012329102
    7. '              ' → logprob: -8.529047012329102
    8. '            ' → logprob: -9.279047012329102
    9. '	           ' → logprob: -9.404047012329102
    10. '```' → logprob: -9.654047012329102

Token 497: ' assignment' (ID: 24618)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' → logprob: -0.0009114635176956654
    2. ' assignment' → logprob: -7.000911235809326
    3. '           ' → logprob: -17.750911712646484
    4. '   ' → logprob: -18.750911712646484
    5. 'assign' → logprob: -19.875911712646484
    6. '.assignment' → logprob: -20.375911712646484
    7. '_assignment' → logprob: -21.125911712646484
    8. '               ' → logprob: -21.500911712646484
    9. 'assing' → logprob: -21.625911712646484
    10. 'appointment' → logprob: -21.625911712646484

Token 498: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '[val' → logprob: -15.875
    4. 'var' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. '[v' → logprob: -20.375
    7. '[param' → logprob: -20.5
    8. ' [' → logprob: -20.625
    9. '
' → logprob: -21.5
    10. ')var' → logprob: -21.625

Token 499: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04069569334387779
    2. ' !=' → logprob: -3.5406956672668457
    3. ']!=' → logprob: -4.540695667266846
    4. ']' → logprob: -9.165696144104004
    5. ')!=' → logprob: -9.290696144104004
    6. '()!=' → logprob: -11.290696144104004
    7. '!==' → logprob: -12.040696144104004
    8. 'is' → logprob: -13.040696144104004
    9. '!=(' → logprob: -14.040696144104004
    10. '!=-' → logprob: -14.915696144104004

Token 500: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06199099123477936
    2. ' !=' → logprob: -2.811990976333618
    3. ')!=' → logprob: -11.686990737915039
    4. ']!=' → logprob: -11.811990737915039
    5. '()!=' → logprob: -12.686990737915039
    6. '!==' → logprob: -13.061990737915039
    7. 'is' → logprob: -13.311990737915039
    8. '!=(' → logprob: -14.936990737915039
    9. '=' → logprob: -16.31199073791504
    10. '!=-' → logprob: -16.93699073791504

Token 501: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0015023599844425917
    2. ' val' → logprob: -6.501502513885498
    3. '	val' → logprob: -19.501502990722656
    4. '_val' → logprob: -21.251502990722656
    5. '(val' → logprob: -21.501502990722656
    6. '[val' → logprob: -22.626502990722656
    7. 'Val' → logprob: -22.876502990722656
    8. '   ' → logprob: -23.001502990722656
    9. '.val' → logprob: -23.251502990722656
    10. ' ' → logprob: -23.626502990722656

Token 502: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14888858795166016
    2. ':
' → logprob: -2.02388858795166
    3. '               ' → logprob: -5.77388858795166
    4. ':return' → logprob: -7.02388858795166
    5. '                   ' → logprob: -7.14888858795166
    6. '           ' → logprob: -8.02388858795166
    7. '):' → logprob: -8.39888858795166
    8. ')' → logprob: -8.39888858795166
    9. '<|end|>' → logprob: -8.52388858795166
    10. '):
' → logprob: -8.77388858795166

Token 503: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05990677326917648
    2. '               ' → logprob: -2.9349067211151123
    3. ':
' → logprob: -5.684906959533691
    4. ':' → logprob: -7.309906959533691
    5. '                       ' → logprob: -8.434906959533691
    6. 'return' → logprob: -8.684906959533691
    7. ' return' → logprob: -8.684906959533691
    8. '           ' → logprob: -9.309906959533691
    9. ':return' → logprob: -9.434906959533691
    10. 'False' → logprob: -9.559906959533691

Token 504: ' satisf' (ID: 8824)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4411155879497528
    2. 'False' → logprob: -1.4411156177520752
    3. ' False' → logprob: -2.316115617752075
    4. 's' → logprob: -4.191115379333496
    5. '                       ' → logprob: -5.941115379333496
    6. ' satisf' → logprob: -6.316115379333496
    7. '               ' → logprob: -7.566115379333496
    8. ' false' → logprob: -7.941115379333496
    9. 'break' → logprob: -8.066115379333496
    10. 'false' → logprob: -8.191115379333496

Token 505: 'iable' (ID: 144206)
  Prédit: 'iable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iable' → logprob: -0.429004043340683
    2. 'able' → logprob: -1.0540040731430054
    3. 'actable' → logprob: -8.554003715515137
    4. 'izable' → logprob: -10.554003715515137
    5. 'ab' → logprob: -11.304003715515137
    6. 'isable' → logprob: -11.679003715515137
    7. 'alable' → logprob: -11.679003715515137
    8. 'y' → logprob: -11.804003715515137
    9. 'IABLE' → logprob: -12.304003715515137
    10. 'abile' → logprob: -12.429003715515137

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20364344120025635
    2. ' =' → logprob: -1.7036434412002563
    3. '=False' → logprob: -6.203643321990967
    4. '=True' → logprob: -9.078643798828125
    5. '                   ' → logprob: -10.453643798828125
    6. '                       ' → logprob: -10.953643798828125
    7. '==' → logprob: -11.203643798828125
    8. '               ' → logprob: -11.328643798828125
    9. '           ' → logprob: -12.078643798828125
    10. '<|end|>' → logprob: -12.328643798828125

Token 507: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02324547804892063
    2. ' False' → logprob: -3.7732455730438232
    3. '(False' → logprob: -17.273244857788086
    4. '=False' → logprob: -18.398244857788086
    5. 'false' → logprob: -20.898244857788086
    6. '_false' → logprob: -20.898244857788086
    7. '   ' → logprob: -21.398244857788086
    8. '.False' → logprob: -22.273244857788086
    9. '
' → logprob: -22.398244857788086
    10. '```' → logprob: -23.273244857788086

Token 508: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011152983643114567
    2. '               ' → logprob: -9.87511157989502
    3. '           ' → logprob: -10.62511157989502
    4. '                       ' → logprob: -11.12511157989502
    5. '                  ' → logprob: -12.50011157989502
    6. '<|end|>' → logprob: -12.62511157989502
    7. ',' → logprob: -13.25011157989502
    8. '                    ' → logprob: -13.25011157989502
    9. '		           ' → logprob: -13.25011157989502
    10. '       ' → logprob: -13.50011157989502

Token 509: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.190178904333152e-05
    2. '               ' → logprob: -11.500031471252441
    3. '                       ' → logprob: -11.750031471252441
    4. '           ' → logprob: -11.750031471252441
    5. '                  ' → logprob: -13.625031471252441
    6. '```' → logprob: -14.000031471252441
    7. '       ' → logprob: -14.125031471252441
    8. '                    
' → logprob: -14.500031471252441
    9. '                    ' → logprob: -14.625031471252441
    10. '                           ' → logprob: -14.750031471252441

Token 510: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06224977225065231
    2. 'break' (adapté à ' break') → logprob: -2.8122496604919434
    3. ' break' → logprob: -8.312250137329102
    4. '                       ' → logprob: -11.437250137329102
    5. '               ' → logprob: -11.562250137329102
    6. '
' → logprob: -12.312250137329102
    7. '                  ' → logprob: -12.437250137329102
    8. '	break' → logprob: -12.937250137329102
    9. '				' → logprob: -13.062250137329102
    10. '                    
' → logprob: -14.187250137329102

Token 511: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00985005497932434
    2. '       ' → logprob: -4.884850025177002
    3. '               ' → logprob: -6.134850025177002
    4. '```' → logprob: -10.50985050201416
    5. '<|end|>' → logprob: -11.38485050201416
    6. '		' → logprob: -11.63485050201416
    7. 'else' → logprob: -11.63485050201416
    8. '	       ' → logprob: -11.88485050201416
    9. '                   ' → logprob: -13.00985050201416
    10. ' else' → logprob: -13.38485050201416

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05049555376172066
    2. '       ' → logprob: -3.0504956245422363
    3. '               ' → logprob: -6.300495624542236
    4. '```' → logprob: -10.175495147705078
    5. 'else' → logprob: -10.925495147705078
    6. '                   ' → logprob: -12.550495147705078
    7. 'continue' → logprob: -13.050495147705078
    8. '          ' → logprob: -13.425495147705078
    9. '
' → logprob: -13.925495147705078
    10. '[' → logprob: -13.925495147705078

Token 513: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002210562350228429
    2. 'else' (adapté à ' else') → logprob: -6.75221061706543
    3. '       ' → logprob: -7.00221061706543
    4. '               ' → logprob: -9.37721061706543
    5. ' else' → logprob: -10.25221061706543
    6. '          ' → logprob: -12.25221061706543
    7. '
' → logprob: -13.75221061706543
    8. '         ' → logprob: -14.25221061706543
    9. '	       ' → logprob: -14.25221061706543
    10. '```' → logprob: -14.50221061706543

Token 514: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029868518467992544
    2. ':' → logprob: -6.502986907958984
    3. '           ' → logprob: -7.127986907958984
    4. ' assignment' → logprob: -8.252986907958984
    5. ':
' → logprob: -8.502986907958984
    6. '[' → logprob: -9.252986907958984
    7. 'assignment' → logprob: -10.627986907958984
    8. '                   ' → logprob: -10.877986907958984
    9. '```' → logprob: -11.377986907958984
    10. '=' → logprob: -11.502986907958984

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029139919206500053
    2. 'assignment' → logprob: -4.029139995574951
    3. ' assignment' → logprob: -4.904139995574951
    4. '           ' → logprob: -5.654139995574951
    5. '                   ' → logprob: -12.779139518737793
    6. '       ' → logprob: -13.404139518737793
    7. '   ' → logprob: -13.779139518737793
    8. '            ' → logprob: -14.029139518737793
    9. '              ' → logprob: -14.154139518737793
    10. '             ' → logprob: -14.404139518737793

Token 516: ' assignment' (ID: 24618)
  Prédit: 'assignment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assignment' (adapté à ' assignment') → logprob: -0.062207769602537155
    2. ' assignment' → logprob: -2.8122076988220215
    3. '               ' → logprob: -8.56220817565918
    4. '           ' → logprob: -9.93720817565918
    5. 'assign' → logprob: -14.81220817565918
    6. '            ' → logprob: -16.68720817565918
    7. '   ' → logprob: -16.68720817565918
    8. '                   ' → logprob: -16.81220817565918
    9. '_assignment' → logprob: -16.93720817565918
    10. '.assignment' → logprob: -16.93720817565918

Token 517: '[var' (ID: 109537)
  Prédit: '[var'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[var' → logprob: -9.913265239447355e-05
    2. '[' → logprob: -9.250099182128906
    3. '[val' → logprob: -12.875099182128906
    4. '=' → logprob: -15.500099182128906
    5. ' [' → logprob: -16.000099182128906
    6. '[v' → logprob: -16.375099182128906
    7. '```' → logprob: -17.625099182128906
    8. '[obj' → logprob: -18.375099182128906
    9. '\[' → logprob: -18.500099182128906
    10. '[col' → logprob: -18.500099182128906

Token 518: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038370173424482346
    2. '=' → logprob: -6.0038371086120605
    3. ']=' → logprob: -6.6288371086120605
    4. ' ]' → logprob: -10.253836631774902
    5. ' =' → logprob: -12.628836631774902
    6. ')' → logprob: -15.503836631774902
    7. '[' → logprob: -18.25383758544922
    8. '']' → logprob: -19.25383758544922
    9. ']

' → logprob: -19.37883758544922
    10. ')=' → logprob: -19.62883758544922

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '＝' → logprob: -20.254077911376953
    4. ']' → logprob: -20.879077911376953
    5. ')' → logprob: -20.879077911376953
    6. ']=' → logprob: -21.004077911376953
    7. '=

' → logprob: -21.504077911376953
    8. ')=' → logprob: -21.879077911376953
    9. '[' → logprob: -22.254077911376953
    10. '=
' → logprob: -22.379077911376953

Token 520: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0031777136027812958
    2. ' val' → logprob: -5.753177642822266
    3. '	val' → logprob: -21.628177642822266
    4. '[val' → logprob: -22.503177642822266
    5. '_val' → logprob: -23.253177642822266
    6. '(val' → logprob: -23.378177642822266
    7. '.val' → logprob: -24.128177642822266
    8. ',val' → logprob: -25.378177642822266
    9. 'Val' → logprob: -25.628177642822266
    10. 'v' → logprob: -26.003177642822266

Token 521: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09311710298061371
    2. '<|end|>' → logprob: -2.8431169986724854
    3. '
' → logprob: -3.5931169986724854
    4. '<|end|>' → logprob: -7.0931172370910645
    5. 'return' → logprob: -7.3431172370910645
    6. '        
' → logprob: -7.7181172370910645
    7. ' return' → logprob: -8.093116760253906
    8. '  
' → logprob: -8.843116760253906
    9. 'continue' → logprob: -8.843116760253906
    10. '    
' → logprob: -9.468116760253906

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012510620290413499
    2. '<|end|>' → logprob: -7.001251220703125
    3. '
' → logprob: -8.751251220703125
    4. '        
' → logprob: -10.251251220703125
    5. '           ' → logprob: -10.376251220703125
    6. ' return' → logprob: -11.126251220703125
    7. ' continue' → logprob: -11.251251220703125
    8. '   ' → logprob: -11.501251220703125
    9. '```' → logprob: -11.626251220703125
    10. '  
' → logprob: -11.876251220703125

Token 523: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009709350764751434
    2. ' if' → logprob: -5.509709358215332
    3. '   ' → logprob: -5.759709358215332
    4. 'if' (adapté à ' if') → logprob: -6.134709358215332
    5. '
' → logprob: -8.509709358215332
    6. '<|end|>' → logprob: -9.759709358215332
    7. ' ' → logprob: -12.009709358215332
    8. 'continue' → logprob: -12.259709358215332
    9. 'return' → logprob: -12.509709358215332
    10. '	if' → logprob: -12.634709358215332

Token 524: ' satisf' (ID: 8824)
  Prédit: ' satisf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' satisf' → logprob: -0.0036173006519675255
    2. 's' → logprob: -5.628617286682129
    3. ' satis' → logprob: -11.253617286682129
    4. '    ' → logprob: -14.128617286682129
    5. ' s' → logprob: -14.503617286682129
    6. ' satur' → logprob: -14.503617286682129
    7. ' ' → logprob: -14.503617286682129
    8. '   ' → logprob: -15.003617286682129
    9. ' not' → logprob: -15.003617286682129
    10. ' sat' → logprob: -15.253617286682129

Token 525: 'iable' (ID: 144206)
  Prédit: 'able'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.4741242825984955
    2. 'iable' → logprob: -0.9741243124008179
    3. 'i' → logprob: -10.09912395477295
    4. 'actable' → logprob: -13.34912395477295
    5. 'IABLE' → logprob: -14.09912395477295
    6. '[i' → logprob: -14.47412395477295
    7. 'alable' → logprob: -14.84912395477295
    8. '#' → logprob: -14.84912395477295
    9. '       ' → logprob: -14.97412395477295
    10. ' able' → logprob: -15.09912395477295

Token 526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021700335666537285
    2. '           ' → logprob: -4.271700382232666
    3. ':
' → logprob: -5.021700382232666
    4. ':return' → logprob: -7.646700382232666
    5. '       ' → logprob: -8.021699905395508
    6. '<|end|>' → logprob: -9.896699905395508
    7. '               ' → logprob: -11.396699905395508
    8. ' and' → logprob: -12.146699905395508
    9. '          ' → logprob: -12.271699905395508
    10. ' :' → logprob: -12.271699905395508

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005481490516103804
    2. ' return' → logprob: -7.875548362731934
    3. 'return' → logprob: -8.750548362731934
    4. '       ' → logprob: -12.625548362731934
    5. '	       ' → logprob: -12.750548362731934
    6. '		' → logprob: -13.625548362731934
    7. '               ' → logprob: -14.250548362731934
    8. ' ' → logprob: -15.375548362731934
    9. '```' → logprob: -15.375548362731934
    10. '   ' → logprob: -15.750548362731934

Token 528: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0290604829788208
    2. ' return' → logprob: -3.7790603637695312
    3. '           ' → logprob: -5.279060363769531
    4. '       ' → logprob: -7.279060363769531
    5. '   ' → logprob: -12.154060363769531
    6. '               ' → logprob: -12.779060363769531
    7. '	return' → logprob: -13.029060363769531
    8. '
' → logprob: -15.279060363769531
    9. '{return' → logprob: -16.02906036376953
    10. ' ' → logprob: -16.40406036376953

Token 529: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12692810595035553
    2. 'True' → logprob: -2.1269280910491943
    3. '"' → logprob: -18.126928329467773
    4. '(True' → logprob: -18.626928329467773
    5. '   ' → logprob: -19.376928329467773
    6. ' "' → logprob: -21.751928329467773
    7. '=True' → logprob: -21.751928329467773
    8. ' ' → logprob: -22.376928329467773
    9. 'true' → logprob: -22.501928329467773
    10. ' true' → logprob: -22.501928329467773

Token 530: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031657181680202484
    2. '
' → logprob: -6.5031657218933105
    3. '    
' → logprob: -6.5031657218933105
    4. 'False' → logprob: -9.878165245056152
    5. '<|end|>' → logprob: -10.253165245056152
    6. '  
' → logprob: -10.628165245056152
    7. ' return' → logprob: -11.628165245056152
    8. ' 
' → logprob: -11.628165245056152
    9. 'return' → logprob: -11.753165245056152
    10. '        
' → logprob: -12.003165245056152

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013357517309486866
    2. 'return' → logprob: -9.625133514404297
    3. 'False' → logprob: -9.625133514404297
    4. 'None' → logprob: -14.250133514404297
    5. ' return' → logprob: -14.875133514404297
    6. 'false' → logprob: -16.125133514404297
    7. '```' → logprob: -16.375133514404297
    8. '    
' → logprob: -16.750133514404297
    9. ' False' → logprob: -16.750133514404297
    10. '	return' → logprob: -17.625133514404297

Token 532: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.48150306940078735
    2. '   ' → logprob: -0.9815030694007874
    3. 'False' → logprob: -4.981503009796143
    4. ' return' → logprob: -7.606503009796143
    5. 'false' → logprob: -10.7315034866333
    6. '	return' → logprob: -12.2315034866333
    7. '    
' → logprob: -12.4815034866333
    8. ' False' → logprob: -13.3565034866333
    9. '```' → logprob: -13.3565034866333
    10. '  ' → logprob: -13.8565034866333

Token 533: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'false' → logprob: -23.250009536743164
    4. '(False' → logprob: -23.625009536743164
    5. '_false' → logprob: -25.875009536743164
    6. 'True' → logprob: -26.375009536743164
    7. '=False' → logprob: -26.750009536743164
    8. 'FALSE' → logprob: -28.875009536743164
    9. '.False' → logprob: -29.000009536743164
    10. 'F' → logprob: -29.125009536743164

Token 534: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13097919523715973
    2. '<|end|>' → logprob: -2.130979299545288
    3. '```' → logprob: -6.630979061126709
    4. '<|end|>' → logprob: -6.755979061126709
    5. 'print' → logprob: -7.005979061126709
    6. 'import' → logprob: -8.505979537963867
    7. '
' → logprob: -9.880979537963867
    8. '.' → logprob: -9.880979537963867
    9. 'if' → logprob: -10.130979537963867
    10. 'n' → logprob: -10.130979537963867

Token 536: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0021946365013718605
    2. 'main' → logprob: -6.627194404602051
    3. ' test' → logprob: -7.877194404602051
    4. ' check' → logprob: -8.12719440460205
    5. ' is' → logprob: -9.12719440460205
    6. ' evaluate' → logprob: -10.12719440460205
    7. ' sat' → logprob: -11.25219440460205
    8. ' example' → logprob: -12.25219440460205
    9. '_main' → logprob: -12.37719440460205
    10. ' find' → logprob: -12.62719440460205

Token 537: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.3902033970225602e-05
    2. '():
' → logprob: -11.750014305114746
    3. ' ():' → logprob: -13.000014305114746
    4. '(' → logprob: -13.375014305114746
    5. '()' → logprob: -13.625014305114746
    6. '_' → logprob: -14.750014305114746
    7. '():
' → logprob: -15.625014305114746
    8. '()>' → logprob: -16.12501335144043
    9. ':' → logprob: -16.62501335144043
    10. '(":' → logprob: -16.75001335144043

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015526054427027702
    2. ' import' → logprob: -4.265525817871094
    3. 'import' → logprob: -7.265525817871094
    4. ' line' → logprob: -8.390525817871094
    5. ' s' → logprob: -8.765525817871094
    6. ' input' → logprob: -8.765525817871094
    7. ' lines' → logprob: -10.015525817871094
    8. '```' → logprob: -10.390525817871094
    9. 's' → logprob: -12.015525817871094
    10. ' code' → logprob: -12.140525817871094

Token 539: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.200303077697754
    2. 's' → logprob: -1.325303077697754
    3. 'import' → logprob: -1.325303077697754
    4. 'line' → logprob: -2.575303077697754
    5. 'expr' → logprob: -2.950303077697754
    6. ' line' → logprob: -4.575303077697754
    7. 'expression' → logprob: -4.825303077697754
    8. ' s' → logprob: -5.200303077697754
    9. ' import' → logprob: -5.325303077697754
    10. 'for' → logprob: -5.700303077697754

Token 540: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.16627052426338196
    2. '()' → logprob: -2.0412704944610596
    3. '_str' → logprob: -4.166270732879639
    4. '_data' → logprob: -5.541270732879639
    5. '_text' → logprob: -6.166270732879639
    6. '_' → logprob: -6.916270732879639
    7. '_string' → logprob: -7.666270732879639
    8. 'line' → logprob: -9.16627025604248
    9. '_expr' → logprob: -9.66627025604248
    10. '_s' → logprob: -10.16627025604248

Token 541: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01822930946946144
    2. ' sys' → logprob: -4.0182294845581055
    3. 'input' → logprob: -9.518229484558105
    4. '(sys' → logprob: -12.643229484558105
    5. '	sys' → logprob: -13.893229484558105
    6. '=sys' → logprob: -13.893229484558105
    7. ' input' → logprob: -14.268229484558105
    8. 'lambda' → logprob: -15.893229484558105
    9. '```' → logprob: -17.14322853088379
    10. '_sys' → logprob: -19.51822853088379

Token 542: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0030607767403125763
    2. '.' → logprob: -6.003060817718506
    3. '.argv' → logprob: -7.878060817718506
    4. '.stdout' → logprob: -9.128060340881348
    5. '.readline' → logprob: -9.503060340881348
    6. '.std' → logprob: -11.378060340881348
    7. ' .' → logprob: -12.003060340881348
    8. '.input' → logprob: -12.878060340881348
    9. 'stdin' → logprob: -14.003060340881348
    10. '._' → logprob: -14.753060340881348

Token 543: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00014454191841650754
    2. '.read' → logprob: -9.625144958496094
    3. '.' → logprob: -9.750144958496094
    4. 'read' → logprob: -11.750144958496094
    5. '_read' → logprob: -12.000144958496094
    6. ' readline' → logprob: -13.250144958496094
    7. '.readlines' → logprob: -13.750144958496094
    8. '_buffer' → logprob: -14.250144958496094
    9. '().' → logprob: -14.375144958496094
    10. '=' → logprob: -15.125144958496094

Token 544: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4741319417953491
    2. '()' → logprob: -0.9741319417953491
    3. '()
' → logprob: -10.97413158416748
    4. '_line' → logprob: -11.22413158416748
    5. 'line' → logprob: -11.59913158416748
    6. '()\' → logprob: -12.09913158416748
    7. '()

' → logprob: -12.84913158416748
    8. '(' → logprob: -13.22413158416748
    9. '.strip' → logprob: -13.34913158416748
    10. '()`' → logprob: -14.09913158416748

Token 545: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -8.537868779967539e-06
    2. 'split' → logprob: -12.000008583068848
    3. 'rstrip' → logprob: -13.000008583068848
    4. ' strip' → logprob: -18.87500762939453
    5. 'decode' → logprob: -19.37500762939453
    6. 'replace' → logprob: -20.62500762939453
    7. 'read' → logprob: -20.62500762939453
    8. '(strip' → logprob: -21.87500762939453
    9. '.strip' → logprob: -22.00000762939453
    10. '_strip' → logprob: -22.12500762939453

Token 546: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028587469831109047
    2. 'lines' → logprob: -4.278587341308594
    3. '()[' → logprob: -4.653587341308594
    4. '(' → logprob: -6.028587341308594
    5. '('' → logprob: -6.653587341308594
    6. '_line' → logprob: -8.153587341308594
    7. 'line' → logprob: -8.403587341308594
    8. '()\' → logprob: -8.778587341308594
    9. '[' → logprob: -8.903587341308594
    10. '_lines' → logprob: -9.153587341308594

Token 547: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001754310796968639
    2. '   ' → logprob: -7.376754283905029
    3. '()[' → logprob: -7.376754283905029
    4. '()
' → logprob: -7.626754283905029
    5. '()\' → logprob: -12.001754760742188
    6. '[' → logprob: -12.626754760742188
    7. '())' → logprob: -13.501754760742188
    8. '[]' → logprob: -14.501754760742188
    9. '()`' → logprob: -14.626754760742188
    10. '()]' → logprob: -15.126754760742188

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23677298426628113
    2. ' for' → logprob: -1.7367730140686035
    3. 'for' → logprob: -3.3617730140686035
    4. '    
' → logprob: -9.986772537231445
    5. '```' → logprob: -11.861772537231445
    6. 'n' → logprob: -12.736772537231445
    7. '	for' → logprob: -12.861772537231445
    8. ' n' → logprob: -12.986772537231445
    9. ' if' → logprob: -13.986772537231445
    10. 'if' → logprob: -14.236772537231445

Token 549: ' for' (ID: 395)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.36533042788505554
    2. 'for' (adapté à ' for') → logprob: -1.865330457687378
    3. 'expression' → logprob: -2.115330457687378
    4. '   ' → logprob: -4.240330219268799
    5. 's' → logprob: -4.365330219268799
    6. 'n' → logprob: -6.365330219268799
    7. 'if' → logprob: -7.490330219268799
    8. 'formula' → logprob: -7.865330219268799
    9. 'express' → logprob: -8.365330696105957
    10. 't' → logprob: -8.740330696105957

Token 550: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.08005478233098984
    2. ' line' → logprob: -2.580054759979248
    3. 'expr' → logprob: -6.830054759979248
    4. ' expr' → logprob: -9.830055236816406
    5. 's' → logprob: -10.705055236816406
    6. ' s' → logprob: -12.705055236816406
    7. '   ' → logprob: -13.580055236816406
    8. 'expression' → logprob: -13.955055236816406
    9. 'i' → logprob: -14.080055236816406
    10. ' expression' → logprob: -14.580055236816406

Token 551: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016161426901817322
    2. 'in' → logprob: -6.62661600112915
    3. '   ' → logprob: -8.751616477966309
    4. ':' → logprob: -9.376616477966309
    5. ',' → logprob: -11.001616477966309
    6. '       ' → logprob: -11.501616477966309
    7. '[' → logprob: -12.376616477966309
    8. ' :' → logprob: -13.126616477966309
    9. '_in' → logprob: -13.251616477966309
    10. '  ' → logprob: -13.501616477966309

Token 552: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. 'sys' → logprob: -17.133615493774414
    4. '(input' → logprob: -17.383615493774414
    5. 'import' → logprob: -18.758615493774414
    6. '<input' → logprob: -18.758615493774414
    7. ' ' → logprob: -19.508615493774414
    8. 'line' → logprob: -19.633615493774414
    9. '_input' → logprob: -19.633615493774414
    10. 'range' → logprob: -20.258615493774414

Token 553: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011010685004293919
    2. ':
' → logprob: -4.636010646820068
    3. '       ' → logprob: -7.886010646820068
    4. '():' → logprob: -8.136011123657227
    5. '():
' → logprob: -8.261011123657227
    6. '):' → logprob: -9.261011123657227
    7. ',' → logprob: -9.886011123657227
    8. '   ' → logprob: -10.136011123657227
    9. '<|end|>' → logprob: -10.136011123657227
    10. '<|end|>' → logprob: -10.761011123657227

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -14.250001907348633
    3. '<|end|>' → logprob: -14.875001907348633
    4. '        
' → logprob: -15.125001907348633
    5. '```' → logprob: -15.500001907348633
    6. ',' → logprob: -15.875001907348633
    7. ' if' → logprob: -16.000001907348633
    8. 'if' → logprob: -16.125001907348633
    9. '	   ' → logprob: -16.375001907348633
    10. '[' → logprob: -17.000001907348633

Token 555: ' if' (ID: 538)
  Prédit: 'cla'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -0.3603553771972656
    2. 'if' (adapté à ' if') → logprob: -2.1103553771972656
    3. '       ' → logprob: -2.3603553771972656
    4. ' if' → logprob: -2.8603553771972656
    5. ' clauses' → logprob: -3.6103553771972656
    6. 'cl' → logprob: -6.485355377197266
    7. 'expr' → logprob: -7.860355377197266
    8. 'line' → logprob: -8.485355377197266
    9. 's' → logprob: -8.735355377197266
    10. '   ' → logprob: -9.360355377197266

Token 556: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.32079648971557617
    2. 'not' → logprob: -1.3207964897155762
    3. 'line' → logprob: -5.320796489715576
    4. ' line' → logprob: -5.945796489715576
    5. 'len' → logprob: -14.695796966552734
    6. '(line' → logprob: -16.070796966552734
    7. ' len' → logprob: -16.320796966552734
    8. '#line' → logprob: -16.445796966552734
    9. ' ' → logprob: -16.945796966552734
    10. '!' → logprob: -17.320796966552734

Token 557: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1213938295841217
    2. '==' → logprob: -2.246393918991089
    3. '.startswith' → logprob: -5.37139368057251
    4. '.strip' → logprob: -5.62139368057251
    5. '()==' → logprob: -9.121394157409668
    6. ':' → logprob: -10.496394157409668
    7. '=' → logprob: -10.871394157409668
    8. ' ==
' → logprob: -10.996394157409668
    9. ' =' → logprob: -11.371394157409668
    10. '<|end|>' → logprob: -11.371394157409668

Token 558: ' '#' (ID: 11284)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.609152615070343
    2. '"' → logprob: -1.7341525554656982
    3. '""' → logprob: -1.8591525554656982
    4. ''' → logprob: -2.3591525554656982
    5. '"":' → logprob: -3.6091525554656982
    6. ' '':
' → logprob: -7.734152793884277
    7. ' '' → logprob: -7.984152793884277
    8. ' "":
' → logprob: -8.109152793884277
    9. ''t' → logprob: -8.609152793884277
    10. ''#' → logprob: -8.609152793884277

Token 559: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.22959235310554504
    2. '':' → logprob: -1.6045923233032227
    3. '':
' → logprob: -5.979592323303223
    4. '#' → logprob: -7.479592323303223
    5. ''' → logprob: -7.604592323303223
    6. '\n' → logprob: -8.229592323303223
    7. ''):
' → logprob: -8.604592323303223
    8. '__':
' → logprob: -9.979592323303223
    9. ''#' → logprob: -10.979592323303223
    10. '':

' → logprob: -11.479592323303223

Token 560: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017187348566949368
    2. '       ' → logprob: -6.376718521118164
    3. ' break' → logprob: -12.501718521118164
    4. 'break' → logprob: -12.501718521118164
    5. '	       ' → logprob: -12.876718521118164
    6. '<|end|>' → logprob: -13.126718521118164
    7. '		' → logprob: -13.376718521118164
    8. '   ' → logprob: -14.126718521118164
    9. '               ' → logprob: -14.501718521118164
    10. '```' → logprob: -14.751718521118164

Token 561: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.16949698328971863
    2. '           ' → logprob: -1.919497013092041
    3. 'return' → logprob: -5.044497013092041
    4. ' break' → logprob: -6.294497013092041
    5. '       ' → logprob: -7.169497013092041
    6. '	break' → logprob: -9.419496536254883
    7. '               ' → logprob: -9.669496536254883
    8. '_break' → logprob: -11.919496536254883
    9. '	       ' → logprob: -12.044496536254883
    10. ' return' → logprob: -12.294496536254883

Token 562: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003268831642344594
    2. '<|end|>' → logprob: -8.750327110290527
    3. '        
' → logprob: -9.125327110290527
    4. '
' → logprob: -10.000327110290527
    5. '```' → logprob: -12.250327110290527
    6. '           ' → logprob: -13.125327110290527
    7. '<|end|>' → logprob: -13.250327110290527
    8. '   ' → logprob: -13.625327110290527
    9. ',' → logprob: -14.125327110290527
    10. '      ' → logprob: -14.625327110290527

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.908022285439074e-05
    2. '   ' → logprob: -10.000059127807617
    3. '<|end|>' → logprob: -12.375059127807617
    4. '```' → logprob: -12.750059127807617
    5. '        
' → logprob: -13.125059127807617
    6. '           ' → logprob: -13.375059127807617
    7. '	' → logprob: -13.750059127807617
    8. '	   ' → logprob: -14.375059127807617
    9. '      ' → logprob: -15.000059127807617
    10. ',' → logprob: -15.750059127807617

Token 564: ' clauses' (ID: 99572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3346501588821411
    2. 'cla' → logprob: -1.4596501588821411
    3. ' clauses' → logprob: -2.9596500396728516
    4. '   ' → logprob: -9.459650039672852
    5. 'cl' → logprob: -9.834650039672852
    6. 'express' → logprob: -10.834650039672852
    7. 'expr' → logprob: -10.959650039672852
    8. '```' → logprob: -11.334650039672852
    9. '        
' → logprob: -11.834650039672852
    10. 's' → logprob: -11.834650039672852

Token 565: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.393150329589844
    4. '＝' → logprob: -16.893150329589844
    5. ' =)' → logprob: -17.268150329589844
    6. ')' → logprob: -17.518150329589844
    7. '=parse' → logprob: -17.893150329589844
    8. ' =
' → logprob: -18.268150329589844
    9. ',' → logprob: -18.768150329589844
    10. 's' → logprob: -18.768150329589844

Token 566: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.048589304089546204
    2. ' parse' → logprob: -3.0485892295837402
    3. '(parse' → logprob: -13.298589706420898
    4. '=parse' → logprob: -15.923589706420898
    5. '	parse' → logprob: -16.4235897064209
    6. '_parse' → logprob: -18.4235897064209
    7. '.parse' → logprob: -18.9235897064209
    8. '   ' → logprob: -21.7985897064209
    9. 'parser' → logprob: -22.5485897064209
    10. 'parsed' → logprob: -23.9235897064209

Token 567: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -2.2200749754119897e-06
    2. 'expression' → logprob: -13.500001907348633
    3. '_' → logprob: -15.250001907348633
    4. '_ex' → logprob: -15.500001907348633
    5. '(expression' → logprob: -15.500001907348633
    6. '_exp' → logprob: -16.750001907348633
    7. '_expr' → logprob: -18.250001907348633
    8. '_(' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. '_sentence' → logprob: -18.875001907348633

Token 568: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -15.750005722045898
    4. '[line' → logprob: -17.3750057220459
    5. '(lines' → logprob: -17.3750057220459
    6. '#line' → logprob: -17.6250057220459
    7. '(Line' → logprob: -17.7500057220459
    8. '(s' → logprob: -18.1250057220459
    9. '=line' → logprob: -18.2500057220459
    10. ',line' → logprob: -19.2500057220459

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002330992283532396
    2. '       ' → logprob: -8.625232696533203
    3. ')
' → logprob: -9.875232696533203
    4. '   ' → logprob: -13.750232696533203
    5. ' )' → logprob: -15.750232696533203
    6. '))' → logprob: -16.000232696533203
    7. '),' → logprob: -16.500232696533203
    8. ')`' → logprob: -16.625232696533203
    9. '<|end|>' → logprob: -16.750232696533203
    10. '())' → logprob: -16.875232696533203

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010797139257192612
    2. '   ' → logprob: -5.260797023773193
    3. 'result' → logprob: -5.260797023773193
    4. ' result' → logprob: -8.510797500610352
    5. 'if' → logprob: -9.510797500610352
    6. '```' → logprob: -10.510797500610352
    7. ' if' → logprob: -11.260797500610352
    8. 'print' → logprob: -11.385797500610352
    9. '
' → logprob: -11.760797500610352
    10. 'results' → logprob: -12.385797500610352

Token 571: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04721752181649208
    2. 'res' → logprob: -3.297217607498169
    3. 'print' (adapté à ' print') → logprob: -5.29721736907959
    4. 'if' → logprob: -6.17221736907959
    5. ' result' → logprob: -6.29721736907959
    6. ' res' → logprob: -9.17221736907959
    7. '       ' → logprob: -10.17221736907959
    8. ' if' → logprob: -11.17221736907959
    9. 'answer' → logprob: -11.29721736907959
    10. 'ans' → logprob: -11.42221736907959

Token 572: '("' (ID: 568)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0032723029144108295
    2. '(' → logprob: -6.503272533416748
    3. '("' → logprob: -7.503272533416748
    4. '('' → logprob: -7.503272533416748
    5. '(int' → logprob: -7.628272533416748
    6. 'solve' → logprob: -9.00327205657959
    7. '(bool' → logprob: -10.00327205657959
    8. 'int' → logprob: -12.00327205657959
    9. '(True' → logprob: -12.62827205657959
    10. '(sol' → logprob: -14.75327205657959

Token 573: 'yes' (ID: 6763)
  Prédit: 'SAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SAT' → logprob: -1.1246850490570068
    2. 'True' → logprob: -1.2496850490570068
    3. 'YES' → logprob: -1.6246850490570068
    4. 'Yes' → logprob: -2.124685049057007
    5. 's' → logprob: -3.249685049057007
    6. '1' → logprob: -4.874685287475586
    7. 'sat' → logprob: -5.124685287475586
    8. 'true' → logprob: -5.249685287475586
    9. 'Sat' → logprob: -5.374685287475586
    10. 'yes' → logprob: -5.874685287475586

Token 574: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12697839736938477
    2. '")' → logprob: -2.1269783973693848
    3. '")
' → logprob: -10.626977920532227
    4. '```' → logprob: -11.126977920532227
    5. 'if' → logprob: -12.501977920532227
    6. ' if' → logprob: -13.001977920532227
    7. '");' → logprob: -13.376977920532227
    8. ''' → logprob: -14.251977920532227
    9. ')' → logprob: -14.501977920532227
    10. '""' → logprob: -14.626977920532227

Token 575: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016780303791165352
    2. ' if' → logprob: -4.141780376434326
    3. 'if' → logprob: -7.641780376434326
    4. ' )' → logprob: -9.016779899597168
    5. ',' → logprob: -9.266779899597168
    6. '")' → logprob: -11.016779899597168
    7. '   ' → logprob: -11.391779899597168
    8. '()' → logprob: -11.766779899597168
    9. ',)' → logprob: -13.141779899597168
    10. ')")' → logprob: -13.266779899597168

Token 576: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.10020732134580612
    2. ' solve' → logprob: -2.3502073287963867
    3. '.solve' → logprob: -14.600207328796387
    4. '   ' → logprob: -16.22520637512207
    5. '       ' → logprob: -16.85020637512207
    6. ' ' → logprob: -17.10020637512207
    7. '           ' → logprob: -17.22520637512207
    8. 'sol' → logprob: -17.47520637512207
    9. 'solver' → logprob: -18.72520637512207
    10. '    ' → logprob: -18.85020637512207

Token 577: '_sat' (ID: 157440)
  Prédit: '_sat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sat' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.000001907348633
    3. 'sat' → logprob: -15.500001907348633
    4. '_s' → logprob: -15.500001907348633
    5. '_sent' → logprob: -15.625001907348633
    6. '_sal' → logprob: -16.250001907348633
    7. '_sol' → logprob: -16.375001907348633
    8. '```' → logprob: -16.375001907348633
    9. '_sa' → logprob: -16.750001907348633
    10. '_soc' → logprob: -17.000001907348633

Token 578: '_en' (ID: 12483)
  Prédit: '_en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_en' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.750001907348633
    3. '_sat' → logprob: -14.375001907348633
    4. 'en' → logprob: -14.750001907348633
    5. '_eng' → logprob: -17.375001907348633
    6. 'sat' → logprob: -17.750001907348633
    7. ' en' → logprob: -17.875001907348633
    8. ' _' → logprob: -18.375001907348633
    9. '```' → logprob: -18.375001907348633
    10. 's' → logprob: -18.625001907348633

Token 579: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.584239938296378e-06
    2. '3' → logprob: -12.125007629394531
    3. '_en' → logprob: -13.875007629394531
    4. ' _' → logprob: -14.625007629394531
    5. ')_' → logprob: -15.875007629394531
    6. '(' → logprob: -16.12500762939453
    7. '```' → logprob: -16.37500762939453
    8. '__' → logprob: -16.62500762939453
    9. '(_' → logprob: -17.25000762939453
    10. '   ' → logprob: -17.37500762939453

Token 580: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006715728435665369
    2. '_' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.256715774536133
    4. '```' → logprob: -16.256715774536133
    5. '(' → logprob: -17.506715774536133
    6. '   ' → logprob: -17.881715774536133
    7. '[' → logprob: -18.006715774536133
    8. '-' → logprob: -18.131715774536133
    9. '__' → logprob: -18.131715774536133
    10. '
' → logprob: -18.444215774536133

Token 581: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. ' (' → logprob: -14.375000953674316
    3. ')' → logprob: -15.375000953674316
    4. '(cl' → logprob: -15.750000953674316
    5. 'cla' → logprob: -16.875001907348633
    6. ')(' → logprob: -17.625001907348633
    7. '```' → logprob: -17.625001907348633
    8. '[' → logprob: -18.250001907348633
    9. '(
' → logprob: -18.500001907348633
    10. '(classes' → logprob: -18.625001907348633

Token 582: 'cla' (ID: 16530)
  Prédit: 'cla'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cla' → logprob: -1.981667537620524e-06
    2. ' clauses' → logprob: -13.500001907348633
    3. '(' → logprob: -15.000001907348633
    4. ')' → logprob: -16.125001907348633
    5. '[' → logprob: -17.375001907348633
    6. 'cl' → logprob: -18.000001907348633
    7. 'Cla' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. 'cls' → logprob: -19.000001907348633
    10. '_cl' → logprob: -19.875001907348633

Token 583: 'uses' (ID: 5977)
  Prédit: 'uses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.0013584480620920658
    2. 'ause' → logprob: -7.751358509063721
    3. 'ases' → logprob: -8.751358032226562
    4. '_' → logprob: -9.001358032226562
    5. 'a' → logprob: -9.126358032226562
    6. '   ' → logprob: -9.126358032226562
    7. 'r' → logprob: -9.376358032226562
    8. 'aus' → logprob: -9.876358032226562
    9. '```' → logprob: -10.001358032226562
    10. ')' → logprob: -10.626358032226562

Token 584: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002512639155611396
    2. '(line' → logprob: -6.002512454986572
    3. 'else' → logprob: -10.87751293182373
    4. ')==' → logprob: -12.25251293182373
    5. '   ' → logprob: -12.50251293182373
    6. ' else' → logprob: -13.00251293182373
    7. '(lines' → logprob: -13.25251293182373
    8. '))' → logprob: -13.37751293182373
    9. '[line' → logprob: -13.37751293182373
    10. '(cl' → logprob: -14.50251293182373

Token 585: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2029869109392166
    2. 'else' → logprob: -1.7029869556427002
    3. ')' → logprob: -6.827986717224121
    4. '==' → logprob: -7.702986717224121
    5. '   ' → logprob: -11.077986717224121
    6. ' ==' → logprob: -11.702986717224121
    7. '()' → logprob: -12.452986717224121
    8. '	else' → logprob: -12.827986717224121
    9. '(' → logprob: -12.952986717224121
    10. '       ' → logprob: -14.202986717224121

Token 586: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007211300544440746
    2. ' "' → logprob: -7.250720977783203
    3. '("' → logprob: -11.750720977783203
    4. ' ' → logprob: -13.875720977783203
    5. '   ' → logprob: -13.875720977783203
    6. ''' → logprob: -14.125720977783203
    7. '"No' → logprob: -14.750720977783203
    8. '(' → logprob: -15.875720977783203
    9. '  ' → logprob: -17.375720977783203
    10. ' ' → logprob: -17.625720977783203

Token 587: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.0280383548888494e-06
    2. ' no' → logprob: -14.000000953674316
    3. '"' → logprob: -16.000001907348633
    4. '	no' → logprob: -20.375001907348633
    5. 'No' → logprob: -21.375001907348633
    6. 'NO' → logprob: -21.875001907348633
    7. '"No' → logprob: -22.000001907348633
    8. '(no' → logprob: -23.250001907348633
    9. 'n' → logprob: -24.750001907348633
    10. ':no' → logprob: -24.875001907348633

Token 588: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006544489413499832
    2. ')")' → logprob: -5.506544589996338
    3. ')' → logprob: -6.006544589996338
    4. '}")' → logprob: -15.38154411315918
    5. ')")
' → logprob: -16.88154411315918
    6. '")
' → logprob: -17.00654411315918
    7. ')"' → logprob: -17.13154411315918
    8. '')' → logprob: -18.38154411315918
    9. '"))' → logprob: -18.38154411315918
    10. '")}' → logprob: -18.50654411315918

Token 589: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08661789447069168
    2. '<|end|>' → logprob: -2.961617946624756
    3. '#' → logprob: -4.086617946624756
    4. '```' → logprob: -4.461617946624756
    5. '
' → logprob: -6.586617946624756
    6. ' if' → logprob: -6.961617946624756
    7. '<|end|>' → logprob: -7.836617946624756
    8. '\' → logprob: -9.961617469787598
    9. '%' → logprob: -10.461617469787598
    10. '\n' → logprob: -10.836617469787598

Token 590: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07906724512577057
    2. '__' → logprob: -2.5790672302246094
    3. '_' → logprob: -8.70406723022461
    4. ' ' → logprob: -12.07906723022461
    5. '_name' → logprob: -13.20406723022461
    6. ' ' → logprob: -13.95406723022461
    7. ' _' → logprob: -14.32906723022461
    8. '___' → logprob: -14.45406723022461
    9. '​' → logprob: -14.57906723022461
    10. ' ' → logprob: -14.95406723022461

Token 591: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022064218297600746
    2. ' ==' → logprob: -4.897064208984375
    3. '.__' → logprob: -5.397064208984375
    4. '==' → logprob: -5.522064208984375
    5. 'name' → logprob: -6.522064208984375
    6. '[' → logprob: -6.647064208984375
    7. '.' → logprob: -7.022064208984375
    8. '__.__' → logprob: -7.147064208984375
    9. '__[' → logprob: -8.022064208984375
    10. '__.' → logprob: -8.647064208984375

Token 592: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004529566504061222
    2. '__.__' → logprob: -7.875452995300293
    3. '==' → logprob: -9.875452995300293
    4. '__.' → logprob: -11.625452995300293
    5. '=="' → logprob: -11.750452995300293
    6. '__["' → logprob: -14.000452995300293
    7. '___' → logprob: -14.000452995300293
    8. ' ==' → logprob: -14.250452995300293
    9. '__('' → logprob: -14.500452995300293
    10. '=='' → logprob: -14.875452995300293

Token 593: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17414750158786774
    2. '==' → logprob: -1.9241474866867065
    3. ' ==' → logprob: -4.674147605895996
    4. '=="' → logprob: -5.424147605895996
    5. '=='' → logprob: -9.674147605895996
    6. '__.__' → logprob: -11.549147605895996
    7. '===' → logprob: -12.424147605895996
    8. '___' → logprob: -12.924147605895996
    9. '__["' → logprob: -13.924147605895996
    10. '=' → logprob: -14.049147605895996

Token 594: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018161412328481674
    2. ''' → logprob: -4.018161296844482
    3. '__' → logprob: -12.01816177368164
    4. ' "__' → logprob: -12.14316177368164
    5. ' '__' → logprob: -16.39316177368164
    6. '"user' → logprob: -17.76816177368164
    7. '"name' → logprob: -17.76816177368164
    8. ''"' → logprob: -18.76816177368164
    9. '("__' → logprob: -19.01816177368164
    10. '('__' → logprob: -20.26816177368164

Token 595: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0024705438409000635
    2. '__' → logprob: -6.12747049331665
    3. 'name' → logprob: -9.127470970153809
    4. '"' → logprob: -9.127470970153809
    5. ''' → logprob: -9.752470970153809
    6. '```' → logprob: -12.752470970153809
    7. '_main' → logprob: -13.002470970153809
    8. '__":
' → logprob: -14.127470970153809
    9. 'built' → logprob: -14.252470970153809
    10. ' main' → logprob: -14.502470970153809

Token 596: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3879910409450531
    2. '__' → logprob: -1.1379910707473755
    3. '__':
' → logprob: -7.012990951538086
    4. '__:' → logprob: -9.512990951538086
    5. '__.__' → logprob: -10.012990951538086
    6. '__.' → logprob: -10.012990951538086
    7. '__["' → logprob: -10.262990951538086
    8. '_' → logprob: -12.512990951538086
    9. '__
' → logprob: -12.637990951538086
    10. '.' → logprob: -13.137990951538086

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040437791496515274
    2. '	main' → logprob: -3.665437698364258
    3. ' main' → logprob: -4.415437698364258
    4. 'main' → logprob: -6.290437698364258
    5. '   ' → logprob: -9.540437698364258
    6. '_main' → logprob: -11.540437698364258
    7. '	Main' → logprob: -12.915437698364258
    8. '    
' → logprob: -13.040437698364258
    9. ' ' → logprob: -13.290437698364258
    10. '<|end|>' → logprob: -13.665437698364258

Token 598: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.7697225252486533e-06
    2. ' main' → logprob: -12.500003814697266
    3. '	main' → logprob: -18.250003814697266
    4. '   ' → logprob: -19.000003814697266
    5. '_main' → logprob: -23.625003814697266
    6. '.main' → logprob: -24.625003814697266
    7. '(main' → logprob: -25.000003814697266
    8. ' ' → logprob: -25.625003814697266
    9. 'import' → logprob: -25.625003814697266
    10. '  ' → logprob: -26.375003814697266

Token 599: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 597
Tokens correctement prédits (1ère position, stricte): 217
Tokens correctement prédits (1ère position, avec adaptation): 237
Tokens correctement prédits (top 10): 463
Précision stricte (1ère position): 36.35%
Précision adaptée (1ère position): 39.70%
Précision (top 10): 77.55%
================================================================================
