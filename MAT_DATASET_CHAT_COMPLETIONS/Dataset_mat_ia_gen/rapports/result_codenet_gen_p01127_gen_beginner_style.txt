================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_rectangle(cells):
    rows = [r for r, c in cells]
    cols = [c for r, c in cells]
    min_r, max_r = min(rows), max(rows)
    min_c, max_c = min(cols), max(cols)
    for r in range(min_r, max_r + 1):
        for c in range(min_c, max_c + 1):
            if (r, c) not in cells:
                return False
    return True

def main():
    t = int(input())
    for _ in range(t):
        H, W = map(int, input().split())
        grid = [input() for __ in range(H)]
        materials = {}
        for r in range(H):
            for c in range(W):
                ch = grid[r][c]
                if ch != '.':
                    if ch not in materials:
                        materials[ch] = []
                    materials[ch].append((r, c))
        suspicious = False
        for m in materials:
            if not is_rectangle(materials[m]):
                suspicious = True
                break
        if suspicious:
            print("SUSPICIOUS")
        else:
            print("SAFE")

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_rectangle' (ID: 166619)
  → Token d'amorce (pas de prédiction)

Token 3: '(c' (ID: 2410)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3370901048183441
    2. '(' → logprob: -1.3370901346206665
    3. '_:' → logprob: -4.087090015411377
    4. '```' → logprob: -6.087090015411377
    5. '(_:' → logprob: -6.337090015411377
    6. '(_' → logprob: -6.837090015411377
    7. '_(' → logprob: -7.337090015411377
    8. '(:' → logprob: -7.587090015411377
    9. '(a' → logprob: -9.587090492248535
    10. '(x' → logprob: -10.337090492248535

Token 4: 'ells' (ID: 9703)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.005940770730376244
    2. '):' → logprob: -6.130940914154053
    3. 'h' → logprob: -7.130940914154053
    4. '_' → logprob: -7.630940914154053
    5. 'c' → logprob: -7.755940914154053
    6. 'a' → logprob: -8.255940437316895
    7. '```' → logprob: -8.255940437316895
    8. 'e' → logprob: -8.505940437316895
    9. ' ):' → logprob: -8.630940437316895
    10. 'ode' → logprob: -8.630940437316895

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008997781202197075
    2. ')' → logprob: -4.883997917175293
    3. '[' → logprob: -7.133997917175293
    4. ':' → logprob: -8.008997917175293
    5. '):
' → logprob: -9.383997917175293
    6. ',' → logprob: -9.883997917175293
    7. '```' → logprob: -10.008997917175293
    8. '[]):' → logprob: -10.258997917175293
    9. '   ' → logprob: -11.508997917175293
    10. ']:' → logprob: -12.383997917175293

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25792422890663147
    2. '(' → logprob: -2.0079243183135986
    3. '   ' → logprob: -2.6329243183135986
    4. '```' → logprob: -4.2579240798950195
    5. '():' → logprob: -6.0079240798950195
    6. '    
' → logprob: -6.8829240798950195
    7. '(:' → logprob: -7.6329240798950195
    8. '):' → logprob: -7.7579240798950195
    9. '``' → logprob: -8.00792407989502
    10. ''' → logprob: -8.25792407989502

Token 7: ' rows' (ID: 13585)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11896950751543045
    2. '(' → logprob: -2.743969440460205
    3. '[' → logprob: -4.118969440460205
    4. ' ' → logprob: -4.493969440460205
    5. '```' → logprob: -5.243969440460205
    6. ':' → logprob: -5.743969440460205
    7. '\' → logprob: -6.493969440460205
    8. ''' → logprob: -6.493969440460205
    9. '    
' → logprob: -6.743969440460205
    10. '    ' → logprob: -6.868969440460205

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012296185828745365
    2. '[' → logprob: -5.387296199798584
    3. ' _' → logprob: -6.762296199798584
    4. '.' → logprob: -6.887296199798584
    5. ' =' → logprob: -6.887296199798584
    6. ')' → logprob: -7.137296199798584
    7. '=' → logprob: -7.262296199798584
    8. '```' → logprob: -7.512296199798584
    9. '_counts' → logprob: -8.012295722961426
    10. ''' → logprob: -8.137295722961426

Token 9: ' [' (ID: 723)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.35718822479248047
    2. ' set' → logprob: -2.4821882247924805
    3. '{}' → logprob: -2.6071882247924805
    4. 'len' → logprob: -2.8571882247924805
    5. ' {}' → logprob: -2.8571882247924805
    6. ' cells' → logprob: -3.9821882247924805
    7. 'set' → logprob: -5.1071882247924805
    8. ' list' → logprob: -7.3571882247924805
    9. '[len' → logprob: -7.4821882247924805
    10. ' defaultdict' → logprob: -7.8571882247924805

Token 10: 'r' (ID: 81)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.1224106028676033
    2. 'set' → logprob: -2.997410535812378
    3. 'row' → logprob: -3.997410535812378
    4. ' cell' → logprob: -4.122410774230957
    5. 'cells' → logprob: -4.122410774230957
    6. ' set' → logprob: -5.622410774230957
    7. 'c' → logprob: -5.872410774230957
    8. 'list' → logprob: -5.997410774230957
    9. '[]' → logprob: -6.497410774230957
    10. 'len' → logprob: -6.622410774230957

Token 11: ' for' (ID: 395)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.8883992433547974
    2. '[' → logprob: -1.0133992433547974
    3. ' for' → logprob: -2.013399124145508
    4. 'ows' → logprob: -2.638399124145508
    5. '.count' → logprob: -4.388399124145508
    6. 'for' → logprob: -5.888399124145508
    7. ' in' → logprob: -6.513399124145508
    8. ']' → logprob: -7.513399124145508
    9. '['' → logprob: -7.513399124145508
    10. 'ange' → logprob: -7.888399124145508

Token 12: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.10446474701166153
    2. 'r' → logprob: -2.6044647693634033
    3. ' cell' → logprob: -4.979464530944824
    4. ' c' → logprob: -5.354464530944824
    5. ' _' → logprob: -5.729464530944824
    6. '_' → logprob: -5.854464530944824
    7. ' row' → logprob: -5.979464530944824
    8. ' ' → logprob: -6.229464530944824
    9. 'cell' → logprob: -6.604464530944824
    10. 'c' → logprob: -7.604464530944824

Token 13: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01913560926914215
    2. 'ow' → logprob: -4.269135475158691
    3. ' ' → logprob: -5.644135475158691
    4. 'in' → logprob: -7.394135475158691
    5. 'ange' → logprob: -8.144135475158691
    6. ',' → logprob: -9.019135475158691
    7. ' r' → logprob: -9.144135475158691
    8. '_' → logprob: -9.519135475158691
    9. 'r' → logprob: -9.769135475158691
    10. ' row' → logprob: -10.644135475158691

Token 14: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2327757179737091
    2. 'c' → logprob: -1.7327756881713867
    3. '_' → logprob: -3.7327756881713867
    4. ' _' → logprob: -4.982775688171387
    5. '_c' → logprob: -9.982775688171387
    6. ' ' → logprob: -10.732775688171387
    7. '	c' → logprob: -10.857775688171387
    8. ',c' → logprob: -13.482775688171387
    9. '_,' → logprob: -13.982775688171387
    10. '    ' → logprob: -13.982775688171387

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.050840046256780624
    2. 'in' → logprob: -3.050840139389038
    3. ',' → logprob: -6.175839900970459
    4. 'n' → logprob: -9.800840377807617
    5. ' ,' → logprob: -10.675840377807617
    6. ')' → logprob: -10.800840377807617
    7. ' ' → logprob: -11.175840377807617
    8. 's' → logprob: -11.300840377807617
    9. '```' → logprob: -12.175840377807617
    10. '<|end|>' → logprob: -12.175840377807617

Token 16: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.3486700654029846
    2. 'cells' → logprob: -1.2236700057983398
    3. '.cells' → logprob: -9.84867000579834
    4. '[' → logprob: -10.34867000579834
    5. ' [' → logprob: -10.59867000579834
    6. 'cel' → logprob: -10.72367000579834
    7. 'c' → logprob: -11.34867000579834
    8. '[c' → logprob: -11.34867000579834
    9. '_cells' → logprob: -11.34867000579834
    10. ' ' → logprob: -11.84867000579834

Token 17: ']
' (ID: 1592)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6916254758834839
    2. ']' → logprob: -0.8166254758834839
    3. ' in' → logprob: -3.8166255950927734
    4. 'if' → logprob: -3.9416255950927734
    5. 'in' → logprob: -5.066625595092773
    6. ' ]' → logprob: -5.066625595092773
    7. ',' → logprob: -6.566625595092773
    8. '   ' → logprob: -7.316625595092773
    9. ' ' → logprob: -8.566625595092773
    10. ']==' → logprob: -9.066625595092773

Token 18: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26458418369293213
    2. '   ' → logprob: -1.8895841836929321
    3. ' if' → logprob: -3.2645840644836426
    4. 'cols' → logprob: -4.514584064483643
    5. ',
' → logprob: -5.014584064483643
    6. ' ,' → logprob: -5.264584064483643
    7. 'r' → logprob: -6.014584064483643
    8. 'columns' → logprob: -6.014584064483643
    9. ',c' → logprob: -6.014584064483643
    10. ' cols' → logprob: -6.389584064483643

Token 19: ' cols' (ID: 37134)
  Prédit: ' cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cols' → logprob: -0.8385248184204102
    2. 'cols' (adapté à ' cols') → logprob: -0.8385248184204102
    3. 'columns' → logprob: -2.83852481842041
    4. '   ' → logprob: -3.21352481842041
    5. ' columns' → logprob: -3.46352481842041
    6. ' if' → logprob: -6.33852481842041
    7. ' max' → logprob: -6.96352481842041
    8. ' min' → logprob: -7.33852481842041
    9. 'max' → logprob: -7.46352481842041
    10. ' return' → logprob: -8.21352481842041

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005235767923295498
    2. '=' → logprob: -5.25523567199707
    3. ' ' → logprob: -14.25523567199707
    4. ')' → logprob: -14.50523567199707
    5. ' =[' → logprob: -14.63023567199707
    6. '[' → logprob: -16.00523567199707
    7. 's' → logprob: -16.00523567199707
    8. ']' → logprob: -17.13023567199707
    9. '   ' → logprob: -17.50523567199707
    10. '=[]' → logprob: -17.63023567199707

Token 21: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.048745427280664444
    2. '[c' → logprob: -3.0487453937530518
    3. '[' → logprob: -8.798745155334473
    4. ' ' → logprob: -13.548745155334473
    5. '[t' → logprob: -13.923745155334473
    6. '[col' → logprob: -13.923745155334473
    7. '[f' → logprob: -14.173745155334473
    8. '[m' → logprob: -14.298745155334473
    9. '[r' → logprob: -14.548745155334473
    10. '[s' → logprob: -14.923745155334473

Token 22: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005251899361610413
    2. ' c' → logprob: -5.255251884460449
    3. '   ' → logprob: -12.00525188446045
    4. 'с' → logprob: -13.00525188446045
    5. ')c' → logprob: -13.25525188446045
    6. '	c' → logprob: -13.38025188446045
    7. '```' → logprob: -13.38025188446045
    8. 'col' → logprob: -13.50525188446045
    9. ' ' → logprob: -13.63025188446045
    10. 'cc' → logprob: -14.50525188446045

Token 23: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01424248144030571
    2. 'for' → logprob: -4.264242649078369
    3. ' in' → logprob: -10.264242172241211
    4. ' ' → logprob: -10.764242172241211
    5. ')' → logprob: -11.514242172241211
    6. 'in' → logprob: -12.389242172241211
    7. '	for' → logprob: -13.264242172241211
    8. '<|end|>' → logprob: -13.639242172241211
    9. '   ' → logprob: -13.764242172241211
    10. '```' → logprob: -14.014242172241211

Token 24: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14725784957408905
    2. ' r' → logprob: -2.0222578048706055
    3. 'c' → logprob: -6.5222578048706055
    4. ' c' → logprob: -6.6472578048706055
    5. ',' → logprob: -7.1472578048706055
    6. '_,' → logprob: -8.772257804870605
    7. ' ,' → logprob: -9.022257804870605
    8. ',r' → logprob: -9.022257804870605
    9. 'col' → logprob: -9.147257804870605
    10. ' col' → logprob: -9.397257804870605

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019985849503427744
    2. ' in' → logprob: -6.626998424530029
    3. ' ,' → logprob: -7.376998424530029
    4. ',c' → logprob: -10.501998901367188
    5. 'in' → logprob: -11.501998901367188
    6. '<|end|>' → logprob: -13.126998901367188
    7. '‌,' → logprob: -13.376998901367188
    8. ',col' → logprob: -13.751998901367188
    9. ' ' → logprob: -14.626998901367188
    10. ',column' → logprob: -15.126998901367188

Token 26: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.326072096824646
    2. ' c' → logprob: -1.326072096824646
    3. 'cells' → logprob: -4.9510722160339355
    4. ' cells' → logprob: -5.3260722160339355
    5. 'cols' → logprob: -7.4510722160339355
    6. ' cols' → logprob: -9.701071739196777
    7. ')c' → logprob: -10.826071739196777
    8. 'col' → logprob: -11.201071739196777
    9. ' ' → logprob: -11.201071739196777
    10. '```' → logprob: -11.201071739196777

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03366713970899582
    2. 'in' → logprob: -3.4086670875549316
    3. 'import' → logprob: -12.40866756439209
    4. ' ' → logprob: -12.65866756439209
    5. 's' → logprob: -12.78366756439209
    6. 'cells' → logprob: -12.90866756439209
    7. '```' → logprob: -13.15866756439209
    8. 'n' → logprob: -13.65866756439209
    9. '<|end|>' → logprob: -14.40866756439209
    10. '   ' → logprob: -14.53366756439209

Token 28: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.523345410823822
    2. 'cells' → logprob: -0.898345410823822
    3. '.cells' → logprob: -10.023344993591309
    4. ' ' → logprob: -10.273344993591309
    5. 'cel' → logprob: -10.523344993591309
    6. 'rows' → logprob: -10.648344993591309
    7. '   ' → logprob: -10.648344993591309
    8. 'c' → logprob: -11.148344993591309
    9. '_cells' → logprob: -11.398344993591309
    10. ')' → logprob: -11.773344993591309

Token 29: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023226479243021458
    2. ')' → logprob: -9.250232696533203
    3. ']
' → logprob: -10.000232696533203
    4. '])' → logprob: -10.000232696533203
    5. ')]' → logprob: -10.500232696533203
    6. ' ]' → logprob: -12.000232696533203
    7. '']' → logprob: -12.500232696533203
    8. '   ' → logprob: -12.875232696533203
    9. '`]' → logprob: -12.875232696533203
    10. '()]' → logprob: -13.875232696533203

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05895693972706795
    2. 'return' → logprob: -3.6839568614959717
    3. '```' → logprob: -5.183957099914551
    4. '    
' → logprob: -5.683957099914551
    5. ' return' → logprob: -5.933957099914551
    6. '``' → logprob: -6.183957099914551
    7. '
' → logprob: -6.308957099914551
    8. ',' → logprob: -6.433957099914551
    9. 'set' → logprob: -6.558957099914551
    10. 'max' → logprob: -6.683957099914551

Token 31: ' min' (ID: 1349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8679296374320984
    2. ' min' → logprob: -1.7429296970367432
    3. ' if' → logprob: -1.9929296970367432
    4. 'r' → logprob: -2.242929697036743
    5. 'min' (adapté à ' min') → logprob: -2.492929697036743
    6. ' max' → logprob: -3.992929697036743
    7. ' return' → logprob: -4.242929458618164
    8. 'max' → logprob: -4.367929458618164
    9. 'return' → logprob: -4.742929458618164
    10. 'if' → logprob: -4.992929458618164

Token 32: '_r' (ID: 3442)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14767299592494965
    2. '(rows' → logprob: -2.8976728916168213
    3. '_rows' → logprob: -3.5226728916168213
    4. '(_' → logprob: -3.6476728916168213
    5. '(' → logprob: -4.1476731300354
    6. '_row' → logprob: -4.8976731300354
    7. '(_)' → logprob: -6.6476731300354
    8. ' _' → logprob: -6.7726731300354
    9. '```' → logprob: -8.397672653198242
    10. '_(' → logprob: -8.897672653198242

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5037544965744019
    2. '_' → logprob: -1.0037544965744019
    3. '=' → logprob: -3.6287546157836914
    4. ',' → logprob: -6.378754615783691
    5. ' ' → logprob: -7.753754615783691
    6. ' _' → logprob: -8.628754615783691
    7. '_=' → logprob: -8.878754615783691
    8. ')' → logprob: -9.503754615783691
    9. '=min' → logprob: -10.753754615783691
    10. '(' → logprob: -10.878754615783691

Token 34: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.018586505204439163
    2. 'max' → logprob: -4.1435866355896
    3. ' min' → logprob: -6.1435866355896
    4. ' ' → logprob: -8.643586158752441
    5. '_max' → logprob: -9.643586158752441
    6. ' =' → logprob: -9.768586158752441
    7. '=max' → logprob: -10.393586158752441
    8. 'min' → logprob: -10.643586158752441
    9. '=' → logprob: -11.518586158752441
    10. '<|end|>' → logprob: -11.518586158752441

Token 35: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.13015441596508026
    2. '_' → logprob: -2.1301543712615967
    3. '(' → logprob: -6.505154609680176
    4. '_rows' → logprob: -7.505154609680176
    5. '(_' → logprob: -7.755154609680176
    6. '(rows' → logprob: -8.505154609680176
    7. ' _' → logprob: -8.755154609680176
    8. '(r' → logprob: -9.005154609680176
    9. '_row' → logprob: -9.130154609680176
    10. ')' → logprob: -10.505154609680176

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03372177481651306
    2. '=' → logprob: -3.408721685409546
    3. ',' → logprob: -9.533721923828125
    4. ' ' → logprob: -12.908721923828125
    5. ' ,' → logprob: -14.408721923828125
    6. ')' → logprob: -15.033721923828125
    7. ' =
' → logprob: -15.283721923828125
    8. ' =)' → logprob: -16.783721923828125
    9. '<|end|>' → logprob: -17.158721923828125
    10. '=

' → logprob: -17.783721923828125

Token 37: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0004894073354080319
    2. 'min' → logprob: -7.625489234924316
    3. '(min' → logprob: -13.875489234924316
    4. ' ' → logprob: -15.250489234924316
    5. '	min' → logprob: -15.625489234924316
    6. '   ' → logprob: -17.250490188598633
    7. '=min' → logprob: -17.250490188598633
    8. '[min' → logprob: -17.500490188598633
    9. ' mini' → logprob: -17.750490188598633
    10. ' max' → logprob: -18.000490188598633

Token 38: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -4.763666947837919e-05
    2. '(' → logprob: -10.75004768371582
    3. 'rows' → logprob: -10.75004768371582
    4. ' rows' → logprob: -13.62504768371582
    5. '_rows' → logprob: -13.75004768371582
    6. '	rows' → logprob: -13.75004768371582
    7. '(r' → logprob: -14.25004768371582
    8. ' (' → logprob: -14.87504768371582
    9. '(row' → logprob: -16.25004768371582
    10. '_' → logprob: -16.50004768371582

Token 39: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5236018300056458
    2. '),' → logprob: -0.8986018300056458
    3. ' ,' → logprob: -8.523601531982422
    4. ' ),' → logprob: -8.898601531982422
    5. ')' → logprob: -9.398601531982422
    6. ',),' → logprob: -10.148601531982422
    7. ' ' → logprob: -11.523601531982422
    8. '   ' → logprob: -12.398601531982422
    9. '>,' → logprob: -13.148601531982422
    10. ',min' → logprob: -14.273601531982422

Token 40: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.008619539439678192
    2. 'max' → logprob: -4.75861930847168
    3. ' ' → logprob: -13.00861930847168
    4. '(max' → logprob: -13.38361930847168
    5. '	max' → logprob: -15.13361930847168
    6. ' ' → logprob: -15.25861930847168
    7. '    ' → logprob: -15.25861930847168
    8. '  ' → logprob: -16.13361930847168
    9. ',max' → logprob: -16.63361930847168
    10. '_max' → logprob: -16.63361930847168

Token 41: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.0740809291601181
    2. '(' → logprob: -3.0740809440612793
    3. '_r' → logprob: -3.9490809440612793
    4. '_rows' → logprob: -5.949080944061279
    5. '(r' → logprob: -6.574080944061279
    6. '_' → logprob: -6.699080944061279
    7. '(_' → logprob: -7.824080944061279
    8. '(cols' → logprob: -9.699080467224121
    9. '(row' → logprob: -10.449080467224121
    10. ' (' → logprob: -10.574080467224121

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019173922191839665
    2. ')
' → logprob: -9.000191688537598
    3. ' )' → logprob: -10.875191688537598
    4. '   ' → logprob: -11.125191688537598
    5. ')+' → logprob: -11.375191688537598
    6. '+' → logprob: -11.625191688537598
    7. '),' → logprob: -12.125191688537598
    8. '))' → logprob: -13.250191688537598
    9. ')

' → logprob: -13.500191688537598
    10. '```' → logprob: -13.625191688537598

Token 43: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' min' (ID: 1349)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0927159786224365
    2. ' ' → logprob: -1.5927159786224365
    3. ' min' → logprob: -2.3427159786224365
    4. ' max' → logprob: -2.5927159786224365
    5. 'min' (adapté à ' min') → logprob: -2.5927159786224365
    6. 'max' → logprob: -3.3427159786224365
    7. '  
' → logprob: -3.4677159786224365
    8. '<|end|>' → logprob: -3.4677159786224365
    9. '   ' → logprob: -3.7177159786224365
    10. '+' → logprob: -3.9677159786224365

Token 45: '_c' (ID: 1303)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.6418448090553284
    2. '_' → logprob: -0.8918448090553284
    3. '_c' → logprob: -2.7668447494506836
    4. ' _' → logprob: -7.141844749450684
    5. '_cols' → logprob: -9.516844749450684
    6. '_col' → logprob: -10.641844749450684
    7. '_s' → logprob: -11.516844749450684
    8. 'r' → logprob: -12.766844749450684
    9. '_rows' → logprob: -12.891844749450684
    10. '_,' → logprob: -13.266844749450684

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001955537445610389
    2. ',c' → logprob: -9.125195503234863
    3. ' ,' → logprob: -9.500195503234863
    4. '<|end|>' → logprob: -11.625195503234863
    5. '=' → logprob: -14.375195503234863
    6. ' =' → logprob: -14.375195503234863
    7. '_,' → logprob: -15.500195503234863
    8. '‌,' → logprob: -15.625195503234863
    9. '`,' → logprob: -15.875195503234863
    10. ')' → logprob: -15.875195503234863

Token 47: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.005589106120169163
    2. 'max' → logprob: -5.255589008331299
    3. ' min' → logprob: -8.005589485168457
    4. ' ' → logprob: -11.505589485168457
    5. '(max' → logprob: -12.505589485168457
    6. 'min' → logprob: -13.255589485168457
    7. '_max' → logprob: -13.380589485168457
    8. '	max' → logprob: -13.880589485168457
    9. '"' → logprob: -14.130589485168457
    10. ',max' → logprob: -14.255589485168457

Token 48: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.013081998564302921
    2. '_cols' → logprob: -4.638082027435303
    3. '(cols' → logprob: -6.013082027435303
    4. '_' → logprob: -7.263082027435303
    5. 'cols' → logprob: -9.013081550598145
    6. ' cols' → logprob: -10.763081550598145
    7. '<|end|>' → logprob: -11.638081550598145
    8. '_columns' → logprob: -12.763081550598145
    9. '(' → logprob: -13.013081550598145
    10. 'Cols' → logprob: -13.138081550598145

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07019106298685074
    2. '=' → logprob: -2.6951911449432373
    3. ',' → logprob: -8.695191383361816
    4. '<|end|>' → logprob: -9.945191383361816
    5. ' ' → logprob: -10.445191383361816
    6. ')' → logprob: -12.570191383361816
    7. ' ,' → logprob: -12.695191383361816
    8. '  ' → logprob: -14.445191383361816
    9. ' =
' → logprob: -14.570191383361816
    10. '<|end|>' → logprob: -14.695191383361816

Token 50: ' min' (ID: 1349)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0028135518077760935
    2. 'max' → logprob: -6.002813339233398
    3. ' min' → logprob: -8.002813339233398
    4. '(max' → logprob: -13.127813339233398
    5. 'min' → logprob: -13.752813339233398
    6. ' cols' → logprob: -16.1278133392334
    7. ' ' → logprob: -16.6278133392334
    8. '=max' → logprob: -18.0028133392334
    9. ' col' → logprob: -18.3778133392334
    10. '	max' → logprob: -18.8778133392334

Token 51: '(cols' (ID: 176200)
  Prédit: '(cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cols' → logprob: -6.869017852295656e-06
    2. '(columns' → logprob: -13.250006675720215
    3. '(' → logprob: -13.375006675720215
    4. '_cols' → logprob: -13.750006675720215
    5. 'cols' → logprob: -14.000006675720215
    6. ' cols' → logprob: -14.000006675720215
    7. '(rows' → logprob: -14.875006675720215
    8. '(c' → logprob: -15.625006675720215
    9. '(chars' → logprob: -15.875006675720215
    10. ' (' → logprob: -16.50000762939453

Token 52: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02510090544819832
    2. ')' → logprob: -4.1501007080078125
    3. ',' → logprob: -4.7751007080078125
    4. ' ),' → logprob: -7.6501007080078125
    5. ' ,' → logprob: -9.525100708007812
    6. '   ' → logprob: -11.150100708007812
    7. ' )' → logprob: -11.650100708007812
    8. ' ' → logprob: -12.150100708007812
    9. ',max' → logprob: -13.150100708007812
    10. ')+' → logprob: -13.775100708007812

Token 53: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.003600901924073696
    2. 'max' → logprob: -5.62860107421875
    3. ' ' → logprob: -14.75360107421875
    4. '(max' → logprob: -15.50360107421875
    5. '	max' → logprob: -16.87860107421875
    6. '    ' → logprob: -17.50360107421875
    7. '  ' → logprob: -17.62860107421875
    8. ')' → logprob: -18.12860107421875
    9. '[max' → logprob: -18.25360107421875
    10. '   ' → logprob: -18.37860107421875

Token 54: '(cols' (ID: 176200)
  Prédit: '(cols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cols' → logprob: -0.003974393010139465
    2. '_cols' → logprob: -5.628974437713623
    3. '_c' → logprob: -8.753973960876465
    4. '(columns' → logprob: -9.628973960876465
    5. '(' → logprob: -9.878973960876465
    6. '(c' → logprob: -10.128973960876465
    7. '(_' → logprob: -10.503973960876465
    8. 'cols' → logprob: -11.003973960876465
    9. '(rows' → logprob: -12.128973960876465
    10. ' cols' → logprob: -13.128973960876465

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4272752852994017e-05
    2. ')
' → logprob: -11.62502384185791
    3. '+' → logprob: -11.75002384185791
    4. '   ' → logprob: -12.62502384185791
    5. ' )' → logprob: -13.25002384185791
    6. ')+' → logprob: -14.75002384185791
    7. '))' → logprob: -15.00002384185791
    8. '`)' → logprob: -15.25002384185791
    9. '+)' → logprob: -15.37502384185791
    10. ' ' → logprob: -15.75002384185791

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013207763433456421
    2. '
' → logprob: -5.138207912445068
    3. '    
' → logprob: -5.138207912445068
    4. '```' → logprob: -7.763207912445068
    5. '  
' → logprob: -8.26320743560791
    6. '<|end|>' → logprob: -9.13820743560791
    7. ' for' → logprob: -9.26320743560791
    8. '    ' → logprob: -9.63820743560791
    9. '   
' → logprob: -9.76320743560791
    10. '``' → logprob: -10.13820743560791

Token 57: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17810139060020447
    2. ' for' → logprob: -2.1781013011932373
    3. ' return' → logprob: -4.553101539611816
    4. '    
' → logprob: -5.053101539611816
    5. '#' → logprob: -5.178101539611816
    6. ' cells' → logprob: -5.553101539611816
    7. 'for' (adapté à ' for') → logprob: -5.553101539611816
    8. ' if' → logprob: -5.803101539611816
    9. '  
' → logprob: -5.803101539611816
    10. '```' → logprob: -6.428101539611816

Token 58: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.01447115559130907
    2. 'r' → logprob: -4.264471054077148
    3. ' row' → logprob: -8.389471054077148
    4. ' ' → logprob: -10.514471054077148
    5. ' i' → logprob: -11.139471054077148
    6. '   ' → logprob: -11.389471054077148
    7. 'row' → logprob: -11.889471054077148
    8. '```' → logprob: -12.139471054077148
    9. ' cell' → logprob: -12.639471054077148
    10. '	r' → logprob: -12.639471054077148

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012836175039410591
    2. 'in' → logprob: -4.38783597946167
    3. ' ' → logprob: -8.137836456298828
    4. ',' → logprob: -11.887836456298828
    5. '	in' → logprob: -12.512836456298828
    6. '_' → logprob: -12.637836456298828
    7. 'n' → logprob: -12.762836456298828
    8. '   ' → logprob: -13.137836456298828
    9. 'range' → logprob: -13.262836456298828
    10. '_in' → logprob: -13.262836456298828

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011809427523985505
    2. 'range' → logprob: -6.751181125640869
    3. '(range' → logprob: -12.376180648803711
    4. ' ' → logprob: -12.751180648803711
    5. '	range' → logprob: -13.376180648803711
    6. '   ' → logprob: -14.626180648803711
    7. ' ran' → logprob: -14.626180648803711
    8. '    ' → logprob: -15.001180648803711
    9. ' rang' → logprob: -15.126180648803711
    10. '  ' → logprob: -16.00118064880371

Token 61: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.011053833179175854
    2. '(' → logprob: -4.511054039001465
    3. '(max' → logprob: -12.386054039001465
    4. ' (' → logprob: -13.386054039001465
    5. '(m' → logprob: -15.886054039001465
    6. ' min' → logprob: -16.38605308532715
    7. '(len' → logprob: -16.76105308532715
    8. 'min' → logprob: -17.63605308532715
    9. '	min' → logprob: -19.76105308532715
    10. '(mi' → logprob: -19.76105308532715

Token 62: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.375004768371582
    3. ' _' → logprob: -15.250004768371582
    4. '_c' → logprob: -16.3750057220459
    5. ')' → logprob: -16.6250057220459
    6. '(' → logprob: -16.6250057220459
    7. '(r' → logprob: -16.7500057220459
    8. '(_' → logprob: -17.2500057220459
    9. '_m' → logprob: -17.7500057220459
    10. ' ' → logprob: -18.8750057220459

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025880273897200823
    2. ' ,' → logprob: -6.002587795257568
    3. ',max' → logprob: -9.127588272094727
    4. ',
' → logprob: -13.752588272094727
    5. '   ' → logprob: -13.877588272094727
    6. ',min' → logprob: -14.377588272094727
    7. ' ' → logprob: -14.627588272094727
    8. '(max' → logprob: -15.877588272094727
    9. '    ' → logprob: -16.252588272094727
    10. 'max' → logprob: -16.752588272094727

Token 64: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5759482979774475
    2. 'max' → logprob: -0.8259482979774475
    3. '	max' → logprob: -12.700948715209961
    4. '(max' → logprob: -13.075948715209961
    5. ' ' → logprob: -13.575948715209961
    6. '   ' → logprob: -13.950948715209961
    7. '_max' → logprob: -14.575948715209961
    8. '[max' → logprob: -15.450948715209961
    9. '+' → logprob: -15.575948715209961
    10. ':max' → logprob: -16.07594871520996

Token 65: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.1800929456949234
    2. '_c' → logprob: -1.8050929307937622
    3. '_' → logprob: -8.430092811584473
    4. '+' → logprob: -10.555092811584473
    5. '(max' → logprob: -10.680092811584473
    6. ')' → logprob: -10.805092811584473
    7. 'max' → logprob: -11.742592811584473
    8. '_a' → logprob: -11.992592811584473
    9. 'r' → logprob: -12.055092811584473
    10. '_i' → logprob: -12.242592811584473

Token 66: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519300878047943
    2. '+' → logprob: -1.5019301176071167
    3. ' ' → logprob: -14.001930236816406
    4. ' +
' → logprob: -16.751930236816406
    5. ' ' → logprob: -17.376930236816406
    6. ')' → logprob: -18.001930236816406
    7. '+
' → logprob: -19.251930236816406
    8. '()+' → logprob: -19.376930236816406
    9. '＋' → logprob: -19.376930236816406
    10. '+)' → logprob: -19.626930236816406

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017027945723384619
    2. ' ' → logprob: -6.376702785491943
    3. '```' → logprob: -15.376703262329102
    4. ')' → logprob: -15.501703262329102
    5. '   ' → logprob: -16.8767032623291
    6. '2' → logprob: -17.0017032623291
    7. '<|end|>' → logprob: -18.0017032623291
    8. ' ' → logprob: -18.0017032623291
    9. '  ' → logprob: -18.1267032623291
    10. '

' → logprob: -18.8767032623291

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -16.7500057220459
    4. ')' → logprob: -17.3750057220459
    5. '   ' → logprob: -19.0000057220459
    6. '2' → logprob: -19.0000057220459
    7. '۱' → logprob: -20.1250057220459
    8. '

' → logprob: -20.5625057220459
    9. '
' → logprob: -20.5625057220459
    10. '`' → logprob: -20.7500057220459

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20272822678089142
    2. ':' → logprob: -1.702728271484375
    3. ')' → logprob: -6.702728271484375
    4. ',' → logprob: -10.452728271484375
    5. '):
' → logprob: -10.952728271484375
    6. ' ):' → logprob: -11.202728271484375
    7. '   ' → logprob: -12.077728271484375
    8. ']:' → logprob: -12.202728271484375
    9. ' :' → logprob: -12.827728271484375
    10. '():' → logprob: -13.077728271484375

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5513184070587158
    2. '<|end|>' → logprob: -1.5513184070587158
    3. '   ' → logprob: -2.051318407058716
    4. '    ' → logprob: -3.051318407058716
    5. ' ' → logprob: -3.551318407058716
    6. '<|end|>' → logprob: -6.176318168640137
    7. ':' → logprob: -6.551318168640137
    8. ' for' → logprob: -6.676318168640137
    9. '        ' → logprob: -7.176318168640137
    10. '  ' → logprob: -7.551318168640137

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.234408438205719
    2. '    ' → logprob: -2.484408378601074
    3. ' ' → logprob: -2.984408378601074
    4. '<|end|>' → logprob: -3.609408378601074
    5. '       ' → logprob: -3.984408378601074
    6. 'for' (adapté à ' for') → logprob: -4.234408378601074
    7. '   ' → logprob: -4.734408378601074
    8. '        ' → logprob: -5.359408378601074
    9. ' if' → logprob: -7.859408378601074
    10. '```' → logprob: -8.609408378601074

Token 72: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.026311565190553665
    2. 'c' → logprob: -3.6513116359710693
    3. ' ' → logprob: -12.401311874389648
    4. '<|end|>' → logprob: -12.901311874389648
    5. '    ' → logprob: -13.151311874389648
    6. '_c' → logprob: -14.151311874389648
    7. ')' → logprob: -14.901311874389648
    8. '	c' → logprob: -15.151311874389648
    9. ' ' → logprob: -15.276311874389648
    10. '  ' → logprob: -15.401311874389648

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004036252852529287
    2. 'in' → logprob: -5.7540364265441895
    3. '<|end|>' → logprob: -7.1290364265441895
    4. ' ' → logprob: -9.879035949707031
    5. '<|end|>' → logprob: -12.754035949707031
    6. ')' → logprob: -14.379035949707031
    7. 'In' → logprob: -14.379035949707031
    8. '  ' → logprob: -15.379035949707031
    9. '    ' → logprob: -15.879035949707031
    10. '	in' → logprob: -16.06653594970703

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804447129368782
    2. 'range' → logprob: -3.2880444526672363
    3. '(range' → logprob: -12.913044929504395
    4. '	range' → logprob: -14.788044929504395
    5. ' ' → logprob: -16.913043975830078
    6. '_range' → logprob: -18.288043975830078
    7. ' xrange' → logprob: -18.663043975830078
    8. 'Range' → logprob: -19.288043975830078
    9. '.range' → logprob: -19.413043975830078
    10. ')' → logprob: -20.538043975830078

Token 75: '(min' (ID: 26035)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7890396118164062
    2. '(range' → logprob: -1.2890396118164062
    3. '(' → logprob: -1.4140396118164062
    4. '(min' → logprob: -3.6640396118164062
    5. ' range' → logprob: -7.789039611816406
    6. '<|end|>' → logprob: -8.039039611816406
    7. '(max' → logprob: -8.914039611816406
    8. ' ' → logprob: -9.414039611816406
    9. 'range' → logprob: -9.539039611816406
    10. ' in' → logprob: -9.664039611816406

Token 76: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.627176768844947e-05
    2. '_r' → logprob: -9.500096321105957
    3. '_' → logprob: -10.875096321105957
    4. ')' → logprob: -13.750096321105957
    5. '_)' → logprob: -15.250096321105957
    6. '```' → logprob: -15.875096321105957
    7. ')_' → logprob: -16.12509536743164
    8. '<|end|>' → logprob: -16.12509536743164
    9. '_s' → logprob: -16.25009536743164
    10. '_cells' → logprob: -16.37509536743164

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007824279367923737
    2. ' ,' → logprob: -4.882824420928955
    3. ')' → logprob: -9.382823944091797
    4. '<|end|>' → logprob: -10.007823944091797
    5. ',
' → logprob: -10.382823944091797
    6. ' +' → logprob: -11.257823944091797
    7. '+' → logprob: -11.382823944091797
    8. ' ' → logprob: -11.757823944091797
    9. ',c' → logprob: -11.882823944091797
    10. '),' → logprob: -12.632823944091797

Token 78: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759470462799072
    2. ' max' → logprob: -0.8259470462799072
    3. '(max' → logprob: -12.200946807861328
    4. ' ' → logprob: -14.450946807861328
    5. 'min' → logprob: -14.450946807861328
    6. ')' → logprob: -14.950946807861328
    7. '<|end|>' → logprob: -15.075946807861328
    8. '	max' → logprob: -15.200946807861328
    9. '[max' → logprob: -15.450946807861328
    10. '_max' → logprob: -15.700946807861328

Token 79: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0008249913225881755
    2. '+' → logprob: -7.375824928283691
    3. '_r' → logprob: -8.750824928283691
    4. ')' → logprob: -10.875824928283691
    5. ' +' → logprob: -11.500824928283691
    6. '_' → logprob: -12.625824928283691
    7. 'c' → logprob: -13.000824928283691
    8. ' _' → logprob: -14.000824928283691
    9. ' ' → logprob: -14.375824928283691
    10. '+c' → logprob: -14.375824928283691

Token 80: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07003235071897507
    2. '+' → logprob: -2.6950323581695557
    3. ')' → logprob: -10.070032119750977
    4. ' ' → logprob: -10.195032119750977
    5. ',' → logprob: -12.695032119750977
    6. '1' → logprob: -12.945032119750977
    7. ' )' → logprob: -13.195032119750977
    8. '<|end|>' → logprob: -13.320032119750977
    9. ' +
' → logprob: -13.445032119750977
    10. ')+' → logprob: -13.445032119750977

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022360205184668303
    2. ' ' → logprob: -6.1272358894348145
    3. '2' → logprob: -10.002236366271973
    4. ')' → logprob: -12.502236366271973
    5. '<|end|>' → logprob: -13.627236366271973
    6. '0' → logprob: -15.252236366271973
    7. '+' → logprob: -16.127235412597656
    8. '```' → logprob: -16.627235412597656
    9. '   ' → logprob: -17.439735412597656
    10. '<|end|>' → logprob: -17.502235412597656

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '0' → logprob: -14.625141143798828
    4. '   ' → logprob: -15.625141143798828
    5. ')' → logprob: -16.250141143798828
    6. '+' → logprob: -16.500141143798828
    7. '2' → logprob: -16.500141143798828
    8. '```' → logprob: -17.437641143798828
    9. '  ' → logprob: -18.000141143798828
    10. '	' → logprob: -18.562641143798828

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06562948226928711
    2. ':' → logprob: -2.815629482269287
    3. ')' → logprob: -5.940629482269287
    4. ' ):' → logprob: -7.440629482269287
    5. '):
' → logprob: -9.190629959106445
    6. '<|end|>' → logprob: -9.315629959106445
    7. '       ' → logprob: -9.440629959106445
    8. ' :' → logprob: -9.815629959106445
    9. ',' → logprob: -10.315629959106445
    10. '           ' → logprob: -10.815629959106445

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07451275736093521
    2. '       ' → logprob: -3.3245127201080322
    3. '<|end|>' → logprob: -3.5745127201080322
    4. ' ' → logprob: -5.699512958526611
    5. ' if' → logprob: -6.949512958526611
    6. ' 
' → logprob: -7.324512958526611
    7. '<|end|>' → logprob: -7.574512958526611
    8. '            
' → logprob: -8.074512481689453
    9. '   ' → logprob: -8.199512481689453
    10. ':' → logprob: -8.324512481689453

Token 85: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9725834727287292
    2. ' ' → logprob: -1.347583532333374
    3. '               ' → logprob: -1.472583532333374
    4. '           ' → logprob: -2.472583532333374
    5. '<|end|>' → logprob: -4.097583293914795
    6. '       ' → logprob: -4.472583293914795
    7. 'if' (adapté à ' if') → logprob: -5.347583293914795
    8. ' 
' → logprob: -5.347583293914795
    9. '        ' → logprob: -5.847583293914795
    10. '            ' → logprob: -6.597583293914795

Token 86: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.002420725766569376
    2. '(c' → logprob: -6.377420902252197
    3. '(r' → logprob: -7.627420902252197
    4. ' ' → logprob: -8.627420425415039
    5. '(' → logprob: -10.627420425415039
    6. '(cell' → logprob: -11.877420425415039
    7. ' not' → logprob: -12.002420425415039
    8. '<|end|>' → logprob: -12.502420425415039
    9. '(s' → logprob: -12.627420425415039
    10. '(n' → logprob: -13.377420425415039

Token 87: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.039149921387434006
    2. '(r' → logprob: -3.4141499996185303
    3. ' r' → logprob: -5.789149761199951
    4. ' (' → logprob: -6.164149761199951
    5. ')' → logprob: -8.78915023803711
    6. '(' → logprob: -8.91415023803711
    7. '   ' → logprob: -11.53915023803711
    8. ' ' → logprob: -12.28915023803711
    9. '(
' → logprob: -12.41415023803711
    10. '	r' → logprob: -12.78915023803711

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010958074126392603
    2. ',c' → logprob: -6.876095771789551
    3. ' ,' → logprob: -9.87609577178955
    4. ',
' → logprob: -12.00109577178955
    5. '<|end|>' → logprob: -12.62609577178955
    6. '‌,' → logprob: -14.50109577178955
    7. ',

' → logprob: -15.25109577178955
    8. ',C' → logprob: -15.87609577178955
    9. ',n' → logprob: -16.001096725463867
    10. 'c' → logprob: -16.001096725463867

Token 89: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38694801926612854
    2. ' c' → logprob: -1.1369479894638062
    3. '<|end|>' → logprob: -10.386947631835938
    4. ')c' → logprob: -10.886947631835938
    5. ')' → logprob: -11.011947631835938
    6. ' ' → logprob: -11.761947631835938
    7. '	c' → logprob: -13.386947631835938
    8. '    ' → logprob: -15.011947631835938
    9. '  ' → logprob: -15.136947631835938
    10. '   ' → logprob: -15.386947631835938

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008740558288991451
    2. ' not' → logprob: -4.758740425109863
    3. ' )' → logprob: -9.258740425109863
    4. 'not' → logprob: -10.633740425109863
    5. 'Not' → logprob: -13.383740425109863
    6. '           ' → logprob: -13.508740425109863
    7. ']' → logprob: -14.008740425109863
    8. '')' → logprob: -14.758740425109863
    9. ')
' → logprob: -14.883740425109863
    10. ' Not' → logprob: -14.883740425109863

Token 91: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.005362771451473236
    2. 'not' → logprob: -5.2553629875183105
    3. ')' → logprob: -9.380362510681152
    4. '<|end|>' → logprob: -10.130362510681152
    5. ' ' → logprob: -13.005362510681152
    6. '	not' → logprob: -13.755362510681152
    7. ' )' → logprob: -14.130362510681152
    8. '<|end|>' → logprob: -15.005362510681152
    9. ' 
' → logprob: -16.63036346435547
    10. 'Not' → logprob: -16.63036346435547

Token 92: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' cells' (ID: 11242)
  Prédit: ' cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.029765060171484947
    2. 'cells' → logprob: -3.5297651290893555
    3. '.cells' → logprob: -11.904765129089355
    4. 'cel' → logprob: -12.654765129089355
    5. '_cells' → logprob: -13.654765129089355
    6. '<|end|>' → logprob: -13.779765129089355
    7. ' ' → logprob: -14.779765129089355
    8. ' ' → logprob: -15.154765129089355
    9. ' cellules' → logprob: -15.154765129089355
    10. ' set' → logprob: -15.404765129089355

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022887103259563446
    2. ':
' → logprob: -7.252288818359375
    3. '               ' → logprob: -7.502288818359375
    4. ':return' → logprob: -7.502288818359375
    5. '):' → logprob: -7.877288818359375
    6. '           ' → logprob: -10.252288818359375
    7. ')' → logprob: -10.252288818359375
    8. '<|end|>' → logprob: -11.627288818359375
    9. '):
' → logprob: -12.377288818359375
    10. ' :' → logprob: -13.252288818359375

Token 95: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006942047039046884
    2. ':' → logprob: -7.625694274902344
    3. '           ' → logprob: -10.000694274902344
    4. '                ' → logprob: -10.250694274902344
    5. '                
' → logprob: -10.250694274902344
    6. '              ' → logprob: -10.625694274902344
    7. ' return' → logprob: -11.000694274902344
    8. ':return' → logprob: -11.500694274902344
    9. '                   ' → logprob: -12.000694274902344
    10. '                       ' → logprob: -12.250694274902344

Token 96: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025354543700814247
    2. ' return' → logprob: -3.7753546237945557
    3. 'return' (adapté à ' return') → logprob: -6.650354385375977
    4. '                ' → logprob: -7.900354385375977
    5. '                   ' → logprob: -8.150354385375977
    6. ' 
' → logprob: -9.775354385375977
    7. '                
' → logprob: -10.150354385375977
    8. '           ' → logprob: -10.400354385375977
    9. '              ' → logprob: -11.650354385375977
    10. '   ' → logprob: -12.775354385375977

Token 97: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3868713080883026
    2. ' False' → logprob: -1.136871337890625
    3. 'True' → logprob: -16.261871337890625
    4. ' True' → logprob: -16.261871337890625
    5. ' ' → logprob: -17.261871337890625
    6. 'F' → logprob: -18.511871337890625
    7. '(False' → logprob: -19.386871337890625
    8. ' F' → logprob: -21.261871337890625
    9. '_false' → logprob: -21.386871337890625
    10. ' ' → logprob: -21.886871337890625

Token 98: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04085970297455788
    2. '
' → logprob: -3.5408596992492676
    3. '    
' → logprob: -4.540859699249268
    4. '  
' → logprob: -9.290860176086426
    5. '   
' → logprob: -9.540860176086426
    6. 'return' → logprob: -9.665860176086426
    7. ' return' → logprob: -10.165860176086426
    8. '       ' → logprob: -10.540860176086426
    9. ' 
' → logprob: -10.665860176086426
    10. '\n' → logprob: -11.165860176086426

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007598382653668523
    2. '
' → logprob: -7.875759601593018
    3. '    
' → logprob: -8.375760078430176
    4. 'return' → logprob: -9.125760078430176
    5. ' return' → logprob: -10.875760078430176
    6. '       ' → logprob: -11.500760078430176
    7. '	return' → logprob: -12.250760078430176
    8. '  
' → logprob: -13.625760078430176
    9. '```' → logprob: -13.625760078430176
    10. '        
' → logprob: -13.875760078430176

Token 100: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08026900887489319
    2. 'return' (adapté à ' return') → logprob: -2.5802690982818604
    3. ' return' → logprob: -6.830268859863281
    4. '    
' → logprob: -8.580268859863281
    5. '
' → logprob: -9.455268859863281
    6. '	return' → logprob: -11.205268859863281
    7. '```' → logprob: -12.080268859863281
    8. ':return' → logprob: -12.580268859863281
    9. '  
' → logprob: -12.830268859863281
    10. ' ' → logprob: -13.705268859863281

Token 101: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0067154900170862675
    2. 'True' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.506715774536133
    4. ' ' → logprob: -17.881715774536133
    5. '(True' → logprob: -18.381715774536133
    6. '=True' → logprob: -21.631715774536133
    7. '   ' → logprob: -23.006715774536133
    8. ' Tru' → logprob: -23.631715774536133
    9. ' true' → logprob: -23.756715774536133
    10. '  ' → logprob: -24.131715774536133

Token 102: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42398813366889954
    2. '<|end|>' → logprob: -1.4239881038665771
    3. '
' → logprob: -2.923988103866577
    4. '```' → logprob: -4.673988342285156
    5. ')' → logprob: -4.923988342285156
    6. '(' → logprob: -4.923988342285156
    7. '\' → logprob: -5.173988342285156
    8. '\n' → logprob: -5.298988342285156
    9. '[' → logprob: -5.423988342285156
    10. ' ' → logprob: -5.673988342285156

Token 104: ' main' (ID: 2758)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008524383418262005
    2. ' ' → logprob: -5.133524417877197
    3. ' check' → logprob: -7.258524417877197
    4. ' rectangle' → logprob: -7.758524417877197
    5. ' area' → logprob: -8.008523941040039
    6. ' valid' → logprob: -8.383523941040039
    7. ' space' → logprob: -8.508523941040039
    8. ' calculate' → logprob: -9.133523941040039
    9. ' ' → logprob: -9.383523941040039
    10. 'is' → logprob: -9.758523941040039

Token 105: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05089738592505455
    2. '():' → logprob: -3.3008973598480225
    3. '_' → logprob: -4.425897598266602
    4. ':' → logprob: -7.800897598266602
    5. '(:' → logprob: -9.425897598266602
    6. '_:' → logprob: -9.550897598266602
    7. '(_:' → logprob: -9.800897598266602
    8. ' (' → logprob: -10.425897598266602
    9. '()' → logprob: -10.675897598266602
    10. '(
' → logprob: -11.175897598266602

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07064148783683777
    2. ' cells' → logprob: -3.19564151763916
    3. '    ' → logprob: -4.69564151763916
    4. '(' → logprob: -4.94564151763916
    5. ' ' → logprob: -5.07064151763916
    6. ' n' → logprob: -6.82064151763916
    7. ' (' → logprob: -7.07064151763916
    8. ' 
' → logprob: -7.57064151763916
    9. 'n' → logprob: -8.07064151763916
    10. '[' → logprob: -8.19564151763916

Token 107: ' t' (ID: 260)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.017751263454556465
    2. 'cells' → logprob: -5.392751216888428
    3. '   ' → logprob: -5.517751216888428
    4. ' grid' → logprob: -5.642751216888428
    5. ' n' → logprob: -5.767751216888428
    6. ' pass' → logprob: -7.267751216888428
    7. 'n' → logprob: -7.392751216888428
    8. ' input' → logprob: -8.017751693725586
    9. ' print' → logprob: -8.642751693725586
    10. ' import' → logprob: -9.642751693725586

Token 108: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7174087762832642
    2. 'est' → logprob: -1.2174087762832642
    3. 'ests' → logprob: -2.3424086570739746
    4. 'c' → logprob: -3.4674086570739746
    5. 'arget' → logprob: -4.217408657073975
    6. ' =' → logprob: -4.717408657073975
    7. 'e' → logprob: -4.842408657073975
    8. '_cells' → logprob: -5.092408657073975
    9. 'esting' → logprob: -5.217408657073975
    10. '_c' → logprob: -5.217408657073975

Token 109: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005119311157613993
    2. ' ' → logprob: -5.630119323730469
    3. 'int' → logprob: -6.505119323730469
    4. ' input' → logprob: -11.880119323730469
    5. ' in' → logprob: -12.005119323730469
    6. '	int' → logprob: -13.005119323730469
    7. '[int' → logprob: -13.130119323730469
    8. '  ' → logprob: -13.630119323730469
    9. '10' → logprob: -14.130119323730469
    10. ' 
' → logprob: -14.130119323730469

Token 110: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6945347785949707
    2. '(input' → logprob: -0.6945347785949707
    3. 'input' → logprob: -6.819534778594971
    4. ' (' → logprob: -8.944534301757812
    5. ' input' → logprob: -8.944534301757812
    6. ' ' → logprob: -11.069534301757812
    7. '('' → logprob: -11.694534301757812
    8. '(
' → logprob: -12.694534301757812
    9. '()' → logprob: -13.194534301757812
    10. '=input' → logprob: -14.069534301757812

Token 111: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05344982445240021
    2. '(' → logprob: -3.553449869155884
    3. '())' → logprob: -3.928449869155884
    4. '('' → logprob: -5.803449630737305
    5. '("("' → logprob: -7.803449630737305
    6. ')' → logprob: -8.928449630737305
    7. '("' → logprob: -10.053449630737305
    8. '("")' → logprob: -11.053449630737305
    9. '());' → logprob: -11.053449630737305
    10. ' ' → logprob: -11.178449630737305

Token 112: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08943677693605423
    2. 'for' (adapté à ' for') → logprob: -2.4644367694854736
    3. ' cells' → logprob: -7.714437007904053
    4. 'cells' → logprob: -10.714436531066895
    5. ' ' → logprob: -11.589436531066895
    6. '	for' → logprob: -11.964436531066895
    7. ' 
' → logprob: -12.214436531066895
    8. ' ' → logprob: -12.714436531066895
    9. '   ' → logprob: -13.339436531066895
    10. ' while' → logprob: -13.464436531066895

Token 114: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.01929079182446003
    2. ' ' → logprob: -4.019290924072266
    3. ' i' → logprob: -7.019290924072266
    4. '_' → logprob: -8.394290924072266
    5. ' ‌' → logprob: -11.394290924072266
    6. ' ​' → logprob: -12.894290924072266
    7. ' ' → logprob: -13.269290924072266
    8. ' t' → logprob: -13.394290924072266
    9. ' ▁' → logprob: -14.394290924072266
    10. '  ' → logprob: -14.394290924072266

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2030101716518402
    2. 'in' → logprob: -1.7030102014541626
    3. ' ' → logprob: -7.328010082244873
    4. 'n' → logprob: -7.703010082244873
    5. 'range' → logprob: -8.578010559082031
    6. 't' → logprob: -9.328010559082031
    7. 'i' → logprob: -10.203010559082031
    8. '  ' → logprob: -10.328010559082031
    9. '_' → logprob: -10.578010559082031
    10. '0' → logprob: -11.453010559082031

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014305740594864
    2. ' range' → logprob: -1.7014305591583252
    3. '	range' → logprob: -12.451430320739746
    4. '(range' → logprob: -12.701430320739746
    5. '<|end|>' → logprob: -12.701430320739746
    6. 't' → logprob: -12.826430320739746
    7. ' ' → logprob: -13.451430320739746
    8. ' xrange' → logprob: -13.826430320739746
    9. '_range' → logprob: -13.951430320739746
    10. ')' → logprob: -15.076430320739746

Token 117: '(t' (ID: 2025)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5730397701263428
    2. '(' → logprob: -1.3230397701263428
    3. ' )' → logprob: -2.8230397701263428
    4. ' ' → logprob: -2.9480397701263428
    5. ' (' → logprob: -3.1980397701263428
    6. ')' → logprob: -4.323040008544922
    7. '(t' → logprob: -5.823040008544922
    8. 't' → logprob: -8.698040008544922
    9. ' range' → logprob: -8.948040008544922
    10. ' in' → logprob: -9.073040008544922

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001682559377513826
    2. ':' → logprob: -6.876682758331299
    3. '):
' → logprob: -7.626682758331299
    4. ')' → logprob: -9.12668228149414
    5. ' ):' → logprob: -10.50168228149414
    6. '   ' → logprob: -11.12668228149414
    7. '():' → logprob: -11.75168228149414
    8. ',' → logprob: -13.50168228149414
    9. ' ' → logprob: -15.12668228149414
    10. '}:' → logprob: -15.50168228149414

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003476293757557869
    2. '   ' → logprob: -6.753476142883301
    3. '    ' → logprob: -7.003476142883301
    4. '<|end|>' → logprob: -7.378476142883301
    5. ' cells' → logprob: -8.0034761428833
    6. ' ' → logprob: -8.5034761428833
    7. '        
' → logprob: -10.2534761428833
    8. '<|end|>' → logprob: -10.6284761428833
    9. '     ' → logprob: -10.7534761428833
    10. '	   ' → logprob: -11.0034761428833

Token 120: ' H' (ID: 487)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00986410491168499
    2. 'n' → logprob: -4.759864330291748
    3. '    ' → logprob: -6.884864330291748
    4. ' cells' → logprob: -9.63486385345459
    5. ' ' → logprob: -9.88486385345459
    6. ' size' → logprob: -10.25986385345459
    7. '   ' → logprob: -11.00986385345459
    8. ' k' → logprob: -11.25986385345459
    9. ' s' → logprob: -11.25986385345459
    10. ' 
' → logprob: -11.75986385345459

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003502434410620481
    2. ' ,' → logprob: -8.000349998474121
    3. ',C' → logprob: -12.000349998474121
    4. '<|end|>' → logprob: -13.250349998474121
    5. '‌,' → logprob: -13.750349998474121
    6. ' ' → logprob: -13.875349998474121
    7. ',H' → logprob: -14.125349998474121
    8. '    ' → logprob: -14.250349998474121
    9. ',I' → logprob: -14.375349998474121
    10. ',M' → logprob: -14.500349998474121

Token 122: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.07088082283735275
    2. ' W' → logprob: -2.695880889892578
    3. '<|end|>' → logprob: -7.320880889892578
    4. ' ' → logprob: -8.570880889892578
    5. 'w' → logprob: -10.445880889892578
    6. 'I' → logprob: -10.695880889892578
    7. '  ' → logprob: -11.320880889892578
    8. '    ' → logprob: -11.820880889892578
    9. 'K' → logprob: -11.945880889892578
    10. 'M' → logprob: -12.445880889892578

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5813726782798767
    2. ',' → logprob: -1.2063727378845215
    3. '=' → logprob: -1.9563727378845215
    4. ' ,' → logprob: -9.456372261047363
    5. '<|end|>' → logprob: -9.456372261047363
    6. ' ' → logprob: -11.081372261047363
    7. '=input' → logprob: -11.331372261047363
    8. '<|end|>' → logprob: -11.706372261047363
    9. ')' → logprob: -12.081372261047363
    10. '   ' → logprob: -12.706372261047363

Token 124: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0006634721648879349
    2. 'map' → logprob: -7.6256632804870605
    3. ' input' → logprob: -9.250663757324219
    4. ' ' → logprob: -9.625663757324219
    5. ' list' → logprob: -11.750663757324219
    6. 'input' → logprob: -12.875663757324219
    7. ' [' → logprob: -13.625663757324219
    8. '	map' → logprob: -14.375663757324219
    9. ' mapa' → logprob: -14.750663757324219
    10. '[' → logprob: -14.875663757324219

Token 125: '(int' (ID: 2742)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5355864763259888
    2. '(' → logprob: -1.1605864763259888
    3. '(int' → logprob: -2.410586357116699
    4. '<|end|>' → logprob: -4.910586357116699
    5. '(str' → logprob: -6.035586357116699
    6. '(lambda' → logprob: -6.535586357116699
    7. '(
' → logprob: -9.0355863571167
    8. ' (' → logprob: -9.5355863571167
    9. '(eval' → logprob: -10.6605863571167
    10. 'input' → logprob: -10.9105863571167

Token 126: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6287923455238342
    2. ',input' → logprob: -1.2537922859191895
    3. ',' → logprob: -2.0037922859191895
    4. 'input' → logprob: -3.1287922859191895
    5. '(' → logprob: -7.0037922859191895
    6. ')' → logprob: -7.2537922859191895
    7. '=input' → logprob: -7.6287922859191895
    8. '<input' → logprob: -8.253792762756348
    9. ' input' → logprob: -8.503792762756348
    10. '[input' → logprob: -9.503792762756348

Token 127: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20141392946243286
    2. 'input' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.201414108276367
    4. '=input' → logprob: -15.701414108276367
    5. '(input' → logprob: -16.326414108276367
    6. '	input' → logprob: -16.451414108276367
    7. ',input' → logprob: -16.576414108276367
    8. '<input' → logprob: -17.201414108276367
    9. ')' → logprob: -18.201414108276367
    10. '[input' → logprob: -18.576414108276367

Token 128: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.084206375409849e-05
    2. '()' → logprob: -10.125041007995605
    3. '(' → logprob: -15.125041007995605
    4. ' ().' → logprob: -15.250041007995605
    5. 'split' → logprob: -16.37504005432129
    6. '()
' → logprob: -17.25004005432129
    7. ')' → logprob: -17.75004005432129
    8. '.split' → logprob: -18.00004005432129
    9. '   ' → logprob: -18.00004005432129
    10. ' ()' → logprob: -19.37504005432129

Token 129: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4378848391061183e-05
    2. 'strip' → logprob: -11.375014305114746
    3. '(split' → logprob: -13.375014305114746
    4. ' split' → logprob: -14.375014305114746
    5. 'rstrip' → logprob: -14.625014305114746
    6. '().' → logprob: -16.000015258789062
    7. ')' → logprob: -16.250015258789062
    8. 'spl' → logprob: -17.125015258789062
    9. '.split' → logprob: -17.625015258789062
    10. '())' → logprob: -18.250015258789062

Token 130: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07542384415864944
    2. ')' → logprob: -2.9504239559173584
    3. '()' → logprob: -3.9504239559173584
    4. '('' → logprob: -7.825423717498779
    5. '())
' → logprob: -8.075424194335938
    6. '(','' → logprob: -8.700424194335938
    7. '(' → logprob: -8.950424194335938
    8. '()))' → logprob: -11.075424194335938
    9. '(',' → logprob: -11.450424194335938
    10. '(),' → logprob: -11.450424194335938

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11944364756345749
    2. 'cells' → logprob: -2.869443655014038
    3. 'grid' → logprob: -4.119443416595459
    4. ' cells' → logprob: -4.244443416595459
    5. '<|end|>' → logprob: -5.244443416595459
    6. 'n' → logprob: -5.494443416595459
    7. '        
' → logprob: -5.619443416595459
    8. ' 
' → logprob: -6.369443416595459
    9. '   ' → logprob: -6.369443416595459
    10. ' ' → logprob: -7.119443416595459

Token 132: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.03658870607614517
    2. 'cells' → logprob: -3.911588668823242
    3. 'board' → logprob: -5.161588668823242
    4. 'matrix' → logprob: -6.036588668823242
    5. 'rows' → logprob: -6.161588668823242
    6. 'lines' → logprob: -6.536588668823242
    7. ' grid' → logprob: -6.911588668823242
    8. 'field' → logprob: -7.411588668823242
    9. 'G' → logprob: -7.786588668823242
    10. '   ' → logprob: -7.911588668823242

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008157044649124146
    2. '=' → logprob: -7.1258158683776855
    3. ' ' → logprob: -11.625815391540527
    4. '_' → logprob: -14.125815391540527
    5. ' =
' → logprob: -14.125815391540527
    6. '=[]' → logprob: -15.125815391540527
    7. '[]' → logprob: -16.250816345214844
    8. '    ' → logprob: -16.375816345214844
    9. '[:]' → logprob: -16.375816345214844
    10. ' =
' → logprob: -16.750816345214844

Token 134: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.018264202401041985
    2. '[' → logprob: -4.018264293670654
    3. '[input' → logprob: -10.143263816833496
    4. ' []' → logprob: -10.518263816833496
    5. '[str' → logprob: -12.143263816833496
    6. '[n' → logprob: -12.143263816833496
    7. '[int' → logprob: -12.268263816833496
    8. '[s' → logprob: -12.268263816833496
    9. '[line' → logprob: -13.018263816833496
    10. '[data' → logprob: -13.268263816833496

Token 135: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10213859379291534
    2. 'list' → logprob: -2.3521385192871094
    3. ' input' → logprob: -6.477138519287109
    4. ' list' → logprob: -7.852138519287109
    5. '[input' → logprob: -13.22713851928711
    6. '<input' → logprob: -14.97713851928711
    7. '   ' → logprob: -15.22713851928711
    8. '
' → logprob: -15.72713851928711
    9. '	input' → logprob: -16.60213851928711
    10. '(input' → logprob: -16.72713851928711

Token 136: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0054835909977555275
    2. '().' → logprob: -5.255483627319336
    3. '()]' → logprob: -8.380483627319336
    4. ' ()' → logprob: -11.130483627319336
    5. '())' → logprob: -13.380483627319336
    6. '()
' → logprob: -13.505483627319336
    7. '()>' → logprob: -14.255483627319336
    8. '()

' → logprob: -14.880483627319336
    9. '()<' → logprob: -14.880483627319336
    10. '（）' → logprob: -15.005483627319336

Token 137: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007287554908543825
    2. '().' → logprob: -7.625728607177734
    3. ' ()' → logprob: -9.000728607177734
    4. ' for' → logprob: -9.500728607177734
    5. 'for' → logprob: -10.375728607177734
    6. '()]' → logprob: -12.250728607177734
    7. '()
' → logprob: -13.250728607177734
    8. ')' → logprob: -13.625728607177734
    9. '(' → logprob: -13.875728607177734
    10. ' ' → logprob: -14.375728607177734

Token 138: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6352334022521973
    2. ' _' → logprob: -0.7602334022521973
    3. '_' → logprob: -6.260233402252197
    4. ' ' → logprob: -7.635233402252197
    5. 'range' → logprob: -9.010232925415039
    6. '_range' → logprob: -10.010232925415039
    7. ' in' → logprob: -10.510232925415039
    8. '<|end|>' → logprob: -10.760232925415039
    9. ' H' → logprob: -11.760232925415039
    10. ' xrange' → logprob: -12.510232925415039

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06346046924591064
    2. 'in' → logprob: -2.813460350036621
    3. 'range' → logprob: -7.688460350036621
    4. ' range' → logprob: -7.938460350036621
    5. ' ' → logprob: -8.063460350036621
    6. '_' → logprob: -8.313460350036621
    7. ' _' → logprob: -9.688460350036621
    8. ')' → logprob: -11.313460350036621
    9. '(' → logprob: -11.938460350036621
    10. '(range' → logprob: -12.063460350036621

Token 140: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142073929309845
    2. ' range' → logprob: -1.701420783996582
    3. '(range' → logprob: -12.701420783996582
    4. ' ' → logprob: -12.951420783996582
    5. '	range' → logprob: -14.076420783996582
    6. '[' → logprob: -15.076420783996582
    7. '   ' → logprob: -15.451420783996582
    8. '    ' → logprob: -15.826420783996582
    9. '.range' → logprob: -15.951420783996582
    10. '  ' → logprob: -16.451419830322266

Token 141: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0003171121352352202
    2. 'H' → logprob: -8.500317573547363
    3. '(' → logprob: -9.375317573547363
    4. '(W' → logprob: -10.625317573547363
    5. ' H' → logprob: -13.500317573547363
    6. ' (' → logprob: -14.000317573547363
    7. '	H' → logprob: -14.375317573547363
    8. '(
' → logprob: -14.750317573547363
    9. ')' → logprob: -14.875317573547363
    10. 'W' → logprob: -15.375317573547363

Token 142: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1055867075920105
    2. ')' → logprob: -2.3555867671966553
    3. ']' → logprob: -5.230586528778076
    4. ')
' → logprob: -11.980587005615234
    5. '   ' → logprob: -13.105587005615234
    6. ' )' → logprob: -13.230587005615234
    7. ']
' → logprob: -13.855587005615234
    8. ')]
' → logprob: -14.230587005615234
    9. ' ' → logprob: -14.480587005615234
    10. '       ' → logprob: -14.730587005615234

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013531704433262348
    2. '<|end|>' → logprob: -5.138531684875488
    3. '        
' → logprob: -6.138531684875488
    4. '   ' → logprob: -6.638531684875488
    5. ' cells' → logprob: -7.138531684875488
    6. 'cells' → logprob: -7.513531684875488
    7. '#' → logprob: -8.388531684875488
    8. '
' → logprob: -8.513531684875488
    9. '```' → logprob: -8.638531684875488
    10. 'positions' → logprob: -8.888531684875488

Token 144: ' materials' (ID: 7875)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.8068295121192932
    2. 'rect' → logprob: -2.4318294525146484
    3. 'positions' → logprob: -2.6818294525146484
    4. 'points' → logprob: -3.0568294525146484
    5. 'visited' → logprob: -3.3068294525146484
    6. '   ' → logprob: -3.3068294525146484
    7. 'hash' → logprob: -3.5568294525146484
    8. 'found' → logprob: -3.6818294525146484
    9. 'for' → logprob: -4.056829452514648
    10. 's' → logprob: -4.056829452514648

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020599730778485537
    2. '=' → logprob: -6.8770599365234375
    3. '_' → logprob: -7.7520599365234375
    4. '_positions' → logprob: -8.377059936523438
    5. ' ' → logprob: -9.002059936523438
    6. '_cells' → logprob: -9.252059936523438
    7. 's' → logprob: -10.627059936523438
    8. '_sets' → logprob: -10.877059936523438
    9. '_set' → logprob: -10.877059936523438
    10. '_indices' → logprob: -11.752059936523438

Token 146: ' {}
' (ID: 11421)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.7711005806922913
    2. ' {}' → logprob: -0.7711005806922913
    3. ' []' → logprob: -3.5211005210876465
    4. 'set' → logprob: -3.6461005210876465
    5. '{}' → logprob: -4.1461005210876465
    6. ' defaultdict' → logprob: -5.8961005210876465
    7. '[]' → logprob: -7.7711005210876465
    8. ' ' → logprob: -9.021100997924805
    9. ' dict' → logprob: -9.646100997924805
    10. 'dict' → logprob: -10.021100997924805

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07908586412668228
    2. '<|end|>' → logprob: -3.0790858268737793
    3. '
' → logprob: -3.7040858268737793
    4. '        
' → logprob: -5.579085826873779
    5. ' ' → logprob: -7.079085826873779
    6. ' for' → logprob: -8.579086303710938
    7. ' 
' → logprob: -8.704086303710938
    8. '<|end|>' → logprob: -9.204086303710938
    9. '        ' → logprob: -9.454086303710938
    10. '  
' → logprob: -9.954086303710938

Token 148: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16094806790351868
    2. ' for' → logprob: -1.9109480381011963
    3. '       ' → logprob: -7.410948276519775
    4. 'positions' → logprob: -10.160947799682617
    5. 'cells' → logprob: -10.910947799682617
    6. 'found' → logprob: -11.410947799682617
    7. '
' → logprob: -11.410947799682617
    8. 'rows' → logprob: -11.785947799682617
    9. '        
' → logprob: -11.785947799682617
    10. ' cells' → logprob: -11.785947799682617

Token 149: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6885218024253845
    2. ' r' → logprob: -0.8135218024253845
    3. ' i' → logprob: -3.4385218620300293
    4. 'i' → logprob: -3.8135218620300293
    5. 'h' → logprob: -9.188521385192871
    6. ' h' → logprob: -9.688521385192871
    7. ' _' → logprob: -11.313521385192871
    8. '_r' → logprob: -11.938521385192871
    9. ' ' → logprob: -12.063521385192871
    10. '_' → logprob: -12.313521385192871

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12022161483764648
    2. ',' → logprob: -2.7452216148376465
    3. 'in' → logprob: -3.2452216148376465
    4. ' ' → logprob: -4.7452216148376465
    5. ' ,' → logprob: -6.6202216148376465
    6. '<|end|>' → logprob: -10.120222091674805
    7. '	in' → logprob: -12.620222091674805
    8. '  ' → logprob: -13.620222091674805
    9. ',in' → logprob: -13.745222091674805
    10. ',row' → logprob: -13.870222091674805

Token 151: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759404301643372
    2. 'range' → logprob: -0.8259404301643372
    3. '	range' → logprob: -14.325940132141113
    4. '(range' → logprob: -15.825940132141113
    5. ' ' → logprob: -16.32594108581543
    6. '_range' → logprob: -17.20094108581543
    7. '
' → logprob: -17.70094108581543
    8. ' xrange' → logprob: -17.95094108581543
    9. 'ange' → logprob: -18.07594108581543
    10. '   ' → logprob: -18.57594108581543

Token 152: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04005912318825722
    2. '(H' → logprob: -3.2900590896606445
    3. ' H' → logprob: -6.2900590896606445
    4. '(' → logprob: -9.290059089660645
    5. '0' → logprob: -10.165059089660645
    6. '   ' → logprob: -11.540059089660645
    7. '<|end|>' → logprob: -11.665059089660645
    8. '	H' → logprob: -12.290059089660645
    9. ' ' → logprob: -12.915059089660645
    10. ')' → logprob: -12.915059089660645

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009177819825708866
    2. '):
' → logprob: -4.7591776847839355
    3. ')' → logprob: -8.259178161621094
    4. ' ):' → logprob: -9.259178161621094
    5. ':' → logprob: -9.384178161621094
    6. '   ' → logprob: -9.509178161621094
    7. '       ' → logprob: -11.259178161621094
    8. '):
' → logprob: -11.384178161621094
    9. '+' → logprob: -11.759178161621094
    10. '<|end|>' → logprob: -12.009178161621094

Token 154: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20166164636611938
    2. '<|end|>' → logprob: -2.4516615867614746
    3. '           ' → logprob: -2.7016615867614746
    4. ':' → logprob: -4.326661586761475
    5. ' ' → logprob: -4.951661586761475
    6. '   ' → logprob: -5.201661586761475
    7. '<|end|>' → logprob: -6.701661586761475
    8. ' for' → logprob: -7.326661586761475
    9. ',' → logprob: -7.951661586761475
    10. '        ' → logprob: -8.076662063598633

Token 155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.210063174366951
    2. 'for' (adapté à ' for') → logprob: -1.7100632190704346
    3. '   ' → logprob: -4.8350629806518555
    4. '       ' → logprob: -7.5850629806518555
    5. '           ' → logprob: -9.335062980651855
    6. '	for' → logprob: -10.460062980651855
    7. '    ' → logprob: -10.835062980651855
    8. ' ' → logprob: -11.085062980651855
    9. '```' → logprob: -13.460062980651855
    10. '  ' → logprob: -13.710062980651855

Token 156: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3155301511287689
    2. 'c' → logprob: -1.3155301809310913
    3. ' w' → logprob: -6.440530300140381
    4. 'w' → logprob: -7.315530300140381
    5. ' W' → logprob: -13.065529823303223
    6. ' ' → logprob: -13.440529823303223
    7. '   ' → logprob: -14.065529823303223
    8. 'W' → logprob: -14.315529823303223
    9. '    ' → logprob: -16.81553077697754
    10. '  ' → logprob: -17.06553077697754

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06213528662919998
    2. 'in' → logprob: -2.8121352195739746
    3. ' ' → logprob: -8.812135696411133
    4. '	in' → logprob: -11.437135696411133
    5. '    ' → logprob: -13.562135696411133
    6. '   ' → logprob: -13.812135696411133
    7. '<|end|>' → logprob: -13.937135696411133
    8. '  ' → logprob: -14.062135696411133
    9. 'In' → logprob: -14.437135696411133
    10. '0' → logprob: -14.562135696411133

Token 158: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269386112689972
    2. 'range' → logprob: -2.126938581466675
    3. '(range' → logprob: -11.501938819885254
    4. '	range' → logprob: -15.876938819885254
    5. ' ' → logprob: -16.126937866210938
    6. ' xrange' → logprob: -17.251937866210938
    7. 'Range' → logprob: -17.501937866210938
    8. '_range' → logprob: -17.626937866210938
    9. ')' → logprob: -18.376937866210938
    10. '.range' → logprob: -18.501937866210938

Token 159: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0014347549295052886
    2. '(' → logprob: -7.001434803009033
    3. '(range' → logprob: -8.126434326171875
    4. ' (' → logprob: -9.501434326171875
    5. '(H' → logprob: -9.751434326171875
    6. 'range' → logprob: -10.126434326171875
    7. ' range' → logprob: -10.251434326171875
    8. '(
' → logprob: -12.251434326171875
    9. 'W' → logprob: -12.501434326171875
    10. ')' → logprob: -12.501434326171875

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08408365398645401
    2. ')' → logprob: -2.9590835571289062
    3. '):
' → logprob: -3.7090835571289062
    4. ' ):' → logprob: -6.334083557128906
    5. '           ' → logprob: -6.584083557128906
    6. '               ' → logprob: -7.834083557128906
    7. ' )' → logprob: -8.334083557128906
    8. '       ' → logprob: -9.084083557128906
    9. ':' → logprob: -9.334083557128906
    10. ' ):
' → logprob: -9.709083557128906

Token 161: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05106118693947792
    2. '           ' → logprob: -3.5510611534118652
    3. ' ' → logprob: -4.801061153411865
    4. ' if' → logprob: -5.051061153411865
    5. '<|end|>' → logprob: -5.926061153411865
    6. ':' → logprob: -6.301061153411865
    7. '            ' → logprob: -7.801061153411865
    8. ',' → logprob: -8.301061630249023
    9. '                ' → logprob: -8.926061630249023
    10. '   ' → logprob: -9.051061630249023

Token 162: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.13424204289913177
    2. ' char' → logprob: -3.009242057800293
    3. ' if' → logprob: -3.134242057800293
    4. 'ch' (adapté à ' ch') → logprob: -4.634242057800293
    5. ' cell' → logprob: -4.759242057800293
    6. 'char' → logprob: -5.634242057800293
    7. '           ' → logprob: -5.884242057800293
    8. '               ' → logprob: -6.009242057800293
    9. '                   ' → logprob: -6.509242057800293
    10. '                ' → logprob: -7.509242057800293

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026445087045431137
    2. '=' → logprob: -3.651445150375366
    3. ' ' → logprob: -8.901445388793945
    4. ' =
' → logprob: -12.276445388793945
    5. '  ' → logprob: -13.526445388793945
    6. ')' → logprob: -14.526445388793945
    7. '    ' → logprob: -14.776445388793945
    8. ' in' → logprob: -15.401445388793945
    9. '   ' → logprob: -15.651445388793945
    10. 's' → logprob: -15.776445388793945

Token 164: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.1800331324338913
    2. 'grid' → logprob: -1.8050330877304077
    3. '	grid' → logprob: -9.305032730102539
    4. ' ' → logprob: -9.680032730102539
    5. ':grid' → logprob: -9.805032730102539
    6. '(grid' → logprob: -10.055032730102539
    7. '.grid' → logprob: -10.805032730102539
    8. '/grid' → logprob: -12.680032730102539
    9. '<|end|>' → logprob: -12.680032730102539
    10. '-grid' → logprob: -13.055032730102539

Token 165: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. 'r' → logprob: -16.750001907348633
    4. '[c' → logprob: -17.750001907348633
    5. ' [' → logprob: -18.625001907348633
    6. '[R' → logprob: -19.500001907348633
    7. '[row' → logprob: -19.750001907348633
    8. '[t' → logprob: -20.125001907348633
    9. '[
' → logprob: -20.375001907348633
    10. '[s' → logprob: -20.375001907348633

Token 166: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002042486798018217
    2. ']' → logprob: -6.877042293548584
    3. '[c' → logprob: -7.502042293548584
    4. '[r' → logprob: -8.002042770385742
    5. '[' → logprob: -9.752042770385742
    6. ' ][' → logprob: -9.877042770385742
    7. '"][' → logprob: -12.752042770385742
    8. ' ' → logprob: -13.627042770385742
    9. '[
' → logprob: -13.877042770385742
    10. ' [' → logprob: -13.877042770385742

Token 167: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.061054359131958e-06
    2. '][' → logprob: -12.500007629394531
    3. ' c' → logprob: -12.500007629394531
    4. ']' → logprob: -15.750007629394531
    5. ')c' → logprob: -15.875007629394531
    6. '[c' → logprob: -17.12500762939453
    7. '   ' → logprob: -17.25000762939453
    8. ' ' → logprob: -17.25000762939453
    9. ')' → logprob: -17.75000762939453
    10. '	c' → logprob: -17.87500762939453

Token 168: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023339930921792984
    2. ']' → logprob: -4.773339748382568
    3. '               ' → logprob: -4.773339748382568
    4. ')
' → logprob: -5.648339748382568
    5. ')]' → logprob: -6.773339748382568
    6. '           ' → logprob: -8.023340225219727
    7. '<|end|>' → logprob: -8.023340225219727
    8. ' )' → logprob: -8.398340225219727
    9. '                ' → logprob: -9.148340225219727
    10. '])' → logprob: -9.148340225219727

Token 169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13004273176193237
    2. '                ' → logprob: -2.755042791366577
    3. '<|end|>' → logprob: -3.130042791366577
    4. ' ' → logprob: -5.005042552947998
    5. ' if' → logprob: -5.630042552947998
    6. ':' → logprob: -6.755042552947998
    7. '           ' → logprob: -7.380042552947998
    8. '                
' → logprob: -7.505042552947998
    9. '<|end|>' → logprob: -7.630042552947998
    10. '              ' → logprob: -8.130043029785156

Token 170: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.006835425738245249
    2. 'if' (adapté à ' if') → logprob: -5.131835460662842
    3. '                ' → logprob: -7.381835460662842
    4. ' ' → logprob: -8.381834983825684
    5. '               ' → logprob: -10.506834983825684
    6. ' materials' → logprob: -11.131834983825684
    7. '            ' → logprob: -12.756834983825684
    8. ' 
' → logprob: -13.631834983825684
    9. '                
' → logprob: -13.631834983825684
    10. '<|end|>' → logprob: -14.006834983825684

Token 171: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.3868997097015381
    2. 'ch' → logprob: -1.136899709701538
    3. 'c' → logprob: -11.886899948120117
    4. ' not' → logprob: -11.886899948120117
    5. ' ' → logprob: -12.261899948120117
    6. 'not' → logprob: -12.636899948120117
    7. '
' → logprob: -13.636899948120117
    8. '	ch' → logprob: -13.636899948120117
    9. '   ' → logprob: -14.011899948120117
    10. '[ch' → logprob: -14.074399948120117

Token 172: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.18989503383636475
    2. ' not' → logprob: -2.1898951530456543
    3. '!=' → logprob: -2.8148951530456543
    4. ' ' → logprob: -7.814895153045654
    5. 'not' → logprob: -7.814895153045654
    6. ' ==' → logprob: -8.439894676208496
    7. '!='' → logprob: -10.689894676208496
    8. ' in' → logprob: -10.814894676208496
    9. '==' → logprob: -11.439894676208496
    10. '<|end|>' → logprob: -11.689894676208496

Token 173: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.028436854481697083
    2. ' '.'' → logprob: -4.403436660766602
    3. ''' → logprob: -4.903436660766602
    4. '.' → logprob: -4.903436660766602
    5. ''#' → logprob: -7.778436660766602
    6. ' '' → logprob: -8.653436660766602
    7. ' '#'' → logprob: -9.278436660766602
    8. ' '.' → logprob: -9.528436660766602
    9. '"."' → logprob: -9.528436660766602
    10. ' ' → logprob: -10.278436660766602

Token 174: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4131726920604706
    2. '':' → logprob: -2.163172721862793
    3. ' and' → logprob: -2.288172721862793
    4. ' :' → logprob: -3.288172721862793
    5. '):' → logprob: -3.788172721862793
    6. ' '' → logprob: -4.288172721862793
    7. ' ':' → logprob: -4.413172721862793
    8. ':
' → logprob: -4.538172721862793
    9. 'and' → logprob: -5.413172721862793
    10. ''' → logprob: -5.413172721862793

Token 175: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2112011909484863
    2. '                   ' → logprob: -1.3362011909484863
    3. ' if' → logprob: -1.5862011909484863
    4. '               ' → logprob: -2.0862011909484863
    5. '           ' → logprob: -3.7112011909484863
    6. ' and' → logprob: -3.8362011909484863
    7. '                ' → logprob: -3.9612011909484863
    8. ' ' → logprob: -5.086201190948486
    9. ':
' → logprob: -5.086201190948486
    10. ' :' → logprob: -5.211201190948486

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01704624854028225
    2. 'if' (adapté à ' if') → logprob: -4.5170464515686035
    3. ' materials' → logprob: -5.3920464515686035
    4. ' cells' → logprob: -7.0170464515686035
    5. 'materials' → logprob: -8.267045974731445
    6. '                   ' → logprob: -9.517045974731445
    7. 'cells' → logprob: -9.767045974731445
    8. '                    ' → logprob: -10.517045974731445
    9. '                    
' → logprob: -10.892045974731445
    10. ' ' → logprob: -10.892045974731445

Token 177: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.06196925416588783
    2. 'ch' → logprob: -2.81196928024292
    3. '	ch' → logprob: -13.686968803405762
    4. ' ' → logprob: -15.811968803405762
    5. ' not' → logprob: -16.436969757080078
    6. '   ' → logprob: -17.561969757080078
    7. '[ch' → logprob: -17.561969757080078
    8. ' ' → logprob: -17.811969757080078
    9. '_ch' → logprob: -18.311969757080078
    10. '    ' → logprob: -18.311969757080078

Token 178: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004472608212381601
    2. ' in' → logprob: -5.504472732543945
    3. 'not' → logprob: -7.879472732543945
    4. 'in' → logprob: -11.754472732543945
    5. ' ' → logprob: -12.379472732543945
    6. ' no' → logprob: -13.129472732543945
    7. '	not' → logprob: -14.004472732543945
    8. ')' → logprob: -14.754472732543945
    9. '<|end|>' → logprob: -16.254472732543945
    10. ' )' → logprob: -16.754472732543945

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007148076314479113
    2. 'in' → logprob: -5.007148265838623
    3. '<|end|>' → logprob: -8.382147789001465
    4. '<|end|>' → logprob: -8.882147789001465
    5. ' materials' → logprob: -10.632147789001465
    6. ' ' → logprob: -11.757147789001465
    7. ')' → logprob: -12.132147789001465
    8. ' not' → logprob: -12.257147789001465
    9. 'materials' → logprob: -12.382147789001465
    10. 'to' → logprob: -12.507147789001465

Token 180: ' materials' (ID: 7875)
  Prédit: ' materials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' materials' → logprob: -0.2254207879304886
    2. 'materials' → logprob: -1.6004208326339722
    3. 'material' → logprob: -13.100420951843262
    4. ' materiais' → logprob: -13.225420951843262
    5. 'aterials' → logprob: -13.725420951843262
    6. ' materiales' → logprob: -13.725420951843262
    7. 'Materials' → logprob: -13.975420951843262
    8. ' ' → logprob: -15.100420951843262
    9. '```' → logprob: -15.725420951843262
    10. '<|end|>' → logprob: -15.725420951843262

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005289019085466862
    2. '<|end|>' → logprob: -5.630289077758789
    3. ':
' → logprob: -7.755289077758789
    4. ' :' → logprob: -7.880289077758789
    5. '.setdefault' → logprob: -8.630289077758789
    6. ']' → logprob: -8.630289077758789
    7. '<|end|>' → logprob: -8.880289077758789
    8. ']:' → logprob: -9.255289077758789
    9. ')' → logprob: -9.380289077758789
    10. '):' → logprob: -9.505289077758789

Token 182: '                       ' (ID: 968)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006455181632190943
    2. '                       ' → logprob: -5.881454944610596
    3. '                   ' → logprob: -6.131454944610596
    4. ':
' → logprob: -7.131454944610596
    5. ' :' → logprob: -7.881454944610596
    6. '<|end|>' → logprob: -9.756455421447754
    7. '):' → logprob: -10.006455421447754
    8. ' materials' → logprob: -10.131455421447754
    9. '                    ' → logprob: -10.881455421447754
    10. '       ' → logprob: -10.881455421447754

Token 183: ' materials' (ID: 7875)
  Prédit: ' materials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' materials' → logprob: -0.0486162044107914
    2. 'materials' (adapté à ' materials') → logprob: -3.0486161708831787
    3. ' cells' → logprob: -11.798616409301758
    4. '<|end|>' → logprob: -12.298616409301758
    5. 'Materials' → logprob: -12.423616409301758
    6. ' materiais' → logprob: -12.798616409301758
    7. ' materiales' → logprob: -13.173616409301758
    8. 'cells' → logprob: -13.298616409301758
    9. 'aterials' → logprob: -13.298616409301758
    10. ')' → logprob: -13.548616409301758

Token 184: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -0.003294513560831547
    2. '[' → logprob: -5.753294467926025
    3. ' =' → logprob: -10.378294944763184
    4. '[c' → logprob: -10.503294944763184
    5. '[cell' → logprob: -10.503294944763184
    6. ']' → logprob: -11.503294944763184
    7. '.setdefault' → logprob: -12.128294944763184
    8. '=' → logprob: -12.503294944763184
    9. '[m' → logprob: -13.253294944763184
    10. ' [' → logprob: -13.378294944763184

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012654215970542282
    2. ' ]' → logprob: -9.625126838684082
    3. ']=' → logprob: -9.750126838684082
    4. '']' → logprob: -14.250126838684082
    5. ' =' → logprob: -14.500126838684082
    6. '"]' → logprob: -15.125126838684082
    7. '=' → logprob: -16.000125885009766
    8. '`]' → logprob: -16.000125885009766
    9. ']={' → logprob: -16.500125885009766
    10. '<|end|>' → logprob: -16.625125885009766

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04865867272019386
    2. '=' → logprob: -3.048658609390259
    3. ']' → logprob: -10.67365837097168
    4. '<|end|>' → logprob: -10.67365837097168
    5. '=[]' → logprob: -11.67365837097168
    6. ' ' → logprob: -11.92365837097168
    7. ']=' → logprob: -12.79865837097168
    8. ')' → logprob: -13.42365837097168
    9. '=set' → logprob: -13.42365837097168
    10. ':' → logprob: -13.79865837097168

Token 187: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12811912596225739
    2. 'set' → logprob: -2.2531192302703857
    3. ' []' → logprob: -4.378118991851807
    4. ' set' → logprob: -6.003118991851807
    5. '[]
' → logprob: -9.878119468688965
    6. '[(' → logprob: -10.378119468688965
    7. '[]}' → logprob: -10.878119468688965
    8. '{' → logprob: -11.253119468688965
    9. '[]>' → logprob: -11.753119468688965
    10. '{}' → logprob: -11.753119468688965

Token 188: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015629465924575925
    2. '<|end|>' → logprob: -7.62656307220459
    3. '                    
' → logprob: -7.87656307220459
    4. '                    ' → logprob: -8.50156307220459
    5. '.append' → logprob: -9.12656307220459
    6. ',' → logprob: -9.87656307220459
    7. '		           ' → logprob: -9.87656307220459
    8. '				' → logprob: -10.37656307220459
    9. ' ' → logprob: -10.50156307220459
    10. '           ' → logprob: -10.62656307220459

Token 189: ' materials' (ID: 7875)
  Prédit: ' materials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' materials' → logprob: -0.0160470362752676
    2. 'materials' (adapté à ' materials') → logprob: -4.14104700088501
    3. '                   ' → logprob: -12.391047477722168
    4. 'Materials' → logprob: -12.766047477722168
    5. '                    ' → logprob: -13.391047477722168
    6. ' materiais' → logprob: -14.266047477722168
    7. 'aterials' → logprob: -14.266047477722168
    8. '    ' → logprob: -14.516047477722168
    9. ' cells' → logprob: -14.641047477722168
    10. '                    
' → logprob: -14.891047477722168

Token 190: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. '
' → logprob: -17.25
    4. '```' → logprob: -18.125
    5. ' [' → logprob: -18.25
    6. '[
' → logprob: -20.25
    7. '

' → logprob: -20.5
    8. '   ' → logprob: -20.5
    9. 'ch' → logprob: -20.625
    10. '[c' → logprob: -21.0

Token 191: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00012999906903132796
    2. '.append' → logprob: -9.875129699707031
    3. ' ].' → logprob: -10.000129699707031
    4. '][' → logprob: -11.375129699707031
    5. ']' → logprob: -11.625129699707031
    6. '                   ' → logprob: -12.000129699707031
    7. '               ' → logprob: -13.750129699707031
    8. 'append' → logprob: -13.750129699707031
    9. ').' → logprob: -14.000129699707031
    10. '           ' → logprob: -14.375129699707031

Token 192: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.816093228830141e-06
    2. ' append' → logprob: -12.87500286102295
    3. '.append' → logprob: -15.75000286102295
    4. 'appen' → logprob: -17.375001907348633
    5. '```' → logprob: -17.750001907348633
    6. '	append' → logprob: -18.750001907348633
    7. 'add' → logprob: -19.250001907348633
    8. '_append' → logprob: -19.375001907348633
    9. 'Append' → logprob: -19.875001907348633
    10. 'app' → logprob: -20.125001907348633

Token 193: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04521291330456734
    2. '(' → logprob: -3.295212984085083
    3. '(r' → logprob: -5.045212745666504
    4. ' (' → logprob: -7.295212745666504
    5. ' ((' → logprob: -10.670212745666504
    6. '(
' → logprob: -13.295212745666504
    7. ' ' → logprob: -14.170212745666504
    8. '(s' → logprob: -14.670212745666504
    9. '   ' → logprob: -16.04521369934082
    10. '[(' → logprob: -16.42021369934082

Token 194: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002615742268972099
    2. ' r' → logprob: -8.250261306762695
    3. ')' → logprob: -16.500261306762695
    4. '(r' → logprob: -16.750261306762695
    5. '   ' → logprob: -17.125261306762695
    6. '	r' → logprob: -17.125261306762695
    7. '_r' → logprob: -17.875261306762695
    8. ' ' → logprob: -18.500261306762695
    9. '    ' → logprob: -18.875261306762695
    10. '
' → logprob: -18.875261306762695

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006575038656592369
    2. ',c' → logprob: -5.131575107574463
    3. ' ,' → logprob: -7.381575107574463
    4. ',
' → logprob: -11.631574630737305
    5. '<|end|>' → logprob: -11.631574630737305
    6. '‌,' → logprob: -13.381574630737305
    7. 'c' → logprob: -13.506574630737305
    8. ' ' → logprob: -13.881574630737305
    9. '   ' → logprob: -14.881574630737305
    10. ')' → logprob: -15.756574630737305

Token 196: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.38687586784362793
    2. 'c' → logprob: -1.136875867843628
    3. ' ' → logprob: -13.261876106262207
    4. ')c' → logprob: -13.261876106262207
    5. ' 
' → logprob: -14.636876106262207
    6. '<|end|>' → logprob: -15.136876106262207
    7. ')' → logprob: -15.261876106262207
    8. '    ' → logprob: -16.13687515258789
    9. '   ' → logprob: -16.38687515258789
    10. ' )' → logprob: -16.76187515258789

Token 197: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008647779934108257
    2. ')' → logprob: -4.758647918701172
    3. '))
' → logprob: -10.508647918701172
    4. ')))' → logprob: -12.508647918701172
    5. ' ))' → logprob: -14.008647918701172
    6. ')
' → logprob: -14.508647918701172
    7. '               ' → logprob: -15.383647918701172
    8. '       ' → logprob: -16.008647918701172
    9. '                   ' → logprob: -16.008647918701172
    10. '),' → logprob: -16.383647918701172

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10111675411462784
    2. '
' → logprob: -2.35111665725708
    3. '        
' → logprob: -7.72611665725708
    4. '<|end|>' → logprob: -8.476117134094238
    5. '   ' → logprob: -8.976117134094238
    6. '    
' → logprob: -10.226117134094238
    7. '           ' → logprob: -10.851117134094238
    8. ' 
' → logprob: -11.101117134094238
    9. '```' → logprob: -11.226117134094238
    10. '  
' → logprob: -11.851117134094238

Token 199: ' suspicious' (ID: 63776)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.3584195375442505
    2. ' valid' → logprob: -1.3584195375442505
    3. ' for' → logprob: -1.6084195375442505
    4. 'for' → logprob: -2.233419418334961
    5. 'all' → logprob: -2.983419418334961
    6. '   ' → logprob: -3.608419418334961
    7. ' all' → logprob: -3.858419418334961
    8. '       ' → logprob: -4.233419418334961
    9. 'results' → logprob: -4.233419418334961
    10. ' results' → logprob: -4.983419418334961

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05842839181423187
    2. '_material' → logprob: -3.1834282875061035
    3. '=' → logprob: -4.4334282875061035
    4. '_' → logprob: -5.8084282875061035
    5. 's' → logprob: -9.058428764343262
    6. '_m' → logprob: -9.308428764343262
    7. '_items' → logprob: -9.933428764343262
    8. ' ' → logprob: -9.933428764343262
    9. '_cells' → logprob: -10.683428764343262
    10. '_chars' → logprob: -11.433428764343262

Token 201: ' False' (ID: 7983)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3193908631801605
    2. ' []' → logprob: -1.319390892982483
    3. 'set' → logprob: -5.694390773773193
    4. ' set' → logprob: -6.319390773773193
    5. 'False' → logprob: -7.694390773773193
    6. ' False' → logprob: -8.694391250610352
    7. '[' → logprob: -8.944391250610352
    8. ' [' → logprob: -9.569391250610352
    9. '[]
' → logprob: -10.319391250610352
    10. '   ' → logprob: -10.819391250610352

Token 202: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6236304044723511
    2. '
' → logprob: -0.8736304044723511
    3. '<|end|>' → logprob: -3.1236305236816406
    4. '        
' → logprob: -6.623630523681641
    5. '<|end|>' → logprob: -7.998630523681641
    6. '  
' → logprob: -8.49863052368164
    7. '
' → logprob: -8.99863052368164
    8. ' for' → logprob: -9.37363052368164
    9. '    
' → logprob: -9.49863052368164
    10. ' 
' → logprob: -9.49863052368164

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36759239435195923
    2. '<|end|>' → logprob: -1.6175923347473145
    3. '
' → logprob: -2.2425923347473145
    4. ' for' → logprob: -6.7425923347473145
    5. '        
' → logprob: -7.3675923347473145
    6. '<|end|>' → logprob: -7.7425923347473145
    7. ' 
' → logprob: -8.492592811584473
    8. '  
' → logprob: -8.867592811584473
    9. '   ' → logprob: -9.242592811584473
    10. 'for' → logprob: -9.992592811584473

Token 204: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13363710045814514
    2. 'for' (adapté à ' for') → logprob: -2.1336371898651123
    3. '       ' → logprob: -5.008636951446533
    4. '   ' → logprob: -13.008637428283691
    5. ' materials' → logprob: -13.258637428283691
    6. ' if' → logprob: -14.508637428283691
    7. ' ' → logprob: -14.758637428283691
    8. '	for' → logprob: -15.008637428283691
    9. '```' → logprob: -15.633637428283691
    10. '           ' → logprob: -15.883637428283691

Token 205: ' m' (ID: 284)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -1.3626329898834229
    2. 'material' → logprob: -1.6126329898834229
    3. ' material' → logprob: -1.8626329898834229
    4. ' mat' → logprob: -1.9876329898834229
    5. 'mat' → logprob: -1.9876329898834229
    6. 'ch' → logprob: -2.237632989883423
    7. 'm' → logprob: -5.612632751464844
    8. ' key' → logprob: -5.737632751464844
    9. ' m' → logprob: -6.862632751464844
    10. 'key' → logprob: -7.612632751464844

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008684182539582253
    2. 'in' → logprob: -4.758684158325195
    3. ',' → logprob: -9.758684158325195
    4. ' ' → logprob: -12.133684158325195
    5. 'space' → logprob: -13.133684158325195
    6. ' ,' → logprob: -13.383684158325195
    7. 's' → logprob: -13.758684158325195
    8. 'i' → logprob: -15.133684158325195
    9. ' i' → logprob: -15.383684158325195
    10. 'materials' → logprob: -15.758684158325195

Token 207: ' materials' (ID: 7875)
  Prédit: 'materials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'materials' → logprob: -0.3132796585559845
    2. ' materials' → logprob: -1.313279628753662
    3. ' range' → logprob: -12.43828010559082
    4. 'range' → logprob: -12.68828010559082
    5. 'aterials' → logprob: -12.68828010559082
    6. ' materiais' → logprob: -12.93828010559082
    7. 'material' → logprob: -13.18828010559082
    8. ' materiales' → logprob: -13.56328010559082
    9. '(material' → logprob: -14.43828010559082
    10. ' ' → logprob: -14.81328010559082

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12023895233869553
    2. '<|end|>' → logprob: -2.370239019393921
    3. ' in' → logprob: -4.245238780975342
    4. '<|end|>' → logprob: -6.370238780975342
    5. '.keys' → logprob: -7.245238780975342
    6. '):' → logprob: -7.370238780975342
    7. ' :' → logprob: -8.1202392578125
    8. 'in' → logprob: -8.2452392578125
    9. ',' → logprob: -8.3702392578125
    10. '_items' → logprob: -8.4952392578125

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011077526025474072
    2. ':' → logprob: -4.886077404022217
    3. '<|end|>' → logprob: -6.511077404022217
    4. ' if' → logprob: -6.886077404022217
    5. '            
' → logprob: -8.386077880859375
    6. '<|end|>' → logprob: -8.636077880859375
    7. ':
' → logprob: -8.761077880859375
    8. ',' → logprob: -9.011077880859375
    9. '            ' → logprob: -9.511077880859375
    10. '          ' → logprob: -10.136077880859375

Token 210: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.033350348472595215
    2. ' cells' → logprob: -4.283350467681885
    3. 'if' (adapté à ' if') → logprob: -4.533350467681885
    4. '           ' → logprob: -4.908350467681885
    5. 'cells' → logprob: -7.783350467681885
    6. '       ' → logprob: -8.033349990844727
    7. ' 
' → logprob: -10.033349990844727
    8. '   ' → logprob: -11.533349990844727
    9. ' ' → logprob: -11.658349990844727
    10. '
' → logprob: -12.033349990844727

Token 211: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14274419844150543
    2. 'not' → logprob: -2.017744302749634
    3. '
' → logprob: -10.267744064331055
    4. 'n' → logprob: -11.767744064331055
    5. '!' → logprob: -12.017744064331055
    6. '   ' → logprob: -12.142744064331055
    7. ' no' → logprob: -12.767744064331055
    8. ' ' → logprob: -13.392744064331055
    9. '	not' → logprob: -13.517744064331055
    10. ' materials' → logprob: -13.580244064331055

Token 212: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0013273799559101462
    2. 'is' → logprob: -6.6263275146484375
    3. '_' → logprob: -14.626327514648438
    4. ')' → logprob: -15.001327514648438
    5. ' ' → logprob: -15.876327514648438
    6. '(' → logprob: -15.876327514648438
    7. ' _' → logprob: -16.001327514648438
    8. ' ' → logprob: -16.126327514648438
    9. '_is' → logprob: -16.251327514648438
    10. ')is' → logprob: -17.001327514648438

Token 213: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.25000286102295
    3. '_rect' → logprob: -15.00000286102295
    4. 'rectangle' → logprob: -15.12500286102295
    5. ' _' → logprob: -16.500001907348633
    6. '"_' → logprob: -17.125001907348633
    7. '```' → logprob: -17.125001907348633
    8. '_cube' → logprob: -17.375001907348633
    9. '_square' → logprob: -17.625001907348633
    10. 'Rectangle' → logprob: -18.375001907348633

Token 214: '(material' (ID: 151026)
  Prédit: '(material'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(material' → logprob: -0.011254130862653255
    2. '(' → logprob: -4.51125431060791
    3. ' (' → logprob: -9.51125431060791
    4. '(m' → logprob: -10.13625431060791
    5. '(
' → logprob: -10.51125431060791
    6. '(Material' → logprob: -10.88625431060791
    7. '(mat' → logprob: -10.88625431060791
    8. '((' → logprob: -11.88625431060791
    9. '(

' → logprob: -12.51125431060791
    10. '(c' → logprob: -12.88625431060791

Token 215: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.060365608893335e-05
    2. '(s' → logprob: -10.375041007995605
    3. 'materials' → logprob: -13.375041007995605
    4. ')s' → logprob: -13.500041007995605
    5. '(material' → logprob: -13.750041007995605
    6. '(' → logprob: -13.750041007995605
    7. ')' → logprob: -13.875041007995605
    8. ' s' → logprob: -14.375041007995605
    9. '{s' → logprob: -14.750041007995605
    10. '[' → logprob: -14.750041007995605

Token 216: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.00012999906903132796
    2. '(m' → logprob: -9.125129699707031
    3. ')[' → logprob: -11.500129699707031
    4. '[' → logprob: -12.375129699707031
    5. ')' → logprob: -12.750129699707031
    6. ' [' → logprob: -14.000129699707031
    7. '[(' → logprob: -14.125129699707031
    8. '[
' → logprob: -14.875129699707031
    9. ')m' → logprob: -15.000129699707031
    10. '[ch' → logprob: -15.125129699707031

Token 217: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003186386078596115
    2. ')' → logprob: -6.128186225891113
    3. ')):' → logprob: -8.003186225891113
    4. '):
' → logprob: -8.128186225891113
    5. ' ):' → logprob: -8.253186225891113
    6. '(m' → logprob: -10.128186225891113
    7. ']):' → logprob: -10.503186225891113
    8. ':' → logprob: -12.128186225891113
    9. '   ' → logprob: -12.253186225891113
    10. '):

' → logprob: -12.378186225891113

Token 218: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13295917212963104
    2. ':
' → logprob: -2.1329591274261475
    3. '               ' → logprob: -5.757959365844727
    4. '           ' → logprob: -6.257959365844727
    5. ':return' → logprob: -7.507959365844727
    6. '):
' → logprob: -9.132959365844727
    7. '():
' → logprob: -9.632959365844727
    8. '):' → logprob: -9.882959365844727
    9. ' or' → logprob: -10.382959365844727
    10. '                   ' → logprob: -10.507959365844727

Token 219: ' suspicious' (ID: 63776)
  Prédit: ' suspicious'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suspicious' → logprob: -0.0050149401649832726
    2. 's' → logprob: -5.630014896392822
    3. '               ' → logprob: -6.755014896392822
    4. '           ' → logprob: -8.75501537322998
    5. '                   ' → logprob: -9.63001537322998
    6. '
' → logprob: -11.50501537322998
    7. '   ' → logprob: -12.13001537322998
    8. ' susp' → logprob: -12.75501537322998
    9. '       ' → logprob: -13.25501537322998
    10. ' 
' → logprob: -14.00501537322998

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008616935461759567
    2. '=' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.758617401123047
    4. '=True' → logprob: -13.883617401123047
    5. ' |=' → logprob: -15.508617401123047
    6. ' =
' → logprob: -16.258617401123047
    7. '<|end|>' → logprob: -17.133617401123047
    8. ' ' → logprob: -17.383617401123047
    9. ')' → logprob: -18.258617401123047
    10. ' =)' → logprob: -18.383617401123047

Token 221: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868710398674011
    2. ' True' → logprob: -1.136871099472046
    3. '=True' → logprob: -17.886871337890625
    4. '(True' → logprob: -18.386871337890625
    5. ' Tru' → logprob: -19.261871337890625
    6. 'Tr' → logprob: -20.261871337890625
    7. 'False' → logprob: -21.261871337890625
    8. 'true' → logprob: -21.886871337890625
    9. '   ' → logprob: -22.636871337890625
    10. '.True' → logprob: -23.011871337890625

Token 222: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007028996478766203
    2. '           ' → logprob: -5.382029056549072
    3. '                   ' → logprob: -7.257029056549072
    4. '       ' → logprob: -7.382029056549072
    5. '
' → logprob: -7.757029056549072
    6. '<|end|>' → logprob: -8.257028579711914
    7. '                
' → logprob: -9.257028579711914
    8. '                ' → logprob: -9.382028579711914
    9. '    
' → logprob: -9.757028579711914
    10. '            
' → logprob: -10.132028579711914

Token 223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00029494395130313933
    2. '           ' → logprob: -8.50029468536377
    3. '
' → logprob: -10.50029468536377
    4. '       ' → logprob: -10.87529468536377
    5. '                   ' → logprob: -11.50029468536377
    6. '    
' → logprob: -11.87529468536377
    7. '                
' → logprob: -11.87529468536377
    8. '            
' → logprob: -12.12529468536377
    9. '              ' → logprob: -12.50029468536377
    10. ' break' → logprob: -12.50029468536377

Token 224: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2670966386795044
    2. '               ' → logprob: -1.8920966386795044
    3. 'break' (adapté à ' break') → logprob: -2.517096519470215
    4. '           ' → logprob: -5.892096519470215
    5. '                ' → logprob: -9.892096519470215
    6. '       ' → logprob: -10.017096519470215
    7. '	break' → logprob: -10.642096519470215
    8. '                   ' → logprob: -10.642096519470215
    9. '            ' → logprob: -11.517096519470215
    10. '              ' → logprob: -11.767096519470215

Token 225: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0724974200129509
    2. '
' → logprob: -2.6974973678588867
    3. '   ' → logprob: -7.072497367858887
    4. '        
' → logprob: -7.072497367858887
    5. '    
' → logprob: -7.947497367858887
    6. '<|end|>' → logprob: -7.947497367858887
    7. '            
' → logprob: -10.447497367858887
    8. 'if' → logprob: -10.947497367858887
    9. '```' → logprob: -10.947497367858887
    10. ',' → logprob: -11.197497367858887

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05168571323156357
    2. '
' → logprob: -3.1766858100891113
    3. '   ' → logprob: -5.176685810089111
    4. '        
' → logprob: -6.551685810089111
    5. '    
' → logprob: -6.926685810089111
    6. '<|end|>' → logprob: -8.051685333251953
    7. ' if' → logprob: -9.301685333251953
    8. '            
' → logprob: -10.051685333251953
    9. ' 
' → logprob: -10.926685333251953
    10. '                
' → logprob: -11.176685333251953

Token 227: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8178219199180603
    2. '   ' → logprob: -1.067821979522705
    3. '
' → logprob: -2.192821979522705
    4. ' if' → logprob: -2.317821979522705
    5. '        
' → logprob: -6.567821979522705
    6. 'if' (adapté à ' if') → logprob: -6.567821979522705
    7. '    
' → logprob: -6.692821979522705
    8. ' print' → logprob: -7.817821979522705
    9. 'print' → logprob: -9.192821502685547
    10. '<|end|>' → logprob: -9.817821502685547

Token 228: ' suspicious' (ID: 63776)
  Prédit: ' suspicious'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suspicious' → logprob: -8.537868779967539e-06
    2. ' not' → logprob: -12.000008583068848
    3. 's' → logprob: -13.625008583068848
    4. ' ' → logprob: -15.000008583068848
    5. ' Susp' → logprob: -15.125008583068848
    6. ' suspended' → logprob: -15.375008583068848
    7. ' susp' → logprob: -16.25000762939453
    8. 'Susp' → logprob: -16.37500762939453
    9. ' ' → logprob: -16.75000762939453
    10. ' suspicion' → logprob: -17.87500762939453

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013267839094623923
    2. ':
' → logprob: -6.626326560974121
    3. ':

' → logprob: -14.876326560974121
    4. ' :' → logprob: -15.001326560974121
    5. 'print' → logprob: -16.626327514648438
    6. ':return' → logprob: -16.876327514648438
    7. ':
' → logprob: -17.001327514648438
    8. '<|end|>' → logprob: -17.126327514648438
    9. '):' → logprob: -17.251327514648438
    10. ',' → logprob: -17.376327514648438

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23984725773334503
    2. ' print' → logprob: -1.8648473024368286
    3. 'print' → logprob: -2.864847183227539
    4. '       ' → logprob: -6.739847183227539
    5. '   ' → logprob: -9.239847183227539
    6. '```' → logprob: -11.239847183227539
    7. '               ' → logprob: -11.739847183227539
    8. '
' → logprob: -11.864847183227539
    9. '            
' → logprob: -11.989847183227539
    10. '	print' → logprob: -12.364847183227539

Token 231: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.47448983788490295
    2. 'print' (adapté à ' print') → logprob: -0.9744898080825806
    3. '       ' → logprob: -8.34949016571045
    4. '           ' → logprob: -8.72449016571045
    5. '   ' → logprob: -11.47449016571045
    6. '	print' → logprob: -13.34949016571045
    7. '    ' → logprob: -14.97449016571045
    8. '        ' → logprob: -15.22449016571045
    9. '
' → logprob: -15.22449016571045
    10. ' ' → logprob: -15.34949016571045

Token 232: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005350686144083738
    2. '(' → logprob: -5.255350589752197
    3. '('' → logprob: -9.130351066589355
    4. '(":' → logprob: -12.505351066589355
    5. '(-' → logprob: -13.130351066589355
    6. '(True' → logprob: -14.630351066589355
    7. '("?' → logprob: -14.630351066589355
    8. '("("' → logprob: -14.880351066589355
    9. '(
' → logprob: -15.130351066589355
    10. '"' → logprob: -15.630351066589355

Token 233: 'S' (ID: 50)
  Prédit: 'Susp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Susp' → logprob: -1.0958925485610962
    2. 'Yes' → logprob: -1.5958925485610962
    3. 'YES' → logprob: -1.8458925485610962
    4. 'No' → logprob: -1.9708925485610962
    5. 'S' → logprob: -2.5958924293518066
    6. 'NO' → logprob: -2.8458924293518066
    7. 'INVALID' → logprob: -5.220892429351807
    8. 's' → logprob: -5.470892429351807
    9. 'COR' → logprob: -5.720892429351807
    10. 'BUG' → logprob: -6.595892429351807

Token 234: 'USP' (ID: 98587)
  Prédit: 'USP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'USP' → logprob: -0.05338190868496895
    2. 'US' → logprob: -3.67838191986084
    3. 'usp' → logprob: -3.67838191986084
    4. 'AFE' → logprob: -7.67838191986084
    5. 'us' → logprob: -8.17838191986084
    6. ' usp' → logprob: -8.30338191986084
    7. 'U' → logprob: -8.92838191986084
    8. 'TR' → logprob: -9.67838191986084
    9. ' USP' → logprob: -9.80338191986084
    10. 'P' → logprob: -10.30338191986084

Token 235: 'IC' (ID: 2022)
  Prédit: 'IC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IC' → logprob: -0.002223529852926731
    2. 'ECT' → logprob: -6.127223491668701
    3. 'ICIO' → logprob: -11.00222396850586
    4. 'ICO' → logprob: -11.87722396850586
    5. '
' → logprob: -12.75222396850586
    6. '"' → logprob: -12.87722396850586
    7. '!' → logprob: -13.00222396850586
    8. '

' → logprob: -13.50222396850586
    9. '1' → logprob: -14.12722396850586
    10. '```' → logprob: -14.62722396850586

Token 236: 'IOUS' (ID: 76814)
  Prédit: 'OUS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUS' → logprob: -0.18896202743053436
    2. 'IOUS' → logprob: -1.8139619827270508
    3. 'C' → logprob: -5.063961982727051
    4. 'O' → logprob: -7.063961982727051
    5. 'S' → logprob: -7.063961982727051
    6. '0' → logprob: -8.31396198272705
    7. '
' → logprob: -8.43896198272705
    8. '

' → logprob: -8.81396198272705
    9. '```' → logprob: -9.31396198272705
    10. '"' → logprob: -9.43896198272705

Token 237: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3137848973274231
    2. '")
' → logprob: -1.3137848377227783
    3. '")
' → logprob: -7.688785076141357
    4. '")

' → logprob: -9.9387845993042
    5. ')' → logprob: -12.3137845993042
    6. '"' → logprob: -12.9387845993042
    7. '");' → logprob: -13.1887845993042
    8. '!")' → logprob: -13.3137845993042
    9. ' ")' → logprob: -13.6887845993042
    10. ')
' → logprob: -13.9387845993042

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011202149325981736
    2. ' else' → logprob: -7.501120090484619
    3. 'else' → logprob: -7.876120090484619
    4. '<|end|>' → logprob: -8.626120567321777
    5. '<|end|>' → logprob: -13.251120567321777
    6. '   ' → logprob: -13.626120567321777
    7. '	' → logprob: -13.751120567321777
    8. '
' → logprob: -13.876120567321777
    9. '	else' → logprob: -14.001120567321777
    10. ')' → logprob: -14.626120567321777

Token 239: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5550247430801392
    2. '       ' → logprob: -1.0550247430801392
    3. 'else' (adapté à ' else') → logprob: -2.5550246238708496
    4. '<|end|>' → logprob: -10.180025100708008
    5. '	else' → logprob: -10.930025100708008
    6. ')' → logprob: -12.680025100708008
    7. '   ' → logprob: -13.055025100708008
    8. '	' → logprob: -13.680025100708008
    9. '           ' → logprob: -13.930025100708008
    10. 'elif' → logprob: -14.305025100708008

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5240815877914429
    2. ':
' → logprob: -1.0240815877914429
    3. '           ' → logprob: -3.0240817070007324
    4. '       ' → logprob: -9.399081230163574
    5. '               ' → logprob: -10.524081230163574
    6. '          ' → logprob: -11.399081230163574
    7. '   ' → logprob: -11.524081230163574
    8. ' :
' → logprob: -12.024081230163574
    9. ',' → logprob: -12.149081230163574
    10. ' :' → logprob: -12.524081230163574

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008721878752112389
    2. ' print' → logprob: -5.133721828460693
    3. 'print' → logprob: -5.883721828460693
    4. '       ' → logprob: -12.883722305297852
    5. '	       ' → logprob: -14.258722305297852
    6. '               ' → logprob: -14.758722305297852
    7. '   ' → logprob: -15.008722305297852
    8. '		' → logprob: -15.133722305297852
    9. '	print' → logprob: -15.883722305297852
    10. ' ' → logprob: -16.13372230529785

Token 242: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0026800562627613544
    2. ' print' → logprob: -6.127679824829102
    3. '           ' → logprob: -7.627679824829102
    4. '       ' → logprob: -11.877679824829102
    5. '   ' → logprob: -14.502679824829102
    6. '               ' → logprob: -15.002679824829102
    7. '	print' → logprob: -15.377679824829102
    8. '```' → logprob: -17.1276798248291
    9. ' ' → logprob: -17.6276798248291
    10. '.print' → logprob: -17.7526798248291

Token 243: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0003357006062287837
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -15.125335693359375
    4. '('' → logprob: -18.000335693359375
    5. '("("' → logprob: -18.125335693359375
    6. '"' → logprob: -19.375335693359375
    7. '("")' → logprob: -19.500335693359375
    8. '()' → logprob: -19.500335693359375
    9. '(

' → logprob: -19.625335693359375
    10. '(""' → logprob: -20.375335693359375

Token 244: 'SAFE' (ID: 147772)
  Prédit: 'OK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -1.057389497756958
    2. 'C' → logprob: -1.182389497756958
    3. 'VALID' → logprob: -2.557389497756958
    4. 'SAFE' → logprob: -2.807389497756958
    5. 'CONF' → logprob: -2.807389497756958
    6. '"' → logprob: -3.557389497756958
    7. 'NOT' → logprob: -3.807389497756958
    8. 'GOOD' → logprob: -4.182389259338379
    9. 'APP' → logprob: -4.557389259338379
    10. 'COR' → logprob: -4.682389259338379

Token 245: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -5.88418151892256e-05
    2. ')' → logprob: -10.500059127807617
    3. ')")' → logprob: -10.500059127807617
    4. '")
' → logprob: -12.500059127807617
    5. '()' → logprob: -17.750059127807617
    6. '')' → logprob: -18.000059127807617
    7. '"' → logprob: -18.125059127807617
    8. '}")' → logprob: -18.250059127807617
    9. '!")' → logprob: -18.500059127807617
    10. ')"' → logprob: -19.125059127807617

Token 246: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.976922744186595e-05
    2. ' if' → logprob: -10.875040054321289
    3. '```' → logprob: -11.250040054321289
    4. '<|end|>' → logprob: -12.875040054321289
    5. 'main' → logprob: -13.125040054321289
    6. '#' → logprob: -13.625040054321289
    7. '
' → logprob: -14.000040054321289
    8. '\' → logprob: -15.250040054321289
    9. 'def' → logprob: -15.250040054321289
    10. '\n' → logprob: -15.375040054321289

Token 247: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019742397591471672
    2. '<|end|>' → logprob: -4.019742488861084
    3. '(' → logprob: -7.769742488861084
    4. '()
' → logprob: -8.144742012023926
    5. '```' → logprob: -8.269742012023926
    6. '
' → logprob: -8.519742012023926
    7. ')' → logprob: -9.144742012023926
    8. '();' → logprob: -9.644742012023926
    9. '#' → logprob: -9.769742012023926
    10. '())' → logprob: -9.894742012023926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 245
Tokens correctement prédits (1ère position, stricte): 147
Tokens correctement prédits (1ère position, avec adaptation): 150
Tokens correctement prédits (top 10): 218
Précision stricte (1ère position): 60.00%
Précision adaptée (1ère position): 61.22%
Précision (top 10): 88.98%
================================================================================
