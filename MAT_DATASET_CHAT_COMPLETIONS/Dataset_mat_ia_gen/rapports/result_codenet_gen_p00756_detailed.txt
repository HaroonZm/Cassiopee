================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

# On modélise chaque disque par une classe Disc pour plus de clarté
class Disc:
    def __init__(self, x, y, r, c):
        self.x = x      # coordonnée x du centre
        self.y = y      # coordonnée y du centre
        self.r = r      # rayon
        self.c = c      # couleur (indice)
        
# Fonction pour déterminer si un disque i est sur un disque j
# c’est-à-dire s’il recouvre partiellement j et que i<j (i est apparu avant j)
def is_on_top(i, j, discs):
    di = discs[i]
    dj = discs[j]
    # distance entre les centres
    dist = math.sqrt((di.x - dj.x)**2 + (di.y - dj.y)**2)
    # i est sur j ssi la distance est STRICTEMENT inférieure à r_i + r_j (pas tangent)
    # cela signifie que i chevauche j ; et puisque i<j, i est "au-dessus"
    return dist < di.r + dj.r

# Fonction pour calculer l'état "libre" des disques. Un disque est libre s'il n'y a aucun disque 
# sur lui (c'est-à-dire au-dessus). On modélise cela par un graphe d'arêtes i->j signifiant i est sur j.
# Ensuite, on peut calculer le nombre de disques sur chacun, et détecter ceux sans disque au-dessus.
def compute_free(discs, removed):
    n = len(discs)
    # Pour chaque disque, liste des disques directement dessus (i -> j signifie i est dessus)
    on_top = [[] for _ in range(n)]
    # on compte combien de disques sont dessus de j (dans le sous-ensemble non enlevé)
    above_count = [0]*n
    
    for i in range(n):
        if removed[i]:
            continue
        for j in range(i+1, n):
            if removed[j]:
                continue
            if is_on_top(i, j, discs):
                on_top[i].append(j)
                above_count[j] += 1
    # les disques sans disque au-dessus sont libres
    free = [above_count[i] == 0 and (not removed[i]) for i in range(n)]
    return free

# Fonction récursive pour obtenir le maximum de disques pouvant être retirés
# Arg : removed est une liste booléenne indiquant les disques déjà retirés
# On cherche toutes les paires de disques libres de même couleur, on les enlève, on recurse, et maximise la quantité retirée.
def max_removed(discs, removed):
    n = len(discs)
    free = compute_free(discs, removed)
    
    # Trouver toutes les paires libres de même couleur
    color_to_free_indices = {}
    for i in range(n):
        if free[i]:
            c = discs[i].c
            color_to_free_indices.setdefault(c, []).append(i)
    
    # Pas de paires libres possibles -> fin de la récursion
    any_pair = False
    best = 0
    # Pour chaque couleur, essayer toutes les paires possibles parmi les libres
    for c, indices in color_to_free_indices.items():
        length = len(indices)
        if length < 2:
            continue
        # Parcourir toutes les paires
        for i1 in range(length):
            for i2 in range(i1+1, length):
                # essayer d'enlever ces deux disques
                removed[indices[i1]] = True
                removed[indices[i2]] = True
                # on enlève 2 disques maintenant, plus ceux des appels récursifs
                score = 2 + max_removed(discs, removed)
                # remettre comme avant (backtrack)
                removed[indices[i1]] = False
                removed[indices[i2]] = False
                if score > best:
                    best = score
                any_pair = True

    # Si aucune pair n'a été enlevée, c'est 0 (aucun disque retiré dans ce cas)
    return best

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        n = int(input_lines[idx].strip())
        idx += 1
        if n == 0:
            # fin de la saisie
            break
        discs = []
        for _ in range(n):
            x, y, r, c = map(int, input_lines[idx].strip().split())
            idx += 1
            discs.append(Disc(x, y, r, c))
        
        # liste booléenne qui indique si le disque a été retiré
        removed = [False]*n
        # calculer puis afficher le résultat
        result = max_removed(discs, removed)
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023202638840302825
    2. 'os' → logprob: -8.375231742858887
    3. '"os' → logprob: -14.875231742858887
    4. ' math' → logprob: -15.000231742858887
    5. ' re' → logprob: -15.125231742858887
    6. '_os' → logprob: -15.750231742858887
    7. ' json' → logprob: -16.125232696533203
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -17.500232696533203
    10. ' ' → logprob: -17.500232696533203

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10232575237751007
    2. '\' → logprob: -3.602325677871704
    3. '\n' → logprob: -3.977325677871704
    4. 'import' → logprob: -4.352325916290283
    5. '<|end|>' → logprob: -4.602325916290283
    6. '```' → logprob: -4.727325916290283
    7. '
' → logprob: -4.852325916290283
    8. '

' → logprob: -5.477325916290283
    9. '<|end|>' → logprob: -6.602325916290283
    10. '' → logprob: -6.602325916290283

Token 6: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0616949796676636
    2. '\' → logprob: -1.4366949796676636
    3. 'import' → logprob: -2.186695098876953
    4. '\n' → logprob: -2.186695098876953
    5. '```' → logprob: -2.436695098876953
    6. 'def' → logprob: -3.311695098876953
    7. '
' → logprob: -4.061695098876953
    8. ',' → logprob: -4.686695098876953
    9. '`' → logprob: -4.936695098876953
    10. '*' → logprob: -4.936695098876953

Token 7: ' On' (ID: 2160)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7233594655990601
    2. 'def' → logprob: -0.9733594655990601
    3. ' ' → logprob: -2.2233595848083496
    4. ' import' → logprob: -5.09835958480835
    5. ' #' → logprob: -5.22335958480835
    6. 'import' → logprob: -5.22335958480835
    7. '#' → logprob: -5.47335958480835
    8. '.' → logprob: -6.47335958480835
    9. ' math' → logprob: -7.22335958480835
    10. 'factor' → logprob: -7.72335958480835

Token 8: ' mod' (ID: 1812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002498133108019829
    2. 'ly' → logprob: -6.377498149871826
    3. 'line' → logprob: -7.627498149871826
    4. 'ce' → logprob: -9.252497673034668
    5. ' e' → logprob: -10.127497673034668
    6. 'el' → logprob: -10.627497673034668
    7. 'eline' → logprob: -10.627497673034668
    8. '_' → logprob: -11.002497673034668
    9. 'es' → logprob: -11.252497673034668
    10. 'l' → logprob: -11.377497673034668

Token 9: 'él' (ID: 6778)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.056716565042734146
    2. 'ular' → logprob: -4.306716442108154
    3. 'u' → logprob: -4.431716442108154
    4. 'e' → logprob: -4.806716442108154
    5. 'ules' → logprob: -4.806716442108154
    6. 'ulo' → logprob: -5.556716442108154
    7. 'ul' → logprob: -5.931716442108154
    8. '_' → logprob: -6.181716442108154
    9. 'el' → logprob: -6.431716442108154
    10. '#' → logprob: -7.931716442108154

Token 10: 'ise' (ID: 1096)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0604206323623657
    2. 'é' → logprob: -1.1854206323623657
    3. 'è' → logprob: -2.060420513153076
    4. 'isation' → logprob: -2.935420513153076
    5. 'él' → logprob: -3.435420513153076
    6. '```' → logprob: -3.435420513153076
    7. 'èle' → logprob: -3.810420513153076
    8. 'es' → logprob: -3.935420513153076
    9. 'ation' → logprob: -4.060420513153076
    10. 'el' → logprob: -4.060420513153076

Token 11: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9014291763305664
    2. ' la' → logprob: -2.2764291763305664
    3. 'l' → logprob: -2.4014291763305664
    4. ' l' → logprob: -2.6514291763305664
    5. ' le' → logprob: -2.7764291763305664
    6. 'le' → logprob: -2.7764291763305664
    7. '_' → logprob: -2.7764291763305664
    8. 'e' → logprob: -3.7764291763305664
    9. ',' → logprob: -4.151429176330566
    10. ' les' → logprob: -4.276429176330566

Token 12: ' disque' (ID: 114222)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1301307678222656
    2. 'élé' → logprob: -1.6301307678222656
    3. 'é' → logprob: -1.8801307678222656
    4. ' point' → logprob: -3.2551307678222656
    5. '_' → logprob: -3.3801307678222656
    6. ' élément' → logprob: -3.5051307678222656
    7. ' particle' → logprob: -4.005130767822266
    8. '#' → logprob: -4.255130767822266
    9. ' ligne' → logprob: -4.255130767822266
    10. ' module' → logprob: -4.755130767822266

Token 13: ' par' (ID: 686)
  Prédit: ' comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.2456875741481781
    2. ' par' → logprob: -2.870687484741211
    3. '.' → logprob: -3.370687484741211
    4. ' ' → logprob: -3.495687484741211
    5. ',' → logprob: -3.870687484741211
    6. ' :' → logprob: -4.245687484741211
    7. 'comme' → logprob: -4.245687484741211
    8. ':' → logprob: -4.245687484741211
    9. ' ' → logprob: -5.745687484741211
    10. '```' → logprob: -5.745687484741211

Token 14: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.27970826625823975
    2. 'un' → logprob: -2.2797083854675293
    3. ' une' → logprob: -2.5297083854675293
    4. 'une' → logprob: -3.0297083854675293
    5. ' son' → logprob: -5.279708385467529
    6. ' sa' → logprob: -5.779708385467529
    7. 'son' → logprob: -6.154708385467529
    8. 'a' → logprob: -7.404708385467529
    9. ''un' → logprob: -7.529708385467529
    10. ' ' → logprob: -7.779708385467529

Token 15: ' classe' (ID: 29329)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.6448150277137756
    2. ' liste' → logprob: -2.144814968109131
    3. ' chaîne' → logprob: -2.144814968109131
    4. '#' → logprob: -3.894814968109131
    5. 'ligne' → logprob: -3.894814968109131
    6. ' ' → logprob: -3.894814968109131
    7. ' sph' → logprob: -4.019814968109131
    8. ' variable' → logprob: -4.144814968109131
    9. ' chaine' → logprob: -4.144814968109131
    10. ' class' → logprob: -4.394814968109131

Token 16: ' Disc' (ID: 52721)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.018907181918621063
    2. ' class' → logprob: -4.518907070159912
    3. '
' → logprob: -5.893907070159912
    4. '\' → logprob: -6.393907070159912
    5. '\n' → logprob: -6.393907070159912
    6. '.' → logprob: -7.518907070159912
    7. '```' → logprob: -8.01890754699707
    8. '.
' → logprob: -8.26890754699707
    9. '

' → logprob: -8.76890754699707
    10. '"class' → logprob: -9.64390754699707

Token 17: ' pour' (ID: 1930)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07909037917852402
    2. ':' → logprob: -3.4540903568267822
    3. '
' → logprob: -3.5790903568267822
    4. ' class' → logprob: -5.204090595245361
    5. '```' → logprob: -5.829090595245361
    6. '.' → logprob: -5.954090595245361
    7. '\' → logprob: -6.829090595245361
    8. '\n' → logprob: -6.954090595245361
    9. ':
' → logprob: -7.704090595245361
    10. '

' → logprob: -7.704090595245361

Token 18: ' plus' (ID: 2932)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.6445834040641785
    2. ' faciliter' → logprob: -1.8945834636688232
    3. ' représ' → logprob: -2.6445834636688232
    4. 'class' → logprob: -2.7695834636688232
    5. ' gérer' → logprob: -3.7695834636688232
    6. 'stock' → logprob: -3.7695834636688232
    7. 're' → logprob: -3.8945834636688232
    8. 'repr' → logprob: -4.019583225250244
    9. 'fac' → logprob: -4.269583225250244
    10. 'simpl' → logprob: -4.394583225250244

Token 19: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.670619547367096
    2. ' de' → logprob: -1.1706194877624512
    3. 's' → logprob: -2.920619487762451
    4. '_' → logprob: -4.045619487762451
    5. 'de' → logprob: -4.170619487762451
    6. 'ieurs' → logprob: -4.295619487762451
    7. ' a' → logprob: -4.545619487762451
    8. ' d' → logprob: -4.545619487762451
    9. ' ' → logprob: -5.295619487762451
    10. '.' → logprob: -5.295619487762451

Token 20: ' cl' (ID: 567)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.4379514157772064
    2. 'clar' → logprob: -1.6879514455795288
    3. ' cl' → logprob: -2.5629513263702393
    4. ' ' → logprob: -4.062951564788818
    5. 'mod' → logprob: -4.312951564788818
    6. '```' → logprob: -4.312951564788818
    7. 'flex' → logprob: -4.812951564788818
    8. 'c' → logprob: -5.312951564788818
    9. 'commod' → logprob: -5.562951564788818
    10. 's' → logprob: -5.562951564788818

Token 21: 'art' (ID: 497)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.8351303339004517
    2. 'art' → logprob: -0.8351303339004517
    3. 'a' → logprob: -2.460130214691162
    4. 'ass' → logprob: -3.335130214691162
    5. 'asse' → logprob: -6.335130214691162
    6. 'aret' → logprob: -6.335130214691162
    7. 'aré' → logprob: -6.585130214691162
    8. '@' → logprob: -6.960130214691162
    9. 'air' → logprob: -7.210130214691162
    10. '#' → logprob: -7.710130214691162

Token 22: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0025022942572832108
    2. 'e' → logprob: -6.00250244140625
    3. 'és' → logprob: -12.25250244140625
    4. '�' → logprob: -12.37750244140625
    5. 'ié' → logprob: -12.37750244140625
    6. 'y' → logprob: -13.00250244140625
    7. 'è' → logprob: -13.50250244140625
    8. '```' → logprob: -13.62750244140625
    9. 'u' → logprob: -13.75250244140625
    10. ''' → logprob: -13.75250244140625

Token 23: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011672019958496094
    2. '```' → logprob: -5.011672019958496
    3. '
' → logprob: -5.761672019958496
    4. ' class' → logprob: -7.386672019958496
    5. '\n' → logprob: -7.511672019958496
    6. '\' → logprob: -8.511672019958496
    7. '"class' → logprob: -9.511672019958496
    8. ':' → logprob: -9.761672019958496
    9. 's' → logprob: -9.886672019958496
    10. '.' → logprob: -10.386672019958496

Token 24: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01007845252752304
    2. '
' → logprob: -4.885078430175781
    3. '```' → logprob: -6.510078430175781
    4. '\n' → logprob: -7.760078430175781
    5. ' class' → logprob: -8.010078430175781
    6. '\' → logprob: -9.510078430175781
    7. 'c' → logprob: -10.260078430175781
    8. '"class' → logprob: -10.385078430175781
    9. '

' → logprob: -11.010078430175781
    10. ' 
' → logprob: -11.385078430175781

Token 25: ' Disc' (ID: 52721)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010438569821417332
    2. ' Disc' → logprob: -4.635438442230225
    3. ' ' → logprob: -7.885438442230225
    4. ' Dis' → logprob: -9.135438919067383
    5. 'Disc' → logprob: -9.760438919067383
    6. ' Disk' → logprob: -10.510438919067383
    7. ' Space' → logprob: -10.510438919067383
    8. ' ‌' → logprob: -11.260438919067383
    9. '  ' → logprob: -11.635438919067383
    10. '_' → logprob: -12.260438919067383

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020664507523179054
    2. '(' → logprob: -3.8956644535064697
    3. ' :' → logprob: -9.64566421508789
    4. '():' → logprob: -10.89566421508789
    5. '(:' → logprob: -11.02066421508789
    6. '):' → logprob: -11.39566421508789
    7. ':**' → logprob: -12.14566421508789
    8. ':
' → logprob: -13.14566421508789
    9. '(":' → logprob: -13.89566421508789
    10. ',' → logprob: -14.77066421508789

Token 27: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5707659721374512
    2. '(' → logprob: -0.9457659721374512
    3. ' :' → logprob: -3.445765972137451
    4. ' ' → logprob: -5.445765972137451
    5. ' (' → logprob: -5.570765972137451
    6. '   ' → logprob: -5.820765972137451
    7. '(space' → logprob: -6.945765972137451
    8. '(object' → logprob: -7.195765972137451
    9. '<|end|>' → logprob: -7.820765972137451
    10. '(
' → logprob: -8.69576644897461

Token 28: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4290270507335663
    2. '   ' → logprob: -1.3040270805358887
    3. 'def' (adapté à ' def') → logprob: -2.6790270805358887
    4. '    ' → logprob: -4.929027080535889
    5. ' ' → logprob: -7.679027080535889
    6. ' ```' → logprob: -8.17902660369873
    7. '```' → logprob: -8.55402660369873
    8. ' """' → logprob: -9.67902660369873
    9. ' ' → logprob: -9.67902660369873
    10. ' )' → logprob: -9.67902660369873

Token 29: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006956434343010187
    2. ' init' → logprob: -6.256956577301025
    3. ' ' → logprob: -6.381956577301025
    4. ' ' → logprob: -6.631956577301025
    5. '__' → logprob: -7.631956577301025
    6. ' _' → logprob: -7.881956577301025
    7. '_' → logprob: -8.006956100463867
    8. 'init' → logprob: -8.006956100463867
    9. '_init' → logprob: -8.006956100463867
    10. ' def' → logprob: -9.506956100463867

Token 30: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -16.25
    3. 'ini' → logprob: -16.75
    4. ' init' → logprob: -17.75
    5. 'in' → logprob: -18.625
    6. 'int' → logprob: -19.5
    7. '_init' → logprob: -20.625
    8. 'inite' → logprob: -21.125
    9. 'inti' → logprob: -22.25
    10. '	init' → logprob: -22.25

Token 31: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.46133843064308167
    2. '(' → logprob: -1.0863384008407593
    3. '__' → logprob: -3.961338520050049
    4. ' (' → logprob: -5.711338520050049
    5. '<|end|>' → logprob: -5.836338520050049
    6. '(self' → logprob: -6.086338520050049
    7. '__(
' → logprob: -6.336338520050049
    8. '_' → logprob: -6.461338520050049
    9. '_(' → logprob: -8.33633804321289
    10. '__((' → logprob: -8.46133804321289

Token 32: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016069795936346054
    2. ' self' → logprob: -4.1410698890686035
    3. '(self' → logprob: -10.766069412231445
    4. ')' → logprob: -11.641069412231445
    5. ' )' → logprob: -12.641069412231445
    6. ' ' → logprob: -14.016069412231445
    7. 's' → logprob: -14.766069412231445
    8. ',' → logprob: -15.141069412231445
    9. ',self' → logprob: -15.516069412231445
    10. 'space' → logprob: -15.766069412231445

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7721983194351196
    2. '(' → logprob: -1.0221983194351196
    3. ' ,' → logprob: -2.27219820022583
    4. ' (' → logprob: -3.64719820022583
    5. '(self' → logprob: -3.89719820022583
    6. ')' → logprob: -4.02219820022583
    7. ' )' → logprob: -5.39719820022583
    8. 'self' → logprob: -6.52219820022583
    9. ' ' → logprob: -6.52219820022583
    10. '<|end|>' → logprob: -6.52219820022583

Token 34: ' x' (ID: 1215)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.2519640326499939
    2. 'radius' → logprob: -2.2519640922546387
    3. ' self' → logprob: -2.7519640922546387
    4. ' position' → logprob: -3.6269640922546387
    5. 'self' → logprob: -4.376964092254639
    6. ' rayon' → logprob: -5.251964092254639
    7. 'position' → logprob: -5.626964092254639
    8. ' diameter' → logprob: -6.626964092254639
    9. ' center' → logprob: -6.876964092254639
    10. ' x' → logprob: -7.501964092254639

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003347506280988455
    2. ' ,' → logprob: -8.125334739685059
    3. ')' → logprob: -10.625334739685059
    4. ',y' → logprob: -12.125334739685059
    5. '):' → logprob: -13.000334739685059
    6. ',int' → logprob: -13.750334739685059
    7. ':' → logprob: -13.750334739685059
    8. ',)' → logprob: -14.250334739685059
    9. ',x' → logprob: -14.500334739685059
    10. ',p' → logprob: -14.500334739685059

Token 36: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38689425587654114
    2. ' y' → logprob: -1.1368942260742188
    3. ' ' → logprob: -11.386894226074219
    4. ' ' → logprob: -12.011894226074219
    5. '	y' → logprob: -13.511894226074219
    6. 'space' → logprob: -14.261894226074219
    7. '    ' → logprob: -14.761894226074219
    8. ')' → logprob: -14.761894226074219
    9. ' ' → logprob: -14.886894226074219
    10. '​' → logprob: -15.011894226074219

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39786458015441895
    2. '):' → logprob: -1.147864580154419
    3. ')' → logprob: -4.52286434173584
    4. ' ,' → logprob: -10.27286434173584
    5. ' ):' → logprob: -10.77286434173584
    6. '):
' → logprob: -12.27286434173584
    7. ':' → logprob: -12.39786434173584
    8. '),' → logprob: -12.77286434173584
    9. ' )' → logprob: -13.39786434173584
    10. ',p' → logprob: -13.89786434173584

Token 38: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.39990293979644775
    2. ' radius' → logprob: -1.2749029397964478
    3. 'radius' → logprob: -3.649902820587158
    4. 'r' → logprob: -4.024902820587158
    5. ' ' → logprob: -6.149902820587158
    6. ' z' → logprob: -6.274902820587158
    7. ' rayon' → logprob: -6.899902820587158
    8. '   ' → logprob: -8.149903297424316
    9. ' ' → logprob: -8.837403297424316
    10. 'z' → logprob: -8.962403297424316

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09058047086000443
    2. ')' → logprob: -2.465580463409424
    3. ',' → logprob: -6.590580463409424
    4. ' ):' → logprob: -8.465580940246582
    5. '):
' → logprob: -10.590580940246582
    6. ' )' → logprob: -11.215580940246582
    7. ':' → logprob: -12.090580940246582
    8. ' ' → logprob: -12.590580940246582
    9. ' ,' → logprob: -13.715580940246582
    10. '_' → logprob: -14.090580940246582

Token 40: ' c' (ID: 274)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.10617219656705856
    2. 'color' → logprob: -2.8561720848083496
    3. ' c' → logprob: -4.35617208480835
    4. ' ' → logprob: -4.48117208480835
    5. ' couleur' → logprob: -4.73117208480835
    6. 'c' → logprob: -5.85617208480835
    7. ')' → logprob: -6.60617208480835
    8. ' )' → logprob: -7.35617208480835
    9. ' z' → logprob: -8.231172561645508
    10. ' n' → logprob: -8.293672561645508

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03459284454584122
    2. ')' → logprob: -4.034592628479004
    3. ',' → logprob: -4.784592628479004
    4. ' ):' → logprob: -5.159592628479004
    5. 'olor' → logprob: -6.909592628479004
    6. 'e' → logprob: -7.909592628479004
    7. 'o' → logprob: -8.034592628479004
    8. '):
' → logprob: -8.909592628479004
    9. 'ol' → logprob: -9.159592628479004
    10. ' )' → logprob: -9.409592628479004

Token 42: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0316671133041382
    2. ' ):' → logprob: -1.1566671133041382
    3. ':' → logprob: -2.0316672325134277
    4. ' :' → logprob: -2.4066672325134277
    5. '       ' → logprob: -2.9066672325134277
    6. ')' → logprob: -4.156667232513428
    7. ' )' → logprob: -4.281667232513428
    8. ' ' → logprob: -4.406667232513428
    9. '    ' → logprob: -5.531667232513428
    10. '   ' → logprob: -5.906667232513428

Token 43: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4050544202327728
    2. '       ' → logprob: -1.2800544500350952
    3. ' self' → logprob: -3.4050543308258057
    4. '        ' → logprob: -4.155054569244385
    5. ' ' → logprob: -5.655054569244385
    6. '   ' → logprob: -7.655054569244385
    7. 's' → logprob: -7.655054569244385
    8. ' ' → logprob: -8.030054092407227
    9. '    ' → logprob: -8.155054092407227
    10. 'x' → logprob: -8.905054092407227

Token 44: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004997743526473641
    2. '.x' → logprob: -8.250499725341797
    3. ' .' → logprob: -8.500499725341797
    4. '.)' → logprob: -11.625499725341797
    5. ',' → logprob: -12.000499725341797
    6. ' ' → logprob: -12.375499725341797
    7. ')' → logprob: -12.625499725341797
    8. '=' → logprob: -12.750499725341797
    9. 'x' → logprob: -12.875499725341797
    10. ' =' → logprob: -13.750499725341797

Token 45: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24321810901165009
    2. '=' → logprob: -1.7432180643081665
    3. ' =' → logprob: -3.868218183517456
    4. '<|end|>' → logprob: -4.618217945098877
    5. ' ,' → logprob: -5.493217945098877
    6. ')' → logprob: -5.743217945098877
    7. '.' → logprob: -6.618217945098877
    8. '_' → logprob: -7.618217945098877
    9. ' ' → logprob: -7.993217945098877
    10. '<|end|>' → logprob: -8.243218421936035

Token 46: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38687628507614136
    2. ' x' → logprob: -1.1368763446807861
    3. ' ' → logprob: -12.761876106262207
    4. ' ' → logprob: -13.636876106262207
    5. '	x' → logprob: -14.261876106262207
    6. 'space' → logprob: -15.761876106262207
    7. '<|end|>' → logprob: -15.761876106262207
    8. ')x' → logprob: -16.886877059936523
    9. '<|end|>' → logprob: -17.386877059936523
    10. '_' → logprob: -17.636877059936523

Token 47: '     ' (ID: 530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' coord' (ID: 25819)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868825435638428
    2. ' x' → logprob: -1.1368825435638428
    3. ' ' → logprob: -11.886882781982422
    4. ' ' → logprob: -12.636882781982422
    5. 'int' → logprob: -14.761882781982422
    6. '	x' → logprob: -15.011882781982422
    7. ' float' → logprob: -15.886882781982422
    8. 'space' → logprob: -16.261882781982422
    9. ' int' → logprob: -16.386882781982422
    10. '    ' → logprob: -16.511882781982422

Token 50: 'onnée' (ID: 91161)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' x' (ID: 1215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' centre' (ID: 13268)
  Prédit: ' disque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' disque' → logprob: -0.2345384806394577
    2. '<|end|>' → logprob: -2.4845385551452637
    3. 'x' → logprob: -3.1095385551452637
    4. ' x' → logprob: -4.234538555145264
    5. ' ' → logprob: -4.234538555145264
    6. ' disc' → logprob: -4.359538555145264
    7. 'disc' → logprob: -4.609538555145264
    8. 'dis' → logprob: -4.734538555145264
    9. ' center' → logprob: -4.734538555145264
    10. '_disc' → logprob: -5.359538555145264

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5042063593864441
    2. 'y' → logprob: -1.2542064189910889
    3. ' ' → logprob: -3.004206418991089
    4. '<|end|>' → logprob: -3.629206418991089
    5. ' self' → logprob: -3.879206418991089
    6. ' y' → logprob: -4.75420618057251
    7. ')' → logprob: -6.50420618057251
    8. '        ' → logprob: -6.87920618057251
    9. '<|end|>' → logprob: -7.50420618057251
    10. 'r' → logprob: -7.87920618057251

Token 57: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008553704246878624
    2. '.y' → logprob: -5.258553504943848
    3. ' .' → logprob: -6.383553504943848
    4. ' ' → logprob: -7.383553504943848
    5. '<|end|>' → logprob: -7.383553504943848
    6. 'y' → logprob: -8.383553504943848
    7. '=' → logprob: -10.133553504943848
    8. ' =' → logprob: -10.383553504943848
    9. '<|end|>' → logprob: -11.008553504943848
    10. ' y' → logprob: -11.633553504943848

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0574282743036747
    2. '=' → logprob: -3.8074283599853516
    3. '<|end|>' → logprob: -3.8074283599853516
    4. ' ' → logprob: -4.557428359985352
    5. '<|end|>' → logprob: -7.682428359985352
    6. ')' → logprob: -8.432428359985352
    7. '    ' → logprob: -9.682428359985352
    8. '     ' → logprob: -10.182428359985352
    9. ' )' → logprob: -10.557428359985352
    10. ' ' → logprob: -10.557428359985352

Token 59: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.011102529242634773
    2. 'y' → logprob: -4.511102676391602
    3. '<|end|>' → logprob: -10.136102676391602
    4. ' ' → logprob: -11.386102676391602
    5. ' ' → logprob: -13.761102676391602
    6. '	y' → logprob: -13.886102676391602
    7. '<|end|>' → logprob: -14.511102676391602
    8. '(y' → logprob: -14.761102676391602
    9. ')y' → logprob: -15.636102676391602
    10. ')' → logprob: -16.0111026763916

Token 60: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.04160270467400551
    2. '      ' → logprob: -4.541602611541748
    3. ' =' → logprob: -4.666602611541748
    4. '       ' → logprob: -5.041602611541748
    5. ' ' → logprob: -5.166602611541748
    6. '=' → logprob: -5.916602611541748
    7. '<|end|>' → logprob: -6.041602611541748
    8. '    ' → logprob: -6.416602611541748
    9. '        ' → logprob: -7.541602611541748
    10. '   ' → logprob: -7.916602611541748

Token 61: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6533355116844177
    2. ' =' → logprob: -1.7783355712890625
    3. '     ' → logprob: -2.4033355712890625
    4. ' ' → logprob: -2.7783355712890625
    5. '=' → logprob: -2.9033355712890625
    6. '        ' → logprob: -3.2783355712890625
    7. '      ' → logprob: -4.0283355712890625
    8. '         ' → logprob: -4.2783355712890625
    9. ' #' → logprob: -4.5283355712890625
    10. ')' → logprob: -5.1533355712890625

Token 62: ' coord' (ID: 25819)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2731878459453583
    2. 'y' → logprob: -2.1481878757476807
    3. ' ' → logprob: -2.2731878757476807
    4. ' coord' → logprob: -5.023187637329102
    5. '<|end|>' → logprob: -5.398187637329102
    6. ' espace' → logprob: -6.273187637329102
    7. ' ' → logprob: -6.273187637329102
    8. 'coord' → logprob: -6.898187637329102
    9. ' coordinate' → logprob: -7.023187637329102
    10. '  ' → logprob: -7.773187637329102

Token 63: 'onnée' (ID: 91161)
  Prédit: 'onnée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.0008450066088698804
    2. 'on' → logprob: -7.875844955444336
    3. 'onnées' → logprob: -8.125844955444336
    4. 'ée' → logprob: -9.500844955444336
    5. 'onn' → logprob: -10.125844955444336
    6. 'onné' → logprob: -10.375844955444336
    7. 'é' → logprob: -11.750844955444336
    8. 'onne' → logprob: -12.500844955444336
    9. 'onate' → logprob: -12.625844955444336
    10. 'ón' → logprob: -13.250844955444336

Token 64: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.012971627525985241
    2. ' ' → logprob: -4.8879714012146
    3. 'y' → logprob: -5.6379714012146
    4. '<|end|>' → logprob: -6.3879714012146
    5. ' x' → logprob: -10.387971878051758
    6. '  ' → logprob: -10.512971878051758
    7. ' ' → logprob: -11.137971878051758
    8. 'space' → logprob: -12.012971878051758
    9. 's' → logprob: -12.137971878051758
    10. 'x' → logprob: -12.262971878051758

Token 65: ' du' (ID: 1462)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.6719331741333008
    2. ' ' → logprob: -1.4219331741333008
    3. '<|end|>' → logprob: -2.296933174133301
    4. '       ' → logprob: -2.671933174133301
    5. '      ' → logprob: -3.046933174133301
    6. '  ' → logprob: -4.296933174133301
    7. ' =' → logprob: -5.796933174133301
    8. '    ' → logprob: -5.921933174133301
    9. '<|end|>' → logprob: -6.046933174133301
    10. '   ' → logprob: -6.046933174133301

Token 66: ' centre' (ID: 13268)
  Prédit: ' center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' center' → logprob: -0.7245407104492188
    2. 'center' → logprob: -1.5995407104492188
    3. 'cent' → logprob: -2.0995407104492188
    4. 'centre' → logprob: -2.4745407104492188
    5. ' centre' → logprob: -3.3495407104492188
    6. 'cente' → logprob: -4.224540710449219
    7. ' ' → logprob: -4.224540710449219
    8. '<|end|>' → logprob: -4.474540710449219
    9. 'c' → logprob: -4.849540710449219
    10. '_center' → logprob: -5.849540710449219

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004588195588439703
    2. 'r' → logprob: -6.0045881271362305
    3. '        ' → logprob: -7.3795881271362305
    4. ' ' → logprob: -7.8795881271362305
    5. '<|end|>' → logprob: -8.00458812713623
    6. ',' → logprob: -8.25458812713623
    7. '        
' → logprob: -9.75458812713623
    8. '     ' → logprob: -9.75458812713623
    9. '   ' → logprob: -9.87958812713623
    10. '```' → logprob: -9.87958812713623

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0792626366019249
    2. '        ' → logprob: -3.4542627334594727
    3. 'r' → logprob: -3.7042627334594727
    4. ' ' → logprob: -4.329262733459473
    5. '     ' → logprob: -6.704262733459473
    6. ',' → logprob: -6.954262733459473
    7. '<|end|>' → logprob: -7.079262733459473
    8. '```' → logprob: -7.204262733459473
    9. '      ' → logprob: -7.579262733459473
    10. ' r' → logprob: -7.954262733459473

Token 69: ' self' (ID: 1051)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06871139258146286
    2. 'self' (adapté à ' self') → logprob: -3.193711280822754
    3. ' r' → logprob: -4.068711280822754
    4. ' self' → logprob: -4.818711280822754
    5. '       ' → logprob: -8.568711280822754
    6. '        ' → logprob: -11.818711280822754
    7. ' ' → logprob: -12.193711280822754
    8. 's' → logprob: -13.568711280822754
    9. '         ' → logprob: -14.193711280822754
    10. ' ' → logprob: -14.193711280822754

Token 70: '.r' (ID: 2951)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12856097519397736
    2. '.r' → logprob: -2.128561019897461
    3. 'r' → logprob: -6.753561019897461
    4. '.radius' → logprob: -8.378561019897461
    5. ' .' → logprob: -8.753561019897461
    6. ' ' → logprob: -10.753561019897461
    7. ' r' → logprob: -11.128561019897461
    8. '.c' → logprob: -12.253561019897461
    9. '.s' → logprob: -12.503561019897461
    10. '=' → logprob: -12.503561019897461

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018343083560466766
    2. '=' → logprob: -4.143342971801758
    3. ' ' → logprob: -6.393342971801758
    4. '<|end|>' → logprob: -7.393342971801758
    5. ')' → logprob: -12.143342971801758
    6. ' ' → logprob: -12.893342971801758
    7. ' =
' → logprob: -13.268342971801758
    8. ' )' → logprob: -13.518342971801758
    9. '<|end|>' → logprob: -13.518342971801758
    10. '  ' → logprob: -13.768342971801758

Token 72: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.003189478302374482
    2. 'r' → logprob: -5.753189563751221
    3. ' ' → logprob: -11.378189086914062
    4. ' ' → logprob: -14.878189086914062
    5. '	r' → logprob: -17.503189086914062
    6. '<|end|>' → logprob: -17.878189086914062
    7. '_r' → logprob: -18.253189086914062
    8. ' ‌' → logprob: -19.503189086914062
    9. ' р' → logprob: -19.628189086914062
    10. ' ​' → logprob: -20.190689086914062

Token 73: '     ' (ID: 530)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.853905200958252
    2. ' ' → logprob: -1.103905200958252
    3. '<|end|>' → logprob: -1.728905200958252
    4. '        ' → logprob: -3.353905200958252
    5. '<|end|>' → logprob: -4.603905200958252
    6. '     ' → logprob: -4.728905200958252
    7. '      ' → logprob: -5.853905200958252
    8. '    ' → logprob: -5.978905200958252
    9. '  ' → logprob: -5.978905200958252
    10. '   ' → logprob: -6.978905200958252

Token 74: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9103450179100037
    2. '     ' → logprob: -1.0353450775146484
    3. '<|end|>' → logprob: -2.0353450775146484
    4. '    ' → logprob: -3.4103450775146484
    5. '       ' → logprob: -3.5353450775146484
    6. '      ' → logprob: -4.035345077514648
    7. '  ' → logprob: -4.285345077514648
    8. ' #' → logprob: -4.785345077514648
    9. '   ' → logprob: -5.410345077514648
    10. '<|end|>' → logprob: -5.785345077514648

Token 75: ' rayon' (ID: 80967)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01755531132221222
    2. 'r' → logprob: -4.642555236816406
    3. ' r' → logprob: -5.392555236816406
    4. ' radius' → logprob: -6.767555236816406
    5. ' rayon' → logprob: -7.142555236816406
    6. ' ray' → logprob: -8.017555236816406
    7. '  ' → logprob: -8.517555236816406
    8. 'radius' → logprob: -8.892555236816406
    9. 'ray' → logprob: -9.392555236816406
    10. ' espace' → logprob: -9.642555236816406

Token 76: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03639400377869606
    2. '<|end|>' → logprob: -3.9113941192626953
    3. ' ' → logprob: -4.411394119262695
    4. '<|end|>' → logprob: -7.036394119262695
    5. '     ' → logprob: -7.411394119262695
    6. '        ' → logprob: -7.661394119262695
    7. ',' → logprob: -8.286394119262695
    8. '      ' → logprob: -8.411394119262695
    9. '   ' → logprob: -8.536394119262695
    10. '  ' → logprob: -8.661394119262695

Token 77: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5506342649459839
    2. '<|end|>' → logprob: -1.5506342649459839
    3. '       ' → logprob: -1.6756342649459839
    4. '        ' → logprob: -4.800634384155273
    5. '  ' → logprob: -5.550634384155273
    6. '<|end|>' → logprob: -6.175634384155273
    7. '     ' → logprob: -6.300634384155273
    8. ',' → logprob: -6.425634384155273
    9. '    ' → logprob: -7.175634384155273
    10. '   ' → logprob: -7.175634384155273

Token 78: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.41008979082107544
    2. ' self' → logprob: -1.1600897312164307
    3. '       ' → logprob: -3.7850897312164307
    4. ' ' → logprob: -8.910089492797852
    5. '	self' → logprob: -10.285089492797852
    6. ' ' → logprob: -10.660089492797852
    7. '        ' → logprob: -11.035089492797852
    8. '   ' → logprob: -11.535089492797852
    9. '      ' → logprob: -12.035089492797852
    10. '     ' → logprob: -12.535089492797852

Token 79: '.c' (ID: 1081)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04969301447272301
    2. '=' → logprob: -3.5496931076049805
    3. '.c' → logprob: -4.5496931076049805
    4. ' =' → logprob: -4.7996931076049805
    5. ' ' → logprob: -8.29969310760498
    6. 'c' → logprob: -8.54969310760498
    7. '.=' → logprob: -8.79969310760498
    8. ' .' → logprob: -9.17469310760498
    9. '.r' → logprob: -9.92469310760498
    10. 'r' → logprob: -9.92469310760498

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34895896911621094
    2. '=' → logprob: -1.223958969116211
    3. ' ' → logprob: -7.598958969116211
    4. 'olor' → logprob: -12.348958969116211
    5. '   ' → logprob: -12.848958969116211
    6. '  ' → logprob: -13.223958969116211
    7. '    ' → logprob: -13.848958969116211
    8. ')' → logprob: -14.223958969116211
    9. '     ' → logprob: -14.848958969116211
    10. '=color' → logprob: -14.973958969116211

Token 81: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2526566684246063
    2. ' c' → logprob: -1.5026566982269287
    3. ' ' → logprob: -7.25265645980835
    4. '	c' → logprob: -11.252656936645508
    5. ')c' → logprob: -13.502656936645508
    6. ' ' → logprob: -14.002656936645508
    7. '  ' → logprob: -14.127656936645508
    8. '    ' → logprob: -14.877656936645508
    9. '_c' → logprob: -15.002656936645508
    10. '   ' → logprob: -15.190156936645508

Token 82: '     ' (ID: 530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8648681640625
    2. ' #' → logprob: -1.6148681640625
    3. '       ' → logprob: -1.9898681640625
    4. ' ' → logprob: -2.2398681640625
    5. '  ' → logprob: -2.9898681640625
    6. '      ' → logprob: -3.2398681640625
    7. '   ' → logprob: -4.2398681640625
    8. '     ' → logprob: -4.4898681640625
    9. '=' → logprob: -5.1148681640625
    10. '        ' → logprob: -5.2398681640625

Token 84: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.6404324173927307
    2. 'c' → logprob: -0.8904324173927307
    3. ' c' → logprob: -3.640432357788086
    4. ' color' → logprob: -3.890432357788086
    5. 'cou' → logprob: -5.515432357788086
    6. ' ' → logprob: -5.765432357788086
    7. ' code' → logprob: -6.515432357788086
    8. 'color' → logprob: -6.577932357788086
    9. ''' → logprob: -7.265432357788086
    10. 'e' → logprob: -7.327932357788086

Token 85: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40644678473472595
    2. '
' → logprob: -1.9064468145370483
    3. ':' → logprob: -2.531446695327759
    4. 'def' → logprob: -3.281446695327759
    5. '    
' → logprob: -4.406446933746338
    6. ' 
' → logprob: -4.781446933746338
    7. ' ' → logprob: -4.906446933746338
    8. ')' → logprob: -4.906446933746338
    9. ' def' → logprob: -4.906446933746338
    10. '\' → logprob: -5.531446933746338

Token 86: 'indice' (ID: 176697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13198193907737732
    2. ' )' → logprob: -2.38198184967041
    3. ' ' → logprob: -3.75698184967041
    4. 'e' → logprob: -6.50698184967041
    5. '')' → logprob: -7.13198184967041
    6. ''' → logprob: -7.25698184967041
    7. ',' → logprob: -7.63198184967041
    8. 'r' → logprob: -7.88198184967041
    9. '#' → logprob: -8.00698184967041
    10. 'c' → logprob: -8.00698184967041

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005146469455212355
    2. ' de' → logprob: -6.005146503448486
    3. ' )' → logprob: -6.505146503448486
    4. ' couleur' → logprob: -7.380146503448486
    5. 'de' → logprob: -8.505146026611328
    6. ' ' → logprob: -9.630146026611328
    7. '   ' → logprob: -10.130146026611328
    8. ',' → logprob: -10.505146026611328
    9. 'cou' → logprob: -10.505146026611328
    10. ' ' → logprob: -10.755146026611328

Token 88: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45882731676101685
    2. '
' → logprob: -1.583827257156372
    3. '<|end|>' → logprob: -2.708827257156372
    4. 'def' → logprob: -3.208827257156372
    5. '    
' → logprob: -4.083827495574951
    6. '  
' → logprob: -4.708827495574951
    7. ' 
' → logprob: -4.833827495574951
    8. ' def' → logprob: -4.958827495574951
    9. ')' → logprob: -5.458827495574951
    10. '<|end|>' → logprob: -5.708827495574951

Token 89: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29534396529197693
    2. 'def' → logprob: -1.9203439950942993
    3. '
' → logprob: -3.2953438758850098
    4. '<|end|>' → logprob: -3.5453438758850098
    5. '    
' → logprob: -3.6703438758850098
    6. ' def' → logprob: -4.92034387588501
    7. ')' → logprob: -6.04534387588501
    8. '<|end|>' → logprob: -6.29534387588501
    9. '  
' → logprob: -6.42034387588501
    10. ' 
' → logprob: -6.67034387588501

Token 90: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9132688641548157
    2. 'def' → logprob: -1.163268804550171
    3. ' 
' → logprob: -2.413268804550171
    4. ' ' → logprob: -2.788268804550171
    5. ' def' → logprob: -3.288268804550171
    6. '    ' → logprob: -3.788268804550171
    7. 'd' → logprob: -3.788268804550171
    8. '    
' → logprob: -4.16326904296875
    9. '     
' → logprob: -4.91326904296875
    10. ')' → logprob: -5.03826904296875

Token 91: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23750489950180054
    2. ' def' → logprob: -1.7375049591064453
    3. ' ' → logprob: -4.112504959106445
    4. 's' → logprob: -4.862504959106445
    5. 'd' → logprob: -5.487504959106445
    6. '   ' → logprob: -6.112504959106445
    7. 'de' → logprob: -6.862504959106445
    8. ' d' → logprob: -7.487504959106445
    9. ' de' → logprob: -7.612504959106445
    10. '#' → logprob: -7.862504959106445

Token 92: ' déterminer' (ID: 122024)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.3279733657836914
    2. ' vérifier' → logprob: -1.9529733657836914
    3. 'calcul' → logprob: -2.3279733657836914
    4. 'v' → logprob: -4.077973365783691
    5. ' déterminer' → logprob: -4.452973365783691
    6. ' détect' → logprob: -5.327973365783691
    7. 'aj' → logprob: -6.827973365783691
    8. 'cal' → logprob: -6.952973365783691
    9. 'dé' → logprob: -7.077973365783691
    10. ' tester' → logprob: -7.327973365783691

Token 93: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.35510802268981934
    2. ' si' → logprob: -1.2301080226898193
    3. ' if' → logprob: -5.855108261108398
    4. 'if' → logprob: -6.980108261108398
    5. 'la' → logprob: -7.105108261108398
    6. 's' → logprob: -7.480108261108398
    7. ' la' → logprob: -7.730108261108398
    8. 'l' → logprob: -7.980108261108398
    9. 'def' → logprob: -8.355108261108398
    10. 'le' → logprob: -8.730108261108398

Token 94: ' un' (ID: 537)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.4401102662086487
    2. 'de' → logprob: -1.065110206604004
    3. ' two' → logprob: -4.815110206604004
    4. '2' → logprob: -6.815110206604004
    5. ' ' → logprob: -6.940110206604004
    6. ' les' → logprob: -8.440110206604004
    7. 't' → logprob: -8.565110206604004
    8. ' une' → logprob: -9.065110206604004
    9. ' un' → logprob: -9.440110206604004
    10. 's' → logprob: -10.065110206604004

Token 95: ' disque' (ID: 114222)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.8006814122200012
    2. ' disque' → logprob: -0.9256814122200012
    3. 'e' → logprob: -2.9256813526153564
    4. ' cercle' → logprob: -3.3006813526153564
    5. ' deux' → logprob: -3.8006813526153564
    6. 'dis' → logprob: -4.6756815910339355
    7. 'point' → logprob: -5.1756815910339355
    8. ' dis' → logprob: -5.4256815910339355
    9. ' two' → logprob: -5.8006815910339355
    10. ' disc' → logprob: -5.8006815910339355

Token 96: ' i' (ID: 575)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5124385356903076
    2. ' est' → logprob: -2.1374385356903076
    3. 's' → logprob: -2.2624385356903076
    4. ' touche' → logprob: -3.0124385356903076
    5. 'inter' → logprob: -3.1374385356903076
    6. 'over' → logprob: -4.137438774108887
    7. ' se' → logprob: -4.762438774108887
    8. '   ' → logprob: -4.762438774108887
    9. ' overlap' → logprob: -4.887438774108887
    10. ' intersect' → logprob: -5.262438774108887

Token 97: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.11973842233419418
    2. 'est' → logprob: -2.8697383403778076
    3. 's' → logprob: -3.6197383403778076
    4. ' touche' → logprob: -5.244738578796387
    5. ' intersect' → logprob: -5.494738578796387
    6. 'n' → logprob: -5.744738578796387
    7. ' et' → logprob: -5.744738578796387
    8. 't' → logprob: -5.869738578796387
    9. ' rec' → logprob: -6.119738578796387
    10. ' ' → logprob: -6.869738578796387

Token 98: ' sur' (ID: 1512)
  Prédit: 'conten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conten' → logprob: -1.285366177558899
    2. ' contenu' → logprob: -1.535366177558899
    3. 'dans' → logprob: -1.660366177558899
    4. ' à' → logprob: -2.5353660583496094
    5. 'à' → logprob: -2.9103660583496094
    6. 'com' → logprob: -3.2853660583496094
    7. ' dans' → logprob: -4.035366058349609
    8. '_' → logprob: -4.410366058349609
    9. 'c' → logprob: -4.410366058349609
    10. ' entièrement' → logprob: -4.535366058349609

Token 99: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.19353504478931427
    2. ' le' → logprob: -1.8185350894927979
    3. 'un' → logprob: -5.443534851074219
    4. 'le' → logprob: -5.818534851074219
    5. ' une' → logprob: -6.068534851074219
    6. 'e' → logprob: -6.943534851074219
    7. ' ' → logprob: -7.818534851074219
    8. ' la' → logprob: -8.068534851074219
    9. '_' → logprob: -8.193534851074219
    10. '#' → logprob: -8.318534851074219

Token 100: ' disque' (ID: 114222)
  Prédit: ' disque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' disque' → logprob: -0.7194600701332092
    2. ' autre' → logprob: -0.8444600701332092
    3. 'aut' → logprob: -2.9694600105285645
    4. ' ' → logprob: -5.2194600105285645
    5. 'dis' → logprob: -5.2194600105285645
    6. ''autre' → logprob: -6.0319600105285645
    7. '   ' → logprob: -6.2819600105285645
    8. '```' → logprob: -6.4069600105285645
    9. 'e' → logprob: -6.5944600105285645
    10. ' aut' → logprob: -6.9694600105285645

Token 101: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07175252586603165
    2. 'j' → logprob: -2.6967525482177734
    3. ' ' → logprob: -7.196752548217773
    4. '_j' → logprob: -7.696752548217773
    5. 's' → logprob: -8.696752548217773
    6. '  ' → logprob: -8.821752548217773
    7. '#' → logprob: -9.196752548217773
    8. 'def' → logprob: -10.571752548217773
    9. '<|end|>' → logprob: -10.696752548217773
    10. '```' → logprob: -10.821752548217773

Token 102: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5498404502868652
    2. ':' → logprob: -1.7998404502868652
    3. ' def' → logprob: -2.0498404502868652
    4. '   ' → logprob: -2.2998404502868652
    5. '
' → logprob: -4.924840450286865
    6. ' :' → logprob: -5.174840450286865
    7. ',' → logprob: -5.424840450286865
    8. '(' → logprob: -6.049840450286865
    9. ':
' → logprob: -6.174840450286865
    10. ' :
' → logprob: -6.549840450286865

Token 103: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43005889654159546
    2. 'def' → logprob: -1.4300589561462402
    3. '
' → logprob: -2.6800589561462402
    4. ' def' → logprob: -3.6800589561462402
    5. ':' → logprob: -5.18005895614624
    6. '    
' → logprob: -5.55505895614624
    7. ' 
' → logprob: -5.93005895614624
    8. ' :' → logprob: -6.80505895614624
    9. ':def' → logprob: -7.93005895614624
    10. '  
' → logprob: -8.055058479309082

Token 104: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.721851646900177
    2. 'def' → logprob: -0.846851646900177
    3. ' def' → logprob: -2.4718515872955322
    4. '    ' → logprob: -8.096851348876953
    5. ' ' → logprob: -8.221851348876953
    6. '	def' → logprob: -9.096851348876953
    7. '    
' → logprob: -9.596851348876953
    8. '  ' → logprob: -9.971851348876953
    9. '
' → logprob: -10.096851348876953
    10. '       ' → logprob: -10.346851348876953

Token 105: '’est' (ID: 6838)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2969396114349365
    2. 'e' → logprob: -1.5469396114349365
    3. 'est' → logprob: -1.9219396114349365
    4. 'on' → logprob: -2.1719396114349365
    5. 'omme' → logprob: -2.4219396114349365
    6. 'om' → logprob: -3.0469396114349365
    7. 'ette' → logprob: -3.5469396114349365
    8. 'lass' → logprob: -4.796939849853516
    9. 'ont' → logprob: -4.796939849853516
    10. '#' → logprob: -4.921939849853516

Token 106: '-à' (ID: 56297)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.807539463043213
    2. '-à' → logprob: -1.807539463043213
    3. ' a' → logprob: -2.432539463043213
    4. 'a' → logprob: -2.432539463043213
    5. 'def' → logprob: -2.682539463043213
    6. ' ' → logprob: -2.932539463043213
    7. ' def' → logprob: -3.057539463043213
    8. '-' → logprob: -3.182539463043213
    9. ' une' → logprob: -3.557539463043213
    10. 'à' → logprob: -3.932539463043213

Token 107: '-dire' (ID: 76064)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8678960204124451
    2. 'i' → logprob: -1.8678960800170898
    3. '   ' → logprob: -1.9928960800170898
    4. 'une' → logprob: -3.36789608001709
    5. ' def' → logprob: -3.61789608001709
    6. 't' → logprob: -3.61789608001709
    7. 'la' → logprob: -3.86789608001709
    8. '       ' → logprob: -3.99289608001709
    9. 'r' → logprob: -3.99289608001709
    10. '```' → logprob: -4.11789608001709

Token 108: ' s' (ID: 265)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.9294087290763855
    2. 'def' → logprob: -1.9294087886810303
    3. ' si' → logprob: -2.1794087886810303
    4. ' def' → logprob: -2.3044087886810303
    5. ' la' → logprob: -2.8044087886810303
    6. '   ' → logprob: -2.9294087886810303
    7. ' if' → logprob: -3.1794087886810303
    8. 'abs' → logprob: -3.6794087886810303
    9. 'lambda' → logprob: -4.554408550262451
    10. ' lambda' → logprob: -5.179408550262451

Token 109: '’il' (ID: 14828)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.40438708662986755
    2. 'qrt' → logprob: -1.52938711643219
    3. '   ' → logprob: -3.1543869972229004
    4. 'ur' → logprob: -4.1543869972229
    5. 'ont' → logprob: -4.7793869972229
    6. 'i' → logprob: -5.0293869972229
    7. 'ans' → logprob: -5.0293869972229
    8. 'abs' → logprob: -5.1543869972229
    9. 'e' → logprob: -5.5293869972229
    10. ' abs' → logprob: -5.9043869972229

Token 110: ' rec' (ID: 1369)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.9018974304199219
    2. 'import' → logprob: -2.526897430419922
    3. 'y' → logprob: -2.651897430419922
    4. 'r' → logprob: -2.901897430419922
    5. '   ' → logprob: -3.151897430419922
    6. 'n' → logprob: -3.526897430419922
    7. 'e' → logprob: -3.776897430419922
    8. ' (' → logprob: -4.026897430419922
    9. '(' → logprob: -4.151897430419922
    10. 'istance' → logprob: -4.151897430419922

Token 111: 'ouvre' (ID: 81331)
  Prédit: 'ouvre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouvre' → logprob: -0.03240146487951279
    2. 'oupe' → logprob: -3.5324015617370605
    3. 'o' → logprob: -7.0324015617370605
    4. 'ouvr' → logprob: -7.6574015617370605
    5. 'ouv' → logprob: -8.032401084899902
    6. 'op' → logprob: -8.532401084899902
    7. 'over' → logprob: -9.157401084899902
    8. 'oup' → logprob: -9.407401084899902
    9. '```' → logprob: -9.407401084899902
    10. 'ou' → logprob: -9.407401084899902

Token 112: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.5198091864585876
    2. ' au' → logprob: -2.0198092460632324
    3. 'part' → logprob: -2.7698092460632324
    4. '<|end|>' → logprob: -2.7698092460632324
    5. ' le' → logprob: -3.3948092460632324
    6. ' un' → logprob: -3.6448092460632324
    7. ' (' → logprob: -4.019809246063232
    8. ' ' → logprob: -4.644809246063232
    9. ' totalement' → logprob: -5.144809246063232
    10. ' a' → logprob: -5.394809246063232

Token 113: 'iellement' (ID: 70958)
  Prédit: 'iellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iellement' → logprob: -0.013767936266958714
    2. 'ielle' → logprob: -4.388767719268799
    3. 'ie' → logprob: -7.013767719268799
    4. 'iel' → logprob: -8.138768196105957
    5. '```' → logprob: -10.388768196105957
    6. 'out' → logprob: -11.138768196105957
    7. 'ial' → logprob: -12.263768196105957
    8. 'def' → logprob: -12.763768196105957
    9. '#' → logprob: -12.763768196105957
    10. 'i' → logprob: -12.763768196105957

Token 114: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7155565619468689
    2. '   ' → logprob: -1.3405566215515137
    3. ':' → logprob: -1.7155566215515137
    4. ',' → logprob: -3.3405566215515137
    5. ' def' → logprob: -3.9655566215515137
    6. ' :' → logprob: -5.590556621551514
    7. ')' → logprob: -5.715556621551514
    8. ':
' → logprob: -6.590556621551514
    9. '):' → logprob: -6.965556621551514
    10. '
' → logprob: -7.090556621551514

Token 116: ' que' (ID: 661)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.3300983905792236
    2. ' que' → logprob: -1.7050983905792236
    3. ' s' → logprob: -2.2050983905792236
    4. ' if' → logprob: -2.3300983905792236
    5. ' qu' → logprob: -3.3300983905792236
    6. '   ' → logprob: -3.4550983905792236
    7. ' not' → logprob: -3.5800983905792236
    8. ' j' → logprob: -3.7050983905792236
    9. ' le' → logprob: -4.2050981521606445
    10. ' ' → logprob: -4.2050981521606445

Token 117: ' i' (ID: 575)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5412953495979309
    2. ' i' → logprob: -1.5412952899932861
    3. ' (' → logprob: -2.291295289993286
    4. 'self' → logprob: -2.541295289993286
    5. 'i' → logprob: -5.416295528411865
    6. '   ' → logprob: -5.541295528411865
    7. ' abs' → logprob: -5.666295528411865
    8. ' j' → logprob: -5.916295528411865
    9. 'abs' → logprob: -6.166295528411865
    10. '(self' → logprob: -6.666295528411865

Token 118: '<' (ID: 27)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9754101634025574
    2. '.r' → logprob: -1.1004102230072021
    3. '.y' → logprob: -1.9754102230072021
    4. ' .' → logprob: -2.850410223007202
    5. '.n' → logprob: -3.350410223007202
    6. '.c' → logprob: -3.600410223007202
    7. '.x' → logprob: -4.600409984588623
    8. 'r' → logprob: -4.975409984588623
    9. ' is' → logprob: -5.975409984588623
    10. ' ' → logprob: -6.975409984588623

Token 119: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6334244012832642
    2. ' j' → logprob: -0.7584244012832642
    3. ' ' → logprob: -7.633424282073975
    4. '   ' → logprob: -9.258424758911133
    5. '<|end|>' → logprob: -9.883424758911133
    6. '=j' → logprob: -10.383424758911133
    7. '>' → logprob: -10.508424758911133
    8. '  ' → logprob: -11.008424758911133
    9. ',j' → logprob: -11.258424758911133
    10. ' =' → logprob: -11.383424758911133

Token 120: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.534881055355072
    2. ' def' → logprob: -2.034881114959717
    3. '
' → logprob: -2.159881114959717
    4. ' 
' → logprob: -2.159881114959717
    5. '   ' → logprob: -3.159881114959717
    6. '    
' → logprob: -5.909881114959717
    7. ' :
' → logprob: -6.159881114959717
    8. '  
' → logprob: -6.784881114959717
    9. ':' → logprob: -7.284881114959717
    10. ' :' → logprob: -7.409881114959717

Token 121: 'i' (ID: 72)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.4003903269767761
    2. ')' → logprob: -1.275390386581421
    3. '   ' → logprob: -4.400390148162842
    4. ' ' → logprob: -4.650390148162842
    5. ' )
' → logprob: -4.775390148162842
    6. '
' → logprob: -5.900390148162842
    7. 'def' → logprob: -6.150390148162842
    8. ' i' → logprob: -6.150390148162842
    9. 'i' → logprob: -6.400390148162842
    10. 'n' → logprob: -6.400390148162842

Token 122: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11803951859474182
    2. ')' → logprob: -2.993039608001709
    3. '<' → logprob: -3.743039608001709
    4. ' )' → logprob: -4.243039608001709
    5. ' >' → logprob: -4.743039608001709
    6. ' ' → logprob: -4.868039608001709
    7. ' ==' → logprob: -6.743039608001709
    8. ' <=' → logprob: -7.243039608001709
    9. '>' → logprob: -7.368039608001709
    10. ' and' → logprob: -7.743039608001709

Token 123: ' appar' (ID: 13643)
  Prédit: ' rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rec' → logprob: -2.322380542755127
    2. ' dessous' → logprob: -2.322380542755127
    3. ' au' → logprob: -2.447380542755127
    4. ' placé' → logprob: -2.697380542755127
    5. ' contenu' → logprob: -3.072380542755127
    6. 'dans' → logprob: -3.072380542755127
    7. 'conten' → logprob: -3.322380542755127
    8. '   ' → logprob: -3.447380542755127
    9. 'strict' → logprob: -3.447380542755127
    10. 'dess' → logprob: -3.572380542755127

Token 124: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.001675779465585947
    2. 'ue' → logprob: -7.376675605773926
    3. '
' → logprob: -9.001675605773926
    4. '```' → logprob: -9.001675605773926
    5. 'aru' → logprob: -9.251675605773926
    6. '<u' → logprob: -9.376675605773926
    7. 'çu' → logprob: -9.876675605773926
    8. 'us' → logprob: -10.126675605773926
    9. '   ' → logprob: -10.126675605773926
    10. 'eu' → logprob: -10.126675605773926

Token 125: ' avant' (ID: 13339)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2768329083919525
    2. ' )' → logprob: -2.1518328189849854
    3. ' dans' → logprob: -3.6518328189849854
    4. ' ' → logprob: -3.6518328189849854
    5. 'dans' → logprob: -4.0268330574035645
    6. ' avant' → logprob: -4.1518330574035645
    7. '<|end|>' → logprob: -5.0268330574035645
    8. '    ' → logprob: -5.1518330574035645
    9. 's' → logprob: -5.7768330574035645
    10. 'avant' → logprob: -5.7768330574035645

Token 126: ' j' (ID: 441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13003060221672058
    2. ' )' → logprob: -2.630030632019043
    3. 'j' → logprob: -3.505030632019043
    4. ' j' → logprob: -4.005030632019043
    5. ' dans' → logprob: -8.005030632019043
    6. ' ' → logprob: -8.755030632019043
    7. ' la' → logprob: -9.005030632019043
    8. ' ' → logprob: -9.005030632019043
    9. 'dans' → logprob: -9.255030632019043
    10. 'i' → logprob: -9.255030632019043

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008804833516478539
    2. ' )' → logprob: -5.008804798126221
    3. '   ' → logprob: -7.133804798126221
    4. ',' → logprob: -7.508804798126221
    5. '):' → logprob: -7.883804798126221
    6. ')
' → logprob: -8.258805274963379
    7. ' ' → logprob: -11.008805274963379
    8. 'def' → logprob: -11.008805274963379
    9. ' )
' → logprob: -11.508805274963379
    10. ' ):' → logprob: -11.508805274963379

Token 128: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6441251039505005
    2. 'def' → logprob: -0.7691251039505005
    3. '   ' → logprob: -5.519124984741211
    4. ' 
' → logprob: -5.644124984741211
    5. ' def' → logprob: -5.894124984741211
    6. '    
' → logprob: -7.394124984741211
    7. ')
' → logprob: -8.519124984741211
    8. '  
' → logprob: -9.519124984741211
    9. ')' → logprob: -9.894124984741211
    10. '

' → logprob: -10.269124984741211

Token 129: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.13479755818843842
    2. ' disc' → logprob: -2.8847975730895996
    3. ' overlaps' → logprob: -4.1347975730896
    4. ' def' → logprob: -4.5097975730896
    5. 'is' → logprob: -4.6347975730896
    6. ' est' → logprob: -4.8847975730896
    7. ' overlap' → logprob: -5.0097975730896
    8. 'over' → logprob: -5.5097975730896
    9. 'disc' → logprob: -5.7597975730896
    10. 'def' → logprob: -5.8847975730896

Token 130: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.24621696770191193
    2. '_over' → logprob: -2.1212170124053955
    3. '_' → logprob: -2.9962170124053955
    4. '_sur' → logprob: -3.7462170124053955
    5. '_overlap' → logprob: -4.121216773986816
    6. '_cover' → logprob: -5.371216773986816
    7. '_super' → logprob: -6.746216773986816
    8. '_ab' → logprob: -6.996216773986816
    9. '_s' → logprob: -8.121216773986816
    10. '_visible' → logprob: -8.246216773986816

Token 131: '_top' (ID: 23394)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045029912143945694
    2. '_disc' → logprob: -3.670029878616333
    3. '_' → logprob: -4.170030117034912
    4. '_overlap' → logprob: -6.795030117034912
    5. '(i' → logprob: -8.045029640197754
    6. '_on' → logprob: -8.045029640197754
    7. '_(' → logprob: -8.420029640197754
    8. ' (' → logprob: -8.545029640197754
    9. '(d' → logprob: -8.545029640197754
    10. '(self' → logprob: -8.920029640197754

Token 132: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22641955316066742
    2. '(self' → logprob: -1.6014195680618286
    3. '(i' → logprob: -8.226419448852539
    4. ' (' → logprob: -8.476419448852539
    5. 'self' → logprob: -8.726419448852539
    6. '_' → logprob: -8.726419448852539
    7. '(s' → logprob: -9.851419448852539
    8. '(
' → logprob: -10.101419448852539
    9. '_(' → logprob: -10.726419448852539
    10. 's' → logprob: -11.226419448852539

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019376569252926856
    2. ' ,' → logprob: -8.62519359588623
    3. ',d' → logprob: -12.12519359588623
    4. ':' → logprob: -12.87519359588623
    5. ',
' → logprob: -13.62519359588623
    6. '):' → logprob: -14.00019359588623
    7. ',j' → logprob: -14.12519359588623
    8. '_disc' → logprob: -14.25019359588623
    9. '_,' → logprob: -14.50019359588623
    10. ',i' → logprob: -14.87519359588623

Token 134: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2521282732486725
    2. ' j' → logprob: -1.50212824344635
    3. ')' → logprob: -9.752128601074219
    4. '   ' → logprob: -10.002128601074219
    5. ',' → logprob: -10.877128601074219
    6. ' ' → logprob: -11.252128601074219
    7. '    ' → logprob: -11.377128601074219
    8. '_j' → logprob: -11.502128601074219
    9. '  ' → logprob: -11.877128601074219
    10. '	j' → logprob: -12.002128601074219

Token 135: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004096685443073511
    2. '):
' → logprob: -5.879096508026123
    3. ' ):' → logprob: -7.129096508026123
    4. ')' → logprob: -7.879096508026123
    5. '   ' → logprob: -10.004096984863281
    6. ',' → logprob: -10.504096984863281
    7. '):
' → logprob: -11.254096984863281
    8. ':' → logprob: -11.254096984863281
    9. '    ' → logprob: -13.129096984863281
    10. ' )' → logprob: -13.379096984863281

Token 136: ' discs' (ID: 89635)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.3999484181404114
    2. ' discs' → logprob: -1.1499483585357666
    3. '):' → logprob: -5.524948596954346
    4. '):
' → logprob: -5.774948596954346
    5. '   ' → logprob: -6.024948596954346
    6. ')' → logprob: -6.899948596954346
    7. 'disc' → logprob: -7.649948596954346
    8. '    ' → logprob: -8.024948120117188
    9. ' disc' → logprob: -8.649948120117188
    10. '):

' → logprob: -8.649948120117188

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004429762717336416
    2. '):
' → logprob: -5.504429817199707
    3. ' ):' → logprob: -8.629429817199707
    4. ')' → logprob: -8.754429817199707
    5. '):
' → logprob: -11.754429817199707
    6. ':' → logprob: -12.879429817199707
    7. '   ' → logprob: -13.379429817199707
    8. '):

' → logprob: -13.879429817199707
    9. ' ):
' → logprob: -15.254429817199707
    10. ']:' → logprob: -15.379429817199707

Token 138: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2212010622024536
    2. '):' → logprob: -1.7212010622024536
    3. '(' → logprob: -4.596200942993164
    4. '   ' → logprob: -5.346200942993164
    5. '():' → logprob: -5.846200942993164
    6. ' :' → logprob: -7.471200942993164
    7. ')' → logprob: -8.096200942993164
    8. '):
' → logprob: -8.221200942993164
    9. ',' → logprob: -9.346200942993164
    10. ' ):' → logprob: -9.596200942993164

Token 139: ' di' (ID: 1320)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11786238104104996
    2. '       ' → logprob: -3.1178624629974365
    3. ':' → logprob: -3.7428624629974365
    4. '    ' → logprob: -3.8678624629974365
    5. '    
' → logprob: -5.367862224578857
    6. '
' → logprob: -5.742862224578857
    7. ' 
' → logprob: -6.242862224578857
    8. ' (' → logprob: -6.367862224578857
    9. 'dx' → logprob: -6.492862224578857
    10. ' dx' → logprob: -6.617862224578857

Token 140: ' =' (ID: 314)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -1.059461236000061
    2. 's' → logprob: -1.309461236000061
    3. ' =' → logprob: -1.809461236000061
    4. '=' → logprob: -2.3094611167907715
    5. 'st' → logprob: -2.6844611167907715
    6. '   ' → logprob: -3.3094611167907715
    7. 'stance' → logprob: -5.5594611167907715
    8. '  ' → logprob: -6.4344611167907715
    9. '    ' → logprob: -6.6844611167907715
    10. '       ' → logprob: -6.8094611167907715

Token 141: ' discs' (ID: 89635)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0907718613743782
    2. ' math' → logprob: -3.0907719135284424
    3. 'dis' → logprob: -4.215771675109863
    4. '(math' → logprob: -4.340771675109863
    5. '((' → logprob: -4.465771675109863
    6. ' ((' → logprob: -7.090771675109863
    7. ' (' → logprob: -7.465771675109863
    8. ' discs' → logprob: -8.340771675109863
    9. '   ' → logprob: -9.215771675109863
    10. 'disc' → logprob: -9.590771675109863

Token 142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008268986130133271
    2. '[j' → logprob: -7.500826835632324
    3. '[' → logprob: -8.250826835632324
    4. '[
' → logprob: -12.750826835632324
    5. '[x' → logprob: -13.125826835632324
    6. '[int' → logprob: -13.500826835632324
    7. '[s' → logprob: -13.750826835632324
    8. '[]' → logprob: -13.875826835632324
    9. 'i' → logprob: -14.250826835632324
    10. ']' → logprob: -14.500826835632324

Token 143: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.25396963953971863
    2. ']' → logprob: -1.503969669342041
    3. '].' → logprob: -7.003969669342041
    4. ']
' → logprob: -7.378969669342041
    5. ' ]
' → logprob: -8.628969192504883
    6. '
' → logprob: -9.128969192504883
    7. ']

' → logprob: -9.378969192504883
    8. ' ]' → logprob: -10.253969192504883
    9. '];' → logprob: -10.378969192504883
    10. '.' → logprob: -10.753969192504883

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029835760593414307
    2. 'dj' → logprob: -4.1548357009887695
    3. 'dx' → logprob: -4.9048357009887695
    4. ' dx' → logprob: -6.2798357009887695
    5. 'd' → logprob: -6.4048357009887695
    6. '    
' → logprob: -6.6548357009887695
    7. '
' → logprob: -7.7798357009887695
    8. ' dj' → logprob: -8.27983570098877
    9. 'distance' → logprob: -8.77983570098877
    10. 'j' → logprob: -9.02983570098877

Token 145: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' (adapté à ' dj') → logprob: -0.0006737126968801022
    2. '   ' → logprob: -8.000673294067383
    3. ' dj' → logprob: -8.000673294067383
    4. '    
' → logprob: -13.500673294067383
    5. '.dj' → logprob: -14.375673294067383
    6. 'd' → logprob: -15.375673294067383
    7. '       ' → logprob: -16.125673294067383
    8. 'Dj' → logprob: -16.125673294067383
    9. '    ' → logprob: -16.125673294067383
    10. '  ' → logprob: -16.250673294067383

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24664397537708282
    2. '=' → logprob: -1.7466440200805664
    3. '<|end|>' → logprob: -3.9966440200805664
    4. '.' → logprob: -4.621644020080566
    5. ']' → logprob: -4.871644020080566
    6. ')' → logprob: -5.871644020080566
    7. '   ' → logprob: -6.621644020080566
    8. 's' → logprob: -7.371644020080566
    9. '<|end|>' → logprob: -7.371644020080566
    10. ' ' → logprob: -7.496644020080566

Token 147: ' discs' (ID: 89635)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.3485945165157318
    2. ' discs' → logprob: -1.2235945463180542
    3. 'disc' → logprob: -9.473594665527344
    4. ' disc' → logprob: -11.098594665527344
    5. '	dis' → logprob: -11.473594665527344
    6. '.dis' → logprob: -11.723594665527344
    7. '_dis' → logprob: -11.723594665527344
    8. ' дис' → logprob: -12.098594665527344
    9. ' dis' → logprob: -12.223594665527344
    10. ' disks' → logprob: -12.723594665527344

Token 148: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012630375567823648
    2. '[' → logprob: -9.250125885009766
    3. 'j' → logprob: -11.125125885009766
    4. '[
' → logprob: -11.625125885009766
    5. ']' → logprob: -12.875125885009766
    6. '[js' → logprob: -13.125125885009766
    7. '][' → logprob: -13.875125885009766
    8. '<|end|>' → logprob: -15.750125885009766
    9. '	j' → logprob: -16.000125885009766
    10. '[i' → logprob: -16.000125885009766

Token 149: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16930347681045532
    2. ')' → logprob: -2.2943034172058105
    3. ']
' → logprob: -3.2943034172058105
    4. ']

' → logprob: -4.4193034172058105
    5. ')
' → logprob: -5.4193034172058105
    6. '   ' → logprob: -7.7943034172058105
    7. ')

' → logprob: -8.044303894042969
    8. '])' → logprob: -8.919303894042969
    9. ']
' → logprob: -8.919303894042969
    10. '
' → logprob: -9.044303894042969

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10300324857234955
    2. '
' → logprob: -2.6030032634735107
    3. '    
' → logprob: -4.478003025054932
    4. 'distance' → logprob: -5.853003025054932
    5. 'dx' → logprob: -6.228003025054932
    6. 'd' → logprob: -6.353003025054932
    7. 'dist' → logprob: -6.728003025054932
    8. ' 
' → logprob: -6.853003025054932
    9. '  
' → logprob: -6.978003025054932
    10. ' dx' → logprob: -7.603003025054932

Token 151: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.572519838809967
    2. 'dx' → logprob: -0.947519838809967
    3. 'distance' → logprob: -3.1975197792053223
    4. 'd' → logprob: -5.822519779205322
    5. '   ' → logprob: -5.822519779205322
    6. 'return' → logprob: -7.322519779205322
    7. ' dx' → logprob: -7.697519779205322
    8. ' dist' → logprob: -8.44752025604248
    9. ' distance' → logprob: -10.57252025604248
    10. '#' (adapté à ' #') → logprob: -10.82252025604248

Token 152: ' distance' (ID: 9324)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.4472237229347229
    2. 'dist' → logprob: -1.3222236633300781
    3. 'distance' → logprob: -2.947223663330078
    4. ' dx' → logprob: -3.572223663330078
    5. 'd' → logprob: -4.947223663330078
    6. ' dist' → logprob: -5.572223663330078
    7. ' distance' → logprob: -6.822223663330078
    8. 'import' → logprob: -7.322223663330078
    9. '#' → logprob: -8.072223663330078
    10. '   ' → logprob: -8.572223663330078

Token 153: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01641813851892948
    2. '=' → logprob: -4.266417980194092
    3. '_x' → logprob: -7.266417980194092
    4. ' ' → logprob: -7.891417980194092
    5. '_sq' → logprob: -7.891417980194092
    6. '   ' → logprob: -8.51641845703125
    7. '_' → logprob: -8.76641845703125
    8. '_squared' → logprob: -9.14141845703125
    9. 'x' → logprob: -9.26641845703125
    10. '_cent' → logprob: -9.51641845703125

Token 154: ' les' (ID: 1341)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.23158791661262512
    2. '(di' → logprob: -1.6065878868103027
    3. ' di' → logprob: -5.731587886810303
    4. '(' → logprob: -6.231587886810303
    5. 'math' → logprob: -7.856587886810303
    6. ' (' → logprob: -8.231588363647461
    7. '(math' → logprob: -8.981588363647461
    8. ' math' → logprob: -10.106588363647461
    9. '_di' → logprob: -10.231588363647461
    10. '((' → logprob: -10.481588363647461

Token 155: ' centres' (ID: 43504)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.11606309562921524
    2. ' centers' → logprob: -2.866063117980957
    3. ' di' → logprob: -3.366063117980957
    4. ' (' → logprob: -5.491063117980957
    5. '(' → logprob: -5.991063117980957
    6. 'points' → logprob: -6.116063117980957
    7. ' points' → logprob: -6.241063117980957
    8. ' centres' → logprob: -6.366063117980957
    9. 'cent' → logprob: -7.116063117980957
    10. '(di' → logprob: -7.241063117980957

Token 156: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13532942533493042
    2. '   ' → logprob: -2.760329484939575
    3. '=' → logprob: -3.385329484939575
    4. 'dx' → logprob: -4.385329246520996
    5. 'dist' → logprob: -5.010329246520996
    6. ' dx' → logprob: -5.260329246520996
    7. 'distance' → logprob: -6.635329246520996
    8. 'import' → logprob: -7.135329246520996
    9. ':' → logprob: -7.635329246520996
    10. 'x' → logprob: -7.760329246520996

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23916970193386078
    2. ' =' → logprob: -1.864169716835022
    3. 'dist' → logprob: -3.2391695976257324
    4. '=' → logprob: -5.239169597625732
    5. ' dist' → logprob: -5.614169597625732
    6. 'distance' → logprob: -5.864169597625732
    7. 'dx' → logprob: -5.989169597625732
    8. ' dx' → logprob: -6.114169597625732
    9. 'd' → logprob: -7.239169597625732
    10. ':' → logprob: -8.73917007446289

Token 158: ' dist' (ID: 3601)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.7238490581512451
    2. 'dx' → logprob: -1.4738490581512451
    3. 'dist' (adapté à ' dist') → logprob: -1.4738490581512451
    4. ' dist' → logprob: -2.973849058151245
    5. '   ' → logprob: -6.223849296569824
    6. 'd' → logprob: -6.348849296569824
    7. ' d' → logprob: -6.598849296569824
    8. 'distance' → logprob: -7.473849296569824
    9. ' distance' → logprob: -8.848849296569824
    10. ' math' → logprob: -9.348849296569824

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07108158618211746
    2. '=' → logprob: -2.6960816383361816
    3. 'ance' → logprob: -7.696081638336182
    4. '_x' → logprob: -8.321081161499023
    5. '   ' → logprob: -8.446081161499023
    6. '(' → logprob: -9.696081161499023
    7. '_' → logprob: -10.446081161499023
    8. ')' → logprob: -10.696081161499023
    9. ' ' → logprob: -10.696081161499023
    10. 'x' → logprob: -11.196081161499023

Token 160: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5760349035263062
    2. 'math' → logprob: -0.8260349035263062
    3. '(math' → logprob: -9.326034545898438
    4. '((' → logprob: -13.076034545898438
    5. ' ((' → logprob: -13.076034545898438
    6. '   ' → logprob: -13.326034545898438
    7. ' ' → logprob: -15.451034545898438
    8. '.math' → logprob: -16.451034545898438
    9. 'Math' → logprob: -16.701034545898438
    10. ' (' → logprob: -16.826034545898438

Token 161: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.00394197553396225
    2. '.' → logprob: -6.003942012786865
    3. '.dist' → logprob: -7.003942012786865
    4. '.h' → logprob: -7.503942012786865
    5. '.s' → logprob: -13.003941535949707
    6. '.atan' → logprob: -13.503941535949707
    7. '.Sqrt' → logprob: -14.128941535949707
    8. ' .' → logprob: -14.253941535949707
    9. '.pow' → logprob: -15.003941535949707
    10. '.ceil' → logprob: -15.503941535949707

Token 162: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005236956290900707
    2. '(' → logprob: -5.255237102508545
    3. '(
' → logprob: -12.880236625671387
    4. '   ' → logprob: -15.755236625671387
    5. '(pow' → logprob: -16.255237579345703
    6. ' ((' → logprob: -16.505237579345703
    7. '(

' → logprob: -16.505237579345703
    8. ' (' → logprob: -17.130237579345703
    9. '    ' → logprob: -17.130237579345703
    10. '(dx' → logprob: -17.880237579345703

Token 163: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.004499431233853102
    2. ' di' → logprob: -5.629499435424805
    3. '(di' → logprob: -7.254499435424805
    4. 'dj' → logprob: -8.879499435424805
    5. '   ' → logprob: -11.379499435424805
    6. ' (' → logprob: -11.379499435424805
    7. 'd' → logprob: -11.504499435424805
    8. '(' → logprob: -12.754499435424805
    9. 'dis' → logprob: -13.004499435424805
    10. ' dj' → logprob: -13.004499435424805

Token 164: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.253090865968261e-06
    2. 'x' → logprob: -12.250009536743164
    3. ' .' → logprob: -12.875009536743164
    4. '.' → logprob: -13.250009536743164
    5. ').' → logprob: -17.375009536743164
    6. '   ' → logprob: -18.750009536743164
    7. ' ' → logprob: -19.000009536743164
    8. '_x' → logprob: -19.625009536743164
    9. '

' → logprob: -19.750009536743164
    10. '}.' → logprob: -19.875009536743164

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03805331513285637
    2. '-' → logprob: -3.288053274154663
    3. '-d' → logprob: -12.538053512573242
    4. '   ' → logprob: -12.538053512573242
    5. '-di' → logprob: -12.538053512573242
    6. ' ' → logprob: -14.288053512573242
    7. '  ' → logprob: -15.788053512573242
    8. '	' → logprob: -16.288053512573242
    9. 'di' → logprob: -16.663053512573242
    10. ' ' → logprob: -16.788053512573242

Token 166: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.06199009716510773
    2. ' dj' → logprob: -2.8119900226593018
    3. '.dj' → logprob: -11.061989784240723
    4. '   ' → logprob: -13.436989784240723
    5. ' ' → logprob: -13.686989784240723
    6. 'Dj' → logprob: -14.311989784240723
    7. '  ' → logprob: -14.686989784240723
    8. '	d' → logprob: -14.811989784240723
    9. 'dje' → logprob: -14.811989784240723
    10. 'd' → logprob: -14.811989784240723

Token 167: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00034273360506631434
    2. '.' → logprob: -8.87534236907959
    3. ').' → logprob: -9.25034236907959
    4. 'x' → logprob: -9.37534236907959
    5. ' .' → logprob: -11.12534236907959
    6. '}.' → logprob: -12.87534236907959
    7. '.y' → logprob: -13.25034236907959
    8. '].' → logprob: -13.75034236907959
    9. ' x' → logprob: -14.75034236907959
    10. ')' → logprob: -15.25034236907959

Token 168: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0790436789393425
    2. ')' → logprob: -2.5790436267852783
    3. '.x' → logprob: -9.4540433883667
    4. ' )' → logprob: -9.9540433883667
    5. '   ' → logprob: -11.2040433883667
    6. ')^' → logprob: -12.0790433883667
    7. '.y' → logprob: -12.7040433883667
    8. '  ' → logprob: -13.8290433883667
    9. ' ' → logprob: -13.9540433883667
    10. '    ' → logprob: -14.3290433883667

Token 169: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018565983918961138
    2. ' ' → logprob: -8.6251859664917
    3. '```' → logprob: -13.7501859664917
    4. '   ' → logprob: -13.9376859664917
    5. ')' → logprob: -14.3751859664917
    6. '

' → logprob: -14.8126859664917
    7. '۲' → logprob: -14.8126859664917
    8. '  ' → logprob: -15.0001859664917
    9. '²' → logprob: -15.4376859664917
    10. '٢' → logprob: -15.8751859664917

Token 170: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.026340942829847336
    2. '+' → logprob: -3.651340961456299
    3. '+(' → logprob: -10.90134048461914
    4. ' +(' → logprob: -11.65134048461914
    5. ')' → logprob: -11.90134048461914
    6. ' ' → logprob: -12.77634048461914
    7. '   ' → logprob: -13.65134048461914
    8. ' +
' → logprob: -14.02634048461914
    9. '+)' → logprob: -14.77634048461914
    10. ',' → logprob: -15.27634048461914

Token 171: ' (' (ID: 350)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.023339467123150826
    2. ' (' → logprob: -3.7733395099639893
    3. '(d' → logprob: -10.14833927154541
    4. '(dist' → logprob: -10.77333927154541
    5. '(dis' → logprob: -11.27333927154541
    6. '(' → logprob: -12.64833927154541
    7. '<|end|>' → logprob: -12.64833927154541
    8. '(diff' → logprob: -12.77333927154541
    9. '(dx' → logprob: -13.02333927154541
    10. ' ' → logprob: -13.14833927154541

Token 172: 'di' (ID: 4091)
  Prédit: '(di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(di' → logprob: -0.040501564741134644
    2. 'di' → logprob: -3.290501594543457
    3. ' di' → logprob: -6.290501594543457
    4. ' (' → logprob: -7.665501594543457
    5. '(d' → logprob: -10.165501594543457
    6. '(' → logprob: -10.415501594543457
    7. '   ' → logprob: -10.415501594543457
    8. ')' → logprob: -11.915501594543457
    9. '  ' → logprob: -12.165501594543457
    10. '.di' → logprob: -12.665501594543457

Token 173: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00013119110371917486
    2. 'y' → logprob: -9.625131607055664
    3. '.' → logprob: -9.750131607055664
    4. '.x' → logprob: -12.875131607055664
    5. ' .' → logprob: -13.500131607055664
    6. ' ' → logprob: -14.250131607055664
    7. ' y' → logprob: -14.750131607055664
    8. '.py' → logprob: -15.000131607055664
    9. '```' → logprob: -15.625131607055664
    10. '	y' → logprob: -15.750131607055664

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016179708763957024
    2. '-' → logprob: -4.14117956161499
    3. ' ' → logprob: -9.641180038452148
    4. ')' → logprob: -9.891180038452148
    5. '<|end|>' → logprob: -11.391180038452148
    6. '()-' → logprob: -12.141180038452148
    7. '  ' → logprob: -13.141180038452148
    8. '   ' → logprob: -13.141180038452148
    9. ')-(' → logprob: -13.391180038452148
    10. '2' → logprob: -13.516180038452148

Token 175: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.07561938464641571
    2. '(d' → logprob: -2.7006194591522217
    3. ' dj' → logprob: -5.825619220733643
    4. 'di' → logprob: -6.200619220733643
    5. '(di' → logprob: -7.950619220733643
    6. 'dy' → logprob: -8.8256196975708
    7. 'd' → logprob: -9.8256196975708
    8. '(j' → logprob: -9.9506196975708
    9. ' (' → logprob: -10.8256196975708
    10. '.dj' → logprob: -11.2006196975708

Token 176: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0001596771035110578
    2. '.x' → logprob: -9.00015926361084
    3. '.' → logprob: -10.50015926361084
    4. '```' → logprob: -12.87515926361084
    5. '.py' → logprob: -13.87515926361084
    6. '**' → logprob: -13.87515926361084
    7. ' .' → logprob: -14.00015926361084
    8. 'y' → logprob: -14.12515926361084
    9. '-' → logprob: -14.12515926361084
    10. ')' → logprob: -14.62515926361084

Token 177: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0011296173324808478
    2. ')' → logprob: -7.376129627227783
    3. '**' → logprob: -7.876129627227783
    4. '2' → logprob: -9.251129150390625
    5. '   ' → logprob: -12.001129150390625
    6. '1' → logprob: -12.376129150390625
    7. '**)' → logprob: -12.626129150390625
    8. '```' → logprob: -12.876129150390625
    9. ' )' → logprob: -13.001129150390625
    10. '))' → logprob: -13.126129150390625

Token 178: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -11.375022888183594
    3. '```' → logprob: -12.750022888183594
    4. '1' → logprob: -13.000022888183594
    5. '**' → logprob: -13.000022888183594
    6. '22' → logprob: -14.687522888183594
    7. '   ' → logprob: -14.937522888183594
    8. ')' → logprob: -15.000022888183594
    9. '``' → logprob: -15.500022888183594
    10. '*' → logprob: -15.500022888183594

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03844306617975235
    2. ' )' → logprob: -3.288443088531494
    3. ')
' → logprob: -8.913442611694336
    4. '   ' → logprob: -9.163442611694336
    5. ')>' → logprob: -9.913442611694336
    6. ' )
' → logprob: -10.163442611694336
    7. ' >' → logprob: -10.788442611694336
    8. '>' → logprob: -11.288442611694336
    9. ')<' → logprob: -11.413442611694336
    10. ' <=' → logprob: -12.038442611694336

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029341988265514374
    2. ' if' → logprob: -6.752933979034424
    3. '    
' → logprob: -7.502933979034424
    4. '<|end|>' → logprob: -7.877933979034424
    5. 'if' → logprob: -8.252934455871582
    6. ')' → logprob: -8.377934455871582
    7. '  
' → logprob: -9.377934455871582
    8. ' 
' → logprob: -9.752934455871582
    9. '  ' → logprob: -10.002934455871582
    10. '    ' → logprob: -10.252934455871582

Token 181: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8152872323989868
    2. 'return' → logprob: -1.3152872323989868
    3. 'if' → logprob: -1.4402872323989868
    4. ' if' → logprob: -3.5652871131896973
    5. ' return' → logprob: -3.8152871131896973
    6. '
' → logprob: -6.815287113189697
    7. '    
' → logprob: -7.815287113189697
    8. '#' (adapté à ' #') → logprob: -8.690287590026855
    9. 'radius' → logprob: -9.065287590026855
    10. '  
' → logprob: -11.315287590026855

Token 182: ' i' (ID: 575)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06250546127557755
    2. ' return' → logprob: -3.1875054836273193
    3. 'if' → logprob: -4.68750524520874
    4. '   ' → logprob: -4.93750524520874
    5. 'dist' → logprob: -6.18750524520874
    6. ' if' → logprob: -7.31250524520874
    7. ' dist' → logprob: -9.312505722045898
    8. '#' → logprob: -9.937505722045898
    9. '(dist' → logprob: -10.312505722045898
    10. 'ret' → logprob: -11.437505722045898

Token 183: ' est' (ID: 893)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.004157345276325941
    2. ' .' → logprob: -6.254157543182373
    3. '.' → logprob: -7.004157543182373
    4. 'r' → logprob: -7.004157543182373
    5. '.c' → logprob: -8.504157066345215
    6. '.x' → logprob: -10.004157066345215
    7. ' r' → logprob: -10.629157066345215
    8. ' ' → logprob: -10.754157066345215
    9. '.t' → logprob: -11.004157066345215
    10. ' !=' → logprob: -11.129157066345215

Token 184: ' sur' (ID: 1512)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.8553147912025452
    2. ' dist' → logprob: -1.6053147315979004
    3. 'dist' → logprob: -1.9803147315979004
    4. ' di' → logprob: -2.7303147315979004
    5. 'r' → logprob: -3.1053147315979004
    6. ' not' → logprob: -3.2303147315979004
    7. '<' → logprob: -3.9803147315979004
    8. ' sur' → logprob: -4.1053147315979
    9. '   ' → logprob: -4.3553147315979
    10. '.dist' → logprob: -5.2303147315979

Token 185: ' j' (ID: 441)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.5692302584648132
    2. ' j' → logprob: -1.444230318069458
    3. 'dj' → logprob: -2.944230318069458
    4. ' top' → logprob: -3.444230318069458
    5. ' dj' → logprob: -3.944230318069458
    6. '_' → logprob: -4.194230079650879
    7. '_j' → logprob: -4.319230079650879
    8. 'top' → logprob: -4.444230079650879
    9. 'dist' → logprob: -4.569230079650879
    10. '_dist' → logprob: -4.694230079650879

Token 186: ' s' (ID: 265)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006924704648554325
    2. 'and' → logprob: -5.006924629211426
    3. '   ' → logprob: -8.631924629211426
    4. ' if' → logprob: -10.881924629211426
    5. ' ' → logprob: -12.256924629211426
    6. '    ' → logprob: -12.631924629211426
    7. 'if' → logprob: -13.506924629211426
    8. '=' → logprob: -14.256924629211426
    9. '  ' → logprob: -14.631924629211426
    10. '>' → logprob: -14.756924629211426

Token 187: 'si' (ID: 4778)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37320631742477417
    2. 'i' → logprob: -2.123206377029419
    3. 'dist' → logprob: -2.873206377029419
    4. '>' → logprob: -3.623206377029419
    5. '(dist' → logprob: -3.748206377029419
    6. 't' → logprob: -3.998206377029419
    7. 'si' → logprob: -4.74820613861084
    8. '    ' → logprob: -4.87320613861084
    9. '       ' → logprob: -5.49820613861084
    10. 'atisf' → logprob: -5.49820613861084

Token 188: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11276756972074509
    2. ' dist' → logprob: -2.362767457962036
    3. 'di' → logprob: -4.862767696380615
    4. '(dist' → logprob: -5.487767696380615
    5. ' di' → logprob: -8.487767219543457
    6. '   ' → logprob: -8.737767219543457
    7. '(i' → logprob: -9.487767219543457
    8. '(di' → logprob: -9.737767219543457
    9. 'i' → logprob: -10.112767219543457
    10. ' i' → logprob: -10.612767219543457

Token 189: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22173258662223816
    2. 'r' → logprob: -1.9717326164245605
    3. ' dist' → logprob: -2.8467326164245605
    4. 'di' → logprob: -7.4717326164245605
    5. ' r' → logprob: -7.8467326164245605
    6. '.dist' → logprob: -8.346732139587402
    7. '	dist' → logprob: -9.096732139587402
    8. ' di' → logprob: -9.221732139587402
    9. '.r' → logprob: -9.596732139587402
    10. '(dist' → logprob: -10.721732139587402

Token 190: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13368716835975647
    2. '<' → logprob: -2.3836872577667236
    3. ' <=' → logprob: -3.5086872577667236
    4. '<=' → logprob: -6.6336870193481445
    5. ' +' → logprob: -7.0086870193481445
    6. '+' → logprob: -7.5086870193481445
    7. ' ' → logprob: -9.758687019348145
    8. '   ' → logprob: -10.383687019348145
    9. ' ' → logprob: -10.508687019348145
    10. '    ' → logprob: -10.633687019348145

Token 191: ' STRICT' (ID: 68735)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.586807131767273
    2. '<' → logprob: -0.961807131767273
    3. 'strict' → logprob: -3.4618072509765625
    4. 'inf' → logprob: -3.9618072509765625
    5. ' strictly' → logprob: -5.7118072509765625
    6. ' inf' → logprob: -6.4618072509765625
    7. '<|end|>' → logprob: -6.7118072509765625
    8. ' less' → logprob: -6.8368072509765625
    9. ' moins' → logprob: -7.4618072509765625
    10. ' inférieur' → logprob: -7.4618072509765625

Token 192: 'EMENT' (ID: 25654)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.004188213497400284
    2. '<' → logprob: -5.879188060760498
    3. 'lement' → logprob: -7.504188060760498
    4. 'ly' → logprob: -7.879188060760498
    5. 'ément' → logprob: -9.004188537597656
    6. 'e' → logprob: -9.504188537597656
    7. 'EMENT' → logprob: -9.629188537597656
    8. '   ' → logprob: -10.129188537597656
    9. ' <' → logprob: -10.379188537597656
    10. 'ment' → logprob: -10.754188537597656

Token 193: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.03596802055835724
    2. ' inf' → logprob: -3.785968065261841
    3. '<' → logprob: -4.660967826843262
    4. 'infer' → logprob: -6.285967826843262
    5. 'strict' → logprob: -7.160967826843262
    6. ' inférieur' → logprob: -8.410967826843262
    7. ' <' → logprob: -8.660967826843262
    8. 'moins' → logprob: -9.660967826843262
    9. '_inf' → logprob: -10.410967826843262
    10. 'Inf' → logprob: -11.535967826843262

Token 194: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.002219011075794697
    2. 'erie' → logprob: -6.252219200134277
    3. 'érieur' → logprob: -8.877219200134277
    4. 'érie' → logprob: -9.252219200134277
    5. 'er' → logprob: -10.252219200134277
    6. '   ' → logprob: -11.877219200134277
    7. 'é' → logprob: -12.502219200134277
    8. '{' → logprob: -12.752219200134277
    9. '       ' → logprob: -13.752219200134277
    10. 'érieures' → logprob: -13.877219200134277

Token 195: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5134599804878235
    2. 'dj' → logprob: -1.7634599208831787
    3. ' dj' → logprob: -2.3884599208831787
    4. '   ' → logprob: -2.3884599208831787
    5. ' to' → logprob: -4.388460159301758
    6. ' di' → logprob: -4.513460159301758
    7. ' au' → logprob: -4.888460159301758
    8. 'à' → logprob: -5.388460159301758
    9. 'di' → logprob: -5.763460159301758
    10. ' ' → logprob: -6.263460159301758

Token 196: ' r' (ID: 428)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.6085184812545776
    2. 'di' → logprob: -1.3585184812545776
    3. ' dj' → logprob: -2.358518600463867
    4. ' di' → logprob: -2.483518600463867
    5. '(di' → logprob: -4.608518600463867
    6. 'dist' → logprob: -5.233518600463867
    7. '(d' → logprob: -6.358518600463867
    8. ' (' → logprob: -6.483518600463867
    9. ' dist' → logprob: -6.858518600463867
    10. '(dist' → logprob: -7.608518600463867

Token 197: '_i' (ID: 10853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12703867256641388
    2. 'di' → logprob: -2.7520387172698975
    3. ' di' → logprob: -4.127038478851318
    4. 'j' → logprob: -4.377038478851318
    5. 'dj' → logprob: -4.502038478851318
    6. ' i' → logprob: -5.002038478851318
    7. '[i' → logprob: -5.502038478851318
    8. '   ' → logprob: -7.002038478851318
    9. '_di' → logprob: -7.252038478851318
    10. '_i' → logprob: -7.252038478851318

Token 198: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2526001036167145
    2. '[i' → logprob: -2.6276001930236816
    3. '+' → logprob: -2.7526001930236816
    4. 'di' → logprob: -3.0026001930236816
    5. 'i' → logprob: -4.002600193023682
    6. '[' → logprob: -4.877600193023682
    7. '_i' → logprob: -5.502600193023682
    8. '[j' → logprob: -6.252600193023682
    9. ' -' → logprob: -6.877600193023682
    10. ' i' → logprob: -6.877600193023682

Token 199: ' r' (ID: 428)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -1.208788514137268
    2. 'r' → logprob: -1.458788514137268
    3. ' dj' → logprob: -1.458788514137268
    4. ' r' → logprob: -1.458788514137268
    5. ' di' → logprob: -6.3337883949279785
    6. 'di' → logprob: -6.9587883949279785
    7. 'd' → logprob: -7.9587883949279785
    8. ' d' → logprob: -8.708788871765137
    9. 'dist' → logprob: -8.833788871765137
    10. ' dist' → logprob: -9.083788871765137

Token 200: '_j' (ID: 12021)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10362698137760162
    2. 'j' → logprob: -2.3536269664764404
    3. '_i' → logprob: -6.7286272048950195
    4. '.' → logprob: -7.2286272048950195
    5. 'di' → logprob: -7.7286272048950195
    6. '_j' → logprob: -7.8536272048950195
    7. '.i' → logprob: -8.85362720489502
    8. '[i' → logprob: -8.97862720489502
    9. '[j' → logprob: -9.60362720489502
    10. '_' → logprob: -9.72862720489502

Token 201: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15482434630393982
    2. '   ' → logprob: -2.6548242568969727
    3. ' -' → logprob: -3.5298242568969727
    4. ' +' → logprob: -4.279824256896973
    5. 'and' → logprob: -4.529824256896973
    6. '-' → logprob: -4.654824256896973
    7. '+' → logprob: -5.029824256896973
    8. ')' → logprob: -7.404824256896973
    9. ':' → logprob: -7.529824256896973
    10. ' if' → logprob: -7.779824256896973

Token 202: 'pas' (ID: 21122)
  Prédit: ' di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' di' → logprob: -0.21378546953201294
    2. 'di' → logprob: -1.7137854099273682
    3. ' dist' → logprob: -5.088785648345947
    4. ')' → logprob: -5.838785648345947
    5. 'dist' → logprob: -6.588785648345947
    6. 'dj' → logprob: -7.463785648345947
    7. '(di' → logprob: -7.588785648345947
    8. ' dj' → logprob: -8.463785171508789
    9. ' )' → logprob: -8.588785171508789
    10. '0' → logprob: -9.713785171508789

Token 203: ' tangent' (ID: 149281)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1804831475019455
    2. ' de' → logprob: -3.055483102798462
    3. '<=' → logprob: -3.555483102798462
    4. ')' → logprob: -4.055483341217041
    5. 'de' → logprob: -4.180483341217041
    6. '==' → logprob: -4.430483341217041
    7. ' d' → logprob: -4.680483341217041
    8. 'd' → logprob: -5.180483341217041
    9. ' )' → logprob: -5.180483341217041
    10. ' <=' → logprob: -5.180483341217041

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005638059228658676
    2. ' )' → logprob: -6.130638122558594
    3. 'e' → logprob: -6.630638122558594
    4. ' and' → logprob: -6.880638122558594
    5. 'and' → logprob: -7.130638122558594
    6. '')' → logprob: -10.130638122558594
    7. '),' → logprob: -10.255638122558594
    8. '")' → logprob: -10.380638122558594
    9. 'es' → logprob: -10.880638122558594
    10. '+' → logprob: -11.005638122558594

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012503541074693203
    2. ' if' → logprob: -7.126250267028809
    3. ' and' → logprob: -8.376250267028809
    4. '    ' → logprob: -9.126250267028809
    5. 'if' → logprob: -10.376250267028809
    6. '  ' → logprob: -11.001250267028809
    7. 'and' → logprob: -11.126250267028809
    8. ' ' → logprob: -11.376250267028809
    9. '    
' → logprob: -11.501250267028809
    10. ')' → logprob: -12.626250267028809

Token 206: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09518465399742126
    2. 'return' → logprob: -2.845184564590454
    3. ' return' → logprob: -3.845184564590454
    4. 'if' → logprob: -4.970184803009033
    5. ' if' → logprob: -5.470184803009033
    6. 'dist' → logprob: -9.345184326171875
    7. ' dist' → logprob: -11.345184326171875
    8. '    ' → logprob: -11.470184326171875
    9. '   ' → logprob: -11.845184326171875
    10. '  ' → logprob: -11.970184326171875

Token 207: ' cela' (ID: 17542)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30736157298088074
    2. '   ' → logprob: -1.9323616027832031
    3. ' return' → logprob: -2.432361602783203
    4. 'dist' → logprob: -4.182361602783203
    5. 'if' → logprob: -4.307361602783203
    6. ' if' → logprob: -6.182361602783203
    7. ' dist' → logprob: -6.932361602783203
    8. '(dist' → logprob: -9.682361602783203
    9. '  ' → logprob: -9.932361602783203
    10. ' ' → logprob: -10.682361602783203

Token 208: ' signifie' (ID: 81149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2870625853538513
    2. ' return' → logprob: -1.912062644958496
    3. 'return' → logprob: -2.912062644958496
    4. 'and' → logprob: -3.912062644958496
    5. ' and' → logprob: -4.287062644958496
    6. ' if' → logprob: -5.287062644958496
    7. '    ' → logprob: -6.412062644958496
    8. '  ' → logprob: -6.662062644958496
    9. 'if' → logprob: -6.912062644958496
    10. 'et' → logprob: -7.037062644958496

Token 209: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.41237759590148926
    2. ' dist' → logprob: -1.7873775959014893
    3. '   ' → logprob: -2.4123775959014893
    4. 'dist' → logprob: -2.6623775959014893
    5. ' that' → logprob: -5.78737735748291
    6. 'que' → logprob: -6.28737735748291
    7. '(dist' → logprob: -6.53737735748291
    8. ' ' → logprob: -6.53737735748291
    9. ' qu' → logprob: -7.28737735748291
    10. 'that' → logprob: -7.53737735748291

Token 210: ' i' (ID: 575)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2026492804288864
    2. ' dist' → logprob: -1.7026492357254028
    3. 'di' → logprob: -7.202649116516113
    4. '   ' → logprob: -8.077649116516113
    5. '(dist' → logprob: -9.327649116516113
    6. ' di' → logprob: -10.327649116516113
    7. '	dist' → logprob: -11.327649116516113
    8. 'i' → logprob: -11.452649116516113
    9. ' i' → logprob: -11.452649116516113
    10. ' ' → logprob: -11.952649116516113

Token 211: ' chev' (ID: 127415)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.6729751825332642
    2. 'r' → logprob: -1.1729751825332642
    3. ' .' → logprob: -2.7979750633239746
    4. '.' → logprob: -3.1729750633239746
    5. '.c' → logprob: -3.4229750633239746
    6. ' est' → logprob: -5.047975063323975
    7. '.n' → logprob: -5.047975063323975
    8. 'n' → logprob: -5.172975063323975
    9. '.x' → logprob: -5.547975063323975
    10. ' r' → logprob: -5.672975063323975

Token 212: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.001858676434494555
    2. 'er' → logprob: -7.376858711242676
    3. 'a' → logprob: -7.501858711242676
    4. 'e' → logprob: -7.876858711242676
    5. 'aque' → logprob: -8.501858711242676
    6. 'au' → logprob: -11.126858711242676
    7. 'r' → logprob: -11.251858711242676
    8. 'aule' → logprob: -11.626858711242676
    9. 'uche' → logprob: -11.751858711242676
    10. '#' → logprob: -12.126858711242676

Token 213: ' j' (ID: 441)
  Prédit: ' dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dj' → logprob: -1.0778813362121582
    2. 'dj' → logprob: -1.0778813362121582
    3. ' j' → logprob: -1.3278813362121582
    4. 'j' → logprob: -3.577881336212158
    5. '   ' → logprob: -4.577881336212158
    6. ' (' → logprob: -4.952881336212158
    7. ' ' → logprob: -5.952881336212158
    8. '(j' → logprob: -6.452881336212158
    9. '(' → logprob: -7.077881336212158
    10. '    ' → logprob: -7.827881336212158

Token 214: ' ;' (ID: 4605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06708873808383942
    2. ' and' → logprob: -2.8170888423919678
    3. ' if' → logprob: -6.067088603973389
    4. 'and' → logprob: -6.192088603973389
    5. 'return' → logprob: -8.442089080810547
    6. ' return' → logprob: -8.817089080810547
    7. '    ' → logprob: -9.442089080810547
    8. ')' → logprob: -9.567089080810547
    9. 'if' → logprob: -9.692089080810547
    10. ',' → logprob: -10.192089080810547

Token 215: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21103957295417786
    2. ' return' → logprob: -2.3360395431518555
    3. 'return' → logprob: -2.5860395431518555
    4. 'dist' → logprob: -4.4610395431518555
    5. ' dist' → logprob: -5.3360395431518555
    6. ' if' → logprob: -7.0860395431518555
    7. 'if' → logprob: -8.211039543151855
    8. '    ' → logprob: -8.961039543151855
    9. '    
' → logprob: -9.336039543151855
    10. '  ' → logprob: -9.461039543151855

Token 216: ' puisque' (ID: 66135)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1416637897491455
    2. '   ' → logprob: -2.6416637897491455
    3. 'i' → logprob: -3.3916637897491455
    4. ' di' → logprob: -4.016663551330566
    5. ' dist' → logprob: -5.516663551330566
    6. 'di' → logprob: -6.391663551330566
    7. 'dist' → logprob: -7.141663551330566
    8. '(i' → logprob: -7.266663551330566
    9. ' (' → logprob: -7.641663551330566
    10. ' ' → logprob: -8.141663551330566

Token 217: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008659370243549347
    2. ' i' → logprob: -4.758659362792969
    3. '   ' → logprob: -10.383659362792969
    4. 'di' → logprob: -12.258659362792969
    5. '(i' → logprob: -13.508659362792969
    6. 'dist' → logprob: -13.508659362792969
    7. '
' → logprob: -13.758659362792969
    8. 'j' → logprob: -14.008659362792969
    9. '	i' → logprob: -14.383659362792969
    10. ' ' → logprob: -14.383659362792969

Token 218: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4767983555793762
    2. '<' → logprob: -0.9767983555793762
    3. '.r' → logprob: -7.1017985343933105
    4. '.c' → logprob: -7.2267985343933105
    5. '<c' → logprob: -7.2267985343933105
    6. ' c' → logprob: -9.601798057556152
    7. 'c' → logprob: -9.726798057556152
    8. 'r' → logprob: -9.726798057556152
    9. '.' → logprob: -10.101798057556152
    10. '<n' → logprob: -10.601798057556152

Token 219: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007608989719301462
    2. ' j' → logprob: -4.882608890533447
    3. '	j' → logprob: -13.507609367370605
    4. '   ' → logprob: -14.132609367370605
    5. ' ' → logprob: -15.382609367370605
    6. '```' → logprob: -15.882609367370605
    7. '    ' → logprob: -16.75760841369629
    8. ' ' → logprob: -16.88260841369629
    9. '=j' → logprob: -17.00760841369629
    10. 'i' → logprob: -17.25760841369629

Token 220: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34978869557380676
    2. '   ' → logprob: -1.5997886657714844
    3. 'and' → logprob: -2.4747886657714844
    4. ',' → logprob: -4.974788665771484
    5. ':' → logprob: -7.099788665771484
    6. ' et' → logprob: -8.099788665771484
    7. '       ' → logprob: -8.474788665771484
    8. ' ,' → logprob: -8.474788665771484
    9. 'return' → logprob: -8.599788665771484
    10. ' return' → logprob: -8.849788665771484

Token 221: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43305954337120056
    2. 'return' → logprob: -1.433059573173523
    3. ' return' → logprob: -2.6830594539642334
    4. 'dist' → logprob: -3.3080594539642334
    5. ' dist' → logprob: -5.3080596923828125
    6. 'di' → logprob: -6.9330596923828125
    7. ' i' → logprob: -7.5580596923828125
    8. '  ' → logprob: -8.183059692382812
    9. 'True' → logprob: -8.433059692382812
    10. ' True' → logprob: -8.683059692382812

Token 222: ' est' (ID: 893)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8601022362709045
    2. '.c' → logprob: -2.1101021766662598
    3. '.r' → logprob: -2.3601021766662598
    4. 'r' → logprob: -2.9851021766662598
    5. ' r' → logprob: -3.6101021766662598
    6. ' .' → logprob: -3.6101021766662598
    7. ' c' → logprob: -3.7351021766662598
    8. '   ' → logprob: -3.8601021766662598
    9. ' is' → logprob: -4.11010217666626
    10. ' <' → logprob: -4.11010217666626

Token 223: ' "' (ID: 392)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.3399735391139984
    2. 'au' → logprob: -1.8399735689163208
    3. 'sur' → logprob: -3.2149734497070312
    4. ' dessus' → logprob: -3.5899734497070312
    5. ' sur' → logprob: -4.464973449707031
    6. 'dess' → logprob: -5.214973449707031
    7. ' visible' → logprob: -5.339973449707031
    8. 'strict' → logprob: -5.464973449707031
    9. 'bien' → logprob: -5.464973449707031
    10. 'dans' → logprob: -5.589973449707031

Token 224: 'au' (ID: 753)
  Prédit: 'au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.4118852913379669
    2. ' au' → logprob: -1.4118852615356445
    3. 'dess' → logprob: -2.6618852615356445
    4. ' dessus' → logprob: -5.1618852615356445
    5. 'sur' → logprob: -5.1618852615356445
    6. ' visible' → logprob: -6.0368852615356445
    7. 'visible' → logprob: -6.1618852615356445
    8. '"' → logprob: -7.0368852615356445
    9. ' sur' → logprob: -7.1618852615356445
    10. 'bien' → logprob: -7.5368852615356445

Token 225: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.04931227117776871
    2. '-dessus' → logprob: -3.0493123531341553
    3. ' dessus' → logprob: -7.299312114715576
    4. 'd' → logprob: -10.924312591552734
    5. '   ' → logprob: -11.174312591552734
    6. ' ' → logprob: -13.049312591552734
    7. 'des' → logprob: -13.049312591552734
    8. '-dess' → logprob: -13.299312591552734
    9. '-' → logprob: -13.424312591552734
    10. '```' → logprob: -13.674312591552734

Token 226: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15111981332302094
    2. ' "' → logprob: -2.7761197090148926
    3. ' de' → logprob: -3.0261197090148926
    4. '")' → logprob: -3.9011197090148926
    5. 'de' → logprob: -5.026119709014893
    6. ' ")' → logprob: -6.526119709014893
    7. '",' → logprob: -8.15112018585205
    8. ')' → logprob: -8.27612018585205
    9. '"""' → logprob: -8.90112018585205
    10. '```' → logprob: -9.90112018585205

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017410075815860182
    2. 'return' → logprob: -9.125174522399902
    3. ' return' → logprob: -10.125174522399902
    4. '    
' → logprob: -11.625174522399902
    5. ' if' → logprob: -12.000174522399902
    6. 'if' → logprob: -12.000174522399902
    7. '	return' → logprob: -14.125174522399902
    8. '```' → logprob: -14.250174522399902
    9. '   ' → logprob: -14.250174522399902
    10. '    ' → logprob: -14.500174522399902

Token 228: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15208441019058228
    2. 'return' (adapté à ' return') → logprob: -2.1520843505859375
    3. ' return' → logprob: -4.0270843505859375
    4. 'if' → logprob: -5.2770843505859375
    5. ' if' → logprob: -6.2770843505859375
    6. 'dist' → logprob: -11.902084350585938
    7. '	return' → logprob: -12.277084350585938
    8. '   ' → logprob: -12.527084350585938
    9. '    ' → logprob: -12.652084350585938
    10. '  ' → logprob: -12.902084350585938

Token 229: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.05033256113529205
    2. 'dist' → logprob: -3.050332546234131
    3. '(dist' → logprob: -6.425332546234131
    4. ' (' → logprob: -9.550333023071289
    5. '   ' → logprob: -10.925333023071289
    6. ' ' → logprob: -11.050333023071289
    7. '	dist' → logprob: -11.425333023071289
    8. '(' → logprob: -12.675333023071289
    9. '  ' → logprob: -13.550333023071289
    10. ' ' → logprob: -13.675333023071289

Token 230: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0059991865418851376
    2. '<' → logprob: -5.1309990882873535
    3. ' ' → logprob: -9.880999565124512
    4. ')' → logprob: -12.755999565124512
    5. ' ' → logprob: -13.005999565124512
    6. '[' → logprob: -13.255999565124512
    7. '<|end|>' → logprob: -13.255999565124512
    8. '  ' → logprob: -13.380999565124512
    9. ' <",' → logprob: -13.630999565124512
    10. '()<' → logprob: -13.880999565124512

Token 231: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.20218436419963837
    2. ' di' → logprob: -1.9521843194961548
    3. '(di' → logprob: -3.2021844387054443
    4. ' (' → logprob: -7.827184200286865
    5. '(' → logprob: -11.077184677124023
    6. '_di' → logprob: -13.452184677124023
    7. '   ' → logprob: -13.577184677124023
    8. '(d' → logprob: -14.577184677124023
    9. ' ' → logprob: -15.077184677124023
    10. '.di' → logprob: -15.202184677124023

Token 232: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0014115432277321815
    2. '.' → logprob: -6.626411437988281
    3. ' .' → logprob: -9.501411437988281
    4. 'r' → logprob: -11.626411437988281
    5. '​.' → logprob: -14.876411437988281
    6. '.i' → logprob: -15.251411437988281
    7. ' ' → logprob: -15.376411437988281
    8. '.x' → logprob: -15.751411437988281
    9. '	r' → logprob: -15.876411437988281
    10. ').' → logprob: -16.00141143798828

Token 233: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.034001000225543976
    2. '+' → logprob: -3.534001111984253
    3. '+j' → logprob: -5.784000873565674
    4. '+r' → logprob: -6.784000873565674
    5. ' ' → logprob: -11.284001350402832
    6. 'r' → logprob: -11.909001350402832
    7. 'dj' → logprob: -12.034001350402832
    8. '+d' → logprob: -12.534001350402832
    9. ' plus' → logprob: -13.784001350402832
    10. ' +
' → logprob: -13.909001350402832

Token 234: ' dj' (ID: 43267)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.10020915418863297
    2. ' dj' → logprob: -2.3502092361450195
    3. '.dj' → logprob: -13.22520923614502
    4. 'd' → logprob: -15.22520923614502
    5. ' ' → logprob: -15.72520923614502
    6. 'dje' → logprob: -16.350208282470703
    7. '   ' → logprob: -16.350208282470703
    8. 'Dj' → logprob: -16.475208282470703
    9. ' Dj' → logprob: -16.725208282470703
    10. ' dij' → logprob: -17.350208282470703

Token 235: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.030566733330488205
    2. '.' → logprob: -3.530566692352295
    3. 'r' → logprob: -7.280566692352295
    4. ' .' → logprob: -9.030567169189453
    5. '.j' → logprob: -12.530567169189453
    6. '.s' → logprob: -14.280567169189453
    7. ' r' → logprob: -14.405567169189453
    8. '.c' → logprob: -14.655567169189453
    9. '	r' → logprob: -15.155567169189453
    10. '.y' → logprob: -15.530567169189453

Token 236: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16934967041015625
    2. '
' → logprob: -1.9193496704101562
    3. '#' → logprob: -5.169349670410156
    4. '<|end|>' → logprob: -5.794349670410156
    5. '

' → logprob: -9.419349670410156
    6. '  
' → logprob: -9.669349670410156
    7. '    
' → logprob: -9.919349670410156
    8. '<|end|>' → logprob: -10.044349670410156
    9. ' 
' → logprob: -10.544349670410156
    10. '```' → logprob: -10.794349670410156

Token 238: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008211841923184693
    2. '#' → logprob: -7.125821113586426
    3. ' def' → logprob: -12.000821113586426
    4. 'import' → logprob: -12.125821113586426
    5. 'class' → logprob: -12.500821113586426
    6. 'for' → logprob: -14.250821113586426
    7. 'from' → logprob: -14.750821113586426
    8. '
' → logprob: -16.000822067260742
    9. 'if' → logprob: -16.500822067260742
    10. '```' → logprob: -16.750822067260742

Token 239: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006288402248173952
    2. ' def' → logprob: -5.381288528442383
    3. '#' → logprob: -7.256288528442383
    4. ' to' → logprob: -7.881288528442383
    5. 'de' → logprob: -8.881288528442383
    6. 'to' → logprob: -9.006288528442383
    7. ' pour' → logprob: -9.381288528442383
    8. ' for' → logprob: -10.256288528442383
    9. 'top' → logprob: -10.631288528442383
    10. 'sort' → logprob: -10.756288528442383

Token 240: ' calcul' (ID: 7559)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.31062474846839905
    2. 'aff' → logprob: -1.6856247186660767
    3. 'dé' → logprob: -4.060624599456787
    4. 'determ' → logprob: -4.060624599456787
    5. 'def' → logprob: -4.435624599456787
    6. 'calcul' → logprob: -4.685624599456787
    7. 'ordon' → logprob: -5.185624599456787
    8. 'det' → logprob: -5.685624599456787
    9. 'dess' → logprob: -5.685624599456787
    10. ' déterminer' → logprob: -5.935624599456787

Token 241: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0003945688367821276
    2. 'ate' → logprob: -8.250394821166992
    3. 'def' → logprob: -9.125394821166992
    4. '#' → logprob: -11.000394821166992
    5. 'ser' → logprob: -12.125394821166992
    6. 'rer' → logprob: -14.500394821166992
    7. 'e' → logprob: -14.625394821166992
    8. 'r' → logprob: -15.125394821166992
    9. 'ver' → logprob: -15.250394821166992
    10. 'late' → logprob: -15.875394821166992

Token 242: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9717743992805481
    2. ' la' → logprob: -1.2217743396759033
    3. 'la' → logprob: -2.0967743396759033
    4. 'l' → logprob: -2.3467743396759033
    5. 'le' → logprob: -2.8467743396759033
    6. '_l' → logprob: -4.346774578094482
    7. 'def' → logprob: -5.096774578094482
    8. '#' → logprob: -5.471774578094482
    9. 'les' → logprob: -5.596774578094482
    10. '_le' → logprob: -5.971774578094482

Token 243: ''état' (ID: 116357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0414077043533325
    2. ''ordre' → logprob: -1.6664077043533325
    3. ''ensemble' → logprob: -2.291407585144043
    4. ''' → logprob: -2.916407585144043
    5. '_surface' → logprob: -3.041407585144043
    6. 'ordre' → logprob: -3.166407585144043
    7. ''emp' → logprob: -3.166407585144043
    8. '_' → logprob: -4.041407585144043
    9. 'e' → logprob: -4.041407585144043
    10. 'surface' → logprob: -4.666407585144043

Token 244: ' "' (ID: 392)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5097188949584961
    2. '_des' → logprob: -1.384718894958496
    3. 'des' → logprob: -2.509718894958496
    4. ' des' → logprob: -3.634718894958496
    5. 'def' → logprob: -4.634718894958496
    6. '(' → logprob: -4.634718894958496
    7. '_de' → logprob: -5.384718894958496
    8. '_final' → logprob: -5.634718894958496
    9. ' de' → logprob: -5.759718894958496
    10. ' (' → logprob: -6.634718894958496

Token 245: 'lib' (ID: 5997)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visible' → logprob: -0.4566026031970978
    2. 'final' → logprob: -1.4566025733947754
    3. '_visible' → logprob: -2.7066025733947754
    4. 'vis' → logprob: -4.206602573394775
    5. ' visible' → logprob: -4.581602573394775
    6. 'emp' → logprob: -5.206602573394775
    7. 'pile' → logprob: -5.706602573394775
    8. '_final' → logprob: -5.831602573394775
    9. 'covered' → logprob: -6.456602573394775
    10. 'dess' → logprob: -6.456602573394775

Token 246: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.004216943867504597
    2. 'éré' → logprob: -6.254217147827148
    3. 'ère' → logprob: -7.504217147827148
    4. 'érée' → logprob: -8.004217147827148
    5. 'e' → logprob: -8.129217147827148
    6. 'ré' → logprob: -8.629217147827148
    7. 'er' → logprob: -8.754217147827148
    8. '"' → logprob: -9.254217147827148
    9. 'r' → logprob: -9.379217147827148
    10. '```' → logprob: -9.504217147827148

Token 247: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006437534000724554
    2. 'def' → logprob: -6.506437301635742
    3. '_state' → logprob: -7.006437301635742
    4. ' "' → logprob: -7.131437301635742
    5. '```' → logprob: -7.506437301635742
    6. 's' → logprob: -8.006437301635742
    7. '(' → logprob: -8.131437301635742
    8. '(i' → logprob: -8.631437301635742
    9. '_' → logprob: -8.756437301635742
    10. '_de' → logprob: -8.881437301635742

Token 248: ' des' (ID: 731)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17946511507034302
    2. '(' → logprob: -2.6794650554656982
    3. '(d' → logprob: -2.6794650554656982
    4. '(dis' → logprob: -4.179465293884277
    5. '(def' → logprob: -5.054465293884277
    6. '(i' → logprob: -6.554465293884277
    7. '(des' → logprob: -6.679465293884277
    8. ' (' → logprob: -7.304465293884277
    9. '(de' → logprob: -7.804465293884277
    10. 'of' → logprob: -8.429465293884277

Token 249: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.07499516010284424
    2. '#' → logprob: -3.6999950408935547
    3. ' discs' → logprob: -4.324995040893555
    4. 'ch' → logprob: -4.574995040893555
    5. 'each' → logprob: -4.949995040893555
    6. 'disc' → logprob: -5.699995040893555
    7. 'cha' → logprob: -6.199995040893555
    8. ' dis' → logprob: -6.199995040893555
    9. 'un' → logprob: -6.324995040893555
    10. ' chaque' → logprob: -6.324995040893555

Token 250: 'ques' (ID: 3531)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.025818530470132828
    2. 'c' → logprob: -3.7758185863494873
    3. 'ques' → logprob: -6.400818347930908
    4. '#' → logprob: -8.525818824768066
    5. 's' → logprob: -9.275818824768066
    6. 'ks' → logprob: -9.400818824768066
    7. 'qs' → logprob: -9.400818824768066
    8. 'cus' → logprob: -9.525818824768066
    9. 'que' → logprob: -9.650818824768066
    10. '```' → logprob: -9.900818824768066

Token 251: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010862821945920587
    2. '(def' → logprob: -7.751086235046387
    3. '(
' → logprob: -8.126086235046387
    4. '(' → logprob: -8.876086235046387
    5. ' def' → logprob: -9.376086235046387
    6. '(n' → logprob: -9.751086235046387
    7. '
' → logprob: -10.001086235046387
    8. ' (' → logprob: -11.751086235046387
    9. '(s' → logprob: -12.626086235046387
    10. '(i' → logprob: -12.626086235046387

Token 252: ' Un' (ID: 1367)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019461298361420631
    2. ' def' → logprob: -6.876945972442627
    3. '
' → logprob: -7.001945972442627
    4. ' 
' → logprob: -13.876946449279785
    5. '```' → logprob: -14.501946449279785
    6. '<|end|>' → logprob: -14.876946449279785
    7. '  
' → logprob: -15.001946449279785
    8. 'ndef' → logprob: -16.25194549560547
    9. '    
' → logprob: -16.50194549560547
    10. '#' → logprob: -16.75194549560547

Token 253: ' disque' (ID: 114222)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12992990016937256
    2. ' def' → logprob: -2.129930019378662
    3. ' disque' → logprob: -6.629930019378662
    4. 'dis' → logprob: -7.629930019378662
    5. ' disc' → logprob: -8.004929542541504
    6. 'disc' → logprob: -8.504929542541504
    7. '#' → logprob: -8.629929542541504
    8. 'e' → logprob: -9.504929542541504
    9. 'n' → logprob: -9.879929542541504
    10. ')' → logprob: -10.129929542541504

Token 254: ' est' (ID: 893)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7810131907463074
    2. ' i' → logprob: -1.6560132503509521
    3. 'i' → logprob: -2.656013250350952
    4. ' def' → logprob: -3.031013250350952
    5. ' n' → logprob: -3.156013250350952
    6. ' est' → logprob: -3.281013250350952
    7. 's' → logprob: -3.531013250350952
    8. 'n' → logprob: -3.781013250350952
    9. '   ' → logprob: -4.031013011932373
    10. 'd' → logprob: -4.156013011932373

Token 255: ' libre' (ID: 25486)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9902522563934326
    2. 'lib' → logprob: -0.9902522563934326
    3. 'free' → logprob: -2.1152522563934326
    4. 'not' → logprob: -2.8652522563934326
    5. 'visible' → logprob: -3.3652522563934326
    6. 'def' → logprob: -4.240252494812012
    7. '"' → logprob: -4.865252494812012
    8. ' libre' → logprob: -5.115252494812012
    9. '[i' → logprob: -6.240252494812012
    10. 'lambda' → logprob: -6.365252494812012

Token 256: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3931480348110199
    2. '(i' → logprob: -2.1431479454040527
    3. ' if' → logprob: -2.6431479454040527
    4. 'if' → logprob: -2.7681479454040527
    5. '[i' → logprob: -4.018147945404053
    6. 's' → logprob: -4.018147945404053
    7. '(s' → logprob: -4.768147945404053
    8. '(d' → logprob: -5.143147945404053
    9. ' def' → logprob: -5.518147945404053
    10. ' (' → logprob: -5.518147945404053

Token 257: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.4388950765132904
    2. 'il' → logprob: -1.0638951063156128
    3. 'auc' → logprob: -5.938895225524902
    4. '#' → logprob: -6.313895225524902
    5. ' il' → logprob: -6.688895225524902
    6. '’il' → logprob: -6.688895225524902
    7. 'i' → logprob: -7.063895225524902
    8. ' aucun' → logprob: -7.563895225524902
    9. '   ' → logprob: -7.938895225524902
    10. 'for' → logprob: -8.063895225524902

Token 258: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05473726987838745
    2. ' n' → logprob: -3.1797373294830322
    3. 'auc' → logprob: -5.054737091064453
    4. 'ne' → logprob: -6.304737091064453
    5. 'est' → logprob: -6.679737091064453
    6. ' aucun' → logprob: -7.054737091064453
    7. '   ' → logprob: -8.179737091064453
    8. '#' → logprob: -8.179737091064453
    9. ' est' → logprob: -8.679737091064453
    10. ' ne' → logprob: -9.554737091064453

Token 259: ''y' (ID: 27913)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.7902984023094177
    2. 'est' → logprob: -1.1652984619140625
    3. 'n' → logprob: -1.7902984619140625
    4. ''y' → logprob: -3.4152984619140625
    5. 'y' → logprob: -3.9152984619140625
    6. '#' → logprob: -4.7902984619140625
    7. ''ex' → logprob: -6.5402984619140625
    8. '’est' → logprob: -7.0402984619140625
    9. 'e' → logprob: -7.2902984619140625
    10. ''' → logprob: -7.4152984619140625

Token 260: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017842020839452744
    2. ' a' → logprob: -4.142841815948486
    3. 'est' → logprob: -7.142841815948486
    4. '#' → logprob: -8.267842292785645
    5. 'ex' → logprob: -8.767842292785645
    6. ''a' → logprob: -8.892842292785645
    7. 'is' → logprob: -9.142842292785645
    8. 'pas' → logprob: -9.642842292785645
    9. 'auc' → logprob: -9.642842292785645
    10. ' aucun' → logprob: -10.017842292785645

Token 261: ' aucun' (ID: 41678)
  Prédit: ' aucun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucun' → logprob: -0.28914883732795715
    2. 'auc' → logprob: -1.5391488075256348
    3. 'pas' → logprob: -3.5391488075256348
    4. ' aucune' → logprob: -5.664148807525635
    5. '#' → logprob: -6.539148807525635
    6. ' pas' → logprob: -6.789148807525635
    7. 'import' → logprob: -8.289149284362793
    8. 'au' → logprob: -8.289149284362793
    9. '```' → logprob: -8.289149284362793
    10. 'person' → logprob: -8.664149284362793

Token 262: ' disque' (ID: 114222)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.898134171962738
    2. ' disque' → logprob: -1.0231342315673828
    3. ' autre' → logprob: -1.8981342315673828
    4. 'aut' → logprob: -3.398134231567383
    5. 'disc' → logprob: -3.398134231567383
    6. '#' → logprob: -5.648134231567383
    7. '```' → logprob: -6.523134231567383
    8. 'j' → logprob: -6.648134231567383
    9. 'disk' → logprob: -6.648134231567383
    10. 'd' → logprob: -6.898134231567383

Token 263: ' 
' (ID: 793)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.21724443137645721
    2. ' au' → logprob: -2.2172443866729736
    3. 'qui' → logprob: -3.4672443866729736
    4. 'plus' → logprob: -4.217244625091553
    5. ' qui' → logprob: -4.467244625091553
    6. '   ' → logprob: -4.717244625091553
    7. 'sur' → logprob: -5.717244625091553
    8. '#' → logprob: -5.842244625091553
    9. ' plus' → logprob: -6.092244625091553
    10. 'd' → logprob: -6.092244625091553

Token 264: '#' (ID: 2)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.725054383277893
    2. 'sur' → logprob: -1.850054383277893
    3. '   ' → logprob: -1.975054383277893
    4. 'qui' → logprob: -2.1000542640686035
    5. 'au' → logprob: -2.3500542640686035
    6. 'i' → logprob: -2.8500542640686035
    7. ' au' → logprob: -3.1000542640686035
    8. ' i' → logprob: -3.2250542640686035
    9. '#' → logprob: -3.7250542640686035
    10. 'j' → logprob: -3.7250542640686035

Token 265: ' sur' (ID: 1512)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0525968074798584
    2. '#' → logprob: -1.9275968074798584
    3. 'k' → logprob: -2.3025968074798584
    4. 'd' → logprob: -2.4275968074798584
    5. 'au' → logprob: -2.5525968074798584
    6. 'qui' → logprob: -2.5525968074798584
    7. 'dis' → logprob: -3.1775968074798584
    8. 'plus' → logprob: -3.5525968074798584
    9. 'i' → logprob: -3.9275968074798584
    10. 'sur' → logprob: -4.0525970458984375

Token 266: ' lui' (ID: 10623)
  Prédit: ' lui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lui' → logprob: -0.07871009409427643
    2. 'l' → logprob: -3.3287100791931152
    3. 'un' → logprob: -4.203710079193115
    4. 'it' → logprob: -5.078710079193115
    5. '   ' → logprob: -6.078710079193115
    6. '#' → logprob: -6.078710079193115
    7. ' celui' → logprob: -6.203710079193115
    8. 'ce' → logprob: -6.453710079193115
    9. '```' → logprob: -6.453710079193115
    10. ' lequel' → logprob: -6.703710079193115

Token 267: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000636904442217201
    2. '
' → logprob: -7.750637054443359
    3. ' def' → logprob: -8.50063705444336
    4. ')
' → logprob: -14.00063705444336
    5. '   ' → logprob: -14.50063705444336
    6. '(def' → logprob: -15.37563705444336
    7. ' (' → logprob: -15.50063705444336
    8. '#' → logprob: -15.50063705444336
    9. '(
' → logprob: -15.75063705444336
    10. ',' → logprob: -16.00063705444336

Token 268: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3177729547023773
    2. 'def' → logprob: -1.6927729845046997
    3. ' )' → logprob: -4.19277286529541
    4. 'dis' → logprob: -4.31777286529541
    5. 'i' → logprob: -4.81777286529541
    6. ' i' → logprob: -4.94277286529541
    7. '   ' → logprob: -5.19277286529541
    8. 'len' → logprob: -5.56777286529541
    9. 'not' → logprob: -5.94277286529541
    10. ' def' → logprob: -6.06777286529541

Token 269: ''est' (ID: 6616)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6864545941352844
    2. ')' → logprob: -1.0614545345306396
    3. ''est' → logprob: -2.6864545345306396
    4. ''' → logprob: -3.3114545345306396
    5. '#' → logprob: -4.186454772949219
    6. 'u' → logprob: -4.436454772949219
    7. 'e' → logprob: -5.561454772949219
    8. 'i' → logprob: -6.061454772949219
    9. 'def' → logprob: -6.186454772949219
    10. 'ont' → logprob: -6.436454772949219

Token 270: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.016736922785639763
    2. 'à' → logprob: -4.51673698425293
    3. ' à' → logprob: -5.64173698425293
    4. '   ' → logprob: -6.76673698425293
    5. '-' → logprob: -8.76673698425293
    6. '#' → logprob: -9.01673698425293
    7. 'pas' → logprob: -9.01673698425293
    8. '    ' → logprob: -9.51673698425293
    9. 'a' → logprob: -9.76673698425293
    10. '_' → logprob: -9.89173698425293

Token 271: '-dire' (ID: 76064)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.18425212800502777
    2. 'à' → logprob: -2.8092520236968994
    3. 'dire' → logprob: -3.8092520236968994
    4. 'ucune' → logprob: -3.9342520236968994
    5. 'ucun' → logprob: -4.1842522621154785
    6. 'a' → logprob: -4.8092522621154785
    7. '-à' → logprob: -4.9342522621154785
    8. '```' → logprob: -5.6842522621154785
    9. 'None' → logprob: -5.8092522621154785
    10. '#' → logprob: -5.9342522621154785

Token 272: ' au' (ID: 2791)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.4729268252849579
    2. 'pas' → logprob: -1.9729268550872803
    3. ' aucun' → logprob: -2.4729268550872803
    4. '#' → logprob: -2.8479268550872803
    5. ' pas' → logprob: -3.4729268550872803
    6. 'def' → logprob: -4.222926616668701
    7. '   ' → logprob: -4.597926616668701
    8. ' aucune' → logprob: -5.097926616668701
    9. ')' → logprob: -5.222926616668701
    10. 'not' → logprob: -5.597926616668701

Token 273: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -1.4082562923431396
    2. 'pas' → logprob: -1.6582562923431396
    3. '-dessus' → logprob: -1.9082562923431396
    4. 'moins' → logprob: -2.0332562923431396
    5. ' dessus' → logprob: -2.2832562923431396
    6. '#' → logprob: -3.0332562923431396
    7. 'j' → logprob: -3.5332562923431396
    8. 'len' → logprob: -3.6582562923431396
    9. '   ' → logprob: -3.7832562923431396
    10. ')' → logprob: -4.408256530761719

Token 274: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0209053847938776
    2. ')
' → logprob: -4.520905494689941
    3. 'd' → logprob: -5.395905494689941
    4. ' )' → logprob: -6.895905494689941
    5. 'de' → logprob: -7.020905494689941
    6. 'des' → logprob: -7.145905494689941
    7. ')

' → logprob: -7.395905494689941
    8. 'i' → logprob: -7.895905494689941
    9. ')
' → logprob: -8.145905494689941
    10. 'def' → logprob: -8.645905494689941

Token 275: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.250000953674316
    3. ' def' → logprob: -16.5
    4. '```' → logprob: -17.875
    5. 'de' → logprob: -20.75
    6. 'ndef' → logprob: -21.375
    7. '   ' → logprob: -22.0
    8. ':def' → logprob: -22.125
    9. '``' → logprob: -22.5
    10. '    
' → logprob: -23.25

Token 276: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06235988065600395
    2. ' def' → logprob: -2.8123598098754883
    3. ')' → logprob: -9.062359809875488
    4. '_' → logprob: -9.312359809875488
    5. 'd' → logprob: -9.937359809875488
    6. '#' → logprob: -10.062359809875488
    7. ' déf' → logprob: -10.437359809875488
    8. 'n' → logprob: -11.437359809875488
    9. ' ' → logprob: -11.937359809875488
    10. 's' → logprob: -12.187359809875488

Token 277: 'él' (ID: 6778)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11196990311145782
    2. 'ifie' → logprob: -2.4869699478149414
    3. 'd' → logprob: -4.736969947814941
    4. 'de' → logprob: -5.861969947814941
    5. 'le' → logprob: -6.361969947814941
    6. 'l' → logprob: -6.861969947814941
    7. 'dé' → logprob: -6.861969947814941
    8. 'lf' → logprob: -6.986969947814941
    9. 'df' → logprob: -6.986969947814941
    10. 'f' → logprob: -7.486969947814941

Token 278: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -5.2166411478538066e-05
    2. 'is' → logprob: -10.375052452087402
    3. 'iser' → logprob: -12.000052452087402
    4. 'isé' → logprob: -12.375052452087402
    5. 'e' → logprob: -13.125052452087402
    6. 'aise' → logprob: -13.500052452087402
    7. 'isent' → logprob: -13.500052452087402
    8. '```' → logprob: -13.875052452087402
    9. 'isa' → logprob: -14.375052452087402
    10. 'yse' → logprob: -14.750052452087402

Token 279: ' cela' (ID: 17542)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002871684730052948
    2. '#' → logprob: -7.252871513366699
    3. 'la' → logprob: -7.252871513366699
    4. ' def' → logprob: -7.627871513366699
    5. '
' → logprob: -8.2528715133667
    6. ' la' → logprob: -8.5028715133667
    7. 'le' → logprob: -8.7528715133667
    8. 'une' → logprob: -9.1278715133667
    9. 'un' → logprob: -9.8778715133667
    10. 'les' → logprob: -10.1278715133667

Token 280: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00025942857610061765
    2. ' def' → logprob: -8.375259399414062
    3. '
' → logprob: -11.250259399414062
    4. ':
' → logprob: -11.875259399414062
    5. '(
' → logprob: -12.500259399414062
    6. '   ' → logprob: -13.625259399414062
    7. '):
' → logprob: -14.250259399414062
    8. ')
' → logprob: -14.625259399414062
    9. ':def' → logprob: -14.875259399414062
    10. '(def' → logprob: -14.875259399414062

Token 281: ' un' (ID: 537)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018216904252767563
    2. 'une' → logprob: -4.393217086791992
    3. 'un' → logprob: -5.393217086791992
    4. '
' → logprob: -8.018217086791992
    5. ' une' → logprob: -8.018217086791992
    6. 'la' → logprob: -9.143217086791992
    7. ' def' → logprob: -9.393217086791992
    8. '#' → logprob: -9.893217086791992
    9. ' un' → logprob: -10.018217086791992
    10. 'a' → logprob: -10.143217086791992

Token 282: ' grap' (ID: 60955)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010229727253317833
    2. 'liste' → logprob: -6.635229587554932
    3. ' tableau' → logprob: -6.760229587554932
    4. ' def' → logprob: -6.885229587554932
    5. '#' → logprob: -6.885229587554932
    6. 'list' → logprob: -7.385229587554932
    7. 'tab' → logprob: -7.635229587554932
    8. 'set' → logprob: -7.635229587554932
    9. '
' → logprob: -7.760229587554932
    10. 'for' → logprob: -7.760229587554932

Token 283: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.63142991065979
    2. 'he' → logprob: -0.88142991065979
    3. 'aphe' → logprob: -3.50642991065979
    4. 'ph' → logprob: -4.131429672241211
    5. 'phe' → logprob: -5.256429672241211
    6. '#' → logprob: -6.381429672241211
    7. 'heme' → logprob: -8.256429672241211
    8. 'aph' → logprob: -8.756429672241211
    9. '   ' → logprob: -8.756429672241211
    10. '

' → logprob: -9.756429672241211

Token 284: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08865849673748016
    2. 'class' → logprob: -2.838658571243286
    3. '
' → logprob: -3.838658571243286
    4. '#' → logprob: -5.588658332824707
    5. ' def' → logprob: -8.588658332824707
    6. ':
' → logprob: -8.963658332824707
    7. 'import' → logprob: -8.963658332824707
    8. '#
' → logprob: -8.963658332824707
    9. ',
' → logprob: -9.338658332824707
    10. ',' → logprob: -9.588658332824707

Token 285: ''ar' (ID: 54307)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005378898698836565
    2. ''ad' → logprob: -6.005378723144531
    3. '#' → logprob: -7.255378723144531
    4. 'ad' → logprob: -7.630378723144531
    5. 'e' → logprob: -8.380378723144531
    6. 'inter' → logprob: -8.380378723144531
    7. ''inter' → logprob: -9.255378723144531
    8. '

' → logprob: -9.380378723144531
    9. '```' → logprob: -9.380378723144531
    10. 'depend' → logprob: -9.505378723144531

Token 286: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.7145393490791321
    2. 'cs' → logprob: -1.0895392894744873
    3. 'r' → logprob: -1.9645392894744873
    4. 'etes' → logprob: -4.089539527893066
    5. 'c' → logprob: -4.714539527893066
    6. 'tes' → logprob: -5.839539527893066
    7. 'g' → logprob: -6.839539527893066
    8. '#' → logprob: -7.214539527893066
    9. 'ête' → logprob: -7.339539527893066
    10. 'e' → logprob: -7.339539527893066

Token 287: ' i' (ID: 575)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2944623231887817
    2. '#' → logprob: -1.5444623231887817
    3. ' dirig' → logprob: -1.5444623231887817
    4. 'direct' → logprob: -1.9194623231887817
    5. ' directed' → logprob: -3.169462203979492
    6. 'd' → logprob: -4.044462203979492
    7. 'adj' → logprob: -4.044462203979492
    8. 'de' → logprob: -4.669462203979492
    9. 'orient' → logprob: -4.794462203979492
    10. ' =' → logprob: -5.169462203979492

Token 288: '->' (ID: 609)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -1.5438154935836792
    2. '_sur' → logprob: -2.0438156127929688
    3. 'u' → logprob: -2.1688156127929688
    4. ' =' → logprob: -2.5438156127929688
    5. 'es' → logprob: -2.6688156127929688
    6. ',' → logprob: -2.6688156127929688
    7. '->' → logprob: -2.6688156127929688
    8. '   ' → logprob: -3.4188156127929688
    9. 'sur' → logprob: -3.7938156127929688
    10. ' for' → logprob: -4.168815612792969

Token 289: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006715967319905758
    2. ' j' → logprob: -5.006715774536133
    3. 'i' → logprob: -16.006715774536133
    4. '   ' → logprob: -16.256715774536133
    5. '	j' → logprob: -16.631715774536133
    6. 'k' → logprob: -16.756715774536133
    7. ' ' → logprob: -17.131715774536133
    8. ' ' → logprob: -17.131715774536133
    9. '_j' → logprob: -17.506715774536133
    10. '>' → logprob: -18.006715774536133

Token 290: ' sign' (ID: 2232)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0045770383439958096
    2. '
' → logprob: -5.504577159881592
    3. ' def' → logprob: -8.629576683044434
    4. '#' → logprob: -8.629576683044434
    5. '#
' → logprob: -10.129576683044434
    6. '(
' → logprob: -10.629576683044434
    7. ':
' → logprob: -10.754576683044434
    8. 'class' → logprob: -11.254576683044434
    9. ',
' → logprob: -11.879576683044434
    10. ',' → logprob: -12.504576683044434

Token 291: 'ifiant' (ID: 91447)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.8915423154830933
    2. 'ifiant' → logprob: -1.0165423154830933
    3. 'if' → logprob: -1.8915423154830933
    4. 'ant' → logprob: -4.141542434692383
    5. 'ificant' → logprob: -4.141542434692383
    6. 'ale' → logprob: -4.141542434692383
    7. 'e' → logprob: -5.016542434692383
    8. '#' → logprob: -5.141542434692383
    9. 'ifie' → logprob: -5.391542434692383
    10. 'aling' → logprob: -6.016542434692383

Token 292: ' i' (ID: 575)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2571711838245392
    2. 'que' → logprob: -1.6321711540222168
    3. '"' → logprob: -5.007171154022217
    4. '   ' → logprob: -5.007171154022217
    5. ' that' → logprob: -5.757171154022217
    6. 'i' → logprob: -5.882171154022217
    7. 'qu' → logprob: -5.882171154022217
    8. ' qu' → logprob: -6.257171154022217
    9. ' i' → logprob: -6.257171154022217
    10. 'that' → logprob: -6.257171154022217

Token 293: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3031443655490875
    2. 'est' → logprob: -1.6781443357467651
    3. ' is' → logprob: -4.178144454956055
    4. ' n' → logprob: -4.178144454956055
    5. ' sur' → logprob: -4.303144454956055
    6. 'sur' → logprob: -4.928144454956055
    7. 'n' → logprob: -5.053144454956055
    8. '#' → logprob: -5.678144454956055
    9. ' ' → logprob: -5.803144454956055
    10. ' a' → logprob: -6.053144454956055

Token 294: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.12419933080673218
    2. 'au' → logprob: -2.999199390411377
    3. ' sur' → logprob: -3.124199390411377
    4. ' au' → logprob: -4.124199390411377
    5. ' dessus' → logprob: -5.624199390411377
    6. '_sur' → logprob: -6.624199390411377
    7. ' rec' → logprob: -7.999199390411377
    8. 'dess' → logprob: -8.249198913574219
    9. '#' → logprob: -8.749198913574219
    10. 's' → logprob: -9.249198913574219

Token 295: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38708460330963135
    2. ' j' → logprob: -1.1370846033096313
    3. '   ' → logprob: -8.8870849609375
    4. '	j' → logprob: -9.7620849609375
    5. ',j' → logprob: -12.6370849609375
    6. ' ' → logprob: -12.7620849609375
    7. ',' → logprob: -13.0120849609375
    8. '_j' → logprob: -13.2620849609375
    9. '    ' → logprob: -13.3870849609375
    10. '[j' → logprob: -13.7620849609375

Token 296: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.9424725148128346e-05
    2. '
' → logprob: -10.125049591064453
    3. '#' → logprob: -12.625049591064453
    4. ' def' → logprob: -13.000049591064453
    5. 'class' → logprob: -13.375049591064453
    6. '#
' → logprob: -14.000049591064453
    7. ',
' → logprob: -15.625049591064453
    8. '\' → logprob: -15.625049591064453
    9. '(
' → logprob: -15.875049591064453
    10. ')
' → logprob: -16.125049591064453

Token 297: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -13.750000953674316
    3. ' def' → logprob: -16.750001907348633
    4. 'class' → logprob: -19.125001907348633
    5. '```' → logprob: -19.750001907348633
    6. 'de' → logprob: -20.625001907348633
    7. 'ndef' → logprob: -21.250001907348633
    8. '    
' → logprob: -21.500001907348633
    9. '   ' → logprob: -21.750001907348633
    10. ' 
' → logprob: -22.875001907348633

Token 298: ' Ensuite' (ID: 113884)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. 'class' → logprob: -15.125000953674316
    3. ' def' → logprob: -15.250000953674316
    4. '
' → logprob: -16.125
    5. '#' → logprob: -19.375
    6. 'import' → logprob: -21.0
    7. 'de' → logprob: -21.125
    8. '```' → logprob: -21.5
    9. 'from' → logprob: -22.125
    10. 'ndef' → logprob: -22.5

Token 299: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01820601336658001
    2. '#' → logprob: -4.8932061195373535
    3. ' on' → logprob: -5.3932061195373535
    4. '   ' → logprob: -5.6432061195373535
    5. ' def' → logprob: -6.3932061195373535
    6. 'on' → logprob: -7.7682061195373535
    7. '
' → logprob: -8.768205642700195
    8. ' #' → logprob: -9.393205642700195
    9. 'for' → logprob: -10.018205642700195
    10. ' for' → logprob: -11.143205642700195

Token 300: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44346198439598083
    2. '#' → logprob: -1.4434620141983032
    3. 'free' → logprob: -2.1934618949890137
    4. ' free' → logprob: -5.193461894989014
    5. ' def' → logprob: -6.818461894989014
    6. ' on' → logprob: -7.068461894989014
    7. 'on' → logprob: -7.193461894989014
    8. ' #' → logprob: -7.443461894989014
    9. 'n' → logprob: -7.568461894989014
    10. '
' → logprob: -7.943461894989014

Token 301: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010130415903404355
    2. '#' → logprob: -7.626013278961182
    3. 'for' → logprob: -8.376012802124023
    4. ' def' → logprob: -8.501012802124023
    5. 'dé' → logprob: -11.001012802124023
    6. 'continue' → logprob: -11.376012802124023
    7. 'pe' → logprob: -11.876012802124023
    8. ' for' → logprob: -12.126012802124023
    9. '   ' → logprob: -12.251012802124023
    10. 's' → logprob: -12.376012802124023

Token 302: ' calcul' (ID: 7559)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10696591436862946
    2. 'dé' → logprob: -3.481966018676758
    3. 'for' → logprob: -3.981966018676758
    4. '#' → logprob: -4.606966018676758
    5. 'faire' → logprob: -4.856966018676758
    6. 'contin' → logprob: -4.856966018676758
    7. 'tr' → logprob: -5.356966018676758
    8. '   ' → logprob: -5.481966018676758
    9. '```' → logprob: -6.356966018676758
    10. 'util' → logprob: -6.481966018676758

Token 303: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0007173155900090933
    2. 'e' → logprob: -7.3757171630859375
    3. '#' → logprob: -9.375717163085938
    4. 'ate' → logprob: -12.875717163085938
    5. '```' → logprob: -13.625717163085938
    6. 'ler' → logprob: -14.625717163085938
    7. 'r' → logprob: -15.125717163085938
    8. '
' → logprob: -15.625717163085938
    9. '   ' → logprob: -15.750717163085938
    10. 'rer' → logprob: -15.875717163085938

Token 304: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.003057837486267
    2. 'la' → logprob: -1.378057837486267
    3. 'le' → logprob: -1.628057837486267
    4. 'pour' → logprob: -3.0030579566955566
    5. 'l' → logprob: -3.1280579566955566
    6. 'for' → logprob: -3.6280579566955566
    7. ' la' → logprob: -4.003057956695557
    8. 'une' → logprob: -4.003057956695557
    9. 'un' → logprob: -4.378057956695557
    10. '#' → logprob: -5.128057956695557

Token 305: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.8460903167724609
    2. 'free' → logprob: -1.596090316772461
    3. '#' → logprob: -1.971090316772461
    4. 'in' → logprob: -2.846090316772461
    5. 'nb' → logprob: -3.596090316772461
    6. '```' → logprob: -3.721090316772461
    7. ' free' → logprob: -3.971090316772461
    8. 'ind' → logprob: -4.346090316772461
    9. ' nombre' → logprob: -4.721090316772461
    10. 'lib' → logprob: -5.221090316772461

Token 306: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2063179016113281
    2. 'def' → logprob: -1.3313179016113281
    3. 'de' → logprob: -1.4563179016113281
    4. 'd' → logprob: -2.331317901611328
    5. '#' → logprob: -3.331317901611328
    6. '   ' → logprob: -3.456317901611328
    7. ' d' → logprob: -3.831317901611328
    8. 'import' → logprob: -5.706317901611328
    9. '_de' → logprob: -6.081317901611328
    10. ' des' → logprob: -6.206317901611328

Token 307: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.33694344758987427
    2. 'free' → logprob: -2.3369433879852295
    3. 'lib' → logprob: -2.5869433879852295
    4. ' free' → logprob: -2.9619433879852295
    5. ' libres' → logprob: -3.8369433879852295
    6. ' dis' → logprob: -4.086943626403809
    7. 'j' → logprob: -5.586943626403809
    8. 'ar' → logprob: -5.711943626403809
    9. ' libre' → logprob: -5.836943626403809
    10. ' j' → logprob: -5.961943626403809

Token 308: 'ques' (ID: 3531)
  Prédit: 'ques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.006907890550792217
    2. '```' → logprob: -6.256907939910889
    3. 'cs' → logprob: -6.756907939910889
    4. '``' → logprob: -7.131907939910889
    5. '   ' → logprob: -7.756907939910889
    6. 'q' → logprob: -8.13190746307373
    7. 'c' → logprob: -8.50690746307373
    8. '`' → logprob: -8.50690746307373
    9. '

' → logprob: -8.88190746307373
    10. 'que' → logprob: -9.00690746307373

Token 309: ' sur' (ID: 1512)
  Prédit: ' libres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' libres' → logprob: -0.605732262134552
    2. ' libre' → logprob: -1.7307322025299072
    3. 'lib' → logprob: -1.8557322025299072
    4. 's' → logprob: -3.9807322025299072
    5. 'free' → logprob: -4.105732440948486
    6. 'de' → logprob: -4.355732440948486
    7. ' de' → logprob: -4.605732440948486
    8. 'd' → logprob: -4.605732440948486
    9. 'def' → logprob: -4.730732440948486
    10. '#' → logprob: -4.730732440948486

Token 310: ' chacun' (ID: 52136)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5718766450881958
    2. ' chacun' → logprob: -1.8218766450881958
    3. ' j' → logprob: -2.0718765258789062
    4. ' each' → logprob: -3.0718765258789062
    5. ' un' → logprob: -3.4468765258789062
    6. 'j' → logprob: -3.8218765258789062
    7. 'each' → logprob: -3.8218765258789062
    8. 'un' → logprob: -4.821876525878906
    9. ' le' → logprob: -5.946876525878906
    10. '#' → logprob: -6.196876525878906

Token 311: ',' (ID: 11)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.2876255512237549
    2. 'range' → logprob: -1.6626255512237549
    3. 'des' → logprob: -1.6626255512237549
    4. 'for' → logprob: -1.9126255512237549
    5. 'def' → logprob: -2.662625551223755
    6. '   ' → logprob: -3.037625551223755
    7. ' range' → logprob: -3.412625551223755
    8. '#' → logprob: -4.662625312805176
    9. 'd' → logprob: -4.662625312805176
    10. ' for' → logprob: -5.537625312805176

Token 312: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1030607670545578
    2. 'free' → logprob: -2.728060722351074
    3. 'def' → logprob: -4.728060722351074
    4. 'n' → logprob: -4.853060722351074
    5. ' #' → logprob: -5.353060722351074
    6. ' free' → logprob: -5.603060722351074
    7. 'nb' → logprob: -6.603060722351074
    8. 'sur' → logprob: -6.603060722351074
    9. 'state' → logprob: -7.603060722351074
    10. 'le' → logprob: -7.853060722351074

Token 313: ' détect' (ID: 118715)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5014427304267883
    2. ' #' → logprob: -2.0014426708221436
    3. 'def' → logprob: -3.3764426708221436
    4. '   ' → logprob: -3.3764426708221436
    5. 'ret' → logprob: -3.6264426708221436
    6. 'return' → logprob: -3.7514426708221436
    7. ' retourner' → logprob: -3.7514426708221436
    8. 'les' → logprob: -3.8764426708221436
    9. ' les' → logprob: -4.251442909240723
    10. ' donc' → logprob: -4.501442909240723

Token 314: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.02114643156528473
    2. 'e' → logprob: -3.896146535873413
    3. 'ion' → logprob: -8.146146774291992
    4. '#' → logprob: -8.771146774291992
    5. '   ' → logprob: -9.771146774291992
    6. 'ent' → logprob: -9.771146774291992
    7. 'def' → logprob: -11.271146774291992
    8. 'é' → logprob: -11.521146774291992
    9. '       ' → logprob: -12.396146774291992
    10. '=' → logprob: -13.021146774291992

Token 315: ' ceux' (ID: 26863)
  Prédit: ' ceux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.12921226024627686
    2. 'les' → logprob: -2.7542123794555664
    3. ' les' → logprob: -3.1292123794555664
    4. ' lesquels' → logprob: -4.754212379455566
    5. ' quels' → logprob: -6.629212379455566
    6. ' quelles' → logprob: -7.629212379455566
    7. ' celles' → logprob: -7.879212379455566
    8. 's' → logprob: -8.004212379455566
    9. 'qu' → logprob: -8.379212379455566
    10. 'pour' → logprob: -8.504212379455566

Token 316: ' sans' (ID: 9828)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18524986505508423
    2. ' qui' → logprob: -2.5602498054504395
    3. '   ' → logprob: -3.1852498054504395
    4. 'qui' → logprob: -3.8102498054504395
    5. ' des' → logprob: -4.3102498054504395
    6. ' #' → logprob: -5.0602498054504395
    7. 'd' → logprob: -6.0602498054504395
    8. ' de' → logprob: -6.9352498054504395
    9. 'des' → logprob: -7.1852498054504395
    10. 'import' → logprob: -7.4352498054504395

Token 317: ' disque' (ID: 114222)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3444931209087372
    2. 'auc' → logprob: -1.8444931507110596
    3. ' aucun' → logprob: -2.7194931507110596
    4. ' ar' → logprob: -3.9694931507110596
    5. ' aucune' → logprob: -3.9694931507110596
    6. 'incoming' → logprob: -4.9694929122924805
    7. 'are' → logprob: -5.8444929122924805
    8. 'any' → logprob: -5.9694929122924805
    9. ' incoming' → logprob: -6.2194929122924805
    10. 'sur' → logprob: -6.3444929122924805

Token 318: ' au' (ID: 2791)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.9273269176483154
    2. '#' → logprob: -1.3023269176483154
    3. ' dessus' → logprob: -2.0523269176483154
    4. 'au' → logprob: -2.1773269176483154
    5. 's' → logprob: -3.3023269176483154
    6. ' au' → logprob: -4.0523271560668945
    7. 'def' → logprob: -4.6773271560668945
    8. 'dess' → logprob: -5.0523271560668945
    9. '_sur' → logprob: -5.6773271560668945
    10. 'on' → logprob: -5.8023271560668945

Token 319: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.14327682554721832
    2. '-dessus' → logprob: -2.0182769298553467
    3. ' dessus' → logprob: -8.268277168273926
    4. 'c' → logprob: -8.393277168273926
    5. 'des' → logprob: -10.393277168273926
    6. '-dessous' → logprob: -10.393277168273926
    7. '   ' → logprob: -11.143277168273926
    8. '-dess' → logprob: -11.768277168273926
    9. 'd' → logprob: -12.018277168273926
    10. '```' → logprob: -12.393277168273926

Token 320: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.85235276655294e-05
    2. '
' → logprob: -9.375088691711426
    3. '#' → logprob: -13.500088691711426
    4. 'class' → logprob: -13.625088691711426
    5. ' def' → logprob: -14.625088691711426
    6. '```' → logprob: -15.375088691711426
    7. '#
' → logprob: -16.00008773803711
    8. 'import' → logprob: -16.75008773803711
    9. 'from' → logprob: -17.00008773803711
    10. 'de' → logprob: -17.25008773803711

Token 321: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.7697225252486533e-06
    2. '
' → logprob: -12.500003814697266
    3. ' def' → logprob: -18.375003814697266
    4. '    
' → logprob: -19.875003814697266
    5. '```' → logprob: -20.000003814697266
    6. 'class' → logprob: -20.375003814697266
    7. 'de' → logprob: -20.625003814697266
    8. '

' → logprob: -21.250003814697266
    9. '#' → logprob: -21.250003814697266
    10. '  
' → logprob: -21.750003814697266

Token 322: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.25609076023101807
    2. 'def' → logprob: -2.2560906410217285
    3. 'free' → logprob: -2.7560906410217285
    4. 'calculate' → logprob: -3.2560906410217285
    5. ' compute' → logprob: -4.6310906410217285
    6. 'build' → logprob: -5.7560906410217285
    7. ' def' → logprob: -6.6310906410217285
    8. 'get' → logprob: -6.7560906410217285
    9. ' free' → logprob: -6.7560906410217285
    10. 'calc' → logprob: -7.0060906410217285

Token 323: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.057704564183950424
    2. '_state' → logprob: -3.057704448699951
    3. '_states' → logprob: -5.307704448699951
    4. '_status' → logprob: -6.182704448699951
    5. '_top' → logprob: -7.432704448699951
    6. '_graph' → logprob: -8.18270492553711
    7. '_f' → logprob: -8.68270492553711
    8. '_stack' → logprob: -8.80770492553711
    9. '_on' → logprob: -9.43270492553711
    10. '_dis' → logprob: -9.43270492553711

Token 324: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -0.27723169326782227
    2. '_dis' → logprob: -1.9022316932678223
    3. '_states' → logprob: -2.6522316932678223
    4. '(' → logprob: -4.652231693267822
    5. '_state' → logprob: -5.277231693267822
    6. '(d' → logprob: -5.902231693267822
    7. 's' → logprob: -6.402231693267822
    8. 'dis' → logprob: -6.902231693267822
    9. '_status' → logprob: -7.027231693267822
    10. '_disc' → logprob: -7.152231693267822

Token 325: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0008117707911878824
    2. 's' → logprob: -8.000811576843262
    3. '   ' → logprob: -8.875811576843262
    4. ')' → logprob: -9.375811576843262
    5. '```' → logprob: -9.375811576843262
    6. 'ks' → logprob: -10.000811576843262
    7. '_' → logprob: -11.000811576843262
    8. '(' → logprob: -11.250811576843262
    9. '_cs' → logprob: -11.625811576843262
    10. ' cs' → logprob: -11.625811576843262

Token 326: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038075923919677734
    2. '):
' → logprob: -3.2880759239196777
    3. '):
' → logprob: -11.288076400756836
    4. ' ):' → logprob: -11.288076400756836
    5. '   ' → logprob: -12.288076400756836
    6. ')' → logprob: -12.913076400756836
    7. ',' → logprob: -14.163076400756836
    8. ':' → logprob: -14.663076400756836
    9. '):

' → logprob: -14.663076400756836
    10. ' ):
' → logprob: -15.788076400756836

Token 327: ' removed' (ID: 11906)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1433367282152176
    2. ' n' → logprob: -2.518336772918701
    3. '):
' → logprob: -4.268336772918701
    4. ')' → logprob: -4.518336772918701
    5. 'N' → logprob: -4.893336772918701
    6. 'free' → logprob: -5.143336772918701
    7. 'num' → logprob: -6.143336772918701
    8. '   ' → logprob: -6.143336772918701
    9. ' free' → logprob: -7.018336772918701
    10. 'nb' → logprob: -7.143336772918701

Token 328: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04260149598121643
    2. '):
' → logprob: -3.2926015853881836
    3. ',' → logprob: -5.917601585388184
    4. '):
' → logprob: -8.042601585388184
    5. '=[]' → logprob: -8.292601585388184
    6. 'dis' → logprob: -8.417601585388184
    7. '=' → logprob: -8.542601585388184
    8. '_indices' → logprob: -8.667601585388184
    9. ' ):' → logprob: -9.042601585388184
    10. ')' → logprob: -9.167601585388184

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044853273779153824
    2. ':' → logprob: -3.1698532104492188
    3. ':
' → logprob: -6.419853210449219
    4. '):' → logprob: -9.419853210449219
    5. '):
' → logprob: -9.544853210449219
    6. '    
' → logprob: -11.044853210449219
    7. ' :' → logprob: -11.294853210449219
    8. '```' → logprob: -11.669853210449219
    9. 'n' → logprob: -12.169853210449219
    10. ' :
' → logprob: -12.794853210449219

Token 330: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.7993450164794922
    2. ' n' → logprob: -1.1743450164794922
    3. '   ' → logprob: -1.4243450164794922
    4. 'free' → logprob: -8.299345016479492
    5. ' free' → logprob: -8.799345016479492
    6. ' ' → logprob: -9.299345016479492
    7. '	n' → logprob: -9.549345016479492
    8. 'N' → logprob: -10.924345016479492
    9. '
' → logprob: -10.924345016479492
    10. '       ' → logprob: -11.174345016479492

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014179028570652008
    2. '=' → logprob: -4.264179229736328
    3. '=len' → logprob: -11.389179229736328
    4. '   ' → logprob: -12.889179229736328
    5. ')' → logprob: -13.889179229736328
    6. ' ' → logprob: -14.764179229736328
    7. '=int' → logprob: -15.264179229736328
    8. '    ' → logprob: -16.389179229736328
    9. ' =
' → logprob: -16.764179229736328
    10. '  ' → logprob: -17.639179229736328

Token 332: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01416350994259119
    2. ' len' → logprob: -4.264163494110107
    3. '(len' → logprob: -19.139163970947266
    4. '   ' → logprob: -20.139163970947266
    5. '[len' → logprob: -20.514163970947266
    6. '	len' → logprob: -21.639163970947266
    7. '=len' → logprob: -21.889163970947266
    8. 'Len' → logprob: -24.889163970947266
    9. ',len' → logprob: -25.014163970947266
    10. 'length' → logprob: -25.514163970947266

Token 333: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -2.5776860184123507e-06
    2. '(d' → logprob: -13.75000286102295
    3. 'dis' → logprob: -14.00000286102295
    4. '(' → logprob: -14.37500286102295
    5. ' (' → logprob: -17.500001907348633
    6. '(dist' → logprob: -18.625001907348633
    7. '	dis' → logprob: -19.375001907348633
    8. '(di' → logprob: -19.750001907348633
    9. '(rem' → logprob: -20.125001907348633
    10. '/dis' → logprob: -20.625001907348633

Token 334: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.033190879970788956
    2. 's' → logprob: -3.533190965652466
    3. 'sc' → logprob: -6.033190727233887
    4. ')' → logprob: -7.783190727233887
    5. '   ' → logprob: -8.408190727233887
    6. 'is' → logprob: -9.033190727233887
    7. ')
' → logprob: -9.283190727233887
    8. 'acs' → logprob: -9.658190727233887
    9. 'dis' → logprob: -10.408190727233887
    10. '```' → logprob: -10.908190727233887

Token 335: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521781325340271
    2. ')' → logprob: -1.5021781921386719
    3. ' )
' → logprob: -8.752178192138672
    4. '   ' → logprob: -10.002178192138672
    5. ')
' → logprob: -10.752178192138672
    6. ' )' → logprob: -10.752178192138672
    7. ')

' → logprob: -13.002178192138672
    8. ' ' → logprob: -15.377178192138672
    9. '
' → logprob: -17.002178192138672
    10. ')#' → logprob: -17.002178192138672

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060637056827545166
    2. 'free' → logprob: -2.9356369972229004
    3. 'over' → logprob: -6.1856369972229
    4. 'above' → logprob: -6.6856369972229
    5. 'on' → logprob: -6.8106369972229
    6. ' free' → logprob: -7.9356369972229
    7. 'count' → logprob: -8.310637474060059
    8. 'counts' → logprob: -8.560637474060059
    9. '    
' → logprob: -9.685637474060059
    10. 'in' → logprob: -9.810637474060059

Token 337: ' #' (ID: 1069)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.934885561466217
    2. 'on' → logprob: -1.1848855018615723
    3. 'over' → logprob: -1.4348855018615723
    4. 'free' → logprob: -3.4348855018615723
    5. '   ' → logprob: -4.434885501861572
    6. ' on' → logprob: -5.184885501861572
    7. 'under' → logprob: -5.809885501861572
    8. 'count' → logprob: -6.434885501861572
    9. 'below' → logprob: -6.434885501861572
    10. ' above' → logprob: -6.559885501861572

Token 338: ' Pour' (ID: 13931)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.983869731426239
    2. 'above' → logprob: -1.1088697910308838
    3. 'over' → logprob: -1.4838697910308838
    4. 'free' → logprob: -3.233869791030884
    5. 'under' → logprob: -4.858869552612305
    6. 'count' → logprob: -5.233869552612305
    7. 'below' → logprob: -5.358869552612305
    8. 'ons' → logprob: -6.233869552612305
    9. 'counts' → logprob: -6.483869552612305
    10. ' on' → logprob: -7.233869552612305

Token 339: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47018587589263916
    2. ' i' → logprob: -2.2201857566833496
    3. 'range' → logprob: -2.2201857566833496
    4. 'each' → logprob: -2.5951857566833496
    5. '[i' → logprob: -3.7201857566833496
    6. ' range' → logprob: -4.09518575668335
    7. ' each' → logprob: -4.84518575668335
    8. 'count' → logprob: -4.97018575668335
    9. 'free' → logprob: -5.47018575668335
    10. ' free' → logprob: -5.72018575668335

Token 340: ' disque' (ID: 114222)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03245362266898155
    2. 'disc' → logprob: -4.407453536987305
    3. ' i' → logprob: -4.532453536987305
    4. 'j' → logprob: -5.407453536987305
    5. 'dis' → logprob: -6.157453536987305
    6. 'node' → logprob: -7.407453536987305
    7. 'disk' → logprob: -7.407453536987305
    8. ' disc' → logprob: -7.532453536987305
    9. '   ' → logprob: -8.907453536987305
    10. ' j' → logprob: -9.032453536987305

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7190768122673035
    2. '   ' → logprob: -0.8440768122673035
    3. 'on' → logprob: -4.094076633453369
    4. ' on' → logprob: -4.219076633453369
    5. 'over' → logprob: -4.469076633453369
    6. 'free' → logprob: -4.594076633453369
    7. 'above' → logprob: -5.219076633453369
    8. ' free' → logprob: -5.469076633453369
    9. 'count' → logprob: -5.969076633453369
    10. 'sur' → logprob: -6.094076633453369

Token 342: ' liste' (ID: 31719)
  Prédit: ' dessus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dessus' → logprob: -1.262692928314209
    2. ' on' → logprob: -1.637692928314209
    3. 'above' → logprob: -1.762692928314209
    4. 'on' → logprob: -2.637692928314209
    5. 'over' → logprob: -2.762692928314209
    6. 'count' → logprob: -3.137692928314209
    7. ' above' → logprob: -3.512692928314209
    8. ' nb' → logprob: -3.762692928314209
    9. ' count' → logprob: -4.012692928314209
    10. ' under' → logprob: -4.387692928314209

Token 343: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3087677955627441
    2. ' des' → logprob: -2.058767795562744
    3. 'sur' → logprob: -2.433767795562744
    4. ' =' → logprob: -2.433767795562744
    5. '_sur' → logprob: -2.808767795562744
    6. '[]' → logprob: -3.058767795562744
    7. ' de' → logprob: -3.308767795562744
    8. ' sur' → logprob: -3.308767795562744
    9. '_edges' → logprob: -3.433767795562744
    10. ' of' → logprob: -3.683767795562744

Token 344: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.48700714111328125
    2. 'indices' → logprob: -1.9870071411132812
    3. 'j' → logprob: -2.6120071411132812
    4. ' indices' → logprob: -3.1120071411132812
    5. 'sur' → logprob: -3.2370071411132812
    6. 'indexes' → logprob: -3.8620071411132812
    7. 'adj' → logprob: -4.237007141113281
    8. ' j' → logprob: -4.987007141113281
    9. 'i' → logprob: -4.987007141113281
    10. ' dis' → logprob: -5.112007141113281

Token 345: 'ques' (ID: 3531)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8166648745536804
    2. 'c' → logprob: -2.066664934158325
    3. 'cs' → logprob: -2.191664934158325
    4. 'sk' → logprob: -2.566664934158325
    5. 'sc' → logprob: -2.941664934158325
    6. 'is' → logprob: -3.066664934158325
    7. 's' → logprob: -3.316664934158325
    8. 'ks' → logprob: -4.191664695739746
    9. 'ces' → logprob: -4.316664695739746
    10. 'ques' → logprob: -4.816664695739746

Token 346: ' directement' (ID: 52317)
  Prédit: '_sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.6463968753814697
    2. 'sur' → logprob: -1.6463968753814697
    3. 'au' → logprob: -2.5213968753814697
    4. 'qui' → logprob: -2.7713968753814697
    5. '   ' → logprob: -3.1463968753814697
    6. '_s' → logprob: -3.5213968753814697
    7. '_' → logprob: -3.6463968753814697
    8. 's' → logprob: -4.771396636962891
    9. ' au' → logprob: -5.021396636962891
    10. ' qui' → logprob: -5.146396636962891

Token 347: ' dessus' (ID: 67454)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.15337331593036652
    2. 'sur' → logprob: -2.5283732414245605
    3. 'dess' → logprob: -3.2783732414245605
    4. ' au' → logprob: -4.2783732414245605
    5. ' dessus' → logprob: -4.9033732414245605
    6. 'ont' → logprob: -7.4033732414245605
    7. 'above' → logprob: -7.4033732414245605
    8. ' dessous' → logprob: -7.7783732414245605
    9. 's' → logprob: -7.9033732414245605
    10. 'sus' → logprob: -7.9033732414245605

Token 348: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9473990797996521
    2. 'above' → logprob: -1.4473991394042969
    3. 'on' → logprob: -1.8223991394042969
    4. ' on' → logprob: -2.947399139404297
    5. 'over' → logprob: -3.072399139404297
    6. ' =' → logprob: -3.072399139404297
    7. ' above' → logprob: -3.822399139404297
    8. 'sur' → logprob: -4.822399139404297
    9. '_on' → logprob: -4.822399139404297
    10. ' dessus' → logprob: -5.197399139404297

Token 349: 'i' (ID: 72)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0922472476959229
    2. '[i' → logprob: -1.2172472476959229
    3. '[])' → logprob: -1.2172472476959229
    4. ')' → logprob: -3.967247247695923
    5. '[' → logprob: -4.342247009277344
    6. '[])
' → logprob: -4.717247009277344
    7. '   ' → logprob: -5.217247009277344
    8. 'above' → logprob: -5.342247009277344
    9. 'on' → logprob: -5.717247009277344
    10. 'adj' → logprob: -5.967247009277344

Token 350: ' ->' (ID: 2747)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2625354528427124
    2. 's' → logprob: -1.7625354528427124
    3. ')' → logprob: -2.012535572052002
    4. '_on' → logprob: -2.137535572052002
    5. '   ' → logprob: -3.012535572052002
    6. '_sur' → logprob: -3.387535572052002
    7. '=' → logprob: -3.512535572052002
    8. ' ->' → logprob: -3.512535572052002
    9. 'sur' → logprob: -3.637535572052002
    10. ']' → logprob: -3.762535572052002

Token 351: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05461210012435913
    2. ' j' → logprob: -3.054612159729004
    3. 'i' → logprob: -6.054612159729004
    4. '   ' → logprob: -7.179612159729004
    5. ')' → logprob: -7.429612159729004
    6. 'range' → logprob: -7.429612159729004
    7. '[j' → logprob: -7.804612159729004
    8. '[]' → logprob: -8.179612159729004
    9. ' i' → logprob: -8.429612159729004
    10. '[' → logprob: -9.179612159729004

Token 352: ' signifie' (ID: 81149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48904186487197876
    2. ')
' → logprob: -1.114041805267334
    3. ' =' → logprob: -3.864041805267334
    4. '   ' → logprob: -4.114041805267334
    5. ' )' → logprob: -5.114041805267334
    6. ' )
' → logprob: -5.239041805267334
    7. '):' → logprob: -5.989041805267334
    8. '):
' → logprob: -6.114041805267334
    9. 's' → logprob: -6.239041805267334
    10. '=' → logprob: -6.989041805267334

Token 353: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6661513447761536
    2. 'j' → logprob: -1.4161512851715088
    3. ' i' → logprob: -1.7911512851715088
    4. 'i' → logprob: -3.041151285171509
    5. '   ' → logprob: -4.166151523590088
    6. ' removed' → logprob: -5.791151523590088
    7. ' that' → logprob: -5.916151523590088
    8. 'dis' → logprob: -6.166151523590088
    9. ' not' → logprob: -6.166151523590088
    10. 'removed' → logprob: -7.166151523590088

Token 354: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6886781454086304
    2. ' is' → logprob: -1.9386781454086304
    3. 'est' → logprob: -2.31367826461792
    4. ' sur' → logprob: -2.56367826461792
    5. '   ' → logprob: -2.68867826461792
    6. 'sur' → logprob: -2.81367826461792
    7. ')' → logprob: -3.93867826461792
    8. '_sur' → logprob: -5.81367826461792
    9. '
' → logprob: -5.93867826461792
    10. 's' → logprob: -6.18867826461792

Token 355: ' dessus' (ID: 67454)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.1077699214220047
    2. ' sur' → logprob: -2.6077699661254883
    3. ' dessus' → logprob: -4.107769966125488
    4. ' au' → logprob: -5.357769966125488
    5. 'au' → logprob: -5.357769966125488
    6. 'on' → logprob: -6.982769966125488
    7. ' on' → logprob: -7.982769966125488
    8. ' ' → logprob: -7.982769966125488
    9. '_sur' → logprob: -8.232769966125488
    10. '   ' → logprob: -8.982769966125488

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09887100756168365
    2. ')
' → logprob: -2.9738709926605225
    3. '   ' → logprob: -3.3488709926605225
    4. ' )' → logprob: -5.848871231079102
    5. 'sur' → logprob: -7.098871231079102
    6. ',' → logprob: -7.473871231079102
    7. '):
' → logprob: -7.473871231079102
    8. ' sur' → logprob: -7.723871231079102
    9. 's' → logprob: -7.848871231079102
    10. ' )
' → logprob: -7.848871231079102

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006268966943025589
    2. 'over' → logprob: -5.6312689781188965
    3. 'above' → logprob: -7.2562689781188965
    4. 'edges' → logprob: -7.5062689781188965
    5. 'graph' → logprob: -7.6312689781188965
    6. 'on' → logprob: -7.8812689781188965
    7. ' on' → logprob: -8.756268501281738
    8. ' graph' → logprob: -8.881268501281738
    9. 'adj' → logprob: -9.506268501281738
    10. ' over' → logprob: -10.131268501281738

Token 358: ' on' (ID: 402)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.7757505178451538
    2. 'on' (adapté à ' on') → logprob: -1.5257505178451538
    3. 'over' → logprob: -1.6507505178451538
    4. 'graph' → logprob: -2.2757506370544434
    5. 'edges' → logprob: -4.900750637054443
    6. 'adj' → logprob: -5.275750637054443
    7. 'top' → logprob: -5.775750637054443
    8. ' graph' → logprob: -5.900750637054443
    9. '   ' → logprob: -6.025750637054443
    10. ' on' → logprob: -6.025750637054443

Token 359: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.04059622809290886
    2. '_on' → logprob: -3.6655962467193604
    3. ' =' → logprob: -5.540596008300781
    4. '_' → logprob: -5.665596008300781
    5. 'top' → logprob: -5.790596008300781
    6. '=' → logprob: -6.665596008300781
    7. '_ab' → logprob: -7.165596008300781
    8. '_stack' → logprob: -7.415596008300781
    9. 's' → logprob: -8.665596008300781
    10. '_t' → logprob: -9.040596008300781

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20624206960201263
    2. ' =' → logprob: -1.7062420845031738
    3. '_' → logprob: -5.831242084503174
    4. 's' → logprob: -6.456242084503174
    5. '   ' → logprob: -8.956241607666016
    6. '_top' → logprob: -9.706241607666016
    7. ' ' → logprob: -10.581241607666016
    8. '_of' → logprob: -10.956241607666016
    9. '_list' → logprob: -11.206241607666016
    10. '=[]' → logprob: -11.581241607666016

Token 361: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13672056794166565
    2. ' [[]' → logprob: -2.136720657348633
    3. '{' → logprob: -4.636720657348633
    4. '[[' → logprob: -10.511720657348633
    5. ' [' → logprob: -11.511720657348633
    6. ' {' → logprob: -11.511720657348633
    7. '[]' → logprob: -12.511720657348633
    8. '[i' → logprob: -13.511720657348633
    9. '   ' → logprob: -13.886720657348633
    10. '[n' → logprob: -14.261720657348633

Token 362: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2541891634464264
    2. 'for' → logprob: -1.504189133644104
    3. '   ' → logprob: -6.1291890144348145
    4. ' ' → logprob: -11.004189491271973
    5. ']' → logprob: -11.129189491271973
    6. ')' → logprob: -11.129189491271973
    7. '	for' → logprob: -11.129189491271973
    8. '       ' → logprob: -12.004189491271973
    9. '  ' → logprob: -12.754189491271973
    10. '
' → logprob: -13.004189491271973

Token 363: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019659526646137238
    2. ' _' → logprob: -4.269659519195557
    3. ' range' → logprob: -5.394659519195557
    4. '_range' → logprob: -7.519659519195557
    5. 'range' → logprob: -8.019659996032715
    6. '_i' → logprob: -10.269659996032715
    7. ' i' → logprob: -11.269659996032715
    8. ' in' → logprob: -11.769659996032715
    9. 'i' → logprob: -12.144659996032715
    10. '_j' → logprob: -12.269659996032715

Token 364: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006946814828552306
    2. ' range' → logprob: -7.750694751739502
    3. '_' → logprob: -8.250694274902344
    4. 'in' → logprob: -13.000694274902344
    5. '_range' → logprob: -15.000694274902344
    6. 'i' → logprob: -15.875694274902344
    7. '   ' → logprob: -16.500694274902344
    8. ' in' → logprob: -16.500694274902344
    9. ' ' → logprob: -17.125694274902344
    10. '(range' → logprob: -17.500694274902344

Token 365: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029752686619758606
    2. ' range' → logprob: -3.529752731323242
    3. 'dis' → logprob: -14.154752731323242
    4. '_' → logprob: -14.279752731323242
    5. '_range' → logprob: -14.529752731323242
    6. '(range' → logprob: -16.029752731323242
    7. ' ' → logprob: -16.654752731323242
    8. '   ' → logprob: -17.029752731323242
    9. '	range' → logprob: -17.654752731323242
    10. 'disc' → logprob: -18.029752731323242

Token 366: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.52919222577475e-05
    2. 'n' → logprob: -9.500075340270996
    3. '(' → logprob: -15.375075340270996
    4. ' (' → logprob: -16.00007438659668
    5. ' n' → logprob: -17.87507438659668
    6. 'range' → logprob: -17.87507438659668
    7. ')n' → logprob: -18.00007438659668
    8. '
' → logprob: -18.00007438659668
    9. '   ' → logprob: -19.00007438659668
    10. '(len' → logprob: -19.25007438659668

Token 367: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000410415610531345
    2. ')]
' → logprob: -7.875410556793213
    3. ')]
' → logprob: -11.000410079956055
    4. ')]

' → logprob: -11.875410079956055
    5. ' )' → logprob: -12.875410079956055
    6. ']' → logprob: -13.125410079956055
    7. ')' → logprob: -13.875410079956055
    8. '   ' → logprob: -14.250410079956055
    9. ' ]' → logprob: -15.875410079956055
    10. '])]' → logprob: -16.625410079956055

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015177277848124504
    2. 'for' → logprob: -4.390177249908447
    3. ' for' → logprob: -6.390177249908447
    4. '    
' → logprob: -7.140177249908447
    5. '
' → logprob: -8.640177726745605
    6. 'count' → logprob: -12.390177726745605
    7. '	for' → logprob: -12.765177726745605
    8. '```' → logprob: -13.390177726745605
    9. 'indices' → logprob: -13.640177726745605
    10. '   
' → logprob: -13.765177726745605

Token 369: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1023145541548729
    2. ' for' → logprob: -2.9773144721984863
    3. '   ' → logprob: -3.3523144721984863
    4. 'count' → logprob: -4.977314472198486
    5. 'in' → logprob: -6.477314472198486
    6. 'counts' → logprob: -6.977314472198486
    7. 'free' → logprob: -7.227314472198486
    8. '#' (adapté à ' #') → logprob: -7.977314472198486
    9. 'ind' → logprob: -7.977314472198486
    10. ' in' → logprob: -9.477314949035645

Token 370: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29509931802749634
    2. 'count' → logprob: -2.4200992584228516
    3. 'above' → logprob: -2.7950992584228516
    4. 'counts' → logprob: -3.7950992584228516
    5. 'below' → logprob: -3.9200992584228516
    6. 'under' → logprob: -3.9200992584228516
    7. 'free' → logprob: -4.545099258422852
    8. 'in' → logprob: -4.795099258422852
    9. 'ind' → logprob: -5.295099258422852
    10. 'over' → logprob: -5.670099258422852

Token 371: ' compte' (ID: 19657)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13265478610992432
    2. ' for' → logprob: -2.1326546669006348
    3. '   ' → logprob: -5.632654666900635
    4. 'free' → logprob: -8.007655143737793
    5. '_count' → logprob: -8.132655143737793
    6. ' ' → logprob: -8.507655143737793
    7. '_top' → logprob: -8.757655143737793
    8. '_for' → logprob: -8.757655143737793
    9. ' free' → logprob: -8.882655143737793
    10. '#' → logprob: -8.882655143737793

Token 372: ' combien' (ID: 106648)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'above' → logprob: -1.8754634857177734
    2. '_ab' → logprob: -2.0004634857177734
    3. '_count' → logprob: -2.1254634857177734
    4. ' dessus' → logprob: -2.5004634857177734
    5. '_sur' → logprob: -2.7504634857177734
    6. 'sur' → logprob: -2.8754634857177734
    7. 'over' → logprob: -3.3754634857177734
    8. '_' → logprob: -3.5004634857177734
    9. '_nb' → logprob: -3.5004634857177734
    10. 'les' → logprob: -3.6254634857177734

Token 373: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8050166368484497
    2. 'de' → logprob: -1.8050166368484497
    3. 'd' → logprob: -1.9300166368484497
    4. '   ' → logprob: -2.80501651763916
    5. '_de' → logprob: -2.80501651763916
    6. '_sur' → logprob: -3.55501651763916
    7. '_' → logprob: -3.68001651763916
    8. ' d' → logprob: -3.93001651763916
    9. '_d' → logprob: -5.05501651763916
    10. ' ' → logprob: -5.55501651763916

Token 374: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.35162943601608276
    2. 'removed' → logprob: -2.6016294956207275
    3. 'i' → logprob: -2.9766294956207275
    4. ' removed' → logprob: -3.8516294956207275
    5. ' dis' → logprob: -3.9766294956207275
    6. ' i' → logprob: -4.226629257202148
    7. ' on' → logprob: -4.351629257202148
    8. 'j' → logprob: -4.476629257202148
    9. '[i' → logprob: -4.601629257202148
    10. '[' → logprob: -4.726629257202148

Token 375: 'ques' (ID: 3531)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8388845324516296
    2. 'cs' → logprob: -0.8388845324516296
    3. 'c' → logprob: -3.5888845920562744
    4. 'is' → logprob: -3.8388845920562744
    5. 'sk' → logprob: -3.8388845920562744
    6. 'ques' → logprob: -4.088884353637695
    7. 'sc' → logprob: -4.338884353637695
    8. 'sur' → logprob: -4.713884353637695
    9. 'ks' → logprob: -5.213884353637695
    10. 'dis' → logprob: -5.838884353637695

Token 376: ' sont' (ID: 5242)
  Prédit: ' dessus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dessus' → logprob: -0.45374107360839844
    2. ' sont' → logprob: -1.9537410736083984
    3. 'au' → logprob: -2.7037410736083984
    4. 's' → logprob: -2.8287410736083984
    5. 'ont' → logprob: -2.9537410736083984
    6. 'sur' → logprob: -3.9537410736083984
    7. ' au' → logprob: -5.203741073608398
    8. 'are' → logprob: -5.328741073608398
    9. ' sur' → logprob: -5.578741073608398
    10. ' are' → logprob: -5.578741073608398

Token 377: ' dessus' (ID: 67454)
  Prédit: ' dessus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dessus' → logprob: -0.2168794423341751
    2. 'au' → logprob: -1.9668794870376587
    3. 'dess' → logprob: -3.716879367828369
    4. 'sur' → logprob: -3.716879367828369
    5. ' au' → logprob: -5.216879367828369
    6. '-dessus' → logprob: -7.966879367828369
    7. ' sur' → logprob: -8.091879844665527
    8. 's' → logprob: -8.841879844665527
    9. 'direct' → logprob: -10.091879844665527
    10. ' ' → logprob: -10.091879844665527

Token 378: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5126824975013733
    2. '_count' → logprob: -2.5126824378967285
    3. '   ' → logprob: -2.8876824378967285
    4. ' for' → logprob: -3.2626824378967285
    5. 'count' → logprob: -3.2626824378967285
    6. 'sur' → logprob: -3.3876824378967285
    7. 'for' → logprob: -3.3876824378967285
    8. '_on' → logprob: -4.2626824378967285
    9. 'on' → logprob: -4.5126824378967285
    10. 'over' → logprob: -4.6376824378967285

Token 379: ' j' (ID: 441)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.2945884466171265
    2. 'each' → logprob: -1.7945884466171265
    3. 'range' → logprob: -2.169588565826416
    4. '[' → logprob: -2.294588565826416
    5. ' range' → logprob: -2.544588565826416
    6. ' each' → logprob: -2.794588565826416
    7. '[i' → logprob: -3.044588565826416
    8. ' chaque' → logprob: -3.294588565826416
    9. ' chacun' → logprob: -3.669588565826416
    10. 'j' → logprob: -3.919588565826416

Token 380: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3805120885372162
    2. '_count' → logprob: -1.7555121183395386
    3. 'count' → logprob: -2.630511999130249
    4. '_counts' → logprob: -3.880511999130249
    5. 'counts' → logprob: -4.505512237548828
    6. '   ' → logprob: -4.755512237548828
    7. 'sur' → logprob: -4.880512237548828
    8. '
' → logprob: -5.880512237548828
    9. ' dessus' → logprob: -6.130512237548828
    10. '_sur' → logprob: -6.380512237548828

Token 381: 'dans' (ID: 108151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'above' → logprob: -0.9545638561248779
    2. 'below' → logprob: -1.579563856124878
    3. 'count' → logprob: -2.579563856124878
    4. 'on' → logprob: -2.579563856124878
    5. '[' → logprob: -3.204563856124878
    6. 'under' → logprob: -3.579563856124878
    7. 'in' → logprob: -3.704563856124878
    8. 'top' → logprob: -3.704563856124878
    9. 'counts' → logprob: -4.204564094543457
    10. 'over' → logprob: -4.204564094543457

Token 382: ' le' (ID: 505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06472726166248322
    2. '[' → logprob: -3.939727306365967
    3. ' range' → logprob: -4.064727306365967
    4. '[j' → logprob: -4.439727306365967
    5. 'j' → logprob: -5.439727306365967
    6. '   ' → logprob: -5.689727306365967
    7. '[i' → logprob: -6.564727306365967
    8. 'removed' → logprob: -6.689727306365967
    9. 'on' → logprob: -7.189727306365967
    10. ' [' → logprob: -7.439727306365967

Token 383: ' sous' (ID: 14487)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05125023424625397
    2. '[j' → logprob: -4.426250457763672
    3. 'in' → logprob: -4.801250457763672
    4. ' range' → logprob: -5.051250457763672
    5. '[i' → logprob: -5.176250457763672
    6. 'j' → logprob: -5.176250457763672
    7. ')' → logprob: -5.801250457763672
    8. '[' → logprob: -6.426250457763672
    9. '[ind' → logprob: -7.051250457763672
    10. '```' → logprob: -7.051250457763672

Token 384: '-' (ID: 12)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.7225090265274048
    2. 'graph' → logprob: -0.9725090265274048
    3. '_' → logprob: -3.8475089073181152
    4. '_j' → logprob: -4.097508907318115
    5. 'j' → logprob: -4.472508907318115
    6. 'tab' → logprob: -4.722508907318115
    7. '_graph' → logprob: -4.847508907318115
    8. '_gr' → logprob: -5.097508907318115
    9. '[]' → logprob: -5.347508907318115
    10. '_tab' → logprob: -5.347508907318115

Token 385: 'ensemble' (ID: 37301)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.32558825612068176
    2. 'ensemble' → logprob: -1.5755882263183594
    3. 'j' → logprob: -4.075588226318359
    4. '```' → logprob: -4.950588226318359
    5. 'tab' → logprob: -5.450588226318359
    6. 'removed' → logprob: -5.575588226318359
    7. 'range' → logprob: -5.825588226318359
    8. 'gr' → logprob: -5.825588226318359
    9. 'liste' → logprob: -5.950588226318359
    10. 'array' → logprob: -5.950588226318359

Token 386: ' non' (ID: 2893)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.14561550319194794
    2. ' removed' → logprob: -2.145615577697754
    3. '_removed' → logprob: -4.520615577697754
    4. 'rem' → logprob: -6.020615577697754
    5. ')' → logprob: -6.520615577697754
    6. '   ' → logprob: -7.145615577697754
    7. ' des' → logprob: -7.645615577697754
    8. ' ' → logprob: -7.895615577697754
    9. 'des' → logprob: -8.020615577697754
    10. '{' → logprob: -8.770615577697754

Token 387: ' en' (ID: 469)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.10104984790086746
    2. '_removed' → logprob: -2.9760499000549316
    3. ' removed' → logprob: -3.1010499000549316
    4. 'rem' → logprob: -9.226049423217773
    5. '   ' → logprob: -11.851049423217773
    6. '_rem' → logprob: -12.101049423217773
    7. '_' → logprob: -13.476049423217773
    8. 'Removed' → logprob: -14.226049423217773
    9. ' supprim' → logprob: -14.601049423217773
    10. ' remov' → logprob: -14.726049423217773

Token 388: 'lev' (ID: 3944)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.02211925946176052
    2. ' removed' → logprob: -3.8971192836761475
    3. '_removed' → logprob: -6.897119045257568
    4. 'ret' → logprob: -8.647119522094727
    5. '   ' → logprob: -9.397119522094727
    6. 'lev' → logprob: -9.772119522094727
    7. 'rem' → logprob: -10.272119522094727
    8. 'deleted' → logprob: -10.272119522094727
    9. 'excluded' → logprob: -10.647119522094727
    10. ' ' → logprob: -11.022119522094727

Token 389: 'é' (ID: 377)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.26186758279800415
    2. 'és' → logprob: -2.3868675231933594
    3. 't' → logprob: -2.6368675231933594
    4. 'é' → logprob: -4.136867523193359
    5. 'vé' → logprob: -4.511867523193359
    6. 've' → logprob: -5.136867523193359
    7. 'e' → logprob: -5.386867523193359
    8. 'g' → logprob: -5.511867523193359
    9. 'c' → logprob: -5.636867523193359
    10. 'u' → logprob: -5.761867523193359

Token 390: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5488786697387695
    2. ')' → logprob: -0.9238786697387695
    3. ' )
' → logprob: -4.2988786697387695
    4. ')
' → logprob: -5.2988786697387695
    5. ' )' → logprob: -5.6738786697387695
    6. '   ' → logprob: -7.0488786697387695
    7. ')]
' → logprob: -7.9238786697387695
    8. ')]' → logprob: -8.17387866973877
    9. 'indices' → logprob: -8.54887866973877
    10. 'dis' → logprob: -9.17387866973877

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30503931641578674
    2. 'count' → logprob: -1.5550392866134644
    3. 'above' → logprob: -3.430039405822754
    4. 'over' → logprob: -5.180039405822754
    5. 'counts' → logprob: -5.305039405822754
    6. ' count' → logprob: -5.555039405822754
    7. 'below' → logprob: -6.430039405822754
    8. 'for' → logprob: -6.805039405822754
    9. ' above' → logprob: -7.680039405822754
    10. ' counts' → logprob: -8.430039405822754

Token 392: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' (adapté à ' above') → logprob: -0.6086289882659912
    2. 'count' → logprob: -1.1086289882659912
    3. 'over' → logprob: -2.858628988265991
    4. 'under' → logprob: -3.608628988265991
    5. 'below' → logprob: -4.35862922668457
    6. 'on' → logprob: -4.48362922668457
    7. '   ' → logprob: -5.23362922668457
    8. ' count' → logprob: -6.23362922668457
    9. 'counts' → logprob: -6.23362922668457
    10. ' above' → logprob: -6.60862922668457

Token 393: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.19817137718200684
    2. ' =' → logprob: -2.198171377182007
    3. '_counts' → logprob: -2.698171377182007
    4. '=' → logprob: -6.823171615600586
    5. 'count' → logprob: -8.698171615600586
    6. '_cnt' → logprob: -9.448171615600586
    7. '=[' → logprob: -10.823171615600586
    8. 'Count' → logprob: -11.323171615600586
    9. '_counter' → logprob: -11.448171615600586
    10. '   ' → logprob: -11.573171615600586

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142795145511627
    2. '=' → logprob: -1.701427936553955
    3. ' ' → logprob: -12.201428413391113
    4. '=[' → logprob: -12.326428413391113
    5. ' =[' → logprob: -13.326428413391113
    6. '[' → logprob: -13.451428413391113
    7. '   ' → logprob: -13.451428413391113
    8. '  ' → logprob: -14.951428413391113
    9. 's' → logprob: -15.451428413391113
    10. ')' → logprob: -16.951427459716797

Token 395: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4742870032787323
    2. ' [' → logprob: -0.9742870330810547
    3. '[n' → logprob: -8.474287033081055
    4. '   ' → logprob: -13.974287033081055
    5. '[len' → logprob: -15.849287033081055
    6. ' ' → logprob: -16.849287033081055
    7. '[N' → logprob: -17.099287033081055
    8. '[int' → logprob: -17.474287033081055
    9. '[m' → logprob: -17.724287033081055
    10. '[j' → logprob: -17.849287033081055

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.750158309936523
    4. '۰' → logprob: -17.750158309936523
    5. '０' → logprob: -18.625158309936523
    6. ' ' → logprob: -18.687658309936523
    7. '  ' → logprob: -18.750158309936523
    8. '     ' → logprob: -19.312658309936523
    9. '       ' → logprob: -19.687658309936523
    10. '    ' → logprob: -20.125158309936523

Token 397: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23642598092556
    2. ']' → logprob: -2.1114258766174316
    3. 'for' → logprob: -3.1114258766174316
    4. ']*' → logprob: -3.1114258766174316
    5. '   ' → logprob: -8.61142635345459
    6. ' ' → logprob: -9.23642635345459
    7. ' ]' → logprob: -9.23642635345459
    8. 'n' → logprob: -11.73642635345459
    9. '	for' → logprob: -11.86142635345459
    10. ' if' → logprob: -12.11142635345459

Token 398: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.643152740551159e-05
    2. ' n' → logprob: -10.750036239624023
    3. '(n' → logprob: -11.375036239624023
    4. '   ' → logprob: -12.625036239624023
    5. '	n' → logprob: -16.000036239624023
    6. '(' → logprob: -17.250036239624023
    7. '
' → logprob: -18.125036239624023
    8. ' ' → logprob: -18.500036239624023
    9. '  ' → logprob: -18.750036239624023
    10. '```' → logprob: -18.750036239624023

Token 399: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0441410131752491
    2. '   ' → logprob: -3.6691410541534424
    3. '    
' → logprob: -4.044140815734863
    4. '
' → logprob: -10.169140815734863
    5. '	
' → logprob: -10.544140815734863
    6. 'for' → logprob: -10.669140815734863
    7. ' 
' → logprob: -10.794140815734863
    8. '  
' → logprob: -11.044140815734863
    9. '   
' → logprob: -11.169140815734863
    10. ' for' → logprob: -12.169140815734863

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007216068916022778
    2. 'for' → logprob: -7.250721454620361
    3. ' for' → logprob: -12.00072193145752
    4. '    
' → logprob: -12.37572193145752
    5. '
' → logprob: -13.62572193145752
    6. '	for' → logprob: -17.125720977783203
    7. '       ' → logprob: -18.250720977783203
    8. '        
' → logprob: -19.000720977783203
    9. '   ' → logprob: -19.125720977783203
    10. '  
' → logprob: -19.250720977783203

Token 401: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49795636534690857
    2. 'for' (adapté à ' for') → logprob: -0.997956395149231
    3. ' for' → logprob: -3.7479562759399414
    4. '    
' → logprob: -10.997956275939941
    5. '	for' → logprob: -11.747956275939941
    6. '#' → logprob: -12.872956275939941
    7. '
' → logprob: -12.872956275939941
    8. ' ' → logprob: -15.497956275939941
    9. '  ' → logprob: -15.747956275939941
    10. '```' → logprob: -15.747956275939941

Token 402: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20145437121391296
    2. ' i' → logprob: -1.7014544010162354
    3. 'j' → logprob: -10.451454162597656
    4. ' j' → logprob: -12.076454162597656
    5. ' ' → logprob: -12.951454162597656
    6. '   ' → logprob: -12.951454162597656
    7. '	i' → logprob: -13.576454162597656
    8. '  ' → logprob: -15.701454162597656
    9. '(i' → logprob: -16.326454162597656
    10. '    ' → logprob: -16.576454162597656

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006722944788634777
    2. 'in' → logprob: -5.006722927093506
    3. ' ' → logprob: -12.381723403930664
    4. '	in' → logprob: -12.881723403930664
    5. ',' → logprob: -15.381723403930664
    6. 'import' → logprob: -15.506723403930664
    7. 'range' → logprob: -16.131723403930664
    8. ' ' → logprob: -16.506723403930664
    9. '_in' → logprob: -16.881723403930664
    10. '   ' → logprob: -16.881723403930664

Token 404: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10028689354658127
    2. ' range' → logprob: -2.3502869606018066
    3. 'n' → logprob: -9.600286483764648
    4. ' n' → logprob: -11.975286483764648
    5. '   ' → logprob: -12.975286483764648
    6. '(range' → logprob: -13.350286483764648
    7. ' ' → logprob: -13.475286483764648
    8. '  ' → logprob: -15.350286483764648
    9. '	range' → logprob: -15.600286483764648
    10. '    ' → logprob: -15.975286483764648

Token 405: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009986326331272721
    2. 'n' → logprob: -7.375998497009277
    3. '(' → logprob: -8.000998497009277
    4. ' (' → logprob: -11.000998497009277
    5. '   ' → logprob: -11.375998497009277
    6. ' n' → logprob: -11.750998497009277
    7. '(i' → logprob: -15.375998497009277
    8. '(
' → logprob: -15.500998497009277
    9. '	n' → logprob: -15.875998497009277
    10. '(len' → logprob: -16.125999450683594

Token 406: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1276153028011322
    2. '):' → logprob: -2.127615213394165
    3. '   ' → logprob: -8.252614974975586
    4. '+' → logprob: -8.752614974975586
    5. ')' → logprob: -9.002614974975586
    6. ' ):
' → logprob: -9.627614974975586
    7. ' ):' → logprob: -10.002614974975586
    8. '):
' → logprob: -10.627614974975586
    9. '       ' → logprob: -13.002614974975586
    10. '
' → logprob: -13.127614974975586

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018900912255048752
    2. ' if' → logprob: -6.751890182495117
    3. '	   ' → logprob: -8.126890182495117
    4. '   ' → logprob: -8.251890182495117
    5. ' ' → logprob: -9.876890182495117
    6. ' for' → logprob: -10.751890182495117
    7. '	' → logprob: -10.751890182495117
    8. '    ' → logprob: -11.001890182495117
    9. 'if' → logprob: -11.001890182495117
    10. '	if' → logprob: -11.626890182495117

Token 408: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20659799873828888
    2. ' if' → logprob: -1.7065980434417725
    3. '   ' → logprob: -6.081597805023193
    4. 'for' → logprob: -6.456597805023193
    5. '       ' → logprob: -6.831597805023193
    6. ' for' → logprob: -8.456598281860352
    7. ' ' → logprob: -11.081598281860352
    8. '	if' → logprob: -12.081598281860352
    9. '    ' → logprob: -13.331598281860352
    10. '  ' → logprob: -14.081598281860352

Token 409: ' removed' (ID: 11906)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0192009210586548
    2. 'removed' → logprob: -1.0192009210586548
    3. ' removed' → logprob: -2.1442008018493652
    4. ' i' → logprob: -2.1442008018493652
    5. 'not' → logprob: -3.7692008018493652
    6. ' not' → logprob: -3.8942008018493652
    7. 'rem' → logprob: -9.206701278686523
    8. '   ' → logprob: -9.394201278686523
    9. ' ' → logprob: -9.831701278686523
    10. '(i' → logprob: -10.269201278686523

Token 410: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009194238111376762
    2. ':' → logprob: -5.134194374084473
    3. '[' → logprob: -6.634194374084473
    4. ' or' → logprob: -6.884194374084473
    5. '==' → logprob: -7.634194374084473
    6. '   ' → logprob: -8.634194374084473
    7. ' ==' → logprob: -9.259194374084473
    8. ':
' → logprob: -10.134194374084473
    9. ' [' → logprob: -10.509194374084473
    10. '       ' → logprob: -10.759194374084473

Token 411: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2727240025997162
    2. '):' → logprob: -1.7727240324020386
    3. ' ):' → logprob: -3.147723913192749
    4. ':' → logprob: -4.772724151611328
    5. ']:
' → logprob: -5.647724151611328
    6. '):
' → logprob: -5.772724151611328
    7. ' ]' → logprob: -5.897724151611328
    8. ']==' → logprob: -6.022724151611328
    9. ']' → logprob: -6.272724151611328
    10. '==' → logprob: -6.397724151611328

Token 412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4602118134498596
    2. '       ' → logprob: -1.0852117538452148
    3. ' continue' → logprob: -3.835211753845215
    4. 'continue' → logprob: -4.960211753845215
    5. '   ' → logprob: -6.835211753845215
    6. '	       ' → logprob: -7.585211753845215
    7. '	   ' → logprob: -7.835211753845215
    8. '	continue' → logprob: -8.085211753845215
    9. ' for' → logprob: -10.585211753845215
    10. '		' → logprob: -10.960211753845215

Token 413: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.44505152106285095
    2. 'continue' (adapté à ' continue') → logprob: -1.1950515508651733
    3. '       ' → logprob: -3.195051431655884
    4. '           ' → logprob: -4.195051670074463
    5. '	continue' → logprob: -8.195051193237305
    6. '   ' → logprob: -8.695051193237305
    7. '               ' → logprob: -10.445051193237305
    8. '_continue' → logprob: -12.445051193237305
    9. 'contin' → logprob: -13.070051193237305
    10. ' ' → logprob: -13.570051193237305

Token 414: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005037832539528608
    2. '   ' → logprob: -5.380037784576416
    3. ' for' → logprob: -8.005038261413574
    4. '
' → logprob: -10.130038261413574
    5. 'for' → logprob: -11.505038261413574
    6. '	   ' → logprob: -12.130038261413574
    7. '    ' → logprob: -12.255038261413574
    8. '        
' → logprob: -12.255038261413574
    9. '     ' → logprob: -12.255038261413574
    10. '           ' → logprob: -12.255038261413574

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017003821209073067
    2. '   ' → logprob: -4.142004013061523
    3. ' for' → logprob: -7.017004013061523
    4. 'for' → logprob: -10.267004013061523
    5. '
' → logprob: -11.892004013061523
    6. '	   ' → logprob: -12.017004013061523
    7. '     ' → logprob: -12.142004013061523
    8. '    ' → logprob: -12.267004013061523
    9. ' ' → logprob: -12.267004013061523
    10. '           ' → logprob: -12.642004013061523

Token 416: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8946875929832458
    2. 'for' (adapté à ' for') → logprob: -0.8946875929832458
    3. ' for' → logprob: -2.3946876525878906
    4. '       ' → logprob: -2.3946876525878906
    5. '	for' → logprob: -10.01968765258789
    6. '    ' → logprob: -10.26968765258789
    7. ' ' → logprob: -10.51968765258789
    8. '  ' → logprob: -11.51968765258789
    9. '     ' → logprob: -12.39468765258789
    10. '
' → logprob: -13.39468765258789

Token 417: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01416398212313652
    2. ' j' → logprob: -4.264163970947266
    3. '   ' → logprob: -14.639163970947266
    4. '	j' → logprob: -17.639163970947266
    5. '[j' → logprob: -19.139163970947266
    6. '    ' → logprob: -19.389163970947266
    7. ' ' → logprob: -19.389163970947266
    8. '$j' → logprob: -19.764163970947266
    9. '  ' → logprob: -20.264163970947266
    10. '(j' → logprob: -21.014163970947266

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002813194179907441
    2. 'in' → logprob: -5.877813339233398
    3. 'range' → logprob: -12.127813339233398
    4. ' ' → logprob: -13.502813339233398
    5. '   ' → logprob: -14.502813339233398
    6. '	in' → logprob: -15.502813339233398
    7. ' range' → logprob: -15.752813339233398
    8. ' i' → logprob: -16.2528133392334
    9. '    ' → logprob: -16.5028133392334
    10. 'd' → logprob: -16.6278133392334

Token 419: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022981703281403
    2. ' range' → logprob: -1.9102298021316528
    3. '   ' → logprob: -12.785229682922363
    4. '(range' → logprob: -13.035229682922363
    5. ' ' → logprob: -14.910229682922363
    6. '    ' → logprob: -15.910229682922363
    7. '  ' → logprob: -16.41023063659668
    8. '	range' → logprob: -16.53523063659668
    9. '       ' → logprob: -18.41023063659668
    10. 'ange' → logprob: -18.78523063659668

Token 420: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3505183756351471
    2. '(n' → logprob: -1.2255183458328247
    3. 'n' → logprob: -6.850518226623535
    4. 'i' → logprob: -6.975518226623535
    5. '(' → logprob: -10.225518226623535
    6. ' (' → logprob: -10.600518226623535
    7. '   ' → logprob: -12.225518226623535
    8. ' i' → logprob: -12.350518226623535
    9. ' n' → logprob: -12.850518226623535
    10. '((' → logprob: -13.600518226623535

Token 421: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07893054932355881
    2. ' +' → logprob: -2.578930616378784
    3. '):' → logprob: -11.328930854797363
    4. '   ' → logprob: -11.453930854797363
    5. '):
' → logprob: -11.953930854797363
    6. ',' → logprob: -12.828930854797363
    7. '1' → logprob: -12.953930854797363
    8. '+
' → logprob: -13.203930854797363
    9. '       ' → logprob: -13.703930854797363
    10. '    ' → logprob: -14.453930854797363

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. 'n' → logprob: -10.500031471252441
    3. ' ' → logprob: -12.750031471252441
    4. ' n' → logprob: -14.875031471252441
    5. '   ' → logprob: -15.250031471252441
    6. '
' → logprob: -15.750031471252441
    7. '```' → logprob: -17.312530517578125
    8. '       ' → logprob: -18.000030517578125
    9. ',' → logprob: -18.062530517578125
    10. '

' → logprob: -18.312530517578125

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0738988146185875
    2. ',n' → logprob: -2.6988987922668457
    3. ' ,' → logprob: -5.823898792266846
    4. 'n' → logprob: -7.073898792266846
    5. '):' → logprob: -9.573899269104004
    6. '):
' → logprob: -10.323899269104004
    7. '   ' → logprob: -10.823899269104004
    8. '(n' → logprob: -11.448899269104004
    9. ',
' → logprob: -12.198899269104004
    10. '
' → logprob: -12.698899269104004

Token 424: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170460251159966
    2. ' n' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.62617015838623
    4. '
' → logprob: -17.126171112060547
    5. '	n' → logprob: -17.251171112060547
    6. '       ' → logprob: -18.501171112060547
    7. '    ' → logprob: -20.001171112060547
    8. 'len' → logprob: -20.001171112060547
    9. ')n' → logprob: -20.001171112060547
    10. '           ' → logprob: -20.126171112060547

Token 425: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004617864731699228
    2. '):' → logprob: -5.504617691040039
    3. '       ' → logprob: -7.879617691040039
    4. '           ' → logprob: -9.004617691040039
    5. '):
' → logprob: -10.504617691040039
    6. ' ):
' → logprob: -12.254617691040039
    7. ':
' → logprob: -13.254617691040039
    8. ':' → logprob: -13.504617691040039
    9. '   ' → logprob: -13.754617691040039
    10. ')' → logprob: -14.629617691040039

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018371058627963066
    2. '       ' → logprob: -4.393371105194092
    3. ' if' → logprob: -5.893371105194092
    4. '<|end|>' → logprob: -6.393371105194092
    5. '	       ' → logprob: -8.018370628356934
    6. ':' → logprob: -8.018370628356934
    7. '        ' → logprob: -8.518370628356934
    8. '               ' → logprob: -9.393370628356934
    9. ':
' → logprob: -9.643370628356934
    10. '<|end|>' → logprob: -9.643370628356934

Token 427: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.670619547367096
    2. ' if' → logprob: -0.795619547367096
    3. 'if' (adapté à ' if') → logprob: -3.670619487762451
    4. '               ' → logprob: -4.670619487762451
    5. '       ' → logprob: -6.045619487762451
    6. '   ' → logprob: -10.29561996459961
    7. '            
' → logprob: -11.17061996459961
    8. '
' → logprob: -11.17061996459961
    9. ' ' → logprob: -11.67061996459961
    10. '```' → logprob: -12.04561996459961

Token 428: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.17045466601848602
    2. ' removed' → logprob: -1.9204546213150024
    3. 'not' → logprob: -5.045454502105713
    4. ' not' → logprob: -5.670454502105713
    5. '   ' → logprob: -8.420454978942871
    6. 'rem' → logprob: -10.420454978942871
    7. '           ' → logprob: -11.045454978942871
    8. '       ' → logprob: -11.795454978942871
    9. ' ' → logprob: -12.420454978942871
    10. '(not' → logprob: -12.920454978942871

Token 429: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011594036914175376
    2. '[i' → logprob: -9.375116348266602
    3. '[' → logprob: -10.500116348266602
    4. ' [' → logprob: -12.875116348266602
    5. '   ' → logprob: -15.250116348266602
    6. '```' → logprob: -15.625116348266602
    7. 'j' → logprob: -16.1251163482666
    8. '[
' → logprob: -16.7501163482666
    9. ')' → logprob: -17.1251163482666
    10. ']' → logprob: -17.5001163482666

Token 430: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.09278557449579239
    2. ']:' → logprob: -2.592785596847534
    3. ']' → logprob: -5.092785358428955
    4. '           ' → logprob: -5.842785358428955
    5. '               ' → logprob: -5.967785358428955
    6. ' or' → logprob: -7.342785358428955
    7. ']==' → logprob: -7.467785358428955
    8. ':' → logprob: -8.092785835266113
    9. ':
' → logprob: -8.467785835266113
    10. ']:
' → logprob: -8.842785835266113

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007641651667654514
    2. ' continue' → logprob: -5.507641792297363
    3. 'continue' → logprob: -5.882641792297363
    4. '           ' → logprob: -7.382641792297363
    5. ':' → logprob: -9.507641792297363
    6. ':
' → logprob: -10.507641792297363
    7. ' or' → logprob: -11.382641792297363
    8. '			' → logprob: -11.757641792297363
    9. '	continue' → logprob: -11.757641792297363
    10. ',' → logprob: -12.507641792297363

Token 432: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.17585492134094238
    2. ' continue' → logprob: -1.9258549213409424
    3. '               ' → logprob: -4.175854682922363
    4. '                   ' → logprob: -9.550854682922363
    5. '	continue' → logprob: -9.925854682922363
    6. '   ' → logprob: -11.550854682922363
    7. '           ' → logprob: -11.800854682922363
    8. '       ' → logprob: -12.675854682922363
    9. ' ' → logprob: -13.175854682922363
    10. '                       ' → logprob: -14.175854682922363

Token 433: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006878906278871
    2. ' and' → logprob: -8.125687599182129
    3. '               ' → logprob: -8.750687599182129
    4. ':
' → logprob: -9.000687599182129
    5. ':' → logprob: -10.125687599182129
    6. '            
' → logprob: -10.875687599182129
    7. '		' → logprob: -11.625687599182129
    8. '
' → logprob: -11.625687599182129
    9. ',' → logprob: -11.750687599182129
    10. '       ' → logprob: -12.250687599182129

Token 434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020187153131701052
    2. '               ' → logprob: -9.500202178955078
    3. '       ' → logprob: -10.250202178955078
    4. ' if' → logprob: -10.375202178955078
    5. ' and' → logprob: -10.625202178955078
    6. '
' → logprob: -11.000202178955078
    7. '            
' → logprob: -12.125202178955078
    8. '   ' → logprob: -12.250202178955078
    9. ',' → logprob: -13.375202178955078
    10. 'if' → logprob: -13.500202178955078

Token 435: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02210153453052044
    2. ' if' → logprob: -4.522101402282715
    3. 'if' (adapté à ' if') → logprob: -4.522101402282715
    4. '               ' → logprob: -9.272101402282715
    5. '
' → logprob: -10.772101402282715
    6. '            
' → logprob: -12.397101402282715
    7. '		' → logprob: -12.897101402282715
    8. '       ' → logprob: -13.022101402282715
    9. '	       ' → logprob: -14.397101402282715
    10. '          ' → logprob: -15.022101402282715

Token 436: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011048642918467522
    2. ' is' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.511048316955566
    4. ' ' → logprob: -16.636049270629883
    5. 'i' → logprob: -16.761049270629883
    6. '  ' → logprob: -17.261049270629883
    7. '	is' → logprob: -17.261049270629883
    8. '(is' → logprob: -17.761049270629883
    9. 'on' → logprob: -17.886049270629883
    10. '    ' → logprob: -18.011049270629883

Token 437: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.318681188422488e-05
    2. 'on' → logprob: -11.75001335144043
    3. '_' → logprob: -13.37501335144043
    4. ' on' → logprob: -13.50001335144043
    5. ' _' → logprob: -14.00001335144043
    6. '   ' → logprob: -15.00001335144043
    7. '_is' → logprob: -15.12501335144043
    8. '_ON' → logprob: -15.50001335144043
    9. '__' → logprob: -16.12501335144043
    10. ' ' → logprob: -16.62501335144043

Token 438: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0012657057959586382
    2. 'top' → logprob: -6.876265525817871
    3. '_on' → logprob: -8.626265525817871
    4. '_' → logprob: -10.501265525817871
    5. 'on' → logprob: -11.626265525817871
    6. ' top' → logprob: -11.751265525817871
    7. ' _' → logprob: -13.251265525817871
    8. 'Top' → logprob: -13.376265525817871
    9. 'i' → logprob: -13.751265525817871
    10. 'ont' → logprob: -13.876265525817871

Token 439: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00017410075815860182
    2. ' (' → logprob: -9.250174522399902
    3. '(' → logprob: -9.500174522399902
    4. ')' → logprob: -13.875174522399902
    5. '   ' → logprob: -14.500174522399902
    6. '[i' → logprob: -15.000174522399902
    7. '(
' → logprob: -15.250174522399902
    8. ' ' → logprob: -15.375174522399902
    9. 't' → logprob: -15.625174522399902
    10. '(j' → logprob: -15.750174522399902

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16190260648727417
    2. ',j' → logprob: -1.911902666091919
    3. ' ,' → logprob: -6.78690242767334
    4. '(j' → logprob: -7.78690242767334
    5. 'j' → logprob: -9.53690242767334
    6. '           ' → logprob: -11.41190242767334
    7. '[j' → logprob: -11.91190242767334
    8. ' j' → logprob: -12.03690242767334
    9. ',
' → logprob: -12.16190242767334
    10. '(' → logprob: -12.16190242767334

Token 441: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029923528200015426
    2. ' j' → logprob: -8.125299453735352
    3. '   ' → logprob: -13.375299453735352
    4. '	j' → logprob: -15.000299453735352
    5. '           ' → logprob: -15.250299453735352
    6. '                   ' → logprob: -15.500299453735352
    7. '
' → logprob: -15.500299453735352
    8. '               ' → logprob: -16.00029945373535
    9. '[j' → logprob: -16.12529945373535
    10. ' ' → logprob: -16.62529945373535

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013989296276122332
    2. ' ,' → logprob: -6.626399040222168
    3. '           ' → logprob: -11.001399040222168
    4. '):
' → logprob: -11.376399040222168
    5. '               ' → logprob: -11.501399040222168
    6. 'dis' → logprob: -12.001399040222168
    7. '   ' → logprob: -12.001399040222168
    8. '):' → logprob: -12.001399040222168
    9. '),' → logprob: -13.126399040222168
    10. ',
' → logprob: -13.126399040222168

Token 443: ' discs' (ID: 89635)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.0008340472122654319
    2. ' discs' → logprob: -7.125833988189697
    3. 'disc' → logprob: -10.500834465026855
    4. '   ' → logprob: -14.125834465026855
    5. '	dis' → logprob: -15.250834465026855
    6. '       ' → logprob: -15.750834465026855
    7. '
' → logprob: -15.750834465026855
    8. '(dis' → logprob: -16.00083351135254
    9. ')' → logprob: -16.00083351135254
    10. ' disc' → logprob: -16.37583351135254

Token 444: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2014767825603485
    2. '):
' → logprob: -1.701476812362671
    3. '):
' → logprob: -10.07647705078125
    4. '           ' → logprob: -11.82647705078125
    5. ')' → logprob: -11.95147705078125
    6. ' ):' → logprob: -12.57647705078125
    7. ':' → logprob: -13.45147705078125
    8. '       ' → logprob: -13.95147705078125
    9. '):

' → logprob: -14.20147705078125
    10. '               ' → logprob: -14.57647705078125

Token 445: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.4034345187828876e-05
    2. ' on' → logprob: -10.87502384185791
    3. '                   ' → logprob: -13.50002384185791
    4. ' above' → logprob: -13.50002384185791
    5. 'above' → logprob: -14.50002384185791
    6. '           ' → logprob: -14.50002384185791
    7. '              ' → logprob: -14.75002384185791
    8. ':' → logprob: -15.00002384185791
    9. 'on' → logprob: -15.12502384185791
    10. ',' → logprob: -16.250024795532227

Token 446: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' (adapté à ' on') → logprob: -0.16247591376304626
    2. ' on' → logprob: -2.162475824356079
    3. '               ' → logprob: -3.412475824356079
    4. '                   ' → logprob: -6.287476062774658
    5. '   ' → logprob: -9.7874755859375
    6. '           ' → logprob: -10.6624755859375
    7. '	on' → logprob: -11.9124755859375
    8. ' ' → logprob: -12.0374755859375
    9. 'above' → logprob: -12.7874755859375
    10. '                ' → logprob: -13.0374755859375

Token 447: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -3.128163257315464e-07
    2. 'top' → logprob: -15.875
    3. '_' → logprob: -17.125
    4. '[top' → logprob: -17.625
    5. '_on' → logprob: -18.375
    6. ' _' → logprob: -18.375
    7. ' top' → logprob: -19.375
    8. '_TOP' → logprob: -19.375
    9. '[_' → logprob: -19.5
    10. ')_' → logprob: -19.875

Token 448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011708177626132965
    2. '[j' → logprob: -6.751170635223389
    3. '[' → logprob: -15.001171112060547
    4. ' [' → logprob: -15.251171112060547
    5. '   ' → logprob: -18.251171112060547
    6. '
' → logprob: -19.626171112060547
    7. 'i' → logprob: -20.251171112060547
    8. ')[' → logprob: -20.751171112060547
    9. '

' → logprob: -21.376171112060547
    10. '       ' → logprob: -21.376171112060547

Token 449: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.16043229401111603
    2. '[j' → logprob: -1.9104323387145996
    3. '.append' → logprob: -9.160431861877441
    4. '[i' → logprob: -9.660431861877441
    5. ' ].' → logprob: -11.035431861877441
    6. ']' → logprob: -11.535431861877441
    7. '   ' → logprob: -12.035431861877441
    8. '[' → logprob: -12.785431861877441
    9. '][' → logprob: -12.910431861877441
    10. '.' → logprob: -13.910431861877441

Token 450: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.0
    3. '.append' → logprob: -17.125
    4. 'appen' → logprob: -19.5
    5. '	append' → logprob: -19.5
    6. '_append' → logprob: -20.625
    7. 'Append' → logprob: -21.75
    8. 'add' → logprob: -22.25
    9. 'app' → logprob: -22.5
    10. 'push' → logprob: -23.125

Token 451: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0024762547109276056
    2. 'j' → logprob: -6.002476215362549
    3. ' (' → logprob: -15.502476692199707
    4. '(' → logprob: -15.627476692199707
    5. '[j' → logprob: -16.50247573852539
    6. ' j' → logprob: -16.75247573852539
    7. '	j' → logprob: -16.87747573852539
    8. '   ' → logprob: -19.12747573852539
    9. ',j' → logprob: -19.87747573852539
    10. '(
' → logprob: -19.87747573852539

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27535268664360046
    2. ')
' → logprob: -1.6503527164459229
    3. '               ' → logprob: -3.025352716445923
    4. ' )' → logprob: -9.650352478027344
    5. '           ' → logprob: -10.150352478027344
    6. ' )
' → logprob: -10.275352478027344
    7. ')
' → logprob: -11.150352478027344
    8. '       ' → logprob: -12.900352478027344
    9. '<|end|>' → logprob: -12.900352478027344
    10. '                   ' → logprob: -13.025352478027344

Token 453: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2471589798224159e-05
    2. '
' → logprob: -12.375012397766113
    3. '           ' → logprob: -13.000012397766113
    4. '                   ' → logprob: -13.125012397766113
    5. '                
' → logprob: -13.250012397766113
    6. '              ' → logprob: -14.375012397766113
    7. '       ' → logprob: -14.875012397766113
    8. '                ' → logprob: -15.000012397766113
    9. '   ' → logprob: -15.375012397766113
    10. ',' → logprob: -15.750012397766113

Token 454: ' above' (ID: 5151)
  Prédit: 'above'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'above' (adapté à ' above') → logprob: -0.006485623307526112
    2. ' above' → logprob: -5.256485462188721
    3. '               ' → logprob: -6.756485462188721
    4. '           ' → logprob: -9.756485939025879
    5. '   ' → logprob: -10.506485939025879
    6. '                   ' → logprob: -13.506485939025879
    7. ' ' → logprob: -14.506485939025879
    8. '       ' → logprob: -15.006485939025879
    9. '  ' → logprob: -16.006484985351562
    10. '
' → logprob: -16.756484985351562

Token 455: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: 0.0
    2. '_counts' → logprob: -17.75
    3. 'count' → logprob: -18.625
    4. '_' → logprob: -18.75
    5. ' _' → logprob: -19.125
    6. '_c' → logprob: -19.125
    7. '\' → logprob: -19.375
    8. '_COUNT' → logprob: -20.625
    9. ']_' → logprob: -21.0
    10. ')_' → logprob: -21.125

Token 456: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.75000286102295
    3. ' [' → logprob: -16.125003814697266
    4. '[i' → logprob: -17.125003814697266
    5. 'j' → logprob: -17.125003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '][' → logprob: -19.125003814697266
    8. '[a' → logprob: -19.375003814697266
    9. '[v' → logprob: -19.625003814697266
    10. '	j' → logprob: -19.875003814697266

Token 457: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3067720830440521
    2. ']+=' → logprob: -2.056771993637085
    3. ' +=' → logprob: -2.306771993637085
    4. ']' → logprob: -3.306771993637085
    5. '+' → logprob: -9.931772232055664
    6. ' ]' → logprob: -10.806772232055664
    7. ')' → logprob: -10.931772232055664
    8. '   ' → logprob: -11.806772232055664
    9. '[' → logprob: -13.806772232055664
    10. '=' → logprob: -13.806772232055664

Token 458: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0619862861931324
    2. ' +=' → logprob: -2.811986207962036
    3. ']+=' → logprob: -10.936985969543457
    4. '=' → logprob: -14.686985969543457
    5. '+' → logprob: -15.061985969543457
    6. '   ' → logprob: -16.686986923217773
    7. ' ' → logprob: -18.436986923217773
    8. '    ' → logprob: -18.686986923217773
    9. '+='' → logprob: -19.686986923217773
    10. ']' → logprob: -19.936986923217773

Token 459: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -20.0
    4. '   ' → logprob: -20.375
    5. '```' → logprob: -21.125
    6. '۱' → logprob: -21.75
    7. '0' → logprob: -22.25
    8. '１' → logprob: -22.5625
    9. '१' → logprob: -23.0
    10. '১' → logprob: -23.125

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '```' → logprob: -20.437501907348633
    5. '۱' → logprob: -20.562501907348633
    6. '１' → logprob: -21.000001907348633
    7. '
' → logprob: -21.062501907348633
    8. '<|end|>' → logprob: -21.750001907348633
    9. '  ' → logprob: -21.812501907348633
    10. '१' → logprob: -22.062501907348633

Token 461: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2362612783908844
    2. '    
' → logprob: -2.2362613677978516
    3. '   ' → logprob: -2.3612613677978516
    4. '  
' → logprob: -5.611261367797852
    5. '<|end|>' → logprob: -5.736261367797852
    6. ' 
' → logprob: -6.986261367797852
    7. '	
' → logprob: -7.986261367797852
    8. '\n' → logprob: -8.111261367797852
    9. 'return' → logprob: -8.611261367797852
    10. '        
' → logprob: -8.861261367797852

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2548442482948303
    2. '    
' → logprob: -2.0048441886901855
    3. '
' → logprob: -3.1298441886901855
    4. '<|end|>' → logprob: -3.3798441886901855
    5. '  
' → logprob: -5.0048441886901855
    6. ' 
' → logprob: -6.2548441886901855
    7. '	
' → logprob: -7.1298441886901855
    8. '	return' → logprob: -7.5048441886901855
    9. '<|end|>' → logprob: -7.5048441886901855
    10. '        
' → logprob: -7.6298441886901855

Token 463: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2526059150695801
    2. '   ' → logprob: -2.50260591506958
    3. 'free' → logprob: -2.50260591506958
    4. ' free' → logprob: -3.37760591506958
    5. '    
' → logprob: -4.12760591506958
    6. '  
' → logprob: -5.62760591506958
    7. 'for' → logprob: -6.50260591506958
    8. ' 
' → logprob: -6.62760591506958
    9. 'return' → logprob: -7.12760591506958
    10. '   
' → logprob: -7.50260591506958

Token 464: ' les' (ID: 1341)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.148965522646904
    2. ' free' → logprob: -2.02396559715271
    3. '   ' → logprob: -5.398965358734131
    4. 'return' → logprob: -6.523965358734131
    5. ' return' → logprob: -8.523965835571289
    6. 'queue' → logprob: -10.648965835571289
    7. '#' → logprob: -10.773965835571289
    8. 'result' → logprob: -11.398965835571289
    9. '	free' → logprob: -12.148965835571289
    10. ' queue' → logprob: -12.648965835571289

Token 465: ' dis' (ID: 829)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.3133533000946045
    2. ' free' → logprob: -1.3133533000946045
    3. ' libres' → logprob: -10.063353538513184
    4. ' libre' → logprob: -11.313353538513184
    5. 'queue' → logprob: -11.563353538513184
    6. '   ' → logprob: -11.688353538513184
    7. ' queue' → logprob: -12.563353538513184
    8. '	free' → logprob: -12.688353538513184
    9. '_free' → logprob: -12.813353538513184
    10. ' ' → logprob: -12.813353538513184

Token 466: 'ques' (ID: 3531)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.06619352847337723
    2. ' free' → logprob: -2.8161935806274414
    3. '   ' → logprob: -6.316193580627441
    4. '_free' → logprob: -6.316193580627441
    5. 'f' → logprob: -8.941193580627441
    6. '	free' → logprob: -9.191193580627441
    7. '-free' → logprob: -9.566193580627441
    8. '#' → logprob: -9.816193580627441
    9. ' libres' → logprob: -9.941193580627441
    10. ' ' → logprob: -10.316193580627441

Token 467: ' sans' (ID: 9828)
  Prédit: ' libres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' libres' → logprob: -0.424326092004776
    2. 'free' → logprob: -1.4243260622024536
    3. ' free' → logprob: -3.299326181411743
    4. 'lib' → logprob: -3.424326181411743
    5. '_free' → logprob: -3.924326181411743
    6. 'dis' → logprob: -5.674325942993164
    7. '_lib' → logprob: -5.924325942993164
    8. '   ' → logprob: -6.549325942993164
    9. 'with' → logprob: -6.674325942993164
    10. ' libre' → logprob: -7.174325942993164

Token 468: ' disque' (ID: 114222)
  Prédit: ' dessus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dessus' → logprob: -0.6924260854721069
    2. ' au' → logprob: -1.317426085472107
    3. 'above' → logprob: -2.5674262046813965
    4. ' above' → logprob: -2.6924262046813965
    5. 'au' → logprob: -2.8174262046813965
    6. ' disque' → logprob: -5.0674262046813965
    7. 'dis' → logprob: -5.1924262046813965
    8. '_' → logprob: -5.6924262046813965
    9. '-dessus' → logprob: -5.8174262046813965
    10. ' any' → logprob: -6.0674262046813965

Token 469: ' au' (ID: 2791)
  Prédit: ' dessus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dessus' → logprob: -0.277459055185318
    2. ' au' → logprob: -1.7774590253829956
    3. 'au' → logprob: -2.652459144592285
    4. 'dess' → logprob: -7.277459144592285
    5. ' above' → logprob: -7.777459144592285
    6. '_' → logprob: -7.902459144592285
    7. '-dessus' → logprob: -8.152459144592285
    8. ' sur' → logprob: -8.652459144592285
    9. 'above' → logprob: -8.652459144592285
    10. '   ' → logprob: -9.152459144592285

Token 470: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.20687834918498993
    2. '-dessus' → logprob: -1.7068783044815063
    3. ' dessus' → logprob: -5.706878185272217
    4. 'above' → logprob: -6.456878185272217
    5. '   ' → logprob: -7.956878185272217
    6. 's' → logprob: -10.206878662109375
    7. 'des' → logprob: -10.581878662109375
    8. '       ' → logprob: -11.081878662109375
    9. 'sus' → logprob: -11.331878662109375
    10. 'ss' → logprob: -11.331878662109375

Token 471: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030158525332808495
    2. '=' → logprob: -4.405158519744873
    3. '   ' → logprob: -4.530158519744873
    4. ' sont' → logprob: -6.530158519744873
    5. '_free' → logprob: -7.155158519744873
    6. 'free' → logprob: -7.280158519744873
    7. 's' → logprob: -7.405158519744873
    8. ' are' → logprob: -7.405158519744873
    9. ' ' → logprob: -7.780158519744873
    10. ' libres' → logprob: -7.780158519744873

Token 472: ' libres' (ID: 79503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20581647753715515
    2. '[' → logprob: -2.2058165073394775
    3. ' [' → logprob: -2.9558165073394775
    4. '[j' → logprob: -3.8308165073394775
    5. '[idx' → logprob: -7.955816268920898
    6. '[s' → logprob: -8.205816268920898
    7. '[k' → logprob: -8.330816268920898
    8. '[x' → logprob: -8.455816268920898
    9. '[t' → logprob: -8.955816268920898
    10. '[]
' → logprob: -9.205816268920898

Token 473: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015907317399978638
    2. '
' → logprob: -4.890907287597656
    3. 'free' → logprob: -5.015907287597656
    4. ' free' → logprob: -7.015907287597656
    5. '    
' → logprob: -8.390907287597656
    6. '  ' → logprob: -9.140907287597656
    7. '	free' → logprob: -9.390907287597656
    8. ' =' → logprob: -10.140907287597656
    9. '   
' → logprob: -10.140907287597656
    10. '_free' → logprob: -10.140907287597656

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014564243610948324
    2. 'free' → logprob: -7.126456260681152
    3. '
' → logprob: -7.626456260681152
    4. ' free' → logprob: -9.126456260681152
    5. '    
' → logprob: -10.251456260681152
    6. '	free' → logprob: -11.876456260681152
    7. 'return' → logprob: -13.251456260681152
    8. 'fre' → logprob: -13.376456260681152
    9. '_free' → logprob: -13.626456260681152
    10. '    ' → logprob: -13.626456260681152

Token 475: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.7451193928718567
    2. 'free' (adapté à ' free') → logprob: -0.8701193928718567
    3. '   ' → logprob: -2.245119333267212
    4. 'return' → logprob: -8.370119094848633
    5. ' return' → logprob: -8.745119094848633
    6. '	free' → logprob: -9.620119094848633
    7. '_free' → logprob: -11.495119094848633
    8. '  ' → logprob: -12.245119094848633
    9. 'fre' → logprob: -12.245119094848633
    10. ' ' → logprob: -12.370119094848633

Token 476: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38736334443092346
    2. '=' → logprob: -1.137363314628601
    3. '_dis' → logprob: -8.63736343383789
    4. 'dis' → logprob: -8.88736343383789
    5. '=[]' → logprob: -9.13736343383789
    6. '_disc' → logprob: -11.38736343383789
    7. '=[]
' → logprob: -11.76236343383789
    8. '_indices' → logprob: -11.76236343383789
    9. '=[' → logprob: -12.01236343383789
    10. '_' → logprob: -12.13736343383789

Token 477: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09895037859678268
    2. '[' → logprob: -2.9739503860473633
    3. ' [' → logprob: -3.8489503860473633
    4. '[j' → logprob: -4.098950386047363
    5. '[int' → logprob: -6.473950386047363
    6. '[idx' → logprob: -7.598950386047363
    7. '[]
' → logprob: -7.848950386047363
    8. '[index' → logprob: -7.973950386047363
    9. '{' → logprob: -8.348950386047363
    10. '[id' → logprob: -8.598950386047363

Token 478: 'above' (ID: 89414)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03389222174882889
    2. '(i' → logprob: -3.7838921546936035
    3. '(' → logprob: -5.5338921546936035
    4. 'idx' → logprob: -6.2838921546936035
    5. ' (' → logprob: -6.7838921546936035
    6. 'not' → logprob: -6.9088921546936035
    7. 'above' → logprob: -7.1588921546936035
    8. ' i' → logprob: -7.5338921546936035
    9. '(not' → logprob: -8.033892631530762
    10. 'j' → logprob: -8.283892631530762

Token 479: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0003729966701939702
    2. '==' → logprob: -8.125372886657715
    3. 'count' → logprob: -10.000372886657715
    4. ' ==' → logprob: -10.625372886657715
    5. '_c' → logprob: -13.000372886657715
    6. '_' → logprob: -13.375372886657715
    7. '=' → logprob: -14.250372886657715
    8. '   ' → logprob: -14.625372886657715
    9. 'c' → logprob: -14.875372886657715
    10. '.count' → logprob: -15.000372886657715

Token 480: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001573663903400302
    2. 'i' → logprob: -6.62657356262207
    3. '[j' → logprob: -8.37657356262207
    4. '==' → logprob: -11.37657356262207
    5. '[k' → logprob: -13.37657356262207
    6. '[idx' → logprob: -13.50157356262207
    7. '_i' → logprob: -13.75157356262207
    8. ' ==' → logprob: -14.62657356262207
    9. '[index' → logprob: -14.75157356262207
    10. 'j' → logprob: -14.87657356262207

Token 481: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3891206681728363
    2. ' ==' → logprob: -1.1391206979751587
    3. ']==' → logprob: -6.139120578765869
    4. ']' → logprob: -9.389121055603027
    5. ' ' → logprob: -12.889121055603027
    6. '=' → logprob: -13.139121055603027
    7. ')==' → logprob: -14.139121055603027
    8. '==
' → logprob: -14.514121055603027
    9. '()==' → logprob: -15.389121055603027
    10. '']==' → logprob: -15.889121055603027

Token 482: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20141898095607758
    2. ' ==' → logprob: -1.7014189958572388
    3. ']==' → logprob: -12.32641887664795
    4. '=' → logprob: -13.95141887664795
    5. '==
' → logprob: -15.32641887664795
    6. '()==' → logprob: -16.576419830322266
    7. ')==' → logprob: -17.451419830322266
    8. ']' → logprob: -17.576419830322266
    9. ' ' → logprob: -17.701419830322266
    10. '===' → logprob: -18.326419830322266

Token 483: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.50020408630371
    4. '  ' → logprob: -19.62520408630371
    5. ' ' → logprob: -20.00020408630371
    6. '۰' → logprob: -20.12520408630371
    7. 'False' → logprob: -20.87520408630371
    8. '```' → logprob: -21.00020408630371
    9. '00' → logprob: -21.12520408630371
    10. '	' → logprob: -21.12520408630371

Token 484: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.125085830688477
    4. '  ' → logprob: -19.000085830688477
    5. '```' → logprob: -19.750085830688477
    6. ' ' → logprob: -20.000085830688477
    7. '۰' → logprob: -20.250085830688477
    8. '０' → logprob: -20.750085830688477
    9. '00' → logprob: -21.000085830688477
    10. '	' → logprob: -21.000085830688477

Token 485: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008834374137222767
    2. 'for' → logprob: -4.758834362030029
    3. '   ' → logprob: -8.883834838867188
    4. '	for' → logprob: -9.758834838867188
    5. ' ' → logprob: -11.008834838867188
    6. '  ' → logprob: -13.008834838867188
    7. '    ' → logprob: -13.508834838867188
    8. ' and' → logprob: -13.633834838867188
    9. '       ' → logprob: -13.883834838867188
    10. ']' → logprob: -14.883834838867188

Token 486: ' (' (ID: 350)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0029150729533284903
    2. ' not' → logprob: -5.877914905548096
    3. '(not' → logprob: -9.502915382385254
    4. '   ' → logprob: -10.377915382385254
    5. '	not' → logprob: -13.377915382385254
    6. '
' → logprob: -14.252915382385254
    7. 'removed' → logprob: -14.252915382385254
    8. '!' → logprob: -14.877915382385254
    9. '       ' → logprob: -15.502915382385254
    10. ' ' → logprob: -15.877915382385254

Token 487: 'not' (ID: 2878)
  Prédit: 'not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014254826121032238
    2. ' not' → logprob: -4.264255046844482
    3. '   ' → logprob: -9.764254570007324
    4. '(not' → logprob: -11.389254570007324
    5. '
' → logprob: -11.639254570007324
    6. '!' → logprob: -12.764254570007324
    7. 'removed' → logprob: -12.764254570007324
    8. '	not' → logprob: -12.764254570007324
    9. ')' → logprob: -14.014254570007324
    10. '```' → logprob: -14.014254570007324

Token 488: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.00103352265432477
    2. ' removed' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.001033782958984
    4. 'rem' → logprob: -15.626033782958984
    5. 'remove' → logprob: -16.376033782958984
    6. 'deleted' → logprob: -16.876033782958984
    7. '           ' → logprob: -17.751033782958984
    8. ' ' → logprob: -17.751033782958984
    9. 'Removed' → logprob: -18.251033782958984
    10. '_removed' → logprob: -18.251033782958984

Token 489: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. ')[' → logprob: -13.250001907348633
    3. ')' → logprob: -16.000001907348633
    4. '[' → logprob: -17.875001907348633
    5. '[j' → logprob: -18.125001907348633
    6. ' [' → logprob: -18.250001907348633
    7. '[
' → logprob: -18.375001907348633
    8. ')i' → logprob: -19.500001907348633
    9. '
' → logprob: -20.375001907348633
    10. '[I' → logprob: -20.750001907348633

Token 490: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16053889691829681
    2. ')' → logprob: -1.910538911819458
    3. ')]
' → logprob: -8.660538673400879
    4. ' )' → logprob: -9.410538673400879
    5. ']' → logprob: -10.535538673400879
    6. ')
' → logprob: -11.410538673400879
    7. '   ' → logprob: -11.660538673400879
    8. ')]

' → logprob: -12.160538673400879
    9. '))' → logprob: -12.785538673400879
    10. '       ' → logprob: -13.660538673400879

Token 491: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011323550716042519
    2. 'for' → logprob: -4.51132345199585
    3. '   ' → logprob: -8.386323928833008
    4. '	for' → logprob: -10.636323928833008
    5. ' ' → logprob: -11.136323928833008
    6. '       ' → logprob: -12.386323928833008
    7. '  ' → logprob: -13.136323928833008
    8. '    ' → logprob: -13.261323928833008
    9. '
' → logprob: -14.761323928833008
    10. ']' → logprob: -15.011323928833008

Token 492: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024812787771224976
    2. ' i' → logprob: -4.024812698364258
    3. 'range' → logprob: -5.649812698364258
    4. ' range' → logprob: -5.774812698364258
    5. ' in' → logprob: -11.649812698364258
    6. 'in' → logprob: -11.774812698364258
    7. ' ' → logprob: -14.399812698364258
    8. '
' → logprob: -15.149812698364258
    9. ' ' → logprob: -15.899812698364258
    10. '   ' → logprob: -16.149812698364258

Token 493: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02976299449801445
    2. 'in' → logprob: -3.5297629833221436
    3. ' i' → logprob: -12.779763221740723
    4. 'i' → logprob: -12.904763221740723
    5. 'range' → logprob: -13.154763221740723
    6. ' ' → logprob: -13.654763221740723
    7. ')' → logprob: -14.029763221740723
    8. '
' → logprob: -14.029763221740723
    9. '	in' → logprob: -14.404763221740723
    10. '   ' → logprob: -14.404763221740723

Token 494: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.37520408630371
    4. '
' → logprob: -18.25020408630371
    5. ' ' → logprob: -18.62520408630371
    6. '(range' → logprob: -19.25020408630371
    7. '  ' → logprob: -20.37520408630371
    8. '    ' → logprob: -21.37520408630371
    9. '	range' → logprob: -21.37520408630371
    10. '

' → logprob: -21.87520408630371

Token 495: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.514650183613412e-05
    2. 'n' → logprob: -10.125055313110352
    3. '(len' → logprob: -12.000055313110352
    4. '(' → logprob: -12.125055313110352
    5. ' (' → logprob: -12.625055313110352
    6. '(
' → logprob: -16.25005531311035
    7. '   ' → logprob: -17.75005531311035
    8. 'len' → logprob: -17.75005531311035
    9. '
' → logprob: -18.25005531311035
    10. ' n' → logprob: -18.50005531311035

Token 496: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01843120902776718
    2. ')]' → logprob: -4.018431186676025
    3. ')' → logprob: -8.768431663513184
    4. ' ]' → logprob: -9.768431663513184
    5. '   ' → logprob: -9.893431663513184
    6. ']
' → logprob: -11.018431663513184
    7. '])' → logprob: -14.143431663513184
    8. ']

' → logprob: -15.393431663513184
    9. '])]' → logprob: -16.143430709838867
    10. '()]' → logprob: -16.518430709838867

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037150459829717875
    2. '
' → logprob: -6.1287150382995605
    3. 'return' → logprob: -7.2537150382995605
    4. '    
' → logprob: -7.2537150382995605
    5. '	return' → logprob: -9.753715515136719
    6. ' return' → logprob: -10.003715515136719
    7. '<|end|>' → logprob: -12.378715515136719
    8. '	
' → logprob: -13.003715515136719
    9. '  
' → logprob: -14.128715515136719
    10. 'eturn' → logprob: -14.253715515136719

Token 498: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04928072914481163
    2. 'return' (adapté à ' return') → logprob: -3.0492806434631348
    3. ' return' → logprob: -7.424280643463135
    4. '    
' → logprob: -9.924281120300293
    5. '
' → logprob: -10.049281120300293
    6. '	return' → logprob: -12.674281120300293
    7. '       ' → logprob: -14.924281120300293
    8. '  ' → logprob: -15.924281120300293
    9. ' ' → logprob: -15.924281120300293
    10. '        
' → logprob: -16.174280166625977

Token 499: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.011047814972698689
    2. ' free' → logprob: -4.511047840118408
    3. '   ' → logprob: -18.01104736328125
    4. '	free' → logprob: -18.76104736328125
    5. 'fre' → logprob: -20.38604736328125
    6. '_free' → logprob: -21.13604736328125
    7. '.free' → logprob: -21.13604736328125
    8. 'Free' → logprob: -21.76104736328125
    9. ' ' → logprob: -21.76104736328125
    10. ' ' → logprob: -21.88604736328125

Token 500: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6505590677261353
    2. '<|end|>' → logprob: -0.7755590677261353
    3. '
' → logprob: -4.525558948516846
    4. '<|end|>' → logprob: -5.650558948516846
    5. '#' → logprob: -5.775558948516846
    6. '```' → logprob: -9.525559425354004
    7. '    
' → logprob: -9.900559425354004
    8. '

' → logprob: -10.150559425354004
    9. '  
' → logprob: -10.400559425354004
    10. 'free' → logprob: -10.400559425354004

Token 501: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005253680050373077
    2. '#' → logprob: -5.880253791809082
    3. 'class' → logprob: -6.755253791809082
    4. '
' → logprob: -6.880253791809082
    5. '<|end|>' → logprob: -9.505253791809082
    6. 'import' → logprob: -10.255253791809082
    7. '```' → logprob: -10.630253791809082
    8. 'for' → logprob: -10.630253791809082
    9. '\n' → logprob: -10.755253791809082
    10. '

' → logprob: -10.755253791809082

Token 502: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004473085515201092
    2. '#' → logprob: -5.5044732093811035
    3. 'class' → logprob: -7.8794732093811035
    4. 'import' → logprob: -11.504472732543945
    5. ' def' → logprob: -12.504472732543945
    6. 'for' → logprob: -14.629472732543945
    7. '```' → logprob: -14.629472732543945
    8. 'print' → logprob: -15.254472732543945
    9. 'from' → logprob: -15.379472732543945
    10. ' #' → logprob: -16.004472732543945

Token 503: ' réc' (ID: 36254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014996211975812912
    2. ' def' → logprob: -4.26499605178833
    3. '#' → logprob: -7.26499605178833
    4. ' remove' → logprob: -10.139996528625488
    5. 'remove' → logprob: -10.139996528625488
    6. ' pour' → logprob: -11.389996528625488
    7. 'de' → logprob: -11.764996528625488
    8. 'to' → logprob: -12.014996528625488
    9. 'pour' → logprob: -12.514996528625488
    10. ' to' → logprob: -12.639996528625488

Token 504: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -7.791440293658525e-05
    2. 'urs' → logprob: -9.875078201293945
    3. 'usive' → logprob: -10.750078201293945
    4. 'ur' → logprob: -13.375078201293945
    5. 'urrent' → logprob: -13.500078201293945
    6. 'def' → logprob: -14.375078201293945
    7. 'usr' → logprob: -14.750078201293945
    8. '
' → logprob: -15.375078201293945
    9. '#' → logprob: -15.750078201293945
    10. 'urse' → logprob: -16.000078201293945

Token 505: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.860340752406046e-05
    2. ' def' → logprob: -9.7500581741333
    3. 'de' → logprob: -15.6250581741333
    4. '
' → logprob: -16.625059127807617
    5. '#' → logprob: -18.125059127807617
    6. ':def' → logprob: -19.875059127807617
    7. ' déf' → logprob: -20.500059127807617
    8. '(def' → logprob: -20.875059127807617
    9. 'dé' → logprob: -21.750059127807617
    10. 'd' → logprob: -22.000059127807617

Token 506: ' obtenir' (ID: 54423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14307495951652527
    2. ' def' → logprob: -2.6430749893188477
    3. '#' → logprob: -4.143074989318848
    4. 'solve' → logprob: -4.768074989318848
    5. 'l' → logprob: -5.143074989318848
    6. ' la' → logprob: -5.268074989318848
    7. 'la' → logprob: -6.143074989318848
    8. 'tr' → logprob: -6.143074989318848
    9. 'solver' → logprob: -6.143074989318848
    10. ' résoudre' → logprob: -6.268074989318848

Token 507: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7970625758171082
    2. ' l' → logprob: -1.047062635421753
    3. 'all' → logprob: -2.922062635421753
    4. 'def' → logprob: -3.172062635421753
    5. 'l' → logprob: -3.422062635421753
    6. 'la' → logprob: -4.422062397003174
    7. ' les' → logprob: -4.797062397003174
    8. ' all' → logprob: -4.797062397003174
    9. 'les' → logprob: -4.797062397003174
    10. ' le' → logprob: -5.047062397003174

Token 508: ' maximum' (ID: 10562)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.5579380393028259
    2. 'next' → logprob: -2.3079380989074707
    3. '#' → logprob: -2.4329380989074707
    4. 'plus' → logprob: -2.6829380989074707
    5. 'minimum' → logprob: -3.0579380989074707
    6. 'free' → logprob: -3.5579380989074707
    7. 'best' → logprob: -4.182938098907471
    8. 'nombre' → logprob: -4.432938098907471
    9. 'che' → logprob: -4.432938098907471
    10. 'max' → logprob: -4.557938098907471

Token 509: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04006507620215416
    2. ' def' → logprob: -3.415065050125122
    3. '_possible' → logprob: -6.415065288543701
    4. '_' → logprob: -6.915065288543701
    5. '<|end|>' → logprob: -7.040065288543701
    6. '_depth' → logprob: -7.540065288543701
    7. 'possible' → logprob: -7.790065288543701
    8. ' ' → logprob: -8.040064811706543
    9. ' possible' → logprob: -8.290064811706543
    10. 'de' → logprob: -8.415064811706543

Token 510: ' dis' (ID: 829)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.44834616780281067
    2. ' free' → logprob: -1.0733461380004883
    3. 'dis' → logprob: -4.823346138000488
    4. ' points' → logprob: -5.573346138000488
    5. 'points' → logprob: -5.698346138000488
    6. 'score' → logprob: -6.573346138000488
    7. '_free' → logprob: -7.198346138000488
    8. ' dis' → logprob: -7.448346138000488
    9. 'gain' → logprob: -7.948346138000488
    10. ' score' → logprob: -8.823346138000488

Token 511: 'ques' (ID: 3531)
  Prédit: 'ques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.17057327926158905
    2. 'cs' → logprob: -2.2955732345581055
    3. 'c' → logprob: -3.2955732345581055
    4. 'ks' → logprob: -4.5455732345581055
    5. 'que' → logprob: -5.2955732345581055
    6. 'k' → logprob: -5.7955732345581055
    7. 'q' → logprob: -8.795573234558105
    8. 'cards' → logprob: -10.045573234558105
    9. 'qs' → logprob: -10.420573234558105
    10. 't' → logprob: -10.545573234558105

Token 512: ' pouvant' (ID: 104840)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.048974741250276566
    2. '_to' → logprob: -3.7989747524261475
    3. '_removed' → logprob: -5.048974514007568
    4. '_free' → logprob: -5.298974514007568
    5. ' def' → logprob: -5.423974514007568
    6. '(i' → logprob: -6.423974514007568
    7. '_' → logprob: -6.923974514007568
    8. '_possible' → logprob: -7.048974514007568
    9. '_count' → logprob: -7.298974514007568
    10. '_on' → logprob: -7.423974514007568

Token 513: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.24319548904895782
    2. '#' → logprob: -1.7431955337524414
    3. ' être' → logprob: -3.4931955337524414
    4. 'êtres' → logprob: -5.743195533752441
    5. 'etre' → logprob: -5.868195533752441
    6. ' #' → logprob: -6.618195533752441
    7. ''être' → logprob: -7.493195533752441
    8. 'êt' → logprob: -7.618195533752441
    9. '```' → logprob: -7.618195533752441
    10. 'ê' → logprob: -7.743195533752441

Token 514: ' retir' (ID: 35638)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.0901601314544678
    2. 'emp' → logprob: -1.2151601314544678
    3. 'ret' → logprob: -1.9651601314544678
    4. ' retir' → logprob: -2.0901601314544678
    5. ' emp' → logprob: -3.7151601314544678
    6. 'pos' → logprob: -4.090160369873047
    7. ' en' → logprob: -4.090160369873047
    8. 'lib' → logprob: -4.340160369873047
    9. 'removed' → logprob: -5.215160369873047
    10. ' pos' → logprob: -5.715160369873047

Token 515: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.04325848072767258
    2. 'er' → logprob: -3.5432584285736084
    3. 'é' → logprob: -4.7932586669921875
    4. 'def' → logprob: -5.5432586669921875
    5. 'e' → logprob: -8.168258666992188
    6. 'es' → logprob: -8.293258666992188
    7. '   ' → logprob: -8.543258666992188
    8. 'ées' → logprob: -9.918258666992188
    9. 'ée' → logprob: -9.918258666992188
    10. '#' → logprob: -10.043258666992188

Token 516: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000275040598353371
    2. ' def' → logprob: -8.250274658203125
    3. '
' → logprob: -11.750274658203125
    4. '(def' → logprob: -12.625274658203125
    5. '(
' → logprob: -14.000274658203125
    6. '(n' → logprob: -14.375274658203125
    7. '(' → logprob: -14.500274658203125
    8. 'de' → logprob: -15.875274658203125
    9. ' déf' → logprob: -15.875274658203125
    10. 'ndef' → logprob: -16.625274658203125

Token 517: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004336493439041078
    2. ' def' → logprob: -7.750433444976807
    3. '
' → logprob: -12.750433921813965
    4. ' déf' → logprob: -20.37543296813965
    5. '	def' → logprob: -20.62543296813965
    6. ' 
' → logprob: -20.75043296813965
    7. ':def' → logprob: -21.12543296813965
    8. 'ndef' → logprob: -21.87543296813965
    9. '```' → logprob: -22.37543296813965
    10. 'de' → logprob: -22.37543296813965

Token 518: ' Arg' (ID: 12045)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.935296834039036e-06
    2. ' def' → logprob: -12.75000286102295
    3. '
' → logprob: -18.625003814697266
    4. 'de' → logprob: -21.000003814697266
    5. '#' → logprob: -23.500003814697266
    6. '	def' → logprob: -23.750003814697266
    7. '   ' → logprob: -23.875003814697266
    8. '```' → logprob: -24.000003814697266
    9. 'import' → logprob: -24.125003814697266
    10. 'd' → logprob: -24.250003814697266

Token 519: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0640168190002441
    2. ' def' → logprob: -1.3140168190002441
    3. 'uments' → logprob: -1.6890168190002441
    4. 'ument' → logprob: -2.064016819000244
    5. '   ' → logprob: -2.689016819000244
    6. 's' → logprob: -5.689016819000244
    7. ' removed' → logprob: -7.064016819000244
    8. '    ' → logprob: -7.439016819000244
    9. ' ' → logprob: -7.689016819000244
    10. '
' → logprob: -8.564016342163086

Token 520: ' removed' (ID: 11906)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.029334651306271553
    2. 'def' → logprob: -4.029334545135498
    3. ' discs' → logprob: -5.154334545135498
    4. 'removed' → logprob: -6.029334545135498
    5. 'free' → logprob: -6.779334545135498
    6. '   ' → logprob: -7.779334545135498
    7. 'index' → logprob: -8.529335021972656
    8. 'rem' → logprob: -8.529335021972656
    9. ' def' → logprob: -8.654335021972656
    10. 'disc' → logprob: -8.654335021972656

Token 521: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.716691792011261
    2. '):
' → logprob: -1.8416917324066162
    3. '):' → logprob: -1.9666917324066162
    4. 'removed' → logprob: -2.466691732406616
    5. 'def' → logprob: -2.966691732406616
    6. '   ' → logprob: -3.591691732406616
    7. '(dis' → logprob: -3.591691732406616
    8. ')' → logprob: -4.466691970825195
    9. 'dis' → logprob: -6.216691970825195
    10. '(rem' → logprob: -6.216691970825195

Token 522: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3155604898929596
    2. ' [' → logprob: -1.3155604600906372
    3. ' a' → logprob: -6.690560340881348
    4. '[a' → logprob: -8.440560340881348
    5. '   ' → logprob: -8.565560340881348
    6. '[n' → logprob: -8.815560340881348
    7. '[len' → logprob: -8.940560340881348
    8. 'a' → logprob: -9.440560340881348
    9. '[List' → logprob: -9.565560340881348
    10. '[]' → logprob: -9.815560340881348

Token 523: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04167712852358818
    2. ' list' → logprob: -3.291677236557007
    3. '[' → logprob: -6.041676998138428
    4. 'liste' → logprob: -7.291676998138428
    5. '[]' → logprob: -7.791676998138428
    6. 'List' → logprob: -10.291677474975586
    7. ' [' → logprob: -10.291677474975586
    8. 'bool' → logprob: -11.041677474975586
    9. '[list' → logprob: -11.166677474975586
    10. ' liste' → logprob: -11.166677474975586

Token 524: ' bool' (ID: 3792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45898881554603577
    2. ' =' → logprob: -2.458988904953003
    3. ' of' → logprob: -2.833988904953003
    4. ' de' → logprob: -3.083988904953003
    5. '=' → logprob: -3.333988904953003
    6. '[:]' → logprob: -3.583988904953003
    7. 'of' → logprob: -4.083988666534424
    8. '=[' → logprob: -4.083988666534424
    9. '<bool' → logprob: -4.208988666534424
    10. '[]' → logprob: -4.333988666534424

Token 525: 'é' (ID: 377)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24404604732990265
    2. '[]' → logprob: -1.7440460920333862
    3. 'ean' → logprob: -3.4940459728240967
    4. 'é' → logprob: -5.744046211242676
    5. '_' → logprob: -6.119046211242676
    6. '[
' → logprob: -6.869046211242676
    7. ']' → logprob: -7.369046211242676
    8. '[:]' → logprob: -7.369046211242676
    9. '   ' → logprob: -7.619046211242676
    10. '[i' → logprob: -7.994046211242676

Token 526: 'enne' (ID: 17721)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0022822916507720947
    2. 'ane' → logprob: -6.87728214263916
    3. 'ne' → logprob: -7.87728214263916
    4. '[' → logprob: -8.12728214263916
    5. 'en' → logprob: -8.37728214263916
    6. 'enne' → logprob: -9.37728214263916
    7. '[]' → logprob: -9.62728214263916
    8. 'n' → logprob: -9.87728214263916
    9. '   ' → logprob: -9.87728214263916
    10. 'a' → logprob: -10.50228214263916

Token 527: ' indiqu' (ID: 100773)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35880792140960693
    2. '   ' → logprob: -1.983807921409607
    3. ' of' → logprob: -2.7338080406188965
    4. 'def' → logprob: -3.4838080406188965
    5. '[]' → logprob: -4.2338080406188965
    6. ',' → logprob: -4.3588080406188965
    7. ' [' → logprob: -5.3588080406188965
    8. ' def' → logprob: -5.4838080406188965
    9. '[:]' → logprob: -5.6088080406188965
    10. '[n' → logprob: -5.7338080406188965

Token 528: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0001249925117008388
    2. '   ' → logprob: -9.25012493133545
    3. '[]' → logprob: -11.62512493133545
    4. '[' → logprob: -11.75012493133545
    5. 'ue' → logprob: -13.12512493133545
    6. 'uant' → logprob: -13.12512493133545
    7. '       ' → logprob: -13.50012493133545
    8. '#' → logprob: -13.50012493133545
    9. 'ent' → logprob: -14.12512493133545
    10. 'u' → logprob: -14.62512493133545

Token 529: ' les' (ID: 1341)
  Prédit: ' quels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quels' → logprob: -0.6758840680122375
    2. ' la' → logprob: -2.6758840084075928
    3. 'quel' → logprob: -2.8008840084075928
    4. 'les' → logprob: -2.9258840084075928
    5. ' quelles' → logprob: -3.4258840084075928
    6. 'qu' → logprob: -3.4258840084075928
    7. ' lesquels' → logprob: -3.5508840084075928
    8. ' les' → logprob: -3.6758840084075928
    9. 'pour' → logprob: -3.9258840084075928
    10. '   ' → logprob: -4.050884246826172

Token 530: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.30543121695518494
    2. ' dis' → logprob: -1.8054312467575073
    3. 'élé' → logprob: -2.8054311275482178
    4. 'indices' → logprob: -4.305431365966797
    5. ' indices' → logprob: -4.930431365966797
    6. ' éléments' → logprob: -5.180431365966797
    7. '#' → logprob: -6.430431365966797
    8. ' disks' → logprob: -6.930431365966797
    9. ' disque' → logprob: -7.180431365966797
    10. 'indexes' → logprob: -7.180431365966797

Token 531: 'ques' (ID: 3531)
  Prédit: 'ons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.47658029198646545
    2. 'removed' → logprob: -1.976580262184143
    3. 'pon' → logprob: -2.6015803813934326
    4. '[' → logprob: -3.3515803813934326
    5. 'son' → logprob: -4.1015801429748535
    6. '_removed' → logprob: -4.7265801429748535
    7. 'on' → logprob: -4.8515801429748535
    8. 't' → logprob: -4.9765801429748535
    9. 's' → logprob: -5.1015801429748535
    10. 'als' → logprob: -5.2265801429748535

Token 532: ' déjà' (ID: 21229)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08550684154033661
    2. ',' → logprob: -3.3355069160461426
    3. '[]' → logprob: -4.085506916046143
    4. '#' → logprob: -5.460506916046143
    5. '[i' → logprob: -5.710506916046143
    6. '       ' → logprob: -6.210506916046143
    7. '[' → logprob: -6.335506916046143
    8. 'def' → logprob: -6.585506916046143
    9. '[ind' → logprob: -6.585506916046143
    10. 'à' → logprob: -6.710506916046143

Token 533: ' retir' (ID: 35638)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5252219438552856
    2. 'en' → logprob: -1.1502219438552856
    3. ' retir' → logprob: -3.525221824645996
    4. 'removed' → logprob: -3.775221824645996
    5. 'sup' → logprob: -4.150221824645996
    6. 'True' → logprob: -4.400221824645996
    7. ' True' → logprob: -4.650221824645996
    8. ' en' → logprob: -6.900221824645996
    9. ' supprim' → logprob: -8.400221824645996
    10. '   ' → logprob: -8.775221824645996

Token 534: 'és' (ID: 1756)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0833299160003662
    2. 'és' → logprob: -1.2083299160003662
    3. '   ' → logprob: -1.9583299160003662
    4. 's' → logprob: -2.583329916000366
    5. '[]
' → logprob: -2.958329916000366
    6. '[' → logprob: -3.833329916000366
    7. 'ées' → logprob: -4.208330154418945
    8. '[i' → logprob: -4.583330154418945
    9. 'es' → logprob: -4.958330154418945
    10. '
' → logprob: -4.958330154418945

Token 535: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.749814019713085e-06
    2. '
' → logprob: -12.500006675720215
    3. ' def' → logprob: -12.750006675720215
    4. '   ' → logprob: -20.00000762939453
    5. 'de' → logprob: -20.25000762939453
    6. '	def' → logprob: -22.37500762939453
    7. ':def' → logprob: -22.50000762939453
    8. 'ndef' → logprob: -22.75000762939453
    9. '```' → logprob: -22.75000762939453
    10. '    
' → logprob: -23.75000762939453

Token 536: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -13.750000953674316
    3. '
' → logprob: -18.500001907348633
    4. '   ' → logprob: -22.875001907348633
    5. 'de' → logprob: -24.000001907348633
    6. '	def' → logprob: -24.750001907348633
    7. '```' → logprob: -24.875001907348633
    8. ':def' → logprob: -24.875001907348633
    9. 'd' → logprob: -25.250001907348633
    10. 'ndef' → logprob: -25.375001907348633

Token 537: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -16.75
    3. '
' → logprob: -19.875
    4. 'de' → logprob: -22.75
    5. '   ' → logprob: -24.625
    6. '```' → logprob: -25.25
    7. '	def' → logprob: -25.375
    8. ':def' → logprob: -26.375
    9. 'd' → logprob: -26.5
    10. 'ndef' → logprob: -27.0

Token 538: ' cherche' (ID: 52345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07898309081792831
    2. ' def' → logprob: -2.5789830684661865
    3. '   ' → logprob: -9.328983306884766
    4. ' déf' → logprob: -13.828983306884766
    5. 'de' → logprob: -14.203983306884766
    6. ' ' → logprob: -14.828983306884766
    7. '    ' → logprob: -14.953983306884766
    8. ' 
' → logprob: -14.953983306884766
    9. '_' → logprob: -14.953983306884766
    10. '
' → logprob: -15.328983306884766

Token 539: ' toutes' (ID: 17502)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1322575956583023
    2. '   ' → logprob: -2.6322576999664307
    3. ' def' → logprob: -3.1322576999664307
    4. 'max' → logprob: -5.757257461547852
    5. ' à' → logprob: -6.132257461547852
    6. 'à' → logprob: -6.507257461547852
    7. ' la' → logprob: -7.632257461547852
    8. 'for' → logprob: -9.007257461547852
    9. '  ' → logprob: -9.007257461547852
    10. ' to' → logprob: -9.257257461547852

Token 540: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8608465790748596
    2. '   ' → logprob: -1.1108465194702148
    3. 'les' → logprob: -2.610846519470215
    4. ' possible' → logprob: -2.860846519470215
    5. 'possible' → logprob: -2.985846519470215
    6. ' possibles' → logprob: -4.360846519470215
    7. 'def' → logprob: -5.110846519470215
    8. '(' → logprob: -5.110846519470215
    9. '_possible' → logprob: -5.110846519470215
    10. 'poss' → logprob: -5.235846519470215

Token 541: ' p' (ID: 275)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.6855489611625671
    2. 'free' → logprob: -1.560549020767212
    3. '_free' → logprob: -1.810549020767212
    4. '   ' → logprob: -3.310549020767212
    5. 'possible' → logprob: -3.935549020767212
    6. 'poss' → logprob: -3.935549020767212
    7. 'dis' → logprob: -4.060548782348633
    8. ' possible' → logprob: -4.935548782348633
    9. ' ' → logprob: -5.060548782348633
    10. '_' → logprob: -5.560548782348633

Token 542: 'aires' (ID: 8507)
  Prédit: 'oss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oss' → logprob: -0.20027832686901093
    2. 'r' → logprob: -2.9502782821655273
    3. 'er' → logprob: -2.9502782821655273
    4. 'erm' → logprob: -3.9502782821655273
    5. 'e' → logprob: -4.825278282165527
    6. 'lus' → logprob: -5.075278282165527
    7. 'art' → logprob: -5.200278282165527
    8. 'ar' → logprob: -5.325278282165527
    9. 'os' → logprob: -5.450278282165527
    10. 'ro' → logprob: -5.450278282165527

Token 543: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5045549869537354
    2. '   ' → logprob: -2.3795549869537354
    3. 'def' → logprob: -2.3795549869537354
    4. ' (' → logprob: -2.5045549869537354
    5. ' possible' → logprob: -2.8795549869537354
    6. '
' → logprob: -3.0045549869537354
    7. 'possible' → logprob: -3.0045549869537354
    8. '_possible' → logprob: -3.0045549869537354
    9. ' ' → logprob: -3.1295549869537354
    10. ' 
' → logprob: -3.3795549869537354

Token 544: ' dis' (ID: 829)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.4460757076740265
    2. 'free' → logprob: -1.696075677871704
    3. ' dis' → logprob: -2.696075677871704
    4. ' free' → logprob: -3.196075677871704
    5. 'indices' → logprob: -3.696075677871704
    6. ' indices' → logprob: -4.446075916290283
    7. 'i' → logprob: -4.446075916290283
    8. 'lib' → logprob: -4.821075916290283
    9. ' libres' → logprob: -5.321075916290283
    10. ' i' → logprob: -6.321075916290283

Token 545: 'ques' (ID: 3531)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43894413113594055
    2. 'ques' → logprob: -1.6889441013336182
    3. 'cs' → logprob: -2.438944101333618
    4. 's' → logprob: -3.688944101333618
    5. 'cr' → logprob: -3.688944101333618
    6. 'ks' → logprob: -4.438944339752197
    7. 'sk' → logprob: -5.813944339752197
    8. 'sc' → logprob: -5.938944339752197
    9. 'k' → logprob: -6.313944339752197
    10. 'removed' → logprob: -6.938944339752197

Token 546: ' libres' (ID: 79503)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5361536145210266
    2. '   ' → logprob: -1.6611535549163818
    3. 'for' → logprob: -3.036153554916382
    4. ' for' → logprob: -3.536153554916382
    5. ',' → logprob: -3.536153554916382
    6. ' def' → logprob: -3.911153554916382
    7. ' i' → logprob: -4.036153793334961
    8. ':' → logprob: -4.286153793334961
    9. ' (' → logprob: -4.286153793334961
    10. '(i' → logprob: -4.786153793334961

Token 547: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024643904180265963
    2. '
' → logprob: -8.750246047973633
    3. ' def' → logprob: -9.375246047973633
    4. '   ' → logprob: -13.625246047973633
    5. ':
' → logprob: -14.250246047973633
    6. ':' → logprob: -14.500246047973633
    7. ':def' → logprob: -15.625246047973633
    8. '  
' → logprob: -16.250246047973633
    9. '\' → logprob: -16.375246047973633
    10. '    
' → logprob: -16.875246047973633

Token 548: ' même' (ID: 9679)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7622817754745483
    2. 'dis' → logprob: -1.1372817754745483
    3. 'lib' → logprob: -2.887281894683838
    4. ' range' → logprob: -3.887281894683838
    5. 'c' → logprob: -4.262281894683838
    6. 'free' → logprob: -4.637281894683838
    7. 'indices' → logprob: -4.762281894683838
    8. 'l' → logprob: -4.887281894683838
    9. 'removed' → logprob: -5.012281894683838
    10. 'dist' → logprob: -5.012281894683838

Token 549: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.9735956788063049
    2. 'cou' → logprob: -1.3485956192016602
    3. 'c' → logprob: -1.9735956192016602
    4. '#' → logprob: -2.47359561920166
    5. 'color' → logprob: -2.59859561920166
    6. ' #' → logprob: -3.47359561920166
    7. '   ' → logprob: -4.84859561920166
    8. '_c' → logprob: -4.97359561920166
    9. ' color' → logprob: -5.09859561920166
    10. '
' → logprob: -5.59859561920166

Token 550: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -13.500001907348633
    3. ' def' → logprob: -16.250001907348633
    4. 'de' → logprob: -18.500001907348633
    5. '```' → logprob: -19.875001907348633
    6. ':def' → logprob: -20.250001907348633
    7. 'ndef' → logprob: -20.875001907348633
    8. '   ' → logprob: -21.000001907348633
    9. '\' → logprob: -21.500001907348633
    10. '    
' → logprob: -21.625001907348633

Token 551: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3692631423473358
    2. 'def' → logprob: -1.2442631721496582
    3. 'for' → logprob: -5.494263172149658
    4. ' ' → logprob: -5.869263172149658
    5. ' ' → logprob: -6.119263172149658
    6. ' 
' → logprob: -6.369263172149658
    7. ' def' → logprob: -6.744263172149658
    8. '    
' → logprob: -6.744263172149658
    9. '       ' → logprob: -6.869263172149658
    10. '#' → logprob: -6.994263172149658

Token 552: ' les' (ID: 1341)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.58270663022995
    2. '   ' → logprob: -1.8327066898345947
    3. 'def' → logprob: -2.8327066898345947
    4. ' explore' → logprob: -3.2077066898345947
    5. 'continue' → logprob: -3.3327066898345947
    6. 'for' → logprob: -3.9577066898345947
    7. ' return' → logprob: -3.9577066898345947
    8. ' indent' → logprob: -4.082706451416016
    9. 'expl' → logprob: -4.332706451416016
    10. 'cherche' → logprob: -4.332706451416016

Token 553: ' enl' (ID: 116494)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.7852752804756165
    2. 'ret' → logprob: -1.7852752208709717
    3. '#' → logprob: -2.4102752208709717
    4. '   ' → logprob: -3.0352752208709717
    5. 'pe' → logprob: -3.2852752208709717
    6. 'sup' → logprob: -3.4102752208709717
    7. 'for' → logprob: -3.4102752208709717
    8. 'expl' → logprob: -4.035275459289551
    9. 'cho' → logprob: -4.535275459289551
    10. 'chercher' → logprob: -4.535275459289551

Token 554: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.004234632011502981
    2. 'eve' → logprob: -5.504234790802002
    3. 'e' → logprob: -9.004234313964844
    4. 'ev' → logprob: -11.254234313964844
    5. 'è' → logprob: -11.879234313964844
    6. 'èves' → logprob: -12.754234313964844
    7. 'ète' → logprob: -12.879234313964844
    8. 'èv' → logprob: -12.879234313964844
    9. 'ever' → logprob: -13.254234313964844
    10. 'erve' → logprob: -14.504234313964844

Token 555: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09154460579156876
    2. '   ' → logprob: -2.4665446281433105
    3. ' def' → logprob: -6.2165446281433105
    4. '
' → logprob: -8.216544151306152
    5. ',' → logprob: -8.716544151306152
    6. ':' → logprob: -8.966544151306152
    7. ',
' → logprob: -12.091544151306152
    8. 'for' → logprob: -12.466544151306152
    9. '_' → logprob: -12.591544151306152
    10. '    
' → logprob: -12.841544151306152

Token 556: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.018467487767338753
    2. '   ' → logprob: -4.768467426300049
    3. 'def' → logprob: -5.143467426300049
    4. ' puis' → logprob: -6.268467426300049
    5. 'et' → logprob: -6.643467426300049
    6. ' #' → logprob: -7.768467426300049
    7. 'p' → logprob: -9.268467903137207
    8. ' et' → logprob: -9.393467903137207
    9. ',' → logprob: -10.143467903137207
    10. 'and' → logprob: -10.768467903137207

Token 557: ' recurse' (ID: 178947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23239272832870483
    2. ' explore' → logprob: -2.7323927879333496
    3. 'expl' → logprob: -3.2323927879333496
    4. 're' → logprob: -3.8573927879333496
    5. 'for' → logprob: -4.35739278793335
    6. '       ' → logprob: -4.60739278793335
    7. '    ' → logprob: -4.73239278793335
    8. ' recurse' → logprob: -4.85739278793335
    9. ' retourne' → logprob: -4.85739278793335
    10. 'return' → logprob: -5.10739278793335

Token 558: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -13.500001907348633
    3. ' def' → logprob: -14.500001907348633
    4. '   ' → logprob: -19.375001907348633
    5. ':def' → logprob: -20.000001907348633
    6. 'de' → logprob: -20.125001907348633
    7. '```' → logprob: -20.500001907348633
    8. '(def' → logprob: -20.875001907348633
    9. '#' → logprob: -21.625001907348633
    10. 'from' → logprob: -22.375001907348633

Token 559: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08051266521215439
    2. '#' → logprob: -2.580512762069702
    3. '       ' → logprob: -7.830512523651123
    4. ' and' → logprob: -7.830512523651123
    5. 'return' → logprob: -8.830513000488281
    6. ' puis' → logprob: -8.955513000488281
    7. 'def' → logprob: -8.955513000488281
    8. 'and' → logprob: -9.080513000488281
    9. ' ' → logprob: -9.705513000488281
    10. ' #' → logprob: -9.705513000488281

Token 560: ' maximise' (ID: 139203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7144209742546082
    2. '#' → logprob: -0.8394209742546082
    3. '   ' → logprob: -3.089421033859253
    4. ' return' → logprob: -4.214420795440674
    5. ' retourne' → logprob: -4.714420795440674
    6. 'on' → logprob: -5.714420795440674
    7. ' on' → logprob: -5.839420795440674
    8. 'returns' → logprob: -7.214420795440674
    9. 'ret' → logprob: -7.339420795440674
    10. ' #' → logprob: -7.339420795440674

Token 561: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -12.75000286102295
    3. ' def' → logprob: -15.75000286102295
    4. '   ' → logprob: -21.250003814697266
    5. 'de' → logprob: -22.000003814697266
    6. '    
' → logprob: -22.500003814697266
    7. '```' → logprob: -23.500003814697266
    8. '	def' → logprob: -23.875003814697266
    9. ':def' → logprob: -24.250003814697266
    10. 'ndef' → logprob: -24.250003814697266

Token 562: ' quantité' (ID: 89219)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9016190767288208
    2. 'val' → logprob: -1.5266190767288208
    3. 'score' → logprob: -1.7766190767288208
    4. ' valeur' → logprob: -2.9016189575195312
    5. ' result' → logprob: -3.1516189575195312
    6. 'return' → logprob: -3.6516189575195312
    7. 'value' → logprob: -3.9016189575195312
    8. ' score' → logprob: -4.401618957519531
    9. 'nombre' → logprob: -4.651618957519531
    10. 's' → logprob: -4.901618957519531

Token 563: ' retir' (ID: 35638)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.054500666621607e-06
    2. '
' → logprob: -12.75000286102295
    3. ' def' → logprob: -16.625003814697266
    4. 'de' → logprob: -19.875003814697266
    5. '```' → logprob: -20.375003814697266
    6. '   ' → logprob: -21.125003814697266
    7. '    
' → logprob: -22.000003814697266
    8. ':def' → logprob: -22.250003814697266
    9. '\' → logprob: -22.500003814697266
    10. 'ndef' → logprob: -22.500003814697266

Token 564: 'ée' (ID: 2894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16072021424770355
    2. '   ' → logprob: -1.9107202291488647
    3. '):
' → logprob: -8.785719871520996
    4. ' def' → logprob: -9.160719871520996
    5. 'e' → logprob: -9.535719871520996
    6. ')' → logprob: -10.160719871520996
    7. ':
' → logprob: -10.910719871520996
    8. '  ' → logprob: -11.160719871520996
    9. ',' → logprob: -11.160719871520996
    10. '       ' → logprob: -11.285719871520996

Token 565: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.75
    3. ' def' → logprob: -16.625
    4. '   ' → logprob: -20.75
    5. 'de' → logprob: -20.875
    6. ':def' → logprob: -22.875
    7. '```' → logprob: -22.875
    8. 'ndef' → logprob: -23.125
    9. '	def' → logprob: -23.875
    10. '    
' → logprob: -24.125

Token 566: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2200749754119897e-06
    2. '
' → logprob: -13.625001907348633
    3. ' def' → logprob: -13.875001907348633
    4. '   ' → logprob: -17.250001907348633
    5. 'de' → logprob: -20.250001907348633
    6. '```' → logprob: -20.625001907348633
    7. '	def' → logprob: -20.750001907348633
    8. '    
' → logprob: -20.875001907348633
    9. 'ndef' → logprob: -21.375001907348633
    10. '\' → logprob: -22.000001907348633

Token 567: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.589891791343689
    2. 'remove' → logprob: -0.964891791343689
    3. 'search' → logprob: -3.4648919105529785
    4. 'maximize' → logprob: -4.9648919105529785
    5. 'match' → logprob: -5.3398919105529785
    6. 'find' → logprob: -5.5898919105529785
    7. 'best' → logprob: -5.7148919105529785
    8. ' max' → logprob: -5.8398919105529785
    9. 'maximum' → logprob: -5.9648919105529785
    10. 'solve' → logprob: -6.0898919105529785

Token 568: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -0.6514678001403809
    2. '_remove' → logprob: -1.2764678001403809
    3. '_rem' → logprob: -1.6514678001403809
    4. '_pairs' → logprob: -6.651467800140381
    5. '_match' → logprob: -6.776467800140381
    6. '_free' → logprob: -7.026467800140381
    7. '_matching' → logprob: -7.026467800140381
    8. '_' → logprob: -7.151467800140381
    9. '_to' → logprob: -7.401467800140381
    10. '_remaining' → logprob: -7.776467800140381

Token 569: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -0.23769861459732056
    2. '(' → logprob: -1.7376985549926758
    3. '(rem' → logprob: -3.362698554992676
    4. ' (' → logprob: -7.362698554992676
    5. '(remove' → logprob: -8.737698554992676
    6. '(rec' → logprob: -10.487698554992676
    7. '(d' → logprob: -10.612698554992676
    8. '(def' → logprob: -10.612698554992676
    9. '(Rem' → logprob: -10.737698554992676
    10. '   ' → logprob: -11.112698554992676

Token 570: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.2765291631221771
    2. 'c' → logprob: -1.5265291929244995
    3. '_removed' → logprob: -4.526529312133789
    4. 'ks' → logprob: -5.401529312133789
    5. 'removed' → logprob: -5.901529312133789
    6. '_' → logprob: -6.151529312133789
    7. '```' → logprob: -6.651529312133789
    8. 'cards' → logprob: -7.901529312133789
    9. 'dis' → logprob: -7.901529312133789
    10. 'k' → logprob: -8.026529312133789

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.12500286102295
    3. ',
' → logprob: -15.00000286102295
    4. '   ' → logprob: -16.625001907348633
    5. '[],' → logprob: -19.625001907348633
    6. ',
' → logprob: -19.625001907348633
    7. '‌,' → logprob: -20.000001907348633
    8. ',

' → logprob: -20.375001907348633
    9. '_,' → logprob: -21.000001907348633
    10. '،' → logprob: -21.250001907348633

Token 572: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.02975141443312168
    2. ' removed' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.279751777648926
    4. 'remove' → logprob: -15.779751777648926
    5. '_removed' → logprob: -16.40475082397461
    6. 'rem' → logprob: -16.40475082397461
    7. ' ' → logprob: -17.90475082397461
    8. 'free' → logprob: -18.52975082397461
    9. 'deleted' → logprob: -18.90475082397461
    10. 'Removed' → logprob: -18.90475082397461

Token 573: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520930767059326
    2. '):
' → logprob: -1.5020930767059326
    3. '):
' → logprob: -9.752093315124512
    4. ',' → logprob: -10.002093315124512
    5. ')' → logprob: -10.127093315124512
    6. ' ):' → logprob: -11.377093315124512
    7. '   ' → logprob: -12.002093315124512
    8. '):

' → logprob: -13.127093315124512
    9. ' ):
' → logprob: -14.502093315124512
    10. ':' → logprob: -15.627093315124512

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004886920796707273
    2. 'free' → logprob: -7.875488758087158
    3. ' free' → logprob: -9.25048828125
    4. '	free' → logprob: -12.12548828125
    5. '   ' → logprob: -12.37548828125
    6. ':' → logprob: -14.12548828125
    7. '    
' → logprob: -14.62548828125
    8. 'n' → logprob: -14.75048828125
    9. '```' → logprob: -14.75048828125
    10. '    ' → logprob: -15.62548828125

Token 575: ' n' (ID: 297)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.13554120063781738
    2. '   ' → logprob: -2.1355412006378174
    3. ' free' → logprob: -4.760540962219238
    4. 'n' (adapté à ' n') → logprob: -11.885540962219238
    5. '	free' → logprob: -12.385540962219238
    6. '_free' → logprob: -14.135540962219238
    7. '#' → logprob: -14.385540962219238
    8. ' n' → logprob: -14.385540962219238
    9. '   ' → logprob: -14.385540962219238
    10. ' ' → logprob: -14.885540962219238

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012994332239031792
    2. '=' → logprob: -4.387994289398193
    3. '   ' → logprob: -7.762994289398193
    4. '    ' → logprob: -10.387994766235352
    5. ' ' → logprob: -11.512994766235352
    6. ')' → logprob: -11.637994766235352
    7. '=len' → logprob: -12.262994766235352
    8. ' =
' → logprob: -13.387994766235352
    9. ',' → logprob: -14.012994766235352
    10. '=int' → logprob: -14.512994766235352

Token 577: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38687145709991455
    2. ' len' → logprob: -1.1368714570999146
    3. '(len' → logprob: -14.761871337890625
    4. '   ' → logprob: -16.761871337890625
    5. '[len' → logprob: -17.886871337890625
    6. '=len' → logprob: -19.011871337890625
    7. '	len' → logprob: -19.261871337890625
    8. ',len' → logprob: -21.636871337890625
    9. 'Len' → logprob: -21.761871337890625
    10. ' ' → logprob: -22.136871337890625

Token 578: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -0.0024799390230327845
    2. 'dis' → logprob: -6.0024800300598145
    3. '(' → logprob: -12.627479553222656
    4. '(d' → logprob: -14.127479553222656
    5. 'disc' → logprob: -16.502479553222656
    6. 'removed' → logprob: -16.502479553222656
    7. ' discs' → logprob: -17.127479553222656
    8. '	dis' → logprob: -17.252479553222656
    9. ' (' → logprob: -17.377479553222656
    10. '(
' → logprob: -17.627479553222656

Token 579: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.06005406007170677
    2. 'dis' → logprob: -3.060054063796997
    3. 'is' → logprob: -5.310053825378418
    4. 'sc' → logprob: -5.310053825378418
    5. 's' → logprob: -7.935053825378418
    6. 'c' → logprob: -8.185053825378418
    7. 'isc' → logprob: -8.560053825378418
    8. '```' → logprob: -8.810053825378418
    9. '(dis' → logprob: -9.435053825378418
    10. '[' → logprob: -9.935053825378418

Token 580: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38699185848236084
    2. ')
' → logprob: -1.1369918584823608
    3. ')
' → logprob: -9.261991500854492
    4. '   ' → logprob: -10.636991500854492
    5. ' )
' → logprob: -14.261991500854492
    6. ' )' → logprob: -14.511991500854492
    7. ')

' → logprob: -15.136991500854492
    8. ')`
' → logprob: -16.011991500854492
    9. '):
' → logprob: -16.636991500854492
    10. ' ' → logprob: -17.011991500854492

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044239770621061325
    2. 'free' → logprob: -3.1692397594451904
    3. ' free' → logprob: -6.7942399978637695
    4. '    
' → logprob: -10.04423999786377
    5. '   ' → logprob: -10.16923999786377
    6. '	free' → logprob: -11.41923999786377
    7. 'max' → logprob: -12.16923999786377
    8. '  ' → logprob: -12.41923999786377
    9. 'fre' → logprob: -12.41923999786377
    10. '    ' → logprob: -13.16923999786377

Token 582: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' (adapté à ' free') → logprob: -0.0001916200271807611
    2. '   ' → logprob: -9.125191688537598
    3. ' free' → logprob: -10.500191688537598
    4. '#' → logprob: -10.625191688537598
    5. 'res' → logprob: -11.125191688537598
    6. 'max' → logprob: -12.125191688537598
    7. 'best' → logprob: -12.625191688537598
    8. 'fre' → logprob: -12.875191688537598
    9. 'f' → logprob: -13.750191688537598
    10. 'current' → logprob: -13.875191688537598

Token 583: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890433073043823
    2. '=' → logprob: -2.578904390335083
    3. '   ' → logprob: -11.203904151916504
    4. ' ' → logprob: -15.078904151916504
    5. ')' → logprob: -15.578904151916504
    6. '    ' → logprob: -16.20390510559082
    7. '  ' → logprob: -16.57890510559082
    8. '＝' → logprob: -16.70390510559082
    9. ',' → logprob: -17.70390510559082
    10. '()' → logprob: -17.95390510559082

Token 584: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0019286326132714748
    2. ' compute' → logprob: -6.251928806304932
    3. '.compute' → logprob: -21.126928329467773
    4. 'computer' → logprob: -21.876928329467773
    5. ' ' → logprob: -22.126928329467773
    6. '(com' → logprob: -22.501928329467773
    7. '   ' → logprob: -22.501928329467773
    8. '_compute' → logprob: -22.751928329467773
    9. 'calculate' → logprob: -23.751928329467773
    10. 'comput' → logprob: -24.001928329467773

Token 585: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -1.9146995327901095e-05
    2. 'free' → logprob: -10.875019073486328
    3. '_' → logprob: -17.500019073486328
    4. ' free' → logprob: -17.875019073486328
    5. 'Free' → logprob: -18.125019073486328
    6. '_FREE' → logprob: -18.750019073486328
    7. '_Free' → logprob: -19.375019073486328
    8. 'fre' → logprob: -19.750019073486328
    9. '```' → logprob: -19.750019073486328
    10. '_safe' → logprob: -19.750019073486328

Token 586: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.50000286102295
    3. ' (' → logprob: -14.25000286102295
    4. 'dis' → logprob: -15.37500286102295
    5. '(d' → logprob: -16.625001907348633
    6. '(dist' → logprob: -17.375001907348633
    7. '/dis' → logprob: -18.000001907348633
    8. '```' → logprob: -18.750001907348633
    9. '(des' → logprob: -19.000001907348633
    10. '(def' → logprob: -19.375001907348633

Token 587: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.001034595537930727
    2. 's' → logprob: -8.6260347366333
    3. ')' → logprob: -8.7510347366333
    4. '[' → logprob: -9.2510347366333
    5. '(dis' → logprob: -9.3760347366333
    6. 'is' → logprob: -9.3760347366333
    7. 'ics' → logprob: -9.5010347366333
    8. 'c' → logprob: -9.5010347366333
    9. '   ' → logprob: -9.7510347366333
    10. 'dis' → logprob: -9.7510347366333

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',
' → logprob: -15.500019073486328
    4. '   ' → logprob: -16.125019073486328
    5. ')' → logprob: -18.250019073486328
    6. '```' → logprob: -18.625019073486328
    7. '，' → logprob: -19.250019073486328
    8. '‌,' → logprob: -19.750019073486328
    9. '،' → logprob: -19.875019073486328
    10. '[' → logprob: -20.250019073486328

Token 589: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.0024762547109276056
    2. ' removed' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.377476692199707
    4. 'rem' → logprob: -18.75247573852539
    5. '_removed' → logprob: -18.75247573852539
    6. 'Removed' → logprob: -19.25247573852539
    7. 'remove' → logprob: -19.37747573852539
    8. ' ' → logprob: -19.37747573852539
    9. 'deleted' → logprob: -19.62747573852539
    10. '
' → logprob: -19.87747573852539

Token 590: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.070975071750581e-05
    2. ')
' → logprob: -10.500030517578125
    3. ' )' → logprob: -13.000030517578125
    4. '   ' → logprob: -14.375030517578125
    5. ')
' → logprob: -16.000030517578125
    6. ')

' → logprob: -16.125030517578125
    7. ')`' → logprob: -17.375030517578125
    8. '())' → logprob: -17.500030517578125
    9. ' ' → logprob: -17.625030517578125
    10. '))' → logprob: -18.250030517578125

Token 591: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01177299302071333
    2. 'max' → logprob: -4.511773109436035
    3. 'best' → logprob: -8.386773109436035
    4. 'pairs' → logprob: -8.386773109436035
    5. '    
' → logprob: -8.761773109436035
    6. 'result' → logprob: -10.761773109436035
    7. 'count' → logprob: -11.011773109436035
    8. 'possible' → logprob: -11.261773109436035
    9. 'res' → logprob: -11.386773109436035
    10. 'indices' → logprob: -11.636773109436035

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6151223182678223
    2. 'best' → logprob: -1.1151223182678223
    3. 'max' → logprob: -2.2401223182678223
    4. 'res' → logprob: -4.240122318267822
    5. 'ans' → logprob: -5.115122318267822
    6. 'result' → logprob: -6.615122318267822
    7. 'pairs' → logprob: -6.865122318267822
    8. '#' → logprob: -7.490122318267822
    9. 'available' → logprob: -7.740122318267822
    10. 'possible' → logprob: -7.990122318267822

Token 593: ' #' (ID: 1069)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.47325941920280457
    2. 'res' → logprob: -1.723259449005127
    3. 'max' → logprob: -1.723259449005127
    4. 'ans' → logprob: -4.598259449005127
    5. 'pairs' → logprob: -4.848259449005127
    6. 'indices' → logprob: -7.598259449005127
    7. 'result' → logprob: -7.723259449005127
    8. 'c' → logprob: -7.723259449005127
    9. '#' (adapté à ' #') → logprob: -8.098258972167969
    10. 'answer' → logprob: -9.223258972167969

Token 594: ' Trou' (ID: 58947)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.760119616985321
    2. 'res' → logprob: -1.3851196765899658
    3. 'max' → logprob: -1.5101196765899658
    4. 'ans' → logprob: -3.635119676589966
    5. 'pairs' → logprob: -4.010119438171387
    6. 'indices' → logprob: -5.260119438171387
    7. 'c' → logprob: -5.635119438171387
    8. '#' → logprob: -6.135119438171387
    9. 'to' → logprob: -6.760119438171387
    10. 'result' → logprob: -6.760119438171387

Token 595: 'ver' (ID: 445)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.01520836353302
    2. 'er' → logprob: -1.76520836353302
    3. ' max' → logprob: -1.89020836353302
    4. 'max' → logprob: -2.0152082443237305
    5. 've' → logprob: -2.1402082443237305
    6. 'r' → logprob: -3.7652082443237305
    7. 'e' → logprob: -4.8902082443237305
    8. 'te' → logprob: -5.0152082443237305
    9. ' for' → logprob: -6.0152082443237305
    10. 'nt' → logprob: -6.0152082443237305

Token 596: ' toutes' (ID: 17502)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.002896643942221999
    2. '   ' → logprob: -6.752896785736084
    3. 'indices' → logprob: -7.752896785736084
    4. ' pairs' → logprob: -7.877896785736084
    5. 'pair' → logprob: -8.002896308898926
    6. 'free' → logprob: -8.627896308898926
    7. 'color' → logprob: -9.252896308898926
    8. '#' → logprob: -9.377896308898926
    9. 'c' → logprob: -9.752896308898926
    10. 'p' → logprob: -9.877896308898926

Token 597: ' les' (ID: 1341)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -1.076364278793335
    2. 'indices' → logprob: -1.076364278793335
    3. 'pairs' → logprob: -1.826364278793335
    4. 'i' → logprob: -2.951364278793335
    5. ' free' → logprob: -3.326364278793335
    6. ' pairs' → logprob: -3.451364278793335
    7. ' indices' → logprob: -4.451364517211914
    8. ' i' → logprob: -4.451364517211914
    9. '   ' → logprob: -5.701364517211914
    10. '(i' → logprob: -5.826364517211914

Token 598: ' p' (ID: 275)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.3402109146118164
    2. 'pairs' → logprob: -2.2152109146118164
    3. 'indices' → logprob: -2.3402109146118164
    4. 'i' → logprob: -3.3402109146118164
    5. ' free' → logprob: -3.7152109146118164
    6. 'color' → logprob: -4.965210914611816
    7. 'c' → logprob: -5.215210914611816
    8. ' pairs' → logprob: -5.840210914611816
    9. ' i' → logprob: -5.965210914611816
    10. 'colors' → logprob: -6.965210914611816

Token 599: 'aires' (ID: 8507)
  Prédit: 'airs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.9479706287384033
    2. 'aires' → logprob: -1.4479706287384033
    3. 'i' → logprob: -1.6979706287384033
    4. 'free' → logprob: -3.0729706287384033
    5. 'air' → logprob: -3.3229706287384033
    6. 'os' → logprob: -3.5729706287384033
    7. '[' → logprob: -3.6979706287384033
    8. '[i' → logprob: -4.197970390319824
    9. 'oints' → logprob: -4.322970390319824
    10. 'a' → logprob: -5.197970390319824

Token 600: ' libres' (ID: 79503)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7330737113952637
    2. ' of' → logprob: -1.7330737113952637
    3. ' (' → logprob: -2.4830737113952637
    4. ' de' → logprob: -2.8580737113952637
    5. ' for' → logprob: -2.9830737113952637
    6. '   ' → logprob: -3.1080737113952637
    7. ' free' → logprob: -3.8580737113952637
    8. '[i' → logprob: -4.108073711395264
    9. 'for' → logprob: -4.108073711395264
    10. '(i' → logprob: -4.983073711395264

Token 601: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.260629415512085
    2. ' =' → logprob: -1.385629415512085
    3. '_' → logprob: -2.010629415512085
    4. '[i' → logprob: -2.635629415512085
    5. '_free' → logprob: -3.010629415512085
    6. 'indices' → logprob: -3.885629415512085
    7. '[' → logprob: -4.010629653930664
    8. '_indices' → logprob: -4.010629653930664
    9. '[]' → logprob: -4.135629653930664
    10. ' (' → logprob: -4.260629653930664

Token 602: ' même' (ID: 9679)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8451420664787292
    2. 'dis' → logprob: -1.345142126083374
    3. 'i' → logprob: -2.095142126083374
    4. '[i' → logprob: -2.470142126083374
    5. ' range' → logprob: -3.345142126083374
    6. ' même' → logprob: -4.220141887664795
    7. 'same' → logprob: -4.220141887664795
    8. '[' → logprob: -4.720141887664795
    9. ' la' → logprob: -5.220141887664795
    10. ' dis' → logprob: -5.470141887664795

Token 603: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.4065152704715729
    2. 'color' → logprob: -1.7815152406692505
    3. '_' → logprob: -2.78151535987854
    4. ' color' → logprob: -3.15651535987854
    5. 'c' → logprob: -3.90651535987854
    6. '_color' → logprob: -4.031515121459961
    7. 'cou' → logprob: -4.156515121459961
    8. '_c' → logprob: -5.281515121459961
    9. ' _' → logprob: -6.406515121459961
    10. ' c' → logprob: -8.656515121459961

Token 604: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025163451209664345
    2. ':' → logprob: -4.775163650512695
    3. 'pairs' → logprob: -4.900163650512695
    4. ' pairs' → logprob: -5.275163650512695
    5. 'indices' → logprob: -6.400163650512695
    6. '    
' → logprob: -7.275163650512695
    7. '
' → logprob: -7.400163650512695
    8. ' indices' → logprob: -9.025163650512695
    9. '  
' → logprob: -9.150163650512695
    10. ':
' → logprob: -9.150163650512695

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06849890947341919
    2. 'pairs' → logprob: -2.8184988498687744
    3. ' pairs' → logprob: -5.6934990882873535
    4. 'indices' → logprob: -6.5684990882873535
    5. '    
' → logprob: -7.1934990882873535
    6. 'for' → logprob: -7.8184990882873535
    7. '
' → logprob: -8.818498611450195
    8. ' for' → logprob: -9.318498611450195
    9. ':' → logprob: -9.693498611450195
    10. ' indices' → logprob: -9.818498611450195

Token 606: ' color' (ID: 3089)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.030523840337991714
    2. '   ' → logprob: -3.5305237770080566
    3. ' pairs' → logprob: -7.780523777008057
    4. 'free' → logprob: -8.655524253845215
    5. 'indices' → logprob: -9.905524253845215
    6. 'c' → logprob: -9.905524253845215
    7. 'pair' → logprob: -10.405524253845215
    8. 'for' → logprob: -11.030524253845215
    9. '    
' → logprob: -11.280524253845215
    10. 'p' → logprob: -11.655524253845215

Token 607: '_to' (ID: 5089)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.46815723180770874
    2. '_to' → logprob: -1.0931572914123535
    3. '_free' → logprob: -4.2181572914123535
    4. '_indices' → logprob: -4.5931572914123535
    5. '_count' → logprob: -5.0931572914123535
    6. '_map' → logprob: -5.9681572914123535
    7. '_groups' → logprob: -6.7181572914123535
    8. 's' → logprob: -6.8431572914123535
    9. '_counts' → logprob: -6.8431572914123535
    10. '_positions' → logprob: -6.9681572914123535

Token 608: '_free' (ID: 21204)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.08278331905603409
    2. 'indices' → logprob: -3.2077832221984863
    3. 'dis' → logprob: -3.7077832221984863
    4. '_free' → logprob: -4.832783222198486
    5. 'pairs' → logprob: -5.832783222198486
    6. '[]' → logprob: -7.082783222198486
    7. ' free' → logprob: -7.457783222198486
    8. '=[]' → logprob: -7.707783222198486
    9. '_indices' → logprob: -7.832783222198486
    10. 'indexes' → logprob: -8.207783699035645

Token 609: '_indices' (ID: 43508)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02327972650527954
    2. ' =' → logprob: -3.7732796669006348
    3. 's' → logprob: -11.648280143737793
    4. '={}' → logprob: -11.773280143737793
    5. '=[]' → logprob: -11.898280143737793
    6. '_indices' → logprob: -13.523280143737793
    7. 'indices' → logprob: -13.898280143737793
    8. '_=' → logprob: -14.023280143737793
    9. '_free' → logprob: -14.273280143737793
    10. '_pairs' → logprob: -14.273280143737793

Token 610: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931490898132324
    2. ' =' → logprob: -0.6931490898132324
    3. '   ' → logprob: -13.81814956665039
    4. ' ' → logprob: -15.06814956665039
    5. '={}' → logprob: -15.06814956665039
    6. '={}
' → logprob: -16.56814956665039
    7. 's' → logprob: -16.81814956665039
    8. '={' → logprob: -17.06814956665039
    9. ':' → logprob: -17.19314956665039
    10. '  ' → logprob: -17.31814956665039

Token 611: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.0219828002154827e-05
    2. ' {}' → logprob: -11.000020027160645
    3. 'dict' → logprob: -13.000020027160645
    4. '{}
' → logprob: -13.750020027160645
    5. '{' → logprob: -17.37502098083496
    6. '{}

' → logprob: -17.87502098083496
    7. ' dict' → logprob: -17.87502098083496
    8. '{}\' → logprob: -18.00002098083496
    9. 'default' → logprob: -18.25002098083496
    10. '{})' → logprob: -19.50002098083496

Token 612: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6769892573356628
    2. 'for' → logprob: -1.1769893169403076
    3. '   ' → logprob: -1.8019893169403076
    4. '  
' → logprob: -5.1769890785217285
    5. ' 
' → logprob: -5.4269890785217285
    6. '    
' → logprob: -5.5519890785217285
    7. '
' → logprob: -6.4269890785217285
    8. '   
' → logprob: -7.0519890785217285
    9. '_' → logprob: -7.3019890785217285
    10. ' ' → logprob: -7.9269890785217285

Token 613: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10072686523199081
    2. ' for' → logprob: -2.350726842880249
    3. '   ' → logprob: -7.725727081298828
    4. '	for' → logprob: -10.725727081298828
    5. 'free' → logprob: -10.725727081298828
    6. ' free' → logprob: -11.225727081298828
    7. ' ' → logprob: -12.350727081298828
    8. '    ' → logprob: -12.350727081298828
    9. ' 
' → logprob: -12.475727081298828
    10. '    
' → logprob: -12.850727081298828

Token 614: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.135819760151207e-05
    2. ' i' → logprob: -9.75007152557373
    3. 'idx' → logprob: -11.25007152557373
    4. '   ' → logprob: -17.125070571899414
    5. ' idx' → logprob: -17.250070571899414
    6. ' ' → logprob: -19.625070571899414
    7. 'k' → logprob: -20.000070571899414
    8. 'index' → logprob: -20.125070571899414
    9. '	i' → logprob: -20.875070571899414
    10. '  ' → logprob: -21.250070571899414

Token 615: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0487455390393734
    2. 'in' → logprob: -3.048745632171631
    3. ',' → logprob: -9.548745155334473
    4. '   ' → logprob: -10.048745155334473
    5. ' ' → logprob: -11.173745155334473
    6. ' ,' → logprob: -11.673745155334473
    7. 'if' → logprob: -11.798745155334473
    8. '    ' → logprob: -12.673745155334473
    9. '  ' → logprob: -12.798745155334473
    10. '[' → logprob: -14.173745155334473

Token 616: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.750911712646484
    4. ' ' → logprob: -17.875911712646484
    5. '(range' → logprob: -18.750911712646484
    6. '	range' → logprob: -18.875911712646484
    7. '  ' → logprob: -19.125911712646484
    8. '[' → logprob: -19.250911712646484
    9. '    ' → logprob: -19.875911712646484
    10. 'r' → logprob: -19.875911712646484

Token 617: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011626037303358316
    2. 'n' → logprob: -6.876162528991699
    3. '(' → logprob: -9.1261625289917
    4. '   ' → logprob: -12.3761625289917
    5. '(range' → logprob: -12.3761625289917
    6. 'range' → logprob: -12.5011625289917
    7. ' (' → logprob: -12.7511625289917
    8. ' n' → logprob: -13.0011625289917
    9. '(len' → logprob: -13.1261625289917
    10. 'in' → logprob: -14.7511625289917

Token 618: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.054829809814691544
    2. '):' → logprob: -3.1798298358917236
    3. ':' → logprob: -5.4298295974731445
    4. '   ' → logprob: -5.6798295974731445
    5. ':
' → logprob: -5.8048295974731445
    6. '       ' → logprob: -7.6798295974731445
    7. '):
' → logprob: -8.804829597473145
    8. ' ):
' → logprob: -8.804829597473145
    9. ')' → logprob: -9.179829597473145
    10. '    ' → logprob: -10.679829597473145

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025911119300872087
    2. '   ' → logprob: -6.502591133117676
    3. ' if' → logprob: -7.252591133117676
    4. '    ' → logprob: -8.127591133117676
    5. ' ' → logprob: -10.377591133117676
    6. ':' → logprob: -11.127591133117676
    7. '	   ' → logprob: -11.377591133117676
    8. 'if' → logprob: -12.002591133117676
    9. '     ' → logprob: -12.252591133117676
    10. '        
' → logprob: -12.627591133117676

Token 620: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6010380387306213
    2. 'if' (adapté à ' if') → logprob: -1.1010379791259766
    3. '   ' → logprob: -2.6010379791259766
    4. '       ' → logprob: -3.1010379791259766
    5. '	if' → logprob: -10.976037979125977
    6. ' ' → logprob: -11.976037979125977
    7. '           ' → logprob: -12.226037979125977
    8. '	   ' → logprob: -12.976037979125977
    9. '```' → logprob: -13.851037979125977
    10. '    ' → logprob: -14.226037979125977

Token 621: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.02066088654100895
    2. ' free' → logprob: -3.895660877227783
    3. 'not' → logprob: -9.145661354064941
    4. ' not' → logprob: -11.520661354064941
    5. '   ' → logprob: -13.395661354064941
    6. '	free' → logprob: -15.395661354064941
    7. 'Free' → logprob: -15.895661354064941
    8. '_free' → logprob: -16.020660400390625
    9. ' ' → logprob: -16.145660400390625
    10. '.free' → logprob: -16.520660400390625

Token 622: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.50000286102295
    3. ' and' → logprob: -14.00000286102295
    4. 'and' → logprob: -14.37500286102295
    5. ' [' → logprob: -15.75000286102295
    6. '   ' → logprob: -17.625003814697266
    7. '[I' → logprob: -18.250003814697266
    8. '(i' → logprob: -19.250003814697266
    9. '[
' → logprob: -19.500003814697266
    10. 'i' → logprob: -19.750003814697266

Token 623: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.40309977531433105
    2. 'and' → logprob: -2.028099775314331
    3. ']' → logprob: -2.153099775314331
    4. ']:' → logprob: -2.528099775314331
    5. ']:
' → logprob: -6.15310001373291
    6. ':' → logprob: -7.15310001373291
    7. ' ]' → logprob: -7.27810001373291
    8. ']==' → logprob: -9.02810001373291
    9. '       ' → logprob: -9.15310001373291
    10. '   ' → logprob: -9.15310001373291

Token 624: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10096105933189392
    2. '           ' → logprob: -2.6009609699249268
    3. ':' → logprob: -4.475961208343506
    4. ' and' → logprob: -4.725961208343506
    5. '   ' → logprob: -7.725961208343506
    6. ' :' → logprob: -7.975961208343506
    7. '        ' → logprob: -8.600960731506348
    8. ' c' → logprob: -9.350960731506348
    9. 'and' → logprob: -9.350960731506348
    10. '```' → logprob: -9.725960731506348

Token 625: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.25184568762779236
    2. 'color' → logprob: -1.7518457174301147
    3. 'col' → logprob: -3.626845598220825
    4. ' c' → logprob: -4.126845836639404
    5. ' color' → logprob: -6.001845836639404
    6. 'if' → logprob: -6.501845836639404
    7. 'ci' → logprob: -7.001845836639404
    8. '       ' → logprob: -7.376845836639404
    9. ' if' → logprob: -8.251845359802246
    10. '   ' → logprob: -8.376845359802246

Token 626: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5253785848617554
    2. ' =' → logprob: -0.9003785848617554
    3. '=c' → logprob: -6.775378704071045
    4. '=i' → logprob: -8.025378227233887
    5. '   ' → logprob: -8.275378227233887
    6. '=self' → logprob: -9.775378227233887
    7. 'c' → logprob: -9.900378227233887
    8. ' in' → logprob: -9.900378227233887
    9. '=color' → logprob: -9.900378227233887
    10. 'i' → logprob: -10.150378227233887

Token 627: ' discs' (ID: 89635)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.00026383911608718336
    2. ' discs' → logprob: -8.250264167785645
    3. 'disc' → logprob: -13.000264167785645
    4. '   ' → logprob: -15.750264167785645
    5. '	dis' → logprob: -17.250263214111328
    6. '       ' → logprob: -17.500263214111328
    7. ' disc' → logprob: -18.000263214111328
    8. ' dis' → logprob: -18.500263214111328
    9. '.dis' → logprob: -18.625263214111328
    10. '           ' → logprob: -19.250263214111328

Token 628: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[c' → logprob: -12.000008583068848
    3. 'c' → logprob: -13.500008583068848
    4. '.c' → logprob: -13.875008583068848
    5. 'i' → logprob: -14.875008583068848
    6. '.' → logprob: -16.625009536743164
    7. '.i' → logprob: -17.250009536743164
    8. '[' → logprob: -17.750009536743164
    9. '[
' → logprob: -18.500009536743164
    10. ' [' → logprob: -18.500009536743164

Token 629: '].' (ID: 1651)
  Prédit: '.c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.05792856588959694
    2. '].' → logprob: -2.9329285621643066
    3. '.' → logprob: -6.432928562164307
    4. ' .' → logprob: -7.057928562164307
    5. ').' → logprob: -8.057929039001465
    6. '.i' → logprob: -8.557929039001465
    7. '}.' → logprob: -10.932929039001465
    8. '   ' → logprob: -11.182929039001465
    9. ' ].' → logprob: -11.432929039001465
    10. '`.' → logprob: -12.307929039001465

Token 630: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.696889623621246e-06
    2. ' c' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.750001907348633
    4. '.c' → logprob: -18.250001907348633
    5. '_c' → logprob: -18.500001907348633
    6. '	c' → logprob: -18.875001907348633
    7. ' ' → logprob: -19.250001907348633
    8. 'color' → logprob: -19.250001907348633
    9. '  ' → logprob: -19.750001907348633
    10. 'r' → logprob: -20.375001907348633

Token 631: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010062543442472816
    2. '
' → logprob: -7.751006126403809
    3. '       ' → logprob: -8.251006126403809
    4. ' if' → logprob: -9.501006126403809
    5. 'if' → logprob: -9.501006126403809
    6. '   ' → logprob: -9.626006126403809
    7. '=' → logprob: -11.126006126403809
    8. '          ' → logprob: -11.251006126403809
    9. '               ' → logprob: -11.751006126403809
    10. ':' → logprob: -11.751006126403809

Token 632: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010490112006664276
    2. '       ' → logprob: -4.6354899406433105
    3. ' if' → logprob: -7.6354899406433105
    4. 'if' → logprob: -9.135490417480469
    5. '   ' → logprob: -9.760490417480469
    6. '.setdefault' → logprob: -10.635490417480469
    7. '	       ' → logprob: -11.010490417480469
    8. '=' → logprob: -12.135490417480469
    9. '	   ' → logprob: -12.260490417480469
    10. ' =' → logprob: -12.635490417480469

Token 633: ' color' (ID: 3089)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010102635249495506
    2. ' if' → logprob: -5.13510274887085
    3. 'color' (adapté à ' color') → logprob: -6.01010274887085
    4. '           ' → logprob: -6.38510274887085
    5. '   ' → logprob: -11.135102272033691
    6. ' color' → logprob: -12.135102272033691
    7. '       ' → logprob: -12.385102272033691
    8. '               ' → logprob: -14.760102272033691
    9. '	if' → logprob: -15.760102272033691
    10. '[color' → logprob: -16.635103225708008

Token 634: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0031301863491535187
    2. '=' → logprob: -6.128129959106445
    3. ' =' → logprob: -7.253129959106445
    4. '_' → logprob: -8.628129959106445
    5. 'to' → logprob: -11.003129959106445
    6. '=c' → logprob: -11.753129959106445
    7. '=_' → logprob: -11.878129959106445
    8. '_=' → logprob: -11.878129959106445
    9. 's' → logprob: -12.003129959106445
    10. '   ' → logprob: -12.878129959106445

Token 635: '_free' (ID: 21204)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.3135703504085541
    2. '_free' → logprob: -1.3135703802108765
    3. 'color' → logprob: -8.938570022583008
    4. 'fre' → logprob: -9.063570022583008
    5. 'c' → logprob: -10.313570022583008
    6. ' free' → logprob: -10.938570022583008
    7. 'f' → logprob: -12.313570022583008
    8. 'Free' → logprob: -14.063570022583008
    9. '	free' → logprob: -14.063570022583008
    10. '_FREE' → logprob: -14.688570022583008

Token 636: '_indices' (ID: 43508)
  Prédit: '.setdefault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.07368633896112442
    2. '_indices' → logprob: -2.948686361312866
    3. '[c' → logprob: -4.948686122894287
    4. '[color' → logprob: -5.198686122894287
    5. 'color' → logprob: -6.198686122894287
    6. 'free' → logprob: -7.448686122894287
    7. '_c' → logprob: -7.698686122894287
    8. 'indices' → logprob: -8.198686599731445
    9. '_colors' → logprob: -8.198686599731445
    10. 'c' → logprob: -8.198686599731445

Token 637: '.setdefault' (ID: 113053)
  Prédit: '.setdefault'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.setdefault' → logprob: -0.014180675148963928
    2. '.' → logprob: -4.264180660247803
    3. '=' → logprob: -12.014181137084961
    4. ' =' → logprob: -12.139181137084961
    5. ' .' → logprob: -12.389181137084961
    6. '.set' → logprob: -14.014181137084961
    7. 'set' → logprob: -15.389181137084961
    8. '=set' → logprob: -15.764181137084961
    9. '   ' → logprob: -16.01418113708496
    10. '.get' → logprob: -16.26418113708496

Token 638: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -16.625
    3. '(' → logprob: -16.875
    4. '(
' → logprob: -17.375
    5. '(color' → logprob: -19.875
    6. ' (' → logprob: -20.0
    7. ')c' → logprob: -20.625
    8. '(i' → logprob: -21.375
    9. '(ci' → logprob: -21.375
    10. '[c' → logprob: -22.0

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. '([]' → logprob: -11.500020027160645
    3. '[],' → logprob: -12.125020027160645
    4. ' ,' → logprob: -12.625020027160645
    5. ',set' → logprob: -15.500020027160645
    6. '[]' → logprob: -15.750020027160645
    7. 'append' → logprob: -15.875020027160645
    8. '，' → logprob: -16.625019073486328
    9. ',[' → logprob: -17.000019073486328
    10. ',
' → logprob: -17.125019073486328

Token 640: ' []).' (ID: 137852)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002112886286340654
    2. '[]
' → logprob: -8.750211715698242
    3. '[])' → logprob: -10.000211715698242
    4. ' []).' → logprob: -12.375211715698242
    5. ' []' → logprob: -13.250211715698242
    6. '[]

' → logprob: -14.000211715698242
    7. '[]}' → logprob: -15.000211715698242
    8. '[]>' → logprob: -15.875211715698242
    9. '[])
' → logprob: -15.875211715698242
    10. '[]):' → logprob: -18.000211715698242

Token 641: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -19.125
    4. 'appen' → logprob: -20.0
    5. 'pend' → logprob: -20.375
    6. 'pp' → logprob: -20.875
    7. 'Append' → logprob: -21.25
    8. '_append' → logprob: -21.25
    9. 'app' → logprob: -21.375
    10. '	append' → logprob: -21.75

Token 642: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0011717714369297028
    2. 'i' → logprob: -6.751171588897705
    3. ' i' → logprob: -13.751172065734863
    4. '(' → logprob: -15.001172065734863
    5. ' (' → logprob: -16.126171112060547
    6. '(
' → logprob: -18.876171112060547
    7. '	i' → logprob: -19.376171112060547
    8. '[i' → logprob: -19.751171112060547
    9. '   ' → logprob: -20.126171112060547
    10. ')i' → logprob: -20.876171112060547

Token 643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036303617525845766
    2. '<|end|>' → logprob: -5.7536301612854
    3. '   ' → logprob: -8.003630638122559
    4. '<|end|>' → logprob: -9.878630638122559
    5. '       ' → logprob: -11.003630638122559
    6. ' )' → logprob: -11.378630638122559
    7. ')
' → logprob: -11.753630638122559
    8. '    
' → logprob: -12.003630638122559
    9. '')' → logprob: -12.628630638122559
    10. '    ' → logprob: -12.753630638122559

Token 644: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1908869743347168
    2. '    
' → logprob: -1.8158869743347168
    3. '
' → logprob: -4.565886974334717
    4. '  
' → logprob: -8.190887451171875
    5. 'for' → logprob: -8.690887451171875
    6. '   
' → logprob: -9.190887451171875
    7. '        
' → logprob: -9.565887451171875
    8. ' 
' → logprob: -11.190887451171875
    9. ' for' → logprob: -11.565887451171875
    10. '       ' → logprob: -11.940887451171875

Token 645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036032749339938164
    2. 'for' → logprob: -5.878603458404541
    3. '    
' → logprob: -7.628603458404541
    4. ' for' → logprob: -8.878602981567383
    5. '
' → logprob: -9.378602981567383
    6. 'result' → logprob: -10.128602981567383
    7. 'if' → logprob: -11.253602981567383
    8. '  ' → logprob: -12.378602981567383
    9. '  
' → logprob: -12.378602981567383
    10. '```' → logprob: -12.378602981567383

Token 646: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36661237478256226
    2. '   ' → logprob: -1.741612434387207
    3. 'for' → logprob: -3.241612434387207
    4. '#' (adapté à ' #') → logprob: -3.366612434387207
    5. 'pairs' → logprob: -3.366612434387207
    6. 'best' → logprob: -4.116612434387207
    7. 'max' → logprob: -6.116612434387207
    8. 'all' → logprob: -6.241612434387207
    9. 'possible' → logprob: -6.991612434387207
    10. 'removed' → logprob: -8.491612434387207

Token 647: ' Pas' (ID: 18323)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.32960206270217896
    2. 'res' → logprob: -2.079602003097534
    3. 'max' → logprob: -2.204602003097534
    4. 'ans' → logprob: -3.329602003097534
    5. 'result' → logprob: -5.704602241516113
    6. 'answer' → logprob: -5.829602241516113
    7. '   ' → logprob: -6.954602241516113
    8. 'ret' → logprob: -6.954602241516113
    9. 'pairs' → logprob: -7.954602241516113
    10. 'rem' → logprob: -8.329602241516113

Token 648: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23972372710704803
    2. ' if' → logprob: -2.2397236824035645
    3. 'if' → logprob: -3.1147236824035645
    4. 'de' → logprob: -3.6147236824035645
    5. ' free' → logprob: -4.3647236824035645
    6. ':' → logprob: -4.8647236824035645
    7. '   ' → logprob: -4.8647236824035645
    8. ' d' → logprob: -5.9897236824035645
    9. '       ' → logprob: -7.7397236824035645
    10. 's' → logprob: -7.7397236824035645

Token 649: ' p' (ID: 275)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.13844239711761475
    2. 'free' → logprob: -2.2634425163269043
    3. ' color' → logprob: -5.013442516326904
    4. ' ' → logprob: -5.263442516326904
    5. 'color' → logprob: -5.388442516326904
    6. ' if' → logprob: -5.638442516326904
    7. 'if' → logprob: -5.763442516326904
    8. ' pairs' → logprob: -7.013442516326904
    9. 'pairs' → logprob: -7.388442516326904
    10. '_free' → logprob: -8.888442039489746

Token 650: 'aires' (ID: 8507)
  Prédit: 'air'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -0.7308671474456787
    2. 'aires' → logprob: -1.6058671474456787
    3. 'a' → logprob: -1.9808671474456787
    4. 'airs' → logprob: -2.4808671474456787
    5. 'aire' → logprob: -2.4808671474456787
    6. 'r' → logprob: -5.355867385864258
    7. 'ai' → logprob: -6.355867385864258
    8. 'ar' → logprob: -7.105867385864258
    9. 'as' → logprob: -7.230867385864258
    10. 'ause' → logprob: -7.855867385864258

Token 651: ' libres' (ID: 79503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028157122433185577
    2. '_free' → logprob: -3.9031572341918945
    3. 'free' → logprob: -6.4031572341918945
    4. ' free' → logprob: -6.5281572341918945
    5. ' =' → logprob: -6.9031572341918945
    6. ' :' → logprob: -7.0281572341918945
    7. '=' → logprob: -7.0281572341918945
    8. '   ' → logprob: -7.7781572341918945
    9. ' ' → logprob: -7.9031572341918945
    10. '_possible' → logprob: -8.778157234191895

Token 652: ' possibles' (ID: 97753)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005330050829797983
    2. '=' → logprob: -6.0053300857543945
    3. ' =' → logprob: -7.2553300857543945
    4. ',' → logprob: -7.6303300857543945
    5. ' :' → logprob: -7.8803300857543945
    6. ':
' → logprob: -8.505330085754395
    7. ' ' → logprob: -8.755330085754395
    8. ' if' → logprob: -8.880330085754395
    9. 'if' → logprob: -9.255330085754395
    10. '   ' → logprob: -9.255330085754395

Token 653: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052808649837970734
    2. 'if' → logprob: -3.3028087615966797
    3. ' if' → logprob: -4.42780876159668
    4. '
' → logprob: -6.80280876159668
    5. '    
' → logprob: -7.55280876159668
    6. 'return' → logprob: -8.05280876159668
    7. '\n' → logprob: -8.05280876159668
    8. ':' → logprob: -8.30280876159668
    9. '       ' → logprob: -9.30280876159668
    10. 'for' → logprob: -10.92780876159668

Token 654: ' fin' (ID: 2131)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.015630975365638733
    2. '0' → logprob: -4.515631198883057
    3. ' return' → logprob: -5.515631198883057
    4. '   ' → logprob: -7.515631198883057
    5. '       ' → logprob: -13.015630722045898
    6. ' ' → logprob: -13.265630722045898
    7. '
' → logprob: -14.515630722045898
    8. '	return' → logprob: -15.890630722045898
    9. '1' → logprob: -16.5156307220459
    10. '  ' → logprob: -17.0156307220459

Token 655: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12285412847995758
    2. 'return' → logprob: -3.247854232788086
    3. '
' → logprob: -3.372854232788086
    4. ' return' → logprob: -4.122854232788086
    5. '0' → logprob: -4.622854232788086
    6. '       ' → logprob: -5.247854232788086
    7. '\n' → logprob: -5.497854232788086
    8. '    
' → logprob: -6.122854232788086
    9. ' ' → logprob: -6.622854232788086
    10. ':' → logprob: -6.997854232788086

Token 656: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14688244462013245
    2. 'rec' → logprob: -2.2718825340270996
    3. ' la' → logprob: -3.7718825340270996
    4. 'l' → logprob: -5.2718825340271
    5. ' recursion' → logprob: -6.0218825340271
    6. 'fonction' → logprob: -7.0218825340271
    7. 're' → logprob: -7.5218825340271
    8. ' réc' → logprob: -7.5218825340271
    9. 'r' → logprob: -8.021882057189941
    10. 'le' → logprob: -8.396882057189941

Token 657: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.03272731229662895
    2. 'fonction' → logprob: -4.532727241516113
    3. ' recursion' → logprob: -4.907727241516113
    4. 're' → logprob: -5.407727241516113
    5. 'def' → logprob: -5.782727241516113
    6. 'r' → logprob: -6.157727241516113
    7. 'function' → logprob: -6.407727241516113
    8. 'recursive' → logprob: -6.657727241516113
    9. 'return' → logprob: -8.032727241516113
    10. 'None' → logprob: -8.157727241516113

Token 658: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.013330582529306412
    2. 'urs' → logprob: -4.388330459594727
    3. 'ur' → logprob: -7.763330459594727
    4. 'urrence' → logprob: -7.888330459594727
    5. 'usion' → logprob: -12.513330459594727
    6. 'urr' → logprob: -12.888330459594727
    7. 'usr' → logprob: -13.013330459594727
    8. 'u' → logprob: -13.013330459594727
    9. 'urse' → logprob: -13.138330459594727
    10. 'urrent' → logprob: -13.263330459594727

Token 659: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027563760522753
    2. 'if' → logprob: -6.377756595611572
    3. ':' → logprob: -7.627756595611572
    4. ' if' → logprob: -8.002756118774414
    5. '       ' → logprob: -9.752756118774414
    6. '    
' → logprob: -9.752756118774414
    7. '
' → logprob: -10.002756118774414
    8. '\n' → logprob: -10.877756118774414
    9. ':
' → logprob: -11.127756118774414
    10. '```' → logprob: -11.377756118774414

Token 660: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018623570213094354
    2. ' if' → logprob: -7.001862525939941
    3. 'if' → logprob: -7.126862525939941
    4. '    
' → logprob: -9.126862525939941
    5. '
' → logprob: -10.251862525939941
    6. '       ' → logprob: -13.501862525939941
    7. 'return' → logprob: -14.626862525939941
    8. '```' → logprob: -14.751862525939941
    9. '    ' → logprob: -15.251862525939941
    10. '	if' → logprob: -16.501861572265625

Token 661: ' any' (ID: 1062)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0723608136177063
    2. '   ' → logprob: -2.8223607540130615
    3. ' if' → logprob: -4.572360992431641
    4. 'return' → logprob: -12.82236099243164
    5. '```' → logprob: -13.94736099243164
    6. 'for' → logprob: -14.57236099243164
    7. ' ' → logprob: -15.07236099243164
    8. 'i' → logprob: -15.07236099243164
    9. 'max' → logprob: -15.57236099243164
    10. 'count' → logprob: -15.57236099243164

Token 662: '_pair' (ID: 34819)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7864151000976562
    2. '_free' → logprob: -0.7864151000976562
    3. ' free' → logprob: -3.0364151000976562
    4. ' ' → logprob: -4.036415100097656
    5. ' not' → logprob: -4.786415100097656
    6. ' _' → logprob: -5.036415100097656
    7. 'free' → logprob: -5.536415100097656
    8. ' ==' → logprob: -6.536415100097656
    9. '_color' → logprob: -7.411415100097656
    10. ' if' → logprob: -7.411415100097656

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2749461233615875
    2. '=' → logprob: -1.6499460935592651
    3. '==' → logprob: -3.3999462127685547
    4. ' ==' → logprob: -4.774946212768555
    5. '_found' → logprob: -6.399946212768555
    6. '_' → logprob: -6.649946212768555
    7. '_possible' → logprob: -7.149946212768555
    8. '=False' → logprob: -7.274946212768555
    9. '_free' → logprob: -7.649946212768555
    10. ' ' → logprob: -7.774946212768555

Token 664: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10021001845598221
    2. ' False' → logprob: -2.350209951400757
    3. '   ' → logprob: -12.975210189819336
    4. 'len' → logprob: -14.975210189819336
    5. ' ' → logprob: -15.350210189819336
    6. 'false' → logprob: -15.975210189819336
    7. '  ' → logprob: -16.100210189819336
    8. 'any' → logprob: -16.600210189819336
    9. ' any' → logprob: -16.850210189819336
    10. '(False' → logprob: -17.100210189819336

Token 665: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2499648779630661
    2. '   ' → logprob: -1.7499648332595825
    3. '    
' → logprob: -4.374964714050293
    4. '<|end|>' → logprob: -4.499964714050293
    5. ':' → logprob: -4.749964714050293
    6. '  
' → logprob: -4.874964714050293
    7. ' 
' → logprob: -5.624964714050293
    8. ' for' → logprob: -6.999964714050293
    9. '   
' → logprob: -7.499964714050293
    10. '\n' → logprob: -7.624964714050293

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07501716911792755
    2. '    
' → logprob: -3.200017213821411
    3. '
' → logprob: -3.575017213821411
    4. ' for' → logprob: -7.075016975402832
    5. ' 
' → logprob: -7.450016975402832
    6. ':' → logprob: -7.825016975402832
    7. 'for' → logprob: -8.075016975402832
    8. '  
' → logprob: -8.200016975402832
    9. '\n' → logprob: -8.325016975402832
    10. '     
' → logprob: -8.700016975402832

Token 667: ' best' (ID: 1636)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.41519343852996826
    2. ' max' → logprob: -1.7901934385299683
    3. 'for' → logprob: -2.790193557739258
    4. ' for' → logprob: -3.415193557739258
    5. 'best' (adapté à ' best') → logprob: -3.665193557739258
    6. ' best' → logprob: -3.915193557739258
    7. '   ' → logprob: -4.540193557739258
    8. ' res' → logprob: -4.915193557739258
    9. 'res' → logprob: -5.165193557739258
    10. 'result' → logprob: -5.290193557739258

Token 668: ' =' (ID: 314)
  Prédit: '_removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -0.6629678606987
    2. '_count' → logprob: -0.7879678606987
    3. ' =' → logprob: -4.037967681884766
    4. '_' → logprob: -5.787967681884766
    5. '_remove' → logprob: -6.412967681884766
    6. '_score' → logprob: -6.412967681884766
    7. '_result' → logprob: -6.537967681884766
    8. '_rem' → logprob: -6.912967681884766
    9. '_amount' → logprob: -7.412967681884766
    10. '_value' → logprob: -7.537967681884766

Token 669: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019308974733576179
    2. ' ' → logprob: -6.2519307136535645
    3. 'removed' → logprob: -13.626931190490723
    4. '   ' → logprob: -14.626931190490723
    5. 'len' → logprob: -16.001930236816406
    6. '1' → logprob: -16.251930236816406
    7. '-' → logprob: -16.251930236816406
    8. ' -' → logprob: -16.251930236816406
    9. ' ' → logprob: -16.501930236816406
    10. ' removed' → logprob: -16.501930236816406

Token 670: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -10.500031471252441
    3. 'removed' → logprob: -13.000031471252441
    4. '-' → logprob: -14.625031471252441
    5. 'len' → logprob: -15.000031471252441
    6. 'max' → logprob: -15.875031471252441
    7. '1' → logprob: -16.500030517578125
    8. 'float' → logprob: -17.125030517578125
    9. ' -' → logprob: -17.375030517578125
    10. 'rem' → logprob: -17.375030517578125

Token 671: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10720207542181015
    2. '    
' → logprob: -2.7322020530700684
    3. '  
' → logprob: -3.9822020530700684
    4. '   ' → logprob: -4.732202053070068
    5. '   
' → logprob: -5.482202053070068
    6. ' 
' → logprob: -5.982202053070068
    7. '\n' → logprob: -6.232202053070068
    8. '\' → logprob: -8.732202529907227
    9. '     
' → logprob: -9.232202529907227
    10. '	
' → logprob: -9.482202529907227

Token 672: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5410111546516418
    2. '
' → logprob: -1.041011095046997
    3. '    
' → logprob: -2.791011095046997
    4. ' for' → logprob: -6.541011333465576
    5. 'for' → logprob: -7.416011333465576
    6. ' 
' → logprob: -7.791011333465576
    7. '  
' → logprob: -7.791011333465576
    8. '   
' → logprob: -8.041010856628418
    9. '\n' → logprob: -9.791010856628418
    10. '
' → logprob: -10.166010856628418

Token 673: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2397155612707138
    2. '   ' → logprob: -2.239715576171875
    3. ' for' → logprob: -2.239715576171875
    4. '
' → logprob: -9.114715576171875
    5. '	for' → logprob: -10.614715576171875
    6. '    
' → logprob: -10.739715576171875
    7. ' ' → logprob: -12.239715576171875
    8. '  ' → logprob: -12.364715576171875
    9. 'color' → logprob: -13.989715576171875
    10. 'indices' → logprob: -14.114715576171875

Token 674: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28552255034446716
    2. ' for' → logprob: -1.5355225801467896
    3. '   ' → logprob: -3.4105224609375
    4. ' ' → logprob: -12.6605224609375
    5. '	for' → logprob: -12.9105224609375
    6. 'color' → logprob: -13.1605224609375
    7. 'colors' → logprob: -14.0355224609375
    8. '  ' → logprob: -14.1605224609375
    9. 'pairs' → logprob: -14.4105224609375
    10. '
' → logprob: -14.7855224609375

Token 675: ' chaque' (ID: 21194)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.530041515827179
    2. ' c' → logprob: -0.905041515827179
    3. 'color' → logprob: -6.030041694641113
    4. 'i' → logprob: -6.280041694641113
    5. ' color' → logprob: -6.530041694641113
    6. ' i' → logprob: -7.030041694641113
    7. '   ' → logprob: -9.155041694641113
    8. ' ' → logprob: -10.280041694641113
    9. 'col' → logprob: -10.780041694641113
    10. 'for' → logprob: -11.155041694641113

Token 676: ' couleur' (ID: 48005)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5778858661651611
    2. ' c' → logprob: -0.8278858661651611
    3. ' color' → logprob: -6.952885627746582
    4. 'color' → logprob: -6.952885627746582
    5. '   ' → logprob: -10.702885627746582
    6. ' couleur' → logprob: -11.952885627746582
    7. '	c' → logprob: -12.827885627746582
    8. ')c' → logprob: -15.452885627746582
    9. '       ' → logprob: -15.952885627746582
    10. ',' → logprob: -16.0778865814209

Token 677: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4584772288799286
    2. ':' → logprob: -1.708477258682251
    3. ' in' → logprob: -1.958477258682251
    4. ',' → logprob: -3.458477258682251
    5. ' c' → logprob: -4.958477020263672
    6. ' :' → logprob: -5.958477020263672
    7. 'c' → logprob: -6.958477020263672
    8. 'in' → logprob: -7.083477020263672
    9. ',c' → logprob: -7.333477020263672
    10. '       ' → logprob: -7.708477020263672

Token 678: ' essayer' (ID: 92713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.434920072555542
    2. 'for' → logprob: -1.184920072555542
    3. '   ' → logprob: -3.059920072555542
    4. '	for' → logprob: -11.684920310974121
    5. ' ' → logprob: -12.559920310974121
    6. '  ' → logprob: -12.809920310974121
    7. 'color' → logprob: -13.309920310974121
    8. ' color' → logprob: -13.434920310974121
    9. 'colors' → logprob: -13.559920310974121
    10. 'c' → logprob: -13.934920310974121

Token 679: ' toutes' (ID: 17502)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05597999319434166
    2. '    ' → logprob: -3.8059799671173096
    3. ' de' → logprob: -4.305980205535889
    4. '       ' → logprob: -5.430980205535889
    5. ' for' → logprob: -5.555980205535889
    6. ' d' → logprob: -5.680980205535889
    7. 'for' → logprob: -6.430980205535889
    8. ' if' → logprob: -7.430980205535889
    9. ':' → logprob: -7.555980205535889
    10. ' c' → logprob: -7.930980205535889

Token 680: ' les' (ID: 1341)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.45391830801963806
    2. ' pairs' → logprob: -1.5789183378219604
    3. ' p' → logprob: -3.453918218612671
    4. 'p' → logprob: -3.953918218612671
    5. ' les' → logprob: -4.07891845703125
    6. ' i' → logprob: -4.20391845703125
    7. '   ' → logprob: -4.45391845703125
    8. 'i' → logprob: -4.45391845703125
    9. ' paire' → logprob: -4.57891845703125
    10. 'les' → logprob: -4.57891845703125

Token 681: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.9518232941627502
    2. 'i' → logprob: -1.7018232345581055
    3. 'c' → logprob: -2.2018232345581055
    4. 'comb' → logprob: -2.7018232345581055
    5. 'color' → logprob: -2.9518232345581055
    6. ' combinations' → logprob: -3.2018232345581055
    7. 'cou' → logprob: -3.2018232345581055
    8. 'p' → logprob: -3.5768232345581055
    9. ' comb' → logprob: -4.3268232345581055
    10. 'len' → logprob: -4.8268232345581055

Token 682: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.18427494168281555
    2. 'airs' → logprob: -2.309274911880493
    3. 'air' → logprob: -3.434274911880493
    4. 'a' → logprob: -4.184275150299072
    5. '   ' → logprob: -5.434275150299072
    6. 'r' → logprob: -5.934275150299072
    7. 'ar' → logprob: -6.434275150299072
    8. '[' → logprob: -6.559275150299072
    9. 'ranges' → logprob: -6.809275150299072
    10. 'i' → logprob: -6.809275150299072

Token 683: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00421100901439786
    2. ' for' → logprob: -6.754210948944092
    3. '       ' → logprob: -7.004210948944092
    4. ':' → logprob: -7.754210948944092
    5. ' c' → logprob: -8.12921142578125
    6. ' in' → logprob: -8.25421142578125
    7. ',' → logprob: -8.75421142578125
    8. '           ' → logprob: -8.75421142578125
    9. 'for' → logprob: -8.75421142578125
    10. '  ' → logprob: -9.00421142578125

Token 684: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002920303028076887
    2. ':' → logprob: -6.252920150756836
    3. '    
' → logprob: -7.377920150756836
    4. ',' → logprob: -9.377920150756836
    5. ' for' → logprob: -9.502920150756836
    6. '       ' → logprob: -9.752920150756836
    7. '
' → logprob: -9.877920150756836
    8. 'for' → logprob: -10.627920150756836
    9. '    ' → logprob: -11.252920150756836
    10. '```' → logprob: -11.877920150756836

Token 685: ' les' (ID: 1341)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.048909466713666916
    2. ' color' → logprob: -3.1739094257354736
    3. 'free' → logprob: -5.298909664154053
    4. ' free' → logprob: -7.423909664154053
    5. '[color' → logprob: -8.298909187316895
    6. '(color' → logprob: -11.298909187316895
    7. 'the' → logprob: -11.673909187316895
    8. 'range' → logprob: -11.923909187316895
    9. ' ' → logprob: -12.173909187316895
    10. '   ' → logprob: -12.548909187316895

Token 686: ' libres' (ID: 79503)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.03043677657842636
    2. ' color' → logprob: -4.030436992645264
    3. 'free' → logprob: -4.530436992645264
    4. ' free' → logprob: -7.155436992645264
    5. '[color' → logprob: -7.530436992645264
    6. 'indices' → logprob: -10.530436515808105
    7. '   ' → logprob: -10.655436515808105
    8. 'range' → logprob: -10.655436515808105
    9. ' ' → logprob: -12.030436515808105
    10. '_color' → logprob: -12.280436515808105

Token 687: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002267539966851473
    2. ':' → logprob: -6.627267360687256
    3. '    
' → logprob: -8.002267837524414
    4. 'for' → logprob: -8.377267837524414
    5. ',' → logprob: -9.002267837524414
    6. ' for' → logprob: -9.502267837524414
    7. '       ' → logprob: -10.002267837524414
    8. '[' → logprob: -10.752267837524414
    9. '.' → logprob: -11.252267837524414
    10. '<|end|>' → logprob: -11.502267837524414

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010099459905177355
    2. 'for' → logprob: -7.501009941101074
    3. ' for' → logprob: -7.751009941101074
    4. '    
' → logprob: -11.501009941101074
    5. '       ' → logprob: -12.126009941101074
    6. ',' → logprob: -13.251009941101074
    7. ':' → logprob: -13.251009941101074
    8. '
' → logprob: -13.626009941101074
    9. '   ' → logprob: -13.751009941101074
    10. '```' → logprob: -13.751009941101074

Token 689: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02705278806388378
    2. ' for' → logprob: -4.152052879333496
    3. 'for' (adapté à ' for') → logprob: -4.527052879333496
    4. '	for' → logprob: -10.277052879333496
    5. '```' → logprob: -10.277052879333496
    6. '       ' → logprob: -10.402052879333496
    7. '    
' → logprob: -10.652052879333496
    8. ' ' → logprob: -11.527052879333496
    9. '
' → logprob: -12.152052879333496
    10. '  ' → logprob: -13.402052879333496

Token 690: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43974971771240234
    2. ' c' → logprob: -1.0647497177124023
    3. 'color' → logprob: -5.064749717712402
    4. ' color' → logprob: -5.439749717712402
    5. '   ' → logprob: -8.189749717712402
    6. '	c' → logprob: -11.314749717712402
    7. ' ' → logprob: -11.439749717712402
    8. '    ' → logprob: -11.939749717712402
    9. '       ' → logprob: -12.314749717712402
    10. ' couleur' → logprob: -12.439749717712402

Token 691: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28769364953041077
    2. 'in' → logprob: -1.4126936197280884
    3. '   ' → logprob: -5.787693500518799
    4. ',' → logprob: -5.787693500518799
    5. '_in' → logprob: -8.787693977355957
    6. ' ,' → logprob: -9.662693977355957
    7. '    ' → logprob: -10.412693977355957
    8. ',in' → logprob: -10.412693977355957
    9. ':' → logprob: -10.912693977355957
    10. ' ' → logprob: -11.162693977355957

Token 692: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.01761751063168049
    2. ' indices' → logprob: -4.517617702484131
    3. 'free' → logprob: -5.517617702484131
    4. 'lst' → logprob: -6.392617702484131
    5. 'inds' → logprob: -8.392617225646973
    6. 'idx' → logprob: -8.392617225646973
    7. ' free' → logprob: -8.517617225646973
    8. ' lst' → logprob: -9.392617225646973
    9. 'indexes' → logprob: -10.517617225646973
    10. 'nodes' → logprob: -10.767617225646973

Token 693: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806019574403763
    2. 'in' → logprob: -3.288060188293457
    3. '   ' → logprob: -12.163060188293457
    4. ' ' → logprob: -12.163060188293457
    5. '	in' → logprob: -13.163060188293457
    6. '_in' → logprob: -13.538060188293457
    7. '  ' → logprob: -13.538060188293457
    8. 's' → logprob: -14.163060188293457
    9. '    ' → logprob: -14.288060188293457
    10. 'In' → logprob: -14.413060188293457

Token 694: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.005069856531918049
    2. '[color' → logprob: -5.755069732666016
    3. ' color' → logprob: -6.505069732666016
    4. '(color' → logprob: -8.255069732666016
    5. 'free' → logprob: -9.880069732666016
    6. '[' → logprob: -10.380069732666016
    7. '[(' → logprob: -11.255069732666016
    8. '=color' → logprob: -11.880069732666016
    9. 'list' → logprob: -12.380069732666016
    10. '[[' → logprob: -12.505069732666016

Token 695: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.007196604739874601
    2. ':' → logprob: -5.382196426391602
    3. '   ' → logprob: -6.882196426391602
    4. ':
' → logprob: -7.882196426391602
    5. 's' → logprob: -8.007196426391602
    6. '_free' → logprob: -8.757196426391602
    7. 'free' → logprob: -9.257196426391602
    8. ')' → logprob: -9.382196426391602
    9. '_in' → logprob: -9.882196426391602
    10. 'es' → logprob: -10.007196426391602

Token 696: '_free' (ID: 21204)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.031125186011195183
    2. '_free' → logprob: -4.156125068664551
    3. 'items' → logprob: -4.281125068664551
    4. 'range' → logprob: -7.281125068664551
    5. 'color' → logprob: -8.65612506866455
    6. ' free' → logprob: -9.28112506866455
    7. 'enumer' → logprob: -10.03112506866455
    8. 'indices' → logprob: -10.15612506866455
    9. 'iter' → logprob: -10.78112506866455
    10. '_items' → logprob: -11.03112506866455

Token 697: '_indices' (ID: 43508)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.1408006250858307
    2. '_indices' → logprob: -2.765800714492798
    3. ':' → logprob: -3.140800714492798
    4. '.indices' → logprob: -4.390800476074219
    5. ':
' → logprob: -5.640800476074219
    6. '   ' → logprob: -5.765800476074219
    7. '.items' → logprob: -6.890800476074219
    8. 'items' → logprob: -7.015800476074219
    9. '):' → logprob: -7.265800476074219
    10. ' indices' → logprob: -7.890800476074219

Token 698: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00266852299682796
    2. ':
' → logprob: -6.002668380737305
    3. ' :' → logprob: -9.252668380737305
    4. '   ' → logprob: -9.752668380737305
    5. '):' → logprob: -10.752668380737305
    6. '[' → logprob: -11.502668380737305
    7. '):
' → logprob: -13.627668380737305
    8. ':
' → logprob: -14.252668380737305
    9. ' :
' → logprob: -14.502668380737305
    10. '[:-' → logprob: -14.502668380737305

Token 699: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004237954970449209
    2. ':
' → logprob: -5.504238128662109
    3. '   ' → logprob: -9.37923812866211
    4. '       ' → logprob: -9.75423812866211
    5. '):' → logprob: -12.25423812866211
    6. ' :' → logprob: -12.37923812866211
    7. ',' → logprob: -13.12923812866211
    8. '():' → logprob: -13.12923812866211
    9. '):
' → logprob: -13.62923812866211
    10. '():
' → logprob: -14.25423812866211

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003169153118506074
    2. '   ' → logprob: -6.003169059753418
    3. '        
' → logprob: -8.378169059753418
    4. '    ' → logprob: -8.378169059753418
    5. '    
' → logprob: -10.003169059753418
    6. ' for' → logprob: -10.003169059753418
    7. ',' → logprob: -10.878169059753418
    8. '	   ' → logprob: -10.878169059753418
    9. '	' → logprob: -11.253169059753418
    10. ':' → logprob: -11.253169059753418

Token 701: ' length' (ID: 5517)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5330473184585571
    2. 'for' → logprob: -1.6580473184585571
    3. '       ' → logprob: -2.0330471992492676
    4. '   ' → logprob: -2.4080471992492676
    5. ' if' → logprob: -7.783047199249268
    6. 'if' → logprob: -8.158047676086426
    7. 'length' (adapté à ' length') → logprob: -8.158047676086426
    8. 'm' → logprob: -8.908047676086426
    9. ' length' → logprob: -9.158047676086426
    10. ' k' → logprob: -9.158047676086426

Token 702: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28323280811309814
    2. '=' → logprob: -1.4082328081130981
    3. '=len' → logprob: -6.658232688903809
    4. '>' → logprob: -7.783232688903809
    5. '   ' → logprob: -8.283232688903809
    6. '>=' → logprob: -9.908232688903809
    7. ' >' → logprob: -10.783232688903809
    8. ' >=' → logprob: -11.283232688903809
    9. '≥' → logprob: -12.158232688903809
    10. ' ' → logprob: -12.408232688903809

Token 703: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008615161292254925
    2. ' len' → logprob: -4.758615016937256
    3. '(len' → logprob: -14.633615493774414
    4. '   ' → logprob: -15.258615493774414
    5. '	len' → logprob: -17.633615493774414
    6. '       ' → logprob: -18.133615493774414
    7. ' ' → logprob: -18.258615493774414
    8. '           ' → logprob: -18.633615493774414
    9. '[len' → logprob: -18.633615493774414
    10. '  ' → logprob: -19.133615493774414

Token 704: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -4.320199877838604e-07
    2. 'indices' → logprob: -14.875
    3. '(' → logprob: -17.25
    4. '(ind' → logprob: -18.125
    5. '"indices' → logprob: -19.25
    6. ' (' → logprob: -20.25
    7. '(ids' → logprob: -20.25
    8. ' indices' → logprob: -21.875
    9. '.indices' → logprob: -22.125
    10. '(index' → logprob: -22.25

Token 705: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023951400071382523
    2. ')
' → logprob: -3.898951292037964
    3. '   ' → logprob: -5.898951530456543
    4. '       ' → logprob: -8.148951530456543
    5. '
' → logprob: -8.523951530456543
    6. '):
' → logprob: -9.773951530456543
    7. ' )' → logprob: -9.773951530456543
    8. '>' → logprob: -11.648951530456543
    9. 'for' → logprob: -11.773951530456543
    10. '-' → logprob: -12.023951530456543

Token 706: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022176163271069527
    2. '    
' → logprob: -4.647176265716553
    3. '
' → logprob: -5.647176265716553
    4. ' for' → logprob: -6.147176265716553
    5. ' 
' → logprob: -6.272176265716553
    6. '  
' → logprob: -6.522176265716553
    7. ' ' → logprob: -6.772176265716553
    8. ':' → logprob: -7.522176265716553
    9. '   
' → logprob: -8.272175788879395
    10. '  ' → logprob: -8.522175788879395

Token 707: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5036896467208862
    2. ' for' → logprob: -1.5036896467208862
    3. '   ' → logprob: -1.7536896467208862
    4. '       ' → logprob: -8.878689765930176
    5. 'i' → logprob: -10.253689765930176
    6. ' i' → logprob: -10.378689765930176
    7. ' ' → logprob: -10.753689765930176
    8. '    
' → logprob: -11.503689765930176
    9. 'if' (adapté à ' if') → logprob: -11.878689765930176
    10. '	for' → logprob: -12.253689765930176

Token 708: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.47408273816108704
    2. ' length' → logprob: -0.9740827083587646
    3. ' ' → logprob: -12.849082946777344
    4. '(length' → logprob: -13.849082946777344
    5. '   ' → logprob: -14.224082946777344
    6. '	length' → logprob: -14.474082946777344
    7. 'ength' → logprob: -14.974082946777344
    8. 'leng' → logprob: -15.224082946777344
    9. 'l' → logprob: -16.349082946777344
    10. ' lenght' → logprob: -16.474082946777344

Token 709: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1187082529067993
    2. ' >' → logprob: -1.3687082529067993
    3. '<' → logprob: -1.7437082529067993
    4. '>' → logprob: -2.1187081336975098
    5. ' >=' → logprob: -2.6187081336975098
    6. '>=' → logprob: -2.9937081336975098
    7. ' ' → logprob: -7.99370813369751
    8. ' <=' → logprob: -8.618708610534668
    9. '<=' → logprob: -8.868708610534668
    10. '   ' → logprob: -9.243708610534668

Token 710: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008617408573627472
    2. ' ' → logprob: -4.758617401123047
    3. '   ' → logprob: -12.883617401123047
    4. '  ' → logprob: -15.258617401123047
    5. '    ' → logprob: -17.196117401123047
    6. '```' → logprob: -17.758617401123047
    7. '     ' → logprob: -17.946117401123047
    8. '２' → logprob: -18.133617401123047
    9. '	' → logprob: -18.258617401123047
    10. '۲' → logprob: -18.508617401123047

Token 711: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.625045776367188
    4. '２' → logprob: -17.750045776367188
    5. '۲' → logprob: -18.250045776367188
    6. '```' → logprob: -19.500045776367188
    7. '٢' → logprob: -19.562545776367188
    8. '  ' → logprob: -19.875045776367188
    9. '	' → logprob: -20.437545776367188
    10. '
' → logprob: -20.562545776367188

Token 712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6948885321617126
    2. ':
' → logprob: -0.6948885321617126
    3. '           ' → logprob: -6.944888591766357
    4. '       ' → logprob: -7.194888591766357
    5. '   ' → logprob: -11.5698881149292
    6. ':
' → logprob: -12.1948881149292
    7. ' :
' → logprob: -12.3198881149292
    8. '):
' → logprob: -13.0698881149292
    9. ' :' → logprob: -13.5698881149292
    10. '               ' → logprob: -13.9448881149292

Token 713: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12161025404930115
    2. ':' → logprob: -2.621610164642334
    3. ':
' → logprob: -3.871610164642334
    4. '       ' → logprob: -4.246610164642334
    5. ' continue' → logprob: -5.246610164642334
    6. 'continue' → logprob: -7.496610164642334
    7. '               ' → logprob: -8.246610641479492
    8. '\n' → logprob: -8.746610641479492
    9. '   ' → logprob: -9.496610641479492
    10. ' continues' → logprob: -9.621610641479492

Token 714: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1524137258529663
    2. '       ' → logprob: -1.2774137258529663
    3. ' continue' → logprob: -1.2774137258529663
    4. 'continue' (adapté à ' continue') → logprob: -2.152413845062256
    5. '	continue' → logprob: -5.027413845062256
    6. '   ' → logprob: -5.902413845062256
    7. '               ' → logprob: -7.902413845062256
    8. '	' → logprob: -8.277413368225098
    9. '		' → logprob: -8.902413368225098
    10. '
' → logprob: -9.527413368225098

Token 715: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5555618405342102
    2. '
' → logprob: -1.0555617809295654
    3. '   ' → logprob: -2.6805617809295654
    4. '    
' → logprob: -5.1805620193481445
    5. '        
' → logprob: -6.1805620193481445
    6. '  
' → logprob: -7.1805620193481445
    7. '\n' → logprob: -8.555562019348145
    8. ' 
' → logprob: -8.680562019348145
    9. '	' → logprob: -8.805562019348145
    10. '\' → logprob: -8.930562019348145

Token 716: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6475327014923096
    2. '       ' → logprob: -0.7725327014923096
    3. '    
' → logprob: -5.0225324630737305
    4. '        
' → logprob: -5.7725324630737305
    5. '
' → logprob: -6.5225324630737305
    6. ' for' → logprob: -6.7725324630737305
    7. '  
' → logprob: -7.1475324630737305
    8. '\' → logprob: -8.02253246307373
    9. '    ' → logprob: -8.14753246307373
    10. 'for' → logprob: -8.89753246307373

Token 717: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20352362096309662
    2. 'for' → logprob: -2.078523635864258
    3. ' for' → logprob: -3.328523635864258
    4. '   ' → logprob: -3.828523635864258
    5. '
' → logprob: -6.828523635864258
    6. '        
' → logprob: -8.578523635864258
    7. '    
' → logprob: -9.828523635864258
    8. '           ' → logprob: -9.953523635864258
    9. '	for' → logprob: -10.953523635864258
    10. '    ' → logprob: -11.703523635864258

Token 718: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0910719633102417
    2. ' for' → logprob: -3.0910720825195312
    3. '   ' → logprob: -3.3410720825195312
    4. '       ' → logprob: -5.091072082519531
    5. ' ' → logprob: -10.466072082519531
    6. '           ' → logprob: -11.966072082519531
    7. '	for' → logprob: -12.966072082519531
    8. '    ' → logprob: -13.341072082519531
    9. '```' → logprob: -13.341072082519531
    10. 'i' → logprob: -13.716072082519531

Token 719: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0007086210534907877
    2. 'ours' → logprob: -7.75070858001709
    3. 'ourt' → logprob: -8.87570858001709
    4. 'u' → logprob: -10.12570858001709
    5. '   ' → logprob: -10.50070858001709
    6. '       ' → logprob: -10.62570858001709
    7. 'ou' → logprob: -11.25070858001709
    8. 'ur' → logprob: -11.62570858001709
    9. 'urer' → logprob: -12.62570858001709
    10. 'outer' → logprob: -12.62570858001709

Token 720: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.18621572852134705
    2. 'r' → logprob: -1.8112157583236694
    3. 'i' → logprob: -6.186215877532959
    4. 'er' → logprob: -6.936215877532959
    5. 'rir' → logprob: -7.061215877532959
    6. 'our' → logprob: -7.186215877532959
    7. 't' → logprob: -7.811215877532959
    8. 'u' → logprob: -8.0612154006958
    9. 'rer' → logprob: -8.0612154006958
    10. 'ur' → logprob: -8.3112154006958

Token 721: ' toutes' (ID: 17502)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25253409147262573
    2. 'for' → logprob: -1.6275341510772705
    3. ' range' → logprob: -4.752533912658691
    4. 'i' → logprob: -5.002533912658691
    5. ' i' → logprob: -5.377533912658691
    6. 'range' → logprob: -5.627533912658691
    7. '       ' → logprob: -6.002533912658691
    8. '   ' → logprob: -8.752533912658691
    9. 'j' → logprob: -9.252533912658691
    10. '_' → logprob: -9.627533912658691

Token 722: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2577114403247833
    2. ' i' → logprob: -1.757711410522461
    3. 'range' → logprob: -3.882711410522461
    4. '(i' → logprob: -4.757711410522461
    5. ' range' → logprob: -5.007711410522461
    6. '   ' → logprob: -5.882711410522461
    7. 'j' → logprob: -6.007711410522461
    8. ' pairs' → logprob: -6.007711410522461
    9. 'pairs' → logprob: -6.007711410522461
    10. ' for' → logprob: -6.257711410522461

Token 723: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038289912045001984
    2. ' i' → logprob: -4.288290023803711
    3. 'p' → logprob: -4.663290023803711
    4. 'pairs' → logprob: -5.163290023803711
    5. 'j' → logprob: -5.788290023803711
    6. 'indices' → logprob: -6.288290023803711
    7. ' pairs' → logprob: -6.913290023803711
    8. ' ' → logprob: -7.038290023803711
    9. 'range' → logprob: -7.538290023803711
    10. ' p' → logprob: -7.663290023803711

Token 724: 'aires' (ID: 8507)
  Prédit: 'airs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.07169527560472488
    2. 'i' → logprob: -2.821695327758789
    3. 'air' → logprob: -5.821695327758789
    4. 'aires' → logprob: -6.571695327758789
    5. 'indices' → logprob: -7.071695327758789
    6. '2' → logprob: -7.196695327758789
    7. 'oints' → logprob: -7.321695327758789
    8. 'ranges' → logprob: -7.571695327758789
    9. '1' → logprob: -8.196695327758789
    10. 'length' → logprob: -8.196695327758789

Token 725: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5308740139007568
    2. '       ' → logprob: -1.4058740139007568
    3. 'for' → logprob: -2.280874013900757
    4. ' i' → logprob: -3.530874013900757
    5. '   ' → logprob: -4.030874252319336
    6. ' (' → logprob: -5.405874252319336
    7. 'i' → logprob: -5.530874252319336
    8. '(i' → logprob: -6.030874252319336
    9. '           ' → logprob: -6.155874252319336
    10. ',' → logprob: -7.155874252319336

Token 726: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7839995622634888
    2. '       ' → logprob: -1.1589995622634888
    3. '   ' → logprob: -2.033999443054199
    4. 'for' → logprob: -2.408999443054199
    5. '           ' → logprob: -6.033999443054199
    6. ' in' → logprob: -6.533999443054199
    7. ' i' → logprob: -6.658999443054199
    8. '               ' → logprob: -7.158999443054199
    9. '```' → logprob: -7.783999443054199
    10. ':
' → logprob: -8.2839994430542

Token 727: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34212884306907654
    2. 'for' (adapté à ' for') → logprob: -1.342128872871399
    3. '       ' → logprob: -4.092128753662109
    4. '   ' → logprob: -4.467128753662109
    5. '           ' → logprob: -9.09212875366211
    6. ' ' → logprob: -9.59212875366211
    7. '```' → logprob: -10.21712875366211
    8. ' i' → logprob: -10.96712875366211
    9. '	for' → logprob: -11.71712875366211
    10. '``' → logprob: -12.09212875366211

Token 728: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03281833603978157
    2. ' i' → logprob: -4.28281831741333
    3. 'x' → logprob: -4.78281831741333
    4. 'a' → logprob: -4.78281831741333
    5. 'p' → logprob: -6.90781831741333
    6. ' x' → logprob: -8.532818794250488
    7. 'idx' → logprob: -8.657818794250488
    8. 'k' → logprob: -9.032818794250488
    9. ' a' → logprob: -9.907818794250488
    10. '   ' → logprob: -10.157818794250488

Token 729: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033830225467681885
    2. 'in' → logprob: -3.408830165863037
    3. ' ' → logprob: -9.158830642700195
    4. '1' → logprob: -10.658830642700195
    5. '_' → logprob: -11.408830642700195
    6. '_in' → logprob: -11.408830642700195
    7. '  ' → logprob: -11.658830642700195
    8. '    ' → logprob: -12.408830642700195
    9. '	in' → logprob: -12.533830642700195
    10. '   ' → logprob: -12.533830642700195

Token 730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05499343201518059
    2. 'in' → logprob: -2.9299933910369873
    3. ' ' → logprob: -10.054993629455566
    4. ',' → logprob: -10.429993629455566
    5. '	in' → logprob: -11.429993629455566
    6. '+' → logprob: -11.929993629455566
    7. '   ' → logprob: -12.054993629455566
    8. '1' → logprob: -12.929993629455566
    9. ' ,' → logprob: -13.179993629455566
    10. '    ' → logprob: -13.429993629455566

Token 731: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132949769496918
    2. ' range' → logprob: -1.3132950067520142
    3. '   ' → logprob: -10.938295364379883
    4. ' ' → logprob: -11.938295364379883
    5. '  ' → logprob: -12.688295364379883
    6. '    ' → logprob: -13.313295364379883
    7. '(range' → logprob: -13.813295364379883
    8. ' in' → logprob: -13.938295364379883
    9. 'in' → logprob: -14.063295364379883
    10. '	range' → logprob: -14.563295364379883

Token 732: '(length' (ID: 47037)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0685075968503952
    2. ' length' → logprob: -3.318507671356201
    3. '0' → logprob: -4.193507671356201
    4. '(length' → logprob: -4.318507671356201
    5. ' ' → logprob: -7.943507671356201
    6. '1' → logprob: -7.943507671356201
    7. 'i' → logprob: -8.193507194519043
    8. '   ' → logprob: -8.443507194519043
    9. 'len' → logprob: -8.693507194519043
    10. '(' → logprob: -10.068507194519043

Token 733: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8359159231185913
    2. '):' → logprob: -1.2109159231185913
    3. ' -' → logprob: -1.5859159231185913
    4. '):
' → logprob: -3.210916042327881
    5. '   ' → logprob: -4.210916042327881
    6. '+' → logprob: -5.335916042327881
    7. '       ' → logprob: -6.460916042327881
    8. '1' → logprob: -7.210916042327881
    9. ' ' → logprob: -7.460916042327881
    10. ')' → logprob: -8.210915565490723

Token 734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5053791999816895
    2. '       ' → logprob: -1.3803791999816895
    3. '+' → logprob: -3.0053791999816895
    4. ' for' → logprob: -3.5053791999816895
    5. '               ' → logprob: -4.0053791999816895
    6. ' +' → logprob: -4.2553791999816895
    7. '   ' → logprob: -4.6303791999816895
    8. 'for' → logprob: -4.7553791999816895
    9. ':' → logprob: -5.6303791999816895
    10. '	' → logprob: -6.2553791999816895

Token 735: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32340556383132935
    2. ' for' → logprob: -1.4484055042266846
    3. ' 
' → logprob: -4.323405742645264
    4. ' ' → logprob: -4.823405742645264
    5. ' i' → logprob: -5.573405742645264
    6. '+' → logprob: -5.823405742645264
    7. 'i' → logprob: -5.948405742645264
    8. '               ' → logprob: -6.198405742645264
    9. '            ' → logprob: -6.573405742645264
    10. '           ' → logprob: -6.573405742645264

Token 736: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061977654695510864
    2. ' i' → logprob: -2.8119776248931885
    3. '   ' → logprob: -11.68697738647461
    4. ' ' → logprob: -14.18697738647461
    5. '    ' → logprob: -15.06197738647461
    6. '	i' → logprob: -15.43697738647461
    7. '  ' → logprob: -15.56197738647461
    8. '     ' → logprob: -16.68697738647461
    9. 'j' → logprob: -16.81197738647461
    10. '(i' → logprob: -16.93697738647461

Token 737: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25195547938346863
    2. '2' → logprob: -1.501955509185791
    3. '   ' → logprob: -11.876955032348633
    4. 'i' → logprob: -12.251955032348633
    5. ' ' → logprob: -13.251955032348633
    6. '```' → logprob: -13.251955032348633
    7. '_' → logprob: -13.626955032348633
    8. ' =' → logprob: -13.626955032348633
    9. '
' → logprob: -13.876955032348633
    10. 's' → logprob: -14.001955032348633

Token 738: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009638744406402111
    2. 'in' → logprob: -4.759638786315918
    3. 'i' → logprob: -7.384638786315918
    4. ' i' → logprob: -8.009638786315918
    5. '=i' → logprob: -10.259638786315918
    6. '=' → logprob: -10.759638786315918
    7. '(i' → logprob: -12.634638786315918
    8. ' =' → logprob: -12.884638786315918
    9. '1' → logprob: -13.009638786315918
    10. ' ' → logprob: -13.134638786315918

Token 739: ' range' (ID: 3352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004418013151735067
    2. ' i' → logprob: -5.504417896270752
    3. '(i' → logprob: -8.00441837310791
    4. 'range' → logprob: -12.37941837310791
    5. ' range' → logprob: -14.37941837310791
    6. '{i' → logprob: -15.50441837310791
    7. '[i' → logprob: -15.75441837310791
    8. '   ' → logprob: -15.87941837310791
    9. ' (' → logprob: -16.004417419433594
    10. '	i' → logprob: -17.504417419433594

Token 740: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019397038267925382
    2. ' i' → logprob: -6.25193977355957
    3. '(i' → logprob: -11.50193977355957
    4. '   ' → logprob: -13.87693977355957
    5. '	i' → logprob: -17.62693977355957
    6. ' (' → logprob: -18.12693977355957
    7. '{i' → logprob: -18.25193977355957
    8. ' ' → logprob: -18.37693977355957
    9. '  ' → logprob: -18.87693977355957
    10. '    ' → logprob: -19.12693977355957

Token 741: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035786881926469505
    2. '2' → logprob: -8.125357627868652
    3. '+' → logprob: -10.250357627868652
    4. ' ' → logprob: -12.125357627868652
    5. '   ' → logprob: -12.625357627868652
    6. ' +' → logprob: -12.875357627868652
    7. '```' → logprob: -13.250357627868652
    8. '       ' → logprob: -13.375357627868652
    9. 's' → logprob: -13.500357627868652
    10. '         ' → logprob: -13.625357627868652

Token 742: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868756890296936
    2. ' +' → logprob: -1.1368756294250488
    3. '1' → logprob: -12.386876106262207
    4. '+i' → logprob: -15.886876106262207
    5. ' +
' → logprob: -16.63687515258789
    6. '+
' → logprob: -16.76187515258789
    7. '()+' → logprob: -17.13687515258789
    8. ' ' → logprob: -17.26187515258789
    9. ' plus' → logprob: -17.26187515258789
    10. '           ' → logprob: -17.76187515258789

Token 743: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001517834491096437
    2. 'length' → logprob: -6.5015177726745605
    3. ' ' → logprob: -11.376518249511719
    4. ' length' → logprob: -12.876518249511719
    5. 'range' → logprob: -13.751518249511719
    6. '   ' → logprob: -15.376518249511719
    7. 'i' → logprob: -16.87651824951172
    8. 'len' → logprob: -17.25151824951172
    9. '(length' → logprob: -17.62651824951172
    10. '  ' → logprob: -17.87651824951172

Token 744: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3512492775917053
    2. ',length' → logprob: -1.3512492179870605
    3. 'length' → logprob: -4.2262492179870605
    4. ' ,' → logprob: -4.7262492179870605
    5. '1' → logprob: -5.1012492179870605
    6. '(length' → logprob: -5.6012492179870605
    7. '):' → logprob: -6.2262492179870605
    8. ' length' → logprob: -7.3512492179870605
    9. '[length' → logprob: -7.4762492179870605
    10. '):
' → logprob: -8.226249694824219

Token 745: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.01416350994259119
    2. ' length' → logprob: -4.264163494110107
    3. 'leng' → logprob: -18.764163970947266
    4. '(length' → logprob: -19.014163970947266
    5. 'len' → logprob: -19.764163970947266
    6. '	length' → logprob: -20.139163970947266
    7. 'ength' → logprob: -21.139163970947266
    8. '_length' → logprob: -21.139163970947266
    9. 'Length' → logprob: -21.264163970947266
    10. ' ' → logprob: -21.389163970947266

Token 746: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12718458473682404
    2. '):
' → logprob: -2.1271846294403076
    3. ')' → logprob: -8.752184867858887
    4. '+' → logprob: -10.002184867858887
    5. ' ):' → logprob: -10.877184867858887
    6. ':' → logprob: -11.627184867858887
    7. '   ' → logprob: -12.127184867858887
    8. '):

' → logprob: -12.252184867858887
    9. '1' → logprob: -12.627184867858887
    10. '       ' → logprob: -12.752184867858887

Token 747: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008669180097058415
    2. '                
' → logprob: -7.750866889953613
    3. '                   ' → logprob: -8.875866889953613
    4. '                       ' → logprob: -9.625866889953613
    5. '                               ' → logprob: -9.750866889953613
    6. ' removed' → logprob: -10.875866889953613
    7. ':' → logprob: -10.875866889953613
    8. ' if' → logprob: -11.000866889953613
    9. ':
' → logprob: -11.250866889953613
    10. ',' → logprob: -11.375866889953613

Token 748: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28749334812164307
    2. ' if' → logprob: -2.1624932289123535
    3. ' removed' → logprob: -2.4124932289123535
    4. '
' → logprob: -4.5374932289123535
    5. 'removed' → logprob: -4.6624932289123535
    6. '                    
' → logprob: -4.7874932289123535
    7. '               ' → logprob: -5.2874932289123535
    8. 'if' → logprob: -6.2874932289123535
    9. ' #' → logprob: -6.6624932289123535
    10. ' indices' → logprob: -6.9124932289123535

Token 749: ' essayer' (ID: 92713)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.5377439856529236
    2. ' removed' → logprob: -1.0377440452575684
    3. 'idx' → logprob: -3.4127440452575684
    4. ' idx' → logprob: -4.287744045257568
    5. 'if' → logprob: -5.162744045257568
    6. ' if' → logprob: -5.912744045257568
    7. '                   ' → logprob: -6.037744045257568
    8. '               ' → logprob: -6.162744045257568
    9. 'i' → logprob: -7.662744045257568
    10. ' #' → logprob: -8.28774356842041

Token 750: ' d' (ID: 272)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.8220345973968506
    2. ' removed' → logprob: -1.0720345973968506
    3. '                   ' → logprob: -2.1970345973968506
    4. '               ' → logprob: -2.6970345973968506
    5. ':
' → logprob: -3.9470345973968506
    6. '_removed' → logprob: -4.94703483581543
    7. '   ' → logprob: -5.94703483581543
    8. ' :
' → logprob: -6.19703483581543
    9. 'indices' → logprob: -6.57203483581543
    10. '[' → logprob: -7.19703483581543

Token 751: ''en' (ID: 16740)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.498795986175537
    2. ' removed' → logprob: -1.623795986175537
    3. 'removed' → logprob: -1.873795986175537
    4. '   ' → logprob: -2.373795986175537
    5. ' free' → logprob: -2.498795986175537
    6. '           ' → logprob: -2.623795986175537
    7. '                ' → logprob: -3.623795986175537
    8. '            ' → logprob: -3.623795986175537
    9. '             ' → logprob: -4.123795986175537
    10. '                   ' → logprob: -4.248795986175537

Token 752: 'lever' (ID: 43558)
  Prédit: 'lever'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lever' → logprob: -0.0013839246239513159
    2. 'removed' → logprob: -6.6263837814331055
    3. ' removed' → logprob: -11.001383781433105
    4. '_removed' → logprob: -11.251383781433105
    5. '   ' → logprob: -12.001383781433105
    6. 'lev' → logprob: -12.126383781433105
    7. 'le' → logprob: -12.501383781433105
    8. ' enlever' → logprob: -13.126383781433105
    9. '```' → logprob: -13.251383781433105
    10. ' retirer' → logprob: -13.251383781433105

Token 753: ' ces' (ID: 10532)
  Prédit: '(indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(indices' → logprob: -0.7517594695091248
    2. 'indices' → logprob: -0.8767594695091248
    3. ' indices' → logprob: -2.2517595291137695
    4. '               ' → logprob: -5.3767595291137695
    5. ' (' → logprob: -6.5017595291137695
    6. '                   ' → logprob: -8.00175952911377
    7. '(' → logprob: -8.37675952911377
    8. '(
' → logprob: -9.25175952911377
    9. ' free' → logprob: -9.87675952911377
    10. '"indices' → logprob: -10.00175952911377

Token 754: ' deux' (ID: 10301)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.5536383986473083
    2. ' indices' → logprob: -0.9286383986473083
    3. 'indices' → logprob: -4.178638458251953
    4. 'free' → logprob: -5.178638458251953
    5. ' deux' → logprob: -5.428638458251953
    6. 'dis' → logprob: -6.303638458251953
    7. ' two' → logprob: -7.053638458251953
    8. ' dis' → logprob: -7.678638458251953
    9. ' i' → logprob: -8.178638458251953
    10. ' ' → logprob: -8.303638458251953

Token 755: ' dis' (ID: 829)
  Prédit: ' dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dis' → logprob: -1.2938660383224487
    2. ' free' → logprob: -1.6688660383224487
    3. 'dis' → logprob: -1.7938660383224487
    4. ' indices' → logprob: -2.4188661575317383
    5. ' 
' → logprob: -2.7938661575317383
    6. 'indices' → logprob: -3.5438661575317383
    7. ' ' → logprob: -3.5438661575317383
    8. ' disks' → logprob: -3.5438661575317383
    9. ' discs' → logprob: -4.043866157531738
    10. '                
' → logprob: -4.168866157531738

Token 756: 'ques' (ID: 3531)
  Prédit: 'ques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.20309656858444214
    2. 'cs' → logprob: -1.953096628189087
    3. 'c' → logprob: -3.453096628189087
    4. '               ' → logprob: -5.328096389770508
    5. '       ' → logprob: -6.578096389770508
    6. '   ' → logprob: -6.828096389770508
    7. 'que' → logprob: -7.328096389770508
    8. 's' → logprob: -7.953096389770508
    9. 'dis' → logprob: -7.953096389770508
    10. '           ' → logprob: -8.703096389770508

Token 757: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015643887221813202
    2. '                
' → logprob: -4.765644073486328
    3. '                   ' → logprob: -6.015644073486328
    4. '
' → logprob: -6.015644073486328
    5. ':
' → logprob: -7.140644073486328
    6. '                    
' → logprob: -8.140644073486328
    7. ':' → logprob: -8.265644073486328
    8. ',' → logprob: -9.015644073486328
    9. '                ' → logprob: -9.515644073486328
    10. ',
' → logprob: -9.640644073486328

Token 758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003068622201681137
    2. '                
' → logprob: -6.003068447113037
    3. '                   ' → logprob: -7.753068447113037
    4. '                ' → logprob: -10.128068923950195
    5. '                    
' → logprob: -10.378068923950195
    6. ',' → logprob: -10.753068923950195
    7. '               
' → logprob: -11.628068923950195
    8. ',
' → logprob: -12.003068923950195
    9. '           ' → logprob: -12.253068923950195
    10. '                 
' → logprob: -12.378068923950195

Token 759: ' removed' (ID: 11906)
  Prédit: ' removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' removed' → logprob: -0.607433021068573
    2. 'removed' (adapté à ' removed') → logprob: -1.1074330806732178
    3. '               ' → logprob: -2.1074330806732178
    4. ' new' → logprob: -6.982432842254639
    5. '                
' → logprob: -7.482432842254639
    6. '                   ' → logprob: -7.607432842254639
    7. 'new' → logprob: -7.607432842254639
    8. '
' → logprob: -8.357433319091797
    9. ' if' → logprob: -8.357433319091797
    10. 'if' → logprob: -9.607433319091797

Token 760: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.668032705783844
    2. '[i' → logprob: -0.793032705783844
    3. '_copy' → logprob: -3.668032646179199
    4. ' =' → logprob: -5.418032646179199
    5. '=' → logprob: -6.668032646179199
    6. 'Copy' → logprob: -7.168032646179199
    7. '_temp' → logprob: -7.418032646179199
    8. ' [' → logprob: -7.668032646179199
    9. '[:]' → logprob: -7.793032646179199
    10. '_tmp' → logprob: -7.918032646179199

Token 761: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0005593468667939305
    2. ' indices' → logprob: -7.500559329986572
    3. '   ' → logprob: -13.00055980682373
    4. 'indexes' → logprob: -13.00055980682373
    5. '(indices' → logprob: -14.00055980682373
    6. '"indices' → logprob: -14.62555980682373
    7. ' ' → logprob: -15.62555980682373
    8. 'indice' → logprob: -17.000558853149414
    9. '
' → logprob: -17.250558853149414
    10. 'index' → logprob: -17.500558853149414

Token 762: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8789383830153383e-05
    2. 'i' → logprob: -11.000019073486328
    3. '[' → logprob: -13.375019073486328
    4. ' i' → logprob: -14.750019073486328
    5. ' [' → logprob: -16.625019073486328
    6. '[
' → logprob: -18.000019073486328
    7. '{i' → logprob: -18.250019073486328
    8. '```' → logprob: -18.625019073486328
    9. '[j' → logprob: -18.750019073486328
    10. '	i' → logprob: -19.500019073486328

Token 763: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1426788717508316
    2. '2' → logprob: -2.01767897605896
    3. ' ' → logprob: -14.017679214477539
    4. ']' → logprob: -14.142679214477539
    5. '[' → logprob: -14.517679214477539
    6. '
' → logprob: -14.705179214477539
    7. '```' → logprob: -15.080179214477539
    8. 's' → logprob: -15.767679214477539
    9. '   ' → logprob: -15.767679214477539
    10. ']]' → logprob: -16.39267921447754

Token 764: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.016978856176137924
    2. ']' → logprob: -4.141978740692139
    3. ' ]]' → logprob: -7.641978740692139
    4. '],' → logprob: -8.641979217529297
    5. ']]
' → logprob: -9.266979217529297
    6. ']],' → logprob: -9.641979217529297
    7. ']]=' → logprob: -9.766979217529297
    8. ' ]' → logprob: -10.266979217529297
    9. '']]' → logprob: -11.516979217529297
    10. ']=' → logprob: -12.266979217529297

Token 765: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3135184943675995
    2. '=' → logprob: -1.3135185241699219
    3. ']' → logprob: -8.313518524169922
    4. ']=' → logprob: -12.313518524169922
    5. '=True' → logprob: -12.688518524169922
    6. ',' → logprob: -13.063518524169922
    7. ')' → logprob: -14.063518524169922
    8. ' ]' → logprob: -14.813518524169922
    9. ' ' → logprob: -15.063518524169922
    10. '    ' → logprob: -16.188518524169922

Token 766: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '(True' → logprob: -21.12520408630371
    4. '   ' → logprob: -22.12520408630371
    5. '=True' → logprob: -22.12520408630371
    6. 'true' → logprob: -22.87520408630371
    7. '.True' → logprob: -24.75020408630371
    8. 'Tr' → logprob: -25.12520408630371
    9. '1' → logprob: -25.37520408630371
    10. '    ' → logprob: -25.50020408630371

Token 767: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007297091069631279
    2. '                
' → logprob: -7.375729560852051
    3. '
' → logprob: -10.62572956085205
    4. '                ' → logprob: -10.75072956085205
    5. '                   ' → logprob: -10.87572956085205
    6. '               
' → logprob: -12.00072956085205
    7. ' 
' → logprob: -12.37572956085205
    8. '                               ' → logprob: -12.37572956085205
    9. 'removed' → logprob: -12.37572956085205
    10. '              ' → logprob: -12.50072956085205

Token 768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.507972572464496e-05
    2. ' removed' → logprob: -10.37509536743164
    3. 'removed' → logprob: -10.37509536743164
    4. '                
' → logprob: -11.00009536743164
    5. '                   ' → logprob: -12.37509536743164
    6. '                ' → logprob: -12.37509536743164
    7. '              ' → logprob: -12.75009536743164
    8. '           ' → logprob: -13.50009536743164
    9. '                               ' → logprob: -14.25009536743164
    10. '```' → logprob: -14.62509536743164

Token 769: ' removed' (ID: 11906)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16493456065654755
    2. ' removed' → logprob: -2.1649346351623535
    3. 'removed' (adapté à ' removed') → logprob: -3.2899346351623535
    4. '                
' → logprob: -11.539934158325195
    5. '                   ' → logprob: -11.664934158325195
    6. '                ' → logprob: -11.789934158325195
    7. '              ' → logprob: -13.039934158325195
    8. 'Removed' → logprob: -13.039934158325195
    9. '           ' → logprob: -13.539934158325195
    10. 'remove' → logprob: -13.664934158325195

Token 770: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '[ind' → logprob: -14.000000953674316
    3. ' [' → logprob: -14.750000953674316
    4. '"indices' → logprob: -16.250001907348633
    5. '   ' → logprob: -18.250001907348633
    6. 'indices' → logprob: -18.500001907348633
    7. '(indices' → logprob: -18.625001907348633
    8. '       ' → logprob: -18.750001907348633
    9. '[
' → logprob: -19.375001907348633
    10. '```' → logprob: -19.500001907348633

Token 771: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.5048530030981055e-06
    2. ' indices' → logprob: -14.000001907348633
    3. '[' → logprob: -14.500001907348633
    4. 'indexes' → logprob: -16.125001907348633
    5. '(indices' → logprob: -17.500001907348633
    6. '"indices' → logprob: -18.250001907348633
    7. '   ' → logprob: -20.750001907348633
    8. '.indices' → logprob: -21.500001907348633
    9. ' ' → logprob: -22.000001907348633
    10. 'colors' → logprob: -22.125001907348633

Token 772: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5759559869766235
    2. '[' → logprob: -0.8259559869766235
    3. '[ind' → logprob: -11.450956344604492
    4. '][' → logprob: -13.575956344604492
    5. 'indices' → logprob: -13.950956344604492
    6. '   ' → logprob: -14.200956344604492
    7. '"indices' → logprob: -14.450956344604492
    8. ' [' → logprob: -14.450956344604492
    9. '[idx' → logprob: -14.825956344604492
    10. '(indices' → logprob: -14.950956344604492

Token 773: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.875
    3. '1' → logprob: -16.375
    4. ' ' → logprob: -17.125
    5. '```' → logprob: -17.25
    6. '   ' → logprob: -17.5
    7. 's' → logprob: -18.75
    8. '
' → logprob: -18.875
    9. '+' → logprob: -19.0
    10. '[' → logprob: -19.5

Token 774: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.368984107510187e-05
    2. ']]' → logprob: -11.125033378601074
    3. ' ]' → logprob: -11.250033378601074
    4. ']=' → logprob: -12.125033378601074
    5. '']' → logprob: -16.00003433227539
    6. '   ' → logprob: -16.50003433227539
    7. '"]' → logprob: -16.50003433227539
    8. '               ' → logprob: -17.25003433227539
    9. '`]' → logprob: -17.25003433227539
    10. '           ' → logprob: -17.50003433227539

Token 775: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759421586990356
    2. ' =' → logprob: -0.8259421586990356
    3. '=True' → logprob: -12.950942039489746
    4. ']' → logprob: -15.325942039489746
    5. '   ' → logprob: -16.700942993164062
    6. ' ' → logprob: -16.950942993164062
    7. ')' → logprob: -17.575942993164062
    8. ']=' → logprob: -18.325942993164062
    9. '           ' → logprob: -18.450942993164062
    10. '    ' → logprob: -18.700942993164062

Token 776: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -21.001502990722656
    4. '=True' → logprob: -21.126502990722656
    5. '.True' → logprob: -23.751502990722656
    6. 'False' → logprob: -24.376502990722656
    7. '_true' → logprob: -24.876502990722656
    8. 'true' → logprob: -25.876502990722656
    9. 'Tr' → logprob: -26.001502990722656
    10. 'Truth' → logprob: -26.501502990722656

Token 777: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08564833551645279
    2. '                
' → logprob: -3.08564829826355
    3. '
' → logprob: -3.33564829826355
    4. ' 
' → logprob: -8.335648536682129
    5. '    
' → logprob: -9.210648536682129
    6. '  
' → logprob: -9.335648536682129
    7. '               
' → logprob: -9.460648536682129
    8. '                    
' → logprob: -9.710648536682129
    9. '                ' → logprob: -10.085648536682129
    10. '                 
' → logprob: -10.210648536682129

Token 778: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010927670635282993
    2. '                
' → logprob: -5.010927677154541
    3. '
' → logprob: -5.510927677154541
    4. '               
' → logprob: -10.510927200317383
    5. '
' → logprob: -10.885927200317383
    6. '```' → logprob: -10.885927200317383
    7. ' 
' → logprob: -11.010927200317383
    8. '\' → logprob: -11.385927200317383
    9. '                   ' → logprob: -11.510927200317383
    10. '  
' → logprob: -11.635927200317383

Token 779: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2343134731054306
    2. 'score' → logprob: -2.109313488006592
    3. 'res' → logprob: -3.609313488006592
    4. 'result' → logprob: -4.109313488006592
    5. '                
' → logprob: -4.359313488006592
    6. 'temp' → logprob: -4.359313488006592
    7. ' res' → logprob: -5.484313488006592
    8. ' score' → logprob: -5.484313488006592
    9. 'current' → logprob: -5.984313488006592
    10. ' result' → logprob: -6.609313488006592

Token 780: ' on' (ID: 402)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9758292436599731
    2. 'score' → logprob: -1.1008292436599731
    3. 'val' → logprob: -1.7258292436599731
    4. 'current' → logprob: -3.2258291244506836
    5. 'result' → logprob: -3.9758291244506836
    6. 'candidate' → logprob: -4.225829124450684
    7. 'cand' → logprob: -4.725829124450684
    8. 'temp' → logprob: -4.725829124450684
    9. 'removed' → logprob: -5.100829124450684
    10. '               ' → logprob: -5.475829124450684

Token 781: ' enl' (ID: 116494)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7098237872123718
    2. 'best' → logprob: -1.4598238468170166
    3. ' best' → logprob: -2.3348238468170166
    4. 'result' → logprob: -3.4598238468170166
    5. '                   ' → logprob: -3.9598238468170166
    6. 'res' → logprob: -3.9598238468170166
    7. ' #' → logprob: -4.0848236083984375
    8. 'r' → logprob: -4.4598236083984375
    9. '#' → logprob: -4.5848236083984375
    10. ' res' → logprob: -4.7098236083984375

Token 782: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.18467052280902863
    2. 'eve' → logprob: -1.8096705675125122
    3. 'e' → logprob: -5.559670448303223
    4. 'ever' → logprob: -7.184670448303223
    5. 'ev' → logprob: -8.809670448303223
    6. 've' → logprob: -9.809670448303223
    7. 'ove' → logprob: -10.434670448303223
    8. 'èves' → logprob: -11.059670448303223
    9. '#' → logprob: -11.559670448303223
    10. 'erve' → logprob: -11.684670448303223

Token 783: ' ' (ID: 220)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7924569249153137
    2. ' res' → logprob: -2.042456865310669
    3. 'removed' → logprob: -2.292456865310669
    4. 'best' → logprob: -2.542456865310669
    5. 'result' → logprob: -2.667456865310669
    6. 'score' → logprob: -2.792456865310669
    7. ' result' → logprob: -3.667456865310669
    8. ' best' → logprob: -4.167457103729248
    9. '               ' → logprob: -4.167457103729248
    10. 'temp' → logprob: -4.792457103729248

Token 784: '2' (ID: 17)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8204458355903625
    2. ' ' → logprob: -1.4454457759857178
    3. '2' → logprob: -1.6954457759857178
    4. 'indices' → logprob: -3.1954457759857178
    5. '                   ' → logprob: -3.3204457759857178
    6. 'best' → logprob: -4.695446014404297
    7. 'removed' → logprob: -5.070446014404297
    8. ' indices' → logprob: -5.195446014404297
    9. ' =' → logprob: -5.320446014404297
    10. '   ' → logprob: -5.445446014404297

Token 785: ' dis' (ID: 829)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06201013922691345
    2. '+' → logprob: -2.8120100498199463
    3. ' plus' → logprob: -10.312009811401367
    4. 'plus' → logprob: -11.937009811401367
    5. ' ' → logprob: -13.812009811401367
    6. ' +
' → logprob: -14.312009811401367
    7. '
' → logprob: -15.312009811401367
    8. 'tokens' → logprob: -15.312009811401367
    9. '+
' → logprob: -15.937009811401367
    10. ' ' → logprob: -16.187009811401367

Token 786: 'ques' (ID: 3531)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3290064334869385
    2. 's' → logprob: -1.4540064334869385
    3. 'cs' → logprob: -2.0790064334869385
    4. '       ' → logprob: -2.2040064334869385
    5. 'c' → logprob: -3.2040064334869385
    6. 'tokens' → logprob: -3.2040064334869385
    7. '   ' → logprob: -3.4540064334869385
    8. 'dis' → logprob: -3.5790064334869385
    9. 'spaces' → logprob: -4.079006195068359
    10. '           ' → logprob: -4.079006195068359

Token 787: ' maintenant' (ID: 35735)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0054879761300981045
    2. '
' → logprob: -5.38048791885376
    3. '                
' → logprob: -7.25548791885376
    4. ',' → logprob: -9.255488395690918
    5. ',
' → logprob: -10.005488395690918
    6. '
' → logprob: -11.755488395690918
    7. '    
' → logprob: -12.630488395690918
    8. '\n' → logprob: -13.505488395690918
    9. '                   ' → logprob: -13.755488395690918
    10. '                
' → logprob: -14.255488395690918

Token 788: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054087087512016296
    2. '
' → logprob: -3.0540871620178223
    3. '                
' → logprob: -5.429087162017822
    4. 'result' → logprob: -7.304087162017822
    5. '
' → logprob: -8.804086685180664
    6. ',' → logprob: -8.804086685180664
    7. ',
' → logprob: -9.929086685180664
    8. ' result' → logprob: -11.304086685180664
    9. '    
' → logprob: -11.429086685180664
    10. '                
' → logprob: -12.179086685180664

Token 789: ' plus' (ID: 2932)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05989689752459526
    2. 'result' → logprob: -3.434896945953369
    3. 'res' → logprob: -4.184896945953369
    4. 'score' → logprob: -4.934896945953369
    5. ' result' → logprob: -6.684896945953369
    6. ' res' → logprob: -7.809896945953369
    7. 'rest' → logprob: -8.184896469116211
    8. 'temp' → logprob: -8.184896469116211
    9. 'ret' → logprob: -8.309896469116211
    10. 'current' → logprob: -8.434896469116211

Token 790: ' ceux' (ID: 26863)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.17806677520275116
    2. 'max' → logprob: -3.0530667304992676
    3. '               ' → logprob: -3.1780667304992676
    4. ' ' → logprob: -3.3030667304992676
    5. '2' → logprob: -3.4280667304992676
    6. '                   ' → logprob: -5.678066730499268
    7. '                ' → logprob: -7.303066730499268
    8. ' +' → logprob: -8.428067207336426
    9. '              ' → logprob: -9.053067207336426
    10. '           ' → logprob: -9.178067207336426

Token 791: ' des' (ID: 731)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14424951374530792
    2. 'removed' → logprob: -2.269249439239502
    3. ' removed' → logprob: -4.519249439239502
    4. '                ' → logprob: -5.269249439239502
    5. '_removed' → logprob: -6.144249439239502
    6. '                   ' → logprob: -6.269249439239502
    7. '   ' → logprob: -6.519249439239502
    8. '              ' → logprob: -6.519249439239502
    9. ' que' → logprob: -6.519249439239502
    10. ' +' → logprob: -6.894249439239502

Token 792: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.31184589862823486
    2. 'max' → logprob: -1.4368458986282349
    3. 'calls' → logprob: -4.561845779418945
    4. 'appel' → logprob: -5.186845779418945
    5. 'app' → logprob: -5.311845779418945
    6. ' calls' → logprob: -5.936845779418945
    7. 'recursive' → logprob: -6.186845779418945
    8. ' max' → logprob: -6.186845779418945
    9. 'call' → logprob: -7.811845779418945
    10. 'rec' → logprob: -7.811845779418945

Token 793: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.657584547996521
    2. '   ' → logprob: -0.907584547996521
    3. 'r' → logprob: -3.6575846672058105
    4. 'rec' → logprob: -3.7825846672058105
    5. '           ' → logprob: -5.0325846672058105
    6. 'recursive' → logprob: -5.1575846672058105
    7. '       ' → logprob: -6.0325846672058105
    8. '    
' → logprob: -6.0325846672058105
    9. '    ' → logprob: -6.4075846672058105
    10. 'max' → logprob: -6.5325846672058105

Token 794: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.004167322069406509
    2. 'ur' → logprob: -6.129167556762695
    3. 'ursion' → logprob: -6.879167556762695
    4. 'ursive' → logprob: -7.504167556762695
    5. 'c' → logprob: -9.004167556762695
    6. 'usr' → logprob: -9.004167556762695
    7. 'def' → logprob: -10.879167556762695
    8. '```' → logprob: -11.129167556762695
    9. 'urses' → logprob: -11.379167556762695
    10. 'curse' → logprob: -11.504167556762695

Token 795: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.128439262509346
    2. 'if' → logprob: -2.37843918800354
    3. 'is' → logprob: -4.503439426422119
    4. 's' → logprob: -4.878439426422119
    5. '   ' → logprob: -5.628439426422119
    6. 'ion' → logprob: -5.878439426422119
    7. 'ions' → logprob: -6.628439426422119
    8. '       ' → logprob: -7.628439426422119
    9. 'és' → logprob: -8.378438949584961
    10. 'ive' → logprob: -8.503438949584961

Token 796: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011277174344286323
    2. '
' → logprob: -7.12612771987915
    3. '                
' → logprob: -8.376127243041992
    4. ',' → logprob: -9.876127243041992
    5. '                   ' → logprob: -11.251127243041992
    6. '                ' → logprob: -11.876127243041992
    7. ',
' → logprob: -12.376127243041992
    8. '           ' → logprob: -12.626127243041992
    9. '              ' → logprob: -12.751127243041992
    10. 'result' → logprob: -13.001127243041992

Token 797: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016578054055571556
    2. 'result' → logprob: -6.876657962799072
    3. '
' → logprob: -7.876657962799072
    4. ' result' → logprob: -9.001657485961914
    5. '                
' → logprob: -9.751657485961914
    6. 'return' → logprob: -11.376657485961914
    7. '```' → logprob: -11.501657485961914
    8. ' return' → logprob: -11.876657485961914
    9. '                   ' → logprob: -12.001657485961914
    10. '
' → logprob: -12.001657485961914

Token 798: ' score' (ID: 8429)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6911708116531372
    2. 'score' (adapté à ' score') → logprob: -1.4411708116531372
    3. 'current' → logprob: -2.0661706924438477
    4. 'result' → logprob: -2.6911706924438477
    5. 'val' → logprob: -4.566170692443848
    6. 'cand' → logprob: -4.691170692443848
    7. 'removed' → logprob: -4.691170692443848
    8. 'candidate' → logprob: -4.816170692443848
    9. 'temp' → logprob: -4.941170692443848
    10. 'cur' → logprob: -5.191170692443848

Token 799: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894339203834534
    2. '=' → logprob: -2.4639434814453125
    3. '   ' → logprob: -13.463943481445312
    4. '+' → logprob: -13.838943481445312
    5. ' ' → logprob: -15.213943481445312
    6. ' +' → logprob: -15.713943481445312
    7. '               ' → logprob: -15.838943481445312
    8. '    ' → logprob: -16.088943481445312
    9. ' +=' → logprob: -16.338943481445312
    10. 's' → logprob: -16.588943481445312

Token 800: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34862247109413147
    2. ' ' → logprob: -1.223622441291809
    3. '               ' → logprob: -9.47362232208252
    4. ' max' → logprob: -9.72362232208252
    5. 'max' → logprob: -11.22362232208252
    6. '                ' → logprob: -11.72362232208252
    7. ' ' → logprob: -12.34862232208252
    8. '   ' → logprob: -12.47362232208252
    9. '                   ' → logprob: -12.59862232208252
    10. '                 ' → logprob: -13.34862232208252

Token 801: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00028016636497341096
    2. ' ' → logprob: -8.375280380249023
    3. 'max' → logprob: -10.000280380249023
    4. '               ' → logprob: -13.500280380249023
    5. '   ' → logprob: -13.875280380249023
    6. '           ' → logprob: -14.500280380249023
    7. ' max' → logprob: -15.625280380249023
    8. '             ' → logprob: -15.750280380249023
    9. '                   ' → logprob: -15.750280380249023
    10. '              ' → logprob: -16.125280380249023

Token 802: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1002117469906807
    2. '+' → logprob: -2.3502118587493896
    3. ' +
' → logprob: -12.850212097167969
    4. '+
' → logprob: -13.225212097167969
    5. '               ' → logprob: -14.725212097167969
    6. '
' → logprob: -15.975212097167969
    7. '                ' → logprob: -16.97521209716797
    8. ' +
' → logprob: -16.97521209716797
    9. '                   ' → logprob: -17.97521209716797
    10. '＋' → logprob: -18.10021209716797

Token 803: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005233763717114925
    2. ' max' → logprob: -5.2552337646484375
    3. '(max' → logprob: -21.005233764648438
    4. '
' → logprob: -21.505233764648438
    5. '	max' → logprob: -21.630233764648438
    6. '   ' → logprob: -21.630233764648438
    7. '           ' → logprob: -22.380233764648438
    8. '_max' → logprob: -22.505233764648438
    9. '[max' → logprob: -22.630233764648438
    10. ' ' → logprob: -22.630233764648438

Token 804: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.125001907348633
    3. 'removed' → logprob: -14.750001907348633
    4. '_remaining' → logprob: -15.625001907348633
    5. '_max' → logprob: -16.250001907348633
    6. '_rem' → logprob: -16.750001907348633
    7. '_deleted' → logprob: -16.750001907348633
    8. '_remove' → logprob: -17.375001907348633
    9. '_added' → logprob: -18.000001907348633
    10. '_selected' → logprob: -18.000001907348633

Token 805: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -3.3213025744771585e-05
    2. '(' → logprob: -10.375033378601074
    3. '(
' → logprob: -13.625033378601074
    4. '(d' → logprob: -14.875033378601074
    5. 'dis' → logprob: -15.375033378601074
    6. ' (' → logprob: -16.625032424926758
    7. '```' → logprob: -17.500032424926758
    8. '(des' → logprob: -17.875032424926758
    9. '/dis' → logprob: -18.125032424926758
    10. '	dis' → logprob: -18.375032424926758

Token 806: 'cs' (ID: 8102)
  Prédit: '(dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -0.13498130440711975
    2. 'dis' → logprob: -2.134981393814087
    3. 'is' → logprob: -4.884981155395508
    4. 'isc' → logprob: -8.384981155395508
    5. 'cs' → logprob: -10.384981155395508
    6. '```' → logprob: -10.384981155395508
    7. '(' → logprob: -10.509981155395508
    8. 'sc' → logprob: -10.759981155395508
    9. ' discs' → logprob: -11.009981155395508
    10. 'c' → logprob: -11.759981155395508

Token 807: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.875001907348633
    4. 'removed' → logprob: -16.125001907348633
    5. '(' → logprob: -16.500001907348633
    6. ',
' → logprob: -16.500001907348633
    7. '```' → logprob: -16.500001907348633
    8. '(com' → logprob: -16.625001907348633
    9. '[' → logprob: -17.875001907348633
    10. '`,' → logprob: -18.250001907348633

Token 808: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.0004309076175559312
    2. ' removed' → logprob: -7.750431060791016
    3. 'rem' → logprob: -16.500431060791016
    4. '_removed' → logprob: -17.500431060791016
    5. 'deleted' → logprob: -18.375431060791016
    6. '   ' → logprob: -18.500431060791016
    7. 'remove' → logprob: -18.875431060791016
    8. '               ' → logprob: -18.875431060791016
    9. '           ' → logprob: -20.250431060791016
    10. 'Removed' → logprob: -20.375431060791016

Token 809: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1102411150932312
    2. ')' → logprob: -2.360241174697876
    3. '               ' → logprob: -4.610240936279297
    4. ')
' → logprob: -10.360240936279297
    5. ')`
' → logprob: -14.235240936279297
    6. '                   ' → logprob: -14.360240936279297
    7. '           ' → logprob: -14.485240936279297
    8. '   ' → logprob: -14.735240936279297
    9. ' )
' → logprob: -14.985240936279297
    10. ')

' → logprob: -15.110240936279297

Token 810: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007948118261992931
    2. '                
' → logprob: -4.88294792175293
    3. 'removed' → logprob: -9.25794792175293
    4. '```' → logprob: -9.63294792175293
    5. '               
' → logprob: -10.13294792175293
    6. '<|end|>' → logprob: -10.25794792175293
    7. '                ' → logprob: -10.75794792175293
    8. '                   ' → logprob: -11.13294792175293
    9. '\' → logprob: -11.25794792175293
    10. '                    
' → logprob: -11.88294792175293

Token 811: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05111522972583771
    2. ' if' → logprob: -3.9261152744293213
    3. '                
' → logprob: -4.301115036010742
    4. 'if' → logprob: -4.551115036010742
    5. '                ' → logprob: -5.801115036010742
    6. '                   ' → logprob: -6.676115036010742
    7. '
' → logprob: -7.551115036010742
    8. '```' → logprob: -8.176115036010742
    9. '                               ' → logprob: -8.551115036010742
    10. '\n' → logprob: -8.676115036010742

Token 812: ' remettre' (ID: 110405)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006500070448964834
    2. '               ' → logprob: -5.756500244140625
    3. 'best' → logprob: -5.756500244140625
    4. ' if' → logprob: -9.256500244140625
    5. 'removed' → logprob: -10.631500244140625
    6. 'any' → logprob: -10.756500244140625
    7. '                   ' → logprob: -11.256500244140625
    8. ' best' → logprob: -15.381500244140625
    9. '#' → logprob: -15.381500244140625
    10. '                       ' → logprob: -15.881500244140625

Token 813: ' comme' (ID: 7971)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.5464404821395874
    2. 'indices' → logprob: -1.2964404821395874
    3. '[' → logprob: -2.421440601348877
    4. '(indices' → logprob: -3.546440601348877
    5. ' removed' → logprob: -3.671440601348877
    6. ' indices' → logprob: -6.296440601348877
    7. '_removed' → logprob: -7.296440601348877
    8. '"indices' → logprob: -7.796440601348877
    9. '   ' → logprob: -8.296440124511719
    10. '```' → logprob: -8.421440124511719

Token 814: ' avant' (ID: 13339)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00413088034838438
    2. ' False' → logprob: -5.504130840301514
    3. 'indices' → logprob: -10.629131317138672
    4. 'avant' → logprob: -11.254131317138672
    5. 'false' → logprob: -12.504131317138672
    6. '_false' → logprob: -12.629131317138672
    7. 'before' → logprob: -13.504131317138672
    8. 'free' → logprob: -13.754131317138672
    9. 'True' → logprob: -13.754131317138672
    10. 'removed' → logprob: -14.004131317138672

Token 815: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3306015716807451e-05
    2. '                
' → logprob: -12.25001335144043
    3. 'removed' → logprob: -12.87501335144043
    4. '                   ' → logprob: -12.87501335144043
    5. ' removed' → logprob: -13.62501335144043
    6. '                       ' → logprob: -14.62501335144043
    7. 'indices' → logprob: -15.12501335144043
    8. '<|end|>' → logprob: -15.12501335144043
    9. '                ' → logprob: -15.25001335144043
    10. '              ' → logprob: -15.75001335144043

Token 816: 'back' (ID: 2205)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05464595928788185
    2. 'removed' → logprob: -3.0546460151672363
    3. ' removed' → logprob: -5.304646015167236
    4. ')' → logprob: -7.429646015167236
    5. ')
' → logprob: -8.429645538330078
    6. '                   ' → logprob: -8.554645538330078
    7. '                ' → logprob: -11.054645538330078
    8. '                               ' → logprob: -11.804645538330078
    9. '```' → logprob: -11.804645538330078
    10. '                       ' → logprob: -11.804645538330078

Token 817: 'track' (ID: 22792)
  Prédit: 'tracking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -1.0375877618789673
    2. 'removed' → logprob: -1.5375877618789673
    3. 'track' → logprob: -1.5375877618789673
    4. 'tracked' → logprob: -2.2875876426696777
    5. '_removed' → logprob: -2.4125876426696777
    6. '_' → logprob: -5.162587642669678
    7. 'remove' → logprob: -5.412587642669678
    8. '   ' → logprob: -5.412587642669678
    9. '```' → logprob: -6.162587642669678
    10. 'trace' → logprob: -6.412587642669678

Token 818: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1720731556415558
    2. ')' → logprob: -1.9220731258392334
    3. ')
' → logprob: -4.5470733642578125
    4. '                   ' → logprob: -7.6720733642578125
    5. '                
' → logprob: -7.7970733642578125
    6. '                ' → logprob: -8.922073364257812
    7. '           ' → logprob: -10.297073364257812
    8. '              ' → logprob: -10.797073364257812
    9. 'indices' → logprob: -11.297073364257812
    10. '                       ' → logprob: -11.547073364257812

Token 819: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6405310816480778e-05
    2. '                
' → logprob: -11.875016212463379
    3. '                   ' → logprob: -12.625016212463379
    4. '                ' → logprob: -13.375016212463379
    5. '              ' → logprob: -13.750016212463379
    6. '```' → logprob: -14.125016212463379
    7. 'removed' → logprob: -14.125016212463379
    8. '                       ' → logprob: -14.375016212463379
    9. '<|end|>' → logprob: -14.500016212463379
    10. ' removed' → logprob: -14.875016212463379

Token 820: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' (adapté à ' removed') → logprob: -0.12032552063465118
    2. '               ' → logprob: -2.8703255653381348
    3. ' removed' → logprob: -2.8703255653381348
    4. '                   ' → logprob: -12.495325088500977
    5. '   ' → logprob: -14.120325088500977
    6. 'remove' → logprob: -14.370325088500977
    7. '           ' → logprob: -14.745325088500977
    8. '                ' → logprob: -14.745325088500977
    9. '              ' → logprob: -14.995325088500977
    10. 'indices' → logprob: -15.245325088500977

Token 821: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[ind' → logprob: -16.875
    3. ' [' → logprob: -17.375
    4. '[i' → logprob: -18.25
    5. '"indices' → logprob: -18.375
    6. 'indices' → logprob: -19.75
    7. '   ' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. '[idx' → logprob: -20.625
    10. '[
' → logprob: -20.75

Token 822: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0011727249948307872
    2. '[' → logprob: -6.7511725425720215
    3. ' indices' → logprob: -13.50117301940918
    4. '"indices' → logprob: -14.37617301940918
    5. 'indexes' → logprob: -14.62617301940918
    6. '(indices' → logprob: -16.37617301940918
    7. '   ' → logprob: -17.00117301940918
    8. '.indices' → logprob: -17.25117301940918
    9. ' [' → logprob: -19.00117301940918
    10. 'ids' → logprob: -19.12617301940918

Token 823: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.578184497309849e-05
    2. 'i' → logprob: -9.375085830688477
    3. '[' → logprob: -15.125085830688477
    4. ' i' → logprob: -16.000085830688477
    5. '][' → logprob: -16.375085830688477
    6. '{i' → logprob: -16.625085830688477
    7. ' [' → logprob: -16.750085830688477
    8. '[j' → logprob: -17.000085830688477
    9. '[
' → logprob: -17.125085830688477
    10. '```' → logprob: -17.500085830688477

Token 824: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326133012771606
    2. '1' → logprob: -0.7576133012771606
    3. '```' → logprob: -12.632613182067871
    4. '[' → logprob: -12.757613182067871
    5. 'i' → logprob: -13.007613182067871
    6. '   ' → logprob: -13.257613182067871
    7. '0' → logprob: -13.507613182067871
    8. ' ' → logprob: -14.007613182067871
    9. '[i' → logprob: -14.132613182067871
    10. '
' → logprob: -15.445113182067871

Token 825: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.372294698550832e-06
    2. ' ]' → logprob: -12.125009536743164
    3. ']=' → logprob: -12.500009536743164
    4. ']]' → logprob: -16.625009536743164
    5. '']' → logprob: -18.875009536743164
    6. '"]' → logprob: -20.125009536743164
    7. ']
' → logprob: -20.125009536743164
    8. '`]' → logprob: -20.250009536743164
    9. '   ' → logprob: -20.750009536743164
    10. '])' → logprob: -20.875009536743164

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01822439394891262
    2. ' =' → logprob: -4.018224239349365
    3. '=False' → logprob: -9.518224716186523
    4. ']' → logprob: -14.268224716186523
    5. ']=' → logprob: -15.768224716186523
    6. 'False' → logprob: -16.018224716186523
    7. '=True' → logprob: -16.143224716186523
    8. '[' → logprob: -17.268224716186523
    9. ')' → logprob: -17.643224716186523
    10. '<|end|>' → logprob: -18.893224716186523

Token 827: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.676292231422849e-05
    2. ' False' → logprob: -11.000017166137695
    3. '(False' → logprob: -20.000017166137695
    4. '=False' → logprob: -21.750017166137695
    5. '   ' → logprob: -22.750017166137695
    6. '.False' → logprob: -22.750017166137695
    7. 'false' → logprob: -23.000017166137695
    8. 'True' → logprob: -23.375017166137695
    9. '_false' → logprob: -24.250017166137695
    10. 'F' → logprob: -24.500017166137695

Token 828: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007634070352651179
    2. '                
' → logprob: -7.375763416290283
    3. '                   ' → logprob: -9.875762939453125
    4. '                ' → logprob: -10.375762939453125
    5. '           ' → logprob: -11.750762939453125
    6. '              ' → logprob: -11.875762939453125
    7. '<|end|>' → logprob: -12.000762939453125
    8. '```' → logprob: -12.250762939453125
    9. '                    
' → logprob: -12.500762939453125
    10. '               
' → logprob: -12.750762939453125

Token 829: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012833021173719317
    2. '                   ' → logprob: -10.000128746032715
    3. '                ' → logprob: -10.125128746032715
    4. '                
' → logprob: -11.000128746032715
    5. '```' → logprob: -11.750128746032715
    6. '              ' → logprob: -12.375128746032715
    7. '           ' → logprob: -12.500128746032715
    8. 'removed' → logprob: -12.750128746032715
    9. '                               ' → logprob: -13.625128746032715
    10. ' removed' → logprob: -13.750128746032715

Token 830: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' (adapté à ' removed') → logprob: -0.009789262898266315
    2. ' removed' → logprob: -4.75978946685791
    3. '               ' → logprob: -6.75978946685791
    4. 'indices' → logprob: -11.25978946685791
    5. ' indices' → logprob: -14.75978946685791
    6. '                   ' → logprob: -14.88478946685791
    7. '                ' → logprob: -15.38478946685791
    8. '           ' → logprob: -15.88478946685791
    9. '              ' → logprob: -15.88478946685791
    10. 'free' → logprob: -16.134788513183594

Token 831: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. 'indices' → logprob: -16.0
    3. '"indices' → logprob: -16.75
    4. '[ind' → logprob: -17.5
    5. ' [' → logprob: -18.125
    6. '(indices' → logprob: -19.125
    7. '[
' → logprob: -19.875
    8. '   ' → logprob: -20.125
    9. '[[' → logprob: -20.75
    10. ' indices' → logprob: -20.75

Token 832: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.5048530030981055e-06
    2. ' indices' → logprob: -14.000001907348633
    3. 'indexes' → logprob: -14.625001907348633
    4. '"indices' → logprob: -16.125001907348633
    5. '(indices' → logprob: -16.750001907348633
    6. 'indice' → logprob: -19.000001907348633
    7. '[' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '.indices' → logprob: -19.375001907348633
    10. 'i' → logprob: -20.500001907348633

Token 833: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018317213281989098
    2. '[' → logprob: -4.018317222595215
    3. 'indices' → logprob: -8.768317222595215
    4. '[ind' → logprob: -12.643317222595215
    5. '[idx' → logprob: -13.018317222595215
    6. '[ii' → logprob: -13.643317222595215
    7. '2' → logprob: -13.893317222595215
    8. ']' → logprob: -13.893317222595215
    9. '(indices' → logprob: -14.393317222595215
    10. 'i' → logprob: -14.643317222595215

Token 834: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '
' → logprob: -17.5
    3. '1' → logprob: -17.625
    4. '[' → logprob: -17.875
    5. '   ' → logprob: -17.875
    6. '```' → logprob: -18.125
    7. ']' → logprob: -19.3125
    8. ' ' → logprob: -19.6875
    9. 's' → logprob: -20.4375
    10. '{' → logprob: -20.625

Token 835: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012035090912831947
    2. ']]' → logprob: -9.250120162963867
    3. ']=' → logprob: -11.000120162963867
    4. ' ]' → logprob: -11.875120162963867
    5. '=' → logprob: -16.000120162963867
    6. '`]' → logprob: -16.125120162963867
    7. ')]' → logprob: -16.250120162963867
    8. '']' → logprob: -16.750120162963867
    9. '"]' → logprob: -17.000120162963867
    10. '   ' → logprob: -17.000120162963867

Token 836: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133857846260071
    2. ' =' → logprob: -1.3133857250213623
    3. '=False' → logprob: -9.063385963439941
    4. ']' → logprob: -12.313385963439941
    5. '=True' → logprob: -12.688385963439941
    6. ']=' → logprob: -15.188385963439941
    7. '[' → logprob: -15.438385963439941
    8. 'False' → logprob: -16.313385009765625
    9. ')' → logprob: -16.438385009765625
    10. '<|end|>' → logprob: -16.938385009765625

Token 837: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. '(False' → logprob: -19.00002098083496
    4. '=False' → logprob: -19.87502098083496
    5. '.False' → logprob: -21.25002098083496
    6. '_false' → logprob: -22.25002098083496
    7. 'F' → logprob: -24.25002098083496
    8. 'True' → logprob: -24.62502098083496
    9. '_FALSE' → logprob: -25.00002098083496
    10. 'false' → logprob: -25.62502098083496

Token 838: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008204136975109577
    2. '                
' → logprob: -5.758203983306885
    3. ' if' → logprob: -6.508203983306885
    4. '
' → logprob: -6.633203983306885
    5. '                   ' → logprob: -7.758203983306885
    6. '           ' → logprob: -8.133204460144043
    7. '    
' → logprob: -8.383204460144043
    8. '                ' → logprob: -8.508204460144043
    9. '\n' → logprob: -8.508204460144043
    10. '  
' → logprob: -8.883204460144043

Token 839: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004073532298207283
    2. ' if' → logprob: -5.879073619842529
    3. '                
' → logprob: -7.879073619842529
    4. '                   ' → logprob: -8.129073143005371
    5. '           ' → logprob: -8.754073143005371
    6. 'if' → logprob: -9.004073143005371
    7. '
' → logprob: -9.504073143005371
    8. '       ' → logprob: -9.629073143005371
    9. '                ' → logprob: -9.754073143005371
    10. '   ' → logprob: -10.629073143005371

Token 840: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09113649278879166
    2. '               ' → logprob: -2.8411364555358887
    3. ' if' → logprob: -3.5911364555358887
    4. '
' → logprob: -7.341136455535889
    5. '                   ' → logprob: -8.091136932373047
    6. '           ' → logprob: -8.716136932373047
    7. '```' → logprob: -10.466136932373047
    8. '       ' → logprob: -11.591136932373047
    9. '                
' → logprob: -11.966136932373047
    10. '                       ' → logprob: -12.216136932373047

Token 841: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.011047935113310814
    2. ' score' → logprob: -4.511047840118408
    3. '	score' → logprob: -16.38604736328125
    4. '(score' → logprob: -17.13604736328125
    5. '_score' → logprob: -20.38604736328125
    6. 'best' → logprob: -21.01104736328125
    7. '   ' → logprob: -21.26104736328125
    8. '```' → logprob: -21.38604736328125
    9. '               ' → logprob: -21.63604736328125
    10. 'Score' → logprob: -22.38604736328125

Token 842: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2519342601299286
    2. '>' → logprob: -1.501934289932251
    3. ' ' → logprob: -13.001934051513672
    4. '   ' → logprob: -13.751934051513672
    5. ')' → logprob: -14.126934051513672
    6. ' ' → logprob: -15.626934051513672
    7. '">' → logprob: -15.876934051513672
    8. '[' → logprob: -16.376934051513672
    9. '  ' → logprob: -16.626934051513672
    10. '<|end|>' → logprob: -16.626934051513672

Token 843: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.6931484937667847
    2. 'best' → logprob: -0.6931484937667847
    3. '	best' → logprob: -13.818148612976074
    4. '(best' → logprob: -15.568148612976074
    5. '_best' → logprob: -16.568147659301758
    6. '.best' → logprob: -17.443147659301758
    7. '   ' → logprob: -17.693147659301758
    8. 'Best' → logprob: -18.443147659301758
    9. '           ' → logprob: -18.443147659301758
    10. '               ' → logprob: -18.568147659301758

Token 844: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009028379805386066
    2. ':
' → logprob: -4.884028434753418
    3. '               ' → logprob: -7.384028434753418
    4. '                   ' → logprob: -7.634028434753418
    5. '           ' → logprob: -9.634028434753418
    6. '):' → logprob: -9.634028434753418
    7. '=' → logprob: -10.259028434753418
    8. '                       ' → logprob: -10.384028434753418
    9. '<|end|>' → logprob: -10.509028434753418
    10. ')' → logprob: -10.759028434753418

Token 845: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003779885359108448
    2. ' best' → logprob: -6.253779888153076
    3. '                       ' → logprob: -7.128779888153076
    4. '               ' → logprob: -7.253779888153076
    5. 'best' → logprob: -8.253779411315918
    6. '                           ' → logprob: -10.753779411315918
    7. '           ' → logprob: -10.753779411315918
    8. '                  ' → logprob: -11.503779411315918
    9. '                               ' → logprob: -12.128779411315918
    10. '(best' → logprob: -12.503779411315918

Token 846: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.20275148749351501
    2. ' best' → logprob: -1.7027515172958374
    3. '                   ' → logprob: -6.702751636505127
    4. '               ' → logprob: -9.577751159667969
    5. '                       ' → logprob: -10.327751159667969
    6. '	best' → logprob: -12.702751159667969
    7. '(best' → logprob: -13.827751159667969
    8. '_best' → logprob: -13.827751159667969
    9. '```' → logprob: -13.952751159667969
    10. '           ' → logprob: -14.452751159667969

Token 847: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868715465068817
    2. ' =' → logprob: -1.136871576309204
    3. '＝' → logprob: -15.636871337890625
    4. '.=' → logprob: -16.261871337890625
    5. '<|end|>' → logprob: -16.386871337890625
    6. '=
' → logprob: -17.511871337890625
    7. '    ' → logprob: -17.636871337890625
    8. '   ' → logprob: -17.636871337890625
    9. ' ' → logprob: -17.761871337890625
    10. ' =
' → logprob: -17.886871337890625

Token 848: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0031777136027812958
    2. ' score' → logprob: -5.753177642822266
    3. '(score' → logprob: -18.753177642822266
    4. '	score' → logprob: -18.753177642822266
    5. 'scores' → logprob: -20.003177642822266
    6. '_score' → logprob: -20.753177642822266
    7. 'Score' → logprob: -21.878177642822266
    8. 'code' → logprob: -22.878177642822266
    9. '.score' → logprob: -23.503177642822266
    10. 'token' → logprob: -23.503177642822266

Token 849: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5648689866065979
    2. '   ' → logprob: -1.1898689270019531
    3. '
' → logprob: -2.939868927001953
    4. '               ' → logprob: -4.189868927001953
    5. 'return' → logprob: -4.189868927001953
    6. '\n' → logprob: -4.939868927001953
    7. '   
' → logprob: -5.189868927001953
    8. '                    
' → logprob: -5.314868927001953
    9. '                
' → logprob: -5.439868927001953
    10. '  
' → logprob: -5.689868927001953

Token 850: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6689345836639404
    2. '    
' → logprob: -1.1689345836639404
    3. '
' → logprob: -2.5439345836639404
    4. 'return' → logprob: -2.7939345836639404
    5. '\n' → logprob: -4.0439348220825195
    6. ' return' → logprob: -5.5439348220825195
    7. ' 
' → logprob: -5.6689348220825195
    8. '```' → logprob: -5.9189348220825195
    9. '   
' → logprob: -6.1689348220825195
    10. '  
' → logprob: -6.5439348220825195

Token 851: ' any' (ID: 1062)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.512905478477478
    2. '\n' → logprob: -1.512905478477478
    3. '    
' → logprob: -2.2629055976867676
    4. '
' → logprob: -3.6379055976867676
    5. 'return' → logprob: -3.7629055976867676
    6. 'newline' → logprob: -5.887905597686768
    7. 'n' → logprob: -6.012905597686768
    8. '\' → logprob: -6.012905597686768
    9. ' 
' → logprob: -6.137905597686768
    10. '               ' → logprob: -6.262905597686768

Token 852: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.001559258671477437
    2. '_' → logprob: -6.501559257507324
    3. '_pairs' → logprob: -10.251559257507324
    4. '_PAIR' → logprob: -12.376559257507324
    5. '_token' → logprob: -12.626559257507324
    6. 'Pair' → logprob: -12.751559257507324
    7. '_p' → logprob: -13.251559257507324
    8. '_case' → logprob: -13.751559257507324
    9. '_part' → logprob: -14.126559257507324
    10. 'pair' → logprob: -14.251559257507324

Token 853: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0620386004447937
    2. ' =' → logprob: -2.8120386600494385
    3. '=True' → logprob: -9.68703842163086
    4. ' |=' → logprob: -12.43703842163086
    5. '=False' → logprob: -13.06203842163086
    6. '==' → logprob: -13.93703842163086
    7. ' ' → logprob: -13.93703842163086
    8. ' ==' → logprob: -15.56203842163086
    9. '|' → logprob: -15.93703842163086
    10. '  ' → logprob: -16.31203842163086

Token 854: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3132622241973877
    2. ' True' → logprob: -1.3132622241973877
    3. '=True' → logprob: -14.813261985778809
    4. '(True' → logprob: -16.688262939453125
    5. 'true' → logprob: -19.438262939453125
    6. 'False' → logprob: -20.438262939453125
    7. '   ' → logprob: -20.938262939453125
    8. '_true' → logprob: -21.188262939453125
    9. '1' → logprob: -21.188262939453125
    10. ' true' → logprob: -21.563262939453125

Token 855: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01165293250232935
    2. '    
' → logprob: -5.136652946472168
    3. 'return' → logprob: -5.511652946472168
    4. '```' → logprob: -7.011652946472168
    5. ' return' → logprob: -8.011652946472168
    6. '       ' → logprob: -9.011652946472168
    7. '
' → logprob: -9.136652946472168
    8. '	return' → logprob: -9.386652946472168
    9. ':return' → logprob: -11.136652946472168
    10. '\' → logprob: -11.136652946472168

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04916871711611748
    2. 'return' → logprob: -3.049168825149536
    3. ' return' → logprob: -7.924168586730957
    4. '
' → logprob: -9.424168586730957
    5. '```' → logprob: -9.674168586730957
    6. '    
' → logprob: -9.799168586730957
    7. '	return' → logprob: -11.049168586730957
    8. ':return' → logprob: -13.174168586730957
    9. '       ' → logprob: -14.424168586730957
    10. '{return' → logprob: -14.924168586730957

Token 857: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6644003391265869
    2. '   ' → logprob: -0.9144003391265869
    3. '
' → logprob: -2.664400339126587
    4. 'if' → logprob: -4.539400100708008
    5. '    
' → logprob: -6.164400100708008
    6. ' return' → logprob: -6.664400100708008
    7. '	return' → logprob: -8.414400100708008
    8. ' if' → logprob: -8.789400100708008
    9. ':return' → logprob: -8.789400100708008
    10. '```' → logprob: -8.914400100708008

Token 858: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12828847765922546
    2. 'if' → logprob: -2.128288507461548
    3. '   ' → logprob: -6.628288269042969
    4. ' return' → logprob: -10.503288269042969
    5. ' if' → logprob: -11.628288269042969
    6. 'If' → logprob: -15.378288269042969
    7. '	return' → logprob: -15.503288269042969
    8. 'Return' → logprob: -16.00328826904297
    9. '```' → logprob: -16.87828826904297
    10. 'ret' → logprob: -17.00328826904297

Token 859: ' aucune' (ID: 51173)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3869576156139374
    2. 'not' → logprob: -1.1369576454162598
    3. '   ' → logprob: -9.386957168579102
    4. '
' → logprob: -13.261957168579102
    5. '	not' → logprob: -14.511957168579102
    6. '(not' → logprob: -15.261957168579102
    7. ' no' → logprob: -16.3869571685791
    8. '    ' → logprob: -16.7619571685791
    9. ' ' → logprob: -17.8869571685791
    10. ' pas' → logprob: -17.8869571685791

Token 860: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.6176952719688416
    2. '_pair' → logprob: -1.7426953315734863
    3. ' pair' → logprob: -1.8676953315734863
    4. ' paire' → logprob: -2.8676953315734863
    5. 'any' → logprob: -3.3676953315734863
    6. ' any' → logprob: -3.3676953315734863
    7. ' not' → logprob: -5.742695331573486
    8. 'p' → logprob: -7.492695331573486
    9. 'not' → logprob: -7.867695331573486
    10. '_pairs' → logprob: -7.992695331573486

Token 861: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056699786335229874
    2. '   ' → logprob: -4.056699752807617
    3. ' not' → logprob: -4.556699752807617
    4. '==' → logprob: -4.681699752807617
    5. ':
' → logprob: -5.431699752807617
    6. '=' → logprob: -6.181699752807617
    7. 'not' → logprob: -6.181699752807617
    8. ':return' → logprob: -6.181699752807617
    9. ' ==' → logprob: -6.306699752807617
    10. '=False' → logprob: -6.931699752807617

Token 862: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4060299396514893
    2. ''est' → logprob: -2.2810299396514893
    3. ''a' → logprob: -2.4060299396514893
    4. ''' → logprob: -2.6560299396514893
    5. '=' → logprob: -2.9060299396514893
    6. 'o' → logprob: -3.0310299396514893
    7. 'u' → logprob: -3.2810299396514893
    8. ''ont' → logprob: -3.4060299396514893
    9. '_possible' → logprob: -3.5310299396514893
    10. '<|end|>' → logprob: -3.6560299396514893

Token 863: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.0351727195084095
    2. ' été' → logprob: -4.535172939300537
    3. 'être' → logprob: -4.785172939300537
    4. 'been' → logprob: -5.535172939300537
    5. 'pas' → logprob: -5.660172939300537
    6. 'ét' → logprob: -6.410172939300537
    7. ' been' → logprob: -6.785172939300537
    8. 'et' → logprob: -7.285172939300537
    9. 't' → logprob: -7.535172939300537
    10. 'True' → logprob: -7.660172939300537

Token 864: ' en' (ID: 469)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3096717596054077
    2. 'found' → logprob: -1.5596717596054077
    3. ' trouv' → logprob: -2.9346718788146973
    4. ' found' → logprob: -6.434671878814697
    5. ' trouvé' → logprob: -7.309671878814697
    6. ' True' → logprob: -8.434671401977539
    7. 'find' → logprob: -8.434671401977539
    8. 'True' → logprob: -8.809671401977539
    9. ' trou' → logprob: -10.809671401977539
    10. 'faite' → logprob: -11.059671401977539

Token 865: 'lev' (ID: 3944)
  Prédit: 'contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contr' → logprob: -0.5692565441131592
    2. 'counter' → logprob: -1.3192565441131592
    3. 'found' → logprob: -2.694256544113159
    4. 'tr' → logprob: -3.069256544113159
    5. 't' → logprob: -3.694256544113159
    6. 'cont' → logprob: -5.194256782531738
    7. 'contre' → logprob: -5.444256782531738
    8. 'c' → logprob: -5.694256782531738
    9. ' trouvé' → logprob: -5.944256782531738
    10. 'any' → logprob: -6.069256782531738

Token 866: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0025678067468106747
    2. 'é' → logprob: -6.127567768096924
    3. 'e' → logprob: -8.252568244934082
    4. 'ie' → logprob: -9.127568244934082
    5. 'ee' → logprob: -11.502568244934082
    6. 'rée' → logprob: -13.627568244934082
    7. 'è' → logprob: -14.252568244934082
    8. 'ées' → logprob: -14.752568244934082
    9. 'née' → logprob: -14.752568244934082
    10. 'ié' → logprob: -16.127567291259766

Token 867: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29995617270469666
    2. ':
' → logprob: -1.549956202507019
    3. '   ' → logprob: -3.2999560832977295
    4. ':return' → logprob: -4.674956321716309
    5. 'return' → logprob: -7.549956321716309
    6. ',' → logprob: -9.674956321716309
    7. '       ' → logprob: -9.799956321716309
    8. ' return' → logprob: -10.924956321716309
    9. 'and' → logprob: -12.799956321716309
    10. ':
' → logprob: -13.174956321716309

Token 868: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47742027044296265
    2. 'return' → logprob: -0.9774202704429626
    3. ' return' → logprob: -5.727420330047607
    4. '       ' → logprob: -9.47741985321045
    5. '	return' → logprob: -13.10241985321045
    6. '
' → logprob: -13.47741985321045
    7. ':return' → logprob: -13.47741985321045
    8. '```' → logprob: -14.85241985321045
    9. '  ' → logprob: -15.72741985321045
    10. '    ' → logprob: -16.602420806884766

Token 869: ''est' (ID: 6616)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1684516817331314
    2. 'eturn' → logprob: -2.1684517860412598
    3. ' return' → logprob: -4.41845178604126
    4. '   ' → logprob: -4.79345178604126
    5. ''est' → logprob: -5.29345178604126
    6. '#' → logprob: -5.66845178604126
    7. 'ont' → logprob: -5.91845178604126
    8. '	return' → logprob: -6.29345178604126
    9. ':return' → logprob: -6.41845178604126
    10. 'ode' → logprob: -6.66845178604126

Token 870: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06996378302574158
    2. 'best' → logprob: -3.6949636936187744
    3. ' best' → logprob: -3.8199636936187744
    4. ' ' → logprob: -3.9449636936187744
    5. '   ' → logprob: -6.5699639320373535
    6. '  ' → logprob: -11.819963455200195
    7. ' le' → logprob: -11.944963455200195
    8. '	best' → logprob: -11.944963455200195
    9. 'le' → logprob: -12.194963455200195
    10. '    ' → logprob: -12.569963455200195

Token 871: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.982165698194876e-05
    2. ' ' → logprob: -9.875080108642578
    3. 'best' → logprob: -10.625080108642578
    4. '   ' → logprob: -12.500080108642578
    5. ' best' → logprob: -15.875080108642578
    6. '  ' → logprob: -17.000080108642578
    7. '
' → logprob: -17.000080108642578
    8. 'return' → logprob: -17.375080108642578
    9. '```' → logprob: -18.375080108642578
    10. 'b' → logprob: -18.375080108642578

Token 872: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2990590035915375
    2. '   ' → logprob: -1.4240590333938599
    3. '    
' → logprob: -4.67405891418457
    4. 'return' → logprob: -4.92405891418457
    5. ' return' → logprob: -7.04905891418457
    6. '   
' → logprob: -9.29905891418457
    7. '\n' → logprob: -9.79905891418457
    8. '  
' → logprob: -10.17405891418457
    9. '	return' → logprob: -10.42405891418457
    10. ' 
' → logprob: -11.42405891418457

Token 873: 'auc' (ID: 11816)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.28013795614242554
    2. '   ' → logprob: -1.7801380157470703
    3. ' return' → logprob: -3.0301380157470703
    4. '
' → logprob: -3.6551380157470703
    5. ')' → logprob: -7.53013801574707
    6. '\n' → logprob: -7.78013801574707
    7. ')
' → logprob: -8.15513801574707
    8. '    
' → logprob: -8.78013801574707
    9. ')return' → logprob: -10.15513801574707
    10. ':return' → logprob: -10.40513801574707

Token 874: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5561321377754211
    2. 'une' → logprob: -0.9311321377754211
    3. ')' → logprob: -3.8061320781707764
    4. 'ucun' → logprob: -5.8061323165893555
    5. 'ucune' → logprob: -5.9311323165893555
    6. 'n' → logprob: -6.5561323165893555
    7. 'unes' → logprob: -6.9311323165893555
    8. 'ún' → logprob: -7.9311323165893555
    9. 'una' → logprob: -8.056132316589355
    10. '#' → logprob: -8.306132316589355

Token 875: ' disque' (ID: 114222)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0092418193817139
    2. 'dis' → logprob: -1.0092418193817139
    3. 'rem' → logprob: -2.634241819381714
    4. ' disque' → logprob: -3.134241819381714
    5. 'more' → logprob: -3.384241819381714
    6. 'plus' → logprob: -4.134242057800293
    7. 'possible' → logprob: -4.134242057800293
    8. ' removal' → logprob: -4.509242057800293
    9. ' more' → logprob: -4.759242057800293
    10. ' possible' → logprob: -5.134242057800293

Token 876: ' retir' (ID: 35638)
  Prédit: ' supplémentaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supplémentaire' → logprob: -1.1042890548706055
    2. ' de' → logprob: -1.3542890548706055
    3. ' à' → logprob: -1.6042890548706055
    4. 'de' → logprob: -2.9792890548706055
    5. 'removed' → logprob: -3.3542890548706055
    6. 'can' → logprob: -3.8542890548706055
    7. ')' → logprob: -3.8542890548706055
    8. 'à' → logprob: -3.8542890548706055
    9. ' can' → logprob: -4.2292890548706055
    10. ' removed' → logprob: -4.6042890548706055

Token 877: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00081796565791592
    2. 'able' → logprob: -7.125817775726318
    3. 'és' → logprob: -11.625818252563477
    4. 'er' → logprob: -14.125818252563477
    5. '```' → logprob: -14.125818252563477
    6. ')' → logprob: -14.375818252563477
    7. 'né' → logprob: -14.500818252563477
    8. 'É' → logprob: -14.625818252563477
    9. 'e' → logprob: -14.750818252563477
    10. '</' → logprob: -15.125818252563477

Token 878: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10306335985660553
    2. '
' → logprob: -2.9780633449554443
    3. ')' → logprob: -3.3530633449554443
    4. 'return' → logprob: -4.978063583374023
    5. ')
' → logprob: -5.853063583374023
    6. '    
' → logprob: -6.978063583374023
    7. ')return' → logprob: -7.103063583374023
    8. ' return' → logprob: -7.978063583374023
    9. '       ' → logprob: -10.228063583374023
    10. '	return' → logprob: -10.728063583374023

Token 879: ' ce' (ID: 2357)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7985901236534119
    2. ' cette' → logprob: -1.0485901832580566
    3. 'ce' → logprob: -2.0485901832580566
    4. 'this' → logprob: -3.5485901832580566
    5. 'cet' → logprob: -3.6735901832580566
    6. ' ce' → logprob: -4.673590183258057
    7. 'la' → logprob: -5.548590183258057
    8. ' this' → logprob: -7.298590183258057
    9. 'le' → logprob: -7.673590183258057
    10. ' cet' → logprob: -7.798590183258057

Token 880: ' cas' (ID: 2108)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.10726075619459152
    2. 'cas' → logprob: -3.1072607040405273
    3. 'call' → logprob: -3.2322607040405273
    4. 'branch' → logprob: -5.107260704040527
    5. 'con' → logprob: -5.857260704040527
    6. '```' → logprob: -6.357260704040527
    7. 'bloc' → logprob: -7.232260704040527
    8. 'app' → logprob: -7.232260704040527
    9. 'case' → logprob: -7.357260704040527
    10. 'c' → logprob: -7.357260704040527

Token 881: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37697362899780273
    2. ')' → logprob: -1.2519736289978027
    3. ')
' → logprob: -3.7519736289978027
    4. 'return' → logprob: -5.751973628997803
    5. '
' → logprob: -6.876973628997803
    6. ')return' → logprob: -8.626974105834961
    7. '       ' → logprob: -9.251974105834961
    8. '    
' → logprob: -9.376974105834961
    9. ' return' → logprob: -10.626974105834961
    10. '  ' → logprob: -11.001974105834961

Token 882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001268685911782086
    2. '
' → logprob: -7.1262688636779785
    3. 'return' → logprob: -7.8762688636779785
    4. ' return' → logprob: -10.25126838684082
    5. '    
' → logprob: -10.25126838684082
    6. '	return' → logprob: -11.25126838684082
    7. '```' → logprob: -14.75126838684082
    8. '<|end|>' → logprob: -16.00126838684082
    9. ':return' → logprob: -16.12626838684082
    10. '       ' → logprob: -16.37626838684082

Token 883: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4933341145515442
    2. 'return' (adapté à ' return') → logprob: -0.9933341145515442
    3. 'if' → logprob: -3.9933340549468994
    4. ' return' → logprob: -7.4933342933654785
    5. ' if' → logprob: -9.49333381652832
    6. 'else' → logprob: -13.74333381652832
    7. '
' → logprob: -14.36833381652832
    8. '```' → logprob: -14.74333381652832
    9. '	return' → logprob: -15.24333381652832
    10. '    
' → logprob: -15.86833381652832

Token 884: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.1929716169834137
    2. ' best' → logprob: -1.9429715871810913
    3. '0' → logprob: -3.442971706390381
    4. ' ' → logprob: -8.317971229553223
    5. '(best' → logprob: -13.692971229553223
    6. '	best' → logprob: -13.692971229553223
    7. 'b' → logprob: -14.567971229553223
    8. '   ' → logprob: -15.317971229553223
    9. '_best' → logprob: -15.942971229553223
    10. ' ' → logprob: -16.31797218322754

Token 885: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 886: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 887: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0004647504829335958
    2. '_main' → logprob: -8.12546443939209
    3. ' solve' → logprob: -9.25046443939209
    4. 'main' → logprob: -10.50046443939209
    5. '_' → logprob: -11.37546443939209
    6. ' ' → logprob: -11.87546443939209
    7. ' parse' → logprob: -12.12546443939209
    8. ' _' → logprob: -12.25046443939209
    9. ' solution' → logprob: -12.50046443939209
    10. ' calculate' → logprob: -13.25046443939209

Token 888: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.047134305234067e-05
    2. ' ():' → logprob: -11.000030517578125
    3. '():
' → logprob: -11.375030517578125
    4. '()' → logprob: -13.125030517578125
    5. '(' → logprob: -16.375030517578125
    6. '():
' → logprob: -16.625030517578125
    7. ':' → logprob: -17.000030517578125
    8. '():

' → logprob: -17.500030517578125
    9. '()>' → logprob: -18.375030517578125
    10. '_' → logprob: -18.375030517578125

Token 889: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014789276756346226
    2. 'n' → logprob: -4.76478910446167
    3. ' n' → logprob: -5.13978910446167
    4. 'import' → logprob: -8.639789581298828
    5. ' import' → logprob: -9.514789581298828
    6. '```' → logprob: -10.639789581298828
    7. '	n' → logprob: -11.389789581298828
    8. ' input' → logprob: -12.639789581298828
    9. 'input' → logprob: -12.889789581298828
    10. '   ' → logprob: -13.139789581298828

Token 890: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7035876512527466
    2. ' n' → logprob: -0.7035876512527466
    3. '   ' → logprob: -5.328587532043457
    4. ' import' → logprob: -5.578587532043457
    5. 'import' → logprob: -6.703587532043457
    6. 't' → logprob: -8.453587532043457
    7. ' input' → logprob: -8.703587532043457
    8. ' t' → logprob: -9.328587532043457
    9. 'input' (adapté à ' input') → logprob: -10.703587532043457
    10. ' line' → logprob: -11.203587532043457

Token 891: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11069381982088089
    2. '_line' → logprob: -2.73569393157959
    3. '_data' → logprob: -3.73569393157959
    4. ' =' → logprob: -5.11069393157959
    5. '_lines' → logprob: -5.11069393157959
    6. '=' → logprob: -6.11069393157959
    7. '_' → logprob: -7.23569393157959
    8. 'data' → logprob: -8.11069393157959
    9. 'line' → logprob: -8.23569393157959
    10. '=sys' → logprob: -8.86069393157959

Token 892: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35322341322898865
    2. ' =' → logprob: -1.603223443031311
    3. '()' → logprob: -2.3532233238220215
    4. '   ' → logprob: -7.1032233238220215
    5. '=[]' → logprob: -8.22822380065918
    6. '[]' → logprob: -10.35322380065918
    7. '_' → logprob: -10.35322380065918
    8. '[' → logprob: -10.85322380065918
    9. '=sys' → logprob: -11.22822380065918
    10. '	' → logprob: -11.47822380065918

Token 893: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002476016292348504
    2. ' sys' → logprob: -6.002476215362549
    3. '[' → logprob: -14.87747573852539
    4. '	sys' → logprob: -17.50247573852539
    5. '=sys' → logprob: -18.25247573852539
    6. '(sys' → logprob: -18.37747573852539
    7. ' [' → logprob: -19.00247573852539
    8. 'list' → logprob: -20.00247573852539
    9. '[]' → logprob: -20.00247573852539
    10. '[]
' → logprob: -21.75247573852539

Token 894: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.2723104848410003e-05
    2. '.' → logprob: -11.125022888183594
    3. '.argv' → logprob: -12.375022888183594
    4. 'stdin' → logprob: -13.000022888183594
    5. '.stdout' → logprob: -14.500022888183594
    6. '.std' → logprob: -15.125022888183594
    7. '.readline' → logprob: -15.250022888183594
    8. '(stdin' → logprob: -15.500022888183594
    9. ' stdin' → logprob: -17.125022888183594
    10. '.readlines' → logprob: -17.500022888183594

Token 895: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.02493278682231903
    2. '.readlines' → logprob: -4.399932861328125
    3. '.read' → logprob: -4.774932861328125
    4. '.' → logprob: -5.774932861328125
    5. 'read' → logprob: -7.149932861328125
    6. '_read' → logprob: -11.774932861328125
    7. '().' → logprob: -12.649932861328125
    8. ' readline' → logprob: -13.399932861328125
    9. '_lines' → logprob: -13.899932861328125
    10. '=' → logprob: -14.149932861328125

Token 896: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008620720356702805
    2. '()' → logprob: -4.758620738983154
    3. '_lines' → logprob: -12.633620262145996
    4. '(' → logprob: -13.633620262145996
    5. ' ().' → logprob: -14.508620262145996
    6. 'lines' → logprob: -15.008620262145996
    7. '()
' → logprob: -15.383620262145996
    8. '()\' → logprob: -15.758620262145996
    9. '()`' → logprob: -15.758620262145996
    10. ' ()' → logprob: -16.008621215820312

Token 897: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.126943439245224
    2. 'split' → logprob: -2.126943349838257
    3. 'decode' → logprob: -11.126943588256836
    4. 'rstrip' → logprob: -14.376943588256836
    5. 'str' → logprob: -17.876943588256836
    6. 'read' → logprob: -18.001943588256836
    7. ' split' → logprob: -18.501943588256836
    8. ' strip' → logprob: -18.876943588256836
    9. '(split' → logprob: -19.501943588256836
    10. 'lines' → logprob: -20.126943588256836

Token 898: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0052360063418745995
    2. '()' → logprob: -5.2552361488342285
    3. 'split' → logprob: -13.88023567199707
    4. '(' → logprob: -15.00523567199707
    5. '()
' → logprob: -15.25523567199707
    6. '.split' → logprob: -15.38023567199707
    7. '_split' → logprob: -15.50523567199707
    8. '()\' → logprob: -15.88023567199707
    9. ' ().' → logprob: -16.75523567199707
    10. '()`' → logprob: -16.88023567199707

Token 899: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. '(split' → logprob: -18.375
    4. '_split' → logprob: -21.25
    5. 'decode' → logprob: -21.875
    6. 'spl' → logprob: -22.25
    7. 'strip' → logprob: -23.0
    8. '```' → logprob: -23.25
    9. '.split' → logprob: -23.375
    10. 'lines' → logprob: -23.5

Token 900: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.2677048444747925
    2. '()' → logprob: -1.7677048444747925
    3. 'lines' → logprob: -2.767704963684082
    4. '("\' → logprob: -6.767704963684082
    5. '()\' → logprob: -8.767704963684082
    6. '()
' → logprob: -10.892704963684082
    7. '(' → logprob: -12.392704963684082
    8. '()[' → logprob: -12.767704963684082
    9. '('' → logprob: -12.892704963684082
    10. '()

' → logprob: -15.017704963684082

Token 901: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008434196934103966
    2. 'lines' → logprob: -5.008434295654297
    3. '\n' → logprob: -6.508434295654297
    4. ''\' → logprob: -8.633434295654297
    5. '('\' → logprob: -10.383434295654297
    6. 'newline' → logprob: -11.758434295654297
    7. '\' → logprob: -12.633434295654297
    8. '
' → logprob: -13.008434295654297
    9. 'input' → logprob: -13.633434295654297
    10. '"\' → logprob: -14.133434295654297

Token 902: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1700303703546524
    2. '   ' → logprob: -1.9200303554534912
    3. ')
' → logprob: -5.17003059387207
    4. '')' → logprob: -5.54503059387207
    5. '')
' → logprob: -8.92003059387207
    6. '()' → logprob: -11.17003059387207
    7. 'def' → logprob: -12.29503059387207
    8. '")' → logprob: -12.42003059387207
    9. '`)' → logprob: -13.67003059387207
    10. 'n' → logprob: -13.79503059387207

Token 903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036226850003004074
    2. 'n' → logprob: -4.036226749420166
    3. ' n' → logprob: -4.036226749420166
    4. 't' → logprob: -8.911227226257324
    5. ' t' → logprob: -10.536227226257324
    6. 'i' → logprob: -11.286227226257324
    7. 'num' → logprob: -11.286227226257324
    8. ' idx' → logprob: -11.536227226257324
    9. '	n' → logprob: -11.536227226257324
    10. 'idx' → logprob: -11.536227226257324

Token 904: ' idx' (ID: 14016)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2575927972793579
    2. 'n' → logprob: -1.757592797279358
    3. 'T' → logprob: -3.2575926780700684
    4. 'num' → logprob: -4.382592678070068
    5. 'idx' (adapté à ' idx') → logprob: -6.382592678070068
    6. '   ' → logprob: -6.882592678070068
    7. 'nb' → logprob: -7.757592678070068
    8. ' t' → logprob: -8.632593154907227
    9. 'N' → logprob: -9.007593154907227
    10. 'i' → logprob: -9.882593154907227

Token 905: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47411826252937317
    2. '=' → logprob: -0.9741182327270508
    3. '_' → logprob: -10.72411823272705
    4. '   ' → logprob: -12.34911823272705
    5. '_token' → logprob: -12.59911823272705
    6. ' ' → logprob: -12.97411823272705
    7. '  ' → logprob: -13.09911823272705
    8. 'token' → logprob: -13.47411823272705
    9. ')' → logprob: -13.84911823272705
    10. ' +=' → logprob: -14.09911823272705

Token 906: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.79811754100956e-05
    2. '1' → logprob: -10.875038146972656
    3. ' ' → logprob: -10.875038146972656
    4. 'int' → logprob: -19.375038146972656
    5. '   ' → logprob: -19.875038146972656
    6. '۰' → logprob: -20.562538146972656
    7. '```' → logprob: -20.687538146972656
    8. '[' → logprob: -20.687538146972656
    9. '=' → logprob: -21.062538146972656
    10. '2' → logprob: -21.062538146972656

Token 907: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. '1' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.250003814697266
    4. '2' → logprob: -20.750003814697266
    5. 'int' → logprob: -20.750003814697266
    6. '   ' → logprob: -20.875003814697266
    7. '```' → logprob: -20.875003814697266
    8. '[' → logprob: -21.250003814697266
    9. '۰' → logprob: -21.437503814697266
    10. '=' → logprob: -21.625003814697266

Token 908: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21325822174549103
    2. 'n' → logprob: -1.8382582664489746
    3. 't' → logprob: -3.7132582664489746
    4. 'while' → logprob: -5.463258266448975
    5. ' n' → logprob: -5.838258266448975
    6. ' while' → logprob: -7.588258266448975
    7. 'num' → logprob: -7.963258266448975
    8. ' t' → logprob: -8.088257789611816
    9. 'T' → logprob: -9.463257789611816
    10. 'N' → logprob: -10.213257789611816

Token 909: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.514348566532135
    2. 'n' → logprob: -1.5143485069274902
    3. 't' → logprob: -1.8893485069274902
    4. 'while' → logprob: -4.51434850692749
    5. ' n' → logprob: -5.01434850692749
    6. ' t' → logprob: -5.13934850692749
    7. 'T' → logprob: -5.76434850692749
    8. ' while' → logprob: -6.01434850692749
    9. 'num' → logprob: -6.51434850692749
    10. ' T' → logprob: -8.639348983764648

Token 910: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6087021231651306
    2. 'while' (adapté à ' while') → logprob: -0.8587021231651306
    3. ' while' → logprob: -4.108702182769775
    4. 'T' → logprob: -4.983702182769775
    5. '   ' → logprob: -5.358702182769775
    6. ' t' → logprob: -5.858702182769775
    7. 'n' → logprob: -6.733702182769775
    8. ' T' → logprob: -8.983701705932617
    9. 'num' → logprob: -9.858701705932617
    10. 'q' → logprob: -11.608701705932617

Token 911: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.12753838300704956
    2. 'idx' → logprob: -2.1275384426116943
    3. ' True' → logprob: -8.002538681030273
    4. 'True' → logprob: -8.252538681030273
    5. '	idx' → logprob: -11.752538681030273
    6. '(idx' → logprob: -12.002538681030273
    7. '   ' → logprob: -15.127538681030273
    8. ' ' → logprob: -16.002538681030273
    9. 'Idx' → logprob: -16.127538681030273
    10. '_idx' → logprob: -16.127538681030273

Token 912: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03616062551736832
    2. ':
' → logprob: -3.911160707473755
    3. '       ' → logprob: -4.536160469055176
    4. '   ' → logprob: -5.411160469055176
    5. ',' → logprob: -9.161160469055176
    6. '):' → logprob: -9.911160469055176
    7. '<|end|>' → logprob: -10.411160469055176
    8. '=' → logprob: -11.036160469055176
    9. '):
' → logprob: -11.036160469055176
    10. ' and' → logprob: -11.161160469055176

Token 913: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036810263991355896
    2. '       ' → logprob: -3.4118101596832275
    3. 'if' → logprob: -6.411810398101807
    4. ' if' → logprob: -6.536810398101807
    5. '    
' → logprob: -10.786809921264648
    6. '    ' → logprob: -11.911809921264648
    7. '   ' → logprob: -12.161809921264648
    8. ' line' → logprob: -12.286809921264648
    9. '```' → logprob: -12.286809921264648
    10. 'try' → logprob: -12.411809921264648

Token 914: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7308177351951599
    2. 'n' → logprob: -0.8558177351951599
    3. ' if' → logprob: -2.4808177947998047
    4. 'line' → logprob: -5.480817794799805
    5. ' n' → logprob: -5.980817794799805
    6. ' line' → logprob: -6.980817794799805
    7. 'N' → logprob: -7.480817794799805
    8. '   ' → logprob: -7.730817794799805
    9. 't' → logprob: -7.730817794799805
    10. '       ' → logprob: -7.855817794799805

Token 915: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06197093799710274
    2. ' idx' → logprob: -2.8119709491729736
    3. '	idx' → logprob: -12.686970710754395
    4. '(idx' → logprob: -16.56197166442871
    5. '_idx' → logprob: -16.93697166442871
    6. ' ' → logprob: -17.18697166442871
    7. '   ' → logprob: -17.43697166442871
    8. 'index' → logprob: -18.43697166442871
    9. ' not' → logprob: -18.56197166442871
    10. '[idx' → logprob: -18.68697166442871

Token 916: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.16028881072998047
    2. ' >=' → logprob: -1.9102888107299805
    3. ']>=' → logprob: -10.28528881072998
    4. '==' → logprob: -10.78528881072998
    5. ')>=' → logprob: -11.91028881072998
    6. ' ==' → logprob: -14.03528881072998
    7. ' ' → logprob: -14.16028881072998
    8. '=' → logprob: -14.28528881072998
    9. '   ' → logprob: -14.91028881072998
    10. '≥' → logprob: -15.53528881072998

Token 917: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.512236498361744e-07
    2. ' len' → logprob: -14.500000953674316
    3. '
' → logprob: -21.75
    4. '(len' → logprob: -22.125
    5. 'length' → logprob: -22.875
    6. '   ' → logprob: -23.0
    7. '	len' → logprob: -23.375
    8. '=len' → logprob: -23.875
    9. ',len' → logprob: -24.375
    10. '[len' → logprob: -24.75

Token 918: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04860224947333336
    2. 'input' → logprob: -3.048602342605591
    3. ' input' → logprob: -11.173602104187012
    4. '=input' → logprob: -14.423602104187012
    5. '<input' → logprob: -16.298603057861328
    6. ',input' → logprob: -16.673603057861328
    7. '_input' → logprob: -17.923603057861328
    8. '[input' → logprob: -18.048603057861328
    9. 'Input' → logprob: -18.173603057861328
    10. '	input' → logprob: -18.798603057861328

Token 919: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.625
    3. '_line' → logprob: -16.75
    4. '_LINES' → logprob: -17.625
    5. '_l' → logprob: -17.875
    6. 'lines' → logprob: -17.875
    7. ')' → logprob: -18.375
    8. '(lines' → logprob: -19.25
    9. '_lin' → logprob: -19.25
    10. '_)' → logprob: -19.5

Token 920: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.034757740795612335
    2. ':' → logprob: -3.9097578525543213
    3. ':
' → logprob: -4.909757614135742
    4. 'or' → logprob: -5.534757614135742
    5. ')' → logprob: -7.034757614135742
    6. '       ' → logprob: -7.409757614135742
    7. ' and' → logprob: -7.909757614135742
    8. '   ' → logprob: -8.284757614135742
    9. '):
' → logprob: -8.409757614135742
    10. '):' → logprob: -8.659757614135742

Token 921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2422390729188919
    2. '       ' → logprob: -1.6172391176223755
    3. '   ' → logprob: -4.117238998413086
    4. ' break' → logprob: -8.742238998413086
    5. 'break' → logprob: -9.367238998413086
    6. '	   ' → logprob: -10.117238998413086
    7. ' ' → logprob: -10.992238998413086
    8. '	break' → logprob: -10.992238998413086
    9. '		' → logprob: -11.367238998413086
    10. '	' → logprob: -11.367238998413086

Token 922: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07769200950860977
    2. '       ' → logprob: -2.9526920318603516
    3. ' break' → logprob: -4.702692031860352
    4. 'return' → logprob: -4.827692031860352
    5. '           ' → logprob: -5.327692031860352
    6. '	break' → logprob: -7.952692031860352
    7. '   ' → logprob: -8.577692031860352
    8. '
' → logprob: -10.077692031860352
    9. ' return' → logprob: -11.327692031860352
    10. '```' → logprob: -11.577692031860352

Token 923: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035082492977380753
    2. '        
' → logprob: -6.1285080909729
    3. '   ' → logprob: -7.0035080909729
    4. 'n' → logprob: -8.628508567810059
    5. '    
' → logprob: -10.003508567810059
    6. ' line' → logprob: -10.253508567810059
    7. '
' → logprob: -10.378508567810059
    8. '  
' → logprob: -10.753508567810059
    9. 'line' → logprob: -10.878508567810059
    10. '           ' → logprob: -11.253508567810059

Token 924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3917834460735321
    2. '   ' → logprob: -1.5167834758758545
    3. 'n' → logprob: -2.7667834758758545
    4. 'line' → logprob: -3.7667834758758545
    5. ' line' → logprob: -4.641783237457275
    6. '```' → logprob: -5.391783237457275
    7. ' n' → logprob: -6.391783237457275
    8. '        
' → logprob: -6.391783237457275
    9. 'num' → logprob: -8.016783714294434
    10. '    
' → logprob: -9.016783714294434

Token 925: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.14125336706638336
    2. 'line' → logprob: -2.8912534713745117
    3. ' n' → logprob: -3.3912534713745117
    4. ' line' → logprob: -3.8912534713745117
    5. '       ' → logprob: -4.266253471374512
    6. 't' → logprob: -6.016253471374512
    7. 'L' → logprob: -6.766253471374512
    8. '   ' → logprob: -6.766253471374512
    9. 'l' → logprob: -7.391253471374512
    10. 'N' → logprob: -7.391253471374512

Token 926: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07006169855594635
    2. '=' → logprob: -2.695061683654785
    3. '=int' → logprob: -9.195061683654785
    4. ' ' → logprob: -11.820061683654785
    5. '   ' → logprob: -12.195061683654785
    6. '=line' → logprob: -12.820061683654785
    7. ')' → logprob: -13.445061683654785
    8. '_line' → logprob: -13.570061683654785
    9. '    ' → logprob: -13.695061683654785
    10. ' =
' → logprob: -13.820061683654785

Token 927: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804149478673935
    2. ' int' → logprob: -3.288041591644287
    3. '=int' → logprob: -16.663042068481445
    4. ' ' → logprob: -17.663042068481445
    5. '(int' → logprob: -18.413042068481445
    6. '[int' → logprob: -18.913042068481445
    7. '	int' → logprob: -19.913042068481445
    8. '   ' → logprob: -20.163042068481445
    9. '  ' → logprob: -20.413042068481445
    10. '       ' → logprob: -20.663042068481445

Token 928: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0014347549295052886
    2. 'input' → logprob: -6.751434803009033
    3. '(' → logprob: -8.251434326171875
    4. ' input' → logprob: -12.751434326171875
    5. ' (' → logprob: -14.251434326171875
    6. '(
' → logprob: -16.876434326171875
    7. '=input' → logprob: -18.126434326171875
    8. ',input' → logprob: -18.376434326171875
    9. '[input' → logprob: -18.626434326171875
    10. '(in' → logprob: -19.376434326171875

Token 929: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.006165781989693642
    2. '(input' → logprob: -5.131165981292725
    3. '(' → logprob: -9.631165504455566
    4. '(lines' → logprob: -9.881165504455566
    5. '[input' → logprob: -10.256165504455566
    6. 'lines' → logprob: -10.631165504455566
    7. ')' → logprob: -10.881165504455566
    8. 'Lines' → logprob: -11.506165504455566
    9. '[' → logprob: -11.756165504455566
    10. 'input' → logprob: -12.506165504455566

Token 930: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.25001335144043
    3. ')[' → logprob: -15.87501335144043
    4. '[id' → logprob: -16.87501335144043
    5. ' [' → logprob: -17.62501335144043
    6. '   ' → logprob: -17.75001335144043
    7. '```' → logprob: -17.75001335144043
    8. '[ind' → logprob: -18.50001335144043
    9. '[
' → logprob: -18.50001335144043
    10. '[index' → logprob: -18.50001335144043

Token 931: '].' (ID: 1651)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3217523992061615
    2. '])' → logprob: -1.3217524290084839
    3. ')
' → logprob: -5.196752548217773
    4. '])
' → logprob: -6.196752548217773
    5. ']' → logprob: -7.571752548217773
    6. ' )' → logprob: -8.571752548217773
    7. '[' → logprob: -10.321752548217773
    8. ']);' → logprob: -10.321752548217773
    9. '.strip' → logprob: -10.821752548217773
    10. '())' → logprob: -11.196752548217773

Token 932: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.6696149840718135e-05
    2. 'split' → logprob: -10.375056266784668
    3. 'rstrip' → logprob: -10.625056266784668
    4. ' strip' → logprob: -14.000056266784668
    5. 'trim' → logprob: -16.375057220458984
    6. 'replace' → logprob: -17.500057220458984
    7. 'idx' → logprob: -17.625057220458984
    8. '.strip' → logprob: -17.750057220458984
    9. '(strip' → logprob: -17.875057220458984
    10. '_strip' → logprob: -18.000057220458984

Token 933: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03838822990655899
    2. '())
' → logprob: -3.538388252258301
    3. ')' → logprob: -4.788388252258301
    4. '()' → logprob: -8.5383882522583
    5. ')
' → logprob: -9.6633882522583
    6. '()
' → logprob: -12.0383882522583
    7. '())
' → logprob: -12.5383882522583
    8. ' ())' → logprob: -13.0383882522583
    9. '(' → logprob: -13.6633882522583
    10. '());' → logprob: -13.7883882522583

Token 934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4027143716812134
    2. '\n' → logprob: -1.2777143716812134
    3. '```' → logprob: -3.652714252471924
    4. '\' → logprob: -5.527714252471924
    5. '<|end|>' → logprob: -5.527714252471924
    6. '
' → logprob: -5.527714252471924
    7. '   ' → logprob: -5.777714252471924
    8. '        
' → logprob: -5.902714252471924
    9. 'idx' → logprob: -6.027714252471924
    10. '\x' → logprob: -6.152714252471924

Token 935: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.10203773528337479
    2. '
' → logprob: -2.7270376682281494
    3. '\n' → logprob: -3.9770376682281494
    4. ' idx' → logprob: -5.3520379066467285
    5. 'if' → logprob: -5.6020379066467285
    6. '       ' → logprob: -5.9770379066467285
    7. ' if' → logprob: -7.4770379066467285
    8. '[idx' → logprob: -7.9770379066467285
    9. '   ' → logprob: -8.10203742980957
    10. '```' → logprob: -8.47703742980957

Token 936: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018150178715586662
    2. ' +=' → logprob: -4.018150329589844
    3. ']+=' → logprob: -15.893150329589844
    4. '+' → logprob: -16.643150329589844
    5. '   ' → logprob: -17.893150329589844
    6. '=' → logprob: -17.893150329589844
    7. '+="' → logprob: -18.018150329589844
    8. '```' → logprob: -19.018150329589844
    9. '+='' → logprob: -19.143150329589844
    10. '+=(' → logprob: -20.268150329589844

Token 937: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -21.50000762939453
    4. '
' → logprob: -22.50000762939453
    5. '１' → logprob: -24.00000762939453
    6. '0' → logprob: -24.12500762939453
    7. '   ' → logprob: -24.62500762939453
    8. ' ' → logprob: -25.12500762939453
    9. '۱' → logprob: -25.37500762939453
    10. ' 
' → logprob: -25.37500762939453

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '```' → logprob: -22.625
    4. '0' → logprob: -23.625
    5. '
' → logprob: -24.5
    6. '１' → logprob: -24.625
    7. '   ' → logprob: -25.375
    8. '۱' → logprob: -26.375
    9. '`' → logprob: -26.875
    10. '১' → logprob: -27.25

Token 939: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2619987428188324
    2. '       ' → logprob: -1.5119987726211548
    3. ' if' → logprob: -4.636998653411865
    4. '   ' → logprob: -8.136999130249023
    5. '	if' → logprob: -10.386999130249023
    6. '        
' → logprob: -12.886999130249023
    7. '```' → logprob: -12.886999130249023
    8. '	' → logprob: -13.761999130249023
    9. ' ' → logprob: -14.636999130249023
    10. 'If' → logprob: -14.886999130249023

Token 940: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01951702870428562
    2. '       ' → logprob: -4.269516944885254
    3. ' if' → logprob: -5.269516944885254
    4. '   ' → logprob: -8.894516944885254
    5. '```' → logprob: -10.019516944885254
    6. '	if' → logprob: -11.519516944885254
    7. ' ' → logprob: -15.019516944885254
    8. '​' → logprob: -15.394516944885254
    9. '``' → logprob: -15.519516944885254
    10. '        
' → logprob: -15.644516944885254

Token 941: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011765359668061137
    2. 'dis' → logprob: -6.751176357269287
    3. ' if' → logprob: -12.501176834106445
    4. '   ' → logprob: -13.376176834106445
    5. '       ' → logprob: -14.626176834106445
    6. '```' → logprob: -14.751176834106445
    7. 'disc' → logprob: -17.001176834106445
    8. 'break' → logprob: -17.126176834106445
    9. 'If' → logprob: -17.251176834106445
    10. '#' → logprob: -17.251176834106445

Token 942: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033546582562848926
    2. ' n' → logprob: -8.000335693359375
    3. '	n' → logprob: -18.250335693359375
    4. '0' → logprob: -18.625335693359375
    5. '(n' → logprob: -20.500335693359375
    6. '   ' → logprob: -20.750335693359375
    7. 'not' → logprob: -21.000335693359375
    8. ' not' → logprob: -21.625335693359375
    9. '_n' → logprob: -22.000335693359375
    10. ')n' → logprob: -22.250335693359375

Token 943: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.033657338470220566
    2. '==' → logprob: -3.4086573123931885
    3. '=' → logprob: -12.53365707397461
    4. ')==' → logprob: -13.15865707397461
    5. '()==' → logprob: -13.15865707397461
    6. ' =' → logprob: -13.90865707397461
    7. ' <=' → logprob: -13.90865707397461
    8. ' ' → logprob: -14.28365707397461
    9. ']==' → logprob: -14.90865707397461
    10. ')' → logprob: -15.03365707397461

Token 944: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '=' → logprob: -22.37502670288086
    4. '   ' → logprob: -22.50002670288086
    5. '  ' → logprob: -23.12502670288086
    6. '۰' → logprob: -23.50002670288086
    7. '
' → logprob: -23.62502670288086
    8. ' ' → logprob: -24.00002670288086
    9. '```' → logprob: -24.00002670288086
    10. '00' → logprob: -24.75002670288086

Token 945: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '-' → logprob: -21.25
    4. '=' → logprob: -22.375
    5. '```' → logprob: -22.625
    6. '۰' → logprob: -23.25
    7. '
' → logprob: -24.375
    8. '   ' → logprob: -24.625
    9. '00' → logprob: -24.625
    10. '٠' → logprob: -25.0

Token 946: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20675787329673767
    2. ':
' → logprob: -1.70675790309906
    3. '           ' → logprob: -5.58175802230835
    4. '       ' → logprob: -6.58175802230835
    5. '   ' → logprob: -9.331757545471191
    6. ':return' → logprob: -9.706757545471191
    7. '.' → logprob: -12.456757545471191
    8. ' :' → logprob: -12.581757545471191
    9. ' :
' → logprob: -13.081757545471191
    10. ' break' → logprob: -13.206757545471191

Token 947: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004188567865639925
    2. '       ' → logprob: -5.504188537597656
    3. ' break' → logprob: -10.004188537597656
    4. 'break' → logprob: -10.754188537597656
    5. '   ' → logprob: -10.879188537597656
    6. '		' → logprob: -10.879188537597656
    7. '	break' → logprob: -13.129188537597656
    8. '	       ' → logprob: -14.004188537597656
    9. '               ' → logprob: -14.254188537597656
    10. '          ' → logprob: -14.379188537597656

Token 948: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.004029364325106144
    2. ' break' → logprob: -5.754029273986816
    3. 'return' → logprob: -7.254029273986816
    4. '           ' → logprob: -9.004029273986816
    5. '	break' → logprob: -11.129029273986816
    6. '       ' → logprob: -12.129029273986816
    7. ' return' → logprob: -14.879029273986816
    8. '               ' → logprob: -15.254029273986816
    9. '_break' → logprob: -15.754029273986816
    10. '
' → logprob: -16.004030227661133

Token 949: ' fin' (ID: 2131)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00405370257794857
    2. ' break' → logprob: -6.004053592681885
    3. 'return' → logprob: -6.504053592681885
    4. '       ' → logprob: -9.504054069519043
    5. '           ' → logprob: -12.504054069519043
    6. '	break' → logprob: -14.379054069519043
    7. ' return' → logprob: -14.629054069519043
    8. 'Break' → logprob: -17.754053115844727
    9. '```' → logprob: -17.879053115844727
    10. '_break' → logprob: -18.504053115844727

Token 950: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004367932677268982
    2. '       ' → logprob: -5.629367828369141
    3. '               ' → logprob: -7.379367828369141
    4. 'break' → logprob: -10.50436782836914
    5. '\n' → logprob: -10.75436782836914
    6. '
' → logprob: -10.87936782836914
    7. '		' → logprob: -11.12936782836914
    8. '          ' → logprob: -11.37936782836914
    9. '   ' → logprob: -11.62936782836914
    10. '                   ' → logprob: -11.75436782836914

Token 951: ' la' (ID: 557)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.4014693796634674
    2. 'programme' → logprob: -1.651469349861145
    3. 'l' → logprob: -2.7764694690704346
    4. 'la' → logprob: -3.1514694690704346
    5. 'le' → logprob: -4.1514692306518555
    6. ' program' → logprob: -5.6514692306518555
    7. 'f' → logprob: -5.9014692306518555
    8. ' programme' → logprob: -6.5264692306518555
    9. 'prog' → logprob: -6.6514692306518555
    10. 'input' → logprob: -6.9014692306518555

Token 952: ' sais' (ID: 30010)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.2335188090801239
    2. 'program' → logprob: -1.6085188388824463
    3. 'bou' → logprob: -5.733518600463867
    4. 'break' → logprob: -5.858518600463867
    5. ' programme' → logprob: -7.858518600463867
    6. 'programma' → logprob: -7.983518600463867
    7. 'prog' → logprob: -8.108518600463867
    8. 'programm' → logprob: -8.608518600463867
    9. 'while' → logprob: -8.858518600463867
    10. ' program' → logprob: -8.983518600463867

Token 953: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.014579820446670055
    2. 'e' → logprob: -4.264579772949219
    3. 'sie' → logprob: -7.889579772949219
    4. 'i' → logprob: -11.264579772949219
    5. 's' → logprob: -11.389579772949219
    6. 'ies' → logprob: -11.514579772949219
    7. 'is' → logprob: -12.139579772949219
    8. ' ie' → logprob: -14.639579772949219
    9. '```' → logprob: -14.764579772949219
    10. 'se' → logprob: -14.764579772949219

Token 954: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.602024900028482e-05
    2. '		' → logprob: -9.875085830688477
    3. '               ' → logprob: -11.125085830688477
    4. '       ' → logprob: -11.375085830688477
    5. '          ' → logprob: -12.500085830688477
    6. '\n' → logprob: -13.625085830688477
    7. '	       ' → logprob: -14.000085830688477
    8. '            ' → logprob: -14.625085830688477
    9. '
' → logprob: -14.750085830688477
    10. '   ' → logprob: -15.125085830688477

Token 955: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.011373155459296e-05
    2. '       ' → logprob: -10.750030517578125
    3. '		' → logprob: -12.375030517578125
    4. '               ' → logprob: -13.375030517578125
    5. '          ' → logprob: -13.500030517578125
    6. '	       ' → logprob: -14.250030517578125
    7. '   ' → logprob: -15.000030517578125
    8. 'break' → logprob: -16.000030517578125
    9. ' break' → logprob: -16.250030517578125
    10. '         ' → logprob: -16.750030517578125

Token 956: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0035056343767791986
    2. 'return' → logprob: -6.003505706787109
    3. ' break' → logprob: -7.003505706787109
    4. '           ' → logprob: -9.25350570678711
    5. '       ' → logprob: -10.75350570678711
    6. '	break' → logprob: -12.75350570678711
    7. ' return' → logprob: -14.37850570678711
    8. '```' → logprob: -16.00350570678711
    9. '               ' → logprob: -16.37850570678711
    10. '_break' → logprob: -17.00350570678711

Token 957: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036680102348327637
    2. 'dis' → logprob: -5.628667831420898
    3. '   ' → logprob: -10.628667831420898
    4. '        
' → logprob: -11.003667831420898
    5. '	dis' → logprob: -11.753667831420898
    6. ' discs' → logprob: -11.878667831420898
    7. '```' → logprob: -11.878667831420898
    8. 'disc' → logprob: -12.503667831420898
    9. '	' → logprob: -14.753667831420898
    10. '           ' → logprob: -15.378667831420898

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056123025715351105
    2. 'dis' → logprob: -2.9311230182647705
    3. '   ' → logprob: -7.05612325668335
    4. ' discs' → logprob: -8.556122779846191
    5. '```' → logprob: -9.931122779846191
    6. '        
' → logprob: -9.931122779846191
    7. '	dis' → logprob: -10.181122779846191
    8. 'disc' → logprob: -10.306122779846191
    9. ' dis' → logprob: -11.931122779846191
    10. 'd' → logprob: -13.181122779846191

Token 959: ' discs' (ID: 89635)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.02354523539543152
    2. '       ' → logprob: -3.773545265197754
    3. ' discs' → logprob: -8.648545265197754
    4. '   ' → logprob: -9.523545265197754
    5. '```' → logprob: -10.648545265197754
    6. 'disc' → logprob: -10.773545265197754
    7. '	dis' → logprob: -12.898545265197754
    8. ' dis' → logprob: -13.273545265197754
    9. '        
' → logprob: -13.773545265197754
    10. '``' → logprob: -14.898545265197754

Token 960: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602708250284195
    2. '=' → logprob: -1.9102708101272583
    3. '   ' → logprob: -10.160270690917969
    4. '=[]' → logprob: -11.910270690917969
    5. '    ' → logprob: -14.910270690917969
    6. '[]' → logprob: -15.785270690917969
    7. ')' → logprob: -15.785270690917969
    8. '=[]
' → logprob: -15.910270690917969
    9. ' ' → logprob: -16.28527069091797
    10. 's' → logprob: -16.41027069091797

Token 961: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001934469910338521
    2. '[]
' → logprob: -6.25193452835083
    3. ' []' → logprob: -12.251934051513672
    4. '[' → logprob: -14.001934051513672
    5. '[]

' → logprob: -15.501934051513672
    6. '[]}' → logprob: -17.751934051513672
    7. '[])' → logprob: -18.501934051513672
    8. ' []
' → logprob: -18.876934051513672
    9. '[]"' → logprob: -19.001934051513672
    10. '[]>' → logprob: -19.376934051513672

Token 962: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.456358823925257e-05
    2. 'for' → logprob: -9.750064849853516
    3. '   ' → logprob: -12.500064849853516
    4. ' for' → logprob: -13.250064849853516
    5. '```' → logprob: -14.750064849853516
    6. '           ' → logprob: -16.250064849853516
    7. '	   ' → logprob: -16.250064849853516
    8. '	for' → logprob: -16.875064849853516
    9. '<|end|>' → logprob: -16.875064849853516
    10. '        
' → logprob: -17.125064849853516

Token 963: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03917353227734566
    2. '       ' → logprob: -3.2891736030578613
    3. ' for' → logprob: -6.789173603057861
    4. '   ' → logprob: -12.539173126220703
    5. '	for' → logprob: -13.414173126220703
    6. '        
' → logprob: -15.539173126220703
    7. ' ' → logprob: -15.664173126220703
    8. '```' → logprob: -16.789173126220703
    9. '           ' → logprob: -17.414173126220703
    10. 'while' → logprob: -17.664173126220703

Token 964: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016224568244069815
    2. ' _' → logprob: -6.751622676849365
    3. '_i' → logprob: -7.751622676849365
    4. 'i' → logprob: -11.251622200012207
    5. '_line' → logprob: -12.751622200012207
    6. ' i' → logprob: -12.876622200012207
    7. '_in' → logprob: -13.376622200012207
    8. '_range' → logprob: -14.251622200012207
    9. '_k' → logprob: -14.626622200012207
    10. '_j' → logprob: -15.001622200012207

Token 965: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028907619416713715
    2. ' in' → logprob: -4.278907775878906
    3. 'in' → logprob: -4.653907775878906
    4. ' range' → logprob: -5.278907775878906
    5. '_' → logprob: -11.778907775878906
    6. '_range' → logprob: -12.903907775878906
    7. ' ' → logprob: -13.528907775878906
    8. '	range' → logprob: -14.528907775878906
    9. 'i' → logprob: -14.778907775878906
    10. '(range' → logprob: -15.028907775878906

Token 966: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '	range' → logprob: -20.12520408630371
    4. '(range' → logprob: -20.62520408630371
    5. '_range' → logprob: -22.62520408630371
    6. 'Range' → logprob: -22.75020408630371
    7. 'in' → logprob: -23.12520408630371
    8. '[' → logprob: -23.87520408630371
    9. '.range' → logprob: -23.87520408630371
    10. 'rang' → logprob: -24.25020408630371

Token 967: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38764363527297974
    2. '(n' → logprob: -1.137643575668335
    3. ' n' → logprob: -7.637643814086914
    4. 'range' → logprob: -8.262643814086914
    5. '(' → logprob: -11.262643814086914
    6. ' range' → logprob: -11.762643814086914
    7. '_n' → logprob: -12.512643814086914
    8. ' (' → logprob: -12.887643814086914
    9. '(range' → logprob: -13.262643814086914
    10. '	n' → logprob: -13.637643814086914

Token 968: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04431698098778725
    2. '):' → logprob: -3.1693170070648193
    3. '       ' → logprob: -6.91931676864624
    4. '           ' → logprob: -9.419317245483398
    5. '   ' → logprob: -9.544317245483398
    6. '):
' → logprob: -9.544317245483398
    7. ':
' → logprob: -10.294317245483398
    8. ':' → logprob: -10.294317245483398
    9. '():
' → logprob: -11.044317245483398
    10. ' ):
' → logprob: -12.419317245483398

Token 969: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004897649050690234
    2. ' line' → logprob: -8.750490188598633
    3. '       ' → logprob: -9.125490188598633
    4. 'line' → logprob: -9.250490188598633
    5. '   ' → logprob: -10.125490188598633
    6. '	       ' → logprob: -10.500490188598633
    7. '```' → logprob: -11.000490188598633
    8. '            
' → logprob: -11.250490188598633
    9. '
' → logprob: -12.250490188598633
    10. '#line' → logprob: -12.500490188598633

Token 970: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.5796014666557312
    2. ' x' → logprob: -0.8296014666557312
    3. ' parts' → logprob: -6.454601287841797
    4. '           ' → logprob: -6.704601287841797
    5. ' line' → logprob: -7.454601287841797
    6. 'line' → logprob: -8.579601287841797
    7. 'parts' → logprob: -9.579601287841797
    8. '	x' → logprob: -11.829601287841797
    9. 'xy' → logprob: -13.079601287841797
    10. '   ' → logprob: -13.329601287841797

Token 971: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023693470284342766
    2. ',y' → logprob: -6.377369403839111
    3. ' ,' → logprob: -7.377369403839111
    4. '_,' → logprob: -10.502368927001953
    5. 's' → logprob: -12.252368927001953
    6. 'y' → logprob: -12.627368927001953
    7. ',s' → logprob: -13.627368927001953
    8. ',line' → logprob: -13.752368927001953
    9. ' y' → logprob: -14.502368927001953
    10. ',p' → logprob: -14.627368927001953

Token 972: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006715370807796717
    2. ' y' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.256715774536133
    4. 'space' → logprob: -18.881715774536133
    5. '=' → logprob: -19.131715774536133
    6. '	y' → logprob: -19.506715774536133
    7. '            
' → logprob: -19.631715774536133
    8. ''y' → logprob: -20.006715774536133
    9. ',y' → logprob: -20.131715774536133
    10. '‘y' → logprob: -20.131715774536133

Token 973: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.363617962459102e-05
    2. ' ,' → logprob: -9.500083923339844
    3. ',r' → logprob: -12.500083923339844
    4. 'r' → logprob: -13.125083923339844
    5. '=' → logprob: -13.750083923339844
    6. 's' → logprob: -14.000083923339844
    7. '_,' → logprob: -15.000083923339844
    8. ',c' → logprob: -15.500083923339844
    9. 'c' → logprob: -16.250083923339844
    10. ',w' → logprob: -16.500083923339844

Token 974: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06196891888976097
    2. ' r' → logprob: -2.8119688034057617
    3. ',' → logprob: -14.561968803405762
    4. ' ' → logprob: -14.811968803405762
    5. '	r' → logprob: -15.061968803405762
    6. ',r' → logprob: -16.936969757080078
    7. 'c' → logprob: -16.936969757080078
    8. 'radius' → logprob: -17.061969757080078
    9. ' ' → logprob: -17.186969757080078
    10. '  ' → logprob: -17.811969757080078

Token 975: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -11.62501335144043
    3. ',c' → logprob: -12.62501335144043
    4. 'c' → logprob: -14.37501335144043
    5. '_,' → logprob: -16.50001335144043
    6. 's' → logprob: -17.00001335144043
    7. '‌,' → logprob: -18.12501335144043
    8. '=' → logprob: -18.25001335144043
    9. ',w' → logprob: -18.50001335144043
    10. ',s' → logprob: -18.87501335144043

Token 976: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759445428848267
    2. ' c' → logprob: -0.8259445428848267
    3. ' ' → logprob: -12.700944900512695
    4. '	c' → logprob: -14.325944900512695
    5. ' ' → logprob: -15.075944900512695
    6. ',' → logprob: -15.200944900512695
    7. '_c' → logprob: -15.825944900512695
    8. ' s' → logprob: -16.075944900512695
    9. ')c' → logprob: -16.450944900512695
    10. '  ' → logprob: -16.575944900512695

Token 977: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192973017692566
    2. '=' → logprob: -1.501929759979248
    3. '=line' → logprob: -14.87692928314209
    4. ' ' → logprob: -15.87692928314209
    5. ',' → logprob: -16.501930236816406
    6. '=input' → logprob: -17.126930236816406
    7. '=int' → logprob: -17.126930236816406
    8. '＝' → logprob: -17.376930236816406
    9. '   ' → logprob: -17.376930236816406
    10. '    ' → logprob: -17.501930236816406

Token 978: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0232679583132267
    2. ' map' → logprob: -3.773267984390259
    3. 'input' → logprob: -10.77326774597168
    4. '[' → logprob: -14.52326774597168
    5. ' input' → logprob: -15.14826774597168
    6. 'list' → logprob: -15.14826774597168
    7. '(map' → logprob: -15.14826774597168
    8. '	map' → logprob: -15.52326774597168
    9. '   ' → logprob: -17.77326774597168
    10. ' ' → logprob: -17.77326774597168

Token 979: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0038934226613491774
    2. 'int' → logprob: -5.7538933753967285
    3. '(float' → logprob: -7.2538933753967285
    4. 'float' → logprob: -11.878893852233887
    5. '(' → logprob: -13.878893852233887
    6. '[int' → logprob: -15.753893852233887
    7. '(str' → logprob: -17.37889289855957
    8. ' int' → logprob: -17.87889289855957
    9. '=int' → logprob: -18.00389289855957
    10. '<int' → logprob: -18.50389289855957

Token 980: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.034208957105875015
    2. 'input' → logprob: -3.6592090129852295
    3. ',input' → logprob: -5.15920877456665
    4. ')' → logprob: -6.40920877456665
    5. ',' → logprob: -8.659209251403809
    6. ' input' → logprob: -8.909209251403809
    7. '(' → logprob: -9.159209251403809
    8. '=input' → logprob: -10.284209251403809
    9. ' (' → logprob: -11.159209251403809
    10. '[input' → logprob: -11.909209251403809

Token 981: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003357006062287837
    2. ' input' → logprob: -8.000335693359375
    3. '(input' → logprob: -15.625335693359375
    4. ')' → logprob: -18.125335693359375
    5. '   ' → logprob: -18.750335693359375
    6. '[input' → logprob: -19.250335693359375
    7. '	input' → logprob: -19.375335693359375
    8. ' ' → logprob: -19.625335693359375
    9. '           ' → logprob: -20.250335693359375
    10. ',input' → logprob: -20.250335693359375

Token 982: '_lines' (ID: 42980)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03056141547858715
    2. '(input' → logprob: -3.5305614471435547
    3. ' input' → logprob: -7.530561447143555
    4. ')' → logprob: -9.030561447143555
    5. ',input' → logprob: -9.655561447143555
    6. ',' → logprob: -10.530561447143555
    7. '(' → logprob: -10.655561447143555
    8. '[input' → logprob: -11.405561447143555
    9. '=input' → logprob: -11.905561447143555
    10. ' (' → logprob: -12.280561447143555

Token 983: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. 'idx' → logprob: -17.625
    4. '[index' → logprob: -17.875
    5. '[id' → logprob: -17.875
    6. '[input' → logprob: -18.0
    7. '[ind' → logprob: -18.375
    8. '[
' → logprob: -18.5
    9. ' [' → logprob: -18.75
    10. '   ' → logprob: -18.875

Token 984: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.013692806474864483
    2. '.strip' → logprob: -4.513692855834961
    3. '[idx' → logprob: -6.638692855834961
    4. '().' → logprob: -7.013692855834961
    5. '.split' → logprob: -7.888692855834961
    6. ' ].' → logprob: -10.638692855834961
    7. '   ' → logprob: -11.888692855834961
    8. '(idx' → logprob: -12.138692855834961
    9. ' .' → logprob: -12.263692855834961
    10. ']' → logprob: -12.763692855834961

Token 985: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.001929228543303907
    2. 'split' → logprob: -6.25192928314209
    3. '.strip' → logprob: -15.00192928314209
    4. ' strip' → logprob: -15.50192928314209
    5. '(strip' → logprob: -18.251928329467773
    6. 'rstrip' → logprob: -20.126928329467773
    7. '_strip' → logprob: -20.626928329467773
    8. '-strip' → logprob: -21.501928329467773
    9. '```' → logprob: -21.876928329467773
    10. 'trim' → logprob: -22.251928329467773

Token 986: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.00000286102295
    3. '.split' → logprob: -16.250001907348633
    4. '(' → logprob: -18.250001907348633
    5. ' ().' → logprob: -19.750001907348633
    6. '()
' → logprob: -20.000001907348633
    7. '().__' → logprob: -20.625001907348633
    8. '()[' → logprob: -20.750001907348633
    9. 'split' → logprob: -20.875001907348633
    10. '   ' → logprob: -21.000001907348633

Token 987: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.125
    3. '.split' → logprob: -17.375
    4. '(split' → logprob: -17.625
    5. 'spl' → logprob: -19.625
    6. '_split' → logprob: -20.0
    7. 'rstrip' → logprob: -20.5
    8. 'strip' → logprob: -21.625
    9. 'plit' → logprob: -24.25
    10. 'replace' → logprob: -24.25

Token 988: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005437589716166258
    2. '()' → logprob: -5.25543737411499
    3. '('' → logprob: -8.880437850952148
    4. ')' → logprob: -10.505437850952148
    5. '())
' → logprob: -10.880437850952148
    6. '(' → logprob: -11.255437850952148
    7. '()))' → logprob: -13.130437850952148
    8. ' ())' → logprob: -13.630437850952148
    9. '(','' → logprob: -14.005437850952148
    10. '()
' → logprob: -14.380437850952148

Token 989: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005064461147412658
    2. 'idx' → logprob: -8.000506401062012
    3. '       ' → logprob: -9.375506401062012
    4. '               ' → logprob: -10.125506401062012
    5. '<|end|>' → logprob: -11.750506401062012
    6. '   ' → logprob: -11.875506401062012
    7. '```' → logprob: -12.500506401062012
    8. '	       ' → logprob: -12.500506401062012
    9. '<|end|>' → logprob: -12.500506401062012
    10. '                   ' → logprob: -12.625506401062012

Token 990: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.001636739238165319
    2. '           ' → logprob: -6.876636505126953
    3. '       ' → logprob: -7.876636505126953
    4. 'dis' → logprob: -8.751636505126953
    5. 'disc' → logprob: -10.251636505126953
    6. ' idx' → logprob: -11.376636505126953
    7. '	idx' → logprob: -11.501636505126953
    8. '   ' → logprob: -12.126636505126953
    9. ' discs' → logprob: -13.126636505126953
    10. '               ' → logprob: -14.376636505126953

Token 991: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04860304668545723
    2. ' +=' → logprob: -3.048603057861328
    3. ']+=' → logprob: -11.798603057861328
    4. '   ' → logprob: -12.298603057861328
    5. '=' → logprob: -13.548603057861328
    6. '+' → logprob: -14.548603057861328
    7. '```' → logprob: -14.673603057861328
    8. '++' → logprob: -14.673603057861328
    9. '    ' → logprob: -15.423603057861328
    10. ')' → logprob: -15.923603057861328

Token 992: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.250001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '
' → logprob: -21.625001907348633
    6. '１' → logprob: -22.375001907348633
    7. '       ' → logprob: -23.375001907348633
    8. '۱' → logprob: -23.625001907348633
    9. '           ' → logprob: -23.875001907348633
    10. '``' → logprob: -24.000001907348633

Token 993: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -20.375
    4. '１' → logprob: -22.0
    5. '   ' → logprob: -22.0
    6. '
' → logprob: -22.75
    7. '(' → logprob: -23.375
    8. '۱' → logprob: -23.625
    9. '+' → logprob: -23.75
    10. '=' → logprob: -24.0625

Token 994: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30331331491470337
    2. '           ' → logprob: -1.4283132553100586
    3. 'dis' → logprob: -3.9283132553100586
    4. 'disc' → logprob: -6.928313255310059
    5. '   ' → logprob: -7.303313255310059
    6. ' discs' → logprob: -7.803313255310059
    7. '	dis' → logprob: -9.553313255310059
    8. ' disc' → logprob: -9.803313255310059
    9. '_disc' → logprob: -10.303313255310059
    10. '```' → logprob: -12.303313255310059

Token 995: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013023867271840572
    2. '           ' → logprob: -4.513023853302002
    3. 'dis' → logprob: -6.888023853302002
    4. 'disc' → logprob: -7.388023853302002
    5. '   ' → logprob: -8.13802433013916
    6. ' disc' → logprob: -10.76302433013916
    7. '	dis' → logprob: -11.38802433013916
    8. '_disc' → logprob: -12.13802433013916
    9. '```' → logprob: -13.26302433013916
    10. ' discs' → logprob: -14.01302433013916

Token 996: ' discs' (ID: 89635)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.0008614383405074477
    2. 'disc' → logprob: -7.250861644744873
    3. '       ' → logprob: -9.250861167907715
    4. '           ' → logprob: -10.000861167907715
    5. ' discs' → logprob: -11.625861167907715
    6. 'd' → logprob: -14.000861167907715
    7. '   ' → logprob: -15.125861167907715
    8. ' disc' → logprob: -17.25086212158203
    9. '	dis' → logprob: -17.87586212158203
    10. 'di' → logprob: -18.00086212158203

Token 997: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004081959370523691
    2. '.' → logprob: -5.504081726074219
    3. '.app' → logprob: -13.129081726074219
    4. 'append' → logprob: -14.254081726074219
    5. ' .' → logprob: -14.504081726074219
    6. '.Append' → logprob: -16.25408172607422
    7. '.ap' → logprob: -16.37908172607422
    8. ').' → logprob: -17.12908172607422
    9. '.push' → logprob: -17.12908172607422
    10. '.extend' → logprob: -17.37908172607422

Token 998: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. 'Disc' → logprob: -16.25
    3. '(
' → logprob: -16.375
    4. '(D' → logprob: -16.625
    5. ' (' → logprob: -18.75
    6. '((' → logprob: -19.0
    7. '(

' → logprob: -21.75
    8. '(`' → logprob: -22.125
    9. ' Disc' → logprob: -22.125
    10. '	' → logprob: -22.5

Token 999: 'Disc' (ID: 68922)
  Prédit: 'Disc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Disc' → logprob: -1.9361264946837764e-07
    2. ' Disc' → logprob: -16.25
    3. 'Disk' → logprob: -18.375
    4. '   ' → logprob: -19.125
    5. 'Dis' → logprob: -19.5
    6. 'Discard' → logprob: -21.0
    7. '_disc' → logprob: -22.25
    8. 'Disp' → logprob: -22.375
    9. 'disc' → logprob: -22.75
    10. '	' → logprob: -22.75

Token 1000: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.186122770188376e-05
    2. '(' → logprob: -9.500091552734375
    3. 'x' → logprob: -11.000091552734375
    4. '(
' → logprob: -15.125091552734375
    5. ')(' → logprob: -18.750091552734375
    6. ')' → logprob: -18.750091552734375
    7. ')x' → logprob: -19.000091552734375
    8. ' (' → logprob: -19.500091552734375
    9. ' x' → logprob: -19.625091552734375
    10. '(

' → logprob: -19.750091552734375

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005100222188048065
    2. ' ,' → logprob: -7.750510215759277
    3. ',x' → logprob: -10.750510215759277
    4. '<|end|>' → logprob: -11.125510215759277
    5. ',y' → logprob: -11.375510215759277
    6. '=' → logprob: -11.375510215759277
    7. ')' → logprob: -11.875510215759277
    8. ',
' → logprob: -12.125510215759277
    9. '),' → logprob: -13.250510215759277
    10. '[' → logprob: -13.750510215759277

Token 1002: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015023599844425917
    2. ' y' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.501502990722656
    4. ' ' → logprob: -19.626502990722656
    5. '    ' → logprob: -19.751502990722656
    6. '	y' → logprob: -19.751502990722656
    7. '
' → logprob: -20.126502990722656
    8. '       ' → logprob: -20.376502990722656
    9. '  ' → logprob: -20.501502990722656
    10. '           ' → logprob: -21.251502990722656

Token 1003: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013738969573751092
    2. ' ,' → logprob: -9.000137329101562
    3. ',y' → logprob: -12.125137329101562
    4. ',
' → logprob: -12.750137329101562
    5. ',x' → logprob: -13.000137329101562
    6. '),' → logprob: -13.875137329101562
    7. ',r' → logprob: -13.875137329101562
    8. '           ' → logprob: -14.625137329101562
    9. ')' → logprob: -15.125137329101562
    10. '       ' → logprob: -16.125137329101562

Token 1004: ' r' (ID: 428)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008754138834774494
    2. 'r' → logprob: -4.758754253387451
    3. ' y' → logprob: -8.883753776550293
    4. '   ' → logprob: -14.633753776550293
    5. '
' → logprob: -15.133753776550293
    6. ' r' → logprob: -15.633753776550293
    7. ' ' → logprob: -16.88375473022461
    8. '       ' → logprob: -17.00875473022461
    9. '
' → logprob: -17.63375473022461
    10. '  ' → logprob: -17.75875473022461

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.776898251497187e-05
    2. ' ,' → logprob: -9.8750581741333
    3. ',y' → logprob: -12.5000581741333
    4. ',r' → logprob: -14.2500581741333
    5. ',
' → logprob: -14.3750581741333
    6. ',x' → logprob: -14.7500581741333
    7. ',c' → logprob: -15.3750581741333
    8. ',p' → logprob: -15.7500581741333
    9. '           ' → logprob: -16.375057220458984
    10. '),' → logprob: -16.875057220458984

Token 1006: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004307884373702109
    2. ' c' → logprob: -7.750430583953857
    3. ')c' → logprob: -16.625431060791016
    4. '   ' → logprob: -18.375431060791016
    5. '	c' → logprob: -18.875431060791016
    6. '
' → logprob: -19.250431060791016
    7. '           ' → logprob: -20.250431060791016
    8. '       ' → logprob: -20.250431060791016
    9. ' ' → logprob: -20.625431060791016
    10. '```' → logprob: -20.750431060791016

Token 1007: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3871490955352783
    2. ')' → logprob: -1.1371490955352783
    3. '))
' → logprob: -8.5121488571167
    4. '       ' → logprob: -9.8871488571167
    5. ')
' → logprob: -10.7621488571167
    6. '           ' → logprob: -13.1371488571167
    7. ')))' → logprob: -13.2621488571167
    8. '   ' → logprob: -14.0121488571167
    9. '               ' → logprob: -16.012149810791016
    10. ' )' → logprob: -16.137149810791016

Token 1008: '        
' (ID: 3564)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.22307927906513214
    2. '   ' → logprob: -1.9730793237686157
    3. '       ' → logprob: -2.848079204559326
    4. ' removed' → logprob: -6.348079204559326
    5. '```' → logprob: -7.348079204559326
    6. 'free' → logprob: -8.598079681396484
    7. 'result' → logprob: -8.848079681396484
    8. 'results' → logprob: -9.223079681396484
    9. '_removed' → logprob: -9.973079681396484
    10. '
' → logprob: -10.973079681396484

Token 1009: '       ' (ID: 309)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.005664614494889975
    2. '   ' → logprob: -5.255664825439453
    3. ' removed' → logprob: -8.130664825439453
    4. 'free' → logprob: -9.880664825439453
    5. '```' → logprob: -10.505664825439453
    6. 'result' → logprob: -10.880664825439453
    7. '       ' → logprob: -11.380664825439453
    8. 'rem' → logprob: -11.505664825439453
    9. '_removed' → logprob: -11.880664825439453
    10. 'remove' → logprob: -12.630664825439453

Token 1010: ' #' (ID: 1069)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -5.080963092041202e-06
    2. ' removed' → logprob: -12.250004768371582
    3. '```' → logprob: -15.500004768371582
    4. '       ' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.7500057220459
    6. '``' → logprob: -19.0000057220459
    7. 'print' → logprob: -19.5000057220459
    8. '
' → logprob: -20.1250057220459
    9. 'rem' → logprob: -20.1250057220459
    10. '_removed' → logprob: -20.5000057220459

Token 1011: ' liste' (ID: 31719)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.00043138445471413434
    2. ' removed' → logprob: -7.750431537628174
    3. '       ' → logprob: -14.250431060791016
    4. '   ' → logprob: -17.250431060791016
    5. 'result' → logprob: -18.625431060791016
    6. '```' → logprob: -19.000431060791016
    7. '#' → logprob: -19.125431060791016
    8. 'deleted' → logprob: -19.375431060791016
    9. 'rem' → logprob: -19.375431060791016
    10. 'print' → logprob: -20.000431060791016

Token 1012: ' bool' (ID: 3792)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.004598634317517281
    2. '       ' → logprob: -6.004598617553711
    3. '_removed' → logprob: -6.754598617553711
    4. ' removed' → logprob: -7.504598617553711
    5. '[' → logprob: -8.379598617553711
    6. '   ' → logprob: -9.129598617553711
    7. '           ' → logprob: -10.504598617553711
    8. '```' → logprob: -11.504598617553711
    9. 'rem' → logprob: -11.754598617553711
    10. '(' → logprob: -12.379598617553711

Token 1013: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7490452527999878
    2. '[' → logprob: -1.3740452527999878
    3. '_removed' → logprob: -2.2490453720092773
    4. '   ' → logprob: -3.1240453720092773
    5. 'e' → logprob: -3.3740453720092773
    6. 'ean' → logprob: -3.7490453720092773
    7. 'removed' → logprob: -3.8740453720092773
    8. '[]' → logprob: -5.124045372009277
    9. 'ée' → logprob: -5.374045372009277
    10. '```' → logprob: -5.374045372009277

Token 1014: 'enne' (ID: 17721)
  Prédit: 'enne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enne' → logprob: -0.0004329341172706336
    2. 'nne' → logprob: -8.750432968139648
    3. 'ene' → logprob: -9.000432968139648
    4. 'anne' → logprob: -9.375432968139648
    5. 'e' → logprob: -10.875432968139648
    6. '[' → logprob: -11.000432968139648
    7. 'ne' → logprob: -11.500432968139648
    8. 'ane' → logprob: -12.375432968139648
    9. 'na' → logprob: -12.375432968139648
    10. 'ennes' → logprob: -12.625432968139648

Token 1015: ' qui' (ID: 2780)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.00196836213581264
    2. ' removed' → logprob: -6.2519683837890625
    3. '       ' → logprob: -11.001968383789062
    4. '[' → logprob: -11.626968383789062
    5. '_removed' → logprob: -12.251968383789062
    6. '(' → logprob: -12.626968383789062
    7. '   ' → logprob: -13.001968383789062
    8. '           ' → logprob: -13.751968383789062
    9. '```' → logprob: -13.751968383789062
    10. ' =' → logprob: -14.376968383789062

Token 1016: ' indique' (ID: 97324)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.3642424941062927
    2. 'removed' → logprob: -1.6142425537109375
    3. ' =' → logprob: -3.8642425537109375
    4. '[' → logprob: -3.9892425537109375
    5. 'rep' → logprob: -4.1142425537109375
    6. 'rem' → logprob: -4.1142425537109375
    7. ' indique' → logprob: -4.6142425537109375
    8. '=' → logprob: -4.8642425537109375
    9. 's' → logprob: -5.3642425537109375
    10. '[]' → logprob: -6.1142425537109375

Token 1017: ' si' (ID: 1784)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22709842026233673
    2. 'True' → logprob: -2.4770984649658203
    3. ' que' → logprob: -4.22709846496582
    4. '   ' → logprob: -4.22709846496582
    5. '(True' → logprob: -4.22709846496582
    6. 'False' → logprob: -4.47709846496582
    7. '       ' → logprob: -4.72709846496582
    8. '[len' → logprob: -4.72709846496582
    9. '[n' → logprob: -4.85209846496582
    10. '(False' → logprob: -5.22709846496582

Token 1018: ' le' (ID: 505)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.08726135641336441
    2. 'dis' → logprob: -2.962261438369751
    3. ' removed' → logprob: -3.462261438369751
    4. '   ' → logprob: -8.587261199951172
    5. 'disc' → logprob: -9.712261199951172
    6. '           ' → logprob: -10.337261199951172
    7. ' discs' → logprob: -10.337261199951172
    8. '       ' → logprob: -10.337261199951172
    9. 'True' → logprob: -10.837261199951172
    10. '```' → logprob: -11.087261199951172

Token 1019: ' disque' (ID: 114222)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.2588890492916107
    2. ' disque' → logprob: -1.508889079093933
    3. 'disc' → logprob: -5.383889198303223
    4. 'disk' → logprob: -6.883889198303223
    5. ' disc' → logprob: -7.008889198303223
    6. ' dis' → logprob: -9.133889198303223
    7. ' disk' → logprob: -9.383889198303223
    8. '```' → logprob: -9.758889198303223
    9. ' disco' → logprob: -10.008889198303223
    10. 'token' → logprob: -10.258889198303223

Token 1020: ' a' (ID: 261)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.2528141736984253
    2. '[' → logprob: -1.8778141736984253
    3. 'est' → logprob: -3.127814292907715
    4. ' est' → logprob: -5.252814292907715
    5. '[i' → logprob: -5.252814292907715
    6. '_removed' → logprob: -5.627814292907715
    7. 's' → logprob: -5.752814292907715
    8. 'rem' → logprob: -6.002814292907715
    9. ' removed' → logprob: -6.127814292907715
    10. ' =' → logprob: -7.002814292907715

Token 1021: ' été' (ID: 9799)
  Prédit: ' been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' been' → logprob: -0.9798704385757446
    2. 'been' → logprob: -1.1048704385757446
    3. ' été' → logprob: -1.8548704385757446
    4. 'été' → logprob: -2.604870319366455
    5. 'True' → logprob: -3.729870319366455
    6. ' True' → logprob: -4.354870319366455
    7. '_' → logprob: -5.354870319366455
    8. '#' → logprob: -5.479870319366455
    9. '```' → logprob: -5.479870319366455
    10. '=True' → logprob: -5.604870319366455

Token 1022: ' retir' (ID: 35638)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.04199427366256714
    2. ' removed' → logprob: -4.041994094848633
    3. 'True' → logprob: -4.416994094848633
    4. ' True' → logprob: -5.291994094848633
    5. 'en' → logprob: -5.416994094848633
    6. 'ret' → logprob: -6.791994094848633
    7. ' retir' → logprob: -7.416994094848633
    8. ' en' → logprob: -8.541994094848633
    9. '   ' → logprob: -10.166994094848633
    10. '_removed' → logprob: -10.416994094848633

Token 1023: 'é' (ID: 377)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021391039714217186
    2. '[e' → logprob: -4.521390914916992
    3. '   ' → logprob: -5.896390914916992
    4. ' ' → logprob: -6.271390914916992
    5. ' [' → logprob: -6.646390914916992
    6. '[]' → logprob: -6.771390914916992
    7. 'é' → logprob: -7.396390914916992
    8. '[i' → logprob: -7.521390914916992
    9. '[:]' → logprob: -8.146390914916992
    10. 'e' → logprob: -8.521390914916992

Token 1024: '
' (ID: 198)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.048866670578718185
    2. ' removed' → logprob: -3.0488667488098145
    3. '       ' → logprob: -8.423866271972656
    4. '
' → logprob: -10.298866271972656
    5. '[' → logprob: -11.423866271972656
    6. '   ' → logprob: -11.798866271972656
    7. ' =' → logprob: -13.048866271972656
    8. '           ' → logprob: -13.673866271972656
    9. '```' → logprob: -13.673866271972656
    10. '_removed' → logprob: -14.423866271972656

Token 1025: '       ' (ID: 309)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.17203710973262787
    2. ' removed' → logprob: -2.422037124633789
    3. '       ' → logprob: -2.672037124633789
    4. '   ' → logprob: -8.547037124633789
    5. '```' → logprob: -12.922037124633789
    6. '_removed' → logprob: -13.922037124633789
    7. '           ' → logprob: -14.047037124633789
    8. '        
' → logprob: -14.047037124633789
    9. '
' → logprob: -15.547037124633789
    10. '     ' → logprob: -15.922037124633789

Token 1026: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' (adapté à ' removed') → logprob: -0.006716317031532526
    2. ' removed' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.25671672821045
    4. '       ' → logprob: -15.38171672821045
    5. '_removed' → logprob: -17.631715774536133
    6. 'remove' → logprob: -17.756715774536133
    7. '```' → logprob: -18.381715774536133
    8. 'deleted' → logprob: -19.006715774536133
    9. 'remaining' → logprob: -19.131715774536133
    10. 'Removed' → logprob: -19.631715774536133

Token 1027: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759440064430237
    2. '=' → logprob: -0.8259440064430237
    3. '=[' → logprob: -13.200943946838379
    4. '[' → logprob: -13.700943946838379
    5. ' =[' → logprob: -13.950943946838379
    6. '   ' → logprob: -14.575943946838379
    7. '=[]' → logprob: -16.200944900512695
    8. ' ' → logprob: -16.950944900512695
    9. '＝' → logprob: -17.075944900512695
    10. '[:]' → logprob: -17.700944900512695

Token 1028: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008739020675420761
    2. ' [' → logprob: -4.758738994598389
    3. '[n' → logprob: -9.008739471435547
    4. '[len' → logprob: -13.383739471435547
    5. '   ' → logprob: -16.133739471435547
    6. '[N' → logprob: -16.383739471435547
    7. ' ' → logprob: -16.633739471435547
    8. '[num' → logprob: -17.008739471435547
    9. '[i' → logprob: -17.508739471435547
    10. '[length' → logprob: -17.508739471435547

Token 1029: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. '(False' → logprob: -20.0
    4. '   ' → logprob: -21.875
    5. '=False' → logprob: -23.75
    6. 'True' → logprob: -23.75
    7. '0' → logprob: -24.625
    8. 'false' → logprob: -24.875
    9. '.False' → logprob: -25.25
    10. '_false' → logprob: -26.125

Token 1030: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06334500759840012
    2. ']*' → logprob: -3.188344955444336
    3. ' for' → logprob: -4.063344955444336
    4. 'for' → logprob: -6.188344955444336
    5. ' ]' → logprob: -7.188344955444336
    6. '   ' → logprob: -9.688344955444336
    7. ']*(' → logprob: -10.188344955444336
    8. ')' → logprob: -11.438344955444336
    9. '	for' → logprob: -11.813344955444336
    10. '       ' → logprob: -12.063344955444336

Token 1031: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. 'len' → logprob: -14.750000953674316
    3. ' n' → logprob: -16.0
    4. '(n' → logprob: -19.375
    5. '   ' → logprob: -20.0
    6. '	n' → logprob: -20.75
    7. '
' → logprob: -22.5
    8. '       ' → logprob: -23.0
    9. '(len' → logprob: -23.25
    10. '```' → logprob: -24.125

Token 1032: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6350688338279724
    2. '
' → logprob: -0.8850688338279724
    3. '<|end|>' → logprob: -3.260068893432617
    4. '        
' → logprob: -4.635068893432617
    5. '   ' → logprob: -5.135068893432617
    6. '    
' → logprob: -6.760068893432617
    7. 'result' → logprob: -7.135068893432617
    8. '<|end|>' → logprob: -7.385068893432617
    9. '  
' → logprob: -8.135068893432617
    10. ')' → logprob: -9.510068893432617

Token 1033: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6722665429115295
    2. '       ' → logprob: -0.7972665429115295
    3. '   ' → logprob: -4.047266483306885
    4. 'score' → logprob: -4.172266483306885
    5. '```' → logprob: -6.172266483306885
    6. ' result' → logprob: -6.297266483306885
    7. '        
' → logprob: -7.047266483306885
    8. '<|end|>' → logprob: -7.797266483306885
    9. '    
' → logprob: -8.672266960144043
    10. '
' → logprob: -8.922266960144043

Token 1034: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14801910519599915
    2. 'print' → logprob: -2.5230190753936768
    3. 'score' → logprob: -3.1480190753936768
    4. '       ' → logprob: -4.648019313812256
    5. ' result' → logprob: -5.523019313812256
    6. 'res' → logprob: -8.148018836975098
    7. 'answer' → logprob: -8.148018836975098
    8. ' print' → logprob: -8.773018836975098
    9. '```' → logprob: -10.148018836975098
    10. ' score' → logprob: -11.273018836975098

Token 1035: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5976369976997375
    2. 'result' → logprob: -0.8476369976997375
    3. 'score' → logprob: -4.097637176513672
    4. '       ' → logprob: -6.097637176513672
    5. 'res' → logprob: -6.597637176513672
    6. ' result' → logprob: -7.347637176513672
    7. ' print' → logprob: -7.847637176513672
    8. 'answer' → logprob: -8.847637176513672
    9. '        
' → logprob: -11.222637176513672
    10. ' score' → logprob: -11.722637176513672

Token 1036: 'er' (ID: 259)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21564070880413055
    2. '       ' → logprob: -2.0906407833099365
    3. 'print' → logprob: -3.4656407833099365
    4. '_result' → logprob: -4.090640544891357
    5. ' result' → logprob: -4.340640544891357
    6. 'score' → logprob: -5.340640544891357
    7. ' =' → logprob: -6.715640544891357
    8. ' print' → logprob: -7.090640544891357
    9. '=' → logprob: -7.840640544891357
    10. 'res' → logprob: -8.090641021728516

Token 1037: ' puis' (ID: 18766)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34794285893440247
    2. 'print' → logprob: -1.34794282913208
    3. ' result' → logprob: -3.97294282913208
    4. 'best' → logprob: -5.34794282913208
    5. ' print' → logprob: -5.59794282913208
    6. 'max' → logprob: -5.97294282913208
    7. 'score' → logprob: -6.47294282913208
    8. ' best' → logprob: -6.97294282913208
    9. '   ' → logprob: -7.09794282913208
    10. 'res' → logprob: -8.097943305969238

Token 1038: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013804152607917786
    2. 'result' → logprob: -4.388803958892822
    3. 'score' → logprob: -7.513803958892822
    4. ' print' → logprob: -7.638803958892822
    5. '       ' → logprob: -9.01380443572998
    6. 'res' → logprob: -9.63880443572998
    7. 'ret' → logprob: -10.63880443572998
    8. '
' → logprob: -10.76380443572998
    9. ' result' → logprob: -11.76380443572998
    10. 'max' → logprob: -11.76380443572998

Token 1039: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11393281817436218
    2. '(max' → logprob: -3.1139328479766846
    3. 'print' → logprob: -3.6139328479766846
    4. ' max' → logprob: -3.6139328479766846
    5. '       ' → logprob: -5.1139326095581055
    6. '   ' → logprob: -6.1139326095581055
    7. 'result' → logprob: -6.9889326095581055
    8. 'best' → logprob: -9.738932609558105
    9. ' print' → logprob: -9.988932609558105
    10. 'score' → logprob: -9.988932609558105

Token 1040: ' résultat' (ID: 62556)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0011021106038242579
    2. 'best' → logprob: -7.251101970672607
    3. ' max' → logprob: -8.251102447509766
    4. 'result' → logprob: -9.376102447509766
    5. 'score' → logprob: -10.501102447509766
    6. 'maximum' → logprob: -11.001102447509766
    7. ' best' → logprob: -13.626102447509766
    8. ' maximum' → logprob: -15.376102447509766
    9. 'me' → logprob: -15.376102447509766
    10. '(max' → logprob: -15.501102447509766

Token 1041: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014735828153789043
    2. 'print' → logprob: -4.389735698699951
    3. ' print' → logprob: -6.389735698699951
    4. 'result' → logprob: -7.764735698699951
    5. ' result' → logprob: -10.13973617553711
    6. '   ' → logprob: -10.38973617553711
    7. '```' → logprob: -10.51473617553711
    8. '
' → logprob: -11.88973617553711
    9. '        
' → logprob: -12.51473617553711
    10. ',' → logprob: -13.26473617553711

Token 1042: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006961400154978037
    2. 'print' → logprob: -5.006961345672607
    3. '```' → logprob: -8.881961822509766
    4. ' print' → logprob: -9.381961822509766
    5. '   ' → logprob: -10.881961822509766
    6. 'result' → logprob: -14.006961822509766
    7. '``' → logprob: -14.256961822509766
    8. '
' → logprob: -14.381961822509766
    9. '        
' → logprob: -14.756961822509766
    10. '           ' → logprob: -14.881961822509766

Token 1043: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00160627078730613
    2. 'result' (adapté à ' result') → logprob: -6.751606464385986
    3. ' print' → logprob: -7.751606464385986
    4. 'score' → logprob: -12.626605987548828
    5. ' result' → logprob: -13.126605987548828
    6. 'res' → logprob: -15.126605987548828
    7. '       ' → logprob: -15.626605987548828
    8. '```' → logprob: -16.001605987548828
    9. '   ' → logprob: -16.626605987548828
    10. '
' → logprob: -18.376605987548828

Token 1044: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142532885074615
    2. '=' → logprob: -1.701425313949585
    3. ')' → logprob: -12.326425552368164
    4. '=int' → logprob: -14.076425552368164
    5. '<|end|>' → logprob: -14.076425552368164
    6. ' ' → logprob: -14.201425552368164
    7. '=result' → logprob: -14.826425552368164
    8. ' +=' → logprob: -15.076425552368164
    9. ' =)' → logprob: -15.076425552368164
    10. 's' → logprob: -15.201425552368164

Token 1045: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002613358374219388
    2. ' max' → logprob: -8.250261306762695
    3. '(max' → logprob: -21.875261306762695
    4. '	max' → logprob: -22.500261306762695
    5. '   ' → logprob: -23.125261306762695
    6. '_max' → logprob: -23.750261306762695
    7. '=max' → logprob: -24.625261306762695
    8. ' ' → logprob: -25.500261306762695
    9. '[max' → logprob: -25.500261306762695
    10. ',max' → logprob: -26.000261306762695

Token 1046: '_removed' (ID: 173812)
  Prédit: '_removed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_removed' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.0
    3. '_remaining' → logprob: -16.0
    4. 'removed' → logprob: -16.625
    5. '_deleted' → logprob: -18.0
    6. '_remove' → logprob: -18.5
    7. 'Removed' → logprob: -18.75
    8. '_added' → logprob: -18.75
    9. '_return' → logprob: -19.5
    10. ' _' → logprob: -19.5

Token 1047: '(dis' (ID: 26948)
  Prédit: '(dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. '(d' → logprob: -15.00000286102295
    4. ' (' → logprob: -15.62500286102295
    5. 'dis' → logprob: -16.000003814697266
    6. '(
' → logprob: -17.250003814697266
    7. '```' → logprob: -17.625003814697266
    8. '(dist' → logprob: -17.750003814697266
    9. '/dis' → logprob: -18.250003814697266
    10. '(div' → logprob: -18.625003814697266

Token 1048: 'cs' (ID: 8102)
  Prédit: '(dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dis' → logprob: -0.6315184831619263
    2. 'cs' → logprob: -0.8815184831619263
    3. 'oved' → logprob: -3.7565183639526367
    4. 'dis' → logprob: -4.506518363952637
    5. 'ds' → logprob: -5.006518363952637
    6. 'ods' → logprob: -5.631518363952637
    7. '(' → logprob: -6.131518363952637
    8. 'ocs' → logprob: -6.631518363952637
    9. 'eds' → logprob: -6.756518363952637
    10. 'ved' → logprob: -7.381518363952637

Token 1049: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035095500061288476
    2. ')' → logprob: -8.000350952148438
    3. ' ,' → logprob: -11.875350952148438
    4. '(' → logprob: -12.500350952148438
    5. ',
' → logprob: -13.000350952148438
    6. '   ' → logprob: -14.125350952148438
    7. '```' → logprob: -14.250350952148438
    8. '[' → logprob: -15.250350952148438
    9. '       ' → logprob: -15.375350952148438
    10. 'removed' → logprob: -16.000350952148438

Token 1050: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.0019286326132714748
    2. ' removed' → logprob: -6.251928806304932
    3. '   ' → logprob: -19.376928329467773
    4. '_removed' → logprob: -19.876928329467773
    5. 'remove' → logprob: -20.376928329467773
    6. 'deleted' → logprob: -21.126928329467773
    7. 'rem' → logprob: -21.751928329467773
    8. 'Removed' → logprob: -22.376928329467773
    9. '```' → logprob: -24.501928329467773
    10. '       ' → logprob: -24.626928329467773

Token 1051: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47453075647354126
    2. ')
' → logprob: -0.9745307564735413
    3. '       ' → logprob: -7.9745306968688965
    4. '   ' → logprob: -9.224531173706055
    5. ')
' → logprob: -12.724531173706055
    6. ' ' → logprob: -13.599531173706055
    7. '()
' → logprob: -13.849531173706055
    8. '[' → logprob: -14.349531173706055
    9. ' )
' → logprob: -14.349531173706055
    10. '  ' → logprob: -14.474531173706055

Token 1052: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049605101346969604
    2. 'print' → logprob: -3.049605131149292
    3. '   ' → logprob: -7.674604892730713
    4. '```' → logprob: -7.799604892730713
    5. '
' → logprob: -9.549605369567871
    6. ' print' → logprob: -9.799605369567871
    7. '        
' → logprob: -11.799605369567871
    8. '``' → logprob: -12.674605369567871
    9. '\' → logprob: -13.049605369567871
    10. '	print' → logprob: -14.174605369567871

Token 1053: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002055096672847867
    2. '       ' → logprob: -6.2520551681518555
    3. ' print' → logprob: -9.002055168151855
    4. '```' → logprob: -13.377055168151855
    5. '   ' → logprob: -13.877055168151855
    6. '
' → logprob: -14.252055168151855
    7. '	print' → logprob: -15.752055168151855
    8. '        
' → logprob: -18.50205421447754
    9. '``' → logprob: -19.12705421447754
    10. '#print' → logprob: -19.25205421447754

Token 1054: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.7120533811976202e-05
    2. 'result' → logprob: -11.000017166137695
    3. '(' → logprob: -15.000017166137695
    4. ' result' → logprob: -19.625017166137695
    5. '=result' → logprob: -20.125017166137695
    6. '(results' → logprob: -20.500017166137695
    7. '(f' → logprob: -20.625017166137695
    8. ' (' → logprob: -21.125017166137695
    9. ',result' → logprob: -21.125017166137695
    10. '[result' → logprob: -21.375017166137695

Token 1055: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. '())' → logprob: -11.00002384185791
    3. '()' → logprob: -12.12502384185791
    4. '(' → logprob: -14.25002384185791
    5. ' )' → logprob: -14.50002384185791
    6. '   ' → logprob: -15.75002384185791
    7. ')`' → logprob: -16.250022888183594
    8. '))' → logprob: -16.500022888183594
    9. ')
' → logprob: -16.625022888183594
    10. '')' → logprob: -17.875022888183594

Token 1056: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004008793330285698
    2. 'main' → logprob: -8.00040054321289
    3. ' if' → logprob: -10.37540054321289
    4. '#' → logprob: -10.75040054321289
    5. '```' → logprob: -11.75040054321289
    6. '
' → logprob: -12.62540054321289
    7. '<|end|>' → logprob: -13.87540054321289
    8. '...' → logprob: -16.00040054321289
    9. '__' → logprob: -16.37540054321289
    10. '    
' → logprob: -16.62540054321289

Token 1057: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018159886822104454
    2. '__' → logprob: -4.018159866333008
    3. '___' → logprob: -12.768159866333008
    4. '_' → logprob: -13.143159866333008
    5. ' ' → logprob: -13.268159866333008
    6. '_name' → logprob: -13.643159866333008
    7. ' ___' → logprob: -14.643159866333008
    8. '﻿' → logprob: -14.893159866333008
    9. '​' → logprob: -14.893159866333008
    10. 'name' → logprob: -15.393159866333008

Token 1058: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020374055951833725
    2. ' ==' → logprob: -5.020373821258545
    3. '.__' → logprob: -5.395373821258545
    4. 'name' → logprob: -5.895373821258545
    5. ' __' → logprob: -5.895373821258545
    6. '_name' → logprob: -7.145373821258545
    7. '.name' → logprob: -7.270373821258545
    8. '==' → logprob: -7.520373821258545
    9. '__.__' → logprob: -7.895373821258545
    10. '__.' → logprob: -8.770374298095703

Token 1059: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011927806917810813
    2. '__.__' → logprob: -9.50011920928955
    3. '==' → logprob: -10.12511920928955
    4. '__.' → logprob: -13.00011920928955
    5. '=="' → logprob: -14.25011920928955
    6. ' ==' → logprob: -15.25011920928955
    7. '___' → logprob: -15.50011920928955
    8. '__('' → logprob: -15.87511920928955
    9. '__["' → logprob: -15.87511920928955
    10. '```' → logprob: -16.000120162963867

Token 1060: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6988102197647095
    2. '__' → logprob: -1.0738102197647095
    3. ' ==' → logprob: -1.9488102197647095
    4. '=="' → logprob: -4.07381010055542
    5. '=='' → logprob: -6.44881010055542
    6. '__.__' → logprob: -10.823810577392578
    7. '===' → logprob: -11.573810577392578
    8. '==
' → logprob: -11.948810577392578
    9. '.__' → logprob: -12.198810577392578
    10. '=' → logprob: -12.198810577392578

Token 1061: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008655819110572338
    2. ''' → logprob: -4.758656024932861
    3. '__' → logprob: -10.133655548095703
    4. ' "__' → logprob: -13.383655548095703
    5. '"name' → logprob: -17.258655548095703
    6. ' '__' → logprob: -17.633655548095703
    7. '"user' → logprob: -17.758655548095703
    8. 'main' → logprob: -18.383655548095703
    9. '"class' → logprob: -18.883655548095703
    10. '("__' → logprob: -19.008655548095703

Token 1062: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007191036129370332
    2. '__' → logprob: -7.25071907043457
    3. 'name' → logprob: -12.37571907043457
    4. '"' → logprob: -12.75071907043457
    5. 'built' → logprob: -14.50071907043457
    6. ' main' → logprob: -14.62571907043457
    7. '_main' → logprob: -14.75071907043457
    8. 'ma' → logprob: -16.62571907043457
    9. '__":
' → logprob: -16.62571907043457
    10. 'm' → logprob: -16.62571907043457

Token 1063: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.00694672204554081
    2. '__' → logprob: -5.006946563720703
    3. '__':
' → logprob: -8.381946563720703
    4. '__.' → logprob: -14.131946563720703
    5. '__["' → logprob: -14.381946563720703
    6. '__.__' → logprob: -14.381946563720703
    7. '__
' → logprob: -15.256946563720703
    8. '_' → logprob: -16.631946563720703
    9. '__",' → logprob: -17.506946563720703
    10. '__
' → logprob: -17.756946563720703

Token 1064: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000954694114625454
    2. ' main' → logprob: -7.125954627990723
    3. '__' → logprob: -9.250954627990723
    4. '	main' → logprob: -10.500954627990723
    5. '   ' → logprob: -10.625954627990723
    6. '_main' → logprob: -13.125954627990723
    7. '(main' → logprob: -15.250954627990723
    8. '```' → logprob: -16.87595558166504
    9. 'run' → logprob: -17.00095558166504
    10. ' __' → logprob: -17.37595558166504

Token 1065: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -20.5
    4. '   ' → logprob: -22.125
    5. '_main' → logprob: -24.5
    6. '.main' → logprob: -26.0
    7. '(main' → logprob: -26.625
    8. 'Main' → logprob: -27.625
    9. '```' → logprob: -28.25
    10. '-main' → logprob: -28.5

Token 1066: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1064
Tokens correctement prédits (1ère position, stricte): 355
Tokens correctement prédits (1ère position, avec adaptation): 386
Tokens correctement prédits (top 10): 777
Précision stricte (1ère position): 33.36%
Précision adaptée (1ère position): 36.28%
Précision (top 10): 73.03%
================================================================================
