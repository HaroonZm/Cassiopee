================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x,y=map(int,input().split())
from math import gcd
g=gcd(x,y)
print(x+y-g+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',y' (ID: 16103)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008624859154224396
    2. ' ' → logprob: -4.758625030517578
    3. '10' → logprob: -12.633625030517578
    4. '1' → logprob: -12.633625030517578
    5. '(' → logprob: -13.258625030517578
    6. 'x' → logprob: -14.133625030517578
    7. '5' → logprob: -15.133625030517578
    8. ' (' → logprob: -15.133625030517578
    9. '00' → logprob: -15.633625030517578
    10. '[' → logprob: -16.008625030517578

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009521735832095146
    2. '(lambda' → logprob: -5.259521961212158
    3. '<|end|>' → logprob: -6.384521961212158
    4. '```' → logprob: -6.509521961212158
    5. '(x' → logprob: -8.884521484375
    6. '(user' → logprob: -8.884521484375
    7. ')' → logprob: -9.134521484375
    8. '(int' → logprob: -9.509521484375
    9. '<|end|>' → logprob: -9.884521484375
    10. '\(' → logprob: -10.009521484375

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03871960565447807
    2. 'input' → logprob: -3.913719654083252
    3. ')' → logprob: -4.288719654083252
    4. ',input' → logprob: -6.163719654083252
    5. '(' → logprob: -6.663719654083252
    6. ' input' → logprob: -8.038719177246094
    7. ',' → logprob: -8.538719177246094
    8. '=input' → logprob: -9.038719177246094
    9. '<input' → logprob: -9.538719177246094
    10. '),' → logprob: -10.038719177246094

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3103104531764984
    2. '()' → logprob: -1.8103104829788208
    3. '(' → logprob: -2.8103103637695312
    4. ')' → logprob: -4.560310363769531
    5. '());' → logprob: -5.060310363769531
    6. '(()' → logprob: -5.435310363769531
    7. '();)' → logprob: -5.560310363769531
    8. '('' → logprob: -5.810310363769531
    9. '(""))' → logprob: -6.435310363769531
    10. '().' → logprob: -6.560310363769531

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010545044642640278
    2. 'strip' → logprob: -9.375105857849121
    3. ' split' → logprob: -11.250105857849121
    4. '(split' → logprob: -12.750105857849121
    5. 'rstrip' → logprob: -12.875105857849121
    6. ')' → logprob: -13.250105857849121
    7. 'spl' → logprob: -16.250104904174805
    8. 'startswith' → logprob: -16.750104904174805
    9. 'read' → logprob: -17.000104904174805
    10. '_split' → logprob: -17.000104904174805

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14018946886062622
    2. '())' → logprob: -2.1401894092559814
    3. '))' → logprob: -4.3901896476745605
    4. '()' → logprob: -7.8901896476745605
    5. '`)' → logprob: -8.765189170837402
    6. '()))' → logprob: -8.890189170837402
    7. ')`' → logprob: -10.515189170837402
    8. '(' → logprob: -11.015189170837402
    9. ' ())' → logprob: -11.765189170837402
    10. '```' → logprob: -11.765189170837402

Token 9: 'from' (ID: 2845)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20041559636592865
    2. ',' → logprob: -2.82541561126709
    3. '#' → logprob: -3.32541561126709
    4. '*' → logprob: -3.82541561126709
    5. '+
' → logprob: -4.07541561126709
    6. 'if' → logprob: -4.70041561126709
    7. '\n' → logprob: -4.95041561126709
    8. 'x' → logprob: -4.95041561126709
    9. '
' → logprob: -5.32541561126709
    10. ')' → logprob: -5.70041561126709

Token 10: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.00609931256622076
    2. ' collections' → logprob: -5.506099224090576
    3. ' sys' → logprob: -6.381099224090576
    4. 'math' → logprob: -8.631099700927734
    5. ' itertools' → logprob: -9.131099700927734
    6. 'collections' → logprob: -11.256099700927734
    7. ' sklearn' → logprob: -11.881099700927734
    8. ' sym' → logprob: -12.131099700927734
    9. 'sys' → logprob: -12.631099700927734
    10. ' random' → logprob: -12.881099700927734

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014239545911550522
    2. 'import' → logprob: -4.264239311218262
    3. ' ' → logprob: -10.264239311218262
    4. '	import' → logprob: -10.764239311218262
    5. ' sqrt' → logprob: -11.889239311218262
    6. '.sqrt' → logprob: -12.264239311218262
    7. ' importar' → logprob: -13.139239311218262
    8. ' im' → logprob: -13.889239311218262
    9. ' imports' → logprob: -13.889239311218262
    10. '.' → logprob: -13.889239311218262

Token 12: ' gcd' (ID: 106918)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.428078830242157
    2. ' sqrt' → logprob: -1.9280788898468018
    3. ' gcd' → logprob: -1.9280788898468018
    4. 's' → logprob: -3.8030788898468018
    5. ' factorial' → logprob: -3.8030788898468018
    6. 'g' → logprob: -5.178078651428223
    7. 'factor' → logprob: -6.303078651428223
    8. 'sin' → logprob: -6.678078651428223
    9. 'pow' → logprob: -6.928078651428223
    10. 'atan' → logprob: -7.053078651428223

Token 13: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49209359288215637
    2. 'x' → logprob: -1.992093563079834
    3. '()' → logprob: -2.492093563079834
    4. '(x' → logprob: -3.242093563079834
    5. '(a' → logprob: -3.492093563079834
    6. 'a' → logprob: -3.992093563079834
    7. ',' → logprob: -3.992093563079834
    8. ')' → logprob: -3.992093563079834
    9. 'print' → logprob: -4.867093563079834
    10. '(
' → logprob: -4.867093563079834

Token 14: 'g' (ID: 70)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13296793401241302
    2. 'n' → logprob: -3.507967948913574
    3. 'g' → logprob: -3.632967948913574
    4. 'a' → logprob: -3.757967948913574
    5. 'z' → logprob: -4.382967948913574
    6. 'if' → logprob: -4.757967948913574
    7. ',' → logprob: -5.757967948913574
    8. 'x' → logprob: -6.007967948913574
    9. 'l' → logprob: -6.132967948913574
    10. 'result' → logprob: -6.257967948913574

Token 15: '=g' (ID: 90890)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.03804768621921539
    2. 'c' → logprob: -3.2880477905273438
    3. 'cdn' → logprob: -12.538047790527344
    4. 'cdf' → logprob: -13.038047790527344
    5. 'cdr' → logprob: -15.288047790527344
    6. '_cd' → logprob: -16.663047790527344
    7. '	cd' → logprob: -16.788047790527344
    8. '	c' → logprob: -17.038047790527344
    9. 'cdc' → logprob: -17.038047790527344
    10. 'cwd' → logprob: -17.538047790527344

Token 16: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.2603901015827432e-05
    2. 'c' → logprob: -11.500022888183594
    3. 'cdf' → logprob: -11.875022888183594
    4. 'cdn' → logprob: -12.375022888183594
    5. '_cd' → logprob: -14.875022888183594
    6. '	cd' → logprob: -15.750022888183594
    7. 'cwd' → logprob: -15.875022888183594
    8. 'g' → logprob: -16.250022888183594
    9. '(cd' → logprob: -16.250022888183594
    10. '.cd' → logprob: -16.250022888183594

Token 17: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2521686851978302
    2. '(' → logprob: -1.5021686553955078
    3. '(g' → logprob: -8.752168655395508
    4. '(
' → logprob: -10.752168655395508
    5. 'x' → logprob: -11.127168655395508
    6. '(a' → logprob: -11.252168655395508
    7. '((' → logprob: -11.502168655395508
    8. '(y' → logprob: -12.377168655395508
    9. '(s' → logprob: -12.627168655395508
    10. '(int' → logprob: -13.002168655395508

Token 18: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1004989743232727
    2. ',y' → logprob: -2.350498914718628
    3. ' ,' → logprob: -8.975499153137207
    4. ',g' → logprob: -8.975499153137207
    5. ',x' → logprob: -11.475499153137207
    6. 'y' → logprob: -11.600499153137207
    7. ',)' → logprob: -12.100499153137207
    8. ',s' → logprob: -13.475499153137207
    9. ')' → logprob: -13.600499153137207
    10. ',w' → logprob: -13.850499153137207

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. '))' → logprob: -11.750014305114746
    3. ' )' → logprob: -12.500014305114746
    4. ')
' → logprob: -13.875014305114746
    5. '`)' → logprob: -14.750014305114746
    6. '(' → logprob: -15.375014305114746
    7. '')' → logprob: -15.625014305114746
    8. '()' → logprob: -15.750014305114746
    9. '),' → logprob: -15.875014305114746
    10. ',' → logprob: -15.875014305114746

Token 20: 'print' (ID: 1598)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6262019872665405
    2. 'print' → logprob: -1.0012019872665405
    3. '/' → logprob: -3.12620210647583
    4. '\n' → logprob: -4.25120210647583
    5. '*' → logprob: -4.87620210647583
    6. 'n' → logprob: -5.00120210647583
    7. ',' → logprob: -5.12620210647583
    8. 'if' → logprob: -5.50120210647583
    9. '\' → logprob: -6.12620210647583
    10. '/n' → logprob: -6.50120210647583

Token 21: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5439020991325378
    2. '(x' → logprob: -1.0439021587371826
    3. '(g' → logprob: -2.7939021587371826
    4. '((' → logprob: -5.1689019203186035
    5. '(a' → logprob: -8.418902397155762
    6. '('' → logprob: -9.043902397155762
    7. '(s' → logprob: -9.793902397155762
    8. '(abs' → logprob: -9.918902397155762
    9. '(f' → logprob: -10.293902397155762
    10. '("("' → logprob: -10.668902397155762

Token 22: '+y' (ID: 102753)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.09146562963724136
    2. ' //' → logprob: -2.841465711593628
    3. ')' → logprob: -3.841465711593628
    4. ',' → logprob: -5.466465473175049
    5. '%' → logprob: -6.966465473175049
    6. '*' → logprob: -7.841465473175049
    7. ',//' → logprob: -7.966465473175049
    8. '```' → logprob: -8.091465950012207
    9. '`' → logprob: -8.466465950012207
    10. ')//' → logprob: -8.591465950012207

Token 23: '-g' (ID: 6559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31914830207824707
    2. '-' → logprob: -1.694148302078247
    3. '-g' → logprob: -2.444148302078247
    4. ' -' → logprob: -6.444148063659668
    5. '//' → logprob: -7.944148063659668
    6. 'g' → logprob: -8.194148063659668
    7. '-)' → logprob: -9.069148063659668
    8. '-x' → logprob: -9.819148063659668
    9. '```' → logprob: -9.819148063659668
    10. '))' → logprob: -10.194148063659668

Token 24: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019586095586419106
    2. '))' → logprob: -6.251958847045898
    3. '`)' → logprob: -11.501958847045898
    4. '*' → logprob: -11.626958847045898
    5. '*)' → logprob: -12.501958847045898
    6. ' )' → logprob: -13.376958847045898
    7. '')' → logprob: -14.001958847045898
    8. ')))' → logprob: -14.001958847045898
    9. ')")' → logprob: -14.001958847045898
    10. ')`' → logprob: -14.251958847045898

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010050622513517737
    2. '0' → logprob: -8.001005172729492
    3. ' ' → logprob: -8.001005172729492
    4. 'g' → logprob: -9.251005172729492
    5. '")' → logprob: -9.376005172729492
    6. ')' → logprob: -9.501005172729492
    7. '2' → logprob: -10.376005172729492
    8. 'x' → logprob: -11.376005172729492
    9. '')' → logprob: -11.626005172729492
    10. 'y' → logprob: -12.251005172729492

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '))' → logprob: -14.125001907348633
    3. ')`' → logprob: -15.000001907348633
    4. ' )' → logprob: -15.500001907348633
    5. ')
' → logprob: -15.875001907348633
    6. '```' → logprob: -15.875001907348633
    7. '`)' → logprob: -16.500001907348633
    8. '')' → logprob: -17.125001907348633
    9. ')")' → logprob: -18.000001907348633
    10. '),' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 24
Tokens correctement prédits (1ère position, stricte): 7
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 29.17%
Précision adaptée (1ère position): 29.17%
Précision (top 10): 70.83%
================================================================================
