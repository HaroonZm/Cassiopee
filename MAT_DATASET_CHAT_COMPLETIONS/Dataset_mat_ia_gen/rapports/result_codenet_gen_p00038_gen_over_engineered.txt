================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter
from typing import List, Dict, Tuple, Callable, Optional

class Card:
    """Représente une carte de poker avec une valeur numérique."""
    def __init__(self, value: int):
        if not (1 <= value <= 13):
            raise ValueError("La valeur de la carte doit être entre 1 et 13 inclus.")
        self.value = value

    def __repr__(self):
        return f"Card({self.value})"

class Hand:
    """Représente une main de poker de 5 cartes."""
    def __init__(self, cards: List[Card]):
        if len(cards) != 5:
            raise ValueError("Une main doit contenir exactement 5 cartes.")
        self.cards = cards
        self.values = sorted(card.value for card in cards)
        self.counts = Counter(self.values)

    def is_straight(self) -> bool:
        # Cas normal (suite classique)
        sorted_values = sorted(set(self.values))
        if len(sorted_values) != 5:
            return False
        # note: les valeurs sont 1..13 avec 1 = As
        # On considère deux possibilités pour l'as dans la suite:
        # A 2 3 4 5 ou 10 J Q K A (où A est 1)
        # Donc:
        # 1) vérifier si max-min=4 et que les valeurs sont consécutives
        if sorted_values[-1] - sorted_values[0] == 4:
            return True
        # 2) vérifier si c'est la suite A,10,11,12,13 (A à la fin)
        if sorted_values == [1,10,11,12,13]:
            return True
        return False

    def classify(self) -> str:
        """Détermine le rang de la main selon les règles données."""
        count_values = list(self.counts.values())
        unique_vals = len(self.counts)

        # Vérifier Four of a kind
        if 4 in count_values:
            return "four card"
        # Full house
        if 3 in count_values and 2 in count_values:
            return "full house"
        # Straight
        if self.is_straight():
            return "straight"
        # Three card
        if 3 in count_values:
            return "three card"
        # Two pair
        if count_values.count(2) == 2:
            return "two pair"
        # One pair
        if 2 in count_values:
            return "one pair"
        # Aucun rôle
        return "null"

class PokerHandParser:
    """Parser statique pour transformer une ligne d'entrée en main de poker."""
    @staticmethod
    def parse_line(line: str) -> Hand:
        parts = line.strip().split(",")
        if len(parts) != 5:
            raise ValueError("Chaque main doit contenir 5 cartes.")
        cards = [Card(int(x)) for x in parts]
        return Hand(cards)

class PokerEvaluator:
    """Classe d'évaluation des mains, anticipant extension future."""
    def __init__(self, hands: List[Hand]):
        self.hands = hands

    def evaluate(self) -> List[str]:
        results = []
        for hand in self.hands:
            results.append(hand.classify())
        return results

def main():
    import sys
    lines = []
    for line in sys.stdin:
        if not line.strip():
            continue
        lines.append(line.strip())
    hands = [PokerHandParser.parse_line(ln) for ln in lines]
    evaluator = PokerEvaluator(hands)
    results = evaluator.evaluate()
    for res in results:
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41563940048217773
    2. 'deque' → logprob: -1.7906394004821777
    3. ' abc' → logprob: -2.6656394004821777
    4. ' defaultdict' → logprob: -2.7906394004821777
    5. 'default' → logprob: -3.6656394004821777
    6. 'Counter' → logprob: -5.165639400482178
    7. ' deque' → logprob: -5.790639400482178
    8. ' Counter' → logprob: -5.915639400482178
    9. '```' → logprob: -6.040639400482178
    10. 'named' → logprob: -6.540639400482178

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.542423165636137e-05
    2. '\(' → logprob: -10.000085830688477
    3. '.' → logprob: -10.875085830688477
    4. '(
' → logprob: -12.625085830688477
    5. '\' → logprob: -12.750085830688477
    6. ' (' → logprob: -12.875085830688477
    7. 'a' → logprob: -13.125085830688477
    8. '()' → logprob: -13.250085830688477
    9. 'newline' → logprob: -13.625085830688477
    10. '```' → logprob: -13.750085830688477

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007156368810683489
    2. '(
' → logprob: -6.3821563720703125
    3. '\n' → logprob: -6.7571563720703125
    4. '.' → logprob: -7.5071563720703125
    5. '\' → logprob: -7.5071563720703125
    6. 'a' → logprob: -7.7571563720703125
    7. 'newline' → logprob: -7.7571563720703125
    8. 'import' → logprob: -8.007156372070312
    9. '\(' → logprob: -8.257156372070312
    10. ',' → logprob: -8.507156372070312

Token 6: ' typing' (ID: 34152)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.38516074419021606
    2. ' collections' → logprob: -2.2601606845855713
    3. ' math' → logprob: -2.5101606845855713
    4. ' typing' → logprob: -2.7601606845855713
    5. ' os' → logprob: -3.7601606845855713
    6. ' ' → logprob: -4.13516092300415
    7. 'collections' → logprob: -4.76016092300415
    8. ' sys' → logprob: -5.01016092300415
    9. ' re' → logprob: -5.38516092300415
    10. 'math' → logprob: -6.63516092300415

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5733199119567871
    2. 'import' → logprob: -0.9483199119567871
    3. '.' → logprob: -3.948319911956787
    4. '```' → logprob: -4.198319911956787
    5. '_' → logprob: -5.323319911956787
    6. '_import' → logprob: -5.573319911956787
    7. '[' → logprob: -6.573319911956787
    8. '.import' → logprob: -6.573319911956787
    9. '<|end|>' → logprob: -7.448319911956787
    10. '._' → logprob: -7.698319911956787

Token 8: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4465317130088806
    2. ' List' → logprob: -1.0715317726135254
    3. 'Counter' → logprob: -4.571531772613525
    4. 'Any' → logprob: -6.196531772613525
    5. 'Dict' → logprob: -6.196531772613525
    6. 'Iterable' → logprob: -6.696531772613525
    7. ' Counter' → logprob: -6.821531772613525
    8. ' Dict' → logprob: -8.196531295776367
    9. ' Any' → logprob: -8.446531295776367
    10. 'Optional' → logprob: -9.571531295776367

Token 9: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5157032608985901
    2. '```' → logprob: -1.3907032012939453
    3. '
' → logprob: -2.2657032012939453
    4. '\n' → logprob: -4.015703201293945
    5. '\' → logprob: -4.515703201293945
    6. '

' → logprob: -4.890703201293945
    7. '
' → logprob: -6.140703201293945
    8. 'import' → logprob: -6.265703201293945
    9. '``' → logprob: -6.390703201293945
    10. 'class' → logprob: -6.390703201293945

Token 10: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.7587082982063293
    2. 'Tuple' → logprob: -1.1337082386016846
    3. 'Optional' → logprob: -2.3837082386016846
    4. 'Iterable' → logprob: -2.8837082386016846
    5. ' Dict' → logprob: -3.8837082386016846
    6. 'Counter' → logprob: -4.508708477020264
    7. ' Tuple' → logprob: -5.133708477020264
    8. ' Optional' → logprob: -5.258708477020264
    9. 'Any' → logprob: -5.508708477020264
    10. 'Set' → logprob: -5.633708477020264

Token 11: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3443273901939392
    2. '```' → logprob: -1.844327449798584
    3. '
' → logprob: -2.344327449798584
    4. '

' → logprob: -3.844327449798584
    5. 'class' → logprob: -5.594327449798584
    6. '``' → logprob: -5.969327449798584
    7. '\n' → logprob: -6.094327449798584
    8. '\' → logprob: -6.219327449798584
    9. ',' → logprob: -6.344327449798584
    10. '
' → logprob: -7.469327449798584

Token 12: ' Tuple' (ID: 50841)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -1.2454910278320312
    2. 'Iterable' → logprob: -1.6204910278320312
    3. ' Union' → logprob: -1.9954910278320312
    4. 'Union' → logprob: -2.3704910278320312
    5. 'Tuple' → logprob: -2.3704910278320312
    6. 'Set' → logprob: -2.9954910278320312
    7. ' defaultdict' → logprob: -3.1204910278320312
    8. ' Any' → logprob: -3.4954910278320312
    9. 'Optional' → logprob: -4.120491027832031
    10. ' Tuple' → logprob: -4.745491027832031

Token 13: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11211324483156204
    2. '```' → logprob: -2.4871132373809814
    3. 'class' → logprob: -4.2371134757995605
    4. '\n' → logprob: -5.9871134757995605
    5. '
' → logprob: -6.2371134757995605
    6. '\' → logprob: -6.6121134757995605
    7. '``' → logprob: -7.2371134757995605
    8. 'de' → logprob: -7.6121134757995605
    9. '`' → logprob: -8.237112998962402
    10. 'd' → logprob: -8.362112998962402

Token 14: ' Callable' (ID: 94560)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.1979806423187256
    2. 'Any' → logprob: -1.3229806423187256
    3. 'Iterable' → logprob: -2.0729806423187256
    4. 'Union' → logprob: -2.1979806423187256
    5. 'Optional' → logprob: -2.4479806423187256
    6. ' Union' → logprob: -3.1979806423187256
    7. 'Default' → logprob: -3.5729806423187256
    8. ' Optional' → logprob: -4.572980880737305
    9. ' Any' → logprob: -4.947980880737305
    10. ' Set' → logprob: -5.197980880737305

Token 15: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06352389603853226
    2. '```' → logprob: -3.563524007797241
    3. '\n' → logprob: -4.438523769378662
    4. '\' → logprob: -4.563523769378662
    5. '
' → logprob: -5.188523769378662
    6. '(
' → logprob: -6.813523769378662
    7. '(' → logprob: -7.563523769378662
    8. 'import' → logprob: -7.563523769378662
    9. '``' → logprob: -7.813523769378662
    10. 'class' → logprob: -7.938523769378662

Token 16: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.598618745803833
    2. ' Any' → logprob: -1.973618745803833
    3. 'Any' → logprob: -2.223618745803833
    4. 'Optional' → logprob: -2.473618745803833
    5. ' Union' → logprob: -2.973618745803833
    6. 'Iterable' → logprob: -3.098618745803833
    7. ' Iterable' → logprob: -4.098618507385254
    8. 'Union' → logprob: -5.598618507385254
    9. ' Set' → logprob: -7.348618507385254
    10. 'Set' → logprob: -7.473618507385254

Token 17: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.218059241771698
    2. '```' → logprob: -1.9680593013763428
    3. 'class' → logprob: -3.4680593013763428
    4. '\n' → logprob: -4.718059062957764
    5. '
' → logprob: -5.093059062957764
    6. '\' → logprob: -5.843059062957764
    7. 'import' → logprob: -6.343059062957764
    8. '``' → logprob: -6.468059062957764
    9. 'd' → logprob: -7.218059062957764
    10. '`' → logprob: -7.468059062957764

Token 18: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006939613725990057
    2. '```' → logprob: -5.25693941116333
    3. 'class' → logprob: -7.13193941116333
    4. 'd' → logprob: -7.25693941116333
    5. 'de' → logprob: -8.756939888000488
    6. '`' → logprob: -10.756939888000488
    7. '``' → logprob: -11.256939888000488
    8. '\' → logprob: -12.631939888000488
    9. 'import' → logprob: -13.756939888000488
    10. 'a' → logprob: -14.256939888000488

Token 19: ' Card' (ID: 9958)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.42100122570991516
    2. ' Token' → logprob: -2.2960011959075928
    3. ' ' → logprob: -2.4210011959075928
    4. ' Data' → logprob: -3.1710011959075928
    5. ' My' → logprob: -3.2960011959075928
    6. ' Frequency' → logprob: -3.6710011959075928
    7. ' Mult' → logprob: -4.046001434326172
    8. ' Count' → logprob: -5.421001434326172
    9. ' Space' → logprob: -5.546001434326172
    10. ' Parser' → logprob: -5.796001434326172

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001149867384810932
    2. '(' → logprob: -10.000115394592285
    3. ' :' → logprob: -10.625115394592285
    4. ':**' → logprob: -11.125115394592285
    5. '():' → logprob: -11.625115394592285
    6. '):' → logprob: -12.500115394592285
    7. 's' → logprob: -12.750115394592285
    8. ':
' → logprob: -12.750115394592285
    9. '<|end|>' → logprob: -13.000115394592285
    10. '(Card' → logprob: -14.000115394592285

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.603943407535553
    2. '   ' → logprob: -0.853943407535553
    3. '(' → logprob: -3.978943347930908
    4. '<|end|>' → logprob: -5.603943347930908
    5. '```' → logprob: -6.603943347930908
    6. ' :' → logprob: -7.228943347930908
    7. 'def' → logprob: -7.353943347930908
    8. ' ' → logprob: -7.353943347930908
    9. '    ' → logprob: -7.603943347930908
    10. '(object' → logprob: -7.978943347930908

Token 22: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.030429376289248466
    2. 'def' → logprob: -3.9054293632507324
    3. '   ' → logprob: -4.905429363250732
    4. ' ' → logprob: -7.030429363250732
    5. 'class' → logprob: -7.405429363250732
    6. '    ' → logprob: -7.780429363250732
    7. ' pass' → logprob: -8.53042984008789
    8. '<|end|>' → logprob: -9.78042984008789
    9. '```' → logprob: -9.90542984008789
    10. ' """' → logprob: -9.90542984008789

Token 23: 'Re' (ID: 720)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.153967261314392
    2. ' Represents' → logprob: -1.278967261314392
    3. 'A' → logprob: -2.1539673805236816
    4. '"""' → logprob: -2.1539673805236816
    5. ' """' → logprob: -2.6539673805236816
    6. 'Rep' → logprob: -2.6539673805236816
    7. ' represents' → logprob: -5.028967380523682
    8. ' Card' → logprob: -5.153967380523682
    9. 'Playing' → logprob: -5.403967380523682
    10. ' Playing' → logprob: -5.653967380523682

Token 24: 'prés' (ID: 61592)
  Prédit: 'presentation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'presentation' → logprob: -0.4238552749156952
    2. 'p' → logprob: -1.7988553047180176
    3. 'present' → logprob: -1.7988553047180176
    4. 'pr' → logprob: -4.548855304718018
    5. 'pres' → logprob: -6.048855304718018
    6. 'source' → logprob: -7.923855304718018
    7. 's' → logprob: -8.17385482788086
    8. 'pre' → logprob: -8.42385482788086
    9. 'resents' → logprob: -8.79885482788086
    10. 'f' → logprob: -9.29885482788086

Token 25: 'ente' (ID: 1576)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.363283395767212
    2. 'és' → logprob: -1.363283395767212
    3. 'ente' → logprob: -1.363283395767212
    4. 'es' → logprob: -2.738283395767212
    5. 'sent' → logprob: -3.238283395767212
    6. 'é' → logprob: -3.363283395767212
    7. 'entation' → logprob: -3.488283395767212
    8. 'esent' → logprob: -4.738283157348633
    9. 'ent' → logprob: -4.863283157348633
    10. 'én' → logprob: -4.988283157348633

Token 26: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0918465405702591
    2. 'une' → logprob: -2.466846466064453
    3. ' un' → logprob: -6.466846466064453
    4. ' a' → logprob: -7.216846466064453
    5. ' ' → logprob: -8.091846466064453
    6. ' ' → logprob: -9.341846466064453
    7. 'un' → logprob: -9.591846466064453
    8. 'a' → logprob: -9.966846466064453
    9. ' la' → logprob: -10.716846466064453
    10. ' una' → logprob: -10.716846466064453

Token 27: ' carte' (ID: 30276)
  Prédit: ' carte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carte' → logprob: -0.018360406160354614
    2. 'car' → logprob: -4.143360614776611
    3. ' ' → logprob: -6.393360614776611
    4. ' card' → logprob: -9.018360137939453
    5. ' ' → logprob: -9.268360137939453
    6. 'c' → logprob: -9.393360137939453
    7. 'card' → logprob: -9.768360137939453
    8. '   ' → logprob: -10.018360137939453
    9. ' Carte' → logprob: -10.268360137939453
    10. 'Carte' → logprob: -10.268360137939453

Token 28: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47068846225738525
    2. '   ' → logprob: -1.9706884622573853
    3. '"""' → logprob: -2.5956883430480957
    4. '`' → logprob: -3.7206883430480957
    5. 's' → logprob: -3.9706883430480957
    6. '\' → logprob: -4.095688343048096
    7. '```' → logprob: -4.595688343048096
    8. '"' → logprob: -4.845688343048096
    9. ' de' → logprob: -4.845688343048096
    10. ' :' → logprob: -4.845688343048096

Token 29: ' poker' (ID: 15422)
  Prédit: 'tar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tar' → logprob: -0.7981055378913879
    2. ' jeu' → logprob: -1.2981054782867432
    3. ' tarot' → logprob: -1.6731054782867432
    4. 'jeu' → logprob: -3.048105478286743
    5. '```' → logprob: -4.423105716705322
    6. 'jou' → logprob: -5.423105716705322
    7. ' ' → logprob: -5.548105716705322
    8. 't' → logprob: -5.673105716705322
    9. ' Tarot' → logprob: -5.798105716705322
    10. ' tar' → logprob: -6.048105716705322

Token 30: ' avec' (ID: 3937)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.0583442747592926
    2. '```' → logprob: -3.5583443641662598
    3. '   ' → logprob: -4.68334436416626
    4. '.' → logprob: -5.05834436416626
    5. '."""' → logprob: -5.80834436416626
    6. ' """' → logprob: -6.05834436416626
    7. '\n' → logprob: -6.05834436416626
    8. '"""
' → logprob: -6.55834436416626
    9. '
' → logprob: -7.68334436416626
    10. 'class' → logprob: -7.80834436416626

Token 31: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2229557037353516
    2. 'une' → logprob: -1.3479557037353516
    3. ' une' → logprob: -1.4729557037353516
    4. 'un' → logprob: -1.7229557037353516
    5. 's' → logprob: -3.8479557037353516
    6. '   ' → logprob: -5.722955703735352
    7. 'son' → logprob: -5.722955703735352
    8. 'val' → logprob: -5.847955703735352
    9. ' at' → logprob: -7.347955703735352
    10. ' rank' → logprob: -7.472955703735352

Token 32: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.019203681498765945
    2. ' valeur' → logprob: -4.3942036628723145
    3. ' couleur' → logprob: -6.0192036628723145
    4. 'cou' → logprob: -6.7692036628723145
    5. 'value' → logprob: -7.0192036628723145
    6. 's' → logprob: -7.2692036628723145
    7. 'rank' → logprob: -7.6442036628723145
    8. 'suite' → logprob: -8.394204139709473
    9. 'rang' → logprob: -8.644204139709473
    10. 'nom' → logprob: -8.644204139709473

Token 33: ' numérique' (ID: 73962)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.16991549730300903
    2. '   ' → logprob: -2.5449154376983643
    3. ' ' → logprob: -2.9199154376983643
    4. ',' → logprob: -5.419915676116943
    5. 'et' → logprob: -5.669915676116943
    6. ' (' → logprob: -5.794915676116943
    7. 's' → logprob: -6.044915676116943
    8. ' and' → logprob: -6.544915676116943
    9. ')' → logprob: -6.794915676116943
    10. '`' → logprob: -6.919915676116943

Token 34: '."""
' (ID: 33044)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7354275584220886
    2. ',' → logprob: -1.6104276180267334
    3. '   ' → logprob: -2.3604276180267334
    4. ' ' → logprob: -3.1104276180267334
    5. '"""' → logprob: -3.1104276180267334
    6. '.' → logprob: -3.3604276180267334
    7. ')' → logprob: -3.6104276180267334
    8. ' (' → logprob: -4.110427379608154
    9. ' """' → logprob: -4.235427379608154
    10. '```' → logprob: -4.485427379608154

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14483268558979034
    2. 'def' → logprob: -3.1448326110839844
    3. '    
' → logprob: -3.2698326110839844
    4. ' 
' → logprob: -4.019832611083984
    5. ' def' → logprob: -4.144832611083984
    6. '\n' → logprob: -5.519832611083984
    7. '   
' → logprob: -5.519832611083984
    8. ' ' → logprob: -6.019832611083984
    9. '```' → logprob: -6.144832611083984
    10. '    ' → logprob: -6.519832611083984

Token 36: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3509240746498108
    2. 'def' (adapté à ' def') → logprob: -2.350924015045166
    3. ' def' → logprob: -2.475924015045166
    4. '    
' → logprob: -2.725924015045166
    5. ' 
' → logprob: -3.475924015045166
    6. '```' → logprob: -5.100924015045166
    7. 'class' → logprob: -5.850924015045166
    8. '
' → logprob: -5.975924015045166
    9. '   
' → logprob: -6.100924015045166
    10. '     
' → logprob: -6.725924015045166

Token 37: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.16561897099018097
    2. ' __' → logprob: -2.290618896484375
    3. '__' → logprob: -3.790618896484375
    4. ' init' → logprob: -4.290618896484375
    5. ' def' → logprob: -4.915618896484375
    6. 'def' → logprob: -5.665618896484375
    7. '_init' → logprob: -6.165618896484375
    8. 'int' → logprob: -7.540618896484375
    9. 'n' → logprob: -7.665618896484375
    10. ' ' → logprob: -8.290618896484375

Token 38: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -17.625
    3. 'ini' → logprob: -18.0
    4. ' init' → logprob: -18.25
    5. '_init' → logprob: -20.0
    6. 'in' → logprob: -21.75
    7. '```' → logprob: -21.875
    8. '	init' → logprob: -22.25
    9. 'inite' → logprob: -22.25
    10. 'eq' → logprob: -23.0

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06605785340070724
    2. '__' → logprob: -2.9410579204559326
    3. '(' → logprob: -5.3160576820373535
    4. '__(
' → logprob: -5.6910576820373535
    5. '<|end|>' → logprob: -7.0660576820373535
    6. '(self' → logprob: -7.1910576820373535
    7. '__(*' → logprob: -8.191058158874512
    8. '__((' → logprob: -8.316058158874512
    9. '__('' → logprob: -8.691058158874512
    10. ' (' → logprob: -8.816058158874512

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.1888679839321412e-05
    2. ' self' → logprob: -10.750021934509277
    3. 'value' → logprob: -15.500021934509277
    4. '(self' → logprob: -17.12502098083496
    5. '_self' → logprob: -18.12502098083496
    6. ' ' → logprob: -18.37502098083496
    7. '	self' → logprob: -18.37502098083496
    8. '
' → logprob: -18.62502098083496
    9. '   ' → logprob: -19.37502098083496
    10. '0' → logprob: -19.37502098083496

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5681912899017334
    2. ' ,' → logprob: -0.9431912899017334
    3. 'self' → logprob: -3.6931912899017334
    4. ' self' → logprob: -4.4431915283203125
    5. ' ' → logprob: -5.9431915283203125
    6. '<|end|>' → logprob: -6.8181915283203125
    7. '(self' → logprob: -6.9431915283203125
    8. '<|end|>' → logprob: -7.1931915283203125
    9. ')' → logprob: -7.3181915283203125
    10. ' (' → logprob: -7.6931915283203125

Token 42: ' value' (ID: 1432)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6426020264625549
    2. 'self' → logprob: -1.0176019668579102
    3. ' value' → logprob: -3.01760196685791
    4. 'value' → logprob: -3.01760196685791
    5. ' valeur' → logprob: -4.64260196685791
    6. 'val' → logprob: -5.51760196685791
    7. ' rank' → logprob: -7.39260196685791
    8. 'rank' → logprob: -8.26760196685791
    9. ' val' → logprob: -8.39260196685791
    10. 's' → logprob: -12.39260196685791

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016264738515019417
    2. '):' → logprob: -4.516264915466309
    3. '=' → logprob: -5.891264915466309
    4. ',' → logprob: -7.016264915466309
    5. ')' → logprob: -7.266264915466309
    6. ':int' → logprob: -7.516264915466309
    7. ' :' → logprob: -8.391264915466309
    8. ' ):' → logprob: -10.266264915466309
    9. '=None' → logprob: -11.391264915466309
    10. '=int' → logprob: -11.891264915466309

Token 44: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.17995962500572205
    2. 'int' → logprob: -1.8049596548080444
    3. ' str' → logprob: -8.804959297180176
    4. ' ' → logprob: -10.179959297180176
    5. ')' → logprob: -11.679959297180176
    6. 'str' → logprob: -11.929959297180176
    7. ' Optional' → logprob: -12.679959297180176
    8. '[int' → logprob: -12.679959297180176
    9. ' )' → logprob: -13.554959297180176
    10. ' ' → logprob: -14.054959297180176

Token 45: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.162690207362175
    2. '):' → logprob: -1.9126901626586914
    3. ' ,' → logprob: -6.787690162658691
    4. ')' → logprob: -6.912690162658691
    5. ' ):' → logprob: -8.162690162658691
    6. ':' → logprob: -10.912690162658691
    7. '   ' → logprob: -11.537690162658691
    8. '=' → logprob: -11.662690162658691
    9. ' )' → logprob: -12.412690162658691
    10. ' ' → logprob: -12.412690162658691

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4865066707134247
    2. ' self' → logprob: -1.361506700515747
    3. 'self' → logprob: -2.486506700515747
    4. ' ' → logprob: -3.111506700515747
    5. ')' → logprob: -8.361506462097168
    6. '    ' → logprob: -8.486506462097168
    7. ' ' → logprob: -8.611506462097168
    8. '        ' → logprob: -8.611506462097168
    9. ',' → logprob: -9.861506462097168
    10. '    ' → logprob: -9.986506462097168

Token 47: ' if' (ID: 538)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47777971625328064
    2. 'self' → logprob: -0.977779746055603
    3. '       ' → logprob: -5.602779865264893
    4. ' ' → logprob: -12.477779388427734
    5. '        ' → logprob: -13.477779388427734
    6. '	self' → logprob: -13.602779388427734
    7. ' ' → logprob: -13.602779388427734
    8. '   ' → logprob: -15.602779388427734
    9. 'super' → logprob: -16.102779388427734
    10. '_self' → logprob: -16.727779388427734

Token 48: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4194907546043396
    2. ' value' → logprob: -1.1694908142089844
    3. 'value' → logprob: -3.6694908142089844
    4. ' ' → logprob: -5.169490814208984
    5. 'not' → logprob: -7.169490814208984
    6. '1' → logprob: -9.544490814208984
    7. '0' → logprob: -10.169490814208984
    8. ' isinstance' → logprob: -10.919490814208984
    9. '(value' → logprob: -12.669490814208984
    10. '	value' → logprob: -13.169490814208984

Token 49: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1782182455062866
    2. ' ' → logprob: -1.4282182455062866
    3. ' isinstance' → logprob: -1.6782182455062866
    4. '(' → logprob: -1.8032182455062866
    5. '1' → logprob: -2.303218364715576
    6. '0' → logprob: -6.928218364715576
    7. 'is' → logprob: -10.428217887878418
    8. ' ' → logprob: -12.178217887878418
    9. '(is' → logprob: -12.428217887878418
    10. '```' → logprob: -13.553217887878418

Token 50: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5645074844360352
    2. '1' → logprob: -1.1895074844360352
    3. ' ' → logprob: -2.064507484436035
    4. '0' → logprob: -9.314507484436035
    5. ')' → logprob: -12.564507484436035
    6. ' isinstance' → logprob: -12.564507484436035
    7. 'is' → logprob: -12.814507484436035
    8. '   ' → logprob: -13.064507484436035
    9. '```' → logprob: -13.439507484436035
    10. '(' → logprob: -13.689507484436035

Token 51: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0012861868599429727
    2. '<=' → logprob: -6.751286029815674
    3. ' ' → logprob: -9.751286506652832
    4. '<|end|>' → logprob: -10.626286506652832
    5. '0' → logprob: -11.126286506652832
    6. ' ≤' → logprob: -12.501286506652832
    7. ',' → logprob: -13.001286506652832
    8. '1' → logprob: -13.126286506652832
    9. ' <=",' → logprob: -13.501286506652832
    10. '<|end|>' → logprob: -13.876286506652832

Token 52: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.04858771339058876
    2. ' value' → logprob: -3.0485877990722656
    3. ' ' → logprob: -16.673587799072266
    4. ')value' → logprob: -16.673587799072266
    5. 'self' → logprob: -16.798587799072266
    6. '	value' → logprob: -17.048587799072266
    7. ' ' → logprob: -17.173587799072266
    8. 'alue' → logprob: -17.423587799072266
    9. '```' → logprob: -18.298587799072266
    10. '"value' → logprob: -18.298587799072266

Token 53: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.033647309988737106
    2. '<=' → logprob: -3.408647298812866
    3. ' ' → logprob: -15.033647537231445
    4. '<|end|>' → logprob: -15.283647537231445
    5. '<|end|>' → logprob: -15.658647537231445
    6. ' <<=' → logprob: -16.033647537231445
    7. 'value' → logprob: -16.283647537231445
    8. ' <=",' → logprob: -16.408647537231445
    9. ')<=' → logprob: -16.408647537231445
    10. 'le' → logprob: -16.658647537231445

Token 54: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.28206855058670044
    2. ' ' → logprob: -1.4070684909820557
    3. '52' → logprob: -7.657068729400635
    4. '14' → logprob: -8.407068252563477
    5. '54' → logprob: -8.657068252563477
    6. '53' → logprob: -10.157068252563477
    7. '10' → logprob: -13.844568252563477
    8. '15' → logprob: -14.032068252563477
    9. '49' → logprob: -14.157068252563477
    10. '1' → logprob: -14.219568252563477

Token 55: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.00036514020757749677
    2. ' ' → logprob: -8.875365257263184
    3. '14' → logprob: -9.000365257263184
    4. '52' → logprob: -9.250365257263184
    5. '54' → logprob: -12.500365257263184
    6. '53' → logprob: -14.000365257263184
    7. '10' → logprob: -15.250365257263184
    8. '1' → logprob: -15.625365257263184
    9. '   ' → logprob: -16.000364303588867
    10. '100' → logprob: -16.125364303588867

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03869644179940224
    2. '):
' → logprob: -3.538696527481079
    3. ' ):' → logprob: -4.9136962890625
    4. ')' → logprob: -6.9136962890625
    5. ' ):
' → logprob: -8.0386962890625
    6. ' and' → logprob: -9.1636962890625
    7. ':' → logprob: -9.2886962890625
    8. ' )' → logprob: -10.9136962890625
    9. '):
' → logprob: -10.9136962890625
    10. '       ' → logprob: -12.6636962890625

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08400386571884155
    2. ':' → logprob: -3.4590039253234863
    3. ' :' → logprob: -4.084003925323486
    4. ' :
' → logprob: -4.584003925323486
    5. '):' → logprob: -5.459003925323486
    6. ':
' → logprob: -5.459003925323486
    7. ' raise' → logprob: -5.709003925323486
    8. ' 
' → logprob: -5.959003925323486
    9. '            ' → logprob: -6.709003925323486
    10. 'raise' → logprob: -6.834003925323486

Token 58: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.002760771894827485
    2. 'raise' (adapté à ' raise') → logprob: -6.002760887145996
    3. '           ' → logprob: -8.627760887145996
    4. '            ' → logprob: -10.127760887145996
    5. '	raise' → logprob: -10.502760887145996
    6. ' ' → logprob: -11.002760887145996
    7. '_raise' → logprob: -11.627760887145996
    8. ' ' → logprob: -11.752760887145996
    9. '        ' → logprob: -13.627760887145996
    10. ' 
' → logprob: -14.002760887145996

Token 59: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.474082350730896
    2. 'Value' → logprob: -0.974082350730896
    3. '	Value' → logprob: -12.474081993103027
    4. '_Value' → logprob: -14.724081993103027
    5. '_value' → logprob: -14.974081993103027
    6. 'value' → logprob: -15.599081993103027
    7. ' ' → logprob: -15.849081993103027
    8. '<Value' → logprob: -15.974081993103027
    9. '(Value' → logprob: -16.099082946777344
    10. ' value' → logprob: -16.224082946777344

Token 60: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.07892019301652908
    2. 'rror' → logprob: -2.5789201259613037
    3. 'n' → logprob: -11.328920364379883
    4. 'Value' → logprob: -11.703920364379883
    5. 'ror' → logprob: -12.078920364379883
    6. 'error' → logprob: -13.078920364379883
    7. 'r' → logprob: -14.328920364379883
    8. 'SError' → logprob: -14.578920364379883
    9. 'LError' → logprob: -14.578920364379883
    10. 'rr' → logprob: -15.578920364379883

Token 61: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.029806962236762047
    2. '(' → logprob: -3.5298068523406982
    3. '('' → logprob: -10.029807090759277
    4. '(
' → logprob: -11.904807090759277
    5. '(f' → logprob: -12.404807090759277
    6. '"' → logprob: -13.529807090759277
    7. '(

' → logprob: -16.27980613708496
    8. '(",' → logprob: -17.40480613708496
    9. '("'' → logprob: -17.40480613708496
    10. '()' → logprob: -17.65480613708496

Token 62: 'La' (ID: 4579)
  Prédit: 'La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'La' → logprob: -0.06918428093194962
    2. 'Vale' → logprob: -3.6941843032836914
    3. ' La' → logprob: -3.8191843032836914
    4. 'Value' → logprob: -4.069184303283691
    5. ' Vale' → logprob: -6.819184303283691
    6. 'value' → logprob: -7.694184303283691
    7. 'Val' → logprob: -8.319184303283691
    8. 'val' → logprob: -8.444184303283691
    9. ' la' → logprob: -8.569184303283691
    10. 'Invalid' → logprob: -8.694184303283691

Token 63: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.0052213058806955814
    2. ' value' → logprob: -5.380221366882324
    3. ' val' → logprob: -8.380221366882324
    4. ' ' → logprob: -8.630221366882324
    5. 'val' → logprob: -9.505221366882324
    6. 'value' → logprob: -9.630221366882324
    7. ' vale' → logprob: -11.630221366882324
    8. ' valore' → logprob: -11.755221366882324
    9. ' carte' → logprob: -12.005221366882324
    10. '   ' → logprob: -12.005221366882324

Token 64: ' de' (ID: 334)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.5164973735809326
    2. ' de' → logprob: -1.0164973735809326
    3. ' must' → logprob: -3.8914973735809326
    4. ' d' → logprob: -4.266497611999512
    5. ' des' → logprob: -5.391497611999512
    6. 'de' → logprob: -6.891497611999512
    7. ' ' → logprob: -6.891497611999512
    8. ' debe' → logprob: -9.141497611999512
    9. ' deve' → logprob: -9.266497611999512
    10. 'd' → logprob: -9.641497611999512

Token 65: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.001754787634126842
    2. 'la' → logprob: -6.5017547607421875
    3. ' carte' → logprob: -8.751754760742188
    4. ' ' → logprob: -10.501754760742188
    5. ' card' → logprob: -11.376754760742188
    6. ' l' → logprob: -11.751754760742188
    7. 'a' → logprob: -11.751754760742188
    8. 'l' → logprob: -11.876754760742188
    9. ' ' → logprob: -12.001754760742188
    10. ' une' → logprob: -12.751754760742188

Token 66: ' carte' (ID: 30276)
  Prédit: ' carte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carte' → logprob: -0.1291460394859314
    2. 'car' → logprob: -2.129146099090576
    3. ' ' → logprob: -6.754146099090576
    4. ' card' → logprob: -7.629146099090576
    5. ' ' → logprob: -8.504145622253418
    6. 'card' → logprob: -8.629145622253418
    7. ' car' → logprob: -9.754145622253418
    8. 'c' → logprob: -10.379145622253418
    9. ' carta' → logprob: -10.754145622253418
    10. 'Carte' → logprob: -11.379145622253418

Token 67: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.0009579126490280032
    2. ' must' → logprob: -7.00095796585083
    3. 'must' → logprob: -10.875957489013672
    4. ' ' → logprob: -11.625957489013672
    5. 'do' → logprob: -11.625957489013672
    6. ' debe' → logprob: -13.000957489013672
    7. ' doivent' → logprob: -13.125957489013672
    8. ' devra' → logprob: -13.125957489013672
    9. ' deve' → logprob: -13.750957489013672
    10. ' do' → logprob: -14.250957489013672

Token 68: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.14679114520549774
    2. 'être' → logprob: -2.0217912197113037
    3. ' etre' → logprob: -6.146790981292725
    4. '’être' → logprob: -8.021791458129883
    5. ''être' → logprob: -8.021791458129883
    6. ' ' → logprob: -8.146791458129883
    7. 'êt' → logprob: -8.146791458129883
    8. ' be' → logprob: -8.646791458129883
    9. 'êtres' → logprob: -9.146791458129883
    10. '<|end|>' → logprob: -9.271791458129883

Token 69: ' entre' (ID: 3853)
  Prédit: ' comprise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comprise' → logprob: -0.1847064048051834
    2. 'com' → logprob: -1.934706449508667
    3. ' entre' → logprob: -3.934706449508667
    4. 'entre' → logprob: -5.934706211090088
    5. ' un' → logprob: -6.809706211090088
    6. ' compris' → logprob: -8.184706687927246
    7. 'un' → logprob: -8.434706687927246
    8. ' comprises' → logprob: -8.934706687927246
    9. ' ' → logprob: -9.059706687927246
    10. '1' → logprob: -10.184706687927246

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0789070799946785
    2. '1' → logprob: -2.578907012939453
    3. ' ' → logprob: -11.203907012939453
    4. '```' → logprob: -12.828907012939453
    5. '  ' → logprob: -15.453907012939453
    6. '   ' → logprob: -16.016407012939453
    7. 's' → logprob: -16.516407012939453
    8. 'un' → logprob: -16.641407012939453
    9. '<|end|>' → logprob: -16.828907012939453
    10. '`' → logprob: -17.016407012939453

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '```' → logprob: -17.750123977661133
    4. '13' → logprob: -18.250123977661133
    5. '   ' → logprob: -20.125123977661133
    6. '`' → logprob: -20.375123977661133
    7. '  ' → logprob: -20.375123977661133
    8. '' → logprob: -20.500123977661133
    9. '１' → logprob: -20.875123977661133
    10. '

' → logprob: -20.875123977661133

Token 72: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.24766884744167328
    2. 'et' → logprob: -1.7476688623428345
    3. ' ' → logprob: -3.247668743133545
    4. ' and' → logprob: -5.372668743133545
    5. 'and' → logprob: -6.872668743133545
    6. '<|end|>' → logprob: -8.372669219970703
    7. 'e' → logprob: -9.872669219970703
    8. '1' → logprob: -9.997669219970703
    9. ' ' → logprob: -10.247669219970703
    10. '```' → logprob: -10.247669219970703

Token 73: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.08894012868404388
    2. ' ' → logprob: -2.463940143585205
    3. '14' → logprob: -15.463939666748047
    4. '53' → logprob: -15.463939666748047
    5. ' ' → logprob: -17.088939666748047
    6. '```' → logprob: -17.088939666748047
    7. '1' → logprob: -17.588939666748047
    8. '  ' → logprob: -17.588939666748047
    9. '3' → logprob: -17.713939666748047
    10. '52' → logprob: -18.338939666748047

Token 74: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '53' → logprob: -17.000015258789062
    4. '1' → logprob: -17.250015258789062
    5. '3' → logprob: -17.375015258789062
    6. '```' → logprob: -17.750015258789062
    7. '14' → logprob: -18.625015258789062
    8. '۱۳' → logprob: -20.125015258789062
    9. '52' → logprob: -20.250015258789062
    10. '१३' → logprob: -20.375015258789062

Token 75: ' inclus' (ID: 11891)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.893625795841217
    2. '.")' → logprob: -1.5186257362365723
    3. ')")
' → logprob: -1.6436257362365723
    4. '")' → logprob: -2.1436257362365723
    5. '.")
' → logprob: -3.8936257362365723
    6. ').' → logprob: -3.8936257362365723
    7. ')' → logprob: -4.018625736236572
    8. '")
' → logprob: -6.393625736236572
    9. ' )' → logprob: -8.39362621307373
    10. '.")
' → logprob: -8.51862621307373

Token 76: '.")
' (ID: 27834)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.5091423392295837
    2. ')' → logprob: -2.0091423988342285
    3. '.")
' → logprob: -2.0091423988342285
    4. ')")' → logprob: -2.5091423988342285
    5. '.")' → logprob: -3.6341423988342285
    6. ').' → logprob: -4.0091423988342285
    7. '.")
' → logprob: -6.5091423988342285
    8. '")' → logprob: -6.5091423988342285
    9. '")
' → logprob: -6.6341423988342285
    10. ')
' → logprob: -8.75914192199707

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030841029365547
    2. 'self' → logprob: -8.5003080368042
    3. '        
' → logprob: -10.2503080368042
    4. '
' → logprob: -10.3753080368042
    5. ' self' → logprob: -10.7503080368042
    6. '   ' → logprob: -11.8753080368042
    7. '    
' → logprob: -12.6253080368042
    8. '  
' → logprob: -12.8753080368042
    9. '<|end|>' → logprob: -14.0003080368042
    10. '           ' → logprob: -14.2503080368042

Token 78: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07065736502408981
    2. ' self' → logprob: -3.320657253265381
    3. 'self' (adapté à ' self') → logprob: -3.445657253265381
    4. '        
' → logprob: -9.070657730102539
    5. '   ' → logprob: -10.820657730102539
    6. ' ' → logprob: -10.820657730102539
    7. ' 
' → logprob: -11.570657730102539
    8. '
' → logprob: -11.820657730102539
    9. '        ' → logprob: -11.945657730102539
    10. ' ' → logprob: -12.070657730102539

Token 79: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.01816609688103199
    2. '.' → logprob: -4.0181660652160645
    3. ' .' → logprob: -11.393166542053223
    4. 'value' → logprob: -12.643166542053223
    5. ' value' → logprob: -13.768166542053223
    6. '.val' → logprob: -15.268166542053223
    7. ' ' → logprob: -16.268165588378906
    8. '.valor' → logprob: -17.018165588378906
    9. '._' → logprob: -17.393165588378906
    10. '.values' → logprob: -17.518165588378906

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048591118305921555
    2. '=' → logprob: -3.048591136932373
    3. ' ' → logprob: -12.673590660095215
    4. '.' → logprob: -15.173590660095215
    5. ' =
' → logprob: -15.548590660095215
    6. ' ' → logprob: -16.42359161376953
    7. '_' → logprob: -17.04859161376953
    8. ' =)' → logprob: -17.54859161376953
    9. ' ==' → logprob: -17.92359161376953
    10. ')' → logprob: -18.29859161376953

Token 81: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0619698166847229
    2. 'value' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.686969757080078
    4. ' ' → logprob: -14.186969757080078
    5. '	value' → logprob: -16.311969757080078
    6. '"value' → logprob: -16.561969757080078
    7. '    ' → logprob: -16.686969757080078
    8. '$value' → logprob: -17.311969757080078
    9. '(value' → logprob: -17.436969757080078
    10. ' valeur' → logprob: -17.686969757080078

Token 82: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.22923392057418823
    2. '   ' → logprob: -1.979233980178833
    3. ' def' → logprob: -3.729233980178833
    4. '<|end|>' → logprob: -4.229233741760254
    5. ' ' → logprob: -4.729233741760254
    6. ' 
' → logprob: -5.479233741760254
    7. '```' → logprob: -5.854233741760254
    8. '    
' → logprob: -5.854233741760254
    9. '    ' → logprob: -6.479233741760254
    10. '
' → logprob: -6.729233741760254

Token 85: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05859028920531273
    2. ' ' → logprob: -2.9335901737213135
    3. '__' → logprob: -7.058590412139893
    4. '_repr' → logprob: -7.058590412139893
    5. ' ' → logprob: -7.558590412139893
    6. ' _' → logprob: -7.683590412139893
    7. ' def' → logprob: -7.933590412139893
    8. '_' → logprob: -8.933589935302734
    9. ' ==' → logprob: -8.933589935302734
    10. ' ```' → logprob: -8.933589935302734

Token 86: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00376492808572948
    2. 'repr' → logprob: -5.753765106201172
    3. 'str' → logprob: -7.503765106201172
    4. 'lt' → logprob: -10.253765106201172
    5. 'init' → logprob: -14.628765106201172
    6. ' eq' → logprob: -15.503765106201172
    7. 'hash' → logprob: -15.503765106201172
    8. 'gt' → logprob: -18.878765106201172
    9. 'int' → logprob: -19.003765106201172
    10. ' str' → logprob: -19.128765106201172

Token 87: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4815896153450012
    2. '__(' → logprob: -0.9815896153450012
    3. '__('' → logprob: -5.2315897941589355
    4. '__(
' → logprob: -6.4815897941589355
    5. '__("' → logprob: -7.7315897941589355
    6. '__((' → logprob: -9.356589317321777
    7. '___' → logprob: -10.731589317321777
    8. '__(*' → logprob: -10.731589317321777
    9. '_' → logprob: -11.606589317321777
    10. '__.__' → logprob: -11.731589317321777

Token 88: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003374886582605541
    2. ')' → logprob: -8.000337600708008
    3. ' self' → logprob: -14.000337600708008
    4. '
' → logprob: -15.000337600708008
    5. '')' → logprob: -15.250337600708008
    6. '(self' → logprob: -16.125337600708008
    7. '),' → logprob: -16.375337600708008
    8. '

' → logprob: -16.375337600708008
    9. ')
' → logprob: -16.625337600708008
    10. '_self' → logprob: -16.750337600708008

Token 89: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009580538608133793
    2. '__)' → logprob: -5.009580612182617
    3. '_' → logprob: -6.884580612182617
    4. '__(' → logprob: -7.009580612182617
    5. '__('' → logprob: -7.759580612182617
    6. '__(
' → logprob: -8.259580612182617
    7. '__.__' → logprob: -9.384580612182617
    8. '__,' → logprob: -10.634580612182617
    9. '__("' → logprob: -10.759580612182617
    10. '___' → logprob: -10.884580612182617

Token 90: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.7851090431213379
    2. '"' → logprob: -1.785109043121338
    3. ''' → logprob: -1.910109043121338
    4. '       ' → logprob: -2.535109043121338
    5. '    ' → logprob: -3.285109043121338
    6. '   ' → logprob: -3.285109043121338
    7. ' ' → logprob: -3.535109043121338
    8. 'f' → logprob: -3.785109043121338
    9. ' "' → logprob: -5.535109043121338
    10. ' '' → logprob: -5.535109043121338

Token 91: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38779208064079285
    2. ' return' → logprob: -1.6377921104431152
    3. 'f' → logprob: -2.3877921104431152
    4. ' f' → logprob: -3.3877921104431152
    5. '       ' → logprob: -6.637792110443115
    6. '   ' → logprob: -9.262791633605957
    7. '    ' → logprob: -12.512791633605957
    8. '           ' → logprob: -12.512791633605957
    9. ' ' → logprob: -13.262791633605957
    10. '     ' → logprob: -13.387791633605957

Token 92: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.16022564470767975
    2. 'f' → logprob: -1.9102256298065186
    3. ' ' → logprob: -13.660225868225098
    4. '	f' → logprob: -15.910225868225098
    5. ' ' → logprob: -16.16022491455078
    6. '"' → logprob: -16.91022491455078
    7. ''f' → logprob: -17.16022491455078
    8. 'F' → logprob: -17.91022491455078
    9. ''' → logprob: -18.16022491455078
    10. ' F' → logprob: -18.28522491455078

Token 93: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9526945352554321
    2. 'f' → logprob: -1.0776945352554321
    3. '(f' → logprob: -1.8276945352554321
    4. 'Card' → logprob: -3.4526944160461426
    5. '(Card' → logprob: -3.4526944160461426
    6. '"C' → logprob: -3.9526944160461426
    7. ''' → logprob: -4.452694416046143
    8. '<Card' → logprob: -4.952694416046143
    9. ' f' → logprob: -5.202694416046143
    10. '(' → logprob: -6.577694416046143

Token 94: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.017525564879179
    2. ''' → logprob: -4.642525672912598
    3. '"' → logprob: -5.142525672912598
    4. '<Card' → logprob: -6.517525672912598
    5. 'Carte' → logprob: -8.767525672912598
    6. 'Cards' → logprob: -9.017525672912598
    7. 'f' → logprob: -9.642525672912598
    8. 'Car' → logprob: -10.767525672912598
    9. ' Card' → logprob: -11.267525672912598
    10. 'Poker' → logprob: -11.767525672912598

Token 95: '({' (ID: 3972)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.4760112762451172
    2. '({' → logprob: -1.2260112762451172
    3. '(' → logprob: -2.476011276245117
    4. '(self' → logprob: -6.976011276245117
    5. '{' → logprob: -8.601011276245117
    6. '(f' → logprob: -9.976011276245117
    7. '(val' → logprob: -11.476011276245117
    8. '('{' → logprob: -12.351011276245117
    9. '(Value' → logprob: -12.476011276245117
    10. '(
' → logprob: -12.476011276245117

Token 96: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2842308680992573e-05
    2. ' self' → logprob: -10.750022888183594
    3. '{' → logprob: -14.000022888183594
    4. 'sel' → logprob: -15.875022888183594
    5. ' ' → logprob: -16.250022888183594
    6. 'value' → logprob: -16.875022888183594
    7. ')' → logprob: -17.500022888183594
    8. 'repr' → logprob: -17.875022888183594
    9. 'elf' → logprob: -18.000022888183594
    10. 'se' → logprob: -18.125022888183594

Token 97: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0015483066672459245
    2. '.' → logprob: -6.5015482902526855
    3. ').' → logprob: -10.251548767089844
    4. ')' → logprob: -12.501548767089844
    5. 'value' → logprob: -12.751548767089844
    6. ' .' → logprob: -13.501548767089844
    7. '.val' → logprob: -14.126548767089844
    8. '.
' → logprob: -14.251548767089844
    9. '.)' → logprob: -14.376548767089844
    10. ')value' → logprob: -15.876548767089844

Token 98: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -3.011373155459296e-05
    2. ')' → logprob: -10.750030517578125
    3. ')}' → logprob: -13.000030517578125
    4. '}' → logprob: -13.125030517578125
    5. ' })' → logprob: -13.250030517578125
    6. '}")' → logprob: -13.375030517578125
    7. '"})' → logprob: -14.750030517578125
    8. ')"' → logprob: -15.000030517578125
    9. '))' → logprob: -16.625030517578125
    10. ')")' → logprob: -16.750030517578125

Token 99: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11785274744033813
    2. 'def' → logprob: -3.4928526878356934
    3. '   ' → logprob: -3.6178526878356934
    4. ':' → logprob: -3.6178526878356934
    5. '<|end|>' → logprob: -4.742852687835693
    6. ' 
' → logprob: -5.742852687835693
    7. '\n' → logprob: -6.117852687835693
    8. '    
' → logprob: -6.367852687835693
    9. 'class' → logprob: -6.617852687835693
    10. ',' → logprob: -6.742852687835693

Token 101: ' Hand' (ID: 7110)
  Prédit: ' Poker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Poker' → logprob: -0.01448654755949974
    2. ' Hand' → logprob: -4.764486312866211
    3. 'Poker' → logprob: -6.264486312866211
    4. ' Card' → logprob: -6.764486312866211
    5. ' ' → logprob: -6.889486312866211
    6. ' Deck' → logprob: -7.014486312866211
    7. ' ' → logprob: -8.264486312866211
    8. ' poker' → logprob: -8.514486312866211
    9. ' P' → logprob: -9.264486312866211
    10. 'Hand' → logprob: -9.514486312866211

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015493293292820454
    2. ' :' → logprob: -4.640493392944336
    3. '(' → logprob: -5.515493392944336
    4. '):' → logprob: -6.890493392944336
    5. '<|end|>' → logprob: -8.265493392944336
    6. '():' → logprob: -9.140493392944336
    7. ':
' → logprob: -9.265493392944336
    8. '(List' → logprob: -10.015493392944336
    9. '<|end|>' → logprob: -11.015493392944336
    10. '(object' → logprob: -11.015493392944336

Token 103: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0286199152469635
    2. '   ' → logprob: -3.9036200046539307
    3. ':
' → logprob: -5.153619766235352
    4. '(' → logprob: -7.278619766235352
    5. '(List' → logprob: -7.778619766235352
    6. '):' → logprob: -7.903619766235352
    7. ' :' → logprob: -8.153619766235352
    8. '(object' → logprob: -8.903619766235352
    9. '<|end|>' → logprob: -9.278619766235352
    10. ')' → logprob: -9.528619766235352

Token 104: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11206252127885818
    2. ':' → logprob: -2.362062454223633
    3. ' :' → logprob: -5.362062454223633
    4. ' List' → logprob: -5.612062454223633
    5. '    ' → logprob: -6.862062454223633
    6. 'List' → logprob: -7.237062454223633
    7. '  ' → logprob: -7.862062454223633
    8. ' ' → logprob: -8.237062454223633
    9. 'def' → logprob: -8.612062454223633
    10. ':
' → logprob: -8.737062454223633

Token 105: 'Re' (ID: 720)
  Prédit: ' Re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Re' → logprob: -0.4727104604244232
    2. 'Rep' → logprob: -2.222710371017456
    3. ' """' → logprob: -2.472710371017456
    4. '   ' → logprob: -2.972710371017456
    5. 'Re' → logprob: -3.347710371017456
    6. 'class' → logprob: -3.472710371017456
    7. '"""' → logprob: -3.722710371017456
    8. ' class' → logprob: -4.722710609436035
    9. ' Represents' → logprob: -5.222710609436035
    10. ' repr' → logprob: -5.347710609436035

Token 106: 'prés' (ID: 61592)
  Prédit: 'prés'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.009408952668309212
    2. 'pr' → logprob: -4.759408950805664
    3. 'p' → logprob: -7.259408950805664
    4. 'pres' → logprob: -9.884408950805664
    5. 'pré' → logprob: -10.509408950805664
    6. 'près' → logprob: -12.134408950805664
    7. 'prs' → logprob: -13.259408950805664
    8. ' présente' → logprob: -13.509408950805664
    9. 'present' → logprob: -13.634408950805664
    10. 's' → logprob: -13.884408950805664

Token 107: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.08454987406730652
    2. 's' → logprob: -3.084549903869629
    3. 'ète' → logprob: -3.834549903869629
    4. 'és' → logprob: -5.709549903869629
    5. 'p' → logprob: -5.834549903869629
    6. 'resente' → logprob: -6.334549903869629
    7. 'es' → logprob: -6.459549903869629
    8. 'é' → logprob: -6.584549903869629
    9. 'e' → logprob: -7.459549903869629
    10. '   ' → logprob: -8.709549903869629

Token 108: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5351004004478455
    2. ' a' → logprob: -1.5351004600524902
    3. 'une' → logprob: -2.4101004600524902
    4. ' la' → logprob: -2.6601004600524902
    5. ' ' → logprob: -4.66010046005249
    6. 'a' → logprob: -4.91010046005249
    7. ' poker' → logprob: -5.53510046005249
    8. ' un' → logprob: -5.78510046005249
    9. ' les' → logprob: -5.91010046005249
    10. 'la' → logprob: -5.91010046005249

Token 109: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.39241230487823486
    2. 'main' → logprob: -1.7674123048782349
    3. ' poker' → logprob: -2.3924121856689453
    4. ' collection' → logprob: -3.8924121856689453
    5. 'p' → logprob: -4.392412185668945
    6. ' liste' → logprob: -4.642412185668945
    7. 'collection' → logprob: -5.142412185668945
    8. ' ' → logprob: -5.392412185668945
    9. 'liste' → logprob: -6.267412185668945
    10. 'po' → logprob: -6.767412185668945

Token 110: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2834266722202301
    2. ' de' → logprob: -1.4084266424179077
    3. '(' → logprob: -7.158426761627197
    4. ' of' → logprob: -7.658426761627197
    5. ' ' → logprob: -8.408426284790039
    6. '_de' → logprob: -8.658426284790039
    7. '<|end|>' → logprob: -8.658426284790039
    8. ' (' → logprob: -9.033426284790039
    9. ')' → logprob: -9.533426284790039
    10. 'd' → logprob: -9.658426284790039

Token 111: ' poker' (ID: 15422)
  Prédit: ' cartes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.5198540091514587
    2. ' poker' → logprob: -1.1448540687561035
    3. 'p' → logprob: -2.8948540687561035
    4. ' cards' → logprob: -4.0198540687561035
    5. 'cart' → logprob: -5.3948540687561035
    6. 'cards' → logprob: -5.5198540687561035
    7. ' cartas' → logprob: -5.8948540687561035
    8. ' ' → logprob: -6.3948540687561035
    9. ' p' → logprob: -8.144853591918945
    10. ' carte' → logprob: -9.144853591918945

Token 112: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15635260939598083
    2. ' :' → logprob: -2.5313525199890137
    3. '   ' → logprob: -3.1563525199890137
    4. ':
' → logprob: -5.281352519989014
    5. ')' → logprob: -5.531352519989014
    6. '):' → logprob: -5.656352519989014
    7. '(' → logprob: -6.406352519989014
    8. ' (' → logprob: -6.781352519989014
    9. 'de' → logprob: -6.781352519989014
    10. ',' → logprob: -6.906352519989014

Token 113: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.9584884643554688
    2. ' cartes' → logprob: -1.4584884643554688
    3. 'c' → logprob: -1.7084884643554688
    4. ' cinq' → logprob: -2.8334884643554688
    5. ' List' → logprob: -3.0834884643554688
    6. ' ' → logprob: -3.2084884643554688
    7. 'List' → logprob: -3.4584884643554688
    8. 'cards' → logprob: -5.083488464355469
    9. ' cards' → logprob: -5.458488464355469
    10. ' five' → logprob: -5.958488464355469

Token 114: '5' (ID: 20)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23020467162132263
    2. '5' → logprob: -1.605204701423645
    3. 'cards' → logprob: -6.3552045822143555
    4. ' cinq' → logprob: -6.9802045822143555
    5. ' ' → logprob: -7.3552045822143555
    6. 'five' → logprob: -7.9802045822143555
    7. 'qu' → logprob: -8.230204582214355
    8. 'jou' → logprob: -8.730204582214355
    9. 'cart' → logprob: -8.980204582214355
    10. 'cin' → logprob: -9.105204582214355

Token 115: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.02582968771457672
    2. ' cards' → logprob: -4.275829792022705
    3. ' cartas' → logprob: -5.025829792022705
    4. ' Cart' → logprob: -5.650829792022705
    5. ' ' → logprob: -6.900829792022705
    6. 'cart' → logprob: -9.025829315185547
    7. 'cards' → logprob: -9.275829315185547
    8. ' carte' → logprob: -9.650829315185547
    9. ' Cards' → logprob: -10.400829315185547
    10. 'Cart' → logprob: -10.525829315185547

Token 116: '."""
' (ID: 33044)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29174014925956726
    2. '):' → logprob: -2.1667401790618896
    3. '   ' → logprob: -2.1667401790618896
    4. ':
' → logprob: -4.5417399406433105
    5. ')' → logprob: -5.1667399406433105
    6. '):
' → logprob: -5.6667399406433105
    7. '.' → logprob: -6.0417399406433105
    8. ' :' → logprob: -7.2917399406433105
    9. '```' → logprob: -7.6667399406433105
    10. ',' → logprob: -8.166740417480469

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019487487152218819
    2. 'def' → logprob: -6.751948833465576
    3. '    
' → logprob: -7.876948833465576
    4. ' def' → logprob: -8.126948356628418
    5. '
' → logprob: -9.876948356628418
    6. '    ' → logprob: -10.876948356628418
    7. '```' → logprob: -11.501948356628418
    8. ' 
' → logprob: -11.751948356628418
    9. '  
' → logprob: -12.876948356628418
    10. '   
' → logprob: -12.876948356628418

Token 118: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.038816507905721664
    2. 'def' (adapté à ' def') → logprob: -3.288816452026367
    3. '   ' → logprob: -7.163816452026367
    4. '    ' → logprob: -14.913816452026367
    5. '5' → logprob: -15.788816452026367
    6. ' ' → logprob: -16.413816452026367
    7. '```' → logprob: -16.663816452026367
    8. 'de' → logprob: -17.163816452026367
    9. ' __' → logprob: -17.163816452026367
    10. '
' → logprob: -17.288816452026367

Token 119: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.14784462749958038
    2. ' __' → logprob: -2.1478445529937744
    3. ' init' → logprob: -3.8978445529937744
    4. '_init' → logprob: -8.272844314575195
    5. '__' → logprob: -9.147844314575195
    6. '```' → logprob: -10.522844314575195
    7. ' def' → logprob: -11.022844314575195
    8. 'def' → logprob: -12.647844314575195
    9. '__(' → logprob: -14.022844314575195
    10. 'int' → logprob: -14.022844314575195

Token 120: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.537180211627856e-05
    2. '_init' → logprob: -10.625045776367188
    3. '__' → logprob: -11.375045776367188
    4. ' init' → logprob: -11.750045776367188
    5. ' __' → logprob: -14.500045776367188
    6. 'repr' → logprob: -14.875045776367188
    7. 'def' → logprob: -15.125045776367188
    8. '.init' → logprob: -16.000045776367188
    9. 'name' → logprob: -16.375045776367188
    10. '_' → logprob: -17.000045776367188

Token 121: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003970712423324585
    2. '(self' → logprob: -5.753970623016357
    3. '__' → logprob: -7.378970623016357
    4. '__(
' → logprob: -9.503971099853516
    5. '_(' → logprob: -10.253971099853516
    6. '(' → logprob: -10.253971099853516
    7. ' (' → logprob: -11.003971099853516
    8. 'self' → logprob: -12.753971099853516
    9. '_' → logprob: -13.628971099853516
    10. '__((' → logprob: -13.753971099853516

Token 122: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005967423319816589
    2. ' self' → logprob: -5.130967617034912
    3. '
' → logprob: -10.255967140197754
    4. '(self' → logprob: -13.505967140197754
    5. '       ' → logprob: -13.630967140197754
    6. ',' → logprob: -15.005967140197754
    7. '   ' → logprob: -15.630967140197754
    8. ' ' → logprob: -15.755967140197754
    9. '	self' → logprob: -16.00596809387207
    10. '5' → logprob: -16.13096809387207

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05492832511663437
    2. ' ,' → logprob: -2.9299283027648926
    3. 'self' → logprob: -10.30492877960205
    4. ')' → logprob: -12.92992877960205
    5. ' self' → logprob: -13.42992877960205
    6. ' )' → logprob: -13.55492877960205
    7. ',List' → logprob: -13.55492877960205
    8. '[' → logprob: -13.80492877960205
    9. ',self' → logprob: -14.17992877960205
    10. '_,' → logprob: -14.30492877960205

Token 124: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.38688042759895325
    2. ' cards' → logprob: -1.1368803977966309
    3. '.cards' → logprob: -12.386880874633789
    4. 'self' → logprob: -12.761880874633789
    5. '(cards' → logprob: -13.261880874633789
    6. 'Cards' → logprob: -15.511880874633789
    7. '_cards' → logprob: -15.636880874633789
    8. 'card' → logprob: -16.76188087463379
    9. ' cartes' → logprob: -16.76188087463379
    10. ' self' → logprob: -16.76188087463379

Token 125: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1041145626222715e-05
    2. ' :' → logprob: -12.000011444091797
    3. '):' → logprob: -12.375011444091797
    4. ':list' → logprob: -15.375011444091797
    5. ')' → logprob: -16.375011444091797
    6. ' ):' → logprob: -17.250011444091797
    7. '[List' → logprob: -17.375011444091797
    8. '}:' → logprob: -17.500011444091797
    9. '_:' → logprob: -18.375011444091797
    10. '：' → logprob: -18.625011444091797

Token 126: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.38687169551849365
    2. ' List' → logprob: -1.1368716955184937
    3. '[List' → logprob: -14.386871337890625
    4. '	List' → logprob: -17.011871337890625
    5. 'list' → logprob: -17.511871337890625
    6. ' list' → logprob: -18.511871337890625
    7. ' ' → logprob: -19.261871337890625
    8. 'Optional' → logprob: -19.386871337890625
    9. '(List' → logprob: -19.886871337890625
    10. '   ' → logprob: -20.386871337890625

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9146995327901095e-05
    2. '<Card' → logprob: -11.000019073486328
    3. 'Card' → logprob: -14.125019073486328
    4. '(Card' → logprob: -14.250019073486328
    5. ' [' → logprob: -14.750019073486328
    6. '[int' → logprob: -15.500019073486328
    7. '[C' → logprob: -16.125019073486328
    8. '[
' → logprob: -16.375019073486328
    9. '```' → logprob: -16.375019073486328
    10. '[Index' → logprob: -16.625019073486328

Token 128: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -4.320199877838604e-07
    2. ' Card' → logprob: -14.75
    3. '<Card' → logprob: -19.625
    4. '[' → logprob: -20.75
    5. 'Car' → logprob: -21.0
    6. '_card' → logprob: -21.75
    7. '(Card' → logprob: -22.625
    8. ')' → logprob: -22.875
    9. 'int' → logprob: -23.0
    10. 'card' → logprob: -23.25

Token 129: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.017022570595145226
    2. '):' → logprob: -4.892022609710693
    3. ']' → logprob: -5.267022609710693
    4. ']):
' → logprob: -6.017022609710693
    5. '])' → logprob: -6.767022609710693
    6. ')' → logprob: -7.767022609710693
    7. ']:' → logprob: -8.892022132873535
    8. '[' → logprob: -10.142022132873535
    9. '>):' → logprob: -11.767022132873535
    10. '):
' → logprob: -12.142022132873535

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038956227945163846
    2. ' if' → logprob: -8.375389099121094
    3. 'if' → logprob: -9.625389099121094
    4. 'assert' → logprob: -9.875389099121094
    5. ' assert' → logprob: -10.625389099121094
    6. '   ' → logprob: -11.250389099121094
    7. '      ' → logprob: -13.500389099121094
    8. 'self' → logprob: -14.500389099121094
    9. ' self' → logprob: -15.000389099121094
    10. ':' → logprob: -15.125389099121094

Token 131: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3927386999130249
    2. 'if' (adapté à ' if') → logprob: -1.142738699913025
    3. '       ' → logprob: -5.3927388191223145
    4. 'self' → logprob: -6.8927388191223145
    5. ' self' → logprob: -8.267738342285156
    6. 'assert' → logprob: -10.767738342285156
    7. ' assert' → logprob: -12.392738342285156
    8. 'super' → logprob: -13.642738342285156
    9. ' ' → logprob: -13.767738342285156
    10. ' ' → logprob: -14.517738342285156

Token 132: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06196768581867218
    2. ' len' → logprob: -2.811967611312866
    3. '(len' → logprob: -17.561967849731445
    4. '	len' → logprob: -19.311967849731445
    5. '=len' → logprob: -22.186967849731445
    6. 'Len' → logprob: -22.311967849731445
    7. 'length' → logprob: -22.936967849731445
    8. '[len' → logprob: -23.311967849731445
    9. '   ' → logprob: -23.311967849731445
    10. '       ' → logprob: -23.311967849731445

Token 133: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0001495484757469967
    2. '(' → logprob: -8.875149726867676
    3. '(c' → logprob: -11.750149726867676
    4. '(self' → logprob: -14.125149726867676
    5. ' cards' → logprob: -14.625149726867676
    6. ' (' → logprob: -15.000149726867676
    7. 'cards' → logprob: -15.625149726867676
    8. '(card' → logprob: -15.875149726867676
    9. '(car' → logprob: -19.62514877319336
    10. '/cards' → logprob: -19.75014877319336

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5581936240196228
    2. ' !=' → logprob: -1.0581936836242676
    3. '!=' → logprob: -2.5581936836242676
    4. ')!=' → logprob: -5.808193683624268
    5. ' )' → logprob: -8.93319320678711
    6. '()!=' → logprob: -9.80819320678711
    7. '()' → logprob: -10.55819320678711
    8. ' ' → logprob: -12.80819320678711
    9. '```' → logprob: -13.18319320678711
    10. ']' → logprob: -13.30819320678711

Token 135: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5760284066200256
    2. '!=' → logprob: -0.8260284066200256
    3. '()!=' → logprob: -10.076028823852539
    4. ')!=' → logprob: -10.201028823852539
    5. ')' → logprob: -11.826028823852539
    6. ' ' → logprob: -14.451028823852539
    7. '!=(' → logprob: -14.826028823852539
    8. ']!=' → logprob: -15.076028823852539
    9. '!==' → logprob: -15.326028823852539
    10. '()' → logprob: -15.951028823852539

Token 136: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03804171830415726
    2. '5' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.413042068481445
    4. '<|end|>' → logprob: -17.538042068481445
    5. ' five' → logprob: -18.538042068481445
    6. '```' → logprob: -19.100542068481445
    7. '  ' → logprob: -19.475542068481445
    8. ' vijf' → logprob: -20.163042068481445
    9. '6' → logprob: -20.163042068481445
    10. '7' → logprob: -20.475542068481445

Token 137: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.029750484973192215
    2. ' ' → logprob: -3.5297505855560303
    3. ' ' → logprob: -18.77975082397461
    4. '```' → logprob: -19.27975082397461
    5. '  ' → logprob: -20.02975082397461
    6. ' five' → logprob: -20.09225082397461
    7. '1' → logprob: -20.21725082397461
    8. '۵' → logprob: -20.52975082397461
    9. '6' → logprob: -20.84225082397461
    10. ' vijf' → logprob: -21.09225082397461

Token 138: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23249827325344086
    2. ':' → logprob: -1.607498288154602
    3. ' or' → logprob: -5.9824981689453125
    4. ')' → logprob: -6.3574981689453125
    5. ' ):' → logprob: -6.8574981689453125
    6. '):
' → logprob: -6.9824981689453125
    7. '<|end|>' → logprob: -7.6074981689453125
    8. ' :' → logprob: -8.607498168945312
    9. ':
' → logprob: -9.982498168945312
    10. ' and' → logprob: -10.482498168945312

Token 139: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.408244252204895
    2. ':' → logprob: -1.783244252204895
    3. ' or' → logprob: -2.0332441329956055
    4. '           ' → logprob: -3.4082441329956055
    5. ' raise' → logprob: -6.7832441329956055
    6. 'raise' → logprob: -7.2832441329956055
    7. '       ' → logprob: -7.7832441329956055
    8. '):
' → logprob: -8.533244132995605
    9. ' :
' → logprob: -8.658244132995605
    10. ' and' → logprob: -8.783244132995605

Token 140: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.1602736860513687
    2. 'raise' (adapté à ' raise') → logprob: -1.9102736711502075
    3. '           ' → logprob: -10.160273551940918
    4. '	raise' → logprob: -11.535273551940918
    5. '_raise' → logprob: -15.035273551940918
    6. '            ' → logprob: -15.035273551940918
    7. '        ' → logprob: -15.660273551940918
    8. '
' → logprob: -16.535274505615234
    9. 'raises' → logprob: -16.535274505615234
    10. '               ' → logprob: -17.160274505615234

Token 141: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.02975071594119072
    2. 'Value' → logprob: -3.5297508239746094
    3. '	Value' → logprob: -16.15475082397461
    4. ' value' → logprob: -16.65475082397461
    5. '_Value' → logprob: -17.27975082397461
    6. ' ' → logprob: -17.77975082397461
    7. '(Value' → logprob: -17.77975082397461
    8. '_value' → logprob: -18.02975082397461
    9. ' ' → logprob: -19.15475082397461
    10. 'value' → logprob: -19.40475082397461

Token 142: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.703443770878948e-06
    2. 'rror' → logprob: -12.375007629394531
    3. 'Value' → logprob: -12.625007629394531
    4. '   ' → logprob: -16.87500762939453
    5. '       ' → logprob: -17.37500762939453
    6. ' Error' → logprob: -17.87500762939453
    7. 'error' → logprob: -18.25000762939453
    8. 'Length' → logprob: -18.75000762939453
    9. 'ror' → logprob: -19.00000762939453
    10. 'SError' → logprob: -19.12500762939453

Token 143: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.493430894101039e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -17.25007438659668
    4. '('' → logprob: -17.62507438659668
    5. '(f' → logprob: -18.00007438659668
    6. '("")' → logprob: -19.62507438659668
    7. '()' → logprob: -20.12507438659668
    8. '(",' → logprob: -21.12507438659668
    9. '"' → logprob: -21.12507438659668
    10. '("""' → logprob: -21.25007438659668

Token 144: 'Une' (ID: 28821)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.20075544714927673
    2. ' Une' → logprob: -2.5757553577423096
    3. 'La' → logprob: -2.9507553577423096
    4. 'Une' → logprob: -3.4507553577423096
    5. ' la' → logprob: -4.700755596160889
    6. ' une' → logprob: -5.450755596160889
    7. ' Le' → logprob: -5.575755596160889
    8. ' Il' → logprob: -6.950755596160889
    9. ' len' → logprob: -7.325755596160889
    10. '"' → logprob: -7.700755596160889

Token 145: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.030670087784528732
    2. ' ' → logprob: -4.030670166015625
    3. 'main' → logprob: -5.030670166015625
    4. ' hand' → logprob: -5.530670166015625
    5. ' mano' → logprob: -7.905670166015625
    6. '   ' → logprob: -8.030670166015625
    7. ' Main' → logprob: -8.655670166015625
    8. ' mains' → logprob: -8.780670166015625
    9. '  ' → logprob: -8.905670166015625
    10. 'Main' → logprob: -9.030670166015625

Token 146: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.015422276221215725
    2. ' de' → logprob: -4.890422344207764
    3. ' must' → logprob: -5.015422344207764
    4. ' ' → logprob: -7.265422344207764
    5. 'de' → logprob: -8.765421867370605
    6. 'do' → logprob: -9.390421867370605
    7. 'must' → logprob: -9.640421867370605
    8. '   ' → logprob: -10.015421867370605
    9. ' doivent' → logprob: -10.640421867370605
    10. ' do' → logprob: -11.390421867370605

Token 147: ' conten' (ID: 23523)
  Prédit: ' avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -0.026422565802931786
    2. ' être' → logprob: -4.651422500610352
    3. ' ' → logprob: -5.526422500610352
    4. 'avoir' → logprob: -5.651422500610352
    5. ' have' → logprob: -6.026422500610352
    6. ' comport' → logprob: -6.151422500610352
    7. ' conten' → logprob: -6.401422500610352
    8. ' len' → logprob: -7.526422500610352
    9. ' consist' → logprob: -8.151422500610352
    10. ''avoir' → logprob: -8.401422500610352

Token 148: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -3.531315314830863e-06
    2. 'r' → logprob: -13.500003814697266
    3. 'er' → logprob: -14.375003814697266
    4. '   ' → logprob: -14.875003814697266
    5. 'i' → logprob: -15.625003814697266
    6. '

' → logprob: -15.750003814697266
    7. '_ir' → logprob: -16.250003814697266
    8. '
' → logprob: -16.375003814697266
    9. '[' → logprob: -16.500003814697266
    10. '(' → logprob: -16.875003814697266

Token 149: ' exactement' (ID: 108701)
  Prédit: ' exactement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactement' → logprob: -0.7686821818351746
    2. ' exactly' → logprob: -1.0186822414398193
    3. ' ' → logprob: -1.7686822414398193
    4. 'exact' → logprob: -6.14368200302124
    5. ' cinq' → logprob: -6.26868200302124
    6. '5' → logprob: -7.64368200302124
    7. ' exact' → logprob: -9.518682479858398
    8. ' exatamente' → logprob: -9.768682479858398
    9. ' exactamente' → logprob: -9.768682479858398
    10. 'Exactly' → logprob: -11.643682479858398

Token 150: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005715019651688635
    2. '5' → logprob: -7.5005717277526855
    3. ' cinq' → logprob: -11.250571250915527
    4. ' ' → logprob: -12.500571250915527
    5. 'c' → logprob: -13.625571250915527
    6. '  ' → logprob: -16.125572204589844
    7. ' c' → logprob: -16.375572204589844
    8. 's' → logprob: -16.500572204589844
    9. '<|end|>' → logprob: -16.875572204589844
    10. ' des' → logprob: -17.000572204589844

Token 151: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. 'c' → logprob: -15.25015926361084
    4. ' cinq' → logprob: -16.250158309936523
    5. ' five' → logprob: -19.250158309936523
    6. '```' → logprob: -19.500158309936523
    7. 'five' → logprob: -19.500158309936523
    8. ' cinco' → logprob: -20.375158309936523
    9. ' ' → logprob: -20.375158309936523
    10. ' vijf' → logprob: -20.625158309936523

Token 152: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.05015910416841507
    2. ' cards' → logprob: -3.050159215927124
    3. 'cards' → logprob: -7.300158977508545
    4. ' cartas' → logprob: -7.425158977508545
    5. 'cart' → logprob: -8.800159454345703
    6. ' ' → logprob: -9.300159454345703
    7. ' carte' → logprob: -10.675159454345703
    8. ' cart' → logprob: -11.300159454345703
    9. ' ' → logprob: -12.175159454345703
    10. 'car' → logprob: -12.300159454345703

Token 153: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.1683197170495987
    2. '.")
' → logprob: -2.2933197021484375
    3. ')")' → logprob: -3.4183197021484375
    4. ')")
' → logprob: -4.5433197021484375
    5. '")' → logprob: -5.5433197021484375
    6. ')' → logprob: -6.0433197021484375
    7. '.' → logprob: -6.4183197021484375
    8. '.")
' → logprob: -6.9183197021484375
    9. ' .' → logprob: -7.5433197021484375
    10. '.)' → logprob: -7.7933197021484375

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002453065011650324
    2. 'self' → logprob: -6.127452850341797
    3. ' self' → logprob: -8.252452850341797
    4. '        
' → logprob: -12.627452850341797
    5. '   ' → logprob: -13.502452850341797
    6. '
' → logprob: -14.127452850341797
    7. '	self' → logprob: -14.877452850341797
    8. '           ' → logprob: -15.252452850341797
    9. '      ' → logprob: -15.377452850341797
    10. '  
' → logprob: -15.377452850341797

Token 155: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004006692208349705
    2. ' self' → logprob: -5.754006862640381
    3. '       ' → logprob: -7.129006862640381
    4. '   ' → logprob: -11.254006385803223
    5. 'if' → logprob: -11.754006385803223
    6. 'for' → logprob: -12.254006385803223
    7. '	self' → logprob: -14.379006385803223
    8. 'from' → logprob: -15.629006385803223
    9. '        
' → logprob: -15.629006385803223
    10. ' ' → logprob: -16.00400733947754

Token 156: '.cards' (ID: 91358)
  Prédit: '.cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cards' → logprob: -0.011073173955082893
    2. '.' → logprob: -4.511073112487793
    3. ' .' → logprob: -10.886073112487793
    4. '.c' → logprob: -13.136073112487793
    5. 'cards' → logprob: -13.636073112487793
    6. '(cards' → logprob: -14.386073112487793
    7. '.codes' → logprob: -14.636073112487793
    8. '.card' → logprob: -14.761073112487793
    9. '.cells' → logprob: -14.761073112487793
    10. '_cards' → logprob: -15.636073112487793

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. '.' → logprob: -15.568147659301758
    4. ' ' → logprob: -15.693147659301758
    5. ')' → logprob: -15.693147659301758
    6. ' ' → logprob: -17.193147659301758
    7. '    ' → logprob: -17.318147659301758
    8. '	' → logprob: -17.568147659301758
    9. ' =
' → logprob: -17.693147659301758
    10. '=

' → logprob: -17.693147659301758

Token 158: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.6933157444000244
    2. 'cards' → logprob: -0.6933157444000244
    3. 'sorted' → logprob: -9.068315505981445
    4. ' sorted' → logprob: -10.568315505981445
    5. 'list' → logprob: -12.068315505981445
    6. '(cards' → logprob: -12.193315505981445
    7. 'card' → logprob: -12.443315505981445
    8. ' ' → logprob: -13.068315505981445
    9. '[' → logprob: -13.068315505981445
    10. ' list' → logprob: -13.193315505981445

Token 159: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09323124587535858
    2. '   ' → logprob: -2.968231201171875
    3. '<|end|>' → logprob: -3.843231201171875
    4. '

' → logprob: -4.968231201171875
    5. 'def' → logprob: -4.968231201171875
    6. '    
' → logprob: -6.843231201171875
    7. '<|end|>' → logprob: -7.218231201171875
    8. ' def' → logprob: -8.718231201171875
    9. '  
' → logprob: -9.468231201171875
    10. ')' → logprob: -9.468231201171875

Token 161: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0016426921356469393
    2. '       ' → logprob: -6.62664270401001
    3. 'def' → logprob: -8.626642227172852
    4. '   ' → logprob: -9.501642227172852
    5. ' self' → logprob: -10.126642227172852
    6. 'values' → logprob: -10.751642227172852
    7. '	self' → logprob: -15.001642227172852
    8. 'value' → logprob: -15.126642227172852
    9. '        
' → logprob: -15.376642227172852
    10. '#' → logprob: -15.751642227172852

Token 162: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.04521176964044571
    2. '_values' → logprob: -3.7952117919921875
    3. 'values' → logprob: -4.2952117919921875
    4. '._' → logprob: -5.0452117919921875
    5. '.counter' → logprob: -7.5452117919921875
    6. '.' → logprob: -8.170211791992188
    7. '.value' → logprob: -8.295211791992188
    8. '_counter' → logprob: -8.545211791992188
    9. '_counts' → logprob: -8.795211791992188
    10. '.count' → logprob: -9.420211791992188

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033927254378795624
    2. '=' → logprob: -3.4089272022247314
    3. '_counter' → logprob: -8.408926963806152
    4. '_' → logprob: -10.658926963806152
    5. '_counts' → logprob: -10.783926963806152
    6. 'counter' → logprob: -12.408926963806152
    7. ' ' → logprob: -13.408926963806152
    8. '_count' → logprob: -13.408926963806152
    9. '   ' → logprob: -13.658926963806152
    10. 'Counter' → logprob: -13.783926963806152

Token 164: ' sorted' (ID: 20099)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1831364929676056
    2. ' [' → logprob: -1.9331364631652832
    3. ' sorted' → logprob: -4.433136463165283
    4. 'sorted' → logprob: -4.808136463165283
    5. 'Counter' → logprob: -6.683136463165283
    6. '[counter' → logprob: -6.933136463165283
    7. ' Counter' → logprob: -8.308136940002441
    8. '[count' → logprob: -9.808136940002441
    9. 'Sorted' → logprob: -10.933136940002441
    10. '[s' → logprob: -11.433136940002441

Token 165: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -0.5760248899459839
    2. '([' → logprob: -0.8260248899459839
    3. '(c' → logprob: -9.826025009155273
    4. '(' → logprob: -10.451025009155273
    5. '((' → logprob: -13.576025009155273
    6. '	card' → logprob: -15.826025009155273
    7. '[' → logprob: -15.951025009155273
    8. '(Card' → logprob: -16.076025009155273
    9. '(car' → logprob: -16.076025009155273
    10. '([
' → logprob: -16.076025009155273

Token 166: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.059604596346616745
    2. '.card' → logprob: -3.0596046447753906
    3. '.' → logprob: -4.559604644775391
    4. '(card' → logprob: -8.43460464477539
    5. '.val' → logprob: -8.93460464477539
    6. ' .' → logprob: -9.55960464477539
    7. '.token' → logprob: -10.80960464477539
    8. '.key' → logprob: -11.68460464477539
    9. '(' → logprob: -11.68460464477539
    10. '(.' → logprob: -12.18460464477539

Token 167: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023332247510552406
    2. 'for' → logprob: -3.773332357406616
    3. ')' → logprob: -9.523332595825195
    4. ' ' → logprob: -11.523332595825195
    5. '	for' → logprob: -13.773332595825195
    6. '   ' → logprob: -13.773332595825195
    7. ' )' → logprob: -14.523332595825195
    8. ',' → logprob: -14.773332595825195
    9. '  ' → logprob: -15.898332595825195
    10. '       ' → logprob: -16.148332595825195

Token 168: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.05499602481722832
    2. ' cards' → logprob: -3.6799960136413574
    3. ' self' → logprob: -3.8049960136413574
    4. 'card' → logprob: -5.304996013641357
    5. 'self' → logprob: -7.054996013641357
    6. 'cards' → logprob: -8.929996490478516
    7. '	card' → logprob: -10.429996490478516
    8. ' ' → logprob: -11.179996490478516
    9. '_cards' → logprob: -12.304996490478516
    10. '_card' → logprob: -12.429996490478516

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016248904168605804
    2. 'in' → logprob: -4.39124870300293
    3. 'self' → logprob: -6.26624870300293
    4. 's' → logprob: -6.51624870300293
    5. ' ' → logprob: -8.51624870300293
    6. ' self' → logprob: -10.01624870300293
    7. '<|end|>' → logprob: -10.64124870300293
    8. ' ' → logprob: -10.89124870300293
    9. 'card' → logprob: -11.14124870300293
    10. '<|end|>' → logprob: -11.39124870300293

Token 170: ' cards' (ID: 10541)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0242409706115723
    2. ' cards' → logprob: -1.0242409706115723
    3. 'cards' → logprob: -1.8992409706115723
    4. ' self' → logprob: -2.0242409706115723
    5. '(cards' → logprob: -10.524240493774414
    6. ' ' → logprob: -10.649240493774414
    7. '.cards' → logprob: -11.524240493774414
    8. '
' → logprob: -12.274240493774414
    9. '	self' → logprob: -12.399240493774414
    10. 'card' → logprob: -12.774240493774414

Token 171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006313055637292564
    2. ' )' → logprob: -7.375631332397461
    3. ')
' → logprob: -13.125631332397461
    4. '   ' → logprob: -13.875631332397461
    5. ',' → logprob: -14.125631332397461
    6. '       ' → logprob: -14.625631332397461
    7. '))' → logprob: -15.375631332397461
    8. ')

' → logprob: -16.12563133239746
    9. '),' → logprob: -17.25063133239746
    10. ')`' → logprob: -17.50063133239746

Token 172: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5553663372993469
    2. 'self' (adapté à ' self') → logprob: -0.9303663372993469
    3. '   ' → logprob: -4.180366516113281
    4. ' self' → logprob: -4.555366516113281
    5. 'def' → logprob: -5.180366516113281
    6. ' ' → logprob: -9.430366516113281
    7. '	self' → logprob: -9.680366516113281
    8. '  ' → logprob: -10.680366516113281
    9. '      ' → logprob: -11.055366516113281
    10. '
' → logprob: -11.055366516113281

Token 174: '.count' (ID: 14019)
  Prédit: '.values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.9418215155601501
    2. '.count' → logprob: -1.441821575164795
    3. '.counter' → logprob: -1.941821575164795
    4. '_counts' → logprob: -2.066821575164795
    5. '.value' → logprob: -3.316821575164795
    6. '._' → logprob: -3.566821575164795
    7. '.rank' → logprob: -4.316821575164795
    8. '.' → logprob: -5.191821575164795
    9. '_counter' → logprob: -5.316821575164795
    10. '.frequency' → logprob: -5.441821575164795

Token 175: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.4121114822482923e-06
    2. '=' → logprob: -13.500003814697266
    3. ' =' → logprob: -13.875003814697266
    4. 'er' → logprob: -14.000003814697266
    5. '_values' → logprob: -16.750003814697266
    6. '_' → logprob: -17.000003814697266
    7. 'ed' → logprob: -17.375003814697266
    8. '_s' → logprob: -17.500003814697266
    9. '=s' → logprob: -17.625003814697266
    10. ' s' → logprob: -17.750003814697266

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00977686420083046
    2. '=' → logprob: -4.634777069091797
    3. ' ' → logprob: -10.884777069091797
    4. ')' → logprob: -13.759777069091797
    5. ' )' → logprob: -15.509777069091797
    6. ' =
' → logprob: -15.634777069091797
    7. ' ' → logprob: -15.634777069091797
    8. 's' → logprob: -16.134777069091797
    9. '<|end|>' → logprob: -16.134777069091797
    10. ':' → logprob: -16.634777069091797

Token 177: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0052360063418745995
    2. ' Counter' → logprob: -5.2552361488342285
    3. 'Count' → logprob: -14.88023567199707
    4. 'counter' → logprob: -14.88023567199707
    5. 'Card' → logprob: -15.25523567199707
    6. ' ' → logprob: -15.63023567199707
    7. 'C' → logprob: -15.88023567199707
    8. '.Counter' → logprob: -15.88023567199707
    9. 'Counters' → logprob: -15.88023567199707
    10. 'Value' → logprob: -16.25523567199707

Token 178: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2990637719631195
    2. '(card' → logprob: -1.424063801765442
    3. '(value' → logprob: -4.924063682556152
    4. '([' → logprob: -5.424063682556152
    5. '(c' → logprob: -5.674063682556152
    6. '(v' → logprob: -6.299063682556152
    7. '(' → logprob: -7.549063682556152
    8. '(val' → logprob: -9.174063682556152
    9. ' (' → logprob: -9.674063682556152
    10. '((' → logprob: -10.049063682556152

Token 179: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.1304091215133667
    2. 'values' → logprob: -2.5054092407226562
    3. '.value' → logprob: -4.005409240722656
    4. '.card' → logprob: -5.130409240722656
    5. '(card' → logprob: -5.255409240722656
    6. 'card' → logprob: -5.880409240722656
    7. '.cards' → logprob: -6.505409240722656
    8. 'v' → logprob: -6.755409240722656
    9. 'self' → logprob: -6.880409240722656
    10. 'value' → logprob: -6.880409240722656

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. ' )' → logprob: -11.000018119812012
    3. ').' → logprob: -14.125018119812012
    4. '())' → logprob: -15.000018119812012
    5. ')
' → logprob: -15.375018119812012
    6. '))' → logprob: -15.625018119812012
    7. ')`' → logprob: -16.250019073486328
    8. '   ' → logprob: -17.000019073486328
    9. ')}' → logprob: -17.375019073486328
    10. '}' → logprob: -17.625019073486328

Token 181: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2994984984397888
    2. '   ' → logprob: -1.4244985580444336
    3. '<|end|>' → logprob: -4.549498558044434
    4. ' def' → logprob: -5.674498558044434
    5. ')' → logprob: -6.174498558044434
    6. '
' → logprob: -6.924498558044434
    7. '    
' → logprob: -7.549498558044434
    8. '<|end|>' → logprob: -8.674498558044434
    9. ' ' → logprob: -9.049498558044434
    10. '  ' → logprob: -9.924498558044434

Token 182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.310693111619912e-05
    2. '   ' → logprob: -10.750042915344238
    3. ' def' → logprob: -10.750042915344238
    4. '@property' → logprob: -16.750043869018555
    5. '@' → logprob: -18.250043869018555
    6. '	def' → logprob: -18.625043869018555
    7. ' ' → logprob: -18.750043869018555
    8. '    
' → logprob: -19.625043869018555
    9. '```' → logprob: -20.500043869018555
    10. ')' → logprob: -20.500043869018555

Token 183: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5399506092071533
    2. ' is' → logprob: -0.9149506092071533
    3. '_is' → logprob: -5.039950370788574
    4. ' has' → logprob: -5.664950370788574
    5. 'has' → logprob: -6.539950370788574
    6. 'evaluate' → logprob: -6.539950370788574
    7. ' evaluate' → logprob: -7.414950370788574
    8. 'get' → logprob: -7.539950370788574
    9. ' classify' → logprob: -7.914950370788574
    10. 'rank' → logprob: -8.039950370788574

Token 184: '_st' (ID: 2518)
  Prédit: '_flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flush' → logprob: -0.9001203775405884
    2. '_pair' → logprob: -1.1501203775405884
    3. '_' → logprob: -2.025120258331299
    4. '_st' → logprob: -2.150120258331299
    5. '_four' → logprob: -4.900120258331299
    6. '_p' → logprob: -4.900120258331299
    7. '_one' → logprob: -5.025120258331299
    8. '_full' → logprob: -6.025120258331299
    9. '_three' → logprob: -6.275120258331299
    10. '_n' → logprob: -6.400120258331299

Token 185: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0017471733735874295
    2. 'rait' → logprob: -6.376747131347656
    3. 'r' → logprob: -11.251747131347656
    4. 'rai' → logprob: -11.751747131347656
    5. '_ra' → logprob: -12.376747131347656
    6. '_' → logprob: -12.876747131347656
    7. 'rain' → logprob: -13.001747131347656
    8. 'raid' → logprob: -13.126747131347656
    9. 'ray' → logprob: -13.376747131347656
    10. 'rail' → logprob: -13.501747131347656

Token 186: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -1.8074162653647363e-05
    2. '   ' → logprob: -12.375018119812012
    3. '```' → logprob: -12.625018119812012
    4. 'igh' → logprob: -12.875018119812012
    5. 'igth' → logprob: -13.125018119812012
    6. '``' → logprob: -13.125018119812012
    7. 'i' → logprob: -14.500018119812012
    8. '_flush' → logprob: -15.000018119812012
    9. '>' → logprob: -15.000018119812012
    10. 'a' → logprob: -15.125018119812012

Token 187: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01639421097934246
    2. '(' → logprob: -4.141394138336182
    3. ' (' → logprob: -8.01639461517334
    4. 'self' → logprob: -11.01639461517334
    5. '   ' → logprob: -12.39139461517334
    6. '()' → logprob: -13.01639461517334
    7. ' ' → logprob: -13.14139461517334
    8. '(s' → logprob: -13.89139461517334
    9. '(
' → logprob: -14.14139461517334
    10. '       ' → logprob: -14.51639461517334

Token 188: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46941977739334106
    2. ')' → logprob: -1.3444197177886963
    3. '):' → logprob: -2.4694197177886963
    4. '(self' → logprob: -3.8444197177886963
    5. '):
' → logprob: -5.219419956207275
    6. '   ' → logprob: -7.094419956207275
    7. ' self' → logprob: -7.469419956207275
    8. ',' → logprob: -7.719419956207275
    9. ')(' → logprob: -8.594419479370117
    10. ' ' → logprob: -9.219419479370117

Token 189: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007144584087654948
    2. '(' → logprob: -7.250714302062988
    3. ' (' → logprob: -13.000714302062988
    4. 'self' → logprob: -13.250714302062988
    5. '(
' → logprob: -16.375715255737305
    6. '(s' → logprob: -16.625715255737305
    7. '   ' → logprob: -16.875715255737305
    8. ':' → logprob: -17.250715255737305
    9. ' self' → logprob: -17.250715255737305
    10. '()' → logprob: -17.375715255737305

Token 190: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.25210532546043396
    2. ' bool' → logprob: -1.5021053552627563
    3. 'Optional' → logprob: -9.002105712890625
    4. ' Optional' → logprob: -10.127105712890625
    5. ' ' → logprob: -11.877105712890625
    6. '	bool' → logprob: -13.377105712890625
    7. '   ' → logprob: -13.627105712890625
    8. 'Bool' → logprob: -13.877105712890625
    9. '  ' → logprob: -14.502105712890625
    10. ' ' → logprob: -15.002105712890625

Token 191: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008128108456730843
    2. '(self' → logprob: -5.1331281661987305
    3. ':
' → logprob: -6.3831281661987305
    4. '(' → logprob: -8.75812816619873
    5. '       ' → logprob: -9.38312816619873
    6. '):' → logprob: -9.50812816619873
    7. '   ' → logprob: -9.63312816619873
    8. '():' → logprob: -10.00812816619873
    9. 'self' → logprob: -10.50812816619873
    10. ' :' → logprob: -11.00812816619873

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002979240380227566
    2. '   ' → logprob: -9.500297546386719
    3. ' if' → logprob: -9.750297546386719
    4. '
' → logprob: -9.875297546386719
    5. '"""' → logprob: -11.000297546386719
    6. '        
' → logprob: -11.125297546386719
    7. '```' → logprob: -11.625297546386719
    8. '    ' → logprob: -11.750297546386719
    9. '      ' → logprob: -11.875297546386719
    10. '#' → logprob: -12.000297546386719

Token 193: ' #' (ID: 1069)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.9778718948364258
    2. 'if' → logprob: -1.7278718948364258
    3. '#' (adapté à ' #') → logprob: -2.102871894836426
    4. '   ' → logprob: -2.477871894836426
    5. 'for' → logprob: -2.477871894836426
    6. '       ' → logprob: -2.727871894836426
    7. 'sorted' → logprob: -2.852871894836426
    8. '"""' → logprob: -5.102871894836426
    9. 'diff' → logprob: -5.227871894836426
    10. 'return' → logprob: -5.227871894836426

Token 194: ' Cas' (ID: 8066)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.7208878397941589
    2. '#' → logprob: -1.3458878993988037
    3. 'if' → logprob: -2.5958878993988037
    4. 'sorted' → logprob: -2.9708878993988037
    5. ' values' → logprob: -4.095887660980225
    6. 'for' → logprob: -4.095887660980225
    7. '   ' → logprob: -4.095887660980225
    8. ' #' → logprob: -4.345887660980225
    9. '"""' → logprob: -4.345887660980225
    10. 'unique' → logprob: -4.595887660980225

Token 195: ' normal' (ID: 6078)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.2317405343055725
    2. '   ' → logprob: -2.3567404747009277
    3. ' où' → logprob: -2.9817404747009277
    4. 'où' → logprob: -3.6067404747009277
    5. '       ' → logprob: -4.731740474700928
    6. 'where' → logprob: -4.981740474700928
    7. 'len' → logprob: -5.606740474700928
    8. ' len' → logprob: -5.981740474700928
    9. '    ' → logprob: -6.106740474700928
    10. ' ' → logprob: -6.606740474700928

Token 196: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42069780826568604
    2. ':' → logprob: -2.6706976890563965
    3. ' if' → logprob: -2.6706976890563965
    4. ':
' → logprob: -2.7956976890563965
    5. '   ' → logprob: -2.9206976890563965
    6. ' for' → logprob: -3.5456976890563965
    7. 'if' → logprob: -3.9206976890563965
    8. ' and' → logprob: -4.5456976890563965
    9. 'for' → logprob: -4.5456976890563965
    10. 'return' → logprob: -4.6706976890563965

Token 197: 'suite' (ID: 105055)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7173582911491394
    2. 'len' → logprob: -1.2173583507537842
    3. 'all' → logprob: -1.5923583507537842
    4. ')' → logprob: -5.342358112335205
    5. ' all' → logprob: -5.467358112335205
    6. ' self' → logprob: -6.467358112335205
    7. 'return' → logprob: -7.717358112335205
    8. ' len' → logprob: -7.967358112335205
    9. '   ' → logprob: -8.342358589172363
    10. 'sorted' → logprob: -8.592358589172363

Token 198: ' classique' (ID: 76895)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.39304980635643005
    2. 'and' → logprob: -1.3930498361587524
    3. ')' → logprob: -2.643049716949463
    4. '   ' → logprob: -6.143049716949463
    5. '):' → logprob: -6.643049716949463
    6. 'len' → logprob: -7.768049716949463
    7. ' )' → logprob: -8.143050193786621
    8. '):
' → logprob: -8.643050193786621
    9. ')
' → logprob: -8.768050193786621
    10. ',' → logprob: -8.893050193786621

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3936358392238617
    2. '):' → logprob: -1.643635869026184
    3. '       ' → logprob: -3.2686357498168945
    4. ' and' → logprob: -3.2686357498168945
    5. '   ' → logprob: -3.6436357498168945
    6. ')
' → logprob: -4.7686357498168945
    7. '):
' → logprob: -4.7686357498168945
    8. ':' → logprob: -5.7686357498168945
    9. ' )' → logprob: -5.8936357498168945
    10. ' if' → logprob: -6.1436357498168945

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006087342277169228
    2. '   ' → logprob: -5.506087303161621
    3. ':' → logprob: -7.881087303161621
    4. ' for' → logprob: -7.881087303161621
    5. '        
' → logprob: -8.131087303161621
    6. ' if' → logprob: -8.506087303161621
    7. '
' → logprob: -8.756087303161621
    8. '    ' → logprob: -9.131087303161621
    9. '        ' → logprob: -9.381087303161621
    10. 'if' → logprob: -9.506087303161621

Token 201: ' sorted' (ID: 20099)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6493383646011353
    2. 'for' → logprob: -1.0243383646011353
    3. ' for' → logprob: -2.8993382453918457
    4. ' return' → logprob: -3.5243382453918457
    5. '       ' → logprob: -4.274338245391846
    6. 'if' → logprob: -4.399338245391846
    7. '   ' → logprob: -5.899338245391846
    8. 'diff' → logprob: -6.149338245391846
    9. 'range' → logprob: -7.149338245391846
    10. 'expected' → logprob: -7.274338245391846

Token 202: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.29871585965156555
    2. '_vals' → logprob: -2.298715829849243
    3. 'self' → logprob: -2.548715829849243
    4. '(self' → logprob: -3.173715829849243
    5. 'values' → logprob: -4.298716068267822
    6. 's' → logprob: -4.298716068267822
    7. '_' → logprob: -5.548716068267822
    8. '_self' → logprob: -5.923716068267822
    9. 'vals' → logprob: -6.173716068267822
    10. '_s' → logprob: -7.548716068267822

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09118371456861496
    2. '=' → logprob: -2.466183662414551
    3. ' ==' → logprob: -6.716183662414551
    4. '[' → logprob: -7.091183662414551
    5. '==' → logprob: -8.96618366241455
    6. '[:]' → logprob: -11.34118366241455
    7. 's' → logprob: -11.46618366241455
    8. ')' → logprob: -11.71618366241455
    9. ' ' → logprob: -11.84118366241455
    10. ' =[' → logprob: -11.96618366241455

Token 204: ' sorted' (ID: 20099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043197523802518845
    2. ' self' → logprob: -3.1681976318359375
    3. 'sorted' → logprob: -9.418197631835938
    4. '[self' → logprob: -10.043197631835938
    5. '   ' → logprob: -10.168197631835938
    6. 'list' → logprob: -11.043197631835938
    7. ' sorted' → logprob: -11.918197631835938
    8. '       ' → logprob: -12.918197631835938
    9. ' list' → logprob: -13.043197631835938
    10. '(self' → logprob: -13.168197631835938

Token 205: '(set' (ID: 25904)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2104008048772812
    2. 'self' → logprob: -1.8354008197784424
    3. '(set' → logprob: -3.5854008197784424
    4. 'set' → logprob: -6.085400581359863
    5. '(list' → logprob: -10.085400581359863
    6. '(v' → logprob: -10.460400581359863
    7. 'list' → logprob: -11.085400581359863
    8. '({' → logprob: -11.210400581359863
    9. 'v' → logprob: -11.585400581359863
    10. '(value' → logprob: -11.585400581359863

Token 206: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008856239728629589
    2. 'self' → logprob: -4.758856296539307
    3. ')' → logprob: -8.758855819702148
    4. '(' → logprob: -10.258855819702148
    5. 's' → logprob: -11.383855819702148
    6. ')(' → logprob: -11.883855819702148
    7. ')
' → logprob: -12.383855819702148
    8. ' self' → logprob: -12.383855819702148
    9. '(
' → logprob: -12.633855819702148
    10. '   ' → logprob: -12.633855819702148

Token 207: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0005320638883858919
    2. 'values' → logprob: -7.875532150268555
    3. ' .' → logprob: -9.375532150268555
    4. '.' → logprob: -10.250532150268555
    5. ').' → logprob: -10.875532150268555
    6. '   ' → logprob: -12.875532150268555
    7. ' values' → logprob: -13.125532150268555
    8. '.value' → logprob: -13.250532150268555
    9. ')' → logprob: -13.375532150268555
    10. '	values' → logprob: -13.500532150268555

Token 208: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.009001323953270912
    2. '))' → logprob: -5.0090012550354
    3. ')
' → logprob: -6.2590012550354
    4. ' ))
' → logprob: -8.134001731872559
    5. ')' → logprob: -9.884001731872559
    6. '))

' → logprob: -11.259001731872559
    7. '       ' → logprob: -12.509001731872559
    8. '   ' → logprob: -13.009001731872559
    9. ')))
' → logprob: -13.509001731872559
    10. ' )
' → logprob: -13.509001731872559

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006830069469287992
    2. '   ' → logprob: -8.000682830810547
    3. '
' → logprob: -9.000682830810547
    4. '        
' → logprob: -9.875682830810547
    5. ')' → logprob: -10.000682830810547
    6. ' if' → logprob: -10.250682830810547
    7. '<|end|>' → logprob: -10.375682830810547
    8. 'if' → logprob: -11.000682830810547
    9. '        ' → logprob: -11.250682830810547
    10. ',' → logprob: -12.125682830810547

Token 210: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3743639886379242
    2. '       ' → logprob: -1.4993640184402466
    3. ' if' → logprob: -2.624363899230957
    4. 'return' → logprob: -4.999363899230957
    5. 'for' → logprob: -4.999363899230957
    6. '   ' → logprob: -6.374363899230957
    7. ' for' → logprob: -6.999363899230957
    8. ' return' → logprob: -8.124363899230957
    9. '        
' → logprob: -9.999363899230957
    10. '
' → logprob: -10.374363899230957

Token 211: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10022865980863571
    2. ' len' → logprob: -2.3502285480499268
    3. '	len' → logprob: -11.975228309631348
    4. ' ' → logprob: -12.100228309631348
    5. '   ' → logprob: -12.475228309631348
    6. '(len' → logprob: -13.350228309631348
    7. ' sorted' → logprob: -13.350228309631348
    8. 'sorted' → logprob: -13.350228309631348
    9. '  ' → logprob: -14.850228309631348
    10. 'max' → logprob: -14.975228309631348

Token 212: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -6.980854959692806e-05
    2. '(' → logprob: -9.875069618225098
    3. ' (' → logprob: -11.125069618225098
    4. 'sorted' → logprob: -13.375069618225098
    5. '(s' → logprob: -13.375069618225098
    6. ' sorted' → logprob: -16.375070571899414
    7. '(
' → logprob: -16.375070571899414
    8. '(sort' → logprob: -16.500070571899414
    9. ' ' → logprob: -16.875070571899414
    10. '(set' → logprob: -17.000070571899414

Token 213: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00021617230959236622
    2. 'values' → logprob: -8.500216484069824
    3. 'sorted' → logprob: -12.500216484069824
    4. '(sorted' → logprob: -12.750216484069824
    5. '_sorted' → logprob: -12.750216484069824
    6. '(values' → logprob: -14.125216484069824
    7. 's' → logprob: -14.125216484069824
    8. 'Values' → logprob: -14.625216484069824
    9. ')' → logprob: -14.875216484069824
    10. '_' → logprob: -15.250216484069824

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02562973089516163
    2. '==' → logprob: -4.15062952041626
    3. ' ==' → logprob: -4.77562952041626
    4. ' )' → logprob: -7.65062952041626
    5. ')==' → logprob: -7.65062952041626
    6. ' !=' → logprob: -9.400629997253418
    7. '!=' → logprob: -10.275629997253418
    8. '=' → logprob: -10.525629997253418
    9. ')!=' → logprob: -12.150629997253418
    10. '```' → logprob: -12.900629997253418

Token 215: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6050405502319336
    2. ' ==' → logprob: -1.1050405502319336
    3. ' !=' → logprob: -2.3550405502319336
    4. '!=' → logprob: -3.6050405502319336
    5. ')' → logprob: -7.730040550231934
    6. '=' → logprob: -8.855040550231934
    7. ' ' → logprob: -10.730040550231934
    8. ')==' → logprob: -10.855040550231934
    9. ')!=' → logprob: -11.980040550231934
    10. '```' → logprob: -12.105040550231934

Token 216: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005537479883059859
    2. ' ' → logprob: -7.500553607940674
    3. '  ' → logprob: -15.750554084777832
    4. ' ' → logprob: -16.125553131103516
    5. 'len' → logprob: -16.125553131103516
    6. '   ' → logprob: -16.438053131103516
    7. '```' → logprob: -16.688053131103516
    8. '
' → logprob: -16.938053131103516
    9. '1' → logprob: -17.313053131103516
    10. '	' → logprob: -17.375553131103516

Token 217: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'len' → logprob: -15.750003814697266
    4. '```' → logprob: -19.125003814697266
    5. '५' → logprob: -19.187503814697266
    6. '1' → logprob: -19.187503814697266
    7. '
' → logprob: -19.312503814697266
    8. ' ' → logprob: -19.375003814697266
    9. '۵' → logprob: -19.437503814697266
    10. '５' → logprob: -19.500003814697266

Token 218: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5443121194839478
    2. ':' → logprob: -0.9193121194839478
    3. ' or' → logprob: -4.044312000274658
    4. '           ' → logprob: -6.669312000274658
    5. '       ' → logprob: -6.794312000274658
    6. '):
' → logprob: -7.544312000274658
    7. ':return' → logprob: -8.544312477111816
    8. ')' → logprob: -9.169312477111816
    9. '):' → logprob: -9.669312477111816
    10. '   ' → logprob: -9.669312477111816

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012905719690024853
    2. ':
' → logprob: -4.637905597686768
    3. ':' → logprob: -6.512905597686768
    4. '       ' → logprob: -7.137905597686768
    5. ' or' → logprob: -8.012906074523926
    6. 'return' → logprob: -8.387906074523926
    7. ':return' → logprob: -9.262906074523926
    8. ' return' → logprob: -9.637906074523926
    9. '   ' → logprob: -10.012906074523926
    10. '
' → logprob: -10.137906074523926

Token 220: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8954668045043945
    2. 'return' (adapté à ' return') → logprob: -1.0204668045043945
    3. ' return' → logprob: -1.6454668045043945
    4. '
' → logprob: -3.2704668045043945
    5. '       ' → logprob: -9.270466804504395
    6. '               ' → logprob: -10.020466804504395
    7. '   ' → logprob: -10.395466804504395
    8. ' 
' → logprob: -10.770466804504395
    9. '	return' → logprob: -11.395466804504395
    10. '
' → logprob: -11.520466804504395

Token 221: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005233763717114925
    2. ' False' → logprob: -5.2552337646484375
    3. 'True' → logprob: -17.755233764648438
    4. '(False' → logprob: -18.255233764648438
    5. '   ' → logprob: -20.130233764648438
    6. 'false' → logprob: -20.880233764648438
    7. '=False' → logprob: -21.255233764648438
    8. '
' → logprob: -21.505233764648438
    9. 'F' → logprob: -21.755233764648438
    10. ' True' → logprob: -22.630233764648438

Token 222: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11568249017000198
    2. '       ' → logprob: -2.240682601928711
    3. '        
' → logprob: -5.990682601928711
    4. '    
' → logprob: -9.240682601928711
    5. '  
' → logprob: -9.365682601928711
    6. '
' → logprob: -9.615682601928711
    7. ' 
' → logprob: -10.990682601928711
    8. '   ' → logprob: -11.115682601928711
    9. 'if' → logprob: -11.240682601928711
    10. 'for' → logprob: -11.615682601928711

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005342024378478527
    2. '
' → logprob: -5.75534200668335
    3. '   ' → logprob: -7.38034200668335
    4. '        
' → logprob: -7.38034200668335
    5. 'for' → logprob: -8.130342483520508
    6. 'if' → logprob: -8.130342483520508
    7. ' for' → logprob: -9.130342483520508
    8. '    
' → logprob: -9.505342483520508
    9. 'return' → logprob: -9.880342483520508
    10. ' if' → logprob: -10.130342483520508

Token 224: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7130463719367981
    2. 'return' → logprob: -1.5880463123321533
    3. ' for' → logprob: -2.2130463123321533
    4. 'if' → logprob: -2.3380463123321533
    5. ' return' → logprob: -2.9630463123321533
    6. '       ' → logprob: -3.9630463123321533
    7. ' if' → logprob: -4.088046550750732
    8. '   ' → logprob: -4.713046550750732
    9. 'first' → logprob: -6.588046550750732
    10. ' first' → logprob: -7.088046550750732

Token 225: ' note' (ID: 7477)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1597837209701538
    2. 'return' → logprob: -1.1597837209701538
    3. ' return' → logprob: -1.6597837209701538
    4. ' if' → logprob: -2.6597838401794434
    5. 'for' → logprob: -2.7847838401794434
    6. ' for' → logprob: -3.5347838401794434
    7. '#' → logprob: -4.659783840179443
    8. 'diff' → logprob: -5.284783840179443
    9. 'min' → logprob: -5.659783840179443
    10. ' min' → logprob: -7.409783840179443

Token 226: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7564480304718018
    2. ' =' → logprob: -2.2564480304718018
    3. '_min' → logprob: -2.3814480304718018
    4. ' for' → logprob: -2.8814480304718018
    5. '   ' → logprob: -3.0064480304718018
    6. 'min' → logprob: -3.1314480304718018
    7. ' min' → logprob: -3.3814480304718018
    8. ' max' → logprob: -3.6314480304718018
    9. 'max' → logprob: -3.8814480304718018
    10. '_' → logprob: -4.131447792053223

Token 227: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.678456723690033
    2. 'if' → logprob: -1.0534567832946777
    3. 'sorted' → logprob: -2.6784567832946777
    4. 'for' → logprob: -3.8034567832946777
    5. ' return' → logprob: -4.178456783294678
    6. 'min' → logprob: -4.553456783294678
    7. 'max' → logprob: -4.553456783294678
    8. '   ' → logprob: -5.303456783294678
    9. 'diff' → logprob: -5.803456783294678
    10. ' if' → logprob: -5.928456783294678

Token 228: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3140456676483154
    2. ' valeurs' → logprob: -1.4390456676483154
    3. 'diff' → logprob: -1.6890456676483154
    4. '#' → logprob: -2.1890456676483154
    5. 'values' → logprob: -3.1890456676483154
    6. 'dif' → logprob: -3.5640456676483154
    7. ' values' → logprob: -3.9390456676483154
    8. ' diff' → logprob: -4.1890459060668945
    9. ' val' → logprob: -4.3140459060668945
    10. ' #' → logprob: -4.5640459060668945

Token 229: ' sont' (ID: 5242)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.22056622803211212
    2. '[' → logprob: -2.7205662727355957
    3. 'max' → logprob: -3.3455662727355957
    4. '==' → logprob: -3.4705662727355957
    5. 'min' → logprob: -4.095566272735596
    6. '[-' → logprob: -4.970566272735596
    7. '=' → logprob: -5.095566272735596
    8. 'adj' → logprob: -5.345566272735596
    9. ' ==' → logprob: -5.470566272735596
    10. 'con' → logprob: -5.845566272735596

Token 230: ' ' (ID: 220)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.9529721736907959
    2. 'cons' → logprob: -1.577972173690796
    3. 'con' → logprob: -1.952972173690796
    4. ' cons' → logprob: -2.452972173690796
    5. 'cont' → logprob: -3.577972173690796
    6. 'sorted' → logprob: -3.577972173690796
    7. 'self' → logprob: -3.827972173690796
    8. '[' → logprob: -4.077972412109375
    9. '   ' → logprob: -4.202972412109375
    10. 'adj' → logprob: -4.577972412109375

Token 231: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2085281610488892
    2. 'self' → logprob: -1.5835281610488892
    3. 'contin' → logprob: -2.0835280418395996
    4. 'sorted' → logprob: -2.0835280418395996
    5. 'range' → logprob: -2.7085280418395996
    6. 'list' → logprob: -3.7085280418395996
    7. 'cons' → logprob: -3.8335280418395996
    8. 'continu' → logprob: -3.9585280418395996
    9. 'con' → logprob: -4.4585280418396
    10. '[self' → logprob: -4.4585280418396

Token 232: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13186754286289215
    2. ' and' → logprob: -3.3818676471710205
    3. ' through' → logprob: -3.8818676471710205
    4. ' à' → logprob: -4.756867408752441
    5. '+' → logprob: -5.006867408752441
    6. ' ,' → logprob: -5.131867408752441
    7. 'and' → logprob: -5.131867408752441
    8. ' to' → logprob: -5.256867408752441
    9. ' +' → logprob: -5.381867408752441
    10. ' ' → logprob: -5.506867408752441

Token 233: '13' (ID: 1311)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.49075397849082947
    2. '13' → logprob: -2.2407538890838623
    3. '5' → logprob: -2.6157538890838623
    4. ',' → logprob: -3.3657538890838623
    5. ' ' → logprob: -3.3657538890838623
    6. '1' → logprob: -3.4907538890838623
    7. 'à' → logprob: -3.6157538890838623
    8. '...' → logprob: -3.8657538890838623
    9. ' to' → logprob: -4.365754127502441
    10. '..' → logprob: -5.490754127502441

Token 234: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17226733267307281
    2. ' for' → logprob: -2.172267436981201
    3. 'for' → logprob: -4.047267436981201
    4. ' if' → logprob: -4.422267436981201
    5. 'if' → logprob: -5.297267436981201
    6. '
' → logprob: -5.547267436981201
    7. '   ' → logprob: -6.172267436981201
    8. '        
' → logprob: -6.297267436981201
    9. 'return' → logprob: -6.797267436981201
    10. ' return' → logprob: -7.547267436981201

Token 235: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '13' → logprob: -0.6389274001121521
    2. '1' → logprob: -2.388927459716797
    3. 'self' → logprob: -2.638927459716797
    4. 'une' → logprob: -3.013927459716797
    5. 'la' → logprob: -3.013927459716797
    6. 'l' → logprob: -3.263927459716797
    7. 'des' → logprob: -3.388927459716797
    8. 'val' → logprob: -3.638927459716797
    9. 'un' → logprob: -4.263927459716797
    10. 'max' → logprob: -4.263927459716797

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8097614645957947
    2. '13' → logprob: -1.1847615242004395
    3. 'l' → logprob: -2.0597615242004395
    4. 'la' → logprob: -2.6847615242004395
    5. 'une' → logprob: -4.0597615242004395
    6. 'ace' → logprob: -4.6847615242004395
    7. 'le' → logprob: -5.0597615242004395
    8. 'poss' → logprob: -5.8097615242004395
    9. 'Ace' → logprob: -6.4347615242004395
    10. 'A' → logprob: -6.6847615242004395

Token 237: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07239507138729095
    2. ',' → logprob: -3.322395086288452
    3. ' and' → logprob: -4.572394847869873
    4. ' not' → logprob: -4.697394847869873
    5. ' +' → logprob: -5.822394847869873
    6. ' ' → logprob: -6.072394847869873
    7. ' if' → logprob: -6.072394847869873
    8. '+' → logprob: -6.572394847869873
    9. '0' → logprob: -6.822394847869873
    10. 'in' → logprob: -6.947394847869873

Token 238: ' As' (ID: 1877)
  Prédit: 'As'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'As' → logprob: -0.6937658190727234
    2. 'as' → logprob: -0.9437658190727234
    3. ' as' → logprob: -2.943765878677368
    4. 'l' → logprob: -3.193765878677368
    5. ''as' → logprob: -5.318765640258789
    6. ' As' → logprob: -5.443765640258789
    7. ' l' → logprob: -5.818765640258789
    8. 'ace' → logprob: -5.943765640258789
    9. '1' → logprob: -7.068765640258789
    10. 'Ace' → logprob: -7.693765640258789

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021133486181497574
    2. ' if' → logprob: -4.7711334228515625
    3. '
' → logprob: -4.8961334228515625
    4. 'if' → logprob: -6.3961334228515625
    5. ' for' → logprob: -6.6461334228515625
    6. '        
' → logprob: -7.0211334228515625
    7. '   ' → logprob: -7.8961334228515625
    8. 'for' → logprob: -8.646133422851562
    9. ',' → logprob: -8.646133422851562
    10. 'return' → logprob: -9.646133422851562

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06274407356977463
    2. ' for' → logprob: -3.687744140625
    3. ' if' → logprob: -4.187744140625
    4. '
' → logprob: -5.437744140625
    5. 'if' → logprob: -5.437744140625
    6. '   ' → logprob: -5.437744140625
    7. 'for' → logprob: -5.812744140625
    8. 'return' → logprob: -6.312744140625
    9. '        
' → logprob: -6.437744140625
    10. ' return' → logprob: -7.187744140625

Token 241: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1153384447097778
    2. 'for' → logprob: -1.2403384447097778
    3. 'return' → logprob: -1.2403384447097778
    4. ' return' → logprob: -3.2403383255004883
    5. ' for' → logprob: -3.8653383255004883
    6. '   ' → logprob: -4.490338325500488
    7. ' if' → logprob: -4.490338325500488
    8. '       ' → logprob: -4.865338325500488
    9. '#' (adapté à ' #') → logprob: -6.615338325500488
    10. 'first' → logprob: -6.740338325500488

Token 242: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3995131552219391
    2. '#' → logprob: -1.7745131254196167
    3. ' if' → logprob: -2.1495132446289062
    4. 'for' → logprob: -4.524513244628906
    5. 'diff' → logprob: -4.524513244628906
    6. ' #' → logprob: -4.774513244628906
    7. '   ' → logprob: -5.774513244628906
    8. 'return' → logprob: -6.024513244628906
    9. ' for' → logprob: -6.399513244628906
    10. ' return' → logprob: -6.649513244628906

Token 243: ' considère' (ID: 176437)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9005843997001648
    2. 's' → logprob: -2.7755844593048096
    3. 'if' → logprob: -2.7755844593048096
    4. 'diff' → logprob: -2.7755844593048096
    5. 'continue' → logprob: -3.1505844593048096
    6. 'return' → logprob: -3.2755844593048096
    7. 'est' → logprob: -3.4005844593048096
    8. ' continue' → logprob: -3.6505844593048096
    9. 'v' → logprob: -3.7755844593048096
    10. 'contin' → logprob: -3.9005844593048096

Token 244: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -1.1424959897994995
    2. ' l' → logprob: -1.3924959897994995
    3. ' la' → logprob: -1.8924959897994995
    4. 'l' → logprob: -2.517496109008789
    5. 'la' → logprob: -2.892496109008789
    6. ' que' → logprob: -3.142496109008789
    7. ' ' → logprob: -4.267496109008789
    8. ' ici' → logprob: -4.267496109008789
    9. ' aussi' → logprob: -4.392496109008789
    10. 'le' → logprob: -4.642496109008789

Token 245: ' possibilités' (ID: 119756)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.03076986037194729
    2. 'cas' → logprob: -3.6557698249816895
    3. ' possibilités' → logprob: -6.4057698249816895
    4. 'poss' → logprob: -7.7807698249816895
    5. ' types' → logprob: -7.9057698249816895
    6. ' suites' → logprob: -8.030770301818848
    7. 'situ' → logprob: -8.905770301818848
    8. ' situations' → logprob: -9.155770301818848
    9. ' cases' → logprob: -9.280770301818848
    10. ' ' → logprob: -9.280770301818848

Token 246: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20269142091274261
    2. ' if' → logprob: -2.2026913166046143
    3. 'if' → logprob: -3.0776913166046143
    4. ' :' → logprob: -4.827691555023193
    5. '       ' → logprob: -4.952691555023193
    6. 'for' → logprob: -5.452691555023193
    7. ' for' → logprob: -6.077691555023193
    8. '#' → logprob: -7.077691555023193
    9. '   ' → logprob: -7.202691555023193
    10. ':
' → logprob: -7.327691555023193

Token 247: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.11669647693634033
    2. 'l' → logprob: -2.991696357727051
    3. ' la' → logprob: -3.741696357727051
    4. 'une' → logprob: -3.866696357727051
    5. 'straight' → logprob: -4.991696357727051
    6. 'le' → logprob: -6.741696357727051
    7. ' l' → logprob: -6.866696357727051
    8. ' une' → logprob: -6.866696357727051
    9. 'les' → logprob: -7.241696357727051
    10. 'contin' → logprob: -7.366696357727051

Token 248: ''as' (ID: 73430)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32346096634864807
    2. 'es' → logprob: -1.6984609365463257
    3. 'e' → logprob: -2.5734610557556152
    4. ''as' → logprob: -4.573461055755615
    5. ''' → logprob: -6.198461055755615
    6. 'as' → logprob: -6.448461055755615
    7. ''ordre' → logprob: -7.323461055755615
    8. 'is' → logprob: -8.198460578918457
    9. ''é' → logprob: -8.198460578918457
    10. 'A' → logprob: -8.323460578918457

Token 249: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1469634473323822
    2. ' if' → logprob: -3.271963357925415
    3. ' :' → logprob: -3.646963357925415
    4. '==' → logprob: -4.146963596343994
    5. ',' → logprob: -4.396963596343994
    6. ' (' → logprob: -4.771963596343994
    7. 'if' → logprob: -5.021963596343994
    8. ' ==' → logprob: -5.271963596343994
    9. ' in' → logprob: -5.396963596343994
    10. '   ' → logprob: -5.521963596343994

Token 250: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2774626910686493
    2. 'une' → logprob: -1.5274627208709717
    3. ' la' → logprob: -4.527462482452393
    4. 'les' → logprob: -5.152462482452393
    5. 'l' → logprob: -5.777462482452393
    6. ' une' → logprob: -5.902462482452393
    7. 'le' → logprob: -6.777462482452393
    8. 'suite' → logprob: -8.02746295928955
    9. '   ' → logprob: -8.27746295928955
    10. 'straight' → logprob: -8.52746295928955

Token 251: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.17817822098731995
    2. 'straight' → logprob: -2.053178310394287
    3. ' straight' → logprob: -4.678178310394287
    4. ' suite' → logprob: -4.678178310394287
    5. 's' → logprob: -5.178178310394287
    6. 'qu' → logprob: -5.678178310394287
    7. 'main' → logprob: -6.803178310394287
    8. 'sé' → logprob: -6.803178310394287
    9. '   ' → logprob: -7.303178310394287
    10. 'sequence' → logprob: -7.428178310394287

Token 252: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0641975998878479
    2. '       ' → logprob: -4.439197540283203
    3. ' :' → logprob: -4.564197540283203
    4. ' if' → logprob: -4.689197540283203
    5. ':
' → logprob: -4.689197540283203
    6. 'if' → logprob: -4.939197540283203
    7. '   ' → logprob: -5.189197540283203
    8. '#' → logprob: -6.064197540283203
    9. '1' → logprob: -6.564197540283203
    10. ',' → logprob: -6.689197540283203

Token 253: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7181052565574646
    2. '       ' → logprob: -0.8431052565574646
    3. 'if' → logprob: -3.2181053161621094
    4. ' True' → logprob: -4.593105316162109
    5. ' return' → logprob: -4.718105316162109
    6. '#' → logprob: -4.968105316162109
    7. '   ' → logprob: -5.343105316162109
    8. 'return' → logprob: -5.843105316162109
    9. ' #' → logprob: -6.343105316162109
    10. '1' → logprob: -6.468105316162109

Token 254: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.622373104095459
    2. 'if' → logprob: -1.497373104095459
    3. '#' (adapté à ' #') → logprob: -2.122373104095459
    4. ' #' → logprob: -3.122373104095459
    5. '       ' → logprob: -3.247373104095459
    6. ' return' → logprob: -3.997373104095459
    7. ' self' → logprob: -5.247373104095459
    8. 'return' → logprob: -5.497373104095459
    9. 'self' → logprob: -5.622373104095459
    10. '   ' → logprob: -6.747373104095459

Token 255: ' A' (ID: 355)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7940472364425659
    2. ' if' → logprob: -1.044047236442566
    3. '#' → logprob: -2.4190473556518555
    4. '       ' → logprob: -2.6690473556518555
    5. ' #' → logprob: -3.5440473556518555
    6. '
' → logprob: -5.9190473556518555
    7. 'possible' → logprob: -7.0440473556518555
    8. '   ' → logprob: -7.2940473556518555
    9. 'return' → logprob: -7.6690473556518555
    10. 'self' → logprob: -7.7940473556518555

Token 256: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7861444354057312
    2. 'bs' → logprob: -1.786144495010376
    3. ' b' → logprob: -2.036144495010376
    4. ' ce' → logprob: -3.536144495010376
    5. 's' → logprob: -3.786144495010376
    6. 'ce' → logprob: -4.036144256591797
    7. 'bc' → logprob: -4.161144256591797
    8. '1' → logprob: -4.286144256591797
    9. '   ' → logprob: -4.286144256591797
    10. ' =' → logprob: -4.411144256591797

Token 257: '2' (ID: 17)
  Prédit: '234'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '234' → logprob: -1.0625998973846436
    2. ' ' → logprob: -1.1875998973846436
    3. '2' → logprob: -1.3125998973846436
    4. ',' → logprob: -2.5625998973846436
    5. ' ,' → logprob: -6.937600135803223
    6. '-' → logprob: -7.312600135803223
    7. '23' → logprob: -7.312600135803223
    8. '   ' → logprob: -8.937600135803223
    9. '  ' → logprob: -9.187600135803223
    10. 's' → logprob: -9.312600135803223

Token 258: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4309384226799011
    2. '3' → logprob: -1.055938482284546
    3. ',' → logprob: -6.180938243865967
    4. ' ,' → logprob: -9.180938720703125
    5. '-' → logprob: -10.430938720703125
    6. '  ' → logprob: -11.055938720703125
    7. ' #' → logprob: -12.930938720703125
    8. ' <' → logprob: -13.055938720703125
    9. '   ' → logprob: -13.180938720703125
    10. ' (' → logprob: -13.305938720703125

Token 259: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6931511759757996
    2. ' ' → logprob: -0.6931511759757996
    3. ',' → logprob: -12.818151473999023
    4. '  ' → logprob: -14.443151473999023
    5. ' ' → logprob: -15.818151473999023
    6. '-' → logprob: -16.193151473999023
    7. '   ' → logprob: -16.318151473999023
    8. '

' → logprob: -16.755651473999023
    9. '
' → logprob: -16.818151473999023
    10. '۳' → logprob: -17.318151473999023

Token 260: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519797682762146
    2. '4' → logprob: -1.5019798278808594
    3. ',' → logprob: -10.25197982788086
    4. '  ' → logprob: -11.50197982788086
    5. ' ' → logprob: -13.37697982788086
    6. ' ,' → logprob: -13.87697982788086
    7. '   ' → logprob: -14.37697982788086
    8. '_' → logprob: -15.37697982788086
    9. '-' → logprob: -15.37697982788086
    10. '45' → logprob: -15.62697982788086

Token 261: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0076065086759626865
    2. ' ' → logprob: -4.882606506347656
    3. '  ' → logprob: -15.757606506347656
    4. ',' → logprob: -16.507606506347656
    5. '...' → logprob: -17.007606506347656
    6. ' ' → logprob: -17.132606506347656
    7. '   ' → logprob: -17.632606506347656
    8. '
' → logprob: -17.882606506347656
    9. '۴' → logprob: -17.882606506347656
    10. '-' → logprob: -18.445106506347656

Token 262: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25196826457977295
    2. '5' → logprob: -1.501968264579773
    3. ',' → logprob: -10.626968383789062
    4. '  ' → logprob: -12.376968383789062
    5. ' ' → logprob: -12.751968383789062
    6. '<|end|>' → logprob: -13.126968383789062
    7. ' ,' → logprob: -14.564468383789062
    8. ' (' → logprob: -14.626968383789062
    9. ' or' → logprob: -15.001968383789062
    10. '.' → logprob: -15.001968383789062

Token 263: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.11282826960086823
    2. ' ' → logprob: -2.237828254699707
    3. ',' → logprob: -12.987828254699707
    4. ' ' → logprob: -13.737828254699707
    5. '<|end|>' → logprob: -14.925328254699707
    6. '  ' → logprob: -14.987828254699707
    7. '```' → logprob: -15.362828254699707
    8. ' (' → logprob: -15.487828254699707
    9. ' or' → logprob: -15.987828254699707
    10. '7' → logprob: -16.175329208374023

Token 264: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.13019460439682007
    2. ' ou' → logprob: -2.255194664001465
    3. '       ' → logprob: -5.380194664001465
    4. ':' → logprob: -6.005194664001465
    5. ' return' → logprob: -6.130194664001465
    6. 'or' → logprob: -6.255194664001465
    7. 'return' → logprob: -6.505194664001465
    8. ',' → logprob: -7.005194664001465
    9. ' (' → logprob: -7.130194664001465
    10. '#' → logprob: -7.880194664001465

Token 265: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4802364408969879
    2. '10' → logprob: -0.9802364110946655
    3. '   ' → logprob: -5.730236530303955
    4. '  ' → logprob: -6.980236530303955
    5. '     ' → logprob: -7.730236530303955
    6. '    ' → logprob: -8.105236053466797
    7. ' T' → logprob: -8.480236053466797
    8. '9' → logprob: -8.605236053466797
    9. 'T' → logprob: -8.730236053466797
    10. '#' → logprob: -8.855236053466797

Token 266: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03920929878950119
    2. ' ' → logprob: -3.2892093658447266
    3. '9' → logprob: -8.039209365844727
    4. '  ' → logprob: -8.164209365844727
    5. '   ' → logprob: -8.164209365844727
    6. '
' → logprob: -9.414209365844727
    7. 'T' → logprob: -9.414209365844727
    8. '1' → logprob: -10.414209365844727
    9. '    ' → logprob: -10.539209365844727
    10. '     ' → logprob: -11.039209365844727

Token 267: ' J' (ID: 643)
  Prédit: ' J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' J' → logprob: -0.1385071724653244
    2. ' ' → logprob: -2.388507127761841
    3. ',' → logprob: -3.638507127761841
    4. 'J' → logprob: -4.63850736618042
    5. '11' → logprob: -7.13850736618042
    6. ',J' → logprob: -7.88850736618042
    7. ' ,' → logprob: -8.388506889343262
    8. '   ' → logprob: -10.013506889343262
    9. '6' → logprob: -10.138506889343262
    10. '	J' → logprob: -10.263506889343262

Token 268: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.13046354055404663
    2. 'Q' → logprob: -2.2554636001586914
    3. ' ' → logprob: -4.130463600158691
    4. ',' → logprob: -7.130463600158691
    5. ',Q' → logprob: -9.005463600158691
    6. '4' → logprob: -9.130463600158691
    7. ' J' → logprob: -9.255463600158691
    8. '11' → logprob: -9.880463600158691
    9. '6' → logprob: -10.130463600158691
    10. '```' → logprob: -10.255463600158691

Token 269: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.09016433358192444
    2. 'K' → logprob: -2.4651644229888916
    3. ' ' → logprob: -6.7151641845703125
    4. '6' → logprob: -12.215164184570312
    5. ',' → logprob: -13.465164184570312
    6. '  ' → logprob: -13.965164184570312
    7. '   ' → logprob: -14.090164184570312
    8. '11' → logprob: -14.590164184570312
    9. '4' → logprob: -14.965164184570312
    10. '7' → logprob: -14.965164184570312

Token 270: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6556375622749329
    2. '6' → logprob: -1.905637502670288
    3. '10' → logprob: -2.280637502670288
    4. ')' → logprob: -3.280637502670288
    5. ' (' → logprob: -3.280637502670288
    6. 'A' → logprob: -3.280637502670288
    7. '<|end|>' → logprob: -3.280637502670288
    8. ',' → logprob: -4.155637741088867
    9. ' A' → logprob: -4.530637741088867
    10. ' or' → logprob: -4.655637741088867

Token 271: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22184880077838898
    2. '
' → logprob: -2.221848726272583
    3. ' if' → logprob: -2.721848726272583
    4. 'if' → logprob: -4.221848964691162
    5. '#' → logprob: -6.221848964691162
    6. '        
' → logprob: -6.221848964691162
    7. '   ' → logprob: -6.346848964691162
    8. ' for' → logprob: -6.596848964691162
    9. 'return' → logprob: -7.096848964691162
    10. 'for' → logprob: -7.846848964691162

Token 272: 'où' (ID: 126981)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.037573158740997314
    2. ')' → logprob: -3.7875730991363525
    3. ' )
' → logprob: -5.412573337554932
    4. '#' → logprob: -6.287573337554932
    5. '       ' → logprob: -6.412573337554932
    6. ')
' → logprob: -6.537573337554932
    7. ' or' → logprob: -7.287573337554932
    8. ')

' → logprob: -7.662573337554932
    9. ')\' → logprob: -8.037572860717773
    10. '):
' → logprob: -8.037572860717773

Token 273: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32786256074905396
    2. 'l' → logprob: -1.7028625011444092
    3. 'A' → logprob: -3.202862501144409
    4. 'le' → logprob: -3.577862501144409
    5. ' l' → logprob: -5.452862739562988
    6. ' ' → logprob: -5.577862739562988
    7. 'as' → logprob: -5.577862739562988
    8. 'Ace' → logprob: -5.577862739562988
    9. '13' → logprob: -5.827862739562988
    10. 'As' → logprob: -5.952862739562988

Token 274: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.615411102771759
    2. ' =' → logprob: -1.2404110431671143
    3. ' ==' → logprob: -1.9904110431671143
    4. '==' → logprob: -3.6154110431671143
    5. ' est' → logprob: -5.990411281585693
    6. ')' → logprob: -6.115411281585693
    7. 'est' → logprob: -7.740411281585693
    8. ' vaut' → logprob: -7.740411281585693
    9. ' ' → logprob: -8.240410804748535
    10. '1' → logprob: -9.115410804748535

Token 275: ' ' (ID: 220)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -1.046700119972229
    2. '1' → logprob: -1.671700119972229
    3. 'égal' → logprob: -1.796700119972229
    4. 'à' → logprob: -2.9217000007629395
    5. ' ' → logprob: -3.0467000007629395
    6. ' considéré' → logprob: -3.2967000007629395
    7. 'treated' → logprob: -3.5467000007629395
    8. 'consider' → logprob: -3.6717000007629395
    9. 'trait' → logprob: -3.9217000007629395
    10. ' traité' → logprob: -4.7967000007629395

Token 276: '1' (ID: 16)
  Prédit: '14'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.1391170769929886
    2. '1' → logprob: -2.2641170024871826
    3. 'val' → logprob: -5.264117240905762
    4. ' ' → logprob: -5.389117240905762
    5. 'valu' → logprob: -5.889117240905762
    6. 'égal' → logprob: -6.389117240905762
    7. 'à' → logprob: -6.514117240905762
    8. 'consider' → logprob: -6.514117240905762
    9. ' considéré' → logprob: -6.889117240905762
    10. 'une' → logprob: -7.014117240905762

Token 277: ')
' (ID: 446)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.644564151763916
    2. 'ou' → logprob: -0.769564151763916
    3. ' or' → logprob: -5.144564151763916
    4. ')' → logprob: -5.269564151763916
    5. 'or' → logprob: -7.394564151763916
    6. ' ' → logprob: -9.269563674926758
    7. 'et' → logprob: -9.894563674926758
    8. ',' → logprob: -9.894563674926758
    9. '0' → logprob: -11.519563674926758
    10. ' et' → logprob: -11.519563674926758

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005204828456044197
    2. '
' → logprob: -5.755204677581787
    3. '   ' → logprob: -6.505204677581787
    4. '        
' → logprob: -8.255205154418945
    5. ' for' → logprob: -9.755205154418945
    6. ' if' → logprob: -9.755205154418945
    7. 'if' → logprob: -10.505205154418945
    8. '        ' → logprob: -10.630205154418945
    9. 'for' → logprob: -10.755205154418945
    10. 'return' → logprob: -11.005205154418945

Token 279: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.507950484752655
    2. '   ' → logprob: -1.5079505443572998
    3. ' if' → logprob: -2.1329505443573
    4. 'if' → logprob: -3.0079505443573
    5. '
' → logprob: -6.007950305938721
    6. 'diff' → logprob: -6.632950305938721
    7. 'return' → logprob: -6.757950305938721
    8. ' for' → logprob: -7.007950305938721
    9. ' return' → logprob: -7.132950305938721
    10. '#' (adapté à ' #') → logprob: -7.507950305938721

Token 280: ' Donc' (ID: 88837)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.617341935634613
    2. 'if' → logprob: -1.4923419952392578
    3. '   ' → logprob: -2.117341995239258
    4. '       ' → logprob: -2.617341995239258
    5. '#' → logprob: -4.117341995239258
    6. 'diff' → logprob: -4.367341995239258
    7. '
' → logprob: -5.492341995239258
    8. ' #' → logprob: -5.992341995239258
    9. ' diff' → logprob: -6.617341995239258
    10. ' for' → logprob: -6.992341995239258

Token 281: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3336661159992218
    2. ' if' → logprob: -1.5836660861968994
    3. 'self' → logprob: -4.0836663246154785
    4. '
' → logprob: -4.5836663246154785
    5. 'possible' → logprob: -4.5836663246154785
    6. '   ' → logprob: -5.0836663246154785
    7. 'for' → logprob: -5.2086663246154785
    8. ' (' → logprob: -5.2086663246154785
    9. '       ' → logprob: -5.5836663246154785
    10. ' for' → logprob: -6.0836663246154785

Token 282: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15154188871383667
    2. '       ' → logprob: -3.4015419483184814
    3. '   ' → logprob: -3.5265419483184814
    4. 'if' → logprob: -3.5265419483184814
    5. ' return' → logprob: -3.9015419483184814
    6. ' first' → logprob: -4.401541709899902
    7. ' for' → logprob: -4.526541709899902
    8. 'return' → logprob: -6.776541709899902
    9. ' min' → logprob: -6.901541709899902
    10. 'diff' → logprob: -7.276541709899902

Token 283: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27324262261390686
    2. ' if' → logprob: -2.273242712020874
    3. 'diff' → logprob: -2.773242712020874
    4. '#' (adapté à ' #') → logprob: -3.773242712020874
    5. '   ' → logprob: -4.023242473602295
    6. '       ' → logprob: -4.523242473602295
    7. 'for' → logprob: -4.773242473602295
    8. 'return' → logprob: -5.898242473602295
    9. 'dif' → logprob: -6.398242473602295
    10. ' #' → logprob: -6.648242473602295

Token 284: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23245945572853088
    2. ' if' → logprob: -1.7324594259262085
    3. '#' → logprob: -4.107459545135498
    4. 'return' → logprob: -5.857459545135498
    5. ' #' → logprob: -5.982459545135498
    6. ' return' → logprob: -6.357459545135498
    7. 'min' → logprob: -6.607459545135498
    8. '   ' → logprob: -6.732459545135498
    9. 'normal' → logprob: -7.107459545135498
    10. 'diff' → logprob: -7.482459545135498

Token 285: '1' (ID: 16)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017479056492447853
    2. '#' → logprob: -4.267478942871094
    3. 'return' → logprob: -6.767478942871094
    4. ' if' → logprob: -7.142478942871094
    5. 'is' → logprob: -7.267478942871094
    6. '
' → logprob: -9.517478942871094
    7. '   ' → logprob: -9.517478942871094
    8. 'possible' → logprob: -9.517478942871094
    9. 'def' → logprob: -9.642478942871094
    10. 'normal' → logprob: -9.642478942871094

Token 286: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16071200370788574
    2. '==' → logprob: -2.7857120037078857
    3. ' ==' → logprob: -3.1607120037078857
    4. 'in' → logprob: -3.4107120037078857
    5. ',' → logprob: -5.535712242126465
    6. ')' → logprob: -6.160712242126465
    7. '2' → logprob: -7.285712242126465
    8. ' ' → logprob: -7.285712242126465
    9. '0' → logprob: -7.660712242126465
    10. '+' → logprob: -7.660712242126465

Token 287: ' vérifier' (ID: 93671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15198077261447906
    2. ' if' → logprob: -2.5269808769226074
    3. '#' → logprob: -3.1519808769226074
    4. ' #' → logprob: -5.151980876922607
    5. 'min' → logprob: -5.901980876922607
    6. 'is' → logprob: -6.276980876922607
    7. 'normal' → logprob: -6.276980876922607
    8. 'diff' → logprob: -6.526980876922607
    9. ' normal' → logprob: -7.026980876922607
    10. '   ' → logprob: -7.651980876922607

Token 288: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5198523998260498
    2. ' if' → logprob: -1.1448523998260498
    3. 'self' → logprob: -2.64485239982605
    4. '   ' → logprob: -5.144852638244629
    5. ' self' → logprob: -5.644852638244629
    6. 'si' → logprob: -6.394852638244629
    7. ' si' → logprob: -6.894852638244629
    8. 'sorted' → logprob: -7.019852638244629
    9. ' ' → logprob: -7.269852638244629
    10. '(self' → logprob: -7.519852638244629

Token 289: ' max' (ID: 2999)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.029410118237137794
    2. 'self' → logprob: -4.029409885406494
    3. ' sorted' → logprob: -5.029409885406494
    4. '(sorted' → logprob: -5.904409885406494
    5. 'max' → logprob: -6.904409885406494
    6. 'all' → logprob: -8.154410362243652
    7. ' self' → logprob: -8.279410362243652
    8. ' ' → logprob: -8.404410362243652
    9. '   ' → logprob: -9.904410362243652
    10. ' all' → logprob: -9.904410362243652

Token 290: '-min' (ID: 20045)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.07894652336835861
    2. '(self' → logprob: -2.578946590423584
    3. 'sorted' → logprob: -11.078946113586426
    4. '(' → logprob: -11.328946113586426
    5. 'self' → logprob: -11.828946113586426
    6. '   ' → logprob: -12.578946113586426
    7. ' (' → logprob: -12.828946113586426
    8. ' -' → logprob: -12.953946113586426
    9. '(s' → logprob: -13.078946113586426
    10. '(
' → logprob: -13.078946113586426

Token 291: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09302022308111191
    2. ' ==' → logprob: -2.59302020072937
    3. '(sorted' → logprob: -4.593020439147949
    4. 'sorted' → logprob: -6.343020439147949
    5. '()==' → logprob: -6.593020439147949
    6. '=' → logprob: -9.09302043914795
    7. ')==' → logprob: -9.09302043914795
    8. '===' → logprob: -9.34302043914795
    9. '()' → logprob: -9.59302043914795
    10. ' ' → logprob: -9.71802043914795

Token 292: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.014166445471346378
    2. ' ' → logprob: -4.264166355133057
    3. '   ' → logprob: -14.264166831970215
    4. ' ' → logprob: -14.264166831970215
    5. '' → logprob: -14.389166831970215
    6. '```' → logprob: -15.264166831970215
    7. '	' → logprob: -15.576666831970215
    8. '' → logprob: -16.3266658782959
    9. '  ' → logprob: -16.6391658782959
    10. '=' → logprob: -16.7641658782959

Token 293: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05850483849644661
    2. '       ' → logprob: -3.183504819869995
    3. 'and' → logprob: -4.183505058288574
    4. ' or' → logprob: -10.183505058288574
    5. ',' → logprob: -10.933505058288574
    6. ' et' → logprob: -11.058505058288574
    7. '        ' → logprob: -11.308505058288574
    8. ' ' → logprob: -11.433505058288574
    9. '   ' → logprob: -11.808505058288574
    10. ' if' → logprob: -12.058505058288574

Token 294: ' que' (ID: 661)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4228481650352478
    2. ' sorted' → logprob: -1.6728482246398926
    3. 'max' → logprob: -2.0478482246398926
    4. ' max' → logprob: -4.047848224639893
    5. 'self' → logprob: -5.922848224639893
    6. ' ' → logprob: -6.422848224639893
    7. ' all' → logprob: -6.672848224639893
    8. 'min' → logprob: -6.797848224639893
    9. '(sorted' → logprob: -6.922848224639893
    10. ' self' → logprob: -7.422848224639893

Token 295: ' les' (ID: 1341)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.8512171506881714
    2. 'len' → logprob: -1.1012171506881714
    3. 'all' → logprob: -2.226217269897461
    4. ' all' → logprob: -3.101217269897461
    5. 'max' → logprob: -3.226217269897461
    6. ' sorted' → logprob: -3.476217269897461
    7. 'self' → logprob: -4.851217269897461
    8. ' len' → logprob: -5.226217269897461
    9. ' max' → logprob: -6.226217269897461
    10. ' self' → logprob: -7.351217269897461

Token 296: ' valeurs' (ID: 73668)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4586910605430603
    2. ' all' → logprob: -1.958691120147705
    3. ' sorted' → logprob: -2.458691120147705
    4. 'len' → logprob: -2.583691120147705
    5. 'all' → logprob: -2.833691120147705
    6. ' len' → logprob: -6.333691120147705
    7. ' ' → logprob: -6.458691120147705
    8. 'values' → logprob: -6.583691120147705
    9. 'max' → logprob: -7.708691120147705
    10. ' values' → logprob: -7.958691120147705

Token 297: ' sont' (ID: 5242)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6863338947296143
    2. ' ==' → logprob: -0.8113338947296143
    3. '[' → logprob: -3.0613338947296143
    4. '[i' → logprob: -6.061333656311035
    5. 's' → logprob: -6.936333656311035
    6. '```' → logprob: -7.186333656311035
    7. '[-' → logprob: -8.061333656311035
    8. ' are' → logprob: -8.936333656311035
    9. ' ' → logprob: -8.936333656311035
    10. '[index' → logprob: -9.186333656311035

Token 298: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.5272412300109863
    2. 'cons' → logprob: -1.1522412300109863
    3. 'con' → logprob: -3.1522412300109863
    4. 'cont' → logprob: -3.4022412300109863
    5. 'contin' → logprob: -4.152241230010986
    6. 'success' → logprob: -8.277240753173828
    7. 'continu' → logprob: -8.277240753173828
    8. ' cont' → logprob: -8.402240753173828
    9. ' continues' → logprob: -8.527240753173828
    10. 'list' → logprob: -8.527240753173828

Token 299: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.22769126296043396
    2. 'ecut' → logprob: -1.6026912927627563
    3. 'ect' → logprob: -7.102691173553467
    4. 'équ' → logprob: -7.852691173553467
    5. 'éc' → logprob: -8.227691650390625
    6. 'é' → logprob: -8.227691650390625
    7. 'cut' → logprob: -8.477691650390625
    8. 't' → logprob: -9.602691650390625
    9. 'secut' → logprob: -9.977691650390625
    10. 'ec' → logprob: -9.977691650390625

Token 300: 'ives' (ID: 2264)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.6494016051292419
    2. 'ives' → logprob: -1.0244016647338867
    3. 'ive' → logprob: -2.5244016647338867
    4. 'utive' → logprob: -3.3994016647338867
    5. 'if' → logprob: -6.899401664733887
    6. 'utes' → logprob: -6.899401664733887
    7. 'i' → logprob: -7.524401664733887
    8. 'u' → logprob: -7.774401664733887
    9. 'uves' → logprob: -8.149401664733887
    10. 's' → logprob: -8.274401664733887

Token 301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08269618451595306
    2. ' and' → logprob: -2.5826961994171143
    3. 'and' → logprob: -6.957695960998535
    4. ',' → logprob: -7.082695960998535
    5. '
' → logprob: -7.207695960998535
    6. ' or' → logprob: -7.832695960998535
    7. ' if' → logprob: -8.082695960998535
    8. ':' → logprob: -8.332695960998535
    9. '.' → logprob: -9.832695960998535
    10. '        
' → logprob: -10.207695960998535

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006328079383820295
    2. ' and' → logprob: -5.381328105926514
    3. '   ' → logprob: -7.381328105926514
    4. ' or' → logprob: -7.506328105926514
    5. ':' → logprob: -9.131327629089355
    6. '
' → logprob: -9.381327629089355
    7. ',' → logprob: -9.506327629089355
    8. 'return' → logprob: -9.756327629089355
    9. '\n' → logprob: -10.381327629089355
    10. ' return' → logprob: -10.506327629089355

Token 303: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11897839605808258
    2. ' if' → logprob: -2.243978500366211
    3. 'if' (adapté à ' if') → logprob: -5.118978500366211
    4. 'max' → logprob: -10.243978500366211
    5. ' return' → logprob: -10.743978500366211
    6. 'return' → logprob: -10.993978500366211
    7. '        
' → logprob: -11.368978500366211
    8. '   ' → logprob: -11.368978500366211
    9. ' for' → logprob: -11.618978500366211
    10. ' max' → logprob: -11.868978500366211

Token 304: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4916713833808899
    2. 'self' → logprob: -2.116671323776245
    3. ' sorted' → logprob: -2.116671323776245
    4. 'max' → logprob: -2.491671323776245
    5. ' self' → logprob: -3.616671323776245
    6. '(sorted' → logprob: -3.991671323776245
    7. ' max' → logprob: -4.116671562194824
    8. ' (' → logprob: -6.866671562194824
    9. ' ' → logprob: -6.991671562194824
    10. '(max' → logprob: -7.116671562194824

Token 305: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.650518920039758e-06
    2. 'values' → logprob: -12.750003814697266
    3. '_VALUES' → logprob: -15.375003814697266
    4. '(values' → logprob: -16.125003814697266
    5. '_vals' → logprob: -16.375003814697266
    6. '_' → logprob: -16.500003814697266
    7. '_value' → logprob: -16.750003814697266
    8. 'Values' → logprob: -16.875003814697266
    9. ' _' → logprob: -18.375003814697266
    10. ' values' → logprob: -18.500003814697266

Token 306: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.09152796119451523
    2. '[' → logprob: -2.4665279388427734
    3. '==' → logprob: -6.216527938842773
    4. ' ==' → logprob: -7.466527938842773
    5. '   ' → logprob: -12.466527938842773
    6. '=' → logprob: -12.591527938842773
    7. '][-' → logprob: -13.216527938842773
    8. ']==' → logprob: -13.966527938842773
    9. '[len' → logprob: -13.966527938842773
    10. ' [-' → logprob: -14.091527938842773

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.875016212463379
    4. '5' → logprob: -15.687516212463379
    5. ']' → logprob: -15.687516212463379
    6. '2' → logprob: -16.437515258789062
    7. ' -' → logprob: -16.562515258789062
    8. '0' → logprob: -16.562515258789062
    9. '4' → logprob: -16.875015258789062
    10. '  ' → logprob: -16.937515258789062

Token 308: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06205182522535324
    2. '-' → logprob: -2.812051773071289
    3. ' ' → logprob: -10.437051773071289
    4. ')' → logprob: -10.562051773071289
    5. ']' → logprob: -10.812051773071289
    6. 'sorted' → logprob: -13.312051773071289
    7. '   ' → logprob: -13.812051773071289
    8. ']-' → logprob: -14.062051773071289
    9. ' ' → logprob: -14.187051773071289
    10. ')-' → logprob: -14.437051773071289

Token 309: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12693093717098236
    2. '-' → logprob: -2.1269309520721436
    3. '==' → logprob: -13.126931190490723
    4. ' ' → logprob: -14.751931190490723
    5. 'sorted' → logprob: -15.751931190490723
    6. ' ' → logprob: -16.376930236816406
    7. '   ' → logprob: -17.001930236816406
    8. ' ==' → logprob: -17.376930236816406
    9. '```' → logprob: -17.376930236816406
    10. '−' → logprob: -17.626930236816406

Token 310: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.008656646125018597
    2. ' sorted' → logprob: -4.7586565017700195
    3. '(sorted' → logprob: -10.88365650177002
    4. '   ' → logprob: -12.00865650177002
    5. '.sorted' → logprob: -12.50865650177002
    6. ' ' → logprob: -12.75865650177002
    7. '       ' → logprob: -13.00865650177002
    8. '_sorted' → logprob: -13.13365650177002
    9. '<|end|>' → logprob: -13.88365650177002
    10. '  ' → logprob: -14.13365650177002

Token 311: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00019340807921253145
    2. 'values' → logprob: -8.62519359588623
    3. 's' → logprob: -12.00019359588623
    4. '[' → logprob: -13.12519359588623
    5. '_VALUES' → logprob: -14.12519359588623
    6. '1' → logprob: -14.25019359588623
    7. '_' → logprob: -14.50019359588623
    8. '```' → logprob: -14.50019359588623
    9. 'Values' → logprob: -14.62519359588623
    10. ']' → logprob: -15.25019359588623

Token 312: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012057077838107944
    2. '[-' → logprob: -6.876205921173096
    3. '0' → logprob: -9.001205444335938
    4. '==' → logprob: -10.626205444335938
    5. ' ' → logprob: -12.251205444335938
    6. ' [' → logprob: -12.501205444335938
    7. ')' → logprob: -12.751205444335938
    8. '=' → logprob: -12.751205444335938
    9. ' ==' → logprob: -12.876205444335938
    10. '[
' → logprob: -13.126205444335938

Token 313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8550976164988242e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.000018119812012
    4. '1' → logprob: -14.750018119812012
    5. '[' → logprob: -15.500018119812012
    6. '۰' → logprob: -16.562519073486328
    7. '  ' → logprob: -16.875019073486328
    8. '```' → logprob: -17.500019073486328
    9. '
' → logprob: -17.812519073486328
    10. ']' → logprob: -17.812519073486328

Token 314: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26156365871429443
    2. '==' → logprob: -2.011563777923584
    3. ']' → logprob: -2.511563777923584
    4. ']==' → logprob: -4.261563777923584
    5. ' ]' → logprob: -7.136563777923584
    6. ')' → logprob: -8.386563301086426
    7. ' ' → logprob: -9.886563301086426
    8. ')==' → logprob: -11.136563301086426
    9. '=' → logprob: -11.636563301086426
    10. '```' → logprob: -12.011563301086426

Token 315: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3876241445541382
    2. '==' → logprob: -1.1376241445541382
    3. ' !=' → logprob: -7.387624263763428
    4. '!=' → logprob: -9.01262378692627
    5. '=' → logprob: -12.01262378692627
    6. ' ' → logprob: -12.26262378692627
    7. ' ' → logprob: -15.01262378692627
    8. '()==' → logprob: -15.26262378692627
    9. '```' → logprob: -15.76262378692627
    10. ')' → logprob: -16.012624740600586

Token 316: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06196802109479904
    2. ' ' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.811967849731445
    4. '' → logprob: -16.061967849731445
    5. '۴' → logprob: -17.311967849731445
    6. '	' → logprob: -17.311967849731445
    7. ' ' → logprob: -17.436967849731445
    8. '```' → logprob: -17.561967849731445
    9. '  ' → logprob: -18.186967849731445
    10. '٤' → logprob: -18.374467849731445

Token 317: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '' → logprob: -16.250019073486328
    4. '```' → logprob: -16.750019073486328
    5. '۴' → logprob: -17.000019073486328
    6. '٤' → logprob: -17.875019073486328
    7. '   ' → logprob: -18.000019073486328
    8. '৪' → logprob: -18.750019073486328
    9. '४' → logprob: -19.000019073486328
    10. '４' → logprob: -19.062519073486328

Token 318: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1413729041814804
    2. ':' → logprob: -2.2663729190826416
    3. ':
' → logprob: -4.7663726806640625
    4. 'and' → logprob: -4.8913726806640625
    5. '       ' → logprob: -5.0163726806640625
    6. '           ' → logprob: -5.5163726806640625
    7. '   ' → logprob: -7.0163726806640625
    8. ':return' → logprob: -7.7663726806640625
    9. ' or' → logprob: -10.016372680664062
    10. ' :' → logprob: -10.891372680664062

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007721151690930128
    2. ' and' → logprob: -5.757720947265625
    3. 'return' → logprob: -6.507720947265625
    4. ':
' → logprob: -6.882720947265625
    5. ' return' → logprob: -7.007720947265625
    6. '       ' → logprob: -7.632720947265625
    7. '
' → logprob: -8.257720947265625
    8. ':' → logprob: -8.382720947265625
    9. '   ' → logprob: -10.007720947265625
    10. ':return' → logprob: -10.132720947265625

Token 320: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8393441438674927
    2. ' return' → logprob: -1.0893441438674927
    3. 'return' (adapté à ' return') → logprob: -1.4643441438674927
    4. ' for' → logprob: -8.714344024658203
    5. 'for' → logprob: -9.714344024658203
    6. '       ' → logprob: -9.964344024658203
    7. '	return' → logprob: -10.839344024658203
    8. '   ' → logprob: -11.089344024658203
    9. '               ' → logprob: -11.589344024658203
    10. '
' → logprob: -11.964344024658203

Token 321: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.049297526478767395
    2. ' True' → logprob: -3.049297571182251
    3. 'all' → logprob: -7.549297332763672
    4. ' all' → logprob: -8.674297332763672
    5. ' ' → logprob: -11.924297332763672
    6. '   ' → logprob: -12.924297332763672
    7. 'len' → logprob: -13.799297332763672
    8. ' ' → logprob: -13.799297332763672
    9. 'true' → logprob: -14.299297332763672
    10. '  ' → logprob: -15.299297332763672

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003659746435005218
    2. 'return' → logprob: -8.7503662109375
    3. '        
' → logprob: -9.8753662109375
    4. '   ' → logprob: -10.0003662109375
    5. '
' → logprob: -10.1253662109375
    6. '	' → logprob: -11.2503662109375
    7. ',' → logprob: -11.6253662109375
    8. '           ' → logprob: -11.6253662109375
    9. '    
' → logprob: -11.7503662109375
    10. ' return' → logprob: -12.3753662109375

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004757135466206819
    2. '   ' → logprob: -7.875475883483887
    3. '        
' → logprob: -10.500475883483887
    4. '
' → logprob: -10.875475883483887
    5. '    
' → logprob: -11.375475883483887
    6. '	' → logprob: -11.750475883483887
    7. '           ' → logprob: -11.875475883483887
    8. 'return' → logprob: -12.000475883483887
    9. '      ' → logprob: -12.500475883483887
    10. 'if' → logprob: -13.375475883483887

Token 324: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031177407130599022
    2. '   ' → logprob: -3.531177520751953
    3. '
' → logprob: -7.031177520751953
    4. '        
' → logprob: -8.031177520751953
    5. '    
' → logprob: -9.156177520751953
    6. 'if' → logprob: -9.656177520751953
    7. ' if' → logprob: -11.406177520751953
    8. 'elif' → logprob: -11.906177520751953
    9. '           ' → logprob: -12.281177520751953
    10. '      ' → logprob: -12.531177520751953

Token 325: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3611111044883728
    2. '#' → logprob: -1.9861111640930176
    3. 'if' → logprob: -2.1111111640930176
    4. '   ' → logprob: -3.2361111640930176
    5. 'elif' → logprob: -5.986111164093018
    6. ' if' → logprob: -6.486111164093018
    7. ' #' → logprob: -6.611111164093018
    8. '
' → logprob: -11.11111068725586
    9. '      ' → logprob: -11.61111068725586
    10. '    ' → logprob: -11.86111068725586

Token 326: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07395107299089432
    2. 'if' → logprob: -2.823951005935669
    3. 'elif' → logprob: -4.448951244354248
    4. 'return' → logprob: -9.32395076751709
    5. ' #' → logprob: -9.69895076751709
    6. '   ' → logprob: -10.57395076751709
    7. 'else' → logprob: -10.94895076751709
    8. ' if' → logprob: -11.94895076751709
    9. '
' → logprob: -12.69895076751709
    10. '       ' → logprob: -12.94895076751709

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004075312986969948
    2. 'elif' → logprob: -6.129075527191162
    3. ' elif' → logprob: -6.379075527191162
    4. ' )' → logprob: -8.754075050354004
    5. '   ' → logprob: -11.004075050354004
    6. ' if' → logprob: -11.629075050354004
    7. ')
' → logprob: -13.254075050354004
    8. ':' → logprob: -13.254075050354004
    9. ' else' → logprob: -13.379075050354004
    10. 'else' → logprob: -14.004075050354004

Token 328: ' vérifier' (ID: 93671)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.665012538433075
    2. '#' → logprob: -1.5400125980377197
    3. ' if' → logprob: -2.2900125980377197
    4. 'return' → logprob: -2.7900125980377197
    5. ' #' → logprob: -2.9150125980377197
    6. ' return' → logprob: -3.6650125980377197
    7. 'sorted' → logprob: -4.790012359619141
    8. ' sorted' → logprob: -4.915012359619141
    9. 'elif' → logprob: -4.915012359619141
    10. 'self' → logprob: -7.040012359619141

Token 329: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20197388529777527
    2. 'if' → logprob: -1.8269739151000977
    3. ' si' → logprob: -4.701973915100098
    4. 'sorted' → logprob: -5.076973915100098
    5. ' sorted' → logprob: -5.701973915100098
    6. '(sorted' → logprob: -6.201973915100098
    7. 'si' → logprob: -7.076973915100098
    8. ' (' → logprob: -9.076973915100098
    9. '   ' → logprob: -9.451973915100098
    10. ' ' → logprob: -9.576973915100098

Token 330: ' c' (ID: 274)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.006628216709941626
    2. 'set' → logprob: -5.506628036499023
    3. ' sorted' → logprob: -6.006628036499023
    4. ' set' → logprob: -9.756628036499023
    5. '1' → logprob: -11.256628036499023
    6. '(sorted' → logprob: -12.006628036499023
    7. '{' → logprob: -13.131628036499023
    8. ' ' → logprob: -13.131628036499023
    9. '0' → logprob: -13.631628036499023
    10. '[' → logprob: -14.256628036499023

Token 331: ''est' (ID: 6616)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.039634935557842255
    2. '1' → logprob: -4.914634704589844
    3. '[' → logprob: -5.039634704589844
    4. ' sorted' → logprob: -5.539634704589844
    5. 'ounted' → logprob: -5.539634704589844
    6. '(sorted' → logprob: -5.539634704589844
    7. 'on' → logprob: -5.914634704589844
    8. '{' → logprob: -6.289634704589844
    9. 'ol' → logprob: -6.539634704589844
    10. 'orted' → logprob: -7.039634704589844

Token 332: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31493547558784485
    2. ' [' → logprob: -1.3149354457855225
    3. '{' → logprob: -6.814935684204102
    4. ' {' → logprob: -8.314935684204102
    5. ' ' → logprob: -8.564935684204102
    6. '   ' → logprob: -10.189935684204102
    7. ' une' → logprob: -10.189935684204102
    8. 'une' → logprob: -11.314935684204102
    9. '  ' → logprob: -11.814935684204102
    10. ' set' → logprob: -11.814935684204102

Token 333: ' suite' (ID: 13800)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19941189885139465
    2. ' [' → logprob: -2.3244118690490723
    3. 'suite' → logprob: -2.6994118690490723
    4. ' suite' → logprob: -4.574411869049072
    5. ' ' → logprob: -7.449411869049072
    6. '([' → logprob: -7.824411869049072
    7. 's' → logprob: -7.949411869049072
    8. 'cas' → logprob: -8.19941234588623
    9. 'sé' → logprob: -8.19941234588623
    10. 'liste' → logprob: -8.44941234588623

Token 334: ' A' (ID: 355)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025248313322663307
    2. ' [' → logprob: -4.1502485275268555
    3. '==' → logprob: -4.9002485275268555
    4. ' ==' → logprob: -6.5252485275268555
    5. '   ' → logprob: -8.900248527526855
    6. ' ' → logprob: -9.775248527526855
    7. '  ' → logprob: -11.275248527526855
    8. '{' → logprob: -12.025248527526855
    9. '([' → logprob: -12.025248527526855
    10. 'equal' → logprob: -12.025248527526855

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18672658503055573
    2. '234' → logprob: -2.4367265701293945
    3. ' ' → logprob: -3.1867265701293945
    4. '2' → logprob: -3.3117265701293945
    5. '[' → logprob: -5.8117265701293945
    6. ' ,' → logprob: -6.6867265701293945
    7. ' [' → logprob: -7.5617265701293945
    8. '235' → logprob: -9.311726570129395
    9. '23' → logprob: -9.811726570129395
    10. '  ' → logprob: -10.311726570129395

Token 336: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038060080260038376
    2. ' ' → logprob: -3.288060188293457
    3. '10' → logprob: -11.038060188293457
    4. ',' → logprob: -13.038060188293457
    5. '1' → logprob: -16.66305923461914
    6. '  ' → logprob: -17.03805923461914
    7. '234' → logprob: -17.16305923461914
    8. '```' → logprob: -17.16305923461914
    9. '5' → logprob: -17.28805923461914
    10. '[' → logprob: -17.66305923461914

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034144327044487
    2. ' ,' → logprob: -3.534144401550293
    3. ' ' → logprob: -5.659144401550293
    4. '11' → logprob: -8.284144401550293
    5. '4' → logprob: -8.909144401550293
    6. ',J' → logprob: -8.909144401550293
    7. '2' → logprob: -9.159144401550293
    8. '1' → logprob: -9.284144401550293
    9. ',j' → logprob: -10.284144401550293
    10. '[' → logprob: -10.284144401550293

Token 338: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. ',' → logprob: -17.875011444091797
    4. '1' → logprob: -18.375011444091797
    5. '  ' → logprob: -18.750011444091797
    6. '   ' → logprob: -19.375011444091797
    7. '12' → logprob: -19.500011444091797
    8. 'J' → logprob: -19.500011444091797
    9. '```' → logprob: -19.625011444091797
    10. 'import' → logprob: -20.125011444091797

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01078734453767538
    2. '12' → logprob: -4.760787487030029
    3. ' ,' → logprob: -6.135787487030029
    4. ' ' → logprob: -12.010787010192871
    5. '  ' → logprob: -16.260787963867188
    6. '2' → logprob: -16.260787963867188
    7. '```' → logprob: -16.885787963867188
    8. '   ' → logprob: -17.010787963867188
    9. ',
' → logprob: -17.135787963867188
    10. ',\
' → logprob: -17.260787963867188

Token 340: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.7500057220459
    4. '  ' → logprob: -20.1250057220459
    5. '   ' → logprob: -20.2500057220459
    6. '121' → logprob: -20.8750057220459
    7. '1' → logprob: -20.8750057220459
    8. '2' → logprob: -21.5000057220459
    9. '۱۲' → logprob: -21.6250057220459
    10. '
' → logprob: -21.6250057220459

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004652030300348997
    2. ' ,' → logprob: -5.75465202331543
    3. '13' → logprob: -7.12965202331543
    4. ' or' → logprob: -8.00465202331543
    5. ',
' → logprob: -8.62965202331543
    6. 'or' → logprob: -9.37965202331543
    7. ' ' → logprob: -11.75465202331543
    8. ' and' → logprob: -11.75465202331543
    9. '3' → logprob: -11.87965202331543
    10. ',\
' → logprob: -12.00465202331543

Token 342: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '1' → logprob: -18.125
    4. '3' → logprob: -19.75
    5. '１３' → logprob: -19.875
    6. '۱۳' → logprob: -22.125
    7. '013' → logprob: -22.375
    8. '0' → logprob: -23.25
    9. '' → logprob: -23.875
    10. '```' → logprob: -24.125

Token 343: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5343254208564758
    2. ' if' → logprob: -0.9093254208564758
    3. 'if' → logprob: -4.78432559967041
    4. ' return' → logprob: -6.53432559967041
    5. ' and' → logprob: -7.28432559967041
    6. 'return' → logprob: -7.90932559967041
    7. '   ' → logprob: -8.65932559967041
    8. ',' → logprob: -10.03432559967041
    9. ' or' → logprob: -11.28432559967041
    10. 'and' → logprob: -11.40932559967041

Token 344: 'A' (ID: 32)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2994174659252167
    2. ' sorted' → logprob: -1.799417495727539
    3. '[' → logprob: -3.674417495727539
    4. '{' → logprob: -3.924417495727539
    5. 'set' → logprob: -4.424417495727539
    6. ' [' → logprob: -4.549417495727539
    7. ' set' → logprob: -5.049417495727539
    8. 'self' → logprob: -5.424417495727539
    9. '   ' → logprob: -5.924417495727539
    10. '       ' → logprob: -6.049417495727539

Token 345: ' à' (ID: 1221)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.574376106262207
    2. ' in' → logprob: -1.324376106262207
    3. '==' → logprob: -2.574376106262207
    4. ',' → logprob: -2.574376106262207
    5. ')' → logprob: -4.574376106262207
    6. ' ,' → logprob: -5.324376106262207
    7. 'in' → logprob: -6.324376106262207
    8. ')==' → logprob: -7.324376106262207
    9. ' and' → logprob: -8.699376106262207
    10. '=' → logprob: -8.699376106262207

Token 346: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026659846305847168
    2. 'la' → logprob: -3.7766599655151367
    3. 'val' → logprob: -7.026659965515137
    4. 'l' → logprob: -7.776659965515137
    5. 'index' → logprob: -7.776659965515137
    6. 'value' → logprob: -8.026659965515137
    7. ' la' → logprob: -8.151659965515137
    8. ' ' → logprob: -8.526659965515137
    9. '0' → logprob: -8.776659965515137
    10. '[' → logprob: -8.901659965515137

Token 347: ' fin' (ID: 2131)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18065661191940308
    2. '13' → logprob: -2.055656671524048
    3. 't' → logprob: -4.930656433105469
    4. '0' → logprob: -4.930656433105469
    5. '14' → logprob: -4.930656433105469
    6. 'fin' → logprob: -5.555656433105469
    7. 'base' → logprob: -5.805656433105469
    8. 'val' → logprob: -6.055656433105469
    9. 'place' → logprob: -6.430656433105469
    10. '```' → logprob: -7.180656433105469

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3126418888568878
    2. ' and' → logprob: -1.8126418590545654
    3. 'and' → logprob: -3.3126418590545654
    4. ' )' → logprob: -3.8126418590545654
    5. '):' → logprob: -4.3126420974731445
    6. ',' → logprob: -4.9376420974731445
    7. ' et' → logprob: -4.9376420974731445
    8. 'et' → logprob: -5.4376420974731445
    9. ')
' → logprob: -5.8126420974731445
    10. ' in' → logprob: -6.3126420974731445

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7134652137756348
    2. ' if' → logprob: -0.7134652137756348
    3. 'if' → logprob: -3.9634652137756348
    4. ' return' → logprob: -6.963465213775635
    5. 'return' → logprob: -8.963464736938477
    6. '   ' → logprob: -10.213464736938477
    7. '      ' → logprob: -13.338464736938477
    8. ' ' → logprob: -14.713464736938477
    9. ' and' → logprob: -14.838464736938477
    10. '        ' → logprob: -15.088464736938477

Token 350: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3053736090660095
    2. ' if' → logprob: -1.6803736686706543
    3. '       ' → logprob: -2.6803736686706543
    4. 'return' → logprob: -4.930373668670654
    5. ' return' → logprob: -6.930373668670654
    6. '   ' → logprob: -9.305373191833496
    7. 'elif' → logprob: -11.430373191833496
    8. ' ' → logprob: -12.805373191833496
    9. '        
' → logprob: -14.555373191833496
    10. '	if' → logprob: -14.555373191833496

Token 351: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.006932877469807863
    2. 'set' → logprob: -5.006932735443115
    3. ' sorted' → logprob: -8.506933212280273
    4. '{' → logprob: -12.256933212280273
    5. ' set' → logprob: -12.381933212280273
    6. '1' → logprob: -12.506933212280273
    7. '(sorted' → logprob: -13.881933212280273
    8. '0' → logprob: -14.506933212280273
    9. ' ' → logprob: -14.506933212280273
    10. '   ' → logprob: -14.756933212280273

Token 352: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0019418458687141538
    2. 'values' → logprob: -6.251941680908203
    3. 'Values' → logprob: -11.251941680908203
    4. '_VALUES' → logprob: -15.626941680908203
    5. ' values' → logprob: -16.626941680908203
    6. '   ' → logprob: -18.126941680908203
    7. '.values' → logprob: -18.251941680908203
    8. '	values' → logprob: -18.751941680908203
    9. 'VALUES' → logprob: -18.876941680908203
    10. '_vals' → logprob: -18.876941680908203

Token 353: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5772743821144104
    2. '==' → logprob: -0.8272743821144104
    3. ' ==' → logprob: -6.827274322509766
    4. '[:' → logprob: -9.077274322509766
    5. '[-' → logprob: -10.202274322509766
    6. '==
' → logprob: -10.452274322509766
    7. ']==' → logprob: -10.827274322509766
    8. '0' → logprob: -10.952274322509766
    9. '==(' → logprob: -11.202274322509766
    10. ')==' → logprob: -11.702274322509766

Token 354: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. ' [' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.2500057220459
    4. ' ' → logprob: -17.2500057220459
    5. '  ' → logprob: -19.0000057220459
    6. '[
' → logprob: -19.8750057220459
    7. '    ' → logprob: -20.8750057220459
    8. '([' → logprob: -21.0000057220459
    9. '```' → logprob: -21.3750057220459
    10. '{' → logprob: -21.3750057220459

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '[' → logprob: -14.750000953674316
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -17.750001907348633
    6. '１' → logprob: -18.500001907348633
    7. '' → logprob: -19.000001907348633
    8. '10' → logprob: -19.250001907348633
    9. '{' → logprob: -19.375001907348633
    10. '(' → logprob: -19.500001907348633

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010710387723520398
    2. ' ,' → logprob: -6.876070976257324
    3. '10' → logprob: -10.251070976257324
    4. ' ' → logprob: -13.751070976257324
    5. ',
' → logprob: -13.876070976257324
    6. '0' → logprob: -15.001070976257324
    7. '1' → logprob: -15.751070976257324
    8. '5' → logprob: -15.876070976257324
    9. '2' → logprob: -16.75107192993164
    10. ',\
' → logprob: -17.87607192993164

Token 357: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.625
    4. '```' → logprob: -17.5
    5. '	' → logprob: -18.375
    6. '1' → logprob: -18.375
    7. '  ' → logprob: -18.625
    8. '0' → logprob: -19.375
    9. '
' → logprob: -19.5
    10. '9' → logprob: -19.625

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011859419755637646
    2. ' ,' → logprob: -6.751185894012451
    3. '11' → logprob: -11.12618637084961
    4. ',
' → logprob: -14.50118637084961
    5. '   ' → logprob: -15.62618637084961
    6. ' ' → logprob: -16.12618637084961
    7. '10' → logprob: -16.75118637084961
    8. '1' → logprob: -17.50118637084961
    9. '،' → logprob: -18.37618637084961
    10. ']' → logprob: -18.50118637084961

Token 359: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: 0.0
    2. ' ' → logprob: -20.625
    3. '１１' → logprob: -23.0
    4. '1' → logprob: -23.25
    5. '   ' → logprob: -24.0
    6. '十一' → logprob: -25.0
    7. '११' → logprob: -25.0
    8. '[' → logprob: -25.75
    9. '
' → logprob: -25.875
    10. 'ele' → logprob: -25.875

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017123986617662013
    2. ' ,' → logprob: -8.875171661376953
    3. '12' → logprob: -10.375171661376953
    4. ',
' → logprob: -16.000171661376953
    5. ' ' → logprob: -17.875171661376953
    6. '10' → logprob: -18.000171661376953
    7. ',\
' → logprob: -18.125171661376953
    8. '1' → logprob: -18.625171661376953
    9. '،' → logprob: -19.000171661376953
    10. '
' → logprob: -19.375171661376953

Token 361: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۱۲' → logprob: -21.375
    4. '   ' → logprob: -22.25
    5. '  ' → logprob: -22.75
    6. '```' → logprob: -23.0
    7. '１２' → logprob: -23.375
    8. '१२' → logprob: -24.0
    9. '' → logprob: -24.375
    10. '
' → logprob: -24.875

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001180704333819449
    2. '13' → logprob: -6.751180648803711
    3. ' ,' → logprob: -11.501180648803711
    4. ',
' → logprob: -15.376180648803711
    5. ' ' → logprob: -16.62618064880371
    6. ']' → logprob: -17.37618064880371
    7. ',\
' → logprob: -17.50118064880371
    8. '],' → logprob: -18.37618064880371
    9. '
' → logprob: -18.50118064880371
    10. '```' → logprob: -18.87618064880371

Token 363: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '１３' → logprob: -19.375001907348633
    4. '۱۳' → logprob: -20.250001907348633
    5. '3' → logprob: -20.625001907348633
    6. '1' → logprob: -21.000001907348633
    7. '013' → logprob: -22.125001907348633
    8. '' → logprob: -22.500001907348633
    9. '```' → logprob: -22.875001907348633
    10. '   ' → logprob: -22.875001907348633

Token 364: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3189135789871216
    2. ']:' → logprob: -1.3189135789871216
    3. ']' → logprob: -5.193913459777832
    4. ']:
' → logprob: -9.818913459777832
    5. ' ]' → logprob: -10.693913459777832
    6. ']:

' → logprob: -11.943913459777832
    7. '   ' → logprob: -14.443913459777832
    8. '       ' → logprob: -14.818913459777832
    9. '"]:
' → logprob: -15.193913459777832
    10. '):
' → logprob: -15.318913459777832

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07843844592571259
    2. 'return' → logprob: -3.0784385204315186
    3. ' return' → logprob: -4.0784382820129395
    4. '       ' → logprob: -4.4534382820129395
    5. ':return' → logprob: -8.078438758850098
    6. ':
' → logprob: -8.578438758850098
    7. ':' → logprob: -8.578438758850098
    8. '
' → logprob: -9.453438758850098
    9. '	return' → logprob: -11.078438758850098
    10. '	       ' → logprob: -11.203438758850098

Token 366: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014461754821240902
    2. ' return' → logprob: -4.264461517333984
    3. '       ' → logprob: -8.514461517333984
    4. '           ' → logprob: -9.389461517333984
    5. '	return' → logprob: -12.264461517333984
    6. '   ' → logprob: -12.389461517333984
    7. '
' → logprob: -12.514461517333984
    8. 'True' → logprob: -14.389461517333984
    9. '               ' → logprob: -14.889461517333984
    10. 'eturn' → logprob: -15.264461517333984

Token 367: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. 'False' → logprob: -17.75009536743164
    4. 'Tr' → logprob: -21.50009536743164
    5. 'true' → logprob: -22.00009536743164
    6. '(True' → logprob: -22.25009536743164
    7. ' ' → logprob: -22.75009536743164
    8. '  ' → logprob: -23.25009536743164
    9. '=True' → logprob: -23.62509536743164
    10. '
' → logprob: -24.50009536743164

Token 368: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011410178616642952
    2. '
' → logprob: -4.636410236358643
    3. 'return' → logprob: -6.761410236358643
    4. '        
' → logprob: -8.386409759521484
    5. '   ' → logprob: -9.136409759521484
    6. '    
' → logprob: -10.011409759521484
    7. ' return' → logprob: -10.511409759521484
    8. '	' → logprob: -10.636409759521484
    9. '  
' → logprob: -11.011409759521484
    10. '\
' → logprob: -11.261409759521484

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009219424682669342
    2. 'return' → logprob: -7.125921726226807
    3. '   ' → logprob: -9.625922203063965
    4. '
' → logprob: -10.500922203063965
    5. ' return' → logprob: -11.500922203063965
    6. '	return' → logprob: -12.125922203063965
    7. '	' → logprob: -12.875922203063965
    8. '        
' → logprob: -13.250922203063965
    9. '    
' → logprob: -13.625922203063965
    10. '           ' → logprob: -14.000922203063965

Token 370: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3150506019592285
    2. 'return' (adapté à ' return') → logprob: -1.3150506019592285
    3. '   ' → logprob: -6.8150506019592285
    4. '
' → logprob: -8.19005012512207
    5. ' return' → logprob: -8.19005012512207
    6. 'False' → logprob: -9.56505012512207
    7. '	return' → logprob: -10.06505012512207
    8. '    
' → logprob: -12.06505012512207
    9. '        
' → logprob: -12.06505012512207
    10. '	' → logprob: -12.81505012512207

Token 371: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03804149478673935
    2. ' False' → logprob: -3.288041591644287
    3. '(False' → logprob: -22.163042068481445
    4. 'false' → logprob: -23.413042068481445
    5. 'True' → logprob: -23.913042068481445
    6. '=False' → logprob: -23.913042068481445
    7. '_false' → logprob: -24.038042068481445
    8. 'F' → logprob: -25.413042068481445
    9. '.False' → logprob: -25.413042068481445
    10. ' ' → logprob: -26.413042068481445

Token 372: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10795476287603378
    2. '<|end|>' → logprob: -2.857954740524292
    3. 'def' → logprob: -3.357954740524292
    4. '    
' → logprob: -5.232954978942871
    5. '
' → logprob: -6.107954978942871
    6. '<|end|>' → logprob: -6.357954978942871
    7. ' def' → logprob: -8.857954978942871
    8. '	def' → logprob: -9.232954978942871
    9. '```' → logprob: -9.232954978942871
    10. ' ' → logprob: -9.357954978942871

Token 374: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.759734732331708e-05
    2. ' def' → logprob: -11.125017166137695
    3. '   ' → logprob: -12.875017166137695
    4. '
' → logprob: -16.250017166137695
    5. 'is' → logprob: -17.000017166137695
    6. '	def' → logprob: -17.750017166137695
    7. '    
' → logprob: -18.250017166137695
    8. ' ' → logprob: -19.750017166137695
    9. 'Def' → logprob: -21.125017166137695
    10. '  ' → logprob: -21.125017166137695

Token 375: ' classify' (ID: 92913)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.30132442712783813
    2. ' is' → logprob: -1.4263243675231934
    3. 'has' → logprob: -4.676324367523193
    4. ' has' → logprob: -5.426324367523193
    5. 'get' → logprob: -6.551324367523193
    6. ' classify' → logprob: -7.176324367523193
    7. 'rank' → logprob: -7.426324367523193
    8. 'class' → logprob: -7.676324367523193
    9. '_is' → logprob: -7.676324367523193
    10. ' get' → logprob: -7.676324367523193

Token 376: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07849300652742386
    2. '_hand' → logprob: -2.703493118286133
    3. '_' → logprob: -5.203493118286133
    4. '(' → logprob: -5.953493118286133
    5. '_(' → logprob: -9.078493118286133
    6. '_self' → logprob: -9.453493118286133
    7. 'self' → logprob: -9.828493118286133
    8. '()' → logprob: -9.953493118286133
    9. 'hand' → logprob: -10.328493118286133
    10. '_p' → logprob: -11.453493118286133

Token 377: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033468522131443024
    2. '):' → logprob: -3.90846848487854
    3. ')_' → logprob: -4.533468723297119
    4. 'self' → logprob: -7.533468723297119
    5. '):
' → logprob: -7.533468723297119
    6. '_' → logprob: -7.658468723297119
    7. '(self' → logprob: -8.658468246459961
    8. '   ' → logprob: -9.158468246459961
    9. '()' → logprob: -9.283468246459961
    10. '_)' → logprob: -9.783468246459961

Token 378: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006103330524638295
    2. '(' → logprob: -7.7506103515625
    3. ' (' → logprob: -9.6256103515625
    4. 'self' → logprob: -9.8756103515625
    5. ' ->' → logprob: -10.0006103515625
    6. '->' → logprob: -11.5006103515625
    7. '   ' → logprob: -12.6256103515625
    8. '       ' → logprob: -13.5006103515625
    9. ' self' → logprob: -14.1256103515625
    10. '	self' → logprob: -15.3756103515625

Token 379: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.30590030550956726
    2. 'str' → logprob: -1.4309003353118896
    3. ' Tuple' → logprob: -4.6809000968933105
    4. ' Optional' → logprob: -4.8059000968933105
    5. 'Optional' → logprob: -5.5559000968933105
    6. 'Tuple' → logprob: -5.9309000968933105
    7. 'Dict' → logprob: -8.305900573730469
    8. ' Dict' → logprob: -8.555900573730469
    9. 'Str' → logprob: -11.430900573730469
    10. ' ' → logprob: -11.555900573730469

Token 380: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.23415926098823547
    2. ':' → logprob: -1.734159231185913
    3. '       ' → logprob: -3.734159231185913
    4. '   ' → logprob: -5.609159469604492
    5. ':
' → logprob: -5.734159469604492
    6. '():' → logprob: -7.859159469604492
    7. '(' → logprob: -8.484159469604492
    8. '):' → logprob: -8.484159469604492
    9. 'self' → logprob: -8.984159469604492
    10. '():
' → logprob: -8.984159469604492

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014406509581021965
    2. '        ' → logprob: -9.875144004821777
    3. ':' → logprob: -10.500144004821777
    4. '        
' → logprob: -10.875144004821777
    5. '   ' → logprob: -11.375144004821777
    6. '```' → logprob: -11.375144004821777
    7. '    ' → logprob: -12.125144004821777
    8. '
' → logprob: -12.375144004821777
    9. '#' → logprob: -13.000144004821777
    10. '    
' → logprob: -13.125144004821777

Token 382: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6138187050819397
    2. 'counts' → logprob: -1.363818645477295
    3. 'count' → logprob: -2.113818645477295
    4. ' counts' → logprob: -2.613818645477295
    5. ' count' → logprob: -5.363818645477295
    6. ' if' → logprob: -6.363818645477295
    7. 'counter' → logprob: -7.488818645477295
    8. 'if' → logprob: -7.738818645477295
    9. '"""' (adapté à ' """') → logprob: -7.738818645477295
    10. ' """' → logprob: -8.238819122314453

Token 383: 'Dé' (ID: 57247)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.19901561737060547
    2. '       ' → logprob: -2.5740156173706055
    3. 'count' → logprob: -3.3240156173706055
    4. '"""' → logprob: -3.6990156173706055
    5. ' counts' → logprob: -4.0740156173706055
    6. '#' → logprob: -5.3240156173706055
    7. 'freq' → logprob: -5.5740156173706055
    8. ' """' → logprob: -5.6990156173706055
    9. 'counter' → logprob: -6.3240156173706055
    10. 'values' → logprob: -6.4490156173706055

Token 384: 'term' (ID: 8044)
  Prédit: 'term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.07064514607191086
    2. 'tect' → logprob: -3.3206450939178467
    3. 'f' → logprob: -3.4456450939178467
    4. 'crit' → logprob: -9.820645332336426
    5. ' termine' → logprob: -10.445645332336426
    6. '
' → logprob: -10.695645332336426
    7. 'termin' → logprob: -11.070645332336426
    8. '   ' → logprob: -11.820645332336426
    9. 'duit' → logprob: -11.820645332336426
    10. 'c' → logprob: -11.820645332336426

Token 385: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -2.248469718324486e-05
    2. 'iner' → logprob: -11.625022888183594
    3. 'ines' → logprob: -12.500022888183594
    4. '   ' → logprob: -13.250022888183594
    5. 'inez' → logprob: -13.375022888183594
    6. 'i' → logprob: -14.000022888183594
    7. '```' → logprob: -14.500022888183594
    8. ' ine' → logprob: -14.500022888183594
    9. 'in' → logprob: -14.750022888183594
    10. 'inet' → logprob: -14.875022888183594

Token 386: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5700516104698181
    2. ' le' → logprob: -1.320051670074463
    3. ' la' → logprob: -2.070051670074463
    4. 'la' → logprob: -3.195051670074463
    5. '   ' → logprob: -9.195051193237305
    6. ' ' → logprob: -10.195051193237305
    7. 'type' → logprob: -10.945051193237305
    8. 'the' → logprob: -11.445051193237305
    9. 'class' → logprob: -11.820051193237305
    10. 'l' → logprob: -11.945051193237305

Token 387: ' rang' (ID: 32287)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.09407501667737961
    2. 'rang' → logprob: -2.4690749645233154
    3. ' type' → logprob: -5.7190752029418945
    4. 'classe' → logprob: -7.2190752029418945
    5. ' classement' → logprob: -7.5940752029418945
    6. 'rank' → logprob: -8.344075202941895
    7. 'ranking' → logprob: -9.219075202941895
    8. ' rang' → logprob: -9.469075202941895
    9. 'nom' → logprob: -9.844075202941895
    10. 'class' → logprob: -10.469075202941895

Token 388: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.016637863591313362
    2. 'de' → logprob: -4.141637802124023
    3. ' du' → logprob: -7.891637802124023
    4. '   ' → logprob: -8.891637802124023
    5. 'du' → logprob: -10.641637802124023
    6. 'd' → logprob: -10.891637802124023
    7. '       ' → logprob: -11.391637802124023
    8. '_de' → logprob: -11.516637802124023
    9. '    ' → logprob: -11.891637802124023
    10. ' ' → logprob: -12.391637802124023

Token 389: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.07954264432191849
    2. ' la' → logprob: -2.579542636871338
    3. 'c' → logprob: -7.454542636871338
    4. ' cette' → logprob: -10.704543113708496
    5. 'p' → logprob: -11.704543113708496
    6. ' poker' → logprob: -11.954543113708496
    7. '   ' → logprob: -12.454543113708496
    8. 'main' → logprob: -12.454543113708496
    9. '```' → logprob: -12.704543113708496
    10. '_la' → logprob: -12.704543113708496

Token 390: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.010603120550513268
    2. ' main' → logprob: -4.885602951049805
    3. 'hand' → logprob: -5.885602951049805
    4. 'pa' → logprob: -9.135602951049805
    5. 'po' → logprob: -10.760602951049805
    6. 'm' → logprob: -11.260602951049805
    7. '   ' → logprob: -11.385602951049805
    8. 'p' → logprob: -11.510602951049805
    9. 'Main' → logprob: -11.760602951049805
    10. '_main' → logprob: -12.010602951049805

Token 391: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7748770713806152
    2. '       ' → logprob: -1.1498770713806152
    3. ':' → logprob: -2.5248770713806152
    4. '"""' → logprob: -3.3998770713806152
    5. ' :' → logprob: -3.7748770713806152
    6. '():' → logprob: -4.399877071380615
    7. '"""
' → logprob: -4.399877071380615
    8. '.' → logprob: -4.524877071380615
    9. '():
' → logprob: -5.024877071380615
    10. ' en' → logprob: -5.024877071380615

Token 392: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.565201759338379
    2. 'la' → logprob: -1.565201759338379
    3. 'p' → logprob: -2.190201759338379
    4. ' les' → logprob: -2.190201759338379
    5. 'le' → logprob: -2.315201759338379
    6. ' poker' → logprob: -2.315201759338379
    7. ' la' → logprob: -2.565201759338379
    8. '   ' → logprob: -3.565201759338379
    9. '       ' → logprob: -3.940201759338379
    10. ' le' → logprob: -4.190201759338379

Token 393: ' règles' (ID: 67042)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.6964806318283081
    2. 'r' → logprob: -1.446480631828308
    3. ' règles' → logprob: -1.946480631828308
    4. 'p' → logprob: -3.0714807510375977
    5. ' comb' → logprob: -3.8214807510375977
    6. 'm' → logprob: -4.071480751037598
    7. 'types' → logprob: -4.446480751037598
    8. 'class' → logprob: -4.946480751037598
    9. 'rules' → logprob: -5.696480751037598
    10. 'classes' → logprob: -5.946480751037598

Token 394: ' données' (ID: 30580)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7086018323898315
    2. '       ' → logprob: -1.0836018323898315
    3. ' poker' → logprob: -2.833601951599121
    4. ' du' → logprob: -2.958601951599121
    5. ' des' → logprob: -3.458601951599121
    6. 'de' → logprob: -4.083601951599121
    7. 'p' → logprob: -5.833601951599121
    8. 'du' → logprob: -5.958601951599121
    9. '   ' → logprob: -6.333601951599121
    10. 'des' → logprob: -7.583601951599121

Token 395: '."""
' (ID: 33044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08416026085615158
    2. '.' → logprob: -3.834160327911377
    3. ':' → logprob: -3.834160327911377
    4. '   ' → logprob: -3.959160327911377
    5. '"""' → logprob: -4.709160327911377
    6. ' :' → logprob: -5.834160327911377
    7. '"""
' → logprob: -5.959160327911377
    8. '```' → logprob: -6.959160327911377
    9. '):' → logprob: -7.459160327911377
    10. '"' → logprob: -7.834160327911377

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01282475981861353
    2. 'counts' → logprob: -4.887824535369873
    3. ' counts' → logprob: -5.512824535369873
    4. 'count' → logprob: -7.387824535369873
    5. 'tokens' → logprob: -9.512825012207031
    6. '```' → logprob: -9.762825012207031
    7. '   ' → logprob: -9.887825012207031
    8. ' tokens' → logprob: -9.887825012207031
    9. '        ' → logprob: -10.012825012207031
    10. '        
' → logprob: -10.012825012207031

Token 397: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9171385765075684
    2. ' if' → logprob: -1.2921385765075684
    3. 'counts' → logprob: -1.5421385765075684
    4. 'count' (adapté à ' count') → logprob: -2.6671385765075684
    5. ' counts' → logprob: -3.5421385765075684
    6. '       ' → logprob: -5.167138576507568
    7. '   ' → logprob: -5.917138576507568
    8. 'counter' → logprob: -6.042138576507568
    9. ' count' → logprob: -6.792138576507568
    10. 'freq' → logprob: -7.542138576507568

Token 398: '_values' (ID: 20393)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07923058420419693
    2. '_values' → logprob: -2.579230546951294
    3. '_vals' → logprob: -8.704230308532715
    4. ' =' → logprob: -9.579230308532715
    5. '_counts' → logprob: -9.954230308532715
    6. '_s' → logprob: -10.704230308532715
    7. 'values' → logprob: -11.329230308532715
    8. '=' → logprob: -12.079230308532715
    9. '_' → logprob: -12.454230308532715
    10. '_freq' → logprob: -12.454230308532715

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25276464223861694
    2. '=' → logprob: -1.5027647018432617
    3. 's' → logprob: -7.752764701843262
    4. '_values' → logprob: -7.877764701843262
    5. 'values' → logprob: -11.377764701843262
    6. '_vals' → logprob: -11.627764701843262
    7. '_counts' → logprob: -13.502764701843262
    8. ' values' → logprob: -14.002764701843262
    9. ' ' → logprob: -14.002764701843262
    10. ' ' → logprob: -14.377764701843262

Token 400: ' list' (ID: 1562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06222076714038849
    2. 'list' → logprob: -3.062220811843872
    3. 'set' → logprob: -5.062220573425293
    4. 'sorted' → logprob: -5.187220573425293
    5. ' self' → logprob: -6.687220573425293
    6. ' list' → logprob: -8.062220573425293
    7. ' sorted' → logprob: -10.312220573425293
    8. ' set' → logprob: -11.312220573425293
    9. '[self' → logprob: -11.812220573425293
    10. 'Counter' → logprob: -12.562220573425293

Token 401: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.15441757265944e-05
    2. 'self' → logprob: -10.500031471252441
    3. '(' → logprob: -12.875031471252441
    4. '(sorted' → logprob: -13.750031471252441
    5. '=self' → logprob: -16.500032424926758
    6. '[self' → logprob: -16.625032424926758
    7. '(
' → logprob: -16.750032424926758
    8. '(set' → logprob: -17.375032424926758
    9. 'sorted' → logprob: -17.375032424926758
    10. '
' → logprob: -17.500032424926758

Token 402: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0003688245196826756
    2. 'counts' → logprob: -8.37536907196045
    3. 'self' → logprob: -9.37536907196045
    4. '(count' → logprob: -10.50036907196045
    5. 'count' → logprob: -11.12536907196045
    6. ').' → logprob: -12.37536907196045
    7. '.values' → logprob: -13.12536907196045
    8. ' counts' → logprob: -13.50036907196045
    9. ' .' → logprob: -13.75036907196045
    10. '().' → logprob: -14.12536907196045

Token 403: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004527182609308511
    2. '.values' → logprob: -7.750452518463135
    3. 'values' → logprob: -11.375452995300293
    4. '.s' → logprob: -12.875452995300293
    5. 'self' → logprob: -13.250452995300293
    6. ' s' → logprob: -13.500452995300293
    7. 'counts' → logprob: -13.875452995300293
    8. '   ' → logprob: -14.250452995300293
    9. ')' → logprob: -14.500452995300293
    10. ')s' → logprob: -14.500452995300293

Token 404: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.0001628956088097766
    2. '().' → logprob: -8.750163078308105
    3. ' .' → logprob: -12.500163078308105
    4. '.' → logprob: -14.875163078308105
    5. '.value' → logprob: -15.500163078308105
    6. ').' → logprob: -16.25016212463379
    7. '.keys' → logprob: -17.12516212463379
    8. '.items' → logprob: -17.25016212463379
    9. '.val' → logprob: -17.50016212463379
    10. 'values' → logprob: -18.25016212463379

Token 405: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003405136289075017
    2. ')' → logprob: -5.7534050941467285
    3. '())
' → logprob: -8.503405570983887
    4. '()' → logprob: -10.753405570983887
    5. ' ())' → logprob: -13.128405570983887
    6. ' )' → logprob: -14.753405570983887
    7. ')
' → logprob: -15.378405570983887
    8. '(' → logprob: -15.753405570983887
    9. '   ' → logprob: -16.00340461730957
    10. '()
' → logprob: -16.25340461730957

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002999454503878951
    2. '        ' → logprob: -7.002999305725098
    3. 'count' → logprob: -7.002999305725098
    4. ' if' → logprob: -7.627999305725098
    5. ' count' → logprob: -8.377999305725098
    6. '        
' → logprob: -8.877999305725098
    7. ' counts' → logprob: -9.377999305725098
    8. 'counts' → logprob: -9.377999305725098
    9. ' counter' → logprob: -10.377999305725098
    10. 'counter' → logprob: -10.377999305725098

Token 407: ' unique' (ID: 5746)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7290360331535339
    2. '       ' → logprob: -1.6040360927581787
    3. 'if' → logprob: -1.8540360927581787
    4. 'count' → logprob: -2.1040360927581787
    5. ' count' → logprob: -3.3540360927581787
    6. 'counts' → logprob: -6.8540358543396
    7. ' counts' → logprob: -6.9790358543396
    8. '        
' → logprob: -8.104036331176758
    9. 'counter' → logprob: -8.979036331176758
    10. 'sorted' → logprob: -9.604036331176758

Token 408: '_vals' (ID: 71688)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.41748180985450745
    2. '_values' → logprob: -1.417481780052185
    3. '_' → logprob: -3.2924818992614746
    4. 's' → logprob: -3.4174818992614746
    5. ' =' → logprob: -4.667481899261475
    6. '=' → logprob: -4.917481899261475
    7. '_vals' → logprob: -5.792481899261475
    8. '_cards' → logprob: -5.792481899261475
    9. 'values' → logprob: -6.667481899261475
    10. '_s' → logprob: -6.792481899261475

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868945240974426
    2. '=' → logprob: -1.1368944644927979
    3. '()' → logprob: -11.511894226074219
    4. ' ' → logprob: -12.136894226074219
    5. 's' → logprob: -13.011894226074219
    6. ')' → logprob: -13.511894226074219
    7. '＝' → logprob: -13.886894226074219
    8. '=set' → logprob: -14.011894226074219
    9. '   ' → logprob: -14.386894226074219
    10. '	' → logprob: -14.511894226074219

Token 410: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9135809540748596
    2. 'set' → logprob: -1.2885808944702148
    3. ' set' → logprob: -1.6635808944702148
    4. ' len' → logprob: -2.163580894470215
    5. 'list' → logprob: -4.663580894470215
    6. ' list' → logprob: -5.038580894470215
    7. 'sorted' → logprob: -6.788580894470215
    8. 'self' → logprob: -6.913580894470215
    9. ' sorted' → logprob: -7.663580894470215
    10. ' self' → logprob: -7.913580894470215

Token 411: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002501698210835457
    2. '(set' → logprob: -6.002501487731934
    3. '(count' → logprob: -10.877501487731934
    4. '(' → logprob: -12.002501487731934
    5. 'self' → logprob: -14.127501487731934
    6. 'set' → logprob: -16.62750244140625
    7. ' (' → logprob: -17.00250244140625
    8. '(s' → logprob: -17.12750244140625
    9. ' self' → logprob: -17.50250244140625
    10. '(unique' → logprob: -17.62750244140625

Token 412: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -4.143808109802194e-05
    2. ' .' → logprob: -11.000041007995605
    3. '.values' → logprob: -11.500041007995605
    4. '.' → logprob: -12.500041007995605
    5. '.cards' → logprob: -12.625041007995605
    6. 'counts' → logprob: -12.750041007995605
    7. ').' → logprob: -13.750041007995605
    8. 'count' → logprob: -14.125041007995605
    9. '.unique' → logprob: -14.125041007995605
    10. '[count' → logprob: -14.625041007995605

Token 413: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.050024744123220444
    2. '_values' → logprob: -3.0500247478485107
    3. 'ies' → logprob: -7.175024509429932
    4. 'self' → logprob: -8.55002498626709
    5. 'ues' → logprob: -8.67502498626709
    6. 'values' → logprob: -8.80002498626709
    7. 'es' → logprob: -10.05002498626709
    8. ')' → logprob: -10.30002498626709
    9. '(self' → logprob: -10.67502498626709
    10. '   ' → logprob: -11.67502498626709

Token 414: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002213180996477604
    2. ' )' → logprob: -6.127213001251221
    3. ')
' → logprob: -11.252213478088379
    4. '       ' → logprob: -11.752213478088379
    5. '   ' → logprob: -13.252213478088379
    6. '.keys' → logprob: -13.377213478088379
    7. ')==' → logprob: -13.752213478088379
    8. ')>' → logprob: -15.002213478088379
    9. '<|end|>' → logprob: -15.002213478088379
    10. '))' → logprob: -15.127213478088379

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10914219170808792
    2. '
' → logprob: -2.734142303466797
    3. '   ' → logprob: -3.609142303466797
    4. '        
' → logprob: -5.484142303466797
    5. '<|end|>' → logprob: -6.109142303466797
    6. ' if' → logprob: -6.359142303466797
    7. '    
' → logprob: -6.859142303466797
    8. '    ' → logprob: -7.734142303466797
    9. 'if' → logprob: -7.859142303466797
    10. '        ' → logprob: -8.109142303466797

Token 416: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7223396301269531
    2. ' if' → logprob: -1.0973396301269531
    3. 'if' → logprob: -1.7223396301269531
    4. 'is' → logprob: -7.347339630126953
    5. ' is' → logprob: -7.597339630126953
    6. 'straight' → logprob: -8.097339630126953
    7. ' straight' → logprob: -8.597339630126953
    8. '   ' → logprob: -8.722339630126953
    9. '#' (adapté à ' #') → logprob: -9.847339630126953
    10. '        
' → logprob: -10.722339630126953

Token 417: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2529086768627167
    2. ' if' → logprob: -1.502908706665039
    3. '#' → logprob: -7.627908706665039
    4. 'is' → logprob: -8.502908706665039
    5. 'straight' → logprob: -9.127908706665039
    6. ' straight' → logprob: -10.127908706665039
    7. '       ' → logprob: -10.252908706665039
    8. ' #' → logprob: -10.377908706665039
    9. '   ' → logprob: -10.752908706665039
    10. ' is' → logprob: -11.002908706665039

Token 418: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.2591048777103424
    2. 'ifie' → logprob: -2.0091049671173096
    3. 'if' → logprob: -2.3841049671173096
    4. 'ify' → logprob: -7.2591047286987305
    5. 'ifiez' → logprob: -7.3841047286987305
    6. '   ' → logprob: -8.25910472869873
    7. 'ification' → logprob: -8.75910472869873
    8. '       ' → logprob: -9.50910472869873
    9. 'ifer' → logprob: -9.75910472869873
    10. ' if' → logprob: -10.00910472869873

Token 419: ' Four' (ID: 21066)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5767210125923157
    2. 'self' → logprob: -1.701720952987671
    3. '       ' → logprob: -1.951720952987671
    4. 'if' → logprob: -2.951720952987671
    5. ' self' → logprob: -3.076720952987671
    6. '(self' → logprob: -4.82672119140625
    7. '   ' → logprob: -5.32672119140625
    8. '    ' → logprob: -7.20172119140625
    9. '        
' → logprob: -7.95172119140625
    10. 's' → logprob: -8.20172119140625

Token 420: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.9200770854949951
    2. ' of' → logprob: -1.0450770854949951
    3. 'of' → logprob: -1.4200770854949951
    4. '   ' → logprob: -5.420077323913574
    5. 'Of' → logprob: -6.295077323913574
    6. '_' → logprob: -7.420077323913574
    7. '_in' → logprob: -8.295077323913574
    8. '  ' → logprob: -8.545077323913574
    9. '=' → logprob: -8.670077323913574
    10. '_kind' → logprob: -8.795077323913574

Token 421: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.037085991352796555
    2. 'Kind' → logprob: -3.662086009979248
    3. ' a' → logprob: -4.787086009979248
    4. '_a' → logprob: -6.787086009979248
    5. '_kind' → logprob: -7.537086009979248
    6. 'kind' → logprob: -7.662086009979248
    7. ' Kind' → logprob: -9.41208553314209
    8. '-a' → logprob: -10.03708553314209
    9. ' kind' → logprob: -10.28708553314209
    10. 'A' → logprob: -10.53708553314209

Token 422: ' kind' (ID: 3675)
  Prédit: 'Kind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kind' → logprob: -0.048202112317085266
    2. '_kind' → logprob: -3.4232020378112793
    3. 'kind' → logprob: -4.423202037811279
    4. ' Kind' → logprob: -6.173202037811279
    5. ' kind' → logprob: -8.173202514648438
    6. 'a' → logprob: -9.923202514648438
    7. 'King' → logprob: -10.798202514648438
    8. '-kind' → logprob: -11.923202514648438
    9. '_k' → logprob: -13.048202514648438
    10. '(kind' → logprob: -13.173202514648438

Token 423: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024177057668566704
    2. ' if' → logprob: -4.274177074432373
    3. '<|end|>' → logprob: -5.399177074432373
    4. 'if' → logprob: -5.524177074432373
    5. ':' → logprob: -7.899177074432373
    6. ',' → logprob: -8.399176597595215
    7. '   ' → logprob: -8.524176597595215
    8. '<|end|>' → logprob: -8.649176597595215
    9. '
' → logprob: -9.149176597595215
    10. '        
' → logprob: -9.149176597595215

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004406382329761982
    2. ' if' → logprob: -5.629406452178955
    3. '   ' → logprob: -8.254405975341797
    4. 'if' → logprob: -8.379405975341797
    5. '<|end|>' → logprob: -8.504405975341797
    6. ' and' → logprob: -10.629405975341797
    7. ',' → logprob: -10.754405975341797
    8. ':' → logprob: -11.129405975341797
    9. '<|end|>' → logprob: -11.504405975341797
    10. ' ' → logprob: -11.504405975341797

Token 425: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28992563486099243
    2. 'if' (adapté à ' if') → logprob: -1.5399255752563477
    3. '       ' → logprob: -3.2899255752563477
    4. '   ' → logprob: -10.664925575256348
    5. '	if' → logprob: -12.914925575256348
    6. ' ' → logprob: -14.414925575256348
    7. ' for' → logprob: -15.414925575256348
    8. '    ' → logprob: -15.414925575256348
    9. 'for' → logprob: -16.414926528930664
    10. ' ' → logprob: -17.289926528930664

Token 426: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.22548891603946686
    2. ' ' → logprob: -1.6004889011383057
    3. '   ' → logprob: -10.350488662719727
    4. 'max' → logprob: -10.475488662719727
    5. 'count' → logprob: -12.225488662719727
    6. ' max' → logprob: -12.350488662719727
    7. '	' → logprob: -13.475488662719727
    8. '  ' → logprob: -13.975488662719727
    9. ' ' → logprob: -13.975488662719727
    10. ' count' → logprob: -14.100488662719727

Token 427: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -16.875
    4. 'max' → logprob: -17.375
    5. '```' → logprob: -18.125
    6. 'count' → logprob: -18.25
    7. '
' → logprob: -18.75
    8. '

' → logprob: -18.75
    9. '４' → logprob: -19.5
    10. '(' → logprob: -19.5

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008634308353066444
    2. 'in' → logprob: -4.758634090423584
    3. '   ' → logprob: -11.633634567260742
    4. ' ' → logprob: -12.133634567260742
    5. '	in' → logprob: -12.633634567260742
    6. '  ' → logprob: -14.508634567260742
    7. '    ' → logprob: -15.133634567260742
    8. ' ==' → logprob: -15.258634567260742
    9. '==' → logprob: -15.508634567260742
    10. ')' → logprob: -16.008634567260742

Token 429: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006715967319905758
    2. ' count' → logprob: -5.006715774536133
    3. '[count' → logprob: -15.381715774536133
    4. '   ' → logprob: -15.756715774536133
    5. '(count' → logprob: -16.256715774536133
    6. '	count' → logprob: -16.881715774536133
    7. ' ' → logprob: -16.881715774536133
    8. 'counter' → logprob: -17.881715774536133
    9. 'counts' → logprob: -18.381715774536133
    10. '$count' → logprob: -18.631715774536133

Token 430: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -6.2729995988775045e-06
    2. 'values' → logprob: -12.000006675720215
    3. '_' → logprob: -17.6250057220459
    4. ' values' → logprob: -18.2500057220459
    5. '_VALUES' → logprob: -18.6250057220459
    6. 's' → logprob: -19.1250057220459
    7. 'Values' → logprob: -19.1250057220459
    8. '_value' → logprob: -20.5000057220459
    9. '	values' → logprob: -20.5000057220459
    10. '(values' → logprob: -21.0000057220459

Token 431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47424939274787903
    2. ':
' → logprob: -0.9742493629455566
    3. ':return' → logprob: -9.349249839782715
    4. '       ' → logprob: -10.474249839782715
    5. ' :
' → logprob: -10.974249839782715
    6. ' :' → logprob: -11.349249839782715
    7. ' and' → logprob: -11.474249839782715
    8. '           ' → logprob: -11.849249839782715
    9. '):
' → logprob: -12.724249839782715
    10. '():
' → logprob: -13.224249839782715

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007639278657734394
    2. ' return' → logprob: -5.632639408111572
    3. 'return' → logprob: -5.632639408111572
    4. '
' → logprob: -8.507638931274414
    5. '       ' → logprob: -8.632638931274414
    6. ':
' → logprob: -10.007638931274414
    7. ':' → logprob: -11.257638931274414
    8. ':return' → logprob: -12.757638931274414
    9. '   ' → logprob: -13.257638931274414
    10. '          ' → logprob: -13.382638931274414

Token 433: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10824834555387497
    2. '           ' → logprob: -2.858248233795166
    3. ' return' → logprob: -3.108248233795166
    4. '       ' → logprob: -7.608248233795166
    5. '   ' → logprob: -10.483248710632324
    6. '	return' → logprob: -10.983248710632324
    7. '               ' → logprob: -13.108248710632324
    8. ':return' → logprob: -14.233248710632324
    9. 'eturn' → logprob: -14.358248710632324
    10. '
' → logprob: -14.608248710632324

Token 434: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0063645667396485806
    2. ' "' → logprob: -5.131364345550537
    3. ''' → logprob: -7.756364345550537
    4. ' '' → logprob: -12.131364822387695
    5. ''"' → logprob: -14.256364822387695
    6. '   ' → logprob: -14.381364822387695
    7. '("' → logprob: -15.256364822387695
    8. '"P' → logprob: -15.881364822387695
    9. '"K' → logprob: -16.131364822387695
    10. '"I' → logprob: -16.131364822387695

Token 435: 'four' (ID: 61745)
  Prédit: 'Four'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Four' → logprob: -0.02489255927503109
    2. '"' → logprob: -4.649892330169678
    3. 'Qu' → logprob: -4.649892330169678
    4. 'four' → logprob: -5.649892330169678
    5. 'Carr' → logprob: -7.024892330169678
    6. 'Poker' → logprob: -8.024892807006836
    7. 'qu' → logprob: -8.399892807006836
    8. 'Car' → logprob: -8.399892807006836
    9. ''' → logprob: -9.274892807006836
    10. ' Four' → logprob: -9.649892807006836

Token 436: ' card' (ID: 4766)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0899975523352623
    2. '_of' → logprob: -2.4649975299835205
    3. 'of' → logprob: -6.9649977684021
    4. '	of' → logprob: -9.964997291564941
    5. ' "' → logprob: -11.214997291564941
    6. '-of' → logprob: -11.214997291564941
    7. '"' → logprob: -11.339997291564941
    8. '_' → logprob: -12.214997291564941
    9. '   ' → logprob: -12.214997291564941
    10. ' ' → logprob: -12.464997291564941

Token 437: '"
' (ID: 1092)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011766550596803427
    2. ' s' → logprob: -6.876176834106445
    3. '"' → logprob: -8.876176834106445
    4. ' "' → logprob: -13.126176834106445
    5. '(s' → logprob: -14.126176834106445
    6. '_s' → logprob: -14.501176834106445
    7. '"s' → logprob: -14.876176834106445
    8. ' king' → logprob: -15.626176834106445
    9. 'S' → logprob: -16.251176834106445
    10. 'e' → logprob: -16.876176834106445

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007615071372129023
    2. '   ' → logprob: -8.125761032104492
    3. '
' → logprob: -8.625761032104492
    4. 's' → logprob: -9.750761032104492
    5. ')' → logprob: -9.875761032104492
    6. '<|end|>' → logprob: -10.125761032104492
    7. '"' → logprob: -10.250761032104492
    8. '      ' → logprob: -10.875761032104492
    9. 'elif' → logprob: -10.875761032104492
    10. '        
' → logprob: -11.125761032104492

Token 439: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015331770293414593
    2. '   ' → logprob: -4.890331745147705
    3. '
' → logprob: -5.015331745147705
    4. 'elif' → logprob: -7.890331745147705
    5. '<|end|>' → logprob: -8.640332221984863
    6. '        
' → logprob: -8.765332221984863
    7. '    
' → logprob: -9.515332221984863
    8. ' if' → logprob: -9.890332221984863
    9. 'if' → logprob: -10.015332221984863
    10. '      ' → logprob: -10.515332221984863

Token 440: ' Full' (ID: 11689)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5166393518447876
    2. '       ' → logprob: -1.1416393518447876
    3. ' if' → logprob: -2.516639232635498
    4. '   ' → logprob: -6.516639232635498
    5. 'elif' → logprob: -6.891639232635498
    6. '#' → logprob: -7.141639232635498
    7. ' #' → logprob: -9.266639709472656
    8. ' ' → logprob: -10.891639709472656
    9. ' elif' → logprob: -11.141639709472656
    10. '
' → logprob: -11.766639709472656

Token 441: ' house' (ID: 4276)
  Prédit: ' house'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' house' → logprob: -0.03545327112078667
    2. 'house' → logprob: -3.9104533195495605
    3. '"' → logprob: -4.6604533195495605
    4. '   ' → logprob: -5.7854533195495605
    5. '_house' → logprob: -6.4104533195495605
    6. '  ' → logprob: -8.910452842712402
    7. ' ' → logprob: -9.035452842712402
    8. ' "' → logprob: -9.160452842712402
    9. '```' → logprob: -9.410452842712402
    10. '       ' → logprob: -9.535452842712402

Token 442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006146823056042194
    2. 'if' → logprob: -5.6311469078063965
    3. ' if' → logprob: -6.0061469078063965
    4. '   ' → logprob: -10.756146430969238
    5. 'elif' → logprob: -11.381146430969238
    6. ',' → logprob: -12.006146430969238
    7. ':' → logprob: -12.006146430969238
    8. '<|end|>' → logprob: -12.006146430969238
    9. '	if' → logprob: -12.506146430969238
    10. '        
' → logprob: -12.631146430969238

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5864337682723999
    2. 'if' → logprob: -1.3364337682724
    3. ' if' → logprob: -1.7114337682724
    4. '   ' → logprob: -9.211433410644531
    5. 'elif' → logprob: -9.336433410644531
    6. ':' → logprob: -10.711433410644531
    7. 's' → logprob: -10.961433410644531
    8. ',' → logprob: -11.211433410644531
    9. '	if' → logprob: -11.461433410644531
    10. '      ' → logprob: -11.836433410644531

Token 444: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7081406712532043
    2. ' if' → logprob: -0.7081406712532043
    3. '       ' → logprob: -4.208140850067139
    4. 'elif' → logprob: -12.45814037322998
    5. '   ' → logprob: -12.83314037322998
    6. 'If' → logprob: -15.08314037322998
    7. ' ' → logprob: -15.33314037322998
    8. '	if' → logprob: -15.58314037322998
    9. ' elif' → logprob: -15.95814037322998
    10. '```' → logprob: -16.083141326904297

Token 445: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6635722517967224
    2. '3' → logprob: -0.7885722517967224
    3. ' sorted' → logprob: -4.163572311401367
    4. 'sorted' → logprob: -4.663572311401367
    5. 'set' → logprob: -5.788572311401367
    6. ' set' → logprob: -6.038572311401367
    7. '(' → logprob: -10.913572311401367
    8. '(sorted' → logprob: -11.288572311401367
    9. ' (' → logprob: -11.538572311401367
    10. '   ' → logprob: -11.913572311401367

Token 446: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008828802965581417
    2. 'sorted' → logprob: -7.375883102416992
    3. 'set' → logprob: -8.750883102416992
    4. ' ' → logprob: -9.750883102416992
    5. ' sorted' → logprob: -11.000883102416992
    6. '(' → logprob: -11.375883102416992
    7. 'count' → logprob: -11.750883102416992
    8. '(sorted' → logprob: -13.125883102416992
    9. ' set' → logprob: -13.875883102416992
    10. '{' → logprob: -15.750883102416992

Token 447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0141702089458704
    2. 'in' → logprob: -4.264170169830322
    3. ' ' → logprob: -12.13917064666748
    4. '	in' → logprob: -14.88917064666748
    5. '   ' → logprob: -15.63917064666748
    6. 'In' → logprob: -16.139169692993164
    7. 's' → logprob: -16.139169692993164
    8. '_in' → logprob: -16.639169692993164
    9. 'import' → logprob: -16.764169692993164
    10. 'and' → logprob: -17.014169692993164

Token 448: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04859623312950134
    2. ' count' → logprob: -3.048596143722534
    3. '[count' → logprob: -12.423596382141113
    4. ' ' → logprob: -13.173596382141113
    5. '   ' → logprob: -13.673596382141113
    6. '_count' → logprob: -14.923596382141113
    7. '	count' → logprob: -15.048596382141113
    8. '(count' → logprob: -15.048596382141113
    9. 'code' → logprob: -15.548596382141113
    10. 'counter' → logprob: -16.298595428466797

Token 449: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.001205350155942142
    2. 'count' → logprob: -6.7512054443359375
    3. '_count' → logprob: -11.001205444335938
    4. ' count' → logprob: -12.001205444335938
    5. 'values' → logprob: -12.251205444335938
    6. '_counts' → logprob: -12.501205444335938
    7. '_value' → logprob: -13.751205444335938
    8. '_' → logprob: -13.751205444335938
    9. '_vals' → logprob: -14.501205444335938
    10. 'in' → logprob: -15.001205444335938

Token 450: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018165044486522675
    2. 'and' → logprob: -4.018165111541748
    3. ' ' → logprob: -11.14316463470459
    4. '	and' → logprob: -15.51816463470459
    5. '    ' → logprob: -15.76816463470459
    6. '        ' → logprob: -16.018165588378906
    7. '   ' → logprob: -16.518165588378906
    8. ' ' → logprob: -17.018165588378906
    9. ' и' → logprob: -17.768165588378906
    10. '  ' → logprob: -18.018165588378906

Token 451: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10020752996206284
    2. '2' → logprob: -2.350207567214966
    3. ' (' → logprob: -15.350207328796387
    4. '   ' → logprob: -15.475207328796387
    5. '  ' → logprob: -16.225208282470703
    6. '(' → logprob: -16.225208282470703
    7. '
' → logprob: -16.475208282470703
    8. 'count' → logprob: -16.725208282470703
    9. ' ' → logprob: -16.850208282470703
    10. ' count' → logprob: -17.600208282470703

Token 452: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22541414201259613
    2. ' ' → logprob: -1.6004141569137573
    3. 'count' → logprob: -14.350414276123047
    4. '   ' → logprob: -15.225414276123047
    5. '
' → logprob: -15.475414276123047
    6. '  ' → logprob: -15.850414276123047
    7. '(' → logprob: -16.350414276123047
    8. ' count' → logprob: -16.475414276123047
    9. ' (' → logprob: -16.475414276123047
    10. '２' → logprob: -17.350414276123047

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00861528143286705
    2. 'in' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.883615493774414
    4. '	in' → logprob: -15.883615493774414
    5. ' ' → logprob: -16.633615493774414
    6. '[' → logprob: -17.008615493774414
    7. 's' → logprob: -17.008615493774414
    8. 'In' → logprob: -17.258615493774414
    9. ')' → logprob: -17.508615493774414
    10. 'import' → logprob: -17.883615493774414

Token 454: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06196846812963486
    2. ' count' → logprob: -2.8119685649871826
    3. '[count' → logprob: -14.561968803405762
    4. 'counter' → logprob: -16.311967849731445
    5. ' ' → logprob: -16.561967849731445
    6. '(count' → logprob: -16.936967849731445
    7. '	count' → logprob: -16.936967849731445
    8. '$count' → logprob: -17.186967849731445
    9. '_count' → logprob: -18.061967849731445
    10. '<count' → logprob: -18.686967849731445

Token 455: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -9.088346359931165e-07
    2. 'count' → logprob: -14.375000953674316
    3. 'values' → logprob: -16.0
    4. '_count' → logprob: -16.625
    5. '_value' → logprob: -16.875
    6. '_' → logprob: -17.5
    7. '_counts' → logprob: -17.625
    8. '_VALUES' → logprob: -18.625
    9. '   ' → logprob: -20.0
    10. 's' → logprob: -20.0

Token 456: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048629943281412125
    2. ':
' → logprob: -3.0486299991607666
    3. ':return' → logprob: -10.798629760742188
    4. '       ' → logprob: -11.798629760742188
    5. '           ' → logprob: -12.173629760742188
    6. '):
' → logprob: -13.048629760742188
    7. ':
' → logprob: -13.423629760742188
    8. '):' → logprob: -13.423629760742188
    9. ',' → logprob: -13.548629760742188
    10. '   ' → logprob: -14.048629760742188

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10688160359859467
    2. '       ' → logprob: -2.856881618499756
    3. ':' → logprob: -3.606881618499756
    4. ':
' → logprob: -4.106881618499756
    5. '   ' → logprob: -9.356881141662598
    6. ':return' → logprob: -9.356881141662598
    7. '	       ' → logprob: -9.856881141662598
    8. '	   ' → logprob: -11.106881141662598
    9. '          ' → logprob: -11.356881141662598
    10. '<|end|>' → logprob: -11.481881141662598

Token 458: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5138443112373352
    2. ' return' → logprob: -1.2638442516326904
    3. 'return' (adapté à ' return') → logprob: -2.1388442516326904
    4. '       ' → logprob: -6.6388444900512695
    5. '	return' → logprob: -9.76384449005127
    6. '   ' → logprob: -10.26384449005127
    7. '               ' → logprob: -10.63884449005127
    8. '	       ' → logprob: -11.76384449005127
    9. ':return' → logprob: -11.76384449005127
    10. 'eturn' → logprob: -12.76384449005127

Token 459: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4740825295448303
    2. '"' → logprob: -0.9740825295448303
    3. ''' → logprob: -13.099082946777344
    4. ' ' → logprob: -13.974082946777344
    5. ' '' → logprob: -14.724082946777344
    6. '	' → logprob: -14.849082946777344
    7. '"class' → logprob: -14.974082946777344
    8. ' ' → logprob: -14.974082946777344
    9. '"s' → logprob: -15.224082946777344
    10. '   ' → logprob: -15.724082946777344

Token 460: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.00159163074567914
    2. '"' → logprob: -6.876591682434082
    3. ' full' → logprob: -7.501591682434082
    4. 'three' → logprob: -12.876591682434082
    5. 'ful' → logprob: -13.501591682434082
    6. 'Full' → logprob: -13.501591682434082
    7. '	full' → logprob: -14.626591682434082
    8. 'four' → logprob: -15.501591682434082
    9. 'fullname' → logprob: -15.626591682434082
    10. ''' → logprob: -16.751590728759766

Token 461: ' house' (ID: 4276)
  Prédit: ' house'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' house' → logprob: -0.004898092709481716
    2. 'house' → logprob: -5.5048980712890625
    3. '_house' → logprob: -7.2548980712890625
    4. ' ' → logprob: -10.129898071289062
    5. ' card' → logprob: -10.629898071289062
    6. ' ' → logprob: -10.629898071289062
    7. '   ' → logprob: -11.254898071289062
    8. '  ' → logprob: -12.254898071289062
    9. '-house' → logprob: -13.004898071289062
    10. '"' → logprob: -14.129898071289062

Token 462: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014175849966704845
    2. '"
' → logprob: -4.264175891876221
    3. '       ' → logprob: -11.639175415039062
    4. '"
' → logprob: -13.264175415039062
    5. '"`
' → logprob: -14.889175415039062
    6. '")' → logprob: -15.264175415039062
    7. ')"' → logprob: -15.514175415039062
    8. '```' → logprob: -15.639175415039062
    9. ' "' → logprob: -15.889175415039062
    10. '   ' → logprob: -16.139175415039062

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015623578801751137
    2. '   ' → logprob: -6.751562595367432
    3. '#' → logprob: -8.001562118530273
    4. '
' → logprob: -11.126562118530273
    5. '```' → logprob: -11.126562118530273
    6. '<|end|>' → logprob: -11.251562118530273
    7. 'return' → logprob: -13.001562118530273
    8. 'if' → logprob: -13.251562118530273
    9. '           ' → logprob: -13.376562118530273
    10. ')' → logprob: -13.501562118530273

Token 464: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08294813334941864
    2. '#' (adapté à ' #') → logprob: -2.5829482078552246
    3. '   ' → logprob: -5.582948207855225
    4. 'if' → logprob: -8.957947731018066
    5. ' #' → logprob: -9.707947731018066
    6. '```' → logprob: -10.207947731018066
    7. '
' → logprob: -10.457947731018066
    8. '<|end|>' → logprob: -11.957947731018066
    9. '  ' → logprob: -12.457947731018066
    10. '      ' → logprob: -12.582947731018066

Token 465: ' Straight' (ID: 77801)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0702316164970398
    2. '       ' → logprob: -2.9452316761016846
    3. ' if' → logprob: -4.1952314376831055
    4. '#' → logprob: -9.195231437683105
    5. 'straight' → logprob: -10.820231437683105
    6. 'If' → logprob: -11.070231437683105
    7. '   ' → logprob: -11.945231437683105
    8. 'Straight' → logprob: -12.445231437683105
    9. 'is' → logprob: -12.570231437683105
    10. 'flush' → logprob: -12.570231437683105

Token 466: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07206768542528152
    2. 'if' → logprob: -2.6970677375793457
    3. ' if' → logprob: -6.697067737579346
    4. '
' → logprob: -8.572067260742188
    5. '   ' → logprob: -8.947067260742188
    6. ' and' → logprob: -9.072067260742188
    7. '()' → logprob: -9.197067260742188
    8. 's' → logprob: -9.447067260742188
    9. '=' → logprob: -10.322067260742188
    10. ' =' → logprob: -10.447067260742188

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009350619278848171
    2. 'if' → logprob: -5.009350776672363
    3. ' if' → logprob: -6.009350776672363
    4. ' and' → logprob: -9.009350776672363
    5. '()' → logprob: -11.634350776672363
    6. '   ' → logprob: -11.759350776672363
    7. 'and' → logprob: -12.009350776672363
    8. ' =' → logprob: -12.384350776672363
    9. ':' → logprob: -12.759350776672363
    10. '        
' → logprob: -12.759350776672363

Token 468: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18006308376789093
    2. ' if' → logprob: -1.9300631284713745
    3. '       ' → logprob: -3.930063009262085
    4. 'If' → logprob: -15.055063247680664
    5. '	if' → logprob: -15.180063247680664
    6. '   ' → logprob: -15.555063247680664
    7. ' ' → logprob: -16.180063247680664
    8. '```' → logprob: -17.305063247680664
    9. 'elif' → logprob: -17.555063247680664
    10. '
' → logprob: -18.305063247680664

Token 469: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132750391960144
    2. 'self' → logprob: -1.3132750988006592
    3. '	self' → logprob: -12.063275337219238
    4. '   ' → logprob: -12.813275337219238
    5. '(self' → logprob: -13.188275337219238
    6. '       ' → logprob: -13.938275337219238
    7. ' ' → logprob: -14.438275337219238
    8. '    ' → logprob: -14.813275337219238
    9. ' ' → logprob: -14.813275337219238
    10. 'Self' → logprob: -15.438275337219238

Token 470: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -8.721228368813172e-05
    2. '.' → logprob: -9.375086784362793
    3. 'is' → logprob: -13.250086784362793
    4. ' .' → logprob: -15.000086784362793
    5. '._' → logprob: -17.37508773803711
    6. '.has' → logprob: -18.25008773803711
    7. '_.' → logprob: -18.37508773803711
    8. ').' → logprob: -18.75008773803711
    9. '​.' → logprob: -19.25008773803711
    10. '().' → logprob: -19.37508773803711

Token 471: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -6.704273118884885e-07
    2. 'straight' → logprob: -14.750000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_s' → logprob: -16.625
    5. '_str' → logprob: -17.5
    6. 'st' → logprob: -19.0
    7. ' _' → logprob: -19.875
    8. '_sp' → logprob: -20.75
    9. 'Straight' → logprob: -21.25
    10. ' straight' → logprob: -21.25

Token 472: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0015314090996980667
    2. 'rait' → logprob: -6.501531600952148
    3. 'straight' → logprob: -11.001531600952148
    4. 'right' → logprob: -12.126531600952148
    5. 'rai' → logprob: -13.376531600952148
    6. 'ight' → logprob: -13.376531600952148
    7. '```' → logprob: -14.126531600952148
    8. 'rail' → logprob: -14.626531600952148
    9. 'raith' → logprob: -14.626531600952148
    10. 'raid' → logprob: -14.626531600952148

Token 473: 'ight' (ID: 583)
  Prédit: 'ight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -5.512236498361744e-07
    2. 'igh' → logprob: -15.500000953674316
    3. 'int' → logprob: -16.125
    4. 'i' → logprob: -17.5
    5. '
' → logprob: -17.75
    6. 'a' → logprob: -17.875
    7. '   ' → logprob: -18.0
    8. 'igth' → logprob: -18.125
    9. '```' → logprob: -18.125
    10. 'igt' → logprob: -18.125

Token 474: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002910550683736801
    2. '()' → logprob: -6.002910614013672
    3. ' ():' → logprob: -8.377910614013672
    4. '():
' → logprob: -8.502910614013672
    5. ' ()' → logprob: -13.627910614013672
    6. '(' → logprob: -15.127910614013672
    7. '():
' → logprob: -15.127910614013672
    8. '()>' → logprob: -15.752910614013672
    9. '()==' → logprob: -16.252910614013672
    10. '()
' → logprob: -17.627910614013672

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029147207736968994
    2. '       ' → logprob: -3.654147148132324
    3. ':' → logprob: -6.279147148132324
    4. ':
' → logprob: -7.279147148132324
    5. ' return' → logprob: -9.529147148132324
    6. '	       ' → logprob: -9.529147148132324
    7. ':return' → logprob: -10.279147148132324
    8. 'return' → logprob: -10.279147148132324
    9. '   ' → logprob: -10.779147148132324
    10. '	   ' → logprob: -11.404147148132324

Token 476: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39443013072013855
    2. '           ' → logprob: -1.644430160522461
    3. ' return' → logprob: -2.019430160522461
    4. '       ' → logprob: -10.394430160522461
    5. '	return' → logprob: -11.019430160522461
    6. '   ' → logprob: -11.269430160522461
    7. '               ' → logprob: -11.894430160522461
    8. ':return' → logprob: -12.144430160522461
    9. '	       ' → logprob: -12.519430160522461
    10. 'eturn' → logprob: -13.644430160522461

Token 477: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.012540032155811787
    2. ' "' → logprob: -4.387539863586426
    3. '"s' → logprob: -10.762539863586426
    4. '	' → logprob: -13.387539863586426
    5. '"user' → logprob: -13.387539863586426
    6. ''s' → logprob: -13.637539863586426
    7. ''' → logprob: -14.012539863586426
    8. '"value' → logprob: -14.137539863586426
    9. '"class' → logprob: -14.637539863586426
    10. ' ' → logprob: -14.637539863586426

Token 478: 'straight' (ID: 197685)
  Prédit: 'straight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straight' → logprob: -0.0037779819685965776
    2. '"' → logprob: -5.753777980804443
    3. ' straight' → logprob: -7.878777980804443
    4. 'suite' → logprob: -9.628778457641602
    5. '"s' → logprob: -9.753778457641602
    6. 'sequence' → logprob: -10.003778457641602
    7. 'stra' → logprob: -10.753778457641602
    8. 'street' → logprob: -11.878778457641602
    9. 's' → logprob: -12.003778457641602
    10. 'Straight' → logprob: -12.378778457641602

Token 479: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005382588133215904
    2. '"
' → logprob: -7.625538349151611
    3. ' "' → logprob: -10.000537872314453
    4. 's' → logprob: -12.875537872314453
    5. '"""' → logprob: -14.625537872314453
    6. '""' → logprob: -14.750537872314453
    7. '"class' → logprob: -14.875537872314453
    8. ')"' → logprob: -15.625537872314453
    9. '"s' → logprob: -15.625537872314453
    10. '")' → logprob: -16.125537872314453

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003322473494336009
    2. '   ' → logprob: -8.62533187866211
    3. '<|end|>' → logprob: -9.87533187866211
    4. 'return' → logprob: -10.00033187866211
    5. '
' → logprob: -10.62533187866211
    6. '#' → logprob: -11.75033187866211
    7. '           ' → logprob: -12.50033187866211
    8. '        
' → logprob: -12.62533187866211
    9. '      ' → logprob: -12.87533187866211
    10. '```' → logprob: -13.00033187866211

Token 481: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7039957642555237
    2. '       ' → logprob: -0.7039957642555237
    3. '   ' → logprob: -5.078995704650879
    4. 'if' → logprob: -5.453995704650879
    5. ' #' → logprob: -8.578995704650879
    6. '```' → logprob: -10.703995704650879
    7. 'return' → logprob: -11.203995704650879
    8. '      ' → logprob: -11.328995704650879
    9. '     ' → logprob: -11.703995704650879
    10. '    ' → logprob: -11.953995704650879

Token 482: ' Three' (ID: 21877)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.031219927594065666
    2. '       ' → logprob: -4.156219959259033
    3. ' if' → logprob: -4.781219959259033
    4. '#' → logprob: -5.031219959259033
    5. 'If' → logprob: -9.781219482421875
    6. '3' → logprob: -9.906219482421875
    7. 'Three' → logprob: -10.531219482421875
    8. '   ' → logprob: -11.781219482421875
    9. 'three' → logprob: -12.656219482421875
    10. '           ' → logprob: -13.406219482421875

Token 483: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.31357574462890625
    2. ' of' → logprob: -1.4385757446289062
    3. 'of' → logprob: -4.063575744628906
    4. 'card' → logprob: -4.563575744628906
    5. '_card' → logprob: -5.938575744628906
    6. '_of' → logprob: -6.813575744628906
    7. '   ' → logprob: -8.313575744628906
    8. ' ' → logprob: -8.313575744628906
    9. '_' → logprob: -10.938575744628906
    10. ' ' → logprob: -11.438575744628906

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008525127195753157
    2. ' if' → logprob: -7.750852584838867
    3. 'if' → logprob: -7.875852584838867
    4. '   ' → logprob: -11.125852584838867
    5. '
' → logprob: -12.250852584838867
    6. '<|end|>' → logprob: -12.500852584838867
    7. ' ' → logprob: -12.750852584838867
    8. '      ' → logprob: -12.875852584838867
    9. '           ' → logprob: -13.125852584838867
    10. '        ' → logprob: -13.125852584838867

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08609632402658463
    2. ' if' → logprob: -3.2110962867736816
    3. 'if' → logprob: -3.2110962867736816
    4. '"' → logprob: -6.461096286773682
    5. '   ' → logprob: -8.96109676361084
    6. 's' → logprob: -9.96109676361084
    7. '           ' → logprob: -10.33609676361084
    8. 'card' → logprob: -11.21109676361084
    9. '        ' → logprob: -11.46109676361084
    10. '")' → logprob: -11.58609676361084

Token 486: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18364199995994568
    2. ' if' → logprob: -2.3086419105529785
    3. '       ' → logprob: -2.6836419105529785
    4. '   ' → logprob: -10.058642387390137
    5. '	if' → logprob: -12.058642387390137
    6. ' ' → logprob: -12.433642387390137
    7. '```' → logprob: -13.933642387390137
    8. 'If' → logprob: -14.308642387390137
    9. '           ' → logprob: -14.808642387390137
    10. '  ' → logprob: -14.933642387390137

Token 487: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1002107709646225
    2. ' ' → logprob: -2.350210666656494
    3. '   ' → logprob: -13.225211143493652
    4. ' three' → logprob: -13.600211143493652
    5. '  ' → logprob: -15.350211143493652
    6. ' ' → logprob: -15.662711143493652
    7. '３' → logprob: -15.725211143493652
    8. '(' → logprob: -16.225210189819336
    9. '۳' → logprob: -16.225210189819336
    10. '    ' → logprob: -16.475210189819336

Token 488: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.87507438659668
    4. ' three' → logprob: -16.87507438659668
    5. '３' → logprob: -17.25007438659668
    6. '۳' → logprob: -18.00007438659668
    7. '  ' → logprob: -18.25007438659668
    8. '
' → logprob: -19.00007438659668
    9. 'three' → logprob: -19.25007438659668
    10. 'count' → logprob: -19.62507438659668

Token 489: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01104935072362423
    2. 'in' → logprob: -4.511049270629883
    3. ' ' → logprob: -14.386049270629883
    4. '	in' → logprob: -14.761049270629883
    5. '   ' → logprob: -15.761049270629883
    6. ')' → logprob: -16.511049270629883
    7. ' ' → logprob: -16.511049270629883
    8. 'In' → logprob: -16.761049270629883
    9. ' not' → logprob: -16.886049270629883
    10. '  ' → logprob: -17.011049270629883

Token 490: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16022665798664093
    2. ' count' → logprob: -1.9102267026901245
    3. '[count' → logprob: -14.160226821899414
    4. '_count' → logprob: -14.410226821899414
    5. ' ' → logprob: -14.910226821899414
    6. '	count' → logprob: -15.410226821899414
    7. 'counter' → logprob: -15.660226821899414
    8. '   ' → logprob: -16.160226821899414
    9. '(count' → logprob: -16.160226821899414
    10. 'code' → logprob: -16.535226821899414

Token 491: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.05465780571103096
    2. 'count' → logprob: -3.0546576976776123
    3. '_count' → logprob: -5.179657936096191
    4. ' count' → logprob: -8.054657936096191
    5. '_counts' → logprob: -9.929657936096191
    6. '_value' → logprob: -10.179657936096191
    7. '_' → logprob: -11.179657936096191
    8. '(count' → logprob: -13.679657936096191
    9. '[count' → logprob: -14.179657936096191
    10. 'values' → logprob: -14.304657936096191

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050453174859285355
    2. ':
' → logprob: -3.1754531860351562
    3. '           ' → logprob: -5.925453186035156
    4. '       ' → logprob: -5.925453186035156
    5. ':return' → logprob: -6.550453186035156
    6. '   ' → logprob: -7.800453186035156
    7. ' :' → logprob: -9.175453186035156
    8. ' and' → logprob: -10.675453186035156
    9. ' :
' → logprob: -10.800453186035156
    10. '=' → logprob: -11.300453186035156

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042301202192902565
    2. '       ' → logprob: -6.00423002243042
    3. ':' → logprob: -6.75423002243042
    4. ' return' → logprob: -8.379230499267578
    5. '   ' → logprob: -8.879230499267578
    6. ':return' → logprob: -10.129230499267578
    7. '	       ' → logprob: -10.129230499267578
    8. 'return' → logprob: -10.254230499267578
    9. '	   ' → logprob: -10.629230499267578
    10. ':
' → logprob: -10.754230499267578

Token 494: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31612706184387207
    2. 'return' (adapté à ' return') → logprob: -1.316127061843872
    3. '           ' → logprob: -6.066126823425293
    4. '       ' → logprob: -7.566126823425293
    5. '   ' → logprob: -10.941126823425293
    6. '	return' → logprob: -12.316126823425293
    7. ' ' → logprob: -14.691126823425293
    8. ':return' → logprob: -15.441126823425293
    9. '               ' → logprob: -15.566126823425293
    10. ' ' → logprob: -16.06612777709961

Token 495: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06197262182831764
    2. ' "' → logprob: -2.8119726181030273
    3. '"s' → logprob: -12.686972618103027
    4. '"class' → logprob: -14.436972618103027
    5. '   ' → logprob: -15.311972618103027
    6. '	' → logprob: -15.436972618103027
    7. ' ' → logprob: -15.686972618103027
    8. ''' → logprob: -15.936972618103027
    9. '"user' → logprob: -16.061973571777344
    10. '"text' → logprob: -16.186973571777344

Token 496: 'three' (ID: 47660)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008668344467878342
    2. 'three' → logprob: -4.758668422698975
    3. ' three' → logprob: -10.008667945861816
    4. ' "' → logprob: -12.008667945861816
    5. ''' → logprob: -13.508667945861816
    6. '3' → logprob: -13.883667945861816
    7. ''t' → logprob: -16.758668899536133
    8. 'th' → logprob: -16.883668899536133
    9. '<th' → logprob: -17.008668899536133
    10. '_three' → logprob: -17.008668899536133

Token 497: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.0004396095173433423
    2. 'card' → logprob: -8.375439643859863
    3. '_card' → logprob: -8.500439643859863
    4. ' ' → logprob: -12.375439643859863
    5. '	card' → logprob: -14.000439643859863
    6. ' ' → logprob: -15.625439643859863
    7. '_' → logprob: -15.625439643859863
    8. ' _' → logprob: -16.250438690185547
    9. ' "' → logprob: -16.375438690185547
    10. '"' → logprob: -17.000438690185547

Token 498: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00011927806917810813
    2. ' "' → logprob: -9.87511920928955
    3. '"
' → logprob: -10.00011920928955
    4. '       ' → logprob: -11.50011920928955
    5. '<|end|>' → logprob: -12.87511920928955
    6. '```' → logprob: -13.25011920928955
    7. 's' → logprob: -13.50011920928955
    8. 'return' → logprob: -13.75011920928955
    9. '"user' → logprob: -13.75011920928955
    10. '"s' → logprob: -14.00011920928955

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003341805888339877
    2. '   ' → logprob: -6.0033416748046875
    3. 'if' → logprob: -7.1283416748046875
    4. ' if' → logprob: -10.628341674804688
    5. '#' → logprob: -10.878341674804688
    6. '        
' → logprob: -12.128341674804688
    7. '      ' → logprob: -12.628341674804688
    8. '           ' → logprob: -13.128341674804688
    9. '  ' → logprob: -13.378341674804688
    10. '     ' → logprob: -13.628341674804688

Token 500: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012903718277812004
    2. '#' (adapté à ' #') → logprob: -4.762903690338135
    3. '   ' → logprob: -5.637903690338135
    4. 'if' → logprob: -8.012904167175293
    5. ' #' → logprob: -8.262904167175293
    6. ' ' → logprob: -10.262904167175293
    7. ' if' → logprob: -10.512904167175293
    8. '	' → logprob: -11.137904167175293
    9. '  ' → logprob: -11.262904167175293
    10. '      ' → logprob: -11.512904167175293

Token 501: ' Two' (ID: 13311)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00894402340054512
    2. ' if' → logprob: -4.758944034576416
    3. 'Two' → logprob: -8.633943557739258
    4. 'two' → logprob: -10.133943557739258
    5. '       ' → logprob: -10.633943557739258
    6. '   ' → logprob: -11.008943557739258
    7. 'If' → logprob: -11.258943557739258
    8. 'Pair' → logprob: -11.383943557739258
    9. 'pairs' → logprob: -11.508943557739258
    10. ' two' → logprob: -11.508943557739258

Token 502: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.04776386544108391
    2. ' pairs' → logprob: -4.047763824462891
    3. ' ' → logprob: -4.672763824462891
    4. ' card' → logprob: -4.797763824462891
    5. 'pair' → logprob: -4.922763824462891
    6. '_pairs' → logprob: -6.047763824462891
    7. '_pair' → logprob: -6.547763824462891
    8. 'pairs' → logprob: -8.42276382446289
    9. '_' → logprob: -9.17276382446289
    10. ' ' → logprob: -9.42276382446289

Token 503: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.023674488067627
    2. 'if' → logprob: -1.023674488067627
    3. '<|end|>' → logprob: -2.023674488067627
    4. '
' → logprob: -2.773674488067627
    5. ' if' → logprob: -2.898674488067627
    6. '  
' → logprob: -4.523674488067627
    7. ' 
' → logprob: -5.398674488067627
    8. '   ' → logprob: -5.523674488067627
    9. '<|end|>' → logprob: -5.773674488067627
    10. '        
' → logprob: -5.773674488067627

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023330263793468475
    2. 'if' → logprob: -3.8983302116394043
    3. ' if' → logprob: -6.023330211639404
    4. '   ' → logprob: -8.023330688476562
    5. ' ' → logprob: -11.148330688476562
    6. '<|end|>' → logprob: -11.898330688476562
    7. '	if' → logprob: -12.273330688476562
    8. '  ' → logprob: -13.523330688476562
    9. '      ' → logprob: -13.648330688476562
    10. '	' → logprob: -14.273330688476562

Token 505: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5950986742973328
    2. ' if' → logprob: -0.8450986742973328
    3. '       ' → logprob: -3.9700987339019775
    4. 'pair' → logprob: -9.970098495483398
    5. 'pairs' → logprob: -10.345098495483398
    6. ' pair' → logprob: -11.345098495483398
    7. ' pairs' → logprob: -12.970098495483398
    8. '   ' → logprob: -13.095098495483398
    9. '
' → logprob: -13.345098495483398
    10. 'count' → logprob: -13.470098495483398

Token 506: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04300958290696144
    2. ' count' → logprob: -3.1680095195770264
    3. 'unique' → logprob: -12.168009757995605
    4. ' ' → logprob: -12.918009757995605
    5. ' unique' → logprob: -13.918009757995605
    6. 'list' → logprob: -14.293009757995605
    7. '2' → logprob: -14.918009757995605
    8. '   ' → logprob: -15.168009757995605
    9. '	count' → logprob: -15.668009757995605
    10. '(count' → logprob: -15.793009757995605

Token 507: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -6.704273118884885e-07
    2. 'values' → logprob: -15.250000953674316
    3. 's' → logprob: -15.875000953674316
    4. '_' → logprob: -16.625
    5. '(values' → logprob: -16.625
    6. '(count' → logprob: -17.125
    7. '_counts' → logprob: -17.5
    8. '(' → logprob: -17.875
    9. '_VALUES' → logprob: -18.375
    10. '_vals' → logprob: -18.5

Token 508: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.008686667308211327
    2. '.' → logprob: -4.758686542510986
    3. ' .' → logprob: -10.258687019348145
    4. 'count' → logprob: -10.883687019348145
    5. '==' → logprob: -11.508687019348145
    6. '.Count' → logprob: -12.383687019348145
    7. '   ' → logprob: -13.633687019348145
    8. ' ==' → logprob: -13.883687019348145
    9. ' ' → logprob: -14.133687019348145
    10. ' count' → logprob: -14.758687019348145

Token 509: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.60414821645827e-06
    2. '2' → logprob: -13.000004768371582
    3. ' (' → logprob: -13.000004768371582
    4. '(
' → logprob: -17.250003814697266
    5. '=' → logprob: -20.125003814697266
    6. '   ' → logprob: -20.375003814697266
    7. '1' → logprob: -20.375003814697266
    8. ' ' → logprob: -20.500003814697266
    9. '```' → logprob: -21.000003814697266
    10. '4' → logprob: -21.250003814697266

Token 510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10021066665649414
    2. '(' → logprob: -2.350210666656494
    3. ' ' → logprob: -12.475210189819336
    4. '=' → logprob: -16.725210189819336
    5. '   ' → logprob: -16.725210189819336
    6. ' (' → logprob: -16.850210189819336
    7. '  ' → logprob: -17.725210189819336
    8. '
' → logprob: -18.225210189819336
    9. '    ' → logprob: -18.350210189819336
    10. '(
' → logprob: -18.475210189819336

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5033057928085327
    2. '==' → logprob: -1.2533057928085327
    3. '()' → logprob: -2.8783059120178223
    4. ' ==' → logprob: -3.0033059120178223
    5. ')==' → logprob: -6.753305912017822
    6. '()==' → logprob: -6.753305912017822
    7. '>=' → logprob: -6.878305912017822
    8. ' >=' → logprob: -8.378305435180664
    9. '=' → logprob: -8.878305435180664
    10. ' )' → logprob: -9.003305435180664

Token 512: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1949406862258911
    2. '==' → logprob: -1.8199406862258911
    3. ' >=' → logprob: -4.444940567016602
    4. '()' → logprob: -6.569940567016602
    5. '>=' → logprob: -6.694940567016602
    6. '()==' → logprob: -7.444940567016602
    7. ')' → logprob: -9.944940567016602
    8. ' ' → logprob: -10.069940567016602
    9. '=' → logprob: -11.319940567016602
    10. ')==' → logprob: -11.819940567016602

Token 513: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009756204672157764
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -15.509756088256836
    4. '۲' → logprob: -17.509756088256836
    5. ' ' → logprob: -18.384756088256836
    6. '  ' → logprob: -18.384756088256836
    7. '２' → logprob: -19.572256088256836
    8. '	' → logprob: -19.822256088256836
    9. '```' → logprob: -19.947256088256836
    10. '    ' → logprob: -19.947256088256836

Token 514: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '۲' → logprob: -17.125030517578125
    4. '   ' → logprob: -19.125030517578125
    5. '२' → logprob: -19.875030517578125
    6. '２' → logprob: -20.000030517578125
    7. '২' → logprob: -20.000030517578125
    8. '```' → logprob: -20.125030517578125
    9. '٢' → logprob: -20.125030517578125
    10. ' ' → logprob: -21.187530517578125

Token 515: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011715145781636238
    2. ':
' → logprob: -4.511714935302734
    3. '           ' → logprob: -7.761714935302734
    4. '       ' → logprob: -9.511714935302734
    5. ' :' → logprob: -9.511714935302734
    6. ':return' → logprob: -10.261714935302734
    7. '):' → logprob: -10.511714935302734
    8. '   ' → logprob: -11.636714935302734
    9. ' :
' → logprob: -12.136714935302734
    10. ')' → logprob: -12.511714935302734

Token 516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00967865064740181
    2. ':
' → logprob: -4.884678840637207
    3. ':' → logprob: -6.759678840637207
    4. '       ' → logprob: -7.384678840637207
    5. ' return' → logprob: -8.634678840637207
    6. ':return' → logprob: -10.009678840637207
    7. 'return' → logprob: -10.509678840637207
    8. '   ' → logprob: -11.509678840637207
    9. '          ' → logprob: -11.759678840637207
    10. ' :
' → logprob: -11.884678840637207

Token 517: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6943020820617676
    2. 'return' (adapté à ' return') → logprob: -0.9443020820617676
    3. '           ' → logprob: -2.1943020820617676
    4. '       ' → logprob: -9.06930160522461
    5. '   ' → logprob: -10.31930160522461
    6. '               ' → logprob: -10.94430160522461
    7. '	return' → logprob: -11.56930160522461
    8. ' ' → logprob: -11.94430160522461
    9. ':return' → logprob: -12.44430160522461
    10. '          ' → logprob: -13.69430160522461

Token 518: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10020817816257477
    2. ' "' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.225208282470703
    4. ' ' → logprob: -14.350208282470703
    5. '	' → logprob: -15.475208282470703
    6. ''t' → logprob: -16.225208282470703
    7. '   ' → logprob: -17.100208282470703
    8. ''' → logprob: -17.850208282470703
    9. 'two' → logprob: -18.725208282470703
    10. '("' → logprob: -18.850208282470703

Token 519: 'two' (ID: 38397)
  Prédit: 'two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.05501125380396843
    2. '"' → logprob: -3.05501127243042
    3. ' two' → logprob: -5.05501127243042
    4. ' "' → logprob: -11.430010795593262
    5. ''t' → logprob: -11.930010795593262
    6. 'tw' → logprob: -12.680010795593262
    7. 'Two' → logprob: -13.555010795593262
    8. '2' → logprob: -14.055010795593262
    9. ''' → logprob: -14.305010795593262
    10. '(two' → logprob: -14.305010795593262

Token 520: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.0017181389266625047
    2. 'pair' → logprob: -6.376718044281006
    3. ' ' → logprob: -11.876718521118164
    4. '_pair' → logprob: -12.251718521118164
    5. ' ' → logprob: -12.501718521118164
    6. ' pairs' → logprob: -16.126718521118164
    7. '_' → logprob: -16.376718521118164
    8. ' paire' → logprob: -16.376718521118164
    9. '(pair' → logprob: -16.626718521118164
    10. ' card' → logprob: -17.001718521118164

Token 521: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.022471340373158455
    2. '       ' → logprob: -4.1474714279174805
    3. '"
' → logprob: -5.1474714279174805
    4. ')' → logprob: -8.14747142791748
    5. ')"' → logprob: -8.89747142791748
    6. ' "' → logprob: -9.52247142791748
    7. '   ' → logprob: -9.64747142791748
    8. '")' → logprob: -11.14747142791748
    9. ')"
' → logprob: -12.27247142791748
    10. '```' → logprob: -12.27247142791748

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003289096348453313
    2. '   ' → logprob: -8.12532901763916
    3. 'if' → logprob: -10.62532901763916
    4. ' if' → logprob: -12.50032901763916
    5. '	' → logprob: -14.00032901763916
    6. 'return' → logprob: -14.12532901763916
    7. '      ' → logprob: -14.37532901763916
    8. '           ' → logprob: -14.37532901763916
    9. ' ' → logprob: -14.87532901763916
    10. '        
' → logprob: -15.00032901763916

Token 523: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012277582660317421
    2. 'if' → logprob: -4.762277603149414
    3. ' if' → logprob: -6.137277603149414
    4. '   ' → logprob: -6.512277603149414
    5. ' ' → logprob: -13.012277603149414
    6. '           ' → logprob: -13.262277603149414
    7. '      ' → logprob: -13.387277603149414
    8. '  ' → logprob: -13.512277603149414
    9. '     ' → logprob: -13.637277603149414
    10. '    ' → logprob: -14.137277603149414

Token 524: ' One' (ID: 5108)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3135196268558502
    2. ' if' → logprob: -1.3135195970535278
    3. '       ' → logprob: -8.688519477844238
    4. '   ' → logprob: -9.688519477844238
    5. '#' → logprob: -12.063519477844238
    6. 'If' → logprob: -12.438519477844238
    7. ' pair' → logprob: -12.563519477844238
    8. 'pair' → logprob: -12.563519477844238
    9. ' ' → logprob: -12.688519477844238
    10. '
' → logprob: -12.813519477844238

Token 525: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.0200482290238142
    2. 'pair' → logprob: -4.020048141479492
    3. '_pair' → logprob: -6.270048141479492
    4. ' ' → logprob: -12.520048141479492
    5. '_' → logprob: -14.895048141479492
    6. ' _' → logprob: -15.395048141479492
    7. '   ' → logprob: -16.395048141479492
    8. ' ' → logprob: -17.145048141479492
    9. ' Pair' → logprob: -17.770048141479492
    10. '_PAIR' → logprob: -17.895048141479492

Token 526: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15234670042991638
    2. 'if' → logprob: -2.027346611022949
    3. ' if' → logprob: -4.652346611022949
    4. '
' → logprob: -10.65234661102295
    5. '   ' → logprob: -11.02734661102295
    6. '	if' → logprob: -11.27734661102295
    7. '```' → logprob: -11.77734661102295
    8. '           ' → logprob: -12.02734661102295
    9. '	' → logprob: -12.52734661102295
    10. 'If' → logprob: -13.15234661102295

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48295992612838745
    2. 'if' → logprob: -0.9829599261283875
    3. ' if' → logprob: -4.732959747314453
    4. '   ' → logprob: -10.232959747314453
    5. '	if' → logprob: -12.732959747314453
    6. 'If' → logprob: -13.607959747314453
    7. ' ' → logprob: -13.982959747314453
    8. '
' → logprob: -14.232959747314453
    9. '           ' → logprob: -14.607959747314453
    10. '      ' → logprob: -15.482959747314453

Token 528: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019046375527977943
    2. ' if' → logprob: -4.019046306610107
    3. '       ' → logprob: -7.019046306610107
    4. '	if' → logprob: -14.519046783447266
    5. '   ' → logprob: -14.644046783447266
    6. ' ' → logprob: -15.019046783447266
    7. 'If' → logprob: -16.144046783447266
    8. '```' → logprob: -18.519046783447266
    9. '           ' → logprob: -19.394046783447266
    10. '
' → logprob: -19.394046783447266

Token 529: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4037341773509979
    2. '2' → logprob: -1.6537342071533203
    3. ' count' → logprob: -2.6537342071533203
    4. 'count' → logprob: -2.6537342071533203
    5. '1' → logprob: -10.15373420715332
    6. '   ' → logprob: -11.02873420715332
    7. '  ' → logprob: -12.77873420715332
    8. '(count' → logprob: -13.27873420715332
    9. '	count' → logprob: -13.65373420715332
    10. '(' → logprob: -13.96623420715332

Token 530: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6950817108154297
    2. 'count' → logprob: -0.6950817108154297
    3. ' count' → logprob: -6.94508171081543
    4. ' ' → logprob: -7.19508171081543
    5. '1' → logprob: -8.44508171081543
    6. '(count' → logprob: -13.94508171081543
    7. '   ' → logprob: -14.44508171081543
    8. '	count' → logprob: -14.94508171081543
    9. '.count' → logprob: -15.07008171081543
    10. '
' → logprob: -15.19508171081543

Token 531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02630389854311943
    2. 'in' → logprob: -3.651304006576538
    3. ' ' → logprob: -13.526304244995117
    4. '	in' → logprob: -13.776304244995117
    5. ' ' → logprob: -14.401304244995117
    6. ' not' → logprob: -15.901304244995117
    7. '   ' → logprob: -16.401304244995117
    8. ')' → logprob: -16.526304244995117
    9. 's' → logprob: -16.526304244995117
    10. '1' → logprob: -17.026304244995117

Token 532: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005233882926404476
    2. ' count' → logprob: -5.2552337646484375
    3. '[count' → logprob: -17.255233764648438
    4. '	count' → logprob: -18.505233764648438
    5. '   ' → logprob: -18.630233764648438
    6. '(count' → logprob: -18.755233764648438
    7. ' ' → logprob: -18.880233764648438
    8. '_count' → logprob: -19.130233764648438
    9. '$count' → logprob: -19.505233764648438
    10. 'counter' → logprob: -19.630233764648438

Token 533: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.05517089366912842
    2. 'count' → logprob: -3.055171012878418
    3. '_count' → logprob: -5.055171012878418
    4. '_counts' → logprob: -9.180171012878418
    5. ' count' → logprob: -9.930171012878418
    6. '(count' → logprob: -10.805171012878418
    7. '_' → logprob: -12.305171012878418
    8. '_value' → logprob: -12.305171012878418
    9. 'values' → logprob: -13.555171012878418
    10. '[count' → logprob: -13.805171012878418

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6965793967247009
    2. ':
' → logprob: -0.6965793967247009
    3. '           ' → logprob: -6.571579456329346
    4. ':return' → logprob: -6.821579456329346
    5. '       ' → logprob: -7.446579456329346
    6. ' :
' → logprob: -9.071578979492188
    7. ' :' → logprob: -9.821578979492188
    8. '):
' → logprob: -9.946578979492188
    9. '   ' → logprob: -10.071578979492188
    10. '          ' → logprob: -10.946578979492188

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10802602022886276
    2. ' return' → logprob: -2.6080260276794434
    3. '       ' → logprob: -4.233026027679443
    4. 'return' → logprob: -4.483026027679443
    5. ':' → logprob: -6.608026027679443
    6. ':
' → logprob: -7.233026027679443
    7. ':return' → logprob: -7.608026027679443
    8. '   ' → logprob: -9.233025550842285
    9. '	       ' → logprob: -9.483025550842285
    10. '	   ' → logprob: -9.858025550842285

Token 536: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.315844863653183
    2. 'return' (adapté à ' return') → logprob: -1.3158448934555054
    3. '           ' → logprob: -6.065845012664795
    4. '       ' → logprob: -8.440844535827637
    5. '"' → logprob: -10.565844535827637
    6. '	return' → logprob: -11.440844535827637
    7. ' ' → logprob: -13.440844535827637
    8. ':return' → logprob: -13.440844535827637
    9. '	       ' → logprob: -13.940844535827637
    10. '               ' → logprob: -13.940844535827637

Token 537: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0052342405542731285
    2. ' "' → logprob: -5.255234241485596
    3. ''' → logprob: -14.755233764648438
    4. ' ' → logprob: -17.005233764648438
    5. ' ' → logprob: -17.755233764648438
    6. '"user' → logprob: -18.255233764648438
    7. '"value' → logprob: -18.880233764648438
    8. '	' → logprob: -18.880233764648438
    9. '"os' → logprob: -19.505233764648438
    10. '"indices' → logprob: -20.005233764648438

Token 538: 'one' (ID: 690)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007108822464942932
    2. 'one' → logprob: -7.250710964202881
    3. ' one' → logprob: -14.625710487365723
    4. ' "' → logprob: -14.875710487365723
    5. ''' → logprob: -15.625710487365723
    6. ' ' → logprob: -19.25071144104004
    7. 'One' → logprob: -20.00071144104004
    8. '
' → logprob: -20.00071144104004
    9. 'single' → logprob: -20.12571144104004
    10. '1' → logprob: -20.37571144104004

Token 539: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.0032181181013584137
    2. 'pair' → logprob: -5.753218173980713
    3. '_pair' → logprob: -10.128217697143555
    4. ' ' → logprob: -15.253217697143555
    5. ' ' → logprob: -15.878217697143555
    6. ' _' → logprob: -16.628217697143555
    7. '_' → logprob: -17.128217697143555
    8. ' paire' → logprob: -18.003217697143555
    9. '(pair' → logprob: -18.253217697143555
    10. 'Pair' → logprob: -18.253217697143555

Token 540: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028364919126033783
    2. '
' → logprob: -6.75283670425415
    3. 'return' → logprob: -7.37783670425415
    4. ':
' → logprob: -8.377836227416992
    5. ':return' → logprob: -8.627836227416992
    6. ' return' → logprob: -8.877836227416992
    7. '<|end|>' → logprob: -9.127836227416992
    8. '        
' → logprob: -9.377836227416992
    9. ':' → logprob: -9.752836227416992
    10. '           ' → logprob: -10.002836227416992

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013117995113134384
    2. 'return' → logprob: -4.388117790222168
    3. ' return' → logprob: -7.888117790222168
    4. '   ' → logprob: -8.513117790222168
    5. '        
' → logprob: -10.888117790222168
    6. '	return' → logprob: -12.513117790222168
    7. '    
' → logprob: -12.638117790222168
    8. '
' → logprob: -13.013117790222168
    9. '      ' → logprob: -14.263117790222168
    10. '	' → logprob: -14.513117790222168

Token 542: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2085558921098709
    2. '       ' → logprob: -1.7085559368133545
    3. ' return' → logprob: -4.958555698394775
    4. '   ' → logprob: -9.333556175231934
    5. '	return' → logprob: -13.083556175231934
    6. '```' → logprob: -13.458556175231934
    7. '        
' → logprob: -13.583556175231934
    8. ' ' → logprob: -15.958556175231934
    9. '
' → logprob: -15.958556175231934
    10. '#' (adapté à ' #') → logprob: -15.958556175231934

Token 543: ' Aucun' (ID: 199365)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0066566383466124535
    2. ' return' → logprob: -5.131656646728516
    3. 'high' → logprob: -7.756656646728516
    4. 'High' → logprob: -8.756656646728516
    5. '"' → logprob: -10.006656646728516
    6. '   ' → logprob: -10.506656646728516
    7. '       ' → logprob: -10.631656646728516
    8. ' high' → logprob: -11.131656646728516
    9. '	return' → logprob: -11.381656646728516
    10. 'Return' → logprob: -12.006656646728516

Token 544: ' rôle' (ID: 50119)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5360327959060669
    2. ' return' → logprob: -0.9110327959060669
    3. '       ' → logprob: -4.786032676696777
    4. '"' → logprob: -5.536032676696777
    5. '   ' → logprob: -8.161032676696777
    6. ':return' → logprob: -8.661032676696777
    7. '	return' → logprob: -10.786032676696777
    8. ' "' → logprob: -11.036032676696777
    9. '           ' → logprob: -11.411032676696777
    10. '{return' → logprob: -12.161032676696777

Token 545: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3121126890182495
    2. 'return' → logprob: -1.6871126890182495
    3. ' return' → logprob: -2.562112808227539
    4. ':' → logprob: -5.687112808227539
    5. ':return' → logprob: -6.437112808227539
    6. ':
' → logprob: -7.687112808227539
    7. '"' → logprob: -9.562112808227539
    8. 'eturn' → logprob: -9.687112808227539
    9. '	return' → logprob: -9.687112808227539
    10. '           ' → logprob: -9.937112808227539

Token 546: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5793548822402954
    2. '       ' → logprob: -0.8293548822402954
    3. ' return' → logprob: -5.704354763031006
    4. '   ' → logprob: -9.704355239868164
    5. '	return' → logprob: -11.579355239868164
    6. ':return' → logprob: -12.829355239868164
    7. '           ' → logprob: -13.329355239868164
    8. 'eturn' → logprob: -14.454355239868164
    9. '      ' → logprob: -14.454355239868164
    10. ':' → logprob: -14.579355239868164

Token 547: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14580902457237244
    2. ' return' → logprob: -2.0208089351654053
    3. '       ' → logprob: -5.770809173583984
    4. '	return' → logprob: -12.270809173583984
    5. '   ' → logprob: -12.520809173583984
    6. '"' → logprob: -13.645809173583984
    7. ':return' → logprob: -14.770809173583984
    8. 'eturn' → logprob: -14.895809173583984
    9. '           ' → logprob: -15.395809173583984
    10. ' ' → logprob: -15.395809173583984

Token 548: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048653338104486465
    2. ' "' → logprob: -3.0486533641815186
    3. '""' → logprob: -9.798653602600098
    4. ' ' → logprob: -12.673653602600098
    5. ' ""' → logprob: -13.673653602600098
    6. '"default' → logprob: -13.923653602600098
    7. ''' → logprob: -14.048653602600098
    8. '"class' → logprob: -14.298653602600098
    9. ' None' → logprob: -14.298653602600098
    10. '  ' → logprob: -14.298653602600098

Token 549: 'null' (ID: 5398)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.09192439913749695
    2. 'none' → logprob: -3.3419244289398193
    3. 'nothing' → logprob: -3.4669244289398193
    4. 'no' → logprob: -4.59192419052124
    5. '"' → logprob: -5.09192419052124
    6. 'r' → logprob: -6.34192419052124
    7. 'b' → logprob: -6.34192419052124
    8. 'null' → logprob: -8.091924667358398
    9. 'highest' → logprob: -8.341924667358398
    10. 'auc' → logprob: -9.091924667358398

Token 550: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -3.5716304410016164e-05
    2. '"
' → logprob: -11.250035285949707
    3. ' "' → logprob: -11.875035285949707
    4. '"""' → logprob: -12.125035285949707
    5. '"value' → logprob: -12.875035285949707
    6. ' card' → logprob: -13.500035285949707
    7. '""' → logprob: -13.500035285949707
    8. '"class' → logprob: -14.000035285949707
    9. 'e' → logprob: -14.000035285949707
    10. '"user' → logprob: -14.125035285949707

Token 551: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: ' Poker' (ID: 30320)
  Prédit: ' Poker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Poker' → logprob: -0.9273878931999207
    2. 'Poker' → logprob: -1.3023879528045654
    3. 'Deck' → logprob: -1.5523879528045654
    4. ' Deck' → logprob: -2.6773879528045654
    5. 'Player' → logprob: -3.9273879528045654
    6. ' Player' → logprob: -4.427387714385986
    7. 'Hand' → logprob: -4.927387714385986
    8. 'Evaluator' → logprob: -5.552387714385986
    9. 'Game' → logprob: -6.177387714385986
    10. ' Hand' → logprob: -6.177387714385986

Token 553: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.5725078582763672
    2. 'Game' → logprob: -0.9475078582763672
    3. ':' → logprob: -3.822507858276367
    4. '(' → logprob: -3.822507858276367
    5. '():' → logprob: -6.322507858276367
    6. 'Hands' → logprob: -7.072507858276367
    7. '(Game' → logprob: -7.572507858276367
    8. 'Player' → logprob: -8.197507858276367
    9. 'Evaluator' → logprob: -8.822507858276367
    10. ' hand' → logprob: -8.947507858276367

Token 554: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16034913063049316
    2. '(' → logprob: -2.910349130630493
    3. 'Evaluator' → logprob: -2.910349130630493
    4. ':
' → logprob: -3.535349130630493
    5. 'Classifier' → logprob: -5.785348892211914
    6. 'Comparer' → logprob: -5.910348892211914
    7. 'Handler' → logprob: -7.410348892211914
    8. 'Rank' → logprob: -7.785348892211914
    9. 'Analyzer' → logprob: -8.035348892211914
    10. 'Validator' → logprob: -8.285348892211914

Token 555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036537862615659833
    2. '<|end|>' → logprob: -8.625365257263184
    3. ' :' → logprob: -9.250365257263184
    4. ':
' → logprob: -10.625365257263184
    5. '(' → logprob: -10.625365257263184
    6. '():' → logprob: -10.875365257263184
    7. ':def' → logprob: -11.750365257263184
    8. '<|end|>' → logprob: -12.875365257263184
    9. '(object' → logprob: -13.375365257263184
    10. '(Parser' → logprob: -13.625365257263184

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047630956396460533
    2. ' def' → logprob: -8.500475883483887
    3. 'def' → logprob: -8.625475883483887
    4. '<|end|>' → logprob: -10.250475883483887
    5. '	def' → logprob: -10.625475883483887
    6. '    
' → logprob: -11.375475883483887
    7. 'class' → logprob: -12.000475883483887
    8. '    ' → logprob: -12.375475883483887
    9. '<|end|>' → logprob: -12.375475883483887
    10. ':' → logprob: -12.875475883483887

Token 557: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5617376565933228
    2. '   ' → logprob: -0.9367376565933228
    3. 'def' → logprob: -3.686737537384033
    4. ' @' → logprob: -4.436737537384033
    5. ' """' → logprob: -7.311737537384033
    6. '@' → logprob: -8.686738014221191
    7. '	def' → logprob: -10.186738014221191
    8. '"""' (adapté à ' """') → logprob: -10.186738014221191
    9. '    ' → logprob: -10.686738014221191
    10. 'class' → logprob: -10.811738014221191

Token 558: 'Parser' (ID: 9231)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5160105228424072
    2. 'def' → logprob: -1.3910105228424072
    3. '"""' → logprob: -2.5160105228424072
    4. ' def' → logprob: -3.1410105228424072
    5. ' """' → logprob: -4.641010284423828
    6. '   ' → logprob: -4.891010284423828
    7. 'Par' → logprob: -5.516010284423828
    8. ' class' → logprob: -5.891010284423828
    9. 'Parse' → logprob: -6.516010284423828
    10. 'Parser' → logprob: -6.516010284423828

Token 559: ' stat' (ID: 1085)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12275691330432892
    2. '<|end|>' → logprob: -2.3727569580078125
    3. '<|end|>' → logprob: -5.1227569580078125
    4. ' for' → logprob: -5.1227569580078125
    5. ' des' → logprob: -5.6227569580078125
    6. ':
' → logprob: -5.9977569580078125
    7. ' :' → logprob: -6.4977569580078125
    8. '(Parser' → logprob: -7.6227569580078125
    9. 'for' → logprob: -8.247756958007812
    10. '(object' → logprob: -8.247756958007812

Token 560: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.11818283796310425
    2. 'ic' → logprob: -2.368182897567749
    3. 'class' → logprob: -4.61818265914917
    4. 'e' → logprob: -6.11818265914917
    5. 'ut' → logprob: -6.61818265914917
    6. 'eless' → logprob: -6.74318265914917
    7. 'iquement' → logprob: -6.86818265914917
    8. 'us' → logprob: -7.49318265914917
    9. 'istique' → logprob: -8.243183135986328
    10. '```' → logprob: -8.493183135986328

Token 561: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025169195141643286
    2. ':
' → logprob: -6.377516746520996
    3. ' :' → logprob: -7.627516746520996
    4. 'class' → logprob: -9.127516746520996
    5. '<|end|>' → logprob: -9.752516746520996
    6. '(' → logprob: -10.502516746520996
    7. '():' → logprob: -10.502516746520996
    8. '):' → logprob: -11.127516746520996
    9. '(object' → logprob: -11.377516746520996
    10. '<|end|>' → logprob: -11.502516746520996

Token 562: ' transformer' (ID: 59595)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.047649532556533813
    2. ' analyser' → logprob: -3.297649621963501
    3. 'anal' → logprob: -6.422649383544922
    4. '解析' → logprob: -6.672649383544922
    5. 'la' → logprob: -7.047649383544922
    6. 'parser' → logprob: -7.297649383544922
    7. ' la' → logprob: -7.547649383544922
    8. 'l' → logprob: -7.547649383544922
    9. ' poker' → logprob: -7.797649383544922
    10. 'parse' → logprob: -7.797649383544922

Token 563: ' une' (ID: 2463)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3466270864009857
    2. ' des' → logprob: -2.2216269969940186
    3. 'des' → logprob: -2.5966269969940186
    4. 'une' → logprob: -2.9716269969940186
    5. ' une' → logprob: -3.8466269969940186
    6. ' str' → logprob: -5.096627235412598
    7. 'le' → logprob: -5.346627235412598
    8. 'string' → logprob: -5.346627235412598
    9. 'la' → logprob: -5.471627235412598
    10. 'un' → logprob: -5.846627235412598

Token 564: ' ligne' (ID: 19583)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.7640661597251892
    2. 'str' → logprob: -1.139066219329834
    3. 'chaine' → logprob: -3.014066219329834
    4. ' string' → logprob: -3.139066219329834
    5. 'hand' → logprob: -3.264066219329834
    6. 'line' → logprob: -4.139066219329834
    7. 'ligne' → logprob: -4.264066219329834
    8. ' str' → logprob: -4.639066219329834
    9. ' hand' → logprob: -4.639066219329834
    10. 'main' → logprob: -4.889066219329834

Token 565: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4114540219306946
    2. 'de' → logprob: -1.1614539623260498
    3. ' d' → logprob: -5.411454200744629
    4. ' en' → logprob: -5.411454200744629
    5. ' =' → logprob: -5.536454200744629
    6. 'en' → logprob: -5.661454200744629
    7. 'd' → logprob: -6.411454200744629
    8. ' into' → logprob: -7.286454200744629
    9. ' of' → logprob: -7.411454200744629
    10. '<|end|>' → logprob: -7.411454200744629

Token 566: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.8176103234291077
    2. 'entrée' → logprob: -1.067610263824463
    3. 'input' → logprob: -2.067610263824463
    4. 'texte' → logprob: -2.692610263824463
    5. 'e' → logprob: -5.192610263824463
    6. ' input' → logprob: -6.067610263824463
    7. 'é' → logprob: -6.192610263824463
    8. 'une' → logprob: -6.567610263824463
    9. ''ex' → logprob: -6.692610263824463
    10. '_' → logprob: -6.942610263824463

Token 567: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6138395071029663
    2. 'en' → logprob: -0.8638395071029663
    3. ' de' → logprob: -3.988839626312256
    4. 'de' → logprob: -4.113839626312256
    5. ' into' → logprob: -7.488839626312256
    6. ' in' → logprob: -7.988839626312256
    7. 'd' → logprob: -8.613839149475098
    8. '   ' → logprob: -8.738839149475098
    9. ' (' → logprob: -8.738839149475098
    10. 's' → logprob: -9.238839149475098

Token 568: ' main' (ID: 2758)
  Prédit: 'Hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.011433162726461887
    2. ' Hand' → logprob: -5.386433124542236
    3. 'List' → logprob: -5.761433124542236
    4. 'Poker' → logprob: -5.886433124542236
    5. ' une' → logprob: -8.636433601379395
    6. 'Main' → logprob: -9.136433601379395
    7. 'str' → logprob: -9.136433601379395
    8. 'Optional' → logprob: -9.261433601379395
    9. 'Hands' → logprob: -9.386433601379395
    10. 'une' → logprob: -9.386433601379395

Token 569: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.533608615398407
    2. 'de' → logprob: -1.6586086750030518
    3. 'Poker' → logprob: -2.6586086750030518
    4. ' poker' → logprob: -2.9086086750030518
    5. '   ' → logprob: -3.4086086750030518
    6. ' Poker' → logprob: -4.033608436584473
    7. ')' → logprob: -5.283608436584473
    8. '_de' → logprob: -5.283608436584473
    9. '.' → logprob: -5.283608436584473
    10. ' "' → logprob: -5.783608436584473

Token 570: ' poker' (ID: 15422)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.22322799265384674
    2. ' poker' → logprob: -1.9732279777526855
    3. 'Poker' → logprob: -2.9732279777526855
    4. ' Poker' → logprob: -5.0982279777526855
    5. 'pok' → logprob: -5.7232279777526855
    6. ' pok' → logprob: -8.973228454589844
    7. 'cards' → logprob: -9.598228454589844
    8. ' p' → logprob: -9.598228454589844
    9. 'poke' → logprob: -9.598228454589844
    10. 'Pok' → logprob: -10.348228454589844

Token 571: '."""
' (ID: 33044)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09081486612558365
    2. '   ' → logprob: -3.2158148288726807
    3. '):' → logprob: -4.21581506729126
    4. ' :' → logprob: -4.46581506729126
    5. '.' → logprob: -5.09081506729126
    6. ':
' → logprob: -5.34081506729126
    7. '":' → logprob: -6.09081506729126
    8. ')' → logprob: -7.21581506729126
    9. '">' → logprob: -7.34081506729126
    10. '"""' → logprob: -7.46581506729126

Token 572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010018724948167801
    2. ' def' → logprob: -5.135018825531006
    3. 'def' → logprob: -6.385018825531006
    4. '    
' → logprob: -6.635018825531006
    5. ' @' → logprob: -7.760018825531006
    6. '@' → logprob: -8.635018348693848
    7. '
' → logprob: -9.385018348693848
    8. '    ' → logprob: -9.510018348693848
    9. ' 
' → logprob: -10.010018348693848
    10. ' ind' → logprob: -10.135018348693848

Token 573: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.1002572551369667
    2. ' @' → logprob: -2.350257158279419
    3. 'def' → logprob: -10.35025691986084
    4. ' def' → logprob: -11.22525691986084
    5. '   ' → logprob: -12.35025691986084
    6. 'staticmethod' → logprob: -14.72525691986084
    7. '
' → logprob: -15.72525691986084
    8. '@param' → logprob: -15.72525691986084
    9. 'class' → logprob: -16.100257873535156
    10. '@property' → logprob: -16.600257873535156

Token 574: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -9.088346359931165e-07
    2. 'classmethod' → logprob: -14.250000953674316
    3. 'static' → logprob: -15.250000953674316
    4. ' static' → logprob: -21.875
    5. 'Static' → logprob: -24.25
    6. '_static' → logprob: -25.5
    7. 'st' → logprob: -26.0
    8. 'stat' → logprob: -26.375
    9. 'sta' → logprob: -26.625
    10. 'property' → logprob: -27.25

Token 575: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20854882895946503
    2. '
' → logprob: -1.7085487842559814
    3. ' def' → logprob: -4.9585490226745605
    4. '    
' → logprob: -9.833548545837402
    5. '  
' → logprob: -11.208548545837402
    6. '   ' → logprob: -11.458548545837402
    7. ' 
' → logprob: -12.458548545837402
    8. '	def' → logprob: -13.333548545837402
    9. '   
' → logprob: -13.458548545837402
    10. '
' → logprob: -14.708548545837402

Token 576: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022272850037552416
    2. ' def' → logprob: -8.500223159790039
    3. '
' → logprob: -10.875223159790039
    4. '	def' → logprob: -15.875223159790039
    5. '   ' → logprob: -16.12522315979004
    6. 'de' → logprob: -19.00022315979004
    7. ':def' → logprob: -19.37522315979004
    8. '  ' → logprob: -20.00022315979004
    9. 'ndef' → logprob: -20.00022315979004
    10. '(def' → logprob: -20.25022315979004

Token 577: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.250000953674316
    3. '
' → logprob: -19.5
    4. 'from' → logprob: -21.0
    5. '	def' → logprob: -23.75
    6. 'de' → logprob: -23.875
    7. '   ' → logprob: -24.375
    8. 'Def' → logprob: -24.625
    9. '```' → logprob: -25.125
    10. ':def' → logprob: -25.5

Token 578: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.00018983196059707552
    2. 'from' → logprob: -8.750189781188965
    3. ' parse' → logprob: -10.375189781188965
    4. 'def' → logprob: -16.37519073486328
    5. '.parse' → logprob: -16.75019073486328
    6. ' from' → logprob: -17.62519073486328
    7. '_parse' → logprob: -18.25019073486328
    8. '	parse' → logprob: -18.25019073486328
    9. 'par' → logprob: -18.62519073486328
    10. '(parse' → logprob: -18.87519073486328

Token 579: '_line' (ID: 14418)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00389484572224319
    2. '(hand' → logprob: -6.503894805908203
    3. '_line' → logprob: -6.753894805908203
    4. '(cards' → logprob: -7.253894805908203
    5. '(card' → logprob: -8.503894805908203
    6. '_hand' → logprob: -9.128894805908203
    7. '(lines' → logprob: -9.628894805908203
    8. '(text' → logprob: -10.003894805908203
    9. '(' → logprob: -10.503894805908203
    10. '(s' → logprob: -11.253894805908203

Token 580: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.460291767027229e-05
    2. ' (' → logprob: -9.750094413757324
    3. '(' → logprob: -10.375094413757324
    4. '(text' → logprob: -12.750094413757324
    5. '(cls' → logprob: -13.625094413757324
    6. '(s' → logprob: -14.750094413757324
    7. '(input' → logprob: -15.625094413757324
    8. '(card' → logprob: -16.00009536743164
    9. '(lines' → logprob: -16.12509536743164
    10. '(row' → logprob: -17.00009536743164

Token 581: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006173963192850351
    2. ')' → logprob: -5.256174087524414
    3. ':str' → logprob: -7.131174087524414
    4. '(line' → logprob: -9.381174087524414
    5. '   ' → logprob: -10.631174087524414
    6. ' :' → logprob: -11.256174087524414
    7. '):' → logprob: -12.131174087524414
    8. '```' → logprob: -12.381174087524414
    9. '       ' → logprob: -13.506174087524414
    10. 'self' → logprob: -13.631174087524414

Token 582: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.006719282828271389
    2. ' str' → logprob: -5.00671911239624
    3. '[str' → logprob: -13.381719589233398
    4. ')' → logprob: -14.006719589233398
    5. '	str' → logprob: -14.131719589233398
    6. '   ' → logprob: -15.381719589233398
    7. ' ' → logprob: -15.756719589233398
    8. '(str' → logprob: -16.1317195892334
    9. '
' → logprob: -16.3817195892334
    10. 'Str' → logprob: -16.3817195892334

Token 583: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.000006675720215
    3. ')->' → logprob: -15.000006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '")' → logprob: -16.12500762939453
    6. ',' → logprob: -16.75000762939453
    7. '`)' → logprob: -18.37500762939453
    8. ',)' → logprob: -18.62500762939453
    9. '）' → logprob: -19.25000762939453
    10. '')' → logprob: -19.25000762939453

Token 584: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.3922245502471924
    2. ' ->' → logprob: -1.1422245502471924
    3. ')' → logprob: -5.267224311828613
    4. ')->' → logprob: -9.017224311828613
    5. '   ' → logprob: -10.517224311828613
    6. ':' → logprob: -11.392224311828613
    7. ' )->' → logprob: -11.642224311828613
    8. '       ' → logprob: -12.642224311828613
    9. ' )' → logprob: -12.642224311828613
    10. ' ' → logprob: -12.642224311828613

Token 585: ' Hand' (ID: 7110)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5767970085144043
    2. 'Optional' → logprob: -1.7017970085144043
    3. 'Hand' → logprob: -1.8267970085144043
    4. ''' → logprob: -2.4517970085144043
    5. '"' → logprob: -4.826797008514404
    6. ' List' → logprob: -8.701797485351562
    7. ''T' → logprob: -9.326797485351562
    8. ' '' → logprob: -9.326797485351562
    9. 'Tuple' → logprob: -9.326797485351562
    10. ' Hand' → logprob: -9.576797485351562

Token 586: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005007109139114618
    2. '():' → logprob: -6.380007266998291
    3. ':
' → logprob: -6.880007266998291
    4. '   ' → logprob: -6.880007266998291
    5. '->' → logprob: -8.005006790161133
    6. '):' → logprob: -8.005006790161133
    7. ')' → logprob: -9.255006790161133
    8. '(' → logprob: -9.255006790161133
    9. ' :' → logprob: -9.255006790161133
    10. ' ->' → logprob: -9.755006790161133

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012041617883369327
    2. 'tokens' → logprob: -7.251204013824463
    3. ' tokens' → logprob: -8.501204490661621
    4. 'cards' → logprob: -8.626204490661621
    5. ' cards' → logprob: -9.501204490661621
    6. '```' → logprob: -11.501204490661621
    7. ' parts' → logprob: -11.876204490661621
    8. 'values' → logprob: -12.501204490661621
    9. '(cards' → logprob: -12.876204490661621
    10. 'parts' → logprob: -13.251204490661621

Token 588: ' parts' (ID: 7881)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.0311803817749023
    2. ' values' → logprob: -1.7811803817749023
    3. ' parts' → logprob: -1.7811803817749023
    4. 'parts' (adapté à ' parts') → logprob: -2.1561803817749023
    5. 'cards' → logprob: -2.5311803817749023
    6. ' tokens' → logprob: -3.4061803817749023
    7. ' cards' → logprob: -3.4061803817749023
    8. 'tokens' → logprob: -3.4061803817749023
    9. '       ' → logprob: -4.906180381774902
    10. ' card' → logprob: -6.531180381774902

Token 589: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. '=line' → logprob: -15.936967849731445
    4. '	' → logprob: -16.061967849731445
    5. '＝' → logprob: -17.811967849731445
    6. '.' → logprob: -18.686967849731445
    7. ' ' → logprob: -18.936967849731445
    8. ' ' → logprob: -18.936967849731445
    9. '   ' → logprob: -19.061967849731445
    10. ' =
' → logprob: -19.186967849731445

Token 590: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015058133285492659
    2. ' line' → logprob: -6.5015058517456055
    3. '[line' → logprob: -12.626505851745605
    4. '[' → logprob: -16.12650489807129
    5. 'list' → logprob: -16.37650489807129
    6. '(line' → logprob: -17.87650489807129
    7. ' [' → logprob: -18.50150489807129
    8. '	line' → logprob: -18.87650489807129
    9. '   ' → logprob: -20.12650489807129
    10. '#line' → logprob: -21.50150489807129

Token 591: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5440152287483215
    2. '.' → logprob: -1.9190151691436768
    3. '.split' → logprob: -2.0440151691436768
    4. '().' → logprob: -2.4190151691436768
    5. ' .' → logprob: -2.9190151691436768
    6. '.rstrip' → logprob: -8.294014930725098
    7. '()' → logprob: -10.419014930725098
    8. ' =' → logprob: -11.169014930725098
    9. '=' → logprob: -11.669014930725098
    10. 'split' → logprob: -11.919014930725098

Token 592: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004080658778548241
    2. '()' → logprob: -5.504080772399902
    3. '('' → logprob: -13.754080772399902
    4. ' ().' → logprob: -14.004080772399902
    5. '(' → logprob: -15.504080772399902
    6. '().'' → logprob: -16.254079818725586
    7. '()
' → logprob: -17.629079818725586
    8. '("' → logprob: -17.879079818725586
    9. ' ()' → logprob: -18.004079818725586
    10. '()['' → logprob: -18.004079818725586

Token 593: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.25
    3. '(split' → logprob: -19.75
    4. 'spl' → logprob: -21.375
    5. '.split' → logprob: -22.5
    6. 'replace' → logprob: -24.25
    7. 'plit' → logprob: -25.0
    8. 'sp' → logprob: -25.25
    9. 'strip' → logprob: -25.25
    10. 'rstrip' → logprob: -25.5

Token 594: '(",' (ID: 23824)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009389739134348929
    2. '('' → logprob: -7.000938892364502
    3. '("' → logprob: -10.87593936920166
    4. '(' → logprob: -11.87593936920166
    5. '()
' → logprob: -14.25093936920166
    6. '()"' → logprob: -15.50093936920166
    7. '()]' → logprob: -15.75093936920166
    8. '())' → logprob: -15.75093936920166
    9. '()[' → logprob: -15.87593936920166
    10. ' ()' → logprob: -16.500938415527344

Token 595: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.14256691932678223
    2. ')' → logprob: -2.1425669193267822
    3. '')' → logprob: -4.267566680908203
    4. ' ")' → logprob: -6.767566680908203
    5. '"' → logprob: -8.892566680908203
    6. ' )' → logprob: -9.392566680908203
    7. ' ')' → logprob: -9.517566680908203
    8. '")
' → logprob: -10.767566680908203
    9. ''' → logprob: -11.142566680908203
    10. ')
' → logprob: -11.767566680908203

Token 596: '       ' (ID: 309)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.7212611436843872
    2. 'cards' → logprob: -0.8462611436843872
    3. '       ' → logprob: -2.4712610244750977
    4. '.cards' → logprob: -9.096261024475098
    5. 'return' → logprob: -9.596261024475098
    6. ' return' → logprob: -9.971261024475098
    7. '(cards' → logprob: -10.221261024475098
    8. '        ' → logprob: -10.596261024475098
    9. ' cartes' → logprob: -10.846261024475098
    10. '_cards' → logprob: -11.471261024475098

Token 597: ' if' (ID: 538)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.002531191101297736
    2. ' cards' → logprob: -6.002531051635742
    3. '       ' → logprob: -10.377531051635742
    4. 'return' → logprob: -10.877531051635742
    5. 'if' (adapté à ' if') → logprob: -12.752531051635742
    6. '.cards' → logprob: -13.627531051635742
    7. ' return' → logprob: -15.002531051635742
    8. '(cards' → logprob: -15.377531051635742
    9. ' if' → logprob: -15.502531051635742
    10. '[' → logprob: -16.002531051635742

Token 598: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141352713108063
    2. ' len' → logprob: -1.7014135122299194
    3. 'parts' → logprob: -15.95141315460205
    4. '(len' → logprob: -16.076414108276367
    5. ' parts' → logprob: -16.951414108276367
    6. '	len' → logprob: -17.701414108276367
    7. '[len' → logprob: -18.076414108276367
    8. 'length' → logprob: -19.326414108276367
    9. '=len' → logprob: -19.451414108276367
    10. 'not' → logprob: -19.451414108276367

Token 599: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -1.688212614681106e-05
    2. 'parts' → logprob: -11.000017166137695
    3. ' parts' → logprob: -16.125017166137695
    4. '(part' → logprob: -18.750017166137695
    5. '(' → logprob: -19.375017166137695
    6. 'Parts' → logprob: -20.000017166137695
    7. '(points' → logprob: -20.750017166137695
    8. '_parts' → logprob: -21.250017166137695
    9. ' (' → logprob: -21.875017166137695
    10. '=' → logprob: -22.250017166137695

Token 600: ')' (ID: 8)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7324323654174805
    2. ')' → logprob: -0.9824323654174805
    3. ' !=' → logprob: -1.9824323654174805
    4. ')!=' → logprob: -4.9824323654174805
    5. '()!=' → logprob: -8.73243236541748
    6. ' )' → logprob: -9.73243236541748
    7. '()' → logprob: -11.35743236541748
    8. '==' → logprob: -11.73243236541748
    9. '!=(' → logprob: -11.98243236541748
    10. '=' → logprob: -12.23243236541748

Token 601: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10035073012113571
    2. ' !=' → logprob: -2.3503506183624268
    3. '()!=' → logprob: -8.975350379943848
    4. ')!=' → logprob: -11.350350379943848
    5. ')' → logprob: -13.350350379943848
    6. '<' → logprob: -14.225350379943848
    7. '()' → logprob: -14.350350379943848
    8. '!==' → logprob: -14.600350379943848
    9. ']!=' → logprob: -14.725350379943848
    10. '=' → logprob: -14.725350379943848

Token 602: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.937658309936523
    4. '```' → logprob: -19.187658309936523
    5. '۵' → logprob: -19.312658309936523
    6. '５' → logprob: -19.375158309936523
    7. '  ' → logprob: -19.625158309936523
    8. ' five' → logprob: -19.625158309936523
    9. ' ' → logprob: -19.625158309936523
    10. 'five' → logprob: -19.812658309936523

Token 603: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -18.500051498413086
    4. '۵' → logprob: -18.812551498413086
    5. '５' → logprob: -19.000051498413086
    6. '[' → logprob: -19.125051498413086
    7. ' ' → logprob: -19.187551498413086
    8. '  ' → logprob: -19.312551498413086
    9. '6' → logprob: -19.312551498413086
    10. '"' → logprob: -19.375051498413086

Token 604: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1661478579044342
    2. ':
' → logprob: -1.9161478281021118
    3. ' :
' → logprob: -6.041147708892822
    4. ' :' → logprob: -6.166147708892822
    5. ' or' → logprob: -6.791147708892822
    6. '       ' → logprob: -8.54114818572998
    7. ':return' → logprob: -9.79114818572998
    8. ' and' → logprob: -11.41614818572998
    9. '           ' → logprob: -11.54114818572998
    10. '        ' → logprob: -12.04114818572998

Token 605: '           ' (ID: 352)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.12047295272350311
    2. '           ' → logprob: -2.8704729080200195
    3. ' raise' → logprob: -2.8704729080200195
    4. '	raise' → logprob: -9.12047290802002
    5. '               ' → logprob: -10.37047290802002
    6. '       ' → logprob: -12.24547290802002
    7. '   ' → logprob: -12.99547290802002
    8. '_raise' → logprob: -13.62047290802002
    9. '            ' → logprob: -13.87047290802002
    10. '```' → logprob: -14.12047290802002

Token 606: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0005417120410129428
    2. ' raise' → logprob: -7.750541687011719
    3. '           ' → logprob: -9.500541687011719
    4. '	raise' → logprob: -10.250541687011719
    5. '_raise' → logprob: -15.375541687011719
    6. 'raises' → logprob: -15.750541687011719
    7. '       ' → logprob: -16.00054168701172
    8. '   ' → logprob: -16.62554168701172
    9. '```' → logprob: -17.00054168701172
    10. '            
' → logprob: -17.00054168701172

Token 607: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0019286326132714748
    2. ' Value' → logprob: -6.251928806304932
    3. '	Value' → logprob: -17.251928329467773
    4. '_value' → logprob: -18.001928329467773
    5. '_Value' → logprob: -18.751928329467773
    6. 'value' → logprob: -19.626928329467773
    7. '(Value' → logprob: -19.751928329467773
    8. 'Val' → logprob: -20.376928329467773
    9. '```' → logprob: -20.876928329467773
    10. '<Value' → logprob: -21.126928329467773

Token 608: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.4849443838757e-06
    2. 'rror' → logprob: -12.375004768371582
    3. 'Value' → logprob: -15.500004768371582
    4. 'SError' → logprob: -20.125003814697266
    5. 'Er' → logprob: -20.750003814697266
    6. 'LError' → logprob: -20.875003814697266
    7. 'Erro' → logprob: -21.125003814697266
    8. 'error' → logprob: -21.625003814697266
    9. 'Errors' → logprob: -22.000003814697266
    10. 'Warning' → logprob: -22.000003814697266

Token 609: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00043102685594931245
    2. '(' → logprob: -7.750431060791016
    3. '(
' → logprob: -15.125431060791016
    4. '(f' → logprob: -16.500431060791016
    5. '('' → logprob: -16.750431060791016
    6. '("'' → logprob: -18.375431060791016
    7. '()' → logprob: -19.875431060791016
    8. '(("' → logprob: -20.000431060791016
    9. ' ("' → logprob: -20.125431060791016
    10. '"' → logprob: -20.125431060791016

Token 610: 'Chaque' (ID: 151671)
  Prédit: 'Une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Une' → logprob: -0.646013617515564
    2. 'Chaque' → logprob: -1.396013617515564
    3. 'La' → logprob: -1.521013617515564
    4. 'L' → logprob: -5.3960137367248535
    5. '"' → logprob: -7.0210137367248535
    6. 'Line' → logprob: -7.0210137367248535
    7. 'Invalid' → logprob: -7.2710137367248535
    8. 'Le' → logprob: -7.2710137367248535
    9. 'Il' → logprob: -7.3960137367248535
    10. 'Each' → logprob: -7.7710137367248535

Token 611: ' main' (ID: 2758)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' card' → logprob: -1.0164918899536133
    2. ' part' → logprob: -1.2664918899536133
    3. ' carte' → logprob: -1.5164918899536133
    4. 'part' → logprob: -2.5164918899536133
    5. ' partie' → logprob: -3.3914918899536133
    6. 'card' → logprob: -4.141491889953613
    7. ' line' → logprob: -6.516491889953613
    8. ' token' → logprob: -6.641491889953613
    9. 'car' → logprob: -7.141491889953613
    10. ' ' → logprob: -7.266491889953613

Token 612: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.0010530536528676748
    2. 'do' → logprob: -7.5010528564453125
    3. ' must' → logprob: -7.7510528564453125
    4. ' do' → logprob: -10.251052856445312
    5. ' de' → logprob: -11.876052856445312
    6. ' ' → logprob: -12.126052856445312
    7. ' contient' → logprob: -12.126052856445312
    8. ' ' → logprob: -12.751052856445312
    9. ' devra' → logprob: -12.751052856445312
    10. ' doivent' → logprob: -12.876052856445312

Token 613: ' conten' (ID: 23523)
  Prédit: ' conten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conten' → logprob: -0.347743421792984
    2. ' comport' → logprob: -1.7227433919906616
    3. ' avoir' → logprob: -2.472743511199951
    4. 'avoir' → logprob: -3.972743511199951
    5. 'conten' → logprob: -4.972743511199951
    6. 'cont' → logprob: -6.097743511199951
    7. ' être' → logprob: -6.972743511199951
    8. 'con' → logprob: -7.222743511199951
    9. ' contain' → logprob: -7.847743511199951
    10. 'contain' → logprob: -8.972743034362793

Token 614: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -7.822646693966817e-06
    2. 'enir' → logprob: -12.625007629394531
    3. 'r' → logprob: -13.500007629394531
    4. 'contain' → logprob: -13.750007629394531
    5. 'tir' → logprob: -14.375007629394531
    6. 'nir' → logprob: -15.375007629394531
    7. 'cont' → logprob: -15.750007629394531
    8. 'ent' → logprob: -15.875007629394531
    9. 'oir' → logprob: -16.12500762939453
    10. 'vir' → logprob: -16.25000762939453

Token 615: ' ' (ID: 220)
  Prédit: ' exactement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactement' → logprob: -0.7115392684936523
    2. 'exact' → logprob: -1.3365392684936523
    3. '5' → logprob: -1.8365392684936523
    4. 'c' → logprob: -3.2115392684936523
    5. ' ' → logprob: -3.7115392684936523
    6. ' exactly' → logprob: -4.211539268493652
    7. ' cinq' → logprob: -4.961539268493652
    8. ' exact' → logprob: -8.711539268493652
    9. ' c' → logprob: -9.461539268493652
    10. ' ' → logprob: -9.586539268493652

Token 616: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.01586156338453293
    2. 'c' → logprob: -4.265861511230469
    3. 'exact' → logprob: -6.390861511230469
    4. ' cinq' → logprob: -12.015861511230469
    5. ' ' → logprob: -12.140861511230469
    6. ' exactement' → logprob: -12.265861511230469
    7. ' exactly' → logprob: -13.265861511230469
    8. 'cin' → logprob: -14.265861511230469
    9. 'five' → logprob: -14.390861511230469
    10. 'C' → logprob: -15.015861511230469

Token 617: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.01015810389071703
    2. 'cart' → logprob: -5.135158061981201
    3. ' cards' → logprob: -6.760158061981201
    4. ' ' → logprob: -7.385158061981201
    5. 'élé' → logprob: -7.760158061981201
    6. ' éléments' → logprob: -7.760158061981201
    7. ' cart' → logprob: -7.885158061981201
    8. 'car' → logprob: -8.38515853881836
    9. ' valeurs' → logprob: -8.63515853881836
    10. 'cards' → logprob: -8.63515853881836

Token 618: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.1737506091594696
    2. '.")
' → logprob: -1.923750638961792
    3. ' .' → logprob: -5.173750400543213
    4. '")' → logprob: -5.173750400543213
    5. '.")
' → logprob: -6.673750400543213
    6. '.' → logprob: -8.548750877380371
    7. '")
' → logprob: -8.923750877380371
    8. '.")

' → logprob: -9.548750877380371
    9. ' ' → logprob: -9.548750877380371
    10. ')")
' → logprob: -9.673750877380371

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3198946416378021
    2. 'cards' → logprob: -1.3198946714401245
    3. ' cards' → logprob: -5.569894790649414
    4. 'return' → logprob: -6.444894790649414
    5. 'tokens' → logprob: -7.694894790649414
    6. 'card' → logprob: -8.069894790649414
    7. '        
' → logprob: -8.694894790649414
    8. '```' → logprob: -9.444894790649414
    9. '
' → logprob: -10.319894790649414
    10. '        ' → logprob: -10.444894790649414

Token 620: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.0017394359456375241
    2. '       ' → logprob: -6.501739501953125
    3. ' cards' → logprob: -8.501739501953125
    4. 'return' → logprob: -10.626739501953125
    5. '.cards' → logprob: -12.501739501953125
    6. '(cards' → logprob: -13.626739501953125
    7. 'card' → logprob: -13.751739501953125
    8. 'try' → logprob: -13.876739501953125
    9. '/cards' → logprob: -14.501739501953125
    10. '```' → logprob: -14.626739501953125

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020904988050461
    2. '=' → logprob: -2.3502089977264404
    3. ' =[' → logprob: -13.97520923614502
    4. '=[]' → logprob: -14.22520923614502
    5. '=[' → logprob: -14.35020923614502
    6. '[:]' → logprob: -16.725208282470703
    7. '=[]
' → logprob: -16.850208282470703
    8. ':' → logprob: -16.850208282470703
    9. '[' → logprob: -17.350208282470703
    10. ' ' → logprob: -17.600208282470703

Token 622: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00045438710367307067
    2. ' [' → logprob: -7.750454425811768
    3. '[]
' → logprob: -11.00045394897461
    4. '[List' → logprob: -12.37545394897461
    5. '[]' → logprob: -13.25045394897461
    6. '[
' → logprob: -14.50045394897461
    7. '[C' → logprob: -15.12545394897461
    8. '[list' → logprob: -16.12545394897461
    9. '[class' → logprob: -17.00045394897461
    10. '[int' → logprob: -17.00045394897461

Token 623: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -1.8624639324116288e-06
    2. ' Card' → logprob: -13.250001907348633
    3. 'Poker' → logprob: -22.250001907348633
    4. 'Car' → logprob: -23.250001907348633
    5. '   ' → logprob: -23.375001907348633
    6. '(Card' → logprob: -23.750001907348633
    7. '<Card' → logprob: -24.750001907348633
    8. ' ' → logprob: -25.000001907348633
    9. 'card' → logprob: -25.500001907348633
    10. 'Cards' → logprob: -25.500001907348633

Token 624: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.0921942703134846e-05
    2. 'int' → logprob: -11.87501049041748
    3. '(' → logprob: -12.75001049041748
    4. '(value' → logprob: -14.62501049041748
    5. '[int' → logprob: -15.00001049041748
    6. '((' → logprob: -15.62501049041748
    7. ' (' → logprob: -16.625011444091797
    8. '=int' → logprob: -17.625011444091797
    9. '   ' → logprob: -18.000011444091797
    10. '(
' → logprob: -18.875011444091797

Token 625: '(x' (ID: 4061)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.45207640528678894
    2. '(part' → logprob: -1.7020764350891113
    3. 'p' → logprob: -2.4520764350891113
    4. '(p' → logprob: -2.7020764350891113
    5. '(value' → logprob: -3.8270764350891113
    6. 'value' → logprob: -5.452076435089111
    7. '(v' → logprob: -7.452076435089111
    8. 'v' → logprob: -7.577076435089111
    9. '(' → logprob: -8.327075958251953
    10. '(x' → logprob: -8.702075958251953

Token 626: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6408730149269104
    2. '.strip' → logprob: -0.7658730149269104
    3. '(x' → logprob: -6.015872955322266
    4. '(parts' → logprob: -6.265872955322266
    5. 'strip' → logprob: -6.640872955322266
    6. '(strip' → logprob: -7.140872955322266
    7. '.trim' → logprob: -8.015872955322266
    8. 'parts' → logprob: -8.265872955322266
    9. '(trim' → logprob: -8.390872955322266
    10. 'part' → logprob: -8.640872955322266

Token 627: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.15623943507671356
    2. ')' → logprob: -2.0312395095825195
    3. '(part' → logprob: -5.0312395095825195
    4. '(value' → logprob: -5.9062395095825195
    5. 'for' → logprob: -6.6562395095825195
    6. '.strip' → logprob: -6.9062395095825195
    7. '(' → logprob: -7.7812395095825195
    8. ' for' → logprob: -8.28123950958252
    9. '(parts' → logprob: -8.28123950958252
    10. '(token' → logprob: -8.40623950958252

Token 628: ' x' (ID: 1215)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.16763664782047272
    2. 'x' → logprob: -1.9176366329193115
    3. ' parts' → logprob: -4.917636871337891
    4. ' x' → logprob: -10.04263687133789
    5. '(parts' → logprob: -10.66763687133789
    6. 'part' → logprob: -14.04263687133789
    7. 'p' → logprob: -14.66763687133789
    8. '_parts' → logprob: -15.04263687133789
    9. '(x' → logprob: -16.54263687133789
    10. '   ' → logprob: -16.54263687133789

Token 629: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05281634256243706
    2. ' in' → logprob: -3.302816390991211
    3. ' x' → logprob: -4.302816390991211
    4. 'in' → logprob: -6.927816390991211
    5. '(x' → logprob: -9.177816390991211
    6. 'parts' → logprob: -10.552816390991211
    7. ' parts' → logprob: -11.052816390991211
    8. '(parts' → logprob: -11.552816390991211
    9. ')' → logprob: -15.427816390991211
    10. ' ' → logprob: -16.17781639099121

Token 630: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.00318353995680809
    2. ' parts' → logprob: -5.753183364868164
    3. '(parts' → logprob: -12.253183364868164
    4. 'part' → logprob: -15.003183364868164
    5. '   ' → logprob: -15.753183364868164
    6. ' ' → logprob: -15.753183364868164
    7. 'points' → logprob: -16.128183364868164
    8. 'p' → logprob: -16.378183364868164
    9. '[' → logprob: -16.503183364868164
    10. 'pieces' → logprob: -17.753183364868164

Token 631: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10119519382715225
    2. ')]' → logprob: -2.3511950969696045
    3. ' ]' → logprob: -7.351195335388184
    4. ')' → logprob: -8.351195335388184
    5. '()]' → logprob: -9.476195335388184
    6. 'if' → logprob: -11.601195335388184
    7. '.strip' → logprob: -11.851195335388184
    8. ' if' → logprob: -12.226195335388184
    9. 'strip' → logprob: -12.351195335388184
    10. ' )' → logprob: -13.226195335388184

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007983117830008268
    2. '	' → logprob: -7.750798225402832
    3. 'return' → logprob: -8.250798225402832
    4. ' return' → logprob: -9.875798225402832
    5. '<|end|>' → logprob: -10.250798225402832
    6. '	return' → logprob: -11.750798225402832
    7. '   ' → logprob: -12.500798225402832
    8. '	   ' → logprob: -13.125798225402832
    9. '      ' → logprob: -13.375798225402832
    10. '        
' → logprob: -14.000798225402832

Token 633: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13666774332523346
    2. ' return' → logprob: -2.1366677284240723
    3. '       ' → logprob: -4.636667728424072
    4. '	return' → logprob: -13.26166820526123
    5. '
' → logprob: -14.76166820526123
    6. '   ' → logprob: -15.38666820526123
    7. '	' → logprob: -16.386667251586914
    8. '        
' → logprob: -17.261667251586914
    9. ' ' → logprob: -17.886667251586914
    10. ')return' → logprob: -18.761667251586914

Token 634: ' Hand' (ID: 7110)
  Prédit: 'Hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.00861456897109747
    2. ' Hand' → logprob: -4.758614540100098
    3. 'Hands' → logprob: -17.383615493774414
    4. 'Handshake' → logprob: -17.883615493774414
    5. ' hand' → logprob: -18.383615493774414
    6. 'hand' → logprob: -18.883615493774414
    7. ' ' → logprob: -19.633615493774414
    8. '.Hand' → logprob: -20.008615493774414
    9. '_hand' → logprob: -20.383615493774414
    10. ' Hands' → logprob: -20.508615493774414

Token 635: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. '(c' → logprob: -17.500001907348633
    4. ' (' → logprob: -17.500001907348633
    5. 'cards' → logprob: -17.875001907348633
    6. '(parts' → logprob: -18.000001907348633
    7. ' cards' → logprob: -18.375001907348633
    8. '(card' → logprob: -18.500001907348633
    9. '(chars' → logprob: -18.500001907348633
    10. '(tokens' → logprob: -18.500001907348633

Token 636: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -14.750000953674316
    4. '   ' → logprob: -18.375001907348633
    5. ')return' → logprob: -18.625001907348633
    6. '       ' → logprob: -18.625001907348633
    7. '<|end|>' → logprob: -18.625001907348633
    8. ')}' → logprob: -18.750001907348633
    9. '))' → logprob: -18.750001907348633
    10. '[' → logprob: -18.875001907348633

Token 637: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 638: ' Poker' (ID: 30320)
  Prédit: 'Poker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Poker' → logprob: -0.1338948905467987
    2. ' Poker' → logprob: -2.383894920349121
    3. 'Test' → logprob: -4.133894920349121
    4. 'Hand' → logprob: -4.758894920349121
    5. 'Card' → logprob: -5.883894920349121
    6. 'Game' → logprob: -6.383894920349121
    7. 'Evaluator' → logprob: -6.758894920349121
    8. 'Player' → logprob: -7.133894920349121
    9. 'Deck' → logprob: -7.633894920349121
    10. 'Solution' → logprob: -8.758894920349121

Token 639: 'Evaluator' (ID: 87172)
  Prédit: 'Hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.4850061535835266
    2. 'Game' → logprob: -1.2350060939788818
    3. 'Evaluator' → logprob: -2.610006093978882
    4. 'Player' → logprob: -6.110006332397461
    5. 'Analyzer' → logprob: -6.110006332397461
    6. 'Rank' → logprob: -6.110006332397461
    7. 'Comparer' → logprob: -6.485006332397461
    8. 'Hands' → logprob: -6.485006332397461
    9. 'Parser' → logprob: -6.610006332397461
    10. 'Solver' → logprob: -6.735006332397461

Token 640: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.145118848304264e-05
    2. ':
' → logprob: -10.250051498413086
    3. ' :' → logprob: -11.375051498413086
    4. '<|end|>' → logprob: -13.625051498413086
    5. '():' → logprob: -14.375051498413086
    6. ':def' → logprob: -14.500051498413086
    7. '(' → logprob: -14.750051498413086
    8. ':**' → logprob: -15.125051498413086
    9. '(P' → logprob: -15.250051498413086
    10. ':

' → logprob: -15.500051498413086

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2275184690952301
    2. ':' → logprob: -1.7275184392929077
    3. ':
' → logprob: -4.227518558502197
    4. ' def' → logprob: -5.602518558502197
    5. '<|end|>' → logprob: -5.852518558502197
    6. '
' → logprob: -6.977518558502197
    7. 'def' → logprob: -7.102518558502197
    8. 'class' → logprob: -7.352518558502197
    9. '    
' → logprob: -7.602518558502197
    10. '	def' → logprob: -7.852518558502197

Token 642: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01574176363646984
    2. ' def' → logprob: -4.89074182510376
    3. 'def' → logprob: -5.51574182510376
    4. 'staticmethod' → logprob: -6.64074182510376
    5. ' @' → logprob: -6.89074182510376
    6. '    ' → logprob: -7.89074182510376
    7. ':' → logprob: -7.89074182510376
    8. '@' → logprob: -8.140741348266602
    9. ' ' → logprob: -8.390741348266602
    10. 'class' → logprob: -9.265741348266602

Token 643: 'Classe' (ID: 135454)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12355950474739075
    2. '"""' → logprob: -3.1235594749450684
    3. '@' → logprob: -3.2485594749450684
    4. 'staticmethod' → logprob: -3.7485594749450684
    5. 'def' → logprob: -5.373559474945068
    6. '   ' → logprob: -6.123559474945068
    7. ' """' → logprob: -7.123559474945068
    8. ' @' → logprob: -7.373559474945068
    9. 'static' → logprob: -7.498559474945068
    10. 'classmethod' → logprob: -7.748559474945068

Token 644: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04817973077297211
    2. '   ' → logprob: -3.5481796264648438
    3. ' capable' → logprob: -5.423179626464844
    4. '<|end|>' → logprob: -5.798179626464844
    5. ':
' → logprob: -5.923179626464844
    6. ' class' → logprob: -6.798179626464844
    7. '  ' → logprob: -7.048179626464844
    8. 'class' → logprob: -7.173179626464844
    9. '<|end|>' → logprob: -7.423179626464844
    10. 'valuator' → logprob: -7.548179626464844

Token 645: ''é' (ID: 12728)
  Prédit: ''é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''é' → logprob: -0.09691312164068222
    2. 'é' → logprob: -2.4719130992889404
    3. 'evaluation' → logprob: -6.0969133377075195
    4. ''analyse' → logprob: -6.3469133377075195
    5. 'e' → logprob: -6.9719133377075195
    6. 'éf' → logprob: -7.2219133377075195
    7. ''aide' → logprob: -7.4719133377075195
    8. '’é' → logprob: -8.22191333770752
    9. 'émon' → logprob: -8.47191333770752
    10. ''' → logprob: -8.72191333770752

Token 646: 'valuation' (ID: 24207)
  Prédit: 'valuation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuation' → logprob: -0.002551646437495947
    2. 'val' → logprob: -6.002551555633545
    3. 'valu' → logprob: -10.002552032470703
    4. 'va' → logprob: -11.502552032470703
    5. 'v' → logprob: -12.127552032470703
    6. 'value' → logprob: -12.252552032470703
    7. 'valuer' → logprob: -13.127552032470703
    8. '```' → logprob: -13.252552032470703
    9. 'evaluation' → logprob: -14.002552032470703
    10. 'preuve' → logprob: -14.127552032470703

Token 647: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5906199216842651
    2. 'des' → logprob: -1.7156199216842651
    3. '{' → logprob: -1.9656199216842651
    4. ' de' → logprob: -2.7156200408935547
    5. 'de' → logprob: -3.2156200408935547
    6. '{
' → logprob: -5.090620040893555
    7. '   ' → logprob: -5.340620040893555
    8. ' {' → logprob: -5.840620040893555
    9. ':' → logprob: -7.590620040893555
    10. ' ' → logprob: -7.590620040893555

Token 648: ' mains' (ID: 50381)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0066028679721057415
    2. 'p' → logprob: -5.881602764129639
    3. 'Poker' → logprob: -6.506602764129639
    4. 'main' → logprob: -6.756602764129639
    5. ' mains' → logprob: -7.756602764129639
    6. 'hands' → logprob: -8.381603240966797
    7. 'po' → logprob: -8.631603240966797
    8. 'la' → logprob: -9.631603240966797
    9. '```' → logprob: -10.506603240966797
    10. 'comb' → logprob: -10.506603240966797

Token 649: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.43010610342025757
    2. 'de' → logprob: -1.0551061630249023
    3. '_de' → logprob: -7.680106163024902
    4. ' poker' → logprob: -8.055106163024902
    5. 'p' → logprob: -8.805106163024902
    6. '   ' → logprob: -8.805106163024902
    7. 'Poker' → logprob: -8.805106163024902
    8. ' ' → logprob: -10.430106163024902
    9. ' Poker' → logprob: -10.555106163024902
    10. 'def' → logprob: -10.680106163024902

Token 650: ' anticip' (ID: 20155)
  Prédit: ' stat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stat' → logprob: -0.15224842727184296
    2. '   ' → logprob: -2.5272483825683594
    3. ' static' → logprob: -3.5272483825683594
    4. ' avec' → logprob: -5.027248382568359
    5. ' capable' → logprob: -5.277248382568359
    6. ' permettant' → logprob: -5.652248382568359
    7. 'static' → logprob: -5.777248382568359
    8. 'def' → logprob: -6.152248382568359
    9. 'stat' → logprob: -6.152248382568359
    10. ' with' → logprob: -7.027248382568359

Token 651: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.22978252172470093
    2. 'ate' → logprob: -1.9797825813293457
    3. 'ates' → logprob: -3.7297825813293457
    4. 'ating' → logprob: -3.8547825813293457
    5. 'e' → logprob: -4.729782581329346
    6. 'er' → logprob: -4.979782581329346
    7. 'ée' → logprob: -5.854782581329346
    8. 'ated' → logprob: -6.104782581329346
    9. 'ation' → logprob: -8.354782104492188
    10. 'é' → logprob: -8.604782104492188

Token 652: ' extension' (ID: 15369)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1707427501678467
    2. ' des' → logprob: -2.1707427501678467
    3. ' les' → logprob: -2.4207427501678467
    4. ' une' → logprob: -2.4207427501678467
    5. 'l' → logprob: -2.5457427501678467
    6. ' l' → logprob: -3.0457427501678467
    7. ' d' → logprob: -3.2957427501678467
    8. 'd' → logprob: -3.5457427501678467
    9. ' future' → logprob: -3.5457427501678467
    10. 'les' → logprob: -3.7957427501678467

Token 653: ' future' (ID: 5277)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7580029964447021
    2. ':' → logprob: -1.7580029964447021
    3. '<|end|>' → logprob: -1.7580029964447021
    4. 's' → logprob: -1.8830029964447021
    5. '   ' → logprob: -2.008002996444702
    6. ' ' → logprob: -2.883002996444702
    7. ' des' → logprob: -3.883002996444702
    8. ',' → logprob: -4.258003234863281
    9. 'def' → logprob: -4.508003234863281
    10. '  ' → logprob: -4.508003234863281

Token 654: '."""
' (ID: 33044)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9258575439453125
    2. ':' → logprob: -1.3008575439453125
    3. '.' → logprob: -2.0508575439453125
    4. '   ' → logprob: -2.3008575439453125
    5. ' .' → logprob: -4.3008575439453125
    6. 's' → logprob: -4.4258575439453125
    7. '):' → logprob: -4.6758575439453125
    8. ',' → logprob: -4.8008575439453125
    9. ')' → logprob: -5.1758575439453125
    10. ' de' → logprob: -5.1758575439453125

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05801833048462868
    2. 'def' → logprob: -3.558018445968628
    3. ' def' → logprob: -4.308018207550049
    4. '    
' → logprob: -4.808018207550049
    5. '<|end|>' → logprob: -5.808018207550049
    6. '    ' → logprob: -7.058018207550049
    7. '
' → logprob: -7.183018207550049
    8. 'class' → logprob: -7.558018207550049
    9. '	def' → logprob: -8.183018684387207
    10. '```' → logprob: -8.933018684387207

Token 656: ' def' (ID: 1056)
  Prédit: ' @'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' @' → logprob: -0.19613321125507355
    2. '@' → logprob: -1.9461332559585571
    3. ' def' → logprob: -3.4461331367492676
    4. 'def' (adapté à ' def') → logprob: -6.321133136749268
    5. '   ' → logprob: -6.446133136749268
    6. 'staticmethod' → logprob: -11.696133613586426
    7. 'class' → logprob: -11.946133613586426
    8. '
' → logprob: -13.821133613586426
    9. ' ' → logprob: -14.196133613586426
    10. ' class' → logprob: -14.571133613586426

Token 657: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00034261439577676356
    2. 'classmethod' → logprob: -8.12534236907959
    3. 'static' → logprob: -10.62534236907959
    4. ' static' → logprob: -11.12534236907959
    5. '__' → logprob: -12.50034236907959
    6. ' __' → logprob: -12.87534236907959
    7. 'init' → logprob: -14.25034236907959
    8. '_static' → logprob: -15.50034236907959
    9. 'def' → logprob: -15.62534236907959
    10. 'stat' → logprob: -16.625343322753906

Token 658: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.531315314830863e-06
    2. 'new' → logprob: -12.875003814697266
    3. ' init' → logprob: -14.875003814697266
    4. 'static' → logprob: -16.125003814697266
    5. 'def' → logprob: -16.250003814697266
    6. 'staticmethod' → logprob: -16.625003814697266
    7. 'int' → logprob: -17.125003814697266
    8. 'nit' → logprob: -17.125003814697266
    9. 'call' → logprob: -17.375003814697266
    10. 'class' → logprob: -17.750003814697266

Token 659: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5570069551467896
    2. '__(' → logprob: -1.0570069551467896
    3. '(' → logprob: -2.6820068359375
    4. '__' → logprob: -5.3070068359375
    5. '__(
' → logprob: -5.9320068359375
    6. '()' → logprob: -6.4320068359375
    7. ' (' → logprob: -6.8070068359375
    8. 'self' → logprob: -8.0570068359375
    9. ' ' → logprob: -9.1820068359375
    10. '_' → logprob: -9.5570068359375

Token 660: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006461950251832604
    2. ')' → logprob: -7.375646114349365
    3. ' self' → logprob: -11.125646591186523
    4. '):
' → logprob: -13.000646591186523
    5. ')(' → logprob: -13.750646591186523
    6. '),' → logprob: -14.750646591186523
    7. '	self' → logprob: -15.625646591186523
    8. '(self' → logprob: -15.875646591186523
    9. '
' → logprob: -16.000646591186523
    10. ')
' → logprob: -16.125646591186523

Token 661: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7891525030136108
    2. '):' → logprob: -0.7891525030136108
    3. '):
' → logprob: -3.1641526222229004
    4. ')' → logprob: -3.6641526222229004
    5. ',' → logprob: -3.7891526222229004
    6. '(self' → logprob: -7.5391526222229
    7. ' self' → logprob: -8.289152145385742
    8. ' ):' → logprob: -9.664152145385742
    9. ',self' → logprob: -9.664152145385742
    10. '   ' → logprob: -10.789152145385742

Token 662: ' hands' (ID: 8950)
  Prédit: 'hands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hands' → logprob: -0.04303504526615143
    2. 'self' → logprob: -4.16803503036499
    3. 'parser' → logprob: -4.79303503036499
    4. 'hand' → logprob: -4.91803503036499
    5. ' hands' → logprob: -5.54303503036499
    6. 'e' → logprob: -6.29303503036499
    7. 'rules' → logprob: -6.79303503036499
    8. 'p' → logprob: -7.41803503036499
    9. 'parse' → logprob: -7.41803503036499
    10. 'lines' → logprob: -7.54303503036499

Token 663: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.5776860184123507e-06
    2. '):' → logprob: -13.62500286102295
    3. '=' → logprob: -14.12500286102295
    4. ' :' → logprob: -15.00000286102295
    5. '_:' → logprob: -16.750001907348633
    6. ')' → logprob: -16.875001907348633
    7. ':list' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '```' → logprob: -18.125001907348633
    10. '=None' → logprob: -19.000001907348633

Token 664: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00016027313540689647
    2. ' List' → logprob: -8.750160217285156
    3. '[List' → logprob: -13.875160217285156
    4. 'Optional' → logprob: -14.750160217285156
    5. ')' → logprob: -15.625160217285156
    6. 'list' → logprob: -15.750160217285156
    7. '   ' → logprob: -16.250160217285156
    8. '	List' → logprob: -18.000160217285156
    9. '       ' → logprob: -18.500160217285156
    10. ' ' → logprob: -19.250160217285156

Token 665: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ')' → logprob: -17.625
    3. 'Hand' → logprob: -17.625
    4. '[
' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. '[str' → logprob: -18.0
    7. '['' → logprob: -18.0
    8. '[int' → logprob: -18.5
    9. ' [' → logprob: -18.75
    10. '[List' → logprob: -18.875

Token 666: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -0.00012047011114191264
    2. 'str' → logprob: -9.125120162963867
    3. ' Hand' → logprob: -12.125120162963867
    4. 'Str' → logprob: -13.125120162963867
    5. 'Handshake' → logprob: -13.625120162963867
    6. '[str' → logprob: -14.250120162963867
    7. 'Tuple' → logprob: -14.250120162963867
    8. '[' → logprob: -14.625120162963867
    9. 'Card' → logprob: -14.875120162963867
    10. 'List' → logprob: -15.250120162963867

Token 667: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2139362096786499
    2. ']):' → logprob: -2.3389363288879395
    3. ')' → logprob: -3.0889363288879395
    4. ']):
' → logprob: -3.5889363288879395
    5. '):
' → logprob: -3.8389363288879395
    6. ']' → logprob: -7.0889363288879395
    7. '])' → logprob: -7.9639363288879395
    8. ':' → logprob: -9.213935852050781
    9. ']:' → logprob: -10.088935852050781
    10. '):
' → logprob: -10.463935852050781

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016545943915843964
    2. 'self' → logprob: -4.14154577255249
    3. ' self' → logprob: -7.76654577255249
    4. '   ' → logprob: -9.766546249389648
    5. 'def' → logprob: -10.766546249389648
    6. '	self' → logprob: -12.641546249389648
    7. '<|end|>' → logprob: -13.141546249389648
    8. '(self' → logprob: -14.391546249389648
    9. ')' → logprob: -14.516546249389648
    10. '      ' → logprob: -14.516546249389648

Token 669: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01932506076991558
    2. ' self' → logprob: -4.269325256347656
    3. '       ' → logprob: -5.269325256347656
    4. '	self' → logprob: -14.144325256347656
    5. '   ' → logprob: -14.894325256347656
    6. '(self' → logprob: -16.519325256347656
    7. ' ' → logprob: -16.644325256347656
    8. '      ' → logprob: -18.144325256347656
    9. '     ' → logprob: -18.894325256347656
    10. '[self' → logprob: -19.019325256347656

Token 670: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0004438971809577197
    2. 'hands' → logprob: -7.875443935394287
    3. '.hand' → logprob: -10.250443458557129
    4. '.' → logprob: -11.000443458557129
    5. ' hands' → logprob: -12.125443458557129
    6. ' .' → logprob: -12.375443458557129
    7. 'Hands' → logprob: -13.500443458557129
    8. '.faces' → logprob: -15.375443458557129
    9. '.cards' → logprob: -16.000444412231445
    10. 'h' → logprob: -16.125444412231445

Token 671: 'ands' (ID: 3460)
  Prédit: 'ands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ands' → logprob: -1.9027791495318525e-05
    2. 'and' → logprob: -11.125019073486328
    3. 'hands' → logprob: -12.875019073486328
    4. '_' → logprob: -14.250019073486328
    5. '=' → logprob: -15.125019073486328
    6. '   ' → logprob: -15.875019073486328
    7. 'a' → logprob: -16.500019073486328
    8. 'ANDS' → logprob: -16.500019073486328
    9. '
' → logprob: -16.625019073486328
    10. '_and' → logprob: -16.750019073486328

Token 672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603131741285324
    2. '=' → logprob: -1.9103131294250488
    3. ':' → logprob: -9.410313606262207
    4. ' ' → logprob: -13.035313606262207
    5. '   ' → logprob: -13.035313606262207
    6. ' :' → logprob: -14.035313606262207
    7. ')' → logprob: -14.660313606262207
    8. '	' → logprob: -14.785313606262207
    9. '    ' → logprob: -15.410313606262207
    10. '        ' → logprob: -15.410313606262207

Token 673: ' hands' (ID: 8950)
  Prédit: 'hands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hands' → logprob: -0.023248156532645226
    2. ' hands' → logprob: -3.7732481956481934
    3. 'hand' → logprob: -13.023247718811035
    4. 'Hands' → logprob: -14.898247718811035
    5. 'h' → logprob: -16.02324867248535
    6. '   ' → logprob: -18.14824867248535
    7. '       ' → logprob: -18.77324867248535
    8. ' Hands' → logprob: -19.27324867248535
    9. '	h' → logprob: -19.27324867248535
    10. ' hand' → logprob: -19.52324867248535

Token 674: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.51725172996521
    2. '<|end|>' → logprob: -1.39225172996521
    3. '
' → logprob: -2.14225172996521
    4. 'def' → logprob: -3.51725172996521
    5. '<|end|>' → logprob: -5.892251968383789
    6. '    
' → logprob: -5.892251968383789
    7. '       ' → logprob: -6.892251968383789
    8. ' def' → logprob: -7.017251968383789
    9. '        
' → logprob: -8.267251968383789
    10. '

' → logprob: -8.642251968383789

Token 675: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5530312061309814
    2. '   ' → logprob: -0.9280312061309814
    3. ' def' → logprob: -3.8030312061309814
    4. '<|end|>' → logprob: -5.178030967712402
    5. '
' → logprob: -7.178030967712402
    6. ')' → logprob: -8.053030967712402
    7. '<|end|>' → logprob: -8.428030967712402
    8. '    
' → logprob: -9.678030967712402
    9. '	def' → logprob: -10.053030967712402
    10. ' ' → logprob: -10.428030967712402

Token 676: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015872348740231246
    2. ' def' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.125158309936523
    4. '
' → logprob: -16.875158309936523
    5. ' ' → logprob: -19.125158309936523
    6. '	def' → logprob: -19.750158309936523
    7. 'from' → logprob: -20.000158309936523
    8. 'class' → logprob: -20.875158309936523
    9. 'Def' → logprob: -21.500158309936523
    10. '

' → logprob: -21.625158309936523

Token 677: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.5205492973327637
    2. 'class' → logprob: -1.3955492973327637
    3. ' classify' → logprob: -2.2705492973327637
    4. ' evaluate' → logprob: -3.0205492973327637
    5. 'rank' → logprob: -5.520549297332764
    6. ' best' → logprob: -7.395549297332764
    7. 'best' → logprob: -7.520549297332764
    8. ' class' → logprob: -8.270549774169922
    9. ' rank' → logprob: -8.520549774169922
    10. '_class' → logprob: -8.895549774169922

Token 678: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023226479243021458
    2. '(' → logprob: -9.125232696533203
    3. '()' → logprob: -9.625232696533203
    4. '_all' → logprob: -10.500232696533203
    5. 'self' → logprob: -11.000232696533203
    6. 'all' → logprob: -12.250232696533203
    7. ' (' → logprob: -13.250232696533203
    8. 's' → logprob: -13.250232696533203
    9. '_hand' → logprob: -13.500232696533203
    10. ' ' → logprob: -14.750232696533203

Token 679: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012893837876617908
    2. '):' → logprob: -4.3878936767578125
    3. '):
' → logprob: -8.762893676757812
    4. 'self' → logprob: -9.137893676757812
    5. ')_' → logprob: -9.262893676757812
    6. ' )' → logprob: -11.637893676757812
    7. ')->' → logprob: -12.262893676757812
    8. '(self' → logprob: -12.762893676757812
    9. ',' → logprob: -14.012893676757812
    10. '   ' → logprob: -14.012893676757812

Token 680: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.8287999033927917
    2. '(self' → logprob: -1.0787999629974365
    3. '->' → logprob: -1.5787999629974365
    4. ')' → logprob: -4.578799724578857
    5. 'self' → logprob: -5.953799724578857
    6. ')->' → logprob: -6.328799724578857
    7. '(' → logprob: -6.453799724578857
    8. '   ' → logprob: -8.328800201416016
    9. '       ' → logprob: -8.328800201416016
    10. ':' → logprob: -8.578800201416016

Token 681: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.16381047666072845
    2. ' List' → logprob: -1.9138104915618896
    3. '[List' → logprob: -5.6638102531433105
    4. 'Dict' → logprob: -9.163810729980469
    5. '[' → logprob: -12.788810729980469
    6. ' Dict' → logprob: -13.038810729980469
    7. '	List' → logprob: -14.538810729980469
    8. '   ' → logprob: -15.663810729980469
    9. '[str' → logprob: -16.41381072998047
    10. ' ' → logprob: -16.53881072998047

Token 682: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -11.750007629394531
    3. 'str' → logprob: -17.12500762939453
    4. '[int' → logprob: -19.75000762939453
    5. '[List' → logprob: -21.62500762939453
    6. '[
' → logprob: -21.87500762939453
    7. '[String' → logprob: -22.00000762939453
    8. '(str' → logprob: -22.12500762939453
    9. '   ' → logprob: -22.62500762939453
    10. ' str' → logprob: -22.87500762939453

Token 683: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07384070008993149
    2. ':
' → logprob: -3.198840618133545
    3. ']:' → logprob: -4.073840618133545
    4. '):' → logprob: -5.323840618133545
    5. ']:
' → logprob: -6.198840618133545
    6. '):
' → logprob: -6.323840618133545
    7. '   ' → logprob: -6.573840618133545
    8. '():' → logprob: -6.823840618133545
    9. '():
' → logprob: -6.823840618133545
    10. '       ' → logprob: -7.323840618133545

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.707997428951785e-05
    2. 'result' → logprob: -10.625077247619629
    3. ' return' → logprob: -10.750077247619629
    4. 'return' → logprob: -11.250077247619629
    5. ' result' → logprob: -12.125077247619629
    6. 'results' → logprob: -12.250077247619629
    7. ' results' → logprob: -12.625077247619629
    8. ':' → logprob: -13.375077247619629
    9. '[' → logprob: -13.875077247619629
    10. '[]' → logprob: -14.125077247619629

Token 685: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4961455166339874
    2. 'return' → logprob: -0.996145486831665
    3. ' return' → logprob: -3.871145486831665
    4. 'result' → logprob: -7.246145725250244
    5. 'results' (adapté à ' results') → logprob: -8.246145248413086
    6. ' result' → logprob: -12.246145248413086
    7. ' results' → logprob: -12.371145248413086
    8. '   ' → logprob: -12.996145248413086
    9. '[' → logprob: -13.496145248413086
    10. '	return' → logprob: -14.121145248413086

Token 686: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2022220641374588
    2. '=' → logprob: -1.7022221088409424
    3. '=[]' → logprob: -7.327221870422363
    4. '()' → logprob: -9.702221870422363
    5. '[]' → logprob: -10.202221870422363
    6. '(' → logprob: -10.952221870422363
    7. '=[]
' → logprob: -11.702221870422363
    8. ':' → logprob: -11.827221870422363
    9. '   ' → logprob: -11.827221870422363
    10. '[:]' → logprob: -11.827221870422363

Token 687: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16497428715229034
    2. '[' → logprob: -2.1649742126464844
    3. '[]
' → logprob: -3.6649742126464844
    4. '[self' → logprob: -5.414974212646484
    5. ' [' → logprob: -5.664974212646484
    6. ' []' → logprob: -5.914974212646484
    7. '[i' → logprob: -7.664974212646484
    8. '[s' → logprob: -9.539974212646484
    9. '[list' → logprob: -9.914974212646484
    10. '[len' → logprob: -10.164974212646484

Token 688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01622428558766842
    2. ' for' → logprob: -4.266224384307861
    3. 'for' → logprob: -6.641224384307861
    4. '	' → logprob: -8.141223907470703
    5. '	for' → logprob: -8.516223907470703
    6. '
' → logprob: -8.891223907470703
    7. '   ' → logprob: -9.766223907470703
    8. '        
' → logprob: -10.891223907470703
    9. '	   ' → logprob: -11.391223907470703
    10. '<|end|>' → logprob: -11.641223907470703

Token 689: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003430077340453863
    2. ' for' → logprob: -6.253429889678955
    3. '       ' → logprob: -6.503429889678955
    4. '
' → logprob: -13.503430366516113
    5. '	for' → logprob: -14.753430366516113
    6. '   ' → logprob: -15.003430366516113
    7. '        
' → logprob: -18.253429412841797
    8. '	' → logprob: -18.503429412841797
    9. ' ' → logprob: -18.753429412841797
    10. '```' → logprob: -19.378429412841797

Token 690: ' hand' (ID: 1803)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.029750484973192215
    2. ' hand' → logprob: -3.5297505855560303
    3. 'h' → logprob: -18.02975082397461
    4. 'Hand' → logprob: -18.77975082397461
    5. '_hand' → logprob: -19.15475082397461
    6. '(hand' → logprob: -19.52975082397461
    7. 'han' → logprob: -20.15475082397461
    8. '   ' → logprob: -20.27975082397461
    9. ' ' → logprob: -20.65475082397461
    10. '.hand' → logprob: -21.27975082397461

Token 691: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006724960170686245
    2. 'in' → logprob: -5.006724834442139
    3. ' ' → logprob: -12.131725311279297
    4. '	in' → logprob: -13.256725311279297
    5. ' ' → logprob: -13.506725311279297
    6. '_in' → logprob: -15.256725311279297
    7. '  ' → logprob: -15.631725311279297
    8. '.' → logprob: -15.631725311279297
    9. '   ' → logprob: -16.131725311279297
    10. '    ' → logprob: -16.256725311279297

Token 692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861456897109747
    2. ' self' → logprob: -4.758614540100098
    3. '	self' → logprob: -18.633615493774414
    4. '(self' → logprob: -19.258615493774414
    5. '   ' → logprob: -21.258615493774414
    6. '[self' → logprob: -21.258615493774414
    7. '=self' → logprob: -21.508615493774414
    8. '
' → logprob: -22.008615493774414
    9. '_self' → logprob: -22.008615493774414
    10. ':self' → logprob: -23.258615493774414

Token 693: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -7.703443770878948e-06
    2. 'ands' → logprob: -12.375007629394531
    3. 'hands' → logprob: -13.500007629394531
    4. '.' → logprob: -13.750007629394531
    5. '.hand' → logprob: -14.375007629394531
    6. ' hands' → logprob: -15.250007629394531
    7. ' .' → logprob: -16.25000762939453
    8. '.s' → logprob: -16.50000762939453
    9. 's' → logprob: -17.00000762939453
    10. 'Hands' → logprob: -17.25000762939453

Token 694: 'ands' (ID: 3460)
  Prédit: 'ands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ands' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -11.625021934509277
    3. 'and' → logprob: -12.500021934509277
    4. 'nds' → logprob: -12.625021934509277
    5. 'hands' → logprob: -13.375021934509277
    6. '.h' → logprob: -14.125021934509277
    7. 'ANDS' → logprob: -14.375021934509277
    8. '   ' → logprob: -14.625021934509277
    9. 's' → logprob: -14.750021934509277
    10. '._' → logprob: -14.875021934509277

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1611531525850296
    2. ':
' → logprob: -1.9111531972885132
    3. '           ' → logprob: -7.161153316497803
    4. '):
' → logprob: -9.661152839660645
    5. '       ' → logprob: -10.411152839660645
    6. '.' → logprob: -10.911152839660645
    7. ',' → logprob: -11.661152839660645
    8. ' :' → logprob: -11.786152839660645
    9. ':
' → logprob: -12.036152839660645
    10. ' :
' → logprob: -12.536152839660645

Token 696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14821688830852509
    2. 'results' → logprob: -2.398216962814331
    3. '       ' → logprob: -3.523216962814331
    4. ' results' → logprob: -4.398216724395752
    5. '
' → logprob: -5.523216724395752
    6. '(results' → logprob: -8.27321720123291
    7. 'result' → logprob: -8.64821720123291
    8. '   ' → logprob: -9.02321720123291
    9. 'tokens' → logprob: -9.14821720123291
    10. '	results' → logprob: -9.14821720123291

Token 697: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.009835189208388329
    2. ' results' → logprob: -4.759835243225098
    3. 'result' → logprob: -6.759835243225098
    4. '           ' → logprob: -9.884835243225098
    5. ' result' → logprob: -11.884835243225098
    6. '               ' → logprob: -13.884835243225098
    7. 'classification' → logprob: -13.884835243225098
    8. '	results' → logprob: -14.509835243225098
    9. 'res' → logprob: -15.759835243225098
    10. ' classification' → logprob: -17.38483428955078

Token 698: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.5716304410016164e-05
    2. '.' → logprob: -10.250035285949707
    3. '.extend' → logprob: -15.500035285949707
    4. 'append' → logprob: -16.250036239624023
    5. '.app' → logprob: -18.375036239624023
    6. '.ap' → logprob: -18.500036239624023
    7. '.Append' → logprob: -19.250036239624023
    8. '.push' → logprob: -19.875036239624023
    9. ').' → logprob: -19.875036239624023
    10. ' .' → logprob: -20.125036239624023

Token 699: '(hand' (ID: 154311)
  Prédit: '(hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hand' → logprob: -3.881560041918419e-05
    2. 'hand' → logprob: -10.250039100646973
    3. '(' → logprob: -12.750039100646973
    4. ' hand' → logprob: -14.625039100646973
    5. '.hand' → logprob: -19.750038146972656
    6. '_hand' → logprob: -19.875038146972656
    7. 'Hand' → logprob: -19.875038146972656
    8. '(
' → logprob: -20.500038146972656
    9. '(h' → logprob: -20.750038146972656
    10. ' (' → logprob: -22.250038146972656

Token 700: '.class' (ID: 4351)
  Prédit: '.class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.class' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.375004768371582
    3. 'class' → logprob: -15.625004768371582
    4. ' .' → logprob: -17.375003814697266
    5. '.Class' → logprob: -17.875003814697266
    6. ').' → logprob: -18.125003814697266
    7. '.evaluate' → logprob: -19.000003814697266
    8. '.CLASS' → logprob: -19.250003814697266
    9. '(class' → logprob: -19.625003814697266
    10. '<class' → logprob: -19.875003814697266

Token 701: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: 0.0
    2. 'if' → logprob: -20.0
    3. '```' → logprob: -22.375
    4. 'IFY' → logprob: -22.75
    5. 'class' → logprob: -23.25
    6. 'ification' → logprob: -24.375
    7. 'ificate' → logprob: -24.75
    8. 'ified' → logprob: -24.875
    9. 'ize' → logprob: -25.0
    10. 'ifier' → logprob: -25.375

Token 702: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003185198176652193
    2. '()' → logprob: -5.753185272216797
    3. '())
' → logprob: -12.003185272216797
    4. '()
' → logprob: -14.753185272216797
    5. ' ())' → logprob: -14.753185272216797
    6. '())

' → logprob: -15.378185272216797
    7. ')' → logprob: -15.503185272216797
    8. '();)' → logprob: -16.378185272216797
    9. '()))' → logprob: -17.003185272216797
    10. '()]' → logprob: -17.128185272216797

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03926591947674751
    2. '
' → logprob: -3.2892658710479736
    3. ' return' → logprob: -7.539266109466553
    4. 'return' → logprob: -7.664266109466553
    5. '        
' → logprob: -9.289265632629395
    6. '<|end|>' → logprob: -10.289265632629395
    7. '	' → logprob: -10.789265632629395
    8. '	return' → logprob: -10.914265632629395
    9. '
' → logprob: -11.289265632629395
    10. '    
' → logprob: -11.414265632629395

Token 704: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4946342706680298
    2. 'return' (adapté à ' return') → logprob: -0.9946342706680298
    3. ' return' → logprob: -3.9946341514587402
    4. '
' → logprob: -6.36963415145874
    5. '   ' → logprob: -8.994634628295898
    6. '	return' → logprob: -9.369634628295898
    7. '        
' → logprob: -12.869634628295898
    8. '	' → logprob: -12.994634628295898
    9. '```' → logprob: -13.369634628295898
    10. '
' → logprob: -13.744634628295898

Token 705: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.3132617771625519
    2. 'results' → logprob: -1.3132617473602295
    3. '	results' → logprob: -17.063261032104492
    4. '(results' → logprob: -18.313261032104492
    5. ' ' → logprob: -18.563261032104492
    6. 'result' → logprob: -19.563261032104492
    7. 'Results' → logprob: -19.688261032104492
    8. '[' → logprob: -19.813261032104492
    9. '.results' → logprob: -20.313261032104492
    10. '_results' → logprob: -20.438261032104492

Token 706: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 707: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.02019345574080944
    2. ' parse' → logprob: -4.395193576812744
    3. ' test' → logprob: -5.520193576812744
    4. ' run' → logprob: -6.520193576812744
    5. ' read' → logprob: -6.770193576812744
    6. ' evaluate' → logprob: -7.395193576812744
    7. ' poker' → logprob: -8.770193099975586
    8. ' process' → logprob: -9.270193099975586
    9. ' analyze' → logprob: -10.395193099975586
    10. ' example' → logprob: -10.520193099975586

Token 709: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00015693542081862688
    2. ' ():' → logprob: -9.625157356262207
    3. '()' → logprob: -10.000157356262207
    4. '():
' → logprob: -10.125157356262207
    5. '(' → logprob: -12.500157356262207
    6. '()>' → logprob: -14.375157356262207
    7. '():
' → logprob: -15.125157356262207
    8. '()">' → logprob: -15.375157356262207
    9. '_' → logprob: -16.00015640258789
    10. '().' → logprob: -16.25015640258789

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18304330110549927
    2. ' lines' → logprob: -1.9330432415008545
    3. ' import' → logprob: -4.058043479919434
    4. 'import' → logprob: -5.433043479919434
    5. 'lines' → logprob: -7.933043479919434
    6. ' input' → logprob: -7.933043479919434
    7. ' with' → logprob: -10.058043479919434
    8. 'input' → logprob: -10.558043479919434
    9. ' example' → logprob: -10.933043479919434
    10. ' line' → logprob: -11.058043479919434

Token 711: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.5044558644294739
    2. 'lines' → logprob: -1.504455804824829
    3. ' lines' → logprob: -2.129455804824829
    4. ' import' → logprob: -3.254455804824829
    5. '   ' → logprob: -4.629456043243408
    6. 'input' → logprob: -5.879456043243408
    7. 'hands' → logprob: -6.754456043243408
    8. ' hands' → logprob: -7.129456043243408
    9. 'inputs' → logprob: -7.879456043243408
    10. ' input' → logprob: -7.879456043243408

Token 712: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25194382667541504
    2. 'sys' → logprob: -1.501943826675415
    3. '=sys' → logprob: -11.501943588256836
    4. '	sys' → logprob: -12.376943588256836
    5. '(sys' → logprob: -15.876943588256836
    6. '_sys' → logprob: -16.501943588256836
    7. 'csv' → logprob: -17.001943588256836
    8. ' argparse' → logprob: -18.751943588256836
    9. '.sys' → logprob: -18.876943588256836
    10. 'file' → logprob: -19.376943588256836

Token 713: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03825768083333969
    2. ' lines' → logprob: -3.913257598876953
    3. 'for' → logprob: -4.913257598876953
    4. ' for' → logprob: -5.038257598876953
    5. '
' → logprob: -6.288257598876953
    6. '    
' → logprob: -6.913257598876953
    7. '	lines' → logprob: -8.288257598876953
    8. 'lines' → logprob: -8.538257598876953
    9. ' if' → logprob: -8.913257598876953
    10. 'if' → logprob: -10.038257598876953

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25237634778022766
    2. ' lines' → logprob: -1.6273763179779053
    3. ' if' → logprob: -4.252376556396484
    4. ' for' → logprob: -4.877376556396484
    5. 'for' → logprob: -6.252376556396484
    6. 'if' → logprob: -6.627376556396484
    7. ' hands' → logprob: -7.252376556396484
    8. 'lines' → logprob: -7.502376556396484
    9. '	lines' → logprob: -9.502376556396484
    10. 'hands' → logprob: -9.752376556396484

Token 715: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6418919563293457
    2. '   ' → logprob: -1.1418919563293457
    3. 'lines' (adapté à ' lines') → logprob: -2.6418919563293457
    4. ' hands' → logprob: -3.1418919563293457
    5. 'hands' → logprob: -3.6418919563293457
    6. 'for' → logprob: -4.766891956329346
    7. ' for' → logprob: -5.891891956329346
    8. 'if' → logprob: -6.641891956329346
    9. ' if' → logprob: -7.016891956329346
    10. 'args' → logprob: -9.141891479492188

Token 716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519356608390808
    2. '=' → logprob: -1.5019357204437256
    3. '_' → logprob: -12.751935958862305
    4. ' =
' → logprob: -13.876935958862305
    5. '   ' → logprob: -14.501935958862305
    6. '	' → logprob: -15.001935958862305
    7. '＝' → logprob: -15.001935958862305
    8. ' ' → logprob: -15.251935958862305
    9. ' ' → logprob: -15.376935958862305
    10. 'for' → logprob: -15.501935958862305

Token 717: ' []
' (ID: 8911)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759658813476562
    2. 'sys' → logprob: -0.8259658813476562
    3. '[' → logprob: -10.950965881347656
    4. ' [' → logprob: -11.825965881347656
    5. '	sys' → logprob: -14.200965881347656
    6. '(sys' → logprob: -14.575965881347656
    7. '=sys' → logprob: -15.200965881347656
    8. ' list' → logprob: -16.450965881347656
    9. '   ' → logprob: -16.575965881347656
    10. 'list' → logprob: -16.950965881347656

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08995810151100159
    2. ' for' → logprob: -2.8399581909179688
    3. 'for' → logprob: -3.5899581909179688
    4. '	for' → logprob: -12.964958190917969
    5. '   ' → logprob: -15.339958190917969
    6. '
' → logprob: -16.71495819091797
    7. ' ' → logprob: -17.21495819091797
    8. ' line' → logprob: -17.21495819091797
    9. '       ' → logprob: -17.33995819091797
    10. ' while' → logprob: -17.58995819091797

Token 719: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011479481123387814
    2. ' for' → logprob: -4.511479377746582
    3. '   ' → logprob: -7.761479377746582
    4. 'try' → logprob: -12.261479377746582
    5. 'line' → logprob: -14.886479377746582
    6. 'lines' → logprob: -15.386479377746582
    7. '	for' → logprob: -16.2614803314209
    8. ' try' → logprob: -16.3864803314209
    9. 'while' → logprob: -16.6364803314209
    10. '
' → logprob: -16.7614803314209

Token 720: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.12692873179912567
    2. 'line' → logprob: -2.1269288063049316
    3. '	line' → logprob: -14.251928329467773
    4. '(line' → logprob: -17.251928329467773
    5. '_line' → logprob: -17.876928329467773
    6. ' ligne' → logprob: -18.126928329467773
    7. 'l' → logprob: -18.126928329467773
    8. '```' → logprob: -18.751928329467773
    9. ' ' → logprob: -19.001928329467773
    10. 'lin' → logprob: -19.126928329467773

Token 721: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003811025235336274
    2. 'in' → logprob: -7.875380992889404
    3. '   ' → logprob: -14.750381469726562
    4. '	in' → logprob: -15.750381469726562
    5. ' ' → logprob: -15.875381469726562
    6. '    ' → logprob: -16.250381469726562
    7. 'import' → logprob: -17.375381469726562
    8. ' ' → logprob: -17.500381469726562
    9. '_in' → logprob: -17.875381469726562
    10. 'line' → logprob: -18.250381469726562

Token 722: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889165729284286
    2. ' sys' → logprob: -2.5788917541503906
    3. '=sys' → logprob: -13.57889175415039
    4. '	sys' → logprob: -14.57889175415039
    5. '(sys' → logprob: -15.82889175415039
    6. '_sys' → logprob: -18.32889175415039
    7. 'stdin' → logprob: -18.82889175415039
    8. 'import' → logprob: -19.82889175415039
    9. '.sys' → logprob: -20.45389175415039
    10. 'system' → logprob: -20.70389175415039

Token 723: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012523093027994037
    2. 'stdin' → logprob: -9.00012493133545
    3. '.argv' → logprob: -14.12512493133545
    4. '.' → logprob: -14.75012493133545
    5. ' stdin' → logprob: -15.12512493133545
    6. '(stdin' → logprob: -15.25012493133545
    7. '.stdout' → logprob: -16.500125885009766
    8. '.readline' → logprob: -18.125125885009766
    9. 'in' → logprob: -18.625125885009766
    10. '.std' → logprob: -19.000125885009766

Token 724: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6035478711128235
    2. ':' → logprob: -1.7285478115081787
    3. '.readline' → logprob: -1.7285478115081787
    4. '.strip' → logprob: -3.4785478115081787
    5. '.rstrip' → logprob: -3.7285478115081787
    6. '.readlines' → logprob: -3.8535478115081787
    7. ':
' → logprob: -4.478548049926758
    8. '.' → logprob: -5.353548049926758
    9. '   ' → logprob: -5.853548049926758
    10. 'in' → logprob: -6.728548049926758

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026658078422769904
    2. ' if' → logprob: -8.875267028808594
    3. ' lines' → logprob: -9.375267028808594
    4. '   ' → logprob: -11.375267028808594
    5. '<|end|>' → logprob: -12.000267028808594
    6. '        
' → logprob: -12.250267028808594
    7. '(lines' → logprob: -12.375267028808594
    8. 'if' → logprob: -13.125267028808594
    9. '	lines' → logprob: -13.125267028808594
    10. '      ' → logprob: -13.500267028808594

Token 726: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0858296155929565
    2. ' line' → logprob: -1.2108296155929565
    3. '       ' → logprob: -1.4608296155929565
    4. ' lines' → logprob: -2.085829734802246
    5. 'line' → logprob: -5.585829734802246
    6. 'if' (adapté à ' if') → logprob: -5.835829734802246
    7. ' stripped' → logprob: -6.710829734802246
    8. 'lines' → logprob: -9.460829734802246
    9. '	line' → logprob: -9.960829734802246
    10. '   ' → logprob: -9.960829734802246

Token 727: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7555595636367798
    2. 'not' → logprob: -1.2555595636367798
    3. ' not' → logprob: -1.6305595636367798
    4. ' line' → logprob: -3.0055594444274902
    5. '	line' → logprob: -13.505559921264648
    6. '=line' → logprob: -13.880559921264648
    7. ' ' → logprob: -14.130559921264648
    8. '#line' → logprob: -14.630559921264648
    9. '	not' → logprob: -15.255559921264648
    10. '(line' → logprob: -15.255559921264648

Token 728: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0485873706638813
    2. ' line' → logprob: -3.0485873222351074
    3. '	line' → logprob: -17.298587799072266
    4. '(line' → logprob: -18.423587799072266
    5. ' ' → logprob: -18.673587799072266
    6. '=line' → logprob: -19.173587799072266
    7. '#line' → logprob: -19.298587799072266
    8. 'lin' → logprob: -20.173587799072266
    9. '[line' → logprob: -20.548587799072266
    10. '
' → logprob: -20.673587799072266

Token 729: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0031974392477422953
    2. '.' → logprob: -5.75319766998291
    3. '.rstrip' → logprob: -11.25319766998291
    4. 'strip' → logprob: -12.25319766998291
    5. '.readline' → logprob: -14.62819766998291
    6. ' .' → logprob: -14.62819766998291
    7. '.trim' → logprob: -14.75319766998291
    8. '.startswith' → logprob: -15.00319766998291
    9. '.chomp' → logprob: -15.75319766998291
    10. ':' → logprob: -16.878196716308594

Token 730: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06334131211042404
    2. '():
' → logprob: -2.8133413791656494
    3. '()' → logprob: -6.81334114074707
    4. '():
' → logprob: -8.31334114074707
    5. ':' → logprob: -10.81334114074707
    6. ' ():' → logprob: -12.31334114074707
    7. '():

' → logprob: -13.06334114074707
    8. '()==' → logprob: -14.06334114074707
    9. '().' → logprob: -14.81334114074707
    10. ' ()' → logprob: -15.43834114074707

Token 731: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001628956088097766
    2. '       ' → logprob: -8.875163078308105
    3. ' break' → logprob: -11.250163078308105
    4. 'break' → logprob: -12.875163078308105
    5. ':' → logprob: -13.250163078308105
    6. '   ' → logprob: -13.375163078308105
    7. '		' → logprob: -13.750163078308105
    8. '	       ' → logprob: -14.250163078308105
    9. '               ' → logprob: -14.375163078308105
    10. ':
' → logprob: -14.625163078308105

Token 732: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.12103436887264252
    2. '           ' → logprob: -2.8710343837738037
    3. ' break' → logprob: -2.8710343837738037
    4. '       ' → logprob: -7.746034145355225
    5. '	break' → logprob: -8.371034622192383
    6. '               ' → logprob: -10.496034622192383
    7. '   ' → logprob: -10.996034622192383
    8. '_break' → logprob: -12.371034622192383
    9. '
' → logprob: -14.121034622192383
    10. '```' → logprob: -14.621034622192383

Token 733: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.727905979962088e-05
    2. ' lines' → logprob: -10.50004768371582
    3. '   ' → logprob: -11.87504768371582
    4. '
' → logprob: -12.25004768371582
    5. '<|end|>' → logprob: -12.87504768371582
    6. '        
' → logprob: -13.12504768371582
    7. '           ' → logprob: -13.37504768371582
    8. '      ' → logprob: -15.00004768371582
    9. ' line' → logprob: -15.12504768371582
    10. ',' → logprob: -16.00004768371582

Token 734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.9875325708417222e-05
    2. ' lines' → logprob: -10.875029563903809
    3. '   ' → logprob: -12.125029563903809
    4. '<|end|>' → logprob: -13.250029563903809
    5. '           ' → logprob: -13.375029563903809
    6. '
' → logprob: -14.250029563903809
    7. '        
' → logprob: -14.625029563903809
    8. ' line' → logprob: -15.375029563903809
    9. '      ' → logprob: -16.000030517578125
    10. '	' → logprob: -16.375030517578125

Token 735: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7815994024276733
    2. 'hand' → logprob: -1.6565994024276733
    3. 'lines' (adapté à ' lines') → logprob: -1.9065994024276733
    4. '       ' → logprob: -2.781599521636963
    5. 'try' → logprob: -2.906599521636963
    6. ' hand' → logprob: -3.031599521636963
    7. ' try' → logprob: -4.281599521636963
    8. 'hands' → logprob: -4.406599521636963
    9. 'line' → logprob: -4.781599521636963
    10. ' line' → logprob: -6.281599521636963

Token 736: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.038865815848112106
    2. '.' → logprob: -3.788865804672241
    3. ' =' → logprob: -4.53886604309082
    4. ' .' → logprob: -5.78886604309082
    5. '=' → logprob: -6.41386604309082
    6. '.extend' → logprob: -9.28886604309082
    7. '.app' → logprob: -12.03886604309082
    8. 'append' → logprob: -12.66386604309082
    9. '.=' → logprob: -12.91386604309082
    10. ' +=' → logprob: -13.16386604309082

Token 737: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16028159856796265
    2. '(line' → logprob: -1.9102816581726074
    3. ' line' → logprob: -9.78528118133545
    4. '(P' → logprob: -13.91028118133545
    5. '=line' → logprob: -15.78528118133545
    6. '	line' → logprob: -16.660282135009766
    7. '[line' → logprob: -17.160282135009766
    8. '#line' → logprob: -17.535282135009766
    9. '(' → logprob: -17.660282135009766
    10. ',line' → logprob: -18.160282135009766

Token 738: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01510611455887556
    2. '.strip' → logprob: -4.265106201171875
    3. '.rstrip' → logprob: -7.015106201171875
    4. ')
' → logprob: -10.515106201171875
    5. ' )' → logprob: -11.515106201171875
    6. '.' → logprob: -12.640106201171875
    7. '   ' → logprob: -13.515106201171875
    8. '))' → logprob: -14.390106201171875
    9. 'rstrip' → logprob: -14.515106201171875
    10. '[:-' → logprob: -15.390106201171875

Token 739: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005254864692687988
    2. '())' → logprob: -5.255254745483398
    3. ' )' → logprob: -11.505254745483398
    4. '))' → logprob: -12.005254745483398
    5. '()' → logprob: -12.630254745483398
    6. ')
' → logprob: -14.380254745483398
    7. '   ' → logprob: -15.255254745483398
    8. '       ' → logprob: -16.0052547454834
    9. ' ())' → logprob: -16.1302547454834
    10. '(' → logprob: -16.6302547454834

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1811600923538208
    2. ' hands' → logprob: -2.0561599731445312
    3. 'hands' → logprob: -3.3061599731445312
    4. '
' → logprob: -7.806159973144531
    5. '    
' → logprob: -8.681159973144531
    6. ' hand' → logprob: -9.431159973144531
    7. '```' → logprob: -9.556159973144531
    8. 'h' → logprob: -9.556159973144531
    9. 'hand' → logprob: -9.931159973144531
    10. '<|end|>' → logprob: -10.056159973144531

Token 741: ' hands' (ID: 8950)
  Prédit: 'hands'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hands' (adapté à ' hands') → logprob: -0.0030740872025489807
    2. ' hands' → logprob: -6.0030741691589355
    3. 'parser' → logprob: -7.7530741691589355
    4. '   ' → logprob: -8.878073692321777
    5. ' parser' → logprob: -11.003073692321777
    6. 'hand' → logprob: -12.628073692321777
    7. 'h' → logprob: -12.753073692321777
    8. 'Hands' → logprob: -13.003073692321777
    9. '    
' → logprob: -13.878073692321777
    10. '```' → logprob: -14.128073692321777

Token 742: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. '=[]' → logprob: -16.53522491455078
    4. ' =[' → logprob: -16.91022491455078
    5. '=[' → logprob: -17.03522491455078
    6. '＝' → logprob: -17.66022491455078
    7. '=[]
' → logprob: -18.28522491455078
    8. '=
' → logprob: -19.66022491455078
    9. ' =
' → logprob: -20.28522491455078
    10. ' ' → logprob: -20.41022491455078

Token 743: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1282937228679657
    2. '[P' → logprob: -2.128293752670288
    3. ' [' → logprob: -6.628293514251709
    4. '[list' → logprob: -10.878293991088867
    5. '[List' → logprob: -11.128293991088867
    6. '[p' → logprob: -11.753293991088867
    7. '[]' → logprob: -15.378293991088867
    8. 'Poker' → logprob: -15.753293991088867
    9. '[]
' → logprob: -15.753293991088867
    10. ' Poker' → logprob: -16.628293991088867

Token 744: 'Poker' (ID: 118227)
  Prédit: 'Poker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Poker' → logprob: -9.729906196298543e-06
    2. ' Poker' → logprob: -11.750009536743164
    3. 'Pok' → logprob: -13.250009536743164
    4. 'Pokemon' → logprob: -17.375009536743164
    5. 'Pizza' → logprob: -20.750009536743164
    6. '   ' → logprob: -21.125009536743164
    7. 'P' → logprob: -21.250009536743164
    8. 'Hand' → logprob: -21.500009536743164
    9. 'Pawn' → logprob: -21.625009536743164
    10. 'Chess' → logprob: -22.125009536743164

Token 745: 'Hand' (ID: 2941)
  Prédit: 'Hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hand' → logprob: -4.320199877838604e-07
    2. 'Hands' → logprob: -15.75
    3. 'Handler' → logprob: -16.125
    4. '_hand' → logprob: -16.75
    5. 'hand' → logprob: -17.75
    6. ' Hand' → logprob: -18.375
    7. ' hand' → logprob: -19.25
    8. '.Hand' → logprob: -20.125
    9. 'Handshake' → logprob: -20.125
    10. 'HAND' → logprob: -20.625

Token 746: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -5.512236498361744e-07
    2. 'parser' → logprob: -14.750000953674316
    3. '_parser' → logprob: -16.25
    4. ' Parser' → logprob: -17.125
    5. 'Parse' → logprob: -17.25
    6. 'Evaluator' → logprob: -18.125
    7. '-parser' → logprob: -18.5
    8. ' parser' → logprob: -18.625
    9. '.Parser' → logprob: -19.375
    10. 'parse' → logprob: -19.625

Token 747: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.3544423381972592e-05
    2. '.' → logprob: -11.25001335144043
    3. 'parse' → logprob: -15.50001335144043
    4. ' .' → logprob: -16.00001335144043
    5. '   ' → logprob: -17.25001335144043
    6. '.decode' → logprob: -17.37501335144043
    7. '().' → logprob: -17.50001335144043
    8. '(parse' → logprob: -18.37501335144043
    9. '=parse' → logprob: -18.62501335144043
    10. '{}.' → logprob: -19.12501335144043

Token 748: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -4.127333340875339e-06
    2. 'line' → logprob: -12.625003814697266
    3. '_' → logprob: -14.500003814697266
    4. 'Line' → logprob: -15.625003814697266
    5. '_Line' → logprob: -16.625003814697266
    6. '_LINE' → logprob: -16.750003814697266
    7. '_lines' → logprob: -17.375003814697266
    8. '_l' → logprob: -17.625003814697266
    9. ' line' → logprob: -18.000003814697266
    10. '(line' → logprob: -18.375003814697266

Token 749: '(' (ID: 7)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00014573395310435444
    2. '(l' → logprob: -9.00014591217041
    3. '(' → logprob: -10.75014591217041
    4. '(x' → logprob: -15.00014591217041
    5. '(lines' → logprob: -15.12514591217041
    6. '(li' → logprob: -16.750144958496094
    7. '(s' → logprob: -16.750144958496094
    8. ' (' → logprob: -17.000144958496094
    9. 'line' → logprob: -17.875144958496094
    10. '(Line' → logprob: -17.875144958496094

Token 750: 'ln' (ID: 2943)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0010150644229725003
    2. 'l' → logprob: -7.0010151863098145
    3. ' line' → logprob: -9.876014709472656
    4. '(line' → logprob: -10.376014709472656
    5. 'ligne' → logprob: -11.376014709472656
    6. 'ln' → logprob: -12.751014709472656
    7. 'lin' → logprob: -12.876014709472656
    8. ')' → logprob: -13.001014709472656
    9. 'li' → logprob: -14.126014709472656
    10. 'x' → logprob: -14.876014709472656

Token 751: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.598092684522271e-05
    2. '(line' → logprob: -10.500056266784668
    3. ')`' → logprob: -12.250056266784668
    4. 'e' → logprob: -12.250056266784668
    5. ' )' → logprob: -12.375056266784668
    6. 'g' → logprob: -12.500056266784668
    7. '))' → logprob: -12.750056266784668
    8. '())' → logprob: -13.250056266784668
    9. ')
' → logprob: -13.875056266784668
    10. '(' → logprob: -14.000056266784668

Token 752: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00736737996339798
    2. 'for' → logprob: -5.0073676109313965
    3. ')' → logprob: -7.3823676109313965
    4. '(line' → logprob: -11.007367134094238
    5. '(' → logprob: -11.882367134094238
    6. '   ' → logprob: -12.632367134094238
    7. ' in' → logprob: -14.007367134094238
    8. ' line' → logprob: -14.382367134094238
    9. ' )' → logprob: -14.882367134094238
    10. '	for' → logprob: -15.007367134094238

Token 753: ' ln' (ID: 68859)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.03805239871144295
    2. ' ln' → logprob: -3.2880523204803467
    3. '_ln' → logprob: -11.538052558898926
    4. 'Ln' → logprob: -14.413052558898926
    5. 'line' → logprob: -15.288052558898926
    6. ' line' → logprob: -15.663052558898926
    7. 'l' → logprob: -16.28805160522461
    8. ' ' → logprob: -16.66305160522461
    9. ' ' → logprob: -17.78805160522461
    10. '-ln' → logprob: -18.03805160522461

Token 754: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15084736049175262
    2. 'in' → logprob: -2.0258474349975586
    3. 'lines' → logprob: -5.275847434997559
    4. ' lines' → logprob: -6.025847434997559
    5. '(lines' → logprob: -7.900847434997559
    6. 'ln' → logprob: -8.650847434997559
    7. ' ln' → logprob: -10.400847434997559
    8. ' lin' → logprob: -11.525847434997559
    9. 'lin' → logprob: -12.025847434997559
    10. '	lines' → logprob: -12.025847434997559

Token 755: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.008616108447313309
    2. ' lines' → logprob: -4.758615970611572
    3. '(lines' → logprob: -13.50861644744873
    4. '	lines' → logprob: -15.88361644744873
    5. 'line' → logprob: -17.383615493774414
    6. '_lines' → logprob: -19.008615493774414
    7. '   ' → logprob: -19.133615493774414
    8. '.lines' → logprob: -19.133615493774414
    9. 'lin' → logprob: -19.758615493774414
    10. ' lignes' → logprob: -19.883615493774414

Token 756: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017414625035598874
    2. '   ' → logprob: -6.376741409301758
    3. ' ]' → logprob: -10.626741409301758
    4. ')' → logprob: -11.751741409301758
    5. ')]' → logprob: -12.501741409301758
    6. ']
' → logprob: -12.626741409301758
    7. '()]' → logprob: -17.001741409301758
    8. '       ' → logprob: -17.001741409301758
    9. ']

' → logprob: -17.376741409301758
    10. '`]' → logprob: -18.001741409301758

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12777194380760193
    2. 'e' → logprob: -2.2527718544006348
    3. ' evaluator' → logprob: -4.252771854400635
    4. 'evalu' → logprob: -8.252772331237793
    5. ' e' → logprob: -9.377772331237793
    6. ' results' → logprob: -9.377772331237793
    7. '	e' → logprob: -10.252772331237793
    8. 'results' → logprob: -10.377772331237793
    9. ' ' → logprob: -10.877772331237793
    10. 'pe' → logprob: -11.002772331237793

Token 758: ' evaluator' (ID: 153499)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0006598960608243942
    2. 'eval' → logprob: -8.000659942626953
    3. ' evaluator' → logprob: -8.375659942626953
    4. 'evalu' → logprob: -9.750659942626953
    5. 'pe' → logprob: -10.750659942626953
    6. 'p' → logprob: -11.625659942626953
    7. 'results' → logprob: -12.625659942626953
    8. 'eva' → logprob: -14.375659942626953
    9. 'ev' → logprob: -14.625659942626953
    10. ' e' → logprob: -15.000659942626953

Token 759: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00760698551312089
    2. '=' → logprob: -4.8826069831848145
    3. '.' → logprob: -14.507607460021973
    4. '(' → logprob: -15.882607460021973
    5. ' ' → logprob: -16.632606506347656
    6. ' ' → logprob: -16.882606506347656
    7. '	' → logprob: -16.882606506347656
    8. ' =
' → logprob: -17.007606506347656
    9. '.evaluate' → logprob: -17.507606506347656
    10. ')' → logprob: -18.382606506347656

Token 760: ' Poker' (ID: 30320)
  Prédit: 'Poker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Poker' → logprob: -0.12693293392658234
    2. ' Poker' → logprob: -2.1269328594207764
    3. 'Pok' → logprob: -12.251933097839355
    4. ' Pok' → logprob: -17.25193214416504
    5. 'Pokemon' → logprob: -17.75193214416504
    6. ' poker' → logprob: -18.12693214416504
    7. '_P' → logprob: -19.62693214416504
    8. 'P' → logprob: -19.62693214416504
    9. '	P' → logprob: -20.00193214416504
    10. ' Pokemon' → logprob: -20.62693214416504

Token 761: 'Evaluator' (ID: 87172)
  Prédit: 'Evaluator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -2.339278580620885e-06
    2. 'valuator' → logprob: -13.000001907348633
    3. 'Hand' → logprob: -17.750001907348633
    4. ' evaluator' → logprob: -18.000001907348633
    5. 'e' → logprob: -19.125001907348633
    6. 'Evalu' → logprob: -19.250001907348633
    7. 'Eval' → logprob: -19.875001907348633
    8. 'Evaluate' → logprob: -20.250001907348633
    9. 'Enumerator' → logprob: -20.625001907348633
    10. 'Eva' → logprob: -20.750001907348633

Token 762: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -11.500012397766113
    3. 'hands' → logprob: -13.875012397766113
    4. '(hand' → logprob: -14.000012397766113
    5. '(H' → logprob: -14.875012397766113
    6. '(
' → logprob: -16.25001335144043
    7. '(e' → logprob: -16.50001335144043
    8. ' (' → logprob: -17.37501335144043
    9. '(lines' → logprob: -17.50001335144043
    10. '(p' → logprob: -17.50001335144043

Token 763: 'ands' (ID: 3460)
  Prédit: 'ands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ands' → logprob: -3.9888433093437925e-05
    2. 'hands' → logprob: -10.875040054321289
    3. 'and' → logprob: -11.375040054321289
    4. '(' → logprob: -13.250040054321289
    5. '.' → logprob: -13.500040054321289
    6. '   ' → logprob: -13.750040054321289
    7. '[' → logprob: -14.125040054321289
    8. '=' → logprob: -14.125040054321289
    9. '.h' → logprob: -14.375040054321289
    10. ')' → logprob: -14.750040054321289

Token 764: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001234399271197617
    2. ')
' → logprob: -7.126234531402588
    3. ')e' → logprob: -8.50123405456543
    4. '.evaluate' → logprob: -9.12623405456543
    5. '   ' → logprob: -9.62623405456543
    6. ').' → logprob: -10.62623405456543
    7. 'e' → logprob: -11.25123405456543
    8. '(e' → logprob: -12.50123405456543
    9. 'evaluate' → logprob: -12.87623405456543
    10. ' )' → logprob: -13.37623405456543

Token 765: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.16086424887180328
    2. ' results' → logprob: -2.1608643531799316
    3. '   ' → logprob: -3.4108643531799316
    4. 'result' → logprob: -8.035863876342773
    5. ' result' → logprob: -11.410863876342773
    6. '	results' → logprob: -11.910863876342773
    7. 'outputs' → logprob: -12.910863876342773
    8. 'for' → logprob: -13.035863876342773
    9. ' ' → logprob: -13.035863876342773
    10. 'print' → logprob: -13.410863876342773

Token 766: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0007297091069631279
    2. ' results' → logprob: -7.250729560852051
    3. 'result' → logprob: -11.00072956085205
    4. 'for' → logprob: -13.87572956085205
    5. '   ' → logprob: -14.87572956085205
    6. 'res' → logprob: -14.87572956085205
    7. 'outputs' → logprob: -14.87572956085205
    8. 'print' → logprob: -15.00072956085205
    9. 'scores' → logprob: -15.25072956085205
    10. 'out' → logprob: -15.62572956085205

Token 767: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519323229789734
    2. '=' → logprob: -1.5019323825836182
    3. '.' → logprob: -12.876932144165039
    4. '.extend' → logprob: -15.626932144165039
    5. '.=' → logprob: -15.876932144165039
    6. ' =
' → logprob: -16.00193214416504
    7. ' .=' → logprob: -16.87693214416504
    8. ' ' → logprob: -17.12693214416504
    9. ' +=' → logprob: -17.37693214416504
    10. ' ' → logprob: -17.37693214416504

Token 768: ' evaluator' (ID: 153499)
  Prédit: ' evaluator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluator' → logprob: -0.25222110748291016
    2. 'e' → logprob: -1.5022211074829102
    3. 'evalu' → logprob: -8.25222110748291
    4. 'Evaluator' → logprob: -10.75222110748291
    5. '[e' → logprob: -12.12722110748291
    6. '_e' → logprob: -13.87722110748291
    7. 'evaluate' → logprob: -14.12722110748291
    8. ' evalu' → logprob: -14.25222110748291
    9. ' e' → logprob: -14.75222110748291
    10. '	e' → logprob: -14.87722110748291

Token 769: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0007108822464942932
    2. '.' → logprob: -7.250710964202881
    3. 'evaluate' → logprob: -14.750710487365723
    4. ' .' → logprob: -14.875710487365723
    5. '.eval' → logprob: -16.25071144104004
    6. '.execute' → logprob: -16.50071144104004
    7. '.validate' → logprob: -18.25071144104004
    8. '.e' → logprob: -18.37571144104004
    9. '.perform' → logprob: -18.62571144104004
    10. '.calculate' → logprob: -18.62571144104004

Token 770: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005679549649357796
    2. '(results' → logprob: -5.630679607391357
    3. '(' → logprob: -6.255679607391357
    4. '()
' → logprob: -9.0056791305542
    5. '(
' → logprob: -11.5056791305542
    6. ' ()' → logprob: -12.3806791305542
    7. 'results' → logprob: -12.6306791305542
    8. 'for' → logprob: -12.7556791305542
    9. '(lines' → logprob: -12.7556791305542
    10. '(print' → logprob: -13.0056791305542

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019461298361420631
    2. 'for' → logprob: -6.251945972442627
    3. ' for' → logprob: -11.001946449279785
    4. '	for' → logprob: -14.626946449279785
    5. '
' → logprob: -14.876946449279785
    6. '    
' → logprob: -16.50194549560547
    7. '   ' → logprob: -18.87694549560547
    8. 'import' → logprob: -19.62694549560547
    9. '```' → logprob: -19.87694549560547
    10. '       ' → logprob: -20.37694549560547

Token 772: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007859219331294298
    2. '   ' → logprob: -7.250785827636719
    3. ' for' → logprob: -9.500785827636719
    4. '
' → logprob: -14.125785827636719
    5. '	for' → logprob: -15.125785827636719
    6. '```' → logprob: -15.875785827636719
    7. 'print' → logprob: -16.50078582763672
    8. 'import' → logprob: -17.87578582763672
    9. '    
' → logprob: -19.75078582763672
    10. '
' → logprob: -21.25078582763672

Token 773: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4430834949016571
    2. 'res' → logprob: -1.4430835247039795
    3. ' result' → logprob: -2.6930835247039795
    4. ' res' → logprob: -2.9430835247039795
    5. 'r' → logprob: -6.6930832862854
    6. ' r' → logprob: -8.943083763122559
    7. 'rés' → logprob: -13.818083763122559
    8. '   ' → logprob: -14.818083763122559
    9. '	result' → logprob: -15.318083763122559
    10. 'rank' → logprob: -15.318083763122559

Token 774: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00045486391172744334
    2. 'ult' → logprob: -8.000454902648926
    3. ' ' → logprob: -9.625454902648926
    4. 't' → logprob: -11.500454902648926
    5. 'in' → logprob: -11.500454902648926
    6. 'ault' → logprob: -12.000454902648926
    7. '  ' → logprob: -12.250454902648926
    8. 'ut' → logprob: -12.625454902648926
    9. 'es' → logprob: -12.875454902648926
    10. 'u' → logprob: -13.000454902648926

Token 775: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0007099286303855479
    2. ' results' → logprob: -7.2507100105285645
    3. '(results' → logprob: -19.500709533691406
    4. '	results' → logprob: -20.625709533691406
    5. 'result' → logprob: -22.000709533691406
    6. 'Results' → logprob: -22.125709533691406
    7. '_results' → logprob: -23.000709533691406
    8. '.results' → logprob: -23.500709533691406
    9. '
' → logprob: -24.500709533691406
    10. 'res' → logprob: -24.875709533691406

Token 776: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04658135399222374
    2. '       ' → logprob: -3.546581268310547
    3. ':
' → logprob: -5.171581268310547
    4. '   ' → logprob: -5.296581268310547
    5. 'print' → logprob: -6.171581268310547
    6. '<|end|>' → logprob: -6.671581268310547
    7. '.' → logprob: -6.796581268310547
    8. ' print' → logprob: -7.546581268310547
    9. '.print' → logprob: -8.421581268310547
    10. '.println' → logprob: -8.671581268310547

Token 777: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47491326928138733
    2. '       ' → logprob: -0.9749132394790649
    3. ' print' → logprob: -7.474913120269775
    4. '   ' → logprob: -8.224913597106934
    5. '	print' → logprob: -14.349913597106934
    6. '```' → logprob: -15.974913597106934
    7. '           ' → logprob: -16.224912643432617
    8. '      ' → logprob: -17.974912643432617
    9. '     ' → logprob: -17.974912643432617
    10. ' ' → logprob: -18.099912643432617

Token 778: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.632542913896032e-05
    2. ' print' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.000046730041504
    4. '       ' → logprob: -18.000045776367188
    5. '	print' → logprob: -20.250045776367188
    6. '```' → logprob: -22.250045776367188
    7. 'pr' → logprob: -24.375045776367188
    8. '
' → logprob: -24.375045776367188
    9. 'println' → logprob: -24.875045776367188
    10. '.print' → logprob: -25.250045776367188

Token 779: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0003943304473068565
    2. '(' → logprob: -8.000393867492676
    3. '(f' → logprob: -9.750393867492676
    4. '()' → logprob: -15.125393867492676
    5. 'res' → logprob: -15.625393867492676
    6. '("("' → logprob: -17.000394821166992
    7. 'f' → logprob: -17.250394821166992
    8. ' (' → logprob: -17.250394821166992
    9. '(re' → logprob: -18.625394821166992
    10. '(
' → logprob: -18.625394821166992

Token 780: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '()' → logprob: -12.875004768371582
    3. ')
' → logprob: -13.875004768371582
    4. '())' → logprob: -14.125004768371582
    5. ' )' → logprob: -14.375004768371582
    6. '   ' → logprob: -16.7500057220459
    7. '")' → logprob: -18.0000057220459
    8. ')`' → logprob: -18.1250057220459
    9. '<|end|>' → logprob: -18.2500057220459
    10. '```' → logprob: -18.7500057220459

Token 781: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.1080467781284824e-05
    2. ' if' → logprob: -10.625041007995605
    3. '```' → logprob: -12.250041007995605
    4. '<|end|>' → logprob: -12.250041007995605
    5. '#' → logprob: -12.625041007995605
    6. '
' → logprob: -12.625041007995605
    7. '__' → logprob: -16.500041961669922
    8. '@if' → logprob: -16.500041961669922
    9. '\n' → logprob: -16.500041961669922
    10. '\' → logprob: -16.750041961669922

Token 782: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07082929462194443
    2. '__' → logprob: -2.695829391479492
    3. '_' → logprob: -7.570829391479492
    4. '_name' → logprob: -8.695829391479492
    5. ' ' → logprob: -9.195829391479492
    6. '___' → logprob: -10.070829391479492
    7. 'name' → logprob: -10.070829391479492
    8. ' ' → logprob: -11.445829391479492
    9. ' _' → logprob: -12.695829391479492
    10. ' ' → logprob: -12.820829391479492

Token 783: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005104018375277519
    2. '==' → logprob: -5.880104064941406
    3. ' ==' → logprob: -6.255104064941406
    4. ' __' → logprob: -8.130104064941406
    5. '__.__' → logprob: -9.880104064941406
    6. '=="' → logprob: -11.005104064941406
    7. '__.' → logprob: -12.880104064941406
    8. '__[' → logprob: -13.255104064941406
    9. '__["' → logprob: -13.380104064941406
    10. '.__' → logprob: -13.755104064941406

Token 784: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.5577775128767826e-06
    2. '==' → logprob: -12.250005722045898
    3. '__.__' → logprob: -14.375005722045898
    4. '__.' → logprob: -16.6250057220459
    5. '=="' → logprob: -17.1250057220459
    6. '___' → logprob: -17.5000057220459
    7. ' ==' → logprob: -18.0000057220459
    8. '__
' → logprob: -18.0000057220459
    9. '____' → logprob: -18.1250057220459
    10. '"' → logprob: -18.2500057220459

Token 785: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.026789961382746696
    2. '==' → logprob: -3.651789903640747
    3. '=="' → logprob: -8.026789665222168
    4. ' ==' → logprob: -8.776789665222168
    5. '__.__' → logprob: -13.526789665222168
    6. '==
' → logprob: -13.901789665222168
    7. '_' → logprob: -13.901789665222168
    8. '=='' → logprob: -13.901789665222168
    9. '=' → logprob: -14.026789665222168
    10. '__["' → logprob: -14.526789665222168

Token 786: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00026622318546287715
    2. ''' → logprob: -8.250266075134277
    3. ' "__' → logprob: -12.375266075134277
    4. '__' → logprob: -14.375266075134277
    5. '"name' → logprob: -17.375267028808594
    6. '"user' → logprob: -18.375267028808594
    7. '("__' → logprob: -18.500267028808594
    8. ''"' → logprob: -18.875267028808594
    9. '"_' → logprob: -18.875267028808594
    10. '"class' → logprob: -18.875267028808594

Token 787: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0024802929256111383
    2. '__' → logprob: -6.002480506896973
    3. 'name' → logprob: -12.877480506896973
    4. '_main' → logprob: -13.877480506896973
    5. ' main' → logprob: -14.877480506896973
    6. '"' → logprob: -14.877480506896973
    7. '__":
' → logprob: -15.377480506896973
    8. 'built' → logprob: -16.252479553222656
    9. 'ma' → logprob: -17.377479553222656
    10. '___' → logprob: -17.377479553222656

Token 788: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12712569534778595
    2. '__' → logprob: -2.1271257400512695
    3. '__':
' → logprob: -8.62712574005127
    4. '__:' → logprob: -11.25212574005127
    5. '__
' → logprob: -13.25212574005127
    6. '__.' → logprob: -13.50212574005127
    7. '__["' → logprob: -14.12712574005127
    8. '__.__' → logprob: -14.50212574005127
    9. '__
' → logprob: -14.50212574005127
    10. '__",' → logprob: -15.37712574005127

Token 789: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.054460156708955765
    2. '__' → logprob: -3.804460048675537
    3. ' main' → logprob: -4.179460048675537
    4. '   ' → logprob: -4.429460048675537
    5. '	main' → logprob: -6.179460048675537
    6. '_main' → logprob: -7.179460048675537
    7. '    
' → logprob: -8.554460525512695
    8. '(main' → logprob: -9.429460525512695
    9. '__":
' → logprob: -9.429460525512695
    10. '"' → logprob: -9.804460525512695

Token 790: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.615255839889869e-05
    2. ' main' → logprob: -9.250096321105957
    3. '	main' → logprob: -17.00009536743164
    4. '   ' → logprob: -20.00009536743164
    5. '(main' → logprob: -22.87509536743164
    6. '_main' → logprob: -22.87509536743164
    7. '.main' → logprob: -23.12509536743164
    8. 'import' → logprob: -23.87509536743164
    9. '
' → logprob: -25.87509536743164
    10. 'Main' → logprob: -25.87509536743164

Token 791: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 789
Tokens correctement prédits (1ère position, stricte): 355
Tokens correctement prédits (1ère position, avec adaptation): 389
Tokens correctement prédits (top 10): 656
Précision stricte (1ère position): 44.99%
Précision adaptée (1ère position): 49.30%
Précision (top 10): 83.14%
================================================================================
